================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
read = sys.stdin.buffer.read
readline = sys.stdin.buffer.readline
readlines = sys.stdin.buffer.readlines

N = int(readline())
S = [0] + [int(x) - ord('0') for x in readline().rstrip()]
P = [int(x) for x in read().split()]

P += P

dp = [P]

for i in range(N+1):
    P = dp[i]
    newP = []
    dx = 1<<i
    for a,b in zip(P, P[dx:]):
        if a > b:
            a,b = b,a
        if S[b-a]:
            newP.append(b)
        else:
            newP.append(a)
    dp.append(newP)

answers = (x for x in P[:-1])
print('\n'.join(map(str, answers)))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'read' (ID: 1293)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009628107771277428
    2. '_' → logprob: -6.0096282958984375
    3. 'line' → logprob: -6.1346282958984375
    4. ' (' → logprob: -6.3846282958984375
    5. '.' → logprob: -6.6346282958984375
    6. ')' → logprob: -8.009628295898438
    7. '_line' → logprob: -8.134628295898438
    8. 'space' → logprob: -8.509628295898438
    9. 'er' → logprob: -8.634628295898438
    10. '(
' → logprob: -8.759628295898438

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.28154993057250977
    2. 'sys' → logprob: -1.4065499305725098
    3. ' lambda' → logprob: -9.281549453735352
    4. '(sys' → logprob: -9.281549453735352
    5. ' open' → logprob: -9.906549453735352
    6. '=sys' → logprob: -9.906549453735352
    7. 'open' → logprob: -10.281549453735352
    8. 'lambda' → logprob: -10.406549453735352
    9. '	sys' → logprob: -10.906549453735352
    10. ' ' → logprob: -11.156549453735352

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.017033705487847328
    2. '.stdin' → logprob: -4.392033576965332
    3. '.readline' → logprob: -6.142033576965332
    4. '.stdout' → logprob: -7.017033576965332
    5. '.read' → logprob: -7.142033576965332
    6. ' .' → logprob: -8.392033576965332
    7. '.argv' → logprob: -8.642033576965332
    8. '.path' → logprob: -9.392033576965332
    9. '.import' → logprob: -9.642033576965332
    10. '.exit' → logprob: -10.392033576965332

Token 7: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.1313103288412094
    2. '.read' → logprob: -2.256310224533081
    3. '.' → logprob: -4.00631046295166
    4. '.readlines' → logprob: -9.38131046295166
    5. 'read' → logprob: -10.75631046295166
    6. '.Read' → logprob: -12.13131046295166
    7. '.buffer' → logprob: -13.38131046295166
    8. ' .' → logprob: -13.63131046295166
    9. '.READ' → logprob: -14.25631046295166
    10. '.write' → logprob: -14.38131046295166

Token 8: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.3877542018890381
    2. '.read' → logprob: -1.137754201889038
    3. '.' → logprob: -7.137754440307617
    4. 'read' → logprob: -9.637754440307617
    5. '.readlines' → logprob: -11.137754440307617
    6. '.write' → logprob: -13.012754440307617
    7. '.re' → logprob: -13.262754440307617
    8. ' readline' → logprob: -13.512754440307617
    9. ' .' → logprob: -14.012754440307617
    10. '```' → logprob: -14.512754440307617

Token 9: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07182108610868454
    2. '()' → logprob: -2.6968209743499756
    3. '(
' → logprob: -6.321821212768555
    4. '()
' → logprob: -10.571821212768555
    5. '(

' → logprob: -10.571821212768555
    6. ' (' → logprob: -12.071821212768555
    7. '(\' → logprob: -12.571821212768555
    8. '().' → logprob: -12.821821212768555
    9. '```' → logprob: -12.821821212768555
    10. '(
' → logprob: -12.946821212768555

Token 10: 'read' (ID: 1293)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11648832261562347
    2. '(' → logprob: -2.241488218307495
    3. '(
' → logprob: -6.241488456726074
    4. '()
' → logprob: -7.616488456726074
    5. '_' → logprob: -8.116488456726074
    6. '\n' → logprob: -8.741488456726074
    7. ',' → logprob: -9.116488456726074
    8. ' ()' → logprob: -9.366488456726074
    9. '()

' → logprob: -9.491488456726074
    10. ')' → logprob: -9.616488456726074

Token 11: 'line' (ID: 1137)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2522525191307068
    2. '()' → logprob: -1.5022525787353516
    3. '(
' → logprob: -8.627252578735352
    4. '(

' → logprob: -10.252252578735352
    5. ' ()' → logprob: -10.752252578735352
    6. ' (' → logprob: -10.877252578735352
    7. ')' → logprob: -10.877252578735352
    8. '```' → logprob: -11.502252578735352
    9. '()
' → logprob: -12.002252578735352
    10. ' ' → logprob: -12.752252578735352

Token 12: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09425404667854309
    2. '(' → logprob: -2.8442540168762207
    3. '=' → logprob: -3.5942540168762207
    4. ' =' → logprob: -5.594254016876221
    5. ')' → logprob: -8.594254493713379
    6. ' ()' → logprob: -8.844254493713379
    7. '(
' → logprob: -9.844254493713379
    8. ' (' → logprob: -10.594254493713379
    9. 's' → logprob: -10.844254493713379
    10. ' ' → logprob: -11.094254493713379

Token 13: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.3132680654525757
    2. 'sys' → logprob: -1.3132680654525757
    3. '=sys' → logprob: -12.438267707824707
    4. '	sys' → logprob: -13.563267707824707
    5. '(sys' → logprob: -13.938267707824707
    6. ' ' → logprob: -16.563268661499023
    7. '_sys' → logprob: -16.563268661499023
    8. '/sys' → logprob: -16.813268661499023
    9. '.sys' → logprob: -17.313268661499023
    10. 's' → logprob: -17.938268661499023

Token 14: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.6586145758628845
    2. '.readline' → logprob: -0.9086145758628845
    3. '.' → logprob: -2.6586146354675293
    4. '.stdout' → logprob: -4.783614635467529
    5. ' .' → logprob: -8.033614158630371
    6. '.argv' → logprob: -8.408614158630371
    7. '.stderr' → logprob: -9.533614158630371
    8. '.read' → logprob: -9.533614158630371
    9. '.readlines' → logprob: -10.158614158630371
    10. '.input' → logprob: -10.658614158630371

Token 15: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.01613900251686573
    2. '.buffer' → logprob: -4.141139030456543
    3. '.' → logprob: -9.391139030456543
    4. '.read' → logprob: -11.766139030456543
    5. 'buffer' → logprob: -12.266139030456543
    6. '.readlines' → logprob: -12.891139030456543
    7. '.stdin' → logprob: -13.016139030456543
    8. '.write' → logprob: -14.016139030456543
    9. ' .' → logprob: -14.391139030456543
    10. '.Buffer' → logprob: -15.141139030456543

Token 16: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00016599490481894463
    2. 'read' → logprob: -9.125165939331055
    3. ' readline' → logprob: -10.000165939331055
    4. '.read' → logprob: -11.500165939331055
    5. '.readlines' → logprob: -14.125165939331055
    6. 'line' → logprob: -14.750165939331055
    7. '_read' → logprob: -16.000165939331055
    8. '.' → logprob: -16.375165939331055
    9. 'getline' → logprob: -16.750165939331055
    10. '```' → logprob: -18.625165939331055

Token 17: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2094312459230423
    2. '()' → logprob: -2.2094311714172363
    3. '
' → logprob: -3.3344311714172363
    4. 'data' → logprob: -4.709431171417236
    5. '(
' → logprob: -4.834431171417236
    6. '\n' → logprob: -4.834431171417236
    7. 'def' → logprob: -5.209431171417236
    8. '#' → logprob: -6.459431171417236
    9. 'import' → logprob: -6.834431171417236
    10. '_' → logprob: -6.959431171417236

Token 18: 'read' (ID: 1293)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10792500525712967
    2. '\n' → logprob: -3.7329249382019043
    3. '()' → logprob: -3.8579249382019043
    4. '(
' → logprob: -4.357924938201904
    5. '
' → logprob: -4.857924938201904
    6. 'data' → logprob: -5.107924938201904
    7. '_' → logprob: -5.232924938201904
    8. '\' → logprob: -5.607924938201904
    9. 'import' → logprob: -5.607924938201904
    10. 'def' → logprob: -5.607924938201904

Token 19: 'lines' (ID: 10105)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012976928614079952
    2. '()' → logprob: -4.387977123260498
    3. '(
' → logprob: -8.26297664642334
    4. '(

' → logprob: -9.88797664642334
    5. ')' → logprob: -10.26297664642334
    6. ' (' → logprob: -10.88797664642334
    7. '(\' → logprob: -10.88797664642334
    8. '40' → logprob: -11.13797664642334
    9. '```' → logprob: -11.26297664642334
    10. '.' → logprob: -11.26297664642334

Token 20: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18568173050880432
    2. ' =' → logprob: -2.1856818199157715
    3. '()' → logprob: -3.0606818199157715
    4. '(' → logprob: -5.0606818199157715
    5. ')' → logprob: -6.3106818199157715
    6. '.' → logprob: -6.9356818199157715
    7. '```' → logprob: -8.310681343078613
    8. ' ' → logprob: -9.060681343078613
    9. '[:]' → logprob: -9.310681343078613
    10. '\' → logprob: -9.560681343078613

Token 21: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.17976056039333344
    2. 'sys' → logprob: -1.8047605752944946
    3. '=sys' → logprob: -12.054760932922363
    4. '(sys' → logprob: -12.554760932922363
    5. '	sys' → logprob: -12.929760932922363
    6. 'read' → logprob: -13.429760932922363
    7. 's' → logprob: -13.554760932922363
    8. '.sys' → logprob: -15.054760932922363
    9. '/sys' → logprob: -15.054760932922363
    10. ' read' → logprob: -15.679760932922363

Token 22: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.012364253401756287
    2. '.' → logprob: -5.137364387512207
    3. '.stdout' → logprob: -5.387364387512207
    4. '.readline' → logprob: -7.137364387512207
    5. '.stderr' → logprob: -8.387364387512207
    6. '.argv' → logprob: -8.387364387512207
    7. ' .' → logprob: -8.512364387512207
    8. '.readlines' → logprob: -8.887364387512207
    9. 'stdin' → logprob: -9.637364387512207
    10. '​.' → logprob: -9.762364387512207

Token 23: '.buffer' (ID: 48964)
  Prédit: '.buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.buffer' → logprob: -0.1262388676404953
    2. '.readline' → logprob: -2.3762388229370117
    3. '.readlines' → logprob: -4.251238822937012
    4. '.' → logprob: -4.751238822937012
    5. 'buffer' → logprob: -6.376238822937012
    6. '.read' → logprob: -7.501238822937012
    7. ' .' → logprob: -8.626238822937012
    8. '.stdin' → logprob: -9.376238822937012
    9. '.Buffer' → logprob: -9.751238822937012
    10. '.lines' → logprob: -10.251238822937012

Token 24: '.readlines' (ID: 92237)
  Prédit: '.readlines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.5803262591362
    2. '.readline' → logprob: -1.0803263187408447
    3. 'read' → logprob: -2.4553263187408447
    4. '.read' → logprob: -4.205326080322266
    5. ' readline' → logprob: -10.955326080322266
    6. 'lines' → logprob: -11.455326080322266
    7. '.' → logprob: -11.455326080322266
    8. '```' → logprob: -12.830326080322266
    9. '_read' → logprob: -13.330326080322266
    10. 're' → logprob: -13.580326080322266

Token 25: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3822898864746094
    2. 'def' → logprob: -2.0072898864746094
    3. '#' → logprob: -2.5072898864746094
    4. '\n' → logprob: -3.2572898864746094
    5. '' → logprob: -4.132289886474609
    6. '```' → logprob: -4.382289886474609
    7. '

' → logprob: -4.507289886474609
    8. 'import' → logprob: -4.882289886474609
    9. '\' → logprob: -5.257289886474609
    10. '<|end|>' → logprob: -5.632289886474609

Token 26: 'N' (ID: 45)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0441783666610718
    2. 'def' → logprob: -1.2941783666610718
    3. 'data' → logprob: -2.0441784858703613
    4. '\' → logprob: -2.6691784858703613
    5. '_' → logprob: -3.4191784858703613
    6. '#' → logprob: -3.9191784858703613
    7. 'd' → logprob: -3.9191784858703613
    8. 'import' → logprob: -4.294178485870361
    9. '\n' → logprob: -4.294178485870361
    10. '=' → logprob: -4.419178485870361

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1905127316713333
    2. '=' → logprob: -1.815512776374817
    3. '.' → logprob: -5.065512657165527
    4. ' ' → logprob: -5.690512657165527
    5. ',' → logprob: -7.440512657165527
    6. ')' → logprob: -8.940512657165527
    7. '_' → logprob: -9.565512657165527
    8. '[' → logprob: -9.940512657165527
    9. 's' → logprob: -10.565512657165527
    10. '  ' → logprob: -10.690512657165527

Token 28: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.03966793417930603
    2. 'int' → logprob: -3.414667844772339
    3. ' ' → logprob: -5.289668083190918
    4. '10' → logprob: -7.664668083190918
    5. ' read' → logprob: -8.789668083190918
    6. '32' → logprob: -9.289668083190918
    7. '20' → logprob: -10.039668083190918
    8. '0' → logprob: -10.414668083190918
    9. '5' → logprob: -10.414668083190918
    10. '100' → logprob: -10.664668083190918

Token 29: '(read' (ID: 45738)
  Prédit: '(read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.4741000831127167
    2. '(' → logprob: -0.9741001129150391
    3. 'read' → logprob: -12.224100112915039
    4. '(sys' → logprob: -12.474100112915039
    5. '('' → logprob: -12.724100112915039
    6. '(Read' → logprob: -13.099100112915039
    7. ' (' → logprob: -13.349100112915039
    8. '(
' → logprob: -13.849100112915039
    9. '(reader' → logprob: -14.349100112915039
    10. '(open' → logprob: -14.349100112915039

Token 30: 'line' (ID: 1137)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06431776285171509
    2. '()' → logprob: -2.8143177032470703
    3. '(' → logprob: -6.18931770324707
    4. '().' → logprob: -8.93931770324707
    5. ')' → logprob: -9.81431770324707
    6. ' ())' → logprob: -9.93931770324707
    7. '()[' → logprob: -10.31431770324707
    8. '();)' → logprob: -11.93931770324707
    9. ' ()' → logprob: -12.43931770324707
    10. '()]' → logprob: -12.56431770324707

Token 31: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.049091991037130356
    2. '()' → logprob: -3.0490920543670654
    3. '().' → logprob: -8.174092292785645
    4. '(' → logprob: -8.924092292785645
    5. ' ())' → logprob: -9.924092292785645
    6. '())
' → logprob: -11.424092292785645
    7. '(()' → logprob: -12.049092292785645
    8. '()[' → logprob: -12.549092292785645
    9. '();)' → logprob: -12.549092292785645
    10. ' ()' → logprob: -12.924092292785645

Token 32: 'S' (ID: 50)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.25460055470466614
    2. ' ' → logprob: -2.0046005249023438
    3. 'a' → logprob: -3.6296005249023438
    4. ' data' → logprob: -3.7546005249023438
    5. 'd' → logprob: -4.754600524902344
    6. 'for' → logprob: -5.129600524902344
    7. ' 
' → logprob: -5.254600524902344
    8. ')' → logprob: -5.879600524902344
    9. 's' → logprob: -6.379600524902344
    10. ' for' → logprob: -6.629600524902344

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10108400136232376
    2. '=' → logprob: -2.351083993911743
    3. '_' → logprob: -7.851084232330322
    4. ' ' → logprob: -7.976084232330322
    5. '.' → logprob: -9.601083755493164
    6. '[' → logprob: -9.976083755493164
    7. 's' → logprob: -11.351083755493164
    8. '[:]' → logprob: -12.851083755493164
    9. '[]' → logprob: -13.101083755493164
    10. ')' → logprob: -13.101083755493164

Token 34: ' [' (ID: 723)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.04116496816277504
    2. ' readline' → logprob: -3.4161648750305176
    3. ' read' → logprob: -4.916164875030518
    4. '.readline' → logprob: -9.666165351867676
    5. 'list' → logprob: -10.041165351867676
    6. '(read' → logprob: -11.666165351867676
    7. 'int' → logprob: -11.916165351867676
    8. 'readonly' → logprob: -12.166165351867676
    9. 'byte' → logprob: -12.291165351867676
    10. '	read' → logprob: -12.291165351867676

Token 35: '0' (ID: 15)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.053793422877788544
    2. 'int' → logprob: -3.053793430328369
    3. 'list' → logprob: -5.803793430328369
    4. ' readline' → logprob: -7.178793430328369
    5. 'tuple' → logprob: -7.678793430328369
    6. 'ord' → logprob: -8.553792953491211
    7. 'sys' → logprob: -8.553792953491211
    8. 'str' → logprob: -8.928792953491211
    9. 'input' → logprob: -9.428792953491211
    10. ']' → logprob: -9.428792953491211

Token 36: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.047784097492694855
    2. '()]' → logprob: -3.4227840900421143
    3. ']*' → logprob: -4.547784328460693
    4. ']*(' → logprob: -7.047784328460693
    5. '()' → logprob: -7.172784328460693
    6. ' for' → logprob: -7.422784328460693
    7. 'for' → logprob: -7.672784328460693
    8. ' ]' → logprob: -7.672784328460693
    9. '(' → logprob: -9.297783851623535
    10. ')]' → logprob: -9.672783851623535

Token 37: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3791816532611847
    2. ',' → logprob: -2.1291816234588623
    3. '+' → logprob: -2.1291816234588623
    4. ' *' → logprob: -3.7541816234588623
    5. ' for' → logprob: -4.629181861877441
    6. ']' → logprob: -4.629181861877441
    7. '0' → logprob: -4.879181861877441
    8. ' ' → logprob: -5.129181861877441
    9. 'for' → logprob: -5.129181861877441
    10. ' +' → logprob: -5.879181861877441

Token 38: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.01073792576789856
    2. '[list' → logprob: -5.260737895965576
    3. 'read' → logprob: -5.760737895965576
    4. '[' → logprob: -6.260737895965576
    5. ' list' → logprob: -8.135738372802734
    6. '[int' → logprob: -9.885738372802734
    7. ' [' → logprob: -11.260738372802734
    8. '[line' → logprob: -11.385738372802734
    9. '[len' → logprob: -11.510738372802734
    10. '[*' → logprob: -11.760738372802734

Token 39: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0022116350010037422
    2. 'ord' → logprob: -7.127211570739746
    3. 'list' → logprob: -8.127211570739746
    4. '*' → logprob: -8.502211570739746
    5. 'read' → logprob: -8.502211570739746
    6. 'tuple' → logprob: -8.877211570739746
    7. '(int' → logprob: -9.502211570739746
    8. '1' → logprob: -9.627211570739746
    9. 'len' → logprob: -9.752211570739746
    10. 'x' → logprob: -9.877211570739746

Token 40: '(x' (ID: 4061)
  Prédit: '(read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.2683301866054535
    2. '(x' → logprob: -1.5183302164077759
    3. '(' → logprob: -4.393330097198486
    4. '(i' → logprob: -5.643330097198486
    5. '(line' → logprob: -8.643330574035645
    6. '(s' → logprob: -10.018330574035645
    7. '()' → logprob: -10.268330574035645
    8. '(a' → logprob: -10.518330574035645
    9. ' (' → logprob: -11.018330574035645
    10. '()]' → logprob: -11.143330574035645

Token 41: ')' (ID: 8)
  Prédit: '(read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.02436484768986702
    2. '(x' → logprob: -4.399364948272705
    3. '(' → logprob: -5.399364948272705
    4. ')' → logprob: -5.774364948272705
    5. '(line' → logprob: -6.524364948272705
    6. '(i' → logprob: -7.149364948272705
    7. 'for' → logprob: -7.399364948272705
    8. 'read' → logprob: -7.649364948272705
    9. '(s' → logprob: -8.524364471435547
    10. ' for' → logprob: -9.399364471435547

Token 42: ' -' (ID: 533)
  Prédit: '(read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.172995463013649
    2. '(x' → logprob: -2.4229955673217773
    3. '(i' → logprob: -3.2979955673217773
    4. '(' → logprob: -3.5479955673217773
    5. '(line' → logprob: -6.547995567321777
    6. ' for' → logprob: -7.422995567321777
    7. '(s' → logprob: -7.797995567321777
    8. 'for' → logprob: -7.797995567321777
    9. '(y' → logprob: -8.297995567321777
    10. 'read' → logprob: -8.797995567321777

Token 43: ' ord' (ID: 6608)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0430377833545208
    2. ' ' → logprob: -3.1680378913879395
    3. '32' → logprob: -10.918037414550781
    4. '64' → logprob: -12.543037414550781
    5. '2' → logprob: -12.668037414550781
    6. '48' → logprob: -13.293037414550781
    7. '0' → logprob: -13.543037414550781
    8. ' (' → logprob: -13.793037414550781
    9. '(' → logprob: -13.918037414550781
    10. 'read' → logprob: -14.293037414550781

Token 44: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.013333168812096119
    2. '(' → logprob: -4.388333320617676
    3. '("("' → logprob: -7.388333320617676
    4. '("' → logprob: -8.763333320617676
    5. ''' → logprob: -11.263333320617676
    6. '('\' → logprob: -11.763333320617676
    7. '('(' → logprob: -11.763333320617676
    8. '('_' → logprob: -11.888333320617676
    9. '('.')' → logprob: -12.638333320617676
    10. '(\'' → logprob: -13.138333320617676

Token 45: '0' (ID: 15)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.23763762414455414
    2. '('' → logprob: -2.112637519836426
    3. 'a' → logprob: -2.612637519836426
    4. '0' → logprob: -4.612637519836426
    5. ' ')' → logprob: -5.112637519836426
    6. '(A' → logprob: -8.112637519836426
    7. '(a' → logprob: -8.237637519836426
    8. '(' → logprob: -8.487637519836426
    9. ' '' → logprob: -8.987637519836426
    10. ''A' → logprob: -9.487637519836426

Token 46: '')' (ID: 1542)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.026287754997611046
    2. '')' → logprob: -4.52628755569458
    3. '(' → logprob: -4.90128755569458
    4. '(read' → logprob: -5.52628755569458
    5. ''' → logprob: -7.15128755569458
    6. '('\' → logprob: -7.27628755569458
    7. ')' → logprob: -7.77628755569458
    8. '(',' → logprob: -7.90128755569458
    9. '(S' → logprob: -8.401288032531738
    10. '(','' → logprob: -8.526288032531738

Token 47: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3986610472202301
    2. '(read' → logprob: -2.0236611366271973
    3. '(' → logprob: -2.1486611366271973
    4. 'for' → logprob: -3.1486611366271973
    5. '()' → logprob: -3.7736611366271973
    6. ')' → logprob: -5.148661136627197
    7. '('' → logprob: -6.648661136627197
    8. ' ' → logprob: -6.773661136627197
    9. '(s' → logprob: -6.898661136627197
    10. ' readline' → logprob: -7.148661136627197

Token 48: ' x' (ID: 1215)
  Prédit: ' readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' readline' → logprob: -0.043875906616449356
    2. 'read' → logprob: -3.2938759326934814
    3. ' read' → logprob: -5.168875694274902
    4. '.readline' → logprob: -9.793875694274902
    5. '(read' → logprob: -10.043875694274902
    6. 'range' → logprob: -11.418875694274902
    7. 'list' → logprob: -12.668875694274902
    8. ' range' → logprob: -12.793875694274902
    9. ' list' → logprob: -13.293875694274902
    10. ' input' → logprob: -13.543875694274902

Token 49: ' in' (ID: 306)
  Prédit: ' readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' readline' → logprob: -0.3957504332065582
    2. 'read' → logprob: -1.8957504034042358
    3. ' in' → logprob: -2.2707505226135254
    4. '(read' → logprob: -3.0207505226135254
    5. ' read' → logprob: -3.8957505226135254
    6. 'in' → logprob: -6.520750522613525
    7. '(' → logprob: -6.770750522613525
    8. ' (' → logprob: -6.895750522613525
    9. '.readline' → logprob: -7.895750522613525
    10. ' ' → logprob: -10.145750045776367

Token 50: ' readline' (ID: 179561)
  Prédit: ' readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' readline' → logprob: -0.14346852898597717
    2. 'read' → logprob: -2.0184686183929443
    3. ' read' → logprob: -7.393468379974365
    4. '.readline' → logprob: -9.518468856811523
    5. 'list' → logprob: -10.643468856811523
    6. '(read' → logprob: -11.643468856811523
    7. 'range' → logprob: -11.643468856811523
    8. 'input' → logprob: -11.768468856811523
    9. 'sys' → logprob: -11.768468856811523
    10. ' input' → logprob: -11.893468856811523

Token 51: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.10720133781433105
    2. '()' → logprob: -2.607201337814331
    3. '().' → logprob: -3.607201337814331
    4. '())' → logprob: -7.35720157623291
    5. '()][' → logprob: -9.60720157623291
    6. '()[' → logprob: -10.85720157623291
    7. '()-' → logprob: -10.85720157623291
    8. '()].' → logprob: -10.98220157623291
    9. ']' → logprob: -11.98220157623291
    10. ')]' → logprob: -12.85720157623291

Token 52: 'rstrip' (ID: 180429)
  Prédit: 'decode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decode' → logprob: -0.08999036252498627
    2. 'rstrip' → logprob: -2.8399903774261475
    3. 'strip' → logprob: -3.5899903774261475
    4. ' decode' → logprob: -10.464990615844727
    5. ' strip' → logprob: -12.464990615844727
    6. 'de' → logprob: -13.714990615844727
    7. 'read' → logprob: -14.464990615844727
    8. '.decode' → logprob: -14.714990615844727
    9. 'split' → logprob: -15.089990615844727
    10. '[:-' → logprob: -15.464990615844727

Token 53: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.017126984894275665
    2. '()' → logprob: -4.51712703704834
    3. '())' → logprob: -5.76712703704834
    4. '(b' → logprob: -6.26712703704834
    5. 'b' → logprob: -7.01712703704834
    6. ')]' → logprob: -10.64212703704834
    7. '()\' → logprob: -10.64212703704834
    8. '(' → logprob: -11.01712703704834
    9. '()][' → logprob: -11.39212703704834
    10. '().' → logprob: -12.01712703704834

Token 54: 'P' (ID: 47)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7955370545387268
    2. '<|end|>' → logprob: -1.795536994934082
    3. ')' → logprob: -2.670536994934082
    4. '[' → logprob: -2.795536994934082
    5. '\n' → logprob: -3.295536994934082
    6. '()' → logprob: -3.420536994934082
    7. ']' → logprob: -3.545536994934082
    8. '
' → logprob: -3.670536994934082
    9. '```' → logprob: -4.170536994934082
    10. '**' → logprob: -4.170536994934082

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5213054418563843
    2. 'refix' → logprob: -1.3963054418563843
    3. '=' → logprob: -2.146305561065674
    4. 'REFIX' → logprob: -3.896305561065674
    5. '[' → logprob: -5.146305561065674
    6. 'S' → logprob: -5.646305561065674
    7. '=[]' → logprob: -5.771305561065674
    8. 'ref' → logprob: -6.646305561065674
    9. '=[' → logprob: -6.646305561065674
    10. 'r' → logprob: -6.896305561065674

Token 56: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3046874403953552
    2. '0' → logprob: -1.5546875
    3. ' [' → logprob: -3.5546875
    4. '1' → logprob: -5.5546875
    5. '[N' → logprob: -5.5546875
    6. '[len' → logprob: -5.5546875
    7. '[S' → logprob: -5.6796875
    8. ' ' → logprob: -6.0546875
    9. '[int' → logprob: -6.4296875
    10. '[]' → logprob: -6.9296875

Token 57: 'int' (ID: 491)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023182228207588196
    2. '[' → logprob: -4.023182392120361
    3. '(' → logprob: -6.523182392120361
    4. '1' → logprob: -7.398182392120361
    5. '[N' → logprob: -7.398182392120361
    6. 'False' → logprob: -7.648182392120361
    7. '-' → logprob: -8.273181915283203
    8. '[i' → logprob: -8.523181915283203
    9. ']' → logprob: -8.523181915283203
    10. ' [' → logprob: -8.773181915283203

Token 58: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.003557900432497263
    2. '(' → logprob: -6.1285576820373535
    3. '(read' → logprob: -6.6285576820373535
    4. '(line' → logprob: -11.128558158874512
    5. '()' → logprob: -12.503558158874512
    6. 'x' → logprob: -12.503558158874512
    7. '(input' → logprob: -12.628558158874512
    8. '('' → logprob: -12.753558158874512
    9. 'read' → logprob: -12.878558158874512
    10. ')' → logprob: -13.003558158874512

Token 59: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04260949790477753
    2. '(x' → logprob: -3.417609453201294
    3. '(read' → logprob: -5.667609691619873
    4. '('' → logprob: -6.292609691619873
    5. 'read' → logprob: -6.917609691619873
    6. '')' → logprob: -7.292609691619873
    7. '-' → logprob: -7.792609691619873
    8. ' for' → logprob: -8.667609214782715
    9. ')-' → logprob: -8.792609214782715
    10. '()' → logprob: -8.792609214782715

Token 60: ' for' (ID: 395)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7684034705162048
    2. '(read' → logprob: -1.7684035301208496
    3. ')' → logprob: -1.8934035301208496
    4. '(x' → logprob: -2.5184035301208496
    5. ' -' → logprob: -3.0184035301208496
    6. 'read' → logprob: -3.8934035301208496
    7. '()' → logprob: -4.14340353012085
    8. ' for' → logprob: -4.26840353012085
    9. ']' → logprob: -4.76840353012085
    10. '('' → logprob: -5.01840353012085

Token 61: ' x' (ID: 1215)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.645660936832428
    2. 'read' → logprob: -1.3956608772277832
    3. ' readline' → logprob: -1.5206608772277832
    4. '(read' → logprob: -5.020660877227783
    5. ' range' → logprob: -6.270660877227783
    6. '.readline' → logprob: -8.395661354064941
    7. 'range' → logprob: -8.395661354064941
    8. ' input' → logprob: -8.645661354064941
    9. ' sys' → logprob: -9.895661354064941
    10. ']' → logprob: -10.270661354064941

Token 62: ' in' (ID: 306)
  Prédit: '(read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.029425980523228645
    2. 'read' → logprob: -4.404426097869873
    3. '.readline' → logprob: -4.654426097869873
    4. ' readline' → logprob: -5.029426097869873
    5. ' read' → logprob: -8.154425621032715
    6. '(line' → logprob: -9.154425621032715
    7. 'in' → logprob: -9.779425621032715
    8. '.read' → logprob: -9.779425621032715
    9. '(' → logprob: -10.029425621032715
    10. '(range' → logprob: -10.279425621032715

Token 63: ' read' (ID: 1729)
  Prédit: ' readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' readline' → logprob: -0.35001975297927856
    2. 'read' → logprob: -1.2250196933746338
    3. ' read' → logprob: -7.225019931793213
    4. '.readline' → logprob: -7.350019931793213
    5. '(read' → logprob: -9.600019454956055
    6. 'sys' → logprob: -10.350019454956055
    7. 'line' → logprob: -11.100019454956055
    8. 'list' → logprob: -11.225019454956055
    9. 'input' → logprob: -11.475019454956055
    10. 'range' → logprob: -11.600019454956055

Token 64: '().' (ID: 1454)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0634562224149704
    2. 'lines' → logprob: -2.8134562969207764
    3. '().' → logprob: -6.563456058502197
    4. '.readline' → logprob: -10.313456535339355
    5. '()' → logprob: -10.563456535339355
    6. 'lin' → logprob: -12.313456535339355
    7. 'ine' → logprob: -12.813456535339355
    8. '(' → logprob: -13.063456535339355
    9. 'read' → logprob: -13.188456535339355
    10. '(line' → logprob: -13.688456535339355

Token 65: 'split' (ID: 13627)
  Prédit: 'decode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decode' → logprob: -0.5885227918624878
    2. 'split' → logprob: -0.8385227918624878
    3. 'rstrip' → logprob: -4.463522911071777
    4. 'strip' → logprob: -6.963522911071777
    5. 'replace' → logprob: -11.588522911071777
    6. ' decode' → logprob: -11.588522911071777
    7. ' split' → logprob: -11.963522911071777
    8. 'read' → logprob: -12.213522911071777
    9. '(split' → logprob: -13.463522911071777
    10. '```' → logprob: -13.588522911071777

Token 66: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.00018363336857873946
    2. '()' → logprob: -8.750184059143066
    3. '(' → logprob: -10.750184059143066
    4. ']' → logprob: -13.500184059143066
    5. '())' → logprob: -13.625184059143066
    6. '()]
' → logprob: -14.500184059143066
    7. '()][' → logprob: -16.12518310546875
    8. ' ()' → logprob: -16.25018310546875
    9. '()],' → logprob: -16.50018310546875
    10. '()\' → logprob: -16.62518310546875

Token 67: ']

' (ID: 3144)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.2828066945075989
    2. ']' → logprob: -1.407806634902954
    3. ')]' → logprob: -6.657806873321533
    4. '()' → logprob: -8.532806396484375
    5. '(' → logprob: -9.657806396484375
    6. ']()' → logprob: -9.657806396484375
    7. ')' → logprob: -11.407806396484375
    8. '`]' → logprob: -11.657806396484375
    9. ' ]' → logprob: -11.657806396484375
    10. '])' → logprob: -12.782806396484375

Token 68: 'P' (ID: 47)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.791911780834198
    2. '
' → logprob: -1.1669118404388428
    3. '<|end|>' → logprob: -2.2919118404388428
    4. ' ' → logprob: -2.7919118404388428
    5. ')' → logprob: -3.6669118404388428
    6. '#' → logprob: -5.041911602020264
    7. '_' → logprob: -5.166911602020264
    8. '+' → logprob: -5.416911602020264
    9. '[
' → logprob: -5.416911602020264
    10. '%' → logprob: -5.541911602020264

Token 69: ' +=' (ID: 2757)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 70: ' P' (ID: 398)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.438859224319458
    2. '[' → logprob: -1.063859224319458
    3. ' P' → logprob: -5.813858985900879
    4. ' [-' → logprob: -6.188858985900879
    5. 'P' → logprob: -6.438858985900879
    6. '[P' → logprob: -6.438858985900879
    7. '[-' → logprob: -6.813858985900879
    8. ' ' → logprob: -8.313858985900879
    9. '[len' → logprob: -8.438858985900879
    10. ' list' → logprob: -9.938858985900879

Token 71: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: 'dp' (ID: 19037)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29773464798927307
    2. '<|end|>' → logprob: -1.6727346181869507
    3. '\n' → logprob: -3.5477347373962402
    4. ' ' → logprob: -4.29773473739624
    5. 'for' → logprob: -5.42273473739624
    6. '[' → logprob: -5.79773473739624
    7. '<|end|>' → logprob: -5.92273473739624
    8. '#' → logprob: -6.17273473739624
    9. ' 
' → logprob: -6.17273473739624
    10. ')' → logprob: -6.29773473739624

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10110792517662048
    2. '=' → logprob: -2.8511078357696533
    3. '[' → logprob: -3.7261078357696533
    4. '_' → logprob: -4.351108074188232
    5. ' ' → logprob: -6.976108074188232
    6. '2' → logprob: -9.101107597351074
    7. '0' → logprob: -9.601107597351074
    8. 's' → logprob: -10.101107597351074
    9. '1' → logprob: -10.226107597351074
    10. ',' → logprob: -10.226107597351074

Token 74: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3179933726787567
    2. '[[' → logprob: -1.442993402481079
    3. ' [[' → logprob: -3.817993402481079
    4. ' [' → logprob: -4.5679931640625
    5. '{}' → logprob: -6.3179931640625
    6. '[-' → logprob: -6.5679931640625
    7. '[len' → logprob: -8.4429931640625
    8. '[{' → logprob: -9.0679931640625
    9. '{' → logprob: -9.3179931640625
    10. '[int' → logprob: -10.6929931640625

Token 75: 'P' (ID: 47)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.42410600185394287
    2. '0' → logprob: -1.4241060018539429
    3. 'False' → logprob: -3.5491061210632324
    4. '[-' → logprob: -3.6741061210632324
    5. 'float' → logprob: -3.6741061210632324
    6. '[[' → logprob: -4.549106121063232
    7. '-' → logprob: -4.924106121063232
    8. '[int' → logprob: -5.924106121063232
    9. '(' → logprob: -6.549106121063232
    10. '[(' → logprob: -7.299106121063232

Token 76: ']

' (ID: 3144)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007269674097187817
    2. ']' → logprob: -8.375726699829102
    3. '0' → logprob: -8.500726699829102
    4. '[N' → logprob: -9.375726699829102
    5. '])' → logprob: -9.875726699829102
    6. '[:' → logprob: -10.250726699829102
    7. ',' → logprob: -10.750726699829102
    8. '[P' → logprob: -11.125726699829102
    9. '[:]' → logprob: -11.250726699829102
    10. ')' → logprob: -11.500726699829102

Token 77: 'for' (ID: 1938)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14786168932914734
    2. 'for' → logprob: -2.7728617191314697
    3. ' for' → logprob: -3.2728617191314697
    4. ']' → logprob: -4.647861480712891
    5. ' [' → logprob: -5.522861480712891
    6. ',' → logprob: -5.772861480712891
    7. '+' → logprob: -6.147861480712891
    8. '[]' → logprob: -6.147861480712891
    9. '[i' → logprob: -6.272861480712891
    10. '0' → logprob: -6.397861480712891

Token 78: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07979219406843185
    2. 'i' → logprob: -2.8297922611236572
    3. '_' → logprob: -4.704792022705078
    4. ' _' → logprob: -4.829792022705078
    5. ' ' → logprob: -8.579792022705078
    6. '_i' → logprob: -9.079792022705078
    7. ' k' → logprob: -9.454792022705078
    8. ' x' → logprob: -10.454792022705078
    9. ' length' → logprob: -10.579792022705078
    10. ' j' → logprob: -10.829792022705078

Token 79: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07119904458522797
    2. 'in' → logprob: -2.6961989402770996
    3. ' ' → logprob: -7.1961989402771
    4. ',' → logprob: -7.8211989402771
    5. 'n' → logprob: -10.946199417114258
    6. '	in' → logprob: -11.196199417114258
    7. '  ' → logprob: -11.321199417114258
    8. '_' → logprob: -11.571199417114258
    9. '1' → logprob: -11.946199417114258
    10. ' ,' → logprob: -11.946199417114258

Token 80: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4740861654281616
    2. 'range' → logprob: -0.9740861654281616
    3. ' ' → logprob: -12.474085807800293
    4. '(range' → logprob: -13.224085807800293
    5. '	range' → logprob: -13.474085807800293
    6. '[' → logprob: -13.724085807800293
    7. ' xrange' → logprob: -15.474085807800293
    8. '  ' → logprob: -15.599085807800293
    9. 'P' → logprob: -16.22408676147461
    10. '   ' → logprob: -16.47408676147461

Token 81: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008239605464041233
    2. '(N' → logprob: -4.88323974609375
    3. '(len' → logprob: -7.38323974609375
    4. '(n' → logprob: -12.00823974609375
    5. ' (' → logprob: -13.25823974609375
    6. '1' → logprob: -14.00823974609375
    7. '(M' → logprob: -15.00823974609375
    8. '(length' → logprob: -15.00823974609375
    9. '(
' → logprob: -15.13323974609375
    10. '(i' → logprob: -15.25823974609375

Token 82: '+' (ID: 10)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8366087675094604
    2. '+' → logprob: -1.5866087675094604
    3. '-' → logprob: -1.7116087675094604
    4. ' -' → logprob: -2.33660888671875
    5. ' +' → logprob: -2.71160888671875
    6. ' ):' → logprob: -4.58660888671875
    7. '):
' → logprob: -5.33660888671875
    8. ')' → logprob: -6.58660888671875
    9. ' ' → logprob: -7.21160888671875
    10. '*' → logprob: -7.46160888671875

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02348177321255207
    2. ' ' → logprob: -3.773481845855713
    3. '2' → logprob: -8.648481369018555
    4. '   ' → logprob: -10.773481369018555
    5. '+' → logprob: -11.148481369018555
    6. '  ' → logprob: -11.773481369018555
    7. '-' → logprob: -12.210981369018555
    8. 'N' → logprob: -13.210981369018555
    9. '0' → logprob: -13.648481369018555
    10. ' N' → logprob: -13.648481369018555

Token 84: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005503153428435326
    2. '+' → logprob: -6.130503177642822
    3. ' ):' → logprob: -6.380503177642822
    4. '):
' → logprob: -7.005503177642822
    5. ')' → logprob: -7.880503177642822
    6. ' +' → logprob: -8.880502700805664
    7. ':' → logprob: -9.005502700805664
    8. ']:' → logprob: -11.005502700805664
    9. ',' → logprob: -11.005502700805664
    10. ' ' → logprob: -11.255502700805664

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5967342853546143
    2. ' dp' → logprob: -1.2217342853546143
    3. 'dp' → logprob: -2.2217342853546143
    4. '[' → logprob: -4.221734046936035
    5. '<|end|>' → logprob: -4.596734046936035
    6. ' ' → logprob: -5.346734046936035
    7. ' [' → logprob: -5.346734046936035
    8. '	dp' → logprob: -5.721734046936035
    9. '    ' → logprob: -5.846734046936035
    10. '    
' → logprob: -6.471734046936035

Token 86: ' P' (ID: 398)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.14059163630008698
    2. 'dp' → logprob: -2.265591621398926
    3. ' [' → logprob: -4.265591621398926
    4. '[' → logprob: -5.390591621398926
    5. '   ' → logprob: -5.890591621398926
    6. '    ' → logprob: -6.640591621398926
    7. ' for' → logprob: -6.890591621398926
    8. '[]' → logprob: -7.390591621398926
    9. ' new' → logprob: -7.390591621398926
    10. '	dp' → logprob: -7.515591621398926

Token 87: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8269776105880737
    2. ' =' → logprob: -0.9519776105880737
    3. '[i' → logprob: -2.7019777297973633
    4. '.append' → logprob: -3.0769777297973633
    5. '[' → logprob: -3.3269777297973633
    6. ' +=' → logprob: -4.201977729797363
    7. '+=' → logprob: -5.576977729797363
    8. '+' → logprob: -5.826977729797363
    9. '.' → logprob: -7.201977729797363
    10. ')' → logprob: -7.326977729797363

Token 88: ' dp' (ID: 21546)
  Prédit: '[P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[P' → logprob: -0.9764381647109985
    2. ' [' → logprob: -1.1014381647109985
    3. '[' → logprob: -1.7264381647109985
    4. '[i' → logprob: -3.601438045501709
    5. 'P' → logprob: -3.851438045501709
    6. ' P' → logprob: -3.976438045501709
    7. 'dp' → logprob: -3.976438045501709
    8. '[min' → logprob: -5.226438045501709
    9. ' dp' → logprob: -5.351438045501709
    10. '[max' → logprob: -5.601438045501709

Token 89: '[i' (ID: 1768)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.6375006437301636
    2. '[i' → logprob: -0.7625006437301636
    3. '[' → logprob: -5.512500762939453
    4. '+' → logprob: -8.887500762939453
    5. '[I' → logprob: -9.012500762939453
    6. '[len' → logprob: -9.262500762939453
    7. ' [' → logprob: -9.512500762939453
    8. '[N' → logprob: -9.637500762939453
    9. '+[' → logprob: -9.762500762939453
    10. '+i' → logprob: -10.512500762939453

Token 90: ']
' (ID: 1592)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7505396008491516
    2. '][' → logprob: -1.1255395412445068
    3. ']' → logprob: -2.000539541244507
    4. '[' → logprob: -4.125539779663086
    5. ']+' → logprob: -4.625539779663086
    6. ':]' → logprob: -4.750539779663086
    7. '][:' → logprob: -4.875539779663086
    8. ':' → logprob: -5.000539779663086
    9. ' +' → logprob: -5.500539779663086
    10. '])' → logprob: -6.000539779663086

Token 91: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6774470806121826
    2. ' +' → logprob: -1.5524470806121826
    3. '[' → logprob: -1.9274470806121826
    4. '[:]' → logprob: -3.5524470806121826
    5. '<|end|>' → logprob: -3.8024470806121826
    6. '   ' → logprob: -4.552447319030762
    7. ' ' → logprob: -4.927447319030762
    8. '+[' → logprob: -5.052447319030762
    9. 'dp' → logprob: -5.177447319030762
    10. '[::-' → logprob: -5.302447319030762

Token 92: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -1.4565883874893188
    2. 'for' → logprob: -2.3315882682800293
    3. ' next' → logprob: -2.3315882682800293
    4. ' dp' → logprob: -2.3315882682800293
    5. 'dp' → logprob: -2.3315882682800293
    6. ' for' → logprob: -2.4565882682800293
    7. 'new' (adapté à ' new') → logprob: -2.5815882682800293
    8. 'next' → logprob: -2.9565882682800293
    9. '[' → logprob: -3.5815882682800293
    10. 'tmp' → logprob: -3.7065882682800293

Token 93: 'P' (ID: 47)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14107748866081238
    2. '_dp' → logprob: -2.7660775184631348
    3. 'dp' → logprob: -3.7660775184631348
    4. '=' → logprob: -3.7660775184631348
    5. 'P' → logprob: -4.391077518463135
    6. '_row' → logprob: -5.766077518463135
    7. '   ' → logprob: -6.391077518463135
    8. 'p' → logprob: -6.641077518463135
    9. '_p' → logprob: -7.141077518463135
    10. '_' → logprob: -7.266077518463135

Token 94: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04871363192796707
    2. '=' → logprob: -3.0487136840820312
    3. '=[]' → logprob: -9.923713684082031
    4. ' ' → logprob: -10.298713684082031
    5. ' =[' → logprob: -10.798713684082031
    6. '[' → logprob: -11.673713684082031
    7. '.append' → logprob: -12.548713684082031
    8. '=[' → logprob: -12.798713684082031
    9. '[]' → logprob: -13.673713684082031
    10. ' [' → logprob: -13.798713684082031

Token 95: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.09234619140625
    2. '[]' → logprob: -1.21734619140625
    3. ' [' → logprob: -1.34234619140625
    4. '[P' → logprob: -2.59234619140625
    5. ' []' → logprob: -3.71734619140625
    6. '[p' → logprob: -5.71734619140625
    7. '[len' → logprob: -7.09234619140625
    8. '[i' → logprob: -7.71734619140625
    9. '[]
' → logprob: -7.84234619140625
    10. '[int' → logprob: -8.21734619140625

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1836942881345749
    2. ' for' → logprob: -1.9336942434310913
    3. '<|end|>' → logprob: -4.308694362640381
    4. 'for' → logprob: -5.058694362640381
    5. ' ' → logprob: -6.183694362640381
    6. '	for' → logprob: -7.433694362640381
    7. '  ' → logprob: -8.683693885803223
    8. '<|end|>' → logprob: -8.933693885803223
    9. '       ' → logprob: -9.183693885803223
    10. '    
' → logprob: -9.433693885803223

Token 97: ' dx' (ID: 29472)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2299840897321701
    2. 'for' → logprob: -1.6049840450286865
    3. '   ' → logprob: -5.604984283447266
    4. ' ' → logprob: -7.979984283447266
    5. '	for' → logprob: -7.979984283447266
    6. ' i' → logprob: -10.104984283447266
    7. '<|end|>' → logprob: -10.604984283447266
    8. '[' → logprob: -10.729984283447266
    9. '  ' → logprob: -11.104984283447266
    10. ' j' → logprob: -11.104984283447266

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23233868181705475
    2. '=' → logprob: -1.6073386669158936
    3. 'for' → logprob: -5.732338905334473
    4. ',' → logprob: -6.232338905334473
    5. 's' → logprob: -6.982338905334473
    6. 'f' → logprob: -8.482338905334473
    7. '=[]' → logprob: -8.732338905334473
    8. ' ' → logprob: -9.232338905334473
    9. 'x' → logprob: -9.607338905334473
    10. ' for' → logprob: -10.232338905334473

Token 99: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6087051630020142
    2. ' ' → logprob: -1.7337051630020142
    3. '[' → logprob: -1.7337051630020142
    4. ' [' → logprob: -1.7337051630020142
    5. '0' → logprob: -2.2337050437927246
    6. '-' → logprob: -3.2337050437927246
    7. '[-' → logprob: -3.3587050437927246
    8. ' -' → logprob: -4.108705043792725
    9. '[i' → logprob: -4.483705043792725
    10. ' [-' → logprob: -4.608705043792725

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6890512108802795
    2. '-' → logprob: -1.6890511512756348
    3. '[' → logprob: -2.1890511512756348
    4. '0' → logprob: -2.4390511512756348
    5. '[-' → logprob: -2.9390511512756348
    6. ' ' → logprob: -3.9390511512756348
    7. ' [' → logprob: -4.689051151275635
    8. ' -' → logprob: -5.064051151275635
    9. '[i' → logprob: -5.314051151275635
    10. 'range' → logprob: -5.564051151275635

Token 101: '<<' (ID: 5354)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08981450647115707
    2. '<|end|>' → logprob: -2.9648144245147705
    3. 'for' → logprob: -4.96481466293335
    4. ' ' → logprob: -5.21481466293335
    5. '+' → logprob: -5.21481466293335
    6. ' for' → logprob: -5.58981466293335
    7. '<|end|>' → logprob: -5.96481466293335
    8. '   ' → logprob: -5.96481466293335
    9. '  
' → logprob: -6.21481466293335
    10. '0' → logprob: -6.83981466293335

Token 102: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07585388422012329
    2. '(i' → logprob: -3.5758538246154785
    3. 'N' → logprob: -3.8258538246154785
    4. '20' → logprob: -5.3258538246154785
    5. '1' → logprob: -5.8258538246154785
    6. '(N' → logprob: -6.2008538246154785
    7. '17' → logprob: -6.5758538246154785
    8. '10' → logprob: -6.5758538246154785
    9. '16' → logprob: -6.8258538246154785
    10. ' i' → logprob: -6.9508538246154785

Token 103: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3377574384212494
    2. ' for' → logprob: -1.4627574682235718
    3. '
' → logprob: -3.4627573490142822
    4. '<|end|>' → logprob: -4.962757587432861
    5. '  
' → logprob: -5.337757587432861
    6. '   ' → logprob: -5.712757587432861
    7. '+' → logprob: -5.837757587432861
    8. ' ' → logprob: -5.962757587432861
    9. ' 
' → logprob: -7.087757587432861
    10. '    
' → logprob: -7.337757587432861

Token 104: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0479406118392944
    2. ' ' → logprob: -1.2979406118392944
    3. 'for' → logprob: -1.9229406118392944
    4. '   ' → logprob: -2.297940731048584
    5. '<|end|>' → logprob: -2.297940731048584
    6. '[' → logprob: -4.922940731048584
    7. ' 
' → logprob: -5.172940731048584
    8. '  
' → logprob: -5.547940731048584
    9. '  ' → logprob: -6.172940731048584
    10. '
' → logprob: -6.422940731048584

Token 105: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7001409530639648
    2. 'for' (adapté à ' for') → logprob: -0.7001409530639648
    3. ' ' → logprob: -5.325140953063965
    4. '[' → logprob: -7.200140953063965
    5. '<|end|>' → logprob: -7.325140953063965
    6. '   ' → logprob: -8.325140953063965
    7. '0' → logprob: -8.700140953063965
    8. 'x' → logprob: -9.825140953063965
    9. '(' → logprob: -10.575140953063965
    10. ' [' → logprob: -10.825140953063965

Token 106: ' a' (ID: 261)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.10365138947963715
    2. 'j' → logprob: -2.478651285171509
    3. ' x' → logprob: -4.728651523590088
    4. 'x' → logprob: -5.978651523590088
    5. ' p' → logprob: -7.103651523590088
    6. ' k' → logprob: -7.103651523590088
    7. 'k' → logprob: -7.978651523590088
    8. ' _' → logprob: -8.22865104675293
    9. ' d' → logprob: -8.72865104675293
    10. ' v' → logprob: -8.97865104675293

Token 107: ',b' (ID: 17568)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012835817411541939
    2. 'in' → logprob: -4.38783597946167
    3. ',' → logprob: -8.637835502624512
    4. ' ' → logprob: -9.387835502624512
    5. 'a' → logprob: -10.637835502624512
    6. 'n' → logprob: -11.137835502624512
    7. '1' → logprob: -12.387835502624512
    8. ' ,' → logprob: -12.637835502624512
    9. 'range' → logprob: -12.762835502624512
    10. 'x' → logprob: -12.762835502624512

Token 108: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04863210767507553
    2. 'in' → logprob: -3.0486321449279785
    3. ' ' → logprob: -10.79863166809082
    4. ',' → logprob: -11.04863166809082
    5. '  ' → logprob: -12.92363166809082
    6. ' ,' → logprob: -13.54863166809082
    7. ')' → logprob: -14.17363166809082
    8. '	in' → logprob: -14.29863166809082
    9. ',in' → logprob: -14.92363166809082
    10. '   ' → logprob: -15.04863166809082

Token 109: ' zip' (ID: 16216)
  Prédit: ' zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zip' → logprob: -0.10494206100702286
    2. ' dp' → logprob: -2.8549420833587646
    3. 'dp' → logprob: -3.8549420833587646
    4. 'zip' → logprob: -3.9799420833587646
    5. ' P' → logprob: -7.3549418449401855
    6. 'P' → logprob: -7.6049418449401855
    7. '[(' → logprob: -7.8549418449401855
    8. ' [(' → logprob: -8.229942321777344
    9. ' enumerate' → logprob: -8.854942321777344
    10. '(zip' → logprob: -9.729942321777344

Token 110: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.0008137972326949239
    2. '(dp' → logprob: -7.625813961029053
    3. '(range' → logprob: -8.500813484191895
    4. '(' → logprob: -9.250813484191895
    5. ' (' → logprob: -12.125813484191895
    6. '(zip' → logprob: -12.125813484191895
    7. '(dx' → logprob: -12.625813484191895
    8. 'P' → logprob: -12.750813484191895
    9. '(p' → logprob: -12.875813484191895
    10. '((' → logprob: -13.500813484191895

Token 111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5964841842651367
    2. ',P' → logprob: -0.8464841842651367
    3. ' ,' → logprob: -4.096484184265137
    4. '[:-' → logprob: -6.346484184265137
    5. '[' → logprob: -7.471484184265137
    6. '[P' → logprob: -8.096484184265137
    7. ',[' → logprob: -8.721484184265137
    8. ',d' → logprob: -8.971484184265137
    9. '   ' → logprob: -9.096484184265137
    10. 'P' → logprob: -9.096484184265137

Token 112: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.1576448678970337
    2. ' P' → logprob: -2.157644748687744
    3. 'dp' → logprob: -3.657644748687744
    4. ' dp' → logprob: -5.907644748687744
    5. '[' → logprob: -7.907644748687744
    6. ' ' → logprob: -8.157645225524902
    7. '   ' → logprob: -8.282645225524902
    8. '[P' → logprob: -8.657645225524902
    9. ' reversed' → logprob: -9.282645225524902
    10. 'map' → logprob: -9.782645225524902

Token 113: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14265374839305878
    2. '):' → logprob: -2.392653703689575
    3. '[i' → logprob: -3.517653703689575
    4. '):
' → logprob: -5.017653942108154
    5. '[N' → logprob: -6.392653942108154
    6. '[:-' → logprob: -6.767653942108154
    7. '[P' → logprob: -7.767653942108154
    8. '[:' → logprob: -8.142653465270996
    9. '[d' → logprob: -8.392653465270996
    10. ',' → logprob: -8.642653465270996

Token 114: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0418599471449852
    2. ' dx' → logprob: -3.4168598651885986
    3. '1' → logprob: -5.541860103607178
    4. 'i' → logprob: -6.416860103607178
    5. ' ' → logprob: -7.166860103607178
    6. '(dx' → logprob: -7.291860103607178
    7. 'range' → logprob: -8.16685962677002
    8. ' i' → logprob: -8.54185962677002
    9. ':' → logprob: -8.91685962677002
    10. 'N' → logprob: -9.54185962677002

Token 115: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014062424190342426
    2. '+' → logprob: -4.764062404632568
    3. ':]' → logprob: -5.639062404632568
    4. ' +' → logprob: -6.889062404632568
    5. ' :' → logprob: -8.514062881469727
    6. '+:' → logprob: -8.639062881469727
    7. ':],' → logprob: -9.514062881469727
    8. ':d' → logprob: -10.139062881469727
    9. 'dx' → logprob: -10.139062881469727
    10. ':x' → logprob: -10.139062881469727

Token 116: ']):
' (ID: 51989)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.8879132270812988
    2. ']):' → logprob: -1.0129132270812988
    3. ']):
' → logprob: -2.012913227081299
    4. 'N' → logprob: -3.387913227081299
    5. '])' → logprob: -4.012913227081299
    6. ']' → logprob: -4.262913227081299
    7. ' ]' → logprob: -4.762913227081299
    8. ' ' → logprob: -5.512913227081299
    9. ' dx' → logprob: -5.762913227081299
    10. 'len' → logprob: -5.762913227081299

Token 117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20550629496574402
    2. ' new' → logprob: -1.7055063247680664
    3. 'new' → logprob: -5.705506324768066
    4. '   ' → logprob: -8.080506324768066
    5. '	new' → logprob: -9.080506324768066
    6. '[' → logprob: -9.830506324768066
    7. '[new' → logprob: -10.080506324768066
    8. ' [' → logprob: -10.205506324768066
    9. ',' → logprob: -10.455506324768066
    10. ',new' → logprob: -10.830506324768066

Token 118: ' if' (ID: 538)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.20570684969425201
    2. '       ' → logprob: -2.080706834793091
    3. 'new' → logprob: -3.080706834793091
    4. '   ' → logprob: -4.33070707321167
    5. '           ' → logprob: -6.58070707321167
    6. '	new' → logprob: -8.080706596374512
    7. '    ' → logprob: -9.455706596374512
    8. ' ' → logprob: -9.830706596374512
    9. '        ' → logprob: -10.205706596374512
    10. '	   ' → logprob: -10.330706596374512

Token 119: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5240738987922668
    2. ' a' → logprob: -0.8990738987922668
    3. ' b' → logprob: -7.899074077606201
    4. 'b' → logprob: -8.024073600769043
    5. ' ' → logprob: -9.899073600769043
    6. ' isinstance' → logprob: -10.024073600769043
    7. ' not' → logprob: -10.149073600769043
    8. '   ' → logprob: -10.649073600769043
    9. '(a' → logprob: -11.086573600769043
    10. ' len' → logprob: -11.211573600769043

Token 120: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.1920174360275269
    2. ' >' → logprob: -1.1920174360275269
    3. '+' → logprob: -1.6920174360275269
    4. ' +' → logprob: -2.6920175552368164
    5. ' <' → logprob: -2.9420175552368164
    6. '<' → logprob: -3.4420175552368164
    7. '==' → logprob: -4.192017555236816
    8. ' ==' → logprob: -4.317017555236816
    9. ' >=' → logprob: -4.692017555236816
    10. '>=' → logprob: -4.692017555236816

Token 121: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.47415047883987427
    2. ' b' → logprob: -0.9741504788398743
    3. '0' → logprob: -10.474150657653809
    4. ' ' → logprob: -11.724150657653809
    5. 'a' → logprob: -11.849150657653809
    6. '=' → logprob: -11.974150657653809
    7. '=b' → logprob: -12.099150657653809
    8. '>b' → logprob: -12.474150657653809
    9. '	b' → logprob: -13.224150657653809
    10. ' a' → logprob: -13.474150657653809

Token 122: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.055617187172174454
    2. ':' → logprob: -3.055617094039917
    3. ' new' → logprob: -6.055617332458496
    4. '       ' → logprob: -6.680617332458496
    5. '):
' → logprob: -7.180617332458496
    6. 'new' → logprob: -7.305617332458496
    7. ':new' → logprob: -7.430617332458496
    8. ' else' → logprob: -8.055617332458496
    9. '           ' → logprob: -8.055617332458496
    10. ' :
' → logprob: -8.680617332458496

Token 123: '           ' (ID: 352)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.38892024755477905
    2. '           ' → logprob: -1.3889203071594238
    3. 'new' → logprob: -2.638920307159424
    4. '
' → logprob: -7.513920307159424
    5. '	new' → logprob: -8.263919830322266
    6. '       ' → logprob: -9.138919830322266
    7. '   ' → logprob: -9.263919830322266
    8. '```' → logprob: -9.513919830322266
    9. '	       ' → logprob: -9.638919830322266
    10. '		' → logprob: -10.013919830322266

Token 124: ' a' (ID: 261)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.5804187059402466
    2. 'new' → logprob: -0.8304187059402466
    3. '           ' → logprob: -5.455418586730957
    4. '       ' → logprob: -10.330418586730957
    5. ' ' → logprob: -10.580418586730957
    6. '	new' → logprob: -10.580418586730957
    7. '   ' → logprob: -10.705418586730957
    8. '```' → logprob: -10.830418586730957
    9. '               ' → logprob: -11.205418586730957
    10. '
' → logprob: -11.330418586730957

Token 125: ',b' (ID: 17568)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.027038054540753365
    2. '=' → logprob: -3.902038097381592
    3. ',' → logprob: -5.902038097381592
    4. 'new' → logprob: -6.527038097381592
    5. ' new' → logprob: -7.277038097381592
    6. ' else' → logprob: -8.152037620544434
    7. '=a' → logprob: -8.277037620544434
    8. 's' → logprob: -9.152037620544434
    9. ',b' → logprob: -9.152037620544434
    10. 'else' → logprob: -9.152037620544434

Token 126: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1621631383895874
    2. '=' → logprob: -1.9121631383895874
    3. '=b' → logprob: -6.662163257598877
    4. ',' → logprob: -8.037162780761719
    5. ',b' → logprob: -8.162162780761719
    6. 'b' → logprob: -10.662162780761719
    7. '=a' → logprob: -11.287162780761719
    8. ' ,' → logprob: -12.662162780761719
    9. '           ' → logprob: -13.037162780761719
    10. ',a' → logprob: -13.537162780761719

Token 127: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.17974978685379028
    2. ' b' → logprob: -1.8047497272491455
    3. 'a' → logprob: -12.679749488830566
    4. '           ' → logprob: -14.054749488830566
    5. ' a' → logprob: -15.179749488830566
    6. '>b' → logprob: -15.554749488830566
    7. ')b' → logprob: -15.804749488830566
    8. '	b' → logprob: -16.054750442504883
    9. '   ' → logprob: -16.054750442504883
    10. ',b' → logprob: -16.304750442504883

Token 128: ',a' (ID: 26776)
  Prédit: ',a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',a' → logprob: -0.16290059685707092
    2. ',' → logprob: -2.037900686264038
    3. '<|end|>' → logprob: -4.287900447845459
    4. ',new' → logprob: -6.037900447845459
    5. 'a' → logprob: -6.037900447845459
    6. '
' → logprob: -6.912900447845459
    7. ',
' → logprob: -9.412900924682617
    8. ',x' → logprob: -9.412900924682617
    9. ' a' → logprob: -10.287900924682617
    10. ',b' → logprob: -10.412900924682617

Token 129: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018974634585902095
    2. ' new' → logprob: -7.12689733505249
    3. 'new' → logprob: -7.25189733505249
    4. '
' → logprob: -8.126897811889648
    5. ',' → logprob: -11.001897811889648
    6. '<|end|>' → logprob: -11.126897811889648
    7. '
' → logprob: -11.376897811889648
    8. '   ' → logprob: -11.626897811889648
    9. '           ' → logprob: -12.126897811889648
    10. '```' → logprob: -12.376897811889648

Token 130: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12356645613908768
    2. ' new' → logprob: -2.2485663890838623
    3. 'new' → logprob: -4.623566627502441
    4. '
' → logprob: -8.123566627502441
    5. ',' → logprob: -9.123566627502441
    6. ',new' → logprob: -9.498566627502441
    7. '	new' → logprob: -9.498566627502441
    8. '<|end|>' → logprob: -9.748566627502441
    9. '[new' → logprob: -10.373566627502441
    10. '   ' → logprob: -10.373566627502441

Token 131: ' if' (ID: 538)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.1566620022058487
    2. 'new' → logprob: -2.0316619873046875
    3. '       ' → logprob: -4.2816619873046875
    4. '	new' → logprob: -11.031661987304688
    5. '   ' → logprob: -11.906661987304688
    6. '_new' → logprob: -12.156661987304688
    7. '[new' → logprob: -12.156661987304688
    8. '
' → logprob: -12.156661987304688
    9. 'New' → logprob: -12.406661987304688
    10. '           ' → logprob: -12.656661987304688

Token 132: ' S' (ID: 336)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.1303277164697647
    2. 'a' → logprob: -2.2553277015686035
    3. ' b' → logprob: -5.1303277015686035
    4. ' len' → logprob: -5.8803277015686035
    5. ' new' → logprob: -5.8803277015686035
    6. 'b' → logprob: -6.5053277015686035
    7. ' ' → logprob: -7.0053277015686035
    8. ' not' → logprob: -7.3803277015686035
    9. 'new' → logprob: -7.5678277015686035
    10. 'len' → logprob: -8.005328178405762

Token 133: '[b' (ID: 40800)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5457294583320618
    2. '[a' → logprob: -0.9207294583320618
    3. '[' → logprob: -4.170729637145996
    4. '[b' → logprob: -5.170729637145996
    5. ' [' → logprob: -7.420729637145996
    6. 'a' → logprob: -8.295729637145996
    7. '==' → logprob: -9.170729637145996
    8. '[x' → logprob: -9.670729637145996
    9. '[S' → logprob: -9.795729637145996
    10. '[j' → logprob: -10.045729637145996

Token 134: '-a' (ID: 8575)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.88974529504776
    2. ']' → logprob: -1.1397452354431152
    3. '[' → logprob: -1.7647452354431152
    4. '[b' → logprob: -3.3897452354431152
    5. ']==' → logprob: -3.5147452354431152
    6. '==' → logprob: -4.764745235443115
    7. '][' → logprob: -5.014745235443115
    8. '[i' → logprob: -5.514745235443115
    9. ' ==' → logprob: -5.514745235443115
    10. ' [' → logprob: -6.389745235443115

Token 135: ']:
' (ID: 22152)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.058115411549806595
    2. ']==' → logprob: -3.3081154823303223
    3. ']:' → logprob: -5.183115482330322
    4. ']!=' → logprob: -5.933115482330322
    5. ':' → logprob: -6.308115482330322
    6. '[' → logprob: -6.683115482330322
    7. '[i' → logprob: -6.808115482330322
    8. ']:
' → logprob: -6.933115482330322
    9. ' ]' → logprob: -6.933115482330322
    10. 'dx' → logprob: -7.308115482330322

Token 136: '           ' (ID: 352)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.1440158486366272
    2. 'new' → logprob: -2.6440157890319824
    3. '           ' → logprob: -3.3940157890319824
    4. '       ' → logprob: -3.7690157890319824
    5. '[new' → logprob: -6.019015789031982
    6. '[' → logprob: -7.144015789031982
    7. '   ' → logprob: -7.519015789031982
    8. ':' → logprob: -7.769015789031982
    9. ' ' → logprob: -7.894015789031982
    10. '	new' → logprob: -8.26901626586914

Token 137: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.2823643088340759
    2. 'new' (adapté à ' new') → logprob: -1.4073643684387207
    3. '           ' → logprob: -7.282364368438721
    4. 'continue' → logprob: -8.907363891601562
    5. ' continue' → logprob: -9.282363891601562
    6. '   ' → logprob: -9.407363891601562
    7. ' ' → logprob: -10.282363891601562
    8. 'return' → logprob: -10.532363891601562
    9. '       ' → logprob: -10.782363891601562
    10. '
' → logprob: -11.032363891601562

Token 138: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -3.128163257315464e-07
    2. 'new' → logprob: -15.125
    3. '.append' → logprob: -17.5
    4. '[' → logprob: -18.125
    5. '=' → logprob: -18.75
    6. ' P' → logprob: -19.625
    7. '```' → logprob: -19.625
    8. '`' → logprob: -20.125
    9. ' =' → logprob: -20.375
    10. 'PCell' → logprob: -20.625

Token 139: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.011054190807044506
    2. '.' → logprob: -4.511054039001465
    3. ' .' → logprob: -12.636054039001465
    4. '.extend' → logprob: -14.136054039001465
    5. '​.' → logprob: -14.761054039001465
    6. '.add' → logprob: -14.761054039001465
    7. 'append' → logprob: -14.886054039001465
    8. '.Append' → logprob: -15.136054039001465
    9. '.push' → logprob: -15.136054039001465
    10. '.ap' → logprob: -15.761054039001465

Token 140: '(b' (ID: 3229)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.20761476457118988
    2. 'a' → logprob: -2.4576146602630615
    3. '(b' → logprob: -2.7076146602630615
    4. '(' → logprob: -3.9576146602630615
    5. 'b' → logprob: -4.957614898681641
    6. ' a' → logprob: -4.957614898681641
    7. ' b' → logprob: -7.332614898681641
    8. ' (' → logprob: -7.832614898681641
    9. '0' → logprob: -8.20761489868164
    10. '(s' → logprob: -9.45761489868164

Token 141: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.11382059007883072
    2. ')' → logprob: -3.2388205528259277
    3. '       ' → logprob: -3.6138205528259277
    4. 'else' → logprob: -3.9888205528259277
    5. ' else' → logprob: -4.113820552825928
    6. '-' → logprob: -5.238820552825928
    7. ' )
' → logprob: -7.488820552825928
    8. '+' → logprob: -8.238821029663086
    9. ' -' → logprob: -8.863821029663086
    10. ')
' → logprob: -9.238821029663086

Token 142: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3100641965866089
    2. '       ' → logprob: -1.4350641965866089
    3. ' else' → logprob: -3.5600643157958984
    4. '	else' → logprob: -10.435064315795898
    5. 'new' → logprob: -11.185064315795898
    6. '   ' → logprob: -12.185064315795898
    7. ' ' → logprob: -12.935064315795898
    8. '	' → logprob: -13.435064315795898
    9. '<|end|>' → logprob: -13.435064315795898
    10. '_else' → logprob: -13.560064315795898

Token 143: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.34137749671936035
    2. '       ' → logprob: -1.4663774967193604
    3. ' else' → logprob: -2.8413774967193604
    4. '	else' → logprob: -9.716377258300781
    5. '   ' → logprob: -10.466377258300781
    6. '	' → logprob: -12.466377258300781
    7. '      ' → logprob: -12.841377258300781
    8. '```' → logprob: -13.466377258300781
    9. 'elif' → logprob: -13.841377258300781
    10. ' ' → logprob: -13.966377258300781

Token 144: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6163236498832703
    2. ':
' → logprob: -0.9913236498832703
    3. ' new' → logprob: -2.741323709487915
    4. ':' → logprob: -3.991323709487915
    5. 'new' → logprob: -5.616323471069336
    6. '       ' → logprob: -6.616323471069336
    7. '          ' → logprob: -8.116323471069336
    8. ' :
' → logprob: -8.241323471069336
    9. ':new' → logprob: -9.241323471069336
    10. '   ' → logprob: -9.616323471069336

Token 145: '           ' (ID: 352)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.31552162766456604
    2. 'new' → logprob: -1.3155215978622437
    3. '           ' → logprob: -6.440521717071533
    4. '       ' → logprob: -7.565521717071533
    5. '	new' → logprob: -9.690521240234375
    6. '   ' → logprob: -10.690521240234375
    7. ' ' → logprob: -10.940521240234375
    8. 'a' → logprob: -11.065521240234375
    9. '```' → logprob: -11.690521240234375
    10. '[new' → logprob: -12.815521240234375

Token 146: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.07921384274959564
    2. ' new' → logprob: -2.579213857650757
    3. 'a' → logprob: -8.454214096069336
    4. '           ' → logprob: -9.329214096069336
    5. '   ' → logprob: -11.954214096069336
    6. '       ' → logprob: -12.079214096069336
    7. '	new' → logprob: -12.454214096069336
    8. ' a' → logprob: -13.329214096069336
    9. '[new' → logprob: -14.204214096069336
    10. '```' → logprob: -14.204214096069336

Token 147: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -2.7729658540920354e-05
    2. '.append' → logprob: -10.500027656555176
    3. ' P' → logprob: -17.000028610229492
    4. '=' → logprob: -17.375028610229492
    5. 'p' → logprob: -17.750028610229492
    6. '.' → logprob: -18.375028610229492
    7. '.P' → logprob: -18.750028610229492
    8. 'append' → logprob: -18.875028610229492
    9. '           ' → logprob: -19.500028610229492
    10. '   ' → logprob: -19.500028610229492

Token 148: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.0219828002154827e-05
    2. '.' → logprob: -10.875020027160645
    3. ' .' → logprob: -14.125020027160645
    4. 'append' → logprob: -15.250020027160645
    5. '.extend' → logprob: -15.625020027160645
    6. '.app' → logprob: -17.75002098083496
    7. '.Append' → logprob: -19.50002098083496
    8. '.ap' → logprob: -20.12502098083496
    9. '	append' → logprob: -20.50002098083496
    10. '+=' → logprob: -21.00002098083496

Token 149: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.20149120688438416
    2. 'a' → logprob: -1.7014912366867065
    3. '(' → logprob: -9.576491355895996
    4. ' a' → logprob: -12.201491355895996
    5. '(
' → logprob: -13.451491355895996
    6. '0' → logprob: -14.326491355895996
    7. '   ' → logprob: -14.451491355895996
    8. '	a' → logprob: -15.076491355895996
    9. 'b' → logprob: -16.20149040222168
    10. '[a' → logprob: -16.32649040222168

Token 150: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024370834580622613
    2. ')
' → logprob: -8.375244140625
    3. '   ' → logprob: -12.375244140625
    4. '       ' → logprob: -12.375244140625
    5. ' )' → logprob: -13.000244140625
    6. ')return' → logprob: -13.750244140625
    7. '))' → logprob: -15.375244140625
    8. ')`' → logprob: -15.500244140625
    9. ')new' → logprob: -16.000244140625
    10. '）' → logprob: -16.125244140625

Token 151: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3139025866985321
    2. '   ' → logprob: -1.3139026165008545
    3. ' dp' → logprob: -8.188902854919434
    4. '	dp' → logprob: -8.938902854919434
    5. '<|end|>' → logprob: -9.188902854919434
    6. ']' → logprob: -10.188902854919434
    7. '(dp' → logprob: -10.563902854919434
    8. ')' → logprob: -10.813902854919434
    9. '[' → logprob: -11.563902854919434
    10. '    
' → logprob: -11.688902854919434

Token 152: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -8.280175097752362e-05
    2. ' dp' → logprob: -9.625082969665527
    3. '   ' → logprob: -11.250082969665527
    4. ')' → logprob: -13.375082969665527
    5. '	dp' → logprob: -14.000082969665527
    6. ']' → logprob: -14.875082969665527
    7. '(dp' → logprob: -15.125082969665527
    8. '[' → logprob: -16.00008201599121
    9. ' ' → logprob: -16.37508201599121
    10. '    
' → logprob: -16.62508201599121

Token 153: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001333932508714497
    2. '.' → logprob: -6.876333713531494
    3. '[i' → logprob: -8.251334190368652
    4. '.app' → logprob: -10.876334190368652
    5. ' .' → logprob: -11.626334190368652
    6. '.Append' → logprob: -12.751334190368652
    7. '[-' → logprob: -13.126334190368652
    8. '.extend' → logprob: -13.251334190368652
    9. '.push' → logprob: -13.876334190368652
    10. '[' → logprob: -14.001334190368652

Token 154: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -14.625000953674316
    3. 'new' → logprob: -17.75
    4. ')new' → logprob: -20.875
    5. ' (' → logprob: -21.0
    6. '(
' → logprob: -21.125
    7. '(next' → logprob: -21.25
    8. '(len' → logprob: -21.625
    9. ' new' → logprob: -21.625
    10. ',new' → logprob: -22.125

Token 155: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.0206720617134124e-05
    2. 'p' → logprob: -12.37501049041748
    3. '[' → logprob: -13.25001049041748
    4. 'new' → logprob: -14.00001049041748
    5. '[-' → logprob: -14.12501049041748
    6. '[i' → logprob: -14.12501049041748
    7. 'dp' → logprob: -14.50001049041748
    8. '.append' → logprob: -14.62501049041748
    9. 'w' → logprob: -15.12501049041748
    10. 'append' → logprob: -16.000009536743164

Token 156: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.491498531133402e-06
    2. ')
' → logprob: -11.625009536743164
    3. ' )' → logprob: -15.375009536743164
    4. '))' → logprob: -16.000009536743164
    5. ')`' → logprob: -16.125009536743164
    6. '[' → logprob: -16.875009536743164
    7. ']' → logprob: -17.500009536743164
    8. '）' → logprob: -18.125009536743164
    9. '`)' → logprob: -18.125009536743164
    10. '),' → logprob: -18.375009536743164

Token 157: 'answers' (ID: 52315)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3541581928730011
    2. '<|end|>' → logprob: -1.7291581630706787
    3. ')' → logprob: -3.3541581630706787
    4. '\n' → logprob: -3.7291581630706787
    5. '[i' → logprob: -4.229158401489258
    6. '
' → logprob: -4.479158401489258
    7. ']' → logprob: -4.979158401489258
    8. '[
' → logprob: -5.354158401489258
    9. ' ' → logprob: -5.479158401489258
    10. '#' → logprob: -6.104158401489258

Token 158: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.694486677646637
    2. ' =' → logprob: -0.694486677646637
    3. '_' → logprob: -7.319486618041992
    4. '[' → logprob: -7.819486618041992
    5. '=[' → logprob: -9.569486618041992
    6. '=[]' → logprob: -9.819486618041992
    7. 's' → logprob: -10.444486618041992
    8. ' =[' → logprob: -10.569486618041992
    9. '[:]' → logprob: -11.069486618041992
    10. '_=' → logprob: -11.694486618041992

Token 159: ' (' (ID: 350)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3164592981338501
    2. ' dp' → logprob: -1.31645929813385
    3. '[' → logprob: -6.1914591789245605
    4. ' [' → logprob: -7.5664591789245605
    5. '[]' → logprob: -8.566459655761719
    6. '(dp' → logprob: -8.941459655761719
    7. ' list' → logprob: -9.816459655761719
    8. ' []' → logprob: -9.816459655761719
    9. '[len' → logprob: -10.066459655761719
    10. 'list' → logprob: -10.316459655761719

Token 160: 'x' (ID: 87)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02933499962091446
    2. ' dp' → logprob: -3.7793350219726562
    3. 'max' → logprob: -6.529335021972656
    4. '[i' → logprob: -7.154335021972656
    5. 'min' → logprob: -7.654335021972656
    6. 'len' → logprob: -7.904335021972656
    7. 'i' → logprob: -8.029335021972656
    8. 'x' → logprob: -8.154335021972656
    9. '(dp' → logprob: -8.404335021972656
    10. 'str' → logprob: -8.529335021972656

Token 161: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.054605890065431595
    2. 'for' → logprob: -3.3046059608459473
    3. '[' → logprob: -4.304605960845947
    4. '[-' → logprob: -6.179605960845947
    5. '[i' → logprob: -8.179605484008789
    6. '[::-' → logprob: -8.804605484008789
    7. '+' → logprob: -9.304605484008789
    8. ' ' → logprob: -9.679605484008789
    9. ')' → logprob: -10.179605484008789
    10. ',' → logprob: -10.304605484008789

Token 162: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.045646343380212784
    2. ' x' → logprob: -3.1706464290618896
    3. 'row' → logprob: -6.7956461906433105
    4. ' row' → logprob: -7.2956461906433105
    5. 'dp' → logprob: -7.4206461906433105
    6. ' dp' → logprob: -9.295646667480469
    7. 'lst' → logprob: -10.170646667480469
    8. 'sub' → logprob: -10.295646667480469
    9. 'arr' → logprob: -10.295646667480469
    10. ' sub' → logprob: -10.420646667480469

Token 163: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3879271447658539
    2. ' in' → logprob: -1.1379271745681763
    3. 'x' → logprob: -8.262927055358887
    4. ' ' → logprob: -8.512927055358887
    5. 's' → logprob: -9.012927055358887
    6. '  ' → logprob: -9.637927055358887
    7. ' x' → logprob: -9.762927055358887
    8. 'n' → logprob: -9.762927055358887
    9. ',' → logprob: -9.887927055358887
    10. 'inx' → logprob: -10.637927055358887

Token 164: ' P' (ID: 398)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07940864562988281
    2. ' dp' → logprob: -2.579408645629883
    3. ' range' → logprob: -8.704408645629883
    4. 'range' → logprob: -9.079408645629883
    5. ' reversed' → logprob: -9.579408645629883
    6. 're' → logprob: -9.829408645629883
    7. '[' → logprob: -10.704408645629883
    8. '(dp' → logprob: -10.829408645629883
    9. ' answers' → logprob: -11.204408645629883
    10. 'answers' → logprob: -11.454408645629883

Token 165: '[:-' (ID: 63556)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026803655549883842
    2. 'if' → logprob: -4.151803493499756
    3. ' if' → logprob: -4.776803493499756
    4. ' )' → logprob: -6.401803493499756
    5. 'in' → logprob: -8.276803970336914
    6. '[::-' → logprob: -9.276803970336914
    7. ']' → logprob: -9.526803970336914
    8. ' in' → logprob: -9.776803970336914
    9. '])' → logprob: -10.276803970336914
    10. ' ' → logprob: -10.526803970336914

Token 166: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.8411524891853333
    2. '1' → logprob: -0.9661524891853333
    3. '(' → logprob: -2.2161524295806885
    4. '(N' → logprob: -3.4661524295806885
    5. 'dx' → logprob: -3.5911524295806885
    6. '(dx' → logprob: -4.591152667999268
    7. 'len' → logprob: -5.966152667999268
    8. '(i' → logprob: -5.966152667999268
    9. 'i' → logprob: -6.716152667999268
    10. ' (' → logprob: -6.966152667999268

Token 167: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.5909641981124878
    2. ')' → logprob: -0.8409641981124878
    3. ']' → logprob: -5.215964317321777
    4. 'if' → logprob: -5.465964317321777
    5. ' if' → logprob: -5.840964317321777
    6. ' )' → logprob: -6.840964317321777
    7. ' ])' → logprob: -7.340964317321777
    8. ')]' → logprob: -8.465964317321777
    9. ')])' → logprob: -8.965964317321777
    10. '))' → logprob: -9.340964317321777

Token 168: 'print' (ID: 1598)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3133779764175415
    2. 'print' → logprob: -1.3133779764175415
    3. ' for' → logprob: -9.18837833404541
    4. '
' → logprob: -11.93837833404541
    5. 'import' → logprob: -13.43837833404541
    6. '<|end|>' → logprob: -13.81337833404541
    7. '```' → logprob: -13.93837833404541
    8. 'while' → logprob: -13.93837833404541
    9. ' print' → logprob: -14.06337833404541
    10. '#print' → logprob: -14.68837833404541

Token 169: '('\' (ID: 24345)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.3437524735927582
    2. '(' → logprob: -1.3437525033950806
    3. '()' → logprob: -3.593752384185791
    4. '(next' → logprob: -7.218752384185791
    5. '(*(' → logprob: -7.218752384185791
    6. '('' → logprob: -7.593752384185791
    7. '(*)' → logprob: -8.96875286102295
    8. '("("' → logprob: -9.34375286102295
    9. '(
' → logprob: -9.96875286102295
    10. '((' → logprob: -10.09375286102295

Token 170: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.5776860184123507e-06
    2. ''\' → logprob: -14.25000286102295
    3. '\n' → logprob: -14.37500286102295
    4. '
' → logprob: -14.75000286102295
    5. ''' → logprob: -14.75000286102295
    6. 's' → logprob: -15.50000286102295
    7. 'join' → logprob: -16.125001907348633
    8. 'x' → logprob: -16.875001907348633
    9. 't' → logprob: -17.500001907348633
    10. ''.' → logprob: -17.750001907348633

Token 171: ''.' (ID: 6120)
  Prédit: '.join'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.join' → logprob: -0.44561654329299927
    2. '.' → logprob: -1.4456164836883545
    3. 'join' → logprob: -2.6956164836883545
    4. ').' → logprob: -3.3206164836883545
    5. ''.' → logprob: -4.070616722106934
    6. 'print' → logprob: -6.070616722106934
    7. ')' → logprob: -7.570616722106934
    8. '''.' → logprob: -8.445616722106934
    9. '".' → logprob: -9.070616722106934
    10. ' .' → logprob: -10.070616722106934

Token 172: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -4.961759259458631e-06
    2. 'print' → logprob: -12.375004768371582
    3. 'sep' → logprob: -15.000004768371582
    4. ' join' → logprob: -15.375004768371582
    5. '```' → logprob: -17.1250057220459
    6. 'jo' → logprob: -17.7500057220459
    7. '.join' → logprob: -18.0000057220459
    8. 'strip' → logprob: -18.1250057220459
    9. '(join' → logprob: -18.2500057220459
    10. ')' → logprob: -18.3750057220459

Token 173: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.029850218445062637
    2. 'map' → logprob: -3.5298502445220947
    3. '(str' → logprob: -9.279850006103516
    4. 'str' → logprob: -12.904850006103516
    5. ' map' → logprob: -13.154850006103516
    6. 'answers' → logprob: -14.029850006103516
    7. '(' → logprob: -14.529850006103516
    8. '(list' → logprob: -15.029850006103516
    9. ',map' → logprob: -15.279850006103516
    10. '	map' → logprob: -16.654850006103516

Token 174: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -2.8087270038668066e-05
    2. 'str' → logprob: -10.500027656555176
    3. '(' → logprob: -15.875027656555176
    4. '=str' → logprob: -16.250028610229492
    5. '
' → logprob: -16.625028610229492
    6. '	str' → logprob: -17.000028610229492
    7. '[str' → logprob: -17.250028610229492
    8. ' str' → logprob: -17.250028610229492
    9. ',str' → logprob: -17.375028610229492
    10. ')' → logprob: -17.625028610229492

Token 175: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16081055998802185
    2. ',' → logprob: -1.9108105897903442
    3. 'answers' → logprob: -7.785810470581055
    4. ' ,' → logprob: -9.785810470581055
    5. '(P' → logprob: -10.410810470581055
    6. '))' → logprob: -10.910810470581055
    7. ' (' → logprob: -11.035810470581055
    8. ')' → logprob: -11.160810470581055
    9. '),' → logprob: -11.910810470581055
    10. ',(' → logprob: -12.285810470581055

Token 176: ' answers' (ID: 14716)
  Prédit: 'answers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answers' → logprob: -0.004621661268174648
    2. ' answers' → logprob: -5.379621505737305
    3. 'list' → logprob: -14.379621505737305
    4. '(' → logprob: -14.879621505737305
    5. 'Answers' → logprob: -15.629621505737305
    6. '.answers' → logprob: -15.629621505737305
    7. 'questions' → logprob: -16.879621505737305
    8. '答案' → logprob: -17.254621505737305
    9. '_answers' → logprob: -17.254621505737305
    10. 'answer' → logprob: -17.379621505737305

Token 177: ')))' (ID: 15975)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06201888248324394
    2. ')))' → logprob: -2.812018871307373
    3. ')' → logprob: -9.937019348144531
    4. '))
' → logprob: -13.562019348144531
    5. '))))' → logprob: -13.687019348144531
    6. ')))
' → logprob: -15.937019348144531
    7. '}))' → logprob: -16.43701934814453
    8. '()))' → logprob: -16.68701934814453
    9. ')));' → logprob: -17.06201934814453
    10. ' ))' → logprob: -17.06201934814453


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 175
Tokens correctement prédits (1ère position, stricte): 60
Tokens correctement prédits (1ère position, avec adaptation): 63
Tokens correctement prédits (top 10): 129
Précision stricte (1ère position): 34.29%
Précision adaptée (1ère position): 36.00%
Précision (top 10): 73.71%
================================================================================
