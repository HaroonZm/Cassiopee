================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
#!usr/bin/env python3
from collections import defaultdict, deque
from heapq import heappush, heappop
from itertools import permutations, accumulate
import sys
import math
import bisect
def LI(): return [int(x) for x in sys.stdin.readline().split()]
def I(): return int(sys.stdin.readline())
def LS():return [list(x) for x in sys.stdin.readline().split()]
def S():
    res = list(sys.stdin.readline())
    if res[-1] == "\n":
        return res[:-1]
    return res
def IR(n):
    return [I() for i in range(n)]
def LIR(n):
    return [LI() for i in range(n)]
def SR(n):
    return [S() for i in range(n)]
def LSR(n):
    return [LS() for i in range(n)]

sys.setrecursionlimit(1000000)
mod = 1000000007

def solve():
    def f(a, b):
        return max(a, b) if s[abs(a-b)-1] == "1" else min(a,b)
    n = I()
    s = S()
    # print(s)
    p = LI()
    dp = [[0 if j else p[i] for j in range(n+1)] for i in range(1 << n)]
    maxn = 1 << n
    for j in range(n):
        j1 = 1 << j
        for i in range(1 << n):
            if i + j1 >= maxn:
                # print(i+j1-n,i,j)
                dp[i][j+1] = f(dp[i][j],dp[i+j1-maxn][j])
            else:
                dp[i][j+1] = f(dp[i][j],dp[i+j1][j])
    # print(dp[0][0],dp[1][0],f(dp[0][0],dp[1][0]))
    # print(dp)
    for i in range(1 << n):
        print(dp[i][-1])
        # pass
    return

#Solve
if __name__ == "__main__":
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#!' (ID: 18666)
  → Token d'amorce (pas de prédiction)

Token 1: 'usr' (ID: 15943)
  → Token d'amorce (pas de prédiction)

Token 2: '/bin' (ID: 20950)
  → Token d'amorce (pas de prédiction)

Token 3: '/env' (ID: 34630)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.0010356683051213622
    2. '/bin' → logprob: -7.376035690307617
    3. '/python' → logprob: -8.251035690307617
    4. '/env' → logprob: -9.126035690307617
    5. '/bash' → logprob: -11.126035690307617
    6. '/b' → logprob: -11.751035690307617
    7. '/usr' → logprob: -11.751035690307617
    8. '#!/' → logprob: -12.626035690307617
    9. '/dev' → logprob: -13.376035690307617
    10. '/n' → logprob: -13.751035690307617

Token 4: ' python' (ID: 22752)
  Prédit: ' python'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' python' → logprob: -0.48939481377601624
    2. '/python' → logprob: -1.6143947839736938
    3. 'python' → logprob: -1.8643947839736938
    4. '/' → logprob: -3.9893949031829834
    5. ' ' → logprob: -4.364394664764404
    6. '+' → logprob: -7.989394664764404
    7. ' bash' → logprob: -8.489395141601562
    8. 'b' → logprob: -8.739395141601562
    9. 'p' → logprob: -8.739395141601562
    10. ' /' → logprob: -8.739395141601562

Token 5: '3' (ID: 18)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7999610304832458
    2. '+' → logprob: -1.2999610900878906
    3. '-' → logprob: -2.1749610900878906
    4. '>' → logprob: -2.9249610900878906
    5. '\' → logprob: -3.5499610900878906
    6. '```' → logprob: -3.6749610900878906
    7. '#!/' → logprob: -3.9249610900878906
    8. '!' → logprob: -4.924961090087891
    9. '﻿' → logprob: -5.174961090087891
    10. '_' → logprob: -5.424961090087891

Token 6: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.13486787676811218
    2. '\n' → logprob: -3.3848679065704346
    3. '```' → logprob: -3.5098679065704346
    4. '\' → logprob: -3.7598679065704346
    5. '#!/' → logprob: -4.3848676681518555
    6. '>' → logprob: -5.2598676681518555
    7. '-' → logprob: -5.2598676681518555
    8. '!' → logprob: -6.3848676681518555
    9. '<|end|>' → logprob: -6.3848676681518555
    10. '#!' → logprob: -6.3848676681518555

Token 7: 'from' (ID: 2845)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4706272780895233
    2. '#!/' → logprob: -1.9706273078918457
    3. '```' → logprob: -2.4706273078918457
    4. '>' → logprob: -3.2206273078918457
    5. '-' → logprob: -3.7206273078918457
    6. '\' → logprob: -3.9706273078918457
    7. '!' → logprob: -3.9706273078918457
    8. '#!' → logprob: -4.095627307891846
    9. '/' → logprob: -4.845627307891846
    10. '/bin' → logprob: -5.470627307891846

Token 8: ' collections' (ID: 22690)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17347192764282227
    2. ' os' → logprob: -1.9234719276428223
    3. ' import' → logprob: -5.173471927642822
    4. ' sys' → logprob: -6.048471927642822
    5. ' python' → logprob: -6.048471927642822
    6. ' math' → logprob: -7.423471927642822
    7. ' collections' → logprob: -7.423471927642822
    8. ' space' → logprob: -7.798471927642822
    9. ' functools' → logprob: -8.548471450805664
    10. ' subprocess' → logprob: -9.173471450805664

Token 9: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.2893039286136627
    2. 'import' → logprob: -1.4143038988113403
    3. '.' → logprob: -4.914303779602051
    4. '.Counter' → logprob: -8.28930377960205
    5. '```' → logprob: -8.66430377960205
    6. '.import' → logprob: -9.03930377960205
    7. '_import' → logprob: -9.78930377960205
    8. '_' → logprob: -9.78930377960205
    9. '<|end|>' → logprob: -10.53930377960205
    10. ' defaultdict' → logprob: -10.78930377960205

Token 10: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.017119018360972404
    2. ' deque' → logprob: -4.39211893081665
    3. ' Counter' → logprob: -5.89211893081665
    4. 'deque' → logprob: -7.76711893081665
    5. ' abc' → logprob: -8.142119407653809
    6. ' collections' → logprob: -8.267119407653809
    7. 'default' → logprob: -8.392119407653809
    8. ' ' → logprob: -8.517119407653809
    9. ' counter' → logprob: -8.642119407653809
    10. ' default' → logprob: -8.892119407653809

Token 11: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34070733189582825
    2. '
' → logprob: -2.715707302093506
    3. '' → logprob: -2.715707302093506
    4. ' 
' → logprob: -3.340707302093506
    5. ' 

' → logprob: -3.465707302093506
    6. '

' → logprob: -3.590707302093506
    7. '```' → logprob: -4.215707302093506
    8. '<|end|>' → logprob: -4.215707302093506
    9. '\' → logprob: -4.965707302093506
    10. '  
' → logprob: -5.840707302093506

Token 12: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.7826104164123535
    2. ' Counter' → logprob: -1.4076104164123535
    3. 'deque' → logprob: -1.4076104164123535
    4. 'Counter' → logprob: -3.4076104164123535
    5. ' Ordered' → logprob: -4.1576104164123535
    6. 'Ordered' → logprob: -6.0326104164123535
    7. 'named' → logprob: -6.9076104164123535
    8. ' named' → logprob: -6.9076104164123535
    9. ' abc' → logprob: -9.782609939575195
    10. ' counter' → logprob: -10.782609939575195

Token 13: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1439705193042755
    2. '

' → logprob: -2.143970489501953
    3. '
' → logprob: -4.893970489501953
    4. '' → logprob: -6.268970489501953
    5. ' 

' → logprob: -6.518970489501953
    6. '```' → logprob: -6.768970489501953
    7. '<|end|>' → logprob: -7.018970489501953
    8. '


' → logprob: -7.143970489501953
    9. '\n' → logprob: -7.143970489501953
    10. 'import' → logprob: -7.643970489501953

Token 14: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.2834740877151489
    2. '
' → logprob: -1.533474087715149
    3. '<|end|>' → logprob: -5.033473968505859
    4. ' 

' → logprob: -5.158473968505859
    5. '' → logprob: -5.408473968505859
    6. 'd' → logprob: -6.033473968505859
    7. '```' → logprob: -6.158473968505859
    8. 'import' → logprob: -6.158473968505859
    9. '
' → logprob: -6.533473968505859
    10. '\n' → logprob: -6.783473968505859

Token 15: ' heap' (ID: 37237)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.0880843847990036
    2. ' typing' → logprob: -3.7130844593048096
    3. ' sys' → logprob: -3.8380844593048096
    4. ' ' → logprob: -3.9630844593048096
    5. ' heap' → logprob: -5.4630842208862305
    6. ' collections' → logprob: -5.4630842208862305
    7. ' math' → logprob: -5.4630842208862305
    8. ' os' → logprob: -5.9630842208862305
    9. ' functools' → logprob: -7.0880842208862305
    10. ' datetime' → logprob: -7.2130842208862305

Token 16: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.128163257315464e-07
    2. 'import' → logprob: -16.125
    3. 'queue' → logprob: -16.625
    4. 'dict' → logprob: -19.0
    5. 'a' → logprob: -19.25
    6. 's' → logprob: -19.375
    7. 'n' → logprob: -19.5
    8. 'space' → logprob: -19.5
    9. ' queue' → logprob: -19.5
    10. 'i' → logprob: -19.625

Token 17: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0017641937592998147
    2. 'import' → logprob: -6.376764297485352
    3. ' ' → logprob: -9.751764297485352
    4. '	import' → logprob: -13.501764297485352
    5. '_import' → logprob: -14.251764297485352
    6. '<|end|>' → logprob: -14.376764297485352
    7. ' imports' → logprob: -14.501764297485352
    8. ' importar' → logprob: -16.00176429748535
    9. ' Import' → logprob: -16.50176429748535
    10. ' impor' → logprob: -16.50176429748535

Token 18: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.013486186042428017
    2. 'he' → logprob: -4.513486385345459
    3. ' heap' → logprob: -6.388486385345459
    4. ' ' → logprob: -8.0134859085083
    5. 'heap' → logprob: -8.5134859085083
    6. ' n' → logprob: -9.0134859085083
    7. 'n' → logprob: -11.0134859085083
    8. '.he' → logprob: -11.1384859085083
    9. ' merge' → logprob: -11.2634859085083
    10. '```' → logprob: -11.2634859085083

Token 19: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00862627848982811
    2. 'ap' → logprob: -4.758626461029053
    3. 'a' → logprob: -11.383625984191895
    4. 'aq' → logprob: -15.758625984191895
    5. 'ап' → logprob: -16.25862693786621
    6. 'appen' → logprob: -17.50862693786621
    7. 'aps' → logprob: -17.88362693786621
    8. 'apl' → logprob: -17.88362693786621
    9. '   ' → logprob: -18.63362693786621
    10. 'q' → logprob: -18.63362693786621

Token 20: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0005532711511477828
    2. 'op' → logprob: -7.500553131103516
    3. 'u' → logprob: -16.125553131103516
    4. 'us' → logprob: -16.375553131103516
    5. 'ut' → logprob: -16.750553131103516
    6. '```' → logprob: -18.000553131103516
    7. 'push' → logprob: -18.375553131103516
    8. 'o' → logprob: -18.500553131103516
    9. 'ushed' → logprob: -18.875553131103516
    10. 'USH' → logprob: -19.000553131103516

Token 21: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.026517411693930626
    2. ',' → logprob: -4.526517391204834
    3. '<|end|>' → logprob: -4.526517391204834
    4. ' he' → logprob: -6.526517391204834
    5. 'he' → logprob: -6.776517391204834
    6. ' ,' → logprob: -6.901517391204834
    7. '_' → logprob: -8.651517868041992
    8. 'import' → logprob: -8.651517868041992
    9. '<|end|>' → logprob: -9.026517868041992
    10. ' 
' → logprob: -9.276517868041992

Token 22: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.38692429661750793
    2. ' he' → logprob: -1.1369242668151855
    3. 'heap' → logprob: -10.761924743652344
    4. ' ' → logprob: -11.636924743652344
    5. '.he' → logprob: -12.011924743652344
    6. ' heap' → logprob: -12.761924743652344
    7. 'hev' → logprob: -13.386924743652344
    8. '_he' → logprob: -13.386924743652344
    9. 'h' → logprob: -13.574424743652344
    10. '```' → logprob: -13.574424743652344

Token 23: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0015042672166600823
    2. 'ap' → logprob: -6.501504421234131
    3. 'a' → logprob: -13.751503944396973
    4. ' app' → logprob: -15.751503944396973
    5. '_app' → logprob: -16.00150489807129
    6. 'appen' → logprob: -16.00150489807129
    7. 'ап' → logprob: -16.12650489807129
    8. 'appt' → logprob: -16.25150489807129
    9. '	app' → logprob: -16.25150489807129
    10. '.app' → logprob: -17.00150489807129

Token 24: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.06199188902974129
    2. 'ush' → logprob: -2.8119919300079346
    3. 'o' → logprob: -10.936991691589355
    4. 'opp' → logprob: -12.436991691589355
    5. 'p' → logprob: -14.561991691589355
    6. 'opleft' → logprob: -14.686991691589355
    7. '   ' → logprob: -15.311991691589355
    8. '```' → logprob: -15.686991691589355
    9. 'us' → logprob: -15.936991691589355
    10. '

' → logprob: -15.936991691589355

Token 25: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6423999071121216
    2. '

' → logprob: -0.7673999071121216
    3. '
' → logprob: -6.267399787902832
    4. ' 

' → logprob: -6.517399787902832
    5. '' → logprob: -6.767399787902832
    6. '```' → logprob: -7.017399787902832
    7. 'def' → logprob: -7.267399787902832
    8. '<|end|>' → logprob: -7.392399787902832
    9. '\n' → logprob: -7.517399787902832
    10. '


' → logprob: -7.642399787902832

Token 26: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5922309756278992
    2. '

' → logprob: -0.8422309756278992
    3. '' → logprob: -5.092230796813965
    4. 'import' → logprob: -5.967230796813965
    5. 'def' → logprob: -6.342230796813965
    6. ' 

' → logprob: -6.967230796813965
    7. '```' → logprob: -6.967230796813965
    8. '


' → logprob: -7.092230796813965
    9. 'd' → logprob: -7.467230796813965
    10. '
' → logprob: -7.592230796813965

Token 27: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.13284988701343536
    2. ' math' → logprob: -2.757849931716919
    3. ' typing' → logprob: -3.132849931716919
    4. ' sys' → logprob: -4.25784969329834
    5. ' functools' → logprob: -6.75784969329834
    6. 'math' → logprob: -7.50784969329834
    7. ' queue' → logprob: -7.88284969329834
    8. ' collections' → logprob: -8.50784969329834
    9. 'typing' → logprob: -8.50784969329834
    10. ' operator' → logprob: -8.88284969329834

Token 28: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0664648488163948
    2. 'import' → logprob: -2.816464900970459
    3. '.' → logprob: -5.691464900970459
    4. ' .' → logprob: -7.441464900970459
    5. '.import' → logprob: -8.4414644241333
    6. '	import' → logprob: -9.1914644241333
    7. ' itertools' → logprob: -9.9414644241333
    8. ' ' → logprob: -10.5664644241333
    9. '.im' → logprob: -10.8164644241333
    10. 'ertools' → logprob: -10.9414644241333

Token 29: ' permutations' (ID: 174595)
  Prédit: ' permutations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.6673261523246765
    2. ' count' → logprob: -1.6673262119293213
    3. ' combinations' → logprob: -2.4173262119293213
    4. ' group' → logprob: -2.5423262119293213
    5. 'count' → logprob: -2.9173262119293213
    6. ' accumulate' → logprob: -3.4173262119293213
    7. 'com' → logprob: -4.542325973510742
    8. ' chain' → logprob: -4.542325973510742
    9. ' cycle' → logprob: -5.292325973510742
    10. ' product' → logprob: -5.292325973510742

Token 30: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6248627305030823
    2. '

' → logprob: -0.8748627305030823
    3. 'import' → logprob: -4.6248626708984375
    4. ' 

' → logprob: -4.9998626708984375
    5. '\n' → logprob: -5.2498626708984375
    6. '' → logprob: -5.4998626708984375
    7. '<|end|>' → logprob: -5.4998626708984375
    8. 'def' → logprob: -5.6248626708984375
    9. 'n' → logprob: -5.7498626708984375
    10. '```' → logprob: -5.8748626708984375

Token 31: ' accumulate' (ID: 74226)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.3721270263195038
    2. 'product' → logprob: -1.4971270561218262
    3. ' combinations' → logprob: -2.997127056121826
    4. ' product' → logprob: -3.372127056121826
    5. 'chain' → logprob: -6.372127056121826
    6. '	com' → logprob: -8.497126579284668
    7. ' chain' → logprob: -8.622126579284668
    8. 'count' → logprob: -8.997126579284668
    9. 'cycle' → logprob: -9.122126579284668
    10. 'group' → logprob: -9.122126579284668

Token 32: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5822646617889404
    2. '

' → logprob: -0.9572646617889404
    3. 'import' → logprob: -3.2072646617889404
    4. '<|end|>' → logprob: -5.2072649002075195
    5. ' 

' → logprob: -5.8322649002075195
    6. '' → logprob: -6.0822649002075195
    7. '#' → logprob: -6.9572649002075195
    8. ' 
' → logprob: -7.2072649002075195
    9. '```' → logprob: -7.2072649002075195
    10. '


' → logprob: -7.2072649002075195

Token 33: 'import' (ID: 561)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.8630096316337585
    2. '
' → logprob: -1.1130096912384033
    3. '<|end|>' → logprob: -1.9880096912384033
    4. 'import' → logprob: -2.4880096912384033
    5. ' 

' → logprob: -4.238009452819824
    6. ' 
' → logprob: -6.113009452819824
    7. '```' → logprob: -6.238009452819824
    8. 'def' → logprob: -6.613009452819824
    9. 'a' → logprob: -6.738009452819824
    10. '\n' → logprob: -6.738009452819824

Token 34: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.7262694239616394
    2. ' math' → logprob: -0.8512694239616394
    3. ' ' → logprob: -3.476269483566284
    4. ' os' → logprob: -3.601269483566284
    5. ' itertools' → logprob: -3.601269483566284
    6. ' collections' → logprob: -6.226269245147705
    7. ' functools' → logprob: -7.101269245147705
    8. ' ' → logprob: -7.976269245147705
    9. ' space' → logprob: -8.351269721984863
    10. ' json' → logprob: -9.101269721984863

Token 35: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06201384216547012
    2. '

' → logprob: -2.937013864517212
    3. '' → logprob: -5.937013626098633
    4. '\n' → logprob: -7.062013626098633
    5. '
' → logprob: -7.062013626098633
    6. '#' → logprob: -7.687013626098633
    7. '<|end|>' → logprob: -7.687013626098633
    8. ' 
' → logprob: -8.062013626098633
    9. 'import' → logprob: -8.062013626098633
    10. 'def' → logprob: -8.687013626098633

Token 37: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.027318347245454788
    2. ' ' → logprob: -4.027318477630615
    3. ' math' → logprob: -5.277318477630615
    4. ' space' → logprob: -6.152318477630615
    5. ' o' → logprob: -7.402318477630615
    6. ' collections' → logprob: -7.902318477630615
    7. ' itertools' → logprob: -7.902318477630615
    8. ' ​' → logprob: -9.527318000793457
    9. ' ‌' → logprob: -9.902318000793457
    10. ' ' → logprob: -10.027318000793457

Token 38: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.46458688378334045
    2. '

' → logprob: -1.089586853981018
    3. '' → logprob: -4.0895867347717285
    4. '<|end|>' → logprob: -5.2145867347717285
    5. '
' → logprob: -5.4645867347717285
    6. '#' → logprob: -6.4645867347717285
    7. ' 

' → logprob: -6.5895867347717285
    8. '\n' → logprob: -6.5895867347717285
    9. 'import' → logprob: -7.0895867347717285
    10. '


' → logprob: -7.5895867347717285

Token 39: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5838872790336609
    2. '

' → logprob: -0.8338872790336609
    3. '<|end|>' → logprob: -6.083887100219727
    4. '' → logprob: -6.833887100219727
    5. ' 

' → logprob: -7.083887100219727
    6. '
' → logprob: -7.083887100219727
    7. '#' → logprob: -7.333887100219727
    8. 'import' → logprob: -7.833887100219727
    9. '\n' → logprob: -7.958887100219727
    10. ' 
' → logprob: -8.208887100219727

Token 40: ' bis' (ID: 7204)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.024968137964606285
    2. ' bis' → logprob: -4.774968147277832
    3. ' itertools' → logprob: -5.649968147277832
    4. ' collections' → logprob: -5.899968147277832
    5. ' functools' → logprob: -6.024968147277832
    6. ' random' → logprob: -6.024968147277832
    7. ' operator' → logprob: -6.274968147277832
    8. 'os' → logprob: -6.524968147277832
    9. ' heap' → logprob: -7.024968147277832
    10. ' o' → logprob: -8.399968147277832

Token 41: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -8.41866585687967e-06
    2. 'e' → logprob: -11.875008583068848
    3. 'ec' → logprob: -14.375008583068848
    4. 't' → logprob: -15.000008583068848
    5. 'ected' → logprob: -15.750008583068848
    6. 'ectl' → logprob: -16.62500762939453
    7. 'ector' → logprob: -16.62500762939453
    8. 'ection' → logprob: -16.87500762939453
    9. '```' → logprob: -17.00000762939453
    10. 'ects' → logprob: -17.62500762939453

Token 42: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.3986160159111023
    2. '
' → logprob: -1.148616075515747
    3. '' → logprob: -5.398615837097168
    4. '#' → logprob: -6.148615837097168
    5. '
' → logprob: -6.773615837097168
    6. '\n' → logprob: -6.898615837097168
    7. '


' → logprob: -7.148615837097168
    8. '<|end|>' → logprob: -7.398615837097168
    9. ' 

' → logprob: -7.523615837097168
    10. '```' → logprob: -9.023615837097168

Token 43: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4151730537414551
    2. '

' → logprob: -1.290173053741455
    3. ' 

' → logprob: -4.040173053741455
    4. '' → logprob: -4.165173053741455
    5. ' 
' → logprob: -4.540173053741455
    6. '\n' → logprob: -5.415173053741455
    7. '#' → logprob: -5.540173053741455
    8. '<|end|>' → logprob: -5.915173053741455
    9. '
' → logprob: -6.040173053741455
    10. 'n' → logprob: -6.915173053741455

Token 44: ' LI' (ID: 14875)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0008162968442775309
    2. '_' → logprob: -7.625816345214844
    3. ' s' → logprob: -9.250816345214844
    4. ' space' → logprob: -10.125816345214844
    5. '<|end|>' → logprob: -10.125816345214844
    6. ' _' → logprob: -11.000816345214844
    7. ' main' → logprob: -11.125816345214844
    8. '_space' → logprob: -11.375816345214844
    9. ' ```' → logprob: -11.500816345214844
    10. ' a' → logprob: -11.625816345214844

Token 45: '():' (ID: 9442)
  Prédit: 'ST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ST' → logprob: -0.4663839340209961
    2. 'st' → logprob: -1.466383934020996
    3. 'N' → logprob: -2.216383934020996
    4. '():' → logprob: -3.966383934020996
    5. 'St' → logprob: -5.466383934020996
    6. 'T' → logprob: -6.341383934020996
    7. 'n' → logprob: -6.591383934020996
    8. 'S' → logprob: -6.591383934020996
    9. 'NT' → logprob: -6.716383934020996
    10. '()' → logprob: -7.341383934020996

Token 46: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3890988230705261
    2. ' ' → logprob: -1.514098882675171
    3. ' []' → logprob: -2.514098882675171
    4. ' list' → logprob: -4.639098644256592
    5. ' map' → logprob: -5.389098644256592
    6. ' input' → logprob: -6.139098644256592
    7. 'return' → logprob: -6.639098644256592
    8. ' int' → logprob: -7.264098644256592
    9. '[]' → logprob: -7.264098644256592
    10. ' n' → logprob: -7.389098644256592

Token 47: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.25468751788139343
    2. ' list' → logprob: -1.5046875476837158
    3. 'map' → logprob: -6.129687309265137
    4. ' map' → logprob: -7.879687309265137
    5. 'ist' → logprob: -9.504687309265137
    6. 'int' → logprob: -10.379687309265137
    7. '[' → logprob: -10.754687309265137
    8. '[list' → logprob: -11.254687309265137
    9. 'lis' → logprob: -11.379687309265137
    10. 'li' → logprob: -11.379687309265137

Token 48: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00012797261297237128
    2. 'i' → logprob: -9.125127792358398
    3. 'in' → logprob: -11.000127792358398
    4. '*' → logprob: -13.875127792358398
    5. ' int' → logprob: -14.250127792358398
    6. ']int' → logprob: -15.000127792358398
    7. '0' → logprob: -15.375127792358398
    8. '(int' → logprob: -16.8751277923584
    9. ']' → logprob: -17.2501277923584
    10. 'inti' → logprob: -17.6251277923584

Token 49: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.10231412947177887
    2. '(' → logprob: -2.3523142337799072
    3. '(i' → logprob: -6.352313995361328
    4. '(s' → logprob: -8.727313995361328
    5. '(input' → logprob: -9.102313995361328
    6. '()]' → logprob: -10.477313995361328
    7. ']' → logprob: -11.227313995361328
    8. '(
' → logprob: -11.477313995361328
    9. '(a' → logprob: -11.852313995361328
    10. '(sys' → logprob: -12.227313995361328

Token 50: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003980685491114855
    2. '(' → logprob: -6.37898063659668
    3. '(x' → logprob: -6.75398063659668
    4. 'for' → logprob: -7.75398063659668
    5. ' for' → logprob: -7.87898063659668
    6. ' )' → logprob: -9.62898063659668
    7. ')]' → logprob: -9.75398063659668
    8. '())' → logprob: -10.00398063659668
    9. '(i' → logprob: -10.62898063659668
    10. '()' → logprob: -11.00398063659668

Token 51: ' for' (ID: 395)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10818609595298767
    2. ' for' → logprob: -3.3581860065460205
    3. 'for' → logprob: -3.3581860065460205
    4. '(x' → logprob: -3.4831860065460205
    5. '(s' → logprob: -7.8581862449646
    6. ']' → logprob: -7.9831862449646
    7. '(i' → logprob: -8.108185768127441
    8. '(sys' → logprob: -8.233185768127441
    9. '(line' → logprob: -8.858185768127441
    10. '()]' → logprob: -8.983185768127441

Token 52: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.017487255856394768
    2. 'input' → logprob: -4.142487049102783
    3. ' sys' → logprob: -6.642487049102783
    4. ' x' → logprob: -9.517487525939941
    5. ' ' → logprob: -10.892487525939941
    6. ' raw' → logprob: -10.892487525939941
    7. 'sys' → logprob: -12.017487525939941
    8. '(input' → logprob: -12.142487525939941
    9. '=input' → logprob: -12.392487525939941
    10. ' in' → logprob: -12.642487525939941

Token 53: ' in' (ID: 306)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8446602821350098
    2. 'input' → logprob: -1.4696602821350098
    3. '(input' → logprob: -1.9696602821350098
    4. '=sys' → logprob: -2.9696602821350098
    5. '=input' → logprob: -3.2196602821350098
    6. ' in' → logprob: -3.3446602821350098
    7. ' input' → logprob: -3.4696602821350098
    8. '(sys' → logprob: -3.4696602821350098
    9. ' ' → logprob: -5.71966028213501
    10. ' (' → logprob: -6.46966028213501

Token 54: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7877081632614136
    2. 'sys' → logprob: -1.2877081632614136
    3. ' sys' → logprob: -1.5377081632614136
    4. ' input' → logprob: -2.912708282470703
    5. '=sys' → logprob: -12.912708282470703
    6. '(sys' → logprob: -13.037708282470703
    7. 'in' → logprob: -13.662708282470703
    8. 's' → logprob: -13.662708282470703
    9. ' ' → logprob: -13.787708282470703
    10. '	sys' → logprob: -14.287708282470703

Token 55: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0006696671480312943
    2. '.' → logprob: -7.500669479370117
    3. '.st' → logprob: -9.375669479370117
    4. '.argv' → logprob: -11.000669479370117
    5. '.std' → logprob: -11.750669479370117
    6. '.stdout' → logprob: -12.125669479370117
    7. '.s' → logprob: -14.125669479370117
    8. '.readline' → logprob: -14.500669479370117
    9. '.input' → logprob: -15.500669479370117
    10. 'stdin' → logprob: -15.625669479370117

Token 56: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0009510025265626609
    2. '.' → logprob: -7.125950813293457
    3. '.read' → logprob: -8.875950813293457
    4. '.readlines' → logprob: -12.750950813293457
    5. '.re' → logprob: -13.000950813293457
    6. '.r' → logprob: -14.750950813293457
    7. '.stdin' → logprob: -15.000950813293457
    8. '].' → logprob: -15.250950813293457
    9. ' .' → logprob: -15.250950813293457
    10. '().' → logprob: -15.750950813293457

Token 57: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.32387202978134155
    2. '()]' → logprob: -1.3238720893859863
    3. '()' → logprob: -4.573872089385986
    4. '()].' → logprob: -8.448871612548828
    5. '()][' → logprob: -12.073871612548828
    6. '())' → logprob: -12.573871612548828
    7. '()[' → logprob: -12.698871612548828
    8. ' ()' → logprob: -13.323871612548828
    9. ']()' → logprob: -13.573871612548828
    10. '()-' → logprob: -13.573871612548828

Token 58: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.01220728363841772
    2. 'rstrip' → logprob: -4.512207508087158
    3. 'split' → logprob: -6.762207508087158
    4. 'read' → logprob: -13.63720703125
    5. ' strip' → logprob: -14.13720703125
    6. 'decode' → logprob: -15.13720703125
    7. '(strip' → logprob: -19.26220703125
    8. 'rs' → logprob: -19.51220703125
    9. ' split' → logprob: -19.76220703125
    10. 'rst' → logprob: -20.01220703125

Token 59: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -8.292095299111679e-05
    2. '()' → logprob: -9.875082969665527
    3. '(' → logprob: -10.500082969665527
    4. ']' → logprob: -12.875082969665527
    5. '()]
' → logprob: -14.250082969665527
    6. ']()' → logprob: -15.500082969665527
    7. '('' → logprob: -15.750082969665527
    8. '())' → logprob: -15.875082969665527
    9. '()][' → logprob: -16.37508201599121
    10. '()].' → logprob: -17.25008201599121

Token 60: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08155985921621323
    2. '
' → logprob: -2.581559896469116
    3. '#' → logprob: -7.456559658050537
    4. 'd' → logprob: -7.706559658050537
    5. '' → logprob: -7.831559658050537
    6. '\' → logprob: -8.206560134887695
    7. '

' → logprob: -8.456560134887695
    8. '\n' → logprob: -8.581560134887695
    9. ' 
' → logprob: -9.206560134887695
    10. '
' → logprob: -9.456560134887695

Token 61: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.11542326211929321
    2. 'II' → logprob: -2.6154232025146484
    3. ' I' → logprob: -3.8654232025146484
    4. ' II' → logprob: -4.990423202514648
    5. 'S' → logprob: -6.365423202514648
    6. 'int' → logprob: -6.490423202514648
    7. 'LS' → logprob: -7.490423202514648
    8. 'input' → logprob: -7.490423202514648
    9. 'IS' → logprob: -7.615423202514648
    10. 'IN' → logprob: -7.740423202514648

Token 62: '():' (ID: 9442)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.831085205078125
    2. 'n' → logprob: -0.956085205078125
    3. '():' → logprob: -2.456085205078125
    4. '()' → logprob: -2.706085205078125
    5. 'N' → logprob: -3.831085205078125
    6. 'nit' → logprob: -5.331085205078125
    7. 'np' → logprob: -8.331085205078125
    8. 'NT' → logprob: -8.456085205078125
    9. '(' → logprob: -9.956085205078125
    10. ' nt' → logprob: -10.331085205078125

Token 63: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.056354373693466187
    2. ' int' → logprob: -3.056354284286499
    3. 'return' → logprob: -5.181354522705078
    4. 'int' → logprob: -6.181354522705078
    5. ' ' → logprob: -10.056354522705078
    6. ' retur' → logprob: -12.931354522705078
    7. '=int' → logprob: -13.181354522705078
    8. 'eturn' → logprob: -14.556354522705078
    9. ' ' → logprob: -14.931354522705078
    10. '(int' → logprob: -15.556354522705078

Token 64: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6931592226028442
    2. ' int' → logprob: -0.6931592226028442
    3. ' in' → logprob: -12.068159103393555
    4. 'in' → logprob: -12.693159103393555
    5. 'nt' → logprob: -13.693159103393555
    6. ' ' → logprob: -14.068159103393555
    7. '(int' → logprob: -15.068159103393555
    8. ' i' → logprob: -15.443159103393555
    9. '	int' → logprob: -15.443159103393555
    10. ' nt' → logprob: -15.693159103393555

Token 65: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1008470430970192
    2. '(sys' → logprob: -2.350847005844116
    3. '(input' → logprob: -7.475847244262695
    4. '(int' → logprob: -10.475847244262695
    5. '(
' → logprob: -11.725847244262695
    6. '(system' → logprob: -12.100847244262695
    7. '(s' → logprob: -12.100847244262695
    8. '(x' → logprob: -12.100847244262695
    9. ' (' → logprob: -12.350847244262695
    10. '(System' → logprob: -12.600847244262695

Token 66: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.038352664560079575
    2. '.' → logprob: -3.2883527278900146
    3. '.readline' → logprob: -8.413352966308594
    4. 'stdin' → logprob: -9.913352966308594
    5. '.stdout' → logprob: -11.163352966308594
    6. '.argv' → logprob: -11.538352966308594
    7. '.std' → logprob: -11.788352966308594
    8. '.read' → logprob: -12.788352966308594
    9. '(stdin' → logprob: -13.788352966308594
    10. '.)' → logprob: -13.788352966308594

Token 67: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.010888759046792984
    2. '().' → logprob: -4.760888576507568
    3. '.stdin' → logprob: -7.260888576507568
    4. '()' → logprob: -7.260888576507568
    5. '.' → logprob: -8.385889053344727
    6. '(stdin' → logprob: -8.635889053344727
    7. 'read' → logprob: -8.885889053344727
    8. ')' → logprob: -9.135889053344727
    9. '())' → logprob: -9.260889053344727
    10. 'stdin' → logprob: -9.385889053344727

Token 68: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.26061686873435974
    2. '().' → logprob: -1.5106168985366821
    3. '()' → logprob: -4.760616779327393
    4. ' ())' → logprob: -10.63561725616455
    5. '()]' → logprob: -10.76061725616455
    6. ')' → logprob: -11.01061725616455
    7. '()))' → logprob: -11.38561725616455
    8. '.readline' → logprob: -11.88561725616455
    9. '();)' → logprob: -12.38561725616455
    10. '());' → logprob: -14.01061725616455

Token 69: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4935646653175354
    2. 'd' → logprob: -1.1185646057128906
    3. '
' → logprob: -3.6185646057128906
    4. '\' → logprob: -3.6185646057128906
    5. '\n' → logprob: -5.493564605712891
    6. 'n' → logprob: -6.743564605712891
    7. '#' → logprob: -6.868564605712891
    8. '' → logprob: -6.868564605712891
    9. ' 
' → logprob: -7.743564605712891
    10. 'de' → logprob: -7.868564605712891

Token 70: ' LS' (ID: 60790)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.14566197991371155
    2. 'LS' → logprob: -2.0206620693206787
    3. 'L' → logprob: -6.1456618309021
    4. 'LI' → logprob: -8.145662307739258
    5. 's' → logprob: -9.145662307739258
    6. ' S' → logprob: -9.145662307739258
    7. 'SI' → logprob: -9.145662307739258
    8. 'Ls' → logprob: -10.145662307739258
    9. 'SL' → logprob: -10.270662307739258
    10. ' LS' → logprob: -10.395662307739258

Token 71: '():' (ID: 9442)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.42959505319595337
    2. '():' → logprob: -1.0545949935913086
    3. ' ()' → logprob: -7.679594993591309
    4. '().' → logprob: -8.054594993591309
    5. '()>' → logprob: -10.304594993591309
    6. '()]' → logprob: -10.554594993591309
    7. ' ():' → logprob: -11.554594993591309
    8. '()[' → logprob: -11.679594993591309
    9. '();' → logprob: -12.679594993591309
    10. '(){' → logprob: -12.804594993591309

Token 72: 'return' (ID: 1034)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1142214760184288
    2. 'return' → logprob: -2.2392215728759766
    3. ' sys' → logprob: -7.239221572875977
    4. ' ' → logprob: -8.614221572875977
    5. 'def' → logprob: -9.239221572875977
    6. '()' → logprob: -9.364221572875977
    7. 'sys' → logprob: -9.489221572875977
    8. ' def' → logprob: -10.364221572875977
    9. ')' → logprob: -10.364221572875977
    10. ' lambda' → logprob: -10.489221572875977

Token 73: ' [' (ID: 723)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.10100039094686508
    2. ' [' → logprob: -2.9760003089904785
    3. 'sys' → logprob: -4.1010003089904785
    4. '[' → logprob: -4.2260003089904785
    5. ' list' → logprob: -4.3510003089904785
    6. 'list' → logprob: -7.7260003089904785
    7. '[s' → logprob: -8.726000785827637
    8. ' ' → logprob: -9.101000785827637
    9. '[list' → logprob: -9.226000785827637
    10. ' ' → logprob: -9.601000785827637

Token 74: 'list' (ID: 2641)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -9.65101717156358e-05
    2. 's' → logprob: -9.500096321105957
    3. 'sys' → logprob: -10.875096321105957
    4. ' x' → logprob: -12.875096321105957
    5. 'str' → logprob: -15.875096321105957
    6. 'input' → logprob: -17.500097274780273
    7. '(x' → logprob: -18.250097274780273
    8. 'l' → logprob: -18.625097274780273
    9. 'w' → logprob: -18.625097274780273
    10. ' sys' → logprob: -19.250097274780273

Token 75: '(x' (ID: 4061)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.34219956398010254
    2. '(x' → logprob: -1.3421995639801025
    3. '(map' → logprob: -4.342199325561523
    4. '(' → logprob: -4.467199325561523
    5. '(str' → logprob: -6.092199325561523
    6. '(input' → logprob: -7.092199325561523
    7. '(s' → logprob: -7.217199325561523
    8. 'sys' → logprob: -9.592199325561523
    9. '(system' → logprob: -9.842199325561523
    10. '(line' → logprob: -10.717199325561523

Token 76: ')' (ID: 8)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.00022368213103618473
    2. '(' → logprob: -9.625224113464355
    3. '()' → logprob: -9.750224113464355
    4. '=sys' → logprob: -10.375224113464355
    5. '(s' → logprob: -10.625224113464355
    6. 'sys' → logprob: -11.500224113464355
    7. '(input' → logprob: -11.625224113464355
    8. '())' → logprob: -11.750224113464355
    9. '(system' → logprob: -12.250224113464355
    10. '()]' → logprob: -12.875224113464355

Token 77: ' for' (ID: 395)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.00011522514978423715
    2. '(' → logprob: -9.875115394592285
    3. 'sys' → logprob: -10.125115394592285
    4. '(s' → logprob: -11.250115394592285
    5. '=sys' → logprob: -11.875115394592285
    6. '()' → logprob: -14.000115394592285
    7. '(system' → logprob: -14.250115394592285
    8. ' (' → logprob: -14.625115394592285
    9. '(input' → logprob: -14.750115394592285
    10. '(str' → logprob: -15.375115394592285

Token 78: ' x' (ID: 1215)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.23734056949615479
    2. '(sys' → logprob: -1.6123405694961548
    3. 'sys' → logprob: -4.487340450286865
    4. '=sys' → logprob: -7.612340450286865
    5. '	sys' → logprob: -9.487340927124023
    6. '(' → logprob: -11.237340927124023
    7. '(s' → logprob: -11.862340927124023
    8. ' x' → logprob: -12.362340927124023
    9. ' (' → logprob: -12.487340927124023
    10. '/sys' → logprob: -12.862340927124023

Token 79: ' in' (ID: 306)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.19525474309921265
    2. '()' → logprob: -2.4452548027038574
    3. '(' → logprob: -3.0702548027038574
    4. ' ()' → logprob: -3.5702548027038574
    5. '=sys' → logprob: -4.820254802703857
    6. ' (' → logprob: -5.445254802703857
    7. ' sys' → logprob: -6.445254802703857
    8. ' in' → logprob: -7.195254802703857
    9. 'sys' → logprob: -7.320254802703857
    10. 'in' → logprob: -8.6952543258667

Token 80: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.251956045627594
    2. ' sys' → logprob: -1.5019559860229492
    3. '(sys' → logprob: -11.00195598602295
    4. 'input' → logprob: -13.00195598602295
    5. '	sys' → logprob: -13.00195598602295
    6. '=sys' → logprob: -13.12695598602295
    7. 'str' → logprob: -13.50195598602295
    8. ' ' → logprob: -14.00195598602295
    9. ' input' → logprob: -14.12695598602295
    10. 'map' → logprob: -15.25195598602295

Token 81: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.012111066840589046
    2. '.' → logprob: -5.262111186981201
    3. '.readline' → logprob: -5.387111186981201
    4. '().' → logprob: -6.637111186981201
    5. '(stdin' → logprob: -7.637111186981201
    6. 'stdin' → logprob: -8.137110710144043
    7. '.stdout' → logprob: -9.262110710144043
    8. '._' → logprob: -10.637110710144043
    9. ' .' → logprob: -10.887110710144043
    10. '.std' → logprob: -11.512110710144043

Token 82: '.readline' (ID: 74673)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.30102646350860596
    2. '.readline' → logprob: -2.0510263442993164
    3. '()]' → logprob: -2.4260263442993164
    4. '()' → logprob: -3.1760263442993164
    5. '())' → logprob: -7.676026344299316
    6. '.readlines' → logprob: -8.801026344299316
    7. '.' → logprob: -9.426026344299316
    8. '()][' → logprob: -9.426026344299316
    9. '()].' → logprob: -9.551026344299316
    10. ']' → logprob: -9.801026344299316

Token 83: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.007250695489346981
    2. '()]' → logprob: -5.507250785827637
    3. '()' → logprob: -5.757250785827637
    4. '()].' → logprob: -12.257250785827637
    5. ' ().' → logprob: -14.132250785827637
    6. '().'' → logprob: -14.507250785827637
    7. '()[' → logprob: -14.507250785827637
    8. '()][' → logprob: -15.507250785827637
    9. '()\' → logprob: -15.757250785827637
    10. ' ()' → logprob: -15.757250785827637

Token 84: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.06600741297006607
    2. 'rstrip' → logprob: -3.316007375717163
    3. 'split' → logprob: -4.066007614135742
    4. 'read' → logprob: -4.566007614135742
    5. 'decode' → logprob: -10.566007614135742
    6. ' strip' → logprob: -12.191007614135742
    7. 'str' → logprob: -13.066007614135742
    8. ' split' → logprob: -16.566007614135742
    9. 'rs' → logprob: -16.816007614135742
    10. ' readline' → logprob: -17.191007614135742

Token 85: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0001249925117008388
    2. '()' → logprob: -9.25012493133545
    3. '(' → logprob: -11.00012493133545
    4. ']' → logprob: -11.50012493133545
    5. ']()' → logprob: -13.87512493133545
    6. '()]
' → logprob: -15.00012493133545
    7. ')]' → logprob: -15.50012493133545
    8. '())' → logprob: -15.87512493133545
    9. '()][' → logprob: -16.125125885009766
    10. ' ()' → logprob: -16.750125885009766

Token 86: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00823511928319931
    2. '()' → logprob: -5.383234977722168
    3. 'd' → logprob: -7.008234977722168
    4. '\' → logprob: -7.133234977722168
    5. '()
' → logprob: -7.758234977722168
    6. '
' → logprob: -8.133234977722168
    7. '#' → logprob: -8.258234977722168
    8. '(' → logprob: -8.758234977722168
    9. '```' → logprob: -8.883234977722168
    10. ')' → logprob: -9.133234977722168

Token 87: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.020884955301880836
    2. ' S' → logprob: -4.020884990692139
    3. 'L' → logprob: -6.020884990692139
    4. '()' → logprob: -9.14588451385498
    5. ' L' → logprob: -9.52088451385498
    6. 'LS' → logprob: -9.52088451385498
    7. 's' → logprob: -11.02088451385498
    8. ' ' → logprob: -11.64588451385498
    9. 'I' → logprob: -11.77088451385498
    10. 'A' → logprob: -12.77088451385498

Token 88: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0022078317124396563
    2. '()' → logprob: -6.1272077560424805
    3. ' ():' → logprob: -11.25220775604248
    4. '().' → logprob: -12.37720775604248
    5. '():
' → logprob: -12.87720775604248
    6. '()>' → logprob: -13.62720775604248
    7. ' ()' → logprob: -14.50220775604248
    8. '(' → logprob: -14.62720775604248
    9. '():

' → logprob: -15.87720775604248
    10. '();' → logprob: -16.002208709716797

Token 89: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.559856116771698
    2. ' return' → logprob: -1.1848561763763428
    3. ':return' → logprob: -2.5598561763763428
    4. '():' → logprob: -3.6848561763763428
    5. ':' → logprob: -5.309855937957764
    6. '()' → logprob: -5.434855937957764
    7. '   ' → logprob: -5.934855937957764
    8. ' ' → logprob: -6.184855937957764
    9. ' :' → logprob: -6.809855937957764
    10. '	return' → logprob: -7.434855937957764

Token 90: ' res' (ID: 694)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.004086708649992943
    2. ' return' → logprob: -5.504086494445801
    3. 'ret' → logprob: -12.5040864944458
    4. '   ' → logprob: -13.2540864944458
    5. 'sys' → logprob: -13.8790864944458
    6. 'r' → logprob: -14.0040864944458
    7. 're' → logprob: -14.2540864944458
    8. ' retur' → logprob: -16.004087448120117
    9. '    
' → logprob: -16.129087448120117
    10. '    ' → logprob: -16.504087448120117

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09027761965990067
    2. '=' → logprob: -2.465277671813965
    3. ' ' → logprob: -6.840277671813965
    4. 'u' → logprob: -9.215277671813965
    5. 'ult' → logprob: -10.090277671813965
    6. '  ' → logprob: -10.715277671813965
    7. ' =
' → logprob: -10.965277671813965
    8. '.' → logprob: -11.215277671813965
    9. ',' → logprob: -11.465277671813965
    10. '=[]' → logprob: -12.090277671813965

Token 92: ' list' (ID: 1562)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.3773505985736847
    2. 'sys' → logprob: -1.5023505687713623
    3. '[]' → logprob: -2.7523505687713623
    4. ' []' → logprob: -4.377350807189941
    5. '""' → logprob: -4.502350807189941
    6. '''' → logprob: -6.627350807189941
    7. ' ' → logprob: -7.127350807189941
    8. ' ""' → logprob: -7.502350807189941
    9. '	sys' → logprob: -7.877350807189941
    10. ' ''' → logprob: -8.252350807189941

Token 93: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.7560590505599976
    2. '(input' → logprob: -1.1310590505599976
    3. '(' → logprob: -1.7560590505599976
    4. '()' → logprob: -3.506059169769287
    5. '(map' → logprob: -5.756059169769287
    6. '(str' → logprob: -7.506059169769287
    7. '(s' → logprob: -7.506059169769287
    8. '(range' → logprob: -8.006058692932129
    9. '("")' → logprob: -9.506058692932129
    10. '(system' → logprob: -9.631058692932129

Token 94: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0002214172709500417
    2. '.' → logprob: -8.625221252441406
    3. '.stdout' → logprob: -10.375221252441406
    4. '.readline' → logprob: -12.125221252441406
    5. '.std' → logprob: -13.000221252441406
    6. '(stdin' → logprob: -13.875221252441406
    7. '.argv' → logprob: -14.125221252441406
    8. 'stdin' → logprob: -14.750221252441406
    9. '.st' → logprob: -14.875221252441406
    10. '<|end|>' → logprob: -16.000221252441406

Token 95: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00022117885237094015
    2. 'read' → logprob: -8.750221252441406
    3. 'stdin' → logprob: -10.875221252441406
    4. ' readline' → logprob: -11.125221252441406
    5. '.' → logprob: -11.250221252441406
    6. '().' → logprob: -11.500221252441406
    7. '.stdin' → logprob: -13.250221252441406
    8. '.read' → logprob: -13.500221252441406
    9. '_read' → logprob: -14.125221252441406
    10. '.readlines' → logprob: -14.375221252441406

Token 96: '())
' (ID: 4574)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.020585916936397552
    2. '())' → logprob: -4.020586013793945
    3. '()' → logprob: -6.020586013793945
    4. ' ())' → logprob: -13.645586013793945
    5. '()[' → logprob: -13.770586013793945
    6. ' ().' → logprob: -14.395586013793945
    7. '();)' → logprob: -15.145586013793945
    8. '(' → logprob: -15.270586013793945
    9. '()]' → logprob: -15.520586013793945
    10. '()
' → logprob: -15.645586013793945

Token 97: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1569490432739258
    2. '().' → logprob: -1.1569490432739258
    3. '.strip' → logprob: -2.406949043273926
    4. '.rstrip' → logprob: -2.531949043273926
    5. ')' → logprob: -2.781949043273926
    6. '<|end|>' → logprob: -2.781949043273926
    7. '   ' → logprob: -3.406949043273926
    8. 'rstrip' → logprob: -4.156949043273926
    9. '(' → logprob: -4.656949043273926
    10. '.' → logprob: -5.281949043273926

Token 98: ' if' (ID: 538)
  Prédit: '.rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.rstrip' → logprob: -0.7097689509391785
    2. 'rstrip' → logprob: -1.0847690105438232
    3. '.strip' → logprob: -2.7097690105438232
    4. '   ' → logprob: -2.9597690105438232
    5. 'return' → logprob: -4.459768772125244
    6. '()' → logprob: -4.709768772125244
    7. ')' → logprob: -5.334768772125244
    8. '.' → logprob: -5.584768772125244
    9. '.pop' → logprob: -5.584768772125244
    10. '[:-' → logprob: -5.709768772125244

Token 99: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.5760968327522278
    2. 'res' → logprob: -0.8260968327522278
    3. ' not' → logprob: -9.576096534729004
    4. '(res' → logprob: -10.326096534729004
    5. 'len' → logprob: -10.701096534729004
    6. ' ' → logprob: -10.826096534729004
    7. ' len' → logprob: -11.701096534729004
    8. 'not' → logprob: -13.326096534729004
    9. '	res' → logprob: -13.576096534729004
    10. '
' → logprob: -15.076096534729004

Token 100: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.1152648776769638
    2. ' and' → logprob: -2.240264892578125
    3. 'and' → logprob: -6.740264892578125
    4. '[' → logprob: -6.865264892578125
    5. '>' → logprob: -8.740264892578125
    6. '.endswith' → logprob: -10.740264892578125
    7. '&&' → logprob: -11.615264892578125
    8. '==' → logprob: -11.990264892578125
    9. '][-' → logprob: -12.365264892578125
    10. '[len' → logprob: -13.365264892578125

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009620321914553642
    2. '\n' → logprob: -5.384620189666748
    3. ' ' → logprob: -6.134620189666748
    4. ''\' → logprob: -7.134620189666748
    5. ' ==' → logprob: -7.509620189666748
    6. '==' → logprob: -7.759620189666748
    7. '\' → logprob: -8.009620666503906
    8. '('\' → logprob: -8.884620666503906
    9. '='\' → logprob: -9.009620666503906
    10. '"\' → logprob: -9.259620666503906

Token 102: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03734798729419708
    2. ' ==' → logprob: -3.4123480319976807
    3. '=='' → logprob: -6.037347793579102
    4. '=' → logprob: -7.162347793579102
    5. '==
' → logprob: -7.912347793579102
    6. '=="' → logprob: -9.662347793579102
    7. ' in' → logprob: -10.162347793579102
    8. '===' → logprob: -11.037347793579102
    9. ' ' → logprob: -11.537347793579102
    10. '==(' → logprob: -11.787347793579102

Token 103: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00987307634204626
    2. '==
' → logprob: -5.509872913360596
    3. ' ==' → logprob: -5.884872913360596
    4. '=' → logprob: -5.884872913360596
    5. '=='' → logprob: -8.759873390197754
    6. '=="' → logprob: -10.884873390197754
    7. ' in' → logprob: -11.134873390197754
    8. '===' → logprob: -12.259873390197754
    9. 'in' → logprob: -12.509873390197754
    10. '\n' → logprob: -13.134873390197754

Token 104: ' "\' (ID: 6512)
  Prédit: ''\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''\' → logprob: -0.0003132976416964084
    2. ''
' → logprob: -8.875313758850098
    3. '\n' → logprob: -9.625313758850098
    4. ' '\' → logprob: -9.750313758850098
    5. '"\' → logprob: -10.500313758850098
    6. ''' → logprob: -11.500313758850098
    7. '`\' → logprob: -11.625313758850098
    8. '`
' → logprob: -14.125313758850098
    9. '\
' → logprob: -14.750313758850098
    10. '' → logprob: -15.000313758850098

Token 105: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.9361264946837764e-07
    2. '\n' → logprob: -16.625
    3. ' n' → logprob: -16.875
    4. '
' → logprob: -19.25
    5. 'newline' → logprob: -20.625
    6. '	n' → logprob: -21.5
    7. '```' → logprob: -21.75
    8. 'ndef' → logprob: -23.0
    9. 'r' → logprob: -23.0
    10. 'x' → logprob: -23.25

Token 106: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.0559307299554348
    2. '":
' → logprob: -3.0559306144714355
    3. '"' → logprob: -4.9309306144714355
    4. '":
' → logprob: -9.930931091308594
    5. '"):' → logprob: -10.930931091308594
    6. '"):
' → logprob: -11.055931091308594
    7. '"]:' → logprob: -12.805931091308594
    8. '":

' → logprob: -13.055931091308594
    9. '"
' → logprob: -13.180931091308594
    10. '):
' → logprob: -13.180931091308594

Token 107: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4938100576400757
    2. '   ' → logprob: -1.1188100576400757
    3. ' res' → logprob: -2.9938101768493652
    4. '	res' → logprob: -5.243810176849365
    5. 'res' → logprob: -5.743810176849365
    6. '
' → logprob: -6.868810176849365
    7. '<|end|>' → logprob: -6.993810176849365
    8. '    ' → logprob: -7.743810176849365
    9. '    
' → logprob: -8.243809700012207
    10. '	   ' → logprob: -8.243809700012207

Token 108: ' return' (ID: 622)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.010261589661240578
    2. ' res' → logprob: -4.635261535644531
    3. '   ' → logprob: -7.760261535644531
    4. '
' → logprob: -10.135261535644531
    5. '	res' → logprob: -10.260261535644531
    6. 'r' → logprob: -13.385261535644531
    7. '.res' → logprob: -14.385261535644531
    8. '    
' → logprob: -14.635261535644531
    9. ' ' → logprob: -15.260261535644531
    10. '$res' → logprob: -15.260261535644531

Token 109: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.048587825149297714
    2. ' res' → logprob: -3.0485877990722656
    3. '	res' → logprob: -16.298587799072266
    4. '[' → logprob: -16.423587799072266
    5. '"' → logprob: -16.548587799072266
    6. '(res' → logprob: -16.798587799072266
    7. '$res' → logprob: -17.798587799072266
    8. 're' → logprob: -17.923587799072266
    9. ' ' → logprob: -17.923587799072266
    10. 'r' → logprob: -17.923587799072266

Token 110: '[:-' (ID: 63556)
  Prédit: '[:-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -1.4855663721391466e-05
    2. '[' → logprob: -11.375015258789062
    3. '[:]' → logprob: -13.000015258789062
    4. '[:' → logprob: -15.000015258789062
    5. '.pop' → logprob: -15.250015258789062
    6. '.rstrip' → logprob: -15.500015258789062
    7. '0' → logprob: -16.500015258789062
    8. 'rstrip' → logprob: -17.500015258789062
    9. '
' → logprob: -17.625015258789062
    10. '[]' → logprob: -17.875015258789062

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '   ' → logprob: -17.625
    4. '１' → logprob: -18.375
    5. 'newline' → logprob: -18.5
    6. '```' → logprob: -19.375
    7. '
' → logprob: -20.0
    8. ']' → logprob: -20.0
    9. '  ' → logprob: -20.5
    10. '\n' → logprob: -20.75

Token 112: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00019150081789121032
    2. ' ]' → logprob: -9.000191688537598
    3. ']
' → logprob: -10.125191688537598
    4. '<|end|>' → logprob: -10.750191688537598
    5. '   ' → logprob: -13.000191688537598
    6. ')' → logprob: -13.625191688537598
    7. '']' → logprob: -14.500191688537598
    8. '<|end|>' → logprob: -14.750191688537598
    9. '"]' → logprob: -15.125191688537598
    10. ']

' → logprob: -15.125191688537598

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00030805266578681767
    2. '    ' → logprob: -10.0003080368042
    3. ' else' → logprob: -10.0003080368042
    4. '    
' → logprob: -10.2503080368042
    5. ' ' → logprob: -10.3753080368042
    6. '	else' → logprob: -10.5003080368042
    7. '  ' → logprob: -10.6253080368042
    8. '<|end|>' → logprob: -10.7503080368042
    9. '	return' → logprob: -10.8753080368042
    10. 'else' → logprob: -11.0003080368042

Token 114: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11100880801677704
    2. 'return' (adapté à ' return') → logprob: -2.486008882522583
    3. 'else' → logprob: -4.861008644104004
    4. ' return' → logprob: -5.111008644104004
    5. ' else' → logprob: -5.486008644104004
    6. ' ' → logprob: -6.486008644104004
    7. '	return' → logprob: -7.111008644104004
    8. ':return' → logprob: -7.736008644104004
    9. '<|end|>' → logprob: -7.986008644104004
    10. ')' → logprob: -8.486008644104004

Token 115: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.005240514408797026
    2. ' res' → logprob: -5.255240440368652
    3. '[]' → logprob: -12.130240440368652
    4. '	res' → logprob: -14.880240440368652
    5. ' []' → logprob: -15.130240440368652
    6. 're' → logprob: -15.755240440368652
    7. 's' → logprob: -16.00524139404297
    8. 'r' → logprob: -16.00524139404297
    9. ' ' → logprob: -16.25524139404297
    10. '(res' → logprob: -16.38024139404297

Token 116: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09861946851015091
    2. '<|end|>' → logprob: -3.4736194610595703
    3. 'def' → logprob: -3.5986194610595703
    4. '\n' → logprob: -3.9736194610595703
    5. '

' → logprob: -5.72361946105957
    6. '#' → logprob: -5.84861946105957
    7. '(' → logprob: -6.22361946105957
    8. '' → logprob: -6.47361946105957
    9. '  
' → logprob: -6.97361946105957
    10. '\' → logprob: -6.97361946105957

Token 117: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.49657759070396423
    2. '
' → logprob: -1.4965776205062866
    3. '#' → logprob: -2.496577501296997
    4. 'd' → logprob: -3.371577501296997
    5. '\' → logprob: -4.246577739715576
    6. '' → logprob: -5.121577739715576
    7. ' 
' → logprob: -5.121577739715576
    8. '  
' → logprob: -5.246577739715576
    9. '\n' → logprob: -5.496577739715576
    10. ' ' → logprob: -5.871577739715576

Token 118: ' IR' (ID: 23712)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.061722610145807266
    2. '_' → logprob: -3.56172251701355
    3. 'main' → logprob: -3.93672251701355
    4. '_main' → logprob: -5.936722755432129
    5. ' ' → logprob: -6.311722755432129
    6. ' M' → logprob: -7.061722755432129
    7. ' max' → logprob: -7.311722755432129
    8. ' factorial' → logprob: -7.561722755432129
    9. ' input' → logprob: -7.686722755432129
    10. 'range' → logprob: -7.811722755432129

Token 119: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.06412559747695923
    2. '()' → logprob: -2.9391255378723145
    3. 'E' → logprob: -4.8141255378723145
    4. 'ead' → logprob: -8.439126014709473
    5. 'e' → logprob: -8.814126014709473
    6. '():
' → logprob: -8.939126014709473
    7. 'ANGE' → logprob: -9.314126014709473
    8. '):' → logprob: -9.564126014709473
    9. 'ange' → logprob: -9.689126014709473
    10. ' ():' → logprob: -9.814126014709473

Token 120: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00019889144459739327
    2. ')' → logprob: -8.875199317932129
    3. '):
' → logprob: -9.875199317932129
    4. ' ):' → logprob: -11.875199317932129
    5. ':' → logprob: -15.375199317932129
    6. '):
' → logprob: -15.875199317932129
    7. ')：' → logprob: -16.625198364257812
    8. ']:' → logprob: -17.500198364257812
    9. ',' → logprob: -17.750198364257812
    10. '):(' → logprob: -17.750198364257812

Token 121: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2494114637374878
    2. '():' → logprob: -2.1244115829467773
    3. ' :' → logprob: -2.9994115829467773
    4. '   ' → logprob: -3.7494115829467773
    5. ':
' → logprob: -4.249411582946777
    6. ' return' → logprob: -5.499411582946777
    7. ':return' → logprob: -6.124411582946777
    8. '):' → logprob: -6.374411582946777
    9. ' =' → logprob: -6.999411582946777
    10. ' ' → logprob: -6.999411582946777

Token 122: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.0683155506849289
    2. ' [' → logprob: -3.3183155059814453
    3. 'return' (adapté à ' return') → logprob: -3.6933155059814453
    4. '[' → logprob: -5.818315505981445
    5. '[]' → logprob: -7.443315505981445
    6. '   ' → logprob: -7.568315505981445
    7. ' for' → logprob: -8.318315505981445
    8. ' [
' → logprob: -8.443315505981445
    9. ' []' → logprob: -9.693315505981445
    10. '[
' → logprob: -10.068315505981445

Token 123: ' [' (ID: 723)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.019219934940338135
    2. '[' → logprob: -4.394219875335693
    3. ' [' → logprob: -5.519219875335693
    4. '[I' → logprob: -6.019219875335693
    5. '[Int' → logprob: -8.894220352172852
    6. '[i' → logprob: -9.519220352172852
    7. '[list' → logprob: -12.019220352172852
    8. 'int' → logprob: -12.394220352172852
    9. '[n' → logprob: -12.519220352172852
    10. 'deque' → logprob: -12.644220352172852

Token 124: 'I' (ID: 40)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20141859352588654
    2. 'I' → logprob: -1.7014186382293701
    3. '(int' → logprob: -13.70141887664795
    4. '[int' → logprob: -13.82641887664795
    5. ' int' → logprob: -13.95141887664795
    6. ' I' → logprob: -14.20141887664795
    7. '
' → logprob: -14.70141887664795
    8. '<int' → logprob: -15.57641887664795
    9. 'Int' → logprob: -15.70141887664795
    10. ']int' → logprob: -15.82641887664795

Token 125: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.3663626305060461e-05
    2. '()]' → logprob: -11.75001335144043
    3. '()
' → logprob: -12.50001335144043
    4. ' ()' → logprob: -13.75001335144043
    5. '(' → logprob: -14.00001335144043
    6. '（）' → logprob: -17.75001335144043
    7. '()]
' → logprob: -18.00001335144043
    8. '()

' → logprob: -18.37501335144043
    9. ']()' → logprob: -18.87501335144043
    10. '()\' → logprob: -19.12501335144043

Token 126: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0012421364663168788
    2. 'for' → logprob: -6.876242160797119
    3. ' for' → logprob: -8.501241683959961
    4. ')' → logprob: -13.126241683959961
    5. '()]' → logprob: -13.626241683959961
    6. '	for' → logprob: -14.126241683959961
    7. ']' → logprob: -14.251241683959961
    8. '(' → logprob: -14.251241683959961
    9. ' ()' → logprob: -14.626241683959961
    10. '()
' → logprob: -15.126241683959961

Token 127: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08953376859426498
    2. ' _' → logprob: -2.464533805847168
    3. ' range' → logprob: -7.714533805847168
    4. ' ' → logprob: -9.339533805847168
    5. 'range' → logprob: -10.089533805847168
    6. '(' → logprob: -12.089533805847168
    7. '_range' → logprob: -12.339533805847168
    8. ' i' → logprob: -12.339533805847168
    9. '(range' → logprob: -13.464533805847168
    10. ' in' → logprob: -14.339533805847168

Token 128: ' in' (ID: 306)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8045665621757507
    2. ' in' → logprob: -1.0545666217803955
    3. 'in' → logprob: -2.0545666217803955
    4. 'n' → logprob: -3.4295666217803955
    5. '_' → logprob: -4.304566383361816
    6. '(' → logprob: -4.304566383361816
    7. 'range' → logprob: -5.429566383361816
    8. ' range' → logprob: -5.554566383361816
    9. ' n' → logprob: -5.554566383361816
    10. '(n' → logprob: -5.679566383361816

Token 129: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031804447062313557
    2. ' range' → logprob: -5.753180503845215
    3. 'rang' → logprob: -13.503180503845215
    4. '	range' → logprob: -14.628180503845215
    5. 'ra' → logprob: -15.003180503845215
    6. '(range' → logprob: -15.128180503845215
    7. 'ran' → logprob: -15.378180503845215
    8. ' ' → logprob: -16.1281795501709
    9. 'r' → logprob: -17.2531795501709
    10. '_range' → logprob: -18.2531795501709

Token 130: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.006718452088534832
    2. '(' → logprob: -5.006718635559082
    3. ' (' → logprob: -13.006718635559082
    4. ' n' → logprob: -14.756718635559082
    5. 'n' → logprob: -15.256718635559082
    6. '(
' → logprob: -15.381718635559082
    7. ')n' → logprob: -17.131717681884766
    8. '(

' → logprob: -17.756717681884766
    9. '	n' → logprob: -17.881717681884766
    10. '(nt' → logprob: -18.756717681884766

Token 131: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -6.034592388459714e-06
    2. ')' → logprob: -12.750005722045898
    3. ']' → logprob: -12.750005722045898
    4. ')]
' → logprob: -16.3750057220459
    5. '))' → logprob: -18.1250057220459
    6. ')].' → logprob: -18.1250057220459
    7. ')],' → logprob: -18.2500057220459
    8. ' )' → logprob: -18.5000057220459
    9. '}]' → logprob: -18.6250057220459
    10. '')]' → logprob: -18.7500057220459

Token 132: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.015805119648575783
    2. '<|end|>' → logprob: -4.890805244445801
    3. 'def' → logprob: -5.015805244445801
    4. '\n' → logprob: -7.890805244445801
    5. ' 
' → logprob: -8.2658052444458
    6. '

' → logprob: -8.5158052444458
    7. '  
' → logprob: -9.0158052444458
    8. '<|end|>' → logprob: -9.3908052444458
    9. '\' → logprob: -9.5158052444458
    10. '(' → logprob: -9.7658052444458

Token 133: ' L' (ID: 451)
  Prédit: 'LS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LS' → logprob: -0.12714669108390808
    2. 'IS' → logprob: -3.5021467208862305
    3. 'LI' → logprob: -4.0021467208862305
    4. 'L' → logprob: -4.0021467208862305
    5. ' LS' → logprob: -4.3771467208862305
    6. 'IRS' → logprob: -4.3771467208862305
    7. 'S' → logprob: -4.5021467208862305
    8. 'LR' → logprob: -5.5021467208862305
    9. 'IR' → logprob: -5.5021467208862305
    10. 'SR' → logprob: -6.1271467208862305

Token 134: 'IR' (ID: 4368)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -9.372294698550832e-06
    2. 'IR' → logprob: -12.250009536743164
    3. 'R' → logprob: -14.000009536743164
    4. '(I' → logprob: -14.250009536743164
    5. ' I' → logprob: -14.625009536743164
    6. '(' → logprob: -14.750009536743164
    7. '()' → logprob: -15.125009536743164
    8. 'S' → logprob: -15.500009536743164
    9. '```' → logprob: -15.500009536743164
    10. 'IST' → logprob: -15.875009536743164

Token 135: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -8.180258191714529e-06
    2. '(' → logprob: -11.750008583068848
    3. '(N' → logprob: -16.00000762939453
    4. ' (' → logprob: -16.37500762939453
    5. '(i' → logprob: -19.12500762939453
    6. '(a' → logprob: -19.25000762939453
    7. '(num' → logprob: -19.62500762939453
    8. '	n' → logprob: -20.12500762939453
    9. '():' → logprob: -20.37500762939453
    10. 'n' → logprob: -20.62500762939453

Token 136: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000939450750593096
    2. ')' → logprob: -7.00093936920166
    3. '):
' → logprob: -10.62593936920166
    4. ' ):' → logprob: -13.00093936920166
    5. ']:' → logprob: -14.75093936920166
    6. '）：' → logprob: -15.00093936920166
    7. '):

' → logprob: -15.50093936920166
    8. ')：' → logprob: -15.62593936920166
    9. '):
' → logprob: -16.000940322875977
    10. '():' → logprob: -16.875940322875977

Token 137: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.877375066280365
    2. ':' → logprob: -1.1273751258850098
    3. 'return' → logprob: -2.5023751258850098
    4. '():' → logprob: -2.6273751258850098
    5. ':return' → logprob: -3.2523751258850098
    6. '[' → logprob: -4.25237512588501
    7. '(n' → logprob: -4.62737512588501
    8. '   ' → logprob: -4.87737512588501
    9. ' ' → logprob: -5.00237512588501
    10. ' [' → logprob: -5.50237512588501

Token 138: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.13490401208400726
    2. ' return' → logprob: -2.134903907775879
    3. '[' → logprob: -4.884903907775879
    4. ' [' → logprob: -8.509903907775879
    5. '   ' → logprob: -9.259903907775879
    6. '[int' → logprob: -10.384903907775879
    7. 'def' → logprob: -11.259903907775879
    8. '[]' → logprob: -11.384903907775879
    9. ':return' → logprob: -12.384903907775879
    10. '[I' → logprob: -12.509903907775879

Token 139: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00944379810243845
    2. '[int' → logprob: -4.759443759918213
    3. ' [' → logprob: -7.384443759918213
    4. '[Int' → logprob: -9.384444236755371
    5. 'LI' → logprob: -10.009444236755371
    6. '[[' → logprob: -10.634444236755371
    7. '[L' → logprob: -11.009444236755371
    8. '[List' → logprob: -11.134444236755371
    9. '[I' → logprob: -11.634444236755371
    10. '[list' → logprob: -11.759444236755371

Token 140: 'LI' (ID: 14313)
  Prédit: 'LI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -4.127333340875339e-06
    2. ' LI' → logprob: -12.875003814697266
    3. 'int' → logprob: -14.000003814697266
    4. 'list' → logprob: -14.750003814697266
    5. 'li' → logprob: -15.500003814697266
    6. 'Li' → logprob: -17.375003814697266
    7. 'I' → logprob: -17.500003814697266
    8. '   ' → logprob: -17.750003814697266
    9. ' ' → logprob: -18.000003814697266
    10. 'LS' → logprob: -19.000003814697266

Token 141: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0019388694781810045
    2. '(n' → logprob: -6.251938819885254
    3. '()]' → logprob: -11.876938819885254
    4. '(' → logprob: -13.751938819885254
    5. ' ()' → logprob: -14.001938819885254
    6. '()
' → logprob: -14.251938819885254
    7. '(i' → logprob: -14.876938819885254
    8. '()(' → logprob: -16.25193977355957
    9. '().' → logprob: -16.50193977355957
    10. '())' → logprob: -16.50193977355957

Token 142: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.787507714354433e-05
    2. '(' → logprob: -10.50004768371582
    3. 'for' → logprob: -11.50004768371582
    4. ' for' → logprob: -12.00004768371582
    5. '(i' → logprob: -13.12504768371582
    6. '()' → logprob: -13.87504768371582
    7. ' (' → logprob: -14.00004768371582
    8. 'n' → logprob: -15.62504768371582
    9. ')' → logprob: -17.37504768371582
    10. '(for' → logprob: -18.62504768371582

Token 143: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.13291293382644653
    2. ' i' → logprob: -2.1329128742218018
    3. 'range' → logprob: -5.632913112640381
    4. ' range' → logprob: -6.632913112640381
    5. '(i' → logprob: -7.882913112640381
    6. '_' → logprob: -8.757912635803223
    7. '(range' → logprob: -8.882912635803223
    8. '(n' → logprob: -9.007912635803223
    9. 'n' → logprob: -9.132912635803223
    10. ' ' → logprob: -9.257912635803223

Token 144: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6351475119590759
    2. 'in' → logprob: -0.7601475119590759
    3. 'n' → logprob: -6.135147571563721
    4. '(' → logprob: -8.885147094726562
    5. '(n' → logprob: -9.260147094726562
    6. 'i' → logprob: -9.885147094726562
    7. 'range' → logprob: -10.260147094726562
    8. ' ' → logprob: -10.760147094726562
    9. ' i' → logprob: -11.010147094726562
    10. '_' → logprob: -12.760147094726562

Token 145: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03811446949839592
    2. ' range' → logprob: -3.288114547729492
    3. '(range' → logprob: -9.538114547729492
    4. '(n' → logprob: -14.663114547729492
    5. 'n' → logprob: -16.038114547729492
    6. '	range' → logprob: -16.038114547729492
    7. 'ange' → logprob: -16.163114547729492
    8. '(' → logprob: -16.788114547729492
    9. 'rang' → logprob: -16.913114547729492
    10. ' in' → logprob: -17.538114547729492

Token 146: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.1080467781284824e-05
    2. '(' → logprob: -10.250041007995605
    3. 'n' → logprob: -12.125041007995605
    4. ' n' → logprob: -16.125041961669922
    5. '(
' → logprob: -16.125041961669922
    6. ' (' → logprob: -17.125041961669922
    7. '	n' → logprob: -19.500041961669922
    8. ')n' → logprob: -20.125041961669922
    9. '(nn' → logprob: -20.625041961669922
    10. '((' → logprob: -21.500041961669922

Token 147: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0008091482450254261
    2. ']' → logprob: -7.375809192657471
    3. '()]' → logprob: -8.625808715820312
    4. ')' → logprob: -13.250808715820312
    5. '()' → logprob: -14.625808715820312
    6. '}]' → logprob: -15.125808715820312
    7. '')]' → logprob: -16.000808715820312
    8. ']()' → logprob: -16.000808715820312
    9. '])' → logprob: -16.125808715820312
    10. '(' → logprob: -16.500808715820312

Token 148: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.037723325192928314
    2. 'd' → logprob: -4.037723541259766
    3. ' ' → logprob: -4.787723541259766
    4. '#' → logprob: -5.162723541259766
    5. '\' → logprob: -6.162723541259766
    6. ' 
' → logprob: -7.537723541259766
    7. ')' → logprob: -8.162723541259766
    8. ':' → logprob: -8.162723541259766
    9. '<|end|>' → logprob: -8.412723541259766
    10. 'a' → logprob: -8.412723541259766

Token 149: ' SR' (ID: 30704)
  Prédit: 'SR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SR' → logprob: -0.04655323922634125
    2. 'LS' → logprob: -3.546553134918213
    3. 'IR' → logprob: -4.796553134918213
    4. 'S' → logprob: -5.921553134918213
    5. 'main' → logprob: -6.921553134918213
    6. 'RS' → logprob: -7.421553134918213
    7. 'SI' → logprob: -7.546553134918213
    8. 'IS' → logprob: -7.546553134918213
    9. ' SR' → logprob: -7.546553134918213
    10. 's' → logprob: -7.921553134918213

Token 150: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.478302538394928
    2. '(n' → logprob: -0.978302538394928
    3. '()' → logprob: -5.603302478790283
    4. '()(' → logprob: -8.353302955627441
    5. '():
' → logprob: -8.478302955627441
    6. '(' → logprob: -9.978302955627441
    7. '(N' → logprob: -11.228302955627441
    8. '(size' → logprob: -12.603302955627441
    9. ' ():' → logprob: -13.103302955627441
    10. '(a' → logprob: -13.103302955627441

Token 151: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007292322698049247
    2. '):
' → logprob: -7.750729084014893
    3. ')' → logprob: -8.12572956085205
    4. ']:' → logprob: -14.00072956085205
    5. '):

' → logprob: -14.75072956085205
    6. '):
' → logprob: -14.87572956085205
    7. ' ):' → logprob: -14.87572956085205
    8. '(n' → logprob: -15.75072956085205
    9. '）：' → logprob: -15.87572956085205
    10. '():' → logprob: -16.250728607177734

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028183305636048317
    2. 'return' → logprob: -3.7781832218170166
    3. ' return' → logprob: -5.528183460235596
    4. '[' → logprob: -7.778183460235596
    5. 'def' → logprob: -8.403182983398438
    6. '[]' → logprob: -8.778182983398438
    7. '[
' → logprob: -10.153182983398438
    8. ':return' → logprob: -10.778182983398438
    9. '  ' → logprob: -10.903182983398438
    10. ' ' → logprob: -11.403182983398438

Token 153: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.22410602867603302
    2. 'return' (adapté à ' return') → logprob: -2.3491060733795166
    3. '[S' → logprob: -2.8491060733795166
    4. '[s' → logprob: -3.7241060733795166
    5. ' [' → logprob: -4.9741058349609375
    6. '[list' → logprob: -4.9741058349609375
    7. '   ' → logprob: -5.8491058349609375
    8. '[str' → logprob: -6.3491058349609375
    9. ' return' → logprob: -6.5991058349609375
    10. '[string' → logprob: -7.4741058349609375

Token 154: ' [' (ID: 723)
  Prédit: '[S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[S' → logprob: -0.0020728250965476036
    2. '[' → logprob: -7.002072811126709
    3. ' [' → logprob: -7.002072811126709
    4. '[list' → logprob: -8.627073287963867
    5. 'S' → logprob: -10.877073287963867
    6. '[s' → logprob: -11.627073287963867
    7. '[List' → logprob: -11.877073287963867
    8. '[String' → logprob: -11.877073287963867
    9. '['' → logprob: -12.002073287963867
    10. '["' → logprob: -12.877073287963867

Token 155: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -9.13388703338569e-06
    2. 'list' → logprob: -11.875009536743164
    3. 'sys' → logprob: -13.875009536743164
    4. ' S' → logprob: -13.875009536743164
    5. '   ' → logprob: -16.500009536743164
    6. 'input' → logprob: -17.500009536743164
    7. 's' → logprob: -18.250009536743164
    8. 'set' → logprob: -18.625009536743164
    9. '
' → logprob: -19.000009536743164
    10. 'Ｓ' → logprob: -19.250009536743164

Token 156: '()' (ID: 416)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3138204514980316
    2. '()' → logprob: -1.313820481300354
    3. '(i' → logprob: -7.5638203620910645
    4. '(' → logprob: -10.438820838928223
    5. ' ()' → logprob: -12.563820838928223
    6. '()]' → logprob: -12.813820838928223
    7. ' (' → logprob: -13.188820838928223
    8. '()(' → logprob: -14.188820838928223
    9. 'for' → logprob: -14.313820838928223
    10. '()
' → logprob: -16.063819885253906

Token 157: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.020810812711715698
    2. 'for' → logprob: -4.020810604095459
    3. ' for' → logprob: -6.520810604095459
    4. ')' → logprob: -6.895810604095459
    5. '(' → logprob: -9.020811080932617
    6. ' (' → logprob: -11.020811080932617
    7. 'n' → logprob: -11.145811080932617
    8. '(i' → logprob: -11.520811080932617
    9. '   ' → logprob: -12.145811080932617
    10. '	for' → logprob: -13.395811080932617

Token 158: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03195611760020256
    2. '_' → logprob: -4.156956195831299
    3. ' i' → logprob: -4.156956195831299
    4. '_i' → logprob: -9.78195571899414
    5. ' _' → logprob: -10.15695571899414
    6. ' ' → logprob: -10.65695571899414
    7. '(' → logprob: -11.78195571899414
    8. '(i' → logprob: -12.40695571899414
    9. ' in' → logprob: -12.90695571899414
    10. 'range' → logprob: -13.28195571899414

Token 159: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.296517938375473
    2. 'in' → logprob: -1.4215179681777954
    3. '(' → logprob: -4.546517848968506
    4. '(n' → logprob: -5.921517848968506
    5. 'n' → logprob: -7.046517848968506
    6. ' (' → logprob: -7.171517848968506
    7. ' ' → logprob: -9.421518325805664
    8. ' i' → logprob: -9.671518325805664
    9. 'range' → logprob: -9.671518325805664
    10. ' n' → logprob: -10.046518325805664

Token 160: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0032131264451891184
    2. ' range' → logprob: -5.753212928771973
    3. '(range' → logprob: -10.253212928771973
    4. 'rang' → logprob: -17.00321388244629
    5. '(n' → logprob: -17.12821388244629
    6. '	range' → logprob: -17.75321388244629
    7. '(' → logprob: -18.00321388244629
    8. 'n' → logprob: -18.62821388244629
    9. 'r' → logprob: -19.12821388244629
    10. 'ran' → logprob: -19.37821388244629

Token 161: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0018800891702994704
    2. 'n' → logprob: -6.626880168914795
    3. '(' → logprob: -7.501880168914795
    4. '(
' → logprob: -13.626879692077637
    5. ' (' → logprob: -14.626879692077637
    6. ' n' → logprob: -15.251879692077637
    7. ')n' → logprob: -17.126880645751953
    8. '	n' → logprob: -18.376880645751953
    9. ')' → logprob: -18.626880645751953
    10. '
' → logprob: -18.751880645751953

Token 162: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.845798710244708e-05
    2. ')' → logprob: -10.875038146972656
    3. ']' → logprob: -10.875038146972656
    4. ')]
' → logprob: -15.375038146972656
    5. ' )' → logprob: -16.500038146972656
    6. ')],' → logprob: -16.750038146972656
    7. '))' → logprob: -17.000038146972656
    8. '):' → logprob: -17.000038146972656
    9. '')]' → logprob: -17.250038146972656
    10. 'n' → logprob: -17.375038146972656

Token 163: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0022540991194546223
    2. '#' → logprob: -6.877254009246826
    3. 'd' → logprob: -7.002254009246826
    4. 'class' → logprob: -9.377254486083984
    5. '<|end|>' → logprob: -9.502254486083984
    6. 'n' → logprob: -10.752254486083984
    7. 'a' → logprob: -10.752254486083984
    8. '
' → logprob: -10.752254486083984
    9. 'de' → logprob: -11.252254486083984
    10. ' ' → logprob: -11.252254486083984

Token 164: ' L' (ID: 451)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.09656206518411636
    2. ' main' → logprob: -2.596562147140503
    3. 'solve' → logprob: -5.846561908721924
    4. 'LS' → logprob: -6.221561908721924
    5. 'MS' → logprob: -6.721561908721924
    6. 'MO' → logprob: -6.971561908721924
    7. 'M' → logprob: -6.971561908721924
    8. 'D' → logprob: -6.971561908721924
    9. 'IR' → logprob: -7.096561908721924
    10. 'print' → logprob: -7.346561908721924

Token 165: 'SR' (ID: 22892)
  Prédit: 'IR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IR' → logprob: -0.14932124316692352
    2. 'I' → logprob: -2.0243213176727295
    3. 'R' → logprob: -5.27432107925415
    4. 'SR' → logprob: -7.27432107925415
    5. 'S' → logprob: -7.52432107925415
    6. 'def' → logprob: -9.024321556091309
    7. '(' → logprob: -10.149321556091309
    8. ' IR' → logprob: -10.524321556091309
    9. '(IR' → logprob: -10.774321556091309
    10. 'IS' → logprob: -11.399321556091309

Token 166: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.9040898880339228e-05
    2. '(' → logprob: -10.500028610229492
    3. ' (' → logprob: -13.500028610229492
    4. 'n' → logprob: -18.000028610229492
    5. '():' → logprob: -18.000028610229492
    6. '(
' → logprob: -18.000028610229492
    7. '(N' → logprob: -20.375028610229492
    8. ' n' → logprob: -20.500028610229492
    9. 'def' → logprob: -20.625028610229492
    10. '(num' → logprob: -21.125028610229492

Token 167: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00010103991371579468
    2. '):
' → logprob: -9.375101089477539
    3. ')' → logprob: -11.125101089477539
    4. '():' → logprob: -14.000101089477539
    5. ' ):' → logprob: -15.125101089477539
    6. '):
' → logprob: -16.00010108947754
    7. '):

' → logprob: -16.50010108947754
    8. 'def' → logprob: -17.37510108947754
    9. '(n' → logprob: -17.50010108947754
    10. ')：' → logprob: -17.75010108947754

Token 168: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.002692532492801547
    2. '   ' → logprob: -6.252692699432373
    3. ' return' → logprob: -8.127692222595215
    4. ' (' → logprob: -8.377692222595215
    5. '(' → logprob: -9.127692222595215
    6. 'return' → logprob: -10.377692222595215
    7. ' n' → logprob: -10.377692222595215
    8. ':' → logprob: -10.502692222595215
    9. ' =' → logprob: -11.002692222595215
    10. ' ' → logprob: -11.877692222595215

Token 169: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7152553200721741
    2. 'return' (adapté à ' return') → logprob: -0.7152553200721741
    3. '[' → logprob: -4.090255260467529
    4. ' [' → logprob: -5.340255260467529
    5. '   ' → logprob: -9.215255737304688
    6. '[L' → logprob: -9.215255737304688
    7. 'def' → logprob: -10.340255737304688
    8. 'eturn' → logprob: -10.715255737304688
    9. '[int' → logprob: -10.840255737304688
    10. '[n' → logprob: -11.215255737304688

Token 170: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002768144244328141
    2. '[L' → logprob: -6.002768039703369
    3. ' [' → logprob: -8.252768516540527
    4. '[int' → logprob: -11.377768516540527
    5. '[S' → logprob: -11.502768516540527
    6. '[List' → logprob: -11.877768516540527
    7. '[Int' → logprob: -13.502768516540527
    8. '[len' → logprob: -14.752768516540527
    9. '[list' → logprob: -14.877768516540527
    10. '[I' → logprob: -15.627768516540527

Token 171: 'LS' (ID: 10172)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.4005012512207031
    2. 'LS' → logprob: -1.1505012512207031
    3. 'list' → logprob: -4.400501251220703
    4. '[S' → logprob: -6.775501251220703
    5. '[list' → logprob: -10.275501251220703
    6. '[' → logprob: -10.775501251220703
    7. 'ls' → logprob: -10.900501251220703
    8. 'sys' → logprob: -11.150501251220703
    9. '(S' → logprob: -11.900501251220703
    10. ' LS' → logprob: -12.025501251220703

Token 172: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1619633287191391
    2. '(n' → logprob: -1.9119633436203003
    3. '()]' → logprob: -6.41196346282959
    4. '()(' → logprob: -10.28696346282959
    5. ' ()' → logprob: -10.41196346282959
    6. '(' → logprob: -10.78696346282959
    7. '()
' → logprob: -12.91196346282959
    8. ' (' → logprob: -13.16196346282959
    9. '(i' → logprob: -13.53696346282959
    10. ']' → logprob: -13.78696346282959

Token 173: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -8.2994620242971e-06
    2. '(' → logprob: -12.000008583068848
    3. ' (' → logprob: -13.375008583068848
    4. ')' → logprob: -15.125008583068848
    5. 'for' → logprob: -15.500008583068848
    6. 'n' → logprob: -16.87500762939453
    7. ' for' → logprob: -17.12500762939453
    8. '()' → logprob: -18.50000762939453
    9. '(i' → logprob: -19.12500762939453
    10. '(N' → logprob: -19.75000762939453

Token 174: ' i' (ID: 575)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00021093101531732827
    2. ' n' → logprob: -8.625210762023926
    3. '(n' → logprob: -10.375210762023926
    4. 'int' → logprob: -16.500211715698242
    5. ')n' → logprob: -17.125211715698242
    6. '	n' → logprob: -18.625211715698242
    7. '(' → logprob: -19.875211715698242
    8. ' (' → logprob: -20.125211715698242
    9. '1' → logprob: -20.125211715698242
    10. ')' → logprob: -20.375211715698242

Token 175: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.41502121090888977
    2. '(' → logprob: -1.7900211811065674
    3. 'in' → logprob: -2.0400211811065674
    4. '(n' → logprob: -3.9150211811065674
    5. ' (' → logprob: -4.6650214195251465
    6. 'range' → logprob: -5.0400214195251465
    7. ' ' → logprob: -5.9150214195251465
    8. ' range' → logprob: -6.2900214195251465
    9. 'n' → logprob: -6.9150214195251465
    10. '(range' → logprob: -7.1650214195251465

Token 176: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023290082812309265
    2. ' range' → logprob: -3.7732901573181152
    3. '(range' → logprob: -10.023289680480957
    4. '(n' → logprob: -16.273290634155273
    5. 'ange' → logprob: -17.648290634155273
    6. '(' → logprob: -17.648290634155273
    7. 'rang' → logprob: -17.648290634155273
    8. 'n' → logprob: -18.273290634155273
    9. ' in' → logprob: -18.648290634155273
    10. 'ran' → logprob: -18.648290634155273

Token 177: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.692145012086257e-05
    2. 'n' → logprob: -10.500046730041504
    3. '(' → logprob: -11.500046730041504
    4. ' (' → logprob: -11.625046730041504
    5. ' n' → logprob: -16.00004768371582
    6. '(
' → logprob: -16.87504768371582
    7. 'range' → logprob: -17.75004768371582
    8. ')n' → logprob: -18.25004768371582
    9. '((' → logprob: -18.62504768371582
    10. '(range' → logprob: -18.62504768371582

Token 178: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0002371521550230682
    2. ')' → logprob: -8.500237464904785
    3. ']' → logprob: -10.750237464904785
    4. '(n' → logprob: -12.625237464904785
    5. '):' → logprob: -12.625237464904785
    6. '()]' → logprob: -13.000237464904785
    7. ')]
' → logprob: -13.750237464904785
    8. 'n' → logprob: -14.375237464904785
    9. '))' → logprob: -14.750237464904785
    10. '()' → logprob: -15.000237464904785

Token 179: 'sys' (ID: 17324)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07019739598035812
    2. 'class' → logprob: -2.820197343826294
    3. 'n' → logprob: -5.320197582244873
    4. 'd' → logprob: -6.195197582244873
    5. '#' → logprob: -7.570197582244873
    6. 'N' → logprob: -8.570197105407715
    7. 'a' → logprob: -9.195197105407715
    8. 'de' → logprob: -9.195197105407715
    9. 'ndef' → logprob: -9.695197105407715
    10. 'dp' → logprob: -10.070197105407715

Token 180: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.05070951208472252
    2. '.exit' → logprob: -3.1757094860076904
    3. '.stdout' → logprob: -5.1757097244262695
    4. '.stdin' → logprob: -6.5507097244262695
    5. '.stderr' → logprob: -8.05070972442627
    6. '.argv' → logprob: -8.92570972442627
    7. '.setdefault' → logprob: -9.17570972442627
    8. '.readline' → logprob: -11.30070972442627
    9. '.set' → logprob: -12.05070972442627
    10. '.write' → logprob: -12.55070972442627

Token 181: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.03823529928922653
    2. '_rec' → logprob: -3.2882351875305176
    3. '_limit' → logprob: -9.538235664367676
    4. 're' → logprob: -10.288235664367676
    5. 'limit' → logprob: -10.288235664367676
    6. '_re' → logprob: -10.913235664367676
    7. ' recursion' → logprob: -10.913235664367676
    8. 'ursion' → logprob: -13.038235664367676
    9. '_rc' → logprob: -13.163235664367676
    10. '_max' → logprob: -13.163235664367676

Token 182: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -9.372294698550832e-06
    2. 'urs' → logprob: -12.000009536743164
    3. 'usion' → logprob: -13.875009536743164
    4. 'ursive' → logprob: -14.000009536743164
    5. 'limit' → logprob: -14.250009536743164
    6. 'ur' → logprob: -14.750009536743164
    7. 'ursor' → logprob: -15.875009536743164
    8. 'ision' → logprob: -17.250009536743164
    9. 'rs' → logprob: -18.375009536743164
    10. '_limit' → logprob: -18.750009536743164

Token 183: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -4.4849443838757e-06
    2. '_limit' → logprob: -13.000004768371582
    3. 'lim' → logprob: -13.375004768371582
    4. 'depth' → logprob: -14.750004768371582
    5. ' limit' → logprob: -15.500004768371582
    6. 'limits' → logprob: -16.750003814697266
    7. 'Limit' → logprob: -18.625003814697266
    8. 'limited' → logprob: -18.875003814697266
    9. '-limit' → logprob: -19.250003814697266
    10. 'al' → logprob: -19.500003814697266

Token 184: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.200166469876422e-06
    2. '(
' → logprob: -12.375004768371582
    3. ' (' → logprob: -14.875004768371582
    4. '(int' → logprob: -15.000004768371582
    5. '((' → logprob: -15.250004768371582
    6. '()' → logprob: -17.5000057220459
    7. '100' → logprob: -18.2500057220459
    8. '(

' → logprob: -18.3750057220459
    9. '(
' → logprob: -19.2500057220459
    10. '(max' → logprob: -19.6250057220459

Token 185: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0009148012613877654
    2. '100' → logprob: -7.000914573669434
    3. '1' → logprob: -13.000914573669434
    4. ' ' → logprob: -14.250914573669434
    5. '200' → logprob: -16.62591552734375
    6. '999' → logprob: -16.75091552734375
    7. '300' → logprob: -16.75091552734375
    8. '500' → logprob: -16.87591552734375
    9. '(' → logprob: -17.25091552734375
    10. '400' → logprob: -17.62591552734375

Token 186: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.12704035639762878
    2. '00' → logprob: -2.127040386199951
    3. '0' → logprob: -9.252039909362793
    4. '010' → logprob: -11.752039909362793
    5. '007' → logprob: -12.877039909362793
    6. '001' → logprob: -13.127039909362793
    7. '10' → logprob: -13.377039909362793
    8. '009' → logprob: -14.377039909362793
    9. '006' → logprob: -14.877039909362793
    10. '002' → logprob: -15.002039909362793

Token 187: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010328111238777637
    2. ')' → logprob: -6.876032829284668
    3. '00' → logprob: -17.12603187561035
    4. ' )' → logprob: -17.25103187561035
    5. '(' → logprob: -18.00103187561035
    6. ')
' → logprob: -18.37603187561035
    7. '))' → logprob: -18.62603187561035
    8. '1' → logprob: -18.62603187561035
    9. ' ' → logprob: -19.00103187561035
    10. '_' → logprob: -20.25103187561035

Token 188: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.306760805164231e-05
    2. ')
' → logprob: -11.37501335144043
    3. ' )' → logprob: -13.75001335144043
    4. ')

' → logprob: -16.00001335144043
    5. '))' → logprob: -16.25001335144043
    6. ')
' → logprob: -16.37501335144043
    7. ')`' → logprob: -17.00001335144043
    8. '),' → logprob: -17.37501335144043
    9. ');' → logprob: -17.75001335144043
    10. '
' → logprob: -18.62501335144043

Token 189: 'mod' (ID: 4847)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.44225987792015076
    2. '
' → logprob: -1.3172599077224731
    3. 'class' → logprob: -2.8172597885131836
    4. 'n' → logprob: -4.192259788513184
    5. ' 
' → logprob: -5.067259788513184
    6. 'd' → logprob: -6.067259788513184
    7. '

' → logprob: -6.442259788513184
    8. '#' → logprob: -6.567259788513184
    9. '' → logprob: -6.692259788513184
    10. '  
' → logprob: -8.067259788513184

Token 190: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08035492151975632
    2. '=' → logprob: -3.205354928970337
    3. ' ' → logprob: -3.330354928970337
    4. '_' → logprob: -7.080354690551758
    5. ' _' → logprob: -11.080354690551758
    6. '  ' → logprob: -11.955354690551758
    7. ',' → logprob: -12.080354690551758
    8. '1' → logprob: -13.080354690551758
    9. ' =)' → logprob: -13.080354690551758
    10. ' ' → logprob: -13.205354690551758

Token 191: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.011060908436775208
    2. '10' → logprob: -4.51106071472168
    3. '100' → logprob: -11.88606071472168
    4. '1' → logprob: -12.13606071472168
    5. ' ' → logprob: -14.76106071472168
    6. ' 
' → logprob: -15.76106071472168
    7. '998' → logprob: -16.38606071472168
    8. 'int' → logprob: -16.63606071472168
    9. '109' → logprob: -17.01106071472168
    10. ' int' → logprob: -17.38606071472168

Token 192: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00017791526624932885
    2. '100' → logprob: -8.750178337097168
    3. '1' → logprob: -11.000178337097168
    4. ' ' → logprob: -13.000178337097168
    5. '998' → logprob: -14.875178337097168
    6. 'int' → logprob: -16.00017738342285
    7. '(' → logprob: -18.25017738342285
    8. 'pow' → logprob: -19.00017738342285
    9. '１０' → logprob: -19.75017738342285
    10. '109' → logprob: -19.87517738342285

Token 193: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.002243631286546588
    2. '9' → logprob: -6.127243518829346
    3. '0' → logprob: -10.752243995666504
    4. '09' → logprob: -11.127243995666504
    5. '+' → logprob: -11.752243995666504
    6. '00' → logprob: -12.127243995666504
    7. '009' → logprob: -12.127243995666504
    8. '```' → logprob: -13.877243995666504
    9. '_' → logprob: -14.252243995666504
    10. '7' → logprob: -15.252243995666504

Token 194: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -5.943783253314905e-05
    2. '007' → logprob: -10.125059127807617
    3. '7' → logprob: -11.125059127807617
    4. '0' → logprob: -12.750059127807617
    5. '+' → logprob: -14.000059127807617
    6. '00' → logprob: -15.000059127807617
    7. '9' → logprob: -15.500059127807617
    8. '07' → logprob: -15.750059127807617
    9. '19' → logprob: -16.625059127807617
    10. '```' → logprob: -17.000059127807617

Token 195: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -7.822646693966817e-06
    2. '+' → logprob: -12.125007629394531
    3. '07' → logprob: -13.250007629394531
    4. '9' → logprob: -14.625007629394531
    5. ' ' → logprob: -16.50000762939453
    6. '```' → logprob: -17.50000762939453
    7. ' +' → logprob: -17.75000762939453
    8. '79' → logprob: -18.50000762939453
    9. '0' → logprob: -18.87500762939453
    10. '
' → logprob: -19.50000762939453

Token 196: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.002433093497529626
    2. '

' → logprob: -6.8774333000183105
    3. '
' → logprob: -7.6274333000183105
    4. '\n' → logprob: -7.7524333000183105
    5. ' 
' → logprob: -8.377432823181152
    6. '' → logprob: -9.127432823181152
    7. '<|end|>' → logprob: -9.252432823181152
    8. '#' → logprob: -11.377432823181152
    9. '  
' → logprob: -11.877432823181152
    10. 'def' → logprob: -12.127432823181152

Token 197: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0022180574014782906
    2. 'class' → logprob: -6.627218246459961
    3. 'd' → logprob: -7.127218246459961
    4. 'n' → logprob: -9.752218246459961
    5. 'de' → logprob: -10.627218246459961
    6. '#' → logprob: -12.502218246459961
    7. 'dp' → logprob: -13.877218246459961
    8. 'a' → logprob: -14.627218246459961
    9. ' def' → logprob: -14.752218246459961
    10. 'N' → logprob: -15.002218246459961

Token 198: ' solve' (ID: 17722)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.025723613798618317
    2. ' solve' → logprob: -4.025723457336426
    3. ' dfs' → logprob: -5.775723457336426
    4. 'main' → logprob: -6.525723457336426
    5. ' factorial' → logprob: -7.400723457336426
    6. ' pow' → logprob: -7.775723457336426
    7. 'solve' → logprob: -7.900723457336426
    8. ' ma' → logprob: -7.900723457336426
    9. ' mod' → logprob: -8.525723457336426
    10. ' factor' → logprob: -8.650723457336426

Token 199: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00012844942102674395
    2. ' ():' → logprob: -9.000128746032715
    3. '():
' → logprob: -12.625128746032715
    4. '()' → logprob: -13.375128746032715
    5. '(' → logprob: -16.5001277923584
    6. ' ()' → logprob: -18.8751277923584
    7. '(":' → logprob: -19.2501277923584
    8. '().' → logprob: -19.5001277923584
    9. '():
' → logprob: -19.8751277923584
    10. '()(' → logprob: -20.0001277923584

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06403592973947525
    2. '(' → logprob: -4.564035892486572
    3. '    ' → logprob: -4.689035892486572
    4. 'n' → logprob: -4.939035892486572
    5. ':' → logprob: -5.064035892486572
    6. ' 
' → logprob: -5.064035892486572
    7. '    
' → logprob: -5.189035892486572
    8. ' ' → logprob: -5.314035892486572
    9. '
' → logprob: -5.564035892486572
    10. '<|end|>' → logprob: -5.689035892486572

Token 201: ' def' (ID: 1056)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.26018816232681274
    2. 'n' → logprob: -2.135188102722168
    3. ' n' → logprob: -2.385188102722168
    4. ' pass' → logprob: -4.385188102722168
    5. '    ' → logprob: -6.760188102722168
    6. 'a' → logprob: -7.010188102722168
    7. ' #' → logprob: -7.260188102722168
    8. 'pass' → logprob: -7.635188102722168
    9. 't' → logprob: -7.760188102722168
    10. ' 
' → logprob: -7.760188102722168

Token 202: ' f' (ID: 285)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.09941823780536652
    2. ' dfs' → logprob: -2.4744181632995605
    3. ' ' → logprob: -6.2244181632995605
    4. ' helper' → logprob: -6.7244181632995605
    5. ' input' → logprob: -6.8494181632995605
    6. '_' → logprob: -7.0994181632995605
    7. ' factorial' → logprob: -7.2244181632995605
    8. 'dfs' → logprob: -7.3494181632995605
    9. ' inner' → logprob: -7.4744181632995605
    10. ' factor' → logprob: -7.7244181632995605

Token 203: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7542508244514465
    2. '(n' → logprob: -1.3792507648468018
    3. '(i' → logprob: -2.1292507648468018
    4. '(x' → logprob: -2.6292507648468018
    5. 'actor' → logprob: -3.2542507648468018
    6. '(a' → logprob: -4.254251003265381
    7. 'or' → logprob: -4.754251003265381
    8. '(u' → logprob: -5.004251003265381
    9. 'ac' → logprob: -5.254251003265381
    10. 'a' → logprob: -6.379251003265381

Token 204: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13475099205970764
    2. '):' → logprob: -2.134751081466675
    3. ',b' → logprob: -5.759750843048096
    4. ' ,' → logprob: -5.884750843048096
    5. '):
' → logprob: -6.634750843048096
    6. ',n' → logprob: -9.134751319885254
    7. ',i' → logprob: -9.259751319885254
    8. ',a' → logprob: -10.134751319885254
    9. ' ):' → logprob: -10.134751319885254
    10. ',k' → logprob: -10.134751319885254

Token 205: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.09080006182193756
    2. ' b' → logprob: -2.4658000469207764
    3. 'l' → logprob: -7.4658002853393555
    4. 'k' → logprob: -7.9658002853393555
    5. 'i' → logprob: -8.715800285339355
    6. 'n' → logprob: -8.840800285339355
    7. ' l' → logprob: -8.965800285339355
    8. 'p' → logprob: -9.715800285339355
    9. ' k' → logprob: -9.965800285339355
    10. 'm' → logprob: -9.965800285339355

Token 206: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007530473521910608
    2. ')' → logprob: -8.125753402709961
    3. ',' → logprob: -8.375753402709961
    4. '):
' → logprob: -8.500753402709961
    5. ' ):' → logprob: -11.375753402709961
    6. ':' → logprob: -12.375753402709961
    7. '   ' → logprob: -13.125753402709961
    8. '=' → logprob: -13.375753402709961
    9. '):
' → logprob: -13.875753402709961
    10. ' ' → logprob: -15.125753402709961

Token 207: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06051488593220711
    2. '    ' → logprob: -3.5605149269104004
    3. ' ' → logprob: -4.4355149269104
    4. ':' → logprob: -5.3105149269104
    5. ' return' → logprob: -5.9355149269104
    6. ',' → logprob: -5.9355149269104
    7. ')' → logprob: -6.8105149269104
    8. '   ' → logprob: -6.8105149269104
    9. '        ' → logprob: -7.0605149269104
    10. '      ' → logprob: -7.1855149269104

Token 208: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9468744397163391
    2. '       ' → logprob: -1.6968743801116943
    3. ' if' → logprob: -1.6968743801116943
    4. ' return' → logprob: -1.8218743801116943
    5. '        ' → logprob: -3.3218743801116943
    6. '    ' → logprob: -4.071874618530273
    7. 'return' (adapté à ' return') → logprob: -4.571874618530273
    8. ' 
' → logprob: -5.196874618530273
    9. '   ' → logprob: -5.696874618530273
    10. 'if' → logprob: -5.946874618530273

Token 209: ' max' (ID: 2999)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5091907382011414
    2. ' a' → logprob: -1.0091907978057861
    3. ' (' → logprob: -3.759190797805786
    4. '(a' → logprob: -5.384190559387207
    5. ' max' → logprob: -5.759190559387207
    6. 'max' → logprob: -7.009190559387207
    7. '(' → logprob: -7.384190559387207
    8. '(max' → logprob: -7.884190559387207
    9. ' min' → logprob: -7.884190559387207
    10. ' ' → logprob: -8.384190559387207

Token 210: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.03387021645903587
    2. '(' → logprob: -3.408870220184326
    3. 'a' → logprob: -8.783869743347168
    4. ' (' → logprob: -10.658869743347168
    5. '(
' → logprob: -10.908869743347168
    6. '(abs' → logprob: -11.283869743347168
    7. ' a' → logprob: -12.658869743347168
    8. '(max' → logprob: -12.658869743347168
    9. '((' → logprob: -12.783869743347168
    10. ')' → logprob: -13.158869743347168

Token 211: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17271897196769714
    2. ',b' → logprob: -1.9227190017700195
    3. ' ,' → logprob: -4.5477190017700195
    4. '+b' → logprob: -7.4227190017700195
    5. '+' → logprob: -7.6727190017700195
    6. ' +' → logprob: -7.7977190017700195
    7. ' b' → logprob: -8.54771900177002
    8. ',
' → logprob: -9.29771900177002
    9. 'b' → logprob: -10.67271900177002
    10. ' ' → logprob: -11.67271900177002

Token 212: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.6326376795768738
    2. 'b' → logprob: -0.7576376795768738
    3. ')b' → logprob: -11.382637977600098
    4. ' ' → logprob: -11.632637977600098
    5. '0' → logprob: -12.382637977600098
    6. ' ' → logprob: -12.507637977600098
    7. ')' → logprob: -13.007637977600098
    8. ',b' → logprob: -13.632637977600098
    9. 'a' → logprob: -13.757637977600098
    10. '    ' → logprob: -14.132637977600098

Token 213: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002682496269699186
    2. ' )' → logprob: -8.62526798248291
    3. ')
' → logprob: -10.37526798248291
    4. ')+' → logprob: -10.87526798248291
    5. '   ' → logprob: -11.87526798248291
    6. '       ' → logprob: -12.00026798248291
    7. ',' → logprob: -12.12526798248291
    8. '+' → logprob: -12.12526798248291
    9. '),' → logprob: -12.62526798248291
    10. '))' → logprob: -12.75026798248291

Token 214: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 215: ' s' (ID: 265)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.25428029894828796
    2. 'a' → logprob: -1.5042803287506104
    3. ' b' → logprob: -7.004280090332031
    4. '(a' → logprob: -7.379280090332031
    5. 'b' → logprob: -8.129280090332031
    6. ' (' → logprob: -9.004280090332031
    7. ' not' → logprob: -9.254280090332031
    8. ' ' → logprob: -9.629280090332031
    9. ' len' → logprob: -10.254280090332031
    10. ' isinstance' → logprob: -10.379280090332031

Token 216: '[' (ID: 58)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.023539993911981583
    2. '[' → logprob: -4.773540019989014
    3. '[s' → logprob: -4.898540019989014
    4. '==' → logprob: -5.773540019989014
    5. '[len' → logprob: -6.523540019989014
    6. ' ==' → logprob: -7.398540019989014
    7. '   ' → logprob: -7.523540019989014
    8. 'a' → logprob: -7.898540019989014
    9. '[]' → logprob: -8.148539543151855
    10. '[i' → logprob: -9.023539543151855

Token 217: 'abs' (ID: 6071)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03956366330385208
    2. '0' → logprob: -3.5395636558532715
    3. ' a' → logprob: -5.9145636558532715
    4. 's' → logprob: -5.9145636558532715
    5. ']' → logprob: -7.1645636558532715
    6. '[a' → logprob: -7.2895636558532715
    7. 'len' → logprob: -7.7895636558532715
    8. 'b' → logprob: -7.7895636558532715
    9. ' ' → logprob: -8.41456413269043
    10. ':' → logprob: -8.66456413269043

Token 218: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.006992773152887821
    2. 'a' → logprob: -5.256992816925049
    3. '(' → logprob: -6.756992816925049
    4. '(b' → logprob: -9.00699234008789
    5. '(s' → logprob: -9.25699234008789
    6. '(abs' → logprob: -9.38199234008789
    7. '(i' → logprob: -9.63199234008789
    8. '_a' → logprob: -10.00699234008789
    9. '(
' → logprob: -10.13199234008789
    10. '(len' → logprob: -10.63199234008789

Token 219: '-b' (ID: 2118)
  Prédit: '-b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-b' → logprob: -1.0730152130126953
    2. '-' → logprob: -1.1980152130126953
    3. ' -' → logprob: -1.5730152130126953
    4. ')' → logprob: -2.4480152130126953
    5. ')]' → logprob: -3.4480152130126953
    6. ']' → logprob: -4.073015213012695
    7. ')>' → logprob: -5.823015213012695
    8. ' )' → logprob: -5.823015213012695
    9. '[' → logprob: -6.698015213012695
    10. '-s' → logprob: -6.948015213012695

Token 220: ')-' (ID: 14080)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.014954756014049053
    2. ')' → logprob: -5.014954566955566
    3. ' )' → logprob: -6.139954566955566
    4. '-' → logprob: -6.764954566955566
    5. ']' → logprob: -6.889954566955566
    6. '])' → logprob: -7.139954566955566
    7. ')<' → logprob: -7.264954566955566
    8. '[' → logprob: -7.639954566955566
    9. ')-' → logprob: -7.889954566955566
    10. ')])' → logprob: -8.514954566955566

Token 221: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008263026247732341
    2. ' ' → logprob: -7.125826358795166
    3. '0' → logprob: -11.375825881958008
    4. ']' → logprob: -12.875825881958008
    5. 's' → logprob: -13.625825881958008
    6. '   ' → logprob: -13.875825881958008
    7. 'len' → logprob: -14.000825881958008
    8. '>' → logprob: -14.688325881958008
    9. '  ' → logprob: -14.750825881958008
    10. ')' → logprob: -15.000825881958008

Token 222: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5715962648391724
    2. ' )' → logprob: -1.8215962648391724
    3. ' >=' → logprob: -2.696596145629883
    4. ']' → logprob: -3.321596145629883
    5. ' >' → logprob: -3.446596145629883
    6. ' <' → logprob: -3.571596145629883
    7. '>' → logprob: -3.821596145629883
    8. '>=' → logprob: -4.071596145629883
    9. ' <=' → logprob: -4.321596145629883
    10. ' ==' → logprob: -4.446596145629883

Token 223: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6435582637786865
    2. ' ==' → logprob: -0.7685582637786865
    3. '=='' → logprob: -5.393558502197266
    4. '[' → logprob: -5.643558502197266
    5. 'else' → logprob: -7.643558502197266
    6. '=' → logprob: -7.768558502197266
    7. ' =='' → logprob: -7.768558502197266
    8. ' else' → logprob: -7.893558502197266
    9. ' ' → logprob: -8.268558502197266
    10. '=="' → logprob: -8.768558502197266

Token 224: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.029054924845695496
    2. ''M' → logprob: -4.779055118560791
    3. ''A' → logprob: -5.779055118560791
    4. '"' → logprob: -5.779055118560791
    5. ''m' → logprob: -5.904055118560791
    6. ''#' → logprob: -6.404055118560791
    7. ''x' → logprob: -6.654055118560791
    8. ''>' → logprob: -6.904055118560791
    9. ''a' → logprob: -7.029055118560791
    10. ''C' → logprob: -7.279055118560791

Token 225: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6373582482337952
    2. '0' → logprob: -2.0123581886291504
    3. '"' → logprob: -2.1373581886291504
    4. '<' → logprob: -2.2623581886291504
    5. '>"' → logprob: -3.7623581886291504
    6. '>' → logprob: -4.63735818862915
    7. '+"' → logprob: -4.76235818862915
    8. ')"' → logprob: -4.88735818862915
    9. ' "' → logprob: -5.01235818862915
    10. '#"' → logprob: -5.13735818862915

Token 226: '"' (ID: 1)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.2583872377872467
    2. '"' → logprob: -1.8833872079849243
    3. ')' → logprob: -2.883387327194214
    4. 'else' → logprob: -4.508387088775635
    5. '")' → logprob: -5.258387088775635
    6. '       ' → logprob: -6.258387088775635
    7. '   ' → logprob: -7.883387088775635
    8. ' ' → logprob: -8.133387565612793
    9. '        ' → logprob: -8.758387565612793
    10. ' "' → logprob: -9.133387565612793

Token 227: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.006748178042471409
    2. 'else' → logprob: -5.006748199462891
    3. '        ' → logprob: -11.38174819946289
    4. ' ' → logprob: -11.50674819946289
    5. '    ' → logprob: -12.13174819946289
    6. '	else' → logprob: -13.13174819946289
    7. '       ' → logprob: -13.75674819946289
    8. '   ' → logprob: -14.38174819946289
    9. ',' → logprob: -15.13174819946289
    10. '  ' → logprob: -15.25674819946289

Token 228: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.21021775901317596
    2. '0' → logprob: -2.4602177143096924
    3. 'max' → logprob: -2.7102177143096924
    4. 'a' → logprob: -4.2102179527282715
    5. 'abs' → logprob: -4.8352179527282715
    6. '-' → logprob: -5.0852179527282715
    7. ' min' → logprob: -5.3352179527282715
    8. '-min' → logprob: -7.0852179527282715
    9. 'm' → logprob: -7.3352179527282715
    10. ' ' → logprob: -7.3352179527282715

Token 229: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0013271415373310447
    2. '(' → logprob: -6.626327037811279
    3. 'a' → logprob: -14.876327514648438
    4. '(abs' → logprob: -15.001327514648438
    5. '(
' → logprob: -15.376327514648438
    6. '((' → logprob: -16.126327514648438
    7. '(max' → logprob: -16.876327514648438
    8. '<|end|>' → logprob: -17.251327514648438
    9. '()' → logprob: -17.501327514648438
    10. '(ab' → logprob: -17.626327514648438

Token 230: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002311073010787368
    2. ',b' → logprob: -6.3773112297058105
    3. ' ,' → logprob: -7.5023112297058105
    4. '(b' → logprob: -10.627310752868652
    5. ',
' → logprob: -11.127310752868652
    6. '(' → logprob: -11.252310752868652
    7. 'b' → logprob: -13.502310752868652
    8. ')' → logprob: -13.752310752868652
    9. '(a' → logprob: -14.627310752868652
    10. ',a' → logprob: -15.002310752868652

Token 231: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.417976379045285e-05
    2. ')
' → logprob: -10.500043869018555
    3. '       ' → logprob: -12.000043869018555
    4. ' )' → logprob: -12.625043869018555
    5. ')return' → logprob: -12.875043869018555
    6. '))' → logprob: -13.500043869018555
    7. '<|end|>' → logprob: -14.000043869018555
    8. '   ' → logprob: -15.000043869018555
    9. ')))' → logprob: -15.125043869018555
    10. ')

' → logprob: -15.250043869018555

Token 232: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11987929046154022
    2. '<|end|>' → logprob: -2.6198792457580566
    3. ')' → logprob: -3.8698792457580566
    4. '   ' → logprob: -4.619879245758057
    5. ' ' → logprob: -5.619879245758057
    6. ':' → logprob: -6.744879245758057
    7. '    
' → logprob: -6.994879245758057
    8. ')
' → logprob: -7.369879245758057
    9. '       ' → logprob: -7.494879245758057
    10. '\n' → logprob: -7.619879245758057

Token 233: ' n' (ID: 297)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2615920305252075
    2. '   ' → logprob: -1.6365920305252075
    3. ':' → logprob: -4.886591911315918
    4. '<|end|>' → logprob: -5.011591911315918
    5. ' ' → logprob: -5.511591911315918
    6. '    
' → logprob: -5.636591911315918
    7. '\n' → logprob: -5.636591911315918
    8. ')' → logprob: -6.386591911315918
    9. '  
' → logprob: -6.386591911315918
    10. ' 
' → logprob: -6.636591911315918

Token 234: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2575048804283142
    2. ' =' → logprob: -1.632504940032959
    3. '=' → logprob: -3.757504940032959
    4. ' ,' → logprob: -4.882504940032959
    5. ' ' → logprob: -7.507504940032959
    6. ',n' → logprob: -9.7575044631958
    7. ')' → logprob: -11.5075044631958
    8. '=int' → logprob: -11.8825044631958
    9. '.' → logprob: -12.3825044631958
    10. ' =
' → logprob: -12.7575044631958

Token 235: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.04592837393283844
    2. 'int' → logprob: -3.545928478240967
    3. ' I' → logprob: -4.170928478240967
    4. ' int' → logprob: -7.420928478240967
    5. ' ' → logprob: -11.920928001403809
    6. 'len' → logprob: -13.420928001403809
    7. 's' → logprob: -14.420928001403809
    8. '10' → logprob: -14.795928001403809
    9. '  ' → logprob: -15.045928001403809
    10. 'LI' → logprob: -15.170928001403809

Token 236: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005253560841083527
    2. '()
' → logprob: -5.255253791809082
    3. ' ()' → logprob: -11.130253791809082
    4. ')' → logprob: -13.005253791809082
    5. '()
' → logprob: -13.380253791809082
    6. '())' → logprob: -15.005253791809082
    7. '()\' → logprob: -15.005253791809082
    8. '(' → logprob: -15.255253791809082
    9. '()

' → logprob: -16.130252838134766
    10. ' ()
' → logprob: -16.255252838134766

Token 237: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5495038032531738
    2. ' s' → logprob: -1.1745038032531738
    3. 's' → logprob: -2.299503803253174
    4. '	s' → logprob: -4.799503803253174
    5. ' ' → logprob: -6.049503803253174
    6. '    
' → logprob: -6.674503803253174
    7. '    ' → logprob: -7.924503803253174
    8. 'n' → logprob: -8.049503326416016
    9. '  ' → logprob: -8.424503326416016
    10. ' 
' → logprob: -8.799503326416016

Token 238: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.0019398193107917905
    2. ' s' → logprob: -6.25193977355957
    3. '   ' → logprob: -13.12693977355957
    4. 'a' → logprob: -13.50193977355957
    5. 'q' → logprob: -13.50193977355957
    6. 'm' → logprob: -13.75193977355957
    7. 'n' → logprob: -13.87693977355957
    8. 'l' → logprob: -14.25193977355957
    9. 'k' → logprob: -14.50193977355957
    10. ' ' → logprob: -14.75193977355957

Token 239: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132627606391907
    2. '=' → logprob: -1.313262701034546
    3. ' ' → logprob: -14.313262939453125
    4. ' =
' → logprob: -15.563262939453125
    5. ',' → logprob: -16.938262939453125
    6. '＝' → logprob: -17.063262939453125
    7. '=input' → logprob: -17.688262939453125
    8. 's' → logprob: -17.938262939453125
    9. '   ' → logprob: -17.938262939453125
    10. '	' → logprob: -17.938262939453125

Token 240: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.05500808730721474
    2. ' S' → logprob: -3.9300081729888916
    3. 'input' → logprob: -4.0550079345703125
    4. 'sys' → logprob: -4.3050079345703125
    5. ' input' → logprob: -6.3050079345703125
    6. ' sys' → logprob: -6.8050079345703125
    7. 'I' → logprob: -9.805007934570312
    8. ' ' → logprob: -11.555007934570312
    9. 's' → logprob: -11.680007934570312
    10. 'str' → logprob: -11.930007934570312

Token 241: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.68153518543113e-05
    2. '()
' → logprob: -9.875057220458984
    3. '()[' → logprob: -13.250057220458984
    4. '()\' → logprob: -13.750057220458984
    5. '(' → logprob: -14.750057220458984
    6. '())' → logprob: -15.125057220458984
    7. '   ' → logprob: -15.125057220458984
    8. '()]' → logprob: -15.500057220458984
    9. '();' → logprob: -15.500057220458984
    10. '(n' → logprob: -15.500057220458984

Token 242: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5849772691726685
    2. '   ' → logprob: -1.0849772691726685
    3. '<|end|>' → logprob: -2.459977149963379
    4. '    
' → logprob: -4.584977149963379
    5. '  
' → logprob: -5.709977149963379
    6. ' 
' → logprob: -5.959977149963379
    7. ' ' → logprob: -6.834977149963379
    8. '  ' → logprob: -8.084977149963379
    9. ')' → logprob: -8.209977149963379
    10. '   
' → logprob: -8.209977149963379

Token 243: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12181363999843597
    2. 'p' → logprob: -4.121813774108887
    3. 'ans' → logprob: -4.246813774108887
    4. 'q' → logprob: -4.371813774108887
    5. 'res' → logprob: -4.371813774108887
    6. 'd' → logprob: -4.371813774108887
    7. 'a' → logprob: -4.496813774108887
    8. ' dp' → logprob: -5.121813774108887
    9. 'arr' → logprob: -5.246813774108887
    10. 'stack' → logprob: -5.746813774108887

Token 244: ' print' (ID: 2123)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.7329863905906677
    2. 'dp' → logprob: -1.1079864501953125
    3. 'a' → logprob: -2.8579864501953125
    4. ' ans' → logprob: -3.6079864501953125
    5. ' a' → logprob: -3.7329864501953125
    6. 'd' → logprob: -4.3579864501953125
    7. ' d' → logprob: -4.6079864501953125
    8. ' ' → logprob: -5.1079864501953125
    9. ' res' → logprob: -5.2329864501953125
    10. ' p' → logprob: -5.2329864501953125

Token 245: '(s' (ID: 1858)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08861376345157623
    2. '(' → logprob: -2.963613748550415
    3. '(n' → logprob: -3.588613748550415
    4. '("' → logprob: -6.338613986968994
    5. '(s' → logprob: -6.338613986968994
    6. '(len' → logprob: -6.838613986968994
    7. '("")' → logprob: -8.088613510131836
    8. '('' → logprob: -8.338613510131836
    9. '(f' → logprob: -9.213613510131836
    10. 's' → logprob: -9.713613510131836

Token 246: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021509946964215487
    2. ' )' → logprob: -8.625215530395508
    3. ')
' → logprob: -11.250215530395508
    4. '   ' → logprob: -11.500215530395508
    5. ')#' → logprob: -12.000215530395508
    6. '[' → logprob: -12.875215530395508
    7. '#' → logprob: -13.750215530395508
    8. '))' → logprob: -13.875215530395508
    9. '")' → logprob: -15.875215530395508
    10. '
' → logprob: -15.875215530395508

Token 247: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11228426545858383
    2. '<|end|>' → logprob: -2.3622841835021973
    3. 'dp' → logprob: -6.237284183502197
    4. '    
' → logprob: -6.362284183502197
    5. '
' → logprob: -6.487284183502197
    6. '    ' → logprob: -6.737284183502197
    7. ')' → logprob: -6.987284183502197
    8. ' dp' → logprob: -6.987284183502197
    9. ' ' → logprob: -6.987284183502197
    10. '  ' → logprob: -7.737284183502197

Token 248: ' p' (ID: 275)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10608064383268356
    2. 'p' (adapté à ' p') → logprob: -3.4810805320739746
    3. 'ans' → logprob: -3.8560805320739746
    4. 'a' → logprob: -4.481080532073975
    5. 'res' → logprob: -4.856080532073975
    6. 'arr' → logprob: -4.981080532073975
    7. 'for' → logprob: -5.606080532073975
    8. 'd' → logprob: -5.731080532073975
    9. 'parent' → logprob: -6.106080532073975
    10. 'q' → logprob: -6.106080532073975

Token 249: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14377841353416443
    2. 'ermut' → logprob: -3.5187783241271973
    3. 'erm' → logprob: -3.7687783241271973
    4. '=' → logprob: -3.7687783241271973
    5. 'rev' → logprob: -4.143778324127197
    6. 'r' → logprob: -4.518778324127197
    7. 'os' → logprob: -4.768778324127197
    8. 'ar' → logprob: -4.893778324127197
    9. 'erms' → logprob: -5.768778324127197
    10. '1' → logprob: -6.143778324127197

Token 250: ' LI' (ID: 14875)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4371269941329956
    2. 'list' → logprob: -2.312127113342285
    3. '[]' → logprob: -2.562127113342285
    4. 'deque' → logprob: -2.687127113342285
    5. ' [' → logprob: -3.062127113342285
    6. ' list' → logprob: -3.062127113342285
    7. '[list' → logprob: -5.187127113342285
    8. '[n' → logprob: -5.687127113342285
    9. ' []' → logprob: -6.062127113342285
    10. ' deque' → logprob: -6.687127113342285

Token 251: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.010155980475246906
    2. '(n' → logprob: -5.135156154632568
    3. '(' → logprob: -5.510156154632568
    4. '()
' → logprob: -9.51015567779541
    5. '()(' → logprob: -10.13515567779541
    6. ' ()' → logprob: -10.38515567779541
    7. '().' → logprob: -11.88515567779541
    8. '(len' → logprob: -12.38515567779541
    9. '()[' → logprob: -12.88515567779541
    10. '()]' → logprob: -12.88515567779541

Token 252: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7578887939453125
    2. '
' → logprob: -2.1328887939453125
    3. '()' → logprob: -2.2578887939453125
    4. '[' → logprob: -2.6328887939453125
    5. '(p' → logprob: -3.1328887939453125
    6. '<|end|>' → logprob: -3.1328887939453125
    7. ' p' → logprob: -3.2578887939453125
    8. ' ' → logprob: -4.3828887939453125
    9. ')' → logprob: -4.3828887939453125
    10. 'p' → logprob: -5.0078887939453125

Token 253: ' dp' (ID: 21546)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4466347694396973
    2. ' ' → logprob: -1.5716347694396973
    3. ' p' → logprob: -1.6966347694396973
    4. 'p' → logprob: -2.1966347694396973
    5. ' for' → logprob: -2.9466347694396973
    6. '
' → logprob: -3.4466347694396973
    7. ' 
' → logprob: -3.5716347694396973
    8. '(' → logprob: -3.6966347694396973
    9. 'for' → logprob: -3.9466347694396973
    10. '<|end|>' → logprob: -4.196634769439697

Token 254: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07036606967449188
    2. '=' → logprob: -2.695366144180298
    3. '[' → logprob: -7.945365905761719
    4. '=[' → logprob: -10.070365905761719
    5. ' ' → logprob: -11.695365905761719
    6. ' =[' → logprob: -11.945365905761719
    7. ']' → logprob: -12.320365905761719
    8. ',' → logprob: -12.945365905761719
    9. '=[[' → logprob: -13.195365905761719
    10. ')' → logprob: -13.445365905761719

Token 255: ' [[' (ID: 9237)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.027275074273347855
    2. ' [' → logprob: -4.027275085449219
    3. '[[' → logprob: -5.277275085449219
    4. '[p' → logprob: -6.527275085449219
    5. '[-' → logprob: -7.027275085449219
    6. '[n' → logprob: -7.777275085449219
    7. '{}' → logprob: -7.777275085449219
    8. 'default' → logprob: -8.027275085449219
    9. '{' → logprob: -8.527275085449219
    10. ' [[' → logprob: -8.652275085449219

Token 256: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.37826603651046753
    2. 'float' → logprob: -1.7532660961151123
    3. 'False' → logprob: -2.7532660961151123
    4. 'math' → logprob: -3.0032660961151123
    5. '-' → logprob: -3.6282660961151123
    6. '10' → logprob: -7.378265857696533
    7. '-f' → logprob: -8.378266334533691
    8. '(' → logprob: -9.128266334533691
    9. '-inf' → logprob: -9.128266334533691
    10. '100' → logprob: -9.253266334533691

Token 257: ' if' (ID: 538)
  Prédit: ']*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.286523699760437
    2. ']' → logprob: -1.911523699760437
    3. ']*' → logprob: -2.4115238189697266
    4. 'for' → logprob: -5.161523818969727
    5. ' for' → logprob: -5.161523818969727
    6. ']+' → logprob: -9.661523818969727
    7. 'if' → logprob: -10.536523818969727
    8. ' ]' → logprob: -10.661523818969727
    9. '   ' → logprob: -12.411523818969727
    10. ' if' → logprob: -13.161523818969727

Token 258: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.012076200917363167
    2. 'j' → logprob: -5.137076377868652
    3. ' i' → logprob: -5.637076377868652
    4. 'x' → logprob: -6.512076377868652
    5. 'p' → logprob: -8.262076377868652
    6. 'a' → logprob: -8.387076377868652
    7. '(i' → logprob: -8.512076377868652
    8. '   ' → logprob: -9.137076377868652
    9. 'k' → logprob: -9.762076377868652
    10. ' j' → logprob: -10.012076377868652

Token 259: ' else' (ID: 1203)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2523680031299591
    2. ' ==' → logprob: -1.5023679733276367
    3. '<=' → logprob: -8.252367973327637
    4. ' <=' → logprob: -9.377367973327637
    5. '!=' → logprob: -10.502367973327637
    6. '>=' → logprob: -11.252367973327637
    7. ' !=' → logprob: -11.377367973327637
    8. ' >=' → logprob: -11.502367973327637
    9. ' <' → logprob: -12.627367973327637
    10. '==(' → logprob: -12.627367973327637

Token 260: ' p' (ID: 275)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4783875644207001
    2. 'math' → logprob: -1.8533875942230225
    3. 'float' → logprob: -2.1033875942230225
    4. '0' → logprob: -2.6033875942230225
    5. '-' → logprob: -4.978387355804443
    6. 'p' → logprob: -5.353387355804443
    7. 'i' → logprob: -5.853387355804443
    8. 'int' → logprob: -6.228387355804443
    9. '100' → logprob: -6.353387355804443
    10. 'n' → logprob: -6.353387355804443

Token 261: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.020180830731987953
    2. '[' → logprob: -4.020180702209473
    3. '[j' → logprob: -6.270180702209473
    4. '[n' → logprob: -9.770180702209473
    5. '[p' → logprob: -10.770180702209473
    6. '0' → logprob: -10.770180702209473
    7. 'i' → logprob: -11.645180702209473
    8. '[a' → logprob: -11.895180702209473
    9. '[I' → logprob: -11.895180702209473
    10. '[k' → logprob: -12.645180702209473

Token 262: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07605928182601929
    2. '[i' → logprob: -2.701059341430664
    3. '][' → logprob: -6.201059341430664
    4. ']+' → logprob: -6.326059341430664
    5. ' for' → logprob: -7.451059341430664
    6. ']*' → logprob: -8.076059341430664
    7. '-' → logprob: -8.451059341430664
    8. ']]' → logprob: -8.576059341430664
    9. ' ]' → logprob: -8.701059341430664
    10. 'i' → logprob: -8.701059341430664

Token 263: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.34959301352500916
    2. 'for' → logprob: -1.2245930433273315
    3. '   ' → logprob: -7.849593162536621
    4. '+' → logprob: -7.974593162536621
    5. ' ' → logprob: -8.849593162536621
    6. '-' → logprob: -9.349593162536621
    7. '    ' → logprob: -10.349593162536621
    8. ' if' → logprob: -10.724593162536621
    9. '	for' → logprob: -10.849593162536621
    10. '  ' → logprob: -10.974593162536621

Token 264: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0043155839666724205
    2. 'j' → logprob: -5.879315376281738
    3. ' i' → logprob: -6.504315376281738
    4. ' j' → logprob: -11.754315376281738
    5. '	i' → logprob: -12.754315376281738
    6. 'p' → logprob: -14.754315376281738
    7. ' ' → logprob: -15.504315376281738
    8. '   ' → logprob: -15.629315376281738
    9. ')i' → logprob: -15.629315376281738
    10. ')' → logprob: -15.754315376281738

Token 265: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03820294514298439
    2. 'in' → logprob: -3.288203001022339
    3. ' ' → logprob: -9.163203239440918
    4. 'n' → logprob: -11.413203239440918
    5. ' i' → logprob: -11.538203239440918
    6. 'range' → logprob: -11.663203239440918
    7. ')' → logprob: -12.038203239440918
    8. ',' → logprob: -12.413203239440918
    9. '	in' → logprob: -12.413203239440918
    10. ']' → logprob: -13.288203239440918

Token 266: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0012527309590950608
    2. ' range' → logprob: -6.7512526512146
    3. '[' → logprob: -9.501253128051758
    4. '(range' → logprob: -12.251253128051758
    5. '(' → logprob: -13.126253128051758
    6. '   ' → logprob: -14.751253128051758
    7. 'p' → logprob: -15.751253128051758
    8. '	range' → logprob: -15.876253128051758
    9. ' ' → logprob: -16.376253128051758
    10. 'ran' → logprob: -16.501253128051758

Token 267: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1072494983673096
    2. '2' → logprob: -1.1072494983673096
    3. '(n' → logprob: -1.1072494983673096
    4. '(i' → logprob: -5.3572492599487305
    5. '3' → logprob: -6.3572492599487305
    6. 'n' → logprob: -6.7322492599487305
    7. '(m' → logprob: -8.73224925994873
    8. '1' → logprob: -8.85724925994873
    9. '4' → logprob: -9.23224925994873
    10. 'i' → logprob: -9.23224925994873

Token 268: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.12784233689308167
    2. '+' → logprob: -2.127842426300049
    3. ' +' → logprob: -7.877842426300049
    4. ' )' → logprob: -8.50284194946289
    5. ')' → logprob: -8.87784194946289
    6. ')]
' → logprob: -8.87784194946289
    7. '   ' → logprob: -10.75284194946289
    8. '+n' → logprob: -12.25284194946289
    9. ' ' → logprob: -12.62784194946289
    10. ']' → logprob: -12.62784194946289

Token 269: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025369017384946346
    2. '2' → logprob: -6.002536773681641
    3. ' ' → logprob: -9.75253677368164
    4. '
' → logprob: -13.87753677368164
    5. 'n' → logprob: -14.37753677368164
    6. '   ' → logprob: -14.87753677368164
    7. '(n' → logprob: -15.62753677368164
    8. '3' → logprob: -15.94003677368164
    9. '(' → logprob: -16.19003677368164
    10. '+' → logprob: -16.44003677368164

Token 270: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.07155756652355194
    2. ']' → logprob: -2.6965575218200684
    3. ' ]' → logprob: -6.821557521820068
    4. ')' → logprob: -8.321557998657227
    5. ' )' → logprob: -9.196557998657227
    6. '   ' → logprob: -9.696557998657227
    7. ']]' → logprob: -9.946557998657227
    8. '}]' → logprob: -10.571557998657227
    9. '])' → logprob: -11.321557998657227
    10. ' ' → logprob: -11.821557998657227

Token 271: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05208197236061096
    2. 'for' → logprob: -3.677082061767578
    3. '   ' → logprob: -4.052082061767578
    4. '    ' → logprob: -5.052082061767578
    5. '	for' → logprob: -7.802082061767578
    6. '        ' → logprob: -7.927082061767578
    7. '       ' → logprob: -8.177082061767578
    8. ' ' → logprob: -8.302082061767578
    9. ']' → logprob: -9.052082061767578
    10. '  ' → logprob: -9.427082061767578

Token 272: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3874211013317108
    2. 'i' → logprob: -1.1374211311340332
    3. ' range' → logprob: -8.262420654296875
    4. 'range' → logprob: -9.137420654296875
    5. '_i' → logprob: -9.387420654296875
    6. '	i' → logprob: -9.762420654296875
    7. '_' → logprob: -10.262420654296875
    8. ' _' → logprob: -13.137420654296875
    9. '(i' → logprob: -13.512420654296875
    10. ' ' → logprob: -13.637420654296875

Token 273: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0055409702472388744
    2. 'in' → logprob: -5.25554084777832
    3. '<|end|>' → logprob: -8.75554084777832
    4. ' ' → logprob: -9.50554084777832
    5. ' n' → logprob: -10.75554084777832
    6. '	in' → logprob: -11.25554084777832
    7. 'n' → logprob: -11.50554084777832
    8. 'range' → logprob: -11.75554084777832
    9. '<|end|>' → logprob: -11.88054084777832
    10. ' i' → logprob: -12.00554084777832

Token 274: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759469270706177
    2. 'range' → logprob: -0.8259469270706177
    3. '(range' → logprob: -12.325946807861328
    4. '	range' → logprob: -13.325946807861328
    5. ' xrange' → logprob: -15.075946807861328
    6. ' ran' → logprob: -15.325946807861328
    7. 'ran' → logprob: -15.575946807861328
    8. ' ' → logprob: -15.825946807861328
    9. ' rang' → logprob: -15.950946807861328
    10. 'rang' → logprob: -15.950946807861328

Token 275: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0010965227847918868
    2. 'n' → logprob: -6.876096725463867
    3. '(' → logprob: -10.001096725463867
    4. ' n' → logprob: -11.001096725463867
    5. '(
' → logprob: -14.501096725463867
    6. '	n' → logprob: -14.751096725463867
    7. ' (' → logprob: -15.001096725463867
    8. ')n' → logprob: -15.251096725463867
    9. ',n' → logprob: -16.251096725463867
    10. '   ' → logprob: -16.876096725463867

Token 276: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0002137882256647572
    2. ' n' → logprob: -8.500213623046875
    3. '(n' → logprob: -11.875213623046875
    4. '   ' → logprob: -13.250213623046875
    5. '	n' → logprob: -14.625213623046875
    6. '
' → logprob: -15.000213623046875
    7. ')n' → logprob: -15.125213623046875
    8. ')' → logprob: -15.750213623046875
    9. ' ' → logprob: -16.375213623046875
    10. ',n' → logprob: -16.500213623046875

Token 277: ' <<' (ID: 2256)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.506527304649353
    2. ',' → logprob: -1.506527304649353
    3. ',n' → logprob: -1.881527304649353
    4. ' ,' → logprob: -4.756527423858643
    5. ' n' → logprob: -4.881527423858643
    6. 'n' → logprob: -5.381527423858643
    7. ')n' → logprob: -7.506527423858643
    8. '0' → logprob: -8.131526947021484
    9. '+n' → logprob: -8.131526947021484
    10. ' -' → logprob: -8.256526947021484

Token 278: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.546478935983032e-05
    2. ' n' → logprob: -10.750025749206543
    3. '20' → logprob: -13.625025749206543
    4. '(n' → logprob: -13.750025749206543
    5. '	n' → logprob: -14.625025749206543
    6. '18' → logprob: -15.250025749206543
    7. '16' → logprob: -15.875025749206543
    8. '17' → logprob: -16.000024795532227
    9. '15' → logprob: -16.125024795532227
    10. '10' → logprob: -16.125024795532227

Token 279: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.004397005774080753
    2. ')' → logprob: -5.629396915435791
    3. ')])' → logprob: -7.879396915435791
    4. ')][' → logprob: -8.25439739227295
    5. ' )' → logprob: -9.25439739227295
    6. ')],' → logprob: -10.87939739227295
    7. '])]' → logprob: -11.62939739227295
    8. ']' → logprob: -11.75439739227295
    9. '])' → logprob: -12.12939739227295
    10. ')n' → logprob: -12.12939739227295

Token 280: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 281: ' max' (ID: 2999)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2503211498260498
    2. ' for' → logprob: -2.25032114982605
    3. ')' → logprob: -3.00032114982605
    4. 'for' → logprob: -4.125321388244629
    5. '<|end|>' → logprob: -4.500321388244629
    6. '   ' → logprob: -4.750321388244629
    7. '0' → logprob: -5.000321388244629
    8. '[' → logprob: -5.250321388244629
    9. ' 
' → logprob: -5.750321388244629
    10. ' ]' → logprob: -6.000321388244629

Token 282: 'n' (ID: 77)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3501288890838623
    2. '_val' → logprob: -1.7251288890838623
    3. '_value' → logprob: -2.6001288890838623
    4. '_dp' → logprob: -4.225129127502441
    5. '_p' → logprob: -4.475129127502441
    6. '(dp' → logprob: -4.975129127502441
    7. '(' → logprob: -5.475129127502441
    8. '_diff' → logprob: -7.100129127502441
    9. '_v' → logprob: -7.100129127502441
    10. '_score' → logprob: -7.600129127502441

Token 283: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1185666173696518
    2. ' =' → logprob: -2.2435665130615234
    3. '_' → logprob: -5.493566513061523
    4. 'p' → logprob: -7.743566513061523
    5. '_val' → logprob: -8.243566513061523
    6. 'x' → logprob: -8.493566513061523
    7. 'dp' → logprob: -8.743566513061523
    8. '_=' → logprob: -8.743566513061523
    9. '_dp' → logprob: -8.993566513061523
    10. ' ' → logprob: -9.993566513061523

Token 284: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0923399925231934
    2. '-' → logprob: -1.7173399925231934
    3. 'float' → logprob: -2.0923399925231934
    4. '10' → logprob: -2.4673399925231934
    5. '-p' → logprob: -2.8423399925231934
    6. 'max' → logprob: -3.0923399925231934
    7. ' float' → logprob: -3.2173399925231934
    8. ' p' → logprob: -3.4673399925231934
    9. ' max' → logprob: -3.4673399925231934
    10. ' ' → logprob: -3.9673399925231934

Token 285: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.11869478225708
    2. '-' → logprob: -1.74369478225708
    3. 'float' → logprob: -1.74369478225708
    4. 'max' → logprob: -1.99369478225708
    5. '10' → logprob: -2.11869478225708
    6. 'p' → logprob: -2.86869478225708
    7. 'int' → logprob: -5.99369478225708
    8. '1' → logprob: -6.86869478225708
    9. 'n' → logprob: -7.11869478225708
    10. 'sum' → logprob: -7.11869478225708

Token 286: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.3992905914783478
    2. ' <<' → logprob: -1.1492905616760254
    3. '
' → logprob: -5.149290561676025
    4. ' ' → logprob: -5.899290561676025
    5. ' 
' → logprob: -7.399290561676025
    6. '000' → logprob: -7.524290561676025
    7. '<<(' → logprob: -7.899290561676025
    8. ')' → logprob: -8.024291038513184
    9. ' <<=' → logprob: -8.149291038513184
    10. '0' → logprob: -8.274291038513184

Token 287: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002229832811281085
    2. ' n' → logprob: -6.127229690551758
    3. '20' → logprob: -11.127229690551758
    4. '(n' → logprob: -11.377229690551758
    5. '	n' → logprob: -12.127229690551758
    6. '18' → logprob: -12.377229690551758
    7. '16' → logprob: -13.002229690551758
    8. '   ' → logprob: -13.002229690551758
    9. '(' → logprob: -14.752229690551758
    10. '19' → logprob: -14.752229690551758

Token 288: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08268938213586807
    2. '   ' → logprob: -3.0826892852783203
    3. ' for' → logprob: -4.33268928527832
    4. ' 
' → logprob: -5.20768928527832
    5. '    
' → logprob: -5.70768928527832
    6. 'for' → logprob: -5.95768928527832
    7. ' ' → logprob: -5.95768928527832
    8. '<|end|>' → logprob: -6.45768928527832
    9. '  
' → logprob: -6.58268928527832
    10. '' → logprob: -7.08268928527832

Token 289: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8780869245529175
    2. '<|end|>' → logprob: -1.1280869245529175
    3. ' for' → logprob: -1.8780869245529175
    4. ' ' → logprob: -2.503087043762207
    5. ')' → logprob: -4.253087043762207
    6. 'for' → logprob: -6.003087043762207
    7. '    ' → logprob: -6.503087043762207
    8. '  ' → logprob: -6.503087043762207
    9. ' i' → logprob: -6.753087043762207
    10. '<|end|>' → logprob: -6.878087043762207

Token 290: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1505454033613205
    2. 'for' (adapté à ' for') → logprob: -2.025545358657837
    3. '   ' → logprob: -5.400545597076416
    4. ' i' → logprob: -6.025545597076416
    5. 'i' → logprob: -7.900545597076416
    6. ' ' → logprob: -8.650545120239258
    7. 'n' → logprob: -9.275545120239258
    8. ' 
' → logprob: -9.900545120239258
    9. '	for' → logprob: -10.275545120239258
    10. ')' → logprob: -10.275545120239258

Token 291: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8631174564361572
    2. 'i' → logprob: -1.2381174564361572
    3. ' mask' → logprob: -1.7381174564361572
    4. 'mask' → logprob: -2.4881174564361572
    5. ' m' → logprob: -4.863117218017578
    6. 'm' → logprob: -4.863117218017578
    7. ' s' → logprob: -5.988117218017578
    8. ' x' → logprob: -5.988117218017578
    9. 'x' → logprob: -6.238117218017578
    10. ' subset' → logprob: -6.863117218017578

Token 292: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.022814905270934105
    2. 'in' → logprob: -3.897814989089966
    3. ' ' → logprob: -6.272814750671387
    4. 'n' → logprob: -9.397814750671387
    5. ' i' → logprob: -9.522814750671387
    6. ',' → logprob: -9.647814750671387
    7. '(' → logprob: -9.772814750671387
    8. '	in' → logprob: -10.022814750671387
    9. ' ,' → logprob: -11.772814750671387
    10. ' n' → logprob: -12.272814750671387

Token 293: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47444579005241394
    2. ' range' → logprob: -0.9744458198547363
    3. ' p' → logprob: -9.224445343017578
    4. 'n' → logprob: -9.724445343017578
    5. 'p' → logprob: -9.849445343017578
    6. ' ' → logprob: -10.599445343017578
    7. ' n' → logprob: -10.849445343017578
    8. 'max' → logprob: -10.849445343017578
    9. '(range' → logprob: -11.224445343017578
    10. 'r' → logprob: -11.349445343017578

Token 294: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1489107757806778
    2. '(' → logprob: -2.0239107608795166
    3. '(max' → logprob: -5.148910999298096
    4. ' (' → logprob: -8.898910522460938
    5. 'n' → logprob: -9.148910522460938
    6. '1' → logprob: -9.273910522460938
    7. 'max' → logprob: -10.398910522460938
    8. '(
' → logprob: -11.023910522460938
    9. ')' → logprob: -11.648910522460938
    10. ' n' → logprob: -12.273910522460938

Token 295: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3443845808506012
    2. '):' → logprob: -1.5943845510482788
    3. '):
' → logprob: -2.4693846702575684
    4. ' +' → logprob: -6.094384670257568
    5. '   ' → logprob: -7.594384670257568
    6. '-' → logprob: -8.34438419342041
    7. ')' → logprob: -8.46938419342041
    8. ' ):' → logprob: -9.09438419342041
    9. '+
' → logprob: -9.34438419342041
    10. '
' → logprob: -9.46938419342041

Token 296: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8905907273292542
    2. '   ' → logprob: -1.0155906677246094
    3. ' for' → logprob: -1.6405906677246094
    4. ' ' → logprob: -3.8905906677246094
    5. ',' → logprob: -5.390590667724609
    6. '    ' → logprob: -5.515590667724609
    7. '	for' → logprob: -6.640590667724609
    8. '<|end|>' → logprob: -7.390590667724609
    9. 'for' → logprob: -7.640590667724609
    10. ' if' → logprob: -7.890590667724609

Token 297: ' j' (ID: 441)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2631862461566925
    2. ' for' → logprob: -1.5131862163543701
    3. '   ' → logprob: -4.513186454772949
    4. '       ' → logprob: -9.76318645477295
    5. '    ' → logprob: -9.76318645477295
    6. 'dp' → logprob: -10.38818645477295
    7. '	for' → logprob: -10.76318645477295
    8. ' ' → logprob: -11.01318645477295
    9. ' dp' → logprob: -11.13818645477295
    10. 'max' → logprob: -12.13818645477295

Token 298: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18344742059707642
    2. '+=' → logprob: -2.4334473609924316
    3. ' +=' → logprob: -2.8084473609924316
    4. '=' → logprob: -4.433447360992432
    5. ' +' → logprob: -5.308447360992432
    6. ' =' → logprob: -6.933447360992432
    7. ',' → logprob: -7.433447360992432
    8. ')' → logprob: -8.43344783782959
    9. ':' → logprob: -8.55844783782959
    10. ' in' → logprob: -8.68344783782959

Token 299: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7557044625282288
    2. ' =' → logprob: -1.130704402923584
    3. '+' → logprob: -1.755704402923584
    4. ' +=' → logprob: -4.380704402923584
    5. '+=' → logprob: -4.630704402923584
    6. ' +' → logprob: -5.380704402923584
    7. ' ' → logprob: -5.380704402923584
    8. '   ' → logprob: -7.005704402923584
    9. ')' → logprob: -7.130704402923584
    10. '    ' → logprob: -8.255704879760742

Token 300: ' ' (ID: 220)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.13873714208602905
    2. '0' → logprob: -2.513737201690674
    3. ' j' → logprob: -4.138737201690674
    4. '1' → logprob: -4.513737201690674
    5. 'n' → logprob: -5.138737201690674
    6. 'max' → logprob: -5.388737201690674
    7. '(j' → logprob: -5.638737201690674
    8. '(' → logprob: -6.013737201690674
    9. 'p' → logprob: -6.138737201690674
    10. ' ' → logprob: -7.013737201690674

Token 301: '1' (ID: 16)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.02356584370136261
    2. '0' → logprob: -5.023565769195557
    3. '1' → logprob: -5.023565769195557
    4. '(j' → logprob: -5.398565769195557
    5. 'n' → logprob: -6.523565769195557
    6. 'p' → logprob: -6.648565769195557
    7. 'max' → logprob: -6.773565769195557
    8. '(' → logprob: -6.773565769195557
    9. '(n' → logprob: -8.523566246032715
    10. '(p' → logprob: -9.273566246032715

Token 302: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.12795709073543549
    2. ' <<' → logprob: -2.1279571056365967
    3. '<' → logprob: -7.002956867218018
    4. '<<<' → logprob: -10.627957344055176
    5. ' ' → logprob: -11.127957344055176
    6. '
' → logprob: -11.127957344055176
    7. '1' → logprob: -11.377957344055176
    8. 'j' → logprob: -11.752957344055176
    9. '<<(' → logprob: -12.002957344055176
    10. ' <<=' → logprob: -12.127957344055176

Token 303: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0005541055579669774
    2. ' j' → logprob: -7.500554084777832
    3. '	j' → logprob: -14.000554084777832
    4. '<|end|>' → logprob: -15.625554084777832
    5. '[j' → logprob: -16.12555503845215
    6. '$j' → logprob: -16.87555503845215
    7. '_j' → logprob: -17.37555503845215
    8. ' ' → logprob: -17.50055503845215
    9. '   ' → logprob: -17.75055503845215
    10. '(j' → logprob: -18.00055503845215

Token 304: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10157046467065811
    2. ' for' → logprob: -3.4765703678131104
    3. '       ' → logprob: -3.8515703678131104
    4. ' 
' → logprob: -3.9765703678131104
    5. '   ' → logprob: -5.1015706062316895
    6. '        
' → logprob: -5.4765706062316895
    7. '    
' → logprob: -5.4765706062316895
    8. 'for' → logprob: -5.8515706062316895
    9. '<|end|>' → logprob: -6.1015706062316895
    10. '  
' → logprob: -6.3515706062316895

Token 305: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2889389395713806
    2. '       ' → logprob: -2.6639389991760254
    3. '   ' → logprob: -3.0389389991760254
    4. '<|end|>' → logprob: -3.1639389991760254
    5. ' 
' → logprob: -3.4139389991760254
    6. ' for' → logprob: -3.9139389991760254
    7. ' ' → logprob: -4.413938999176025
    8. '  
' → logprob: -5.038938999176025
    9. '    
' → logprob: -5.413938999176025
    10. '        
' → logprob: -5.913938999176025

Token 306: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.49119800329208374
    2. ' for' → logprob: -0.9911980032920837
    3. '       ' → logprob: -4.2411980628967285
    4. '   ' → logprob: -5.9911980628967285
    5. ' ' → logprob: -10.99119758605957
    6. '	for' → logprob: -11.11619758605957
    7. '    ' → logprob: -11.49119758605957
    8. ' i' → logprob: -11.99119758605957
    9. 'i' → logprob: -11.99119758605957
    10. 'if' → logprob: -12.49119758605957

Token 307: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02846129983663559
    2. ' i' → logprob: -3.778461217880249
    3. 'k' → logprob: -5.528461456298828
    4. 'mask' → logprob: -7.278461456298828
    5. 'x' → logprob: -8.903461456298828
    6. ' k' → logprob: -9.528461456298828
    7. 'j' → logprob: -9.653461456298828
    8. ' mask' → logprob: -9.778461456298828
    9. 'm' → logprob: -10.278461456298828
    10. 'p' → logprob: -10.528461456298828

Token 308: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048698533326387405
    2. 'in' → logprob: -3.0486984252929688
    3. ' ' → logprob: -9.548698425292969
    4. 'n' → logprob: -11.673698425292969
    5. '	in' → logprob: -12.173698425292969
    6. ',' → logprob: -12.298698425292969
    7. '   ' → logprob: -12.423698425292969
    8. ' i' → logprob: -12.798698425292969
    9. '  ' → logprob: -12.798698425292969
    10. 'range' → logprob: -12.923698425292969

Token 309: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3132938742637634
    2. ' range' → logprob: -1.3132939338684082
    3. ' ' → logprob: -11.18829345703125
    4. 'max' → logprob: -12.56329345703125
    5. 'ran' → logprob: -12.56329345703125
    6. '(range' → logprob: -13.06329345703125
    7. 'r' → logprob: -13.43829345703125
    8. 'rang' → logprob: -13.56329345703125
    9. '   ' → logprob: -13.68829345703125
    10. ' rang' → logprob: -14.18829345703125

Token 310: '(' (ID: 7)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5456027984619141
    2. '(max' → logprob: -0.9206027984619141
    3. ' max' → logprob: -4.545602798461914
    4. '(' → logprob: -5.170602798461914
    5. 'n' → logprob: -5.920602798461914
    6. '(n' → logprob: -7.045602798461914
    7. '(j' → logprob: -7.045602798461914
    8. 'j' → logprob: -7.920602798461914
    9. 'range' → logprob: -7.920602798461914
    10. ' (' → logprob: -8.420602798461914

Token 311: '1' (ID: 16)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0029324181377887726
    2. 'n' → logprob: -6.002932548522949
    3. ' max' → logprob: -8.25293254852295
    4. 'j' → logprob: -8.75293254852295
    5. 'p' → logprob: -11.37793254852295
    6. '(max' → logprob: -11.50293254852295
    7. '1' → logprob: -11.87793254852295
    8. ' n' → logprob: -12.75293254852295
    9. '   ' → logprob: -13.37793254852295
    10. '0' → logprob: -13.87793254852295

Token 312: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -1.862776517868042
    2. ' <<' → logprob: -1.987776517868042
    3. 'max' → logprob: -1.987776517868042
    4. '):
' → logprob: -2.112776517868042
    5. '(max' → logprob: -2.362776517868042
    6. ')' → logprob: -2.612776517868042
    7. '   ' → logprob: -2.862776517868042
    8. 'n' → logprob: -2.862776517868042
    9. ' max' → logprob: -3.737776517868042
    10. '(' → logprob: -3.987776517868042

Token 313: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0006886058254167438
    2. ' n' → logprob: -7.375688552856445
    3. 'j' → logprob: -10.000688552856445
    4. '(n' → logprob: -11.750688552856445
    5. '   ' → logprob: -12.750688552856445
    6. '	n' → logprob: -12.750688552856445
    7. ' ' → logprob: -14.500688552856445
    8. '
' → logprob: -14.625688552856445
    9. '(' → logprob: -14.875688552856445
    10. 'nj' → logprob: -15.125688552856445

Token 314: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.018319088965654373
    2. '):' → logprob: -4.018319129943848
    3. ' ):
' → logprob: -9.518319129943848
    4. '):
' → logprob: -9.643319129943848
    5. '       ' → logprob: -11.268319129943848
    6. ' ):' → logprob: -12.018319129943848
    7. ')' → logprob: -12.268319129943848
    8. '):

' → logprob: -13.268319129943848
    9. '           ' → logprob: -13.393319129943848
    10. '():
' → logprob: -13.893319129943848

Token 315: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.034611381590366364
    2. '       ' → logprob: -4.034611225128174
    3. ' if' → logprob: -4.784611225128174
    4. '	       ' → logprob: -5.659611225128174
    5. '<|end|>' → logprob: -6.659611225128174
    6. '        ' → logprob: -6.784611225128174
    7. ',' → logprob: -7.659611225128174
    8. '		' → logprob: -8.534611701965332
    9. '<|end|>' → logprob: -8.784611701965332
    10. '   ' → logprob: -8.909611701965332

Token 316: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.00861091073602438
    2. '           ' → logprob: -5.633610725402832
    3. 'if' (adapté à ' if') → logprob: -5.633610725402832
    4. ' for' → logprob: -8.258610725402832
    5. '   ' → logprob: -8.383610725402832
    6. '               ' → logprob: -8.633610725402832
    7. '    ' → logprob: -8.758610725402832
    8. '        ' → logprob: -9.133610725402832
    9. '       ' → logprob: -9.133610725402832
    10. '            ' → logprob: -9.258610725402832

Token 317: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7634815573692322
    2. 'i' → logprob: -1.013481616973877
    3. '(i' → logprob: -2.013481616973877
    4. ' (' → logprob: -4.013481616973877
    5. ' not' → logprob: -4.138481616973877
    6. 'not' → logprob: -6.763481616973877
    7. 'j' → logprob: -7.263481616973877
    8. ' j' → logprob: -7.388481616973877
    9. '(not' → logprob: -8.138481140136719
    10. '(' → logprob: -8.513481140136719

Token 318: ' +' (ID: 659)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.01886332780122757
    2. ' &' → logprob: -4.018863201141357
    3. '&p' → logprob: -8.018863677978516
    4. '&i' → logprob: -8.643863677978516
    5. '&
' → logprob: -9.143863677978516
    6. '&amp' → logprob: -10.143863677978516
    7. '&a' → logprob: -10.768863677978516
    8. '&r' → logprob: -11.518863677978516
    9. '&q' → logprob: -11.518863677978516
    10. 'and' → logprob: -12.768863677978516

Token 319: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.12712979316711426
    2. ' j' → logprob: -2.1271297931671143
    3. '(j' → logprob: -8.877129554748535
    4. ' (' → logprob: -10.377129554748535
    5. '(' → logprob: -11.127129554748535
    6. ' ' → logprob: -12.377129554748535
    7. '=' → logprob: -13.252129554748535
    8. '1' → logprob: -13.377129554748535
    9. '0' → logprob: -13.502129554748535
    10. '&' → logprob: -13.627129554748535

Token 320: '1' (ID: 16)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.31462353467941284
    2. '1' → logprob: -1.4396235942840576
    3. ' &' → logprob: -3.5646235942840576
    4. ' ' → logprob: -6.0646233558654785
    5. ')' → logprob: -7.3146233558654785
    6. '&
' → logprob: -8.439623832702637
    7. ' j' → logprob: -8.564623832702637
    8. ')&' → logprob: -8.564623832702637
    9. '&_' → logprob: -8.939623832702637
    10. '   ' → logprob: -9.189623832702637

Token 321: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2832752764225006
    2. '&' → logprob: -2.5332753658294678
    3. '<=' → logprob: -2.5332753658294678
    4. '>=' → logprob: -2.7832753658294678
    5. ' >' → logprob: -4.283275127410889
    6. ' <=' → logprob: -5.783275127410889
    7. '<' → logprob: -5.908275127410889
    8. ' &' → logprob: -6.033275127410889
    9. '==' → logprob: -6.533275127410889
    10. ' >=' → logprob: -6.658275127410889

Token 322: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00033117449493147433
    2. ' max' → logprob: -8.500330924987793
    3. '1' → logprob: -9.250330924987793
    4. '(' → logprob: -11.125330924987793
    5. '(max' → logprob: -11.250330924987793
    6. '0' → logprob: -13.000330924987793
    7. ' ' → logprob: -14.875330924987793
    8. '   ' → logprob: -14.875330924987793
    9. '	max' → logprob: -14.875330924987793
    10. ' (' → logprob: -15.375330924987793

Token 323: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.2603901015827432e-05
    2. '_n' → logprob: -11.500022888183594
    3. ')' → logprob: -12.000022888183594
    4. ' n' → logprob: -13.125022888183594
    5. '   ' → logprob: -13.250022888183594
    6. ' ' → logprob: -14.625022888183594
    7. ')n' → logprob: -15.000022888183594
    8. ']' → logprob: -15.250022888183594
    9. '```' → logprob: -15.750022888183594
    10. '	n' → logprob: -15.875022888183594

Token 324: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6187562942504883
    2. ' or' → logprob: -0.9937562942504883
    3. ':
' → logprob: -2.6187562942504883
    4. '               ' → logprob: -4.743756294250488
    5. '           ' → logprob: -4.993756294250488
    6. ' and' → logprob: -6.493756294250488
    7. '       ' → logprob: -7.618756294250488
    8. 'or' → logprob: -8.868756294250488
    9. ' :' → logprob: -8.868756294250488
    10. '                       ' → logprob: -9.243756294250488

Token 325: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007568060886114836
    2. ':' → logprob: -5.257567882537842
    3. ' continue' → logprob: -6.507567882537842
    4. ':
' → logprob: -7.507567882537842
    5. 'continue' → logprob: -9.632568359375
    6. ',' → logprob: -9.757568359375
    7. ' :' → logprob: -10.007568359375
    8. '           ' → logprob: -10.382568359375
    9. ' or' → logprob: -11.132568359375
    10. '       ' → logprob: -11.882568359375

Token 326: ' #' (ID: 1069)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.0523490905761719
    2. 'continue' → logprob: -1.0523490905761719
    3. '               ' → logprob: -1.4273490905761719
    4. '                   ' → logprob: -2.802349090576172
    5. '	continue' → logprob: -7.552349090576172
    6. '                       ' → logprob: -8.302349090576172
    7. '           ' → logprob: -9.802349090576172
    8. '
' → logprob: -9.802349090576172
    9. 'contin' → logprob: -10.427349090576172
    10. ' 
' → logprob: -10.552349090576172

Token 327: ' print' (ID: 2123)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.10468818992376328
    2. '                   ' → logprob: -2.8546881675720215
    3. ' continue' → logprob: -3.6046881675720215
    4. '               ' → logprob: -4.3546881675720215
    5. 'break' → logprob: -7.1046881675720215
    6. '                       ' → logprob: -7.8546881675720215
    7. '	continue' → logprob: -8.22968864440918
    8. '   ' → logprob: -9.22968864440918
    9. '           ' → logprob: -9.47968864440918
    10. ' break' → logprob: -9.97968864440918

Token 328: '(i' (ID: 3649)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16055971384048462
    2. '(' → logprob: -2.53555965423584
    3. '("' → logprob: -2.91055965423584
    4. '('' → logprob: -4.78555965423584
    5. '(i' → logprob: -5.78555965423584
    6. '("")' → logprob: -6.53555965423584
    7. '()
' → logprob: -6.91055965423584
    8. 'continue' → logprob: -8.03555965423584
    9. '(
' → logprob: -8.78555965423584
    10. ' continue' → logprob: -9.66055965423584

Token 329: '+j' (ID: 71365)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5283846855163574
    2. ')' → logprob: -0.9033846855163574
    3. '               ' → logprob: -6.153384685516357
    4. '                   ' → logprob: -6.778384685516357
    5. '):
' → logprob: -7.028384685516357
    6. '           ' → logprob: -8.153385162353516
    7. ',' → logprob: -8.403385162353516
    8. '       ' → logprob: -8.653385162353516
    9. '):' → logprob: -9.403385162353516
    10. ');' → logprob: -9.778385162353516

Token 330: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003151930868625641
    2. ')' → logprob: -5.878151893615723
    3. 'j' → logprob: -8.628151893615723
    4. ',' → logprob: -10.253151893615723
    5. ' ' → logprob: -10.628151893615723
    6. '+' → logprob: -11.003151893615723
    7. ' j' → logprob: -11.128151893615723
    8. '```' → logprob: -11.253151893615723
    9. '   ' → logprob: -11.628151893615723
    10. '[j' → logprob: -12.128151893615723

Token 331: '-n' (ID: 5219)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07216751575469971
    2. ')' → logprob: -2.82216739654541
    3. '               ' → logprob: -5.32216739654541
    4. '                   ' → logprob: -5.57216739654541
    5. '):
' → logprob: -7.07216739654541
    6. ')
' → logprob: -9.19716739654541
    7. 'continue' → logprob: -9.32216739654541
    8. '           ' → logprob: -9.44716739654541
    9. ');' → logprob: -9.44716739654541
    10. '):' → logprob: -9.69716739654541

Token 332: ',i' (ID: 25032)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0239830631762743
    2. ' )' → logprob: -4.023983001708984
    3. ')
' → logprob: -6.148983001708984
    4. '):' → logprob: -6.398983001708984
    5. '+' → logprob: -7.398983001708984
    6. '):
' → logprob: -7.898983001708984
    7. ')return' → logprob: -8.273983001708984
    8. ' ' → logprob: -9.148983001708984
    9. ' )
' → logprob: -9.148983001708984
    10. ' +' → logprob: -9.773983001708984

Token 333: ',j' (ID: 22712)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06504890322685242
    2. ' )' → logprob: -3.190048933029175
    3. ')
' → logprob: -4.815048694610596
    4. '):' → logprob: -5.815048694610596
    5. '+' → logprob: -5.940048694610596
    6. ' )
' → logprob: -6.190048694610596
    7. ',' → logprob: -6.565048694610596
    8. '):
' → logprob: -7.190048694610596
    9. ' continue' → logprob: -7.815048694610596
    10. ')>' → logprob: -8.190049171447754

Token 334: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6364767551422119
    2. ')' → logprob: -0.8864767551422119
    3. '               ' → logprob: -3.011476755142212
    4. ' )
' → logprob: -5.636476516723633
    5. ' )' → logprob: -6.511476516723633
    6. ',' → logprob: -6.511476516723633
    7. '                   ' → logprob: -6.636476516723633
    8. '           ' → logprob: -7.136476516723633
    9. '                ' → logprob: -9.261476516723633
    10. '   ' → logprob: -9.386476516723633

Token 335: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005905092228204012
    2. '                   ' → logprob: -5.3809051513671875
    3. '           ' → logprob: -7.6309051513671875
    4. ' continue' → logprob: -8.130905151367188
    5. ':' → logprob: -8.630905151367188
    6. ')' → logprob: -9.505905151367188
    7. 'continue' → logprob: -9.880905151367188
    8. ':
' → logprob: -10.130905151367188
    9. '       ' → logprob: -10.630905151367188
    10. ' :' → logprob: -10.755905151367188

Token 336: ' dp' (ID: 21546)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6265860199928284
    2. 'continue' → logprob: -1.5015859603881836
    3. '               ' → logprob: -2.0015859603881836
    4. '                   ' → logprob: -2.2515859603881836
    5. '	continue' → logprob: -7.126585960388184
    6. '                       ' → logprob: -7.251585960388184
    7. '           ' → logprob: -8.251585960388184
    8. '   ' → logprob: -8.376585960388184
    9. ' break' → logprob: -9.626585960388184
    10. '       ' → logprob: -10.001585960388184

Token 337: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003012617235071957
    2. '[' → logprob: -8.750301361083984
    3. '[j' → logprob: -9.125301361083984
    4. '][' → logprob: -11.000301361083984
    5. ' [' → logprob: -11.500301361083984
    6. ')[' → logprob: -12.750301361083984
    7. '[
' → logprob: -14.000301361083984
    8. ']' → logprob: -14.500301361083984
    9. '[n' → logprob: -15.125301361083984
    10. ',i' → logprob: -15.250301361083984

Token 338: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3257644474506378
    2. '+j' → logprob: -1.7007644176483154
    3. ']' → logprob: -3.2007644176483154
    4. '+' → logprob: -3.4507644176483154
    5. '[j' → logprob: -4.4507646560668945
    6. ' +' → logprob: -5.2007646560668945
    7. '|' → logprob: -6.2007646560668945
    8. ']+=' → logprob: -7.2007646560668945
    9. ']+' → logprob: -7.5757646560668945
    10. '[' → logprob: -7.5757646560668945

Token 339: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.09209053963422775
    2. '0' → logprob: -2.467090606689453
    3. 'n' → logprob: -6.592090606689453
    4. 'p' → logprob: -6.967090606689453
    5. '1' → logprob: -8.092090606689453
    6. 'i' → logprob: -8.592090606689453
    7. ' j' → logprob: -9.092090606689453
    8. ']' → logprob: -9.967090606689453
    9. '   ' → logprob: -9.967090606689453
    10. 'max' → logprob: -10.467090606689453

Token 340: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4831407368183136
    2. ']' → logprob: -0.9831407070159912
    3. ' +' → logprob: -5.85814094543457
    4. '1' → logprob: -6.10814094543457
    5. ']+=' → logprob: -6.35814094543457
    6. ' ]' → logprob: -6.73314094543457
    7. ']=' → logprob: -7.60814094543457
    8. '+]' → logprob: -8.48314094543457
    9. ']+' → logprob: -8.60814094543457
    10. '+j' → logprob: -11.23314094543457

Token 341: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.7888184528565034e-05
    2. ']' → logprob: -10.6250581741333
    3. ' ' → logprob: -11.1250581741333
    4. '+' → logprob: -11.7500581741333
    5. '0' → logprob: -11.8750581741333
    6. '2' → logprob: -13.7500581741333
    7. '
' → logprob: -14.7500581741333
    8. '<|end|>' → logprob: -14.8750581741333
    9. '```' → logprob: -15.0000581741333
    10. ']+=' → logprob: -15.0000581741333

Token 342: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018847528845071793
    2. ']=' → logprob: -4.018847465515137
    3. ']+=' → logprob: -7.643847465515137
    4. ' ]' → logprob: -8.643847465515137
    5. '=' → logprob: -10.518847465515137
    6. ')' → logprob: -12.768847465515137
    7. '],' → logprob: -13.018847465515137
    8. ']+' → logprob: -13.143847465515137
    9. ' =' → logprob: -13.393847465515137
    10. ']>' → logprob: -13.518847465515137

Token 343: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.021167198196053505
    2. ' =' → logprob: -3.896167278289795
    3. '+=' → logprob: -7.521167278289795
    4. '=max' → logprob: -9.646166801452637
    5. ' +=' → logprob: -11.271166801452637
    6. '>' → logprob: -13.021166801452637
    7. ',' → logprob: -14.396166801452637
    8. '|' → logprob: -14.521166801452637
    9. '>=' → logprob: -14.896166801452637
    10. ']=' → logprob: -15.271166801452637

Token 344: ' f' (ID: 285)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3362581431865692
    2. 'max' → logprob: -2.0862581729888916
    3. 'p' → logprob: -2.3362581729888916
    4. 'f' → logprob: -2.9612581729888916
    5. 'min' → logprob: -5.4612579345703125
    6. ' dp' → logprob: -5.7112579345703125
    7. ' max' → logprob: -6.7112579345703125
    8. '0' → logprob: -6.8362579345703125
    9. ' p' → logprob: -7.0862579345703125
    10. ' f' → logprob: -7.5862579345703125

Token 345: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0013392893597483635
    2. '(' → logprob: -7.001339435577393
    3. '(p' → logprob: -8.126338958740234
    4. '(
' → logprob: -9.876338958740234
    5. 'dp' → logprob: -9.876338958740234
    6. '(i' → logprob: -11.751338958740234
    7. 'p' → logprob: -11.876338958740234
    8. '(max' → logprob: -12.376338958740234
    9. '((' → logprob: -12.876338958740234
    10. '(j' → logprob: -13.126338958740234

Token 346: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.248469718324486e-05
    2. '[' → logprob: -11.250022888183594
    3. '[j' → logprob: -12.500022888183594
    4. '[I' → logprob: -13.250022888183594
    5. '[
' → logprob: -13.500022888183594
    6. 'i' → logprob: -14.750022888183594
    7. '][' → logprob: -14.875022888183594
    8. ' [' → logprob: -15.125022888183594
    9. ')[' → logprob: -15.250022888183594
    10. ']' → logprob: -15.375022888183594

Token 347: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0007013569120317698
    2. ']' → logprob: -8.000700950622559
    3. '[j' → logprob: -8.375700950622559
    4. '[' → logprob: -9.500700950622559
    5. ' ][' → logprob: -11.000700950622559
    6. '[i' → logprob: -11.125700950622559
    7. ' ' → logprob: -12.000700950622559
    8. '   ' → logprob: -12.500700950622559
    9. ',j' → logprob: -13.125700950622559
    10. '],' → logprob: -13.250700950622559

Token 348: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0004565327544696629
    2. ' j' → logprob: -7.8754563331604
    3. 'p' → logprob: -11.000456809997559
    4. ' ' → logprob: -11.000456809997559
    5. '   ' → logprob: -11.250456809997559
    6. '[j' → logprob: -11.875456809997559
    7. '0' → logprob: -12.250456809997559
    8. '  ' → logprob: -12.500456809997559
    9. 'dp' → logprob: -13.125456809997559
    10. '1' → logprob: -13.375456809997559

Token 349: '],' (ID: 2155)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.022513534873723984
    2. '],' → logprob: -4.647513389587402
    3. ']' → logprob: -5.272513389587402
    4. '[j' → logprob: -5.272513389587402
    5. '+' → logprob: -6.897513389587402
    6. '[' → logprob: -7.272513389587402
    7. '[i' → logprob: -8.897513389587402
    8. '1' → logprob: -9.022513389587402
    9. ' ][' → logprob: -9.147513389587402
    10. '   ' → logprob: -9.397513389587402

Token 350: 'dp' (ID: 19037)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.29683929681777954
    2. 'dp' → logprob: -1.4218392372131348
    3. ' p' → logprob: -4.421839237213135
    4. ' dp' → logprob: -5.671839237213135
    5. ' ' → logprob: -10.421839714050293
    6. '   ' → logprob: -10.796839714050293
    7. '0' → logprob: -11.421839714050293
    8. 'd' → logprob: -11.796839714050293
    9. '	dp' → logprob: -11.921839714050293
    10. '  ' → logprob: -12.546839714050293

Token 351: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006669254507869482
    2. '[(' → logprob: -7.750667095184326
    3. '[' → logprob: -9.125666618347168
    4. '[j' → logprob: -9.875666618347168
    5. '   ' → logprob: -10.625666618347168
    6. 'i' → logprob: -11.625666618347168
    7. '[p' → logprob: -11.750666618347168
    8. '[min' → logprob: -11.750666618347168
    9. '[((' → logprob: -12.500666618347168
    10. '  ' → logprob: -12.625666618347168

Token 352: '+j' (ID: 71365)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.011623130179941654
    2. '[j' → logprob: -5.136622905731201
    3. '][' → logprob: -5.261622905731201
    4. '[' → logprob: -8.13662338256836
    5. ')[' → logprob: -10.26162338256836
    6. '[(' → logprob: -10.26162338256836
    7. ']' → logprob: -10.63662338256836
    8. ' [' → logprob: -10.88662338256836
    9. '   ' → logprob: -11.38662338256836
    10. '[
' → logprob: -11.63662338256836

Token 353: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.0590548703912646e-05
    2. '+' → logprob: -11.375030517578125
    3. 'j' → logprob: -12.500030517578125
    4. '   ' → logprob: -12.500030517578125
    5. '<|end|>' → logprob: -12.500030517578125
    6. ' ' → logprob: -13.250030517578125
    7. 'x' → logprob: -13.500030517578125
    8. '...' → logprob: -14.250030517578125
    9. '[' → logprob: -14.375030517578125
    10. '       ' → logprob: -14.625030517578125

Token 354: '-max' (ID: 102577)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00313660129904747
    2. ']' → logprob: -6.25313663482666
    3. '[j' → logprob: -6.87813663482666
    4. ' ][' → logprob: -9.75313663482666
    5. '   ' → logprob: -10.00313663482666
    6. '[' → logprob: -11.12813663482666
    7. '       ' → logprob: -11.37813663482666
    8. 'j' → logprob: -12.25313663482666
    9. '           ' → logprob: -12.37813663482666
    10. ',j' → logprob: -12.37813663482666

Token 355: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.8074162653647363e-05
    2. '1' → logprob: -11.750018119812012
    3. ' n' → logprob: -12.125018119812012
    4. '<|end|>' → logprob: -13.375018119812012
    5. ' ' → logprob: -14.000018119812012
    6. '0' → logprob: -14.875018119812012
    7. 's' → logprob: -15.250018119812012
    8. '	n' → logprob: -15.375018119812012
    9. 'm' → logprob: -15.625018119812012
    10. '
' → logprob: -16.000017166137695

Token 356: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.003953848034143448
    2. ']' → logprob: -5.62895393371582
    3. '[j' → logprob: -8.50395393371582
    4. ' ][' → logprob: -9.50395393371582
    5. '[' → logprob: -10.75395393371582
    6. '])' → logprob: -11.25395393371582
    7. '],' → logprob: -12.37895393371582
    8. ',j' → logprob: -12.50395393371582
    9. '"][' → logprob: -12.62895393371582
    10. ']
' → logprob: -12.62895393371582

Token 357: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0010420980397611856
    2. ' j' → logprob: -6.876041889190674
    3. ' ' → logprob: -13.126042366027832
    4. '0' → logprob: -13.501042366027832
    5. '
' → logprob: -13.751042366027832
    6. '(j' → logprob: -13.876042366027832
    7. '   ' → logprob: -13.876042366027832
    8. '[j' → logprob: -14.126042366027832
    9. '1' → logprob: -14.751042366027832
    10. ':j' → logprob: -14.876042366027832

Token 358: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.20691537857055664
    2. '+' → logprob: -1.7069153785705566
    3. ']' → logprob: -5.706915378570557
    4. ' ])' → logprob: -7.581915378570557
    5. ']+' → logprob: -7.706915378570557
    6. ')' → logprob: -7.706915378570557
    7. '1' → logprob: -9.081914901733398
    8. '])
' → logprob: -9.081914901733398
    9. ' +' → logprob: -9.331914901733398
    10. ']);' → logprob: -9.581914901733398

Token 359: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 360: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1260937452316284
    2. '<|end|>' → logprob: -1.1260937452316284
    3. ' ' → logprob: -2.376093864440918
    4. ' else' → logprob: -2.876093864440918
    5. '           ' → logprob: -3.001093864440918
    6. '        ' → logprob: -3.376093864440918
    7. '            ' → logprob: -4.251093864440918
    8. ')' → logprob: -4.251093864440918
    9. '               ' → logprob: -4.501093864440918
    10. 'else' (adapté à ' else') → logprob: -4.751093864440918

Token 361: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.031025677919387817
    2. ':' → logprob: -4.2810258865356445
    3. ' dp' → logprob: -4.4060258865356445
    4. ' :' → logprob: -6.2810258865356445
    5. ':
' → logprob: -7.0310258865356445
    6. '           ' → logprob: -7.6560258865356445
    7. ' continue' → logprob: -8.156025886535645
    8. 'dp' → logprob: -8.281025886535645
    9. ' :
' → logprob: -8.406025886535645
    10. '			' → logprob: -9.406025886535645

Token 362: '               ' (ID: 506)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.5138562917709351
    2. 'dp' → logprob: -1.388856291770935
    3. '               ' → logprob: -1.888856291770935
    4. '	dp' → logprob: -7.638856410980225
    5. '           ' → logprob: -8.388855934143066
    6. '			' → logprob: -8.888855934143066
    7. 'continue' → logprob: -9.513855934143066
    8. ' ' → logprob: -9.638855934143066
    9. ' continue' → logprob: -9.763855934143066
    10. '             ' → logprob: -10.388855934143066

Token 363: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.01126614585518837
    2. ' dp' → logprob: -4.511266231536865
    3. 'd' → logprob: -9.386265754699707
    4. '               ' → logprob: -10.136265754699707
    5. '           ' → logprob: -10.261265754699707
    6. 'for' → logprob: -11.136265754699707
    7. '	dp' → logprob: -11.136265754699707
    8. '   ' → logprob: -11.886265754699707
    9. ' ' → logprob: -12.511265754699707
    10. '       ' → logprob: -12.636265754699707

Token 364: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.955703818472102e-05
    2. '[' → logprob: -9.750059127807617
    3. '[I' → logprob: -15.000059127807617
    4. '[j' → logprob: -15.250059127807617
    5. 'i' → logprob: -15.375059127807617
    6. ' [' → logprob: -15.375059127807617
    7. '[
' → logprob: -16.875059127807617
    8. ' i' → logprob: -18.000059127807617
    9. '][' → logprob: -18.000059127807617
    10. '[p' → logprob: -18.250059127807617

Token 365: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.006396073382347822
    2. ']' → logprob: -5.381396293640137
    3. ' ][' → logprob: -6.506396293640137
    4. '[j' → logprob: -9.881396293640137
    5. '+' → logprob: -9.881396293640137
    6. '[' → logprob: -10.131396293640137
    7. ' ' → logprob: -10.506396293640137
    8. '[i' → logprob: -10.506396293640137
    9. '][:' → logprob: -10.756396293640137
    10. ' ]' → logprob: -11.631396293640137

Token 366: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0039131189696490765
    2. 'i' → logprob: -5.628912925720215
    3. '[j' → logprob: -8.753912925720215
    4. ']' → logprob: -10.003912925720215
    5. '][' → logprob: -10.503912925720215
    6. ' j' → logprob: -10.628912925720215
    7. '   ' → logprob: -11.128912925720215
    8. '[i' → logprob: -11.253912925720215
    9. 'dp' → logprob: -11.378912925720215
    10. '[' → logprob: -11.878912925720215

Token 367: '+' (ID: 10)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.009584312327206135
    2. '+' → logprob: -5.259584426879883
    3. ']' → logprob: -5.634584426879883
    4. ' ][' → logprob: -7.634584426879883
    5. '   ' → logprob: -9.134584426879883
    6. '[' → logprob: -9.509584426879883
    7. '       ' → logprob: -10.134584426879883
    8. ' ' → logprob: -11.384584426879883
    9. '[j' → logprob: -12.009584426879883
    10. '           ' → logprob: -12.009584426879883

Token 368: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013285996101330966
    2. ' ' → logprob: -9.37513256072998
    3. '+' → logprob: -10.37513256072998
    4. '   ' → logprob: -12.06263256072998
    5. ']' → logprob: -12.81263256072998
    6. 'j' → logprob: -13.43763256072998
    7. '0' → logprob: -13.62513256072998
    8. '       ' → logprob: -14.56263256072998
    9. ')' → logprob: -14.81263256072998
    10. '           ' → logprob: -14.93763256072998

Token 369: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05895772576332092
    2. ']' → logprob: -3.308957815170288
    3. ' =' → logprob: -4.058957576751709
    4. ']=' → logprob: -5.683957576751709
    5. ')' → logprob: -10.808958053588867
    6. ')=' → logprob: -12.308958053588867
    7. ' ]' → logprob: -12.433958053588867
    8. ',' → logprob: -13.933958053588867
    9. '=f' → logprob: -14.183958053588867
    10. ']+=' → logprob: -15.058958053588867

Token 370: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047814972698689
    2. ' =' → logprob: -4.511047840118408
    3. '=f' → logprob: -17.01104736328125
    4. ')' → logprob: -17.13604736328125
    5. ',' → logprob: -18.13604736328125
    6. '+=' → logprob: -18.38604736328125
    7. '=

' → logprob: -18.38604736328125
    8. ' ' → logprob: -18.51104736328125
    9. '=
' → logprob: -18.63604736328125
    10. ']' → logprob: -18.63604736328125

Token 371: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.032045021653175354
    2. 'max' → logprob: -4.282044887542725
    3. 'dp' → logprob: -4.282044887542725
    4. ' f' → logprob: -5.782044887542725
    5. ' max' → logprob: -8.282045364379883
    6. 'p' → logprob: -8.282045364379883
    7. 'min' → logprob: -8.907045364379883
    8. ' dp' → logprob: -9.157045364379883
    9. '0' → logprob: -10.532045364379883
    10. ' ' → logprob: -11.532045364379883

Token 372: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -1.1756367712223437e-05
    2. '(' → logprob: -11.500011444091797
    3. '(
' → logprob: -13.500011444091797
    4. 'dp' → logprob: -15.500011444091797
    5. ' (' → logprob: -18.750011444091797
    6. ' dp' → logprob: -19.250011444091797
    7. '(max' → logprob: -19.375011444091797
    8. '	dp' → logprob: -19.375011444091797
    9. '(df' → logprob: -19.875011444091797
    10. '((' → logprob: -20.000011444091797

Token 373: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003649017889983952
    2. 'i' → logprob: -8.625365257263184
    3. '[' → logprob: -9.250365257263184
    4. '[j' → logprob: -10.250365257263184
    5. 'dp' → logprob: -10.750365257263184
    6. '][' → logprob: -11.000365257263184
    7. ',i' → logprob: -12.500365257263184
    8. ')[' → logprob: -13.000365257263184
    9. ' [' → logprob: -13.625365257263184
    10. '   ' → logprob: -13.625365257263184

Token 374: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0024487809278070927
    2. '[i' → logprob: -6.877448558807373
    3. '[j' → logprob: -7.377448558807373
    4. ']' → logprob: -7.502448558807373
    5. ' ][' → logprob: -9.002449035644531
    6. '+j' → logprob: -10.252449035644531
    7. '+' → logprob: -10.627449035644531
    8. '[' → logprob: -10.877449035644531
    9. '   ' → logprob: -11.377449035644531
    10. '+i' → logprob: -11.752449035644531

Token 375: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0038372555281966925
    2. 'i' → logprob: -5.6288371086120605
    3. 'dp' → logprob: -9.378837585449219
    4. ' j' → logprob: -10.128837585449219
    5. 'max' → logprob: -10.378837585449219
    6. '   ' → logprob: -11.128837585449219
    7. '(i' → logprob: -11.378837585449219
    8. '(j' → logprob: -11.503837585449219
    9. '[j' → logprob: -11.503837585449219
    10. '(' → logprob: -12.128837585449219

Token 376: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07296828180551529
    2. '],' → logprob: -2.8229682445526123
    3. ']' → logprob: -5.322968482971191
    4. ',j' → logprob: -5.822968482971191
    5. '][' → logprob: -6.572968482971191
    6. ' ,' → logprob: -6.822968482971191
    7. ',i' → logprob: -8.072968482971191
    8. '[j' → logprob: -9.447968482971191
    9. '[i' → logprob: -9.697968482971191
    10. '],[' → logprob: -10.322968482971191

Token 377: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0002655079588294029
    2. ' dp' → logprob: -8.250265121459961
    3. '   ' → logprob: -13.625265121459961
    4. ' ' → logprob: -14.000265121459961
    5. 'p' → logprob: -14.125265121459961
    6. '  ' → logprob: -14.500265121459961
    7. 'd' → logprob: -15.375265121459961
    8. '	dp' → logprob: -15.500265121459961
    9. '
' → logprob: -15.625265121459961
    10. '           ' → logprob: -15.875265121459961

Token 378: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00012701898231171072
    2. '[' → logprob: -9.250126838684082
    3. '[j' → logprob: -11.000126838684082
    4. 'i' → logprob: -11.375126838684082
    5. '   ' → logprob: -14.000126838684082
    6. '(i' → logprob: -14.625126838684082
    7. '[
' → logprob: -15.125126838684082
    8. '[(' → logprob: -15.250126838684082
    9. ' [' → logprob: -15.250126838684082
    10. '[I' → logprob: -15.875126838684082

Token 379: '+j' (ID: 71365)
  Prédit: '+j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+j' → logprob: -0.30347320437431335
    2. '][' → logprob: -2.3034732341766357
    3. '+' → logprob: -2.8034732341766357
    4. '+i' → logprob: -3.3034732341766357
    5. '[j' → logprob: -3.4284732341766357
    6. '[i' → logprob: -4.428472995758057
    7. '|' → logprob: -4.928472995758057
    8. ' +' → logprob: -4.928472995758057
    9. '[' → logprob: -5.428472995758057
    10. '+[' → logprob: -7.803472995758057

Token 380: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5027299822540954e-05
    2. '[i' → logprob: -10.625055313110352
    3. '[j' → logprob: -11.750055313110352
    4. '+j' → logprob: -11.750055313110352
    5. '+' → logprob: -12.125055313110352
    6. '[' → logprob: -12.500055313110352
    7. ']' → logprob: -13.375055313110352
    8. 'j' → logprob: -14.125055313110352
    9. '   ' → logprob: -14.125055313110352
    10. '][' → logprob: -14.625055313110352

Token 381: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.018615053966641426
    2. '[j' → logprob: -4.018615245819092
    3. ']' → logprob: -7.893615245819092
    4. '[' → logprob: -10.768614768981934
    5. ' ][' → logprob: -10.768614768981934
    6. ',j' → logprob: -11.018614768981934
    7. 'j' → logprob: -11.393614768981934
    8. ')[' → logprob: -12.143614768981934
    9. '   ' → logprob: -12.268614768981934
    10. '       ' → logprob: -13.143614768981934

Token 382: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0003839597338810563
    2. ' j' → logprob: -8.125384330749512
    3. '][' → logprob: -9.875384330749512
    4. '[j' → logprob: -11.000384330749512
    5. '   ' → logprob: -12.000384330749512
    6. '	j' → logprob: -12.375384330749512
    7. '
' → logprob: -12.875384330749512
    8. ']' → logprob: -13.250384330749512
    9. ' ' → logprob: -14.250384330749512
    10. ',j' → logprob: -14.250384330749512

Token 383: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.001368453842587769
    2. ')' → logprob: -6.751368522644043
    3. '])
' → logprob: -9.751368522644043
    4. ' ])' → logprob: -9.751368522644043
    5. ']' → logprob: -10.001368522644043
    6. '           ' → logprob: -12.251368522644043
    7. '   ' → logprob: -12.376368522644043
    8. '       ' → logprob: -12.376368522644043
    9. ' )' → logprob: -12.626368522644043
    10. ']);' → logprob: -13.001368522644043

Token 384: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 385: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06927794218063354
    2. '<|end|>' → logprob: -3.0692780017852783
    3. 'return' → logprob: -4.819277763366699
    4. ' return' → logprob: -5.569277763366699
    5. ')' → logprob: -6.194277763366699
    6. ' ' → logprob: -6.319277763366699
    7. '
' → logprob: -6.444277763366699
    8. '\n' → logprob: -6.694277763366699
    9. '	return' → logprob: -7.319277763366699
    10. '  ' → logprob: -7.944277763366699

Token 386: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9303048849105835
    2. ' ans' → logprob: -1.0553048849105835
    3. 'ans' → logprob: -2.430305004119873
    4. ' print' → logprob: -2.805305004119873
    5. ' res' → logprob: -3.555305004119873
    6. '   ' → logprob: -3.680305004119873
    7. 'res' → logprob: -3.805305004119873
    8. 'result' → logprob: -5.055305004119873
    9. 'return' → logprob: -5.055305004119873
    10. 'max' → logprob: -5.805305004119873

Token 387: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.17955896258354187
    2. '(max' → logprob: -2.0545589923858643
    3. '(' → logprob: -3.4295589923858643
    4. '(sum' → logprob: -6.429558753967285
    5. '()' → logprob: -6.679558753967285
    6. '(p' → logprob: -7.304558753967285
    7. '(
' → logprob: -9.429558753967285
    8. '(len' → logprob: -10.679558753967285
    9. 'dp' → logprob: -10.679558753967285
    10. '("' → logprob: -10.929558753967285

Token 388: '[' (ID: 58)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07557152211666107
    2. '[n' → logprob: -3.4505715370178223
    3. '])' → logprob: -4.325571537017822
    4. ']' → logprob: -4.825571537017822
    5. '   ' → logprob: -5.075571537017822
    6. ')
' → logprob: -5.075571537017822
    7. '[-' → logprob: -5.200571537017822
    8. '[' → logprob: -7.200571537017822
    9. ')]' → logprob: -8.450571060180664
    10. '[len' → logprob: -8.700571060180664

Token 389: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7998602390289307
    2. '-' → logprob: -1.0498602390289307
    3. 'n' → logprob: -2.9248602390289307
    4. '[n' → logprob: -3.4248602390289307
    5. '(n' → logprob: -3.4248602390289307
    6. '][' → logprob: -3.5498602390289307
    7. '(' → logprob: -3.9248602390289307
    8. 'p' → logprob: -4.799860000610352
    9. '[' → logprob: -4.924860000610352
    10. 'max' → logprob: -5.299860000610352

Token 390: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.30285176634788513
    2. '][-' → logprob: -1.4278517961502075
    3. '])' → logprob: -3.927851676940918
    4. ']' → logprob: -6.427851676940918
    5. '])
' → logprob: -10.052851676940918
    6. ' ][' → logprob: -10.177851676940918
    7. ']
' → logprob: -11.052851676940918
    8. '[-' → logprob: -11.052851676940918
    9. '][:' → logprob: -11.802851676940918
    10. '][]' → logprob: -12.177851676940918

Token 391: '0' (ID: 15)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03209812939167023
    2. '-n' → logprob: -3.5320980548858643
    3. '-' → logprob: -6.407098293304443
    4. '0' → logprob: -7.907098293304443
    5. 'max' → logprob: -8.282097816467285
    6. '(n' → logprob: -10.907097816467285
    7. ' n' → logprob: -11.657097816467285
    8. ':n' → logprob: -11.657097816467285
    9. '1' → logprob: -12.032097816467285
    10. ' -' → logprob: -12.157097816467285

Token 392: '],' (ID: 2155)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0017289682291448116
    2. ')' → logprob: -6.7517290115356445
    3. '])
' → logprob: -7.6267290115356445
    4. ']' → logprob: -10.501729011535645
    5. '   ' → logprob: -11.251729011535645
    6. '[' → logprob: -11.876729011535645
    7. ')
' → logprob: -12.376729011535645
    8. ' ])' → logprob: -12.376729011535645
    9. ')]' → logprob: -12.876729011535645
    10. '0' → logprob: -12.876729011535645

Token 393: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.27128705382347107
    2. ' dp' → logprob: -1.7712870836257935
    3. ')' → logprob: -3.146286964416504
    4. '")' → logprob: -4.146286964416504
    5. '   ' → logprob: -6.521286964416504
    6. ')
' → logprob: -6.646286964416504
    7. ' n' → logprob: -6.896286964416504
    8. 'n' → logprob: -7.021286964416504
    9. '(dp' → logprob: -7.271286964416504
    10. 'p' → logprob: -7.396286964416504

Token 394: '[' (ID: 58)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.16156847774982452
    2. '[' → logprob: -1.911568522453308
    3. ']' → logprob: -7.786568641662598
    4. '][-' → logprob: -8.036568641662598
    5. '0' → logprob: -8.161568641662598
    6. ' ][' → logprob: -9.161568641662598
    7. '])' → logprob: -10.161568641662598
    8. '[-' → logprob: -10.411568641662598
    9. ' [' → logprob: -10.536568641662598
    10. ')[' → logprob: -10.786568641662598

Token 395: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005703973118215799
    2. 'n' → logprob: -5.880703926086426
    3. '-' → logprob: -6.255703926086426
    4. 'max' → logprob: -7.880703926086426
    5. '(' → logprob: -8.005703926086426
    6. '][' → logprob: -8.880703926086426
    7. '-n' → logprob: -10.630703926086426
    8. '(n' → logprob: -10.880703926086426
    9. '1' → logprob: -11.005703926086426
    10. '][-' → logprob: -11.630703926086426

Token 396: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001932205050252378
    2. '])' → logprob: -6.501932144165039
    3. '[' → logprob: -8.251932144165039
    4. ']' → logprob: -9.126932144165039
    5. '0' → logprob: -11.001932144165039
    6. '][-' → logprob: -11.126932144165039
    7. ' ][' → logprob: -11.626932144165039
    8. ')[' → logprob: -13.001932144165039
    9. '],' → logprob: -13.376932144165039
    10. '])]' → logprob: -13.564432144165039

Token 397: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02852514386177063
    2. 'n' → logprob: -3.6535251140594482
    3. '1' → logprob: -6.528525352478027
    4. '(' → logprob: -8.653525352478027
    5. '][' → logprob: -8.653525352478027
    6. '])' → logprob: -8.903525352478027
    7. ']' → logprob: -10.153525352478027
    8. '(n' → logprob: -10.278525352478027
    9. ' ' → logprob: -10.278525352478027
    10. '-' → logprob: -10.528525352478027

Token 398: '],' (ID: 2155)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.02856835536658764
    2. ')' → logprob: -3.6535682678222656
    3. '])
' → logprob: -6.403568267822266
    4. '   ' → logprob: -9.028568267822266
    5. ')
' → logprob: -9.153568267822266
    6. ']' → logprob: -9.278568267822266
    7. '[' → logprob: -9.528568267822266
    8. ',' → logprob: -9.653568267822266
    9. '],' → logprob: -10.653568267822266
    10. '][' → logprob: -10.778568267822266

Token 399: 'f' (ID: 69)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.040103789418935776
    2. ')' → logprob: -3.4151036739349365
    3. '")' → logprob: -5.290103912353516
    4. 'p' → logprob: -8.290103912353516
    5. ' dp' → logprob: -8.540103912353516
    6. '])' → logprob: -8.540103912353516
    7. '')' → logprob: -8.665103912353516
    8. ')
' → logprob: -9.040103912353516
    9. '   ' → logprob: -9.165103912353516
    10. '(dp' → logprob: -9.540103912353516

Token 400: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.35434725880622864
    2. '(' → logprob: -1.2293472290039062
    3. ')' → logprob: -5.354347229003906
    4. '(
' → logprob: -7.854347229003906
    5. '(p' → logprob: -8.104347229003906
    6. 'dp' → logprob: -8.604347229003906
    7. '([' → logprob: -8.979347229003906
    8. '(

' → logprob: -10.604347229003906
    9. '[' → logprob: -10.979347229003906
    10. '()' → logprob: -11.104347229003906

Token 401: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00014025058771949261
    2. ')' → logprob: -9.500140190124512
    3. ')[' → logprob: -11.000140190124512
    4. '(' → logprob: -11.125140190124512
    5. '][' → logprob: -11.500140190124512
    6. '[i' → logprob: -12.000140190124512
    7. '   ' → logprob: -13.000140190124512
    8. ']' → logprob: -13.125140190124512
    9. '[
' → logprob: -13.125140190124512
    10. '0' → logprob: -13.250140190124512

Token 402: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16041645407676697
    2. '0' → logprob: -1.9104164838790894
    3. '[i' → logprob: -10.160416603088379
    4. '[
' → logprob: -10.285416603088379
    5. '1' → logprob: -10.410416603088379
    6. 'i' → logprob: -10.660416603088379
    7. '(' → logprob: -10.660416603088379
    8. ' ' → logprob: -11.910416603088379
    9. '[][' → logprob: -12.035416603088379
    10. ' [' → logprob: -12.410416603088379

Token 403: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.003564904211089015
    2. '[' → logprob: -5.753564834594727
    3. ']' → logprob: -8.003564834594727
    4. ' ][' → logprob: -11.378564834594727
    5. '],' → logprob: -11.628564834594727
    6. '],[' → logprob: -11.878564834594727
    7. '   ' → logprob: -11.878564834594727
    8. ')[' → logprob: -12.128564834594727
    9. ']
' → logprob: -13.503564834594727
    10. ']][' → logprob: -14.003564834594727

Token 404: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2218254953622818
    2. '1' → logprob: -2.22182559967041
    3. 'j' → logprob: -2.47182559967041
    4. '][' → logprob: -5.34682559967041
    5. ']' → logprob: -7.47182559967041
    6. '[' → logprob: -8.47182559967041
    7. 'n' → logprob: -9.47182559967041
    8. '2' → logprob: -9.97182559967041
    9. '],' → logprob: -10.22182559967041
    10. ' ' → logprob: -10.34682559967041

Token 405: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.5579125285148621
    2. '][' → logprob: -1.0579125881195068
    3. '],[' → logprob: -3.182912588119507
    4. ',' → logprob: -3.432912588119507
    5. '[' → logprob: -6.307912349700928
    6. '),' → logprob: -6.432912349700928
    7. ']' → logprob: -6.682912349700928
    8. '])' → logprob: -6.932912349700928
    9. ')' → logprob: -8.432912826538086
    10. ']))' → logprob: -8.682912826538086

Token 406: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -8.387458365177736e-05
    2. ' dp' → logprob: -10.125083923339844
    3. ')' → logprob: -10.625083923339844
    4. '0' → logprob: -11.875083923339844
    5. '(dp' → logprob: -12.125083923339844
    6. 'f' → logprob: -13.375083923339844
    7. '))' → logprob: -14.125083923339844
    8. '	dp' → logprob: -14.250083923339844
    9. '])' → logprob: -14.625083923339844
    10. 'p' → logprob: -14.750083923339844

Token 407: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.019088832661509514
    2. '][' → logprob: -4.0190887451171875
    3. '1' → logprob: -7.2690887451171875
    4. '0' → logprob: -9.769088745117188
    5. ']' → logprob: -9.894088745117188
    6. ')[' → logprob: -10.144088745117188
    7. '
' → logprob: -10.644088745117188
    8. '[
' → logprob: -11.269088745117188
    9. '   ' → logprob: -12.019088745117188
    10. ' [' → logprob: -12.144088745117188

Token 408: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.030081255361437798
    2. '0' → logprob: -3.530081272125244
    3. '(' → logprob: -8.780080795288086
    4. '[' → logprob: -9.530080795288086
    5. 'n' → logprob: -9.655080795288086
    6. 'max' → logprob: -12.030080795288086
    7. ' ' → logprob: -12.155080795288086
    8. '-' → logprob: -12.405080795288086
    9. '2' → logprob: -12.655080795288086
    10. '][' → logprob: -12.780080795288086

Token 409: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001520930090919137
    2. '[' → logprob: -6.876521110534668
    3. ']' → logprob: -8.001521110534668
    4. ' ][' → logprob: -9.501521110534668
    5. ')[' → logprob: -10.501521110534668
    6. '0' → logprob: -11.251521110534668
    7. '1' → logprob: -11.501521110534668
    8. ')' → logprob: -12.376521110534668
    9. ']
' → logprob: -12.626521110534668
    10. ' ' → logprob: -13.001521110534668

Token 410: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5946148037910461
    2. 'j' → logprob: -0.9696148037910461
    3. '1' → logprob: -2.9696147441864014
    4. ']))' → logprob: -4.9696149826049805
    5. '])' → logprob: -5.8446149826049805
    6. ')])' → logprob: -6.2196149826049805
    7. ']' → logprob: -6.3446149826049805
    8. '[' → logprob: -6.7196149826049805
    9. '[j' → logprob: -7.3446149826049805
    10. ')' → logprob: -7.4696149826049805

Token 411: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.9155099391937256
    2. ')' → logprob: -1.0405099391937256
    3. '])' → logprob: -1.4155099391937256
    4. ']))' → logprob: -6.290510177612305
    5. ')])' → logprob: -6.665510177612305
    6. ')))' → logprob: -8.665510177612305
    7. ')]' → logprob: -9.040510177612305
    8. ']' → logprob: -10.290510177612305
    9. '),' → logprob: -10.290510177612305
    10. '[' → logprob: -10.665510177612305

Token 412: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006530041806399822
    2. '<|end|>' → logprob: -5.131529808044434
    3. '
' → logprob: -8.631529808044434
    4. '#' → logprob: -8.881529808044434
    5. 'return' → logprob: -9.506529808044434
    6. 'print' → logprob: -9.506529808044434
    7. '...' → logprob: -10.756529808044434
    8. '    
' → logprob: -11.131529808044434
    9. '<|end|>' → logprob: -11.131529808044434
    10. '    ' → logprob: -11.131529808044434

Token 413: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4791090190410614
    2. '   ' → logprob: -1.2291090488433838
    3. 'return' → logprob: -2.979109048843384
    4. 'for' → logprob: -3.604109048843384
    5. 'result' → logprob: -5.729108810424805
    6. 'max' → logprob: -6.229108810424805
    7. 'if' → logprob: -6.854108810424805
    8. ' for' → logprob: -7.229108810424805
    9. 'p' → logprob: -7.479108810424805
    10. '#' (adapté à ' #') → logprob: -8.229108810424805

Token 414: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.39100566506385803
    2. 'ans' → logprob: -2.516005754470825
    3. 'for' → logprob: -2.516005754470825
    4. 'res' → logprob: -2.766005754470825
    5. '   ' → logprob: -3.141005754470825
    6. 'return' → logprob: -3.516005754470825
    7. 'result' → logprob: -4.266005516052246
    8. 'answer' → logprob: -5.641005516052246
    9. 'pr' → logprob: -6.516005516052246
    10. 'max' → logprob: -6.766005516052246

Token 415: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.2781769037246704
    2. '()' → logprob: -1.9031769037246704
    3. '(' → logprob: -2.403176784515381
    4. '(p' → logprob: -6.153176784515381
    5. '(max' → logprob: -8.028177261352539
    6. '(len' → logprob: -8.153177261352539
    7. 'dp' → logprob: -8.903177261352539
    8. '(s' → logprob: -9.403177261352539
    9. '(sum' → logprob: -9.653177261352539
    10. 's' → logprob: -9.778177261352539

Token 416: ')
' (ID: 446)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003921847674064338
    2. '[-' → logprob: -8.750391960144043
    3. ')' → logprob: -9.375391960144043
    4. '[n' → logprob: -10.375391960144043
    5. '[i' → logprob: -10.875391960144043
    6. '<|end|>' → logprob: -10.875391960144043
    7. '0' → logprob: -11.000391960144043
    8. '[len' → logprob: -11.625391960144043
    9. '[][' → logprob: -11.750391960144043
    10. '][' → logprob: -11.750391960144043

Token 417: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1735456883907318
    2. 'print' → logprob: -2.5485455989837646
    3. 'return' → logprob: -3.1735455989837646
    4. 'result' → logprob: -3.9235455989837646
    5. 'for' → logprob: -4.548545837402344
    6. 'res' → logprob: -6.173545837402344
    7. 'max' → logprob: -6.423545837402344
    8. '<|end|>' → logprob: -6.798545837402344
    9. 'ans' → logprob: -7.173545837402344
    10. 'results' → logprob: -7.798545837402344

Token 418: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26485681533813477
    2. 'print' → logprob: -1.7648568153381348
    3. 'ans' → logprob: -3.1398568153381348
    4. 'res' → logprob: -4.889856815338135
    5. 'result' → logprob: -5.264856815338135
    6. 'for' (adapté à ' for') → logprob: -6.139856815338135
    7. 'answer' → logprob: -6.889856815338135
    8. 'return' → logprob: -7.014856815338135
    9. 'max' → logprob: -7.514856815338135
    10. ' ans' → logprob: -8.889856338500977

Token 419: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5918222665786743
    2. ' i' → logprob: -0.8418222665786743
    3. 'k' → logprob: -5.591822147369385
    4. 'j' → logprob: -5.841822147369385
    5. ' k' → logprob: -6.091822147369385
    6. ' j' → logprob: -6.091822147369385
    7. 'x' → logprob: -6.966822147369385
    8. '_' → logprob: -7.216822147369385
    9. ' x' → logprob: -7.216822147369385
    10. ' mask' → logprob: -7.841822147369385

Token 420: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05048184096813202
    2. 'in' → logprob: -3.1754817962646484
    3. '(' → logprob: -5.300481796264648
    4. ' ' → logprob: -6.300481796264648
    5. '(n' → logprob: -8.800481796264648
    6. ' i' → logprob: -8.925481796264648
    7. ' (' → logprob: -9.050481796264648
    8. '	in' → logprob: -9.550481796264648
    9. ' n' → logprob: -10.675481796264648
    10. 'n' → logprob: -10.675481796264648

Token 421: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08928948640823364
    2. ' range' → logprob: -2.464289426803589
    3. 'dp' → logprob: -8.964289665222168
    4. 'ra' → logprob: -9.589289665222168
    5. 'r' → logprob: -10.089289665222168
    6. 'ran' → logprob: -10.339289665222168
    7. ' ra' → logprob: -10.464289665222168
    8. 'rang' → logprob: -11.214289665222168
    9. ' ' → logprob: -11.964289665222168
    10. 'p' → logprob: -11.964289665222168

Token 422: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.38804301619529724
    2. '(' → logprob: -1.2630430459976196
    3. '(max' → logprob: -3.26304292678833
    4. '((' → logprob: -8.263043403625488
    5. '(len' → logprob: -8.888043403625488
    6. 'max' → logprob: -10.013043403625488
    7. 'n' → logprob: -10.138043403625488
    8. '1' → logprob: -10.388043403625488
    9. '(mod' → logprob: -10.638043403625488
    10. '(min' → logprob: -12.388043403625488

Token 423: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06352759152650833
    2. '1' → logprob: -3.3135275840759277
    3. 'max' → logprob: -3.8135275840759277
    4. '(' → logprob: -6.563527584075928
    5. '(n' → logprob: -6.688527584075928
    6. '(max' → logprob: -9.063528060913086
    7. '0' → logprob: -9.438528060913086
    8. 'len' → logprob: -9.938528060913086
    9. ' n' → logprob: -10.188528060913086
    10. '2' → logprob: -10.188528060913086

Token 424: ' <<' (ID: 2256)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18203213810920715
    2. '<<' → logprob: -2.4320321083068848
    3. ',n' → logprob: -2.6820321083068848
    4. ' ,' → logprob: -5.057032108306885
    5. ' <<' → logprob: -5.682032108306885
    6. '   ' → logprob: -9.182032585144043
    7. '<<(' → logprob: -9.432032585144043
    8. '(' → logprob: -9.557032585144043
    9. '(n' → logprob: -9.932032585144043
    10. '1' → logprob: -10.807032585144043

Token 425: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00015169414109550416
    2. '(n' → logprob: -9.125151634216309
    3. ' n' → logprob: -10.125151634216309
    4. '(' → logprob: -13.000151634216309
    5. ' (' → logprob: -15.625151634216309
    6. '   ' → logprob: -15.625151634216309
    7. '	n' → logprob: -16.750152587890625
    8. '1' → logprob: -17.625152587890625
    9. ')n' → logprob: -17.875152587890625
    10. '_n' → logprob: -18.000152587890625

Token 426: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25241804122924805
    2. '):
' → logprob: -1.502418041229248
    3. '   ' → logprob: -9.127418518066406
    4. '+' → logprob: -9.502418518066406
    5. ':' → logprob: -9.502418518066406
    6. '):
' → logprob: -9.877418518066406
    7. ')' → logprob: -10.002418518066406
    8. '():' → logprob: -10.627418518066406
    9. '(' → logprob: -11.002418518066406
    10. '**' → logprob: -11.377418518066406

Token 427: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005583894904702902
    2. '   ' → logprob: -5.255583763122559
    3. ' for' → logprob: -8.880583763122559
    4. ' if' → logprob: -8.880583763122559
    5. 'if' → logprob: -10.630583763122559
    6. 'for' → logprob: -10.630583763122559
    7. 'print' → logprob: -11.630583763122559
    8. ' print' → logprob: -12.630583763122559
    9. ' s' → logprob: -12.755583763122559
    10. '	   ' → logprob: -13.505583763122559

Token 428: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6804858446121216
    2. 'dp' → logprob: -1.4304858446121216
    3. '   ' → logprob: -1.9304858446121216
    4. ' for' → logprob: -2.930485725402832
    5. ' dp' → logprob: -4.055485725402832
    6. 'if' → logprob: -4.180485725402832
    7. '       ' → logprob: -5.055485725402832
    8. 'p' → logprob: -5.180485725402832
    9. 'print' (adapté à ' print') → logprob: -5.305485725402832
    10. ' if' → logprob: -6.305485725402832

Token 429: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.011969723738729954
    2. '(max' → logprob: -4.511969566345215
    3. 'dp' → logprob: -7.386969566345215
    4. '(' → logprob: -8.886969566345215
    5. '(min' → logprob: -9.011969566345215
    6. 'max' → logprob: -10.886969566345215
    7. '(sum' → logprob: -11.136969566345215
    8. '(p' → logprob: -13.136969566345215
    9. '()' → logprob: -13.636969566345215
    10. ' dp' → logprob: -13.886969566345215

Token 430: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.32654589228332e-05
    2. '[' → logprob: -9.750073432922363
    3. 'i' → logprob: -11.250073432922363
    4. '][' → logprob: -14.625073432922363
    5. ')' → logprob: -14.750073432922363
    6. ',i' → logprob: -15.375073432922363
    7. ')[' → logprob: -15.500073432922363
    8. '(i' → logprob: -15.750073432922363
    9. ')i' → logprob: -16.000072479248047
    10. '0' → logprob: -16.250072479248047

Token 431: '][-' (ID: 162298)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0015623578801751137
    2. '][-' → logprob: -6.626562595367432
    3. '[n' → logprob: -8.751562118530273
    4. ']' → logprob: -9.751562118530273
    5. '[' → logprob: -12.001562118530273
    6. ' ][' → logprob: -12.251562118530273
    7. '[-' → logprob: -12.626562118530273
    8. '   ' → logprob: -13.501562118530273
    9. '(n' → logprob: -14.126562118530273
    10. '])' → logprob: -14.126562118530273

Token 432: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. '2' → logprob: -13.50000286102295
    3. ' ' → logprob: -14.75000286102295
    4. '   ' → logprob: -15.81250286102295
    5. '
' → logprob: -16.125001907348633
    6. '```' → logprob: -16.250001907348633
    7. '])' → logprob: -16.625001907348633
    8. '3' → logprob: -17.062501907348633
    9. ')' → logprob: -17.250001907348633
    10. ']' → logprob: -17.437501907348633

Token 433: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.062069524079561234
    2. '])' → logprob: -2.8120694160461426
    3. '))' → logprob: -10.1870698928833
    4. '())' → logprob: -10.5620698928833
    5. ')])' → logprob: -10.8120698928833
    6. '})' → logprob: -12.0620698928833
    7. ')]' → logprob: -12.8120698928833
    8. ']' → logprob: -12.9370698928833
    9. ',' → logprob: -13.3120698928833
    10. '()' → logprob: -13.4370698928833

Token 434: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 435: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 436: ' pass' (ID: 1853)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 437: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 438: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 439: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 440: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 441: '#' (ID: 2)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.10144133120775223
    2. '<|end|>' → logprob: -2.6014413833618164
    3. 'if' → logprob: -4.476441383361816
    4. '#' → logprob: -5.351441383361816
    5. '
' → logprob: -5.976441383361816
    6. '```' → logprob: -6.351441383361816
    7. ' solve' → logprob: -6.601441383361816
    8. '.solve' → logprob: -8.976441383361816
    9. '\n' → logprob: -9.476441383361816
    10. '<|end|>' → logprob: -9.851441383361816

Token 442: 'Solve' (ID: 144594)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.7725987434387207
    2. 'if' → logprob: -1.2725987434387207
    3. '#' → logprob: -1.6475987434387207
    4. '<|end|>' → logprob: -2.7725987434387207
    5. ' solve' → logprob: -6.647598743438721
    6. '```' → logprob: -7.397598743438721
    7. '__' → logprob: -8.272598266601562
    8. '.solve' → logprob: -8.397598266601562
    9. '<|end|>' → logprob: -8.522598266601562
    10. ' if' → logprob: -9.147598266601562

Token 443: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.35906779766082764
    2. 'if' → logprob: -1.3590677976608276
    3. 'solve' → logprob: -3.234067916870117
    4. '()
' → logprob: -5.609067916870117
    5. '();' → logprob: -7.484067916870117
    6. '<|end|>' → logprob: -8.234067916870117
    7. '```' → logprob: -8.609067916870117
    8. '#' → logprob: -8.609067916870117
    9. '()

' → logprob: -8.734067916870117
    10. '
' → logprob: -9.109067916870117

Token 444: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07889209687709808
    2. 'solve' → logprob: -2.5788919925689697
    3. 'for' → logprob: -13.95389175415039
    4. ' solve' → logprob: -14.82889175415039
    5. ' if' → logprob: -14.95389175415039
    6. 'print' → logprob: -15.82889175415039
    7. '```' → logprob: -15.95389175415039
    8. 'try' → logprob: -16.20389175415039
    9. 'I' → logprob: -16.32889175415039
    10. 'i' → logprob: -16.32889175415039

Token 445: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5759596228599548
    2. '__' → logprob: -0.8259596228599548
    3. '_name' → logprob: -11.450959205627441
    4. '_' → logprob: -12.325959205627441
    5. 'name' → logprob: -12.450959205627441
    6. '___' → logprob: -14.325959205627441
    7. ' ' → logprob: -15.825959205627441
    8. ' ' → logprob: -15.950959205627441
    9. '____' → logprob: -16.200960159301758
    10. '/__' → logprob: -16.700960159301758

Token 446: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1513260006904602
    2. 'name' → logprob: -2.6513259410858154
    3. ' __' → logprob: -2.7763259410858154
    4. '_' → logprob: -5.4013261795043945
    5. '_name' → logprob: -6.2763261795043945
    6. ' ==' → logprob: -7.0263261795043945
    7. '==' → logprob: -9.776326179504395
    8. 'if' → logprob: -9.901326179504395
    9. '_NAME' → logprob: -10.401326179504395
    10. '_main' → logprob: -10.526326179504395

Token 447: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.0445127372804563e-05
    2. '_' → logprob: -11.87501049041748
    3. '==' → logprob: -13.50001049041748
    4. '__
' → logprob: -14.25001049041748
    5. '__.__' → logprob: -14.50001049041748
    6. '___' → logprob: -14.62501049041748
    7. '____' → logprob: -15.50001049041748
    8. ' __' → logprob: -16.500009536743164
    9. '__.' → logprob: -17.125009536743164
    10. '=' → logprob: -17.125009536743164

Token 448: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0015110508538782597
    2. '==' → logprob: -6.626511096954346
    3. '=="' → logprob: -9.126510620117188
    4. ' ==' → logprob: -10.126510620117188
    5. '_' → logprob: -10.626510620117188
    6. '___' → logprob: -12.376510620117188
    7. '____' → logprob: -13.126510620117188
    8. '=' → logprob: -13.626510620117188
    9. '__.__' → logprob: -13.626510620117188
    10. '__
' → logprob: -14.251510620117188

Token 449: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0052377874962985516
    2. ''' → logprob: -5.255237579345703
    3. '__' → logprob: -12.880237579345703
    4. ' "__' → logprob: -13.505237579345703
    5. ''"' → logprob: -16.880237579345703
    6. ' '__' → logprob: -17.755237579345703
    7. '"name' → logprob: -18.380237579345703
    8. '   ' → logprob: -18.505237579345703
    9. '"'' → logprob: -18.505237579345703
    10. '"user' → logprob: -18.505237579345703

Token 450: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.054500666621607e-06
    2. '"' → logprob: -13.87500286102295
    3. '__' → logprob: -14.00000286102295
    4. 'name' → logprob: -14.12500286102295
    5. '_main' → logprob: -14.87500286102295
    6. ' main' → logprob: -16.125003814697266
    7. ''' → logprob: -17.375003814697266
    8. '(main' → logprob: -18.750003814697266
    9. '	main' → logprob: -19.000003814697266
    10. 'ma' → logprob: -19.500003814697266

Token 451: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2567194104194641
    2. '__":
' → logprob: -1.5067193508148193
    3. '__':
' → logprob: -5.881719589233398
    4. '__:' → logprob: -6.381719589233398
    5. '_' → logprob: -8.631719589233398
    6. '():
' → logprob: -9.256719589233398
    7. '__
' → logprob: -11.506719589233398
    8. ':' → logprob: -12.756719589233398
    9. '__()
' → logprob: -13.006719589233398
    10. '__
' → logprob: -13.881719589233398

Token 452: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02332211285829544
    2. 'solve' → logprob: -3.773322105407715
    3. ' solve' → logprob: -9.648322105407715
    4. '.solve' → logprob: -12.398322105407715
    5. '	s' → logprob: -13.023322105407715
    6. '  ' → logprob: -13.023322105407715
    7. '```' → logprob: -13.273322105407715
    8. ' ' → logprob: -14.523322105407715
    9. '   ' → logprob: -14.523322105407715
    10. '    
' → logprob: -15.023322105407715

Token 453: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -7.896309739408025e-07
    2. '   ' → logprob: -14.500000953674316
    3. ' solve' → logprob: -15.250000953674316
    4. 'resolve' → logprob: -19.375
    5. '.solve' → logprob: -20.625
    6. '  ' → logprob: -22.375
    7. 'save' → logprob: -23.0
    8. 's' → logprob: -23.625
    9. 'sol' → logprob: -24.375
    10. '    
' → logprob: -24.625

Token 454: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3663400411605835
    2. '(' → logprob: -1.3663400411605835
    3. '<|end|>' → logprob: -3.116340160369873
    4. '#' → logprob: -6.241340160369873
    5. ')' → logprob: -6.366340160369873
    6. '(
' → logprob: -7.116340160369873
    7. '```' → logprob: -7.116340160369873
    8. '
' → logprob: -7.491340160369873
    9. '()
' → logprob: -8.241339683532715
    10. '\n' → logprob: -8.366339683532715


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 452
Tokens correctement prédits (1ère position, stricte): 186
Tokens correctement prédits (1ère position, avec adaptation): 191
Tokens correctement prédits (top 10): 371
Précision stricte (1ère position): 41.15%
Précision adaptée (1ère position): 42.26%
Précision (top 10): 82.08%
================================================================================
