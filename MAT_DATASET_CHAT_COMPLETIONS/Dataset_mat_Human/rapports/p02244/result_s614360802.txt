================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from itertools import permutations
n=int(input())
q=[list(map(int,input().split())) for _ in range(n)]
l=list(range(8))
Q=list(permutations(l,8))
def OK(s):
    a=list(s)
    b=list(s)
    for i in range(len(s)):
        a[i]-=i
        b[i]+=i
    for i,j in enumerate(a[:-1]):
        if j in a[i+1:]:
            return False
    for i,j in enumerate(b[:-1]):
        if j in b[i+1:]:
            return False
    return True
for i in Q:
    chk=i
    for x,y in q:
        if i[x]!=y:
            chk=[]
            break
    if chk:
        if OK(i):
            A=i
            break
ans=[['.']*8 for _ in range(8)]
for i,j in enumerate(A):
    ans[i][j]='Q'
    print(''.join(map(str,ans[i])))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' permutations' (ID: 174595)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.0214946269989014
    2. 'per' → logprob: -1.6464946269989014
    3. 'product' → logprob: -2.1464946269989014
    4. ' permutations' → logprob: -2.2714946269989014
    5. 'count' → logprob: -2.5214946269989014
    6. 'cycle' → logprob: -3.2714946269989014
    7. ' product' → logprob: -3.7714946269989014
    8. ' cycle' → logprob: -3.7714946269989014
    9. 'group' → logprob: -3.8964946269989014
    10. 'chain' → logprob: -4.0214948654174805

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -3.6789137084269896e-05
    2. '\(' → logprob: -11.75003719329834
    3. '(
' → logprob: -12.00003719329834
    4. '.' → logprob: -12.00003719329834
    5. '`' → logprob: -12.25003719329834
    6. ''' → logprob: -12.75003719329834
    7. '```' → logprob: -13.00003719329834
    8. ' (' → logprob: -13.87503719329834
    9. '"' → logprob: -14.25003719329834
    10. ',' → logprob: -14.25003719329834

Token 5: 'n' (ID: 77)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -7.576873758807778e-05
    2. '(
' → logprob: -10.500075340270996
    3. '\(' → logprob: -11.000075340270996
    4. '.' → logprob: -11.250075340270996
    5. ',' → logprob: -12.500075340270996
    6. 'a' → logprob: -12.625075340270996
    7. '#' → logprob: -13.000075340270996
    8. '(

' → logprob: -13.875075340270996
    9. ' (' → logprob: -14.250075340270996
    10. '\' → logprob: -14.250075340270996

Token 6: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8232987523078918
    2. ')' → logprob: -1.198298692703247
    3. '.' → logprob: -2.323298692703247
    4. ' =' → logprob: -2.698298692703247
    5. '_' → logprob: -2.948298692703247
    6. 'u' → logprob: -4.073298931121826
    7. ',' → logprob: -4.573298931121826
    8. ' ' → logprob: -5.323298931121826
    9. '[' → logprob: -5.823298931121826
    10. '(' → logprob: -6.323298931121826

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00081487005809322
    2. '(input' → logprob: -7.250814914703369
    3. ' (' → logprob: -9.875814437866211
    4. '(n' → logprob: -10.625814437866211
    5. '('' → logprob: -11.250814437866211
    6. '(
' → logprob: -12.875814437866211
    7. '(user' → logprob: -12.875814437866211
    8. 'input' → logprob: -13.250814437866211
    9. '()' → logprob: -13.375814437866211
    10. '(`' → logprob: -13.875814437866211

Token 8: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37017911672592163
    2. '()' → logprob: -2.1201791763305664
    3. '(' → logprob: -2.3701791763305664
    4. '())' → logprob: -2.3701791763305664
    5. '))' → logprob: -6.995179176330566
    6. '`)' → logprob: -7.370179176330566
    7. '')' → logprob: -7.620179176330566
    8. '(
' → logprob: -8.995179176330566
    9. '")' → logprob: -9.620179176330566
    10. '('' → logprob: -9.870179176330566

Token 9: 'q' (ID: 80)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21667329967021942
    2. 'a' → logprob: -2.4666733741760254
    3. 's' → logprob: -2.9666733741760254
    4. 'data' → logprob: -4.341673374176025
    5. ' for' → logprob: -4.466673374176025
    6. 'arr' → logprob: -4.716673374176025
    7. 'per' → logprob: -4.966673374176025
    8. 'numbers' → logprob: -5.216673374176025
    9. 'perm' → logprob: -5.966673374176025
    10. 'nums' → logprob: -6.341673374176025

Token 10: '=[' (ID: 13370)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.11826512962579727
    2. 'uer' → logprob: -3.368265151977539
    3. '=' → logprob: -3.618265151977539
    4. '.' → logprob: -3.618265151977539
    5. 'ue' → logprob: -3.993265151977539
    6. ' =' → logprob: -5.743265151977539
    7. 'ual' → logprob: -7.993265151977539
    8. '=u' → logprob: -8.368265151977539
    9. 'ua' → logprob: -8.493265151977539
    10. ',' → logprob: -9.118265151977539

Token 11: 'list' (ID: 2641)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.2269904613494873
    2. 'i' → logprob: -1.3519904613494873
    3. '*' → logprob: -1.4769904613494873
    4. '*i' → logprob: -2.1019904613494873
    5. 'input' → logprob: -3.1019904613494873
    6. ']' → logprob: -3.7269904613494873
    7. 'str' → logprob: -5.101990699768066
    8. '0' → logprob: -5.351990699768066
    9. 'x' → logprob: -5.601990699768066
    10. '(i' → logprob: -6.476990699768066

Token 12: '(map' (ID: 16946)
  Prédit: '(per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(per' → logprob: -0.0035595656372606754
    2. '(map' → logprob: -6.003559589385986
    3. '(range' → logprob: -7.378559589385986
    4. '(' → logprob: -8.003559112548828
    5. '(input' → logprob: -9.503559112548828
    6. 'per' → logprob: -10.628559112548828
    7. '()' → logprob: -11.003559112548828
    8. '((' → logprob: -13.128559112548828
    9. ' permutations' → logprob: -13.878559112548828
    10. '(
' → logprob: -14.003559112548828

Token 13: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.002922087674960494
    2. '(lambda' → logprob: -6.877922058105469
    3. '(' → logprob: -7.127922058105469
    4. '(str' → logprob: -7.627922058105469
    5. 'int' → logprob: -8.127922058105469
    6. '(input' → logprob: -9.502922058105469
    7. '[int' → logprob: -10.127922058105469
    8. '<|end|>' → logprob: -10.127922058105469
    9. '<int' → logprob: -10.377922058105469
    10. '=int' → logprob: -10.502922058105469

Token 14: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.02809556946158409
    2. '(' → logprob: -4.028095722198486
    3. ',input' → logprob: -4.778095722198486
    4. 'input' → logprob: -7.278095722198486
    5. ')' → logprob: -8.278095245361328
    6. '=input' → logprob: -9.028095245361328
    7. ',' → logprob: -9.028095245361328
    8. '))' → logprob: -9.528095245361328
    9. '(x' → logprob: -9.778095245361328
    10. '<|end|>' → logprob: -10.278095245361328

Token 15: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.4259644558478612e-05
    2. '()' → logprob: -12.000014305114746
    3. '()))' → logprob: -13.000014305114746
    4. ' ().' → logprob: -13.250014305114746
    5. '))' → logprob: -13.625014305114746
    6. '.split' → logprob: -14.000014305114746
    7. '.' → logprob: -14.625014305114746
    8. ')' → logprob: -14.750014305114746
    9. '.readline' → logprob: -15.375014305114746
    10. '())' → logprob: -15.750014305114746

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00010819212911883369
    2. 'strip' → logprob: -9.250107765197754
    3. 'rstrip' → logprob: -11.375107765197754
    4. ' split' → logprob: -14.750107765197754
    5. '(split' → logprob: -15.875107765197754
    6. 'read' → logprob: -17.62510871887207
    7. 'spl' → logprob: -17.62510871887207
    8. 's' → logprob: -18.25010871887207
    9. '.split' → logprob: -18.50010871887207
    10. 'replace' → logprob: -18.87510871887207

Token 17: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.003206234658136964
    2. '))' → logprob: -6.628206253051758
    3. '())' → logprob: -7.253206253051758
    4. '()' → logprob: -7.253206253051758
    5. '('' → logprob: -8.753206253051758
    6. '())))' → logprob: -8.753206253051758
    7. '(' → logprob: -9.628206253051758
    8. '()))
' → logprob: -10.003206253051758
    9. '(','' → logprob: -11.378206253051758
    10. '()));' → logprob: -12.128206253051758

Token 18: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29255858063697815
    2. ')]' → logprob: -2.0425586700439453
    3. '())' → logprob: -2.4175586700439453
    4. 'for' → logprob: -4.917558670043945
    5. '(' → logprob: -5.042558670043945
    6. '()]' → logprob: -5.042558670043945
    7. '()' → logprob: -5.167558670043945
    8. ']' → logprob: -6.042558670043945
    9. ' for' → logprob: -6.292558670043945
    10. '),' → logprob: -7.042558670043945

Token 19: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.005087764468044043
    2. 'range' → logprob: -5.880087852478027
    3. '_' → logprob: -6.255087852478027
    4. '_range' → logprob: -8.755087852478027
    5. '(range' → logprob: -8.880087852478027
    6. ' _' → logprob: -10.005087852478027
    7. '	range' → logprob: -11.255087852478027
    8. ' ' → logprob: -12.630087852478027
    9. ' i' → logprob: -14.630087852478027
    10. ' in' → logprob: -15.380087852478027

Token 20: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08910751342773438
    2. ' range' → logprob: -2.4641075134277344
    3. '	range' → logprob: -9.464107513427734
    4. ' in' → logprob: -9.839107513427734
    5. '(range' → logprob: -10.714107513427734
    6. 'in' → logprob: -12.464107513427734
    7. '.range' → logprob: -12.589107513427734
    8. '```' → logprob: -12.714107513427734
    9. '_range' → logprob: -13.339107513427734
    10. ' ' → logprob: -14.714107513427734

Token 21: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.596781946020201e-05
    2. ' range' → logprob: -10.000045776367188
    3. '(range' → logprob: -14.750045776367188
    4. '	range' → logprob: -16.125045776367188
    5. '[' → logprob: -17.000045776367188
    6. '.range' → logprob: -18.250045776367188
    7. 'n' → logprob: -19.125045776367188
    8. '_range' → logprob: -19.500045776367188
    9. ' ' → logprob: -19.750045776367188
    10. 'rang' → logprob: -20.125045776367188

Token 22: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00029947367147542536
    2. '(' → logprob: -8.125299453735352
    3. 'n' → logprob: -12.750299453735352
    4. ' (' → logprob: -14.875299453735352
    5. '(
' → logprob: -16.25029945373535
    6. ' n' → logprob: -16.62529945373535
    7. ')n' → logprob: -17.37529945373535
    8. ')' → logprob: -18.12529945373535
    9. ')(' → logprob: -18.62529945373535
    10. '(range' → logprob: -18.62529945373535

Token 23: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00091050990158692
    2. ')])' → logprob: -7.62591028213501
    3. ')' → logprob: -8.625910758972168
    4. '])]' → logprob: -8.625910758972168
    5. ']' → logprob: -10.500910758972168
    6. '])' → logprob: -11.000910758972168
    7. '))' → logprob: -11.500910758972168
    8. '')]' → logprob: -12.500910758972168
    9. ')],' → logprob: -13.750910758972168
    10. ')]
' → logprob: -14.000910758972168

Token 24: 'l' (ID: 75)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9676164388656616
    2. 'for' → logprob: -0.9676164388656616
    3. '\n' → logprob: -2.842616558074951
    4. 'p' → logprob: -3.092616558074951
    5. '[' → logprob: -3.592616558074951
    6. 's' → logprob: -3.842616558074951
    7. 'q' → logprob: -4.592616558074951
    8. '\' → logprob: -4.717616558074951
    9. 'result' → logprob: -4.717616558074951
    10. 'a' → logprob: -4.967616558074951

Token 25: '=list' (ID: 93413)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.08435595780611038
    2. 'e' → logprob: -3.0843560695648193
    3. '=[]' → logprob: -4.33435583114624
    4. 'ist' → logprob: -4.58435583114624
    5. '=' → logprob: -4.95935583114624
    6. '=len' → logprob: -6.83435583114624
    7. '[' → logprob: -7.20935583114624
    8. 'ength' → logprob: -7.20935583114624
    9. '(en' → logprob: -7.83435583114624
    10. ' =' → logprob: -7.95935583114624

Token 26: '(range' (ID: 50017)
  Prédit: '(per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(per' → logprob: -0.002712500048801303
    2. '(' → logprob: -6.252712726593018
    3. '(range' → logprob: -7.877712726593018
    4. 'per' → logprob: -9.00271224975586
    5. '()' → logprob: -9.00271224975586
    6. ' permutations' → logprob: -10.37771224975586
    7. '(it' → logprob: -10.50271224975586
    8. '(p' → logprob: -11.12771224975586
    9. ')' → logprob: -12.00271224975586
    10. '(list' → logprob: -12.00271224975586

Token 27: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.002199263544753194
    2. '(' → logprob: -6.127199172973633
    3. 'n' → logprob: -11.252199172973633
    4. ')n' → logprob: -14.877199172973633
    5. '(len' → logprob: -15.502199172973633
    6. ' (' → logprob: -15.502199172973633
    7. ')' → logprob: -15.752199172973633
    8. ',n' → logprob: -16.377199172973633
    9. '(N' → logprob: -16.752199172973633
    10. '(
' → logprob: -16.877199172973633

Token 28: '8' (ID: 23)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005015290342271328
    2. '1' → logprob: -5.6300153732299805
    3. ' n' → logprob: -6.6300153732299805
    4. '(n' → logprob: -10.25501537322998
    5. '2' → logprob: -10.75501537322998
    6. ')n' → logprob: -11.25501537322998
    7. '0' → logprob: -11.63001537322998
    8. '	n' → logprob: -12.38001537322998
    9. '(' → logprob: -13.13001537322998
    10. ' ' → logprob: -13.25501537322998

Token 29: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0011574854142963886
    2. ')' → logprob: -6.876157283782959
    3. ' ))' → logprob: -9.626157760620117
    4. ')))' → logprob: -10.501157760620117
    5. '))
' → logprob: -11.251157760620117
    6. ',' → logprob: -12.001157760620117
    7. '),' → logprob: -13.126157760620117
    8. '+' → logprob: -13.251157760620117
    9. '1' → logprob: -13.626157760620117
    10. ' )' → logprob: -14.126157760620117

Token 30: 'Q' (ID: 48)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12498803436756134
    2. ')' → logprob: -2.874988079071045
    3. '.' → logprob: -3.999988079071045
    4. '[' → logprob: -3.999988079071045
    5. ':' → logprob: -4.874988079071045
    6. '(
' → logprob: -4.999988079071045
    7. 'for' → logprob: -5.999988079071045
    8. ',' → logprob: -6.124988079071045
    9. ' ' → logprob: -7.249988079071045
    10. '
' → logprob: -7.624988079071045

Token 31: '=list' (ID: 93413)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.32791709899902344
    2. '[' → logprob: -1.7029170989990234
    3. 'u' → logprob: -2.4529170989990234
    4. '[u' → logprob: -4.827917098999023
    5. '[q' → logprob: -7.452917098999023
    6. '(' → logprob: -8.202917098999023
    7. ' permutations' → logprob: -8.452917098999023
    8. '.q' → logprob: -8.827917098999023
    9. '.[' → logprob: -8.952917098999023
    10. '.)' → logprob: -9.077917098999023

Token 32: '(per' (ID: 96497)
  Prédit: '(per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(per' → logprob: -0.009142265655100346
    2. '(' → logprob: -4.7591423988342285
    3. '(range' → logprob: -8.50914192199707
    4. '()' → logprob: -8.50914192199707
    5. '(it' → logprob: -10.50914192199707
    6. '((' → logprob: -10.63414192199707
    7. '(map' → logprob: -11.50914192199707
    8. '(P' → logprob: -11.63414192199707
    9. '([]' → logprob: -12.00914192199707
    10. 'per' → logprob: -12.38414192199707

Token 33: 'mut' (ID: 10522)
  Prédit: 'utations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utations' → logprob: -0.031057922169566154
    2. 'mut' → logprob: -3.531057834625244
    3. 'ut' → logprob: -7.781057834625244
    4. '(' → logprob: -8.031058311462402
    5. 'l' → logprob: -8.906058311462402
    6. 'r' → logprob: -9.031058311462402
    7. '(l' → logprob: -9.156058311462402
    8. 't' → logprob: -10.031058311462402
    9. 'u' → logprob: -10.656058311462402
    10. 'q' → logprob: -10.656058311462402

Token 34: 'ations' (ID: 929)
  Prédit: 'utations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utations' → logprob: -0.06206515431404114
    2. 'ations' → logprob: -2.8120651245117188
    3. 'ut' → logprob: -10.187065124511719
    4. '(' → logprob: -11.062065124511719
    5. 's' → logprob: -11.187065124511719
    6. 'utions' → logprob: -11.312065124511719
    7. 'at' → logprob: -11.437065124511719
    8. 'u' → logprob: -13.187065124511719
    9. 'uta' → logprob: -13.437065124511719
    10. 'urations' → logprob: -13.562065124511719

Token 35: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -1.4974866644479334e-05
    2. '(' → logprob: -11.250015258789062
    3. ' (' → logprob: -13.750015258789062
    4. '(range' → logprob: -15.000015258789062
    5. ')' → logprob: -15.375015258789062
    6. '(n' → logprob: -16.125015258789062
    7. ')(' → logprob: -16.375015258789062
    8. ',l' → logprob: -16.750015258789062
    9. '/l' → logprob: -17.250015258789062
    10. '((' → logprob: -17.625015258789062

Token 36: ',' (ID: 11)
  Prédit: '(),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.4151093065738678
    2. '(' → logprob: -1.2901092767715454
    3. '()))' → logprob: -3.790109395980835
    4. '())' → logprob: -4.415109157562256
    5. '(n' → logprob: -4.540109157562256
    6. ',' → logprob: -4.540109157562256
    7. '))' → logprob: -5.165109157562256
    8. '()' → logprob: -6.415109157562256
    9. ')' → logprob: -7.290109157562256
    10. '(len' → logprob: -8.415109634399414

Token 37: '8' (ID: 23)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.26491817831993103
    2. '8' → logprob: -1.6399182081222534
    3. ' n' → logprob: -4.389918327331543
    4. '5' → logprob: -4.639918327331543
    5. '7' → logprob: -4.764918327331543
    6. '4' → logprob: -5.264918327331543
    7. ' ' → logprob: -6.764918327331543
    8. '2' → logprob: -7.014918327331543
    9. '3' → logprob: -7.264918327331543
    10. '6' → logprob: -8.889918327331543

Token 38: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.048595547676086426
    2. ')' → logprob: -3.048595428466797
    3. ')))' → logprob: -12.173595428466797
    4. '),' → logprob: -13.298595428466797
    5. '))
' → logprob: -14.298595428466797
    6. ')
' → logprob: -15.673595428466797
    7. ' ))' → logprob: -15.923595428466797
    8. ')>' → logprob: -16.548595428466797
    9. '));' → logprob: -16.673595428466797
    10. ').' → logprob: -17.048595428466797

Token 39: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0224088616669178
    2. ':' → logprob: -4.272408962249756
    3. 'for' → logprob: -6.022408962249756
    4. ')
' → logprob: -6.147408962249756
    5. '
' → logprob: -7.022408962249756
    6. ':
' → logprob: -7.272408962249756
    7. '[' → logprob: -7.772408962249756
    8. '):' → logprob: -8.022408485412598
    9. 'print' → logprob: -8.647408485412598
    10. '#' → logprob: -8.772408485412598

Token 40: ' OK' (ID: 11339)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -1.089940071105957
    2. ' solve' → logprob: -1.339940071105957
    3. ' check' → logprob: -1.964940071105957
    4. ' calculate' → logprob: -2.589940071105957
    5. ' main' → logprob: -2.839940071105957
    6. ' score' → logprob: -3.214940071105957
    7. ' calc' → logprob: -3.589940071105957
    8. ' best' → logprob: -5.089940071105957
    9. ' evaluate' → logprob: -5.339940071105957
    10. ' cost' → logprob: -5.339940071105957

Token 41: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0024113270919770002
    2. '(p' → logprob: -7.127411365509033
    3. '(a' → logprob: -7.502411365509033
    4. '(i' → logprob: -7.877411365509033
    5. '(x' → logprob: -8.627410888671875
    6. ' (' → logprob: -9.127410888671875
    7. '(n' → logprob: -9.252410888671875
    8. '(l' → logprob: -9.752410888671875
    9. '((' → logprob: -10.752410888671875
    10. '(k' → logprob: -10.877410888671875

Token 42: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1787416636943817
    2. ')' → logprob: -2.303741693496704
    3. ')):' → logprob: -2.803741693496704
    4. '))' → logprob: -5.928741455078125
    5. ',' → logprob: -9.303741455078125
    6. 's' → logprob: -9.678741455078125
    7. 'e' → logprob: -9.928741455078125
    8. '):
' → logprob: -10.303741455078125
    9. 't' → logprob: -10.428741455078125
    10. ')s' → logprob: -10.678741455078125

Token 43: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5602648258209229
    2. ':' → logprob: -1.0602648258209229
    3. ')' → logprob: -3.310264825820923
    4. '():' → logprob: -4.310264587402344
    5. '   ' → logprob: -4.685264587402344
    6. '(s' → logprob: -5.185264587402344
    7. '):' → logprob: -5.310264587402344
    8. ' ' → logprob: -6.060264587402344
    9. '[:]' → logprob: -6.185264587402344
    10. '()' → logprob: -6.435264587402344

Token 44: ' a' (ID: 261)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.48646366596221924
    2. 'for' → logprob: -1.1114636659622192
    3. '   ' → logprob: -3.6114635467529297
    4. ' i' → logprob: -4.61146354675293
    5. 's' → logprob: -5.36146354675293
    6. 'i' → logprob: -5.36146354675293
    7. 'r' → logprob: -6.73646354675293
    8. '    ' → logprob: -6.86146354675293
    9. ' s' → logprob: -6.86146354675293
    10. 'c' → logprob: -6.98646354675293

Token 45: '=list' (ID: 93413)
  Prédit: '=set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=set' → logprob: -0.61141037940979
    2. '=' → logprob: -1.36141037940979
    3. '=[]' → logprob: -2.61141037940979
    4. '=s' → logprob: -3.48641037940979
    5. '=[]
' → logprob: -3.61141037940979
    6. 'll' → logprob: -4.486410140991211
    7. 'b' → logprob: -4.486410140991211
    8. '=[' → logprob: -4.611410140991211
    9. ' =' → logprob: -4.611410140991211
    10. ',b' → logprob: -5.111410140991211

Token 46: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.030697032809257507
    2. '(range' → logprob: -4.030696868896484
    3. '(set' → logprob: -4.905696868896484
    4. '(map' → logprob: -6.155696868896484
    5. '(' → logprob: -6.905696868896484
    6. '(en' → logprob: -7.405696868896484
    7. '()' → logprob: -7.780696868896484
    8. '(q' → logprob: -8.155696868896484
    9. '(per' → logprob: -8.405696868896484
    10. '(filter' → logprob: -9.030696868896484

Token 47: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008462217636406422
    2. ')
' → logprob: -5.008462429046631
    3. '[' → logprob: -7.508462429046631
    4. '())' → logprob: -7.508462429046631
    5. '[:' → logprob: -9.008461952209473
    6. ' )' → logprob: -9.508461952209473
    7. '))' → logprob: -9.508461952209473
    8. '()' → logprob: -9.633461952209473
    9. '[:-' → logprob: -9.633461952209473
    10. '(' → logprob: -10.258461952209473

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7886985540390015
    2. ')' → logprob: -1.5386985540390015
    3. '
' → logprob: -1.5386985540390015
    4. '\n' → logprob: -3.788698673248291
    5. '<|end|>' → logprob: -3.913698673248291
    6. '[' → logprob: -3.913698673248291
    7. ')
' → logprob: -4.288698673248291
    8. '    
' → logprob: -5.413698673248291
    9. '[]' → logprob: -5.663698673248291
    10. ' ' → logprob: -5.788698673248291

Token 49: ' b' (ID: 287)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.29785048961639404
    2. ' for' → logprob: -2.0478506088256836
    3. '   ' → logprob: -2.2978506088256836
    4. ')' → logprob: -3.7978506088256836
    5. 'or' → logprob: -7.172850608825684
    6. '
' → logprob: -7.297850608825684
    7. 'n' → logprob: -7.547850608825684
    8. ' ' → logprob: -7.672850608825684
    9. 'def' → logprob: -7.922850608825684
    10. '=' → logprob: -8.047850608825684

Token 50: '=list' (ID: 93413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4017917513847351
    2. '=set' → logprob: -1.9017918109893799
    3. '=a' → logprob: -2.65179181098938
    4. '=[]' → logprob: -3.02679181098938
    5. '=list' → logprob: -3.77679181098938
    6. '=len' → logprob: -4.526791572570801
    7. '=s' → logprob: -4.526791572570801
    8. '=[' → logprob: -5.276791572570801
    9. '.sort' → logprob: -5.526791572570801
    10. '(sorted' → logprob: -6.401791572570801

Token 51: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.15408234298229218
    2. '(a' → logprob: -2.4040822982788086
    3. '(range' → logprob: -3.1540822982788086
    4. '(set' → logprob: -5.654082298278809
    5. '(map' → logprob: -6.029082298278809
    6. '(re' → logprob: -6.154082298278809
    7. '(sorted' → logprob: -7.154082298278809
    8. '(' → logprob: -8.404082298278809
    9. 's' → logprob: -8.529082298278809
    10. '(per' → logprob: -8.779082298278809

Token 52: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02016635052859783
    2. '[' → logprob: -4.520166397094727
    3. '[::-' → logprob: -5.145166397094727
    4. ')
' → logprob: -6.270166397094727
    5. '))' → logprob: -7.145166397094727
    6. ')[' → logprob: -8.895166397094727
    7. ' )' → logprob: -9.395166397094727
    8. '())' → logprob: -10.020166397094727
    9. '[:' → logprob: -10.270166397094727
    10. '2' → logprob: -11.020166397094727

Token 53: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37817850708961487
    2. ')' → logprob: -2.253178596496582
    3. '   ' → logprob: -3.003178596496582
    4. '<|end|>' → logprob: -3.128178596496582
    5. '[::-' → logprob: -3.253178596496582
    6. ')
' → logprob: -3.753178596496582
    7. '[' → logprob: -4.253178596496582
    8. '\n' → logprob: -4.753178596496582
    9. '.sort' → logprob: -5.128178596496582
    10. '    
' → logprob: -5.628178596496582

Token 54: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7092995047569275
    2. '[::-' → logprob: -1.2092995643615723
    3. '.sort' → logprob: -2.0842995643615723
    4. '[' → logprob: -3.4592995643615723
    5. '   ' → logprob: -4.209299564361572
    6. '.reverse' → logprob: -4.584299564361572
    7. 'for' (adapté à ' for') → logprob: -4.834299564361572
    8. '[i' → logprob: -5.459299564361572
    9. ')
' → logprob: -5.834299564361572
    10. '[:]' → logprob: -5.959299564361572

Token 55: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02650117501616478
    2. 'i' → logprob: -3.651501178741455
    3. ' ' → logprob: -9.151500701904297
    4. ' range' → logprob: -9.901500701904297
    5. '	i' → logprob: -11.401500701904297
    6. 'range' → logprob: -11.401500701904297
    7. '(i' → logprob: -12.401500701904297
    8. ' ' → logprob: -12.651500701904297
    9. ' j' → logprob: -12.901500701904297
    10. 'I' → logprob: -13.026500701904297

Token 56: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.48334816098213196
    2. 'in' → logprob: -1.1083481311798096
    3. '(range' → logprob: -3.6083481311798096
    4. 'range' → logprob: -4.108348369598389
    5. ' range' → logprob: -5.108348369598389
    6. ' ' → logprob: -6.108348369598389
    7. '(' → logprob: -7.483348369598389
    8. ')' → logprob: -7.983348369598389
    9. '   ' → logprob: -9.10834789276123
    10. '	range' → logprob: -9.23334789276123

Token 57: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008832723833620548
    2. ' range' → logprob: -4.758832931518555
    3. 'a' → logprob: -8.508832931518555
    4. 'b' → logprob: -11.633832931518555
    5. ' ' → logprob: -12.508832931518555
    6. 'r' → logprob: -13.883832931518555
    7. '   ' → logprob: -14.508832931518555
    8. '  ' → logprob: -14.883832931518555
    9. ' a' → logprob: -14.883832931518555
    10. '	range' → logprob: -14.883832931518555

Token 58: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22551441192626953
    2. '(len' → logprob: -1.6005144119262695
    3. '(n' → logprob: -9.35051441192627
    4. 'len' → logprob: -12.85051441192627
    5. '(i' → logprob: -13.22551441192627
    6. ' ' → logprob: -13.22551441192627
    7. '(-' → logprob: -13.35051441192627
    8. ' (' → logprob: -13.35051441192627
    9. '(a' → logprob: -13.72551441192627
    10. ' len' → logprob: -13.97551441192627

Token 59: '(s' (ID: 1858)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0472276471555233
    2. '(s' → logprob: -3.172227621078491
    3. '(b' → logprob: -5.54722785949707
    4. '(' → logprob: -8.54722785949707
    5. 'a' → logprob: -9.42222785949707
    6. ')' → logprob: -11.17222785949707
    7. '(i' → logprob: -12.29722785949707
    8. 's' → logprob: -12.54722785949707
    9. ')a' → logprob: -12.79722785949707
    10. ' ' → logprob: -12.92222785949707

Token 60: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.5988441109657288
    2. ')):
' → logprob: -0.9738441109657288
    3. ')-' → logprob: -3.098844051361084
    4. ')' → logprob: -3.973844051361084
    5. '))' → logprob: -5.598844051361084
    6. '-' → logprob: -5.598844051361084
    7. '):' → logprob: -7.723844051361084
    8. ' ' → logprob: -7.973844051361084
    9. ')):
' → logprob: -8.098844528198242
    10. '   ' → logprob: -8.473844528198242

Token 61: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02803565002977848
    2. ')' → logprob: -4.403035640716553
    3. '<|end|>' → logprob: -5.653035640716553
    4. ' for' → logprob: -5.778035640716553
    5. '):
' → logprob: -6.403035640716553
    6. '+' → logprob: -6.403035640716553
    7. '   ' → logprob: -6.653035640716553
    8. '-' → logprob: -6.903035640716553
    9. ',' → logprob: -6.903035640716553
    10. ':' → logprob: -7.153035640716553

Token 62: ' a' (ID: 261)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.45478785037994385
    2. 'for' → logprob: -1.3297878503799438
    3. '       ' → logprob: -2.3297877311706543
    4. '   ' → logprob: -5.704787731170654
    5. '	for' → logprob: -9.579788208007812
    6. 'b' → logprob: -9.954788208007812
    7. '<|end|>' → logprob: -10.329788208007812
    8. ' ' → logprob: -11.079788208007812
    9. '```' → logprob: -11.579788208007812
    10. '           ' → logprob: -11.579788208007812

Token 63: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004791704413946718
    2. '.pop' → logprob: -8.750478744506836
    3. '.sort' → logprob: -9.500478744506836
    4. '.remove' → logprob: -9.750478744506836
    5. '.append' → logprob: -10.500478744506836
    6. '[' → logprob: -10.625478744506836
    7. '][' → logprob: -10.875478744506836
    8. ')[' → logprob: -11.250478744506836
    9. '.index' → logprob: -11.375478744506836
    10. '[a' → logprob: -11.500478744506836

Token 64: ']-' (ID: 27107)
  Prédit: ']+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.83688884973526
    2. ']' → logprob: -1.5868887901306152
    3. ']+' → logprob: -2.0868887901306152
    4. '])' → logprob: -2.0868887901306152
    5. ']-' → logprob: -2.7118887901306152
    6. ']=' → logprob: -3.9618887901306152
    7. '])-' → logprob: -4.711888790130615
    8. ')' → logprob: -5.211888790130615
    9. '])+' → logprob: -5.336888790130615
    10. ']<' → logprob: -6.211888790130615

Token 65: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5212970972061157
    2. 'i' → logprob: -1.1462970972061157
    3. '=i' → logprob: -3.021296977996826
    4. ' i' → logprob: -3.271296977996826
    5. '1' → logprob: -7.396296977996826
    6. '<|end|>' → logprob: -7.521296977996826
    7. ' ' → logprob: -9.021297454833984
    8. 'b' → logprob: -9.271297454833984
    9. 's' → logprob: -9.771297454833984
    10. '	i' → logprob: -9.896297454833984

Token 66: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0003815756645053625
    2. ' i' → logprob: -8.250381469726562
    3. '1' → logprob: -9.250381469726562
    4. '	i' → logprob: -11.500381469726562
    5. '   ' → logprob: -12.500381469726562
    6. '<|end|>' → logprob: -12.750381469726562
    7. '0' → logprob: -13.250381469726562
    8. ' ' → logprob: -13.625381469726562
    9. '<|end|>' → logprob: -14.250381469726562
    10. '2' → logprob: -14.375381469726562

Token 67: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.4600445330142975
    2. 'for' → logprob: -1.835044503211975
    3. ' for' → logprob: -2.4600446224212646
    4. ' b' → logprob: -2.8350446224212646
    5. '       ' → logprob: -3.0850446224212646
    6. '<|end|>' → logprob: -4.5850443840026855
    7. '   ' → logprob: -5.2100443840026855
    8. ' ' → logprob: -5.8350443840026855
    9. '1' → logprob: -9.085044860839844
    10. '    ' → logprob: -9.085044860839844

Token 70: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.4868770196917467e-05
    2. '[' → logprob: -11.500024795532227
    3. '<|end|>' → logprob: -11.625024795532227
    4. 'i' → logprob: -12.375024795532227
    5. ' i' → logprob: -15.125024795532227
    6. '[I' → logprob: -15.500024795532227
    7. '][' → logprob: -15.625024795532227
    8. ')[' → logprob: -15.625024795532227
    9. '(i' → logprob: -16.000024795532227
    10. '<|end|>' → logprob: -16.125024795532227

Token 71: ']+=' (ID: 123635)
  Prédit: ']+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.20991425216197968
    2. ')+' → logprob: -1.959914207458496
    3. '+=' → logprob: -3.334914207458496
    4. ')' → logprob: -4.584914207458496
    5. '+' → logprob: -6.709914207458496
    6. '+i' → logprob: -7.584914207458496
    7. ']+' → logprob: -8.084914207458496
    8. '[i' → logprob: -8.959914207458496
    9. '<|end|>' → logprob: -9.084914207458496
    10. '+)' → logprob: -9.209914207458496

Token 72: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.782141569303349e-05
    2. ' i' → logprob: -9.25009822845459
    3. '1' → logprob: -13.75009822845459
    4. '<|end|>' → logprob: -14.62509822845459
    5. ' ' → logprob: -16.625097274780273
    6. '	i' → logprob: -17.250097274780273
    7. '<|end|>' → logprob: -17.750097274780273
    8. '[i' → logprob: -17.750097274780273
    9. '0' → logprob: -19.000097274780273
    10. '(i' → logprob: -19.500097274780273

Token 73: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2700922191143036
    2. '<|end|>' → logprob: -2.145092248916626
    3. '
' → logprob: -3.145092248916626
    4. ' for' → logprob: -3.520092248916626
    5. 'for' → logprob: -4.020092010498047
    6. ')' → logprob: -4.020092010498047
    7. '       ' → logprob: -5.270092010498047
    8. ',' → logprob: -6.270092010498047
    9. ' ' → logprob: -6.520092010498047
    10. '```' → logprob: -7.520092010498047

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10584378987550735
    2. ' for' → logprob: -2.7308437824249268
    3. '<|end|>' → logprob: -4.105844020843506
    4. '
' → logprob: -4.605844020843506
    5. 'for' → logprob: -5.355844020843506
    6. ')' → logprob: -6.605844020843506
    7. '```' → logprob: -7.105844020843506
    8. '       ' → logprob: -7.480844020843506
    9. ' ' → logprob: -8.105843544006348
    10. ',' → logprob: -8.230843544006348

Token 75: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033418599516153336
    2. '<|end|>' → logprob: -3.908418655395508
    3. ' for' → logprob: -4.783418655395508
    4. '       ' → logprob: -6.783418655395508
    5. ')' → logprob: -7.158418655395508
    6. ' ' → logprob: -7.283418655395508
    7. 'for' (adapté à ' for') → logprob: -7.408418655395508
    8. ',' → logprob: -8.033418655395508
    9. '```' → logprob: -8.408418655395508
    10. '  ' → logprob: -9.033418655395508

Token 76: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.182183176279068
    2. 'i' → logprob: -1.8071831464767456
    3. ' ' → logprob: -7.057183265686035
    4. ' j' → logprob: -7.307183265686035
    5. 'j' → logprob: -7.682183265686035
    6. ' x' → logprob: -9.057183265686035
    7. 'x' → logprob: -9.057183265686035
    8. '1' → logprob: -10.557183265686035
    9. '(i' → logprob: -10.807183265686035
    10. '	i' → logprob: -10.932183265686035

Token 77: ',j' (ID: 22712)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003878577146679163
    2. 'in' → logprob: -5.878878593444824
    3. ' ' → logprob: -6.878878593444824
    4. 'range' → logprob: -11.003878593444824
    5. '  ' → logprob: -12.128878593444824
    6. '<|end|>' → logprob: -12.503878593444824
    7. ' range' → logprob: -12.628878593444824
    8. '   ' → logprob: -12.878878593444824
    9. ',' → logprob: -13.128878593444824
    10. '1' → logprob: -13.378878593444824

Token 78: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14313891530036926
    2. 'in' → logprob: -2.018138885498047
    3. ' ' → logprob: -8.018138885498047
    4. ',' → logprob: -9.768138885498047
    5. 'n' → logprob: -10.018138885498047
    6. '  ' → logprob: -11.268138885498047
    7. '   ' → logprob: -11.768138885498047
    8. '1' → logprob: -13.268138885498047
    9. ',n' → logprob: -13.393138885498047
    10. '    ' → logprob: -13.643138885498047

Token 79: ' enumerate' (ID: 29671)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3325648903846741
    2. ' permutations' → logprob: -1.3325648307800293
    3. ' zip' → logprob: -4.957564830780029
    4. 'range' → logprob: -5.082564830780029
    5. ' enumerate' → logprob: -5.832564830780029
    6. ' combinations' → logprob: -6.832564830780029
    7. 'enumer' → logprob: -7.207564830780029
    8. ' list' → logprob: -7.957564830780029
    9. 'per' → logprob: -8.582565307617188
    10. '[(' → logprob: -9.082565307617188

Token 80: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.05481604114174843
    2. '(s' → logprob: -3.8048160076141357
    3. '(range' → logprob: -3.8048160076141357
    4. '(b' → logprob: -4.804816246032715
    5. '(list' → logprob: -8.429816246032715
    6. '(l' → logprob: -9.054816246032715
    7. '(sorted' → logprob: -9.554816246032715
    8. 'a' → logprob: -9.804816246032715
    9. '(q' → logprob: -9.929816246032715
    10. 'range' → logprob: -10.679816246032715

Token 81: '[:-' (ID: 63556)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2539534568786621
    2. '):' → logprob: -1.503953456878662
    3. '[:-' → logprob: -6.753953456878662
    4. '):
' → logprob: -8.50395393371582
    5. '[:' → logprob: -8.87895393371582
    6. ':' → logprob: -8.87895393371582
    7. '):

' → logprob: -9.25395393371582
    8. '[' → logprob: -9.25395393371582
    9. ')' → logprob: -10.37895393371582
    10. '   ' → logprob: -10.50395393371582

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.875035285949707
    3. '-' → logprob: -12.125035285949707
    4. '])' → logprob: -12.625035285949707
    5. '2' → logprob: -13.187535285949707
    6. '１' → logprob: -13.750035285949707
    7. '   ' → logprob: -13.875035285949707
    8. '
' → logprob: -14.875035285949707
    9. '  ' → logprob: -15.187535285949707
    10. '```' → logprob: -15.250035285949707

Token 83: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.530942976474762
    2. ']):
' → logprob: -0.905942976474762
    3. ']' → logprob: -5.155942916870117
    4. '])' → logprob: -7.155942916870117
    5. '']):
' → logprob: -7.530942916870117
    6. '):
' → logprob: -8.780942916870117
    7. ':' → logprob: -9.280942916870117
    8. ' ]' → logprob: -9.405942916870117
    9. ',' → logprob: -9.655942916870117
    10. '):' → logprob: -9.655942916870117

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13484515249729156
    2. '   ' → logprob: -2.63484525680542
    3. '<|end|>' → logprob: -3.50984525680542
    4. ' for' → logprob: -4.25984525680542
    5. ':' → logprob: -5.63484525680542
    6. ',' → logprob: -6.00984525680542
    7. ' and' → logprob: -6.88484525680542
    8. ' ' → logprob: -7.13484525680542
    9. '<|end|>' → logprob: -7.63484525680542
    10. ' if' → logprob: -7.75984525680542

Token 85: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2743729054927826
    2. '   ' → logprob: -2.0243728160858154
    3. '       ' → logprob: -2.3993728160858154
    4. 'for' → logprob: -4.5243730545043945
    5. ' if' → logprob: -5.2743730545043945
    6. ' ' → logprob: -7.8993730545043945
    7. 'if' (adapté à ' if') → logprob: -8.274373054504395
    8. '	for' → logprob: -8.774373054504395
    9. '<|end|>' → logprob: -9.149373054504395
    10. '    ' → logprob: -9.399373054504395

Token 86: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5877012014389038
    2. 'a' → logprob: -1.0877012014389038
    3. ' j' → logprob: -2.5877013206481934
    4. ' a' → logprob: -3.4627013206481934
    5. ' ' → logprob: -7.462701320648193
    6. 'b' → logprob: -9.837700843811035
    7. '   ' → logprob: -9.900200843811035
    8. 'i' → logprob: -9.962700843811035
    9. '	j' → logprob: -10.587700843811035
    10. '```' → logprob: -11.275200843811035

Token 87: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.34932267665863037
    2. ' in' → logprob: -1.2243226766586304
    3. '==' → logprob: -7.47432279586792
    4. ' ' → logprob: -8.724322319030762
    5. 'n' → logprob: -10.849322319030762
    6. '>' → logprob: -10.974322319030762
    7. '  ' → logprob: -11.224322319030762
    8. '	in' → logprob: -11.599322319030762
    9. ' ==' → logprob: -11.599322319030762
    10. '=' → logprob: -12.099322319030762

Token 88: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0021860685665160418
    2. ' a' → logprob: -6.127186298370361
    3. '   ' → logprob: -15.002185821533203
    4. '>a' → logprob: -15.502185821533203
    5. '#a' → logprob: -16.002185821533203
    6. ' ' → logprob: -16.002185821533203
    7. '	a' → logprob: -16.127185821533203
    8. 'а' → logprob: -17.252185821533203
    9. ',a' → logprob: -17.627185821533203
    10. '_a' → logprob: -17.752185821533203

Token 89: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.743758760625497e-05
    2. '[' → logprob: -9.625077247619629
    3. '[:' → logprob: -12.125077247619629
    4. '[(' → logprob: -13.000077247619629
    5. ' [' → logprob: -13.125077247619629
    6. '[++' → logprob: -14.875077247619629
    7. '[a' → logprob: -15.000077247619629
    8. '(i' → logprob: -15.250077247619629
    9. '[
' → logprob: -15.875077247619629
    10. '   ' → logprob: -16.000078201293945

Token 90: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00027063372544944286
    2. ' +' → logprob: -8.75027084350586
    3. '1' → logprob: -9.12527084350586
    4. '[' → logprob: -13.62527084350586
    5. '+:' → logprob: -14.87527084350586
    6. '+]' → logprob: -15.00027084350586
    7. '+
' → logprob: -15.62527084350586
    8. ' ' → logprob: -15.62527084350586
    9. '+i' → logprob: -16.00027084350586
    10. '＋' → logprob: -16.00027084350586

Token 91: '1' (ID: 16)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010649122297763824
    2. ']:' → logprob: -5.01064920425415
    3. '+:' → logprob: -6.01064920425415
    4. '>:' → logprob: -7.38564920425415
    5. ':]' → logprob: -7.63564920425415
    6. '+' → logprob: -9.010648727416992
    7. '}:' → logprob: -9.885648727416992
    8. ' :' → logprob: -10.385648727416992
    9. '']:' → logprob: -10.510648727416992
    10. ':],' → logprob: -10.635648727416992

Token 92: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011815387988463044
    2. ']:' → logprob: -7.001181602478027
    3. '+:' → logprob: -9.126181602478027
    4. ' :' → logprob: -9.751181602478027
    5. '>:' → logprob: -10.126181602478027
    6. ':]' → logprob: -11.001181602478027
    7. '...' → logprob: -11.376181602478027
    8. '+' → logprob: -12.126181602478027
    9. '']:' → logprob: -12.251181602478027
    10. '_:' → logprob: -12.626181602478027

Token 93: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.2672986090183258
    2. ']:
' → logprob: -1.5172985792160034
    3. ':' → logprob: -4.642298698425293
    4. ']' → logprob: -6.267298698425293
    5. '       ' → logprob: -7.017298698425293
    6. ']:
' → logprob: -7.017298698425293
    7. ' ]' → logprob: -7.392298698425293
    8. ']:

' → logprob: -8.017298698425293
    9. ']>' → logprob: -8.642298698425293
    10. '   ' → logprob: -8.767298698425293

Token 94: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003496723249554634
    2. ' return' → logprob: -6.0034966468811035
    3. 'return' → logprob: -7.0034966468811035
    4. ':return' → logprob: -10.128497123718262
    5. '          ' → logprob: -10.628497123718262
    6. '               ' → logprob: -11.003497123718262
    7. ',' → logprob: -12.378497123718262
    8. '{return' → logprob: -12.628497123718262
    9. 'continue' → logprob: -12.878497123718262
    10. ' continue' → logprob: -13.003497123718262

Token 95: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3999727964401245
    2. ' return' → logprob: -1.1499727964401245
    3. '           ' → logprob: -4.774972915649414
    4. '
' → logprob: -6.149972915649414
    5. '	return' → logprob: -7.399972915649414
    6. '   ' → logprob: -7.524972915649414
    7. '       ' → logprob: -7.649972915649414
    8. '               ' → logprob: -8.399972915649414
    9. ':return' → logprob: -8.649972915649414
    10. ' ' → logprob: -9.024972915649414

Token 96: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.03813306614756584
    2. ' False' → logprob: -3.288133144378662
    3. '0' → logprob: -9.788132667541504
    4. 'True' → logprob: -11.163132667541504
    5. 'None' → logprob: -11.413132667541504
    6. ' ' → logprob: -11.913132667541504
    7. ' True' → logprob: -13.538132667541504
    8. ' None' → logprob: -13.788132667541504
    9. '(False' → logprob: -14.663132667541504
    10. 'F' → logprob: -15.288132667541504

Token 97: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026408977806568146
    2. '       ' → logprob: -3.6514089107513428
    3. '<|end|>' → logprob: -10.026409149169922
    4. ',' → logprob: -10.651409149169922
    5. '           ' → logprob: -11.651409149169922
    6. ' ' → logprob: -12.151409149169922
    7. ')' → logprob: -12.276409149169922
    8. '    ' → logprob: -12.651409149169922
    9. ' for' → logprob: -13.151409149169922
    10. '     ' → logprob: -13.276409149169922

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003919463779311627
    2. '       ' → logprob: -8.250391960144043
    3. ' for' → logprob: -9.375391960144043
    4. '<|end|>' → logprob: -11.125391960144043
    5. 'for' → logprob: -11.125391960144043
    6. ',' → logprob: -12.375391960144043
    7. ' ' → logprob: -13.250391960144043
    8. '    ' → logprob: -13.375391960144043
    9. ')' → logprob: -13.500391960144043
    10. '	for' → logprob: -13.750391960144043

Token 99: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009791743941605091
    2. ' for' → logprob: -5.134791851043701
    3. 'for' (adapté à ' for') → logprob: -5.634791851043701
    4. ' ' → logprob: -8.384791374206543
    5. '  ' → logprob: -10.509791374206543
    6. '       ' → logprob: -11.134791374206543
    7. '
' → logprob: -11.884791374206543
    8. '<|end|>' → logprob: -13.009791374206543
    9. '```' → logprob: -13.759791374206543
    10. '    ' → logprob: -14.009791374206543

Token 100: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.32220354676246643
    2. 'i' → logprob: -1.322203516960144
    3. ' j' → logprob: -5.322203636169434
    4. 'j' → logprob: -5.697203636169434
    5. 'k' → logprob: -8.447203636169434
    6. ' k' → logprob: -8.822203636169434
    7. ' ' → logprob: -9.322203636169434
    8. '  ' → logprob: -9.947203636169434
    9. '   ' → logprob: -9.947203636169434
    10. 'index' → logprob: -10.822203636169434

Token 101: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.0009195583988912404
    2. ',' → logprob: -7.125919342041016
    3. ' ,' → logprob: -9.250919342041016
    4. ',k' → logprob: -11.750919342041016
    5. ',n' → logprob: -13.250919342041016
    6. ',s' → logprob: -13.750919342041016
    7. ',index' → logprob: -13.750919342041016
    8. ',b' → logprob: -13.875919342041016
    9. ',d' → logprob: -14.000919342041016
    10. ',(' → logprob: -14.125919342041016

Token 102: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043602392077445984
    2. 'in' → logprob: -3.168602466583252
    3. ',' → logprob: -7.543602466583252
    4. 'enumer' → logprob: -10.043601989746094
    5. ',in' → logprob: -11.293601989746094
    6. '```' → logprob: -12.293601989746094
    7. ' ,' → logprob: -12.793601989746094
    8. ' ' → logprob: -12.918601989746094
    9. '   ' → logprob: -13.793601989746094
    10. '  ' → logprob: -14.293601989746094

Token 103: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0031781906727701426
    2. ' enumerate' → logprob: -5.753178119659424
    3. 'list' → logprob: -14.878178596496582
    4. 'b' → logprob: -16.878177642822266
    5. '(list' → logprob: -17.628177642822266
    6. 'range' → logprob: -17.628177642822266
    7. '.enumer' → logprob: -17.878177642822266
    8. '(en' → logprob: -18.253177642822266
    9. 'enum' → logprob: -18.378177642822266
    10. ' list' → logprob: -18.628177642822266

Token 104: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -6.988221684878226e-06
    2. 'b' → logprob: -12.125006675720215
    3. ' (' → logprob: -13.625006675720215
    4. ' b' → logprob: -15.625006675720215
    5. '(B' → logprob: -17.75000762939453
    6. '(a' → logprob: -17.87500762939453
    7. '	b' → logprob: -19.37500762939453
    8. '(' → logprob: -19.62500762939453
    9. '(s' → logprob: -19.75000762939453
    10. ' ' → logprob: -19.87500762939453

Token 105: '[:-' (ID: 63556)
  Prédit: '[:-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -1.1472419600977446e-06
    2. '[:' → logprob: -13.875000953674316
    3. '[' → logprob: -16.625001907348633
    4. '[i' → logprob: -17.500001907348633
    5. ')' → logprob: -20.500001907348633
    6. '```' → logprob: -21.375001907348633
    7. '   ' → logprob: -22.000001907348633
    8. '[j' → logprob: -22.000001907348633
    9. 'a' → logprob: -22.500001907348633
    10. ':-' → logprob: -22.875001907348633

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.088138227118179e-05
    2. '-' → logprob: -9.625070571899414
    3. ' ' → logprob: -12.875070571899414
    4. '+' → logprob: -14.500070571899414
    5. '   ' → logprob: -14.500070571899414
    6. '2' → logprob: -15.125070571899414
    7. '```' → logprob: -15.500070571899414
    8. '(' → logprob: -15.937570571899414
    9. 'a' → logprob: -16.375070571899414
    10. ' -' → logprob: -16.375070571899414

Token 107: ']):
' (ID: 51989)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.025732558220624924
    2. ']):
' → logprob: -3.7757325172424316
    3. '):
' → logprob: -6.650732517242432
    4. '):' → logprob: -7.900732517242432
    5. ']):' → logprob: -8.52573299407959
    6. '       ' → logprob: -8.77573299407959
    7. ''):
' → logprob: -9.02573299407959
    8. ']:
' → logprob: -9.27573299407959
    9. ':' → logprob: -9.27573299407959
    10. '   ' → logprob: -10.27573299407959

Token 108: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000217006730963476
    2. ' if' → logprob: -8.87521743774414
    3. 'if' → logprob: -10.00021743774414
    4. '   ' → logprob: -10.62521743774414
    5. '           ' → logprob: -12.75021743774414
    6. '      ' → logprob: -13.25021743774414
    7. 'def' → logprob: -14.00021743774414
    8. '    ' → logprob: -14.50021743774414
    9. '     ' → logprob: -14.62521743774414
    10. ' ' → logprob: -14.87521743774414

Token 109: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4351522922515869
    2. 'if' (adapté à ' if') → logprob: -1.185152292251587
    3. '       ' → logprob: -3.060152292251587
    4. '   ' → logprob: -8.685152053833008
    5. '           ' → logprob: -9.935152053833008
    6. '    ' → logprob: -10.935152053833008
    7. ' ' → logprob: -11.935152053833008
    8. '        ' → logprob: -12.810152053833008
    9. '      ' → logprob: -13.060152053833008
    10. '	if' → logprob: -13.185152053833008

Token 110: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.02054247073829174
    2. 'j' → logprob: -3.8955423831939697
    3. ' ' → logprob: -15.27054214477539
    4. '(j' → logprob: -16.14554214477539
    5. '   ' → logprob: -16.64554214477539
    6. '[j' → logprob: -17.14554214477539
    7. '    ' → logprob: -17.39554214477539
    8. '	j' → logprob: -17.83304214477539
    9. ' ' → logprob: -18.20804214477539
    10. '  ' → logprob: -18.39554214477539

Token 111: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048590321093797684
    2. 'in' → logprob: -3.0485904216766357
    3. ' ' → logprob: -13.423590660095215
    4. '   ' → logprob: -14.048590660095215
    5. '    ' → logprob: -15.423590660095215
    6. '  ' → logprob: -15.923590660095215
    7. 'In' → logprob: -17.2985897064209
    8. '...' → logprob: -17.2985897064209
    9. '	in' → logprob: -17.2985897064209
    10. '
' → logprob: -17.4235897064209

Token 112: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10020828247070312
    2. ' b' → logprob: -2.350208282470703
    3. ' ' → logprob: -13.975208282470703
    4. '   ' → logprob: -15.350208282470703
    5. '<|end|>' → logprob: -16.225208282470703
    6. ')b' → logprob: -16.350208282470703
    7. '	b' → logprob: -16.725208282470703
    8. '(b' → logprob: -16.850208282470703
    9. '>b' → logprob: -16.975208282470703
    10. 'a' → logprob: -17.350208282470703

Token 113: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.319370302458992e-06
    2. '(i' → logprob: -12.500005722045898
    3. ' [' → logprob: -13.875005722045898
    4. 'i' → logprob: -15.625005722045898
    5. '   ' → logprob: -16.0000057220459
    6. '[(' → logprob: -16.1250057220459
    7. '[' → logprob: -16.3750057220459
    8. '{i' → logprob: -17.3750057220459
    9. '```' → logprob: -18.0000057220459
    10. 's' → logprob: -18.2500057220459

Token 114: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.392202976712724e-06
    2. ' +' → logprob: -12.625006675720215
    3. '1' → logprob: -12.750006675720215
    4. '[' → logprob: -16.5000057220459
    5. '+
' → logprob: -18.8750057220459
    6. '   ' → logprob: -19.5000057220459
    7. '＋' → logprob: -19.5000057220459
    8. '+]' → logprob: -20.0000057220459
    9. '()+' → logprob: -20.3750057220459
    10. '...' → logprob: -20.3750057220459

Token 115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.250006675720215
    3. '   ' → logprob: -14.500006675720215
    4. '+' → logprob: -14.875006675720215
    5. '```' → logprob: -15.250006675720215
    6. '...' → logprob: -15.687506675720215
    7. 'range' → logprob: -15.812506675720215
    8. '2' → logprob: -16.5625057220459
    9. '  ' → logprob: -17.0000057220459
    10. ':' → logprob: -17.6875057220459

Token 116: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00017112065688706934
    2. ']:' → logprob: -9.625170707702637
    3. ':]' → logprob: -9.750170707702637
    4. '1' → logprob: -10.875170707702637
    5. '[' → logprob: -11.625170707702637
    6. ' :' → logprob: -12.000170707702637
    7. '+' → logprob: -12.125170707702637
    8. '   ' → logprob: -12.875170707702637
    9. '+:' → logprob: -14.125170707702637
    10. '']:' → logprob: -14.375170707702637

Token 117: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.0062085469253361225
    2. ']:' → logprob: -5.131208419799805
    3. ':' → logprob: -9.256208419799805
    4. '):
' → logprob: -10.131208419799805
    5. '       ' → logprob: -10.256208419799805
    6. ']:

' → logprob: -10.631208419799805
    7. ':
' → logprob: -10.756208419799805
    8. '   ' → logprob: -11.006208419799805
    9. ']:
' → logprob: -11.006208419799805
    10. '           ' → logprob: -11.256208419799805

Token 118: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00023178798437584192
    2. '       ' → logprob: -8.750231742858887
    3. ' return' → logprob: -10.500231742858887
    4. ':
' → logprob: -10.500231742858887
    5. 'return' → logprob: -12.125231742858887
    6. ':' → logprob: -12.500231742858887
    7. ':return' → logprob: -12.750231742858887
    8. '               ' → logprob: -13.250231742858887
    9. '          ' → logprob: -13.750231742858887
    10. '   ' → logprob: -14.250231742858887

Token 119: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5831993222236633
    2. 'return' (adapté à ' return') → logprob: -0.8331993222236633
    3. '       ' → logprob: -5.083199501037598
    4. '           ' → logprob: -7.083199501037598
    5. '               ' → logprob: -8.958199501037598
    6. '   ' → logprob: -10.333199501037598
    7. ' ' → logprob: -11.458199501037598
    8. '	return' → logprob: -11.833199501037598
    9. 'eturn' → logprob: -12.333199501037598
    10. '```' → logprob: -12.583199501037598

Token 120: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.0325924449716695e-05
    2. ' False' → logprob: -11.50001049041748
    3. 'True' → logprob: -16.500009536743164
    4. '(False' → logprob: -19.625009536743164
    5. '=False' → logprob: -24.250009536743164
    6. 'F' → logprob: -25.125009536743164
    7. '_false' → logprob: -25.125009536743164
    8. 'false' → logprob: -26.000009536743164
    9. '.False' → logprob: -26.125009536743164
    10. '   ' → logprob: -26.500009536743164

Token 121: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010151672904612496
    2. 'return' → logprob: -10.000101089477539
    3. ' return' → logprob: -10.500101089477539
    4. '<|end|>' → logprob: -11.000101089477539
    5. '	return' → logprob: -12.625101089477539
    6. '       ' → logprob: -12.750101089477539
    7. '
' → logprob: -13.500101089477539
    8. ',' → logprob: -13.625101089477539
    9. ':return' → logprob: -14.875101089477539
    10. '```' → logprob: -15.000101089477539

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002370329457335174
    2. 'return' → logprob: -8.750237464904785
    3. ' return' → logprob: -9.625237464904785
    4. '
' → logprob: -12.625237464904785
    5. '       ' → logprob: -13.125237464904785
    6. '<|end|>' → logprob: -13.125237464904785
    7. ',' → logprob: -13.375237464904785
    8. '	return' → logprob: -13.375237464904785
    9. ')' → logprob: -14.500237464904785
    10. '    
' → logprob: -15.375237464904785

Token 123: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.077670618891716
    2. 'return' (adapté à ' return') → logprob: -2.8276705741882324
    3. ' return' → logprob: -4.202670574188232
    4. '
' → logprob: -7.952670574188232
    5. ' ' → logprob: -9.20267105102539
    6. '	return' → logprob: -9.70267105102539
    7. '       ' → logprob: -10.82767105102539
    8. '```' → logprob: -10.95267105102539
    9. 'None' → logprob: -11.45267105102539
    10. 'def' → logprob: -11.57767105102539

Token 124: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.5759406089782715
    2. ' True' → logprob: -0.8259406089782715
    3. ' ' → logprob: -13.95094108581543
    4. 'False' → logprob: -15.32594108581543
    5. '(True' → logprob: -16.70094108581543
    6. ' False' → logprob: -17.82594108581543
    7. 'Tr' → logprob: -18.57594108581543
    8. '   ' → logprob: -18.70094108581543
    9. ' ' → logprob: -19.20094108581543
    10. '  ' → logprob: -19.45094108581543

Token 125: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.055636920034885406
    2. ' for' → logprob: -3.4306368827819824
    3. '
' → logprob: -5.055636882781982
    4. '<|end|>' → logprob: -5.055636882781982
    5. 'def' → logprob: -5.930636882781982
    6. 's' → logprob: -6.805636882781982
    7. 'n' → logprob: -7.055636882781982
    8. ')' → logprob: -7.055636882781982
    9. 'if' → logprob: -7.305636882781982
    10. ',' → logprob: -7.680636882781982

Token 126: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1313766986131668
    2. 'res' → logprob: -2.8813767433166504
    3. 'ans' → logprob: -3.6313767433166504
    4. 'r' → logprob: -3.6313767433166504
    5. 'count' → logprob: -5.88137674331665
    6. 'def' → logprob: -6.00637674331665
    7. 'cnt' → logprob: -6.25637674331665
    8. ' for' → logprob: -6.63137674331665
    9. 'if' → logprob: -6.75637674331665
    10. 's' → logprob: -6.75637674331665

Token 127: ' i' (ID: 575)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.2141878753900528
    2. ' p' → logprob: -2.0891878604888916
    3. 's' → logprob: -2.9641878604888916
    4. ' i' → logprob: -5.464188098907471
    5. ' P' → logprob: -5.839188098907471
    6. 'p' → logprob: -6.214188098907471
    7. ' x' → logprob: -6.464188098907471
    8. ' q' → logprob: -7.089188098907471
    9. ' perm' → logprob: -7.214188098907471
    10. ' Q' → logprob: -7.339188098907471

Token 128: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08016052842140198
    2. 'in' → logprob: -2.580160617828369
    3. ' ' → logprob: -7.705160617828369
    4. ' n' → logprob: -8.580160140991211
    5. ' s' → logprob: -9.580160140991211
    6. ' i' → logprob: -9.830160140991211
    7. 's' → logprob: -9.830160140991211
    8. '	in' → logprob: -9.830160140991211
    9. ' q' → logprob: -9.830160140991211
    10. 'n' → logprob: -10.080160140991211

Token 129: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.007899983786046505
    2. 'range' → logprob: -5.507899761199951
    3. ' Q' → logprob: -5.882899761199951
    4. ' range' → logprob: -6.882899761199951
    5. '(Q' → logprob: -14.25790023803711
    6. ' ' → logprob: -14.50790023803711
    7. '   ' → logprob: -14.63290023803711
    8. 'q' → logprob: -15.00790023803711
    9. 'len' → logprob: -16.13290023803711
    10. '  ' → logprob: -16.63290023803711

Token 130: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0036096973344683647
    2. ':
' → logprob: -5.628609657287598
    3. 'if' → logprob: -12.253609657287598
    4. ' if' → logprob: -13.503609657287598
    5. ' :' → logprob: -14.003609657287598
    6. '):' → logprob: -14.003609657287598
    7. ':

' → logprob: -14.503609657287598
    8. '[' → logprob: -15.503609657287598
    9. ':**' → logprob: -15.503609657287598
    10. '：' → logprob: -15.628609657287598

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36574628949165344
    2. ' if' → logprob: -1.240746259689331
    3. '<|end|>' → logprob: -4.49074649810791
    4. ' ' → logprob: -6.11574649810791
    5. '
' → logprob: -7.36574649810791
    6. ',' → logprob: -7.61574649810791
    7. '	if' → logprob: -7.74074649810791
    8. 'if' → logprob: -7.86574649810791
    9. ' for' → logprob: -7.99074649810791
    10. '    
' → logprob: -7.99074649810791

Token 132: ' chk' (ID: 63648)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.01756691001355648
    2. '   ' → logprob: -4.642566680908203
    3. 'if' → logprob: -5.142566680908203
    4. ' for' → logprob: -6.642566680908203
    5. ' ' → logprob: -9.017566680908203
    6. ' s' → logprob: -9.142566680908203
    7. '    ' → logprob: -9.392566680908203
    8. ' r' → logprob: -9.767566680908203
    9. 'for' → logprob: -10.392566680908203
    10. ' c' → logprob: -10.642566680908203

Token 133: '=i' (ID: 48141)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09745407104492188
    2. ' =' → logprob: -3.347454071044922
    3. '=True' → logprob: -3.347454071044922
    4. '(i' → logprob: -4.222454071044922
    5. '=i' → logprob: -6.222454071044922
    6. '=False' → logprob: -6.472454071044922
    7. '(' → logprob: -6.722454071044922
    8. '=len' → logprob: -7.472454071044922
    9. '_' → logprob: -7.847454071044922
    10. '_=' → logprob: -8.097454071044922

Token 134: '
' (ID: 198)
  Prédit: '=True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.5866756439208984
    2. '=' → logprob: -2.0866756439208984
    3. ' =' → logprob: -2.4616756439208984
    4. '   ' → logprob: -3.0866756439208984
    5. '==' → logprob: -3.2116756439208984
    6. '=False' → logprob: -3.5866756439208984
    7. '
' → logprob: -3.9616756439208984
    8. ':
' → logprob: -4.086675643920898
    9. ' if' → logprob: -4.211675643920898
    10. ' ==' → logprob: -4.836675643920898

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005231625400483608
    2. ' if' → logprob: -6.255231857299805
    3. ' for' → logprob: -6.880231857299805
    4. 'if' → logprob: -7.130231857299805
    5. '
' → logprob: -7.505231857299805
    6. 'for' → logprob: -7.630231857299805
    7. '    
' → logprob: -9.130231857299805
    8. ',' → logprob: -10.005231857299805
    9. '<|end|>' → logprob: -10.005231857299805
    10. '	if' → logprob: -10.130231857299805

Token 136: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4812498986721039
    2. 'for' (adapté à ' for') → logprob: -1.4812499284744263
    3. '   ' → logprob: -2.3562498092651367
    4. 'if' → logprob: -3.8562498092651367
    5. ' if' → logprob: -3.9812498092651367
    6. ' ok' → logprob: -4.981249809265137
    7. ' flag' → logprob: -5.606249809265137
    8. 'ok' → logprob: -5.606249809265137
    9. 'flag' → logprob: -5.981249809265137
    10. 'cnt' → logprob: -7.356249809265137

Token 137: ' x' (ID: 1215)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.2049420028924942
    2. 'j' → logprob: -1.704941987991333
    3. ' k' → logprob: -6.829942226409912
    4. 'k' → logprob: -7.329942226409912
    5. 'x' → logprob: -7.329942226409912
    6. ' x' → logprob: -7.329942226409912
    7. ' s' → logprob: -8.954941749572754
    8. ' q' → logprob: -10.204941749572754
    9. ' ' → logprob: -10.329941749572754
    10. '_' → logprob: -10.579941749572754

Token 138: ',y' (ID: 16103)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.036893345415592194
    2. 'in' → logprob: -4.286893367767334
    3. ',' → logprob: -4.786893367767334
    4. ',q' → logprob: -5.286893367767334
    5. 'range' → logprob: -6.411893367767334
    6. ' ' → logprob: -6.536893367767334
    7. 'n' → logprob: -6.661893367767334
    8. ' q' → logprob: -6.661893367767334
    9. ' ,' → logprob: -7.536893367767334
    10. 'q' → logprob: -7.536893367767334

Token 139: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2540276050567627
    2. 'in' → logprob: -1.5040276050567627
    3. '   ' → logprob: -6.254027366638184
    4. '	in' → logprob: -10.504027366638184
    5. '    ' → logprob: -10.754027366638184
    6. ' ' → logprob: -10.754027366638184
    7. ',' → logprob: -10.754027366638184
    8. '_in' → logprob: -11.004027366638184
    9. ',in' → logprob: -11.504027366638184
    10. 'In' → logprob: -11.504027366638184

Token 140: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5485698580741882
    2. ' q' → logprob: -1.048569917678833
    3. ' enumerate' → logprob: -3.798569917678833
    4. ' zip' → logprob: -4.173569679260254
    5. ' range' → logprob: -4.173569679260254
    6. 'range' → logprob: -4.923569679260254
    7. 'zip' → logprob: -4.923569679260254
    8. 'enumer' → logprob: -5.673569679260254
    9. '[q' → logprob: -9.048569679260254
    10. ' ' → logprob: -9.173569679260254

Token 141: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2894611060619354
    2. ':
' → logprob: -1.4144611358642578
    3. '[' → logprob: -5.289461135864258
    4. '   ' → logprob: -6.039461135864258
    5. '[i' → logprob: -7.414461135864258
    6. ':

' → logprob: -9.789461135864258
    7. '):' → logprob: -10.039461135864258
    8. '):
' → logprob: -10.289461135864258
    9. '[::-' → logprob: -10.789461135864258
    10. '[:-' → logprob: -11.039461135864258

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018531967652961612
    2. ' if' → logprob: -6.751852989196777
    3. '   ' → logprob: -8.126852989196777
    4. '<|end|>' → logprob: -9.376852989196777
    5. ',' → logprob: -9.501852989196777
    6. '        
' → logprob: -9.751852989196777
    7. ':
' → logprob: -10.501852989196777
    8. '     ' → logprob: -10.626852989196777
    9. '
' → logprob: -10.876852989196777
    10. ' ' → logprob: -11.001852989196777

Token 143: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5269173383712769
    2. '   ' → logprob: -1.6519173383712769
    3. 'if' (adapté à ' if') → logprob: -1.7769173383712769
    4. '       ' → logprob: -3.0269174575805664
    5. ' ' → logprob: -9.651917457580566
    6. '	if' → logprob: -9.651917457580566
    7. '```' → logprob: -10.276917457580566
    8. '    ' → logprob: -10.651917457580566
    9. '<|end|>' → logprob: -10.901917457580566
    10. '     ' → logprob: -11.276917457580566

Token 144: ' i' (ID: 575)
  Prédit: ' chk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chk' → logprob: -0.2975296974182129
    2. 'chk' → logprob: -2.047529697418213
    3. ' i' → logprob: -2.297529697418213
    4. 'i' → logprob: -4.047529697418213
    5. ' not' → logprob: -5.422529697418213
    6. '   ' → logprob: -5.547529697418213
    7. ' x' → logprob: -7.797529697418213
    8. 'x' → logprob: -8.422529220581055
    9. ' y' → logprob: -8.797529220581055
    10. 'ch' → logprob: -9.235029220581055

Token 145: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.004726195242255926
    2. '[y' → logprob: -5.379726409912109
    3. '[' → logprob: -10.12972640991211
    4. '[i' → logprob: -10.25472640991211
    5. ' [' → logprob: -11.50472640991211
    6. '==' → logprob: -12.12972640991211
    7. '[q' → logprob: -12.37972640991211
    8. '(x' → logprob: -12.62972640991211
    9. '[j' → logprob: -13.00472640991211
    10. '   ' → logprob: -14.00472640991211

Token 146: ']!=' (ID: 85780)
  Prédit: ']!='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']!=' → logprob: -0.2935349941253662
    2. ']' → logprob: -1.7935349941253662
    3. '[y' → logprob: -2.918534994125366
    4. ']==' → logprob: -3.418534994125366
    5. '[' → logprob: -7.668535232543945
    6. '!=' → logprob: -7.918535232543945
    7. '[x' → logprob: -9.168535232543945
    8. '][' → logprob: -9.418535232543945
    9. ']>=' → logprob: -9.543535232543945
    10. ')!=' → logprob: -10.293535232543945

Token 147: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -5.1689596148207784e-05
    2. ' y' → logprob: -9.875051498413086
    3. '   ' → logprob: -16.750051498413086
    4. '	y' → logprob: -17.125051498413086
    5. ' ' → logprob: -17.375051498413086
    6. 'y's' → logprob: -17.875051498413086
    7. ''y' → logprob: -18.125051498413086
    8. '  ' → logprob: -18.250051498413086
    9. '[y' → logprob: -18.500051498413086
    10. '0' → logprob: -18.500051498413086

Token 148: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030988704413175583
    2. ':
' → logprob: -3.5309886932373047
    3. ':return' → logprob: -7.405988693237305
    4. '<|end|>' → logprob: -8.155988693237305
    5. '):' → logprob: -8.780988693237305
    6. '       ' → logprob: -10.280988693237305
    7. '):
' → logprob: -10.530988693237305
    8. ')' → logprob: -10.655988693237305
    9. ',' → logprob: -10.905988693237305
    10. '           ' → logprob: -11.155988693237305

Token 149: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8390184640884399
    2. ':
' → logprob: -1.33901846408844
    3. '           ' → logprob: -1.58901846408844
    4. '       ' → logprob: -2.8390183448791504
    5. ':return' → logprob: -3.4640183448791504
    6. ' continue' → logprob: -5.71401834487915
    7. ',' → logprob: -6.33901834487915
    8. ' or' → logprob: -6.46401834487915
    9. 'continue' → logprob: -6.58901834487915
    10. '<|end|>' → logprob: -7.21401834487915

Token 150: ' chk' (ID: 63648)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.06430826336145401
    2. ' break' → logprob: -2.8143081665039062
    3. '           ' → logprob: -6.064308166503906
    4. '	break' → logprob: -11.689308166503906
    5. '               ' → logprob: -13.189308166503906
    6. '       ' → logprob: -13.314308166503906
    7. '   ' → logprob: -13.564308166503906
    8. '_break' → logprob: -16.314308166503906
    9. '```' → logprob: -16.689308166503906
    10. ' ' → logprob: -17.689308166503906

Token 151: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6933591365814209
    2. '=False' → logprob: -0.6933591365814209
    3. ' =' → logprob: -8.943359375
    4. '=None' → logprob: -9.943359375
    5. '=True' → logprob: -11.193359375
    6. '=false' → logprob: -11.443359375
    7. 'False' → logprob: -12.068359375
    8. ' False' → logprob: -13.693359375
    9. 'break' → logprob: -14.318359375
    10. '=
' → logprob: -14.943359375

Token 152: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.157039049663581e-05
    2. '               ' → logprob: -11.125051498413086
    3. '<|end|>' → logprob: -11.375051498413086
    4. '       ' → logprob: -11.875051498413086
    5. '          ' → logprob: -12.500051498413086
    6. '		' → logprob: -13.125051498413086
    7. '   ' → logprob: -13.125051498413086
    8. ' break' → logprob: -13.250051498413086
    9. 'break' → logprob: -13.625051498413086
    10. '            
' → logprob: -13.750051498413086

Token 153: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.01858064904808998
    2. '           ' → logprob: -4.018580436706543
    3. ' break' → logprob: -7.768580436706543
    4. '       ' → logprob: -12.018580436706543
    5. '	break' → logprob: -14.268580436706543
    6. '   ' → logprob: -14.268580436706543
    7. '               ' → logprob: -14.518580436706543
    8. 'breaking' → logprob: -17.26858139038086
    9. '_break' → logprob: -17.26858139038086
    10. 'Break' → logprob: -17.76858139038086

Token 154: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00025800178991630673
    2. ' if' → logprob: -8.875258445739746
    3. 'if' → logprob: -9.500258445739746
    4. 'else' → logprob: -10.875258445739746
    5. '<|end|>' → logprob: -11.625258445739746
    6. ' else' → logprob: -12.250258445739746
    7. '       ' → logprob: -12.500258445739746
    8. '    
' → logprob: -13.250258445739746
    9. '  ' → logprob: -13.750258445739746
    10. ' ' → logprob: -14.375258445739746

Token 155: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07344866544008255
    2. 'else' → logprob: -3.698448657989502
    3. ' if' → logprob: -3.948448657989502
    4. 'if' → logprob: -4.198448657989502
    5. ' else' → logprob: -4.448448657989502
    6. ' ' → logprob: -10.69844913482666
    7. '  ' → logprob: -11.69844913482666
    8. '    
' → logprob: -12.19844913482666
    9. '       ' → logprob: -12.32344913482666
    10. '```' → logprob: -13.07344913482666

Token 156: ' if' (ID: 538)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.0107734203338623
    2. '   ' → logprob: -1.1357734203338623
    3. 'if' (adapté à ' if') → logprob: -1.3857734203338623
    4. ' if' → logprob: -3.2607734203338623
    5. ' else' → logprob: -3.6357734203338623
    6. ' ' → logprob: -11.385773658752441
    7. 'continue' → logprob: -12.635773658752441
    8. '  ' → logprob: -12.760773658752441
    9. 'If' → logprob: -13.260773658752441
    10. '       ' → logprob: -13.260773658752441

Token 157: ' chk' (ID: 63648)
  Prédit: ' chk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chk' → logprob: -0.67024827003479
    2. ' not' → logprob: -1.67024827003479
    3. ' len' → logprob: -1.67024827003479
    4. 'chk' → logprob: -2.29524827003479
    5. 'len' → logprob: -4.920248031616211
    6. 'not' → logprob: -5.920248031616211
    7. ' ' → logprob: -6.920248031616211
    8. '   ' → logprob: -9.670248031616211
    9. '  ' → logprob: -10.607748031616211
    10. 'ch' → logprob: -10.920248031616211

Token 158: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0021333713084459305
    2. '==' → logprob: -6.252133369445801
    3. ':
' → logprob: -9.5021333694458
    4. '=[]' → logprob: -10.7521333694458
    5. '[:]' → logprob: -10.7521333694458
    6. '!=' → logprob: -10.8771333694458
    7. '>:' → logprob: -11.1271333694458
    8. ' :' → logprob: -11.5021333694458
    9. ' ==' → logprob: -11.8771333694458
    10. '():' → logprob: -12.5021333694458

Token 159: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03073379211127758
    2. '   ' → logprob: -3.905733823776245
    3. ' print' → logprob: -4.905733585357666
    4. 'print' → logprob: -6.030733585357666
    5. ' if' → logprob: -8.405734062194824
    6. ' ' → logprob: -10.405734062194824
    7. 'if' → logprob: -10.530734062194824
    8. ' for' → logprob: -10.780734062194824
    9. ' break' → logprob: -11.905734062194824
    10. '    ' → logprob: -12.155734062194824

Token 160: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1864503026008606
    2. ' print' → logprob: -1.9364502429962158
    3. ' for' → logprob: -4.561450481414795
    4. 'for' → logprob: -4.561450481414795
    5. '       ' → logprob: -5.561450481414795
    6. '   ' → logprob: -7.436450481414795
    7. 'if' (adapté à ' if') → logprob: -9.061450004577637
    8. ' if' → logprob: -9.186450004577637
    9. 'break' → logprob: -9.311450004577637
    10. 'import' → logprob: -9.686450004577637

Token 161: ' OK' (ID: 11339)
  Prédit: ' OK'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' OK' → logprob: -0.029799317941069603
    2. 'OK' → logprob: -3.529799222946167
    3. ' ok' → logprob: -10.529799461364746
    4. ' len' → logprob: -11.779799461364746
    5. '_OK' → logprob: -12.654799461364746
    6. ' not' → logprob: -12.779799461364746
    7. 'len' → logprob: -13.279799461364746
    8. '   ' → logprob: -13.279799461364746
    9. 'ok' → logprob: -13.654799461364746
    10. ' Ok' → logprob: -13.779799461364746

Token 162: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.002540109446272254
    2. '(ch' → logprob: -6.002540111541748
    3. ' (' → logprob: -9.75253963470459
    4. '(' → logprob: -12.62753963470459
    5. '(check' → logprob: -13.00253963470459
    6. ' i' → logprob: -15.75253963470459
    7. '(chr' → logprob: -16.252540588378906
    8. '   ' → logprob: -16.502540588378906
    9. '(
' → logprob: -16.502540588378906
    10. '((' → logprob: -17.002540588378906

Token 163: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16027621924877167
    2. '):
' → logprob: -1.910276174545288
    3. ')' → logprob: -10.910276412963867
    4. ')==' → logprob: -11.660276412963867
    5. '):
' → logprob: -11.785276412963867
    6. '   ' → logprob: -12.035276412963867
    7. '):

' → logprob: -12.535276412963867
    8. ':' → logprob: -12.785276412963867
    9. ' ):' → logprob: -12.785276412963867
    10. '       ' → logprob: -14.910276412963867

Token 164: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1854604035615921
    2. 'print' → logprob: -2.310460329055786
    3. ' print' → logprob: -2.810460329055786
    4. '       ' → logprob: -4.685460567474365
    5. '
' → logprob: -7.560460567474365
    6. '```' → logprob: -9.935460090637207
    7. '   ' → logprob: -10.935460090637207
    8. '        
' → logprob: -11.435460090637207
    9. '            
' → logprob: -11.435460090637207
    10. '               ' → logprob: -11.560460090637207

Token 165: ' A' (ID: 355)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.026274407282471657
    2. ' print' → logprob: -3.9012744426727295
    3. '           ' → logprob: -5.27627420425415
    4. 'for' → logprob: -7.90127420425415
    5. ' for' → logprob: -8.526274681091309
    6. '       ' → logprob: -11.151274681091309
    7. '               ' → logprob: -12.026274681091309
    8. 'import' → logprob: -12.026274681091309
    9. 'answer' → logprob: -12.901274681091309
    10. '   ' → logprob: -13.276274681091309

Token 166: '=i' (ID: 48141)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3100739121437073
    2. '=' → logprob: -1.4350738525390625
    3. '=len' → logprob: -4.5600738525390625
    4. 'ns' → logprob: -5.4350738525390625
    5. '=A' → logprob: -5.5600738525390625
    6. '=i' → logprob: -6.0600738525390625
    7. '+=' → logprob: -6.3100738525390625
    8. '.append' → logprob: -6.8100738525390625
    9. '=[]
' → logprob: -7.3100738525390625
    10. '=n' → logprob: -7.4350738525390625

Token 167: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7420335412025452
    2. '           ' → logprob: -0.7420335412025452
    3. 'print' → logprob: -3.1170334815979004
    4. '<|end|>' → logprob: -6.4920334815979
    5. '            
' → logprob: -6.9920334815979
    6. '\n' → logprob: -8.867033958435059
    7. ' print' → logprob: -9.117033958435059
    8. '[' → logprob: -9.242033958435059
    9. '
' → logprob: -9.492033958435059
    10. 'for' → logprob: -9.742033958435059

Token 168: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0299963541328907
    2. '
' → logprob: -4.404996395111084
    3. '           ' → logprob: -4.529996395111084
    4. 'for' → logprob: -5.154996395111084
    5. ' for' → logprob: -8.279995918273926
    6. ' print' → logprob: -8.529995918273926
    7. '            
' → logprob: -8.529995918273926
    8. '   ' → logprob: -10.154995918273926
    9. '       ' → logprob: -10.404995918273926
    10. ' 
' → logprob: -11.404995918273926

Token 169: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7713884115219116
    2. 'break' (adapté à ' break') → logprob: -0.7713884115219116
    3. 'print' → logprob: -2.646388530731201
    4. ' break' → logprob: -5.521388530731201
    5. 'for' → logprob: -8.771388053894043
    6. '       ' → logprob: -8.896388053894043
    7. ' print' → logprob: -10.146388053894043
    8. '   ' → logprob: -11.521388053894043
    9. ' for' → logprob: -12.771388053894043
    10. 'import' → logprob: -13.021388053894043

Token 170: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00784202478826046
    2. 'for' → logprob: -5.632842063903809
    3. 'n' → logprob: -5.757842063903809
    4. '
' → logprob: -8.257842063903809
    5. 'A' → logprob: -8.382842063903809
    6. 'p' → logprob: -9.007842063903809
    7. '<|end|>' → logprob: -9.382842063903809
    8. '#' → logprob: -9.507842063903809
    9. 'a' → logprob: -10.007842063903809
    10. ' print' → logprob: -10.257842063903809

Token 171: 'ans' (ID: 616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0021989059168845415
    2. 'for' → logprob: -6.252198696136475
    3. 'n' → logprob: -9.752199172973633
    4. 'A' → logprob: -9.877199172973633
    5. 'result' → logprob: -10.752199172973633
    6. 'if' → logprob: -11.127199172973633
    7. 'r' → logprob: -11.127199172973633
    8. ' print' → logprob: -11.127199172973633
    9. 'p' → logprob: -11.252199172973633
    10. 'a' → logprob: -11.627199172973633

Token 172: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01512901484966278
    2. ' =' → logprob: -4.765129089355469
    3. '=[' → logprob: -5.765129089355469
    4. '=[]' → logprob: -6.265129089355469
    5. '=len' → logprob: -6.765129089355469
    6. '=[]
' → logprob: -10.015129089355469
    7. '[' → logprob: -10.140129089355469
    8. '=list' → logprob: -10.265129089355469
    9. '=int' → logprob: -10.265129089355469
    10. '=sum' → logprob: -10.640129089355469

Token 173: '['' (ID: 1181)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.6785099506378174
    2. '0' → logprob: -1.6785099506378174
    3. ''A' → logprob: -2.1785099506378174
    4. 'A' → logprob: -2.9285099506378174
    5. 'i' → logprob: -3.0535099506378174
    6. ''' → logprob: -3.4285099506378174
    7. '-' → logprob: -4.928509712219238
    8. ''*' → logprob: -5.053509712219238
    9. ''i' → logprob: -5.178509712219238
    10. '"' → logprob: -5.303509712219238

Token 174: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.029982002452015877
    2. '.'' → logprob: -3.529982089996338
    3. '."' → logprob: -9.27998161315918
    4. '.]' → logprob: -10.40498161315918
    5. ' .' → logprob: -10.77998161315918
    6. '.''' → logprob: -10.90498161315918
    7. '-' → logprob: -11.52998161315918
    8. ''.' → logprob: -11.65498161315918
    9. '.'.' → logprob: -11.65498161315918
    10. '0' → logprob: -11.65498161315918

Token 175: '']' (ID: 1089)
  Prédit: '']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.09306691586971283
    2. '.' → logprob: -2.968066930770874
    3. ''' → logprob: -3.468066930770874
    4. ''.' → logprob: -5.593066692352295
    5. '.'' → logprob: -6.218066692352295
    6. ''*' → logprob: -8.718067169189453
    7. ' for' → logprob: -9.218067169189453
    8. ']*' → logprob: -9.343067169189453
    9. '..' → logprob: -9.968067169189453
    10. '*' → logprob: -10.218067169189453

Token 176: '*' (ID: 9)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5807597041130066
    2. '*' → logprob: -1.0807597637176514
    3. ' for' → logprob: -2.3307597637176514
    4. ']*' → logprob: -5.705759525299072
    5. '['' → logprob: -7.705759525299072
    6. ' *' → logprob: -8.83076000213623
    7. ''*' → logprob: -11.20576000213623
    8. ']' → logprob: -11.58076000213623
    9. '   ' → logprob: -12.70576000213623
    10. '*n' → logprob: -12.70576000213623

Token 177: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. 'n' → logprob: -16.000009536743164
    4. '```' → logprob: -17.625009536743164
    5. '８' → logprob: -17.750009536743164
    6. '.' → logprob: -18.125009536743164
    7. '9' → logprob: -18.312509536743164
    8. '(' → logprob: -18.687509536743164
    9. 'len' → logprob: -19.312509536743164
    10. '[' → logprob: -19.375009536743164

Token 178: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3868803381919861
    2. ' for' → logprob: -1.1368803977966309
    3. '   ' → logprob: -12.386879920959473
    4. '['' → logprob: -13.761879920959473
    5. '       ' → logprob: -14.011879920959473
    6. ' ' → logprob: -14.261879920959473
    7. ']' → logprob: -14.386879920959473
    8. '           ' → logprob: -14.636879920959473
    9. '	for' → logprob: -14.636879920959473
    10. ' ['' → logprob: -15.011879920959473

Token 179: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07910393178462982
    2. ' _' → logprob: -2.579103946685791
    3. ' range' → logprob: -8.954103469848633
    4. '_range' → logprob: -9.954103469848633
    5. ' in' → logprob: -10.454103469848633
    6. 'range' → logprob: -12.454103469848633
    7. ' i' → logprob: -13.079103469848633
    8. '_=' → logprob: -13.829103469848633
    9. '_i' → logprob: -14.829103469848633
    10. 'i' → logprob: -15.204103469848633

Token 180: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008745994418859482
    2. ' range' → logprob: -4.758746147155762
    3. 'in' → logprob: -9.258746147155762
    4. ' in' → logprob: -10.258746147155762
    5. '(range' → logprob: -14.758746147155762
    6. '_' → logprob: -14.883746147155762
    7. '_range' → logprob: -15.633746147155762
    8. '	range' → logprob: -16.258745193481445
    9. '['' → logprob: -17.383745193481445
    10. ' ' → logprob: -17.383745193481445

Token 181: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020354038861114532
    2. ' range' → logprob: -8.500203132629395
    3. '_' → logprob: -20.75020408630371
    4. '(range' → logprob: -21.62520408630371
    5. 'A' → logprob: -21.75020408630371
    6. '_range' → logprob: -22.12520408630371
    7. '
' → logprob: -22.25020408630371
    8. 'ran' → logprob: -22.50020408630371
    9. '[' → logprob: -22.50020408630371
    10. 'r' → logprob: -22.62520408630371

Token 182: '(' (ID: 7)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.0003317705122753978
    2. '(' → logprob: -8.12533187866211
    3. ' ' → logprob: -10.25033187866211
    4. '   ' → logprob: -15.12533187866211
    5. ' (' → logprob: -17.00033187866211
    6. '```' → logprob: -18.62533187866211
    7. ')' → logprob: -18.75033187866211
    8. '
' → logprob: -18.87533187866211
    9. '       ' → logprob: -19.00033187866211
    10. '  ' → logprob: -19.25033187866211

Token 183: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.375003814697266
    4. '```' → logprob: -17.000003814697266
    5. ')' → logprob: -18.187503814697266
    6. '
' → logprob: -18.312503814697266
    7. '  ' → logprob: -18.375003814697266
    8. 'n' → logprob: -18.687503814697266
    9. '８' → logprob: -18.875003814697266
    10. 'ans' → logprob: -18.937503814697266

Token 184: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.03070119395852089
    2. ')]
' → logprob: -3.530701160430908
    3. ')' → logprob: -7.530701160430908
    4. ']' → logprob: -7.905701160430908
    5. ')]
' → logprob: -10.655701637268066
    6. ']
' → logprob: -11.530701637268066
    7. ')]

' → logprob: -11.655701637268066
    8. ')
' → logprob: -12.905701637268066
    9. '')]' → logprob: -15.280701637268066
    10. '])' → logprob: -16.40570068359375

Token 185: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2664456789934775e-06
    2. ' for' → logprob: -13.625000953674316
    3. '```' → logprob: -19.625001907348633
    4. '	for' → logprob: -21.000001907348633
    5. 'For' → logprob: -23.625001907348633
    6. '<|end|>' → logprob: -23.750001907348633
    7. '_for' → logprob: -24.125001907348633
    8. '``' → logprob: -24.625001907348633
    9. '[' → logprob: -24.750001907348633
    10. '.for' → logprob: -24.875001907348633

Token 186: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.038058821111917496
    2. ' i' → logprob: -3.2880587577819824
    3. 'x' → logprob: -11.41305923461914
    4. 'r' → logprob: -12.03805923461914
    5. ' r' → logprob: -15.91305923461914
    6. 'idx' → logprob: -16.41305923461914
    7. ' x' → logprob: -16.66305923461914
    8. '_i' → logprob: -17.53805923461914
    9. ' idx' → logprob: -17.66305923461914
    10. ' ' → logprob: -17.78805923461914

Token 187: ',j' (ID: 22712)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.056808583438396454
    2. 'in' → logprob: -2.9318084716796875
    3. ',' → logprob: -6.3068084716796875
    4. 'range' → logprob: -9.556808471679688
    5. ' range' → logprob: -11.306808471679688
    6. ' ' → logprob: -12.306808471679688
    7. ',in' → logprob: -12.556808471679688
    8. ',row' → logprob: -12.931808471679688
    9. ' ,' → logprob: -13.181808471679688
    10. '[' → logprob: -13.556808471679688

Token 188: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5759652853012085
    2. 'in' → logprob: -0.8259652853012085
    3. ',' → logprob: -11.45096492767334
    4. ',in' → logprob: -12.45096492767334
    5. 'range' → logprob: -12.70096492767334
    6. ' ' → logprob: -12.95096492767334
    7. ')' → logprob: -13.20096492767334
    8. '
' → logprob: -13.57596492767334
    9. '	in' → logprob: -15.07596492767334
    10. 'In' → logprob: -15.07596492767334

Token 189: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0019783570896834135
    2. ' enumerate' → logprob: -6.501978397369385
    3. 'range' → logprob: -8.251977920532227
    4. 'zip' → logprob: -8.501977920532227
    5. 'A' → logprob: -11.376977920532227
    6. 'enum' → logprob: -15.626977920532227
    7. '
' → logprob: -16.126977920532227
    8. ' zip' → logprob: -16.501977920532227
    9. ' ' → logprob: -17.001977920532227
    10. '```' → logprob: -17.126977920532227

Token 190: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -9.543733904138207e-05
    2. 'A' → logprob: -9.50009536743164
    3. '(ans' → logprob: -10.87509536743164
    4. '(a' → logprob: -14.25009536743164
    5. '(' → logprob: -14.25009536743164
    6. 'ans' → logprob: -15.62509536743164
    7. ' A' → logprob: -16.75009536743164
    8. 'Ans' → logprob: -17.25009536743164
    9. '(Q' → logprob: -17.62509536743164
    10. '((' → logprob: -18.00009536743164

Token 191: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03728492558002472
    2. '):' → logprob: -4.037284851074219
    3. ']:
' → logprob: -4.162284851074219
    4. ']:' → logprob: -6.412284851074219
    5. ')' → logprob: -7.787284851074219
    6. '   ' → logprob: -8.037284851074219
    7. ']' → logprob: -8.287284851074219
    8. ')]' → logprob: -8.412284851074219
    9. ':
' → logprob: -8.787284851074219
    10. ']):
' → logprob: -8.787284851074219

Token 192: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11369866877794266
    2. '       ' → logprob: -2.988698720932007
    3. ' ans' → logprob: -3.363698720932007
    4. 'ans' → logprob: -4.113698482513428
    5. '	ans' → logprob: -5.113698482513428
    6. '(ans' → logprob: -9.488698959350586
    7. '    
' → logprob: -10.238698959350586
    8. '[' → logprob: -11.988698959350586
    9. '_ans' → logprob: -11.988698959350586
    10. '           ' → logprob: -12.113698959350586

Token 193: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.006808687467128038
    2. ' ans' → logprob: -5.256808757781982
    3. '   ' → logprob: -6.506808757781982
    4. '	ans' → logprob: -9.506808280944824
    5. '(ans' → logprob: -12.256808280944824
    6. '_ans' → logprob: -13.881808280944824
    7. '       ' → logprob: -16.25680923461914
    8. 'answers' → logprob: -17.00680923461914
    9. 'answer' → logprob: -17.13180923461914
    10. '
' → logprob: -17.13180923461914

Token 194: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4498052223643754e-05
    2. '[' → logprob: -11.250014305114746
    3. ' [' → logprob: -14.875014305114746
    4. '   ' → logprob: -15.125014305114746
    5. '][' → logprob: -15.125014305114746
    6. '[j' → logprob: -15.750014305114746
    7. '[I' → logprob: -16.250015258789062
    8. 'i' → logprob: -16.375015258789062
    9. ')[' → logprob: -16.375015258789062
    10. '[int' → logprob: -17.250015258789062

Token 195: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006070063100196421
    2. '[j' → logprob: -7.625607013702393
    3. ''][' → logprob: -9.250606536865234
    4. ']' → logprob: -11.500606536865234
    5. '[' → logprob: -12.625606536865234
    6. ' ][' → logprob: -12.875606536865234
    7. '   ' → logprob: -13.000606536865234
    8. ']=' → logprob: -14.250606536865234
    9. ''[' → logprob: -14.250606536865234
    10. '"][' → logprob: -14.375606536865234

Token 196: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.9361264946837764e-07
    2. ' j' → logprob: -15.75
    3. '_j' → logprob: -20.5
    4. ']' → logprob: -20.75
    5. '	j' → logprob: -20.75
    6. '   ' → logprob: -20.75
    7. '[j' → logprob: -20.875
    8. ':j' → logprob: -21.0
    9. ' ' → logprob: -21.375
    10. ',j' → logprob: -21.75

Token 197: ']='' (ID: 69193)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.30913713574409485
    2. ']='' → logprob: -1.9341371059417725
    3. '='' → logprob: -2.8091371059417725
    4. '='#' → logprob: -3.0591371059417725
    5. ']=' → logprob: -4.309137344360352
    6. '=' → logprob: -7.684137344360352
    7. '']='' → logprob: -9.559137344360352
    8. ''' → logprob: -9.934137344360352
    9. '']' → logprob: -9.934137344360352
    10. ''#' → logprob: -10.059137344360352

Token 198: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0052486988715827465
    2. ''' → logprob: -5.255248546600342
    3. ' Q' → logprob: -11.6302490234375
    4. '"' → logprob: -13.0052490234375
    5. '#' → logprob: -14.0052490234375
    6. 'O' → logprob: -14.3802490234375
    7. '.Q' → logprob: -14.3802490234375
    8. '*' → logprob: -14.6302490234375
    9. ''*' → logprob: -15.5052490234375
    10. '\xef\xbc' → logprob: -15.7552490234375

Token 199: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -8.900034299585968e-05
    2. ''
' → logprob: -9.875088691711426
    3. '']' → logprob: -11.000088691711426
    4. ''''' → logprob: -11.750088691711426
    5. 'u' → logprob: -12.375088691711426
    6. '"' → logprob: -13.125088691711426
    7. ''u' → logprob: -13.250088691711426
    8. '')' → logprob: -13.375088691711426
    9. '''' → logprob: -13.875088691711426
    10. ']'' → logprob: -14.500088691711426

Token 200: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20142608880996704
    2. 'print' → logprob: -1.7014260292053223
    3. ' for' → logprob: -11.70142650604248
    4. '
' → logprob: -12.45142650604248
    5. ' print' → logprob: -14.57642650604248
    6. '```' → logprob: -16.451425552368164
    7. '
' → logprob: -17.701425552368164
    8. ' 
' → logprob: -18.451425552368164
    9. '[' → logprob: -18.576425552368164
    10. '\n' → logprob: -18.701425552368164

Token 201: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4747878909111023
    2. 'print' (adapté à ' print') → logprob: -0.9747878909111023
    3. '
' → logprob: -7.974787712097168
    4. ' for' → logprob: -7.974787712097168
    5. ' print' → logprob: -11.099787712097168
    6. '```' → logprob: -13.599787712097168
    7. '
' → logprob: -13.724787712097168
    8. ' 
' → logprob: -13.849787712097168
    9. '  
' → logprob: -13.974787712097168
    10. '    
' → logprob: -14.224787712097168

Token 202: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.1305774599313736
    2. '("' → logprob: -2.130577564239502
    3. '(' → logprob: -5.755577564239502
    4. '(*' → logprob: -8.255577087402344
    5. '(ans' → logprob: -9.255577087402344
    6. '()' → logprob: -9.505577087402344
    7. '(('' → logprob: -11.505577087402344
    8. '(""' → logprob: -11.630577087402344
    9. '("")' → logprob: -12.255577087402344
    10. '"' → logprob: -12.380577087402344

Token 203: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.007514580152928829
    2. '')' → logprob: -5.007514476776123
    3. '.' → logprob: -7.507514476776123
    4. '.Q' → logprob: -10.007514953613281
    5. ''' → logprob: -10.132514953613281
    6. '.'.' → logprob: -10.257514953613281
    7. 'Q' → logprob: -10.382514953613281
    8. '''.' → logprob: -10.382514953613281
    9. '.')' → logprob: -10.382514953613281
    10. '.'' → logprob: -11.257514953613281

Token 204: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -5.438573680294212e-06
    2. '''.' → logprob: -13.000005722045898
    3. ' join' → logprob: -13.375005722045898
    4. '```' → logprob: -14.750005722045898
    5. '.' → logprob: -15.375005722045898
    6. ''.' → logprob: -15.500005722045898
    7. '   ' → logprob: -15.750005722045898
    8. 'j' → logprob: -15.875005722045898
    9. '.join' → logprob: -16.0000057220459
    10. 'ans' → logprob: -16.1250057220459

Token 205: '(map' (ID: 16946)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00033546582562848926
    2. 'ans' → logprob: -8.000335693359375
    3. '	ans' → logprob: -16.875335693359375
    4. ' ans' → logprob: -17.250335693359375
    5. '(' → logprob: -17.250335693359375
    6. 'Ans' → logprob: -18.500335693359375
    7. ')' → logprob: -19.000335693359375
    8. '_ans' → logprob: -19.500335693359375
    9. '(answer' → logprob: -20.250335693359375
    10. '(
' → logprob: -20.875335693359375

Token 206: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.018178507685661316
    2. 'str' → logprob: -4.018178462982178
    3. '
' → logprob: -11.893178939819336
    4. ' str' → logprob: -12.143178939819336
    5. '   ' → logprob: -12.518178939819336
    6. '(ans' → logprob: -12.643178939819336
    7. '(' → logprob: -13.143178939819336
    8. ')' → logprob: -13.268178939819336
    9. ',str' → logprob: -13.268178939819336
    10. '[str' → logprob: -13.518178939819336

Token 207: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03848539665341377
    2. '(ans' → logprob: -3.288485288619995
    3. ',(' → logprob: -8.663485527038574
    4. 'ans' → logprob: -8.788485527038574
    5. ' ans' → logprob: -9.413485527038574
    6. ' ,' → logprob: -10.663485527038574
    7. '(' → logprob: -12.163485527038574
    8. '	ans' → logprob: -13.038485527038574
    9. ' (' → logprob: -13.413485527038574
    10. ',args' → logprob: -13.538485527038574

Token 208: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00012976066500414163
    2. ' ans' → logprob: -9.000129699707031
    3. '(ans' → logprob: -12.000129699707031
    4. '	ans' → logprob: -16.37512969970703
    5. '   ' → logprob: -16.87512969970703
    6. '
' → logprob: -18.87512969970703
    7. 'answer' → logprob: -19.87512969970703
    8. '_ans' → logprob: -20.75012969970703
    9. '    ' → logprob: -21.75012969970703
    10. '  ' → logprob: -21.75012969970703

Token 209: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.630610641877865e-06
    2. ')))' → logprob: -12.500006675720215
    3. '[' → logprob: -12.750006675720215
    4. ' [' → logprob: -17.8750057220459
    5. '[[' → logprob: -18.1250057220459
    6. '   ' → logprob: -18.6250057220459
    7. '))' → logprob: -19.0000057220459
    8. ' ' → logprob: -19.5000057220459
    9. 'i' → logprob: -20.1250057220459
    10. '[
' → logprob: -20.2500057220459

Token 210: '])))' (ID: 196150)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -5.2166411478538066e-05
    2. '))' → logprob: -10.750052452087402
    3. ')))
' → logprob: -10.875052452087402
    4. '))))' → logprob: -12.000052452087402
    5. ' ' → logprob: -13.000052452087402
    6. '[' → logprob: -14.250052452087402
    7. ')' → logprob: -14.250052452087402
    8. ')));' → logprob: -14.375052452087402
    9. '')))' → logprob: -14.375052452087402
    10. '[]' → logprob: -14.875052452087402


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 208
Tokens correctement prédits (1ère position, stricte): 87
Tokens correctement prédits (1ère position, avec adaptation): 91
Tokens correctement prédits (top 10): 172
Précision stricte (1ère position): 41.83%
Précision adaptée (1ère position): 43.75%
Précision (top 10): 82.69%
================================================================================
