================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import itertools
queen=[-1]*8
N=int(input())
de=[]
for i in range(N):
    x,y =list(map(int,input().split()))
    de.append(x)
    queen[x]=y
def check(n):#nはクイーンの個数
    for y in range(n):
        if crshu(queen[y],y):return False
    return True
def crshu(x,y):
    for y1 in range(y):
        x1=queen[y1]
        if x1-y1==x-y or x1+y1==x+y:return True
    return False
def board():
    king=[]
    for i in range(8):
        king.append([i,queen[i]])
    for i in range(8):
        for j in range(8):
            if [i,j] in king:
                print("Q",end="")
            else:
                print(".",end="")
        print()
    exit()

def search(n,y):
    if n==y:
        if check(8):
            board()
    else:
        if y in de:
            search(n,y+1)
        else:
            for i in range(n):
                if i not in queen :
                    queen[y]=i
                    search(n,y+1)
                    for l in range(y+1,8):
                        if l not in de:
                            queen[l]=-1
search(8,0)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'queen' (ID: 153556)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.9504606825648807e-05
    2. '```' → logprob: -12.625019073486328
    3. 'import' → logprob: -13.250019073486328
    4. '\' → logprob: -13.625019073486328
    5. '."""' → logprob: -13.625019073486328
    6. ' .' → logprob: -13.750019073486328
    7. '.

' → logprob: -13.750019073486328
    8. '\.' → logprob: -13.875019073486328
    9. '​.' → logprob: -14.125019073486328
    10. '.`' → logprob: -14.125019073486328

Token 4: '=[' (ID: 13370)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.005800805054605007
    2. '_s' → logprob: -5.505800724029541
    3. ''s' → logprob: -7.130800724029541
    4. '_' → logprob: -8.2558012008667
    5. ' s' → logprob: -8.8808012008667
    6. '(' → logprob: -9.0058012008667
    7. '.' → logprob: -9.0058012008667
    8. '(s' → logprob: -9.3808012008667
    9. '_positions' → logprob: -10.0058012008667
    10. '`s' → logprob: -10.6308012008667

Token 5: '-' (ID: 12)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6730031967163086
    2. '0' → logprob: -1.4230031967163086
    3. '[' → logprob: -1.4230031967163086
    4. '[]' → logprob: -6.173003196716309
    5. ' (' → logprob: -6.798003196716309
    6. '(i' → logprob: -7.173003196716309
    7. ' [' → logprob: -7.298003196716309
    8. '1' → logprob: -7.298003196716309
    9. '()]' → logprob: -7.673003196716309
    10. ' ' → logprob: -8.173003196716309

Token 6: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010671088239178061
    2. '-' → logprob: -8.126067161560059
    3. '9' → logprob: -8.126067161560059
    4. ' ' → logprob: -9.001067161560059
    5. '8' → logprob: -9.876067161560059
    6. '7' → logprob: -10.001067161560059
    7. '4' → logprob: -10.001067161560059
    8. '2' → logprob: -10.376067161560059
    9. '5' → logprob: -10.376067161560059
    10. '100' → logprob: -11.001067161560059

Token 7: ']*' (ID: 18579)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006820533308200538
    2. ']' → logprob: -7.3756818771362305
    3. ',
' → logprob: -10.37568187713623
    4. ' ,' → logprob: -11.25068187713623
    5. '0' → logprob: -12.62568187713623
    6. ',

' → logprob: -12.62568187713623
    7. ' ]' → logprob: -13.62568187713623
    8. 'import' → logprob: -14.25068187713623
    9. ' ' → logprob: -14.75068187713623
    10. '[' → logprob: -15.00068187713623

Token 8: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.0007435183506458998
    2. '9' → logprob: -7.625743389129639
    3. '10' → logprob: -9.250743865966797
    4. '12' → logprob: -9.625743865966797
    5. '16' → logprob: -10.125743865966797
    6. ' ' → logprob: -11.375743865966797
    7. '5' → logprob: -11.875743865966797
    8. '100' → logprob: -11.875743865966797
    9. '15' → logprob: -12.125743865966797
    10. '4' → logprob: -12.125743865966797

Token 9: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2747381031513214
    2. '[' → logprob: -1.774738073348999
    3. ',' → logprob: -4.024738311767578
    4. '(' → logprob: -5.149738311767578
    5. '```' → logprob: -5.149738311767578
    6. ' for' → logprob: -5.274738311767578
    7. '[
' → logprob: -5.274738311767578
    8. 'import' → logprob: -5.274738311767578
    9. '
' → logprob: -5.399738311767578
    10. '\' → logprob: -5.524738311767578

Token 10: 'N' (ID: 45)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24590417742729187
    2. 'def' → logprob: -1.7459042072296143
    3. ' for' → logprob: -3.3709042072296143
    4. 'i' → logprob: -5.495903968811035
    5. '
' → logprob: -6.370903968811035
    6. '```' → logprob: -6.745903968811035
    7. '

' → logprob: -7.620903968811035
    8. '#' → logprob: -7.745903968811035
    9. 'import' → logprob: -8.370903968811035
    10. 'n' → logprob: -8.620903968811035

Token 11: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868851363658905
    2. ' =' → logprob: -1.136885166168213
    3. '_=' → logprob: -12.636884689331055
    4. ' =
' → logprob: -13.261884689331055
    5. ' ' → logprob: -13.386884689331055
    6. '=int' → logprob: -13.511884689331055
    7. ' =)' → logprob: -13.636884689331055
    8. '_' → logprob: -14.136884689331055
    9. ' =[' → logprob: -14.261884689331055
    10. '=
' → logprob: -14.261884689331055

Token 12: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018087545409798622
    2. '(input' → logprob: -4.143087387084961
    3. '('' → logprob: -6.393087387084961
    4. ' (' → logprob: -9.018087387084961
    5. 'input' → logprob: -9.518087387084961
    6. '(`' → logprob: -9.768087387084961
    7. '()' → logprob: -10.643087387084961
    8. '("' → logprob: -10.893087387084961
    9. '(
' → logprob: -11.268087387084961
    10. ''' → logprob: -11.893087387084961

Token 13: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.19777238368988037
    2. '()' → logprob: -1.9477723836898804
    3. '(' → logprob: -3.69777250289917
    4. ')' → logprob: -4.69777250289917
    5. '('' → logprob: -6.44777250289917
    6. '("' → logprob: -6.94777250289917
    7. '(""))' → logprob: -9.447772026062012
    8. ' ())' → logprob: -9.822772026062012
    9. '("("' → logprob: -9.947772026062012
    10. '()))' → logprob: -10.072772026062012

Token 14: 'de' (ID: 613)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2076018750667572
    2. ' for' → logprob: -2.33260178565979
    3. '
' → logprob: -2.70760178565979
    4. ' 
' → logprob: -4.832602024078369
    5. 'def' → logprob: -5.582602024078369
    6. '' → logprob: -6.207602024078369
    7. '```' → logprob: -6.207602024078369
    8. ' ' → logprob: -6.332602024078369
    9. '<|end|>' → logprob: -6.457602024078369
    10. ')' → logprob: -6.957602024078369

Token 15: '=[]
' (ID: 63466)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -6.909333023941144e-05
    2. 'fen' → logprob: -9.875068664550781
    3. '```' → logprob: -12.375068664550781
    4. 'fect' → logprob: -13.250068664550781
    5. 'fe' → logprob: -13.250068664550781
    6. 'fy' → logprob: -13.500068664550781
    7. 'fun' → logprob: -13.875068664550781
    8. 'fc' → logprob: -14.250068664550781
    9. 'ф' → logprob: -14.375068664550781
    10. 'func' → logprob: -14.500068664550781

Token 16: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.024833492934703827
    2. ' for' → logprob: -4.399833679199219
    3. 'def' → logprob: -4.649833679199219
    4. '
' → logprob: -7.274833679199219
    5. ' ' → logprob: -7.774833679199219
    6. ' 
' → logprob: -7.774833679199219
    7. '<|end|>' → logprob: -7.774833679199219
    8. ')' → logprob: -8.899833679199219
    9. 'f' → logprob: -9.024833679199219
    10. 'd' → logprob: -9.149833679199219

Token 17: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.007707180920988321
    2. 'i' → logprob: -5.007707118988037
    3. ' x' → logprob: -7.882707118988037
    4. ' j' → logprob: -8.132707595825195
    5. ' ' → logprob: -9.257707595825195
    6. ' _' → logprob: -9.632707595825195
    7. '_' → logprob: -10.382707595825195
    8. 'x' → logprob: -10.757707595825195
    9. ' r' → logprob: -11.507707595825195
    10. ' ' → logprob: -11.507707595825195

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07257933914661407
    2. 'in' → logprob: -2.6975793838500977
    3. ' ' → logprob: -6.572579383850098
    4. 'n' → logprob: -6.822579383850098
    5. '  ' → logprob: -10.072579383850098
    6. '	in' → logprob: -10.447579383850098
    7. '```' → logprob: -11.322579383850098
    8. ' n' → logprob: -11.322579383850098
    9. 'range' → logprob: -11.822579383850098
    10. ',' → logprob: -12.010079383850098

Token 19: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.22546875476837158
    2. 'range' → logprob: -1.6004687547683716
    3. ' ' → logprob: -10.350468635559082
    4. ' xrange' → logprob: -12.475468635559082
    5. '	range' → logprob: -12.600468635559082
    6. '  ' → logprob: -12.725468635559082
    7. '(range' → logprob: -12.975468635559082
    8. ' in' → logprob: -13.725468635559082
    9. '   ' → logprob: -13.725468635559082
    10. 'rang' → logprob: -13.850468635559082

Token 20: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.333223139634356e-05
    2. ' (' → logprob: -10.875033378601074
    3. '(N' → logprob: -11.250033378601074
    4. '(len' → logprob: -14.625033378601074
    5. '(n' → logprob: -15.000033378601074
    6. '((' → logprob: -15.750033378601074
    7. '(
' → logprob: -16.000032424926758
    8. ' ' → logprob: -16.625032424926758
    9. '(range' → logprob: -16.750032424926758
    10. '()' → logprob: -16.875032424926758

Token 21: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007606866303831339
    2. ' ):' → logprob: -5.1326069831848145
    3. ')' → logprob: -6.7576069831848145
    4. ',' → logprob: -8.757606506347656
    5. ':' → logprob: -8.882606506347656
    6. '+' → logprob: -9.132606506347656
    7. '):
' → logprob: -9.382606506347656
    8. ' ' → logprob: -11.757606506347656
    9. ' )' → logprob: -12.007606506347656
    10. '   ' → logprob: -13.757606506347656

Token 22: '   ' (ID: 271)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.47963911294937134
    2. '   ' → logprob: -1.4796390533447266
    3. ' ' → logprob: -3.1046390533447266
    4. 'de' → logprob: -3.2296390533447266
    5. '    
' → logprob: -4.229639053344727
    6. ' 
' → logprob: -5.229639053344727
    7. ' s' → logprob: -5.229639053344727
    8. '    ' → logprob: -5.229639053344727
    9. ' input' → logprob: -5.354639053344727
    10. ' for' → logprob: -5.354639053344727

Token 23: ' x' (ID: 1215)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2560860514640808
    2. ' a' → logprob: -3.0060861110687256
    3. ' d' → logprob: -3.2560861110687256
    4. ' data' → logprob: -3.8810861110687256
    5. ' x' → logprob: -4.1310858726501465
    6. ' row' → logprob: -4.5060858726501465
    7. 'de' → logprob: -4.6310858726501465
    8. ' line' → logprob: -4.7560858726501465
    9. '   ' → logprob: -5.0060858726501465
    10. ' arr' → logprob: -5.1310858726501465

Token 24: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5790389180183411
    2. ',y' → logprob: -0.8290389180183411
    3. ',input' → logprob: -6.704039096832275
    4. '=input' → logprob: -7.954039096832275
    5. ' ,' → logprob: -8.079038619995117
    6. ',j' → logprob: -8.204038619995117
    7. ',x' → logprob: -8.579038619995117
    8. ' =' → logprob: -8.954038619995117
    9. '=' → logprob: -9.204038619995117
    10. ',user' → logprob: -9.579038619995117

Token 25: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20911359786987305
    2. ' =' → logprob: -1.709113597869873
    3. '=input' → logprob: -4.959113597869873
    4. '=int' → logprob: -7.584113597869873
    5. ',' → logprob: -9.084114074707031
    6. ' ' → logprob: -12.334114074707031
    7. ')' → logprob: -12.584114074707031
    8. '=line' → logprob: -12.709114074707031
    9. 'input' → logprob: -13.209114074707031
    10. ')=' → logprob: -13.459114074707031

Token 26: 'list' (ID: 2641)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.01290113665163517
    2. 'map' → logprob: -4.387901306152344
    3. ' list' → logprob: -8.012901306152344
    4. ' ' → logprob: -11.012901306152344
    5. ' input' → logprob: -11.137901306152344
    6. 'list' → logprob: -11.137901306152344
    7. 'int' → logprob: -12.637901306152344
    8. ' int' → logprob: -12.637901306152344
    9. 'input' → logprob: -13.262901306152344
    10. '	map' → logprob: -13.262901306152344

Token 27: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.35118231177330017
    2. '(' → logprob: -1.3511823415756226
    3. '(input' → logprob: -3.351182222366333
    4. '(int' → logprob: -7.476182460784912
    5. '(range' → logprob: -7.726182460784912
    6. '<|end|>' → logprob: -7.726182460784912
    7. '()' → logprob: -8.226181983947754
    8. '(
' → logprob: -9.476181983947754
    9. '(x' → logprob: -9.726181983947754
    10. '(filter' → logprob: -10.101181983947754

Token 28: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0009473071550019085
    2. '(' → logprob: -7.12594747543335
    3. '<int' → logprob: -10.375946998596191
    4. '<|end|>' → logprob: -10.500946998596191
    5. '(input' → logprob: -10.875946998596191
    6. '[int' → logprob: -10.875946998596191
    7. 'int' → logprob: -11.000946998596191
    8. ')' → logprob: -12.000946998596191
    9. '(str' → logprob: -12.125946998596191
    10. '=int' → logprob: -12.375946998596191

Token 29: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.31773972511291504
    2. ',' → logprob: -1.942739725112915
    3. '(input' → logprob: -2.067739725112915
    4. '(' → logprob: -6.817739486694336
    5. 'input' → logprob: -7.567739486694336
    6. '<|end|>' → logprob: -7.692739486694336
    7. ')' → logprob: -8.692739486694336
    8. ' input' → logprob: -10.567739486694336
    9. ',int' → logprob: -10.942739486694336
    10. '(),' → logprob: -10.942739486694336

Token 30: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.45848218582978e-06
    2. '()' → logprob: -13.75000286102295
    3. ' ().' → logprob: -14.50000286102295
    4. '.split' → logprob: -15.50000286102295
    5. '()))' → logprob: -15.62500286102295
    6. '.' → logprob: -16.250001907348633
    7. ' .' → logprob: -17.375001907348633
    8. 'split' → logprob: -17.375001907348633
    9. '))' → logprob: -17.375001907348633
    10. '(' → logprob: -17.375001907348633

Token 31: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003434488025959581
    2. 'strip' → logprob: -8.000343322753906
    3. ' split' → logprob: -12.250343322753906
    4. 'rstrip' → logprob: -13.250343322753906
    5. '(split' → logprob: -13.750343322753906
    6. 'spl' → logprob: -15.000343322753906
    7. 's' → logprob: -16.625343322753906
    8. '.split' → logprob: -17.750343322753906
    9. 'sp' → logprob: -18.750343322753906
    10. ')' → logprob: -18.750343322753906

Token 32: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.015818029642105103
    2. '()' → logprob: -4.890818119049072
    3. '))' → logprob: -5.140818119049072
    4. '())' → logprob: -6.140818119049072
    5. '()))
' → logprob: -9.890817642211914
    6. '()));' → logprob: -10.140817642211914
    7. '(' → logprob: -10.265817642211914
    8. '())))' → logprob: -10.640817642211914
    9. ')' → logprob: -11.765817642211914
    10. '()))

' → logprob: -12.265817642211914

Token 33: '   ' (ID: 271)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.5601868033409119
    2. '   ' → logprob: -1.8101868629455566
    3. ' de' → logprob: -2.4351868629455566
    4. '<|end|>' → logprob: -2.9351868629455566
    5. '	de' → logprob: -3.0601868629455566
    6. ')' → logprob: -3.1851868629455566
    7. '```' → logprob: -4.435186862945557
    8. ',' → logprob: -5.185186862945557
    9. ',de' → logprob: -5.810186862945557
    10. '<|end|>' → logprob: -5.935186862945557

Token 34: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6948509216308594
    2. 'de' (adapté à ' de') → logprob: -0.6948509216308594
    3. 'queen' → logprob: -6.944850921630859
    4. ' queen' → logprob: -7.819850921630859
    5. ' if' → logprob: -9.06985092163086
    6. '   ' → logprob: -10.06985092163086
    7. '```' → logprob: -10.19485092163086
    8. '	de' → logprob: -10.31985092163086
    9. 'if' → logprob: -10.69485092163086
    10. ' ' → logprob: -11.19485092163086

Token 35: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.007768701296299696
    2. '.' → logprob: -5.257768630981445
    3. '.ap' → logprob: -6.882768630981445
    4. '.app' → logprob: -7.132768630981445
    5. '.p' → logprob: -8.257768630981445
    6. '[' → logprob: -8.757768630981445
    7. 'pp' → logprob: -9.257768630981445
    8. ' .' → logprob: -10.132768630981445
    9. '.a' → logprob: -10.382768630981445
    10. 'append' → logprob: -10.757768630981445

Token 36: '(x' (ID: 4061)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.005325904581695795
    2. '(' → logprob: -5.255325794219971
    3. '([' → logprob: -9.630326271057129
    4. '(x' → logprob: -10.880326271057129
    5. '(y' → logprob: -12.380326271057129
    6. '(([' → logprob: -13.755326271057129
    7. '(('' → logprob: -14.005326271057129
    8. '(tuple' → logprob: -15.380326271057129
    9. ')((' → logprob: -15.630326271057129
    10. '(
' → logprob: -15.755326271057129

Token 37: ')
' (ID: 446)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4124304950237274
    2. ',y' → logprob: -1.7874305248260498
    3. ')' → logprob: -1.9124305248260498
    4. ',' → logprob: -4.037430286407471
    5. ' )' → logprob: -6.412430286407471
    6. ',)' → logprob: -6.787430286407471
    7. '-)' → logprob: -7.037430286407471
    8. ' -' → logprob: -7.037430286407471
    9. ')y' → logprob: -8.537430763244629
    10. ' ,' → logprob: -8.912430763244629

Token 38: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: ' queen' (ID: 42300)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3338153660297394
    2. ',y' → logprob: -1.458815336227417
    3. '<|end|>' → logprob: -3.958815336227417
    4. '-' → logprob: -4.208815574645996
    5. ')' → logprob: -4.208815574645996
    6. 'y' → logprob: -6.583815574645996
    7. '+' → logprob: -8.083815574645996
    8. ',
' → logprob: -8.458815574645996
    9. ' ,' → logprob: -9.958815574645996
    10. '*' → logprob: -10.083815574645996

Token 40: '[x' (ID: 17295)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.000738038623239845
    2. '[' → logprob: -7.500738143920898
    3. '[x' → logprob: -9.250738143920898
    4. '[i' → logprob: -9.500738143920898
    5. ' [' → logprob: -13.500738143920898
    6. '```' → logprob: -13.500738143920898
    7. 'y' → logprob: -13.625738143920898
    8. '[Y' → logprob: -13.875738143920898
    9. '\[' → logprob: -13.875738143920898
    10. '[q' → logprob: -14.250738143920898

Token 41: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5777380466461182
    2. ']=' → logprob: -0.8277380466461182
    3. '=' → logprob: -6.952737808227539
    4. ' ]' → logprob: -7.202737808227539
    5. ']=-' → logprob: -10.452737808227539
    6. '=y' → logprob: -11.327737808227539
    7. ']+=' → logprob: -11.327737808227539
    8. ']==' → logprob: -11.327737808227539
    9. ' =' → logprob: -11.952737808227539
    10. '']=' → logprob: -12.702737808227539

Token 42: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0013764221221208572
    2. ' y' → logprob: -6.751376628875732
    3. '-' → logprob: -8.876376152038574
    4. ' -' → logprob: -10.751376152038574
    5. '-y' → logprob: -11.126376152038574
    6. '0' → logprob: -11.251376152038574
    7. '7' → logprob: -12.001376152038574
    8. ' ' → logprob: -12.876376152038574
    9. '9' → logprob: -13.126376152038574
    10. 'x' → logprob: -13.376376152038574

Token 43: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: ' check' (ID: 2371)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.13599777221679688
    2. ' place' → logprob: -3.385997772216797
    3. ' dfs' → logprob: -3.385997772216797
    4. ' back' → logprob: -4.260997772216797
    5. ' ' → logprob: -4.385997772216797
    6. ' check' → logprob: -5.385997772216797
    7. ' solution' → logprob: -5.885997772216797
    8. ' queen' → logprob: -5.885997772216797
    9. ' valid' → logprob: -6.010997772216797
    10. ' is' → logprob: -6.010997772216797

Token 46: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007725633680820465
    2. '(i' → logprob: -5.632725715637207
    3. '(x' → logprob: -5.757725715637207
    4. '(row' → logprob: -7.757725715637207
    5. '(q' → logprob: -8.632725715637207
    6. ' (' → logprob: -8.882725715637207
    7. '(a' → logprob: -9.882725715637207
    8. '(pos' → logprob: -10.507725715637207
    9. '(n' → logprob: -10.882725715637207
    10. '(k' → logprob: -10.882725715637207

Token 47: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5307061672210693
    2. '):' → logprob: -1.1557061672210693
    3. ',n' → logprob: -3.1557061672210693
    4. ')' → logprob: -3.2807061672210693
    5. ',k' → logprob: -5.655706405639648
    6. ',i' → logprob: -5.780706405639648
    7. ',j' → logprob: -5.905706405639648
    8. ' ,' → logprob: -6.155706405639648
    9. ',q' → logprob: -6.655706405639648
    10. ',x' → logprob: -7.155706405639648

Token 48: '#' (ID: 2)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9719937443733215
    2. ' for' → logprob: -1.4719936847686768
    3. '<|end|>' → logprob: -1.4719936847686768
    4. ' ' → logprob: -2.2219936847686768
    5. '    ' → logprob: -4.221993923187256
    6. '\t' → logprob: -4.596993923187256
    7. '	for' → logprob: -4.721993923187256
    8. '  ' → logprob: -5.471993923187256
    9. 'for' → logprob: -5.846993923187256
    10. ':' → logprob: -5.971993923187256

Token 49: 'n' (ID: 77)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.26732149720191956
    2. ' for' → logprob: -1.8923214673995972
    3. ')' → logprob: -3.5173215866088867
    4. 'for' → logprob: -3.8923215866088867
    5. ' (' → logprob: -4.892321586608887
    6. ' )' → logprob: -5.267321586608887
    7. '   ' → logprob: -5.392321586608887
    8. '_' → logprob: -5.767321586608887
    9. '(' → logprob: -6.142321586608887
    10. '<|end|>' → logprob: -6.267321586608887

Token 50: 'は' (ID: 5205)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13326939940452576
    2. ' ' → logprob: -2.6332693099975586
    3. '<|end|>' → logprob: -3.8832693099975586
    4. ' for' → logprob: -5.133269309997559
    5. 'for' → logprob: -5.633269309997559
    6. '   ' → logprob: -5.758269309997559
    7. 'def' → logprob: -5.758269309997559
    8. '):' → logprob: -6.383269309997559
    9. ' in' → logprob: -6.508269309997559
    10. '==' → logprob: -6.508269309997559

Token 51: 'ク' (ID: 7787)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.31667792797088623
    2. ' ' → logprob: -2.691678047180176
    3. 'n' → logprob: -2.941678047180176
    4. ' queen' → logprob: -3.441678047180176
    5. ' range' → logprob: -4.441678047180176
    6. ' i' → logprob: -4.441678047180176
    7. '　' → logprob: -4.566678047180176
    8. '0' → logprob: -4.691678047180176
    9. ' the' → logprob: -4.691678047180176
    10. ' current' → logprob: -4.816678047180176

Token 52: 'イ' (ID: 6339)
  Prédit: 'ー'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ー' → logprob: -0.7406813502311707
    2. 'ーン' → logprob: -0.8656813502311707
    3. 'ール' → logprob: -3.8656814098358154
    4. 'イ' → logprob: -3.9906814098358154
    5. '```' → logprob: -4.115681171417236
    6. '-' → logprob: -4.615681171417236
    7. 'リー' → logprob: -4.990681171417236
    8. 'ン' → logprob: -5.365681171417236
    9. '   ' → logprob: -5.740681171417236
    10. '``' → logprob: -6.490681171417236

Token 53: 'ーン' (ID: 105456)
  Prédit: 'ーン'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ーン' → logprob: -0.0111826928332448
    2. 'ー' → logprob: -4.63618278503418
    3. '```' → logprob: -7.76118278503418
    4. '   ' → logprob: -8.38618278503418
    5. ' ' → logprob: -8.63618278503418
    6. '-' → logprob: -9.01118278503418
    7. '``' → logprob: -9.38618278503418
    8. 'ン' → logprob: -9.63618278503418
    9. '

' → logprob: -9.88618278503418
    10. '	' → logprob: -10.51118278503418

Token 54: 'の' (ID: 3385)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6035773158073425
    2. ')' → logprob: -1.4785773754119873
    3. ' for' → logprob: -3.1035773754119873
    4. '[' → logprob: -3.3535773754119873
    5. 's' → logprob: -4.103577136993408
    6. 'for' → logprob: -4.103577136993408
    7. ''s' → logprob: -4.228577136993408
    8. '  ' → logprob: -4.478577136993408
    9. '    ' → logprob: -4.603577136993408
    10. '   ' → logprob: -4.853577136993408

Token 55: '個' (ID: 32508)
  Prédit: '行'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '行' → logprob: -0.796431839466095
    2. 'row' → logprob: -2.17143177986145
    3. '位置' → logprob: -2.29643177986145
    4. 'n' → logprob: -3.04643177986145
    5. '列' → logprob: -3.04643177986145
    6. 'position' → logprob: -3.42143177986145
    7. ' row' → logprob: -3.54643177986145
    8. 'column' → logprob: -3.67143177986145
    9. '現在' → logprob: -3.67143177986145
    10. '0' → logprob: -3.79643177986145

Token 56: '数' (ID: 7135)
  Prédit: '数'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '数' → logprob: -0.06499192863702774
    2. 'ン' → logprob: -3.4399919509887695
    3. '+' → logprob: -4.8149919509887695
    4. ')' → logprob: -5.3149919509887695
    5. 'ん' → logprob: -5.6899919509887695
    6. 'の' → logprob: -6.1899919509887695
    7. '=' → logprob: -6.1899919509887695
    8. '目' → logprob: -6.6899919509887695
    9. '子' → logprob: -6.8149919509887695
    10. '）' → logprob: -7.0649919509887695

Token 57: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6024242043495178
    2. '<|end|>' → logprob: -1.102424144744873
    3. ' ' → logprob: -3.102424144744873
    4. ':' → logprob: -3.727424144744873
    5. ')' → logprob: -4.102424144744873
    6. '<|end|>' → logprob: -4.727424144744873
    7. '(' → logprob: -5.227424144744873
    8. '  ' → logprob: -5.602424144744873
    9. '    ' → logprob: -5.727424144744873
    10. '
' → logprob: -6.227424144744873

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3136537969112396
    2. ' for' → logprob: -2.0636537075042725
    3. ' ' → logprob: -2.3136537075042725
    4. '<|end|>' → logprob: -4.063653945922852
    5. '	for' → logprob: -4.688653945922852
    6. '    ' → logprob: -5.063653945922852
    7. 'for' → logprob: -6.063653945922852
    8. '\t' → logprob: -6.063653945922852
    9. '  ' → logprob: -6.188653945922852
    10. ' 
' → logprob: -7.563653945922852

Token 59: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3162784278392792
    2. ' for' → logprob: -1.3162784576416016
    3. '   ' → logprob: -5.941278457641602
    4. '	for' → logprob: -8.191278457641602
    5. '    ' → logprob: -9.566278457641602
    6. ' ' → logprob: -10.566278457641602
    7. '  ' → logprob: -11.816278457641602
    8. 'i' → logprob: -14.066278457641602
    9. ' i' → logprob: -14.441278457641602
    10. 'return' → logprob: -15.066278457641602

Token 60: ' y' (ID: 342)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0596218965947628
    2. 'i' → logprob: -3.184621810913086
    3. ' range' → logprob: -4.434621810913086
    4. 'range' → logprob: -6.059621810913086
    5. ' ' → logprob: -7.059621810913086
    6. ' j' → logprob: -7.184621810913086
    7. ' in' → logprob: -7.809621810913086
    8. 'j' → logprob: -9.684621810913086
    9. '   ' → logprob: -10.309621810913086
    10. '  ' → logprob: -10.684621810913086

Token 61: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007141097914427519
    2. ' ' → logprob: -5.50714111328125
    3. 'in' → logprob: -6.50714111328125
    4. ' i' → logprob: -7.00714111328125
    5. 'range' → logprob: -8.88214111328125
    6. 'i' → logprob: -9.25714111328125
    7. '  ' → logprob: -9.50714111328125
    8. '   ' → logprob: -9.50714111328125
    9. '1' → logprob: -9.88214111328125
    10. ',' → logprob: -10.25714111328125

Token 62: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.026363471522927284
    2. 'range' → logprob: -3.6513633728027344
    3. ' ' → logprob: -10.776363372802734
    4. '   ' → logprob: -11.026363372802734
    5. '  ' → logprob: -11.401363372802734
    6. '(range' → logprob: -12.776363372802734
    7. '[' → logprob: -12.776363372802734
    8. '	range' → logprob: -12.776363372802734
    9. '    ' → logprob: -13.276363372802734
    10. 'ange' → logprob: -13.276363372802734

Token 63: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0019906130619347095
    2. '(' → logprob: -6.251990795135498
    3. '(len' → logprob: -10.87699031829834
    4. '(N' → logprob: -11.37699031829834
    5. '(i' → logprob: -11.87699031829834
    6. 'n' → logprob: -11.87699031829834
    7. '	n' → logprob: -11.87699031829834
    8. '[n' → logprob: -13.00199031829834
    9. '(y' → logprob: -13.37699031829834
    10. '   ' → logprob: -14.00199031829834

Token 64: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002349242102354765
    2. ' ):' → logprob: -7.002349376678467
    3. '-' → logprob: -7.252349376678467
    4. '):
' → logprob: -7.627349376678467
    5. '+' → logprob: -9.502348899841309
    6. ' -' → logprob: -10.002348899841309
    7. '   ' → logprob: -10.127348899841309
    8. ')' → logprob: -10.252348899841309
    9. ' ' → logprob: -11.002348899841309
    10. '):
' → logprob: -11.252348899841309

Token 65: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3575667142868042
    2. '<|end|>' → logprob: -1.6075667142868042
    3. ' ' → logprob: -2.9825668334960938
    4. '   ' → logprob: -3.7325668334960938
    5. '    ' → logprob: -3.9825668334960938
    6. '<|end|>' → logprob: -6.482566833496094
    7. '  ' → logprob: -6.607566833496094
    8. ',' → logprob: -7.107566833496094
    9. '      ' → logprob: -7.357566833496094
    10. ':' → logprob: -7.607566833496094

Token 66: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12205202132463455
    2. 'if' (adapté à ' if') → logprob: -2.622051954269409
    3. ' if' → logprob: -3.497051954269409
    4. '   ' → logprob: -4.747052192687988
    5. '<|end|>' → logprob: -6.247052192687988
    6. ' ' → logprob: -7.497052192687988
    7. ' for' → logprob: -8.372052192687988
    8. '    ' → logprob: -8.997052192687988
    9. 'for' → logprob: -9.122052192687988
    10. '  ' → logprob: -9.872052192687988

Token 67: ' cr' (ID: 1769)
  Prédit: 'queen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queen' → logprob: -0.1308523565530777
    2. ' queen' → logprob: -2.255852460861206
    3. 'abs' → logprob: -4.755852222442627
    4. ' abs' → logprob: -5.380852222442627
    5. ' y' → logprob: -5.880852222442627
    6. '   ' → logprob: -7.005852222442627
    7. 'y' → logprob: -7.880852222442627
    8. ' ' → logprob: -8.255852699279785
    9. 'que' → logprob: -9.380852699279785
    10. ' de' → logprob: -9.630852699279785

Token 68: 'shu' (ID: 148572)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.46144407987594604
    2. 'een' → logprob: -2.086444139480591
    3. 'ean' → logprob: -2.961444139480591
    4. '[' → logprob: -3.336444139480591
    5. '```' → logprob: -3.836444139480591
    6. 'ee' → logprob: -3.961444139480591
    7. 'queen' → logprob: -4.711443901062012
    8. 'oss' → logprob: -4.836443901062012
    9. 'ew' → logprob: -4.961443901062012
    10. 'own' → logprob: -5.211443901062012

Token 69: '(' (ID: 7)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.004962682723999
    2. 'e' → logprob: -1.379962682723999
    3. 'ef' → logprob: -2.129962682723999
    4. 'queen' → logprob: -2.754962682723999
    5. 'n' → logprob: -3.254962682723999
    6. '[n' → logprob: -3.629962682723999
    7. '[' → logprob: -3.754962682723999
    8. 'f' → logprob: -3.879962682723999
    9. ' queen' → logprob: -4.754962921142578
    10. 'eft' → logprob: -4.879962921142578

Token 70: 'queen' (ID: 153556)
  Prédit: 'queen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queen' → logprob: -1.4867050647735596
    2. 'n' → logprob: -1.6117050647735596
    3. 'y' → logprob: -2.2367050647735596
    4. 'abs' → logprob: -2.3617050647735596
    5. ' queen' → logprob: -2.3617050647735596
    6. ' y' → logprob: -2.4867050647735596
    7. 'e' → logprob: -3.2367050647735596
    8. ' ' → logprob: -3.2367050647735596
    9. ' n' → logprob: -3.8617050647735596
    10. '   ' → logprob: -4.6117048263549805

Token 71: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.009913444519042969
    2. '[n' → logprob: -4.634913444519043
    3. '[i' → logprob: -10.134913444519043
    4. '][' → logprob: -10.759913444519043
    5. '[' → logprob: -11.134913444519043
    6. '[x' → logprob: -11.259913444519043
    7. ' y' → logprob: -11.259913444519043
    8. ']' → logprob: -11.759913444519043
    9. 'y' → logprob: -11.759913444519043
    10. ',y' → logprob: -11.884913444519043

Token 72: '],' (ID: 2155)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.45566046237945557
    2. '],' → logprob: -1.8306604623794556
    3. ']-' → logprob: -2.080660343170166
    4. ']' → logprob: -2.830660343170166
    5. '])' → logprob: -4.080660343170166
    6. ']!=' → logprob: -6.205660343170166
    7. ' ]' → logprob: -7.580660343170166
    8. '])-' → logprob: -7.955660343170166
    9. ']+' → logprob: -8.080660820007324
    10. '-' → logprob: -8.205660820007324

Token 73: 'y' (ID: 88)
  Prédit: 'queen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queen' → logprob: -0.3914667069911957
    2. ' queen' → logprob: -1.141466736793518
    3. ' abs' → logprob: -6.6414666175842285
    4. ' ' → logprob: -6.8914666175842285
    5. 'abs' → logprob: -7.0164666175842285
    6. 'que' → logprob: -8.141467094421387
    7. '   ' → logprob: -8.516467094421387
    8. '  ' → logprob: -8.766467094421387
    9. ')' → logprob: -8.891467094421387
    10. ' y' → logprob: -9.516467094421387

Token 74: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6553313136100769
    2. ')==' → logprob: -0.7803313136100769
    3. ' )' → logprob: -4.155331134796143
    4. ')-' → logprob: -6.655331134796143
    5. ']==' → logprob: -6.905331134796143
    6. '-' → logprob: -7.280331134796143
    7. ')!=' → logprob: -7.280331134796143
    8. ' -' → logprob: -7.530331134796143
    9. '）' → logprob: -8.0303316116333
    10. ',' → logprob: -8.0303316116333

Token 75: 'return' (ID: 1034)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0977736711502075
    2. ')' → logprob: -2.097773551940918
    3. '       ' → logprob: -2.597773551940918
    4. '<|end|>' → logprob: -2.597773551940918
    5. '        ' → logprob: -2.847773551940918
    6. ' True' → logprob: -3.472773551940918
    7. ' return' → logprob: -3.597773551940918
    8. ' y' → logprob: -3.722773551940918
    9. '   ' → logprob: -3.722773551940918
    10. '    ' → logprob: -3.847773551940918

Token 76: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.3854445815086365
    2. 'False' → logprob: -1.2604446411132812
    3. ' True' → logprob: -3.5104446411132812
    4. 'True' → logprob: -5.135444641113281
    5. ' ' → logprob: -8.135444641113281
    6. '0' → logprob: -8.385444641113281
    7. '1' → logprob: -11.135444641113281
    8. '(False' → logprob: -12.385444641113281
    9. ' y' → logprob: -12.885444641113281
    10. ' None' → logprob: -13.635444641113281

Token 77: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7131266593933105
    2. '
' → logprob: -1.4631266593933105
    3. ')' → logprob: -2.4631266593933105
    4. 'n' → logprob: -2.9631266593933105
    5. '<|end|>' → logprob: -3.5881266593933105
    6. ',' → logprob: -4.0881266593933105
    7. '       ' → logprob: -4.3381266593933105
    8. '   ' → logprob: -4.7131266593933105
    9. '    ' → logprob: -4.8381266593933105
    10. 'def' → logprob: -5.0881266593933105

Token 78: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1689482480287552
    2. '    ' → logprob: -2.918948173522949
    3. '   ' → logprob: -3.293948173522949
    4. '       ' → logprob: -4.168948173522949
    5. '  ' → logprob: -4.543948173522949
    6. ')' → logprob: -4.793948173522949
    7. '        ' → logprob: -4.918948173522949
    8. '<|end|>' → logprob: -5.168948173522949
    9. 'def' → logprob: -5.543948173522949
    10. '+' → logprob: -6.168948173522949

Token 79: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23974473774433136
    2. '    ' → logprob: -2.4897446632385254
    3. '   ' → logprob: -3.3647446632385254
    4. 'n' → logprob: -3.3647446632385254
    5. '  ' → logprob: -4.239744663238525
    6. '       ' → logprob: -4.614744663238525
    7. ' True' → logprob: -4.614744663238525
    8. '      ' → logprob: -5.614744663238525
    9. '        ' → logprob: -5.614744663238525
    10. '     ' → logprob: -6.114744663238525

Token 80: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.12693220376968384
    2. 'True' → logprob: -2.126932144165039
    3. 'False' → logprob: -13.001932144165039
    4. ' False' → logprob: -13.876932144165039
    5. ' ' → logprob: -14.251932144165039
    6. ' ' → logprob: -15.626932144165039
    7. '(True' → logprob: -16.50193214416504
    8. '   ' → logprob: -16.87693214416504
    9. '1' → logprob: -18.25193214416504
    10. '  ' → logprob: -18.50193214416504

Token 81: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16246667504310608
    2. 'def' → logprob: -3.2874667644500732
    3. '_' → logprob: -3.5374667644500732
    4. ')' → logprob: -4.287466526031494
    5. '   ' → logprob: -4.412466526031494
    6. '<|end|>' → logprob: -4.537466526031494
    7. '[' → logprob: -4.787466526031494
    8. ':' → logprob: -4.912466526031494
    9. '    ' → logprob: -5.037466526031494
    10. '  ' → logprob: -5.162466526031494

Token 82: 'def' (ID: 1314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34497255086898804
    2. ')' → logprob: -2.469972610473633
    3. '   ' → logprob: -3.094972610473633
    4. '_' → logprob: -3.094972610473633
    5. '       ' → logprob: -3.844972610473633
    6. '<|end|>' → logprob: -3.969972610473633
    7. '  ' → logprob: -4.344972610473633
    8. 'def' → logprob: -4.469972610473633
    9. '    ' → logprob: -4.844972610473633
    10. '      ' → logprob: -5.094972610473633

Token 83: ' cr' (ID: 1769)
  Prédit: ' cr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cr' → logprob: -0.19889399409294128
    2. ' check' → logprob: -1.9488940238952637
    3. 'cr' → logprob: -3.5738940238952637
    4. ' valid' → logprob: -6.573894023895264
    5. ' is' → logprob: -6.698894023895264
    6. ' ' → logprob: -6.948894023895264
    7. ' safe' → logprob: -6.948894023895264
    8. 'check' → logprob: -7.198894023895264
    9. ' solve' → logprob: -7.323894023895264
    10. ' can' → logprob: -7.448894023895264

Token 84: 'shu' (ID: 148572)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.3607524037361145
    2. 'sh' → logprob: -2.1107523441314697
    3. 'ash' → logprob: -2.3607523441314697
    4. 'shu' → logprob: -3.2357523441314697
    5. '```' → logprob: -4.985752582550049
    6. 'e' → logprob: -5.110752582550049
    7. 'osh' → logprob: -5.235752582550049
    8. 'esh' → logprob: -5.610752582550049
    9. 's' → logprob: -5.610752582550049
    10. 'y' → logprob: -5.985752582550049

Token 85: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.08199618756771088
    2. '(a' → logprob: -3.081996202468872
    3. '(q' → logprob: -4.081995964050293
    4. '(' → logprob: -4.956995964050293
    5. '(i' → logprob: -5.956995964050293
    6. '(y' → logprob: -6.206995964050293
    7. '(p' → logprob: -6.331995964050293
    8. '(pos' → logprob: -7.081995964050293
    9. '(px' → logprob: -8.081995964050293
    10. '(c' → logprob: -8.206995964050293

Token 86: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.016317985951900482
    2. ',' → logprob: -4.141317844390869
    3. ',n' → logprob: -9.766318321228027
    4. '1' → logprob: -9.766318321228027
    5. ',x' → logprob: -9.766318321228027
    6. ' ,' → logprob: -10.641318321228027
    7. 'y' → logprob: -11.266318321228027
    8. ',k' → logprob: -11.391318321228027
    9. ',j' → logprob: -11.391318321228027
    10. ',i' → logprob: -11.391318321228027

Token 87: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0897475928068161
    2. ',' → logprob: -2.589747667312622
    3. ',n' → logprob: -5.589747428894043
    4. ')' → logprob: -6.339747428894043
    5. ',x' → logprob: -6.339747428894043
    6. ',y' → logprob: -7.339747428894043
    7. ' ):' → logprob: -7.339747428894043
    8. ' ,' → logprob: -7.464747428894043
    9. ',i' → logprob: -7.964747428894043
    10. ',k' → logprob: -7.964747428894043

Token 88: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2949639558792114
    2. '   ' → logprob: -1.5449639558792114
    3. 'for' → logprob: -3.169963836669922
    4. '	for' → logprob: -10.169963836669922
    5. ' ' → logprob: -10.419963836669922
    6. '  ' → logprob: -10.419963836669922
    7. '    ' → logprob: -11.794963836669922
    8. ' return' → logprob: -12.544963836669922
    9. '<|end|>' → logprob: -13.919963836669922
    10. 'abs' → logprob: -14.044963836669922

Token 89: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.052039310336112976
    2. ' for' → logprob: -3.052039384841919
    3. '   ' → logprob: -5.67703914642334
    4. ' ' → logprob: -11.55203914642334
    5. '	for' → logprob: -12.55203914642334
    6. 'return' → logprob: -12.67703914642334
    7. 'if' → logprob: -13.55203914642334
    8. 'global' → logprob: -13.55203914642334
    9. '  ' → logprob: -13.80203914642334
    10. '    ' → logprob: -14.55203914642334

Token 90: ' y' (ID: 342)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.09756156802177429
    2. 'i' → logprob: -2.8475615978240967
    3. ' j' → logprob: -4.347561359405518
    4. ' n' → logprob: -5.347561359405518
    5. ' z' → logprob: -5.722561359405518
    6. ' k' → logprob: -6.097561359405518
    7. ' ' → logprob: -6.222561359405518
    8. 'j' → logprob: -6.472561359405518
    9. ' y' → logprob: -6.972561359405518
    10. ' x' → logprob: -6.972561359405518

Token 91: '1' (ID: 16)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14832943677902222
    2. '2' → logprob: -2.773329496383667
    3. '1' → logprob: -2.898329496383667
    4. '+' → logprob: -4.398329257965088
    5. ',' → logprob: -6.023329257965088
    6. '0' → logprob: -7.023329257965088
    7. 'range' → logprob: -7.398329257965088
    8. '_' → logprob: -7.523329257965088
    9. ' ' → logprob: -7.648329257965088
    10. 'in' → logprob: -7.898329257965088

Token 92: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01221905741840601
    2. ',' → logprob: -5.012218952178955
    3. ',y' → logprob: -5.637218952178955
    4. 'in' → logprob: -7.012218952178955
    5. ',n' → logprob: -7.637218952178955
    6. ',x' → logprob: -8.512219429016113
    7. ' ,' → logprob: -8.887219429016113
    8. ' ' → logprob: -10.512219429016113
    9. 'n' → logprob: -11.137219429016113
    10. 'range' → logprob: -11.387219429016113

Token 93: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16023509204387665
    2. 'range' → logprob: -1.910235047340393
    3. '(range' → logprob: -12.410235404968262
    4. ' ' → logprob: -13.035235404968262
    5. '	range' → logprob: -13.285235404968262
    6. '  ' → logprob: -13.660235404968262
    7. '   ' → logprob: -14.410235404968262
    8. ' xrange' → logprob: -14.910235404968262
    9. 'rang' → logprob: -15.910235404968262
    10. '    ' → logprob: -16.160234451293945

Token 94: '(y' (ID: 14684)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.043508801609277725
    2. '8' → logprob: -3.543508768081665
    3. 'len' → logprob: -4.418509006500244
    4. 'N' → logprob: -6.793509006500244
    5. 'n' → logprob: -8.168508529663086
    6. ' y' → logprob: -9.418508529663086
    7. 'x' → logprob: -9.793508529663086
    8. '(y' → logprob: -10.293508529663086
    9. '7' → logprob: -12.043508529663086
    10. '(len' → logprob: -12.168508529663086

Token 95: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023494234308600426
    2. '+' → logprob: -3.898494243621826
    3. '):
' → logprob: -6.398494243621826
    4. ' ):' → logprob: -8.273493766784668
    5. ' y' → logprob: -8.398493766784668
    6. '+y' → logprob: -8.398493766784668
    7. 'y' → logprob: -8.773493766784668
    8. '   ' → logprob: -9.398493766784668
    9. ' +' → logprob: -9.398493766784668
    10. ')' → logprob: -9.648493766784668

Token 96: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009677469730377197
    2. ' if' → logprob: -4.884677410125732
    3. '<|end|>' → logprob: -7.259677410125732
    4. ' ' → logprob: -8.13467788696289
    5. ',' → logprob: -8.38467788696289
    6. ' x' → logprob: -8.88467788696289
    7. '
' → logprob: -8.88467788696289
    8. 'if' → logprob: -8.88467788696289
    9. '   ' → logprob: -9.13467788696289
    10. '1' → logprob: -10.13467788696289

Token 97: ' x' (ID: 1215)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5819264650344849
    2. '       ' → logprob: -1.4569264650344849
    3. 'if' → logprob: -1.5819264650344849
    4. '   ' → logprob: -6.581926345825195
    5. ' ' → logprob: -7.331926345825195
    6. ' x' → logprob: -8.706926345825195
    7. '```' → logprob: -9.206926345825195
    8. 'x' (adapté à ' x') → logprob: -9.581926345825195
    9. '	if' → logprob: -10.081926345825195
    10. '  ' → logprob: -10.581926345825195

Token 98: '1' (ID: 16)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.40966418385505676
    2. '1' → logprob: -2.1596641540527344
    3. '!=' → logprob: -2.4096641540527344
    4. '=' → logprob: -2.5346641540527344
    5. ']==' → logprob: -4.284664154052734
    6. '-' → logprob: -4.659664154052734
    7. ' ==' → logprob: -5.159664154052734
    8. ',' → logprob: -6.034664154052734
    9. ')==' → logprob: -6.409664154052734
    10. 'diff' → logprob: -6.659664154052734

Token 99: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2399131804704666
    2. ' =' → logprob: -1.8649132251739502
    3. ',' → logprob: -2.98991322517395
    4. ',x' → logprob: -5.614912986755371
    5. '=x' → logprob: -7.364912986755371
    6. ' ' → logprob: -7.489912986755371
    7. ' ,' → logprob: -7.489912986755371
    8. ' in' → logprob: -7.614912986755371
    9. ',y' → logprob: -7.989912986755371
    10. '   ' → logprob: -7.989912986755371

Token 100: 'queen' (ID: 153556)
  Prédit: 'queen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queen' → logprob: -0.0011777279432862997
    2. ' queen' → logprob: -6.751177787780762
    3. 'que' → logprob: -12.251177787780762
    4. '   ' → logprob: -13.626177787780762
    5. ' ' → logprob: -14.251177787780762
    6. '  ' → logprob: -14.876177787780762
    7. 'queue' → logprob: -15.501177787780762
    8. 'king' → logprob: -15.626177787780762
    9. '```' → logprob: -17.001176834106445
    10. '    ' → logprob: -17.626176834106445

Token 101: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -9.491498531133402e-06
    2. 'y' → logprob: -11.875009536743164
    3. '[' → logprob: -13.250009536743164
    4. '[x' → logprob: -14.500009536743164
    5. '[
' → logprob: -16.250009536743164
    6. '```' → logprob: -17.375009536743164
    7. ' [' → logprob: -17.625009536743164
    8. ' y' → logprob: -18.375009536743164
    9. '[z' → logprob: -18.750009536743164
    10. '[user' → logprob: -18.875009536743164

Token 102: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ']' → logprob: -14.750000953674316
    3. '۱' → logprob: -17.5
    4. '１' → logprob: -17.75
    5. '<|end|>' → logprob: -17.75
    6. '```' → logprob: -17.875
    7. '१' → logprob: -18.4375
    8. ' ' → logprob: -18.5625
    9. '১' → logprob: -19.125
    10. ']>' → logprob: -19.625

Token 103: ']
' (ID: 1592)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03306944668292999
    2. ')
' → logprob: -4.533069610595703
    3. ')' → logprob: -4.658069610595703
    4. '
' → logprob: -5.033069610595703
    5. ' if' → logprob: -6.033069610595703
    6. '   ' → logprob: -6.408069610595703
    7. 'if' → logprob: -7.658069610595703
    8. ',' → logprob: -8.283069610595703
    9. ' ' → logprob: -8.283069610595703
    10. '        
' → logprob: -9.158069610595703

Token 104: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007706748438067734
    2. ' if' → logprob: -7.375770568847656
    3. '
' → logprob: -9.500770568847656
    4. 'if' → logprob: -10.625770568847656
    5. ' ' → logprob: -11.500770568847656
    6. '        
' → logprob: -11.625770568847656
    7. '  
' → logprob: -11.875770568847656
    8. '   ' → logprob: -12.000770568847656
    9. ',' → logprob: -12.250770568847656
    10. '      ' → logprob: -13.500770568847656

Token 105: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8622205853462219
    2. ' if' → logprob: -0.8622205853462219
    3. 'if' (adapté à ' if') → logprob: -1.8622205257415771
    4. '
' → logprob: -9.362220764160156
    5. ' ' → logprob: -10.362220764160156
    6. '```' → logprob: -10.487220764160156
    7. '   ' → logprob: -10.612220764160156
    8. ' x' → logprob: -11.237220764160156
    9. '	if' → logprob: -11.487220764160156
    10. 'x' → logprob: -12.237220764160156

Token 106: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.583710789680481
    2. 'abs' → logprob: -1.333710789680481
    3. ' abs' → logprob: -2.0837106704711914
    4. ' x' → logprob: -2.9587106704711914
    5. '(abs' → logprob: -6.708710670471191
    6. '(x' → logprob: -7.708710670471191
    7. '   ' → logprob: -8.083710670471191
    8. ' ' → logprob: -9.083710670471191
    9. '  ' → logprob: -10.083710670471191
    10. 'y' → logprob: -10.083710670471191

Token 107: '1' (ID: 16)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.41603884100914
    2. ' ==' → logprob: -1.2910388708114624
    3. ' -' → logprob: -3.166038751602173
    4. '-' → logprob: -4.041038990020752
    5. '-x' → logprob: -6.166038990020752
    6. '+' → logprob: -6.416038990020752
    7. ']==' → logprob: -7.541038990020752
    8. '1' → logprob: -7.791038990020752
    9. ' +' → logprob: -8.416038513183594
    10. ' ' → logprob: -8.791038513183594

Token 108: '-y' (ID: 18102)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0370166078209877
    2. ' ==' → logprob: -4.28701639175415
    3. '-' → logprob: -4.41201639175415
    4. '+' → logprob: -5.53701639175415
    5. '!=' → logprob: -5.78701639175415
    6. ' -' → logprob: -6.28701639175415
    7. '-x' → logprob: -7.41201639175415
    8. ']==' → logprob: -7.78701639175415
    9. '==-' → logprob: -8.912016868591309
    10. '+x' → logprob: -9.037016868591309

Token 109: '1' (ID: 16)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4950602054595947
    2. ' ==' → logprob: -1.6200602054595947
    3. '1' → logprob: -2.2450602054595947
    4. ']==' → logprob: -3.1200602054595947
    5. 'x' → logprob: -4.745059967041016
    6. ')==' → logprob: -4.995059967041016
    7. ']' → logprob: -5.745059967041016
    8. '[' → logprob: -5.995059967041016
    9. ' ' → logprob: -6.120059967041016
    10. '-x' → logprob: -6.245059967041016

Token 110: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.001728372066281736
    2. ' ==' → logprob: -6.376728534698486
    3. ']==' → logprob: -11.376728057861328
    4. '==
' → logprob: -12.126728057861328
    5. ')==' → logprob: -13.001728057861328
    6. '===' → logprob: -13.126728057861328
    7. '=' → logprob: -13.626728057861328
    8. '==(' → logprob: -13.751728057861328
    9. 'x' → logprob: -14.001728057861328
    10. '=x' → logprob: -14.876728057861328

Token 111: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.38691645860671997
    2. ' x' → logprob: -1.1369163990020752
    3. '	x' → logprob: -10.511916160583496
    4. ' ' → logprob: -12.011916160583496
    5. '(x' → logprob: -12.636916160583496
    6. '   ' → logprob: -12.761916160583496
    7. ')x' → logprob: -13.511916160583496
    8. '>x' → logprob: -13.511916160583496
    9. '  ' → logprob: -14.011916160583496
    10. '    ' → logprob: -14.261916160583496

Token 112: '-y' (ID: 18102)
  Prédit: '-y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-y' → logprob: -0.03845958411693573
    2. ' -' → logprob: -3.288459539413452
    3. '-' → logprob: -7.788459777832031
    4. 'y' → logprob: -13.288459777832031
    5. '-x' → logprob: -14.038459777832031
    6. '   ' → logprob: -15.038459777832031
    7. ' ' → logprob: -15.288459777832031
    8. ' y' → logprob: -16.16345977783203
    9. '-u' → logprob: -16.91345977783203
    10. '-Y' → logprob: -16.91345977783203

Token 113: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.00016146517009474337
    2. 'or' → logprob: -9.375161170959473
    3. ' ' → logprob: -9.875161170959473
    4. '	or' → logprob: -12.000161170959473
    5. '<|end|>' → logprob: -12.250161170959473
    6. ':' → logprob: -13.000161170959473
    7. ' and' → logprob: -13.125161170959473
    8. '       ' → logprob: -13.375161170959473
    9. ')' → logprob: -13.625161170959473
    10. '   ' → logprob: -13.875161170959473

Token 114: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04745787754654884
    2. 'abs' → logprob: -3.4224579334259033
    3. ' x' → logprob: -4.547457695007324
    4. ' abs' → logprob: -6.672457695007324
    5. '   ' → logprob: -6.797457695007324
    6. '    ' → logprob: -7.922457695007324
    7. '       ' → logprob: -8.922457695007324
    8. '  ' → logprob: -9.672457695007324
    9. ' ' → logprob: -10.047457695007324
    10. '     ' → logprob: -10.547457695007324

Token 115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00048191213863901794
    2. '+y' → logprob: -8.250481605529785
    3. '+x' → logprob: -9.500481605529785
    4. '+' → logprob: -10.125481605529785
    5. '-x' → logprob: -10.250481605529785
    6. '-y' → logprob: -10.750481605529785
    7. ' -' → logprob: -10.875481605529785
    8. '-' → logprob: -12.250481605529785
    9. '```' → logprob: -12.500481605529785
    10. ' ' → logprob: -12.937981605529785

Token 116: '+y' (ID: 102753)
  Prédit: '+y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+y' → logprob: -0.004434628412127495
    2. '+' → logprob: -5.754434585571289
    3. ' +' → logprob: -7.004434585571289
    4. '+x' → logprob: -8.129434585571289
    5. '-y' → logprob: -11.754434585571289
    6. 'y' → logprob: -12.254434585571289
    7. '+
' → logprob: -12.379434585571289
    8. '<|end|>' → logprob: -12.504434585571289
    9. '+h' → logprob: -12.504434585571289
    10. '+a' → logprob: -13.004434585571289

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00332516897469759
    2. 'y' → logprob: -6.25332498550415
    3. '[y' → logprob: -7.12832498550415
    4. '[' → logprob: -8.503325462341309
    5. ' y' → logprob: -9.253325462341309
    6. '+y' → logprob: -9.378325462341309
    7. '<|end|>' → logprob: -9.628325462341309
    8. '```' → logprob: -10.128325462341309
    9. ''y' → logprob: -10.878325462341309
    10. '   ' → logprob: -11.503325462341309

Token 118: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.005976554471999407
    2. ' ==' → logprob: -5.130976676940918
    3. ']==' → logprob: -10.505976676940918
    4. ')==' → logprob: -11.630976676940918
    5. '==
' → logprob: -12.005976676940918
    6. '==(' → logprob: -13.130976676940918
    7. '===' → logprob: -13.880976676940918
    8. '==-' → logprob: -14.505976676940918
    9. '=' → logprob: -14.630976676940918
    10. '=y' → logprob: -14.880976676940918

Token 119: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.007617745082825422
    2. ' x' → logprob: -4.882617950439453
    3. '<|end|>' → logprob: -12.132617950439453
    4. 'y' → logprob: -12.382617950439453
    5. '(x' → logprob: -14.257617950439453
    6. ' y' → logprob: -14.632617950439453
    7. ' ' → logprob: -15.007617950439453
    8. '	x' → logprob: -15.382617950439453
    9. '[x' → logprob: -16.132617950439453
    10. '  ' → logprob: -16.257617950439453

Token 120: '+y' (ID: 102753)
  Prédit: '+y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+y' → logprob: -0.011122682131826878
    2. 'y' → logprob: -5.136122703552246
    3. '-y' → logprob: -5.636122703552246
    4. '+' → logprob: -7.386122703552246
    5. ' +' → logprob: -7.886122703552246
    6. ' y' → logprob: -8.386122703552246
    7. '+x' → logprob: -8.636122703552246
    8. '1' → logprob: -9.386122703552246
    9. ' -' → logprob: -9.886122703552246
    10. '-' → logprob: -11.011122703552246

Token 121: ':return' (ID: 188357)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.466413289308548
    2. ':return' → logprob: -1.0914132595062256
    3. ':
' → logprob: -3.9664132595062256
    4. ' or' → logprob: -4.341413497924805
    5. '       ' → logprob: -5.466413497924805
    6. ' return' → logprob: -8.091413497924805
    7. ' :' → logprob: -8.966413497924805
    8. '           ' → logprob: -9.216413497924805
    9. ')return' → logprob: -9.716413497924805
    10. '   ' → logprob: -10.216413497924805

Token 122: ' True' (ID: 6432)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0053202081471681595
    2. ' False' → logprob: -5.255320072174072
    3. 'True' → logprob: -9.38032054901123
    4. ' True' → logprob: -13.13032054901123
    5. '(False' → logprob: -17.505319595336914
    6. ' ' → logprob: -17.880319595336914
    7. '0' → logprob: -19.005319595336914
    8. '   ' → logprob: -19.630319595336914
    9. '=False' → logprob: -19.755319595336914
    10. 'F' → logprob: -19.880319595336914

Token 123: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01684805192053318
    2. '       ' → logprob: -4.141848087310791
    3. ' return' → logprob: -7.641848087310791
    4. '	return' → logprob: -9.641847610473633
    5. ' ' → logprob: -9.766847610473633
    6. '<|end|>' → logprob: -9.766847610473633
    7. ',' → logprob: -10.391847610473633
    8. '    
' → logprob: -10.641847610473633
    9. '        
' → logprob: -11.016847610473633
    10. '  ' → logprob: -11.141847610473633

Token 124: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027982328087091446
    2. '       ' → logprob: -4.152982234954834
    3. ' return' → logprob: -5.277982234954834
    4. ' ' → logprob: -5.777982234954834
    5. '	return' → logprob: -6.527982234954834
    6. '<|end|>' → logprob: -8.027982711791992
    7. '  ' → logprob: -8.152982711791992
    8. '    
' → logprob: -8.152982711791992
    9. '  
' → logprob: -8.277982711791992
    10. '
' → logprob: -8.277982711791992

Token 125: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.31896844506263733
    2. ' return' → logprob: -1.693968415260315
    3. '   ' → logprob: -2.4439685344696045
    4. 'False' → logprob: -6.818968296051025
    5. ' ' → logprob: -7.693968296051025
    6. '       ' → logprob: -8.193968772888184
    7. 'None' → logprob: -8.318968772888184
    8. '	return' → logprob: -9.443968772888184
    9. ' False' → logprob: -9.443968772888184
    10. '  ' → logprob: -9.568968772888184

Token 126: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.01815907657146454
    2. ' False' → logprob: -4.018158912658691
    3. 'True' → logprob: -11.643158912658691
    4. ' True' → logprob: -14.893158912658691
    5. '(False' → logprob: -19.143159866333008
    6. '   ' → logprob: -19.393159866333008
    7. 'None' → logprob: -19.768159866333008
    8. ' ' → logprob: -21.518159866333008
    9. '[]' → logprob: -22.393159866333008
    10. 'F' → logprob: -22.518159866333008

Token 127: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 128: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0059353113174438
    2. ' ' → logprob: -1.5059353113174438
    3. '<|end|>' → logprob: -2.0059351921081543
    4. ' def' → logprob: -2.7559351921081543
    5. ' 
' → logprob: -2.7559351921081543
    6. '   ' → logprob: -3.3809351921081543
    7. '
' → logprob: -3.6309351921081543
    8. ')' → logprob: -4.005935192108154
    9. ' if' → logprob: -4.380935192108154
    10. ',' → logprob: -4.880935192108154

Token 129: ' board' (ID: 6796)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.8466087579727173
    2. ' dfs' → logprob: -0.9716087579727173
    3. ' back' → logprob: -2.4716086387634277
    4. ' main' → logprob: -3.3466086387634277
    5. ' search' → logprob: -3.5966086387634277
    6. ' put' → logprob: -4.971608638763428
    7. ' place' → logprob: -5.096608638763428
    8. ' n' → logprob: -5.346608638763428
    9. 'dfs' → logprob: -5.846608638763428
    10. ' ' → logprob: -5.971608638763428

Token 130: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.80418860912323
    2. '(' → logprob: -0.92918860912323
    3. '(n' → logprob: -2.3041887283325195
    4. '(size' → logprob: -3.1791887283325195
    5. '(N' → logprob: -4.9291887283325195
    6. '(x' → logprob: -5.5541887283325195
    7. '():
' → logprob: -6.5541887283325195
    8. '(board' → logprob: -7.3041887283325195
    9. '()' → logprob: -7.4291887283325195
    10. '_print' → logprob: -7.8041887283325195

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38814300298690796
    2. ' for' → logprob: -1.1381430625915527
    3. ' print' → logprob: -7.013143062591553
    4. 'for' → logprob: -9.138142585754395
    5. ' s' → logprob: -9.638142585754395
    6. ' global' → logprob: -10.138142585754395
    7. ' output' → logprob: -10.638142585754395
    8. ' res' → logprob: -10.763142585754395
    9. '    ' → logprob: -11.013142585754395
    10. ' ' → logprob: -11.138142585754395

Token 132: ' king' (ID: 13793)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0626840740442276
    2. ' for' → logprob: -3.9376840591430664
    3. 'res' → logprob: -3.9376840591430664
    4. 'print' → logprob: -4.687684059143066
    5. 'ans' → logprob: -5.937684059143066
    6. 'global' → logprob: -6.187684059143066
    7. 'board' → logprob: -6.562684059143066
    8. '   ' → logprob: -6.812684059143066
    9. ' res' → logprob: -7.062684059143066
    10. 's' → logprob: -7.062684059143066

Token 133: '=[]
' (ID: 63466)
  Prédit: '=['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.35902073979377747
    2. '=[]' → logprob: -1.609020709991455
    3. '=' → logprob: -3.609020709991455
    4. '=[]
' → logprob: -3.859020709991455
    5. '[' → logprob: -4.734020709991455
    6. ' =' → logprob: -4.859020709991455
    7. 's' → logprob: -4.984020709991455
    8. '=['' → logprob: -5.109020709991455
    9. '=[
' → logprob: -5.359020709991455
    10. '_positions' → logprob: -5.359020709991455

Token 134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13535474240779877
    2. ' for' → logprob: -2.51035475730896
    3. 'for' → logprob: -3.13535475730896
    4. '	for' → logprob: -7.510354518890381
    5. ' ' → logprob: -8.135354995727539
    6. '(' → logprob: -8.760354995727539
    7. '       ' → logprob: -8.885354995727539
    8. '    
' → logprob: -8.885354995727539
    9. '\t' → logprob: -8.885354995727539
    10. 'def' → logprob: -9.760354995727539

Token 135: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6945229768753052
    2. 'for' (adapté à ' for') → logprob: -0.6945229768753052
    3. '   ' → logprob: -6.819522857666016
    4. ' ' → logprob: -9.194522857666016
    5. ' global' → logprob: -10.194522857666016
    6. 'global' → logprob: -10.944522857666016
    7. 'result' → logprob: -11.194522857666016
    8. 'return' → logprob: -11.569522857666016
    9. ' result' → logprob: -11.694522857666016
    10. ' king' → logprob: -11.944522857666016

Token 136: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7259877324104309
    2. ' i' → logprob: -0.7259877324104309
    3. 'x' → logprob: -4.475987911224365
    4. ' x' → logprob: -4.850987911224365
    5. ' y' → logprob: -5.600987911224365
    6. 'y' → logprob: -5.850987911224365
    7. ' range' → logprob: -6.600987911224365
    8. 'range' → logprob: -6.975987911224365
    9. '_' → logprob: -7.100987911224365
    10. ' _' → logprob: -7.475987911224365

Token 137: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12730592489242554
    2. 'in' → logprob: -2.1273059844970703
    3. ' ' → logprob: -8.87730598449707
    4. 'range' → logprob: -9.25230598449707
    5. 'n' → logprob: -9.75230598449707
    6. '   ' → logprob: -10.50230598449707
    7. '    ' → logprob: -11.12730598449707
    8. ' range' → logprob: -11.50230598449707
    9. '  ' → logprob: -12.00230598449707
    10. '0' → logprob: -12.25230598449707

Token 138: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0008765661623328924
    2. ' range' → logprob: -7.125876426696777
    3. 'queen' → logprob: -10.125876426696777
    4. 'board' → logprob: -11.125876426696777
    5. 'ran' → logprob: -12.750876426696777
    6. 'king' → logprob: -13.250876426696777
    7. '[' → logprob: -13.375876426696777
    8. 'rang' → logprob: -13.500876426696777
    9. ' ' → logprob: -13.750876426696777
    10. '   ' → logprob: -14.000876426696777

Token 139: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2024606168270111
    2. '8' → logprob: -1.7024606466293335
    3. '(N' → logprob: -7.577460765838623
    4. 'N' → logprob: -8.702460289001465
    5. 'range' → logprob: -8.702460289001465
    6. '(len' → logprob: -9.452460289001465
    7. '9' → logprob: -10.327460289001465
    8. '7' → logprob: -10.952460289001465
    9. 'len' → logprob: -11.702460289001465
    10. '(-' → logprob: -11.827460289001465

Token 140: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.01009933091700077
    2. 'N' → logprob: -4.635099411010742
    3. '1' → logprob: -9.135099411010742
    4. 'len' → logprob: -9.260099411010742
    5. '7' → logprob: -9.885099411010742
    6. '9' → logprob: -11.010099411010742
    7. '4' → logprob: -11.635099411010742
    8. '0' → logprob: -11.635099411010742
    9. ' ' → logprob: -12.010099411010742
    10. '-' → logprob: -12.260099411010742

Token 141: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.02384001389145851
    2. '):' → logprob: -3.7738399505615234
    3. '   ' → logprob: -7.648839950561523
    4. ')' → logprob: -10.273839950561523
    5. '):
' → logprob: -10.398839950561523
    6. ' ' → logprob: -11.398839950561523
    7. ',' → logprob: -11.773839950561523
    8. ' ):
' → logprob: -11.773839950561523
    9. '       ' → logprob: -12.023839950561523
    10. ':
' → logprob: -12.648839950561523

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020714255049824715
    2. '   ' → logprob: -4.270714282989502
    3. ' king' → logprob: -6.020714282989502
    4. '	   ' → logprob: -6.645714282989502
    5. '	       ' → logprob: -7.395714282989502
    6. '<|end|>' → logprob: -7.895714282989502
    7. ' if' → logprob: -8.020713806152344
    8. '    ' → logprob: -8.145713806152344
    9. ' for' → logprob: -8.270713806152344
    10. ',' → logprob: -8.770713806152344

Token 143: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' (adapté à ' king') → logprob: -0.9385826587677002
    2. 'row' → logprob: -1.3135826587677002
    3. ' king' → logprob: -2.1885826587677
    4. '   ' → logprob: -2.8135826587677
    5. 'for' → logprob: -3.1885826587677
    6. 'line' → logprob: -3.1885826587677
    7. 'if' → logprob: -3.3135826587677
    8. ' row' → logprob: -3.4385826587677
    9. ' for' → logprob: -5.188582420349121
    10. 's' → logprob: -5.438582420349121

Token 144: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.018303167074918747
    2. '=[]' → logprob: -4.393303394317627
    3. '=' → logprob: -5.643303394317627
    4. '=[' → logprob: -7.018303394317627
    5. '.' → logprob: -7.393303394317627
    6. '+' → logprob: -8.393302917480469
    7. '+=' → logprob: -8.768302917480469
    8. 'append' → logprob: -8.893302917480469
    9. '.extend' → logprob: -8.893302917480469
    10. '=[]
' → logprob: -10.643302917480469

Token 145: '([' (ID: 5194)
  Prédit: '('.')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('.')' → logprob: -1.1992626190185547
    2. '(".' → logprob: -1.6992626190185547
    3. '(['' → logprob: -1.9492626190185547
    4. '(' → logprob: -2.1992626190185547
    5. '('' → logprob: -2.3242626190185547
    6. '(["' → logprob: -3.0742626190185547
    7. '("."' → logprob: -3.1992626190185547
    8. '("' → logprob: -3.4492626190185547
    9. '('.' → logprob: -3.8242626190185547
    10. '([' → logprob: -4.699262619018555

Token 146: 'i' (ID: 72)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.34505724906921387
    2. '".' → logprob: -1.5950572490692139
    3. '0' → logprob: -3.220057249069214
    4. ''' → logprob: -3.595057249069214
    5. '"' → logprob: -4.345057487487793
    6. '"."' → logprob: -5.470057487487793
    7. ''*' → logprob: -6.720057487487793
    8. '"*' → logprob: -7.220057487487793
    9. ''-' → logprob: -7.345057487487793
    10. 'False' → logprob: -7.845057487487793

Token 147: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2205951064825058
    2. 'for' → logprob: -2.345595121383667
    3. ']*' → logprob: -2.470595121383667
    4. ']' → logprob: -4.345594882965088
    5. '   ' → logprob: -6.720594882965088
    6. '+' → logprob: -7.095594882965088
    7. '*' → logprob: -7.595594882965088
    8. ' ]' → logprob: -7.845594882965088
    9. ',' → logprob: -7.970594882965088
    10. ']+' → logprob: -8.470595359802246

Token 148: 'queen' (ID: 153556)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.35709288716316223
    2. 'j' → logprob: -1.8570928573608398
    3. 'i' → logprob: -2.23209285736084
    4. '7' → logprob: -4.60709285736084
    5. 'queen' → logprob: -4.73209285736084
    6. '8' → logprob: -4.85709285736084
    7. '-' → logprob: -5.60709285736084
    8. ' ' → logprob: -5.85709285736084
    9. ' i' → logprob: -7.23209285736084
    10. ' j' → logprob: -7.60709285736084

Token 149: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.8889261304575484e-06
    2. '[' → logprob: -12.875003814697266
    3. 'i' → logprob: -14.000003814697266
    4. ']' → logprob: -15.375003814697266
    5. '])' → logprob: -15.875003814697266
    6. ' [' → logprob: -16.500003814697266
    7. '][' → logprob: -17.750003814697266
    8. '[
' → logprob: -18.000003814697266
    9. '```' → logprob: -18.250003814697266
    10. '[I' → logprob: -18.375003814697266

Token 150: ']])
' (ID: 62818)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.10790564119815826
    2. ')])' → logprob: -2.732905626296997
    3. ']])' → logprob: -3.357905626296997
    4. '])]' → logprob: -6.357905864715576
    5. ']))' → logprob: -8.357905387878418
    6. ' ])' → logprob: -8.482905387878418
    7. ')' → logprob: -8.982905387878418
    8. ']' → logprob: -9.482905387878418
    9. '])
' → logprob: -10.982905387878418
    10. '[' → logprob: -11.732905387878418

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01383577473461628
    2. ' return' → logprob: -5.013835906982422
    3. ' for' → logprob: -6.263835906982422
    4. '
' → logprob: -6.388835906982422
    5. '<|end|>' → logprob: -6.638835906982422
    6. 'return' → logprob: -7.013835906982422
    7. ' ' → logprob: -7.388835906982422
    8. '	return' → logprob: -8.888835906982422
    9. '[' → logprob: -9.513835906982422
    10. '  ' → logprob: -9.513835906982422

Token 152: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2627153396606445
    2. ' return' → logprob: -1.2627153396606445
    3. ' for' → logprob: -1.3877153396606445
    4. 'return' → logprob: -2.0127153396606445
    5. 'for' (adapté à ' for') → logprob: -3.1377153396606445
    6. ' king' → logprob: -6.3877153396606445
    7. ' ' → logprob: -7.3877153396606445
    8. 'king' → logprob: -7.3877153396606445
    9. 'def' → logprob: -7.7627153396606445
    10. 'print' → logprob: -7.8877153396606445

Token 153: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.17457939684391022
    2. 'i' → logprob: -2.299579381942749
    3. ' row' → logprob: -3.799579381942749
    4. ' king' → logprob: -4.799579620361328
    5. 'row' → logprob: -4.924579620361328
    6. ' j' → logprob: -5.174579620361328
    7. ' x' → logprob: -5.799579620361328
    8. 'king' → logprob: -5.924579620361328
    9. ' r' → logprob: -6.424579620361328
    10. 'j' → logprob: -6.424579620361328

Token 154: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05128908529877663
    2. 'in' → logprob: -3.0512890815734863
    3. 'range' → logprob: -6.551289081573486
    4. ' range' → logprob: -7.426289081573486
    5. '(' → logprob: -7.551289081573486
    6. ' ' → logprob: -9.426289558410645
    7. '(range' → logprob: -10.676289558410645
    8. ' (' → logprob: -11.176289558410645
    9. '   ' → logprob: -11.676289558410645
    10. '```' → logprob: -12.051289558410645

Token 155: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005309535190463066
    2. ' range' → logprob: -5.380309581756592
    3. 'king' → logprob: -7.505309581756592
    4. 'board' → logprob: -9.380309104919434
    5. 'de' → logprob: -10.755309104919434
    6. ' king' → logprob: -11.130309104919434
    7. '[' → logprob: -11.880309104919434
    8. 'queen' → logprob: -13.255309104919434
    9. 'ran' → logprob: -13.755309104919434
    10. ' ' → logprob: -13.755309104919434

Token 156: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005054924986325204
    2. '(len' → logprob: -8.250505447387695
    3. '8' → logprob: -9.125505447387695
    4. '(N' → logprob: -9.500505447387695
    5. '(range' → logprob: -10.875505447387695
    6. 'range' → logprob: -10.875505447387695
    7. '((' → logprob: -11.625505447387695
    8. '(i' → logprob: -13.375505447387695
    9. '(de' → logprob: -13.375505447387695
    10. '(-' → logprob: -13.500505447387695

Token 157: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.0009091986576095223
    2. '1' → logprob: -8.125908851623535
    3. 'N' → logprob: -8.375908851623535
    4. '7' → logprob: -8.500908851623535
    5. 'len' → logprob: -9.500908851623535
    6. '64' → logprob: -10.500908851623535
    7. '0' → logprob: -11.125908851623535
    8. '(' → logprob: -11.125908851623535
    9. ' ' → logprob: -11.500908851623535
    10. '
' → logprob: -11.875908851623535

Token 158: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5790086984634399
    2. '):' → logprob: -0.8290086984634399
    3. '   ' → logprob: -6.45400857925415
    4. '       ' → logprob: -7.70400857925415
    5. '-' → logprob: -7.95400857925415
    6. ')' → logprob: -8.329009056091309
    7. ':' → logprob: -8.954009056091309
    8. ',' → logprob: -9.329009056091309
    9. '):
' → logprob: -9.704009056091309
    10. ' ' → logprob: -9.829009056091309

Token 159: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027800779789686203
    2. '   ' → logprob: -4.277800559997559
    3. ' for' → logprob: -4.402800559997559
    4. ' print' → logprob: -7.027800559997559
    5. '    ' → logprob: -9.027800559997559
    6. '           ' → logprob: -9.527800559997559
    7. 'print' → logprob: -10.027800559997559
    8. 'for' → logprob: -10.652800559997559
    9. ' if' → logprob: -10.777800559997559
    10. '     ' → logprob: -10.902800559997559

Token 160: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1435922384262085
    2. 'for' (adapté à ' for') → logprob: -1.1435922384262085
    3. ' for' → logprob: -1.3935922384262085
    4. ' print' → logprob: -2.643592357635498
    5. '   ' → logprob: -3.518592357635498
    6. 'if' → logprob: -4.643592357635498
    7. ' if' → logprob: -5.643592357635498
    8. '    ' → logprob: -8.14359188079834
    9. '       ' → logprob: -8.76859188079834
    10. ' ' → logprob: -9.51859188079834

Token 161: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.04870261996984482
    2. ' j' → logprob: -3.0487027168273926
    3. 'range' → logprob: -9.423702239990234
    4. ' range' → logprob: -10.673702239990234
    5. '   ' → logprob: -12.173702239990234
    6. ' ' → logprob: -13.298702239990234
    7. '_j' → logprob: -13.423702239990234
    8. '  ' → logprob: -14.173702239990234
    9. '	j' → logprob: -14.298702239990234
    10. '    ' → logprob: -14.423702239990234

Token 162: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009783596731722355
    2. 'in' → logprob: -4.634783744812012
    3. ' ' → logprob: -11.384783744812012
    4. '(' → logprob: -11.884783744812012
    5. 'range' → logprob: -12.759783744812012
    6. '   ' → logprob: -13.259783744812012
    7. '    ' → logprob: -13.884783744812012
    8. 'import' → logprob: -14.259783744812012
    9. '```' → logprob: -14.509783744812012
    10. ' range' → logprob: -14.634783744812012

Token 163: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011058438569307327
    2. ' range' → logprob: -4.511058330535889
    3. '[' → logprob: -12.011058807373047
    4. '8' → logprob: -13.136058807373047
    5. ' ' → logprob: -14.136058807373047
    6. '(' → logprob: -14.761058807373047
    7. 'queen' → logprob: -15.511058807373047
    8. 'board' → logprob: -15.636058807373047
    9. '(range' → logprob: -15.761058807373047
    10. 'king' → logprob: -15.761058807373047

Token 164: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05528663471341133
    2. '8' → logprob: -2.9302866458892822
    3. '(i' → logprob: -8.430286407470703
    4. '(N' → logprob: -9.305286407470703
    5. 'N' → logprob: -10.680286407470703
    6. '(-' → logprob: -11.680286407470703
    7. '   ' → logprob: -11.680286407470703
    8. '(j' → logprob: -11.805286407470703
    9. ' ' → logprob: -11.930286407470703
    10. '7' → logprob: -12.492786407470703

Token 165: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.0003914695407729596
    2. 'i' → logprob: -8.625391006469727
    3. '1' → logprob: -10.000391006469727
    4. '7' → logprob: -10.250391006469727
    5. 'N' → logprob: -10.375391006469727
    6. ' ' → logprob: -10.375391006469727
    7. '0' → logprob: -11.000391006469727
    8. '   ' → logprob: -11.750391006469727
    9. 'j' → logprob: -12.125391006469727
    10. '5' → logprob: -12.375391006469727

Token 166: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.23266246914863586
    2. '):' → logprob: -1.6076624393463135
    3. '       ' → logprob: -6.232662677764893
    4. '+' → logprob: -6.482662677764893
    5. ':' → logprob: -6.732662677764893
    6. '   ' → logprob: -7.107662677764893
    7. '           ' → logprob: -7.482662677764893
    8. ',' → logprob: -7.607662677764893
    9. ')' → logprob: -8.732662200927734
    10. '):

' → logprob: -9.107662200927734

Token 167: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004663780331611633
    2. ' if' → logprob: -6.129663944244385
    3. ' print' → logprob: -7.129663944244385
    4. '       ' → logprob: -7.504663944244385
    5. '<|end|>' → logprob: -8.004663467407227
    6. '        ' → logprob: -8.629663467407227
    7. '	       ' → logprob: -8.754663467407227
    8. '#' → logprob: -9.254663467407227
    9. '               ' → logprob: -9.504663467407227
    10. 'print' → logprob: -10.004663467407227

Token 168: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04380904138088226
    2. ' print' → logprob: -3.668808937072754
    3. 'if' (adapté à ' if') → logprob: -4.168808937072754
    4. 'print' → logprob: -6.418808937072754
    5. '           ' → logprob: -8.793808937072754
    6. '               ' → logprob: -9.293808937072754
    7. '   ' → logprob: -12.543808937072754
    8. '       ' → logprob: -13.168808937072754
    9. '	if' → logprob: -13.418808937072754
    10. ' ' → logprob: -13.668808937072754

Token 169: ' [' (ID: 723)
  Prédit: ' queen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queen' → logprob: -0.5466076731681824
    2. ' king' → logprob: -1.9216077327728271
    3. 'queen' → logprob: -2.671607732772827
    4. '[' → logprob: -2.921607732772827
    5. '[i' → logprob: -3.171607732772827
    6. ' [' → logprob: -3.296607732772827
    7. ' i' → logprob: -3.546607732772827
    8. '[j' → logprob: -4.046607494354248
    9. '(i' → logprob: -5.296607494354248
    10. 'king' → logprob: -5.421607494354248

Token 170: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00011009939044015482
    2. 'j' → logprob: -9.625109672546387
    3. ' i' → logprob: -10.125109672546387
    4. '
' → logprob: -13.625109672546387
    5. '[i' → logprob: -13.875109672546387
    6. ' ' → logprob: -14.375109672546387
    7. '   ' → logprob: -15.125109672546387
    8. ']' → logprob: -15.625109672546387
    9. 'queen' → logprob: -16.000110626220703
    10. '  ' → logprob: -16.250110626220703

Token 171: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.014468096196651459
    2. ',' → logprob: -4.264468193054199
    3. ',i' → logprob: -8.2644681930542
    4. ',y' → logprob: -10.3894681930542
    5. ',k' → logprob: -11.7644681930542
    6. ',[' → logprob: -13.2644681930542
    7. ',int' → logprob: -14.0144681930542
    8. ' ,' → logprob: -14.5144681930542
    9. ',de' → logprob: -14.5144681930542
    10. '[j' → logprob: -14.6394681930542

Token 172: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05256165564060211
    2. ']==' → logprob: -3.1775617599487305
    3. 'in' → logprob: -5.3025617599487305
    4. ' in' → logprob: -5.9275617599487305
    5. 'not' → logprob: -7.3025617599487305
    6. ' ]' → logprob: -7.6775617599487305
    7. ' not' → logprob: -7.9275617599487305
    8. '==' → logprob: -8.17756175994873
    9. ']!=' → logprob: -9.80256175994873
    10. ')' → logprob: -11.55256175994873

Token 173: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.40814271569252014
    2. ' in' → logprob: -1.1581426858901978
    3. '==' → logprob: -4.533142566680908
    4. ' not' → logprob: -5.283142566680908
    5. 'not' → logprob: -5.408142566680908
    6. ' ==' → logprob: -7.283142566680908
    7. '[' → logprob: -11.283143043518066
    8. ' ' → logprob: -11.783143043518066
    9. ']==' → logprob: -11.783143043518066
    10. '!=' → logprob: -12.158143043518066

Token 174: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.0014127352042123675
    2. ' king' → logprob: -6.626412868499756
    3. 'de' → logprob: -9.501412391662598
    4. 'queen' → logprob: -12.376412391662598
    5. ' ' → logprob: -13.376412391662598
    6. 'kin' → logprob: -14.001412391662598
    7. 'ki' → logprob: -14.126412391662598
    8. '  ' → logprob: -14.251412391662598
    9. 'k' → logprob: -14.251412391662598
    10. '   ' → logprob: -14.626412391662598

Token 175: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0881998538970947
    2. ' and' → logprob: -1.4631998538970947
    3. ' or' → logprob: -1.9631998538970947
    4. ':
' → logprob: -2.7131998538970947
    5. '           ' → logprob: -3.0881998538970947
    6. '               ' → logprob: -3.0881998538970947
    7. '==' → logprob: -3.2131998538970947
    8. 'print' → logprob: -3.4631998538970947
    9. 'and' → logprob: -3.8381998538970947
    10. ',' → logprob: -3.8381998538970947

Token 176: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011426209472119808
    2. ' print' → logprob: -4.761425971984863
    3. 'print' → logprob: -6.011425971984863
    4. '           ' → logprob: -8.761425971984863
    5. ' and' → logprob: -10.386425971984863
    6. '<|end|>' → logprob: -10.386425971984863
    7. ',' → logprob: -10.886425971984863
    8. '.print' → logprob: -11.386425971984863
    9. '   ' → logprob: -11.386425971984863
    10. '                   ' → logprob: -11.636425971984863

Token 177: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.2044704705476761
    2. '           ' → logprob: -1.7044705152511597
    3. ' print' → logprob: -6.079470634460449
    4. '               ' → logprob: -7.704470634460449
    5. '   ' → logprob: -8.20447063446045
    6. '       ' → logprob: -10.70447063446045
    7. ' ' → logprob: -11.70447063446045
    8. '         ' → logprob: -12.57947063446045
    9. '	print' → logprob: -13.32947063446045
    10. '     ' → logprob: -13.82947063446045

Token 178: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.14134061336517334
    2. '('' → logprob: -2.141340732574463
    3. '("*' → logprob: -4.891340732574463
    4. '(' → logprob: -5.516340732574463
    5. '('*' → logprob: -5.891340732574463
    6. '()' → logprob: -13.016340255737305
    7. '("#' → logprob: -13.141340255737305
    8. '("+' → logprob: -13.391340255737305
    9. '"' → logprob: -13.891340255737305
    10. '("\' → logprob: -14.016340255737305

Token 179: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.14727121591567993
    2. '*' → logprob: -3.022271156311035
    3. ' Q' → logprob: -3.147271156311035
    4. '\xef\xbc' → logprob: -3.397271156311035
    5. '\xe2\x99' → logprob: -6.272271156311035
    6. '＊' → logprob: -6.272271156311035
    7. '■' → logprob: -6.272271156311035
    8. '★' → logprob: -6.522271156311035
    9. '#' → logprob: -7.522271156311035
    10. '☆' → logprob: -7.647271156311035

Token 180: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.0005280109471641481
    2. ' ",' → logprob: -7.625527858734131
    3. '"' → logprob: -10.375528335571289
    4. '")' → logprob: -12.250528335571289
    5. '","' → logprob: -13.125528335571289
    6. '',' → logprob: -15.125528335571289
    7. '"),' → logprob: -15.375528335571289
    8. '",'' → logprob: -15.375528335571289
    9. ',",' → logprob: -15.625528335571289
    10. ',' → logprob: -15.625528335571289

Token 181: 'end' (ID: 419)
  Prédit: 'end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.062015634030103683
    2. ' end' → logprob: -2.8120155334472656
    3. ',end' → logprob: -10.062015533447266
    4. '"' → logprob: -13.062015533447266
    5. ''end' → logprob: -13.812015533447266
    6. '(end' → logprob: -14.187015533447266
    7. '	end' → logprob: -14.437015533447266
    8. '   ' → logprob: -14.937015533447266
    9. ')' → logprob: -15.437015533447266
    10. ' ' → logprob: -15.562015533447266

Token 182: '="")
' (ID: 154840)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.31804531812667847
    2. '="' → logprob: -1.5680453777313232
    3. '='' → logprob: -2.9430453777313232
    4. ''' → logprob: -4.568045139312744
    5. '""' → logprob: -8.318045616149902
    6. '="")
' → logprob: -8.443045616149902
    7. ' "")' → logprob: -8.943045616149902
    8. '=""' → logprob: -9.443045616149902
    9. '='')
' → logprob: -9.818045616149902
    10. '=' → logprob: -10.068045616149902

Token 183: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00022713904036208987
    2. 'else' → logprob: -9.625226974487305
    3. ' else' → logprob: -9.625226974487305
    4. '<|end|>' → logprob: -10.500226974487305
    5. 'elif' → logprob: -10.875226974487305
    6. '               ' → logprob: -11.125226974487305
    7. '       ' → logprob: -11.500226974487305
    8. '          ' → logprob: -11.750226974487305
    9. '	       ' → logprob: -12.125226974487305
    10. '		' → logprob: -12.500226974487305

Token 184: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13786782324314117
    2. ' else' → logprob: -2.5128679275512695
    3. 'else' (adapté à ' else') → logprob: -3.1378679275512695
    4. 'elif' → logprob: -5.8878679275512695
    5. ' elif' → logprob: -6.6378679275512695
    6. '       ' → logprob: -8.63786792755127
    7. '<|end|>' → logprob: -10.01286792755127
    8. '	       ' → logprob: -11.38786792755127
    9. '          ' → logprob: -11.63786792755127
    10. ' ' → logprob: -11.76286792755127

Token 185: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016111554577946663
    2. '           ' → logprob: -4.641111373901367
    3. 'print' → logprob: -5.516111373901367
    4. ' print' → logprob: -6.391111373901367
    5. ':
' → logprob: -9.266111373901367
    6. ':' → logprob: -9.766111373901367
    7. '	           ' → logprob: -9.766111373901367
    8. '.' → logprob: -10.016111373901367
    9. '	       ' → logprob: -10.016111373901367
    10. ',' → logprob: -10.016111373901367

Token 186: '               ' (ID: 506)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6108871698379517
    2. ' print' → logprob: -1.4858871698379517
    3. '           ' → logprob: -1.8608871698379517
    4. '               ' → logprob: -2.610887050628662
    5. ' .' → logprob: -7.110887050628662
    6. '.' → logprob: -7.360887050628662
    7. '       ' → logprob: -9.48588752746582
    8. ' ' → logprob: -9.86088752746582
    9. '	       ' → logprob: -10.23588752746582
    10. ' ' → logprob: -10.48588752746582

Token 187: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.011354082264006138
    2. '.' → logprob: -5.011353969573975
    3. ' print' → logprob: -5.386353969573975
    4. '.print' → logprob: -10.261354446411133
    5. '"."' → logprob: -12.386354446411133
    6. 'if' → logprob: -12.636354446411133
    7. ' .' → logprob: -12.886354446411133
    8. '	print' → logprob: -14.011354446411133
    9. '".' → logprob: -14.511354446411133
    10. '..' → logprob: -14.761354446411133

Token 188: '(".",' (ID: 156696)
  Prédit: '(".'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(".' → logprob: -0.0498339980840683
    2. '("."' → logprob: -3.5498340129852295
    3. '("' → logprob: -4.54983377456665
    4. '(".",' → logprob: -5.04983377456665
    5. '(' → logprob: -6.04983377456665
    6. '("*' → logprob: -7.67483377456665
    7. '('.')' → logprob: -10.424834251403809
    8. '("-' → logprob: -11.049834251403809
    9. '("#' → logprob: -11.299834251403809
    10. '"."' → logprob: -11.924834251403809

Token 189: 'end' (ID: 419)
  Prédit: 'end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -7.941850526549388e-06
    2. ' end' → logprob: -11.750007629394531
    3. ',end' → logprob: -21.87500762939453
    4. '	end' → logprob: -22.62500762939453
    5. 'endon' → logprob: -22.62500762939453
    6. '(end' → logprob: -23.12500762939453
    7. '=end' → logprob: -23.87500762939453
    8. '   ' → logprob: -24.25000762939453
    9. ''end' → logprob: -24.25000762939453
    10. ' ' → logprob: -24.50000762939453

Token 190: '="")
' (ID: 154840)
  Prédit: '="'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '="' → logprob: -0.31619465351104736
    2. '"' → logprob: -1.3161946535110474
    3. '="")
' → logprob: -6.566194534301758
    4. '""' → logprob: -6.691194534301758
    5. ')' → logprob: -9.566194534301758
    6. '=""' → logprob: -9.691194534301758
    7. '(""))' → logprob: -9.816194534301758
    8. ' "")' → logprob: -10.066194534301758
    9. '='' → logprob: -10.691194534301758
    10. '=' → logprob: -11.566194534301758

Token 191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007010886911302805
    2. 'print' → logprob: -5.7570109367370605
    3. '<|end|>' → logprob: -6.5070109367370605
    4. '   ' → logprob: -7.1320109367370605
    5. '           ' → logprob: -7.7570109367370605
    6. '
' → logprob: -7.7570109367370605
    7. ' print' → logprob: -7.8820109367370605
    8. '\n' → logprob: -8.632010459899902
    9. '<|end|>' → logprob: -11.007010459899902
    10. ' ' → logprob: -11.007010459899902

Token 192: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0018646183889359236
    2. ' print' → logprob: -6.626864433288574
    3. '   ' → logprob: -7.876864433288574
    4. '       ' → logprob: -9.501864433288574
    5. '<|end|>' → logprob: -10.501864433288574
    6. '
' → logprob: -10.876864433288574
    7. ' ' → logprob: -11.001864433288574
    8. '	print' → logprob: -12.001864433288574
    9. '```' → logprob: -12.376864433288574
    10. '\n' → logprob: -12.501864433288574

Token 193: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.803360495017841e-05
    2. '("")' → logprob: -9.500078201293945
    3. '(' → logprob: -13.000078201293945
    4. '()
' → logprob: -14.875078201293945
    5. ' ()' → logprob: -15.625078201293945
    6. '()<' → logprob: -16.250078201293945
    7. '（）' → logprob: -16.625078201293945
    8. '()"' → logprob: -17.625078201293945
    9. '()}' → logprob: -17.875078201293945
    10. '()+' → logprob: -18.000078201293945

Token 194: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17892061173915863
    2. 'if' → logprob: -2.3039205074310303
    3. 'def' → logprob: -3.1789205074310303
    4. 'print' → logprob: -4.678920745849609
    5. ' for' → logprob: -5.928920745849609
    6. '#' → logprob: -5.928920745849609
    7. 'N' → logprob: -5.928920745849609
    8. 'queen' → logprob: -6.428920745849609
    9. '<|end|>' → logprob: -7.178920745849609
    10. 'n' → logprob: -7.803920745849609

Token 195: ' exit' (ID: 10654)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.038852572441101
    2. 'for' → logprob: -1.288852572441101
    3. 'print' → logprob: -1.288852572441101
    4. 'board' → logprob: -2.9138526916503906
    5. 'queen' → logprob: -4.663852691650391
    6. '#' → logprob: -4.913852691650391
    7. 'N' → logprob: -5.288852691650391
    8. ' for' → logprob: -5.413852691650391
    9. 'while' → logprob: -5.913852691650391
    10. 'check' → logprob: -6.038852691650391

Token 196: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00035048185964114964
    2. '(' → logprob: -8.000350952148438
    3. '()
' → logprob: -11.375350952148438
    4. '()(' → logprob: -13.625350952148438
    5. '()\' → logprob: -14.625350952148438
    6. '()`' → logprob: -14.875350952148438
    7. '()

' → logprob: -14.875350952148438
    8. ' ()' → logprob: -15.125350952148438
    9. '();' → logprob: -15.250350952148438
    10. '().' → logprob: -16.000350952148438

Token 197: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5595583915710449
    2. 'if' → logprob: -1.434558391571045
    3. 'def' → logprob: -1.684558391571045
    4. ' for' → logprob: -6.684558391571045
    5. 'queen' → logprob: -7.059558391571045
    6. 'pos' → logprob: -7.934558391571045
    7. ' if' → logprob: -8.059558868408203
    8. 'count' → logprob: -8.184558868408203
    9. 'idx' → logprob: -8.434558868408203
    10. 'n' → logprob: -8.434558868408203

Token 198: ' search' (ID: 3684)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.7439026236534119
    2. ' dfs' → logprob: -1.1189026832580566
    3. ' main' → logprob: -2.1189026832580566
    4. ' back' → logprob: -2.9939026832580566
    5. 'dfs' → logprob: -4.993902683258057
    6. 'solve' → logprob: -4.993902683258057
    7. ' search' → logprob: -5.368902683258057
    8. ' place' → logprob: -6.493902683258057
    9. ' queen' → logprob: -6.743902683258057
    10. 'main' → logprob: -6.743902683258057

Token 199: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00043615259346552193
    2. '(depth' → logprob: -8.250435829162598
    3. '(' → logprob: -9.250435829162598
    4. '(k' → logprob: -10.125435829162598
    5. '(i' → logprob: -11.000435829162598
    6. '(pos' → logprob: -12.250435829162598
    7. ' (' → logprob: -12.375435829162598
    8. '(x' → logprob: -13.000435829162598
    9. '(N' → logprob: -13.125435829162598
    10. '(num' → logprob: -13.250435829162598

Token 200: ',y' (ID: 16103)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00021712594025302678
    2. '):
' → logprob: -9.25021743774414
    3. ')' → logprob: -10.00021743774414
    4. ',n' → logprob: -10.37521743774414
    5. ' ):' → logprob: -10.37521743774414
    6. ',' → logprob: -11.87521743774414
    7. ')：' → logprob: -13.87521743774414
    8. ':' → logprob: -13.87521743774414
    9. '=' → logprob: -14.00021743774414
    10. '):
' → logprob: -14.25021743774414

Token 201: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002523937961086631
    2. '):
' → logprob: -6.252523899078369
    3. ')' → logprob: -7.627523899078369
    4. ',n' → logprob: -10.127524375915527
    5. ' ):' → logprob: -10.752524375915527
    6. '=' → logprob: -11.127524375915527
    7. ')：' → logprob: -11.627524375915527
    8. ',' → logprob: -11.877524375915527
    9. '):
' → logprob: -12.627524375915527
    10. '):

' → logprob: -13.002524375915527

Token 202: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7036744356155396
    2. ' if' → logprob: -0.7036744356155396
    3. 'if' → logprob: -4.95367431640625
    4. '	if' → logprob: -5.95367431640625
    5. ' for' → logprob: -8.20367431640625
    6. '<|end|>' → logprob: -8.45367431640625
    7. ' ' → logprob: -8.57867431640625
    8. ',' → logprob: -10.57867431640625
    9. '  ' → logprob: -10.70367431640625
    10. '    ' → logprob: -11.07867431640625

Token 203: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08012036234140396
    2. ' if' → logprob: -2.580120325088501
    3. '   ' → logprob: -7.08012056350708
    4. 'for' → logprob: -7.95512056350708
    5. ' for' → logprob: -10.330120086669922
    6. ' ' → logprob: -13.205120086669922
    7. '	if' → logprob: -13.580120086669922
    8. 'global' → logprob: -14.830120086669922
    9. 'queen' → logprob: -15.205120086669922
    10. '  ' → logprob: -15.455120086669922

Token 204: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07303166389465332
    2. 'y' → logprob: -2.8230316638946533
    3. ' n' → logprob: -4.698031425476074
    4. ' y' → logprob: -6.323031425476074
    5. 'N' → logprob: -10.323031425476074
    6. 'queen' → logprob: -10.323031425476074
    7. ' ' → logprob: -11.823031425476074
    8. '   ' → logprob: -12.448031425476074
    9. '(n' → logprob: -12.573031425476074
    10. '	n' → logprob: -12.698031425476074

Token 205: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0015444994205608964
    2. ' ==' → logprob: -6.75154447555542
    3. '>' → logprob: -8.126544952392578
    4. '>=' → logprob: -10.001544952392578
    5. '<' → logprob: -11.501544952392578
    6. '=' → logprob: -12.251544952392578
    7. '<=' → logprob: -12.376544952392578
    8. '==
' → logprob: -12.376544952392578
    9. 'y' → logprob: -13.376544952392578
    10. ')==' → logprob: -13.626544952392578

Token 206: 'y' (ID: 88)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.0015465259784832597
    2. 'y' → logprob: -6.626546382904053
    3. 'N' → logprob: -8.751546859741211
    4. '0' → logprob: -10.126546859741211
    5. '7' → logprob: -12.001546859741211
    6. 'len' → logprob: -12.501546859741211
    7. '9' → logprob: -12.751546859741211
    8. ' ' → logprob: -12.876546859741211
    9. '1' → logprob: -13.876546859741211
    10. '
' → logprob: -14.251546859741211

Token 207: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01737925596535206
    2. ':return' → logprob: -4.392379283905029
    3. ':
' → logprob: -5.392379283905029
    4. ' or' → logprob: -8.392378807067871
    5. '   ' → logprob: -10.267378807067871
    6. '):' → logprob: -10.892378807067871
    7. ' :' → logprob: -12.017378807067871
    8. 'return' → logprob: -12.267378807067871
    9. ':def' → logprob: -12.892378807067871
    10. ' and' → logprob: -12.892378807067871

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.352446973323822
    2. '   ' → logprob: -1.3524470329284668
    3. 'return' → logprob: -3.727447032928467
    4. ' return' → logprob: -4.477447032928467
    5. ' if' → logprob: -6.977447032928467
    6. 'board' → logprob: -6.977447032928467
    7. 'if' → logprob: -7.227447032928467
    8. ' board' → logprob: -8.477446556091309
    9. '	return' → logprob: -10.102446556091309
    10. ' for' → logprob: -10.227446556091309

Token 209: ' if' (ID: 538)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.09476890414953232
    2. '   ' → logprob: -2.84476900100708
    3. 'if' (adapté à ' if') → logprob: -3.46976900100708
    4. ' board' → logprob: -7.71976900100708
    5. 'return' → logprob: -8.344768524169922
    6. ' if' → logprob: -8.469768524169922
    7. 'for' → logprob: -8.844768524169922
    8. ' ' → logprob: -9.969768524169922
    9. '	board' → logprob: -10.594768524169922
    10. '       ' → logprob: -11.344768524169922

Token 210: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.4306933581829071
    2. 'check' → logprob: -1.0556933879852295
    3. ' not' → logprob: -7.68069314956665
    4. ' y' → logprob: -7.80569314956665
    5. 'n' → logprob: -8.180693626403809
    6. ' ' → logprob: -8.555693626403809
    7. ' n' → logprob: -8.805693626403809
    8. 'y' → logprob: -8.930693626403809
    9. 'N' → logprob: -9.430693626403809
    10. 'not' → logprob: -9.555693626403809

Token 211: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.25410157442092896
    2. '(y' → logprob: -1.5041015148162842
    3. '(' → logprob: -6.254101753234863
    4. '(N' → logprob: -8.379101753234863
    5. '(len' → logprob: -11.129101753234863
    6. '8' → logprob: -13.379101753234863
    7. '()' → logprob: -14.754101753234863
    8. 'y' → logprob: -15.004101753234863
    9. ' (' → logprob: -15.504101753234863
    10. ' ' → logprob: -16.129100799560547

Token 212: '8' (ID: 23)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5766835808753967
    2. 'n' → logprob: -1.451683521270752
    3. '8' → logprob: -2.451683521270752
    4. '(' → logprob: -2.701683521270752
    5. 'y' → logprob: -3.701683521270752
    6. '(y' → logprob: -3.951683521270752
    7. 'N' → logprob: -5.826683521270752
    8. '(len' → logprob: -6.076683521270752
    9. '(N' → logprob: -6.826683521270752
    10. 'len' → logprob: -7.701683521270752

Token 213: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013249638490378857
    2. '):
' → logprob: -4.76324987411499
    3. '(n' → logprob: -6.38824987411499
    4. ')' → logprob: -6.51324987411499
    5. '(' → logprob: -7.13824987411499
    6. ' ):' → logprob: -7.76324987411499
    7. '):
' → logprob: -9.513249397277832
    8. '):

' → logprob: -10.263249397277832
    9. '()' → logprob: -10.888249397277832
    10. '   ' → logprob: -11.013249397277832

Token 214: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17449669539928436
    2. '       ' → logprob: -1.9244966506958008
    3. 'board' → logprob: -4.299496650695801
    4. ' board' → logprob: -8.0494966506958
    5. '   ' → logprob: -8.7994966506958
    6. '               ' → logprob: -10.0494966506958
    7. '
' → logprob: -10.9244966506958
    8. '```' → logprob: -11.4244966506958
    9. '	board' → logprob: -11.4244966506958
    10. '          ' → logprob: -11.6744966506958

Token 215: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' (adapté à ' board') → logprob: -0.0014889120357111096
    2. ' board' → logprob: -7.00148868560791
    3. '   ' → logprob: -7.50148868560791
    4. '	board' → logprob: -11.00148868560791
    5. '       ' → logprob: -12.75148868560791
    6. '           ' → logprob: -12.87648868560791
    7. ' ' → logprob: -13.62648868560791
    8. '  ' → logprob: -14.75148868560791
    9. '               ' → logprob: -14.87648868560791
    10. '(board' → logprob: -15.62648868560791

Token 216: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001239196863025427
    2. '()
' → logprob: -9.000123977661133
    3. '()
' → logprob: -15.500123977661133
    4. '()

' → logprob: -15.625123977661133
    5. '()]' → logprob: -16.875123977661133
    6. ' ()' → logprob: -17.375123977661133
    7. '()`' → logprob: -17.625123977661133
    8. '()}' → logprob: -17.875123977661133
    9. '(' → logprob: -18.000123977661133
    10. '()<' → logprob: -18.000123977661133

Token 217: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08926037698984146
    2. '   ' → logprob: -2.4642603397369385
    3. ' for' → logprob: -9.08926010131836
    4. ' return' → logprob: -9.21426010131836
    5. '           ' → logprob: -10.08926010131836
    6. ' ' → logprob: -10.46426010131836
    7. 'return' → logprob: -10.58926010131836
    8. '	return' → logprob: -12.58926010131836
    9. '     ' → logprob: -13.58926010131836
    10. '    ' → logprob: -13.71426010131836

Token 218: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04021177068352699
    2. ' for' → logprob: -4.2902116775512695
    3. 'if' → logprob: -4.7902116775512695
    4. 'for' → logprob: -4.9152116775512695
    5. ' if' → logprob: -5.0402116775512695
    6. 'else' (adapté à ' else') → logprob: -6.0402116775512695
    7. ' else' → logprob: -7.1652116775512695
    8. 'elif' → logprob: -8.16521167755127
    9. ' elif' → logprob: -9.66521167755127
    10. '  ' → logprob: -10.79021167755127

Token 219: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019330672919750214
    2. ':
' → logprob: -4.5193305015563965
    3. ':' → logprob: -5.3943305015563965
    4. ' for' → logprob: -6.1443305015563965
    5. ',' → logprob: -6.6443305015563965
    6. '   ' → logprob: -9.519330978393555
    7. ' if' → logprob: -10.394330978393555
    8. '      ' → logprob: -10.519330978393555
    9. '        
' → logprob: -10.519330978393555
    10. '     ' → logprob: -11.269330978393555

Token 220: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033199526369571686
    2. ' for' → logprob: -3.5331995487213135
    3. ' if' → logprob: -6.033199310302734
    4. 'for' → logprob: -7.408199310302734
    5. '   ' → logprob: -8.533199310302734
    6. 'if' → logprob: -8.783199310302734
    7. '    ' → logprob: -10.283199310302734
    8. '	for' → logprob: -11.283199310302734
    9. ',' → logprob: -11.658199310302734
    10. '	   ' → logprob: -11.658199310302734

Token 221: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5787420868873596
    2. 'for' → logprob: -0.8287420868873596
    3. ' if' → logprob: -6.953742027282715
    4. '   ' → logprob: -7.203742027282715
    5. ' for' → logprob: -7.328742027282715
    6. 'x' → logprob: -8.453742027282715
    7. '       ' → logprob: -8.578742027282715
    8. 'z' → logprob: -11.453742027282715
    9. ' ' → logprob: -11.703742027282715
    10. 'search' → logprob: -12.078742027282715

Token 222: ' y' (ID: 342)
  Prédit: 'queen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queen' → logprob: -0.0007059985073283315
    2. ' queen' → logprob: -7.375706195831299
    3. 'de' → logprob: -10.00070571899414
    4. 'que' → logprob: -11.50070571899414
    5. 'y' → logprob: -11.75070571899414
    6. '   ' → logprob: -12.62570571899414
    7. 'n' → logprob: -12.87570571899414
    8. '0' → logprob: -12.87570571899414
    9. ' ' → logprob: -13.37570571899414
    10. 'queue' → logprob: -14.00070571899414

Token 223: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03960847109556198
    2. 'in' → logprob: -3.4146084785461426
    3. ' not' → logprob: -6.039608478546143
    4. '>=' → logprob: -6.539608478546143
    5. '<' → logprob: -7.289608478546143
    6. ' >=' → logprob: -7.789608478546143
    7. ' <' → logprob: -8.164608001708984
    8. '==' → logprob: -8.539608001708984
    9. ' ==' → logprob: -9.164608001708984
    10. 'not' → logprob: -9.289608001708984

Token 224: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.00014823723176959902
    2. 'queen' → logprob: -9.125147819519043
    3. ' de' → logprob: -10.375147819519043
    4. '   ' → logprob: -13.000147819519043
    5. 'deque' → logprob: -13.500147819519043
    6. '	de' → logprob: -13.875147819519043
    7. '  ' → logprob: -14.375147819519043
    8. ' ' → logprob: -14.375147819519043
    9. 'd' → logprob: -14.750147819519043
    10. 'que' → logprob: -15.250147819519043

Token 225: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03594157472252846
    2. ':
' → logprob: -3.4109416007995605
    3. ' or' → logprob: -6.7859416007995605
    4. ':return' → logprob: -6.9109416007995605
    5. '       ' → logprob: -9.160941123962402
    6. ' :' → logprob: -11.285941123962402
    7. '<|end|>' → logprob: -11.410941123962402
    8. ' and' → logprob: -11.910941123962402
    9. ':def' → logprob: -12.285941123962402
    10. '   ' → logprob: -12.535941123962402

Token 226: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015344219282269478
    2. '       ' → logprob: -5.015344142913818
    3. 'search' → logprob: -5.890344142913818
    4. ' if' → logprob: -6.390344142913818
    5. ' search' → logprob: -6.765344142913818
    6. 'if' → logprob: -6.890344142913818
    7. 'return' → logprob: -7.140344142913818
    8. ' for' → logprob: -7.265344142913818
    9. ' return' → logprob: -8.890344619750977
    10. 'for' → logprob: -8.890344619750977

Token 227: ' search' (ID: 3684)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' (adapté à ' search') → logprob: -0.030747434124350548
    2. 'if' → logprob: -3.780747413635254
    3. '           ' → logprob: -5.030747413635254
    4. ' search' → logprob: -7.155747413635254
    5. '       ' → logprob: -9.780747413635254
    6. ' if' → logprob: -9.905747413635254
    7. '   ' → logprob: -11.030747413635254
    8. '	search' → logprob: -11.405747413635254
    9. 'return' → logprob: -11.530747413635254
    10. '               ' → logprob: -12.155747413635254

Token 228: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -8.745069499127567e-05
    2. '(' → logprob: -9.37508773803711
    3. '```' → logprob: -13.87508773803711
    4. 'n' → logprob: -14.87508773803711
    5. ',n' → logprob: -15.00008773803711
    6. '(N' → logprob: -15.37508773803711
    7. ' (' → logprob: -15.62508773803711
    8. '(next' → logprob: -16.12508773803711
    9. 'y' → logprob: -16.62508773803711
    10. '(
' → logprob: -16.62508773803711

Token 229: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.012055120430886745
    2. ',' → logprob: -4.762054920196533
    3. 'y' → logprob: -6.262054920196533
    4. ' y' → logprob: -6.887054920196533
    5. '(y' → logprob: -8.137055397033691
    6. '   ' → logprob: -9.262055397033691
    7. ' ,' → logprob: -9.387055397033691
    8. '+' → logprob: -11.762055397033691
    9. '       ' → logprob: -12.137055397033691
    10. '	y' → logprob: -12.512055397033691

Token 230: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.88418151892256e-05
    2. ' +' → logprob: -9.750059127807617
    3. '+
' → logprob: -15.500059127807617
    4. '   ' → logprob: -16.125059127807617
    5. '+y' → logprob: -16.125059127807617
    6. '+)' → logprob: -16.500059127807617
    7. ')' → logprob: -17.750059127807617
    8. ',' → logprob: -17.750059127807617
    9. ')+' → logprob: -17.875059127807617
    10. '＋' → logprob: -18.125059127807617

Token 231: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.125005722045898
    3. '```' → logprob: -15.937505722045898
    4. '   ' → logprob: -16.8750057220459
    5. '１' → logprob: -17.0000057220459
    6. '+' → logprob: -17.4375057220459
    7. '2' → logprob: -18.0625057220459
    8. 'def' → logprob: -18.3750057220459
    9. ')' → logprob: -18.3750057220459
    10. '
' → logprob: -18.4375057220459

Token 232: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5764139294624329
    2. ')
' → logprob: -0.8264139294624329
    3. ')
' → logprob: -8.076414108276367
    4. '       ' → logprob: -8.826414108276367
    5. ',' → logprob: -12.326414108276367
    6. ')

' → logprob: -12.951414108276367
    7. '   ' → logprob: -13.076414108276367
    8. ')n' → logprob: -13.326414108276367
    9. ' )
' → logprob: -13.951414108276367
    10. ' )' → logprob: -13.951414108276367

Token 233: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01450593676418066
    2. 'else' → logprob: -4.264505863189697
    3. ' else' → logprob: -8.014506340026855
    4. '<|end|>' → logprob: -11.889506340026855
    5. '	else' → logprob: -13.639506340026855
    6. 'elif' → logprob: -13.889506340026855
    7. ',' → logprob: -14.014506340026855
    8. '   ' → logprob: -14.764506340026855
    9. '<|end|>' → logprob: -15.264506340026855
    10. 'import' → logprob: -15.639506340026855

Token 234: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.254755437374115
    2. 'else' (adapté à ' else') → logprob: -1.5047554969787598
    3. ' else' → logprob: -5.87975549697876
    4. '   ' → logprob: -11.129755020141602
    5. 'for' → logprob: -11.879755020141602
    6. '	else' → logprob: -13.504755020141602
    7. ' for' → logprob: -13.754755020141602
    8. 'elif' → logprob: -13.879755020141602
    9. ',' → logprob: -14.254755020141602
    10. '      ' → logprob: -15.504755020141602

Token 235: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.05632428452372551
    2. ':' → logprob: -3.5563242435455322
    3. '           ' → logprob: -3.8063242435455322
    4. ' for' → logprob: -5.806324481964111
    5. '       ' → logprob: -7.431324481964111
    6. ' :
' → logprob: -9.306324005126953
    7. '        ' → logprob: -9.556324005126953
    8. '   ' → logprob: -10.056324005126953
    9. ',' → logprob: -10.181324005126953
    10. '         ' → logprob: -10.306324005126953

Token 236: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.34368208050727844
    2. '       ' → logprob: -1.718682050704956
    3. 'for' → logprob: -2.218682050704956
    4. '           ' → logprob: -6.218682289123535
    5. '   ' → logprob: -7.593682289123535
    6. '	for' → logprob: -8.468682289123535
    7. '	       ' → logprob: -10.468682289123535
    8. ' ' → logprob: -10.468682289123535
    9. '        ' → logprob: -11.218682289123535
    10. '	   ' → logprob: -12.593682289123535

Token 237: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0001818489981815219
    2. '   ' → logprob: -9.250182151794434
    3. ' for' → logprob: -9.375182151794434
    4. '       ' → logprob: -15.000182151794434
    5. '	for' → logprob: -15.375182151794434
    6. ' ' → logprob: -16.000181198120117
    7. 'global' → logprob: -16.250181198120117
    8. '           ' → logprob: -17.000181198120117
    9. '  ' → logprob: -17.875181198120117
    10. '```' → logprob: -18.875181198120117

Token 238: ' i' (ID: 575)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04976923391222954
    2. 'i' → logprob: -3.174769163131714
    3. ' x' → logprob: -5.174769401550293
    4. ' i' → logprob: -7.174769401550293
    5. 'j' → logprob: -8.799769401550293
    6. 'k' → logprob: -9.299769401550293
    7. 'q' → logprob: -10.674769401550293
    8. 'a' → logprob: -11.549769401550293
    9. 'r' → logprob: -11.674769401550293
    10. ' ' → logprob: -12.049769401550293

Token 239: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011824887478724122
    2. 'in' → logprob: -6.751182556152344
    3. ' ' → logprob: -12.001182556152344
    4. 'range' → logprob: -12.751182556152344
    5. ' range' → logprob: -13.126182556152344
    6. '  ' → logprob: -15.251182556152344
    7. '   ' → logprob: -15.626182556152344
    8. '<|end|>' → logprob: -15.626182556152344
    9. '0' → logprob: -16.001182556152344
    10. '    ' → logprob: -16.126182556152344

Token 240: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3132624924182892
    2. ' range' → logprob: -1.3132624626159668
    3. ' ' → logprob: -14.938262939453125
    4. '   ' → logprob: -15.688262939453125
    5. '(range' → logprob: -16.188262939453125
    6. '8' → logprob: -16.188262939453125
    7. '	range' → logprob: -16.813262939453125
    8. '  ' → logprob: -17.563262939453125
    9. '0' → logprob: -17.688262939453125
    10. '[' → logprob: -17.813262939453125

Token 241: '(n' (ID: 2406)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '8' → logprob: -0.0011736786691471934
    2. '(' → logprob: -6.751173496246338
    3. ' ' → logprob: -13.001173973083496
    4. '   ' → logprob: -14.376173973083496
    5. 'N' → logprob: -15.251173973083496
    6. '(N' → logprob: -16.25117301940918
    7. '８' → logprob: -16.62617301940918
    8. 'eight' → logprob: -16.87617301940918
    9. '=' → logprob: -17.25117301940918
    10. '```' → logprob: -17.50117301940918

Token 242: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6358750462532043
    2. '):
' → logprob: -0.7608750462532043
    3. '       ' → logprob: -6.760875225067139
    4. '           ' → logprob: -7.135875225067139
    5. '   ' → logprob: -7.260875225067139
    6. '8' → logprob: -8.01087474822998
    7. '+' → logprob: -9.13587474822998
    8. ',' → logprob: -10.13587474822998
    9. '):
' → logprob: -10.76087474822998
    10. ' ' → logprob: -10.88587474822998

Token 243: '               ' (ID: 506)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3731938600540161
    2. '               ' → logprob: -1.6231938600540161
    3. '           ' → logprob: -3.3731937408447266
    4. 'if' → logprob: -3.7481937408447266
    5. '       ' → logprob: -3.7481937408447266
    6. ' queen' → logprob: -3.9981937408447266
    7. '   ' → logprob: -4.748193740844727
    8. 'queen' → logprob: -5.623193740844727
    9. '	       ' → logprob: -6.748193740844727
    10. '<|end|>' → logprob: -8.248193740844727

Token 244: ' if' (ID: 538)
  Prédit: 'queen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queen' → logprob: -0.05639639496803284
    2. 'if' (adapté à ' if') → logprob: -3.806396484375
    3. ' queen' → logprob: -4.056396484375
    4. '   ' → logprob: -5.056396484375
    5. '               ' → logprob: -5.056396484375
    6. '           ' → logprob: -6.556396484375
    7. ' if' → logprob: -7.181396484375
    8. '                   ' → logprob: -9.306396484375
    9. ' ' → logprob: -9.431396484375
    10. '       ' → logprob: -9.556396484375

Token 245: ' i' (ID: 575)
  Prédit: 'queen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queen' → logprob: -0.003281452227383852
    2. ' queen' → logprob: -6.503281593322754
    3. 'i' → logprob: -7.253281593322754
    4. 'not' → logprob: -7.378281593322754
    5. 'check' → logprob: -8.753281593322754
    6. 'que' → logprob: -10.253281593322754
    7. '   ' → logprob: -10.253281593322754
    8. '(' → logprob: -10.503281593322754
    9. ' not' → logprob: -10.503281593322754
    10. 'cr' → logprob: -10.628281593322754

Token 246: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.23846152424812317
    2. '==' → logprob: -2.113461494445801
    3. '!=' → logprob: -3.238461494445801
    4. 'not' → logprob: -3.863461494445801
    5. ' ==' → logprob: -4.363461494445801
    6. ' !=' → logprob: -4.988461494445801
    7. '>=' → logprob: -5.363461494445801
    8. ' in' → logprob: -6.488461494445801
    9. '!=-' → logprob: -6.863461494445801
    10. '=' → logprob: -6.863461494445801

Token 247: ' in' (ID: 306)
  Prédit: 'queen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queen' → logprob: -0.8945021629333496
    2. 'in' → logprob: -1.0195021629333496
    3. ' in' → logprob: -2.0195021629333496
    4. ' queen' → logprob: -2.6445021629333496
    5. 'de' → logprob: -4.26950216293335
    6. '                   ' → logprob: -5.89450216293335
    7. '               ' → logprob: -6.39450216293335
    8. '   ' → logprob: -6.39450216293335
    9. '           ' → logprob: -6.51950216293335
    10. ' ' → logprob: -7.01950216293335

Token 248: ' queen' (ID: 42300)
  Prédit: 'queen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queen' → logprob: -3.166338137816638e-05
    2. ' queen' → logprob: -10.500031471252441
    3. 'que' → logprob: -13.000031471252441
    4. 'de' → logprob: -13.625031471252441
    5. 'king' → logprob: -15.500031471252441
    6. 'queue' → logprob: -16.250032424926758
    7. ' ' → logprob: -17.125032424926758
    8. '[' → logprob: -17.375032424926758
    9. '  ' → logprob: -17.375032424926758
    10. '   ' → logprob: -17.500032424926758

Token 249: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34611204266548157
    2. '[:' → logprob: -1.7211120128631592
    3. ' and' → logprob: -2.221112012863159
    4. '):' → logprob: -6.596112251281738
    5. '[:]' → logprob: -6.596112251281738
    6. ' :' → logprob: -7.096112251281738
    7. '<|end|>' → logprob: -7.846112251281738
    8. 'and' → logprob: -7.971112251281738
    9. ':
' → logprob: -8.096112251281738
    10. ':return' → logprob: -9.221112251281738

Token 250: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3432726562023163
    2. ' queen' → logprob: -1.4682726860046387
    3. '           ' → logprob: -3.7182726860046387
    4. '               ' → logprob: -4.343272686004639
    5. 'queen' → logprob: -4.343272686004639
    6. '   ' → logprob: -6.343272686004639
    7. '[i' → logprob: -6.718272686004639
    8. ' and' → logprob: -6.968272686004639
    9. ' ' → logprob: -7.343272686004639
    10. '[' → logprob: -7.468272686004639

Token 251: ' queen' (ID: 42300)
  Prédit: 'queen'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queen' (adapté à ' queen') → logprob: -0.057397328317165375
    2. ' queen' → logprob: -3.0573973655700684
    3. '                   ' → logprob: -4.807397365570068
    4. '               ' → logprob: -8.05739688873291
    5. '   ' → logprob: -9.30739688873291
    6. '           ' → logprob: -9.43239688873291
    7. '       ' → logprob: -10.68239688873291
    8. ' ' → logprob: -10.68239688873291
    9. '                       ' → logprob: -10.80739688873291
    10. 'que' → logprob: -11.93239688873291

Token 252: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.01816035620868206
    2. '[i' → logprob: -4.018160343170166
    3. '[x' → logprob: -11.643160820007324
    4. '[j' → logprob: -13.768160820007324
    5. '[' → logprob: -14.768160820007324
    6. '=[' → logprob: -16.643159866333008
    7. ' [' → logprob: -17.018159866333008
    8. '=y' → logprob: -17.393159866333008
    9. '[Y' → logprob: -17.393159866333008
    10. '[s' → logprob: -17.768159866333008

Token 253: ']=' (ID: 9539)
  Prédit: '=i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=i' → logprob: -0.6216030120849609
    2. '=' → logprob: -0.8716030120849609
    3. ']=' → logprob: -3.121603012084961
    4. ' =' → logprob: -7.621603012084961
    5. ']' → logprob: -9.746603012084961
    6. ')=' → logprob: -14.621603012084961
    7. '=
' → logprob: -15.121603012084961
    8. ']==' → logprob: -15.371603012084961
    9. '']=' → logprob: -15.746603012084961
    10. '"]=' → logprob: -16.24660301208496

Token 254: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.8624639324116288e-06
    2. ' i' → logprob: -13.250001907348633
    3. '   ' → logprob: -19.250001907348633
    4. '	i' → logprob: -20.875001907348633
    5. ' ' → logprob: -21.500001907348633
    6. '  ' → logprob: -21.750001907348633
    7. '               ' → logprob: -22.750001907348633
    8. '       ' → logprob: -23.500001907348633
    9. '                   ' → logprob: -24.000001907348633
    10. '
' → logprob: -24.375001907348633

Token 255: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03813650459051132
    2. '
' → logprob: -3.4131364822387695
    3. '                   ' → logprob: -5.7881364822387695
    4. '                
' → logprob: -7.6631364822387695
    5. '                    
' → logprob: -8.41313648223877
    6. '                       ' → logprob: -8.78813648223877
    7. '           ' → logprob: -9.03813648223877
    8. ' if' → logprob: -9.53813648223877
    9. '  
' → logprob: -9.91313648223877
    10. 'if' → logprob: -10.03813648223877

Token 256: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001574971480295062
    2. '                   ' → logprob: -6.876574993133545
    3. '           ' → logprob: -8.751574516296387
    4. ' and' → logprob: -9.501574516296387
    5. ' if' → logprob: -9.751574516296387
    6. '                       ' → logprob: -10.001574516296387
    7. '<|end|>' → logprob: -10.001574516296387
    8. '	           ' → logprob: -10.251574516296387
    9. '       ' → logprob: -11.126574516296387
    10. '		       ' → logprob: -11.251574516296387

Token 257: ' search' (ID: 3684)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' (adapté à ' search') → logprob: -0.06601253896951675
    2. 'if' → logprob: -2.8160126209259033
    3. '                       ' → logprob: -5.816012382507324
    4. '                   ' → logprob: -7.191012382507324
    5. ' search' → logprob: -8.441012382507324
    6. ' if' → logprob: -9.941012382507324
    7. '               ' → logprob: -10.941012382507324
    8. '   ' → logprob: -11.441012382507324
    9. '                           ' → logprob: -12.691012382507324
    10. '       ' → logprob: -12.941012382507324

Token 258: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.10073095560073853
    2. 'n' → logprob: -2.3507308959960938
    3. '8' → logprob: -8.350730895996094
    4. ' n' → logprob: -8.725730895996094
    5. '(' → logprob: -9.225730895996094
    6. '	n' → logprob: -11.725730895996094
    7. 'N' → logprob: -12.100730895996094
    8. '```' → logprob: -12.600730895996094
    9. '7' → logprob: -12.975730895996094
    10. '   ' → logprob: -13.350730895996094

Token 259: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.11252589523792267
    2. 'y' → logprob: -2.3625259399414062
    3. ' y' → logprob: -4.487525939941406
    4. ',' → logprob: -7.112525939941406
    5. ' ,' → logprob: -8.737525939941406
    6. '(y' → logprob: -11.612525939941406
    7. '	y' → logprob: -12.112525939941406
    8. '   ' → logprob: -12.987525939941406
    9. ' ' → logprob: -13.237525939941406
    10. ',i' → logprob: -14.737525939941406

Token 260: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.7729658540920354e-05
    2. ' +' → logprob: -10.500027656555176
    3. '+
' → logprob: -16.750028610229492
    4. '+i' → logprob: -17.500028610229492
    5. '＋' → logprob: -18.375028610229492
    6. '+y' → logprob: -19.000028610229492
    7. '+n' → logprob: -19.125028610229492
    8. '+x' → logprob: -19.375028610229492
    9. '+)' → logprob: -19.750028610229492
    10. '()+' → logprob: -20.125028610229492

Token 261: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. '+' → logprob: -13.250003814697266
    3. ' ' → logprob: -13.250003814697266
    4. '   ' → logprob: -17.000003814697266
    5. '```' → logprob: -18.187503814697266
    6. ' +' → logprob: -18.687503814697266
    7. '2' → logprob: -18.937503814697266
    8. '  ' → logprob: -19.125003814697266
    9. '
' → logprob: -19.125003814697266
    10. '       ' → logprob: -19.250003814697266

Token 262: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0650370642542839
    2. ')' → logprob: -2.8150370121002197
    3. '                   ' → logprob: -5.815037250518799
    4. ',' → logprob: -10.81503677368164
    5. ' )
' → logprob: -11.19003677368164
    6. '       ' → logprob: -11.69003677368164
    7. ')
' → logprob: -11.69003677368164
    8. '           ' → logprob: -11.69003677368164
    9. '               ' → logprob: -12.19003677368164
    10. '   ' → logprob: -12.31503677368164

Token 263: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 264: ' for' (ID: 395)
  Prédit: 'queen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queen' → logprob: -0.00010533124441280961
    2. ' queen' → logprob: -9.250104904174805
    3. '                   ' → logprob: -11.625104904174805
    4. 'queue' → logprob: -16.500104904174805
    5. '               ' → logprob: -17.375104904174805
    6. '           ' → logprob: -18.625104904174805
    7. '       ' → logprob: -19.000104904174805
    8. 'que' → logprob: -19.250104904174805
    9. '   ' → logprob: -19.375104904174805
    10. '```' → logprob: -19.375104904174805

Token 265: ' l' (ID: 305)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5716269612312317
    2. 'k' → logprob: -1.696626901626587
    3. 'i' → logprob: -1.946626901626587
    4. 'j' → logprob: -2.821626901626587
    5. 'z' → logprob: -3.446626901626587
    6. '_' → logprob: -5.696627140045166
    7. ' x' → logprob: -6.321627140045166
    8. ' i' → logprob: -6.696627140045166
    9. ' k' → logprob: -6.821627140045166
    10. ' j' → logprob: -6.946627140045166

Token 266: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0013090482680127025
    2. 'in' → logprob: -6.751308917999268
    3. 'range' → logprob: -9.751309394836426
    4. 'e' → logprob: -10.376309394836426
    5. ' ' → logprob: -11.501309394836426
    6. 'i' → logprob: -11.626309394836426
    7. 'j' → logprob: -11.876309394836426
    8. 'l' → logprob: -12.251309394836426
    9. ' range' → logprob: -12.376309394836426
    10. ' i' → logprob: -12.501309394836426

Token 267: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.009967735037207603
    2. ' range' → logprob: -4.634967803955078
    3. 'queen' → logprob: -9.884967803955078
    4. '[]' → logprob: -10.009967803955078
    5. '[' → logprob: -10.259967803955078
    6. 'ran' → logprob: -10.759967803955078
    7. 'i' → logprob: -11.759967803955078
    8. ' ' → logprob: -11.884967803955078
    9. 'r' → logprob: -12.134967803955078
    10. '(range' → logprob: -12.259967803955078

Token 268: '(y' (ID: 14684)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.9501235485076904
    2. '(n' → logprob: -1.3251235485076904
    3. '(' → logprob: -1.8251235485076904
    4. 'n' → logprob: -2.5751235485076904
    5. 'y' → logprob: -3.2001235485076904
    6. '(y' → logprob: -3.9501235485076904
    7. '(i' → logprob: -4.2001237869262695
    8. '(len' → logprob: -4.3251237869262695
    9. 'len' → logprob: -5.2001237869262695
    10. 'i' → logprob: -5.4501237869262695

Token 269: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08428233116865158
    2. '):
' → logprob: -2.584282398223877
    3. '):' → logprob: -6.084282398223877
    4. ',' → logprob: -6.459282398223877
    5. ' +' → logprob: -7.584282398223877
    6. '                   ' → logprob: -8.334281921386719
    7. '-' → logprob: -8.959281921386719
    8. '8' → logprob: -9.334281921386719
    9. '   ' → logprob: -9.459281921386719
    10. '               ' → logprob: -9.584281921386719

Token 270: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.036524842376821e-05
    2. '8' → logprob: -10.500040054321289
    3. ' ' → logprob: -12.000040054321289
    4. '+' → logprob: -13.250040054321289
    5. '   ' → logprob: -13.750040054321289
    6. '       ' → logprob: -14.375040054321289
    7. 'n' → logprob: -14.500040054321289
    8. '):
' → logprob: -14.500040054321289
    9. '7' → logprob: -14.875040054321289
    10. '           ' → logprob: -15.125040054321289

Token 271: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.08077812939882278
    2. ',' → logprob: -3.080778121948242
    3. '):' → logprob: -3.705778121948242
    4. '   ' → logprob: -6.705778121948242
    5. '       ' → logprob: -6.955778121948242
    6. '8' → logprob: -6.955778121948242
    7. '                   ' → logprob: -7.330778121948242
    8. '               ' → logprob: -7.580778121948242
    9. ',n' → logprob: -7.580778121948242
    10. '           ' → logprob: -7.705778121948242

Token 272: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.0044384244829416275
    2. 'n' → logprob: -5.504438400268555
    3. 'N' → logprob: -8.129438400268555
    4. 'len' → logprob: -9.754438400268555
    5. ' ' → logprob: -13.004438400268555
    6. '9' → logprob: -13.004438400268555
    7. 'y' → logprob: -13.754438400268555
    8. ' n' → logprob: -15.129438400268555
    9. '   ' → logprob: -15.379438400268555
    10. '7' → logprob: -15.504438400268555

Token 273: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0022412508260458708
    2. '):' → logprob: -6.127241134643555
    3. '):
' → logprob: -11.502241134643555
    4. '   ' → logprob: -11.627241134643555
    5. '       ' → logprob: -11.627241134643555
    6. ':
' → logprob: -11.752241134643555
    7. ')' → logprob: -12.127241134643555
    8. ' ):
' → logprob: -12.377241134643555
    9. ']:
' → logprob: -12.502241134643555
    10. '():
' → logprob: -12.877241134643555

Token 274: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.13132329285144806
    2. 'queen' → logprob: -2.1313233375549316
    3. '   ' → logprob: -6.881323337554932
    4. '       ' → logprob: -7.006323337554932
    5. ' queen' → logprob: -7.381323337554932
    6. '                   ' → logprob: -7.381323337554932
    7. '               ' → logprob: -7.506323337554932
    8. '                           ' → logprob: -7.881323337554932
    9. '           ' → logprob: -9.256322860717773
    10. '                      ' → logprob: -10.256322860717773

Token 275: ' if' (ID: 538)
  Prédit: 'queen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queen' → logprob: -0.0002075933152809739
    2. '   ' → logprob: -9.250207901000977
    3. ' queen' → logprob: -9.250207901000977
    4. '                       ' → logprob: -12.125207901000977
    5. '           ' → logprob: -12.500207901000977
    6. '                   ' → logprob: -12.875207901000977
    7. '                           ' → logprob: -13.750207901000977
    8. '       ' → logprob: -13.875207901000977
    9. '               ' → logprob: -14.000207901000977
    10. ' ' → logprob: -15.125207901000977

Token 276: ' l' (ID: 305)
  Prédit: 'queen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queen' → logprob: -0.0067426045425236225
    2. ' queen' → logprob: -5.006742477416992
    3. 'l' → logprob: -11.506742477416992
    4. '   ' → logprob: -12.506742477416992
    5. 'que' → logprob: -12.631742477416992
    6. '           ' → logprob: -13.381742477416992
    7. '                       ' → logprob: -13.631742477416992
    8. '       ' → logprob: -13.631742477416992
    9. ' ' → logprob: -13.881742477416992
    10. '                   ' → logprob: -13.881742477416992

Token 277: ' not' (ID: 625)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.619303286075592
    2. '<len' → logprob: -2.2443032264709473
    3. ' in' → logprob: -2.8693032264709473
    4. '<N' → logprob: -2.9943032264709473
    5. '<n' → logprob: -3.3693032264709473
    6. '<=' → logprob: -3.4943032264709473
    7. ']<' → logprob: -3.4943032264709473
    8. ']' → logprob: -3.6193032264709473
    9. 'in' → logprob: -3.7443032264709473
    10. ' <' → logprob: -4.119303226470947

Token 278: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4982818365097046
    2. ' in' → logprob: -1.3732818365097046
    3. 'de' → logprob: -2.498281955718994
    4. 'queen' → logprob: -3.373281955718994
    5. ' de' → logprob: -4.123281955718994
    6. ' queen' → logprob: -5.248281955718994
    7. ' ' → logprob: -8.748281478881836
    8. '0' → logprob: -8.873281478881836
    9. '   ' → logprob: -8.998281478881836
    10. 'range' → logprob: -8.998281478881836

Token 279: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.00011737081513274461
    2. ' de' → logprob: -9.875117301940918
    3. 'range' → logprob: -9.875117301940918
    4. 'queen' → logprob: -11.875117301940918
    5. '[' → logprob: -12.625117301940918
    6. 'deque' → logprob: -14.125117301940918
    7. '
' → logprob: -14.375117301940918
    8. 'd' → logprob: -14.625117301940918
    9. ' range' → logprob: -15.000117301940918
    10. ' ' → logprob: -15.375117301940918

Token 280: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.15254773199558258
    2. ' and' → logprob: -2.527547836303711
    3. ':' → logprob: -2.902547836303711
    4. 'and' → logprob: -5.402547836303711
    5. '                           ' → logprob: -7.277547836303711
    6. '           ' → logprob: -7.402547836303711
    7. ' :
' → logprob: -8.277547836303711
    8. '                       ' → logprob: -9.027547836303711
    9. ']:
' → logprob: -9.152547836303711
    10. '):
' → logprob: -9.527547836303711

Token 281: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.02662304788827896
    2. '                       ' → logprob: -4.526623249053955
    3. '   ' → logprob: -5.401623249053955
    4. '           ' → logprob: -5.526623249053955
    5. ' and' → logprob: -6.026623249053955
    6. ' queen' → logprob: -7.151623249053955
    7. '                   ' → logprob: -7.276623249053955
    8. '<|end|>' → logprob: -7.401623249053955
    9. '       ' → logprob: -7.651623249053955
    10. '                               ' → logprob: -7.901623249053955

Token 282: ' queen' (ID: 42300)
  Prédit: 'queen'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queen' (adapté à ' queen') → logprob: -0.0001801801408873871
    2. ' queen' → logprob: -8.6251802444458
    3. '                   ' → logprob: -15.6251802444458
    4. '                       ' → logprob: -16.000179290771484
    5. '   ' → logprob: -16.125179290771484
    6. '                           ' → logprob: -16.875179290771484
    7. '           ' → logprob: -17.625179290771484
    8. '               ' → logprob: -17.750179290771484
    9. '```' → logprob: -17.750179290771484
    10. 'king' → logprob: -18.125179290771484

Token 283: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -1.9361264946837764e-07
    2. '[i' → logprob: -17.25
    3. '=[' → logprob: -17.625
    4. '[' → logprob: -17.625
    5. 'l' → logprob: -19.0
    6. '[-' → logprob: -19.25
    7. '[y' → logprob: -19.625
    8. '[j' → logprob: -19.75
    9. '=l' → logprob: -19.75
    10. '=' → logprob: -20.375

Token 284: ']=-' (ID: 162819)
  Prédit: ']=-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=-' → logprob: -0.475161612033844
    2. '=-' → logprob: -0.975161612033844
    3. ']=' → logprob: -7.350161552429199
    4. ']' → logprob: -8.6001615524292
    5. '==-' → logprob: -8.8501615524292
    6. '=' → logprob: -9.4751615524292
    7. '   ' → logprob: -11.3501615524292
    8. ' =' → logprob: -11.4751615524292
    9. '=(-' → logprob: -11.7251615524292
    10. '-' → logprob: -12.7251615524292

Token 285: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '<|end|>' → logprob: -15.000000953674316
    3. '```' → logprob: -15.250000953674316
    4. '-' → logprob: -16.250001907348633
    5. ' ' → logprob: -16.812501907348633
    6. '2' → logprob: -16.875001907348633
    7. '<|end|>' → logprob: -17.062501907348633
    8. '<' → logprob: -18.375001907348633
    9. '۱' → logprob: -18.437501907348633
    10. '１' → logprob: -18.500001907348633

Token 286: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 287: 'search' (ID: 2624)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 288: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005147866904735565
    2. '(n' → logprob: -7.625514984130859
    3. ' (' → logprob: -11.50051498413086
    4. '(N' → logprob: -12.25051498413086
    5. '(
' → logprob: -12.37551498413086
    6. '(_,' → logprob: -13.50051498413086
    7. '_' → logprob: -13.75051498413086
    8. '_search' → logprob: -13.75051498413086
    9. '_(' → logprob: -14.37551498413086
    10. '```' → logprob: -14.50051498413086

Token 289: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.00010449681576574221
    2. '0' → logprob: -9.875104904174805
    3. 'N' → logprob: -10.000104904174805
    4. '7' → logprob: -12.750104904174805
    5. ' ' → logprob: -13.000104904174805
    6. '1' → logprob: -15.000104904174805
    7. 'n' → logprob: -15.000104904174805
    8. '4' → logprob: -15.125104904174805
    9. 'eight' → logprob: -15.687604904174805
    10. '9' → logprob: -15.750104904174805

Token 290: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.453737710718997e-05
    2. ',y' → logprob: -10.125044822692871
    3. ',)' → logprob: -13.000044822692871
    4. ' ,' → logprob: -13.250044822692871
    5. '0' → logprob: -15.750044822692871
    6. ')' → logprob: -15.750044822692871
    7. ',:)' → logprob: -16.875043869018555
    8. ',int' → logprob: -17.750043869018555
    9. ',n' → logprob: -17.750043869018555
    10. ',current' → logprob: -17.875043869018555

Token 291: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5213274309644476e-05
    2. ' ' → logprob: -11.125015258789062
    3. '1' → logprob: -15.625015258789062
    4. '۰' → logprob: -16.812515258789062
    5. '   ' → logprob: -17.437515258789062
    6. ')' → logprob: -17.750015258789062
    7. '０' → logprob: -17.937515258789062
    8. '2' → logprob: -18.187515258789062
    9. '```' → logprob: -18.375015258789062
    10. 'def' → logprob: -18.500015258789062

Token 292: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ' )' → logprob: -13.875001907348633
    3. ')
' → logprob: -14.250001907348633
    4. '))' → logprob: -15.000001907348633
    5. ')}' → logprob: -16.750001907348633
    6. ')`' → logprob: -16.875001907348633
    7. ')#' → logprob: -17.875001907348633
    8. '),' → logprob: -18.000001907348633
    9. ')**' → logprob: -18.625001907348633
    10. ')}}' → logprob: -18.625001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 290
Tokens correctement prédits (1ère position, stricte): 123
Tokens correctement prédits (1ère position, avec adaptation): 138
Tokens correctement prédits (top 10): 238
Précision stricte (1ère position): 42.41%
Précision adaptée (1ère position): 47.59%
Précision (top 10): 82.07%
================================================================================
