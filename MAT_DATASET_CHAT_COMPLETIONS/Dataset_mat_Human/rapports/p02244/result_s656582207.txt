================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = 8 # クイーンの数
n = int(input())

raw = [-1 for i in range(N)]
col = [0 for i in range(N)] # FREE: 0, NOT_FREE: 1
dpos = [0 for i in range(2*N-1)] # FREE: 0, NOT_FREE: 1
dneg = [0 for i in range(2*N-1)] # FREE: 0, NOT_FREE: 1

def put_queen(i):
	if i == N:
		return True
	elif raw[i] != -1:
		if put_queen(i+1):
			return True
		else :
			return False
	else:
		for j in range(N):
			if col[j] == 1 or dpos[i+j] == 1 or dneg[i-j+N-1] == 1:
				continue
			raw[i] = j
			col[j] = dpos[i+j] = dneg[i-j+N-1] = 1
			if put_queen(i+1):
				return True
			else :
				raw[i] = -1
				col[j] = dpos[i+j] = dneg[i-j+N-1] = 0
		return False

def output_result():
	for i in range(N):
		out_raw = ['.' for i in range(N)]
		out_raw[raw[i]] = 'Q'
		print(''.join(map(str, out_raw)))

for i in range(n):
	r, c = map(int, input().split())
	raw[r] = c
	col[c] = dpos[r+c] = dneg[r-c+N-1] = 1

put_queen(0)
output_result()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: '8' (ID: 23)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.01598193868994713
    2. '100' → logprob: -4.765982151031494
    3. '5' → logprob: -5.765982151031494
    4. ' ' → logprob: -6.015982151031494
    5. '1' → logprob: -6.765982151031494
    6. '4' → logprob: -8.390981674194336
    7. '20' → logprob: -8.640981674194336
    8. '50' → logprob: -10.015981674194336
    9. '```' → logprob: -10.140981674194336
    10. '0' → logprob: -10.390981674194336

Token 4: ' #' (ID: 1069)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.9733058214187622
    2. '=' → logprob: -1.5983058214187622
    3. '```' → logprob: -1.8483058214187622
    4. '*' → logprob: -2.0983057022094727
    5. '#' → logprob: -3.2233057022094727
    6. '+' → logprob: -3.4733057022094727
    7. '[' → logprob: -4.348305702209473
    8. '\' → logprob: -4.348305702209473
    9. '`' → logprob: -4.473305702209473
    10. 'x' → logprob: -4.973305702209473

Token 5: ' ク' (ID: 84384)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10581847280263901
    2. '`' → logprob: -3.355818510055542
    3. ' chess' → logprob: -4.230818271636963
    4. '```' → logprob: -4.980818271636963
    5. ' ```' → logprob: -5.355818271636963
    6. ' space' → logprob: -5.480818271636963
    7. ' matrix' → logprob: -5.605818271636963
    8. ' #' → logprob: -5.730818271636963
    9. ' bit' → logprob: -5.730818271636963
    10. ' factorial' → logprob: -5.855818271636963

Token 6: 'イ' (ID: 6339)
  Prédit: 'ラス'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ラス' → logprob: -0.06503136456012726
    2. 'リ' → logprob: -3.0650312900543213
    3. 'ラ' → logprob: -4.8150315284729
    4. '```' → logprob: -5.6900315284729
    5. '#' → logprob: -6.4400315284729
    6. 'ログ' → logprob: -7.8150315284729
    7. 'ロ' → logprob: -8.315031051635742
    8. 'ル' → logprob: -8.315031051635742
    9. 'ッ' → logprob: -8.440031051635742
    10. 'リー' → logprob: -8.440031051635742

Token 7: 'ーン' (ID: 105456)
  Prédit: 'ーン'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ーン' → logprob: -0.027370426803827286
    2. 'ー' → logprob: -4.652370452880859
    3. 'ック' → logprob: -4.777370452880859
    4. '```' → logprob: -5.402370452880859
    5. 'ーズ' → logprob: -6.527370452880859
    6. 'ン' → logprob: -6.652370452880859
    7. '``' → logprob: -7.777370452880859
    8. '"""' → logprob: -8.90237045288086
    9. 'ッ' → logprob: -8.90237045288086
    10. '**' → logprob: -9.40237045288086

Token 8: 'の' (ID: 3385)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.3157990574836731
    2. '_' → logprob: -1.8157989978790283
    3. 's' → logprob: -3.1907989978790283
    4. '=' → logprob: -3.9407989978790283
    5. 'q' → logprob: -4.940799236297607
    6. ''s' → logprob: -4.940799236297607
    7. ' ' → logprob: -5.190799236297607
    8. '#' → logprob: -5.315799236297607
    9. '[' → logprob: -5.690799236297607
    10. ' =' → logprob: -5.815799236297607

Token 9: '数' (ID: 7135)
  Prédit: '配置'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '配置' → logprob: -0.017907703295350075
    2. '数' → logprob: -5.017907619476318
    3. '問題' → logprob: -5.017907619476318
    4. '```' → logprob: -6.392907619476318
    5. ' 配' → logprob: -7.517907619476318
    6. '置' → logprob: -7.767907619476318
    7. '割' → logprob: -8.392908096313477
    8. '移' → logprob: -8.517908096313477
    9. '#' → logprob: -8.767908096313477
    10. 'ヒ' → logprob: -8.767908096313477

Token 10: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3417868614196777
    2. 'Q' → logprob: -1.9667868614196777
    3. '```' → logprob: -2.0917868614196777
    4. '#' → logprob: -2.4667868614196777
    5. '
' → logprob: -2.5917868614196777
    6. 'n' → logprob: -2.9667868614196777
    7. ',' → logprob: -2.9667868614196777
    8. 'q' → logprob: -2.9667868614196777
    9. '\n' → logprob: -3.9667868614196777
    10. 'x' → logprob: -3.9667868614196777

Token 11: 'n' (ID: 77)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.5221007466316223
    2. '=' → logprob: -1.5221006870269775
    3. '#' → logprob: -3.2721006870269775
    4. 'q' → logprob: -3.3971006870269775
    5. ',' → logprob: -3.5221006870269775
    6. 'N' → logprob: -4.022100925445557
    7. '_' → logprob: -4.147100925445557
    8. 'n' → logprob: -4.272100925445557
    9. 's' → logprob: -5.022100925445557
    10. ':' → logprob: -5.147100925445557

Token 12: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.41903436183929443
    2. '_' → logprob: -1.5440343618392944
    3. ' ' → logprob: -2.169034481048584
    4. '=' → logprob: -5.794034481048584
    5. ' _' → logprob: -5.794034481048584
    6. 'u' → logprob: -6.419034481048584
    7. '   ' → logprob: -6.919034481048584
    8. 'e' → logprob: -7.294034481048584
    9. 'x' → logprob: -7.419034481048584
    10. '  ' → logprob: -7.544034481048584

Token 13: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2058030068874359
    2. '8' → logprob: -1.8308030366897583
    3. '4' → logprob: -4.205802917480469
    4. ' N' → logprob: -4.830802917480469
    5. 'N' → logprob: -6.080802917480469
    6. '0' → logprob: -8.580802917480469
    7. '  ' → logprob: -10.080802917480469
    8. '1' → logprob: -10.205802917480469
    9. '5' → logprob: -10.330802917480469
    10. '7' → logprob: -10.580802917480469

Token 14: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015083568170666695
    2. '(input' → logprob: -4.7650837898254395
    3. '('' → logprob: -5.3900837898254395
    4. '(N' → logprob: -7.5150837898254395
    5. '(n' → logprob: -7.7650837898254395
    6. '()' → logprob: -8.140083312988281
    7. '("' → logprob: -8.515083312988281
    8. '(`' → logprob: -8.765083312988281
    9. 'input' → logprob: -9.140083312988281
    10. '（' → logprob: -10.015083312988281

Token 15: '())

' (ID: 27654)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8404731750488281
    2. '())' → logprob: -1.0904731750488281
    3. '(' → logprob: -1.5904731750488281
    4. '('' → logprob: -4.090473175048828
    5. ')' → logprob: -4.590473175048828
    6. '("' → logprob: -7.840473175048828
    7. '(""))' → logprob: -8.340473175048828
    8. '("("' → logprob: -8.340473175048828
    9. '(
' → logprob: -8.965473175048828
    10. '("")' → logprob: -9.215473175048828

Token 16: 'raw' (ID: 1618)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.26575812697410583
    2. ' if' → logprob: -2.0157580375671387
    3. 'i' → logprob: -2.7657580375671387
    4. ' ' → logprob: -4.765758037567139
    5. '
' → logprob: -5.140758037567139
    6. '```' → logprob: -5.140758037567139
    7. ')' → logprob: -6.265758037567139
    8. '#' → logprob: -6.390758037567139
    9. ' i' → logprob: -6.390758037567139
    10. '' → logprob: -6.515758037567139

Token 17: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3397514522075653
    2. '_input' → logprob: -1.9647514820098877
    3. '(' → logprob: -2.8397514820098877
    4. '_n' → logprob: -3.4647514820098877
    5. '_raw' → logprob: -3.8397514820098877
    6. '()' → logprob: -4.964751243591309
    7. 's' → logprob: -5.339751243591309
    8. '```' → logprob: -6.214751243591309
    9. ')' → logprob: -6.339751243591309
    10. '_data' → logprob: -6.464751243591309

Token 18: ' [-' (ID: 20191)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[input' → logprob: -1.3265957832336426
    2. 'input' → logprob: -1.5765957832336426
    3. '[]' → logprob: -1.7015957832336426
    4. '[' → logprob: -1.9515957832336426
    5. ' input' → logprob: -2.8265957832336426
    6. '[n' → logprob: -2.8265957832336426
    7. ' [' → logprob: -3.5765957832336426
    8. 'list' → logprob: -3.7015957832336426
    9. ' []' → logprob: -4.701595783233643
    10. ' list' → logprob: -5.576595783233643

Token 19: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002145858481526375
    2. '-' → logprob: -6.752145767211914
    3. 'n' → logprob: -7.752145767211914
    4. '(-' → logprob: -9.127145767211914
    5. ' ' → logprob: -9.502145767211914
    6. '100' → logprob: -9.877145767211914
    7. '(' → logprob: -10.127145767211914
    8. '2' → logprob: -10.127145767211914
    9. '(n' → logprob: -10.502145767211914
    10. 'i' → logprob: -10.877145767211914

Token 20: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0648999884724617
    2. ' for' → logprob: -3.0648999214172363
    3. ',' → logprob: -4.939899921417236
    4. ']*' → logprob: -4.939899921417236
    5. ' ]' → logprob: -6.689899921417236
    6. 'for' → logprob: -7.689899921417236
    7. ')' → logprob: -10.064900398254395
    8. ']*(' → logprob: -10.439900398254395
    9. '1' → logprob: -11.064900398254395
    10. '	for' → logprob: -11.189900398254395

Token 21: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.4445064961910248
    2. '_' → logprob: -1.4445065259933472
    3. ' ' → logprob: -2.6945064067840576
    4. ' i' → logprob: -3.1945064067840576
    5. ' range' → logprob: -4.444506645202637
    6. 'range' → logprob: -6.819506645202637
    7. 'i' → logprob: -7.319506645202637
    8. '_i' → logprob: -7.944506645202637
    9. ' in' → logprob: -8.444506645202637
    10. '_range' → logprob: -8.569506645202637

Token 22: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08340819925069809
    2. 'in' → logprob: -2.5834081172943115
    3. ' range' → logprob: -6.083408355712891
    4. ' ' → logprob: -6.708408355712891
    5. 'range' → logprob: -6.958408355712891
    6. '(range' → logprob: -10.95840835571289
    7. '	range' → logprob: -11.83340835571289
    8. ')' → logprob: -12.58340835571289
    9. '(' → logprob: -12.70840835571289
    10. '	in' → logprob: -12.83340835571289

Token 23: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20141586661338806
    2. 'range' → logprob: -1.7014158964157104
    3. '	range' → logprob: -13.326416015625
    4. '(range' → logprob: -14.326416015625
    5. ' ' → logprob: -16.076416015625
    6. '_range' → logprob: -17.326416015625
    7. ' xrange' → logprob: -17.701416015625
    8. '.range' → logprob: -17.701416015625
    9. 'ran' → logprob: -17.826416015625
    10. ')' → logprob: -17.951416015625

Token 24: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.10135506093502045
    2. '(' → logprob: -2.7263550758361816
    3. '(n' → logprob: -3.4763550758361816
    4. ')' → logprob: -12.851354598999023
    5. '(
' → logprob: -13.351354598999023
    6. ' (' → logprob: -13.351354598999023
    7. '（' → logprob: -13.726354598999023
    8. '((' → logprob: -13.976354598999023
    9. 'N' → logprob: -14.476354598999023
    10. '(

' → logprob: -15.226354598999023

Token 25: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00034714414505288005
    2. ')' → logprob: -8.375347137451172
    3. ')])' → logprob: -9.625347137451172
    4. ' )' → logprob: -10.750347137451172
    5. ']' → logprob: -11.750347137451172
    6. ')],' → logprob: -12.125347137451172
    7. '])]' → logprob: -12.125347137451172
    8. ')]
' → logprob: -12.750347137451172
    9. '）' → logprob: -13.500347137451172
    10. '])' → logprob: -13.625347137451172

Token 26: 'col' (ID: 1798)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4659455716609955
    2. '
' → logprob: -1.7159456014633179
    3. 'r' → logprob: -3.3409454822540283
    4. '(' → logprob: -3.4659454822540283
    5. ')' → logprob: -3.4659454822540283
    6. ' ' → logprob: -3.8409454822540283
    7. '[' → logprob: -4.340945720672607
    8. '\n' → logprob: -4.465945720672607
    9. '\' → logprob: -4.590945720672607
    10. 'i' → logprob: -5.215945720672607

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.188932403922081
    2. 's' → logprob: -2.313932418823242
    3. '=' → logprob: -3.188932418823242
    4. '_used' → logprob: -4.813932418823242
    5. '_' → logprob: -5.688932418823242
    6. '=[]' → logprob: -5.938932418823242
    7. 'used' → logprob: -6.063932418823242
    8. 'um' → logprob: -6.188932418823242
    9. '＝' → logprob: -6.188932418823242
    10. '[]' → logprob: -6.438932418823242

Token 28: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1132647767663002
    2. ' [' → logprob: -2.238264799118042
    3. '[n' → logprob: -8.863265037536621
    4. '[N' → logprob: -8.863265037536621
    5. '[-' → logprob: -9.863265037536621
    6. ' ' → logprob: -10.363265037536621
    7. '[]' → logprob: -10.613265037536621
    8. '[int' → logprob: -11.238265037536621
    9. '[i' → logprob: -12.488265037536621
    10. '0' → logprob: -12.488265037536621

Token 29: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0006556084263138473
    2. ' False' → logprob: -7.625655651092529
    3. '0' → logprob: -9.000655174255371
    4. 'True' → logprob: -10.125655174255371
    5. '(False' → logprob: -12.750655174255371
    6. 'F' → logprob: -14.625655174255371
    7. '   ' → logprob: -15.375655174255371
    8. ']' → logprob: -16.125656127929688
    9. '=False' → logprob: -16.625656127929688
    10. ' ' → logprob: -16.750656127929688

Token 30: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.39675015211105347
    2. ' for' → logprob: -1.2717502117156982
    3. 'for' → logprob: -3.8967502117156982
    4. ']*' → logprob: -3.8967502117156982
    5. ']*(' → logprob: -5.146749973297119
    6. ' ]' → logprob: -7.771749973297119
    7. ')' → logprob: -9.021750450134277
    8. ' ' → logprob: -9.771750450134277
    9. '	for' → logprob: -9.896750450134277
    10. '```' → logprob: -11.146750450134277

Token 31: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.168264701962471
    2. 'range' → logprob: -1.9182647466659546
    3. ' i' → logprob: -5.418264865875244
    4. 'i' → logprob: -6.293264865875244
    5. '(range' → logprob: -7.168264865875244
    6. ' ' → logprob: -7.793264865875244
    7. ' in' → logprob: -8.668264389038086
    8. '(' → logprob: -8.793264389038086
    9. '_' → logprob: -9.668264389038086
    10. '(i' → logprob: -10.543264389038086

Token 32: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.30765074491500854
    2. ' range' → logprob: -2.3076508045196533
    3. 'in' → logprob: -2.5576508045196533
    4. 'range' → logprob: -2.6826508045196533
    5. '(range' → logprob: -4.682650566101074
    6. '(' → logprob: -4.932650566101074
    7. ' (' → logprob: -6.432650566101074
    8. ' ' → logprob: -7.682650566101074
    9. '(N' → logprob: -7.807650566101074
    10. '\xe7\xaf' → logprob: -8.682650566101074

Token 33: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.38713210821151733
    2. ' range' → logprob: -1.137132167816162
    3. '(range' → logprob: -8.262131690979004
    4. '(' → logprob: -13.387131690979004
    5. '	range' → logprob: -13.762131690979004
    6. ' ' → logprob: -16.63713264465332
    7. 'rang' → logprob: -17.01213264465332
    8. '\xe7\xaf' → logprob: -17.13713264465332
    9. ' col' → logprob: -17.38713264465332
    10. 'ran' → logprob: -17.51213264465332

Token 34: '(N' (ID: 10564)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.5881356000900269
    2. 'range' → logprob: -1.8381356000900269
    3. '(N' → logprob: -1.9631356000900269
    4. ' range' → logprob: -2.2131357192993164
    5. '(' → logprob: -3.3381357192993164
    6. ' (' → logprob: -9.963135719299316
    7. '	range' → logprob: -10.088135719299316
    8. '\xe7\xaf' → logprob: -10.463135719299316
    9. ')' → logprob: -10.463135719299316
    10. 'Range' → logprob: -11.088135719299316

Token 35: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -8.41129949549213e-05
    2. ')]
' → logprob: -10.250083923339844
    3. ')' → logprob: -11.375083923339844
    4. ']' → logprob: -11.500083923339844
    5. '])]' → logprob: -11.500083923339844
    6. ' )' → logprob: -12.000083923339844
    7. '])' → logprob: -12.500083923339844
    8. '')]' → logprob: -13.375083923339844
    9. ')])' → logprob: -13.500083923339844
    10. ')]

' → logprob: -13.625083923339844

Token 36: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: ' FREE' (ID: 17551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' \xe5\x88' → logprob: -0.7894570231437683
    2. ' \xe7' → logprob: -1.539457082748413
    3. ' ' → logprob: -2.289457082748413
    4. '列' → logprob: -2.414457082748413
    5. '#' → logprob: -3.289457082748413
    6. ' 行' → logprob: -4.164456844329834
    7. ' 使用' → logprob: -4.664456844329834
    8. ' コ' → logprob: -4.789456844329834
    9. '\xe7\xb8' → logprob: -5.164456844329834
    10. ' #' → logprob: -5.164456844329834

Token 38: ':' (ID: 25)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05790393054485321
    2. '1' → logprob: -3.807904005050659
    3. ' col' → logprob: -4.05790376663208
    4. '<|end|>' → logprob: -4.68290376663208
    5. '<|end|>' → logprob: -6.43290376663208
    6. '0' → logprob: -7.05790376663208
    7. ' True' → logprob: -7.05790376663208
    8. 'col' → logprob: -7.18290376663208
    9. '  ' → logprob: -7.80790376663208
    10. ',' → logprob: -8.057904243469238

Token 40: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11023268848657608
    2. 'col' → logprob: -3.2352325916290283
    3. ' col' → logprob: -4.110232830047607
    4. '0' → logprob: -4.360232830047607
    5. ' ' → logprob: -4.610232830047607
    6. '(' → logprob: -4.860232830047607
    7. 'N' → logprob: -4.985232830047607
    8. 'True' → logprob: -6.735232830047607
    9. 'columns' → logprob: -6.985232830047607
    10. '[' → logprob: -6.985232830047607

Token 41: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: ' NOT' (ID: 7116)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6525831818580627
    2. '1' → logprob: -0.7775831818580627
    3. ' occupied' → logprob: -5.527583122253418
    4. ' used' → logprob: -5.777583122253418
    5. 'occupied' → logprob: -5.902583122253418
    6. '攻' → logprob: -6.902583122253418
    7. '```' → logprob: -6.902583122253418
    8. '　' → logprob: -7.027583122253418
    9. ' not' → logprob: -7.027583122253418
    10. ' USED' → logprob: -7.152583122253418

Token 43: '_FREE' (ID: 89482)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8068167567253113
    2. ',' → logprob: -2.431816816329956
    3. '0' → logprob: -2.556816816329956
    4. '-' → logprob: -2.806816816329956
    5. '1' → logprob: -2.931816816329956
    6. '=' → logprob: -3.181816816329956
    7. '_FREE' → logprob: -3.306816816329956
    8. ' ,' → logprob: -3.931816816329956
    9. ' =' → logprob: -3.931816816329956
    10. ' -' → logprob: -4.306816577911377

Token 44: ':' (ID: 25)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11288076639175415
    2. ' ' → logprob: -2.2378807067871094
    3. '<|end|>' → logprob: -10.61288070678711
    4. '0' → logprob: -11.73788070678711
    5. '```' → logprob: -12.61288070678711
    6. ' ' → logprob: -12.61288070678711
    7. '  ' → logprob: -13.11288070678711
    8. '１' → logprob: -13.17538070678711
    9. '   ' → logprob: -13.30038070678711
    10. '　' → logprob: -13.36288070678711

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.670925358776003e-05
    2. ' ' → logprob: -9.750066757202148
    3. '１' → logprob: -12.625066757202148
    4. '-' → logprob: -13.375066757202148
    5. '  ' → logprob: -14.500066757202148
    6. '   ' → logprob: -15.125066757202148
    7. '0' → logprob: -15.250066757202148
    8. '	' → logprob: -15.250066757202148
    9. '```' → logprob: -15.625066757202148
    10. '
' → logprob: -15.625066757202148

Token 47: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2486567497253418
    2. 'row' → logprob: -1.2486567497253418
    3. '<|end|>' → logprob: -1.9986567497253418
    4. 'diag' → logprob: -2.123656749725342
    5. ' row' → logprob: -2.998656749725342
    6. ' diag' → logprob: -3.748656749725342
    7. ',' → logprob: -3.998656749725342
    8. '
' → logprob: -4.248656749725342
    9. ' diagonal' → logprob: -4.998656749725342
    10. ' ' → logprob: -4.998656749725342

Token 48: 'd' (ID: 67)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.7827784419059753
    2. 'diag' → logprob: -1.7827785015106201
    3. 'dia' → logprob: -1.9077785015106201
    4. 'row' → logprob: -2.15777850151062
    5. 'd' → logprob: -2.90777850151062
    6. 'slash' → logprob: -4.282778263092041
    7. 'ld' → logprob: -5.282778263092041
    8. 'rd' → logprob: -5.282778263092041
    9. '```' → logprob: -5.407778263092041
    10. 'di' → logprob: -5.532778263092041

Token 49: 'pos' (ID: 1103)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8976739645004272
    2. 'i' → logprob: -1.2726739645004272
    3. 'ia' → logprob: -1.2726739645004272
    4. 'own' → logprob: -3.647674083709717
    5. 'r' → logprob: -6.772674083709717
    6. ' =' → logprob: -6.772674083709717
    7. 'l' → logprob: -7.647674083709717
    8. '2' → logprob: -7.897674083709717
    9. 'u' → logprob: -8.772673606872559
    10. '_r' → logprob: -8.897673606872559

Token 50: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9262646436691284
    2. ' =' → logprob: -1.0512646436691284
    3. 'itive' → logprob: -2.301264762878418
    4. 't' → logprob: -2.926264762878418
    5. '=[' → logprob: -3.176264762878418
    6. 'i' → logprob: -3.426264762878418
    7. '[' → logprob: -4.801264762878418
    8. 's' → logprob: -5.301264762878418
    9. 'itiv' → logprob: -5.801264762878418
    10. 'it' → logprob: -6.426264762878418

Token 51: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.22546884417533875
    2. ' [' → logprob: -1.6004688739776611
    3. ' ' → logprob: -10.100468635559082
    4. '[-' → logprob: -12.725468635559082
    5. '  ' → logprob: -13.225468635559082
    6. '0' → logprob: -13.475468635559082
    7. '<|end|>' → logprob: -13.725468635559082
    8. '[col' → logprob: -13.975468635559082
    9. ' [-' → logprob: -14.225468635559082
    10. '   ' → logprob: -14.350468635559082

Token 52: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014201114885509014
    2. '[' → logprob: -4.3892011642456055
    3. ' ' → logprob: -6.5142011642456055
    4. ' [' → logprob: -9.264201164245605
    5. '1' → logprob: -9.764201164245605
    6. 'for' → logprob: -10.889201164245605
    7. '(' → logprob: -11.389201164245605
    8. ' for' → logprob: -12.014201164245605
    9. '[-' → logprob: -12.639201164245605
    10. '-' → logprob: -12.764201164245605

Token 53: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38773366808891296
    2. 'for' → logprob: -1.1377336978912354
    3. '	for' → logprob: -7.637733459472656
    4. ' ' → logprob: -8.012733459472656
    5. '<|end|>' → logprob: -10.387733459472656
    6. '```' → logprob: -12.637733459472656
    7. ')' → logprob: -12.887733459472656
    8. ']' → logprob: -13.012733459472656
    9. '<|end|>' → logprob: -13.262733459472656
    10. '	' → logprob: -13.387733459472656

Token 54: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.025082536041736603
    2. ' range' → logprob: -4.025082588195801
    3. '(range' → logprob: -5.025082588195801
    4. 'for' → logprob: -8.4000825881958
    5. 'i' → logprob: -10.1500825881958
    6. '(' → logprob: -10.4000825881958
    7. '(i' → logprob: -11.5250825881958
    8. ' ' → logprob: -11.7750825881958
    9. '	range' → logprob: -12.0250825881958
    10. 'in' → logprob: -12.2750825881958

Token 55: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06247108429670334
    2. 'in' → logprob: -2.8124711513519287
    3. 'range' → logprob: -7.81247091293335
    4. ' range' → logprob: -10.062471389770508
    5. 'for' → logprob: -10.937471389770508
    6. '(range' → logprob: -11.687471389770508
    7. ' ' → logprob: -11.812471389770508
    8. '<|end|>' → logprob: -11.937471389770508
    9. '(' → logprob: -12.812471389770508
    10. ' for' → logprob: -13.562471389770508

Token 56: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25411471724510193
    2. ' range' → logprob: -1.5041147470474243
    3. '(range' → logprob: -6.129114627838135
    4. '	range' → logprob: -13.004115104675293
    5. '(' → logprob: -13.879115104675293
    6. '_range' → logprob: -14.879115104675293
    7. ' (' → logprob: -15.504115104675293
    8. '.range' → logprob: -15.504115104675293
    9. ' ' → logprob: -15.629115104675293
    10. 'for' → logprob: -16.004114151000977

Token 57: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38713347911834717
    2. '(N' → logprob: -1.1371334791183472
    3. '((' → logprob: -9.387133598327637
    4. 'N' → logprob: -10.137133598327637
    5. '(n' → logprob: -10.387133598327637
    6. '(range' → logprob: -10.512133598327637
    7. '2' → logprob: -10.762133598327637
    8. 'range' → logprob: -10.762133598327637
    9. '(-' → logprob: -11.262133598327637
    10. ' (' → logprob: -11.762133598327637

Token 58: '2' (ID: 17)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.11772985756397247
    2. '2' → logprob: -2.367729902267456
    3. '(' → logprob: -4.117729663848877
    4. '(N' → logprob: -7.117729663848877
    5. '1' → logprob: -8.992730140686035
    6. '3' → logprob: -10.117730140686035
    7. ' N' → logprob: -10.492730140686035
    8. ' ' → logprob: -10.867730140686035
    9. 'n' → logprob: -10.867730140686035
    10. ' (' → logprob: -11.742730140686035

Token 59: '*N' (ID: 107360)
  Prédit: '*N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*N' → logprob: -0.2602626085281372
    2. 'N' → logprob: -1.5102626085281372
    3. '*' → logprob: -4.885262489318848
    4. ' *' → logprob: -7.260262489318848
    5. '*n' → logprob: -11.885262489318848
    6. '*(' → logprob: -12.010262489318848
    7. ' ' → logprob: -12.635262489318848
    8. ' N' → logprob: -12.760262489318848
    9. ')' → logprob: -13.135262489318848
    10. '[N' → logprob: -13.385262489318848

Token 60: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1315939873456955
    2. ')]' → logprob: -2.131593942642212
    3. ' -' → logprob: -5.631594181060791
    4. ')' → logprob: -7.131594181060791
    5. '1' → logprob: -8.756593704223633
    6. ')])' → logprob: -10.256593704223633
    7. ']' → logprob: -11.256593704223633
    8. '+' → logprob: -11.381593704223633
    9. '```' → logprob: -12.006593704223633
    10. '])]' → logprob: -12.256593704223633

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007373234839178622
    2. '-' → logprob: -7.625737190246582
    3. ' ' → logprob: -9.188237190246582
    4. '2' → logprob: -9.875737190246582
    5. ')' → logprob: -11.125737190246582
    6. '3' → logprob: -11.188237190246582
    7. '

' → logprob: -11.438237190246582
    8. '```' → logprob: -11.625737190246582
    9. ' -' → logprob: -11.688237190246582
    10. '
' → logprob: -12.313237190246582

Token 62: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00011689399980241433
    2. ']' → logprob: -9.750117301940918
    3. ')' → logprob: -10.250117301940918
    4. ' )' → logprob: -11.375117301940918
    5. '])' → logprob: -13.125117301940918
    6. '])]' → logprob: -13.250117301940918
    7. '')]' → logprob: -13.250117301940918
    8. ')]
' → logprob: -13.375117301940918
    9. '1' → logprob: -14.000117301940918
    10. ' ]' → logprob: -14.250117301940918

Token 63: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38671135902404785
    2. '<|end|>' → logprob: -1.2617113590240479
    3. 'd' → logprob: -4.011711120605469
    4. ' for' → logprob: -5.886711120605469
    5. ' =' → logprob: -6.136711120605469
    6. '#' → logprob: -6.136711120605469
    7. '<|end|>' → logprob: -6.136711120605469
    8. ')' → logprob: -6.261711120605469
    9. ' col' → logprob: -6.386711120605469
    10. ' d' → logprob: -6.511711120605469

Token 64: ' FREE' (ID: 17551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6636524796485901
    2. ' for' → logprob: -0.7886524796485901
    3. ' ,' → logprob: -4.413652420043945
    4. 'for' → logprob: -4.788652420043945
    5. ' =' → logprob: -5.913652420043945
    6. '<|end|>' → logprob: -6.163652420043945
    7. ' ' → logprob: -6.413652420043945
    8. ')' → logprob: -7.038652420043945
    9. 'で' → logprob: -7.538652420043945
    10. '=' → logprob: -7.538652420043945

Token 66: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023249903693795204
    2. ' ' → logprob: -3.773249864578247
    3. '1' → logprob: -13.398249626159668
    4. '```' → logprob: -13.523249626159668
    5. '<|end|>' → logprob: -14.773249626159668
    6. '`' → logprob: -15.398249626159668
    7. '０' → logprob: -15.523249626159668
    8. ' ' → logprob: -16.023250579833984
    9. '   ' → logprob: -16.273250579833984
    10. '  ' → logprob: -16.898250579833984

Token 67: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002670575922820717
    2. ' ' → logprob: -8.375267028808594
    3. '1' → logprob: -10.250267028808594
    4. '０' → logprob: -14.625267028808594
    5. '<|end|>' → logprob: -14.875267028808594
    6. '```' → logprob: -16.437767028808594
    7. '-' → logprob: -16.687767028808594
    8. '۰' → logprob: -16.750267028808594
    9. '<|end|>' → logprob: -16.875267028808594
    10. '=' → logprob: -17.562767028808594

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.140629842877388
    2. 'd' → logprob: -2.390629768371582
    3. 'col' → logprob: -4.515629768371582
    4. ' col' → logprob: -4.765629768371582
    5. 'for' → logprob: -5.140629768371582
    6. ',col' → logprob: -5.140629768371582
    7. ' ,' → logprob: -6.015629768371582
    8. ',d' → logprob: -6.640629768371582
    9. ' for' → logprob: -6.765629768371582
    10. '<|end|>' → logprob: -6.890629768371582

Token 69: ' NOT' (ID: 7116)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5317813754081726
    2. ' ' → logprob: -1.0317814350128174
    3. '<|end|>' → logprob: -3.1567814350128174
    4. 'NOT' → logprob: -5.281781196594238
    5. ' NOT' → logprob: -6.031781196594238
    6. '0' → logprob: -6.281781196594238
    7. 'Not' → logprob: -7.031781196594238
    8. 'd' → logprob: -7.406781196594238
    9. ' not' → logprob: -7.656781196594238
    10. ' Not' → logprob: -7.656781196594238

Token 70: '_FREE' (ID: 89482)
  Prédit: '_FREE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_FREE' → logprob: -0.0003945688367821276
    2. '_' → logprob: -8.500394821166992
    3. '_free' → logprob: -9.250394821166992
    4. '_F' → logprob: -10.625394821166992
    5. '_Free' → logprob: -10.750394821166992
    6. 'FREE' → logprob: -11.375394821166992
    7. '_POS' → logprob: -11.500394821166992
    8. ' _' → logprob: -11.875394821166992
    9. '```' → logprob: -12.125394821166992
    10. '_FINE' → logprob: -13.375394821166992

Token 71: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00014132341311778873
    2. '<|end|>' → logprob: -9.250141143798828
    3. ' :' → logprob: -11.125141143798828
    4. '```' → logprob: -11.500141143798828
    5. '：' → logprob: -11.875141143798828
    6. '<|end|>' → logprob: -12.375141143798828
    7. '=' → logprob: -13.250141143798828
    8. ')' → logprob: -14.375141143798828
    9. '.' → logprob: -14.500141143798828
    10. 'の' → logprob: -14.625141143798828

Token 72: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024775585625320673
    2. ' ' → logprob: -6.002477645874023
    3. '<|end|>' → logprob: -13.877477645874023
    4. '１' → logprob: -15.002477645874023
    5. '0' → logprob: -15.127477645874023
    6. '```' → logprob: -15.252477645874023
    7. '<|end|>' → logprob: -17.502477645874023
    8. '[' → logprob: -18.064977645874023
    9. '-' → logprob: -18.189977645874023
    10. '   ' → logprob: -18.564977645874023

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -13.000003814697266
    3. '<|end|>' → logprob: -13.875003814697266
    4. '１' → logprob: -15.000003814697266
    5. '0' → logprob: -15.125003814697266
    6. '<|end|>' → logprob: -16.375003814697266
    7. '```' → logprob: -16.625003814697266
    8. '-' → logprob: -18.500003814697266
    9. '2' → logprob: -18.625003814697266
    10. '...' → logprob: -19.375003814697266

Token 74: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.05200909078121185
    2. '<|end|>' → logprob: -3.427009105682373
    3. ' d' → logprob: -5.052009105682373
    4. ' ' → logprob: -5.177009105682373
    5. ')' → logprob: -5.802009105682373
    6. '   ' → logprob: -7.302009105682373
    7. '[' → logprob: -7.302009105682373
    8. 's' → logprob: -7.927009105682373
    9. '#' → logprob: -8.802008628845215
    10. ' ' → logprob: -9.177008628845215

Token 75: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.3915141355246305e-05
    2. 'dn' → logprob: -11.62502384185791
    3. 'dp' → logprob: -12.50002384185791
    4. '```' → logprob: -12.87502384185791
    5. 'dm' → logprob: -13.50002384185791
    6. 'dd' → logprob: -13.50002384185791
    7. '[d' → logprob: -14.00002384185791
    8. 'ds' → logprob: -14.12502384185791
    9. '``' → logprob: -14.25002384185791
    10. 'dtype' → logprob: -14.62502384185791

Token 76: 'neg' (ID: 18775)
  Prédit: 'neg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.0011372390436008573
    2. 'pos' → logprob: -7.1261372566223145
    3. 'nag' → logprob: -8.376136779785156
    4. 'rev' → logprob: -10.876136779785156
    5. 'ng' → logprob: -11.126136779785156
    6. 'nega' → logprob: -11.376136779785156
    7. 'nev' → logprob: -11.626136779785156
    8. 'ne' → logprob: -12.376136779785156
    9. 'min' → logprob: -12.376136779785156
    10. 'n' → logprob: -12.626136779785156

Token 77: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3485439717769623
    2. ' =' → logprob: -1.2235440015792847
    3. '＝' → logprob: -9.973544120788574
    4. '[' → logprob: -10.098544120788574
    5. '=[' → logprob: -11.723544120788574
    6. ' ' → logprob: -13.598544120788574
    7. ']' → logprob: -14.348544120788574
    8. ' =[' → logprob: -14.598544120788574
    9. 's' → logprob: -15.473544120788574
    10. '<|end|>' → logprob: -15.723544120788574

Token 78: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1602267622947693
    2. ' [' → logprob: -1.910226821899414
    3. ' ' → logprob: -13.035226821899414
    4. '([' → logprob: -16.160226821899414
    5. '0' → logprob: -16.410226821899414
    6. '=[' → logprob: -16.660226821899414
    7. '[-' → logprob: -17.660226821899414
    8. '<|end|>' → logprob: -17.785226821899414
    9. ' ' → logprob: -17.910226821899414
    10. '	' → logprob: -18.285226821899414

Token 79: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000890259922016412
    2. '[' → logprob: -7.500890254974365
    3. ' ' → logprob: -8.000890731811523
    4. ' [' → logprob: -13.500890731811523
    5. '(' → logprob: -15.250890731811523
    6. '<|end|>' → logprob: -15.500890731811523
    7. 'for' → logprob: -17.000890731811523
    8. ' for' → logprob: -17.500890731811523
    9. ' ' → logprob: -17.625890731811523
    10. '  ' → logprob: -18.000890731811523

Token 80: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13139237463474274
    2. ' for' → logprob: -2.131392478942871
    3. '[' → logprob: -5.506392478942871
    4. '(' → logprob: -8.506392478942871
    5. '(for' → logprob: -9.381392478942871
    6. '	for' → logprob: -9.881392478942871
    7. ' ' → logprob: -11.006392478942871
    8. ']' → logprob: -11.381392478942871
    9. ')' → logprob: -11.756392478942871
    10. '﻿' → logprob: -12.506392478942871

Token 81: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08698556572198868
    2. ' i' → logprob: -3.0869855880737305
    3. 'range' → logprob: -3.9619855880737305
    4. ' range' → logprob: -4.3369855880737305
    5. '(i' → logprob: -6.0869855880737305
    6. '[i' → logprob: -6.3369855880737305
    7. '(' → logprob: -7.8369855880737305
    8. 'in' → logprob: -8.08698558807373
    9. ' ' → logprob: -8.58698558807373
    10. 'for' → logprob: -8.83698558807373

Token 82: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.25204676389694214
    2. ' in' → logprob: -1.502046823501587
    3. 'range' → logprob: -9.252046585083008
    4. ' range' → logprob: -12.127046585083008
    5. ' ' → logprob: -12.752046585083008
    6. '```' → logprob: -13.252046585083008
    7. '(range' → logprob: -13.377046585083008
    8. 'i' → logprob: -13.377046585083008
    9. 'い' → logprob: -13.502046585083008
    10. '(' → logprob: -13.627046585083008

Token 83: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03194042295217514
    2. '(' → logprob: -4.031940460205078
    3. ' range' → logprob: -4.406940460205078
    4. '(range' → logprob: -6.531940460205078
    5. 'for' → logprob: -10.156940460205078
    6. '[' → logprob: -12.406940460205078
    7. ' (' → logprob: -13.281940460205078
    8. '	range' → logprob: -13.906940460205078
    9. ' ' → logprob: -14.781940460205078
    10. ' for' → logprob: -15.156940460205078

Token 84: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.951771421066951e-05
    2. '2' → logprob: -11.875029563903809
    3. ' (' → logprob: -12.125029563903809
    4. 'range' → logprob: -12.125029563903809
    5. '((' → logprob: -12.250029563903809
    6. 'for' → logprob: -12.625029563903809
    7. '(range' → logprob: -12.750029563903809
    8. ' range' → logprob: -15.500029563903809
    9. '（' → logprob: -15.875029563903809
    10. '(-' → logprob: -16.500028610229492

Token 85: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03816944360733032
    2. '(' → logprob: -3.2881693840026855
    3. ' ' → logprob: -10.288169860839844
    4. 'range' → logprob: -10.288169860839844
    5. ' (' → logprob: -10.538169860839844
    6. '-' → logprob: -11.788169860839844
    7. ')' → logprob: -12.038169860839844
    8. '1' → logprob: -12.413169860839844
    9. '   ' → logprob: -12.413169860839844
    10. '0' → logprob: -12.913169860839844

Token 86: '*N' (ID: 107360)
  Prédit: '*N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*N' → logprob: -0.00047487911069765687
    2. '*' → logprob: -7.75047492980957
    3. 'N' → logprob: -10.12547492980957
    4. ' *' → logprob: -13.12547492980957
    5. '*n' → logprob: -13.37547492980957
    6. '*num' → logprob: -15.62547492980957
    7. '*(' → logprob: -16.12547492980957
    8. '```' → logprob: -16.50047492980957
    9. '＊' → logprob: -16.75047492980957
    10. '*M' → logprob: -16.75047492980957

Token 87: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -8.673547563375905e-05
    2. ' -' → logprob: -9.375086784362793
    3. '1' → logprob: -13.625086784362793
    4. ')]' → logprob: -15.250086784362793
    5. '```' → logprob: -15.250086784362793
    6. ')' → logprob: -16.875085830688477
    7. '–' → logprob: -17.125085830688477
    8. '−' → logprob: -17.250085830688477
    9. ' ' → logprob: -17.500085830688477
    10. '-
' → logprob: -17.625085830688477

Token 88: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020926215802319348
    2. '-' → logprob: -8.500208854675293
    3. ' ' → logprob: -13.375208854675293
    4. '2' → logprob: -13.625208854675293
    5. '```' → logprob: -13.875208854675293
    6. ')' → logprob: -14.500208854675293
    7. '<|end|>' → logprob: -15.250208854675293
    8. '

' → logprob: -16.12520980834961
    9. '0' → logprob: -16.25020980834961
    10. '１' → logprob: -16.37520980834961

Token 89: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -6.64708495605737e-05
    2. ']' → logprob: -9.750066757202148
    3. ')' → logprob: -12.250066757202148
    4. ' )' → logprob: -13.875066757202148
    5. ')]
' → logprob: -14.250066757202148
    6. '#' → logprob: -14.500066757202148
    7. ' ]' → logprob: -15.125066757202148
    8. '）' → logprob: -15.375066757202148
    9. '')]' → logprob: -15.625066757202148
    10. '])]' → logprob: -15.625066757202148

Token 90: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: ' FREE' (ID: 17551)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07726175338029861
    2. 'FREE' → logprob: -3.0772616863250732
    3. ' ' → logprob: -3.7022616863250732
    4. '1' → logprob: -6.202261924743652
    5. ' FREE' → logprob: -7.577261924743652
    6. '_FREE' → logprob: -7.827261924743652
    7. 'F' → logprob: -8.077261924743652
    8. 'Free' → logprob: -9.077261924743652
    9. 'free' → logprob: -10.327261924743652
    10. '=' → logprob: -10.577261924743652

Token 92: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007728204363957047
    2. '=' → logprob: -7.250772953033447
    3. ' :' → logprob: -10.625772476196289
    4. '：' → logprob: -11.250772476196289
    5. ':
' → logprob: -12.000772476196289
    6. '0' → logprob: -12.375772476196289
    7. '1' → logprob: -12.875772476196289
    8. ' =' → logprob: -13.125772476196289
    9. '[' → logprob: -13.375772476196289
    10. '```' → logprob: -13.625772476196289

Token 93: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5326621532440186
    2. ' ' → logprob: -0.9076621532440186
    3. '1' → logprob: -4.657662391662598
    4. ' ' → logprob: -13.845162391662598
    5. '<|end|>' → logprob: -14.220162391662598
    6. '```' → logprob: -14.720162391662598
    7. '[' → logprob: -14.845162391662598
    8. '  ' → logprob: -15.157662391662598
    9. '   ' → logprob: -15.657662391662598
    10. '=' → logprob: -15.720162391662598

Token 94: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.043151967227458954
    2. '0' → logprob: -3.16815185546875
    3. ' ' → logprob: -8.79315185546875
    4. '```' → logprob: -14.91815185546875
    5. '<|end|>' → logprob: -15.91815185546875
    6. '-' → logprob: -16.10565185546875
    7. '１' → logprob: -17.10565185546875
    8. '   ' → logprob: -17.16815185546875
    9. '<|end|>' → logprob: -17.54315185546875
    10. '' → logprob: -17.54315185546875

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024077657144516706
    2. ' ,' → logprob: -6.627407550811768
    3. '=' → logprob: -7.877407550811768
    4. ' for' → logprob: -8.752408027648926
    5. 'for' → logprob: -8.877408027648926
    6. ',
' → logprob: -9.252408027648926
    7. ',#' → logprob: -9.252408027648926
    8. '#' → logprob: -9.377408027648926
    9. ')' → logprob: -10.627408027648926
    10. '<|end|>' → logprob: -11.127408027648926

Token 96: ' NOT' (ID: 7116)
  Prédit: ' NOT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' NOT' → logprob: -1.0124226808547974
    2. 'NOT' → logprob: -1.1374226808547974
    3. ' ' → logprob: -1.5124226808547974
    4. '1' → logprob: -2.387422561645508
    5. '0' → logprob: -5.887422561645508
    6. ' not' → logprob: -7.387422561645508
    7. 'not' → logprob: -8.387422561645508
    8. 'Not' → logprob: -9.762422561645508
    9. '_NOT' → logprob: -10.637422561645508
    10. '#' → logprob: -10.762422561645508

Token 97: '_FREE' (ID: 89482)
  Prédit: '_FREE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_FREE' → logprob: -0.005970627069473267
    2. 'FREE' → logprob: -5.130970478057861
    3. '_F' → logprob: -10.88097095489502
    4. 'free' → logprob: -12.50597095489502
    5. '_Free' → logprob: -12.50597095489502
    6. '_free' → logprob: -12.75597095489502
    7. '_FINE' → logprob: -13.00597095489502
    8. 'Free' → logprob: -13.38097095489502
    9. 'F' → logprob: -13.50597095489502
    10. '_SAFE' → logprob: -14.00597095489502

Token 98: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00026848804554902017
    2. ' :' → logprob: -8.250268936157227
    3. '：' → logprob: -12.875268936157227
    4. '1' → logprob: -13.375268936157227
    5. '=' → logprob: -13.750268936157227
    6. ':
' → logprob: -14.250268936157227
    7. '[' → logprob: -14.875268936157227
    8. 'の' → logprob: -15.375268936157227
    9. '```' → logprob: -15.875268936157227
    10. ' ' → logprob: -16.500268936157227

Token 99: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06197138875722885
    2. ' ' → logprob: -2.811971426010132
    3. '0' → logprob: -12.686971664428711
    4. '   ' → logprob: -15.811971664428711
    5. '１' → logprob: -16.06197166442871
    6. ' ' → logprob: -16.43697166442871
    7. '```' → logprob: -16.68697166442871
    8. '  ' → logprob: -17.06197166442871
    9. '-' → logprob: -17.62447166442871
    10. '	' → logprob: -17.68697166442871

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.87500286102295
    3. '0' → logprob: -15.25000286102295
    4. '１' → logprob: -16.125003814697266
    5. '```' → logprob: -16.750003814697266
    6. '-' → logprob: -19.812503814697266
    7. '<|end|>' → logprob: -20.437503814697266
    8. '...' → logprob: -20.562503814697266
    9. '۱' → logprob: -20.562503814697266
    10. '   ' → logprob: -20.687503814697266

Token 101: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5933360457420349
    2. 'i' → logprob: -1.3433361053466797
    3. 'n' → logprob: -3.3433361053466797
    4. '<|end|>' → logprob: -3.5933361053466797
    5. 'row' → logprob: -3.9683361053466797
    6. ')' → logprob: -4.34333610534668
    7. 't' → logprob: -4.46833610534668
    8. 'r' → logprob: -4.59333610534668
    9. '#' → logprob: -4.59333610534668
    10. 'c' → logprob: -5.09333610534668

Token 102: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0087815523147583
    2. 'i' → logprob: -5.133781433105469
    3. 'pos' → logprob: -7.258781433105469
    4. 'row' → logprob: -7.758781433105469
    5. 'n' → logprob: -8.008781433105469
    6. 'if' → logprob: -8.383781433105469
    7. 'res' → logprob: -8.633781433105469
    8. 'count' → logprob: -8.633781433105469
    9. 'for' → logprob: -9.133781433105469
    10. 'result' → logprob: -9.133781433105469

Token 103: ' put' (ID: 3006)
  Prédit: ' search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' search' → logprob: -0.7216853499412537
    2. ' dfs' → logprob: -1.2216854095458984
    3. ' put' → logprob: -2.2216854095458984
    4. ' solve' → logprob: -2.8466854095458984
    5. ' place' → logprob: -3.7216854095458984
    6. ' back' → logprob: -4.596685409545898
    7. ' set' → logprob: -5.471685409545898
    8. ' ' → logprob: -5.721685409545898
    9. ' queen' → logprob: -6.346685409545898
    10. '```' → logprob: -6.721685409545898

Token 104: '_' (ID: 62)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2461022287607193
    2. ' (' → logprob: -2.2461023330688477
    3. '_' → logprob: -2.9961023330688477
    4. '(i' → logprob: -3.3711023330688477
    5. '(Q' → logprob: -5.246102333068848
    6. '（' → logprob: -5.496102333068848
    7. '()' → logprob: -5.871102333068848
    8. '(x' → logprob: -5.996102333068848
    9. '```' → logprob: -5.996102333068848
    10. 'Q' → logprob: -6.621102333068848

Token 105: 'queen' (ID: 153556)
  Prédit: 'queen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queen' → logprob: -0.0018855651142075658
    2. 'pos' → logprob: -7.501885414123535
    3. 'q' → logprob: -7.876885414123535
    4. 'que' → logprob: -8.126885414123535
    5. 'raw' → logprob: -8.126885414123535
    6. '```' → logprob: -9.876885414123535
    7. 'Queen' → logprob: -10.126885414123535
    8. 'i' → logprob: -10.751885414123535
    9. ' queen' → logprob: -10.876885414123535
    10. '

' → logprob: -11.001885414123535

Token 106: '(i' (ID: 3649)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.5555891990661621
    2. '(i' → logprob: -1.680589199066162
    3. '(' → logprob: -2.430589199066162
    4. '(r' → logprob: -2.680589199066162
    5. ' (' → logprob: -3.555589199066162
    6. '(x' → logprob: -3.805589199066162
    7. '(depth' → logprob: -4.430589199066162
    8. '(pos' → logprob: -4.680589199066162
    9. '(k' → logprob: -5.805589199066162
    10. '(y' → logprob: -6.180589199066162

Token 107: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00170041061937809
    2. ' ,' → logprob: -6.751700401306152
    3. '):' → logprob: -8.001700401306152
    4. ',row' → logprob: -9.126700401306152
    5. ',column' → logprob: -11.126700401306152
    6. ',pos' → logprob: -11.126700401306152
    7. ',i' → logprob: -11.126700401306152
    8. ',n' → logprob: -11.751700401306152
    9. ',k' → logprob: -12.251700401306152
    10. ',p' → logprob: -12.251700401306152

Token 108: '	if' (ID: 1224)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6535350680351257
    2. '   ' → logprob: -0.7785350680351257
    3. '<|end|>' → logprob: -4.153534889221191
    4. 'if' → logprob: -6.903534889221191
    5. ' ' → logprob: -6.903534889221191
    6. '    ' → logprob: -7.028534889221191
    7. ' for' → logprob: -7.153534889221191
    8. '	if' → logprob: -7.903534889221191
    9. '    
' → logprob: -8.653534889221191
    10. '  ' → logprob: -9.153534889221191

Token 109: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11807627975940704
    2. ' col' → logprob: -2.8680763244628906
    3. ' raw' → logprob: -3.2430763244628906
    4. ' n' → logprob: -5.118076324462891
    5. 'i' → logprob: -5.368076324462891
    6. 'raw' → logprob: -5.993076324462891
    7. 'col' → logprob: -7.243076324462891
    8. '	i' → logprob: -7.743076324462891
    9. ' ' → logprob: -7.868076324462891
    10. '	col' → logprob: -8.61807632446289

Token 110: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06413912028074265
    2. '==' → logprob: -2.8141391277313232
    3. ' >=' → logprob: -6.314138889312744
    4. ' <' → logprob: -8.564139366149902
    5. '>=' → logprob: -9.189139366149902
    6. ' ' → logprob: -10.689139366149902
    7. '<' → logprob: -11.564139366149902
    8. '=' → logprob: -11.939139366149902
    9. '	' → logprob: -12.064139366149902
    10. '<N' → logprob: -12.314139366149902

Token 111: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0015317666111513972
    2. 'n' → logprob: -6.501531600952148
    3. ' N' → logprob: -11.251531600952148
    4. '	N' → logprob: -11.376531600952148
    5. '8' → logprob: -12.501531600952148
    6. '	n' → logprob: -14.126531600952148
    7. 'Ｎ' → logprob: -14.876531600952148
    8. ' n' → logprob: -15.376531600952148
    9. ' ' → logprob: -17.12653160095215
    10. '	' → logprob: -17.50153160095215

Token 112: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006017650011926889
    2. ':return' → logprob: -8.250601768493652
    3. ':
' → logprob: -8.625601768493652
    4. ' :' → logprob: -8.875601768493652
    5. '：' → logprob: -11.375601768493652
    6. '):' → logprob: -12.625601768493652
    7. '	' → logprob: -12.750601768493652
    8. ' ' → logprob: -14.625601768493652
    9. '():' → logprob: -14.875601768493652
    10. '-' → logprob: -14.875601768493652

Token 113: '	' (ID: 197)
  Prédit: '	'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.047216616570949554
    2. '	return' → logprob: -3.1722166538238525
    3. '<|end|>' → logprob: -6.422216415405273
    4. '	print' → logprob: -7.047216415405273
    5. '		' → logprob: -8.297216415405273
    6. '<|end|>' → logprob: -8.922216415405273
    7. '       ' → logprob: -9.047216415405273
    8. '	   ' → logprob: -9.047216415405273
    9. '		
' → logprob: -9.172216415405273
    10. ' return' → logprob: -9.297216415405273

Token 114: '	return' (ID: 1393)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.27407950162887573
    2. 'return' → logprob: -1.6490795612335205
    3. 'print' → logprob: -3.6490795612335205
    4. '	return' → logprob: -4.024079322814941
    5. ' return' → logprob: -6.149079322814941
    6. '		' → logprob: -7.899079322814941
    7. '	   ' → logprob: -8.274079322814941
    8. '	print' → logprob: -8.274079322814941
    9. '   ' → logprob: -8.774079322814941
    10. 'global' → logprob: -9.149079322814941

Token 115: ' True' (ID: 6432)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.29051029682159424
    2. ' ' → logprob: -1.4155102968215942
    3. '	' → logprob: -5.665510177612305
    4. ' True' → logprob: -5.790510177612305
    5. 'True' → logprob: -6.165510177612305
    6. '   ' → logprob: -7.915510177612305
    7. '0' → logprob: -9.665510177612305
    8. '[' → logprob: -9.665510177612305
    9. '  ' → logprob: -10.540510177612305
    10. '　' → logprob: -10.540510177612305

Token 116: '
' (ID: 198)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	' → logprob: -0.988243043422699
    2. '<|end|>' → logprob: -1.7382431030273438
    3. '	for' → logprob: -2.4882431030273438
    4. '	
' → logprob: -2.4882431030273438
    5. '	if' → logprob: -2.8632431030273438
    6. '	return' → logprob: -3.1132431030273438
    7. '	elif' → logprob: -3.2382431030273438
    8. '	n' → logprob: -3.2382431030273438
    9. '	else' → logprob: -3.3632431030273438
    10. '\n' → logprob: -4.238243103027344

Token 117: '	elif' (ID: 56165)
  Prédit: '	for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	for' → logprob: -0.06987885385751724
    2. '	' → logprob: -3.4448788166046143
    3. '   ' → logprob: -4.319879055023193
    4. '	
' → logprob: -4.694879055023193
    5. '<|end|>' → logprob: -5.444879055023193
    6. '	else' → logprob: -5.694879055023193
    7. ' for' → logprob: -6.569879055023193
    8. '	i' → logprob: -7.444879055023193
    9. '	while' → logprob: -7.694879055023193
    10. '	s' → logprob: -7.694879055023193

Token 118: ' raw' (ID: 11428)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raw' → logprob: -1.3145629167556763
    2. 'i' → logprob: -1.6895629167556763
    3. 'n' → logprob: -1.6895629167556763
    4. 'col' → logprob: -2.0645627975463867
    5. ' i' → logprob: -2.6895627975463867
    6. ' col' → logprob: -3.0645627975463867
    7. ' raw' → logprob: -3.0645627975463867
    8. 'not' → logprob: -3.6895627975463867
    9. ' n' → logprob: -3.9395627975463867
    10. ' not' → logprob: -3.9395627975463867

Token 119: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0016706573078408837
    2. '[' → logprob: -6.501670837402344
    3. ' [' → logprob: -9.126670837402344
    4. '[N' → logprob: -10.501670837402344
    5. '[n' → logprob: -11.001670837402344
    6. '[I' → logprob: -11.751670837402344
    7. ' i' → logprob: -13.876670837402344
    8. ' ' → logprob: -13.876670837402344
    9. '[
' → logprob: -14.001670837402344
    10. 'i' → logprob: -14.376670837402344

Token 120: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05117468535900116
    2. ']==' → logprob: -3.0511746406555176
    3. ']!=' → logprob: -6.801174640655518
    4. '-' → logprob: -7.926174640655518
    5. ' ]' → logprob: -8.176175117492676
    6. '==-' → logprob: -8.301175117492676
    7. '==' → logprob: -8.801175117492676
    8. ']>=' → logprob: -9.051175117492676
    9. ' -' → logprob: -9.551175117492676
    10. ' ==' → logprob: -9.676175117492676

Token 121: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4610702097415924
    2. ' ==' → logprob: -1.08607017993927
    3. '!=' → logprob: -4.2110700607299805
    4. ' !=' → logprob: -4.7110700607299805
    5. '==-' → logprob: -5.7110700607299805
    6. '>=' → logprob: -6.3360700607299805
    7. '<' → logprob: -6.8360700607299805
    8. '!=-' → logprob: -7.7110700607299805
    9. ' ' → logprob: -8.08607006072998
    10. '=' → logprob: -8.33607006072998

Token 122: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002807963639497757
    2. ' -' → logprob: -5.877808094024658
    3. '	' → logprob: -13.3778076171875
    4. ' ' → logprob: -13.5028076171875
    5. '-i' → logprob: -16.1278076171875
    6. '0' → logprob: -16.8778076171875
    7. '−' → logprob: -17.3778076171875
    8. '   ' → logprob: -17.6278076171875
    9. '  ' → logprob: -18.1278076171875
    10. '-n' → logprob: -18.5028076171875

Token 123: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9385402993066236e-05
    2. ' ' → logprob: -11.125019073486328
    3. '2' → logprob: -13.000019073486328
    4. '１' → logprob: -14.000019073486328
    5. '```' → logprob: -15.125019073486328
    6. '
' → logprob: -15.500019073486328
    7. ' -' → logprob: -15.937519073486328
    8. 'N' → logprob: -16.250019073486328
    9. '-' → logprob: -16.375019073486328
    10. ',' → logprob: -16.437519073486328

Token 124: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.025342224165797234
    2. ' and' → logprob: -4.150341987609863
    3. ' :' → logprob: -5.400341987609863
    4. ':
' → logprob: -5.900341987609863
    5. '	' → logprob: -7.275341987609863
    6. ':return' → logprob: -8.025341987609863
    7. 'and' → logprob: -8.150341987609863
    8. ' ' → logprob: -8.525341987609863
    9. '	and' → logprob: -8.525341987609863
    10. '<|end|>' → logprob: -9.400341987609863

Token 125: '	' (ID: 197)
  Prédit: '	'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.030727094039320946
    2. '		
' → logprob: -4.155726909637451
    3. '		' → logprob: -4.780726909637451
    4. ' ' → logprob: -6.530726909637451
    5. ' 	' → logprob: -7.155726909637451
    6. '
' → logprob: -7.530726909637451
    7. '\t' → logprob: -7.905726909637451
    8. '	return' → logprob: -8.03072738647461
    9. '       ' → logprob: -8.28072738647461
    10. '	
' → logprob: -8.28072738647461

Token 126: '	if' (ID: 1224)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	' → logprob: -0.6190449595451355
    2. 'return' → logprob: -0.9940449595451355
    3. ' return' → logprob: -2.8690450191497803
    4. '	return' → logprob: -4.119044780731201
    5. 'if' → logprob: -4.619044780731201
    6. '   ' → logprob: -5.869044780731201
    7. ' if' → logprob: -6.119044780731201
    8. ' ' → logprob: -6.994044780731201
    9. '       ' → logprob: -7.244044780731201
    10. '	   ' → logprob: -7.494044780731201

Token 127: ' put' (ID: 3006)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.3515033423900604
    2. 'put' → logprob: -1.8515033721923828
    3. 'not' → logprob: -2.476503372192383
    4. ' col' → logprob: -3.351503372192383
    5. ' not' → logprob: -4.226503372192383
    6. ' put' → logprob: -5.726503372192383
    7. '	col' → logprob: -6.601503372192383
    8. '	put' → logprob: -7.726503372192383
    9. '	not' → logprob: -9.101503372192383
    10. 'n' → logprob: -9.351503372192383

Token 128: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.320199877838604e-07
    2. 'queen' → logprob: -15.125
    3. 'Queen' → logprob: -17.875
    4. '	' → logprob: -18.25
    5. '(i' → logprob: -19.25
    6. '_queue' → logprob: -19.5
    7. '```' → logprob: -19.75
    8. '(' → logprob: -20.5
    9. '_
' → logprob: -20.5
    10. ' queen' → logprob: -20.625

Token 129: 'queen' (ID: 153556)
  Prédit: 'queen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queen' → logprob: -1.7954958821064793e-05
    2. 'que' → logprob: -11.625018119812012
    3. 'Queen' → logprob: -11.875018119812012
    4. '_' → logprob: -13.500018119812012
    5. '(i' → logprob: -15.625018119812012
    6. ' queen' → logprob: -15.625018119812012
    7. 'i' → logprob: -16.125017166137695
    8. 'king' → logprob: -17.000017166137695
    9. '```' → logprob: -17.500017166137695
    10. 'queue' → logprob: -17.625017166137695

Token 130: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.5332478142227046e-05
    2. '(' → logprob: -11.125015258789062
    3. ' (' → logprob: -15.125015258789062
    4. '(
' → logprob: -15.125015258789062
    5. '	' → logprob: -17.250015258789062
    6. '```' → logprob: -18.625015258789062
    7. '(ii' → logprob: -18.750015258789062
    8. '((' → logprob: -18.875015258789062
    9. '(n' → logprob: -19.000015258789062
    10. '(I' → logprob: -19.125015258789062

Token 131: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14289124310016632
    2. ' +' → logprob: -2.0178911685943604
    3. '()+' → logprob: -9.142890930175781
    4. '	' → logprob: -9.767890930175781
    5. '＋' → logprob: -11.267890930175781
    6. ')' → logprob: -11.267890930175781
    7. ' ' → logprob: -11.392890930175781
    8. '   ' → logprob: -12.017890930175781
    9. '(' → logprob: -13.517890930175781
    10. ')+' → logprob: -13.767890930175781

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001017551330733113
    2. ' ' → logprob: -9.250102043151855
    3. ')' → logprob: -13.000102043151855
    4. '１' → logprob: -13.625102043151855
    5. '	' → logprob: -14.250102043151855
    6. '+' → logprob: -15.000102043151855
    7. '   ' → logprob: -15.250102043151855
    8. '(' → logprob: -15.625102043151855
    9. '```' → logprob: -15.875102043151855
    10. ' )' → logprob: -16.37510108947754

Token 133: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10303808748722076
    2. '):' → logprob: -2.3530380725860596
    3. ')' → logprob: -5.978038311004639
    4. '):
' → logprob: -8.60303783416748
    5. '	' → logprob: -9.60303783416748
    6. ')==' → logprob: -10.72803783416748
    7. ' ):
' → logprob: -11.72803783416748
    8. '):

' → logprob: -12.47803783416748
    9. ')：' → logprob: -12.72803783416748
    10. '():
' → logprob: -13.72803783416748

Token 134: '		' (ID: 335)
  Prédit: '		'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.08853717148303986
    2. '	' → logprob: -2.7135372161865234
    3. ':' → logprob: -4.338537216186523
    4. '           ' → logprob: -6.338537216186523
    5. ':
' → logprob: -6.338537216186523
    6. ':return' → logprob: -7.213537216186523
    7. '		   ' → logprob: -8.713537216186523
    8. '	       ' → logprob: -8.713537216186523
    9. '			' → logprob: -8.838537216186523
    10. ' return' → logprob: -9.338537216186523

Token 135: '	return' (ID: 1393)
  Prédit: '		'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.2709663510322571
    2. '	' → logprob: -1.5209662914276123
    3. '			' → logprob: -4.520966529846191
    4. 'return' → logprob: -5.270966529846191
    5. '	return' → logprob: -6.520966529846191
    6. ' return' → logprob: -8.020966529846191
    7. '       ' → logprob: -8.145966529846191
    8. '           ' → logprob: -8.145966529846191
    9. '               ' → logprob: -9.020966529846191
    10. '		       ' → logprob: -9.270966529846191

Token 136: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0007102862582542002
    2. ' True' → logprob: -7.250710487365723
    3. '	' → logprob: -15.625710487365723
    4. 'False' → logprob: -17.000709533691406
    5. '(True' → logprob: -17.125709533691406
    6. ' ' → logprob: -17.375709533691406
    7. 'true' → logprob: -18.000709533691406
    8. ' ' → logprob: -18.125709533691406
    9. '=True' → logprob: -18.500709533691406
    10. '   ' → logprob: -18.875709533691406

Token 137: '
' (ID: 198)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	' → logprob: -0.1627269834280014
    2. '	else' → logprob: -1.9127269983291626
    3. '	elif' → logprob: -6.412726879119873
    4. 'else' → logprob: -7.662726879119873
    5. '	return' → logprob: -8.412727355957031
    6. ' else' → logprob: -8.912727355957031
    7. '		' → logprob: -11.537727355957031
    8. '       ' → logprob: -11.662727355957031
    9. '   ' → logprob: -13.162727355957031
    10. 'elif' → logprob: -13.287727355957031

Token 138: '	' (ID: 197)
  Prédit: '	'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.07125211507081985
    2. '	else' → logprob: -3.0712521076202393
    3. 'else' → logprob: -4.071252346038818
    4. '	elif' → logprob: -5.446252346038818
    5. '	return' → logprob: -8.19625186920166
    6. 'elif' → logprob: -8.44625186920166
    7. '	for' → logprob: -8.57125186920166
    8. '	if' → logprob: -8.82125186920166
    9. ' else' → logprob: -8.94625186920166
    10. '		' → logprob: -10.94625186920166

Token 139: '	else' (ID: 5107)
  Prédit: '	else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	else' → logprob: -0.5169439911842346
    2. '	' → logprob: -1.1419439315795898
    3. 'else' → logprob: -2.64194393157959
    4. '	elif' → logprob: -4.89194393157959
    5. '	return' → logprob: -6.14194393157959
    6. ' else' → logprob: -6.26694393157959
    7. '	raw' → logprob: -7.14194393157959
    8. 'elif' → logprob: -7.64194393157959
    9. '	for' → logprob: -9.14194393157959
    10. '		' → logprob: -9.26694393157959

Token 140: ' :
' (ID: 10039)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	' → logprob: -0.048734527081251144
    2. '		' → logprob: -3.548734426498413
    3. ':
' → logprob: -4.798734664916992
    4. ':' → logprob: -5.173734664916992
    5. '	return' → logprob: -5.548734664916992
    6. ' return' → logprob: -8.423734664916992
    7. 'return' → logprob: -8.423734664916992
    8. ':return' → logprob: -8.423734664916992
    9. '       ' → logprob: -9.923734664916992
    10. '   ' → logprob: -10.173734664916992

Token 141: '		' (ID: 335)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.40226662158966064
    2. '	return' → logprob: -2.027266502380371
    3. 'return' → logprob: -2.152266502380371
    4. '		' → logprob: -2.902266502380371
    5. ' return' → logprob: -3.652266502380371
    6. '   ' → logprob: -6.777266502380371
    7. '       ' → logprob: -7.652266502380371
    8. ' ' → logprob: -8.652266502380371
    9. '	       ' → logprob: -8.652266502380371
    10. '           ' → logprob: -8.777266502380371

Token 142: '	return' (ID: 1393)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0020944688003510237
    2. ' return' → logprob: -6.627094268798828
    3. '	return' → logprob: -7.377094268798828
    4. '		' → logprob: -9.377094268798828
    5. '	' → logprob: -10.252094268798828
    6. 'False' → logprob: -11.877094268798828
    7. 'raw' → logprob: -12.002094268798828
    8. 'pass' → logprob: -13.252094268798828
    9. '			' → logprob: -13.502094268798828
    10. '       ' → logprob: -13.752094268798828

Token 143: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.981667537620524e-06
    2. ' False' → logprob: -13.250001907348633
    3. 'True' → logprob: -17.125001907348633
    4. '(False' → logprob: -17.625001907348633
    5. 'F' → logprob: -18.625001907348633
    6. 'None' → logprob: -19.625001907348633
    7. 'false' → logprob: -19.750001907348633
    8. 'FALSE' → logprob: -21.500001907348633
    9. '_false' → logprob: -21.750001907348633
    10. '0' → logprob: -22.000001907348633

Token 144: '
' (ID: 198)
  Prédit: '	else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	else' → logprob: -0.6823563575744629
    2. '	for' → logprob: -0.8073563575744629
    3. '	elif' → logprob: -3.307356357574463
    4. '	if' → logprob: -4.682356357574463
    5. '	while' → logprob: -6.932356357574463
    6. '	
' → logprob: -8.182355880737305
    7. '	return' → logprob: -8.182355880737305
    8. '	' → logprob: -8.182355880737305
    9. 'else' → logprob: -8.557355880737305
    10. '	col' → logprob: -8.932355880737305

Token 145: '	else' (ID: 5107)
  Prédit: '	else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	else' → logprob: -0.14684179425239563
    2. '	for' → logprob: -2.2718417644500732
    3. '	elif' → logprob: -4.021842002868652
    4. '	if' → logprob: -4.896842002868652
    5. '	col' → logprob: -5.896842002868652
    6. 'else' → logprob: -6.271842002868652
    7. '	while' → logprob: -6.896842002868652
    8. '   ' → logprob: -7.646842002868652
    9. '	return' → logprob: -8.021842002868652
    10. '	s' → logprob: -8.021842002868652

Token 146: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6527215242385864
    2. ':
' → logprob: -0.7777215242385864
    3. '	' → logprob: -4.652721405029297
    4. '	if' → logprob: -5.277721405029297
    5. '	for' → logprob: -5.402721405029297
    6. ' if' → logprob: -8.902721405029297
    7. '	
' → logprob: -9.152721405029297
    8. ' for' → logprob: -9.402721405029297
    9. ':
' → logprob: -9.402721405029297
    10. ' :
' → logprob: -9.402721405029297

Token 147: '	' (ID: 197)
  Prédit: '	for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	for' → logprob: -0.39244791865348816
    2. ' for' → logprob: -1.3924479484558105
    3. '	' → logprob: -2.7674479484558105
    4. 'for' → logprob: -4.6424479484558105
    5. '   ' → logprob: -6.1424479484558105
    6. ' ' → logprob: -6.6424479484558105
    7. '	   ' → logprob: -9.392447471618652
    8. '       ' → logprob: -10.392447471618652
    9. ' ' → logprob: -10.392447471618652
    10. '　' → logprob: -10.767447471618652

Token 148: '	for' (ID: 3903)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01717151701450348
    2. ' for' → logprob: -4.767171382904053
    3. '	for' → logprob: -4.767171382904053
    4. 'result' → logprob: -12.017171859741211
    5. 'res' → logprob: -12.392171859741211
    6. ' ' → logprob: -13.392171859741211
    7. '   ' → logprob: -13.517171859741211
    8. '	' → logprob: -14.017171859741211
    9. '　' → logprob: -14.642171859741211
    10. 'j' → logprob: -14.767171859741211

Token 149: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.16615107655525208
    2. ' j' → logprob: -1.9161510467529297
    3. 'x' → logprob: -6.54115104675293
    4. 'c' → logprob: -6.79115104675293
    5. 'col' → logprob: -7.16615104675293
    6. 'pos' → logprob: -7.54115104675293
    7. ' col' → logprob: -7.79115104675293
    8. '	j' → logprob: -8.16615104675293
    9. ' c' → logprob: -8.41615104675293
    10. ' x' → logprob: -8.79115104675293

Token 150: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07903078943490982
    2. 'in' → logprob: -2.579030752182007
    3. '	in' → logprob: -9.079030990600586
    4. ' ' → logprob: -10.829030990600586
    5. 'In' → logprob: -13.329030990600586
    6. '　' → logprob: -13.704030990600586
    7. '	' → logprob: -13.954030990600586
    8. 'range' → logprob: -14.704030990600586
    9. '_in' → logprob: -14.829030990600586
    10. '<|end|>' → logprob: -14.829030990600586

Token 151: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759448409080505
    2. 'range' → logprob: -0.8259448409080505
    3. '	range' → logprob: -12.700944900512695
    4. '(range' → logprob: -13.075944900512695
    5. ' ' → logprob: -16.325944900512695
    6. ' col' → logprob: -16.450944900512695
    7. 'col' → logprob: -16.700944900512695
    8. ' xrange' → logprob: -17.325944900512695
    9. '```' → logprob: -18.075944900512695
    10. '   ' → logprob: -18.950944900512695

Token 152: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0006728782900609076
    2. 'N' → logprob: -7.375672817230225
    3. '(' → logprob: -10.500673294067383
    4. '	N' → logprob: -11.000673294067383
    5. '(n' → logprob: -13.625673294067383
    6. '	' → logprob: -14.750673294067383
    7. '(len' → logprob: -16.250673294067383
    8. ' N' → logprob: -16.750673294067383
    9. 'col' → logprob: -16.750673294067383
    10. ' (' → logprob: -16.875673294067383

Token 153: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00415651872754097
    2. '):
' → logprob: -5.504156589508057
    3. ' ):' → logprob: -9.879156112670898
    4. ')' → logprob: -11.629156112670898
    5. '):
' → logprob: -12.129156112670898
    6. ':' → logprob: -12.254156112670898
    7. '	' → logprob: -12.504156112670898
    8. '):

' → logprob: -14.004156112670898
    9. ')：' → logprob: -14.129156112670898
    10. '）：' → logprob: -14.504156112670898

Token 154: '		' (ID: 335)
  Prédit: '		'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.6813342571258545
    2. '<|end|>' → logprob: -0.8063342571258545
    3. '<|end|>' → logprob: -4.181334495544434
    4. ' if' → logprob: -4.181334495544434
    5. ' ' → logprob: -5.056334495544434
    6. '           ' → logprob: -5.681334495544434
    7. '	' → logprob: -6.056334495544434
    8. '	       ' → logprob: -6.681334495544434
    9. '	if' → logprob: -7.431334495544434
    10. '			
' → logprob: -7.931334495544434

Token 155: '	if' (ID: 1224)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12147987633943558
    2. 'if' → logprob: -2.2464799880981445
    3. '		' → logprob: -5.1214799880981445
    4. '	if' → logprob: -6.4964799880981445
    5. '			' → logprob: -7.1214799880981445
    6. '	' → logprob: -9.371479988098145
    7. '<|end|>' → logprob: -9.621479988098145
    8. ' ' → logprob: -9.871479988098145
    9. '   ' → logprob: -10.996479988098145
    10. '           ' → logprob: -11.121479988098145

Token 156: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.494238018989563
    2. ' col' → logprob: -0.994238018989563
    3. ' not' → logprob: -4.119237899780273
    4. 'not' → logprob: -5.994237899780273
    5. '	col' → logprob: -6.869237899780273
    6. '(col' → logprob: -9.244237899780273
    7. '	not' → logprob: -10.994237899780273
    8. ' (' → logprob: -11.244237899780273
    9. '(not' → logprob: -11.244237899780273
    10. ' raw' → logprob: -11.994237899780273

Token 157: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -8.77627644513268e-06
    2. '[' → logprob: -11.750008583068848
    3. ' [' → logprob: -14.125008583068848
    4. '[col' → logprob: -16.875009536743164
    5. 'j' → logprob: -17.125009536743164
    6. '[i' → logprob: -17.375009536743164
    7. '][' → logprob: -19.000009536743164
    8. '```' → logprob: -19.375009536743164
    9. '	j' → logprob: -19.750009536743164
    10. '[J' → logprob: -20.000009536743164

Token 158: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2612816095352173
    2. ']==' → logprob: -1.5112816095352173
    3. '==' → logprob: -4.886281490325928
    4. ' ]' → logprob: -6.636281490325928
    5. ' ==' → logprob: -7.761281490325928
    6. '']==' → logprob: -12.261281967163086
    7. '[' → logprob: -12.386281967163086
    8. ' or' → logprob: -13.261281967163086
    9. ']!=' → logprob: -13.511281967163086
    10. '）' → logprob: -14.011281967163086

Token 159: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1007736474275589
    2. ' ==' → logprob: -2.350773572921753
    3. ']==' → logprob: -7.725773811340332
    4. ' or' → logprob: -9.725773811340332
    5. ']' → logprob: -10.975773811340332
    6. 'or' → logprob: -11.600773811340332
    7. '==
' → logprob: -11.975773811340332
    8. ')==' → logprob: -12.225773811340332
    9. '()==' → logprob: -12.225773811340332
    10. ')' → logprob: -12.475773811340332

Token 160: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008614926598966122
    2. ' ' → logprob: -4.758615016937256
    3. '	' → logprob: -15.633614540100098
    4. '1' → logprob: -16.258615493774414
    5. '０' → logprob: -16.633615493774414
    6. '۰' → logprob: -17.383615493774414
    7. ' ' → logprob: -18.133615493774414
    8. ' ' → logprob: -18.196115493774414
    9. '
' → logprob: -18.321115493774414
    10. '   ' → logprob: -18.446115493774414

Token 161: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029613598599098623
    2. ' ' → logprob: -8.125296592712402
    3. '	' → logprob: -17.500295639038086
    4. '1' → logprob: -18.250295639038086
    5. '０' → logprob: -18.250295639038086
    6. ' ' → logprob: -19.375295639038086
    7. '۰' → logprob: -19.375295639038086
    8. '   ' → logprob: -19.500295639038086
    9. '```' → logprob: -19.875295639038086
    10. '  ' → logprob: -20.625295639038086

Token 162: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.019228816032409668
    2. 'and' → logprob: -4.644228935241699
    3. ' or' → logprob: -4.769228935241699
    4. '		' → logprob: -7.519228935241699
    5. '			' → logprob: -8.7692289352417
    6. '<|end|>' → logprob: -9.3942289352417
    7. '	and' → logprob: -9.5192289352417
    8. ' ' → logprob: -10.2692289352417
    9. '	' → logprob: -11.6442289352417
    10. ':' → logprob: -11.8942289352417

Token 163: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.34890472888946533
    2. ' d' → logprob: -1.2239047288894653
    3. '	d' → logprob: -7.848904609680176
    4. '		' → logprob: -10.598904609680176
    5. ' ' → logprob: -10.973904609680176
    6. ' ' → logprob: -11.848904609680176
    7. '	' → logprob: -12.098904609680176
    8. '  ' → logprob: -12.473904609680176
    9. '   ' → logprob: -12.848904609680176
    10. '			' → logprob: -13.598904609680176

Token 164: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0010700850980356336
    2. 'neg' → logprob: -6.876070022583008
    3. '[pos' → logprob: -10.376070022583008
    4. '_pos' → logprob: -12.876070022583008
    5. '```' → logprob: -14.126070022583008
    6. '[j' → logprob: -14.751070022583008
    7. 'po' → logprob: -15.001070022583008
    8. 'posit' → logprob: -15.126070022583008
    9. '[' → logprob: -15.126070022583008
    10. 'poss' → logprob: -15.501070022583008

Token 165: '[i' (ID: 1768)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.1557283111615106e-05
    2. '[' → logprob: -10.375041961669922
    3. ' [' → logprob: -11.875041961669922
    4. '[d' → logprob: -13.500041961669922
    5. 'j' → logprob: -14.375041961669922
    6. '][' → logprob: -15.250041961669922
    7. '```' → logprob: -15.375041961669922
    8. '[(' → logprob: -15.750041961669922
    9. '[i' → logprob: -15.750041961669922
    10. ']' → logprob: -15.875041961669922

Token 166: '+j' (ID: 71365)
  Prédit: '+j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+j' → logprob: -0.002867042785510421
    2. '+' → logprob: -6.002867221832275
    3. ' +' → logprob: -7.877867221832275
    4. '+i' → logprob: -12.002866744995117
    5. '-j' → logprob: -12.252866744995117
    6. '+n' → logprob: -15.127866744995117
    7. '+
' → logprob: -15.252866744995117
    8. ']+' → logprob: -15.502866744995117
    9. '-' → logprob: -15.502866744995117
    10. '＋' → logprob: -15.877866744995117

Token 167: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012535080313682556
    2. ']==' → logprob: -4.387535095214844
    3. ' ]' → logprob: -11.387535095214844
    4. '==' → logprob: -11.387535095214844
    5. '']' → logprob: -14.137535095214844
    6. ' ==' → logprob: -14.637535095214844
    7. '']==' → logprob: -15.012535095214844
    8. '[' → logprob: -15.387535095214844
    9. '"]' → logprob: -15.637535095214844
    10. ']=='' → logprob: -15.887535095214844

Token 168: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03019680641591549
    2. ' ==' → logprob: -3.5301969051361084
    3. ']==' → logprob: -7.780196666717529
    4. ']' → logprob: -11.905197143554688
    5. '==
' → logprob: -11.905197143554688
    6. '=' → logprob: -12.030197143554688
    7. ')==' → logprob: -12.530197143554688
    8. '<|end|>' → logprob: -12.905197143554688
    9. ')' → logprob: -14.030197143554688
    10. '']==' → logprob: -14.780197143554688

Token 169: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -17.00004005432129
    4. '<|end|>' → logprob: -18.00004005432129
    5. '１' → logprob: -18.50004005432129
    6. '	' → logprob: -18.87504005432129
    7. '```' → logprob: -18.87504005432129
    8. 'True' → logprob: -19.12504005432129
    9. '  ' → logprob: -19.37504005432129
    10. '0' → logprob: -19.37504005432129

Token 170: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.750000953674316
    3. '<|end|>' → logprob: -16.75
    4. '１' → logprob: -16.875
    5. '0' → logprob: -17.875
    6. 'True' → logprob: -18.75
    7. '```' → logprob: -18.75
    8. '   ' → logprob: -19.75
    9. '
' → logprob: -19.875
    10. '<|end|>' → logprob: -19.875

Token 171: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0042237089946866035
    2. 'or' → logprob: -5.754223823547363
    3. '	or' → logprob: -6.879223823547363
    4. ' ' → logprob: -11.879223823547363
    5. '<|end|>' → logprob: -12.129223823547363
    6. '		' → logprob: -12.879223823547363
    7. '	' → logprob: -14.129223823547363
    8. '			' → logprob: -15.629223823547363
    9. '<|end|>' → logprob: -15.879223823547363
    10. ''or' → logprob: -16.379222869873047

Token 172: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.10023945569992065
    2. 'd' → logprob: -2.3502395153045654
    3. '	d' → logprob: -10.475239753723145
    4. ' ' → logprob: -13.350239753723145
    5. ' ' → logprob: -13.725239753723145
    6. '		' → logprob: -15.662739753723145
    7. ''d' → logprob: -15.725239753723145
    8. '
' → logprob: -15.912739753723145
    9. '_d' → logprob: -16.037738800048828
    10. '(d' → logprob: -16.162738800048828

Token 173: 'neg' (ID: 18775)
  Prédit: 'neg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.0003676324849948287
    2. '[i' → logprob: -8.750367164611816
    3. '[' → logprob: -9.125367164611816
    4. 'pos' → logprob: -9.625367164611816
    5. 'd' → logprob: -11.875367164611816
    6. ' neg' → logprob: -12.375367164611816
    7. '[pos' → logprob: -12.375367164611816
    8. 'n' → logprob: -12.625367164611816
    9. '[j' → logprob: -13.000367164611816
    10. '[-' → logprob: -13.000367164611816

Token 174: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.8074162653647363e-05
    2. '[' → logprob: -12.125018119812012
    3. '[j' → logprob: -12.125018119812012
    4. 'i' → logprob: -12.375018119812012
    5. '[N' → logprob: -13.750018119812012
    6. '(i' → logprob: -13.875018119812012
    7. '	i' → logprob: -15.375018119812012
    8. '[I' → logprob: -15.500018119812012
    9. '[n' → logprob: -15.625018119812012
    10. '<|end|>' → logprob: -16.250017166137695

Token 175: '-j' (ID: 19720)
  Prédit: '-j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-j' → logprob: -0.06885184347629547
    2. '+j' → logprob: -3.193851947784424
    3. '[j' → logprob: -3.943851947784424
    4. 'j' → logprob: -5.818851947784424
    5. '[' → logprob: -6.693851947784424
    6. '+' → logprob: -6.693851947784424
    7. '-' → logprob: -8.318851470947266
    8. ' -' → logprob: -8.443851470947266
    9. '[-' → logprob: -9.443851470947266
    10. '[N' → logprob: -9.943851470947266

Token 176: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05125170573592186
    2. 'N' → logprob: -3.1762516498565674
    3. ']' → logprob: -5.1762518882751465
    4. ' +' → logprob: -6.8012518882751465
    5. '[N' → logprob: -7.3012518882751465
    6. ' ' → logprob: -8.176251411437988
    7. ']+' → logprob: -9.051251411437988
    8. '+(' → logprob: -9.551251411437988
    9. '	N' → logprob: -9.801251411437988
    10. ' N' → logprob: -10.051251411437988

Token 177: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0028546862304210663
    2. '(N' → logprob: -5.877854824066162
    3. '(' → logprob: -10.502854347229004
    4. '<|end|>' → logprob: -11.752854347229004
    5. '7' → logprob: -12.502854347229004
    6. ' N' → logprob: -12.752854347229004
    7. '[N' → logprob: -13.252854347229004
    8. 'n' → logprob: -13.377854347229004
    9. '	N' → logprob: -13.502854347229004
    10. '8' → logprob: -13.752854347229004

Token 178: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0010479353368282318
    2. ' -' → logprob: -7.3760480880737305
    3. '1' → logprob: -7.8760480880737305
    4. '<|end|>' → logprob: -11.75104808807373
    5. '```' → logprob: -11.75104808807373
    6. 'minus' → logprob: -11.87604808807373
    7. ' ' → logprob: -12.25104808807373
    8. '[' → logprob: -12.50104808807373
    9. '_minus' → logprob: -12.87604808807373
    10. '_MINUS' → logprob: -13.50104808807373

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.2020991056924686e-05
    2. '-' → logprob: -10.875032424926758
    3. ' ' → logprob: -11.500032424926758
    4. '```' → logprob: -14.250032424926758
    5. '<|end|>' → logprob: -14.500032424926758
    6. 'minus' → logprob: -14.875032424926758
    7. '１' → logprob: -15.500032424926758
    8. '(' → logprob: -15.750032424926758
    9. ' -' → logprob: -15.875032424926758
    10. 'i' → logprob: -16.000032424926758

Token 180: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07897913455963135
    2. ']==' → logprob: -2.578979015350342
    3. ' ]' → logprob: -10.0789794921875
    4. '==' → logprob: -10.7039794921875
    5. '']' → logprob: -12.0789794921875
    6. '']==' → logprob: -12.2039794921875
    7. ']=='' → logprob: -12.7039794921875
    8. '"]' → logprob: -12.9539794921875
    9. '	' → logprob: -13.5789794921875
    10. ' ==' → logprob: -13.5789794921875

Token 181: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6946371793746948
    2. ' ==' → logprob: -0.6946371793746948
    3. ']==' → logprob: -6.694637298583984
    4. '	' → logprob: -9.069637298583984
    5. ' ' → logprob: -10.069637298583984
    6. ']' → logprob: -10.569637298583984
    7. ')==' → logprob: -11.069637298583984
    8. '=' → logprob: -11.319637298583984
    9. '		' → logprob: -11.819637298583984
    10. '()==' → logprob: -12.569637298583984

Token 182: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003811025235336274
    2. ' ' → logprob: -7.875380992889404
    3. 'True' → logprob: -15.625381469726562
    4. '	' → logprob: -15.750381469726562
    5. '   ' → logprob: -15.875381469726562
    6. '```' → logprob: -16.000381469726562
    7. '１' → logprob: -16.000381469726562
    8. '0' → logprob: -16.625381469726562
    9. ' True' → logprob: -16.625381469726562
    10. '  ' → logprob: -17.000381469726562

Token 183: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.704065213445574e-05
    2. ' ' → logprob: -10.000046730041504
    3. '```' → logprob: -14.375046730041504
    4. '0' → logprob: -15.000046730041504
    5. '<|end|>' → logprob: -15.500046730041504
    6. '-' → logprob: -15.625046730041504
    7. '１' → logprob: -16.25004768371582
    8. '
' → logprob: -16.62504768371582
    9. '   ' → logprob: -17.06254768371582
    10. '	' → logprob: -17.56254768371582

Token 184: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02007135935127735
    2. ':
' → logprob: -4.520071506500244
    3. '			' → logprob: -5.270071506500244
    4. '		' → logprob: -5.645071506500244
    5. '               ' → logprob: -8.895071029663086
    6. '	' → logprob: -9.770071029663086
    7. ':return' → logprob: -10.395071029663086
    8. ' :' → logprob: -11.020071029663086
    9. '           ' → logprob: -11.895071029663086
    10. '	continue' → logprob: -12.020071029663086

Token 185: '			' (ID: 833)
  Prédit: '			'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '			' → logprob: -0.40817633271217346
    2. '               ' → logprob: -1.158176302909851
    3. ' continue' → logprob: -4.283176422119141
    4. '		' → logprob: -6.033176422119141
    5. ':' → logprob: -6.783176422119141
    6. '			   ' → logprob: -7.033176422119141
    7. 'continue' → logprob: -7.158176422119141
    8. '		       ' → logprob: -7.783176422119141
    9. '	           ' → logprob: -8.03317642211914
    10. '           ' → logprob: -8.78317642211914

Token 186: '	continue' (ID: 25074)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6731737852096558
    2. 'continue' → logprob: -0.9231737852096558
    3. '			' → logprob: -2.4231739044189453
    4. '		' → logprob: -6.423173904418945
    5. '	continue' → logprob: -6.423173904418945
    6. '               ' → logprob: -7.298173904418945
    7. '				' → logprob: -10.173173904418945
    8. '_continue' → logprob: -10.673173904418945
    9. '			   ' → logprob: -11.423173904418945
    10. '           ' → logprob: -12.048173904418945

Token 187: '
' (ID: 198)
  Prédit: '		'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.044988781213760376
    2. '           ' → logprob: -3.9199888706207275
    3. '			
' → logprob: -4.044988632202148
    4. '  
' → logprob: -6.794988632202148
    5. '	' → logprob: -6.919988632202148
    6. '<|end|>' → logprob: -7.044988632202148
    7. '				
' → logprob: -7.294988632202148
    8. ' 
' → logprob: -7.419988632202148
    9. '            
' → logprob: -7.794988632202148
    10. '
' → logprob: -7.919988632202148

Token 188: '		' (ID: 335)
  Prédit: '		'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.02027055434882641
    2. ' col' → logprob: -5.145270347595215
    3. '			
' → logprob: -5.395270347595215
    4. '           ' → logprob: -5.895270347595215
    5. '	col' → logprob: -5.895270347595215
    6. '	' → logprob: -6.520270347595215
    7. '		
' → logprob: -7.645270347595215
    8. '[col' → logprob: -8.020270347595215
    9. '				
' → logprob: -8.270270347595215
    10. '<|end|>' → logprob: -8.520270347595215

Token 189: '	raw' (ID: 165256)
  Prédit: '	col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	col' → logprob: -0.6450223326683044
    2. 'col' → logprob: -1.1450223922729492
    3. ' col' → logprob: -2.770022392272949
    4. '		' → logprob: -3.020022392272949
    5. '	' → logprob: -3.145022392272949
    6. '	raw' → logprob: -7.145022392272949
    7. '       ' → logprob: -7.770022392272949
    8. '			
' → logprob: -8.02002239227295
    9. '   ' → logprob: -8.27002239227295
    10. 'raw' → logprob: -8.39502239227295

Token 190: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005134754464961588
    2. '[' → logprob: -7.625513553619385
    3. '[I' → logprob: -10.875513076782227
    4. '[j' → logprob: -12.750513076782227
    5. ' [' → logprob: -13.500513076782227
    6. '```' → logprob: -14.125513076782227
    7. 'i' → logprob: -15.250513076782227
    8. '	' → logprob: -15.375513076782227
    9. '[ip' → logprob: -16.125513076782227
    10. '][' → logprob: -16.125513076782227

Token 191: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.021083055064082146
    2. '[j' → logprob: -4.521082878112793
    3. ']=' → logprob: -5.271082878112793
    4. '][' → logprob: -5.521082878112793
    5. '[i' → logprob: -7.271082878112793
    6. '[' → logprob: -9.521082878112793
    7. '=' → logprob: -10.646082878112793
    8. ']==' → logprob: -10.896082878112793
    9. ']
' → logprob: -11.396082878112793
    10. ' ]' → logprob: -12.396082878112793

Token 192: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018172303214669228
    2. ' =' → logprob: -4.018172264099121
    3. '[j' → logprob: -11.143172264099121
    4. '=j' → logprob: -12.393172264099121
    5. '[' → logprob: -12.768172264099121
    6. '＝' → logprob: -14.268172264099121
    7. '=
' → logprob: -16.268173217773438
    8. '[i' → logprob: -17.018173217773438
    9. ']=' → logprob: -17.143173217773438
    10. ']' → logprob: -17.268173217773438

Token 193: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0052505917847156525
    2. ' j' → logprob: -5.255250453948975
    3. '	j' → logprob: -11.005250930786133
    4. '$j' → logprob: -15.380250930786133
    5. '[j' → logprob: -18.130250930786133
    6. '*j' → logprob: -19.255250930786133
    7. ':j' → logprob: -19.880250930786133
    8. ',j' → logprob: -20.130250930786133
    9. '_j' → logprob: -20.130250930786133
    10. '+j' → logprob: -20.255250930786133

Token 194: '
' (ID: 198)
  Prédit: ' col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.48954910039901733
    2. '	col' → logprob: -1.364549160003662
    3. 'col' → logprob: -2.614549160003662
    4. '		' → logprob: -3.489549160003662
    5. '			
' → logprob: -4.739549160003662
    6. '
' → logprob: -4.739549160003662
    7. '[col' → logprob: -5.489549160003662
    8. '		
' → logprob: -6.239549160003662
    9. '<|end|>' → logprob: -6.614549160003662
    10. '           ' → logprob: -7.239549160003662

Token 195: '		' (ID: 335)
  Prédit: '	col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	col' → logprob: -0.3198704123497009
    2. ' col' → logprob: -2.0698704719543457
    3. '		' → logprob: -2.4448704719543457
    4. 'col' → logprob: -2.8198704719543457
    5. '           ' → logprob: -6.944870471954346
    6. '[col' → logprob: -9.444869995117188
    7. '   ' → logprob: -10.194869995117188
    8. '	       ' → logprob: -10.569869995117188
    9. ',col' → logprob: -10.569869995117188
    10. '       ' → logprob: -11.069869995117188

Token 196: '	col' (ID: 93902)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.0001149867384810932
    2. '	col' → logprob: -9.250115394592285
    3. '		' → logprob: -11.375115394592285
    4. ' col' → logprob: -11.875115394592285
    5. '           ' → logprob: -15.000115394592285
    6. '```' → logprob: -17.25011444091797
    7. '[col' → logprob: -18.25011444091797
    8. '	' → logprob: -18.37511444091797
    9. '_col' → logprob: -18.50011444091797
    10. '.col' → logprob: -19.00011444091797

Token 197: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.8889261304575484e-06
    2. '[' → logprob: -12.750003814697266
    3. '[i' → logprob: -15.000003814697266
    4. 'j' → logprob: -15.875003814697266
    5. '[col' → logprob: -16.000003814697266
    6. ' [' → logprob: -16.000003814697266
    7. '```' → logprob: -16.250003814697266
    8. '	j' → logprob: -16.750003814697266
    9. '][' → logprob: -17.375003814697266
    10. ']' → logprob: -18.750003814697266

Token 198: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11678823083639145
    2. '=' → logprob: -2.366788148880005
    3. ']=' → logprob: -4.366788387298584
    4. ' =' → logprob: -5.616788387298584
    5. ' ]' → logprob: -9.491787910461426
    6. '<|end|>' → logprob: -10.741787910461426
    7. ')' → logprob: -11.366787910461426
    8. '']=' → logprob: -13.366787910461426
    9. '[' → logprob: -13.991787910461426
    10. '"]=' → logprob: -14.366787910461426

Token 199: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141363143920898
    2. ' =' → logprob: -1.701413631439209
    3. '＝' → logprob: -15.951414108276367
    4. ',' → logprob: -16.201414108276367
    5. ' ' → logprob: -16.701414108276367
    6. '[' → logprob: -16.951414108276367
    7. ')' → logprob: -17.451414108276367
    8. ']' → logprob: -17.701414108276367
    9. '	' → logprob: -17.701414108276367
    10. ']=' → logprob: -18.201414108276367

Token 200: ' d' (ID: 272)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '	' → logprob: -19.000001907348633
    4. '   ' → logprob: -20.625001907348633
    5. '```' → logprob: -21.750001907348633
    6. '１' → logprob: -21.875001907348633
    7. '' → logprob: -22.250001907348633
    8. '  ' → logprob: -23.000001907348633
    9. '۱' → logprob: -23.000001907348633
    10. '		' → logprob: -23.125001907348633

Token 201: 'pos' (ID: 1103)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38816964626312256
    2. 'pos' → logprob: -1.1381696462631226
    3. ' ' → logprob: -7.263169765472412
    4. 'neg' → logprob: -8.138169288635254
    5. '	pos' → logprob: -9.513169288635254
    6. '	' → logprob: -10.138169288635254
    7. '```' → logprob: -10.138169288635254
    8. '0' → logprob: -10.513169288635254
    9. '[pos' → logprob: -10.513169288635254
    10. '[' → logprob: -10.888169288635254

Token 202: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0022530299611389637
    2. '1' → logprob: -6.75225305557251
    3. 'i' → logprob: -6.87725305557251
    4. '	i' → logprob: -10.627252578735352
    5. '[' → logprob: -11.127252578735352
    6. ' i' → logprob: -12.252252578735352
    7. '(i' → logprob: -13.377252578735352
    8. '```' → logprob: -13.752252578735352
    9. '[j' → logprob: -14.127252578735352
    10. '[
' → logprob: -14.377252578735352

Token 203: '+j' (ID: 71365)
  Prédit: '+j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+j' → logprob: -0.00011367550177965313
    2. '+' → logprob: -9.125113487243652
    3. ' +' → logprob: -13.000113487243652
    4. 'j' → logprob: -13.750113487243652
    5. '+i' → logprob: -14.750113487243652
    6. '[j' → logprob: -15.500113487243652
    7. '+t' → logprob: -15.750113487243652
    8. '+x' → logprob: -15.750113487243652
    9. '	j' → logprob: -16.12511444091797
    10. '+
' → logprob: -16.62511444091797

Token 204: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018584977835416794
    2. '=' → logprob: -4.643585205078125
    3. ']=' → logprob: -4.768585205078125
    4. ' =' → logprob: -8.268585205078125
    5. ' ]' → logprob: -10.268585205078125
    6. '']' → logprob: -13.518585205078125
    7. '1' → logprob: -13.893585205078125
    8. '']=' → logprob: -14.018585205078125
    9. 's' → logprob: -14.518585205078125
    10. '<|end|>' → logprob: -14.643585205078125

Token 205: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03836860880255699
    2. ' =' → logprob: -3.2883687019348145
    3. '1' → logprob: -8.163368225097656
    4. ' ' → logprob: -10.538368225097656
    5. '<|end|>' → logprob: -11.538368225097656
    6. '	' → logprob: -13.663368225097656
    7. '[' → logprob: -14.038368225097656
    8. '		' → logprob: -14.538368225097656
    9. '```' → logprob: -14.788368225097656
    10. '0' → logprob: -15.038368225097656

Token 206: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.26908421516418457
    2. '1' → logprob: -1.8940842151641846
    3. ' d' → logprob: -2.6440842151641846
    4. ' ' → logprob: -4.2690839767456055
    5. '	d' → logprob: -7.8940839767456055
    6. '	' → logprob: -11.769083976745605
    7. '0' → logprob: -11.894083976745605
    8. '		' → logprob: -12.769083976745605
    9. '   ' → logprob: -13.706583976745605
    10. '  ' → logprob: -14.144083976745605

Token 207: 'neg' (ID: 18775)
  Prédit: 'neg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.0028559938073158264
    2. '1' → logprob: -5.8778557777404785
    3. '0' → logprob: -10.627856254577637
    4. ' neg' → logprob: -12.377856254577637
    5. 'eg' → logprob: -12.502856254577637
    6. '-' → logprob: -12.627856254577637
    7. 'oneg' → logprob: -13.002856254577637
    8. '[' → logprob: -13.002856254577637
    9. 'd' → logprob: -13.502856254577637
    10. '=' → logprob: -13.502856254577637

Token 208: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.4121114822482923e-06
    2. 'i' → logprob: -12.750003814697266
    3. '[' → logprob: -15.000003814697266
    4. '	i' → logprob: -16.000003814697266
    5. ' [' → logprob: -17.125003814697266
    6. '{i' → logprob: -17.125003814697266
    7. ' i' → logprob: -18.125003814697266
    8. '(i' → logprob: -18.125003814697266
    9. '```' → logprob: -18.375003814697266
    10. '[
' → logprob: -18.500003814697266

Token 209: '-j' (ID: 19720)
  Prédit: '-j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-j' → logprob: -8.470901229884475e-05
    2. '-' → logprob: -10.50008487701416
    3. '-i' → logprob: -10.62508487701416
    4. '```' → logprob: -11.25008487701416
    5. 'j' → logprob: -11.37508487701416
    6. ' -' → logprob: -12.12508487701416
    7. '' → logprob: -14.50008487701416
    8. '	' → logprob: -14.50008487701416
    9. ' ' → logprob: -14.87508487701416
    10. '	j' → logprob: -15.00008487701416

Token 210: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.4034345187828876e-05
    2. 'N' → logprob: -11.37502384185791
    3. ' +' → logprob: -11.75002384185791
    4. '	' → logprob: -13.87502384185791
    5. '+(' → logprob: -14.12502384185791
    6. '   ' → logprob: -14.37502384185791
    7. '	N' → logprob: -14.50002384185791
    8. ' ' → logprob: -14.75002384185791
    9. '```' → logprob: -14.75002384185791
    10. '+n' → logprob: -14.87502384185791

Token 211: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00021438424300868064
    2. '1' → logprob: -8.500214576721191
    3. ' N' → logprob: -12.500214576721191
    4. '	N' → logprob: -13.000214576721191
    5. '(N' → logprob: -13.375214576721191
    6. '+' → logprob: -13.500214576721191
    7. ' ' → logprob: -14.625214576721191
    8. '(' → logprob: -15.250214576721191
    9. '0' → logprob: -15.250214576721191
    10. '[N' → logprob: -15.375214576721191

Token 212: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01642915979027748
    2. '1' → logprob: -4.1414289474487305
    3. '[' → logprob: -8.51642894744873
    4. '	' → logprob: -9.39142894744873
    5. '+' → logprob: -10.39142894744873
    6. ']' → logprob: -10.64142894744873
    7. '−' → logprob: -10.64142894744873
    8. ' -' → logprob: -11.14142894744873
    9. '```' → logprob: -12.01642894744873
    10. ' ' → logprob: -12.89142894744873

Token 213: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -15.500000953674316
    4. '	' → logprob: -15.875000953674316
    5. '   ' → logprob: -17.125001907348633
    6. '-' → logprob: -17.125001907348633
    7. 'N' → logprob: -17.375001907348633
    8. '<|end|>' → logprob: -17.625001907348633
    9. '
' → logprob: -17.812501907348633
    10. '		' → logprob: -17.875001907348633

Token 214: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006700092926621437
    2. ' =' → logprob: -5.131700038909912
    3. ']' → logprob: -7.881700038909912
    4. ']=' → logprob: -7.881700038909912
    5. '1' → logprob: -11.38170051574707
    6. '	' → logprob: -13.50670051574707
    7. '}=' → logprob: -13.88170051574707
    8. '']=' → logprob: -14.50670051574707
    9. '		' → logprob: -14.75670051574707
    10. ' ' → logprob: -15.13170051574707

Token 215: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0011734402505680919
    2. ' =' → logprob: -6.751173496246338
    3. '1' → logprob: -12.75117301940918
    4. '	' → logprob: -15.00117301940918
    5. ' ' → logprob: -17.37617301940918
    6. '=True' → logprob: -17.87617301940918
    7. '＝' → logprob: -17.87617301940918
    8. '		' → logprob: -18.50117301940918
    9. ']=' → logprob: -18.87617301940918
    10. '<|end|>' → logprob: -19.00117301940918

Token 216: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '	' → logprob: -18.125001907348633
    4. '   ' → logprob: -18.750001907348633
    5. '１' → logprob: -21.000001907348633
    6. '' → logprob: -21.250001907348633
    7. '		' → logprob: -21.625001907348633
    8. '           ' → logprob: -21.875001907348633
    9. '```' → logprob: -22.125001907348633
    10. '  ' → logprob: -22.500001907348633

Token 217: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.875000953674316
    3. '	' → logprob: -16.250001907348633
    4. '   ' → logprob: -17.375001907348633
    5. '１' → logprob: -19.625001907348633
    6. '```' → logprob: -19.875001907348633
    7. '' → logprob: -20.500001907348633
    8. '  ' → logprob: -21.125001907348633
    9. '		' → logprob: -21.875001907348633
    10. 'True' → logprob: -21.875001907348633

Token 218: '
' (ID: 198)
  Prédit: '		'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.02605433389544487
    2. '           ' → logprob: -4.901054382324219
    3. '			
' → logprob: -4.901054382324219
    4. '
' → logprob: -5.526054382324219
    5. '<|end|>' → logprob: -5.526054382324219
    6. '\n' → logprob: -7.401054382324219
    7. '	' → logprob: -7.901054382324219
    8. '		
' → logprob: -8.026054382324219
    9. '	if' → logprob: -8.276054382324219
    10. '			' → logprob: -8.401054382324219

Token 219: '		' (ID: 335)
  Prédit: '		'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.027236333116889
    2. '           ' → logprob: -4.527236461639404
    3. '			
' → logprob: -5.277236461639404
    4. '<|end|>' → logprob: -5.277236461639404
    5. '	' → logprob: -6.527236461639404
    6. '			' → logprob: -6.652236461639404
    7. ' 		' → logprob: -8.027235984802246
    8. '	if' → logprob: -8.027235984802246
    9. '	       ' → logprob: -8.402235984802246
    10. '       ' → logprob: -8.652235984802246

Token 220: '	if' (ID: 1224)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2112855762243271
    2. '		' → logprob: -1.9612855911254883
    3. ' if' → logprob: -3.0862855911254883
    4. '	if' → logprob: -5.711285591125488
    5. '           ' → logprob: -7.211285591125488
    6. '	' → logprob: -11.086285591125488
    7. '			' → logprob: -11.336285591125488
    8. 'result' → logprob: -11.461285591125488
    9. '   ' → logprob: -11.586285591125488
    10. '       ' → logprob: -12.711285591125488

Token 221: ' put' (ID: 3006)
  Prédit: ' put'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' put' → logprob: -0.04874565452337265
    2. 'put' → logprob: -3.048745632171631
    3. '	put' → logprob: -8.798746109008789
    4. ' ' → logprob: -12.548746109008789
    5. ' ' → logprob: -13.048746109008789
    6. '   ' → logprob: -14.673746109008789
    7. '_put' → logprob: -15.173746109008789
    8. '	' → logprob: -15.173746109008789
    9. ' not' → logprob: -15.423746109008789
    10. '  ' → logprob: -15.923746109008789

Token 222: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -7.896309739408025e-07
    2. 'queen' → logprob: -14.250000953674316
    3. 'Queen' → logprob: -17.625
    4. ' queen' → logprob: -18.125
    5. '```' → logprob: -19.0
    6. '_queue' → logprob: -19.25
    7. '	' → logprob: -20.25
    8. '(i' → logprob: -20.625
    9. ' Queen' → logprob: -21.5
    10. ' _' → logprob: -22.125

Token 223: 'queen' (ID: 153556)
  Prédit: 'queen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queen' → logprob: -0.006181306205689907
    2. 'i' → logprob: -5.381181240081787
    3. '(i' → logprob: -6.631181240081787
    4. 'que' → logprob: -8.756181716918945
    5. 'Queen' → logprob: -10.131181716918945
    6. ' queen' → logprob: -11.006181716918945
    7. '_' → logprob: -11.131181716918945
    8. 'queue' → logprob: -13.006181716918945
    9. ' i' → logprob: -13.006181716918945
    10. 'king' → logprob: -13.631181716918945

Token 224: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.500000953674316
    3. ' (' → logprob: -15.625000953674316
    4. '	' → logprob: -17.5
    5. '(
' → logprob: -17.625
    6. '[i' → logprob: -18.0
    7. '	i' → logprob: -18.75
    8. '(ii' → logprob: -19.25
    9. '(next' → logprob: -20.125
    10. '(I' → logprob: -20.75

Token 225: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0011722482740879059
    2. ' +' → logprob: -6.751172065734863
    3. '+j' → logprob: -14.126172065734863
    4. '＋' → logprob: -14.126172065734863
    5. '	' → logprob: -15.626172065734863
    6. '+
' → logprob: -15.626172065734863
    7. '1' → logprob: -16.12617301940918
    8. '+i' → logprob: -16.25117301940918
    9. '()+' → logprob: -16.50117301940918
    10. ' ' → logprob: -17.25117301940918

Token 226: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.62500286102295
    3. '+' → logprob: -14.75000286102295
    4. '```' → logprob: -14.75000286102295
    5. '
' → logprob: -16.500001907348633
    6. '１' → logprob: -16.625001907348633
    7. '<|end|>' → logprob: -17.000001907348633
    8. '	' → logprob: -17.125001907348633
    9. '   ' → logprob: -17.375001907348633
    10. '``' → logprob: -17.750001907348633

Token 227: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.08934956789016724
    2. '):' → logprob: -2.4643495082855225
    3. ')' → logprob: -8.464349746704102
    4. '():
' → logprob: -9.339349746704102
    5. '		' → logprob: -10.339349746704102
    6. '):
' → logprob: -10.714349746704102
    7. ')==' → logprob: -11.089349746704102
    8. '	' → logprob: -11.589349746704102
    9. ':' → logprob: -11.714349746704102
    10. ':
' → logprob: -11.964349746704102

Token 228: '			' (ID: 833)
  Prédit: '			'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '			' → logprob: -0.006515348330140114
    2. '               ' → logprob: -5.1315155029296875
    3. ' return' → logprob: -9.006515502929688
    4. '			   ' → logprob: -9.006515502929688
    5. ':return' → logprob: -9.006515502929688
    6. '		' → logprob: -9.506515502929688
    7. '	return' → logprob: -9.756515502929688
    8. 'return' → logprob: -10.256515502929688
    9. '				' → logprob: -11.006515502929688
    10. '		       ' → logprob: -11.756515502929688

Token 229: '	return' (ID: 1393)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5745184421539307
    2. '			' → logprob: -1.0745184421539307
    3. '	return' → logprob: -2.8245184421539307
    4. '		' → logprob: -4.199518203735352
    5. ' return' → logprob: -4.449518203735352
    6. '               ' → logprob: -4.824518203735352
    7. '	' → logprob: -7.699518203735352
    8. '				' → logprob: -7.824518203735352
    9. '           ' → logprob: -8.824518203735352
    10. ':return' → logprob: -8.824518203735352

Token 230: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.001170225441455841
    2. ' True' → logprob: -6.7511701583862305
    3. '(True' → logprob: -18.251171112060547
    4. '=True' → logprob: -18.626171112060547
    5. 'true' → logprob: -19.626171112060547
    6. 'False' → logprob: -20.751171112060547
    7. ' ' → logprob: -20.876171112060547
    8. '	' → logprob: -21.126171112060547
    9. ' ' → logprob: -21.126171112060547
    10. 'T' → logprob: -21.126171112060547

Token 231: '
' (ID: 198)
  Prédit: '		'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.00013536323967855424
    2. '           ' → logprob: -9.00013542175293
    3. '			' → logprob: -13.00013542175293
    4. '	col' → logprob: -13.37513542175293
    5. '			
' → logprob: -13.62513542175293
    6. '	' → logprob: -13.62513542175293
    7. ' 		' → logprob: -14.12513542175293
    8. '
' → logprob: -14.37513542175293
    9. '	       ' → logprob: -14.37513542175293
    10. 'else' → logprob: -14.62513542175293

Token 232: '		' (ID: 335)
  Prédit: '		'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.00015502817404922098
    2. '           ' → logprob: -9.125155448913574
    3. 'col' → logprob: -11.500155448913574
    4. '	' → logprob: -11.625155448913574
    5. 'raw' → logprob: -11.625155448913574
    6. '	col' → logprob: -12.250155448913574
    7. '	raw' → logprob: -12.625155448913574
    8. '	       ' → logprob: -13.125155448913574
    9. '			' → logprob: -13.250155448913574
    10. '	 	' → logprob: -14.375155448913574

Token 233: '	else' (ID: 5107)
  Prédit: '		'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '		' → logprob: -0.016538087278604507
    2. 'col' → logprob: -4.266538143157959
    3. 'raw' → logprob: -6.391538143157959
    4. ' col' → logprob: -8.2665376663208
    5. '	col' → logprob: -8.6415376663208
    6. '           ' → logprob: -9.0165376663208
    7. ' raw' → logprob: -9.5165376663208
    8. '	raw' → logprob: -9.8915376663208
    9. '	' → logprob: -11.8915376663208
    10. '			' → logprob: -12.8915376663208

Token 234: ' :
' (ID: 10039)
  Prédit: '			'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '			' → logprob: -0.15580923855304718
    2. '		' → logprob: -2.030809164047241
    3. '	col' → logprob: -5.40580940246582
    4. ' col' → logprob: -5.65580940246582
    5. '               ' → logprob: -6.90580940246582
    6. '				' → logprob: -6.90580940246582
    7. '	raw' → logprob: -7.53080940246582
    8. ':
' → logprob: -7.65580940246582
    9. 'col' → logprob: -7.78080940246582
    10. ' raw' → logprob: -7.90580940246582

Token 235: '			' (ID: 833)
  Prédit: '			'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '			' → logprob: -0.45040711760520935
    2. '	raw' → logprob: -1.7004071474075317
    3. ' raw' → logprob: -2.450407028198242
    4. '		' → logprob: -2.450407028198242
    5. '	col' → logprob: -5.575407028198242
    6. '               ' → logprob: -6.950407028198242
    7. ' col' → logprob: -7.075407028198242
    8. 'raw' → logprob: -7.825407028198242
    9. '			   ' → logprob: -7.825407028198242
    10. '				' → logprob: -7.950407028198242

Token 236: '	raw' (ID: 165256)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.030632521957159042
    2. 'raw' → logprob: -3.530632495880127
    3. '		' → logprob: -7.905632495880127
    4. ' col' → logprob: -8.655632972717285
    5. '			' → logprob: -8.905632972717285
    6. '	col' → logprob: -9.030632972717285
    7. ' raw' → logprob: -10.030632972717285
    8. '	raw' → logprob: -10.280632972717285
    9. '               ' → logprob: -13.530632972717285
    10. '           ' → logprob: -14.030632972717285

Token 237: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.125
    3. '[I' → logprob: -16.875
    4. 'i' → logprob: -18.375
    5. '[j' → logprob: -18.5
    6. '	i' → logprob: -19.75
    7. '[a' → logprob: -20.625
    8. '[line' → logprob: -20.875
    9. '```' → logprob: -21.125
    10. ' [' → logprob: -21.5

Token 238: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04776034504175186
    2. '=' → logprob: -3.172760248184204
    3. ']=-' → logprob: -6.297760486602783
    4. ']=' → logprob: -6.547760486602783
    5. '[i' → logprob: -7.547760486602783
    6. ' =' → logprob: -7.672760486602783
    7. '[' → logprob: -8.547760009765625
    8. '=-' → logprob: -8.797760009765625
    9. '[-' → logprob: -10.172760009765625
    10. ')' → logprob: -10.547760009765625

Token 239: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006730765104293823
    2. ' =' → logprob: -5.006730556488037
    3. '=-' → logprob: -11.381731033325195
    4. '＝' → logprob: -13.006731033325195
    5. '[' → logprob: -14.131731033325195
    6. '-' → logprob: -14.381731033325195
    7. '[-' → logprob: -15.006731033325195
    8. '	' → logprob: -16.381731033325195
    9. '-=' → logprob: -17.256731033325195
    10. ']' → logprob: -17.381731033325195

Token 240: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001234428636962548
    2. ' -' → logprob: -9.000123023986816
    3. '	' → logprob: -18.000123977661133
    4. '−' → logprob: -19.625123977661133
    5. ' ' → logprob: -19.750123977661133
    6. '--' → logprob: -22.500123977661133
    7. '–' → logprob: -22.500123977661133
    8. '-row' → logprob: -22.875123977661133
    9. '‌' → logprob: -22.875123977661133
    10. '-m' → logprob: -22.875123977661133

Token 241: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '１' → logprob: -15.75
    3. ' ' → logprob: -15.75
    4. '১' → logprob: -17.5625
    5. '१' → logprob: -17.5625
    6. '```' → logprob: -17.6875
    7. '۱' → logprob: -17.875
    8. '<|end|>' → logprob: -18.25
    9. '-' → logprob: -18.8125
    10. '2' → logprob: -19.125

Token 242: '
' (ID: 198)
  Prédit: '		'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '		' → logprob: -0.09613735228776932
    2. 'col' → logprob: -3.346137285232544
    3. ' col' → logprob: -3.471137285232544
    4. '	col' → logprob: -3.721137285232544
    5. ',col' → logprob: -7.596137523651123
    6. '           ' → logprob: -7.846137523651123
    7. '			' → logprob: -8.846137046813965
    8. '[col' → logprob: -9.846137046813965
    9. '	' → logprob: -10.596137046813965
    10. ',' → logprob: -11.721137046813965

Token 243: '			' (ID: 833)
  Prédit: '		'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.02271469123661518
    2. '	col' → logprob: -4.397714614868164
    3. 'col' → logprob: -4.772714614868164
    4. ' col' → logprob: -6.647714614868164
    5. '           ' → logprob: -8.022714614868164
    6. '			' → logprob: -10.522714614868164
    7. '[col' → logprob: -11.272714614868164
    8. '```' → logprob: -11.522714614868164
    9. '	' → logprob: -11.897714614868164
    10. ',col' → logprob: -12.147714614868164

Token 244: '	col' (ID: 93902)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.0015398615505546331
    2. ' col' → logprob: -7.001539707183838
    3. '	col' → logprob: -7.751539707183838
    4. '			' → logprob: -8.751540184020996
    5. '		' → logprob: -10.376540184020996
    6. '				' → logprob: -11.876540184020996
    7. '[col' → logprob: -14.626540184020996
    8. '	' → logprob: -14.751540184020996
    9. '               ' → logprob: -15.251540184020996
    10. ',col' → logprob: -15.751540184020996

Token 245: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.723352049040841e-06
    2. '[' → logprob: -12.500004768371582
    3. 'j' → logprob: -14.500004768371582
    4. '_j' → logprob: -15.875004768371582
    5. ' [' → logprob: -16.125003814697266
    6. '][' → logprob: -16.875003814697266
    7. '	j' → logprob: -16.875003814697266
    8. '[js' → logprob: -17.000003814697266
    9. '[i' → logprob: -17.250003814697266
    10. ',j' → logprob: -17.500003814697266

Token 246: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4452904462814331
    2. ']' → logprob: -1.570290446281433
    3. ' =' → logprob: -1.945290446281433
    4. ']=' → logprob: -4.820290565490723
    5. '<|end|>' → logprob: -8.320290565490723
    6. ' ]' → logprob: -9.695290565490723
    7. ')' → logprob: -10.445290565490723
    8. '']=' → logprob: -12.820290565490723
    9. ' ' → logprob: -12.945290565490723
    10. '	' → logprob: -12.945290565490723

Token 247: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269284337759018
    2. ' =' → logprob: -2.1269283294677734
    3. '＝' → logprob: -15.251928329467773
    4. ' ' → logprob: -16.751928329467773
    5. '<|end|>' → logprob: -17.126928329467773
    6. ',' → logprob: -17.626928329467773
    7. '0' → logprob: -17.876928329467773
    8. '=False' → logprob: -18.251928329467773
    9. ')' → logprob: -18.376928329467773
    10. '	' → logprob: -19.626928329467773

Token 248: ' d' (ID: 272)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012999906903132796
    2. ' ' → logprob: -9.000129699707031
    3. 'd' → logprob: -12.000129699707031
    4. ' d' → logprob: -15.625129699707031
    5. '	' → logprob: -17.12512969970703
    6. '	d' → logprob: -17.87512969970703
    7. ' ' → logprob: -19.50012969970703
    8. 'col' → logprob: -19.87512969970703
    9. '۰' → logprob: -20.37512969970703
    10. '  ' → logprob: -20.87512969970703

Token 249: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6067970395088196
    2. '0' → logprob: -0.8567970395088196
    3. '[pos' → logprob: -4.356797218322754
    4. '[j' → logprob: -4.731797218322754
    5. 'neg' → logprob: -5.106797218322754
    6. '[' → logprob: -6.356797218322754
    7. ' ' → logprob: -8.231797218322754
    8. '[i' → logprob: -8.856797218322754
    9. 'j' → logprob: -9.856797218322754
    10. '	' → logprob: -9.981797218322754

Token 250: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2471589798224159e-05
    2. 'i' → logprob: -11.375012397766113
    3. '[' → logprob: -14.250012397766113
    4. '{i' → logprob: -15.500012397766113
    5. '[j' → logprob: -16.00001335144043
    6. '	i' → logprob: -17.37501335144043
    7. '[
' → logprob: -17.75001335144043
    8. '(i' → logprob: -18.00001335144043
    9. '[I' → logprob: -18.25001335144043
    10. '```' → logprob: -19.25001335144043

Token 251: '+j' (ID: 71365)
  Prédit: '+j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+j' → logprob: -2.7014437364414334e-05
    2. '+' → logprob: -11.12502670288086
    3. 'j' → logprob: -11.87502670288086
    4. '[j' → logprob: -12.25002670288086
    5. '-j' → logprob: -15.62502670288086
    6. '	j' → logprob: -16.00002670288086
    7. '+i' → logprob: -16.75002670288086
    8. ' +' → logprob: -17.12502670288086
    9. '_j' → logprob: -17.75002670288086
    10. '```' → logprob: -18.00002670288086

Token 252: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.041895050555467606
    2. ']' → logprob: -3.2918951511383057
    3. ' =' → logprob: -6.041894912719727
    4. ']=' → logprob: -6.541894912719727
    5. '<|end|>' → logprob: -10.791894912719727
    6. ' ]' → logprob: -13.666894912719727
    7. ' ' → logprob: -13.791894912719727
    8. '0' → logprob: -14.166894912719727
    9. '}' → logprob: -14.291894912719727
    10. '']=' → logprob: -14.541894912719727

Token 253: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0017171852523460984
    2. '0' → logprob: -7.0017170906066895
    3. ' =' → logprob: -7.1267170906066895
    4. ' ' → logprob: -13.626717567443848
    5. '				' → logprob: -15.501717567443848
    6. '=False' → logprob: -16.00171661376953
    7. ' ' → logprob: -16.50171661376953
    8. '	' → logprob: -16.62671661376953
    9. '			' → logprob: -16.87671661376953
    10. '=
' → logprob: -17.25171661376953

Token 254: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00783031526952982
    2. '0' → logprob: -5.3828301429748535
    3. ' d' → logprob: -5.7578301429748535
    4. ' ' → logprob: -10.507830619812012
    5. '	d' → logprob: -10.882830619812012
    6. '	' → logprob: -15.132830619812012
    7. '   ' → logprob: -16.382829666137695
    8. '_d' → logprob: -16.820329666137695
    9. '  ' → logprob: -16.882829666137695
    10. '
' → logprob: -17.070329666137695

Token 255: 'neg' (ID: 18775)
  Prédit: 'neg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -3.011373155459296e-05
    2. 'n' → logprob: -12.125030517578125
    3. 'eg' → logprob: -12.375030517578125
    4. '0' → logprob: -12.625030517578125
    5. '1' → logprob: -12.750030517578125
    6. '_neg' → logprob: -13.125030517578125
    7. ' neg' → logprob: -13.375030517578125
    8. 'd' → logprob: -13.625030517578125
    9. 'e' → logprob: -13.625030517578125
    10. '[' → logprob: -13.625030517578125

Token 256: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.792751032160595e-05
    2. 'i' → logprob: -9.37508773803711
    3. '[' → logprob: -12.75008773803711
    4. '	i' → logprob: -15.87508773803711
    5. '[
' → logprob: -17.50008773803711
    6. '{i' → logprob: -17.50008773803711
    7. ' i' → logprob: -17.75008773803711
    8. '0' → logprob: -17.75008773803711
    9. ' [' → logprob: -18.00008773803711
    10. ' ' → logprob: -18.37508773803711

Token 257: '-j' (ID: 19720)
  Prédit: '-j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-j' → logprob: -0.0001576506474521011
    2. 'j' → logprob: -8.875157356262207
    3. '[j' → logprob: -11.250157356262207
    4. '	j' → logprob: -12.375157356262207
    5. '-' → logprob: -15.625157356262207
    6. '```' → logprob: -16.250158309936523
    7. '_j' → logprob: -16.375158309936523
    8. ' ' → logprob: -17.125158309936523
    9. '	' → logprob: -17.125158309936523
    10. '[' → logprob: -17.500158309936523

Token 258: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.054500666621607e-06
    2. ' +' → logprob: -14.00000286102295
    3. '+n' → logprob: -14.75000286102295
    4. 'N' → logprob: -15.12500286102295
    5. '[' → logprob: -15.12500286102295
    6. '	' → logprob: -15.25000286102295
    7. '+[' → logprob: -15.25000286102295
    8. '1' → logprob: -15.50000286102295
    9. '＋' → logprob: -16.125003814697266
    10. '```' → logprob: -16.125003814697266

Token 259: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.005642209202051163
    2. '1' → logprob: -5.380642414093018
    3. '-' → logprob: -7.255642414093018
    4. ' ' → logprob: -8.75564193725586
    5. '0' → logprob: -9.38064193725586
    6. '-N' → logprob: -10.00564193725586
    7. ' N' → logprob: -11.38064193725586
    8. '(N' → logprob: -12.38064193725586
    9. '	N' → logprob: -12.63064193725586
    10. '   ' → logprob: -13.13064193725586

Token 260: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0013916619354858994
    2. '1' → logprob: -6.626391887664795
    3. '	' → logprob: -10.126391410827637
    4. '[' → logprob: -11.501391410827637
    5. '−' → logprob: -11.876391410827637
    6. ' -' → logprob: -13.001391410827637
    7. ' ' → logprob: -13.876391410827637
    8. '=' → logprob: -13.876391410827637
    9. '```' → logprob: -14.251391410827637
    10. '			' → logprob: -14.376391410827637

Token 261: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -13.375003814697266
    3. '-' → logprob: -13.750003814697266
    4. '2' → logprob: -14.250003814697266
    5. '   ' → logprob: -15.250003814697266
    6. '	' → logprob: -15.875003814697266
    7. 'N' → logprob: -16.000003814697266
    8. '
' → logprob: -16.125003814697266
    9. '```' → logprob: -16.250003814697266
    10. '

' → logprob: -16.937503814697266

Token 262: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2225588709115982
    2. ']' → logprob: -1.847558856010437
    3. ' =' → logprob: -3.2225589752197266
    4. ']=' → logprob: -6.347558975219727
    5. ' ]' → logprob: -8.597558975219727
    6. '0' → logprob: -9.472558975219727
    7. ' ' → logprob: -10.847558975219727
    8. '	' → logprob: -11.722558975219727
    9. '				' → logprob: -12.972558975219727
    10. '}' → logprob: -13.097558975219727

Token 263: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889793813228607
    2. ' =' → logprob: -2.5788979530334473
    3. '0' → logprob: -11.828897476196289
    4. ' ' → logprob: -14.578897476196289
    5. '	' → logprob: -15.453897476196289
    6. '=False' → logprob: -15.953897476196289
    7. '＝' → logprob: -16.70389747619629
    8. '			' → logprob: -17.95389747619629
    9. '				' → logprob: -18.07889747619629
    10. '<|end|>' → logprob: -18.20389747619629

Token 264: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '０' → logprob: -21.625015258789062
    4. '۰' → logprob: -21.625015258789062
    5. '	' → logprob: -23.125015258789062
    6. ' ' → logprob: -23.250015258789062
    7. '   ' → logprob: -23.375015258789062
    8. '  ' → logprob: -23.625015258789062
    9. '=' → logprob: -24.000015258789062
    10. '```' → logprob: -24.625015258789062

Token 265: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '０' → logprob: -22.125
    4. '۰' → logprob: -22.375
    5. '00' → logprob: -24.375
    6. ' ' → logprob: -24.625
    7. '	' → logprob: -25.0
    8. '  ' → logprob: -25.0
    9. '   ' → logprob: -25.25
    10. '000' → logprob: -25.75

Token 266: '
' (ID: 198)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	' → logprob: -0.1278986632823944
    2. '		' → logprob: -2.877898693084717
    3. '	return' → logprob: -3.002898693084717
    4. '	continue' → logprob: -5.377898693084717
    5. '			' → logprob: -5.502898693084717
    6. '       ' → logprob: -5.752898693084717
    7. 'return' → logprob: -7.877898693084717
    8. '\t' → logprob: -8.002898216247559
    9. '<|end|>' → logprob: -8.752898216247559
    10. '   ' → logprob: -8.877898216247559

Token 267: '	' (ID: 197)
  Prédit: '	'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.4260808825492859
    2. '	return' → logprob: -1.3010809421539307
    3. '       ' → logprob: -3.3010809421539307
    4. '		' → logprob: -4.051080703735352
    5. 'return' → logprob: -4.176080703735352
    6. '   ' → logprob: -6.051080703735352
    7. ' return' → logprob: -6.426080703735352
    8. '	continue' → logprob: -8.051080703735352
    9. '           ' → logprob: -8.551080703735352
    10. '			' → logprob: -8.926080703735352

Token 268: '	return' (ID: 1393)
  Prédit: '	return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	return' → logprob: -0.13203708827495575
    2. 'return' → logprob: -2.2570371627807617
    3. '   ' → logprob: -4.507037162780762
    4. ' return' → logprob: -5.882037162780762
    5. '	' → logprob: -6.257037162780762
    6. '       ' → logprob: -6.382037162780762
    7. '		' → logprob: -7.757037162780762
    8. 'False' → logprob: -8.257037162780762
    9. ':return' → logprob: -8.257037162780762
    10. ' ' → logprob: -9.132037162780762

Token 269: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.7610454708337784e-05
    2. ' False' → logprob: -10.500027656555176
    3. '(False' → logprob: -19.25002670288086
    4. 'None' → logprob: -22.62502670288086
    5. '_false' → logprob: -22.87502670288086
    6. 'false' → logprob: -23.37502670288086
    7. '=False' → logprob: -23.50002670288086
    8. '.False' → logprob: -23.62502670288086
    9. 'True' → logprob: -24.37502670288086
    10. 'F' → logprob: -24.37502670288086

Token 270: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19045932590961456
    2. 'put' → logprob: -1.8154593706130981
    3. 'if' → logprob: -5.065459251403809
    4. 'n' → logprob: -7.065459251403809
    5. 'result' → logprob: -7.065459251403809
    6. ')' → logprob: -7.190459251403809
    7. 'for' → logprob: -7.815459251403809
    8. 'raw' → logprob: -8.065459251403809
    9. '()' → logprob: -8.190459251403809
    10. '#' → logprob: -8.190459251403809

Token 271: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.23484888672828674
    2. 'print' → logprob: -1.7348488569259644
    3. 'put' → logprob: -4.359848976135254
    4. 'for' → logprob: -4.609848976135254
    5. 'raw' → logprob: -5.484848976135254
    6. 'result' → logprob: -6.234848976135254
    7. 'n' → logprob: -6.359848976135254
    8. '#' → logprob: -7.234848976135254
    9. 'res' → logprob: -7.734848976135254
    10. 'i' → logprob: -7.984848976135254

Token 272: ' output' (ID: 4733)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.8086039423942566
    2. 'main' → logprob: -0.8086039423942566
    3. 'print' → logprob: -2.5586040019989014
    4. ' print' → logprob: -4.183603763580322
    5. 'solve' → logprob: -4.558603763580322
    6. ' solve' → logprob: -5.808603763580322
    7. 'count' → logprob: -6.683603763580322
    8. ' count' → logprob: -7.058603763580322
    9. ' solution' → logprob: -9.18360424041748
    10. 'solution' → logprob: -9.30860424041748

Token 273: '_result' (ID: 11623)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.001446545124053955
    2. '():
' → logprob: -7.126446723937988
    3. '()' → logprob: -8.001446723937988
    4. '_' → logprob: -8.751446723937988
    5. '_raw' → logprob: -9.376446723937988
    6. ' ():' → logprob: -10.251446723937988
    7. '():

' → logprob: -11.501446723937988
    8. '(' → logprob: -12.251446723937988
    9. '_result' → logprob: -13.126446723937988
    10. ' ()' → logprob: -13.251446723937988

Token 274: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0019499406917020679
    2. '():
' → logprob: -6.251949787139893
    3. ' ():' → logprob: -11.37695026397705
    4. '()' → logprob: -11.62695026397705
    5. '():
' → logprob: -14.00195026397705
    6. '(N' → logprob: -16.751949310302734
    7. '(n' → logprob: -16.876949310302734
    8. '():

' → logprob: -17.376949310302734
    9. '(' → logprob: -17.501949310302734
    10. ' ()' → logprob: -17.501949310302734

Token 275: '	for' (ID: 3903)
  Prédit: '	for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	for' → logprob: -0.024562500417232513
    2. '	count' → logprob: -4.399562358856201
    3. '	print' → logprob: -4.899562358856201
    4. '	result' → logprob: -6.149562358856201
    5. '	global' → logprob: -7.024562358856201
    6. '   ' → logprob: -7.649562358856201
    7. '	total' → logprob: -8.64956283569336
    8. '	ans' → logprob: -8.64956283569336
    9. '	cnt' → logprob: -8.89956283569336
    10. '	if' → logprob: -9.14956283569336

Token 276: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.25202515721321106
    2. 'i' → logprob: -1.5020251274108887
    3. '	i' → logprob: -9.627025604248047
    4. ' raw' → logprob: -11.002025604248047
    5. 'r' → logprob: -12.877025604248047
    6. ' r' → logprob: -13.002025604248047
    7. ' ' → logprob: -13.127025604248047
    8. 'raw' → logprob: -13.377025604248047
    9. '(i' → logprob: -13.877025604248047
    10. '_i' → logprob: -13.877025604248047

Token 277: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10036162286996841
    2. 'in' → logprob: -2.3503615856170654
    3. '	in' → logprob: -8.975361824035645
    4. ' ' → logprob: -10.975361824035645
    5. ',' → logprob: -12.975361824035645
    6. '　' → logprob: -13.600361824035645
    7. '  ' → logprob: -13.975361824035645
    8. '_in' → logprob: -14.100361824035645
    9. 'In' → logprob: -14.350361824035645
    10. 'n' → logprob: -14.350361824035645

Token 278: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00014203863975126296
    2. ' range' → logprob: -8.875142097473145
    3. 'raw' → logprob: -13.125142097473145
    4. '(range' → logprob: -16.000141143798828
    5. '	range' → logprob: -18.250141143798828
    6. '
' → logprob: -18.500141143798828
    7. ' ' → logprob: -18.625141143798828
    8. '  ' → logprob: -18.625141143798828
    9. '

' → logprob: -19.750141143798828
    10. '   ' → logprob: -19.750141143798828

Token 279: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00010986098641296849
    2. 'N' → logprob: -9.500109672546387
    3. '(' → logprob: -10.625109672546387
    4. '	N' → logprob: -12.000109672546387
    5. '(n' → logprob: -13.250109672546387
    6. '(len' → logprob: -14.000109672546387
    7. '
' → logprob: -14.500109672546387
    8. '(
' → logprob: -14.750109672546387
    9. '	' → logprob: -15.000109672546387
    10. '（' → logprob: -16.000110626220703

Token 280: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.25209179520606995
    2. '):' → logprob: -1.5020917654037476
    3. ')' → logprob: -9.002091407775879
    4. '):
' → logprob: -10.502091407775879
    5. '	' → logprob: -12.252091407775879
    6. ')：' → logprob: -13.377091407775879
    7. ':' → logprob: -13.502091407775879
    8. ':
' → logprob: -13.752091407775879
    9. '):

' → logprob: -14.252091407775879
    10. ' ):
' → logprob: -14.502091407775879

Token 281: '	' (ID: 197)
  Prédit: '	'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.20555658638477325
    2. '	print' → logprob: -1.8305566310882568
    3. '	for' → logprob: -3.955556631088257
    4. 'print' → logprob: -6.205556392669678
    5. '       ' → logprob: -6.830556392669678
    6. '	if' → logprob: -6.955556392669678
    7. ' print' → logprob: -7.330556392669678
    8. '	   ' → logprob: -7.455556392669678
    9. '   ' → logprob: -7.705556392669678
    10. ' for' → logprob: -8.330556869506836

Token 282: '	out' (ID: 26614)
  Prédit: '	for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	for' → logprob: -0.7253564596176147
    2. 'for' → logprob: -1.3503564596176147
    3. '	print' → logprob: -1.8503564596176147
    4. 'print' → logprob: -2.4753565788269043
    5. ' for' → logprob: -4.975356578826904
    6. '	if' → logprob: -5.350356578826904
    7. '	' → logprob: -6.100356578826904
    8. 'if' → logprob: -7.100356578826904
    9. ' print' → logprob: -7.725356578826904
    10. '   ' → logprob: -9.350356101989746

Token 283: '_raw' (ID: 36128)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	' → logprob: -1.3376940488815308
    2. 'print' → logprob: -1.4626940488815308
    3. '	print' → logprob: -1.8376940488815308
    4. 'put' → logprob: -2.4626941680908203
    5. ' =' → logprob: -2.4626941680908203
    6. '=' → logprob: -2.8376941680908203
    7. '	put' → logprob: -3.0876941680908203
    8. 'p' → logprob: -3.8376941680908203
    9. '	for' → logprob: -4.58769416809082
    10. 'puts' → logprob: -4.96269416809082

Token 284: ' =' (ID: 314)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.027550198137760162
    2. 's' → logprob: -4.027550220489502
    3. '[s' → logprob: -4.902550220489502
    4. '[' → logprob: -6.527550220489502
    5. '[x' → logprob: -9.527549743652344
    6. '=' → logprob: -9.652549743652344
    7. ' =' → logprob: -9.652549743652344
    8. '[]' → logprob: -10.152549743652344
    9. 'print' → logprob: -10.402549743652344
    10. '[int' → logprob: -10.527549743652344

Token 285: ' ['' (ID: 5140)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raw' → logprob: -0.17014822363853455
    2. '""' → logprob: -2.0451481342315674
    3. '''' → logprob: -4.7951483726501465
    4. '['' → logprob: -5.0451483726501465
    5. ' raw' → logprob: -5.4201483726501465
    6. '["' → logprob: -5.5451483726501465
    7. '"' → logprob: -6.5451483726501465
    8. ''' → logprob: -6.7951483726501465
    9. '''.' → logprob: -8.170147895812988
    10. '	raw' → logprob: -8.295147895812988

Token 286: '.'' (ID: 8856)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.014448598958551884
    2. '.'' → logprob: -4.264448642730713
    3. 'Q' → logprob: -9.764448165893555
    4. '*' → logprob: -9.889448165893555
    5. '-' → logprob: -9.889448165893555
    6. ''.' → logprob: -10.639448165893555
    7. ''' → logprob: -11.014448165893555
    8. '."' → logprob: -11.014448165893555
    9. '．' → logprob: -11.389448165893555
    10. '_' → logprob: -11.514448165893555

Token 287: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4131522476673126
    2. ' for' → logprob: -1.2881522178649902
    3. ']*' → logprob: -3.0381522178649902
    4. ']' → logprob: -4.28815221786499
    5. '	for' → logprob: -7.16315221786499
    6. '*' → logprob: -8.663152694702148
    7. '   ' → logprob: -11.413152694702148
    8. 'if' → logprob: -11.538152694702148
    9. ']*(' → logprob: -12.163152694702148
    10. '	' → logprob: -12.538152694702148

Token 288: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07046329230070114
    2. 'j' → logprob: -3.320463180541992
    3. ' j' → logprob: -3.820463180541992
    4. ' _' → logprob: -5.195463180541992
    5. '_j' → logprob: -5.445463180541992
    6. 'i' → logprob: -9.445463180541992
    7. '_=' → logprob: -11.570463180541992
    8. '_]' → logprob: -11.695463180541992
    9. ' i' → logprob: -12.070463180541992
    10. 'k' → logprob: -12.195463180541992

Token 289: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2022315114736557
    2. 'in' → logprob: -1.702231526374817
    3. 'range' → logprob: -7.827231407165527
    4. ' range' → logprob: -8.452231407165527
    5. '(range' → logprob: -8.577231407165527
    6. '	in' → logprob: -11.577231407165527
    7. '	range' → logprob: -12.577231407165527
    8. '(' → logprob: -13.077231407165527
    9. ' ' → logprob: -13.577231407165527
    10. 'for' → logprob: -15.327231407165527

Token 290: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.615255839889869e-05
    2. ' range' → logprob: -9.250096321105957
    3. '(range' → logprob: -17.37509536743164
    4. '	range' → logprob: -19.25009536743164
    5. 'raw' → logprob: -21.00009536743164
    6. '
' → logprob: -22.50009536743164
    7. 'rang' → logprob: -23.37509536743164
    8. ' ' → logprob: -23.50009536743164
    9. '_range' → logprob: -23.50009536743164
    10. '  ' → logprob: -23.62509536743164

Token 291: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.07895280420780182
    2. 'N' → logprob: -2.5789527893066406
    3. '	N' → logprob: -10.45395278930664
    4. '8' → logprob: -10.70395278930664
    5. '(' → logprob: -11.57895278930664
    6. ' N' → logprob: -14.45395278930664
    7. 'Ｎ' → logprob: -14.82895278930664
    8. '(n' → logprob: -15.20395278930664
    9. '```' → logprob: -15.32895278930664
    10. 'n' → logprob: -15.45395278930664

Token 292: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.009774032980203629
    2. ')]
' → logprob: -4.634774208068848
    3. '	' → logprob: -12.009774208068848
    4. ')]
' → logprob: -12.509774208068848
    5. '')]' → logprob: -12.634774208068848
    6. ' )' → logprob: -13.009774208068848
    7. ')]

' → logprob: -14.259774208068848
    8. ')' → logprob: -14.384774208068848
    9. ']' → logprob: -14.509774208068848
    10. ' ' → logprob: -14.884774208068848

Token 293: '	' (ID: 197)
  Prédit: '	out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	out' → logprob: -0.6930551528930664
    2. '	raw' → logprob: -1.0680551528930664
    3. '<|end|>' → logprob: -2.4430551528930664
    4. 'out' → logprob: -2.9430551528930664
    5. ' out' → logprob: -4.943055152893066
    6. 'raw' → logprob: -5.943055152893066
    7. '[' → logprob: -6.568055152893066
    8. '	' → logprob: -6.568055152893066
    9. '	for' → logprob: -7.193055152893066
    10. '[out' → logprob: -7.318055152893066

Token 294: '	out' (ID: 26614)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.0004343645414337516
    2. '	out' → logprob: -8.000433921813965
    3. ' out' → logprob: -9.375433921813965
    4. '	' → logprob: -11.375433921813965
    5. '[out' → logprob: -14.000433921813965
    6. 'if' → logprob: -14.750433921813965
    7. '       ' → logprob: -15.750433921813965
    8. '*out' → logprob: -15.875433921813965
    9. 'raw' → logprob: -16.00043487548828
    10. '		' → logprob: -16.12543487548828

Token 295: '_raw' (ID: 36128)
  Prédit: '_raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_raw' → logprob: -0.0003645442193374038
    2. '[i' → logprob: -8.375364303588867
    3. 'raw' → logprob: -9.250364303588867
    4. '[' → logprob: -11.000364303588867
    5. '	raw' → logprob: -11.125364303588867
    6. '_row' → logprob: -12.875364303588867
    7. '	' → logprob: -13.875364303588867
    8. 'Raw' → logprob: -14.500364303588867
    9. '_' → logprob: -14.750364303588867
    10. '```' → logprob: -14.875364303588867

Token 296: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005635190173052251
    2. '[col' → logprob: -7.875563621520996
    3. '[i' → logprob: -9.500563621520996
    4. '[n' → logprob: -9.750563621520996
    5. '[N' → logprob: -11.500563621520996
    6. '[row' → logprob: -11.750563621520996
    7. '[int' → logprob: -12.000563621520996
    8. 'raw' → logprob: -12.625563621520996
    9. '[out' → logprob: -12.625563621520996
    10. '[random' → logprob: -12.750563621520996

Token 297: 'raw' (ID: 1618)
  Prédit: 'raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raw' → logprob: -6.825890159234405e-05
    2. ' raw' → logprob: -9.625068664550781
    3. '	raw' → logprob: -13.250068664550781
    4. '(raw' → logprob: -14.750068664550781
    5. '.raw' → logprob: -18.12506866455078
    6. '_raw' → logprob: -18.37506866455078
    7. 'r' → logprob: -19.50006866455078
    8. '   ' → logprob: -19.75006866455078
    9. 'Raw' → logprob: -19.75006866455078
    10. '0' → logprob: -20.00006866455078

Token 298: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -13.500001907348633
    3. '[N' → logprob: -14.625001907348633
    4. 'i' → logprob: -15.500001907348633
    5. '[I' → logprob: -16.250001907348633
    6. ']' → logprob: -16.875001907348633
    7. '[j' → logprob: -17.125001907348633
    8. '```' → logprob: -17.375001907348633
    9. '[n' → logprob: -18.375001907348633
    10. '[
' → logprob: -18.625001907348633

Token 299: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011729635298252106
    2. ']=' → logprob: -6.87617301940918
    3. ']='' → logprob: -9.62617301940918
    4. ']]' → logprob: -10.12617301940918
    5. ')]' → logprob: -11.00117301940918
    6. ' ]' → logprob: -11.75117301940918
    7. '=' → logprob: -12.75117301940918
    8. ']]=' → logprob: -12.75117301940918
    9. '']' → logprob: -13.00117301940918
    10. ')' → logprob: -15.37617301940918

Token 300: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014204994775354862
    2. ' =' → logprob: -4.264204978942871
    3. '='' → logprob: -10.764204978942871
    4. ']' → logprob: -11.014204978942871
    5. '='#' → logprob: -13.639204978942871
    6. ']=' → logprob: -13.764204978942871
    7. '	' → logprob: -14.889204978942871
    8. ' ='' → logprob: -15.139204978942871
    9. '=
' → logprob: -15.139204978942871
    10. '=

' → logprob: -16.139205932617188

Token 301: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00017517358355689794
    2. '"' → logprob: -9.000175476074219
    3. ' '' → logprob: -10.250175476074219
    4. ''O' → logprob: -11.750175476074219
    5. ''U' → logprob: -13.000175476074219
    6. 'Q' → logprob: -13.000175476074219
    7. ''A' → logprob: -13.750175476074219
    8. ''q' → logprob: -14.125175476074219
    9. ''C' → logprob: -14.750175476074219
    10. ''I' → logprob: -14.750175476074219

Token 302: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.03805813565850258
    2. ''' → logprob: -3.288058042526245
    3. ' Q' → logprob: -11.663058280944824
    4. '"' → logprob: -12.288058280944824
    5. '	Q' → logprob: -13.288058280944824
    6. '_Q' → logprob: -14.163058280944824
    7. '.Q' → logprob: -15.163058280944824
    8. '\xef\xbc' → logprob: -15.288058280944824
    9. ''*' → logprob: -16.038057327270508
    10. ' '' → logprob: -16.163057327270508

Token 303: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.014173032715916634
    2. ''
' → logprob: -4.2641730308532715
    3. ''
' → logprob: -12.01417350769043
    4. '"' → logprob: -13.01417350769043
    5. ''''' → logprob: -15.38917350769043
    6. ''

' → logprob: -15.38917350769043
    7. ' '' → logprob: -15.88917350769043
    8. '"'' → logprob: -15.88917350769043
    9. '']' → logprob: -16.13917350769043
    10. '"
' → logprob: -16.63917350769043

Token 304: '	' (ID: 197)
  Prédit: '	'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.00013858173042535782
    2. '       ' → logprob: -9.500138282775879
    3. '	print' → logprob: -10.250138282775879
    4. '<|end|>' → logprob: -11.625138282775879
    5. '   ' → logprob: -12.000138282775879
    6. 'print' → logprob: -12.625138282775879
    7. '		' → logprob: -13.250138282775879
    8. '		
' → logprob: -13.375138282775879
    9. '```' → logprob: -13.375138282775879
    10. '	for' → logprob: -13.625138282775879

Token 305: '	print' (ID: 15269)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.015946034342050552
    2. '	print' → logprob: -5.015945911407471
    3. ' print' → logprob: -5.265945911407471
    4. '	' → logprob: -5.515945911407471
    5. '```' → logprob: -14.515946388244629
    6. '       ' → logprob: -15.015946388244629
    7. ' ' → logprob: -15.140946388244629
    8. '   ' → logprob: -15.390946388244629
    9. '-print' → logprob: -17.140945434570312
    10. '		' → logprob: -17.390945434570312

Token 306: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.16045036911964417
    2. '('' → logprob: -1.9104503393173218
    3. '(' → logprob: -8.410449981689453
    4. '(""' → logprob: -13.410449981689453
    5. '(("' → logprob: -13.660449981689453
    6. ' ("' → logprob: -15.285449981689453
    7. '"' → logprob: -15.535449981689453
    8. '(('' → logprob: -15.785449981689453
    9. '(*' → logprob: -15.785449981689453
    10. '(
' → logprob: -16.285449981689453

Token 307: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.014702469110488892
    2. '''.' → logprob: -4.264702320098877
    3. ''' → logprob: -7.889702320098877
    4. '''' → logprob: -9.264702796936035
    5. ' ''.' → logprob: -10.514702796936035
    6. '".' → logprob: -11.139702796936035
    7. '.join' → logprob: -11.764702796936035
    8. '')' → logprob: -11.889702796936035
    9. '.' → logprob: -12.514702796936035
    10. '```' → logprob: -12.514702796936035

Token 308: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -5.319370302458992e-06
    2. '.join' → logprob: -13.250005722045898
    3. ' join' → logprob: -13.625005722045898
    4. '''.' → logprob: -14.125005722045898
    5. '```' → logprob: -14.500005722045898
    6. ''.' → logprob: -14.875005722045898
    7. '(join' → logprob: -15.000005722045898
    8. 'jo' → logprob: -16.2500057220459
    9. '.' → logprob: -17.0000057220459
    10. 'out' → logprob: -17.1250057220459

Token 309: '(map' (ID: 16946)
  Prédit: '(out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(out' → logprob: -1.5048530030981055e-06
    2. 'out' → logprob: -13.500001907348633
    3. '(' → logprob: -17.500001907348633
    4. '[out' → logprob: -19.375001907348633
    5. '	out' → logprob: -19.500001907348633
    6. ',out' → logprob: -19.625001907348633
    7. ' out' → logprob: -19.750001907348633
    8. ')' → logprob: -21.000001907348633
    9. '*out' → logprob: -21.500001907348633
    10. '$out' → logprob: -21.750001907348633

Token 310: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.0010261393617838621
    2. 'str' → logprob: -7.001026153564453
    3. '(' → logprob: -10.126026153564453
    4. '(lambda' → logprob: -10.501026153564453
    5. ')' → logprob: -11.001026153564453
    6. '(list' → logprob: -11.376026153564453
    7. '(chr' → logprob: -11.501026153564453
    8. '(out' → logprob: -13.251026153564453
    9. ' str' → logprob: -13.501026153564453
    10. '	str' → logprob: -13.626026153564453

Token 311: ',' (ID: 11)
  Prédit: '(out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(out' → logprob: -0.127452552318573
    2. ',out' → logprob: -2.1274526119232178
    3. ',' → logprob: -7.627452373504639
    4. '(' → logprob: -11.127452850341797
    5. 'out' → logprob: -11.627452850341797
    6. ' (' → logprob: -12.127452850341797
    7. '	out' → logprob: -12.627452850341797
    8. ',(' → logprob: -13.502452850341797
    9. ' ,' → logprob: -14.002452850341797
    10. '*out' → logprob: -14.002452850341797

Token 312: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.003178071230649948
    2. ' out' → logprob: -5.753178119659424
    3. '(out' → logprob: -15.503177642822266
    4. '	out' → logprob: -16.128177642822266
    5. '[out' → logprob: -17.878177642822266
    6. '
' → logprob: -20.128177642822266
    7. ',out' → logprob: -20.253177642822266
    8. ' ' → logprob: -20.378177642822266
    9. '*out' → logprob: -20.503177642822266
    10. '   ' → logprob: -20.628177642822266

Token 313: '_raw' (ID: 36128)
  Prédit: '_raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_raw' → logprob: -3.070975071750581e-05
    2. '(out' → logprob: -10.875030517578125
    3. 'out' → logprob: -13.000030517578125
    4. ' out' → logprob: -13.000030517578125
    5. '[out' → logprob: -13.250030517578125
    6. 'Raw' → logprob: -13.375030517578125
    7. '_row' → logprob: -14.125030517578125
    8. 'raw' → logprob: -14.375030517578125
    9. '_RAW' → logprob: -14.750030517578125
    10. '_out' → logprob: -15.375030517578125

Token 314: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.029777804389595985
    2. '))' → logprob: -3.529777765274048
    3. ')))
' → logprob: -11.404777526855469
    4. ')' → logprob: -11.779777526855469
    5. '))))' → logprob: -12.404777526855469
    6. ' ' → logprob: -13.404777526855469
    7. '))
' → logprob: -13.654777526855469
    8. '	' → logprob: -14.529777526855469
    9. ')));' → logprob: -14.654777526855469
    10. ' ))' → logprob: -15.404777526855469

Token 315: 'for' (ID: 1938)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16142526268959045
    2. 'for' → logprob: -2.1614253520965576
    3. 'raw' → logprob: -3.5364253520965576
    4. 'n' → logprob: -6.0364251136779785
    5. 'put' → logprob: -7.0364251136779785
    6. 'while' → logprob: -7.6614251136779785
    7. 'print' → logprob: -8.411425590515137
    8. 'def' → logprob: -8.536425590515137
    9. 'i' → logprob: -8.786425590515137
    10. '#' → logprob: -9.286425590515137

Token 316: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.18709087371826172
    2. ' _' → logprob: -2.0620908737182617
    3. '_' → logprob: -3.4370908737182617
    4. 'i' → logprob: -4.562090873718262
    5. '_i' → logprob: -7.187090873718262
    6. '	i' → logprob: -10.187090873718262
    7. ' line' → logprob: -11.187090873718262
    8. ' ' → logprob: -11.312090873718262
    9. ' row' → logprob: -12.312090873718262
    10. '_line' → logprob: -12.812090873718262

Token 317: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0700429156422615
    2. 'in' → logprob: -2.695042848587036
    3. ' ' → logprob: -9.945042610168457
    4. 'range' → logprob: -10.695042610168457
    5. 'n' → logprob: -10.820042610168457
    6. '	in' → logprob: -12.070042610168457
    7. 'In' → logprob: -13.445042610168457
    8. '　' → logprob: -13.820042610168457
    9. '_in' → logprob: -13.820042610168457
    10. ' range' → logprob: -14.070042610168457

Token 318: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06996811181306839
    2. ' range' → logprob: -2.6949682235717773
    3. 'raw' → logprob: -10.569968223571777
    4. ' ' → logprob: -13.319968223571777
    5. '(range' → logprob: -13.569968223571777
    6. ' raw' → logprob: -13.944968223571777
    7. '  ' → logprob: -14.569968223571777
    8. 'n' → logprob: -14.819968223571777
    9. '	range' → logprob: -15.569968223571777
    10. 'ran' → logprob: -15.694968223571777

Token 319: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0034191510640084743
    2. '(N' → logprob: -5.753418922424316
    3. '(' → logprob: -8.753418922424316
    4. '(raw' → logprob: -9.628418922424316
    5. 'n' → logprob: -11.753418922424316
    6. '(min' → logprob: -13.003418922424316
    7. ' (' → logprob: -13.253418922424316
    8. '(int' → logprob: -13.503418922424316
    9. '((' → logprob: -13.753418922424316
    10. '(len' → logprob: -13.878418922424316

Token 320: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00791500136256218
    2. '):
' → logprob: -5.007915019989014
    3. ' ):' → logprob: -6.757915019989014
    4. ')' → logprob: -10.882914543151855
    5. '):
' → logprob: -11.632914543151855
    6. '+' → logprob: -12.257914543151855
    7. ' ):
' → logprob: -13.507914543151855
    8. ':' → logprob: -14.507914543151855
    9. '**' → logprob: -14.507914543151855
    10. '=' → logprob: -14.757914543151855

Token 321: '	r' (ID: 11694)
  Prédit: '	raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	raw' → logprob: -1.475957989692688
    2. '	n' → logprob: -1.725957989692688
    3. '	row' → logprob: -2.4759578704833984
    4. '	input' → logprob: -2.4759578704833984
    5. 'n' → logprob: -2.8509578704833984
    6. '	s' → logprob: -2.8509578704833984
    7. '	line' → logprob: -2.9759578704833984
    8. 'input' → logprob: -3.1009578704833984
    9. '	r' → logprob: -3.2259578704833984
    10. 'raw' → logprob: -3.4759578704833984

Token 322: ',' (ID: 11)
  Prédit: 'aw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aw' → logprob: -0.0017733541317284107
    2. 'a' → logprob: -6.501773357391357
    3. '   ' → logprob: -10.5017728805542
    4. 'aws' → logprob: -10.7517728805542
    5. '_aw' → logprob: -10.7517728805542
    6. 'awm' → logprob: -11.0017728805542
    7. 'raw' → logprob: -11.0017728805542
    8. ' =' → logprob: -11.2517728805542
    9. '
' → logprob: -11.2517728805542
    10. '=' → logprob: -11.3767728805542

Token 323: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.008361141197383404
    2. ' c' → logprob: -5.383361339569092
    3. 'q' → logprob: -6.133361339569092
    4. 's' → logprob: -7.008361339569092
    5. 'k' → logprob: -8.133360862731934
    6. 'x' → logprob: -9.883360862731934
    7. 'm' → logprob: -9.883360862731934
    8. 'l' → logprob: -10.258360862731934
    9. '	c' → logprob: -10.383360862731934
    10. 'w' → logprob: -10.883360862731934

Token 324: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5191212892532349
    2. '=' → logprob: -1.0191212892532349
    3. ',' → logprob: -3.1441211700439453
    4. ' ,' → logprob: -7.394121170043945
    5. ' ' → logprob: -8.644121170043945
    6. '=input' → logprob: -10.394121170043945
    7. '=int' → logprob: -10.769121170043945
    8. ',r' → logprob: -10.894121170043945
    9. '	' → logprob: -11.144121170043945
    10. '＝' → logprob: -11.894121170043945

Token 325: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.4741838574409485
    2. 'map' → logprob: -0.9741838574409485
    3. ' list' → logprob: -9.724184036254883
    4. 'list' → logprob: -10.099184036254883
    5. '	map' → logprob: -12.599184036254883
    6. ' [' → logprob: -13.974184036254883
    7. '[' → logprob: -14.224184036254883
    8. 'input' → logprob: -14.724184036254883
    9. '(map' → logprob: -14.849184036254883
    10. ' input' → logprob: -15.599184036254883

Token 326: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0005760280764661729
    2. 'int' → logprob: -7.500576019287109
    3. '<int' → logprob: -11.37557601928711
    4. '=int' → logprob: -12.37557601928711
    5. '(input' → logprob: -13.37557601928711
    6. ',int' → logprob: -13.50057601928711
    7. ' int' → logprob: -13.75057601928711
    8. '[int' → logprob: -13.75057601928711
    9. '(' → logprob: -14.50057601928711
    10. '(str' → logprob: -14.87557601928711

Token 327: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.01804235205054283
    2. ',' → logprob: -4.26804256439209
    3. 'input' → logprob: -5.89304256439209
    4. '(input' → logprob: -7.01804256439209
    5. '().' → logprob: -9.01804256439209
    6. ' input' → logprob: -10.39304256439209
    7. '(),' → logprob: -10.76804256439209
    8. '(' → logprob: -11.39304256439209
    9. '=input' → logprob: -11.39304256439209
    10. '	input' → logprob: -12.39304256439209

Token 328: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0024758970830589533
    2. ' input' → logprob: -6.002475738525391
    3. ',input' → logprob: -16.50247573852539
    4. '	input' → logprob: -16.75247573852539
    5. '(input' → logprob: -17.50247573852539
    6. ')' → logprob: -19.00247573852539
    7. ' ' → logprob: -19.37747573852539
    8. '=input' → logprob: -19.37747573852539
    9. 'raw' → logprob: -19.62747573852539
    10. '[input' → logprob: -20.50247573852539

Token 329: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.2664456789934775e-06
    2. '()' → logprob: -14.000000953674316
    3. ' ().' → logprob: -15.750000953674316
    4. '(' → logprob: -16.250001907348633
    5. '	' → logprob: -17.125001907348633
    6. '.' → logprob: -17.750001907348633
    7. '.split' → logprob: -18.750001907348633
    8. '()
' → logprob: -18.875001907348633
    9. '("").' → logprob: -19.125001907348633
    10. '('').' → logprob: -19.250001907348633

Token 330: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.2994620242971e-06
    2. 'strip' → logprob: -11.750008583068848
    3. 'rstrip' → logprob: -15.250008583068848
    4. ' split' → logprob: -16.25000762939453
    5. '(split' → logprob: -17.00000762939453
    6. 'spl' → logprob: -18.62500762939453
    7. 's' → logprob: -20.12500762939453
    8. '.split' → logprob: -20.25000762939453
    9. '().' → logprob: -20.25000762939453
    10. 'plit' → logprob: -21.50000762939453

Token 331: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.019786348566412926
    2. ')' → logprob: -4.019786357879639
    3. '()' → logprob: -6.519786357879639
    4. '()))' → logprob: -9.26978588104248
    5. '))' → logprob: -10.39478588104248
    6. '())
' → logprob: -10.64478588104248
    7. '(' → logprob: -11.89478588104248
    8. ' ())' → logprob: -12.89478588104248
    9. '(),' → logprob: -13.89478588104248
    10. '());' → logprob: -15.01978588104248

Token 332: '	raw' (ID: 165256)
  Prédit: '	raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	raw' → logprob: -0.002905085450038314
    2. 'raw' → logprob: -5.877904891967773
    3. ' raw' → logprob: -9.252904891967773
    4. '	if' → logprob: -13.377904891967773
    5. '   ' → logprob: -13.752904891967773
    6. '	row' → logprob: -15.127904891967773
    7. '(raw' → logprob: -15.127904891967773
    8. '.raw' → logprob: -15.627904891967773
    9. '_raw' → logprob: -15.752904891967773
    10. ' ' → logprob: -15.752904891967773

Token 333: '[r' (ID: 33265)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.4741911292076111
    2. '[r' → logprob: -0.9741911292076111
    3. '[' → logprob: -9.224190711975098
    4. '[i' → logprob: -11.474190711975098
    5. '[C' → logprob: -12.724190711975098
    6. '[int' → logprob: -14.724190711975098
    7. '[s' → logprob: -14.849190711975098
    8. '\[' → logprob: -14.974190711975098
    9. ' [' → logprob: -15.099190711975098
    10. '[R' → logprob: -15.849190711975098

Token 334: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.029805339872837067
    2. '[r' → logprob: -3.7798054218292236
    3. ']=' → logprob: -5.1548051834106445
    4. '[c' → logprob: -8.154805183410645
    5. '][' → logprob: -8.529805183410645
    6. '])' → logprob: -9.529805183410645
    7. '=' → logprob: -9.904805183410645
    8. '[' → logprob: -10.029805183410645
    9. '[i' → logprob: -10.029805183410645
    10. ' ]' → logprob: -10.154805183410645

Token 335: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01256792712956667
    2. ' =' → logprob: -4.38756799697876
    3. '=c' → logprob: -10.012567520141602
    4. ']' → logprob: -12.012567520141602
    5. ']=' → logprob: -12.762567520141602
    6. ',' → logprob: -13.887567520141602
    7. '<|end|>' → logprob: -14.512567520141602
    8. 'c' → logprob: -14.637567520141602
    9. '=r' → logprob: -14.762567520141602
    10. '	' → logprob: -15.012567520141602

Token 336: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -5.676981345459353e-06
    2. ' c' → logprob: -12.250005722045898
    3. '	c' → logprob: -14.000005722045898
    4. '	' → logprob: -21.1250057220459
    5. ')c' → logprob: -21.3750057220459
    6. '   ' → logprob: -21.8750057220459
    7. ' ' → logprob: -22.3750057220459
    8. 'col' → logprob: -22.5000057220459
    9. '0' → logprob: -22.8750057220459
    10. '_c' → logprob: -23.2500057220459

Token 337: '
' (ID: 198)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.25271084904670715
    2. '	col' → logprob: -1.5027108192443848
    3. ' col' → logprob: -7.627710819244385
    4. '		' → logprob: -8.252711296081543
    5. 'for' → logprob: -11.877711296081543
    6. '	for' → logprob: -12.002711296081543
    7. '           ' → logprob: -12.127711296081543
    8. '   ' → logprob: -12.252711296081543
    9. ' ' → logprob: -13.502711296081543
    10. ',col' → logprob: -13.627711296081543

Token 338: '	col' (ID: 93902)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.0029135269578546286
    2. '	col' → logprob: -6.127913475036621
    3. 'for' → logprob: -7.877913475036621
    4. ' col' → logprob: -8.502913475036621
    5. 'print' → logprob: -9.877913475036621
    6. 'if' → logprob: -10.127913475036621
    7. 'put' → logprob: -10.127913475036621
    8. '	for' → logprob: -12.877913475036621
    9. '		' → logprob: -12.877913475036621
    10. 'output' → logprob: -13.877913475036621

Token 339: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.00011236425780225545
    2. '[col' → logprob: -9.125112533569336
    3. '[' → logprob: -13.000112533569336
    4. 'raw' → logprob: -14.875112533569336
    5. ' [' → logprob: -14.875112533569336
    6. 'c' → logprob: -15.375112533569336
    7. '[r' → logprob: -16.750112533569336
    8. ' c' → logprob: -17.000112533569336
    9. ' raw' → logprob: -17.250112533569336
    10. '[C' → logprob: -17.500112533569336

Token 340: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0024028855841606855
    2. '=' → logprob: -6.6274027824401855
    3. ']=' → logprob: -6.8774027824401855
    4. ' =' → logprob: -10.502403259277344
    5. ' ]' → logprob: -11.002403259277344
    6. ')' → logprob: -13.877403259277344
    7. '	' → logprob: -16.127403259277344
    8. ']
' → logprob: -16.502403259277344
    9. '']' → logprob: -16.627403259277344
    10. ' ' → logprob: -18.127403259277344

Token 341: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196768581867218
    2. ' =' → logprob: -2.811967611312866
    3. '＝' → logprob: -17.186967849731445
    4. ' ' → logprob: -17.311967849731445
    5. ')' → logprob: -17.561967849731445
    6. ']' → logprob: -17.811967849731445
    7. '[' → logprob: -18.186967849731445
    8. 's' → logprob: -18.811967849731445
    9. ']=' → logprob: -18.936967849731445
    10. '=True' → logprob: -19.061967849731445

Token 342: ' d' (ID: 272)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '	' → logprob: -17.5000057220459
    4. 'd' → logprob: -18.2500057220459
    5. '   ' → logprob: -20.0000057220459
    6. ' col' → logprob: -20.6250057220459
    7. '  ' → logprob: -21.1250057220459
    8. '１' → logprob: -21.5000057220459
    9. '<|end|>' → logprob: -21.5000057220459
    10. 'col' → logprob: -21.7500057220459

Token 343: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.009930206462740898
    2. '1' → logprob: -4.63493013381958
    3. 'neg' → logprob: -9.384930610656738
    4. '[pos' → logprob: -10.009930610656738
    5. '0' → logprob: -11.009930610656738
    6. ' ' → logprob: -11.134930610656738
    7. ' pos' → logprob: -13.009930610656738
    8. 'c' → logprob: -13.259930610656738
    9. '[' → logprob: -13.384930610656738
    10. '_pos' → logprob: -13.759930610656738

Token 344: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.003623354248702526
    2. 'r' → logprob: -5.6286234855651855
    3. '	r' → logprob: -11.753623008728027
    4. '[c' → logprob: -11.878623008728027
    5. '[' → logprob: -12.503623008728027
    6. '[i' → logprob: -13.253623008728027
    7. '   ' → logprob: -13.628623008728027
    8. ' r' → logprob: -14.003623008728027
    9. '(r' → logprob: -15.003623008728027
    10. '[(' → logprob: -16.503623962402344

Token 345: '+c' (ID: 114860)
  Prédit: '+c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+c' → logprob: -0.2644301950931549
    2. 'c' → logprob: -1.6394301652908325
    3. 'r' → logprob: -3.764430284500122
    4. '+' → logprob: -4.639430046081543
    5. '+r' → logprob: -5.264430046081543
    6. ' +' → logprob: -8.764430046081543
    7. '   ' → logprob: -10.389430046081543
    8. '[c' → logprob: -10.514430046081543
    9. '	c' → logprob: -11.264430046081543
    10. ' c' → logprob: -12.014430046081543

Token 346: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012550270184874535
    2. ' =' → logprob: -4.637550354003906
    3. ']' → logprob: -6.012550354003906
    4. ']=' → logprob: -8.012550354003906
    5. '1' → logprob: -12.762550354003906
    6. 'd' → logprob: -12.887550354003906
    7. '<|end|>' → logprob: -13.262550354003906
    8. ' ' → logprob: -13.387550354003906
    9. '	' → logprob: -14.262550354003906
    10. ')' → logprob: -14.887550354003906

Token 347: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0067248414270579815
    2. ' =' → logprob: -5.006724834442139
    3. '1' → logprob: -11.756725311279297
    4. '<|end|>' → logprob: -13.881725311279297
    5. ' ' → logprob: -15.506725311279297
    6. '=
' → logprob: -15.881725311279297
    7. '	' → logprob: -16.506725311279297
    8. '=True' → logprob: -16.506725311279297
    9. 'd' → logprob: -16.881725311279297
    10. '```' → logprob: -18.256725311279297

Token 348: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04551662132143974
    2. '1' → logprob: -3.1705167293548584
    3. ' d' → logprob: -6.170516490936279
    4. ' ' → logprob: -7.920516490936279
    5. '	d' → logprob: -10.045516967773438
    6. '   ' → logprob: -11.670516967773438
    7. '0' → logprob: -12.670516967773438
    8. '  ' → logprob: -13.545516967773438
    9. '	' → logprob: -13.670516967773438
    10. '`' → logprob: -14.733016967773438

Token 349: 'neg' (ID: 18775)
  Prédit: 'neg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.0009968446101993322
    2. 'pos' → logprob: -7.000997066497803
    3. '-' → logprob: -11.125996589660645
    4. '1' → logprob: -11.125996589660645
    5. 'd' → logprob: -11.125996589660645
    6. 'n' → logprob: -12.000996589660645
    7. '-neg' → logprob: -12.000996589660645
    8. '[c' → logprob: -12.500996589660645
    9. ' neg' → logprob: -12.625996589660645
    10. 'c' → logprob: -12.750996589660645

Token 350: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.1472419600977446e-06
    2. 'r' → logprob: -14.000000953674316
    3. '[' → logprob: -15.375000953674316
    4. ' [' → logprob: -17.125001907348633
    5. '	r' → logprob: -17.500001907348633
    6. ' r' → logprob: -18.750001907348633
    7. '(r' → logprob: -19.375001907348633
    8. '[
' → logprob: -19.625001907348633
    9. '   ' → logprob: -20.000001907348633
    10. ' ' → logprob: -20.500001907348633

Token 351: '-c' (ID: 3452)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.05274634808301926
    2. '-r' → logprob: -3.177746295928955
    3. 'r' → logprob: -4.677746295928955
    4. ' -' → logprob: -8.927746772766113
    5. '-' → logprob: -8.927746772766113
    6. '[-' → logprob: -9.677746772766113
    7. '[' → logprob: -10.677746772766113
    8. '[c' → logprob: -10.927746772766113
    9. '	r' → logprob: -11.177746772766113
    10. '-[' → logprob: -12.177746772766113

Token 352: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003485745983198285
    2. ' +' → logprob: -8.500349044799805
    3. 'N' → logprob: -9.750349044799805
    4. '+n' → logprob: -10.125349044799805
    5. '[N' → logprob: -10.625349044799805
    6. '[' → logprob: -12.000349044799805
    7. '+(' → logprob: -12.500349044799805
    8. ' ' → logprob: -12.625349044799805
    9. '   ' → logprob: -12.875349044799805
    10. '1' → logprob: -13.000349044799805

Token 353: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.010194333270192146
    2. '7' → logprob: -4.635194301605225
    3. '8' → logprob: -7.885194301605225
    4. ' N' → logprob: -10.635194778442383
    5. '[' → logprob: -11.135194778442383
    6. ' ' → logprob: -11.635194778442383
    7. '(' → logprob: -11.760194778442383
    8. '(N' → logprob: -12.760194778442383
    9. '<|end|>' → logprob: -13.385194778442383
    10. '[N' → logprob: -14.010194778442383

Token 354: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0002966127940453589
    2. '1' → logprob: -9.000296592712402
    3. '[' → logprob: -9.625296592712402
    4. ' -' → logprob: -9.750296592712402
    5. '8' → logprob: -10.250296592712402
    6. '7' → logprob: -11.375296592712402
    7. '−' → logprob: -14.375296592712402
    8. '[-' → logprob: -14.500296592712402
    9. '	' → logprob: -14.875296592712402
    10. '   ' → logprob: -15.625296592712402

Token 355: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.465036105713807e-06
    2. ' ' → logprob: -12.500007629394531
    3. '7' → logprob: -12.875007629394531
    4. '8' → logprob: -14.375007629394531
    5. '   ' → logprob: -15.750007629394531
    6. '(' → logprob: -15.875007629394531
    7. '[' → logprob: -16.12500762939453
    8. '```' → logprob: -17.12500762939453
    9. '<|end|>' → logprob: -17.37500762939453
    10. '	' → logprob: -18.12500762939453

Token 356: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013079755008220673
    2. '=' → logprob: -7.126307964324951
    3. ']=' → logprob: -7.626307964324951
    4. ' ]' → logprob: -11.50130844116211
    5. ' =' → logprob: -13.00130844116211
    6. '1' → logprob: -13.12630844116211
    7. '']' → logprob: -13.62630844116211
    8. '	' → logprob: -15.62630844116211
    9. ')' → logprob: -16.62630844116211
    10. '`]' → logprob: -16.87630844116211

Token 357: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0067154900170862675
    2. ' =' → logprob: -5.006715297698975
    3. '1' → logprob: -16.506715774536133
    4. '=True' → logprob: -18.006715774536133
    5. ' ' → logprob: -18.381715774536133
    6. '＝' → logprob: -18.756715774536133
    7. ']=' → logprob: -18.756715774536133
    8. '<|end|>' → logprob: -18.881715774536133
    9. ']' → logprob: -19.131715774536133
    10. '	' → logprob: -19.381715774536133

Token 358: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -18.0
    4. '１' → logprob: -21.0
    5. '=' → logprob: -21.5
    6. '	' → logprob: -22.125
    7. '```' → logprob: -22.5
    8. '  ' → logprob: -22.625
    9. '۱' → logprob: -22.875
    10. '<|end|>' → logprob: -23.125

Token 359: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '   ' → logprob: -19.125
    4. '１' → logprob: -19.375
    5. '	' → logprob: -19.875
    6. '<|end|>' → logprob: -21.625
    7. '۱' → logprob: -21.625
    8. '=' → logprob: -21.875
    9. '  ' → logprob: -22.0
    10. '```' → logprob: -22.5

Token 360: '

' (ID: 279)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.3876078426837921
    2. 'if' → logprob: -1.1376078128814697
    3. 'print' → logprob: -7.262608051300049
    4. 'for' → logprob: -10.63760757446289
    5. 'puts' → logprob: -12.63760757446289
    6. ' if' → logprob: -13.76260757446289
    7. '
' → logprob: -13.88760757446289
    8. ' put' → logprob: -14.13760757446289
    9. '_put' → logprob: -14.13760757446289
    10. '```' → logprob: -14.26260757446289

Token 361: 'put' (ID: 772)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.38691282272338867
    2. 'put' → logprob: -1.1369128227233887
    3. 'print' → logprob: -10.136913299560547
    4. 'puts' → logprob: -14.511913299560547
    5. '```' → logprob: -14.886913299560547
    6. ' if' → logprob: -14.886913299560547
    7. 'for' → logprob: -15.261913299560547
    8. 'assert' → logprob: -15.386913299560547
    9. 'result' → logprob: -16.011913299560547
    10. 'success' → logprob: -16.011913299560547

Token 362: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. '_queue' → logprob: -19.625
    3. 'queen' → logprob: -19.875
    4. 'Queen' → logprob: -22.125
    5. '_
' → logprob: -22.25
    6. '__' → logprob: -22.75
    7. ' _' → logprob: -23.25
    8. '_qu' → logprob: -23.5
    9. ' queen' → logprob: -23.75
    10. '_put' → logprob: -23.875

Token 363: 'queen' (ID: 153556)
  Prédit: 'queen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queen' → logprob: -3.128163257315464e-07
    2. 'que' → logprob: -15.375
    3. '_' → logprob: -18.25
    4. ' queen' → logprob: -18.625
    5. 'king' → logprob: -18.875
    6. 'Queen' → logprob: -19.0
    7. 'queue' → logprob: -19.125
    8. 'qu' → logprob: -20.875
    9. '```' → logprob: -20.875
    10. 'q' → logprob: -21.5

Token 364: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.511406809295295e-06
    2. '0' → logprob: -12.125006675720215
    3. '()' → logprob: -13.875006675720215
    4. ' (' → logprob: -15.875006675720215
    5. '(
' → logprob: -17.8750057220459
    6. '(N' → logprob: -19.2500057220459
    7. '((' → logprob: -19.2500057220459
    8. '```' → logprob: -19.5000057220459
    9. '(n' → logprob: -20.0000057220459
    10. '(i' → logprob: -20.2500057220459

Token 365: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. 'len' → logprob: -15.125000953674316
    3. 'raw' → logprob: -15.750000953674316
    4. ' ' → logprob: -16.0
    5. 'sum' → logprob: -17.0
    6. 'n' → logprob: -18.25
    7. '０' → logprob: -19.0
    8. '۰' → logprob: -19.0
    9. '```' → logprob: -19.125
    10. 'r' → logprob: -19.25

Token 366: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.173704271830502e-06
    2. ' )' → logprob: -12.87500286102295
    3. ')
' → logprob: -15.12500286102295
    4. '))' → logprob: -15.87500286102295
    5. '())' → logprob: -17.375003814697266
    6. ')#' → logprob: -18.000003814697266
    7. ')`' → logprob: -18.625003814697266
    8. '）' → logprob: -19.250003814697266
    9. ')}' → logprob: -19.375003814697266
    10. '()' → logprob: -19.500003814697266

Token 367: 'output' (ID: 6130)
  Prédit: 'output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -1.9361264946837764e-07
    2. ' output' → logprob: -16.25
    3. 'if' → logprob: -18.5
    4. '
' → logprob: -19.5
    5. '	output' → logprob: -19.875
    6. '(output' → logprob: -20.25
    7. '$output' → logprob: -20.375
    8. 'print' → logprob: -20.75
    9. '```' → logprob: -21.5
    10. '_output' → logprob: -21.75

Token 368: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -1.9361264946837764e-07
    2. 'result' → logprob: -16.875
    3. '_results' → logprob: -16.875
    4. '_output' → logprob: -17.625
    5. '_' → logprob: -18.0
    6. '_res' → logprob: -20.125
    7. '_raw' → logprob: -20.375
    8. '_r' → logprob: -20.375
    9. '__' → logprob: -21.375
    10. '_RESULT' → logprob: -21.75

Token 369: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 367
Tokens correctement prédits (1ère position, stricte): 171
Tokens correctement prédits (1ère position, avec adaptation): 171
Tokens correctement prédits (top 10): 316
Précision stricte (1ère position): 46.59%
Précision adaptée (1ère position): 46.59%
Précision (top 10): 86.10%
================================================================================
