================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from itertools import permutations
from copy import deepcopy
board = [["."] * 8 for _ in range(8)]
N = int(input())

def check(r, c, board):
    # 4つのループで8方向のblockを移動不可にする
    for i in range(8):
        if board[i][c] == "Q": return False
        if board[r][i] == "Q": return False
    for i in range(-8,8):
        if 0 <= i + c < 8 and 0 <= i + r < 8:
            if board[i+r][i+c] == "Q": return False
        if 0 <= c+(-i) < 8 and 0 <= i + r < 8:
            if board[i+r][-i+c] == "Q": return False
    return True

rc = [list(map(int, input().split())) for _ in range(N)]

def main():
    for p in permutations(range(8)):
        tmp = deepcopy(board)
        for i, v in enumerate(p):
            tmp[i][v] = "Q"
        if not all(tmp[rc[i][0]][rc[i][1]] == "Q" for i in range(N)): continue
        judge = True
        for i, v in enumerate(p):
            tmp[i][v] = "."
            if check(i, v, tmp):
                pass
            else:
                judge = False
                break
            tmp[i][v] = "Q"
        if judge: return tmp
       
tmp = main()
for t in tmp:
    print(''.join("Q" if i == "Q" else "." for i in t))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' permutations' (ID: 174595)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.1645996570587158
    2. 'product' → logprob: -1.4145996570587158
    3. 'per' → logprob: -1.7895996570587158
    4. 'count' → logprob: -2.039599657058716
    5. 'cycle' → logprob: -2.664599657058716
    6. 'group' → logprob: -3.289599657058716
    7. 'chain' → logprob: -3.414599657058716
    8. 'acc' → logprob: -6.039599418640137
    9. 'is' → logprob: -6.539599418640137
    10. 'zip' → logprob: -6.914599418640137

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -5.574251918005757e-05
    2. '\(' → logprob: -10.375055313110352
    3. '(
' → logprob: -11.625055313110352
    4. '.' → logprob: -12.000055313110352
    5. ''' → logprob: -12.625055313110352
    6. ' (' → logprob: -13.625055313110352
    7. '\' → logprob: -14.500055313110352
    8. ',' → logprob: -14.625055313110352
    9. '```' → logprob: -14.625055313110352
    10. '`' → logprob: -14.875055313110352

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00033713103039190173
    2. '(
' → logprob: -8.125337600708008
    3. '(p' → logprob: -11.625337600708008
    4. '\(' → logprob: -11.750337600708008
    5. 'a' → logprob: -12.375337600708008
    6. 'p' → logprob: -12.750337600708008
    7. ''' → logprob: -12.750337600708008
    8. ',' → logprob: -13.000337600708008
    9. '(

' → logprob: -13.125337600708008
    10. '.' → logprob: -13.375337600708008

Token 6: ' copy' (ID: 5150)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.06043173372745514
    2. ' collections' → logprob: -3.435431718826294
    3. ' random' → logprob: -4.310431957244873
    4. ' itertools' → logprob: -5.310431957244873
    5. ' sys' → logprob: -5.560431957244873
    6. ' functools' → logprob: -6.810431957244873
    7. 'math' → logprob: -7.185431957244873
    8. ' sym' → logprob: -7.185431957244873
    9. 'collections' → logprob: -7.935431957244873
    10. ' os' → logprob: -8.060431480407715

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.10064096003770828
    2. 'import' → logprob: -2.3506410121917725
    3. '.' → logprob: -8.850641250610352
    4. '_import' → logprob: -9.350641250610352
    5. ' im' → logprob: -9.725641250610352
    6. '_' → logprob: -10.850641250610352
    7. ' ' → logprob: -11.100641250610352
    8. '```' → logprob: -11.225641250610352
    9. '.import' → logprob: -11.600641250610352
    10. '.deepcopy' → logprob: -11.600641250610352

Token 8: ' deepcopy' (ID: 130230)
  Prédit: ' deepcopy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deepcopy' → logprob: -0.010795250535011292
    2. 'copy' → logprob: -5.0107951164245605
    3. ' copy' → logprob: -5.6357951164245605
    4. 'deep' → logprob: -7.7607951164245605
    5. '.deepcopy' → logprob: -9.510795593261719
    6. ' deep' → logprob: -13.385795593261719
    7. 'import' → logprob: -14.385795593261719
    8. 'dee' → logprob: -14.635795593261719
    9. ' dee' → logprob: -15.260795593261719
    10. ' import' → logprob: -15.385795593261719

Token 9: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04228181764483452
    2. '\n' → logprob: -4.417281627655029
    3. '(
' → logprob: -4.542281627655029
    4. '\' → logprob: -4.667281627655029
    5. '
' → logprob: -5.417281627655029
    6. '`' → logprob: -7.042281627655029
    7. '[' → logprob: -7.292281627655029
    8. '#' → logprob: -7.417281627655029
    9. '\(' → logprob: -7.917281627655029
    10. '' → logprob: -8.417282104492188

Token 10: 'board' (ID: 3935)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26781731843948364
    2. '(
' → logprob: -1.5178172588348389
    3. '\' → logprob: -5.392817497253418
    4. '\n' → logprob: -5.642817497253418
    5. '(

' → logprob: -5.767817497253418
    6. '(p' → logprob: -6.892817497253418
    7. '```' → logprob: -7.267817497253418
    8. '
' → logprob: -7.517817497253418
    9. 'def' → logprob: -7.642817497253418
    10. 'p' → logprob: -8.142817497253418

Token 11: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04094277694821358
    2. ' =' → logprob: -3.665942668914795
    3. '.' → logprob: -5.165942668914795
    4. '=' → logprob: -5.415942668914795
    5. '[:]' → logprob: -6.540942668914795
    6. '_' → logprob: -6.665942668914795
    7. '[]' → logprob: -7.790942668914795
    8. ')' → logprob: -8.165943145751953
    9. ' ' → logprob: -8.665943145751953
    10. '(' → logprob: -9.290943145751953

Token 12: ' [["' (ID: 183462)
  Prédit: ' [['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[' → logprob: -0.19556330144405365
    2. ' [['' → logprob: -2.195563316345215
    3. ' [["' → logprob: -4.195563316345215
    4. ' [' → logprob: -4.320563316345215
    5. '[['' → logprob: -4.320563316345215
    6. '[[' → logprob: -4.320563316345215
    7. ' [[]' → logprob: -5.320563316345215
    8. '[' → logprob: -5.570563316345215
    9. ' []' → logprob: -6.570563316345215
    10. ' [[[' → logprob: -7.445563316345215

Token 13: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.7347759008407593
    2. ' "' → logprob: -1.7347759008407593
    3. 'X' → logprob: -1.7347759008407593
    4. '.",' → logprob: -2.109776020050049
    5. '."' → logprob: -2.234776020050049
    6. '0' → logprob: -2.859776020050049
    7. ' ",' → logprob: -3.359776020050049
    8. '"' → logprob: -3.734776020050049
    9. '1' → logprob: -4.609776020050049
    10. ' "]' → logprob: -4.609776020050049

Token 14: '"]' (ID: 2601)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04838578775525093
    2. '.",' → logprob: -3.9233858585357666
    3. '.","' → logprob: -4.6733856201171875
    4. '."' → logprob: -4.9233856201171875
    5. '",' → logprob: -5.2983856201171875
    6. '",".' → logprob: -6.0483856201171875
    7. '"]' → logprob: -6.9233856201171875
    8. '","' → logprob: -7.0483856201171875
    9. '"' → logprob: -7.4233856201171875
    10. ',' → logprob: -8.048385620117188

Token 15: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0717999935150146
    2. ',' → logprob: -1.1967999935150146
    3. '[' → logprob: -1.1967999935150146
    4. '["' → logprob: -3.0717999935150146
    5. ' for' → logprob: -6.696800231933594
    6. '*' → logprob: -6.696800231933594
    7. '['' → logprob: -6.821800231933594
    8. '.' → logprob: -7.571800231933594
    9. 'for' → logprob: -7.571800231933594
    10. '"]' → logprob: -8.196800231933594

Token 16: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.04953453317284584
    2. '3' → logprob: -3.674534559249878
    3. ' ' → logprob: -4.299534320831299
    4. '5' → logprob: -5.424534320831299
    5. '4' → logprob: -6.299534320831299
    6. '7' → logprob: -6.674534320831299
    7. '6' → logprob: -6.674534320831299
    8. '8' → logprob: -7.549534320831299
    9. '10' → logprob: -9.674534797668457
    10. '15' → logprob: -11.674534797668457

Token 17: '8' (ID: 23)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.18241633474826813
    2. '3' → logprob: -2.8074164390563965
    3. '5' → logprob: -2.8074164390563965
    4. '8' → logprob: -4.1824164390563965
    5. '4' → logprob: -4.3074164390563965
    6. '6' → logprob: -4.8074164390563965
    7. '7' → logprob: -4.9324164390563965
    8. '10' → logprob: -6.8074164390563965
    9. ' ' → logprob: -7.9324164390563965
    10. '15' → logprob: -8.807415962219238

Token 18: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09947846829891205
    2. 'for' → logprob: -2.4744784832000732
    3. ']' → logprob: -4.849478244781494
    4. '[' → logprob: -6.099478244781494
    5. ',' → logprob: -9.224478721618652
    6. '	for' → logprob: -9.474478721618652
    7. '   ' → logprob: -9.599478721618652
    8. '```' → logprob: -9.724478721618652
    9. '["' → logprob: -10.224478721618652
    10. ')' → logprob: -10.849478721618652

Token 19: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.09357979148626328
    2. '_' → logprob: -2.8435797691345215
    3. ' range' → logprob: -3.5935797691345215
    4. ' ' → logprob: -6.2185797691345215
    5. ' i' → logprob: -6.8435797691345215
    6. 'range' → logprob: -7.5935797691345215
    7. '_range' → logprob: -10.34358024597168
    8. 'i' → logprob: -11.96858024597168
    9. ' row' → logprob: -11.96858024597168
    10. '  ' → logprob: -13.59358024597168

Token 20: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1427522450685501
    2. 'in' → logprob: -2.017752170562744
    3. 'range' → logprob: -10.267752647399902
    4. ' ' → logprob: -11.267752647399902
    5. '<|end|>' → logprob: -11.267752647399902
    6. 'import' → logprob: -12.767752647399902
    7. '<|end|>' → logprob: -13.017752647399902
    8. '_' → logprob: -13.017752647399902
    9. 'In' → logprob: -13.142752647399902
    10. '	in' → logprob: -13.392752647399902

Token 21: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931478977203369
    2. 'range' → logprob: -0.6931478977203369
    3. ' ' → logprob: -14.443147659301758
    4. '	range' → logprob: -16.193147659301758
    5. ' ran' → logprob: -16.443147659301758
    6. 'ran' → logprob: -16.693147659301758
    7. '```' → logprob: -17.568147659301758
    8. 'rang' → logprob: -17.568147659301758
    9. '  ' → logprob: -18.318147659301758
    10. '(range' → logprob: -18.318147659301758

Token 22: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4021237802808173e-05
    2. '8' → logprob: -11.625014305114746
    3. ' (' → logprob: -12.250014305114746
    4. '7' → logprob: -16.37501335144043
    5. ' ' → logprob: -16.37501335144043
    6. '(
' → logprob: -17.75001335144043
    7. '6' → logprob: -18.62501335144043
    8. '9' → logprob: -19.75001335144043
    9. '```' → logprob: -20.50001335144043
    10. '4' → logprob: -20.62501335144043

Token 23: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '7' → logprob: -16.000009536743164
    4. '```' → logprob: -17.625009536743164
    5. '9' → logprob: -17.875009536743164
    6. '(' → logprob: -18.500009536743164
    7. ')' → logprob: -19.125009536743164
    8. '4' → logprob: -19.250009536743164
    9. '' → logprob: -19.500009536743164
    10. '   ' → logprob: -19.562509536743164

Token 24: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0001761272142175585
    2. ']' → logprob: -9.000176429748535
    3. ')' → logprob: -10.125176429748535
    4. '])]' → logprob: -11.875176429748535
    5. ')])' → logprob: -12.625176429748535
    6. ')],' → logprob: -14.000176429748535
    7. '])' → logprob: -14.875176429748535
    8. '")]' → logprob: -15.000176429748535
    9. '')]' → logprob: -15.250176429748535
    10. '```' → logprob: -15.750176429748535

Token 25: 'N' (ID: 45)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.6956244707107544
    2. 'q' → logprob: -1.1956244707107544
    3. '#' → logprob: -2.445624351501465
    4. 'p' → logprob: -2.695624351501465
    5. 'r' → logprob: -5.070624351501465
    6. 'board' → logprob: -5.320624351501465
    7. 'for' → logprob: -5.445624351501465
    8. '[' → logprob: -5.695624351501465
    9. 'queen' → logprob: -5.695624351501465
    10. 'b' → logprob: -5.820624351501465

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6208709478378296
    2. '=' → logprob: -0.8708709478378296
    3. '_' → logprob: -3.495871067047119
    4. 'Q' → logprob: -4.495871067047119
    5. 'E' → logprob: -6.620871067047119
    6. '-' → logprob: -8.245870590209961
    7. ' ' → logprob: -8.495870590209961
    8. 'e' → logprob: -9.370870590209961
    9. '_Q' → logprob: -9.370870590209961
    10. 'u' → logprob: -9.995870590209961

Token 27: ' int' (ID: 677)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '8' → logprob: -0.5775139331817627
    2. ' ' → logprob: -0.8275139331817627
    3. '4' → logprob: -6.577513694763184
    4. '5' → logprob: -9.577513694763184
    5. '9' → logprob: -10.202513694763184
    6. '7' → logprob: -10.452513694763184
    7. '1' → logprob: -10.577513694763184
    8. '3' → logprob: -11.577513694763184
    9. '6' → logprob: -12.327513694763184
    10. '2' → logprob: -12.952513694763184

Token 28: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0033399024978280067
    2. '(input' → logprob: -5.753339767456055
    3. ' (' → logprob: -9.628339767456055
    4. '('' → logprob: -10.378339767456055
    5. '()' → logprob: -11.128339767456055
    6. 'input' → logprob: -11.253339767456055
    7. '(N' → logprob: -11.628339767456055
    8. '(
' → logprob: -11.753339767456055
    9. '(`' → logprob: -12.503339767456055
    10. '("' → logprob: -12.753339767456055

Token 29: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.29202595353126526
    2. '()' → logprob: -1.4170259237289429
    3. ')' → logprob: -5.167026042938232
    4. '(' → logprob: -5.292026042938232
    5. ' ())' → logprob: -11.417025566101074
    6. '()))' → logprob: -11.667025566101074
    7. '().' → logprob: -11.917025566101074
    8. '();)' → logprob: -12.042025566101074
    9. '(
' → logprob: -12.167025566101074
    10. '('' → logprob: -12.167025566101074

Token 30: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28900331258773804
    2. '#' → logprob: -2.789003372192383
    3. '
' → logprob: -3.289003372192383
    4. 'q' → logprob: -3.664003372192383
    5. 'Q' → logprob: -3.664003372192383
    6. 'r' → logprob: -4.289003372192383
    7. ')' → logprob: -4.289003372192383
    8. ' for' → logprob: -4.289003372192383
    9. 'p' → logprob: -4.414003372192383
    10. ':' → logprob: -4.539003372192383

Token 31: ' check' (ID: 2371)
  Prédit: ' place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' place' → logprob: -0.023293927311897278
    2. ' solve' → logprob: -4.148293972015381
    3. ' is' → logprob: -5.273293972015381
    4. ' can' → logprob: -7.398293972015381
    5. ' check' → logprob: -7.898293972015381
    6. ' places' → logprob: -8.273293495178223
    7. ' back' → logprob: -8.398293495178223
    8. ' queens' → logprob: -8.648293495178223
    9. ' valid' → logprob: -9.398293495178223
    10. ' generate' → logprob: -9.648293495178223

Token 32: '(r' (ID: 4729)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2510055601596832
    2. '(board' → logprob: -2.0010056495666504
    3. '(row' → logprob: -2.6260056495666504
    4. '_' → logprob: -5.00100564956665
    5. '_board' → logprob: -6.50100564956665
    6. ' (' → logprob: -6.62600564956665
    7. '_positions' → logprob: -6.62600564956665
    8. '_position' → logprob: -7.25100564956665
    9. '_row' → logprob: -7.50100564956665
    10. '(rows' → logprob: -7.62600564956665

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009869617642834783
    2. ' ,' → logprob: -7.7509870529174805
    3. ',row' → logprob: -8.50098705291748
    4. '):' → logprob: -8.62598705291748
    5. ')' → logprob: -9.87598705291748
    6. ',r' → logprob: -10.00098705291748
    7. ',int' → logprob: -11.50098705291748
    8. ',column' → logprob: -11.50098705291748
    9. ',c' → logprob: -11.62598705291748
    10. ',p' → logprob: -12.00098705291748

Token 34: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.11283007264137268
    2. ' c' → logprob: -2.23783016204834
    3. '	c' → logprob: -12.36283016204834
    4. ' ' → logprob: -13.11283016204834
    5. ')c' → logprob: -14.11283016204834
    6. 'cc' → logprob: -15.48783016204834
    7. ' ' → logprob: -16.112829208374023
    8. '   ' → logprob: -16.487829208374023
    9. '

' → logprob: -16.737829208374023
    10. 'r' → logprob: -16.862829208374023

Token 35: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1206684336066246
    2. ',' → logprob: -2.245668411254883
    3. ')' → logprob: -4.870668411254883
    4. ' ):' → logprob: -9.370668411254883
    5. ' ,' → logprob: -10.870668411254883
    6. '):
' → logprob: -10.995668411254883
    7. '),' → logprob: -11.995668411254883
    8. ':' → logprob: -12.370668411254883
    9. ')):' → logprob: -12.995668411254883
    10. ' )' → logprob: -13.495668411254883

Token 36: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.4417925477027893
    2. ' board' → logprob: -1.1917924880981445
    3. ' queens' → logprob: -4.3167924880981445
    4. 'positions' → logprob: -4.6917924880981445
    5. 'que' → logprob: -5.0667924880981445
    6. ' positions' → logprob: -5.4417924880981445
    7. 'rows' → logprob: -6.0667924880981445
    8. 'row' → logprob: -6.4417924880981445
    9. 'arr' → logprob: -6.6917924880981445
    10. 'pos' → logprob: -6.9417924880981445

Token 37: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0018276228802278638
    2. ')' → logprob: -6.626827716827393
    3. ',' → logprob: -7.626827716827393
    4. ' ):' → logprob: -11.876827239990234
    5. '):
' → logprob: -12.376827239990234
    6. ':' → logprob: -13.501827239990234
    7. '),' → logprob: -14.876827239990234
    8. ']:' → logprob: -15.001827239990234
    9. ')):' → logprob: -15.126827239990234
    10. '[]):' → logprob: -16.126827239990234

Token 38: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9814138412475586
    2. '):' → logprob: -0.9814138412475586
    3. ':' → logprob: -1.7314138412475586
    4. '   ' → logprob: -2.7314138412475586
    5. ' ' → logprob: -6.356413841247559
    6. '(' → logprob: -6.481413841247559
    7. '    ' → logprob: -7.356413841247559
    8. ' :' → logprob: -7.606413841247559
    9. ' ):' → logprob: -7.981413841247559
    10. '<|end|>' → logprob: -7.981413841247559

Token 39: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2949579358100891
    2. ' for' → logprob: -1.7949578762054443
    3. 'for' → logprob: -2.9199578762054443
    4. ')' → logprob: -4.294958114624023
    5. '"' → logprob: -4.419958114624023
    6. '    ' → logprob: -5.669958114624023
    7. ' ' → logprob: -6.919958114624023
    8. ' if' → logprob: -7.169958114624023
    9. ''' → logprob: -7.294958114624023
    10. ' return' → logprob: -7.419958114624023

Token 40: ' ' (ID: 220)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8527203798294067
    2. '   ' → logprob: -1.2277203798294067
    3. 'for' → logprob: -2.477720260620117
    4. '    ' → logprob: -2.602720260620117
    5. ' r' → logprob: -2.852720260620117
    6. 'r' → logprob: -3.977720260620117
    7. ' ' → logprob: -4.352720260620117
    8. '#' → logprob: -5.227720260620117
    9. ' if' → logprob: -5.227720260620117
    10. ' #' → logprob: -5.477720260620117

Token 41: '4' (ID: 19)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004807822406291962
    2. ' for' → logprob: -5.754807949066162
    3. '#' → logprob: -7.754807949066162
    4. '   ' → logprob: -8.004807472229004
    5. 'def' → logprob: -8.504807472229004
    6. 'dire' → logprob: -8.504807472229004
    7. 'row' → logprob: -9.129807472229004
    8. 'return' → logprob: -9.129807472229004
    9. 'r' → logprob: -9.504807472229004
    10. 'if' → logprob: -10.379807472229004

Token 42: 'つ' (ID: 18290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4703047275543213
    2. ')' → logprob: -1.8453047275543213
    3. ' ' → logprob: -2.8453047275543213
    4. '    ' → logprob: -2.9703047275543213
    5. '  ' → logprob: -3.8453047275543213
    6. '-' → logprob: -3.9703047275543213
    7. 'def' → logprob: -4.095304489135742
    8. ' if' → logprob: -5.345304489135742
    9. 'if' → logprob: -5.345304489135742
    10. ':' → logprob: -5.595304489135742

Token 43: 'の' (ID: 3385)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45788493752479553
    2. ')' → logprob: -1.9578849077224731
    3. ' ' → logprob: -3.0828850269317627
    4. '<|end|>' → logprob: -3.2078850269317627
    5. ' directions' → logprob: -3.9578850269317627
    6. '    ' → logprob: -4.082884788513184
    7. 'つ' → logprob: -4.332884788513184
    8. ' of' → logprob: -4.707884788513184
    9. '  ' → logprob: -4.832884788513184
    10. 'def' → logprob: -4.957884788513184

Token 44: 'ル' (ID: 7052)
  Prédit: ' directions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' directions' → logprob: -0.7180807590484619
    2. 'dire' → logprob: -1.093080759048462
    3. '方向' → logprob: -1.843080759048462
    4. 'for' → logprob: -4.593080520629883
    5. 'direction' → logprob: -5.093080520629883
    6. 'if' → logprob: -7.343080520629883
    7. 'dirs' → logprob: -7.718080520629883
    8. '   ' → logprob: -8.343080520629883
    9. ' for' → logprob: -8.468080520629883
    10. 'def' → logprob: -8.468080520629883

Token 45: 'ープ' (ID: 91243)
  Prédit: 'ー'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ー' → logprob: -0.015665831044316292
    2. 'ープ' → logprob: -4.2656660079956055
    3. 'ール' → logprob: -6.7656660079956055
    4. 'ート' → logprob: -8.640666007995605
    5. 'プ' → logprob: -10.265666007995605
    6. '```' → logprob: -10.890666007995605
    7. '｜
' → logprob: -11.265666007995605
    8. 'ン' → logprob: -11.515666007995605
    9. 'ーズ' → logprob: -11.640666007995605
    10. 'ｰ' → logprob: -11.640666007995605

Token 46: 'で' (ID: 4344)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6856908798217773
    2. '   ' → logprob: -1.8106908798217773
    3. '<|end|>' → logprob: -1.8106908798217773
    4. ':' → logprob: -2.4356908798217773
    5. 'for' → logprob: -2.8106908798217773
    6. ' ' → logprob: -4.810690879821777
    7. '<|end|>' → logprob: -5.060690879821777
    8. ')' → logprob: -6.435690879821777
    9. '    ' → logprob: -6.810690879821777
    10. '	for' → logprob: -7.060690879821777

Token 47: '8' (ID: 23)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.35791605710983276
    2. 'for' → logprob: -1.7329161167144775
    3. '   ' → logprob: -2.2329161167144775
    4. ' range' → logprob: -4.732915878295898
    5. 'range' → logprob: -5.357915878295898
    6. '    ' → logprob: -6.857915878295898
    7. ' return' → logprob: -7.607915878295898
    8. ' r' → logprob: -7.732915878295898
    9. ' ' → logprob: -7.982915878295898
    10. 'r' → logprob: -7.982915878295898

Token 48: '方向' (ID: 101892)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25738629698753357
    2. ')' → logprob: -2.6323862075805664
    3. '    ' → logprob: -3.0073862075805664
    4. 'for' → logprob: -3.6323862075805664
    5. ' ' → logprob: -3.7573862075805664
    6. ' for' → logprob: -4.132386207580566
    7. '-' → logprob: -4.507386207580566
    8. '  ' → logprob: -4.757386207580566
    9. '<|end|>' → logprob: -4.882386207580566
    10. 'range' → logprob: -6.132386207580566

Token 49: 'の' (ID: 3385)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9720888733863831
    2. '   ' → logprob: -1.3470888137817383
    3. ' for' → logprob: -1.7220888137817383
    4. '<|end|>' → logprob: -2.2220888137817383
    5. 'for' → logprob: -2.8470888137817383
    6. '<|end|>' → logprob: -5.472088813781738
    7. ',' → logprob: -5.722088813781738
    8. ' ' → logprob: -6.347088813781738
    9. ')' → logprob: -6.472088813781738
    10. ':
' → logprob: -6.722088813781738

Token 50: 'block' (ID: 6230)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.362500935792923
    2. ' for' → logprob: -1.7375009059906006
    3. ' directions' → logprob: -2.4875009059906006
    4. '方向' → logprob: -3.7375009059906006
    5. 'dx' → logprob: -5.11250114440918
    6. 'range' → logprob: -5.36250114440918
    7. 'return' → logprob: -5.86250114440918
    8. ' return' → logprob: -6.61250114440918
    9. 'dire' → logprob: -7.11250114440918
    10. ' range' → logprob: -7.23750114440918

Token 51: 'を' (ID: 7277)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.30704471468925476
    2. ':' → logprob: -2.182044744491577
    3. 'ed' → logprob: -3.432044744491577
    4. ',' → logprob: -3.682044744491577
    5. ' ' → logprob: -4.057044506072998
    6. ')' → logprob: -4.182044506072998
    7. '#' → logprob: -4.682044506072998
    8. 'ing' → logprob: -4.932044506072998
    9. '   ' → logprob: -5.057044506072998
    10. '[]' → logprob: -5.307044506072998

Token 52: '移' (ID: 43290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5779953598976135
    2. ' for' → logprob: -2.0779953002929688
    3. '[]' → logprob: -2.7029953002929688
    4. 'for' → logprob: -2.7029953002929688
    5. ' ' → logprob: -2.8279953002929688
    6. ':' → logprob: -3.8279953002929688
    7. ' in' → logprob: -4.202995300292969
    8. 'def' → logprob: -4.452995300292969
    9. 'を' → logprob: -4.702995300292969
    10. 'range' → logprob: -4.827995300292969

Token 53: '動' (ID: 24009)
  Prédit: '動'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '動' → logprob: -0.0008481022086925805
    2. 'す' → logprob: -8.125847816467285
    3. '```' → logprob: -8.750847816467285
    4. 'る' → logprob: -9.000847816467285
    5. 'して' → logprob: -9.500847816467285
    6. 'し' → logprob: -9.875847816467285
    7. 'ろ' → logprob: -10.000847816467285
    8. 'り' → logprob: -10.500847816467285
    9. 'せ' → logprob: -11.250847816467285
    10. 'した' → logprob: -11.375847816467285

Token 54: '不可' (ID: 76578)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2818050980567932
    2. 'for' → logprob: -2.0318050384521484
    3. ' for' → logprob: -2.5318050384521484
    4. ' ' → logprob: -5.031805038452148
    5. '    ' → logprob: -5.281805038452148
    6. ')' → logprob: -5.406805038452148
    7. ',' → logprob: -5.531805038452148
    8. '<|end|>' → logprob: -5.656805038452148
    9. '[]' → logprob: -6.156805038452148
    10. '  ' → logprob: -6.531805038452148

Token 55: 'に' (ID: 5280)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2928043007850647
    2. '   ' → logprob: -2.04280424118042
    3. ')' → logprob: -3.66780424118042
    4. ' ' → logprob: -3.79280424118042
    5. '(' → logprob: -4.04280424118042
    6. ' for' → logprob: -4.16780424118042
    7. '):' → logprob: -4.29280424118042
    8. ',' → logprob: -5.41780424118042
    9. 'for' → logprob: -5.41780424118042
    10. '    ' → logprob: -5.66780424118042

Token 56: 'する' (ID: 39065)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.171351358294487
    2. '   ' → logprob: -2.796351432800293
    3. '):' → logprob: -3.046351432800293
    4. '(' → logprob: -4.046351432800293
    5. ')' → logprob: -4.171351432800293
    6. '():' → logprob: -5.171351432800293
    7. ' ' → logprob: -5.421351432800293
    8. ' :' → logprob: -6.796351432800293
    9. '#' → logprob: -6.921351432800293
    10. '<|end|>' → logprob: -7.546351432800293

Token 57: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1368148773908615
    2. '   ' → logprob: -2.636814832687378
    3. '(' → logprob: -3.761814832687378
    4. '):' → logprob: -3.761814832687378
    5. ')' → logprob: -5.511815071105957
    6. '():' → logprob: -6.886815071105957
    7. ' ' → logprob: -7.011815071105957
    8. '<|end|>' → logprob: -7.511815071105957
    9. '(r' → logprob: -7.636815071105957
    10. '#' → logprob: -7.761815071105957

Token 58: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06576018780469894
    2. '   ' → logprob: -3.0657601356506348
    3. '):' → logprob: -4.815760135650635
    4. ')' → logprob: -5.565760135650635
    5. ' :' → logprob: -6.315760135650635
    6. ' ' → logprob: -6.815760135650635
    7. '(' → logprob: -7.315760135650635
    8. '<|end|>' → logprob: -8.065760612487793
    9. '():' → logprob: -8.315760612487793
    10. '#' → logprob: -8.815760612487793

Token 59: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3797690272331238
    2. '   ' → logprob: -1.2547690868377686
    3. ' ' → logprob: -4.2547688484191895
    4. ')' → logprob: -5.3797688484191895
    5. '\' → logprob: -6.2547688484191895
    6. '    ' → logprob: -6.5047688484191895
    7. ':
' → logprob: -6.7547688484191895
    8. ' :' → logprob: -6.7547688484191895
    9. '<|end|>' → logprob: -7.0047688484191895
    10. ' for' → logprob: -7.1297688484191895

Token 60: ' i' (ID: 575)
  Prédit: ' dr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dr' → logprob: -0.299637109041214
    2. ' i' → logprob: -1.7996370792388916
    3. 'i' → logprob: -3.9246370792388916
    4. ' dx' → logprob: -3.9246370792388916
    5. ' d' → logprob: -4.049637317657471
    6. 'dr' → logprob: -4.174637317657471
    7. 'd' → logprob: -5.424637317657471
    8. ' _' → logprob: -5.424637317657471
    9. ' delta' → logprob: -6.049637317657471
    10. 'dx' → logprob: -6.174637317657471

Token 61: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043737273663282394
    2. 'in' → logprob: -3.1687371730804443
    3. ',' → logprob: -7.793737411499023
    4. ' ' → logprob: -8.793737411499023
    5. 'n' → logprob: -9.918737411499023
    6. ' ,' → logprob: -10.543737411499023
    7. '  ' → logprob: -10.793737411499023
    8. ')' → logprob: -11.168737411499023
    9. '1' → logprob: -11.793737411499023
    10. '+' → logprob: -11.793737411499023

Token 62: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.28180715441703796
    2. 'range' → logprob: -1.4068071842193604
    3. '[' → logprob: -8.031806945800781
    4. '[-' → logprob: -8.156806945800781
    5. ' [-' → logprob: -11.531806945800781
    6. ' [' → logprob: -12.031806945800781
    7. '(range' → logprob: -12.156806945800781
    8. ' ' → logprob: -12.531806945800781
    9. 'r' → logprob: -12.906806945800781
    10. '	range' → logprob: -13.156806945800781

Token 63: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.42909878492355347
    2. '(-' → logprob: -1.0540988445281982
    3. '(r' → logprob: -8.179099082946777
    4. '(N' → logprob: -10.304099082946777
    5. '8' → logprob: -10.554099082946777
    6. '(len' → logprob: -10.679099082946777
    7. ' (-' → logprob: -11.929099082946777
    8. '(n' → logprob: -12.179099082946777
    9. '（' → logprob: -13.054099082946777
    10. '((-' → logprob: -13.054099082946777

Token 64: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.44049620628356934
    2. '-' → logprob: -1.1904962062835693
    3. '(-' → logprob: -3.3154962062835693
    4. '1' → logprob: -4.815496444702148
    5. '(' → logprob: -5.065496444702148
    6. '4' → logprob: -6.940496444702148
    7. ' -' → logprob: -8.440496444702148
    8. ' ' → logprob: -8.815496444702148
    9. 'r' → logprob: -10.190496444702148
    10. '7' → logprob: -10.940496444702148

Token 65: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012682090746238828
    2. ')' → logprob: -7.50126838684082
    3. '):
' → logprob: -7.50126838684082
    4. ' ):' → logprob: -9.00126838684082
    5. '   ' → logprob: -10.62626838684082
    6. ':' → logprob: -12.37626838684082
    7. '+' → logprob: -13.50126838684082
    8. ')：' → logprob: -13.62626838684082
    9. ' ' → logprob: -14.12626838684082
    10. '**' → logprob: -14.50126838684082

Token 66: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: ' board' (ID: 6796)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6961610317230225
    2. ' r' → logprob: -1.1961610317230225
    3. ' board' → logprob: -2.8211610317230225
    4. ' i' → logprob: -3.1961610317230225
    5. ' not' → logprob: -3.3211610317230225
    6. 'board' → logprob: -3.6961610317230225
    7. 'i' → logprob: -3.8211610317230225
    8. ' abs' → logprob: -4.821161270141602
    9. 'abs' → logprob: -6.321161270141602
    10. 'not' → logprob: -6.446161270141602

Token 69: '[i' (ID: 1768)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0008040298125706613
    2. '[' → logprob: -8.12580394744873
    3. '[i' → logprob: -8.25080394744873
    4. '][' → logprob: -8.62580394744873
    5. 'r' → logprob: -10.25080394744873
    6. '[row' → logprob: -11.50080394744873
    7. ' [' → logprob: -12.00080394744873
    8. '[c' → logprob: -12.50080394744873
    9. '[R' → logprob: -13.25080394744873
    10. '```' → logprob: -13.50080394744873

Token 70: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001443449524231255
    2. '[r' → logprob: -7.501443386077881
    3. ']' → logprob: -8.251443862915039
    4. '[' → logprob: -8.376443862915039
    5. '[i' → logprob: -8.876443862915039
    6. '[c' → logprob: -9.376443862915039
    7. ' ][' → logprob: -9.501443862915039
    8. ']==' → logprob: -10.626443862915039
    9. '[row' → logprob: -11.126443862915039
    10. '==' → logprob: -11.251443862915039

Token 71: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.5491004129871726e-05
    2. ' c' → logprob: -10.000045776367188
    3. ' ' → logprob: -16.875045776367188
    4. '   ' → logprob: -17.000045776367188
    5. ')c' → logprob: -18.000045776367188
    6. '	c' → logprob: -18.500045776367188
    7. ']' → logprob: -19.250045776367188
    8. '    ' → logprob: -19.625045776367188
    9. '_c' → logprob: -19.750045776367188
    10. '<c' → logprob: -19.875045776367188

Token 72: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00450725806877017
    2. ']==' → logprob: -5.504507064819336
    3. ' ]' → logprob: -8.879507064819336
    4. '"]' → logprob: -9.379507064819336
    5. ']=="' → logprob: -9.504507064819336
    6. '==' → logprob: -9.754507064819336
    7. '#' → logprob: -10.754507064819336
    8. ']=='' → logprob: -11.504507064819336
    9. ' ==' → logprob: -11.629507064819336
    10. ']!=' → logprob: -11.629507064819336

Token 73: ' ==' (ID: 951)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5148192644119263
    2. '==' → logprob: -1.2648192644119263
    3. ' ==' → logprob: -2.8898191452026367
    4. ']==' → logprob: -3.7648191452026367
    5. '=' → logprob: -3.8898191452026367
    6. '!=' → logprob: -4.264819145202637
    7. ')' → logprob: -6.389819145202637
    8. ' !=' → logprob: -6.764819145202637
    9. 'in' → logprob: -7.014819145202637
    10. '#' → logprob: -7.514819145202637

Token 74: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.218581423163414
    2. ''' → logprob: -2.343581438064575
    3. '"B' → logprob: -2.968581438064575
    4. '"#' → logprob: -3.718581438064575
    5. '"O' → logprob: -5.093581199645996
    6. '"N' → logprob: -5.468581199645996
    7. '"A' → logprob: -5.843581199645996
    8. ''#' → logprob: -6.093581199645996
    9. '".' → logprob: -6.593581199645996
    10. ''O' → logprob: -6.843581199645996

Token 75: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.533960223197937
    2. 'B' → logprob: -1.533960223197937
    3. '#' → logprob: -2.4089603424072266
    4. 'R' → logprob: -3.5339603424072266
    5. '.' → logprob: -3.9089603424072266
    6. '"' → logprob: -4.158960342407227
    7. 'X' → logprob: -4.283960342407227
    8. 'O' → logprob: -4.908960342407227
    9. '"#' → logprob: -5.033960342407227
    10. ''' → logprob: -6.533960342407227

Token 76: '":' (ID: 1243)
  Prédit: '":'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.2262285053730011
    2. '"' → logprob: -1.6012284755706787
    3. '":
' → logprob: -7.601228713989258
    4. ':' → logprob: -9.226228713989258
    5. ' "' → logprob: -10.101228713989258
    6. '#' → logprob: -10.101228713989258
    7. '":
' → logprob: -10.351228713989258
    8. ' ":' → logprob: -10.476228713989258
    9. 'Q' → logprob: -10.726228713989258
    10. '"):' → logprob: -11.851228713989258

Token 77: ' return' (ID: 622)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -1.093459129333496
    2. '       ' → logprob: -1.343459129333496
    3. '           ' → logprob: -1.343459129333496
    4. 'break' → logprob: -2.093459129333496
    5. ' continue' → logprob: -5.468459129333496
    6. '               ' → logprob: -5.718459129333496
    7. '<|end|>' → logprob: -6.093459129333496
    8. '	break' → logprob: -6.343459129333496
    9. 'continue' → logprob: -6.468459129333496
    10. 'return' → logprob: -6.468459129333496

Token 78: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.12492038309574127
    2. ' False' → logprob: -2.24992036819458
    3. 'True' → logprob: -4.74992036819458
    4. ' True' → logprob: -5.87492036819458
    5. 'i' → logprob: -8.874920845031738
    6. '1' → logprob: -9.124920845031738
    7. ' ' → logprob: -9.249920845031738
    8. '(False' → logprob: -9.749920845031738
    9. '0' → logprob: -10.124920845031738
    10. '-' → logprob: -10.249920845031738

Token 79: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.6958823800086975
    2. ' board' → logprob: -0.6958823800086975
    3. 'r' → logprob: -6.445882320404053
    4. ' r' → logprob: -7.445882320404053
    5. ' ' → logprob: -7.820882320404053
    6. '   ' → logprob: -9.445882797241211
    7. '    ' → logprob: -10.195882797241211
    8. '	board' → logprob: -10.945882797241211
    9. '(board' → logprob: -11.820882797241211
    10. '  ' → logprob: -12.070882797241211

Token 83: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.002083762548863888
    2. 'r' → logprob: -6.752083778381348
    3. '[' → logprob: -7.502083778381348
    4. '][' → logprob: -9.127083778381348
    5. '[row' → logprob: -10.377083778381348
    6. '[s' → logprob: -10.627083778381348
    7. ' [' → logprob: -10.877083778381348
    8. 'def' → logprob: -10.877083778381348
    9. '[i' → logprob: -11.627083778381348
    10. '```' → logprob: -11.752083778381348

Token 84: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0011840384686365724
    2. '[i' → logprob: -7.126183986663818
    3. ']' → logprob: -9.001184463500977
    4. ')[' → logprob: -9.501184463500977
    5. '[' → logprob: -9.876184463500977
    6. '"][' → logprob: -10.251184463500977
    7. ')][' → logprob: -10.376184463500977
    8. ' ][' → logprob: -10.501184463500977
    9. ''][' → logprob: -12.001184463500977
    10. '[I' → logprob: -12.126184463500977

Token 85: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.200166469876422e-06
    2. ' i' → logprob: -12.750004768371582
    3. '[i' → logprob: -14.125004768371582
    4. ']' → logprob: -14.625004768371582
    5. '	i' → logprob: -14.875004768371582
    6. 'j' → logprob: -15.500004768371582
    7. '
' → logprob: -16.0000057220459
    8. ' ' → logprob: -16.1250057220459
    9. '][' → logprob: -17.3750057220459
    10. '`' → logprob: -17.8750057220459

Token 86: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016996318474411964
    2. '==' → logprob: -4.891996383666992
    3. ']==' → logprob: -5.391996383666992
    4. ' ==' → logprob: -5.766996383666992
    5. ' ]' → logprob: -6.516996383666992
    6. ')' → logprob: -8.891996383666992
    7. '"' → logprob: -11.391996383666992
    8. '=' → logprob: -11.766996383666992
    9. '[' → logprob: -11.766996383666992
    10. ' ' → logprob: -12.266996383666992

Token 87: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07900810241699219
    2. '==' → logprob: -2.579008102416992
    3. '=' → logprob: -10.454008102416992
    4. '"' → logprob: -10.579008102416992
    5. ')' → logprob: -10.954008102416992
    6. ' ' → logprob: -10.954008102416992
    7. '[' → logprob: -11.704008102416992
    8. '=="' → logprob: -11.954008102416992
    9. ']' → logprob: -12.579008102416992
    10. ' =' → logprob: -12.829008102416992

Token 88: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0024349973537027836
    2. ' "' → logprob: -6.377435207366943
    3. ''' → logprob: -7.377435207366943
    4. ' ' → logprob: -9.877434730529785
    5. 'Q' → logprob: -11.252434730529785
    6. '[' → logprob: -12.252434730529785
    7. '")' → logprob: -12.502434730529785
    8. '  ' → logprob: -12.502434730529785
    9. ')' → logprob: -12.627434730529785
    10. ' '' → logprob: -12.752434730529785

Token 89: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.31662148237228394
    2. '"' → logprob: -1.3166215419769287
    3. '".' → logprob: -6.81662130355835
    4. '.' → logprob: -7.19162130355835
    5. ''' → logprob: -7.19162130355835
    6. '"."' → logprob: -8.066621780395508
    7. '.Q' → logprob: -8.691621780395508
    8. ''.' → logprob: -9.316621780395508
    9. ' Q' → logprob: -9.816621780395508
    10. ')' → logprob: -10.441621780395508

Token 90: '":' (ID: 1243)
  Prédit: '":'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.044315729290246964
    2. '"' → logprob: -3.169315814971924
    3. ':' → logprob: -6.669315814971924
    4. ' ":' → logprob: -10.419315338134766
    5. '"):' → logprob: -12.419315338134766
    6. '":
' → logprob: -13.044315338134766
    7. '"]:' → logprob: -13.044315338134766
    8. '):' → logprob: -13.419315338134766
    9. ' "' → logprob: -13.544315338134766
    10. '">' → logprob: -13.919315338134766

Token 91: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12899287045001984
    2. ' False' → logprob: -2.128992795944214
    3. 'False' → logprob: -6.878993034362793
    4. ' ' → logprob: -7.753993034362793
    5. ' )' → logprob: -8.628993034362793
    6. '<|end|>' → logprob: -9.003993034362793
    7. ')' → logprob: -9.378993034362793
    8. ' return' → logprob: -9.628993034362793
    9. ' True' → logprob: -10.378993034362793
    10. ' None' → logprob: -10.628993034362793

Token 92: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0067154900170862675
    2. ' False' → logprob: -5.006715297698975
    3. 'F' → logprob: -17.131715774536133
    4. 'True' → logprob: -17.131715774536133
    5. '(False' → logprob: -18.631715774536133
    6. ' ' → logprob: -20.256715774536133
    7. '=False' → logprob: -20.756715774536133
    8. ' True' → logprob: -20.881715774536133
    9. 'Fa' → logprob: -21.881715774536133
    10. 'Falsy' → logprob: -22.131715774536133

Token 93: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 94: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 95: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 96: ' i' (ID: 575)
  Prédit: ' dr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dr' → logprob: -0.9297380447387695
    2. ' i' → logprob: -1.1797380447387695
    3. ' r' → logprob: -2.1797380447387695
    4. ' d' → logprob: -2.8047380447387695
    5. 'i' → logprob: -3.1797380447387695
    6. 'r' → logprob: -3.3047380447387695
    7. 'dr' → logprob: -4.0547380447387695
    8. 'd' → logprob: -4.1797380447387695
    9. '-' → logprob: -6.0547380447387695
    10. ' delta' → logprob: -6.3047380447387695

Token 97: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003628931473940611
    2. 'in' → logprob: -6.128628730773926
    3. '<|end|>' → logprob: -7.378628730773926
    4. ' ' → logprob: -7.628628730773926
    5. ' range' → logprob: -9.878628730773926
    6. ' r' → logprob: -10.003628730773926
    7. ' (' → logprob: -10.128628730773926
    8. ',' → logprob: -10.253628730773926
    9. 'range' → logprob: -10.253628730773926
    10. ' ,' → logprob: -10.628628730773926

Token 98: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3140052556991577
    2. 'range' → logprob: -1.3140052556991577
    3. '[-' → logprob: -7.439005374908447
    4. '[' → logprob: -8.939004898071289
    5. ' [-' → logprob: -11.564004898071289
    6. ' ' → logprob: -12.439004898071289
    7. '(range' → logprob: -13.064004898071289
    8. ' [' → logprob: -13.189004898071289
    9. '	range' → logprob: -13.189004898071289
    10. '[
' → logprob: -13.564004898071289

Token 99: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6274375915527344
    2. '(r' → logprob: -1.0024375915527344
    3. '(-' → logprob: -2.5024375915527344
    4. '(range' → logprob: -4.127437591552734
    5. '(min' → logprob: -7.502437591552734
    6. '(c' → logprob: -8.752437591552734
    7. '(max' → logprob: -9.252437591552734
    8. '(abs' → logprob: -9.502437591552734
    9. ' (' → logprob: -10.502437591552734
    10. '((' → logprob: -10.752437591552734

Token 100: '8' (ID: 23)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0018818771932274103
    2. '1' → logprob: -6.376882076263428
    3. '8' → logprob: -8.62688159942627
    4. ' ' → logprob: -14.50188159942627
    5. '```' → logprob: -17.126882553100586
    6. '(' → logprob: -17.376882553100586
    7. '4' → logprob: -18.751882553100586
    8. '2' → logprob: -18.751882553100586
    9. 'min' → logprob: -19.001882553100586
    10. '７' → logprob: -19.501882553100586

Token 101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014434853568673134
    2. ' ,' → logprob: -4.264434814453125
    3. '8' → logprob: -8.389434814453125
    4. ' ' → logprob: -10.389434814453125
    5. 'to' → logprob: -12.639434814453125
    6. '+' → logprob: -13.264434814453125
    7. ' to' → logprob: -13.514434814453125
    8. '<|end|>' → logprob: -13.639434814453125
    9. ',i' → logprob: -13.889434814453125
    10. '   ' → logprob: -14.139434814453125

Token 102: '8' (ID: 23)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.020717762410640717
    2. '8' → logprob: -3.8957178592681885
    3. ' ' → logprob: -8.64571762084961
    4. '7' → logprob: -17.89571762084961
    5. '+' → logprob: -18.02071762084961
    6. '```' → logprob: -18.08321762084961
    7. ' nine' → logprob: -18.33321762084961
    8. '   ' → logprob: -18.70821762084961
    9. '９' → logprob: -18.83321762084961
    10. '

' → logprob: -18.89571762084961

Token 103: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03346356749534607
    2. '):
' → logprob: -3.783463478088379
    3. ' ):' → logprob: -5.283463478088379
    4. ')' → logprob: -5.908463478088379
    5. '   ' → logprob: -6.783463478088379
    6. ',' → logprob: -7.533463478088379
    7. '1' → logprob: -8.283463478088379
    8. ' ):
' → logprob: -8.908463478088379
    9. ' )' → logprob: -9.408463478088379
    10. ' ,' → logprob: -9.658463478088379

Token 104: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4997328519821167
    2. '       ' → logprob: -0.9997328519821167
    3. 'if' (adapté à ' if') → logprob: -3.8747329711914062
    4. '    ' → logprob: -6.999732971191406
    5. ' r' → logprob: -7.124732971191406
    6. '   ' → logprob: -7.249732971191406
    7. '1' → logprob: -7.499732971191406
    8. ' ' → logprob: -7.499732971191406
    9. '<|end|>' → logprob: -7.999732971191406
    10. '0' → logprob: -8.374732971191406

Token 106: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21148812770843506
    2. ' ' → logprob: -1.961488127708435
    3. 'r' → logprob: -3.2114882469177246
    4. ' r' → logprob: -4.711488246917725
    5. ' (' → logprob: -8.211487770080566
    6. '(' → logprob: -8.586487770080566
    7. ' not' → logprob: -9.336487770080566
    8. '(r' → logprob: -9.586487770080566
    9. '  ' → logprob: -10.461487770080566
    10. '   ' → logprob: -11.211487770080566

Token 107: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05815500393509865
    2. 'r' → logprob: -2.933155059814453
    3. ' ' → logprob: -5.808155059814453
    4. ' r' → logprob: -8.808155059814453
    5. '(r' → logprob: -9.808155059814453
    6. '(' → logprob: -10.183155059814453
    7. ' (' → logprob: -11.058155059814453
    8. 'i' → logprob: -13.558155059814453
    9. '  ' → logprob: -14.183155059814453
    10. 'not' → logprob: -14.558155059814453

Token 108: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.34847304224967957
    2. '<=' → logprob: -1.223473072052002
    3. '<' → logprob: -11.348472595214844
    4. 'r' → logprob: -12.473472595214844
    5. '   ' → logprob: -12.723472595214844
    6. ' ' → logprob: -13.098472595214844
    7. '#' → logprob: -13.598472595214844
    8. ' <' → logprob: -14.348472595214844
    9. '  ' → logprob: -14.723472595214844
    10. '```' → logprob: -14.848472595214844

Token 109: ' i' (ID: 575)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.001930301426909864
    2. ' r' → logprob: -6.251930236816406
    3. '	r' → logprob: -14.501930236816406
    4. ' ' → logprob: -14.751930236816406
    5. '  ' → logprob: -16.001930236816406
    6. '(r' → logprob: -16.001930236816406
    7. 'c' → logprob: -16.376930236816406
    8. '
' → logprob: -16.751930236816406
    9. '_r' → logprob: -16.876930236816406
    10. 'i' → logprob: -17.251930236816406

Token 110: ' +' (ID: 659)
  Prédit: '+r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+r' → logprob: -0.11223428696393967
    2. '<=' → logprob: -2.737234354019165
    3. 'r' → logprob: -3.987234354019165
    4. '+' → logprob: -4.362234115600586
    5. '<' → logprob: -5.237234115600586
    6. '+c' → logprob: -5.737234115600586
    7. ' +' → logprob: -6.737234115600586
    8. '+i' → logprob: -9.487234115600586
    9. 's' → logprob: -10.237234115600586
    10. ' <=' → logprob: -10.237234115600586

Token 111: ' c' (ID: 274)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.1008713702030946e-06
    2. ' r' → logprob: -13.375001907348633
    3. 'c' → logprob: -14.750001907348633
    4. '_r' → logprob: -16.375001907348633
    5. '	r' → logprob: -17.000001907348633
    6. '<|end|>' → logprob: -18.500001907348633
    7. '­r' → logprob: -19.000001907348633
    8. ' ' → logprob: -19.250001907348633
    9. '8' → logprob: -19.375001907348633
    10. '  ' → logprob: -19.500001907348633

Token 112: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.1366853266954422
    2. 'and' → logprob: -2.636685371398926
    3. ' and' → logprob: -3.511685371398926
    4. ' <' → logprob: -4.136685371398926
    5. '<=' → logprob: -4.636685371398926
    6. ' <=' → logprob: -7.761685371398926
    7. '<len' → logprob: -9.636685371398926
    8. '<n' → logprob: -11.136685371398926
    9. 'r' → logprob: -11.261685371398926
    10. '<R' → logprob: -11.261685371398926

Token 113: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. 'board' → logprob: -17.375015258789062
    4. '<|end|>' → logprob: -17.625015258789062
    5. ' board' → logprob: -17.750015258789062
    6. '８' → logprob: -17.750015258789062
    7. 'len' → logprob: -18.250015258789062
    8. '0' → logprob: -19.250015258789062
    9. '9' → logprob: -19.500015258789062
    10. '```' → logprob: -19.625015258789062

Token 114: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.875000953674316
    3. '８' → logprob: -15.750000953674316
    4. 'board' → logprob: -16.625001907348633
    5. ' board' → logprob: -18.500001907348633
    6. 'len' → logprob: -18.625001907348633
    7. '८' → logprob: -18.750001907348633
    8. '۸' → logprob: -18.875001907348633
    9. 'eight' → logprob: -18.875001907348633
    10. '৮' → logprob: -19.125001907348633

Token 115: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10021507740020752
    2. 'and' → logprob: -2.350214958190918
    3. '       ' → logprob: -12.850214958190918
    4. ' ' → logprob: -12.975214958190918
    5. '   ' → logprob: -14.600214958190918
    6. '	and' → logprob: -14.850214958190918
    7. 'andr' → logprob: -14.850214958190918
    8. ' и' → logprob: -14.975214958190918
    9. '      ' → logprob: -14.975214958190918
    10. ' r' → logprob: -14.975214958190918

Token 116: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31338441371917725
    2. ' ' → logprob: -1.3133844137191772
    3. ' r' → logprob: -9.938384056091309
    4. 'r' → logprob: -10.563384056091309
    5. '    ' → logprob: -10.688384056091309
    6. '        ' → logprob: -11.563384056091309
    7. '          ' → logprob: -12.688384056091309
    8. '   ' → logprob: -12.938384056091309
    9. '      ' → logprob: -13.188384056091309
    10. '  ' → logprob: -13.313384056091309

Token 117: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010680586565285921
    2. 'r' → logprob: -7.376068115234375
    3. ' ' → logprob: -7.751068115234375
    4. 'board' → logprob: -11.751068115234375
    5. ' r' → logprob: -13.126068115234375
    6. ' board' → logprob: -14.626068115234375
    7. '(r' → logprob: -14.876068115234375
    8. '  ' → logprob: -16.501068115234375
    9. '   ' → logprob: -16.876068115234375
    10. '    ' → logprob: -17.001068115234375

Token 118: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.201656773686409
    2. '<=' → logprob: -1.7016568183898926
    3. 'r' → logprob: -9.201656341552734
    4. '0' → logprob: -10.201656341552734
    5. ' ==' → logprob: -10.326656341552734
    6. '==' → logprob: -10.826656341552734
    7. ' ' → logprob: -11.326656341552734
    8. '   ' → logprob: -11.576656341552734
    9. ' r' → logprob: -11.951656341552734
    10. '<' → logprob: -12.076656341552734

Token 119: ' i' (ID: 575)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0024881421122699976
    2. ' r' → logprob: -6.127488136291504
    3. 'i' → logprob: -8.127488136291504
    4. ' i' → logprob: -12.377488136291504
    5. '  ' → logprob: -13.627488136291504
    6. ' ' → logprob: -13.877488136291504
    7. '   ' → logprob: -14.127488136291504
    8. '	r' → logprob: -15.127488136291504
    9. '_r' → logprob: -16.12748908996582
    10. '(r' → logprob: -16.75248908996582

Token 120: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.39539119601249695
    2. '+' → logprob: -1.1453912258148193
    3. '+r' → logprob: -4.77039098739624
    4. ' ' → logprob: -12.645391464233398
    5. 'r' → logprob: -13.520391464233398
    6. '+
' → logprob: -14.270391464233398
    7. ' +
' → logprob: -14.770391464233398
    8. ' r' → logprob: -14.770391464233398
    9. '＋' → logprob: -15.270391464233398
    10. '  ' → logprob: -15.895391464233398

Token 121: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00029685118352063
    2. ' r' → logprob: -8.125296592712402
    3. ' ' → logprob: -14.875296592712402
    4. '(r' → logprob: -16.25029754638672
    5. '_r' → logprob: -16.62529754638672
    6. '	r' → logprob: -16.62529754638672
    7. '8' → logprob: -16.87529754638672
    8. '7' → logprob: -17.25029754638672
    9. '  ' → logprob: -17.25029754638672
    10. '   ' → logprob: -17.87529754638672

Token 122: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.632631242275238
    2. ' <' → logprob: -0.757631242275238
    3. 'r' → logprob: -11.757631301879883
    4. '8' → logprob: -12.632631301879883
    5. '<c' → logprob: -12.632631301879883
    6. ' ' → logprob: -12.882631301879883
    7. ' and' → logprob: -13.507631301879883
    8. '[' → logprob: -13.632631301879883
    9. '<len' → logprob: -13.757631301879883
    10. '<size' → logprob: -13.757631301879883

Token 123: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.0336613766849041
    2. ' ' → logprob: -3.408661365509033
    3. '<|end|>' → logprob: -11.783661842346191
    4. 'r' → logprob: -13.596161842346191
    5. 'board' → logprob: -13.846161842346191
    6. 'eight' → logprob: -14.346161842346191
    7. ' board' → logprob: -14.533661842346191
    8. '  ' → logprob: -14.721161842346191
    9. '   ' → logprob: -15.221161842346191
    10. '```' → logprob: -15.283661842346191

Token 124: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '<|end|>' → logprob: -16.50004005432129
    4. 'board' → logprob: -17.25004005432129
    5. '８' → logprob: -17.93754005432129
    6. 'eight' → logprob: -18.12504005432129
    7. ' board' → logprob: -18.81254005432129
    8. 'r' → logprob: -18.81254005432129
    9. '   ' → logprob: -18.81254005432129
    10. '7' → logprob: -19.06254005432129

Token 125: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3916095793247223
    2. ':' → logprob: -1.1416095495224
    3. 'and' → logprob: -6.0166096687316895
    4. ':
' → logprob: -6.2666096687316895
    5. '       ' → logprob: -8.516609191894531
    6. '<|end|>' → logprob: -9.641609191894531
    7. ',' → logprob: -10.016609191894531
    8. ' :' → logprob: -10.891609191894531
    9. ':

' → logprob: -11.141609191894531
    10. '<|end|>' → logprob: -11.266609191894531

Token 126: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.057626914232969284
    2. '<|end|>' → logprob: -3.057626962661743
    3. ' if' → logprob: -5.307626724243164
    4. ' and' → logprob: -7.057626724243164
    5. ',' → logprob: -7.057626724243164
    6. '           ' → logprob: -7.432626724243164
    7. '<|end|>' → logprob: -7.432626724243164
    8. ' ' → logprob: -7.807626724243164
    9. '        
' → logprob: -8.307626724243164
    10. '        ' → logprob: -8.557626724243164

Token 127: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2609013020992279
    2. ' if' → logprob: -1.5109013319015503
    3. '       ' → logprob: -4.76090145111084
    4. '   ' → logprob: -8.63590145111084
    5. '           ' → logprob: -8.63590145111084
    6. '               ' → logprob: -12.38590145111084
    7. '	if' → logprob: -12.51090145111084
    8. ' ' → logprob: -12.51090145111084
    9. '
' → logprob: -13.51090145111084
    10. '```' → logprob: -13.76090145111084

Token 128: ' board' (ID: 6796)
  Prédit: ' board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' board' → logprob: -0.3868851363658905
    2. 'board' → logprob: -1.136885166168213
    3. '	board' → logprob: -11.886884689331055
    4. '(board' → logprob: -12.136884689331055
    5. ' ' → logprob: -14.636884689331055
    6. 'b' → logprob: -14.761884689331055
    7. '.board' → logprob: -15.011884689331055
    8. '           ' → logprob: -15.636884689331055
    9. '   ' → logprob: -16.011884689331055
    10. '_board' → logprob: -16.136884689331055

Token 129: '[i' (ID: 1768)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.10029702633619308
    2. '[i' → logprob: -2.350296974182129
    3. '[' → logprob: -9.975296974182129
    4. 'r' → logprob: -10.225296974182129
    5. ' [' → logprob: -12.975296974182129
    6. '[row' → logprob: -13.725296974182129
    7. '   ' → logprob: -14.100296974182129
    8. '	r' → logprob: -14.225296974182129
    9. 'i' → logprob: -14.350296974182129
    10. ' r' → logprob: -14.725296974182129

Token 130: '+r' (ID: 133712)
  Prédit: '+r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+r' → logprob: -0.06282053887844086
    2. ' +' → logprob: -3.0628204345703125
    3. '+' → logprob: -4.3128204345703125
    4. 'r' → logprob: -8.312820434570312
    5. '+i' → logprob: -8.312820434570312
    6. '][' → logprob: -8.562820434570312
    7. '＋' → logprob: -11.437820434570312
    8. ' r' → logprob: -11.562820434570312
    9. ' ' → logprob: -12.187820434570312
    10. '-r' → logprob: -12.437820434570312

Token 131: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00030185774085111916
    2. '[i' → logprob: -8.2503023147583
    3. ' ][' → logprob: -10.7503023147583
    4. ']' → logprob: -11.0003023147583
    5. ']][' → logprob: -14.1253023147583
    6. '"][' → logprob: -14.2503023147583
    7. '[' → logprob: -14.7503023147583
    8. '[c' → logprob: -15.1253023147583
    9. ')][' → logprob: -15.7503023147583
    10. '   ' → logprob: -16.875301361083984

Token 132: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02975071594119072
    2. 'c' → logprob: -3.5297508239746094
    3. ' i' → logprob: -15.77975082397461
    4. '[i' → logprob: -17.77975082397461
    5. '(i' → logprob: -17.90475082397461
    6. '```' → logprob: -18.40475082397461
    7. ' c' → logprob: -18.65475082397461
    8. '   ' → logprob: -18.77975082397461
    9. '	i' → logprob: -19.02975082397461
    10. ']' → logprob: -19.40475082397461

Token 133: '+c' (ID: 114860)
  Prédit: '+c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+c' → logprob: -7.338466093642637e-05
    2. 'c' → logprob: -9.750073432922363
    3. '+i' → logprob: -11.750073432922363
    4. '+' → logprob: -12.750073432922363
    5. ']' → logprob: -13.000073432922363
    6. ' +' → logprob: -13.500073432922363
    7. '-c' → logprob: -14.875073432922363
    8. '+r' → logprob: -15.500073432922363
    9. ']+' → logprob: -17.000072479248047
    10. '+]' → logprob: -17.875072479248047

Token 134: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00036084887688048184
    2. ']==' → logprob: -8.000360488891602
    3. '"]' → logprob: -11.000360488891602
    4. ' ]' → logprob: -12.000360488891602
    5. '==' → logprob: -13.875360488891602
    6. ']=="' → logprob: -14.250360488891602
    7. ']]' → logprob: -15.125360488891602
    8. '`]' → logprob: -15.750360488891602
    9. ']

' → logprob: -16.2503604888916
    10. ']
' → logprob: -16.5003604888916

Token 135: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6726375818252563
    2. '==' → logprob: -0.7976375818252563
    3. ']' → logprob: -3.547637462615967
    4. ']==' → logprob: -4.672637462615967
    5. '=="' → logprob: -7.047637462615967
    6. '"]' → logprob: -9.172637939453125
    7. '"' → logprob: -10.172637939453125
    8. ']=="' → logprob: -10.297637939453125
    9. '=' → logprob: -10.672637939453125
    10. '==
' → logprob: -11.922637939453125

Token 136: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.34930387139320374
    2. ' "' → logprob: -1.2243038415908813
    3. ''' → logprob: -7.849303722381592
    4. ' '' → logprob: -8.22430419921875
    5. 'Q' → logprob: -9.34930419921875
    6. ' Q' → logprob: -9.84930419921875
    7. ' ' → logprob: -10.47430419921875
    8. '"A' → logprob: -12.22430419921875
    9. '"I' → logprob: -12.59930419921875
    10. '"K' → logprob: -12.72430419921875

Token 137: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0052858153358101845
    2. '"' → logprob: -5.255285739898682
    3. ' Q' → logprob: -10.63028621673584
    4. ''' → logprob: -10.88028621673584
    5. '	Q' → logprob: -13.38028621673584
    6. '.Q' → logprob: -13.63028621673584
    7. '")' → logprob: -14.13028621673584
    8. '"""' → logprob: -14.50528621673584
    9. '```' → logprob: -14.50528621673584
    10. ')' → logprob: -14.75528621673584

Token 138: '":' (ID: 1243)
  Prédit: '":'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.0021086246706545353
    2. '"' → logprob: -6.252108573913574
    3. '"]:' → logprob: -9.002108573913574
    4. ':' → logprob: -10.502108573913574
    5. '"):' → logprob: -11.377108573913574
    6. ']:' → logprob: -11.752108573913574
    7. '":
' → logprob: -12.377108573913574
    8. ' ":' → logprob: -12.877108573913574
    9. '"":' → logprob: -14.252108573913574
    10. '"]' → logprob: -14.627108573913574

Token 139: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.005246918182820082
    2. 'return' → logprob: -5.255247116088867
    3. '               ' → logprob: -11.630247116088867
    4. ':return' → logprob: -13.005247116088867
    5. '	return' → logprob: -14.380247116088867
    6. ' 
' → logprob: -14.880247116088867
    7. ' ' → logprob: -15.005247116088867
    8. '
' → logprob: -15.255247116088867
    9. ' ' → logprob: -15.380247116088867
    10. '           ' → logprob: -16.255247116088867

Token 140: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00020413640595506877
    2. ' False' → logprob: -8.500204086303711
    3. 'True' → logprob: -14.375204086303711
    4. 'F' → logprob: -17.62520408630371
    5. '(False' → logprob: -19.50020408630371
    6. '_false' → logprob: -20.62520408630371
    7. '=False' → logprob: -21.00020408630371
    8. 'false' → logprob: -21.37520408630371
    9. ' ' → logprob: -21.50020408630371
    10. ' True' → logprob: -22.00020408630371

Token 141: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3770250678062439
    2. ' ' → logprob: -2.1270251274108887
    3. '
' → logprob: -3.2520251274108887
    4. '  
' → logprob: -3.2520251274108887
    5. ' 
' → logprob: -3.6270251274108887
    6. '<|end|>' → logprob: -3.7520251274108887
    7. '    
' → logprob: -4.127025127410889
    8. '\n' → logprob: -4.377025127410889
    9. '  ' → logprob: -4.752025127410889
    10. '       ' → logprob: -4.752025127410889

Token 142: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03873990476131439
    2. ' ' → logprob: -4.4137396812438965
    3. '<|end|>' → logprob: -4.9137396812438965
    4. '       ' → logprob: -5.5387396812438965
    5. '    
' → logprob: -5.9137396812438965
    6. '  
' → logprob: -6.0387396812438965
    7. '  ' → logprob: -6.4137396812438965
    8. '
' → logprob: -6.6637396812438965
    9. '\t' → logprob: -6.9137396812438965
    10. ' 
' → logprob: -7.1637396812438965

Token 143: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0365789420902729
    2. '   ' → logprob: -3.536578893661499
    3. ' if' → logprob: -5.411579132080078
    4. 'if' (adapté à ' if') → logprob: -6.286579132080078
    5. '           ' → logprob: -8.286579132080078
    6. '    ' → logprob: -9.411579132080078
    7. '      ' → logprob: -10.786579132080078
    8. ',' → logprob: -11.036579132080078
    9. ' ' → logprob: -11.036579132080078
    10. '        
' → logprob: -11.161579132080078

Token 144: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014271507039666176
    2. '0' → logprob: -4.2642717361450195
    3. ' board' → logprob: -10.01427173614502
    4. 'board' → logprob: -10.13927173614502
    5. ' r' → logprob: -12.01427173614502
    6. '  ' → logprob: -12.13927173614502
    7. 'r' → logprob: -13.01427173614502
    8. ' -' → logprob: -13.26427173614502
    9. ' ' → logprob: -13.38927173614502
    10. ' (' → logprob: -13.45177173614502

Token 145: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013060718774795532
    2. 'board' → logprob: -7.501306056976318
    3. ' ' → logprob: -8.001306533813477
    4. '-' → logprob: -8.501306533813477
    5. 'r' → logprob: -9.001306533813477
    6. 'i' → logprob: -10.876306533813477
    7. '-i' → logprob: -10.876306533813477
    8. 'c' → logprob: -11.251306533813477
    9. '-r' → logprob: -11.376306533813477
    10. ' board' → logprob: -11.626306533813477

Token 146: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.431031197309494
    2. '<=' → logprob: -1.0560312271118164
    3. '+' → logprob: -6.806031227111816
    4. ' !=' → logprob: -7.806031227111816
    5. '<' → logprob: -8.306031227111816
    6. '-' → logprob: -8.431031227111816
    7. ' +' → logprob: -9.306031227111816
    8. '!=' → logprob: -9.556031227111816
    9. ' <' → logprob: -10.056031227111816
    10. ' >=' → logprob: -10.181031227111816

Token 147: ' c' (ID: 274)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0038513822946697474
    2. 'i' → logprob: -6.253851413726807
    3. ' r' → logprob: -6.878851413726807
    4. '-r' → logprob: -7.253851413726807
    5. 'c' → logprob: -9.503850936889648
    6. ' -' → logprob: -10.503850936889648
    7. '-i' → logprob: -10.628850936889648
    8. '-' → logprob: -10.628850936889648
    9. ' i' → logprob: -11.378850936889648
    10. ' ' → logprob: -11.503850936889648

Token 148: '+' (ID: 10)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5805844068527222
    2. ' -' → logprob: -0.8305844068527222
    3. '-i' → logprob: -5.455584526062012
    4. '+' → logprob: -8.330584526062012
    5. ' +' → logprob: -10.330584526062012
    6. 'i' → logprob: -10.705584526062012
    7. 'r' → logprob: -11.080584526062012
    8. '-r' → logprob: -11.330584526062012
    9. '[' → logprob: -11.830584526062012
    10. ' ' → logprob: -11.955584526062012

Token 149: '(-' (ID: 8087)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.02037370204925537
    2. 'i' → logprob: -4.270373821258545
    3. '-r' → logprob: -5.395373821258545
    4. '(r' → logprob: -7.270373821258545
    5. '-i' → logprob: -7.270373821258545
    6. '(i' → logprob: -8.645373344421387
    7. ' r' → logprob: -10.770373344421387
    8. '-' → logprob: -10.770373344421387
    9. '(-' → logprob: -11.020373344421387
    10. ' -' → logprob: -11.770373344421387

Token 150: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.7120533811976202e-05
    2. ' i' → logprob: -11.125017166137695
    3. 'r' → logprob: -13.500017166137695
    4. '1' → logprob: -14.500017166137695
    5. '	i' → logprob: -15.375017166137695
    6. ')i' → logprob: -16.375017166137695
    7. '_i' → logprob: -16.750017166137695
    8. '-i' → logprob: -17.125017166137695
    9. ' ' → logprob: -18.000017166137695
    10. ''i' → logprob: -19.000017166137695

Token 151: ')' (ID: 8)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3979893624782562
    2. '+r' → logprob: -1.6479893922805786
    3. 'and' → logprob: -2.897989273071289
    4. '+' → logprob: -3.522989273071289
    5. ')' → logprob: -3.647989273071289
    6. ' +' → logprob: -5.272989273071289
    7. '[' → logprob: -5.397989273071289
    8. '-r' → logprob: -5.772989273071289
    9. 'r' → logprob: -6.147989273071289
    10. '-' → logprob: -6.397989273071289

Token 152: ' <' (ID: 464)
  Prédit: '+r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+r' → logprob: -0.17468881607055664
    2. 'and' → logprob: -2.6746888160705566
    3. ' and' → logprob: -3.0496888160705566
    4. '+' → logprob: -3.9246888160705566
    5. '<' → logprob: -4.549688816070557
    6. 'r' → logprob: -5.549688816070557
    7. '+i' → logprob: -5.799688816070557
    8. ' +' → logprob: -5.799688816070557
    9. '<=' → logprob: -6.174688816070557
    10. '-r' → logprob: -8.174688339233398

Token 153: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.02631678804755211
    2. ' ' → logprob: -3.6513168811798096
    3. 'r' → logprob: -11.90131664276123
    4. '0' → logprob: -11.90131664276123
    5. '  ' → logprob: -13.90131664276123
    6. '7' → logprob: -14.65131664276123
    7. '   ' → logprob: -14.77631664276123
    8. 'board' → logprob: -15.52631664276123
    9. '  
' → logprob: -15.65131664276123
    10. 'c' → logprob: -15.77631664276123

Token 154: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.500003814697266
    3. 'eight' → logprob: -15.750003814697266
    4. 'board' → logprob: -16.625003814697266
    5. '８' → logprob: -16.875003814697266
    6. '<|end|>' → logprob: -17.250003814697266
    7. 'r' → logprob: -17.625003814697266
    8. ' board' → logprob: -18.562503814697266
    9. '۸' → logprob: -18.562503814697266
    10. '0' → logprob: -18.625003814697266

Token 155: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.005945391021668911
    2. 'and' → logprob: -5.130945205688477
    3. '<|end|>' → logprob: -11.380945205688477
    4. '       ' → logprob: -13.380945205688477
    5. ' ' → logprob: -13.630945205688477
    6. ',' → logprob: -13.630945205688477
    7. ' if' → logprob: -14.630945205688477
    8. ')' → logprob: -15.755945205688477
    9. ' ,' → logprob: -16.130945205688477
    10. '           ' → logprob: -16.255945205688477

Token 156: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6341367959976196
    2. ' ' → logprob: -0.7591367959976196
    3. 'r' → logprob: -6.75913667678833
    4. ' r' → logprob: -8.384137153625488
    5. '<|end|>' → logprob: -9.009137153625488
    6. '  ' → logprob: -11.634137153625488
    7. '    ' → logprob: -12.134137153625488
    8. '   ' → logprob: -12.759137153625488
    9. '        ' → logprob: -13.634137153625488
    10. '       ' → logprob: -13.759137153625488

Token 157: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005887754959985614
    2. ' ' → logprob: -7.500588893890381
    3. 'r' → logprob: -10.250588417053223
    4. ' r' → logprob: -15.125588417053223
    5. '   ' → logprob: -16.37558937072754
    6. '    ' → logprob: -16.87558937072754
    7. '  ' → logprob: -16.87558937072754
    8. '     ' → logprob: -18.37558937072754
    9. '        ' → logprob: -19.00058937072754
    10. '       ' → logprob: -19.12558937072754

Token 158: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.001704579102806747
    2. '<=' → logprob: -6.376704692840576
    3. ' ' → logprob: -13.501704216003418
    4. ' ≤' → logprob: -14.376704216003418
    5. '<|end|>' → logprob: -15.626704216003418
    6. '+' → logprob: -16.626705169677734
    7. '<' → logprob: -17.501705169677734
    8. ' +' → logprob: -17.626705169677734
    9. '   ' → logprob: -17.751705169677734
    10. '    ' → logprob: -18.001705169677734

Token 159: ' i' (ID: 575)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.003307824023067951
    2. ' r' → logprob: -5.753307819366455
    3. 'i' → logprob: -9.253308296203613
    4. ' ' → logprob: -10.503308296203613
    5. '  ' → logprob: -12.503308296203613
    6. ' i' → logprob: -13.378308296203613
    7. '   ' → logprob: -13.753308296203613
    8. '0' → logprob: -16.128307342529297
    9. '7' → logprob: -16.628307342529297
    10. '    ' → logprob: -16.753307342529297

Token 160: ' +' (ID: 659)
  Prédit: '+r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+r' → logprob: -0.07198594510555267
    2. ' +' → logprob: -3.446985960006714
    3. '-r' → logprob: -4.446985721588135
    4. '+' → logprob: -4.446985721588135
    5. 'r' → logprob: -4.446985721588135
    6. ' -' → logprob: -6.321985721588135
    7. '-' → logprob: -7.821985721588135
    8. ' r' → logprob: -8.571986198425293
    9. '+-' → logprob: -10.821986198425293
    10. ' ' → logprob: -11.196986198425293

Token 161: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0003612065047491342
    2. ' r' → logprob: -8.000361442565918
    3. '(r' → logprob: -11.250361442565918
    4. '-r' → logprob: -12.000361442565918
    5. ' (' → logprob: -13.375361442565918
    6. '<|end|>' → logprob: -13.625361442565918
    7. 'c' → logprob: -13.750361442565918
    8. ' ' → logprob: -13.875361442565918
    9. '(' → logprob: -14.250361442565918
    10. '(-' → logprob: -15.375361442565918

Token 162: ' <' (ID: 464)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5044723749160767
    2. '-r' → logprob: -1.8794723749160767
    3. '[-' → logprob: -2.629472255706787
    4. '[r' → logprob: -3.129472255706787
    5. ' -' → logprob: -3.379472255706787
    6. '-' → logprob: -3.629472255706787
    7. '-c' → logprob: -4.004472255706787
    8. '][' → logprob: -4.129472255706787
    9. '[i' → logprob: -4.754472255706787
    10. '[c' → logprob: -5.004472255706787

Token 163: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.01815415732562542
    2. ' ' → logprob: -4.018154144287109
    3. '0' → logprob: -13.51815414428711
    4. '(' → logprob: -13.51815414428711
    5. 'board' → logprob: -14.76815414428711
    6. 'c' → logprob: -15.26815414428711
    7. 'r' → logprob: -16.14315414428711
    8. ' board' → logprob: -16.14315414428711
    9. ' (' → logprob: -16.26815414428711
    10. '7' → logprob: -16.26815414428711

Token 164: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.50001049041748
    3. 'board' → logprob: -15.37501049041748
    4. ' board' → logprob: -17.500009536743164
    5. '0' → logprob: -17.750009536743164
    6. 'eight' → logprob: -18.000009536743164
    7. '<|end|>' → logprob: -18.250009536743164
    8. '８' → logprob: -18.750009536743164
    9. '7' → logprob: -19.375009536743164
    10. '۸' → logprob: -19.750009536743164

Token 165: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05164270102977753
    2. ':
' → logprob: -3.301642656326294
    3. ' and' → logprob: -4.676642894744873
    4. '       ' → logprob: -5.926642894744873
    5. 'and' → logprob: -7.176642894744873
    6. '           ' → logprob: -7.301642894744873
    7. ':

' → logprob: -10.426642417907715
    8. '   ' → logprob: -11.426642417907715
    9. '<|end|>' → logprob: -11.426642417907715
    10. ' :' → logprob: -11.551642417907715

Token 166: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012220130302011967
    2. '           ' → logprob: -7.251222133636475
    3. '   ' → logprob: -8.501221656799316
    4. '<|end|>' → logprob: -8.876221656799316
    5. ' if' → logprob: -9.001221656799316
    6. 'if' → logprob: -10.376221656799316
    7. '        ' → logprob: -12.876221656799316
    8. '               ' → logprob: -13.001221656799316
    9. '```' → logprob: -13.126221656799316
    10. ' ' → logprob: -13.501221656799316

Token 167: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04881763458251953
    2. ' if' → logprob: -3.0488176345825195
    3. '           ' → logprob: -8.42381763458252
    4. '       ' → logprob: -12.17381763458252
    5. '   ' → logprob: -12.92381763458252
    6. ' ' → logprob: -14.42381763458252
    7. '
' → logprob: -14.54881763458252
    8. 'If' → logprob: -14.67381763458252
    9. '```' → logprob: -14.67381763458252
    10. '<|end|>' → logprob: -14.67381763458252

Token 168: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.023254211992025375
    2. ' board' → logprob: -3.773254156112671
    3. '	board' → logprob: -12.02325439453125
    4. '(board' → logprob: -14.52325439453125
    5. '[' → logprob: -14.64825439453125
    6. '.board' → logprob: -15.14825439453125
    7. 'b' → logprob: -15.14825439453125
    8. ' ' → logprob: -15.27325439453125
    9. '   ' → logprob: -15.27325439453125
    10. 'Board' → logprob: -15.39825439453125

Token 169: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03815498575568199
    2. '[r' → logprob: -3.2881550788879395
    3. 'i' → logprob: -10.288154602050781
    4. 'r' → logprob: -10.413154602050781
    5. '[' → logprob: -10.663154602050781
    6. '[-' → logprob: -10.788154602050781
    7. '[
' → logprob: -13.288154602050781
    8. '[row' → logprob: -14.413154602050781
    9. '[c' → logprob: -14.788154602050781
    10. '```' → logprob: -15.538154602050781

Token 170: '+r' (ID: 133712)
  Prédit: '+r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+r' → logprob: -4.906711546937004e-05
    2. ' +' → logprob: -10.875048637390137
    3. '+' → logprob: -11.000048637390137
    4. '[r' → logprob: -12.375048637390137
    5. 'r' → logprob: -12.625048637390137
    6. '-r' → logprob: -12.875048637390137
    7. '<|end|>' → logprob: -13.000048637390137
    8. '[' → logprob: -14.875048637390137
    9. '+i' → logprob: -15.750048637390137
    10. '+[' → logprob: -16.000049591064453

Token 171: '][-' (ID: 162298)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.34849879145622253
    2. '][-' → logprob: -1.223498821258545
    3. '[-' → logprob: -10.223498344421387
    4. '][_' → logprob: -12.223498344421387
    5. ']' → logprob: -12.348498344421387
    6. '[c' → logprob: -13.098498344421387
    7. ' ][' → logprob: -13.598498344421387
    8. '[' → logprob: -13.848498344421387
    9. '[i' → logprob: -14.223498344421387
    10. '][]' → logprob: -14.223498344421387

Token 172: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0037382065784186125
    2. '(i' → logprob: -5.7537384033203125
    3. 'c' → logprob: -7.7537384033203125
    4. '(' → logprob: -9.378738403320312
    5. '(c' → logprob: -10.253738403320312
    6. '1' → logprob: -12.253738403320312
    7. ' i' → logprob: -12.878738403320312
    8. ' (' → logprob: -13.253738403320312
    9. '(-' → logprob: -14.253738403320312
    10. '-i' → logprob: -14.503738403320312

Token 173: '+c' (ID: 114860)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.056912861764431
    2. '+c' → logprob: -2.931912899017334
    3. ' c' → logprob: -6.681912899017334
    4. '+' → logprob: -7.431912899017334
    5. '-c' → logprob: -9.056912422180176
    6. ' +' → logprob: -10.431912422180176
    7. ']' → logprob: -11.931912422180176
    8. ' ' → logprob: -12.181912422180176
    9. '-' → logprob: -12.181912422180176
    10. ' -' → logprob: -12.431912422180176

Token 174: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004662591964006424
    2. ']==' → logprob: -5.37966251373291
    3. ' ]' → logprob: -11.50466251373291
    4. '==' → logprob: -11.75466251373291
    5. ']=="' → logprob: -11.87966251373291
    6. '"]' → logprob: -12.12966251373291
    7. ']=='' → logprob: -12.50466251373291
    8. ']]' → logprob: -12.75466251373291
    9. '[' → logprob: -13.87966251373291
    10. '"' → logprob: -13.87966251373291

Token 175: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3919912278652191
    2. ' ==' → logprob: -1.1419912576675415
    3. ']' → logprob: -5.891991138458252
    4. ']==' → logprob: -6.391991138458252
    5. '=="' → logprob: -7.641991138458252
    6. '"' → logprob: -9.26699161529541
    7. '=' → logprob: -10.51699161529541
    8. ' ' → logprob: -10.76699161529541
    9. '==
' → logprob: -11.14199161529541
    10. ' "' → logprob: -11.89199161529541

Token 176: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0025657913647592068
    2. ' "' → logprob: -6.252565860748291
    3. 'Q' → logprob: -8.127565383911133
    4. ''' → logprob: -8.127565383911133
    5. ' ' → logprob: -11.002565383911133
    6. ' Q' → logprob: -11.502565383911133
    7. ' '' → logprob: -12.127565383911133
    8. '  ' → logprob: -13.002565383911133
    9. '	Q' → logprob: -13.127565383911133
    10. '
' → logprob: -13.627565383911133

Token 177: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.00020067949662916362
    2. '"' → logprob: -8.625200271606445
    3. ''' → logprob: -11.375200271606445
    4. ' Q' → logprob: -12.000200271606445
    5. '	Q' → logprob: -13.875200271606445
    6. ')' → logprob: -15.250200271606445
    7. '```' → logprob: -15.250200271606445
    8. '`' → logprob: -15.500200271606445
    9. '")' → logprob: -15.687700271606445
    10. '">' → logprob: -16.000200271606445

Token 178: '":' (ID: 1243)
  Prédit: '":'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.00042388198198750615
    2. ':' → logprob: -8.500423431396484
    3. '"' → logprob: -9.000423431396484
    4. ' ":' → logprob: -10.125423431396484
    5. ']:' → logprob: -11.000423431396484
    6. '"):' → logprob: -11.250423431396484
    7. '"]:' → logprob: -11.750423431396484
    8. '):' → logprob: -12.000423431396484
    9. 'return' → logprob: -12.250423431396484
    10. ':return' → logprob: -12.875423431396484

Token 179: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.0424327626824379
    2. 'return' → logprob: -3.7924327850341797
    3. ' False' → logprob: -4.54243278503418
    4. 'False' → logprob: -4.79243278503418
    5. ' ' → logprob: -10.41743278503418
    6. 'Return' → logprob: -11.29243278503418
    7. ' True' → logprob: -11.41743278503418
    8. ':return' → logprob: -12.91743278503418
    9. ' ' → logprob: -13.54243278503418
    10. 'True' → logprob: -13.66743278503418

Token 180: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -3.5597102396423e-05
    2. ' False' → logprob: -10.250035285949707
    3. 'True' → logprob: -15.750035285949707
    4. 'F' → logprob: -18.000036239624023
    5. '(False' → logprob: -19.000036239624023
    6. 'Fa' → logprob: -20.625036239624023
    7. 'Fal' → logprob: -21.375036239624023
    8. '=False' → logprob: -21.500036239624023
    9. 'Fl' → logprob: -23.250036239624023
    10. 'Falsy' → logprob: -23.375036239624023

Token 181: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035861756186932325
    2. '<|end|>' → logprob: -6.378586292266846
    3. '    
' → logprob: -7.253586292266846
    4. '	return' → logprob: -8.128585815429688
    5. '
' → logprob: -8.128585815429688
    6. ' return' → logprob: -9.253585815429688
    7. ')' → logprob: -9.878585815429688
    8. '\n' → logprob: -9.878585815429688
    9. 'return' → logprob: -9.878585815429688
    10. ' 
' → logprob: -10.003585815429688

Token 182: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08893924951553345
    2. ' ' → logprob: -3.4639391899108887
    3. '<|end|>' → logprob: -4.088939189910889
    4. ' 
' → logprob: -5.213939189910889
    5. '
' → logprob: -5.338939189910889
    6. '    
' → logprob: -5.463939189910889
    7. ')' → logprob: -5.713939189910889
    8. ' return' → logprob: -5.713939189910889
    9. '	return' → logprob: -6.088939189910889
    10. ':' → logprob: -6.213939189910889

Token 183: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1771475225687027
    2. ' return' → logprob: -2.552147626876831
    3. ' ' → logprob: -3.552147626876831
    4. 'return' (adapté à ' return') → logprob: -3.927147626876831
    5. ')' → logprob: -4.427147388458252
    6. '    
' → logprob: -5.177147388458252
    7. ':return' → logprob: -5.552147388458252
    8. ' 
' → logprob: -5.927147388458252
    9. '<|end|>' → logprob: -6.052147388458252
    10. ':' → logprob: -6.052147388458252

Token 184: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3868710398674011
    2. ' True' → logprob: -1.136871099472046
    3. 'False' → logprob: -18.761871337890625
    4. '(True' → logprob: -18.761871337890625
    5. ' ' → logprob: -20.511871337890625
    6. '=True' → logprob: -22.011871337890625
    7. ' False' → logprob: -22.886871337890625
    8. 'None' → logprob: -23.136871337890625
    9. '_true' → logprob: -23.261871337890625
    10. ' Tru' → logprob: -23.511871337890625

Token 185: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7878754734992981
    2. '<|end|>' → logprob: -1.1628754138946533
    3. '
' → logprob: -2.2878754138946533
    4. ':' → logprob: -2.2878754138946533
    5. ')' → logprob: -4.912875652313232
    6. ' ' → logprob: -5.412875652313232
    7. '#' → logprob: -5.412875652313232
    8. ' 
' → logprob: -5.912875652313232
    9. '\' → logprob: -6.037875652313232
    10. 'n' → logprob: -6.162875652313232

Token 186: 'rc' (ID: 2366)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06744696199893951
    2. 'd' → logprob: -3.3174469470977783
    3. ' ' → logprob: -4.567447185516357
    4. ' 
' → logprob: -4.817447185516357
    5. 'n' → logprob: -5.817447185516357
    6. '   ' → logprob: -6.817447185516357
    7. ')' → logprob: -7.067447185516357
    8. '_' → logprob: -7.317447185516357
    9. ' def' → logprob: -7.317447185516357
    10. ':' → logprob: -7.442447185516357

Token 187: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2451190948486328
    2. '=' → logprob: -1.8701190948486328
    3. ' =' → logprob: -1.8701190948486328
    4. 's' → logprob: -2.120119094848633
    5. 'ount' → logprob: -2.120119094848633
    6. 't' → logprob: -3.245119094848633
    7. 'w' → logprob: -3.620119094848633
    8. '_' → logprob: -3.620119094848633
    9. ' ' → logprob: -3.995119094848633
    10. '=[]' → logprob: -4.745119094848633

Token 188: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.022780532017350197
    2. 'list' → logprob: -4.272780418395996
    3. '[' → logprob: -5.772780418395996
    4. '[]
' → logprob: -6.647780418395996
    5. ' []' → logprob: -6.897780418395996
    6. '[int' → logprob: -7.022780418395996
    7. '[input' → logprob: -7.647780418395996
    8. '[(' → logprob: -7.772780418395996
    9. '[N' → logprob: -7.772780418395996
    10. 'input' → logprob: -8.522780418395996

Token 189: 'list' (ID: 2641)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.05812114104628563
    2. 'i' → logprob: -3.3081212043762207
    3. '(' → logprob: -4.808121204376221
    4. '(int' → logprob: -5.558121204376221
    5. 'int' → logprob: -6.183121204376221
    6. '0' → logprob: -6.558121204376221
    7. 'tuple' → logprob: -6.808121204376221
    8. '[i' → logprob: -7.183121204376221
    9. '(r' → logprob: -7.683121204376221
    10. ']' → logprob: -7.808121204376221

Token 190: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0005990233621560037
    2. '(range' → logprob: -7.750598907470703
    3. 'map' → logprob: -9.250598907470703
    4. '(input' → logprob: -9.625598907470703
    5. '(' → logprob: -12.500598907470703
    6. '()' → logprob: -14.500598907470703
    7. '(tuple' → logprob: -14.875598907470703
    8. ' map' → logprob: -15.375598907470703
    9. '(per' → logprob: -15.625598907470703
    10. ']' → logprob: -15.625598907470703

Token 191: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.011894217692315578
    2. 'int' → logprob: -4.511894226074219
    3. ',int' → logprob: -7.636894226074219
    4. '<int' → logprob: -9.511894226074219
    5. '(' → logprob: -9.761894226074219
    6. ')' → logprob: -10.011894226074219
    7. ']int' → logprob: -10.261894226074219
    8. '[int' → logprob: -10.386894226074219
    9. '(str' → logprob: -10.511894226074219
    10. 'input' → logprob: -10.886894226074219

Token 192: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.10043817013502121
    2. ',' → logprob: -2.350438117980957
    3. '(input' → logprob: -8.725438117980957
    4. 'input' → logprob: -9.600438117980957
    5. ' input' → logprob: -14.475438117980957
    6. ' ,' → logprob: -14.600438117980957
    7. '=input' → logprob: -16.100439071655273
    8. '[input' → logprob: -16.225439071655273
    9. '(' → logprob: -16.850439071655273
    10. ',(' → logprob: -16.850439071655273

Token 193: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0007144584087654948
    2. ' input' → logprob: -7.250714302062988
    3. ',input' → logprob: -12.500714302062988
    4. '(input' → logprob: -14.250714302062988
    5. ')' → logprob: -16.500715255737305
    6. '=input' → logprob: -17.125715255737305
    7. ' ' → logprob: -17.375715255737305
    8. '	input' → logprob: -17.750715255737305
    9. '[input' → logprob: -17.875715255737305
    10. '_input' → logprob: -18.125715255737305

Token 194: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.723352049040841e-06
    2. '()' → logprob: -13.375004768371582
    3. ',' → logprob: -13.875004768371582
    4. ',input' → logprob: -14.750004768371582
    5. ')' → logprob: -15.000004768371582
    6. '(' → logprob: -15.125004768371582
    7. ' ().' → logprob: -15.125004768371582
    8. 'input' → logprob: -15.250004768371582
    9. '.split' → logprob: -15.375004768371582
    10. '))' → logprob: -15.500004768371582

Token 195: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.6312321753939614e-05
    2. 'strip' → logprob: -10.250036239624023
    3. ' split' → logprob: -14.500036239624023
    4. 'rstrip' → logprob: -15.250036239624023
    5. '(split' → logprob: -17.250036239624023
    6. 'spl' → logprob: -17.500036239624023
    7. '.split' → logprob: -18.250036239624023
    8. 's' → logprob: -19.375036239624023
    9. '().' → logprob: -22.375036239624023
    10. 'sp' → logprob: -23.000036239624023

Token 196: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.04735158383846283
    2. '))' → logprob: -3.172351598739624
    3. '().' → logprob: -5.672351360321045
    4. '()' → logprob: -7.172351360321045
    5. '()))
' → logprob: -9.422351837158203
    6. '(' → logprob: -10.672351837158203
    7. ' ))' → logprob: -11.922351837158203
    8. '())).' → logprob: -12.047351837158203
    9. '()));' → logprob: -12.047351837158203
    10. '())' → logprob: -12.797351837158203

Token 197: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12574312090873718
    2. ')' → logprob: -2.3757431507110596
    3. 'for' → logprob: -3.7507431507110596
    4. ' for' → logprob: -6.8757429122924805
    5. ')]' → logprob: -8.25074291229248
    6. '())' → logprob: -8.75074291229248
    7. '()]' → logprob: -8.87574291229248
    8. ']' → logprob: -9.25074291229248
    9. '(' → logprob: -12.00074291229248
    10. ' ()' → logprob: -12.50074291229248

Token 198: ' _' (ID: 1175)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47519245743751526
    2. ' range' → logprob: -1.2251924276351929
    3. '_' → logprob: -2.4751925468444824
    4. '_range' → logprob: -8.100192070007324
    5. '(range' → logprob: -9.600192070007324
    6. ' _' → logprob: -11.475192070007324
    7. '	range' → logprob: -12.725192070007324
    8. 'in' → logprob: -13.850192070007324
    9. 'i' → logprob: -14.600192070007324
    10. '_r' → logprob: -15.725192070007324

Token 199: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.13737738132476807
    2. 'in' → logprob: -2.1373772621154785
    3. ' in' → logprob: -4.6373772621154785
    4. ' range' → logprob: -7.2623772621154785
    5. ' ' → logprob: -11.887377738952637
    6. '(range' → logprob: -13.137377738952637
    7. '  ' → logprob: -14.012377738952637
    8. '   ' → logprob: -15.637377738952637
    9. 'r' → logprob: -15.887377738952637
    10. 'i' → logprob: -16.01237678527832

Token 200: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004317420825827867
    2. ' range' → logprob: -7.750431537628174
    3. '(range' → logprob: -14.000432014465332
    4. '	range' → logprob: -15.875432014465332
    5. '[' → logprob: -16.500431060791016
    6. ' ' → logprob: -17.250431060791016
    7. 'rang' → logprob: -18.000431060791016
    8. 'r' → logprob: -18.250431060791016
    9. '   ' → logprob: -18.375431060791016
    10. '  ' → logprob: -19.000431060791016

Token 201: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.006737035233527422
    2. 'N' → logprob: -5.006737232208252
    3. '(' → logprob: -10.881736755371094
    4. ' N' → logprob: -13.256736755371094
    5. '(n' → logprob: -14.506736755371094
    6. '	N' → logprob: -15.381736755371094
    7. '(
' → logprob: -15.756736755371094
    8. '   ' → logprob: -16.506736755371094
    9. ' (' → logprob: -16.506736755371094
    10. ' ' → logprob: -17.256736755371094

Token 202: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.005529831163585186
    2. ')' → logprob: -5.255529880523682
    3. ']' → logprob: -8.130529403686523
    4. '))' → logprob: -14.880529403686523
    5. ' )' → logprob: -15.130529403686523
    6. '])' → logprob: -15.255529403686523
    7. ')}' → logprob: -15.505529403686523
    8. ')],' → logprob: -15.880529403686523
    9. ')])' → logprob: -15.880529403686523
    10. '）' → logprob: -16.005529403686523

Token 203: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16929996013641357
    2. 'def' → logprob: -2.794300079345703
    3. 'Q' → logprob: -3.544300079345703
    4. 'res' → logprob: -4.169300079345703
    5. 'result' → logprob: -4.794300079345703
    6. 'positions' → logprob: -5.169300079345703
    7. 'pos' → logprob: -5.294300079345703
    8. 'answer' → logprob: -5.419300079345703
    9. ' for' → logprob: -5.544300079345703
    10. 'board' → logprob: -5.669300079345703

Token 204: ' main' (ID: 2758)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.6489691734313965
    2. ' dfs' → logprob: -0.8989691734313965
    3. 'dfs' → logprob: -3.6489691734313965
    4. ' back' → logprob: -3.8989691734313965
    5. ' place' → logprob: -4.8989691734313965
    6. 'solve' → logprob: -4.8989691734313965
    7. ' search' → logprob: -5.0239691734313965
    8. ' put' → logprob: -7.3989691734313965
    9. ' can' → logprob: -8.023969650268555
    10. ' main' → logprob: -8.023969650268555

Token 205: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0007659103139303625
    2. ' ():' → logprob: -7.250765800476074
    3. '()' → logprob: -9.875765800476074
    4. '(' → logprob: -13.250765800476074
    5. ' ()' → logprob: -13.500765800476074
    6. '():
' → logprob: -13.750765800476074
    7. '_' → logprob: -15.000765800476074
    8. ' (' → logprob: -17.25076675415039
    9. '()>' → logprob: -17.50076675415039
    10. '(:' → logprob: -17.75076675415039

Token 206: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001741104875691235
    2. '<|end|>' → logprob: -7.2517409324646
    3. ' for' → logprob: -7.8767409324646
    4. 'for' → logprob: -8.126741409301758
    5. '    ' → logprob: -8.626741409301758
    6. '    
' → logprob: -9.376741409301758
    7. '
' → logprob: -11.126741409301758
    8. '<|end|>' → logprob: -11.626741409301758
    9. ',' → logprob: -11.876741409301758
    10. '[' → logprob: -12.501741409301758

Token 207: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7528027892112732
    2. 'for' (adapté à ' for') → logprob: -0.7528027892112732
    3. '   ' → logprob: -3.877802848815918
    4. ' ans' → logprob: -4.627802848815918
    5. 'res' → logprob: -5.627802848815918
    6. ' res' → logprob: -5.877802848815918
    7. 'positions' → logprob: -6.252802848815918
    8. 'ans' → logprob: -6.377802848815918
    9. ' positions' → logprob: -6.377802848815918
    10. 'cols' → logprob: -6.502802848815918

Token 208: ' p' (ID: 275)
  Prédit: ' perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' perm' → logprob: -0.9170483350753784
    2. 'perm' → logprob: -1.6670483350753784
    3. ' p' → logprob: -1.9170483350753784
    4. 'p' → logprob: -2.292048454284668
    5. ' pos' → logprob: -4.167048454284668
    6. 'pos' → logprob: -4.292048454284668
    7. ' queen' → logprob: -4.417048454284668
    8. ' row' → logprob: -4.417048454284668
    9. ' positions' → logprob: -4.667048454284668
    10. ' queens' → logprob: -4.792048454284668

Token 209: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008683590218424797
    2. 'in' → logprob: -4.758683681488037
    3. ' ' → logprob: -10.758683204650879
    4. '(' → logprob: -11.258683204650879
    5. ',' → logprob: -11.758683204650879
    6. '  ' → logprob: -12.008683204650879
    7. '<|end|>' → logprob: -12.758683204650879
    8. ')' → logprob: -13.258683204650879
    9. ' i' → logprob: -13.633683204650879
    10. 'n' → logprob: -13.633683204650879

Token 210: ' permutations' (ID: 174595)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.0010922349756583571
    2. ' permutations' → logprob: -6.876092433929443
    3. 'range' → logprob: -9.876091957092285
    4. '(per' → logprob: -12.251091957092285
    5. 'list' → logprob: -13.376091957092285
    6. 'perm' → logprob: -14.376091957092285
    7. '   ' → logprob: -14.751091957092285
    8. '	per' → logprob: -15.626091957092285
    9. ' range' → logprob: -16.0010929107666
    10. 'product' → logprob: -16.2510929107666

Token 211: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.0004723795282188803
    2. '([' → logprob: -7.750472545623779
    3. '(rc' → logprob: -11.000472068786621
    4. '(list' → logprob: -11.375472068786621
    5. '(' → logprob: -11.750472068786621
    6. 'range' → logprob: -12.375472068786621
    7. '(board' → logprob: -14.250472068786621
    8. '((' → logprob: -14.500472068786621
    9. '(r' → logprob: -16.000473022460938
    10. '([(' → logprob: -16.750473022460938

Token 212: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16033552587032318
    2. '8' → logprob: -1.9103355407714844
    3. '(N' → logprob: -9.285335540771484
    4. '   ' → logprob: -12.035335540771484
    5. ' ' → logprob: -12.410335540771484
    6. 'N' → logprob: -13.160335540771484
    7. '```' → logprob: -13.535335540771484
    8. ' (' → logprob: -13.660335540771484
    9. '(
' → logprob: -14.410335540771484
    10. '(len' → logprob: -14.660335540771484

Token 213: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -9.968312951968983e-06
    2. ' ' → logprob: -12.000009536743164
    3. 'N' → logprob: -12.625009536743164
    4. 'eight' → logprob: -16.125009536743164
    5. '   ' → logprob: -16.375009536743164
    6. '(' → logprob: -16.500009536743164
    7. 'board' → logprob: -16.875009536743164
    8. '８' → logprob: -17.000009536743164
    9. 'len' → logprob: -17.625009536743164
    10. '
' → logprob: -18.000009536743164

Token 214: ')):
' (ID: 22530)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.018055111169815063
    2. ')):' → logprob: -4.393054962158203
    3. '):' → logprob: -5.393054962158203
    4. ',' → logprob: -7.268054962158203
    5. ')):
' → logprob: -9.018054962158203
    6. ')' → logprob: -9.393054962158203
    7. ' ),' → logprob: -10.768054962158203
    8. '):
' → logprob: -10.893054962158203
    9. '))' → logprob: -11.268054962158203
    10. '),
' → logprob: -12.268054962158203

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002904966240748763
    2. ':' → logprob: -6.377904891967773
    3. '<|end|>' → logprob: -7.252904891967773
    4. ',' → logprob: -7.877904891967773
    5. '        
' → logprob: -10.752904891967773
    6. '   ' → logprob: -10.877904891967773
    7. '<|end|>' → logprob: -11.002904891967773
    8. '      ' → logprob: -11.752904891967773
    9. '	' → logprob: -12.002904891967773
    10. '    ' → logprob: -12.252904891967773

Token 216: ' tmp' (ID: 8919)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06422968208789825
    2. 'if' → logprob: -3.314229726791382
    3. '           ' → logprob: -4.439229488372803
    4. ' if' → logprob: -5.064229488372803
    5. 'valid' → logprob: -5.314229488372803
    6. 'for' → logprob: -6.689229488372803
    7. ' valid' → logprob: -7.564229488372803
    8. ' for' → logprob: -8.314229965209961
    9. 'count' → logprob: -8.689229965209961
    10. 'found' → logprob: -8.814229965209961

Token 217: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06754301488399506
    2. '_board' → logprob: -3.1925430297851562
    3. 'board' → logprob: -4.192543029785156
    4. '=' → logprob: -4.817543029785156
    5. '   ' → logprob: -8.067543029785156
    6. ' board' → logprob: -8.692543029785156
    7. ' ' → logprob: -8.817543029785156
    8. '	board' → logprob: -8.942543029785156
    9. 'b' → logprob: -9.942543029785156
    10. '_' → logprob: -10.442543029785156

Token 218: ' deepcopy' (ID: 130230)
  Prédit: 'deep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deep' → logprob: -0.00017350474081467837
    2. ' deepcopy' → logprob: -9.000173568725586
    3. ' deep' → logprob: -10.125173568725586
    4. '[' → logprob: -11.625173568725586
    5. ' ' → logprob: -15.375173568725586
    6. '0' → logprob: -15.375173568725586
    7. '   ' → logprob: -16.375173568725586
    8. '[[' → logprob: -16.625173568725586
    9. '[]' → logprob: -16.750173568725586
    10. 'board' → logprob: -16.875173568725586

Token 219: '(board' (ID: 41261)
  Prédit: '(board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(board' → logprob: -5.931863051955588e-05
    2. 'board' → logprob: -9.750059127807617
    3. '(' → logprob: -14.500059127807617
    4. ' board' → logprob: -14.625059127807617
    5. '	board' → logprob: -16.750059127807617
    6. '(
' → logprob: -17.875059127807617
    7. '(Board' → logprob: -18.000059127807617
    8. '(block' → logprob: -18.500059127807617
    9. ' (' → logprob: -18.750059127807617
    10. '(deck' → logprob: -19.500059127807617

Token 220: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5759660601615906
    2. ')' → logprob: -0.8259660601615906
    3. ')
' → logprob: -11.075965881347656
    4. ')

' → logprob: -11.950965881347656
    5. '       ' → logprob: -13.200965881347656
    6. ' )
' → logprob: -14.075965881347656
    7. '[])
' → logprob: -14.700965881347656
    8. ' )' → logprob: -15.325965881347656
    9. '   ' → logprob: -15.575965881347656
    10. ' ' → logprob: -15.700965881347656

Token 221: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05669065937399864
    2. '<|end|>' → logprob: -2.9316906929016113
    3. '           ' → logprob: -7.306690692901611
    4. ' for' → logprob: -7.931690692901611
    5. '<|end|>' → logprob: -8.306690216064453
    6. '        
' → logprob: -8.681690216064453
    7. ',' → logprob: -9.681690216064453
    8. '        ' → logprob: -9.681690216064453
    9. '   ' → logprob: -9.681690216064453
    10. ')' → logprob: -10.056690216064453

Token 222: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3489125370979309
    2. 'for' (adapté à ' for') → logprob: -2.223912477493286
    3. 'valid' → logprob: -2.598912477493286
    4. '       ' → logprob: -2.723912477493286
    5. 'flag' → logprob: -3.723912477493286
    6. 'count' → logprob: -4.723912715911865
    7. ' for' → logprob: -5.598912715911865
    8. 'cnt' → logprob: -5.973912715911865
    9. 'i' → logprob: -6.348912715911865
    10. ' valid' → logprob: -6.598912715911865

Token 223: ' i' (ID: 575)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5152081251144409
    2. 'i' → logprob: -1.640208125114441
    3. ' r' → logprob: -2.2652082443237305
    4. ' i' → logprob: -2.2652082443237305
    5. 'row' → logprob: -7.8902082443237305
    6. ' row' → logprob: -8.26520824432373
    7. 'idx' → logprob: -9.64020824432373
    8. 'x' → logprob: -10.01520824432373
    9. ' idx' → logprob: -10.26520824432373
    10. '(r' → logprob: -10.26520824432373

Token 224: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4468725919723511
    2. ',' → logprob: -1.071872591972351
    3. ' ,' → logprob: -4.321872711181641
    4. 'in' → logprob: -5.446872711181641
    5. ' ' → logprob: -8.69687271118164
    6. ',p' → logprob: -9.19687271118164
    7. ',n' → logprob: -10.32187271118164
    8. ',r' → logprob: -10.94687271118164
    9. ',in' → logprob: -10.94687271118164
    10. ',user' → logprob: -12.07187271118164

Token 225: ' v' (ID: 323)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3152426481246948
    2. 'c' → logprob: -1.6902426481246948
    3. 'p' → logprob: -3.9402427673339844
    4. 'v' → logprob: -4.565242767333984
    5. 'row' → logprob: -4.565242767333984
    6. 'pos' → logprob: -4.565242767333984
    7. 'x' → logprob: -4.690242767333984
    8. 'col' → logprob: -5.065242767333984
    9. ' r' → logprob: -5.315242767333984
    10. ' c' → logprob: -5.690242767333984

Token 226: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10028096288442612
    2. 'in' → logprob: -2.350281000137329
    3. 's' → logprob: -10.97528076171875
    4. 'n' → logprob: -11.22528076171875
    5. ' ' → logprob: -11.60028076171875
    6. 'p' → logprob: -12.60028076171875
    7. 'v' → logprob: -12.85028076171875
    8. ')' → logprob: -13.16278076171875
    9. '   ' → logprob: -13.22528076171875
    10. ',' → logprob: -13.35028076171875

Token 227: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.014166799373924732
    2. ' enumerate' → logprob: -4.264166831970215
    3. 'range' → logprob: -13.639166831970215
    4. 'zip' → logprob: -13.764166831970215
    5. 'enum' → logprob: -14.764166831970215
    6. '
' → logprob: -15.514166831970215
    7. 'p' → logprob: -15.889166831970215
    8. '(' → logprob: -16.1391658782959
    9. '(en' → logprob: -16.3891658782959
    10. ' ' → logprob: -16.8891658782959

Token 228: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.13222363591194153
    2. '(rc' → logprob: -2.132223606109619
    3. '(range' → logprob: -5.382223606109619
    4. '(r' → logprob: -8.632224082946777
    5. 'p' → logprob: -8.882224082946777
    6. '(' → logprob: -9.007224082946777
    7. '(N' → logprob: -9.007224082946777
    8. 'rc' → logprob: -10.507224082946777
    9. ')' → logprob: -10.882224082946777
    10. '(zip' → logprob: -11.007224082946777

Token 229: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6327337026596069
    2. '):' → logprob: -0.7577337026596069
    3. '):
' → logprob: -10.007733345031738
    4. ' ):' → logprob: -10.382733345031738
    5. ' ):
' → logprob: -10.757733345031738
    6. ':' → logprob: -11.007733345031738
    7. '       ' → logprob: -11.882733345031738
    8. '   ' → logprob: -12.132733345031738
    9. '):

' → logprob: -13.007733345031738
    10. ')' → logprob: -13.757733345031738

Token 230: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0726756751537323
    2. '<|end|>' → logprob: -3.0726757049560547
    3. ':' → logprob: -4.322675704956055
    4. '       ' → logprob: -5.947675704956055
    5. ' if' → logprob: -5.947675704956055
    6. ' ' → logprob: -6.322675704956055
    7. '            
' → logprob: -7.447675704956055
    8. '<|end|>' → logprob: -7.822675704956055
    9. ' 
' → logprob: -7.947675704956055
    10. ',' → logprob: -7.947675704956055

Token 231: ' tmp' (ID: 8919)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.17678047716617584
    2. '           ' → logprob: -2.3017804622650146
    3. 'if' → logprob: -2.8017804622650146
    4. '               ' → logprob: -6.801780700683594
    5. '       ' → logprob: -9.801780700683594
    6. '            ' → logprob: -10.301780700683594
    7. '        ' → logprob: -11.676780700683594
    8. ' ' → logprob: -11.801780700683594
    9. '   ' → logprob: -11.926780700683594
    10. ' for' → logprob: -12.301780700683594

Token 232: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00016766376211307943
    2. '[' → logprob: -10.125167846679688
    3. '[r' → logprob: -10.125167846679688
    4. '[tmp' → logprob: -10.125167846679688
    5. '[v' → logprob: -10.375167846679688
    6. '[s' → logprob: -12.875167846679688
    7. ' [' → logprob: -13.000167846679688
    8. '[row' → logprob: -13.375167846679688
    9. '[p' → logprob: -13.500167846679688
    10. '[temp' → logprob: -13.625167846679688

Token 233: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.003448968520388007
    2. ']' → logprob: -6.503448963165283
    3. ')][' → logprob: -7.753448963165283
    4. ']][' → logprob: -7.878448963165283
    5. ',' → logprob: -8.378449440002441
    6. '[v' → logprob: -8.378449440002441
    7. ' ][' → logprob: -8.503449440002441
    8. '],' → logprob: -8.628449440002441
    9. '"][' → logprob: -9.628449440002441
    10. ']=' → logprob: -10.128449440002441

Token 234: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.3856492842023727e-06
    2. 'p' → logprob: -14.375000953674316
    3. ' v' → logprob: -14.750000953674316
    4. ' ' → logprob: -15.500000953674316
    5. ']' → logprob: -16.625001907348633
    6. '   ' → logprob: -16.750001907348633
    7. '
' → logprob: -17.125001907348633
    8. 'c' → logprob: -17.625001907348633
    9. 'rc' → logprob: -17.625001907348633
    10. '  ' → logprob: -18.625001907348633

Token 235: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011160464491695166
    2. ']=' → logprob: -7.1261162757873535
    3. ' ]' → logprob: -8.376115798950195
    4. '=' → logprob: -9.876115798950195
    5. ']="' → logprob: -11.001115798950195
    6. ' =' → logprob: -12.251115798950195
    7. '"]' → logprob: -13.251115798950195
    8. ']='' → logprob: -13.376115798950195
    9. ']==' → logprob: -13.501115798950195
    10. '   ' → logprob: -14.376115798950195

Token 236: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08895865827798843
    2. ' =' → logprob: -2.463958740234375
    3. ' ' → logprob: -12.338958740234375
    4. ']' → logprob: -12.463958740234375
    5. ' ="' → logprob: -12.713958740234375
    6. '="' → logprob: -13.088958740234375
    7. '='' → logprob: -13.213958740234375
    8. ',' → logprob: -13.963958740234375
    9. ']=' → logprob: -14.338958740234375
    10. ' ='' → logprob: -14.713958740234375

Token 237: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10734888166189194
    2. ''' → logprob: -2.357348918914795
    3. ''.' → logprob: -5.607348918914795
    4. '"."' → logprob: -6.107348918914795
    5. '".' → logprob: -7.232348918914795
    6. 'Q' → logprob: -8.482348442077637
    7. ' "' → logprob: -9.107348442077637
    8. '   ' → logprob: -10.857348442077637
    9. ' ' → logprob: -10.857348442077637
    10. ' '' → logprob: -10.982348442077637

Token 238: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0052213058806955814
    2. '.' → logprob: -6.005221366882324
    3. '."' → logprob: -6.380221366882324
    4. '"' → logprob: -7.255221366882324
    5. '.Q' → logprob: -9.005221366882324
    6. '"."' → logprob: -9.505221366882324
    7. ''' → logprob: -10.005221366882324
    8. '".' → logprob: -10.005221366882324
    9. ' Q' → logprob: -10.880221366882324
    10. '.")' → logprob: -11.255221366882324

Token 239: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014193831011652946
    2. '"
' → logprob: -4.264194011688232
    3. '"
' → logprob: -11.014193534851074
    4. '       ' → logprob: -11.514193534851074
    5. ' "' → logprob: -14.014193534851074
    6. '"#' → logprob: -14.264193534851074
    7. ')"' → logprob: -14.639193534851074
    8. '"

' → logprob: -15.264193534851074
    9. '")' → logprob: -15.514193534851074
    10. ')' → logprob: -15.514193534851074

Token 240: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.055133890360593796
    2. '       ' → logprob: -2.930133819580078
    3. '<|end|>' → logprob: -8.805133819580078
    4. '
' → logprob: -9.930133819580078
    5. '   ' → logprob: -10.805133819580078
    6. '        
' → logprob: -11.805133819580078
    7. '<|end|>' → logprob: -12.305133819580078
    8. '          ' → logprob: -12.430133819580078
    9. ' if' → logprob: -12.555133819580078
    10. '            
' → logprob: -13.180133819580078

Token 241: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009034995920956135
    2. 'if' (adapté à ' if') → logprob: -5.009035110473633
    3. ' if' → logprob: -6.884035110473633
    4. '   ' → logprob: -7.259035110473633
    5. '           ' → logprob: -7.759035110473633
    6. 'for' → logprob: -9.634035110473633
    7. 'valid' → logprob: -10.134035110473633
    8. ' for' → logprob: -10.884035110473633
    9. ' valid' → logprob: -11.384035110473633
    10. '        
' → logprob: -12.384035110473633

Token 242: ' not' (ID: 625)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.5766282081604004
    2. ' all' → logprob: -0.8266282081604004
    3. ' not' → logprob: -8.451627731323242
    4. 'check' → logprob: -8.951627731323242
    5. ' check' → logprob: -9.201627731323242
    6. ' any' → logprob: -9.326627731323242
    7. 'not' → logprob: -10.201627731323242
    8. 'any' → logprob: -10.201627731323242
    9. ' ' → logprob: -10.326627731323242
    10. '(all' → logprob: -11.701627731323242

Token 243: ' all' (ID: 722)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.4330994486808777
    2. ' any' → logprob: -1.6830995082855225
    3. 'all' → logprob: -1.9330995082855225
    4. ' all' → logprob: -3.9330995082855225
    5. 'check' → logprob: -6.808099269866943
    6. ' check' → logprob: -8.308099746704102
    7. ' ' → logprob: -10.933099746704102
    8. '(any' → logprob: -11.183099746704102
    9. '   ' → logprob: -11.558099746704102
    10. '
' → logprob: -11.808099746704102

Token 244: '(tmp' (ID: 22623)
  Prédit: '(check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(check' → logprob: -0.00025430647656321526
    2. '(' → logprob: -8.62525463104248
    3. '([' → logprob: -10.37525463104248
    4. 'check' → logprob: -10.62525463104248
    5. '(not' → logprob: -11.00025463104248
    6. '((' → logprob: -13.50025463104248
    7. '(c' → logprob: -14.87525463104248
    8. '(
' → logprob: -15.12525463104248
    9. '(Check' → logprob: -15.62525463104248
    10. '(list' → logprob: -17.000253677368164

Token 245: '[' (ID: 58)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0057903737761080265
    2. '[r' → logprob: -5.2557902336120605
    3. '[row' → logprob: -7.7557902336120605
    4. '[x' → logprob: -9.755790710449219
    5. '[' → logprob: -10.005790710449219
    6. '[j' → logprob: -11.880790710449219
    7. '[int' → logprob: -12.755790710449219
    8. '[tmp' → logprob: -13.255790710449219
    9. '[y' → logprob: -13.505790710449219
    10. ')' → logprob: -13.505790710449219

Token 246: 'rc' (ID: 2366)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38484522700309753
    2. 'r' → logprob: -1.25984525680542
    3. '[i' → logprob: -3.75984525680542
    4. 'rc' → logprob: -4.63484525680542
    5. '[r' → logprob: -6.75984525680542
    6. 'x' → logprob: -7.13484525680542
    7. 'ri' → logprob: -8.134844779968262
    8. '[' → logprob: -9.134844779968262
    9. 'rr' → logprob: -10.259844779968262
    10. 'a' → logprob: -10.384844779968262

Token 247: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.020235279574990273
    2. '[' → logprob: -4.645235061645508
    3. '[x' → logprob: -5.395235061645508
    4. '[r' → logprob: -5.895235061645508
    5. '[k' → logprob: -7.020235061645508
    6. '[j' → logprob: -7.145235061645508
    7. '[q' → logprob: -8.145235061645508
    8. '[a' → logprob: -8.645235061645508
    9. 'x' → logprob: -8.895235061645508
    10. '[_' → logprob: -9.020235061645508

Token 248: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04879753664135933
    2. '][' → logprob: -3.048797607421875
    3. '[i' → logprob: -8.923797607421875
    4. '0' → logprob: -10.798797607421875
    5. '[r' → logprob: -11.173797607421875
    6. ']][' → logprob: -11.298797607421875
    7. ']' → logprob: -12.298797607421875
    8. '-' → logprob: -12.673797607421875
    9. '   ' → logprob: -13.173797607421875
    10. '1' → logprob: -13.298797607421875

Token 249: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. '1' → logprob: -13.50000286102295
    3. ' ' → logprob: -13.62500286102295
    4. '-' → logprob: -16.375003814697266
    5. '   ' → logprob: -16.500003814697266
    6. '
' → logprob: -17.125003814697266
    7. '```' → logprob: -17.375003814697266
    8. '][' → logprob: -17.500003814697266
    9. '[' → logprob: -17.625003814697266
    10. '2' → logprob: -17.875003814697266

Token 250: ']][' (ID: 61032)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.23227272927761078
    2. ']][' → logprob: -1.607272744178772
    3. ']' → logprob: -5.357272624969482
    4. '[' → logprob: -7.232272624969482
    5. ']-' → logprob: -8.35727310180664
    6. ')][' → logprob: -8.35727310180664
    7. ' ][' → logprob: -8.35727310180664
    8. '],' → logprob: -8.85727310180664
    9. ']]' → logprob: -9.10727310180664
    10. '   ' → logprob: -9.35727310180664

Token 251: 'rc' (ID: 2366)
  Prédit: 'rc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -2.0339031834737398e-05
    2. ' rc' → logprob: -11.375020027160645
    3. '   ' → logprob: -12.000020027160645
    4. '  ' → logprob: -13.875020027160645
    5. '	rc' → logprob: -14.250020027160645
    6. ' ' → logprob: -15.125020027160645
    7. '       ' → logprob: -15.625020027160645
    8. '
' → logprob: -15.625020027160645
    9. '(rc' → logprob: -15.625020027160645
    10. '    ' → logprob: -16.62502098083496

Token 252: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005260322242975235
    2. 'i' → logprob: -5.255260467529297
    3. '[' → logprob: -10.755260467529297
    4. '1' → logprob: -12.880260467529297
    5. '(i' → logprob: -13.880260467529297
    6. '][' → logprob: -14.130260467529297
    7. ' i' → logprob: -14.880260467529297
    8. '_i' → logprob: -16.005260467529297
    9. '[
' → logprob: -16.255260467529297
    10. ' ' → logprob: -16.755260467529297

Token 253: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31388574838638306
    2. '1' → logprob: -1.3138856887817383
    3. '][' → logprob: -7.438885688781738
    4. ']' → logprob: -11.313885688781738
    5. ']][' → logprob: -11.813885688781738
    6. ' ' → logprob: -12.688885688781738
    7. '2' → logprob: -12.938885688781738
    8. '   ' → logprob: -13.063885688781738
    9. '(' → logprob: -13.188885688781738
    10. '#' → logprob: -13.813885688781738

Token 254: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016909420082811266
    2. 'rc' → logprob: -8.750168800354004
    3. 'c' → logprob: -12.250168800354004
    4. '(rc' → logprob: -14.250168800354004
    5. ' ' → logprob: -14.375168800354004
    6. '2' → logprob: -14.500168800354004
    7. ']' → logprob: -14.500168800354004
    8. ' rc' → logprob: -14.500168800354004
    9. '[' → logprob: -14.500168800354004
    10. '0' → logprob: -14.625168800354004

Token 255: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0064594438299536705
    2. ']==' → logprob: -5.1314592361450195
    3. ' ]' → logprob: -8.50645923614502
    4. ']=="' → logprob: -8.50645923614502
    5. ']!=' → logprob: -9.25645923614502
    6. ']]' → logprob: -11.25645923614502
    7. ']=='' → logprob: -11.38145923614502
    8. '"]' → logprob: -13.00645923614502
    9. '==' → logprob: -14.00645923614502
    10. '[' → logprob: -14.88145923614502

Token 256: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.047934096306562424
    2. ' ==' → logprob: -3.422934055328369
    3. '!=' → logprob: -5.297934055328369
    4. ']' → logprob: -5.547934055328369
    5. ']==' → logprob: -6.047934055328369
    6. '=="' → logprob: -6.172934055328369
    7. ' !=' → logprob: -7.797934055328369
    8. '[' → logprob: -9.422934532165527
    9. ' ' → logprob: -9.922934532165527
    10. '  ' → logprob: -9.922934532165527

Token 257: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1274157017469406
    2. '".' → logprob: -2.627415657043457
    3. ''' → logprob: -4.002415657043457
    4. ''.' → logprob: -4.502415657043457
    5. '"."' → logprob: -4.877415657043457
    6. ' "' → logprob: -5.752415657043457
    7. '"A' → logprob: -5.877415657043457
    8. ')' → logprob: -7.377415657043457
    9. '"C' → logprob: -7.752415657043457
    10. ' '' → logprob: -7.877415657043457

Token 258: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.14620426297187805
    2. '."' → logprob: -2.6462042331695557
    3. '"' → logprob: -3.5212042331695557
    4. '.' → logprob: -3.7712042331695557
    5. '".' → logprob: -5.646204471588135
    6. '.")' → logprob: -5.896204471588135
    7. '"."' → logprob: -6.146204471588135
    8. '.Q' → logprob: -6.146204471588135
    9. ''' → logprob: -7.271204471588135
    10. '.)' → logprob: -8.646203994750977

Token 259: '"' (ID: 1)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03850122168660164
    2. 'for' → logprob: -3.913501262664795
    3. ']' → logprob: -4.413501262664795
    4. ')' → logprob: -6.038501262664795
    5. ' ' → logprob: -6.788501262664795
    6. ' ]' → logprob: -7.663501262664795
    7. '   ' → logprob: -8.163500785827637
    8. '           ' → logprob: -8.163500785827637
    9. '       ' → logprob: -8.288500785827637
    10. '"' → logprob: -8.663500785827637

Token 260: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.014782924205064774
    2. 'for' → logprob: -4.389782905578613
    3. '):' → logprob: -6.889782905578613
    4. '       ' → logprob: -8.014782905578613
    5. '           ' → logprob: -8.264782905578613
    6. ')' → logprob: -8.264782905578613
    7. ' or' → logprob: -9.639782905578613
    8. '   ' → logprob: -9.889782905578613
    9. ' and' → logprob: -9.889782905578613
    10. '):
' → logprob: -10.014782905578613

Token 261: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10023686289787292
    2. ' i' → logprob: -2.3502368927001953
    3. ' range' → logprob: -11.225236892700195
    4. 'range' → logprob: -11.350236892700195
    5. ' ' → logprob: -12.600236892700195
    6. '  ' → logprob: -13.975236892700195
    7. '   ' → logprob: -14.850236892700195
    8. ' in' → logprob: -15.475236892700195
    9. '	i' → logprob: -15.725236892700195
    10. '
' → logprob: -16.475236892700195

Token 262: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00319993169978261
    2. 'in' → logprob: -5.753200054168701
    3. ' range' → logprob: -11.503199577331543
    4. 'range' → logprob: -11.503199577331543
    5. ' ' → logprob: -13.878199577331543
    6. '  ' → logprob: -14.878199577331543
    7. '   ' → logprob: -15.003199577331543
    8. '<|end|>' → logprob: -15.378199577331543
    9. '(range' → logprob: -17.12820053100586
    10. '    ' → logprob: -17.37820053100586

Token 263: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006715370807796717
    2. ' range' → logprob: -5.006715297698975
    3. '	range' → logprob: -17.381715774536133
    4. '(range' → logprob: -17.631715774536133
    5. ' ' → logprob: -19.131715774536133
    6. '
' → logprob: -19.256715774536133
    7. ')' → logprob: -19.881715774536133
    8. '   ' → logprob: -20.881715774536133
    9. '  ' → logprob: -21.881715774536133
    10. 'rang' → logprob: -22.131715774536133

Token 264: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.03807098791003227
    2. 'N' → logprob: -3.2880709171295166
    3. '(len' → logprob: -11.413070678710938
    4. 'len' → logprob: -11.538070678710938
    5. '   ' → logprob: -12.163070678710938
    6. ' N' → logprob: -13.288070678710938
    7. '(' → logprob: -13.413070678710938
    8. '	N' → logprob: -15.663070678710938
    9. '       ' → logprob: -16.663070678710938
    10. '(n' → logprob: -17.163070678710938

Token 265: ')):' (ID: 92037)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012336840154603124
    2. '):
' → logprob: -7.1262335777282715
    3. ')' → logprob: -7.8762335777282715
    4. ' ):' → logprob: -10.25123405456543
    5. '       ' → logprob: -12.37623405456543
    6. ')):' → logprob: -12.50123405456543
    7. '   ' → logprob: -12.87623405456543
    8. '):
' → logprob: -13.37623405456543
    9. ')：' → logprob: -14.50123405456543
    10. '):

' → logprob: -15.00123405456543

Token 266: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003910268656909466
    2. ' continue' → logprob: -6.253910064697266
    3. 'continue' → logprob: -6.378910064697266
    4. '
' → logprob: -8.253910064697266
    5. '       ' → logprob: -11.628910064697266
    6. '		' → logprob: -12.503910064697266
    7. '	continue' → logprob: -13.503910064697266
    8. ' continues' → logprob: -13.628910064697266
    9. '   ' → logprob: -13.878910064697266
    10. ' continued' → logprob: -14.003910064697266

Token 267: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0050066327676177025
    2. '<|end|>' → logprob: -5.755006790161133
    3. '
' → logprob: -6.880006790161133
    4. '        
' → logprob: -7.255006790161133
    5. '   ' → logprob: -10.880006790161133
    6. '<|end|>' → logprob: -11.130006790161133
    7. '           ' → logprob: -11.380006790161133
    8. '  
' → logprob: -12.130006790161133
    9. '```' → logprob: -12.130006790161133
    10. ' 
' → logprob: -12.255006790161133

Token 268: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014840320218354464
    2. '<|end|>' → logprob: -6.876483917236328
    3. '        
' → logprob: -8.501483917236328
    4. '   ' → logprob: -8.876483917236328
    5. '
' → logprob: -10.501483917236328
    6. ')' → logprob: -11.001483917236328
    7. '           ' → logprob: -11.126483917236328
    8. ' if' → logprob: -11.751483917236328
    9. '  
' → logprob: -12.126483917236328
    10. '<|end|>' → logprob: -12.126483917236328

Token 269: ' judge' (ID: 23319)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5986647009849548
    2. 'if' → logprob: -0.8486647009849548
    3. 'for' → logprob: -4.0986647605896
    4. 'valid' → logprob: -6.0986647605896
    5. ' if' → logprob: -6.0986647605896
    6. 'flag' → logprob: -7.4736647605896
    7. '   ' → logprob: -7.8486647605896
    8. ' for' → logprob: -8.973664283752441
    9. '           ' → logprob: -9.223664283752441
    10. ' valid' → logprob: -10.723664283752441

Token 270: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09311308711767197
    2. '(' → logprob: -3.2181131839752197
    3. '=' → logprob: -3.2181131839752197
    4. '(p' → logprob: -5.843112945556641
    5. '(tmp' → logprob: -5.843112945556641
    6. '_result' → logprob: -6.718112945556641
    7. '   ' → logprob: -7.718112945556641
    8. ' (' → logprob: -8.21811294555664
    9. 'tmp' → logprob: -8.71811294555664
    10. '=True' → logprob: -8.71811294555664

Token 271: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.049224093556404114
    2. ' True' → logprob: -3.0492241382598877
    3. 'all' → logprob: -7.799223899841309
    4. '       ' → logprob: -9.424223899841309
    5. ' all' → logprob: -9.424223899841309
    6. '   ' → logprob: -9.674223899841309
    7. '           ' → logprob: -13.674223899841309
    8. 'False' → logprob: -15.049223899841309
    9. '(True' → logprob: -15.424223899841309
    10. '    ' → logprob: -15.924223899841309

Token 272: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02727345936000347
    2. '<|end|>' → logprob: -3.652273416519165
    3. ' for' → logprob: -7.902273654937744
    4. '
' → logprob: -8.027273178100586
    5. '<|end|>' → logprob: -9.027273178100586
    6. '        
' → logprob: -9.277273178100586
    7. ',' → logprob: -10.527273178100586
    8. 'for' → logprob: -11.402273178100586
    9. '   ' → logprob: -12.902273178100586
    10. '	' → logprob: -12.902273178100586

Token 273: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02013235352933407
    2. '<|end|>' → logprob: -4.145132541656494
    3. ' for' → logprob: -5.645132541656494
    4. '<|end|>' → logprob: -8.520132064819336
    5. '
' → logprob: -9.145132064819336
    6. 'for' → logprob: -9.270132064819336
    7. '	' → logprob: -9.645132064819336
    8. '   ' → logprob: -10.395132064819336
    9. ' ' → logprob: -11.645132064819336
    10. '        
' → logprob: -11.645132064819336

Token 274: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022294269874691963
    2. ' for' → logprob: -4.022294044494629
    3. 'for' (adapté à ' for') → logprob: -5.522294044494629
    4. '   ' → logprob: -8.897294044494629
    5. ' ' → logprob: -14.022294044494629
    6. '           ' → logprob: -14.522294044494629
    7. '	for' → logprob: -15.272294044494629
    8. '      ' → logprob: -15.522294044494629
    9. 'def' → logprob: -15.897294044494629
    10. '  ' → logprob: -16.272294998168945

Token 275: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3965304493904114
    2. ' i' → logprob: -1.1465303897857666
    3. 'r' → logprob: -5.021530628204346
    4. ' r' → logprob: -5.896530628204346
    5. 'x' → logprob: -8.896530151367188
    6. ' x' → logprob: -10.271530151367188
    7. ' y' → logprob: -10.646530151367188
    8. 'y' → logprob: -11.021530151367188
    9. ' ' → logprob: -11.146530151367188
    10. 'j' → logprob: -11.396530151367188

Token 276: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10472887754440308
    2. ',' → logprob: -2.354728937149048
    3. 'in' → logprob: -5.479728698730469
    4. ' ,' → logprob: -8.354728698730469
    5. '   ' → logprob: -10.104728698730469
    6. ' ' → logprob: -11.104728698730469
    7. '0' → logprob: -11.854728698730469
    8. '    ' → logprob: -11.979728698730469
    9. ',j' → logprob: -12.229728698730469
    10. '  ' → logprob: -12.354728698730469

Token 277: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.26068904995918274
    2. 'j' → logprob: -1.6356890201568604
    3. 'r' → logprob: -3.8856890201568604
    4. ' v' → logprob: -4.6356892585754395
    5. ' j' → logprob: -6.1356892585754395
    6. 'q' → logprob: -7.1356892585754395
    7. 'row' → logprob: -8.010688781738281
    8. 'p' → logprob: -8.135688781738281
    9. ' r' → logprob: -8.510688781738281
    10. 'c' → logprob: -8.885688781738281

Token 278: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018244998529553413
    2. 'in' → logprob: -4.018245220184326
    3. 'enumer' → logprob: -10.143244743347168
    4. ',' → logprob: -11.393244743347168
    5. '   ' → logprob: -11.643244743347168
    6. ' ' → logprob: -11.768244743347168
    7. 'p' → logprob: -12.018244743347168
    8. '1' → logprob: -12.518244743347168
    9. 'range' → logprob: -12.518244743347168
    10. '```' → logprob: -13.705744743347168

Token 279: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.2014150768518448
    2. ' enumerate' → logprob: -1.7014150619506836
    3. ' ' → logprob: -14.326415061950684
    4. '   ' → logprob: -14.451415061950684
    5. 'en' → logprob: -15.701415061950684
    6. 'range' → logprob: -15.826415061950684
    7. '```' → logprob: -16.826416015625
    8. '(en' → logprob: -17.201416015625
    9. '    ' → logprob: -17.451416015625
    10. '
' → logprob: -17.451416015625

Token 280: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.002802863484248519
    2. '(tmp' → logprob: -6.002802848815918
    3. '(range' → logprob: -8.752802848815918
    4. '(zip' → logprob: -9.127802848815918
    5. '(' → logprob: -10.627802848815918
    6. 'p' → logprob: -11.002802848815918
    7. 'tmp' → logprob: -11.877802848815918
    8. '(en' → logprob: -12.502802848815918
    9. 'enumer' → logprob: -13.002802848815918
    10. 'range' → logprob: -13.627802848815918

Token 281: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.641914427280426
    2. '):
' → logprob: -0.766914427280426
    3. ':' → logprob: -4.766914367675781
    4. ':
' → logprob: -7.766914367675781
    5. '       ' → logprob: -8.516914367675781
    6. '   ' → logprob: -10.016914367675781
    7. '):
' → logprob: -10.141914367675781
    8. '):

' → logprob: -11.641914367675781
    9. ' ):' → logprob: -11.641914367675781
    10. '():
' → logprob: -11.766914367675781

Token 282: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004981847479939461
    2. '<|end|>' → logprob: -6.004981994628906
    3. '
' → logprob: -6.629981994628906
    4. ' if' → logprob: -7.254981994628906
    5. '            
' → logprob: -8.504981994628906
    6. '<|end|>' → logprob: -8.879981994628906
    7. ',' → logprob: -10.754981994628906
    8. ' 
' → logprob: -11.004981994628906
    9. '       ' → logprob: -11.129981994628906
    10. ' ' → logprob: -11.379981994628906

Token 283: ' tmp' (ID: 8919)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16599509119987488
    2. ' if' → logprob: -2.0409951210021973
    3. 'if' → logprob: -3.7909951210021973
    4. '       ' → logprob: -7.790995121002197
    5. '	       ' → logprob: -10.165994644165039
    6. '               ' → logprob: -11.040994644165039
    7. '   ' → logprob: -13.290994644165039
    8. '<|end|>' → logprob: -13.790994644165039
    9. '          ' → logprob: -13.915994644165039
    10. 'If' → logprob: -14.290994644165039

Token 284: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7520163655281067
    2. 'for' → logprob: -1.752016305923462
    3. 'if' → logprob: -1.877016305923462
    4. 'i' → logprob: -2.752016305923462
    5. ' =' → logprob: -3.502016305923462
    6. 'r' → logprob: -4.002016544342041
    7. ')' → logprob: -4.127016544342041
    8. 'def' → logprob: -4.377016544342041
    9. ' if' → logprob: -4.752016544342041
    10. '=' → logprob: -5.002016544342041

Token 285: '][' (ID: 2696)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29055094718933105
    2. '][' → logprob: -1.415550947189331
    3. ',v' → logprob: -6.29055118560791
    4. '[v' → logprob: -6.79055118560791
    5. '[tmp' → logprob: -6.91555118560791
    6. ')' → logprob: -6.91555118560791
    7. '[' → logprob: -7.16555118560791
    8. '           ' → logprob: -7.41555118560791
    9. '])' → logprob: -7.66555118560791
    10. ')[' → logprob: -7.79055118560791

Token 286: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.3856492842023727e-06
    2. ' v' → logprob: -13.875000953674316
    3. ' ' → logprob: -16.000001907348633
    4. 'check' → logprob: -16.375001907348633
    5. '
' → logprob: -16.625001907348633
    6. 'p' → logprob: -17.500001907348633
    7. ']' → logprob: -17.875001907348633
    8. ')v' → logprob: -18.125001907348633
    9. '[v' → logprob: -18.500001907348633
    10. '   ' → logprob: -18.500001907348633

Token 287: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08906575292348862
    2. ']==' → logprob: -2.9640657901763916
    3. ']!=' → logprob: -4.3390655517578125
    4. '=' → logprob: -5.3390655517578125
    5. '==' → logprob: -5.4640655517578125
    6. ')' → logprob: -5.4640655517578125
    7. 'if' → logprob: -6.2140655517578125
    8. '!=' → logprob: -6.4640655517578125
    9. ']=="' → logprob: -6.9640655517578125
    10. '])' → logprob: -7.0890655517578125

Token 288: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.028369193896651268
    2. 'if' → logprob: -4.028369426727295
    3. '==' → logprob: -5.278369426727295
    4. '!=' → logprob: -5.653369426727295
    5. ')' → logprob: -7.278369426727295
    6. ' =' → logprob: -7.653369426727295
    7. ' if' → logprob: -8.403368949890137
    8. ' ==' → logprob: -10.028368949890137
    9. ' !=' → logprob: -10.903368949890137
    10. ')=' → logprob: -11.403368949890137

Token 289: ' ".' (ID: 11730)
  Prédit: '"."'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"."' → logprob: -0.05136745050549507
    2. '".' → logprob: -3.1763675212860107
    3. ''.' → logprob: -5.301367282867432
    4. '"' → logprob: -5.926367282867432
    5. '.' → logprob: -7.551367282867432
    6. ' "."' → logprob: -9.17636775970459
    7. '""' → logprob: -11.42636775970459
    8. ''' → logprob: -11.92636775970459
    9. '.Q' → logprob: -12.05136775970459
    10. '"#' → logprob: -12.42636775970459

Token 290: '"
' (ID: 1092)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3104722499847412
    2. '
' → logprob: -1.4354722499847412
    3. 'if' → logprob: -4.06047248840332
    4. ' if' → logprob: -5.31047248840332
    5. '       ' → logprob: -5.93547248840332
    6. '<|end|>' → logprob: -6.06047248840332
    7. '            
' → logprob: -7.68547248840332
    8. ')' → logprob: -8.43547248840332
    9. ' 
' → logprob: -8.56047248840332
    10. '  
' → logprob: -8.68547248840332

Token 291: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 292: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.006653910968452692
    2. '       ' → logprob: -5.756653785705566
    3. ' if' → logprob: -5.756653785705566
    4. '           ' → logprob: -8.131653785705566
    5. '   ' → logprob: -11.756653785705566
    6. 'judge' → logprob: -13.131653785705566
    7. 'for' → logprob: -14.006653785705566
    8. 'If' → logprob: -14.256653785705566
    9. '```' → logprob: -14.381653785705566
    10. '	if' → logprob: -14.381653785705566

Token 293: ' check' (ID: 2371)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5759947299957275
    2. 'not' → logprob: -0.8259947299957275
    3. '           ' → logprob: -10.700994491577148
    4. 'check' → logprob: -10.700994491577148
    5. ' check' → logprob: -12.200994491577148
    6. '(not' → logprob: -13.575994491577148
    7. '               ' → logprob: -13.700994491577148
    8. '   ' → logprob: -14.075994491577148
    9. '
' → logprob: -14.450994491577148
    10. '!' → logprob: -14.575994491577148

Token 294: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.3544423381972592e-05
    2. '(' → logprob: -11.25001335144043
    3. ' (' → logprob: -15.12501335144043
    4. '(
' → logprob: -15.37501335144043
    5. '(tmp' → logprob: -18.87501335144043
    6. 'i' → logprob: -19.62501335144043
    7. '[i' → logprob: -19.87501335144043
    8. ',i' → logprob: -20.00001335144043
    9. '(I' → logprob: -20.50001335144043
    10. '(ii' → logprob: -20.62501335144043

Token 295: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0043335105292499065
    2. ',v' → logprob: -5.62933349609375
    3. ' ,' → logprob: -7.62933349609375
    4. ',i' → logprob: -8.50433349609375
    5. ',p' → logprob: -11.25433349609375
    6. ',
' → logprob: -11.75433349609375
    7. 'v' → logprob: -13.00433349609375
    8. '+' → logprob: -13.12933349609375
    9. '0' → logprob: -13.62933349609375
    10. ',x' → logprob: -13.87933349609375

Token 296: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -5.200166469876422e-06
    2. ' v' → logprob: -12.250004768371582
    3. 'p' → logprob: -15.500004768371582
    4. '   ' → logprob: -17.3750057220459
    5. '	v' → logprob: -18.0000057220459
    6. ' ' → logprob: -18.3750057220459
    7. '    ' → logprob: -19.1250057220459
    8. '  ' → logprob: -19.2500057220459
    9. ')v' → logprob: -19.2500057220459
    10. '           ' → logprob: -19.3750057220459

Token 297: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009980835020542145
    2. ',tmp' → logprob: -4.75998067855835
    3. ' ,' → logprob: -6.88498067855835
    4. '):' → logprob: -8.759981155395508
    5. '(tmp' → logprob: -9.134981155395508
    6. 'tmp' → logprob: -10.759981155395508
    7. ')' → logprob: -10.884981155395508
    8. '[tmp' → logprob: -11.384981155395508
    9. ',
' → logprob: -11.759981155395508
    10. ' tmp' → logprob: -12.884981155395508

Token 298: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.0008062947308644652
    2. ' tmp' → logprob: -7.1258063316345215
    3. 'board' → logprob: -13.875805854797363
    4. 'temp' → logprob: -15.375805854797363
    5. '[tmp' → logprob: -15.375805854797363
    6. '           ' → logprob: -16.25080680847168
    7. '	tmp' → logprob: -16.50080680847168
    8. '   ' → logprob: -16.75080680847168
    9. ' ' → logprob: -16.87580680847168
    10. '       ' → logprob: -17.37580680847168

Token 299: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006168743595480919
    2. ')==' → logprob: -5.756168842315674
    3. '):' → logprob: -5.881168842315674
    4. ' )' → logprob: -9.256168365478516
    5. '):
' → logprob: -9.381168365478516
    6. '")' → logprob: -12.256168365478516
    7. '）' → logprob: -12.506168365478516
    8. ')=' → logprob: -13.881168365478516
    9. '):
' → logprob: -14.006168365478516
    10. ')is' → logprob: -14.131168365478516

Token 300: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.019216308370232582
    2. ' continue' → logprob: -4.394216537475586
    3. '           ' → logprob: -6.269216537475586
    4. '                
' → logprob: -6.894216537475586
    5. ' return' → logprob: -7.394216537475586
    6. ' judge' → logprob: -7.519216537475586
    7. 'continue' → logprob: -7.644216537475586
    8. ')' → logprob: -8.019216537475586
    9. '<|end|>' → logprob: -8.019216537475586
    10. '            
' → logprob: -8.894216537475586

Token 301: ' pass' (ID: 1853)
  Prédit: 'judge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'judge' → logprob: -0.47651737928390503
    2. '               ' → logprob: -1.8515174388885498
    3. 'continue' → logprob: -2.35151743888855
    4. '                   ' → logprob: -2.85151743888855
    5. '           ' → logprob: -3.22651743888855
    6. ' judge' → logprob: -3.72651743888855
    7. ' continue' → logprob: -5.976517200469971
    8. 'break' → logprob: -6.726517200469971
    9. 'jud' → logprob: -8.351517677307129
    10. 'pass' (adapté à ' pass') → logprob: -8.476517677307129

Token 302: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00033284336677752435
    2. 'continue' → logprob: -9.125332832336426
    3. '               ' → logprob: -9.625332832336426
    4. 'else' → logprob: -9.625332832336426
    5. ' continue' → logprob: -10.375332832336426
    6. ' else' → logprob: -10.750332832336426
    7. '       ' → logprob: -11.250332832336426
    8. '		' → logprob: -12.125332832336426
    9. '<|end|>' → logprob: -12.375332832336426
    10. 'n' → logprob: -13.250332832336426

Token 303: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008837147615849972
    2. 'else' → logprob: -7.37588357925415
    3. 'continue' → logprob: -8.875884056091309
    4. ' else' → logprob: -9.875884056091309
    5. '               ' → logprob: -11.000884056091309
    6. '<|end|>' → logprob: -11.375884056091309
    7. '		' → logprob: -11.500884056091309
    8. ' continue' → logprob: -11.625884056091309
    9. '       ' → logprob: -12.000884056091309
    10. '	       ' → logprob: -13.000884056091309

Token 304: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.033906858414411545
    2. 'else' (adapté à ' else') → logprob: -3.408906936645508
    3. 'continue' → logprob: -8.783906936645508
    4. ' else' → logprob: -9.533906936645508
    5. '               ' → logprob: -10.908906936645508
    6. '       ' → logprob: -11.283906936645508
    7. '   ' → logprob: -13.158906936645508
    8. ' continue' → logprob: -14.033906936645508
    9. 'elif' → logprob: -14.908906936645508
    10. '```' → logprob: -15.033906936645508

Token 305: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01173623837530613
    2. ':' → logprob: -5.6367363929748535
    3. '                   ' → logprob: -5.6367363929748535
    4. ':
' → logprob: -6.0117363929748535
    5. '           ' → logprob: -6.5117363929748535
    6. ' judge' → logprob: -9.261735916137695
    7. '                
' → logprob: -9.511735916137695
    8. '                ' → logprob: -9.511735916137695
    9. '                       ' → logprob: -9.886735916137695
    10. ' :
' → logprob: -9.886735916137695

Token 306: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4424887001514435
    2. 'judge' → logprob: -1.192488670349121
    3. ' judge' → logprob: -2.942488670349121
    4. '                   ' → logprob: -7.192488670349121
    5. 'jud' → logprob: -8.067488670349121
    6. '           ' → logprob: -8.317488670349121
    7. '                       ' → logprob: -11.442488670349121
    8. '       ' → logprob: -11.442488670349121
    9. 'Judge' → logprob: -11.817488670349121
    10. '   ' → logprob: -12.067488670349121

Token 307: ' judge' (ID: 23319)
  Prédit: 'judge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'judge' (adapté à ' judge') → logprob: -0.0001029471677611582
    2. ' judge' → logprob: -10.000102996826172
    3. '           ' → logprob: -10.250102996826172
    4. '               ' → logprob: -11.250102996826172
    5. 'jud' → logprob: -12.875102996826172
    6. '   ' → logprob: -13.250102996826172
    7. '       ' → logprob: -13.250102996826172
    8. '                   ' → logprob: -13.250102996826172
    9. 'break' → logprob: -14.000102996826172
    10. '                       ' → logprob: -15.750102996826172

Token 308: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.252139687538147
    2. ' =' → logprob: -1.502139687538147
    3. '=False' → logprob: -8.502140045166016
    4. '=True' → logprob: -12.377140045166016
    5. ' ' → logprob: -13.877140045166016
    6. '           ' → logprob: -14.627140045166016
    7. '=
' → logprob: -14.877140045166016
    8. '               ' → logprob: -15.127140045166016
    9. ' =
' → logprob: -15.252140045166016
    10. '       ' → logprob: -15.752140045166016

Token 309: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0001234428636962548
    2. ' False' → logprob: -9.000123023986816
    3. 'false' → logprob: -22.250123977661133
    4. '(False' → logprob: -22.250123977661133
    5. 'True' → logprob: -23.000123977661133
    6. '=False' → logprob: -23.250123977661133
    7. '   ' → logprob: -23.875123977661133
    8. '_false' → logprob: -24.875123977661133
    9. 'F' → logprob: -25.000123977661133
    10. '0' → logprob: -25.000123977661133

Token 310: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008386960835196078
    2. '           ' → logprob: -8.125838279724121
    3. '       ' → logprob: -8.500838279724121
    4. '<|end|>' → logprob: -8.625838279724121
    5. '                   ' → logprob: -10.125838279724121
    6. '   ' → logprob: -10.625838279724121
    7. '                       ' → logprob: -10.625838279724121
    8. '			' → logprob: -10.875838279724121
    9. '	           ' → logprob: -11.375838279724121
    10. '		       ' → logprob: -11.625838279724121

Token 311: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003155625017825514
    2. '       ' → logprob: -8.62531566619873
    3. '           ' → logprob: -9.25031566619873
    4. '   ' → logprob: -11.62531566619873
    5. '	           ' → logprob: -11.87531566619873
    6. '		       ' → logprob: -11.87531566619873
    7. '<|end|>' → logprob: -12.00031566619873
    8. '                       ' → logprob: -13.12531566619873
    9. '                   ' → logprob: -13.25031566619873
    10. '			' → logprob: -13.25031566619873

Token 312: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0009071758831851184
    2. '               ' → logprob: -7.500906944274902
    3. ' break' → logprob: -8.000906944274902
    4. '	break' → logprob: -11.000906944274902
    5. '           ' → logprob: -13.375906944274902
    6. '                   ' → logprob: -14.875906944274902
    7. 'return' → logprob: -16.62590789794922
    8. '```' → logprob: -16.62590789794922
    9. '       ' → logprob: -17.12590789794922
    10. '_break' → logprob: -17.25090789794922

Token 313: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4813103675842285
    2. '           ' → logprob: -0.9813103675842285
    3. '	' → logprob: -6.1063103675842285
    4. '	       ' → logprob: -6.6063103675842285
    5. '               ' → logprob: -6.9813103675842285
    6. '		' → logprob: -7.4813103675842285
    7. '   ' → logprob: -7.4813103675842285
    8. '<|end|>' → logprob: -7.7313103675842285
    9. '        
' → logprob: -8.60630989074707
    10. ' ' → logprob: -9.23130989074707

Token 314: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1334569752216339
    2. '           ' → logprob: -2.2584569454193115
    3. '<|end|>' → logprob: -4.758457183837891
    4. '	' → logprob: -5.258457183837891
    5. '	       ' → logprob: -5.883457183837891
    6. '		' → logprob: -7.508457183837891
    7. '               ' → logprob: -7.758457183837891
    8. '   ' → logprob: -7.758457183837891
    9. ' ' → logprob: -7.883457183837891
    10. ' 	' → logprob: -8.25845718383789

Token 315: ' tmp' (ID: 8919)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08233307301998138
    2. '       ' → logprob: -2.5823330879211426
    3. 'tmp' (adapté à ' tmp') → logprob: -6.582333087921143
    4. '   ' → logprob: -7.957333087921143
    5. ' ' → logprob: -7.957333087921143
    6. 'return' → logprob: -8.082332611083984
    7. '               ' → logprob: -8.332332611083984
    8. 'if' → logprob: -8.582332611083984
    9. '.' → logprob: -8.832332611083984
    10. ' tmp' → logprob: -9.332332611083984

Token 316: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.511406809295295e-06
    2. 'i' → logprob: -12.500006675720215
    3. '[' → logprob: -12.875006675720215
    4. '[int' → logprob: -17.5000057220459
    5. '[tmp' → logprob: -17.5000057220459
    6. ' ' → logprob: -17.6250057220459
    7. '[I' → logprob: -17.8750057220459
    8. '```' → logprob: -18.3750057220459
    9. '[e' → logprob: -18.5000057220459
    10. '(i' → logprob: -18.8750057220459

Token 317: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00038562860572710633
    2. '[i' → logprob: -8.375385284423828
    3. '[v' → logprob: -9.500385284423828
    4. ']' → logprob: -10.125385284423828
    5. '[' → logprob: -10.625385284423828
    6. ' ][' → logprob: -11.750385284423828
    7. ')[' → logprob: -13.125385284423828
    8. 'v' → logprob: -13.875385284423828
    9. ']][' → logprob: -14.000385284423828
    10. '}[' → logprob: -14.500385284423828

Token 318: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -4.320199877838604e-07
    2. ' v' → logprob: -15.25
    3. '[v' → logprob: -16.0
    4. '   ' → logprob: -18.125
    5. '][' → logprob: -18.375
    6. '[' → logprob: -18.625
    7. ' ' → logprob: -19.0
    8. 'c' → logprob: -19.5
    9. '    ' → logprob: -19.625
    10. ']' → logprob: -19.75

Token 319: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0008016457431949675
    2. ' =' → logprob: -7.2508015632629395
    3. ']' → logprob: -9.500802040100098
    4. '="' → logprob: -11.750802040100098
    5. ']=' → logprob: -12.250802040100098
    6. '[' → logprob: -13.375802040100098
    7. '["' → logprob: -13.375802040100098
    8. ' ="' → logprob: -14.750802040100098
    9. ']="' → logprob: -16.00080108642578
    10. ')' → logprob: -16.12580108642578

Token 320: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -9.13388703338569e-06
    2. ' =' → logprob: -11.625009536743164
    3. '="' → logprob: -16.125009536743164
    4. '=

' → logprob: -18.000009536743164
    5. '=
' → logprob: -18.375009536743164
    6. '＝' → logprob: -18.625009536743164
    7. ' ="' → logprob: -20.125009536743164
    8. '.=' → logprob: -20.625009536743164
    9. '='' → logprob: -21.000009536743164
    10. '=["' → logprob: -21.125009536743164

Token 321: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0004587903094943613
    2. 'Q' → logprob: -7.750458717346191
    3. ''' → logprob: -10.500458717346191
    4. ' "' → logprob: -14.875458717346191
    5. '
' → logprob: -16.375459671020508
    6. '	Q' → logprob: -17.125459671020508
    7. ' Q' → logprob: -17.750459671020508
    8. '("' → logprob: -18.375459671020508
    9. ' ' → logprob: -18.500459671020508
    10. '[' → logprob: -18.500459671020508

Token 322: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -1.9027791495318525e-05
    2. '"' → logprob: -10.875019073486328
    3. ' Q' → logprob: -16.875019073486328
    4. ''' → logprob: -19.375019073486328
    5. '.Q' → logprob: -20.250019073486328
    6. '	Q' → logprob: -20.250019073486328
    7. '#' → logprob: -20.750019073486328
    8. '_Q' → logprob: -20.875019073486328
    9. '(Q' → logprob: -21.000019073486328
    10. '"""' → logprob: -22.500019073486328

Token 323: '"
' (ID: 1092)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 324: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 325: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14496345818042755
    2. '   ' → logprob: -2.144963502883911
    3. ' if' → logprob: -4.269963264465332
    4. 'if' (adapté à ' if') → logprob: -5.894963264465332
    5. ' ' → logprob: -7.519963264465332
    6. '<|end|>' → logprob: -8.394963264465332
    7. '    ' → logprob: -9.269963264465332
    8. ')' → logprob: -9.894963264465332
    9. '  ' → logprob: -10.019963264465332
    10. '	if' → logprob: -10.394963264465332

Token 326: ' judge' (ID: 23319)
  Prédit: ' judge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' judge' → logprob: -0.018232710659503937
    2. 'judge' → logprob: -4.018232822418213
    3. '   ' → logprob: -10.393232345581055
    4. '    ' → logprob: -10.768232345581055
    5. ' juge' → logprob: -11.893232345581055
    6. ' ' → logprob: -12.018232345581055
    7. 'jud' → logprob: -12.018232345581055
    8. ' not' → logprob: -12.143232345581055
    9. '       ' → logprob: -12.893232345581055
    10. '  ' → logprob: -13.893232345581055

Token 327: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019653895869851112
    2. ':
' → logprob: -6.376965522766113
    3. '       ' → logprob: -9.001965522766113
    4. '           ' → logprob: -9.626965522766113
    5. ':return' → logprob: -10.126965522766113
    6. '<|end|>' → logprob: -11.376965522766113
    7. ' :' → logprob: -11.626965522766113
    8. '=' → logprob: -13.251965522766113
    9. ' ==' → logprob: -13.501965522766113
    10. '<|end|>' → logprob: -13.501965522766113

Token 328: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008122311905026436
    2. ' return' → logprob: -5.133122444152832
    3. 'return' → logprob: -6.633122444152832
    4. 'print' → logprob: -7.508122444152832
    5. ' print' → logprob: -8.508122444152832
    6. '
' → logprob: -10.383122444152832
    7. '	       ' → logprob: -10.633122444152832
    8. '            
' → logprob: -10.883122444152832
    9. '		' → logprob: -11.258122444152832
    10. '        
' → logprob: -12.133122444152832

Token 329: ' tmp' (ID: 8919)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4192683696746826
    2. 'print' → logprob: -1.1692683696746826
    3. '["' → logprob: -5.419268608093262
    4. '"' → logprob: -5.419268608093262
    5. '[p' → logprob: -5.544268608093262
    6. 'len' → logprob: -5.669268608093262
    7. 'sum' → logprob: -5.669268608093262
    8. '"\' → logprob: -5.919268608093262
    9. 'True' → logprob: -6.169268608093262
    10. ' p' → logprob: -6.294268608093262

Token 330: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7583127021789551
    2. '<|end|>' → logprob: -1.008312702178955
    3. '    
' → logprob: -3.133312702178955
    4. '
' → logprob: -3.758312702178955
    5. ')' → logprob: -3.883312702178955
    6. 'print' → logprob: -4.008312702178955
    7. '  
' → logprob: -4.508312702178955
    8. '\n' → logprob: -4.883312702178955
    9. 'for' → logprob: -5.258312702178955
    10. '\' → logprob: -5.508312702178955

Token 331: '       
' (ID: 25240)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30590251088142395
    2. '<|end|>' → logprob: -2.8059024810791016
    3. '    
' → logprob: -2.9309024810791016
    4. ')' → logprob: -3.0559024810791016
    5. 'print' → logprob: -4.055902481079102
    6. 'return' → logprob: -4.430902481079102
    7. ' ' → logprob: -4.805902481079102
    8. 'def' → logprob: -4.805902481079102
    9. '  
' → logprob: -4.805902481079102
    10. '\' → logprob: -4.930902481079102

Token 332: 'tmp' (ID: 11669)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.14427292346954346
    2. 'return' → logprob: -2.269272804260254
    3. '   ' → logprob: -4.019272804260254
    4. 'result' → logprob: -4.519272804260254
    5. '    
' → logprob: -7.394272804260254
    6. 'None' → logprob: -8.019272804260254
    7. 'for' → logprob: -8.269272804260254
    8. 'res' → logprob: -8.894272804260254
    9. ' 
' → logprob: -9.269272804260254
    10. '  
' → logprob: -9.769272804260254

Token 333: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40103280544281006
    2. ' =' → logprob: -1.27603280544281
    3. '<|end|>' → logprob: -3.2760329246520996
    4. ')' → logprob: -5.4010329246521
    5. '[' → logprob: -5.5260329246521
    6. ' ' → logprob: -6.0260329246521
    7. '<|end|>' → logprob: -7.6510329246521
    8. ',' → logprob: -8.151032447814941
    9. '  ' → logprob: -8.151032447814941
    10. ']' → logprob: -8.651032447814941

Token 334: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0007099286303855479
    2. ' main' → logprob: -7.2507100105285645
    3. '(main' → logprob: -17.625709533691406
    4. '	main' → logprob: -18.875709533691406
    5. '.main' → logprob: -21.625709533691406
    6. '   ' → logprob: -22.250709533691406
    7. ' ' → logprob: -22.625709533691406
    8. '/main' → logprob: -23.250709533691406
    9. '  ' → logprob: -23.500709533691406
    10. '
' → logprob: -24.250709533691406

Token 335: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.3458322731312364e-06
    2. '()
' → logprob: -12.125007629394531
    3. '(' → logprob: -14.125007629394531
    4. '()<' → logprob: -15.750007629394531
    5. '()`' → logprob: -15.750007629394531
    6. '();' → logprob: -15.875007629394531
    7. ' ()' → logprob: -16.00000762939453
    8. '().' → logprob: -16.25000762939453
    9. '()\' → logprob: -16.37500762939453
    10. '()]' → logprob: -16.50000762939453

Token 336: 'for' (ID: 1938)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5376448035240173
    2. 'print' → logprob: -1.037644863128662
    3. 'for' → logprob: -2.787644863128662
    4. ' if' → logprob: -11.162644386291504
    5. ' for' → logprob: -12.912644386291504
    6. '[' → logprob: -13.037644386291504
    7. 'board' → logprob: -13.787644386291504
    8. ' print' → logprob: -14.287644386291504
    9. 'result' → logprob: -14.412644386291504
    10. 'output' → logprob: -14.662644386291504

Token 337: ' t' (ID: 260)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.07511148601770401
    2. 'i' → logprob: -3.5751113891601562
    3. ' row' → logprob: -3.8251113891601562
    4. 'r' → logprob: -3.8251113891601562
    5. ' i' → logprob: -7.700111389160156
    6. 'line' → logprob: -8.575111389160156
    7. ' r' → logprob: -9.700111389160156
    8. 'x' → logprob: -12.200111389160156
    9. 'tmp' → logprob: -13.200111389160156
    10. ' line' → logprob: -13.325111389160156

Token 338: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00903452280908823
    2. 'row' → logprob: -5.384034633636475
    3. 'mp' → logprob: -6.384034633636475
    4. '_row' → logprob: -7.009034633636475
    5. 'in' → logprob: -7.884034633636475
    6. 'o' → logprob: -8.134034156799316
    7. 't' → logprob: -8.134034156799316
    8. 'e' → logprob: -9.134034156799316
    9. 'r' → logprob: -9.134034156799316
    10. 'i' → logprob: -9.134034156799316

Token 339: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.0008112939540296793
    2. ' tmp' → logprob: -7.2508111000061035
    3. 'range' → logprob: -9.250811576843262
    4. ' range' → logprob: -12.375811576843262
    5. 't' → logprob: -14.625811576843262
    6. '(tmp' → logprob: -15.250811576843262
    7. 'temp' → logprob: -15.625811576843262
    8. '	tmp' → logprob: -15.750811576843262
    9. 'row' → logprob: -16.000810623168945
    10. 'tm' → logprob: -17.750810623168945

Token 340: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018637838074937463
    2. ':
' → logprob: -6.501863956451416
    3. '):' → logprob: -8.126863479614258
    4. '):
' → logprob: -11.376863479614258
    5. '<|end|>' → logprob: -11.626863479614258
    6. ' :' → logprob: -11.876863479614258
    7. 'print' → logprob: -12.001863479614258
    8. '   ' → logprob: -12.251863479614258
    9. ')' → logprob: -12.251863479614258
    10. '[' → logprob: -12.751863479614258

Token 341: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20343929529190063
    2. '   ' → logprob: -1.7034392356872559
    3. ' print' → logprob: -6.203439235687256
    4. '	print' → logprob: -13.578439712524414
    5. 'for' → logprob: -16.203439712524414
    6. '       ' → logprob: -16.328439712524414
    7. ' ' → logprob: -16.453439712524414
    8. '   ' → logprob: -18.078439712524414
    9. '    ' → logprob: -18.828439712524414
    10. '```' → logprob: -19.203439712524414

Token 342: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.173704271830502e-06
    2. ' print' → logprob: -13.00000286102295
    3. '   ' → logprob: -14.00000286102295
    4. ' ' → logprob: -21.125003814697266
    5. 'for' → logprob: -22.125003814697266
    6. '	print' → logprob: -22.875003814697266
    7. '    ' → logprob: -24.500003814697266
    8. '  ' → logprob: -24.875003814697266
    9. '
' → logprob: -25.250003814697266
    10. '       ' → logprob: -25.625003814697266

Token 343: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.051182277500629425
    2. '('' → logprob: -3.051182270050049
    3. '(' → logprob: -6.176182270050049
    4. '"' → logprob: -7.801182270050049
    5. '(*' → logprob: -9.301182746887207
    6. '''.' → logprob: -12.676182746887207
    7. '("")' → logprob: -12.926182746887207
    8. ' ("' → logprob: -13.426182746887207
    9. '(""' → logprob: -13.551182746887207
    10. ' "".' → logprob: -13.801182746887207

Token 344: ''.' (ID: 6120)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.004863699898123741
    2. ' ''.' → logprob: -5.879863739013672
    3. '"' → logprob: -6.504863739013672
    4. ''.' → logprob: -8.004863739013672
    5. ''' → logprob: -9.004863739013672
    6. '''' → logprob: -10.004863739013672
    7. '".' → logprob: -10.629863739013672
    8. ' "".' → logprob: -10.629863739013672
    9. '('' → logprob: -12.504863739013672
    10. '""' → logprob: -13.129863739013672

Token 345: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -7.896309739408025e-07
    2. ' join' → logprob: -14.250000953674316
    3. '''.' → logprob: -16.375
    4. 'j' → logprob: -17.625
    5. 'jo' → logprob: -18.625
    6. ''.' → logprob: -19.125
    7. 'print' → logprob: -19.625
    8. '.join' → logprob: -19.75
    9. '.' → logprob: -20.625
    10. '   ' → logprob: -20.875

Token 346: '("' (ID: 568)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.061977993696928024
    2. '(t' → logprob: -2.8119781017303467
    3. ')t' → logprob: -12.311978340148926
    4. '	t' → logprob: -12.686978340148926
    5. ' t' → logprob: -13.311978340148926
    6. '[t' → logprob: -14.061978340148926
    7. '`t' → logprob: -15.311978340148926
    8. '<t' → logprob: -17.06197738647461
    9. '*t' → logprob: -17.56197738647461
    10. ')' → logprob: -17.68697738647461

Token 347: 'Q' (ID: 48)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -3.6550729419104755e-05
    2. '(t' → logprob: -10.250036239624023
    3. ' t' → logprob: -13.750036239624023
    4. ')t' → logprob: -16.875036239624023
    5. '	t' → logprob: -17.500036239624023
    6. '[t' → logprob: -17.500036239624023
    7. ')' → logprob: -19.125036239624023
    8. '*t' → logprob: -19.375036239624023
    9. '(' → logprob: -19.500036239624023
    10. '`t' → logprob: -20.875036239624023

Token 348: '"' (ID: 1)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.07670801132917404
    2. '"' → logprob: -3.0767080783843994
    3. '")' → logprob: -4.20170783996582
    4. '(t' → logprob: -4.82670783996582
    5. ' t' → logprob: -5.57670783996582
    6. '[t' → logprob: -7.95170783996582
    7. ')t' → logprob: -7.95170783996582
    8. '"+' → logprob: -9.07670783996582
    9. '",' → logprob: -10.07670783996582
    10. '`t' → logprob: -11.07670783996582

Token 349: ' if' (ID: 538)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.13191978633403778
    2. '(t' → logprob: -2.1319198608398438
    3. ' t' → logprob: -5.506919860839844
    4. '[t' → logprob: -8.506919860839844
    5. '	t' → logprob: -8.631919860839844
    6. ')t' → logprob: -8.756919860839844
    7. '   ' → logprob: -9.131919860839844
    8. '+t' → logprob: -9.881919860839844
    9. ',t' → logprob: -10.256919860839844
    10. 'x' → logprob: -10.256919860839844

Token 350: ' i' (ID: 575)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10149507224559784
    2. 'c' → logprob: -2.3514950275421143
    3. 'cell' → logprob: -7.601495265960693
    4. 'i' → logprob: -8.476494789123535
    5. ' x' → logprob: -8.726494789123535
    6. ' c' → logprob: -9.101494789123535
    7. 'e' → logprob: -9.351494789123535
    8. 'q' → logprob: -9.351494789123535
    9. 'a' → logprob: -10.601494789123535
    10. '_' → logprob: -10.601494789123535

Token 351: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0010017282329499722
    2. ' ==' → logprob: -7.376001834869385
    3. 'i' → logprob: -8.501001358032227
    4. '=' → logprob: -9.251001358032227
    5. 't' → logprob: -10.376001358032227
    6. ' i' → logprob: -11.376001358032227
    7. 'x' → logprob: -11.501001358032227
    8. '[i' → logprob: -11.626001358032227
    9. 'else' → logprob: -12.126001358032227
    10. '!=' → logprob: -13.251001358032227

Token 352: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1851990520954132
    2. ''.' → logprob: -2.685199022293091
    3. '"."' → logprob: -2.685199022293091
    4. ''' → logprob: -4.18519926071167
    5. '".' → logprob: -4.68519926071167
    6. '.' → logprob: -5.31019926071167
    7. 'Q' → logprob: -7.18519926071167
    8. ' "' → logprob: -7.56019926071167
    9. '0' → logprob: -7.81019926071167
    10. ' ' → logprob: -7.93519926071167

Token 353: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.05908471345901489
    2. '.' → logprob: -3.30908465385437
    3. '"' → logprob: -4.059084892272949
    4. '"."' → logprob: -5.934084892272949
    5. '.Q' → logprob: -8.05908489227295
    6. '".' → logprob: -8.43408489227295
    7. '."' → logprob: -8.55908489227295
    8. ' Q' → logprob: -9.68408489227295
    9. ''.' → logprob: -10.30908489227295
    10. ''' → logprob: -10.43408489227295

Token 354: '"' (ID: 1)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.47502806782722473
    2. ' else' → logprob: -0.9750280380249023
    3. '.' → logprob: -7.225028038024902
    4. 'Q' → logprob: -8.975028038024902
    5. '   ' → logprob: -10.475028038024902
    6. ' ' → logprob: -10.975028038024902
    7. '.Q' → logprob: -11.225028038024902
    8. '    ' → logprob: -11.475028038024902
    9. '  ' → logprob: -12.100028038024902
    10. '	else' → logprob: -12.225028038024902

Token 355: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.07889319956302643
    2. ' else' → logprob: -2.5788931846618652
    3. '	else' → logprob: -13.828893661499023
    4. ' ' → logprob: -14.078893661499023
    5. 'i' → logprob: -14.953893661499023
    6. 'Q' → logprob: -15.078893661499023
    7. '
' → logprob: -15.328893661499023
    8. '   ' → logprob: -15.703893661499023
    9. 'or' → logprob: -15.828893661499023
    10. '    ' → logprob: -16.078893661499023

Token 356: ' "."' (ID: 50107)
  Prédit: '"."'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"."' → logprob: -0.025945845991373062
    2. '".' → logprob: -4.025945663452148
    3. '.' → logprob: -5.525945663452148
    4. ''.' → logprob: -5.775945663452148
    5. ' "."' → logprob: -7.900945663452148
    6. '"' → logprob: -8.525945663452148
    7. 'i' → logprob: -10.775945663452148
    8. '   ' → logprob: -10.775945663452148
    9. ' ' → logprob: -11.025945663452148
    10. '.)' → logprob: -11.775945663452148

Token 357: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6072828769683838
    2. 'for' → logprob: -0.8572828769683838
    3. 'i' → logprob: -3.857282876968384
    4. ')' → logprob: -5.357282638549805
    5. ' i' → logprob: -5.357282638549805
    6. '[i' → logprob: -8.857282638549805
    7. '(i' → logprob: -9.482282638549805
    8. ' ' → logprob: -10.107282638549805
    9. '.' → logprob: -11.732282638549805
    10. '
' → logprob: -11.982282638549805

Token 358: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008729918859899044
    2. ' i' → logprob: -4.758729934692383
    3. 't' → logprob: -9.133729934692383
    4. ' t' → logprob: -11.883729934692383
    5. ' ' → logprob: -15.258729934692383
    6. '  ' → logprob: -16.508729934692383
    7. '   ' → logprob: -16.633729934692383
    8. ' in' → logprob: -17.508729934692383
    9. 'x' → logprob: -18.008729934692383
    10. 'in' → logprob: -18.508729934692383

Token 359: ' in' (ID: 306)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18260981142520905
    2. ' in' → logprob: -2.307609796524048
    3. ' i' → logprob: -3.057609796524048
    4. 't' → logprob: -4.432610034942627
    5. 'in' → logprob: -4.932610034942627
    6. ' t' → logprob: -6.682610034942627
    7. 'range' → logprob: -10.307609558105469
    8. ' ' → logprob: -11.057609558105469
    9. '  ' → logprob: -12.432609558105469
    10. ' range' → logprob: -12.557609558105469

Token 360: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0004306692280806601
    2. ' t' → logprob: -7.750430583953857
    3. '	t' → logprob: -18.250431060791016
    4. 'range' → logprob: -18.625431060791016
    5. ' ' → logprob: -18.750431060791016
    6. ')t' → logprob: -19.375431060791016
    7. '   ' → logprob: -19.625431060791016
    8. '`t' → logprob: -19.750431060791016
    9. '  ' → logprob: -21.375431060791016
    10. '[t' → logprob: -21.875431060791016

Token 361: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -6.539801688631997e-05
    2. ')' → logprob: -9.750065803527832
    3. '))
' → logprob: -12.375065803527832
    4. '"))' → logprob: -13.500065803527832
    5. ')))' → logprob: -14.125065803527832
    6. ' ))' → logprob: -15.000065803527832
    7. ''))' → logprob: -16.625064849853516
    8. '   ' → logprob: -16.875064849853516
    9. '()))' → logprob: -17.000064849853516
    10. ' ' → logprob: -17.125064849853516


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 359
Tokens correctement prédits (1ère position, stricte): 129
Tokens correctement prédits (1ère position, avec adaptation): 135
Tokens correctement prédits (top 10): 287
Précision stricte (1ère position): 35.93%
Précision adaptée (1ère position): 37.60%
Précision (top 10): 79.94%
================================================================================
