================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline

N = int(input())
btree = list(map(int, input().split()))

for i in range(1, N + 1):
    result = ""
    result += "node {0}: key = {1}, ".format(i, btree[i - 1])
    if i // 2 > 0:
        result += "parent key = {0}, ".format(btree[(i // 2) - 1])
    if i * 2 <= N:
        result += "left key = {0}, ".format(btree[i * 2 - 1])
    if i * 2 + 1 <= N:
        result += "right key = {0}, ".format(btree[i * 2])

    print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3441300094127655
    2. '.' → logprob: -1.594130039215088
    3. '<|end|>' → logprob: -2.969130039215088
    4. '\' → logprob: -4.469130039215088
    5. 'import' → logprob: -5.094130039215088
    6. 'newline' → logprob: -5.094130039215088
    7. '' → logprob: -5.844130039215088
    8. '<|end|>' → logprob: -5.969130039215088
    9. '\r' → logprob: -6.094130039215088
    10. '
' → logprob: -6.344130039215088

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0056168390437960625
    2. '.' → logprob: -5.255616664886475
    3. ' (' → logprob: -9.255617141723633
    4. '(
' → logprob: -9.380617141723633
    5. ')' → logprob: -9.755617141723633
    6. '()' → logprob: -10.005617141723633
    7. '[' → logprob: -11.005617141723633
    8. '('' → logprob: -11.130617141723633
    9. ' ' → logprob: -11.630617141723633
    10. '=' → logprob: -11.755617141723633

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.014413704164326191
    2. 'sys' → logprob: -4.264413833618164
    3. ' input' → logprob: -8.514413833618164
    4. 'input' → logprob: -10.389413833618164
    5. ' ' → logprob: -12.014413833618164
    6. '=sys' → logprob: -12.139413833618164
    7. '	sys' → logprob: -12.389413833618164
    8. '(sys' → logprob: -12.889413833618164
    9. ' system' → logprob: -14.514413833618164
    10. ' lambda' → logprob: -16.514413833618164

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0013680962147191167
    2. ' .' → logprob: -7.376368045806885
    3. '.stdin' → logprob: -7.751368045806885
    4. '.import' → logprob: -9.251368522644043
    5. '.readline' → logprob: -9.501368522644043
    6. '.
' → logprob: -10.126368522644043
    7. '.argv' → logprob: -10.376368522644043
    8. '.stdout' → logprob: -11.501368522644043
    9. '.input' → logprob: -11.501368522644043
    10. '.exit' → logprob: -12.001368522644043

Token 7: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.3585807979106903
    2. '.' → logprob: -1.2335808277130127
    3. '.read' → logprob: -4.608580589294434
    4. '.readlines' → logprob: -9.733580589294434
    5. '```' → logprob: -10.733580589294434
    6. '.Read' → logprob: -11.483580589294434
    7. 'read' → logprob: -12.358580589294434
    8. ' .' → logprob: -12.983580589294434
    9. '().' → logprob: -12.983580589294434
    10. '.write' → logprob: -13.233580589294434

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06234453618526459
    2. '(' → logprob: -3.062344551086426
    3. '()
' → logprob: -5.187344551086426
    4. '
' → logprob: -5.687344551086426
    5. '(
' → logprob: -6.062344551086426
    6. '\n' → logprob: -7.187344551086426
    7. '().' → logprob: -7.812344551086426
    8. '()\' → logprob: -7.937344551086426
    9. '\' → logprob: -8.187344551086426
    10. '()

' → logprob: -8.312344551086426

Token 9: 'N' (ID: 45)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18130169808864594
    2. '(' → logprob: -1.8063017129898071
    3. '().' → logprob: -6.806301593780518
    4. '()
' → logprob: -8.806302070617676
    5. '(
' → logprob: -10.056302070617676
    6. '()

' → logprob: -10.306302070617676
    7. ')' → logprob: -10.431302070617676
    8. '#' → logprob: -10.431302070617676
    9. 'def' → logprob: -10.681302070617676
    10. 'a' → logprob: -10.681302070617676

Token 10: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8452599048614502
    2. ')' → logprob: -1.5952599048614502
    3. ' =' → logprob: -1.8452599048614502
    4. '=' → logprob: -1.8452599048614502
    5. '[' → logprob: -4.470259666442871
    6. '>' → logprob: -4.970259666442871
    7. ' )' → logprob: -5.095259666442871
    8. '.' → logprob: -5.345259666442871
    9. '<|end|>' → logprob: -5.595259666442871
    10. '+' → logprob: -5.970259666442871

Token 11: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.04860372841358185
    2. 'int' → logprob: -3.0486037731170654
    3. ' ' → logprob: -11.298604011535645
    4. '=int' → logprob: -13.548604011535645
    5. '(int' → logprob: -13.923604011535645
    6. ' input' → logprob: -14.423604011535645
    7. '10' → logprob: -14.548604011535645
    8. '<int' → logprob: -15.298604011535645
    9. 'input' → logprob: -15.923604011535645
    10. '0' → logprob: -16.548603057861328

Token 12: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015610468108206987
    2. '(input' → logprob: -6.751561164855957
    3. '(N' → logprob: -8.626561164855957
    4. '('' → logprob: -9.251561164855957
    5. ' (' → logprob: -9.876561164855957
    6. '()' → logprob: -10.001561164855957
    7. '(`' → logprob: -12.501561164855957
    8. '(sys' → logprob: -12.751561164855957
    9. '(
' → logprob: -13.001561164855957
    10. '("("' → logprob: -13.876561164855957

Token 13: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4129841923713684
    2. ')' → logprob: -1.1629841327667236
    3. '()' → logprob: -3.6629841327667236
    4. '(' → logprob: -9.662983894348145
    5. '))' → logprob: -11.037983894348145
    6. '())
' → logprob: -11.537983894348145
    7. ' ())' → logprob: -12.162983894348145
    8. '`)' → logprob: -12.287983894348145
    9. '()))' → logprob: -12.412983894348145
    10. '().' → logprob: -12.787983894348145

Token 14: 'bt' (ID: 16051)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.9355887174606323
    2. 'for' → logprob: -0.9355887174606323
    3. 'a' → logprob: -3.560588836669922
    4. 'result' → logprob: -3.685588836669922
    5. '\n' → logprob: -3.685588836669922
    6. 'arr' → logprob: -4.060588836669922
    7. ')' → logprob: -4.060588836669922
    8. 'if' → logprob: -4.310588836669922
    9. 'array' → logprob: -4.435588836669922
    10. '\' → logprob: -4.810588836669922

Token 15: 'ree' (ID: 908)
  Prédit: 'ree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ree' → logprob: -0.15820330381393433
    2. 'r' → logprob: -2.783203363418579
    3. 's' → logprob: -2.908203363418579
    4. 'rees' → logprob: -4.408203125
    5. ' =' → logprob: -5.158203125
    6. '=' → logprob: -5.533203125
    7. '[' → logprob: -6.283203125
    8. '[]' → logprob: -6.783203125
    9. '.insert' → logprob: -7.408203125
    10. 'e' → logprob: -7.533203125

Token 16: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2270536720752716
    2. '[' → logprob: -1.8520536422729492
    3. ' =' → logprob: -3.977053642272949
    4. '=' → logprob: -4.352053642272949
    5. '_' → logprob: -4.852053642272949
    6. 's' → logprob: -6.477053642272949
    7. '[]' → logprob: -6.477053642272949
    8. ' .' → logprob: -7.227053642272949
    9. ')' → logprob: -7.977053642272949
    10. '(' → logprob: -7.977053642272949

Token 17: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.23280566930770874
    2. '{}' → logprob: -2.2328057289123535
    3. ' []' → logprob: -2.9828057289123535
    4. '[' → logprob: -3.1078057289123535
    5. ' [' → logprob: -5.9828057289123535
    6. ' {}' → logprob: -6.1078057289123535
    7. 'dict' → logprob: -9.232805252075195
    8. '[list' → logprob: -9.357805252075195
    9. 'list' → logprob: -10.107805252075195
    10. ' [[]' → logprob: -10.607805252075195

Token 18: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0320991650223732
    2. '()' → logprob: -3.5320992469787598
    3. '(range' → logprob: -6.53209924697876
    4. '([' → logprob: -8.407098770141602
    5. '(int' → logprob: -8.657098770141602
    6. '((' → logprob: -9.157098770141602
    7. '([]' → logprob: -9.532098770141602
    8. '(()' → logprob: -9.532098770141602
    9. '(input' → logprob: -10.407098770141602
    10. '(data' → logprob: -10.782098770141602

Token 19: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.2001650482416153
    2. '(' → logprob: -1.825165033340454
    3. '(lambda' → logprob: -4.075165271759033
    4. '(str' → logprob: -5.950165271759033
    5. '(input' → logprob: -8.950164794921875
    6. '[int' → logprob: -9.200164794921875
    7. 'int' → logprob: -9.325164794921875
    8. ')' → logprob: -9.825164794921875
    9. '(eval' → logprob: -9.950164794921875
    10. '<|end|>' → logprob: -9.950164794921875

Token 20: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.03189966082572937
    2. '(' → logprob: -3.9068996906280518
    3. ',input' → logprob: -4.781899452209473
    4. ',' → logprob: -6.531899452209473
    5. ')' → logprob: -7.906899452209473
    6. 'input' → logprob: -8.406899452209473
    7. '(int' → logprob: -8.656899452209473
    8. '<|end|>' → logprob: -9.156899452209473
    9. '(sys' → logprob: -9.406899452209473
    10. '(eval' → logprob: -9.656899452209473

Token 21: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.002188329817727208
    2. ' input' → logprob: -6.127188205718994
    3. '(input' → logprob: -13.252188682556152
    4. 'lambda' → logprob: -14.752188682556152
    5. 'sys' → logprob: -15.252188682556152
    6. ',input' → logprob: -15.752188682556152
    7. ')' → logprob: -16.252187728881836
    8. 'in' → logprob: -16.377187728881836
    9. '<input' → logprob: -16.377187728881836
    10. ' ' → logprob: -16.377187728881836

Token 22: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.157039049663581e-05
    2. '()' → logprob: -10.000051498413086
    3. '()))' → logprob: -12.375051498413086
    4. '())' → logprob: -13.875051498413086
    5. '()));' → logprob: -14.625051498413086
    6. '())))' → logprob: -14.875051498413086
    7. ' ().' → logprob: -17.000051498413086
    8. ')' → logprob: -17.375051498413086
    9. '()).' → logprob: -18.375051498413086
    10. '(' → logprob: -18.375051498413086

Token 23: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.011381899937987328
    2. 'strip' → logprob: -4.511382102966309
    3. 'rstrip' → logprob: -8.011382102966309
    4. ' split' → logprob: -13.136382102966309
    5. '(split' → logprob: -15.386382102966309
    6. 'spl' → logprob: -16.386381149291992
    7. 'rs' → logprob: -16.761381149291992
    8. ' strip' → logprob: -17.261381149291992
    9. ')' → logprob: -17.261381149291992
    10. '.split' → logprob: -18.261381149291992

Token 24: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.6440401077270508
    2. '))' → logprob: -1.0190401077270508
    3. ')' → logprob: -2.769040107727051
    4. '())' → logprob: -3.269040107727051
    5. '(' → logprob: -5.269040107727051
    6. ')))' → logprob: -5.644040107727051
    7. '()' → logprob: -5.644040107727051
    8. '())))' → logprob: -7.269040107727051
    9. '),' → logprob: -10.51904010772705
    10. '(),' → logprob: -10.64404010772705

Token 25: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0118358135223389
    2. 'dp' → logprob: -1.0118358135223389
    3. 'bt' → logprob: -3.136835813522339
    4. 'def' → logprob: -3.136835813522339
    5. 'depth' → logprob: -3.261835813522339
    6. 'sorted' → logprob: -3.636835813522339
    7. 'tree' → logprob: -4.261836051940918
    8. 'stack' → logprob: -4.261836051940918
    9. 'in' → logprob: -4.386836051940918
    10. 'result' → logprob: -4.636836051940918

Token 26: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2931007146835327
    2. ' ' → logprob: -1.4181007146835327
    3. ' node' → logprob: -4.543100833892822
    4. '  ' → logprob: -7.668100833892822
    5. ' _' → logprob: -8.043100357055664
    6. ' value' → logprob: -8.918100357055664
    7. 'i' → logprob: -9.668100357055664
    8. ' x' → logprob: -9.793100357055664
    9. ' n' → logprob: -9.918100357055664
    10. ' v' → logprob: -10.543100357055664

Token 27: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07340603321790695
    2. 'in' → logprob: -2.6984059810638428
    3. ' ' → logprob: -6.073406219482422
    4. 'n' → logprob: -6.948406219482422
    5. '  ' → logprob: -9.198406219482422
    6. ' n' → logprob: -10.198406219482422
    7. '	in' → logprob: -10.948406219482422
    8. ',' → logprob: -11.823406219482422
    9. ' i' → logprob: -12.323406219482422
    10. '   ' → logprob: -12.698406219482422

Token 28: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.08897501975297928
    2. 'range' → logprob: -2.463974952697754
    3. ' ' → logprob: -11.088974952697754
    4. ' b' → logprob: -11.963974952697754
    5. 'bt' → logprob: -12.838974952697754
    6. ' bt' → logprob: -13.463974952697754
    7. ' xrange' → logprob: -13.463974952697754
    8. '	range' → logprob: -13.463974952697754
    9. '(range' → logprob: -13.713974952697754
    10. 'b' → logprob: -13.838974952697754

Token 29: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04601160064339638
    2. '(len' → logprob: -3.7960116863250732
    3. '(N' → logprob: -3.7960116863250732
    4. '(n' → logprob: -10.171011924743652
    5. ' (' → logprob: -12.921011924743652
    6. '(length' → logprob: -13.421011924743652
    7. '(
' → logprob: -13.796011924743652
    8. '((' → logprob: -14.171011924743652
    9. '(I' → logprob: -14.296011924743652
    10. '(B' → logprob: -14.546011924743652

Token 30: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.011116082780063152
    2. 'len' → logprob: -5.511116027832031
    3. ' N' → logprob: -5.636116027832031
    4. '1' → logprob: -5.761116027832031
    5. '2' → logprob: -8.761116027832031
    6. ' len' → logprob: -9.886116027832031
    7. ' ' → logprob: -10.136116027832031
    8. '(N' → logprob: -11.136116027832031
    9. '(' → logprob: -11.511116027832031
    10. 'n' → logprob: -11.886116027832031

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04390955716371536
    2. ' ,' → logprob: -3.1689095497131348
    3. ',len' → logprob: -7.543909549713135
    4. ' ' → logprob: -9.168910026550293
    5. ',N' → logprob: -9.168910026550293
    6. ' len' → logprob: -10.543910026550293
    7. '+' → logprob: -10.668910026550293
    8. ' N' → logprob: -10.668910026550293
    9. ' <' → logprob: -10.793910026550293
    10. '<' → logprob: -11.043910026550293

Token 32: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.024236751720309258
    2. ' N' → logprob: -3.7742366790771484
    3. 'len' → logprob: -7.024236679077148
    4. ' len' → logprob: -9.274236679077148
    5. ' ' → logprob: -12.524236679077148
    6. '1' → logprob: -14.274236679077148
    7. '	N' → logprob: -14.899236679077148
    8. '7' → logprob: -15.024236679077148
    9. '(N' → logprob: -15.024236679077148
    10. '2' → logprob: -15.524236679077148

Token 33: ' +' (ID: 659)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0016980338841676712
    2. ' ):' → logprob: -6.751698017120361
    3. '+' → logprob: -7.876698017120361
    4. ')' → logprob: -9.25169849395752
    5. ':' → logprob: -11.25169849395752
    6. '*' → logprob: -11.75169849395752
    7. ' +' → logprob: -11.87669849395752
    8. ',' → logprob: -12.25169849395752
    9. '**' → logprob: -12.25169849395752
    10. '():' → logprob: -12.75169849395752

Token 34: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011152983643114567
    2. ' ' → logprob: -9.12511157989502
    3. '2' → logprob: -12.87511157989502
    4. '   ' → logprob: -17.250110626220703
    5. ')' → logprob: -17.750110626220703
    6. '  ' → logprob: -18.125110626220703
    7. '```' → logprob: -19.125110626220703
    8. '-' → logprob: -19.812610626220703
    9. '１' → logprob: -19.812610626220703
    10. '(' → logprob: -19.875110626220703

Token 35: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.500004768371582
    3. '2' → logprob: -13.750004768371582
    4. ')' → logprob: -17.2500057220459
    5. '(' → logprob: -18.3750057220459
    6. '```' → logprob: -18.3750057220459
    7. '   ' → logprob: -18.6250057220459
    8. '):' → logprob: -18.6250057220459
    9. '-' → logprob: -18.8750057220459
    10. '``' → logprob: -19.7500057220459

Token 36: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16576139628887177
    2. ')' → logprob: -2.1657614707946777
    3. ':' → logprob: -3.2907614707946777
    4. ' ):' → logprob: -7.665761470794678
    5. ':)' → logprob: -8.54076099395752
    6. ' )' → logprob: -9.04076099395752
    7. ' :' → logprob: -10.54076099395752
    8. '):
' → logprob: -11.54076099395752
    9. '[' → logprob: -11.66576099395752
    10. ':**' → logprob: -11.79076099395752

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1937425136566162
    2. ' ' → logprob: -1.4437425136566162
    3. ' if' → logprob: -1.4437425136566162
    4. '    ' → logprob: -1.9437425136566162
    5. ':' → logprob: -3.693742513656616
    6. 'if' → logprob: -3.943742513656616
    7. '<|end|>' → logprob: -3.943742513656616
    8. '[' → logprob: -6.318742752075195
    9. ' 
' → logprob: -6.318742752075195
    10. ' :' → logprob: -6.443742752075195

Token 38: ' result' (ID: 1534)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12173014879226685
    2. 'if' → logprob: -2.621730089187622
    3. 'print' → logprob: -4.121730327606201
    4. ' print' → logprob: -4.371730327606201
    5. '   ' → logprob: -5.371730327606201
    6. ' bt' → logprob: -6.121730327606201
    7. '    ' → logprob: -6.246730327606201
    8. ' ' → logprob: -7.246730327606201
    9. 'idx' → logprob: -7.746730327606201
    10. 'bt' → logprob: -7.746730327606201

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05086498335003853
    2. ' +=' → logprob: -4.050865173339844
    3. '[' → logprob: -4.300865173339844
    4. ' ' → logprob: -4.550865173339844
    5. '=' → logprob: -5.050865173339844
    6. ' *=' → logprob: -7.800865173339844
    7. ',' → logprob: -8.300865173339844
    8. '[i' → logprob: -8.425865173339844
    9. '.' → logprob: -8.675865173339844
    10. '[:]' → logprob: -9.550865173339844

Token 40: ' ""
' (ID: 18061)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5121973156929016
    2. 'bt' → logprob: -1.2621972560882568
    3. '0' → logprob: -3.262197256088257
    4. ' i' → logprob: -3.387197256088257
    5. ' bt' → logprob: -4.262197494506836
    6. ' ' → logprob: -4.762197494506836
    7. 'b' → logprob: -5.262197494506836
    8. 'i' → logprob: -5.512197494506836
    9. '"' → logprob: -6.387197494506836
    10. 'sum' → logprob: -6.512197494506836

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012392264790832996
    2. ' if' → logprob: -5.137392044067383
    3. 'if' → logprob: -6.137392044067383
    4. ' ' → logprob: -6.512392044067383
    5. '    ' → logprob: -7.137392044067383
    6. '<|end|>' → logprob: -7.387392044067383
    7. '[' → logprob: -7.887392044067383
    8. '       ' → logprob: -8.012392044067383
    9. '  ' → logprob: -8.887392044067383
    10. '    
' → logprob: -9.512392044067383

Token 42: ' result' (ID: 1534)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12241270393133163
    2. 'for' → logprob: -2.37241268157959
    3. ' if' → logprob: -4.24741268157959
    4. ' for' → logprob: -5.62241268157959
    5. '   ' → logprob: -6.37241268157959
    6. 'print' → logprob: -7.37241268157959
    7. 'i' → logprob: -7.62241268157959
    8. 'result' (adapté à ' result') → logprob: -7.62241268157959
    9. ' ' → logprob: -7.74741268157959
    10. '    ' → logprob: -9.87241268157959

Token 43: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3894347846508026
    2. '+=' → logprob: -1.139434814453125
    3. '+' → logprob: -6.389434814453125
    4. '+='' → logprob: -8.264434814453125
    5. '+="' → logprob: -8.514434814453125
    6. '=' → logprob: -9.014434814453125
    7. ' =' → logprob: -9.139434814453125
    8. ' +' → logprob: -9.639434814453125
    9. '+=(' → logprob: -10.264434814453125
    10. ' ' → logprob: -10.764434814453125

Token 44: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3090048134326935
    2. 'str' → logprob: -1.684004783630371
    3. ' "' → logprob: -3.309004783630371
    4. ' str' → logprob: -3.809004783630371
    5. ''' → logprob: -5.309004783630371
    6. 'f' → logprob: -5.684004783630371
    7. '"*' → logprob: -5.934004783630371
    8. ' f' → logprob: -6.059004783630371
    9. 'bt' → logprob: -6.309004783630371
    10. 'chr' → logprob: -6.684004783630371

Token 45: 'node' (ID: 7005)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.9063079357147217
    2. '*' → logprob: -1.1563079357147217
    3. '(' → logprob: -1.9063079357147217
    4. '("' → logprob: -3.6563079357147217
    5. ' "' → logprob: -3.9063079357147217
    6. '"*' → logprob: -3.9063079357147217
    7. '*"' → logprob: -4.031308174133301
    8. ' ' → logprob: -4.406308174133301
    9. '[' → logprob: -4.781308174133301
    10. '-' → logprob: -5.531308174133301

Token 46: ' {' (ID: 354)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.6981481909751892
    2. ' ' → logprob: -1.448148250579834
    3. 's' → logprob: -2.698148250579834
    4. ' (' → logprob: -3.073148250579834
    5. '[' → logprob: -3.323148250579834
    6. ' i' → logprob: -3.323148250579834
    7. ' =' → logprob: -4.198148250579834
    8. ' {' → logprob: -4.823148250579834
    9. '(' → logprob: -4.948148250579834
    10. ' [' → logprob: -5.073148250579834

Token 47: '0' (ID: 15)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' "' → logprob: -1.0723052024841309
    2. '{' → logprob: -1.5723052024841309
    3. '"' → logprob: -2.072305202484131
    4. '{}' → logprob: -2.197305202484131
    5. '{i' → logprob: -3.322305202484131
    6. ' {' → logprob: -3.322305202484131
    7. ' {}' → logprob: -3.697305202484131
    8. 's' → logprob: -4.072305202484131
    9. '}' → logprob: -4.322305202484131
    10. ' {}".' → logprob: -4.447305202484131

Token 48: '}:' (ID: 33132)
  Prédit: '}".'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}".' → logprob: -0.14651300013065338
    2. '}' → logprob: -2.271512985229492
    3. '}.' → logprob: -4.396512985229492
    4. '}:' → logprob: -4.896512985229492
    5. '[i' → logprob: -4.896512985229492
    6. '}"' → logprob: -5.646512985229492
    7. ':' → logprob: -7.646512985229492
    8. '".' → logprob: -7.646512985229492
    9. '[' → logprob: -7.896512985229492
    10. '}'.' → logprob: -8.396512985229492

Token 49: ' key' (ID: 2140)
  Prédit: ' {'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.3316766917705536
    2. ' "' → logprob: -1.831676721572876
    3. ' {}' → logprob: -3.331676721572876
    4. ' {}".' → logprob: -3.581676721572876
    5. ' i' → logprob: -4.081676483154297
    6. '{' → logprob: -4.581676483154297
    7. ' ".' → logprob: -4.956676483154297
    8. ' f' → logprob: -5.956676483154297
    9. ' ' → logprob: -6.206676483154297
    10. ' "{' → logprob: -6.331676483154297

Token 50: ' =' (ID: 314)
  Prédit: ' {'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.17080293595790863
    2. ' =' → logprob: -1.9208029508590698
    3. '{' → logprob: -5.295803070068359
    4. '=' → logprob: -5.545803070068359
    5. ' ' → logprob: -7.545803070068359
    6. '={' → logprob: -8.42080307006836
    7. ' ={' → logprob: -8.79580307006836
    8. '[' → logprob: -8.92080307006836
    9. 's' → logprob: -9.17080307006836
    10. ':' → logprob: -9.42080307006836

Token 51: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.34496310353279114
    2. ' {}' → logprob: -1.8449630737304688
    3. '{' → logprob: -3.2199630737304688
    4. '{i' → logprob: -3.4699630737304688
    5. '{}' → logprob: -3.7199630737304688
    6. ' {}".' → logprob: -4.094963073730469
    7. 'bt' → logprob: -4.719963073730469
    8. ' ' → logprob: -4.969963073730469
    9. ' b' → logprob: -6.844963073730469
    10. ' bt' → logprob: -6.969963073730469

Token 52: '1' (ID: 16)
  Prédit: 'bt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bt' → logprob: -0.013690105639398098
    2. '}' → logprob: -4.513689994812012
    3. '}{' → logprob: -6.263689994812012
    4. 'i' → logprob: -7.638689994812012
    5. '}".' → logprob: -9.638689994812012
    6. '{' → logprob: -10.138689994812012
    7. '0' → logprob: -10.263689994812012
    8. 'b' → logprob: -10.388689994812012
    9. '}"' → logprob: -10.388689994812012
    10. ' bt' → logprob: -11.888689994812012

Token 53: '},' (ID: 4180)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.051635000854730606
    2. 'bt' → logprob: -3.6766350269317627
    3. '[' → logprob: -5.051634788513184
    4. '.format' → logprob: -5.551634788513184
    5. '".' → logprob: -5.551634788513184
    6. '{' → logprob: -6.051634788513184
    7. '.bt' → logprob: -6.551634788513184
    8. 'format' → logprob: -6.801634788513184
    9. '}' → logprob: -7.051634788513184
    10. '"' → logprob: -7.051634788513184

Token 54: ' ".' (ID: 11730)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.2470567375421524
    2. ' {' → logprob: -2.247056722640991
    3. ' i' → logprob: -3.122056722640991
    4. 'bt' → logprob: -3.622056722640991
    5. 'b' → logprob: -4.24705696105957
    6. ' bt' → logprob: -4.62205696105957
    7. ' key' → logprob: -4.87205696105957
    8. '{' → logprob: -5.62205696105957
    9. ' ' → logprob: -6.87205696105957
    10. ' parent' → logprob: -6.99705696105957

Token 55: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.6917334794998169
    2. 'i' → logprob: -1.566733479499817
    3. 'bt' → logprob: -1.816733479499817
    4. 'print' → logprob: -2.5667333602905273
    5. 'str' → logprob: -4.441733360290527
    6. 'f' → logprob: -4.566733360290527
    7. 'key' → logprob: -4.566733360290527
    8. '"' → logprob: -4.941733360290527
    9. 'result' → logprob: -5.816733360290527
    10. 'b' → logprob: -5.941733360290527

Token 56: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.02353079617023468
    2. 'i' → logprob: -3.7735307216644287
    3. '(' → logprob: -8.398530960083008
    4. '(bt' → logprob: -10.898530960083008
    5. 'bt' → logprob: -11.273530960083008
    6. ' i' → logprob: -11.773530960083008
    7. '(str' → logprob: -12.148530960083008
    8. '("' → logprob: -13.023530960083008
    9. '(b' → logprob: -13.148530960083008
    10. '{i' → logprob: -13.273530960083008

Token 57: ',' (ID: 11)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.1468573361635208
    2. 'bt' → logprob: -2.396857261657715
    3. 'b' → logprob: -3.146857261657715
    4. ' i' → logprob: -6.271857261657715
    5. 'i' → logprob: -8.146857261657715
    6. ' bt' → logprob: -8.646857261657715
    7. ' ' → logprob: -9.896857261657715
    8. 'result' → logprob: -11.084357261657715
    9. 'node' → logprob: -11.271857261657715
    10. '	b' → logprob: -11.334357261657715

Token 58: ' b' (ID: 287)
  Prédit: 'bt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bt' → logprob: -0.06308280676603317
    2. ' b' → logprob: -2.813082695007324
    3. 'b' → logprob: -7.063082695007324
    4. ' bt' → logprob: -8.438082695007324
    5. 'bst' → logprob: -11.688082695007324
    6. 'bit' → logprob: -12.438082695007324
    7. '	b' → logprob: -13.000582695007324
    8. '   ' → logprob: -13.063082695007324
    9. 'btc' → logprob: -13.063082695007324
    10. ' ' → logprob: -13.063082695007324

Token 59: 'tree' (ID: 19816)
  Prédit: 'tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -4.127333340875339e-06
    2. 'ree' → logprob: -12.875003814697266
    3. 't' → logprob: -13.875003814697266
    4. 'tre' → logprob: -15.250003814697266
    5. 'node' → logprob: -16.750003814697266
    6. 'Tree' → logprob: -16.875003814697266
    7. 'trees' → logprob: -17.500003814697266
    8. 'mtree' → logprob: -17.625003814697266
    9. 'tee' → logprob: -17.750003814697266
    10. '```' → logprob: -17.750003814697266

Token 60: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0031892398837953806
    2. '[' → logprob: -5.7531890869140625
    3. '[(' → logprob: -12.253189086914062
    4. '[
' → logprob: -13.003189086914062
    5. ' [' → logprob: -13.753189086914062
    6. '[-' → logprob: -14.378189086914062
    7. '-' → logprob: -14.753189086914062
    8. '   ' → logprob: -15.003189086914062
    9. 'i' → logprob: -15.378189086914062
    10. ' ' → logprob: -15.628189086914062

Token 61: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.030611826106905937
    2. '])' → logprob: -4.030611991882324
    3. ' -' → logprob: -4.530611991882324
    4. ']' → logprob: -7.030611991882324
    5. ')' → logprob: -7.655611991882324
    6. '[' → logprob: -9.030611991882324
    7. '1' → logprob: -9.530611991882324
    8. ' ' → logprob: -11.030611991882324
    9. '   ' → logprob: -11.780611991882324
    10. '0' → logprob: -12.405611991882324

Token 62: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2961512513575144e-05
    2. ' ' → logprob: -10.750022888183594
    3. '])' → logprob: -14.125022888183594
    4. '   ' → logprob: -15.250022888183594
    5. ']' → logprob: -15.500022888183594
    6. ')' → logprob: -15.750022888183594
    7. '2' → logprob: -17.125022888183594
    8. '  ' → logprob: -17.250022888183594
    9. '-' → logprob: -17.312522888183594
    10. '0' → logprob: -17.937522888183594

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.250005722045898
    3. ']' → logprob: -16.1875057220459
    4. ')' → logprob: -16.4375057220459
    5. '```' → logprob: -16.4375057220459
    6. '2' → logprob: -16.6875057220459
    7. '0' → logprob: -16.9375057220459
    8. '１' → logprob: -17.0000057220459
    9. '۱' → logprob: -17.3750057220459
    10. '' → logprob: -17.6250057220459

Token 64: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01471856888383627
    2. ',' → logprob: -4.514718532562256
    3. '),' → logprob: -6.389718532562256
    4. '")' → logprob: -6.639718532562256
    5. ' )' → logprob: -8.514719009399414
    6. '))' → logprob: -8.764719009399414
    7. ')")' → logprob: -9.264719009399414
    8. ')
' → logprob: -10.014719009399414
    9. ',)' → logprob: -10.014719009399414
    10. '')' → logprob: -10.639719009399414

Token 65: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3161957859992981
    2. ' if' → logprob: -1.3161957263946533
    3. 'try' → logprob: -7.691195964813232
    4. 'left' → logprob: -7.941195964813232
    5. '\n' → logprob: -8.191195487976074
    6. 'parent' → logprob: -8.441195487976074
    7. '"' → logprob: -8.566195487976074
    8. ' ' → logprob: -8.691195487976074
    9. ' left' → logprob: -8.941195487976074
    10. '"\' → logprob: -9.191195487976074

Token 66: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10975317656993866
    2. 'left' → logprob: -2.734753131866455
    3. 'parent' → logprob: -3.359753131866455
    4. 'try' → logprob: -6.734753131866455
    5. ' if' → logprob: -7.109753131866455
    6. 'children' → logprob: -7.234753131866455
    7. 'print' → logprob: -7.609753131866455
    8. 'l' → logprob: -8.484753608703613
    9. ' left' → logprob: -9.234753608703613
    10. 'child' → logprob: -9.234753608703613

Token 67: ' i' (ID: 575)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0385891199111938
    2. 'i' → logprob: -1.1635891199111938
    3. ' i' → logprob: -1.4135891199111938
    4. ' ' → logprob: -2.4135890007019043
    5. '(' → logprob: -8.288589477539062
    6. '(i' → logprob: -8.413589477539062
    7. ' (' → logprob: -8.788589477539062
    8. '   ' → logprob: -9.538589477539062
    9. '1' → logprob: -9.663589477539062
    10. '  ' → logprob: -9.788589477539062

Token 68: ' //' (ID: 602)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4903312623500824
    2. ' *' → logprob: -1.3653312921524048
    3. ' ==' → logprob: -2.9903311729431152
    4. ' !=' → logprob: -3.6153311729431152
    5. ' >' → logprob: -3.6153311729431152
    6. '==' → logprob: -4.615331172943115
    7. ' //' → logprob: -4.740331172943115
    8. '>' → logprob: -5.490331172943115
    9. '!=' → logprob: -5.990331172943115
    10. '//' → logprob: -6.740331172943115

Token 69: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0036173006519675255
    2. ' ' → logprob: -5.628617286682129
    3. '1' → logprob: -11.628617286682129
    4. '(' → logprob: -12.378617286682129
    5. '=' → logprob: -13.753617286682129
    6. '>' → logprob: -14.003617286682129
    7. '   ' → logprob: -14.878617286682129
    8. '200' → logprob: -15.128617286682129
    9. ' (' → logprob: -15.503617286682129
    10. '  ' → logprob: -15.628617286682129

Token 70: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.431207682704553e-05
    2. ' ' → logprob: -9.875054359436035
    3. '1' → logprob: -13.250054359436035
    4. '(' → logprob: -15.625054359436035
    5. '3' → logprob: -15.625054359436035
    6. '	' → logprob: -16.25005340576172
    7. '   ' → logprob: -16.50005340576172
    8. '```' → logprob: -16.62505340576172
    9. '２' → logprob: -16.87505340576172
    10. '4' → logprob: -17.00005340576172

Token 71: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.46733561158180237
    2. '>' → logprob: -1.21733558177948
    3. ' !=' → logprob: -3.2173357009887695
    4. '!=' → logprob: -3.7173357009887695
    5. ' >=' → logprob: -4.9673357009887695
    6. '>=' → logprob: -5.7173357009887695
    7. '==' → logprob: -6.7173357009887695
    8. ' ==' → logprob: -7.0923357009887695
    9. '0' → logprob: -8.46733570098877
    10. ' and' → logprob: -8.96733570098877

Token 72: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6346650123596191
    2. ' ' → logprob: -0.7596650123596191
    3. '=' → logprob: -6.259665012359619
    4. '>' → logprob: -9.759664535522461
    5. '1' → logprob: -10.509664535522461
    6. 'N' → logprob: -10.759664535522461
    7. '  ' → logprob: -10.759664535522461
    8. '   ' → logprob: -11.634664535522461
    9. ' N' → logprob: -12.634664535522461
    10. ' =' → logprob: -13.322164535522461

Token 73: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02218024805188179
    2. ' ' → logprob: -4.022180080413818
    3. '=' → logprob: -5.522180080413818
    4. '>' → logprob: -11.522180557250977
    5. '1' → logprob: -11.897180557250977
    6. 'N' → logprob: -12.397180557250977
    7. '   ' → logprob: -13.772180557250977
    8. '  ' → logprob: -14.209680557250977
    9. ' =' → logprob: -14.772180557250977
    10. ' N' → logprob: -15.334680557250977

Token 74: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.355541467666626
    2. ':' → logprob: -1.730541467666626
    3. ',' → logprob: -2.230541467666626
    4. 'and' → logprob: -4.980541229248047
    5. ':
' → logprob: -5.730541229248047
    6. '   ' → logprob: -5.855541229248047
    7. ' ,' → logprob: -7.730541229248047
    8. ' :' → logprob: -8.230541229248047
    9. ' ' → logprob: -8.480541229248047
    10. 'result' → logprob: -8.980541229248047

Token 75: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47806331515312195
    2. 'result' → logprob: -1.4780633449554443
    3. ' result' → logprob: -2.7280633449554443
    4. ' parent' → logprob: -3.2280633449554443
    5. 'parent' → logprob: -3.3530633449554443
    6. '<|end|>' → logprob: -5.353063106536865
    7. ' ' → logprob: -6.728063106536865
    8. '"' → logprob: -6.853063106536865
    9. ' continue' → logprob: -6.978063106536865
    10. '  ' → logprob: -7.728063106536865

Token 76: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.09740401059389114
    2. ' result' → logprob: -2.4724040031433105
    3. 'parent' → logprob: -5.5974040031433105
    4. '   ' → logprob: -5.8474040031433105
    5. ' parent' → logprob: -6.9724040031433105
    6. '"' → logprob: -8.847404479980469
    7. ' continue' → logprob: -9.097404479980469
    8. 'continue' → logprob: -9.222404479980469
    9. '       ' → logprob: -9.472404479980469
    10. ' ' → logprob: -9.722404479980469

Token 77: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6345541477203369
    2. '+=' → logprob: -0.7595541477203369
    3. '+="' → logprob: -6.759553909301758
    4. '+' → logprob: -8.259553909301758
    5. ' +' → logprob: -8.884553909301758
    6. '=' → logprob: -8.884553909301758
    7. '   ' → logprob: -9.259553909301758
    8. 'result' → logprob: -9.259553909301758
    9. '+='' → logprob: -11.134553909301758
    10. '    ' → logprob: -11.634553909301758

Token 78: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.003996242303401232
    2. ' "' → logprob: -5.7539963722229
    3. 'f' → logprob: -7.5039963722229
    4. ' ' → logprob: -9.628995895385742
    5. ''' → logprob: -10.128995895385742
    6. ' f' → logprob: -10.503995895385742
    7. '"value' → logprob: -10.753995895385742
    8. '"id' → logprob: -10.878995895385742
    9. '"name' → logprob: -11.253995895385742
    10. '"k' → logprob: -11.253995895385742

Token 79: 'parent' (ID: 4903)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3882412910461426
    2. 'parent' → logprob: -1.1382412910461426
    3. 'p' → logprob: -7.638241291046143
    4. ''' → logprob: -8.013240814208984
    5. 'f' → logprob: -8.763240814208984
    6. ' parent' → logprob: -9.513240814208984
    7. 'par' → logprob: -9.763240814208984
    8. ' "' → logprob: -10.388240814208984
    9. 'root' → logprob: -10.388240814208984
    10. ',parent' → logprob: -10.513240814208984

Token 80: ' key' (ID: 2140)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05494378134608269
    2. '=' → logprob: -2.929943799972534
    3. '"' → logprob: -10.054944038391113
    4. '{' → logprob: -12.429944038391113
    5. ' ' → logprob: -12.679944038391113
    6. ' is' → logprob: -13.304944038391113
    7. '＝' → logprob: -13.679944038391113
    8. '={' → logprob: -13.929944038391113
    9. ' ={' → logprob: -13.929944038391113
    10. 'e' → logprob: -14.054944038391113

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759711861610413
    2. '=' → logprob: -0.8259711861610413
    3. '"' → logprob: -10.825971603393555
    4. 's' → logprob: -12.825971603393555
    5. '={' → logprob: -12.825971603393555
    6. ' ' → logprob: -13.200971603393555
    7. '{' → logprob: -13.950971603393555
    8. '＝' → logprob: -13.950971603393555
    9. '="' → logprob: -14.450971603393555
    10. ' ={' → logprob: -14.700971603393555

Token 82: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.6966124773025513
    2. ' {' → logprob: -0.6966124773025513
    3. ' {}' → logprob: -6.946612358093262
    4. '{}' → logprob: -6.946612358093262
    5. 'bt' → logprob: -7.571612358093262
    6. '"' → logprob: -8.321612358093262
    7. ' bt' → logprob: -8.446612358093262
    8. ' {}".' → logprob: -8.821612358093262
    9. ' ' → logprob: -9.071612358093262
    10. ' b' → logprob: -9.571612358093262

Token 83: '0' (ID: 15)
  Prédit: 'bt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bt' → logprob: -0.6750486493110657
    2. '}' → logprob: -1.425048589706421
    3. '}".' → logprob: -1.800048589706421
    4. '0' → logprob: -2.675048589706421
    5. '1' → logprob: -4.425048828125
    6. '}{' → logprob: -6.425048828125
    7. '}"' → logprob: -7.050048828125
    8. '},"' → logprob: -7.550048828125
    9. '{' → logprob: -7.800048828125
    10. '{}".' → logprob: -8.925048828125

Token 84: '},' (ID: 4180)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24140244722366333
    2. '".' → logprob: -2.2414023876190186
    3. '{' → logprob: -3.3664023876190186
    4. '}".' → logprob: -3.7414023876190186
    5. 'bt' → logprob: -3.8664023876190186
    6. '",' → logprob: -5.116402626037598
    7. '(bt' → logprob: -5.491402626037598
    8. 'format' → logprob: -5.491402626037598
    9. '},' → logprob: -5.741402626037598
    10. '"' → logprob: -6.241402626037598

Token 85: ' ".' (ID: 11730)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.9281362891197205
    2. '".' → logprob: -1.5531363487243652
    3. ' ".' → logprob: -1.9281363487243652
    4. 'bt' → logprob: -2.1781363487243652
    5. 'format' → logprob: -2.9281363487243652
    6. 'b' → logprob: -3.4281363487243652
    7. ' bt' → logprob: -3.8031363487243652
    8. '"' → logprob: -4.928136348724365
    9. '{' → logprob: -5.178136348724365
    10. '{}".' → logprob: -5.928136348724365

Token 86: 'format' (ID: 4078)
  Prédit: 'bt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bt' → logprob: -0.28150612115859985
    2. 'format' → logprob: -1.406506061553955
    3. 'b' → logprob: -9.031506538391113
    4. '.format' → logprob: -9.781506538391113
    5. ' format' → logprob: -10.031506538391113
    6. ' b' → logprob: -10.281506538391113
    7. ' bt' → logprob: -10.406506538391113
    8. '```' → logprob: -11.406506538391113
    9. 'key' → logprob: -11.531506538391113
    10. 'form' → logprob: -12.156506538391113

Token 87: '(b' (ID: 3229)
  Prédit: 'bt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bt' → logprob: -0.008989517576992512
    2. 'b' → logprob: -5.008989334106445
    3. ' b' → logprob: -6.258989334106445
    4. ' bt' → logprob: -8.258989334106445
    5. '(b' → logprob: -9.633989334106445
    6. '(bt' → logprob: -11.008989334106445
    7. ' ' → logprob: -12.508989334106445
    8. '(' → logprob: -12.758989334106445
    9. '   ' → logprob: -12.883989334106445
    10. '	b' → logprob: -13.883989334106445

Token 88: 'tree' (ID: 19816)
  Prédit: 'tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -1.4378848391061183e-05
    2. 't' → logprob: -11.500014305114746
    3. 'ree' → logprob: -12.750014305114746
    4. 'Tree' → logprob: -14.750014305114746
    5. 'tre' → logprob: -15.125014305114746
    6. '```' → logprob: -16.625015258789062
    7. '_tree' → logprob: -16.750015258789062
    8. '(tree' → logprob: -16.750015258789062
    9. 'tee' → logprob: -16.875015258789062
    10. 'TREE' → logprob: -17.125015258789062

Token 89: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.28148454427719116
    2. '[i' → logprob: -1.406484603881836
    3. '[' → logprob: -8.281484603881836
    4. '[((' → logprob: -10.031484603881836
    5. '(i' → logprob: -11.281484603881836
    6. '[
' → logprob: -11.406484603881836
    7. '((' → logprob: -12.406484603881836
    8. '[int' → logprob: -12.406484603881836
    9. '   ' → logprob: -13.406484603881836
    10. 'i' → logprob: -13.906484603881836

Token 90: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07222618162631989
    2. '(i' → logprob: -2.6972262859344482
    3. ' i' → logprob: -6.322226047515869
    4. ' (' → logprob: -8.072226524353027
    5. '(' → logprob: -9.322226524353027
    6. '   ' → logprob: -10.322226524353027
    7. ' ' → logprob: -10.572226524353027
    8. '((' → logprob: -12.384726524353027
    9. 'int' → logprob: -12.822226524353027
    10. '[i' → logprob: -13.197226524353027

Token 91: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.023980386555194855
    2. ' //' → logprob: -3.7739803791046143
    3. '2' → logprob: -7.648980617523193
    4. ' ' → logprob: -8.523980140686035
    5. '   ' → logprob: -10.898980140686035
    6. '`' → logprob: -11.523980140686035
    7. '1' → logprob: -11.648980140686035
    8. '#' → logprob: -12.273980140686035
    9. '  ' → logprob: -13.023980140686035
    10. '    ' → logprob: -13.273980140686035

Token 92: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003723122412338853
    2. ' ' → logprob: -5.62872314453125
    3. '   ' → logprob: -9.75372314453125
    4. ')' → logprob: -11.00372314453125
    5. '1' → logprob: -11.50372314453125
    6. '    ' → logprob: -11.75372314453125
    7. '       ' → logprob: -12.00372314453125
    8. '```' → logprob: -12.00372314453125
    9. '<|end|>' → logprob: -12.37872314453125
    10. '  ' → logprob: -12.87872314453125

Token 93: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000287795381154865
    2. ' ' → logprob: -8.375288009643555
    3. '1' → logprob: -9.875288009643555
    4. '   ' → logprob: -12.375288009643555
    5. '  ' → logprob: -14.625288009643555
    6. '-' → logprob: -14.875288009643555
    7. '```' → logprob: -15.500288009643555
    8. '    ' → logprob: -16.687788009643555
    9. '       ' → logprob: -16.750288009643555
    10. '	' → logprob: -16.812788009643555

Token 94: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05725132301449776
    2. ' -' → logprob: -3.432251214981079
    3. '-' → logprob: -4.807251453399658
    4. ' )' → logprob: -4.932251453399658
    5. ')-' → logprob: -4.932251453399658
    6. ' ' → logprob: -7.807251453399658
    7. '1' → logprob: -9.0572509765625
    8. '   ' → logprob: -9.4322509765625
    9. '0' → logprob: -9.5572509765625
    10. '2' → logprob: -10.9322509765625

Token 95: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3900410532951355
    2. '-' → logprob: -1.1400411128997803
    3. ')' → logprob: -6.015040874481201
    4. ' ' → logprob: -8.14004135131836
    5. ']' → logprob: -9.01504135131836
    6. ')-' → logprob: -9.14004135131836
    7. '   ' → logprob: -9.26504135131836
    8. ']-' → logprob: -10.01504135131836
    9. '1' → logprob: -10.26504135131836
    10. '  ' → logprob: -11.76504135131836

Token 96: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003386806638445705
    2. ' ' → logprob: -8.000338554382324
    3. '<|end|>' → logprob: -13.000338554382324
    4. '   ' → logprob: -14.875338554382324
    5. '```' → logprob: -15.937838554382324
    6. '<|end|>' → logprob: -16.12533950805664
    7. ')' → logprob: -16.12533950805664
    8. '0' → logprob: -16.43783950805664
    9. '  ' → logprob: -17.37533950805664
    10. '    ' → logprob: -18.00033950805664

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.500004768371582
    3. '<|end|>' → logprob: -14.625004768371582
    4. '```' → logprob: -16.375003814697266
    5. ')' → logprob: -16.562503814697266
    6. '<|end|>' → logprob: -17.437503814697266
    7. '۱' → logprob: -18.125003814697266
    8. '   ' → logprob: -18.250003814697266
    9. '0' → logprob: -18.625003814697266
    10. '2' → logprob: -18.687503814697266

Token 98: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012149984249845147
    2. ')
' → logprob: -7.626214981079102
    3. '))' → logprob: -8.001214981079102
    4. '])' → logprob: -8.126214981079102
    5. '   ' → logprob: -10.251214981079102
    6. ' )' → logprob: -10.501214981079102
    7. ')])' → logprob: -11.376214981079102
    8. ')")' → logprob: -11.876214981079102
    9. '})' → logprob: -12.626214981079102
    10. '       ' → logprob: -12.751214981079102

Token 99: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17693829536437988
    2. 'else' → logprob: -2.80193829536438
    3. '   ' → logprob: -3.05193829536438
    4. '<|end|>' → logprob: -3.55193829536438
    5. ' if' → logprob: -3.80193829536438
    6. ' ' → logprob: -6.676938056945801
    7. ' else' → logprob: -6.926938056945801
    8. '```' → logprob: -8.0519380569458
    9. 'elif' → logprob: -8.5519380569458
    10. '  ' → logprob: -8.6769380569458

Token 100: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7015380263328552
    2. 'else' → logprob: -0.7015380263328552
    3. '<|end|>' → logprob: -5.7015380859375
    4. ' if' → logprob: -6.3265380859375
    5. '   ' → logprob: -6.4515380859375
    6. ' else' → logprob: -6.8265380859375
    7. ' ' → logprob: -8.7015380859375
    8. 'elif' → logprob: -8.9515380859375
    9. '```' → logprob: -9.5765380859375
    10. '	if' → logprob: -9.7015380859375

Token 101: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5960633754730225
    2. '2' → logprob: -0.9710633754730225
    3. ' i' → logprob: -2.9710633754730225
    4. ' ' → logprob: -4.721063613891602
    5. '(' → logprob: -5.471063613891602
    6. '(i' → logprob: -6.096063613891602
    7. ' (' → logprob: -6.221063613891602
    8. '   ' → logprob: -6.471063613891602
    9. '  ' → logprob: -9.596063613891602
    10. '3' → logprob: -9.971063613891602

Token 102: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6932047605514526
    2. ' *' → logprob: -0.6932047605514526
    3. ' ' → logprob: -10.443204879760742
    4. '1' → logprob: -11.443204879760742
    5. '   ' → logprob: -12.443204879760742
    6. '2' → logprob: -12.943204879760742
    7. ' <=' → logprob: -12.943204879760742
    8. '<=' → logprob: -13.193204879760742
    9. '    ' → logprob: -13.443204879760742
    10. ' <' → logprob: -14.443204879760742

Token 103: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07892382889986038
    2. ' ' → logprob: -2.5789239406585693
    3. '   ' → logprob: -11.578924179077148
    4. '(' → logprob: -12.703924179077148
    5. '           ' → logprob: -13.016424179077148
    6. '    ' → logprob: -13.141424179077148
    7. '*' → logprob: -13.203924179077148
    8. '  ' → logprob: -13.266424179077148
    9. '=' → logprob: -13.766424179077148
    10. '       ' → logprob: -13.828924179077148

Token 104: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005597044946625829
    2. ' ' → logprob: -7.5005598068237305
    3. '=' → logprob: -13.50055980682373
    4. '   ' → logprob: -13.68805980682373
    5. '1' → logprob: -14.56305980682373
    6. '>' → logprob: -14.56305980682373
    7. '  ' → logprob: -15.06305980682373
    8. '<' → logprob: -15.25055980682373
    9. '(' → logprob: -15.43805980682373
    10. '```' → logprob: -15.50055980682373

Token 105: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.47458115220069885
    2. '<=' → logprob: -0.9745811223983765
    3. '<' → logprob: -8.599580764770508
    4. ' <' → logprob: -8.599580764770508
    5. ' ' → logprob: -9.224580764770508
    6. '-' → logprob: -11.599580764770508
    7. '1' → logprob: -12.099580764770508
    8. '+' → logprob: -12.474580764770508
    9. '()' → logprob: -12.724580764770508
    10. ']<=' → logprob: -13.099580764770508

Token 106: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.008620131760835648
    2. ' N' → logprob: -4.758620262145996
    3. 'len' → logprob: -12.633620262145996
    4. ' ' → logprob: -13.883620262145996
    5. '   ' → logprob: -13.883620262145996
    6. ' len' → logprob: -15.383620262145996
    7. '  ' → logprob: -15.883620262145996
    8. '	N' → logprob: -16.50861930847168
    9. 'n' → logprob: -16.88361930847168
    10. '    ' → logprob: -18.00861930847168

Token 107: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03817541152238846
    2. ':
' → logprob: -3.288175344467163
    3. ' :' → logprob: -9.788175582885742
    4. '   ' → logprob: -10.038175582885742
    5. '):' → logprob: -11.413175582885742
    6. ' and' → logprob: -11.788175582885742
    7. ' :
' → logprob: -12.163175582885742
    8. ':

' → logprob: -13.163175582885742
    9. '       ' → logprob: -13.163175582885742
    10. '):
' → logprob: -13.788175582885742

Token 108: '       ' (ID: 309)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.13724717497825623
    2. '   ' → logprob: -2.262247085571289
    3. ' result' → logprob: -4.262247085571289
    4. '       ' → logprob: -4.637247085571289
    5. '	result' → logprob: -8.262247085571289
    6. ' ' → logprob: -10.262247085571289
    7. '```' → logprob: -11.137247085571289
    8. '  ' → logprob: -11.262247085571289
    9. '    ' → logprob: -12.637247085571289
    10. ',result' → logprob: -12.887247085571289

Token 109: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.008026995696127415
    2. ' result' → logprob: -5.008027076721191
    3. '   ' → logprob: -7.133027076721191
    4. '       ' → logprob: -7.633027076721191
    5. '	result' → logprob: -10.883027076721191
    6. ' ' → logprob: -12.383027076721191
    7. '  ' → logprob: -13.133027076721191
    8. '
' → logprob: -14.633027076721191
    9. '    ' → logprob: -14.758027076721191
    10. '           ' → logprob: -14.758027076721191

Token 110: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.4740983843803406
    2. '+=' → logprob: -0.9740983843803406
    3. '+="' → logprob: -11.599098205566406
    4. '+' → logprob: -12.599098205566406
    5. '=' → logprob: -12.849098205566406
    6. 'result' → logprob: -13.099098205566406
    7. '   ' → logprob: -13.849098205566406
    8. ']+=' → logprob: -13.849098205566406
    9. ' +' → logprob: -14.724098205566406
    10. '+=(' → logprob: -14.974098205566406

Token 111: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0046794419176876545
    2. ' "' → logprob: -5.3796796798706055
    3. ' ' → logprob: -10.379679679870605
    4. 'f' → logprob: -11.754679679870605
    5. '"value' → logprob: -11.879679679870605
    6. '   ' → logprob: -12.629679679870605
    7. ''' → logprob: -13.754679679870605
    8. '  ' → logprob: -14.254679679870605
    9. '("' → logprob: -14.254679679870605
    10. ' f' → logprob: -14.254679679870605

Token 112: 'left' (ID: 4530)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.010924969799816608
    2. 'left' → logprob: -4.760924816131592
    3. 'f' → logprob: -6.635924816131592
    4. 'child' → logprob: -7.135924816131592
    5. ''' → logprob: -9.51092529296875
    6. ' "' → logprob: -10.51092529296875
    7. '"L' → logprob: -10.51092529296875
    8. 'key' → logprob: -11.01092529296875
    9. 'l' → logprob: -11.26092529296875
    10. 'L' → logprob: -11.38592529296875

Token 113: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.045652035623788834
    2. 'key' → logprob: -3.920652151107788
    3. ' child' → logprob: -4.295651912689209
    4. '_key' → logprob: -4.920651912689209
    5. ' =' → logprob: -6.295651912689209
    6. 'child' → logprob: -6.670651912689209
    7. '_child' → logprob: -8.045652389526367
    8. '_' → logprob: -9.045652389526367
    9. ' ' → logprob: -9.420652389526367
    10. '=' → logprob: -9.920652389526367

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026303084567189217
    2. '=' → logprob: -3.6513030529022217
    3. ' ' → logprob: -13.4013032913208
    4. 'key' → logprob: -14.5263032913208
    5. ' key' → logprob: -15.5263032913208
    6. '{' → logprob: -15.9013032913208
    7. ' ={' → logprob: -15.9013032913208
    8. '={' → logprob: -16.026302337646484
    9. ' =
' → logprob: -16.401302337646484
    10. '   ' → logprob: -16.901302337646484

Token 115: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.08116347342729568
    2. ' {' → logprob: -2.5811634063720703
    3. 'bt' → logprob: -6.33116340637207
    4. '"{' → logprob: -8.58116340637207
    5. '{}' → logprob: -9.08116340637207
    6. '"' → logprob: -9.45616340637207
    7. '{}".' → logprob: -9.70616340637207
    8. ' bt' → logprob: -11.33116340637207
    9. ' {}".' → logprob: -11.45616340637207
    10. ' "{' → logprob: -11.83116340637207

Token 116: '0' (ID: 15)
  Prédit: 'bt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bt' → logprob: -0.20558249950408936
    2. '{' → logprob: -1.8305824995040894
    3. 'b' → logprob: -4.205582618713379
    4. ' b' → logprob: -5.330582618713379
    5. ' {' → logprob: -5.330582618713379
    6. ' bt' → logprob: -7.455582618713379
    7. 'tree' → logprob: -9.580582618713379
    8. '0' → logprob: -9.830582618713379
    9. ' ' → logprob: -10.330582618713379
    10. '"{' → logprob: -10.455582618713379

Token 117: '},' (ID: 4180)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029042549431324005
    2. '},' → logprob: -6.377904415130615
    3. ' ,' → logprob: -7.377904415130615
    4. '",' → logprob: -8.252903938293457
    5. '{' → logprob: -9.127903938293457
    6. '".' → logprob: -9.502903938293457
    7. '),' → logprob: -9.752903938293457
    8. '}".' → logprob: -9.877903938293457
    9. ' },' → logprob: -11.877903938293457
    10. '}' → logprob: -13.127903938293457

Token 118: ' ".' (ID: 11730)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.3862687051296234
    2. ' b' → logprob: -2.0112686157226562
    3. ' format' → logprob: -2.0112686157226562
    4. '.format' → logprob: -3.1362686157226562
    5. 'bt' → logprob: -5.636268615722656
    6. 'b' → logprob: -6.261268615722656
    7. ' bt' → logprob: -6.511268615722656
    8. '"' → logprob: -7.761268615722656
    9. ' "".' → logprob: -7.886268615722656
    10. ' .' → logprob: -8.011268615722656

Token 119: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -1.6240566083070007e-06
    2. '.format' → logprob: -13.625001907348633
    3. ' format' → logprob: -15.125001907348633
    4. '(format' → logprob: -16.500001907348633
    5. '	format' → logprob: -17.000001907348633
    6. 'form' → logprob: -17.375001907348633
    7. '=format' → logprob: -18.500001907348633
    8. 'ormat' → logprob: -19.625001907348633
    9. 'for' → logprob: -19.750001907348633
    10. 'forma' → logprob: -20.250001907348633

Token 120: '(b' (ID: 3229)
  Prédit: 'bt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bt' → logprob: -7.73183855926618e-05
    2. 'b' → logprob: -10.000077247619629
    3. '(b' → logprob: -10.625077247619629
    4. ' b' → logprob: -12.750077247619629
    5. ' bt' → logprob: -12.875077247619629
    6. '(bt' → logprob: -13.250077247619629
    7. 'bst' → logprob: -15.250077247619629
    8. '	b' → logprob: -17.250078201293945
    9. '   ' → logprob: -17.625078201293945
    10. 'bc' → logprob: -17.875078201293945

Token 121: 'tree' (ID: 19816)
  Prédit: 'tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -1.7432603272027336e-06
    2. 'tre' → logprob: -14.000001907348633
    3. 't' → logprob: -14.625001907348633
    4. 'ree' → logprob: -15.625001907348633
    5. '(tree' → logprob: -17.000001907348633
    6. 'Tree' → logprob: -17.625001907348633
    7. 'trees' → logprob: -17.625001907348633
    8. ' tree' → logprob: -17.750001907348633
    9. 'TREE' → logprob: -18.000001907348633
    10. '_tree' → logprob: -18.125001907348633

Token 122: '[i' (ID: 1768)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.31487423181533813
    2. '[i' → logprob: -1.3148741722106934
    3. '[' → logprob: -6.439874172210693
    4. '(i' → logprob: -11.689874649047852
    5. '[
' → logprob: -13.314874649047852
    6. 'i' → logprob: -14.064874649047852
    7. '[((' → logprob: -14.064874649047852
    8. '2' → logprob: -14.189874649047852
    9. '[int' → logprob: -14.189874649047852
    10. '   ' → logprob: -14.814874649047852

Token 123: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.01256121788173914
    2. ' *' → logprob: -4.387561321258545
    3. '2' → logprob: -10.137560844421387
    4. '   ' → logprob: -12.262560844421387
    5. '1' → logprob: -12.887560844421387
    6. ' ' → logprob: -13.762560844421387
    7. '    ' → logprob: -14.262560844421387
    8. '**' → logprob: -14.512560844421387
    9. '`' → logprob: -15.137560844421387
    10. '  ' → logprob: -15.387560844421387

Token 124: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010448360117152333
    2. ' ' → logprob: -7.126044750213623
    3. '1' → logprob: -8.376045227050781
    4. '   ' → logprob: -12.001045227050781
    5. '  ' → logprob: -14.126045227050781
    6. '       ' → logprob: -14.376045227050781
    7. '           ' → logprob: -14.938545227050781
    8. '-' → logprob: -15.188545227050781
    9. '    ' → logprob: -15.188545227050781
    10. '     ' → logprob: -15.688545227050781

Token 125: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03407393768429756
    2. '1' → logprob: -3.409073829650879
    3. ' ' → logprob: -7.784073829650879
    4. '-' → logprob: -12.534073829650879
    5. '   ' → logprob: -12.909073829650879
    6. '0' → logprob: -12.909073829650879
    7. ' -' → logprob: -13.971573829650879
    8. '  ' → logprob: -14.409073829650879
    9. 'multip' → logprob: -15.596573829650879
    10. '    ' → logprob: -15.721573829650879

Token 126: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6603689789772034
    2. ' -' → logprob: -0.7853689789772034
    3. ' ' → logprob: -3.9103689193725586
    4. '2' → logprob: -5.785368919372559
    5. ']' → logprob: -6.410368919372559
    6. ')' → logprob: -6.660368919372559
    7. '   ' → logprob: -7.535368919372559
    8. '1' → logprob: -8.410368919372559
    9. '0' → logprob: -9.160368919372559
    10. '
' → logprob: -9.285368919372559

Token 127: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011164903844473884
    2. ' ' → logprob: -9.12511157989502
    3. '   ' → logprob: -13.75011157989502
    4. '           ' → logprob: -15.06261157989502
    5. '       ' → logprob: -15.56261157989502
    6. ']' → logprob: -16.312612533569336
    7. '  ' → logprob: -16.375112533569336
    8. '<|end|>' → logprob: -16.375112533569336
    9. '```' → logprob: -16.500112533569336
    10. '2' → logprob: -16.625112533569336

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.690834273584187e-05
    2. ' ' → logprob: -10.25003719329834
    3. '2' → logprob: -14.93753719329834
    4. '   ' → logprob: -15.06253719329834
    5. ']' → logprob: -15.50003719329834
    6. '<|end|>' → logprob: -16.312536239624023
    7. '0' → logprob: -16.500036239624023
    8. '۱' → logprob: -16.687536239624023
    9. '```' → logprob: -17.000036239624023
    10. '       ' → logprob: -17.062536239624023

Token 129: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.007812335155904293
    2. ')' → logprob: -5.1328125
    3. '])
' → logprob: -6.5078125
    4. ' ])' → logprob: -8.6328125
    5. ']' → logprob: -9.8828125
    6. '   ' → logprob: -10.0078125
    7. '       ' → logprob: -10.6328125
    8. ')
' → logprob: -10.6328125
    9. ')])' → logprob: -10.6328125
    10. ')]' → logprob: -10.8828125

Token 130: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.020327208563685417
    2. '   ' → logprob: -4.645327091217041
    3. ' if' → logprob: -4.645327091217041
    4. '<|end|>' → logprob: -7.270327091217041
    5. ' ' → logprob: -9.2703275680542
    6. ')' → logprob: -9.3953275680542
    7. '  ' → logprob: -11.2703275680542
    8. '```' → logprob: -11.8953275680542
    9. '    
' → logprob: -12.6453275680542
    10. ' 
' → logprob: -12.8953275680542

Token 131: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00027099132421426475
    2. ' if' → logprob: -8.25027084350586
    3. '   ' → logprob: -12.12527084350586
    4. ' ' → logprob: -13.25027084350586
    5. '```' → logprob: -14.00027084350586
    6. ')' → logprob: -14.50027084350586
    7. '  ' → logprob: -14.87527084350586
    8. '    ' → logprob: -15.87527084350586
    9. '<|end|>' → logprob: -16.25027084350586
    10. 'If' → logprob: -16.25027084350586

Token 132: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.003222749102860689
    2. 'i' → logprob: -5.753222942352295
    3. ' ' → logprob: -10.753222465515137
    4. ' (' → logprob: -11.628222465515137
    5. '(i' → logprob: -12.128222465515137
    6. ' ' → logprob: -13.128222465515137
    7. '   ' → logprob: -13.128222465515137
    8. '2' → logprob: -13.628222465515137
    9. '  ' → logprob: -13.753222465515137
    10. '(' → logprob: -14.253222465515137

Token 133: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5759720206260681
    2. ' *' → logprob: -0.8259720206260681
    3. ' ' → logprob: -10.700971603393555
    4. '2' → logprob: -12.825971603393555
    5. ' ' → logprob: -13.450971603393555
    6. '**' → logprob: -14.325971603393555
    7. '1' → logprob: -14.388471603393555
    8. '   ' → logprob: -14.513471603393555
    9. 'import' → logprob: -14.575971603393555
    10. '```' → logprob: -15.138471603393555

Token 134: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20142114162445068
    2. ' ' → logprob: -1.7014211416244507
    3. '(' → logprob: -13.576420783996582
    4. '3' → logprob: -13.701420783996582
    5. '   ' → logprob: -14.076420783996582
    6. '<|end|>' → logprob: -14.076420783996582
    7. '  ' → logprob: -14.201420783996582
    8. '>' → logprob: -14.826420783996582
    9. '```' → logprob: -15.013920783996582
    10. '1' → logprob: -15.201420783996582

Token 135: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004436587623786181
    2. ' ' → logprob: -7.750443458557129
    3. '1' → logprob: -12.125443458557129
    4. '3' → logprob: -12.500443458557129
    5. '(' → logprob: -13.625443458557129
    6. '   ' → logprob: -13.750443458557129
    7. '  ' → logprob: -14.687943458557129
    8. '+' → logprob: -15.437943458557129
    9. '```' → logprob: -16.187944412231445
    10. '21' → logprob: -16.500444412231445

Token 136: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.26434260606765747
    2. ' +' → logprob: -1.5143425464630127
    3. '<=' → logprob: -4.889342784881592
    4. ' <=' → logprob: -5.389342784881592
    5. '2' → logprob: -9.514342308044434
    6. '1' → logprob: -9.764342308044434
    7. ' ' → logprob: -10.264342308044434
    8. '   ' → logprob: -10.889342308044434
    9. '```' → logprob: -11.139342308044434
    10. '+i' → logprob: -11.764342308044434

Token 137: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4317708909511566
    2. '1' → logprob: -1.056770920753479
    3. ' <=' → logprob: -6.5567708015441895
    4. '0' → logprob: -7.1817708015441895
    5. '2' → logprob: -8.056771278381348
    6. '  ' → logprob: -8.681771278381348
    7. '   ' → logprob: -9.056771278381348
    8. ' i' → logprob: -9.806771278381348
    9. '<=' → logprob: -9.931771278381348
    10. ' "' → logprob: -10.056771278381348

Token 138: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.038249529898166656
    2. ' ' → logprob: -3.4132494926452637
    3. '0' → logprob: -6.288249492645264
    4. '   ' → logprob: -7.163249492645264
    5. ' <=' → logprob: -7.288249492645264
    6. '<=' → logprob: -7.538249492645264
    7. '2' → logprob: -7.663249492645264
    8. '  ' → logprob: -9.163249969482422
    9. 'i' → logprob: -9.913249969482422
    10. '    ' → logprob: -11.163249969482422

Token 139: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.01815567910671234
    2. '<=' → logprob: -4.018155574798584
    3. ' ' → logprob: -12.393156051635742
    4. ' <' → logprob: -14.393156051635742
    5. '<' → logprob: -14.893156051635742
    6. ')' → logprob: -15.393156051635742
    7. ')<=' → logprob: -15.518156051635742
    8. '=' → logprob: -15.893156051635742
    9. '()' → logprob: -16.018156051635742
    10. '   ' → logprob: -17.643156051635742

Token 140: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2014141082763672
    2. ' N' → logprob: -1.7014141082763672
    3. ' ' → logprob: -14.326414108276367
    4. '   ' → logprob: -16.201414108276367
    5. '	N' → logprob: -16.451414108276367
    6. '  ' → logprob: -17.951414108276367
    7. '<|end|>' → logprob: -18.451414108276367
    8. '>N' → logprob: -19.076414108276367
    9. 'n' → logprob: -19.326414108276367
    10. ',' → logprob: -19.451414108276367

Token 141: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.160326287150383
    2. ':
' → logprob: -1.9103262424468994
    3. '   ' → logprob: -10.03532600402832
    4. '       ' → logprob: -10.03532600402832
    5. '):
' → logprob: -11.53532600402832
    6. '):' → logprob: -13.41032600402832
    7. ':

' → logprob: -13.91032600402832
    8. ' :
' → logprob: -14.16032600402832
    9. ' :' → logprob: -14.78532600402832
    10. ',' → logprob: -14.91032600402832

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04204319044947624
    2. 'result' → logprob: -3.6670432090759277
    3. '   ' → logprob: -4.292043209075928
    4. ' result' → logprob: -6.292043209075928
    5. '     ' → logprob: -11.16704273223877
    6. '      ' → logprob: -11.54204273223877
    7. '	result' → logprob: -11.54204273223877
    8. '    ' → logprob: -11.66704273223877
    9. '           ' → logprob: -11.66704273223877
    10. '	' → logprob: -11.79204273223877

Token 143: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.10045456141233444
    2. ' result' → logprob: -2.350454568862915
    3. '       ' → logprob: -8.975454330444336
    4. '   ' → logprob: -9.350454330444336
    5. ' ' → logprob: -11.100454330444336
    6. '	result' → logprob: -11.600454330444336
    7. '  ' → logprob: -12.725454330444336
    8. '    ' → logprob: -13.600454330444336
    9. '           ' → logprob: -13.850454330444336
    10. '     ' → logprob: -13.975454330444336

Token 144: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.20317217707633972
    2. '+=' → logprob: -1.703172206878662
    3. '+' → logprob: -6.828172206878662
    4. ' +' → logprob: -8.078171730041504
    5. '+="' → logprob: -9.953171730041504
    6. ' ' → logprob: -9.953171730041504
    7. 'result' → logprob: -10.078171730041504
    8. '       ' → logprob: -10.203171730041504
    9. '   ' → logprob: -10.328171730041504
    10. '  ' → logprob: -10.453171730041504

Token 145: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.14268846809864044
    2. ' "' → logprob: -2.017688512802124
    3. ''' → logprob: -12.642688751220703
    4. 'f' → logprob: -12.767688751220703
    5. '("' → logprob: -13.142688751220703
    6. ' ' → logprob: -13.142688751220703
    7. ' f' → logprob: -13.392688751220703
    8. '"value' → logprob: -15.392688751220703
    9. '"user' → logprob: -15.517688751220703
    10. '"text' → logprob: -15.517688751220703

Token 146: 'right' (ID: 2460)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3133835196495056
    2. 'result' → logprob: -1.3133835792541504
    3. 'left' → logprob: -10.063383102416992
    4. ' result' → logprob: -10.063383102416992
    5. 'right' → logprob: -10.813383102416992
    6. ' "' → logprob: -11.313383102416992
    7. '
' → logprob: -13.563383102416992
    8. ''' → logprob: -14.063383102416992
    9. ' ' → logprob: -14.063383102416992
    10. '   ' → logprob: -15.188383102416992

Token 147: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.0010929503478109837
    2. 'key' → logprob: -7.251092910766602
    3. '_key' → logprob: -8.126092910766602
    4. ' ' → logprob: -9.876092910766602
    5. '"' → logprob: -11.001092910766602
    6. '_' → logprob: -11.626092910766602
    7. ' _' → logprob: -12.501092910766602
    8. '	key' → logprob: -13.376092910766602
    9. ' ' → logprob: -14.626092910766602
    10. 's' → logprob: -14.688592910766602

Token 148: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005934013053774834
    2. '=' → logprob: -5.130934238433838
    3. ' ' → logprob: -12.50593376159668
    4. 's' → logprob: -14.00593376159668
    5. '   ' → logprob: -15.38093376159668
    6. ')' → logprob: -15.75593376159668
    7. 'key' → logprob: -16.38093376159668
    8. '_key' → logprob: -16.63093376159668
    9. ' key' → logprob: -16.63093376159668
    10. '{' → logprob: -17.25593376159668

Token 149: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.0015510482480749488
    2. ' {' → logprob: -6.501551151275635
    3. '"{' → logprob: -10.001550674438477
    4. '{}' → logprob: -13.501550674438477
    5. '"' → logprob: -14.001550674438477
    6. '{i' → logprob: -14.251550674438477
    7. ' "{' → logprob: -14.751550674438477
    8. 'bt' → logprob: -16.501550674438477
    9. ''{' → logprob: -16.626550674438477
    10. '{return' → logprob: -17.376550674438477

Token 150: '0' (ID: 15)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.11313565820455551
    2. 'bt' → logprob: -2.488135576248169
    3. '{i' → logprob: -4.363135814666748
    4. '0' → logprob: -4.863135814666748
    5. 'i' → logprob: -6.738135814666748
    6. ' {' → logprob: -7.238135814666748
    7. '1' → logprob: -7.238135814666748
    8. '[' → logprob: -8.86313533782959
    9. '(bt' → logprob: -9.23813533782959
    10. ' ' → logprob: -9.61313533782959

Token 151: '},' (ID: 4180)
  Prédit: '},'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '},' → logprob: -0.02460460551083088
    2. '}".' → logprob: -4.399604797363281
    3. ',' → logprob: -5.149604797363281
    4. '",' → logprob: -5.899604797363281
    5. '],' → logprob: -7.024604797363281
    6. '}.' → logprob: -7.149604797363281
    7. '}' → logprob: -7.274604797363281
    8. '".' → logprob: -7.899604797363281
    9. '),' → logprob: -8.024604797363281
    10. '}",' → logprob: -8.649604797363281

Token 152: ' ".' (ID: 11730)
  Prédit: ' {'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.5074911713600159
    2. ' b' → logprob: -1.382491111755371
    3. ' format' → logprob: -3.132491111755371
    4. '{' → logprob: -3.257491111755371
    5. 'format' → logprob: -3.507491111755371
    6. '"' → logprob: -3.882491111755371
    7. ' bt' → logprob: -5.382491111755371
    8. ' ' → logprob: -5.507491111755371
    9. ' "' → logprob: -5.757491111755371
    10. '.format' → logprob: -7.007491111755371

Token 153: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -6.988221684878226e-06
    2. ' format' → logprob: -12.000006675720215
    3. '	format' → logprob: -15.000006675720215
    4. 'ormat' → logprob: -15.625006675720215
    5. '(format' → logprob: -16.25000762939453
    6. 'form' → logprob: -16.25000762939453
    7. '=format' → logprob: -17.37500762939453
    8. ' ' → logprob: -18.00000762939453
    9. 'string' → logprob: -18.25000762939453
    10. '```' → logprob: -20.00000762939453

Token 154: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.00024715426843613386
    2. 'bt' → logprob: -8.50024700164795
    3. 'b' → logprob: -10.62524700164795
    4. '(bt' → logprob: -10.87524700164795
    5. ' b' → logprob: -15.50024700164795
    6. '(' → logprob: -16.125247955322266
    7. ' (' → logprob: -17.250247955322266
    8. ' bt' → logprob: -19.250247955322266
    9. 'bst' → logprob: -19.375247955322266
    10. '(br' → logprob: -19.750247955322266

Token 155: 'tree' (ID: 19816)
  Prédit: 'tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.0013240495463833213
    2. 'bt' → logprob: -6.75132417678833
    3. '[' → logprob: -9.001323699951172
    4. 'ree' → logprob: -10.751323699951172
    5. 'tre' → logprob: -12.626323699951172
    6. 't' → logprob: -13.001323699951172
    7. ' tree' → logprob: -14.001323699951172
    8. '[i' → logprob: -14.501323699951172
    9. 'ee' → logprob: -14.626323699951172
    10. '
' → logprob: -15.001323699951172

Token 156: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.143808109802194e-05
    2. '[(' → logprob: -10.625041007995605
    3. '[' → logprob: -11.000041007995605
    4. 'i' → logprob: -15.250041007995605
    5. '[
' → logprob: -16.625041961669922
    6. '(i' → logprob: -17.250041961669922
    7. ' [' → logprob: -17.750041961669922
    8. '[((' → logprob: -18.375041961669922
    9. '   ' → logprob: -19.125041961669922
    10. '[int' → logprob: -19.500041961669922

Token 157: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.11305560171604156
    2. ' *' → logprob: -2.23805570602417
    3. '[' → logprob: -9.113055229187012
    4. '2' → logprob: -10.363055229187012
    5. ')' → logprob: -10.363055229187012
    6. ' ' → logprob: -10.988055229187012
    7. '   ' → logprob: -11.488055229187012
    8. ']' → logprob: -12.238055229187012
    9. '    ' → logprob: -12.738055229187012
    10. 'multip' → logprob: -12.738055229187012

Token 158: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.030858449637889862
    2. '1' → logprob: -3.6558585166931152
    3. ' ' → logprob: -5.405858516693115
    4. '   ' → logprob: -10.780858039855957
    5. '-' → logprob: -12.093358039855957
    6. '  ' → logprob: -12.343358039855957
    7. '+' → logprob: -12.593358039855957
    8. '*' → logprob: -12.593358039855957
    9. '
' → logprob: -12.843358039855957
    10. '```' → logprob: -13.343358039855957

Token 159: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009649383719079196
    2. '2' → logprob: -7.000965118408203
    3. ' ' → logprob: -10.375965118408203
    4. '+' → logprob: -11.375965118408203
    5. '0' → logprob: -12.125965118408203
    6. '-' → logprob: -14.063465118408203
    7. '
' → logprob: -14.188465118408203
    8. '   ' → logprob: -14.250965118408203
    9. '```' → logprob: -14.688465118408203
    10. '  ' → logprob: -15.188465118408203

Token 160: '])

' (ID: 21045)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.019577357918024063
    2. ' +' → logprob: -4.269577503204346
    3. '1' → logprob: -6.144577503204346
    4. ')' → logprob: -6.769577503204346
    5. '])' → logprob: -6.894577503204346
    6. '-' → logprob: -8.269577026367188
    7. '[' → logprob: -8.769577026367188
    8. '   ' → logprob: -8.769577026367188
    9. ']' → logprob: -9.144577026367188
    10. ' -' → logprob: -9.269577026367188

Token 161: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0028394684195518494
    2. '   ' → logprob: -5.8778395652771
    3. 'result' → logprob: -10.877839088439941
    4. ' print' → logprob: -11.502839088439941
    5. '	print' → logprob: -12.877839088439941
    6. '-' → logprob: -14.002839088439941
    7. ')' → logprob: -14.377839088439941
    8. '```' → logprob: -14.377839088439941
    9. '(print' → logprob: -15.252839088439941
    10. '-print' → logprob: -15.752839088439941

Token 162: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00010986098641296849
    2. '   ' → logprob: -9.250109672546387
    3. 'result' → logprob: -11.875109672546387
    4. ' print' → logprob: -12.000109672546387
    5. '    
' → logprob: -15.500109672546387
    6. '	print' → logprob: -15.750109672546387
    7. '
' → logprob: -16.250110626220703
    8. '```' → logprob: -17.125110626220703
    9. ')' → logprob: -17.375110626220703
    10. '  ' → logprob: -17.625110626220703

Token 163: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.01432074885815382
    2. '(' → logprob: -4.2643208503723145
    3. '()' → logprob: -9.264320373535156
    4. 'result' → logprob: -10.139320373535156
    5. ' (' → logprob: -12.014320373535156
    6. '(f' → logprob: -12.139320373535156
    7. '("("' → logprob: -12.139320373535156
    8. '((' → logprob: -13.139320373535156
    9. '(
' → logprob: -13.764320373535156
    10. '("' → logprob: -14.139320373535156

Token 164: ')' (ID: 8)
  Prédit: '.rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rstrip' → logprob: -0.3568243384361267
    2. '.strip' → logprob: -1.8568243980407715
    3. ')' → logprob: -2.1068243980407715
    4. '[:-' → logprob: -3.8568243980407715
    5. 'rstrip' → logprob: -6.9818243980407715
    6. '.replace' → logprob: -9.356823921203613
    7. ',' → logprob: -9.481823921203613
    8. '.trim' → logprob: -10.356823921203613
    9. '()' → logprob: -10.981823921203613
    10. '().' → logprob: -11.731823921203613


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 162
Tokens correctement prédits (1ère position, stricte): 60
Tokens correctement prédits (1ère position, avec adaptation): 67
Tokens correctement prédits (top 10): 137
Précision stricte (1ère position): 37.04%
Précision adaptée (1ère position): 41.36%
Précision (top 10): 84.57%
================================================================================
