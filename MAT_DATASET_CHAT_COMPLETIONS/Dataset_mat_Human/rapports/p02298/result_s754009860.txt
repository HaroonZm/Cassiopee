================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import cmath
EPS = 1e-10

#外積
def OuterProduct(one, two):
	tmp = one.conjugate() * two
	return tmp.imag

#3点が反時計回りか
#一直線上のときの例外処理できていない→とりあえずT
def CCW(p, q, r):
	one, two = q-p, r-q
	if OuterProduct(one, two) > -EPS:
		return True
	else:
		return False

#凸包リストを返す
def ConvexHull(dots):
	dots.sort(key=lambda x: (x.real, x.imag))
	res1 = [dots[0]]
	for d in dots[1:]:
		if len(res1) == 1:
			res1.append(d)
		else:
			while len(res1) > 1 and not CCW(res1[-2], res1[-1], d):
				res1.pop()
			res1.append(d)
	dots.reverse()
	res2 = [dots[0]]
	for d in dots[1:]:
		if len(res2) == 1:
			res2.append(d)
		else:
			while len(res2) > 1 and not CCW(res2[-2], res2[-1], d):
				res2.pop()
			res2.append(d)
	return res1[:-1] + res2[:-1]

n = int(input())
dots = []
for _ in range(n):
	x, y = map(int, input().split())
	dots.append(complex(x, y))

if len(dots) == 3:
	print(1)
elif len(ConvexHull(dots)) == n:
	print(1)
else:
	print(0)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' cm' (ID: 9256)
  → Token d'amorce (pas de prédiction)

Token 2: 'ath' (ID: 725)
  → Token d'amorce (pas de prédiction)

Token 3: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.008138041011989117
    2. '\n' → logprob: -6.133138179779053
    3. '<|end|>' → logprob: -6.258138179779053
    4. '```' → logprob: -6.508138179779053
    5. '\' → logprob: -6.758138179779053
    6. 'import' → logprob: -7.633138179779053
    7. 'newline' → logprob: -8.883137702941895
    8. '<|end|>' → logprob: -9.008137702941895
    9. '#' → logprob: -9.508137702941895
    10. '(' → logprob: -9.633137702941895

Token 4: 'EPS' (ID: 82793)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00711682578548789
    2. '(' → logprob: -5.632116794586182
    3. '```' → logprob: -6.882116794586182
    4. 'import' → logprob: -7.257116794586182
    5. 'cmath' → logprob: -7.757116794586182
    6. 'def' → logprob: -8.13211727142334
    7. '#' → logprob: -8.63211727142334
    8. '\' → logprob: -8.88211727142334
    9. ',' → logprob: -9.13211727142334
    10. '<|end|>' → logprob: -9.25711727142334

Token 5: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8647054433822632
    2. '_' → logprob: -0.9897054433822632
    3. '=' → logprob: -1.7397054433822632
    4. 'ILON' → logprob: -4.239705562591553
    5. ' _' → logprob: -4.989705562591553
    6. ' ' → logprob: -4.989705562591553
    7. '_SPACE' → logprob: -6.739705562591553
    8. '  ' → logprob: -7.739705562591553
    9. '_=' → logprob: -8.364705085754395
    10. '__' → logprob: -8.364705085754395

Token 6: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20141489803791046
    2. '1' → logprob: -1.701414942741394
    3. '0' → logprob: -14.451415061950684
    4. '10' → logprob: -15.326415061950684
    5. '2' → logprob: -15.576415061950684
    6. ' ' → logprob: -15.576415061950684
    7. 'cmath' → logprob: -15.951415061950684
    8. '    ' → logprob: -15.951415061950684
    9. '   ' → logprob: -16.076414108276367
    10. ' cm' → logprob: -16.451414108276367

Token 7: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019299437990412116
    2. ' ' → logprob: -6.251929759979248
    3. '0' → logprob: -14.126930236816406
    4. '   ' → logprob: -14.876930236816406
    5. '`' → logprob: -16.251930236816406
    6. '    ' → logprob: -16.501930236816406
    7. '```' → logprob: -16.501930236816406
    8. '2' → logprob: -16.751930236816406
    9. 'cmath' → logprob: -17.126930236816406
    10. '  ' → logprob: -18.126930236816406

Token 8: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.007260162383317947
    2. '-' → logprob: -5.007260322570801
    3. '.' → logprob: -7.882260322570801
    4. '```' → logprob: -9.5072603225708
    5. '0' → logprob: -9.8822603225708
    6. '**' → logprob: -10.6322603225708
    7. '^-' → logprob: -12.3822603225708
    8. '.e' → logprob: -12.8822603225708
    9. 'E' → logprob: -13.1322603225708
    10. '-e' → logprob: -13.2572603225708

Token 9: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.60414821645827e-06
    2. '6' → logprob: -13.125004768371582
    3. '3' → logprob: -14.625004768371582
    4. '```' → logprob: -14.875004768371582
    5. '−' → logprob: -15.000004768371582
    6. '4' → logprob: -15.125004768371582
    7. '0' → logprob: -15.500004768371582
    8. '06' → logprob: -15.750004768371582
    9. ' -' → logprob: -15.750004768371582
    10. '5' → logprob: -16.000003814697266

Token 10: '10' (ID: 702)
  Prédit: '09'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '09' → logprob: -0.42181238532066345
    2. '12' → logprob: -1.7968124151229858
    3. '9' → logprob: -2.4218122959136963
    4. '10' → logprob: -2.9218122959136963
    5. '08' → logprob: -3.7968122959136963
    6. '07' → logprob: -5.296812534332275
    7. '06' → logprob: -5.421812534332275
    8. '8' → logprob: -6.171812534332275
    9. '7' → logprob: -6.921812534332275
    10. '15' → logprob: -8.296812057495117

Token 11: '

' (ID: 279)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.7978330254554749
    2. '\n' → logprob: -1.17283296585083
    3. '' → logprob: -1.79783296585083
    4. '
' → logprob: -3.42283296585083
    5. '*' → logprob: -4.42283296585083
    6. 'def' → logprob: -4.92283296585083
    7. '```' → logprob: -5.29783296585083
    8. '**' → logprob: -5.92283296585083
    9. '\r' → logprob: -6.29783296585083
    10. '`' → logprob: -6.29783296585083

Token 12: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3149661123752594
    2. '```' → logprob: -2.4399662017822266
    3. '\n' → logprob: -2.6899662017822266
    4. '\' → logprob: -3.3149662017822266
    5. '
' → logprob: -4.189966201782227
    6. '`' → logprob: -5.064966201782227
    7. ',' → logprob: -5.064966201782227
    8. ',
' → logprob: -5.189966201782227
    9. '' → logprob: -5.314966201782227
    10. '(
' → logprob: -5.439966201782227

Token 13: '外' (ID: 10727)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.18767185509204865
    2. 'def' → logprob: -1.8126718997955322
    3. ' class' → logprob: -5.437671661376953
    4. 'class' → logprob: -7.187671661376953
    5. 'import' → logprob: -7.687671661376953
    6. ' import' → logprob: -7.937671661376953
    7. ' d' → logprob: -8.062671661376953
    8. 'd' → logprob: -8.312671661376953
    9. 'from' → logprob: -8.812671661376953
    10. ' ' → logprob: -8.812671661376953

Token 14: '積' (ID: 91483)
  Prédit: '接'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '接' → logprob: -1.49774169921875
    2. '積' → logprob: -1.62274169921875
    3. '角' → logprob: -1.74774169921875
    4. '壁' → logprob: -2.24774169921875
    5. '部' → logprob: -2.74774169921875
    6. '径' → logprob: -3.24774169921875
    7. '\xe6\xae' → logprob: -3.49774169921875
    8. '\xe6\x9e' → logprob: -3.87274169921875
    9. '周' → logprob: -3.99774169921875
    10. '```' → logprob: -3.99774169921875

Token 15: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.46443337202072144
    2. '(' → logprob: -1.3394334316253662
    3. ' def' → logprob: -3.464433431625366
    4. '_' → logprob: -3.589433431625366
    5. ' (' → logprob: -4.339433193206787
    6. '\' → logprob: -4.464433193206787
    7. '(
' → logprob: -5.214433193206787
    8. ' =' → logprob: -5.589433193206787
    9. ':' → logprob: -5.839433193206787
    10. '=' → logprob: -5.964433193206787

Token 16: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20144793391227722
    2. ' def' → logprob: -1.7014479637145996
    3. ' de' → logprob: -11.576447486877441
    4. '(' → logprob: -11.951447486877441
    5. ' ' → logprob: -12.326447486877441
    6. '```' → logprob: -12.701447486877441
    7. '\' → logprob: -12.951447486877441
    8. ' (' → logprob: -13.326447486877441
    9. 'de' → logprob: -13.576447486877441
    10. '(
' → logprob: -14.076447486877441

Token 17: ' Outer' (ID: 102576)
  Prédit: ' cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cross' → logprob: -0.00032378386822529137
    2. ' outer' → logprob: -8.625324249267578
    3. 'cross' → logprob: -9.125324249267578
    4. '_cross' → logprob: -11.000324249267578
    5. ' vector' → logprob: -11.500324249267578
    6. ' ' → logprob: -12.125324249267578
    7. '```' → logprob: -14.375324249267578
    8. '.cross' → logprob: -14.500324249267578
    9. ' vec' → logprob: -15.000324249267578
    10. ' def' → logprob: -15.000324249267578

Token 18: 'Product' (ID: 4532)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3090064525604248
    2. 'Product' → logprob: -1.9340064525604248
    3. '_Product' → logprob: -3.184006452560425
    4. '_' → logprob: -3.309006452560425
    5. '_product' → logprob: -3.309006452560425
    6. ' (' → logprob: -6.059006690979004
    7. '(Product' → logprob: -7.434006690979004
    8. '(Vector' → logprob: -7.559006690979004
    9. '_Vector' → logprob: -7.559006690979004
    10. '(A' → logprob: -7.934006690979004

Token 19: '(one' (ID: 92717)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.707391619682312
    2. '(a' → logprob: -1.332391619682312
    3. '(A' → logprob: -1.707391619682312
    4. '(u' → logprob: -3.3323917388916016
    5. '(v' → logprob: -4.707391738891602
    6. '(p' → logprob: -4.957391738891602
    7. '(P' → logprob: -5.457391738891602
    8. '(V' → logprob: -5.957391738891602
    9. ' (' → logprob: -6.707391738891602
    10. '(U' → logprob: -7.957391738891602

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01610170677304268
    2. '):' → logprob: -4.391101837158203
    3. ' ,' → logprob: -6.391101837158203
    4. ',v' → logprob: -8.016101837158203
    5. '_vector' → logprob: -8.266101837158203
    6. '_vec' → logprob: -8.266101837158203
    7. ')' → logprob: -8.641101837158203
    8. '_point' → logprob: -9.391101837158203
    9. 'Vector' → logprob: -9.516101837158203
    10. ',a' → logprob: -9.766101837158203

Token 21: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.22941695153713226
    2. ' two' → logprob: -1.9794169664382935
    3. 'another' → logprob: -3.104416847229004
    4. 'other' → logprob: -3.979416847229004
    5. ' another' → logprob: -6.104416847229004
    6. ' other' → logprob: -6.979416847229004
    7. ' ' → logprob: -10.479416847229004
    8. 'othe' → logprob: -10.979416847229004
    9. 'the' → logprob: -11.104416847229004
    10. '```' → logprob: -11.104416847229004

Token 22: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007300666766241193
    2. ')' → logprob: -7.250730037689209
    3. ' ):' → logprob: -11.875730514526367
    4. ',' → logprob: -12.125730514526367
    5. ')：' → logprob: -12.250730514526367
    6. ':' → logprob: -13.125730514526367
    7. '）：' → logprob: -15.500730514526367
    8. '):
' → logprob: -15.875730514526367
    9. ' ' → logprob: -16.000730514526367
    10. '   ' → logprob: -16.125730514526367

Token 23: '	tmp' (ID: 44117)
  Prédit: '(one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(one' → logprob: -0.47625523805618286
    2. '(' → logprob: -0.9762552380561829
    3. '(two' → logprob: -6.726255416870117
    4. ':' → logprob: -7.351255416870117
    5. '   ' → logprob: -8.726255416870117
    6. '(
' → logprob: -9.601255416870117
    7. '):' → logprob: -10.351255416870117
    8. ' one' → logprob: -10.851255416870117
    9. ' (' → logprob: -11.476255416870117
    10. '_one' → logprob: -11.976255416870117

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7797407507896423
    2. '.' → logprob: -1.529740810394287
    3. '=' → logprob: -1.654740810394287
    4. '[' → logprob: -2.279740810394287
    5. '_' → logprob: -4.529740810394287
    6. ')' → logprob: -5.404740810394287
    7. ' ' → logprob: -5.529740810394287
    8. '[:]' → logprob: -6.154740810394287
    9. ',' → logprob: -6.654740810394287
    10. ' .' → logprob: -7.404740810394287

Token 25: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.4977467358112335
    2. 'complex' → logprob: -2.122746706008911
    3. ' one' → logprob: -2.247746706008911
    4. '(one' → logprob: -2.372746706008911
    5. '(' → logprob: -3.497746706008911
    6. ' complex' → logprob: -4.37274694442749
    7. ' (' → logprob: -4.74774694442749
    8. '	' → logprob: -4.99774694442749
    9. 'abs' → logprob: -5.74774694442749
    10. '0' → logprob: -5.99774694442749

Token 26: '.con' (ID: 5162)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.037523556500673294
    2. '*' → logprob: -3.9125235080718994
    3. '.' → logprob: -4.6625237464904785
    4. '.con' → logprob: -5.7875237464904785
    5. ' *' → logprob: -6.2875237464904785
    6. 'con' → logprob: -7.2875237464904785
    7. '.real' → logprob: -7.9125237464904785
    8. '+' → logprob: -8.66252326965332
    9. '.imag' → logprob: -8.66252326965332
    10. ' [' → logprob: -8.78752326965332

Token 27: 'jug' (ID: 63159)
  Prédit: 'jug'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jug' → logprob: -0.0005599428550340235
    2. 'j' → logprob: -7.5005598068237305
    3. 'jg' → logprob: -12.25055980682373
    4. '*j' → logprob: -13.12555980682373
    5. 'Jug' → logprob: -15.62555980682373
    6. 'ju' → logprob: -18.000560760498047
    7. '*' → logprob: -18.375560760498047
    8. '-j' → logprob: -18.500560760498047
    9. 'jx' → logprob: -18.500560760498047
    10. ' jug' → logprob: -18.625560760498047

Token 28: 'ate' (ID: 379)
  Prédit: 'ate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.13479547202587128
    2. '()' → logprob: -2.5097954273223877
    3. '()*' → logprob: -3.7597954273223877
    4. 'jug' → logprob: -4.384795665740967
    5. 't' → logprob: -5.759795665740967
    6. '().' → logprob: -5.759795665740967
    7. 'con' → logprob: -6.884795665740967
    8. 'a' → logprob: -7.884795665740967
    9. 'T' → logprob: -8.634795188903809
    10. '1' → logprob: -8.634795188903809

Token 29: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03373318165540695
    2. '()*' → logprob: -3.4087331295013428
    3. '*' → logprob: -9.658733367919922
    4. '()[' → logprob: -11.533733367919922
    5. '(' → logprob: -12.033733367919922
    6. ' ()' → logprob: -13.158733367919922
    7. '[' → logprob: -13.408733367919922
    8. ' *' → logprob: -13.533733367919922
    9. '().' → logprob: -14.033733367919922
    10. '(),' → logprob: -14.408733367919922

Token 30: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.32065731287002563
    2. ' *' → logprob: -1.3206572532653809
    3. '	' → logprob: -5.195657253265381
    4. '	t' → logprob: -7.445657253265381
    5. ' ' → logprob: -8.195657730102539
    6. '*t' → logprob: -8.570657730102539
    7. '[' → logprob: -8.695657730102539
    8. '   ' → logprob: -8.945657730102539
    9. '()' → logprob: -8.945657730102539
    10. ' ' → logprob: -9.570657730102539

Token 31: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.5759441256523132
    2. ' two' → logprob: -0.8259441256523132
    3. '(two' → logprob: -12.700943946838379
    4. '	t' → logprob: -15.075943946838379
    5. 'tw' → logprob: -15.450943946838379
    6. 'Two' → logprob: -15.575943946838379
    7. '.two' → logprob: -15.575943946838379
    8. '_two' → logprob: -15.700943946838379
    9. ' ' → logprob: -16.075944900512695
    10. ' one' → logprob: -16.200944900512695

Token 32: '
' (ID: 198)
  Prédit: '	return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	return' → logprob: -1.434267282485962
    2. '<|end|>' → logprob: -1.434267282485962
    3. '
' → logprob: -1.934267282485962
    4. '[' → logprob: -2.309267282485962
    5. ' return' → logprob: -2.434267282485962
    6. 'return' → logprob: -2.684267282485962
    7. '<|end|>' → logprob: -2.809267282485962
    8. ' ' → logprob: -4.434267044067383
    9. '.' → logprob: -4.434267044067383
    10. ' 
' → logprob: -5.309267044067383

Token 33: '	return' (ID: 1393)
  Prédit: '	return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	return' → logprob: -0.1505795419216156
    2. ' return' → logprob: -2.7755794525146484
    3. 'return' → logprob: -3.5255794525146484
    4. '
' → logprob: -3.5255794525146484
    5. '   ' → logprob: -5.025579452514648
    6. '[' → logprob: -5.650579452514648
    7. '.return' → logprob: -6.400579452514648
    8. ' ' → logprob: -6.650579452514648
    9. '.' → logprob: -6.900579452514648
    10. ' 
' → logprob: -7.650579452514648

Token 34: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.26840126514434814
    2. ' tmp' → logprob: -1.6434012651443481
    3. '	tmp' → logprob: -3.8934011459350586
    4. 'abs' → logprob: -4.643401145935059
    5. '(tmp' → logprob: -4.768401145935059
    6. ' abs' → logprob: -6.393401145935059
    7. 'complex' → logprob: -6.893401145935059
    8. ' complex' → logprob: -8.018401145935059
    9. 'round' → logprob: -9.268401145935059
    10. 'cmath' → logprob: -9.393401145935059

Token 35: '.imag' (ID: 171484)
  Prédit: '.real'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.real' → logprob: -1.0947808027267456
    2. '.' → logprob: -1.4697808027267456
    3. '<|end|>' → logprob: -1.5947808027267456
    4. '
' → logprob: -2.844780921936035
    5. '.imag' → logprob: -3.219780921936035
    6. '**' → logprob: -3.219780921936035
    7. '<|end|>' → logprob: -3.719780921936035
    8. '[' → logprob: -4.094780921936035
    9. ' ' → logprob: -4.594780921936035
    10. '.n' → logprob: -4.969780921936035

Token 36: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: '3' (ID: 18)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4526914656162262
    2. '#' → logprob: -1.0776914358139038
    3. '
' → logprob: -5.077691555023193
    4. ' def' → logprob: -5.327691555023193
    5. ' ' → logprob: -6.077691555023193
    6. '<|end|>' → logprob: -6.077691555023193
    7. ')' → logprob: -6.702691555023193
    8. '(' → logprob: -6.702691555023193
    9. '\' → logprob: -7.452691555023193
    10. '\n' → logprob: -7.577691555023193

Token 39: '点' (ID: 8300)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.8928337097167969
    2. 'def' → logprob: -1.0178337097167969
    3. '#' → logprob: -2.267833709716797
    4. '次' → logprob: -3.017833709716797
    5. 'd' → logprob: -4.142833709716797
    6. '.' → logprob: -4.767833709716797
    7. '角' → logprob: -4.767833709716797
    8. '点' → logprob: -4.892833709716797
    9. '行' → logprob: -5.517833709716797
    10. 'つ' → logprob: -5.642833709716797

Token 40: 'が' (ID: 6632)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5164179801940918
    2. 'の' → logprob: -1.5164179801940918
    3. '#' → logprob: -2.016417980194092
    4. '間' → logprob: -3.391417980194092
    5. '```' → logprob: -4.516417980194092
    6. 'を' → logprob: -6.641417980194092
    7. 'から' → logprob: -7.266417980194092
    8. ' の' → logprob: -7.641417980194092
    9. ' def' → logprob: -7.766417980194092
    10. '(' → logprob: -7.891417980194092

Token 41: '反' (ID: 23004)
  Prédit: '同'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '同' → logprob: -0.14388629794120789
    2. '一直' → logprob: -2.5188863277435303
    3. '線' → logprob: -4.018886089324951
    4. '共' → logprob: -4.393886089324951
    5. '平' → logprob: -4.393886089324951
    6. '一' → logprob: -5.518886089324951
    7. '直' → logprob: -6.143886089324951
    8. '三' → logprob: -6.518886089324951
    9. 'col' → logprob: -7.518886089324951
    10. '一次' → logprob: -7.643886089324951

Token 42: '時計' (ID: 133686)
  Prédit: '時計'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '時計' → logprob: -0.0900961384177208
    2. '転' → logprob: -3.2150962352752686
    3. 'clock' → logprob: -3.2150962352752686
    4. '対' → logprob: -6.4650959968566895
    5. '発' → logprob: -6.5900959968566895
    6. '復' → logprob: -7.5900959968566895
    7. 'る' → logprob: -7.7150959968566895
    8. '射' → logprob: -8.215096473693848
    9. '応' → logprob: -8.215096473693848
    10. '```' → logprob: -9.090096473693848

Token 43: '回' (ID: 10154)
  Prédit: '回'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '回' → logprob: -0.02942551299929619
    2. '周' → logprob: -3.779425621032715
    3. '方向' → logprob: -6.154425621032715
    4. '時計' → logprob: -6.279425621032715
    5. 'clock' → logprob: -6.904425621032715
    6. '順' → logprob: -7.279425621032715
    7. '```' → logprob: -8.654425621032715
    8. '``' → logprob: -9.654425621032715
    9. 'ま' → logprob: -9.779425621032715
    10. '"""' → logprob: -10.529425621032715

Token 44: 'り' (ID: 7297)
  Prédit: 'り'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'り' → logprob: -0.0004242395516484976
    2. '```' → logprob: -8.3754243850708
    3. 'る' → logprob: -10.2504243850708
    4. '``' → logprob: -10.2504243850708
    5. '転' → logprob: -11.3754243850708
    6. '</' → logprob: -11.5004243850708
    7. '{' → logprob: -12.0004243850708
    8. '

' → logprob: -12.1254243850708
    9. '#' → logprob: -12.1254243850708
    10. '時計' → logprob: -12.1254243850708

Token 45: 'か' (ID: 7128)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.029427019879221916
    2. ' def' → logprob: -3.9044270515441895
    3. '(' → logprob: -5.9044270515441895
    4. 'か' → logprob: -6.1544270515441895
    5. 'の' → logprob: -6.7794270515441895
    6. ' (' → logprob: -7.7794270515441895
    7. '()' → logprob: -8.029426574707031
    8. '(def' → logprob: -8.154426574707031
    9. ' ' → logprob: -8.279426574707031
    10. ')' → logprob: -8.279426574707031

Token 46: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04588522017002106
    2. ' def' → logprob: -4.17088508605957
    3. 'd' → logprob: -4.29588508605957
    4. ' ' → logprob: -5.42088508605957
    5. ':' → logprob: -6.04588508605957
    6. '(' → logprob: -6.17088508605957
    7. '\' → logprob: -6.42088508605957
    8. '#' → logprob: -7.42088508605957
    9. 's' → logprob: -7.92088508605957
    10. 'e' → logprob: -7.92088508605957

Token 47: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008494485169649124
    2. ' def' → logprob: -5.0084943771362305
    3. 'd' → logprob: -6.3834943771362305
    4. ' 
' → logprob: -9.63349437713623
    5. '\' → logprob: -12.00849437713623
    6. '(def' → logprob: -12.88349437713623
    7. '
' → logprob: -13.13349437713623
    8. ':def' → logprob: -13.50849437713623
    9. '```' → logprob: -13.75849437713623
    10. '<|end|>' → logprob: -13.88349437713623

Token 48: '一直' (ID: 81647)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2519482672214508
    2. ' def' → logprob: -1.5019482374191284
    3. ' 
' → logprob: -12.626948356628418
    4. ' ' → logprob: -12.876948356628418
    5. ':def' → logprob: -13.001948356628418
    6. 'd' → logprob: -13.251948356628418
    7. '	def' → logprob: -14.001948356628418
    8. ' (' → logprob: -14.126948356628418
    9. '#' → logprob: -14.251948356628418
    10. '0' → logprob: -14.376948356628418

Token 49: '線' (ID: 29948)
  Prédit: '線'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '線' → logprob: -0.0022818150464445353
    2. 'line' → logprob: -6.252281665802002
    3. '```' → logprob: -9.50228214263916
    4. ' line' → logprob: -9.87728214263916
    5. '-line' → logprob: -10.12728214263916
    6. '#' → logprob: -10.12728214263916
    7. '#line' → logprob: -10.12728214263916
    8. '(line' → logprob: -10.50228214263916
    9. '行' → logprob: -11.37728214263916
    10. '進' → logprob: -11.37728214263916

Token 50: '上' (ID: 4286)
  Prédit: 'か'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'か' → logprob: -0.06066622585058212
    2. 'def' → logprob: -3.81066632270813
    3. 'の場合' → logprob: -4.435666084289551
    4. 'の' → logprob: -4.935666084289551
    5. 'で' → logprob: -5.935666084289551
    6. 'なら' → logprob: -6.560666084289551
    7. 'なの' → logprob: -6.560666084289551
    8. '#' → logprob: -6.560666084289551
    9. '?' → logprob: -6.685666084289551
    10. 'を' → logprob: -6.810666084289551

Token 51: 'の' (ID: 3385)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.642966091632843
    2. 'か' → logprob: -1.5179660320281982
    3. 'の場合' → logprob: -2.5179660320281982
    4. 'で' → logprob: -3.1429660320281982
    5. 'の' → logprob: -3.2679660320281982
    6. '?' → logprob: -3.6429660320281982
    7. 'では' → logprob: -4.642966270446777
    8. ' def' → logprob: -4.892966270446777
    9. '<|end|>' → logprob: -5.017966270446777
    10. ' ' → logprob: -5.142966270446777

Token 52: 'と' (ID: 5330)
  Prédit: '判'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '判' → logprob: -0.9142436981201172
    2. 'def' → logprob: -1.6642436981201172
    3. '判断' → logprob: -1.7892436981201172
    4. '場合' → logprob: -2.164243698120117
    5. 'と' → logprob: -3.664243698120117
    6. 'か' → logprob: -3.664243698120117
    7. '#' → logprob: -4.039243698120117
    8. '...' → logprob: -4.914243698120117
    9. '点' → logprob: -4.914243698120117
    10. 'ため' → logprob: -5.164243698120117

Token 53: 'き' (ID: 11852)
  Prédit: 'き'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'き' → logprob: -0.0011779663618654013
    2. 'きを' → logprob: -7.501177787780762
    3. '```' → logprob: -7.751177787780762
    4. '#' → logprob: -9.001177787780762
    5. 'る' → logprob: -11.251177787780762
    6. 'is' → logprob: -11.876177787780762
    7. 'な' → logprob: -12.001177787780762
    8. 'ころ' → logprob: -12.001177787780762
    9. 'り' → logprob: -12.001177787780762
    10. 'こ' → logprob: -12.251177787780762

Token 54: 'の' (ID: 3385)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.08915375918149948
    2. 'return' → logprob: -2.71415376663208
    3. ' True' → logprob: -5.58915376663208
    4. ' tmp' → logprob: -6.21415376663208
    5. '#' → logprob: -6.46415376663208
    6. ' False' → logprob: -6.58915376663208
    7. 'は' → logprob: -6.71415376663208
    8. 'False' → logprob: -6.83915376663208
    9. 'True' → logprob: -6.96415376663208
    10. '	return' → logprob: -7.08915376663208

Token 55: '例' (ID: 18647)
  Prédit: '戻'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '戻' → logprob: -0.9281208515167236
    2. '返' → logprob: -1.1781208515167236
    3. '判' → logprob: -1.5531208515167236
    4. 'return' → logprob: -3.5531208515167236
    5. '結果' → logprob: -3.5531208515167236
    6. '処' → logprob: -4.5531206130981445
    7. '動' → logprob: -5.4281206130981445
    8. '評価' → logprob: -6.1781206130981445
    9. '\xe6\x8c' → logprob: -6.3031206130981445
    10. '値' → logprob: -6.5531206130981445

Token 56: '外' (ID: 10727)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8316159248352051
    2. '外' → logprob: -1.206615924835205
    3. 'def' → logprob: -2.206615924835205
    4. ' def' → logprob: -2.706615924835205
    5. ' ' → logprob: -4.331615924835205
    6. ')' → logprob: -4.456615924835205
    7. '0' → logprob: -4.581615924835205
    8. 'え' → logprob: -4.581615924835205
    9. ' #' → logprob: -4.706615924835205
    10. '```' → logprob: -5.456615924835205

Token 57: '処' (ID: 158556)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5905778408050537
    2. ':' → logprob: -1.4655778408050537
    3. ' def' → logprob: -1.9655778408050537
    4. ' :' → logprob: -3.9655778408050537
    5. ' return' → logprob: -4.715578079223633
    6. '<|end|>' → logprob: -4.840578079223633
    7. ' ' → logprob: -5.090578079223633
    8. ' 
' → logprob: -5.215578079223633
    9. ':def' → logprob: -5.590578079223633
    10. ':return' → logprob: -5.715578079223633

Token 58: '理' (ID: 5584)
  Prédit: '外'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '外' → logprob: -0.4317488670349121
    2. ' def' → logprob: -1.181748867034912
    3. 'def' → logprob: -3.431748867034912
    4. ' ' → logprob: -5.806748867034912
    5. '```' → logprob: -6.556748867034912
    6. '#' → logprob: -6.806748867034912
    7. ' #' → logprob: -7.306748867034912
    8. 'd' → logprob: -7.431748867034912
    9. ' 外' → logprob: -7.431748867034912
    10. '외' → logprob: -7.556748867034912

Token 59: 'でき' (ID: 78673)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.042888883501291275
    2. '
' → logprob: -3.542888879776001
    3. ' def' → logprob: -5.54288911819458
    4. ':def' → logprob: -5.66788911819458
    5. '```' → logprob: -6.16788911819458
    6. ':' → logprob: -6.41788911819458
    7. '\' → logprob: -6.79288911819458
    8. ':
' → logprob: -8.417888641357422
    9. '\n' → logprob: -9.042888641357422
    10. ' 
' → logprob: -9.292888641357422

Token 60: 'て' (ID: 5711)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06084167957305908
    2. ' def' → logprob: -3.4358415603637695
    3. ':' → logprob: -4.8108415603637695
    4. '<|end|>' → logprob: -5.3108415603637695
    5. ':def' → logprob: -5.6858415603637695
    6. '```' → logprob: -5.8108415603637695
    7. '
' → logprob: -6.0608415603637695
    8. '\' → logprob: -7.0608415603637695
    9. ' (' → logprob: -7.6858415603637695
    10. ' ' → logprob: -7.6858415603637695

Token 61: 'い' (ID: 3826)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08821187168359756
    2. ' def' → logprob: -3.21321177482605
    3. '
' → logprob: -3.71321177482605
    4. '```' → logprob: -4.338212013244629
    5. ':def' → logprob: -6.463212013244629
    6. ':' → logprob: -6.463212013244629
    7. '<|end|>' → logprob: -6.838212013244629
    8. '(' → logprob: -7.838212013244629
    9. ' ' → logprob: -8.713212013244629
    10. ',' → logprob: -8.838212013244629

Token 62: 'ない' (ID: 47592)
  Prédit: 'ない'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ない' → logprob: -0.3339133560657501
    2. 'ません' → logprob: -1.9589133262634277
    3. 'な' → logprob: -2.9589133262634277
    4. 'def' → logprob: -2.9589133262634277
    5. 'て' → logprob: -4.208913326263428
    6. '#' → logprob: -4.958913326263428
    7. '```' → logprob: -5.208913326263428
    8. 'ず' → logprob: -5.583913326263428
    9. 'ませ' → logprob: -6.458913326263428
    10. 'い' → logprob: -6.708913326263428

Token 63: '→' (ID: 20216)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.034878503531217575
    2. '
' → logprob: -3.6598784923553467
    3. '\' → logprob: -5.534878730773926
    4. 'd' → logprob: -6.659878730773926
    5. ' def' → logprob: -6.784878730773926
    6. ':def' → logprob: -7.409878730773926
    7. '```' → logprob: -7.659878730773926
    8. ':' → logprob: -7.784878730773926
    9. 'de' → logprob: -9.034878730773926
    10. '\n' → logprob: -9.159878730773926

Token 64: 'と' (ID: 5330)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.4196839332580566
    2. ' def' → logprob: -1.7946839332580566
    3. '#' → logprob: -1.9196839332580566
    4. ' #' → logprob: -1.9196839332580566
    5. ' ' → logprob: -2.7946839332580566
    6. ' return' → logprob: -3.1696839332580566
    7. ' True' → logprob: -3.5446839332580566
    8. 'import' → logprob: -3.5446839332580566
    9. ' import' → logprob: -3.7946839332580566
    10. '続きを' → logprob: -4.419683933258057

Token 65: 'り' (ID: 7297)
  Prédit: 'り'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'り' → logprob: -0.018770428374409676
    2. 'に' → logprob: -5.018770217895508
    3. '#' → logprob: -5.393770217895508
    4. 'ても' → logprob: -6.143770217895508
    5. 'く' → logprob: -6.393770217895508
    6. 'の' → logprob: -7.393770217895508
    7. 'き' → logprob: -7.518770217895508
    8. 'いう' → logprob: -7.643770217895508
    9. 'つ' → logprob: -8.768770217895508
    10. 'れ' → logprob: -8.893770217895508

Token 66: 'あ' (ID: 10294)
  Prédit: 'あ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'あ' → logprob: -0.0008360736537724733
    2. 'け' → logprob: -7.25083589553833
    3. '```' → logprob: -9.625836372375488
    4. '急' → logprob: -11.000836372375488
    5. 'か' → logprob: -11.375836372375488
    6. '#' → logprob: -11.500836372375488
    7. 'う' → logprob: -11.875836372375488
    8. 'え' → logprob: -12.625836372375488
    9. 'ま' → logprob: -13.625836372375488
    10. '扱' → logprob: -13.750836372375488

Token 67: 'え' (ID: 18606)
  Prédit: 'え'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'え' → logprob: -0.018299540504813194
    2. 'あ' → logprob: -4.018299579620361
    3. 'け' → logprob: -8.893299102783203
    4. 'い' → logprob: -12.643299102783203
    5. 'えて' → logprob: -12.768299102783203
    6. '```' → logprob: -13.143299102783203
    7. 'ず' → logprob: -13.518299102783203
    8. 'げ' → logprob: -14.268299102783203
    9. 'か' → logprob: -14.518299102783203
    10. 'ぜ' → logprob: -15.393299102783203

Token 68: 'ず' (ID: 36743)
  Prédit: 'す'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'す' → logprob: -0.6795995831489563
    2. 'し' → logprob: -1.8045995235443115
    3. 'ず' → logprob: -2.6795995235443115
    4. 'して' → logprob: -2.8045995235443115
    5. '```' → logprob: -3.5545995235443115
    6. 'え' → logprob: -3.8045995235443115
    7. 'せ' → logprob: -3.8045995235443115
    8. 'け' → logprob: -3.9295995235443115
    9. 'る' → logprob: -4.054599761962891
    10. 'き' → logprob: -4.429599761962891

Token 69: 'T' (ID: 51)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008324846625328064
    2. ' def' → logprob: -5.38332462310791
    3. '<|end|>' → logprob: -6.13332462310791
    4. '<|end|>' → logprob: -7.13332462310791
    5. '#' → logprob: -8.13332462310791
    6. '```' → logprob: -9.00832462310791
    7. 'import' → logprob: -9.75832462310791
    8. ' ' → logprob: -10.25832462310791
    9. '続きを' → logprob: -10.25832462310791
    10. 'return' → logprob: -11.13332462310791

Token 70: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0032134840730577707
    2. ' def' → logprob: -6.128213405609131
    3. '(' → logprob: -8.378213882446289
    4. '
' → logprob: -9.003213882446289
    5. ')' → logprob: -9.128213882446289
    6. '<|end|>' → logprob: -9.503213882446289
    7. '(def' → logprob: -9.753213882446289
    8. '\' → logprob: -9.753213882446289
    9. '#' → logprob: -9.878213882446289
    10. ' (' → logprob: -10.003213882446289

Token 71: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0027711205184459686
    2. '
' → logprob: -6.252770900726318
    3. ' def' → logprob: -8.002771377563477
    4. '\' → logprob: -8.752771377563477
    5. '```' → logprob: -8.877771377563477
    6. ':def' → logprob: -9.627771377563477
    7. 'ndef' → logprob: -10.252771377563477
    8. '(' → logprob: -10.877771377563477
    9. '(def' → logprob: -11.127771377563477
    10. '	def' → logprob: -11.752771377563477

Token 72: ' CC' (ID: 21547)
  Prédit: ' Is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Is' → logprob: -0.6450133919715881
    2. ' is' → logprob: -2.1450133323669434
    3. ' cc' → logprob: -2.1450133323669434
    4. ' CC' → logprob: -2.7700133323669434
    5. ' Counter' → logprob: -3.2700133323669434
    6. 'Is' → logprob: -3.7075133323669434
    7. 'cc' → logprob: -4.020013332366943
    8. 'CC' → logprob: -4.082513332366943
    9. 'is' → logprob: -4.457513332366943
    10. '	Is' → logprob: -4.832513332366943

Token 73: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0002913678181357682
    2. '

' → logprob: -9.75029182434082
    3. 'ｗ' → logprob: -9.87529182434082
    4. '\xef\xbc' → logprob: -10.12529182434082
    5. '
' → logprob: -10.75029182434082
    6. '```' → logprob: -11.12529182434082
    7. 'w' → logprob: -11.50029182434082
    8. '(' → logprob: -11.62529182434082
    9. '``' → logprob: -11.62529182434082
    10. 'WD' → logprob: -11.75029182434082

Token 74: '(p' (ID: 2407)
  Prédit: '(one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(one' → logprob: -0.32637304067611694
    2. '(a' → logprob: -1.9513731002807617
    3. '(p' → logprob: -2.2013731002807617
    4. '(A' → logprob: -3.9513731002807617
    5. '(' → logprob: -5.451373100280762
    6. '(point' → logprob: -6.701373100280762
    7. '(P' → logprob: -7.826373100280762
    8. '(points' → logprob: -8.576373100280762
    9. ' (' → logprob: -9.076373100280762
    10. '(x' → logprob: -9.951373100280762

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02156757563352585
    2. '):' → logprob: -4.271567344665527
    3. ',p' → logprob: -5.521567344665527
    4. '1' → logprob: -6.521567344665527
    5. 'p' → logprob: -7.396567344665527
    6. ',a' → logprob: -8.021567344665527
    7. 'a' → logprob: -8.271567344665527
    8. '0' → logprob: -8.271567344665527
    9. ' ,' → logprob: -8.896567344665527
    10. ')' → logprob: -9.771567344665527

Token 76: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0477580726146698
    2. 'a' → logprob: -3.297758102416992
    3. ' q' → logprob: -4.797758102416992
    4. 'p' → logprob: -7.547758102416992
    5. ' a' → logprob: -7.797758102416992
    6. 'A' → logprob: -9.172758102416992
    7. 'l' → logprob: -9.422758102416992
    8. ' ' → logprob: -9.797758102416992
    9. '	q' → logprob: -9.797758102416992
    10. 'one' → logprob: -10.047758102416992

Token 77: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026672963052988052
    2. ',' → logprob: -3.6516730785369873
    3. ')' → logprob: -8.026673316955566
    4. ' ):' → logprob: -10.651673316955566
    5. '):
' → logprob: -12.026673316955566
    6. ',p' → logprob: -12.401673316955566
    7. ')：' → logprob: -12.401673316955566
    8. '   ' → logprob: -13.776673316955566
    9. ' ' → logprob: -13.901673316955566
    10. '）：' → logprob: -13.901673316955566

Token 78: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.008654399774968624
    2. ' r' → logprob: -4.758654594421387
    3. ' ' → logprob: -11.258654594421387
    4. '	r' → logprob: -11.758654594421387
    5. ')' → logprob: -12.133654594421387
    6. 'p' → logprob: -12.258654594421387
    7. ' ' → logprob: -13.383654594421387
    8. '  ' → logprob: -13.883654594421387
    9. 's' → logprob: -14.133654594421387
    10. 'a' → logprob: -14.508654594421387

Token 79: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001375114545226097
    2. ')' → logprob: -6.626375198364258
    3. ' ):' → logprob: -10.876375198364258
    4. ')：' → logprob: -10.876375198364258
    5. '):
' → logprob: -12.001375198364258
    6. '）：' → logprob: -13.126375198364258
    7. ':' → logprob: -13.751375198364258
    8. ',' → logprob: -15.001375198364258
    9. ' ' → logprob: -15.126375198364258
    10. '):
' → logprob: -15.251375198364258

Token 80: '	' (ID: 197)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3806385397911072
    2. '   ' → logprob: -1.380638599395752
    3. '	return' → logprob: -3.005638599395752
    4. '	tmp' → logprob: -5.380638599395752
    5. ' return' → logprob: -6.380638599395752
    6. ':
' → logprob: -6.380638599395752
    7. ':return' → logprob: -7.005638599395752
    8. '	p' → logprob: -7.005638599395752
    9. '	x' → logprob: -7.255638599395752
    10. ',' → logprob: -7.505638599395752

Token 81: 'one' (ID: 690)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9842265248298645
    2. 'tmp' → logprob: -1.3592264652252197
    3. 'v' → logprob: -1.7342264652252197
    4. 'vec' → logprob: -3.1092264652252197
    5. '	return' → logprob: -3.8592264652252197
    6. 'cross' → logprob: -4.234226703643799
    7. 'ret' → logprob: -4.359226703643799
    8. 'area' → logprob: -4.359226703643799
    9. 'cp' → logprob: -4.359226703643799
    10. '	tmp' → logprob: -4.484226703643799

Token 82: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38753002882003784
    2. ' =' → logprob: -1.1375300884246826
    3. ',' → logprob: -7.5125298500061035
    4. '=p' → logprob: -9.637530326843262
    5. '	' → logprob: -10.887530326843262
    6. '＝' → logprob: -11.137530326843262
    7. 'p' → logprob: -12.387530326843262
    8. ')' → logprob: -12.762530326843262
    9. ',p' → logprob: -13.262530326843262
    10. ' ' → logprob: -13.887530326843262

Token 83: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.14743879437446594
    2. ' two' → logprob: -2.8974387645721436
    3. 'pq' → logprob: -2.8974387645721436
    4. 'q' → logprob: -4.522439002990723
    5. 'p' → logprob: -5.022439002990723
    6. ' =' → logprob: -5.647439002990723
    7. ' pq' → logprob: -6.522439002990723
    8. 'tmp' → logprob: -6.522439002990723
    9. '	' → logprob: -6.897439002990723
    10. '=' → logprob: -7.522439002990723

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6328514814376831
    2. '=' → logprob: -0.7578514814376831
    3. ',' → logprob: -8.382851600646973
    4. ' ' → logprob: -11.882851600646973
    5. '＝' → logprob: -11.882851600646973
    6. '	' → logprob: -12.507851600646973
    7. '=p' → logprob: -13.632851600646973
    8. ' ' → logprob: -13.632851600646973
    9. ')' → logprob: -14.257851600646973
    10. 'p' → logprob: -14.632851600646973

Token 85: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.09605376422405243
    2. '(q' → logprob: -2.4710538387298584
    3. '	q' → logprob: -5.846053600311279
    4. ' q' → logprob: -6.096053600311279
    5. 'complex' → logprob: -7.221053600311279
    6. ' (' → logprob: -7.721053600311279
    7. '[q' → logprob: -8.596054077148438
    8. '(p' → logprob: -9.346054077148438
    9. 'p' → logprob: -9.346054077148438
    10. ' complex' → logprob: -9.596054077148438

Token 86: '-p' (ID: 3161)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.17337502539157867
    2. '[' → logprob: -2.548375129699707
    3. '-p' → logprob: -3.298375129699707
    4. ' -' → logprob: -3.548375129699707
    5. ' ' → logprob: -5.048375129699707
    6. 'p' → logprob: -5.298375129699707
    7. '	' → logprob: -7.298375129699707
    8. '.subtract' → logprob: -7.548375129699707
    9. 'import' → logprob: -8.173375129699707
    10. '.minus' → logprob: -8.298375129699707

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005158808082342148
    2. ',t' → logprob: -6.0051589012146
    3. ' ,' → logprob: -6.6301589012146
    4. ',r' → logprob: -7.5051589012146
    5. ',q' → logprob: -8.255158424377441
    6. ',
' → logprob: -9.380158424377441
    7. '
' → logprob: -9.380158424377441
    8. '	t' → logprob: -9.755158424377441
    9. 'r' → logprob: -9.880158424377441
    10. ',tmp' → logprob: -9.880158424377441

Token 88: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.5762557983398438
    2. 'r' → logprob: -0.8262557983398438
    3. '	r' → logprob: -8.076255798339844
    4. ' ' → logprob: -12.576255798339844
    5. ' ' → logprob: -14.201255798339844
    6. '	' → logprob: -14.826255798339844
    7. '  ' → logprob: -14.951255798339844
    8. '   ' → logprob: -14.951255798339844
    9. '­r' → logprob: -16.826255798339844
    10. '_r' → logprob: -16.826255798339844

Token 89: '-q' (ID: 62760)
  Prédit: '-p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-p' → logprob: -0.005661648698151112
    2. '-q' → logprob: -5.505661487579346
    3. '-' → logprob: -6.630661487579346
    4. ' -' → logprob: -8.255661964416504
    5. '	' → logprob: -13.880661964416504
    6. 'p' → logprob: -14.255661964416504
    7. '	p' → logprob: -14.755661964416504
    8. '-n' → logprob: -15.255661964416504
    9. ' ' → logprob: -15.755661964416504
    10. '-P' → logprob: -16.380661010742188

Token 90: '
' (ID: 198)
  Prédit: '	return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	return' → logprob: -0.027933986857533455
    2. '	tmp' → logprob: -4.1529340744018555
    3. '	if' → logprob: -5.2779340744018555
    4. '
' → logprob: -7.0279340744018555
    5. '	line' → logprob: -7.6529340744018555
    6. '	t' → logprob: -7.6529340744018555
    7. '	
' → logprob: -7.7779340744018555
    8. '	' → logprob: -7.9029340744018555
    9. '	out' → logprob: -8.277934074401855
    10. ',' → logprob: -8.277934074401855

Token 91: '	if' (ID: 1224)
  Prédit: '	return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	return' → logprob: -0.10649674385786057
    2. '	if' → logprob: -2.356496810913086
    3. '   ' → logprob: -5.856496810913086
    4. '	' → logprob: -7.481496810913086
    5. '	
' → logprob: -7.731496810913086
    6. '	tmp' → logprob: -7.856496810913086
    7. '<|end|>' → logprob: -8.106496810913086
    8. '
' → logprob: -8.481496810913086
    9. '	while' → logprob: -9.481496810913086
    10. '	for' → logprob: -9.481496810913086

Token 92: ' Outer' (ID: 102576)
  Prédit: ' Outer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Outer' → logprob: -0.34073972702026367
    2. ' abs' → logprob: -1.8407397270202637
    3. 'Outer' → logprob: -2.3407397270202637
    4. 'abs' → logprob: -3.5907397270202637
    5. '(abs' → logprob: -5.715739727020264
    6. '(' → logprob: -6.715739727020264
    7. '	' → logprob: -7.215739727020264
    8. 'Abs' → logprob: -8.465740203857422
    9. ' outer' → logprob: -8.965740203857422
    10. ' ' → logprob: -9.278240203857422

Token 93: 'Product' (ID: 4532)
  Prédit: 'Product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Product' → logprob: -3.128163257315464e-07
    2. 'product' → logprob: -15.875
    3. '	Product' → logprob: -16.75
    4. ' Product' → logprob: -17.125
    5. '<Product' → logprob: -18.375
    6. ' product' → logprob: -18.375
    7. '_product' → logprob: -19.0
    8. 'Products' → logprob: -19.625
    9. '[' → logprob: -20.5
    10. '(' → logprob: -20.625

Token 94: '(one' (ID: 92717)
  Prédit: '(one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(one' → logprob: -0.00013357517309486866
    2. '(' → logprob: -9.625133514404297
    3. '(two' → logprob: -9.750133514404297
    4. ' (' → logprob: -12.375133514404297
    5. '	' → logprob: -12.750133514404297
    6. '(tmp' → logprob: -13.750133514404297
    7. '(
' → logprob: -15.250133514404297
    8. ' ' → logprob: -15.875133514404297
    9. '(on' → logprob: -16.625133514404297
    10. '((' → logprob: -16.625133514404297

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011096131056547165
    2. ',t' → logprob: -7.126109600067139
    3. ' ,' → logprob: -8.251110076904297
    4. '	' → logprob: -10.626110076904297
    5. '(two' → logprob: -11.876110076904297
    6. '，' → logprob: -12.376110076904297
    7. '(' → logprob: -13.126110076904297
    8. '、' → logprob: -13.501110076904297
    9. '	t' → logprob: -13.626110076904297
    10. ' ' → logprob: -13.876110076904297

Token 96: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.012895719148218632
    2. ' two' → logprob: -4.387895584106445
    3. '	t' → logprob: -7.887895584106445
    4. 'tw' → logprob: -11.887895584106445
    5. 't' → logprob: -13.387895584106445
    6. ' ' → logprob: -13.762895584106445
    7. '	' → logprob: -14.262895584106445
    8. '(two' → logprob: -15.012895584106445
    9. '   ' → logprob: -16.637895584106445
    10. 'Two' → logprob: -16.762895584106445

Token 97: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010417404118925333
    2. ')>' → logprob: -7.751041889190674
    3. '>' → logprob: -8.876041412353516
    4. ')>=' → logprob: -9.001041412353516
    5. ' )' → logprob: -9.376041412353516
    6. ' >' → logprob: -9.501041412353516
    7. ')<' → logprob: -9.626041412353516
    8. '	' → logprob: -10.501041412353516
    9. ')<=' → logprob: -10.751041412353516
    10. '()' → logprob: -11.126041412353516

Token 98: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.14593201875686646
    2. '>' → logprob: -2.0209319591522217
    3. ' ' → logprob: -6.520932197570801
    4. ' >=' → logprob: -6.770932197570801
    5. ' <' → logprob: -8.1459321975708
    6. '>=' → logprob: -8.5209321975708
    7. '<' → logprob: -10.6459321975708
    8. ')' → logprob: -11.0209321975708
    9. '	' → logprob: -11.0209321975708
    10. ' <=' → logprob: -11.4584321975708

Token 99: ' -' (ID: 533)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.3308658003807068
    2. '0' → logprob: -1.8308658599853516
    3. ' EPS' → logprob: -2.3308658599853516
    4. ' ' → logprob: -3.8308658599853516
    5. '-' → logprob: -7.330865859985352
    6. '-E' → logprob: -7.330865859985352
    7. '	E' → logprob: -7.705865859985352
    8. '	' → logprob: -9.080865859985352
    9. ' -' → logprob: -9.080865859985352
    10. 'E' → logprob: -9.080865859985352

Token 100: 'EPS' (ID: 82793)
  Prédit: 'EPS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.008633715100586414
    2. ' EPS' → logprob: -4.758633613586426
    3. 'EP' → logprob: -11.508633613586426
    4. '1' → logprob: -12.758633613586426
    5. ' ' → logprob: -13.008633613586426
    6. '10' → logprob: -13.633633613586426
    7. 'ES' → logprob: -13.758633613586426
    8. 'eps' → logprob: -14.258633613586426
    9. 'ESP' → logprob: -14.883633613586426
    10. '100' → logprob: -15.508633613586426

Token 101: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11719469726085663
    2. '	return' → logprob: -3.242194652557373
    3. ':return' → logprob: -3.492194652557373
    4. ':
' → logprob: -4.242194652557373
    5. ' :' → logprob: -4.492194652557373
    6. '	' → logprob: -4.992194652557373
    7. ' return' → logprob: -5.492194652557373
    8. ' ' → logprob: -6.367194652557373
    9. '   ' → logprob: -6.617194652557373
    10. ' :
' → logprob: -8.117195129394531

Token 102: '	' (ID: 197)
  Prédit: '	'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.08260190486907959
    2. ' True' → logprob: -2.582602024078369
    3. '       ' → logprob: -6.582602024078369
    4. 'True' → logprob: -7.207602024078369
    5. ' return' → logprob: -7.707602024078369
    6. '	return' → logprob: -7.832602024078369
    7. ' true' → logprob: -8.707601547241211
    8. ' 	' → logprob: -8.832601547241211
    9. '	true' → logprob: -9.082601547241211
    10. 'return' → logprob: -9.082601547241211

Token 103: '	return' (ID: 1393)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.0035951947793364525
    2. ' return' → logprob: -6.253595352172852
    3. '	return' → logprob: -7.378595352172852
    4. 'return' → logprob: -7.503595352172852
    5. ' 	' → logprob: -8.128595352172852
    6. ' True' → logprob: -9.628595352172852
    7. '       ' → logprob: -9.878595352172852
    8. ' true' → logprob: -10.753595352172852
    9. ' ' → logprob: -11.378595352172852
    10. '		' → logprob: -11.503595352172852

Token 104: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.31339937448501587
    2. 'True' → logprob: -1.313399314880371
    3. 'T' → logprob: -10.563399314880371
    4. ' ' → logprob: -10.563399314880371
    5. ' T' → logprob: -10.813399314880371
    6. '	' → logprob: -10.938399314880371
    7. '1' → logprob: -11.438399314880371
    8. '	T' → logprob: -11.688399314880371
    9. 'False' → logprob: -12.313399314880371
    10. '"' → logprob: -12.313399314880371

Token 105: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 106: '	else' (ID: 5107)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: ':
' (ID: 734)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.0785503163933754
    2. ':' → logprob: -3.328550338745117
    3. ':
' → logprob: -3.703550338745117
    4. '	return' → logprob: -4.578550338745117
    5. ' return' → logprob: -6.453550338745117
    6. ':return' → logprob: -7.328550338745117
    7. '
' → logprob: -7.578550338745117
    8. ' 	' → logprob: -7.703550338745117
    9. '       ' → logprob: -7.828550338745117
    10. 'return' → logprob: -8.328550338745117

Token 108: '	' (ID: 197)
  Prédit: '	'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.006210085935890675
    2. '	return' → logprob: -5.131209850311279
    3. ' return' → logprob: -8.631210327148438
    4. 'False' → logprob: -10.631210327148438
    5. 'return' → logprob: -10.756210327148438
    6. '       ' → logprob: -11.006210327148438
    7. ' False' → logprob: -11.256210327148438
    8. ' 	' → logprob: -11.381210327148438
    9. '	false' → logprob: -12.006210327148438
    10. '	   ' → logprob: -12.381210327148438

Token 109: '	return' (ID: 1393)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5132296085357666
    2. 'return' → logprob: -1.0132296085357666
    3. '	return' → logprob: -3.2632296085357666
    4. '	' → logprob: -9.263229370117188
    5. 'False' → logprob: -10.763229370117188
    6. '       ' → logprob: -11.638229370117188
    7. ' False' → logprob: -12.888229370117188
    8. ' ' → logprob: -13.763229370117188
    9. '   ' → logprob: -13.888229370117188
    10. ':return' → logprob: -14.263229370117188

Token 110: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.061967797577381134
    2. ' False' → logprob: -2.8119678497314453
    3. '(False' → logprob: -16.311967849731445
    4. ' ' → logprob: -18.186967849731445
    5. '=False' → logprob: -18.561967849731445
    6. 'True' → logprob: -19.561967849731445
    7. '	' → logprob: -19.936967849731445
    8. 'F' → logprob: -20.186967849731445
    9. '   ' → logprob: -20.186967849731445
    10. '.False' → logprob: -20.936967849731445

Token 111: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 112: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: '凸' (ID: 168003)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4229637384414673
    2. '#' → logprob: -1.5479637384414673
    3. ')' → logprob: -2.7979636192321777
    4. '<|end|>' → logprob: -3.2979636192321777
    5. 'p' → logprob: -4.797963619232178
    6. 'import' → logprob: -5.547963619232178
    7. '
' → logprob: -5.797963619232178
    8. '<|end|>' → logprob: -5.922963619232178
    9. ',' → logprob: -6.047963619232178
    10. ' ' → logprob: -6.297963619232178

Token 114: '包' (ID: 18201)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02413155324757099
    2. '#' → logprob: -4.149131774902344
    3. ' hull' → logprob: -5.774131774902344
    4. 'Hull' → logprob: -6.274131774902344
    5. 'h' → logprob: -7.149131774902344
    6. '_h' → logprob: -7.399131774902344
    7. ' def' → logprob: -8.649131774902344
    8. '_' → logprob: -8.649131774902344
    9. ' Hull' → logprob: -8.649131774902344
    10. 'import' → logprob: -9.274131774902344

Token 115: 'リ' (ID: 9007)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000327956018736586
    2. '
' → logprob: -8.375328063964844
    3. ' def' → logprob: -9.500328063964844
    4. 'import' → logprob: -11.875328063964844
    5. 'from' → logprob: -11.875328063964844
    6. '#' → logprob: -13.125328063964844
    7. '<|end|>' → logprob: -13.500328063964844
    8. '  
' → logprob: -13.750328063964844
    9. ':def' → logprob: -14.000328063964844
    10. '```' → logprob: -14.125328063964844

Token 116: 'スト' (ID: 38236)
  Prédit: 'スト'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'スト' → logprob: -0.0007567389984615147
    2. 'ス' → logprob: -7.500756740570068
    3. 'ン' → logprob: -9.25075626373291
    4. '```' → logprob: -11.00075626373291
    5. '``' → logprob: -11.12575626373291
    6. 'st' → logprob: -11.37575626373291
    7. 'ム' → logprob: -11.87575626373291
    8. '
' → logprob: -12.00075626373291
    9. 'クト' → logprob: -12.00075626373291
    10. '

' → logprob: -12.12575626373291

Token 117: 'を' (ID: 7277)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0016391159733757377
    2. 'points' → logprob: -7.251638889312744
    3. '[]' → logprob: -7.626638889312744
    4. 'conv' → logprob: -9.501639366149902
    5. ' points' → logprob: -9.626639366149902
    6. ' def' → logprob: -9.751639366149902
    7. '#' → logprob: -9.876639366149902
    8. '=[]' → logprob: -10.001639366149902
    9. '<|end|>' → logprob: -11.251639366149902
    10. ':' → logprob: -11.376639366149902

Token 118: '返' (ID: 16181)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7320180535316467
    2. '作' → logprob: -1.232017993927002
    3. 'def' → logprob: -2.357017993927002
    4. '凸' → logprob: -3.357017993927002
    5. '生成' → logprob: -3.607017993927002
    6. '返' → logprob: -3.857017993927002
    7. '求' → logprob: -4.232017993927002
    8. '使' → logprob: -4.607017993927002
    9. '得' → logprob: -5.982017993927002
    10. 'conv' → logprob: -6.107017993927002

Token 119: 'す' (ID: 4868)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006744150537997484
    2. ' def' → logprob: -5.006744384765625
    3. '(def' → logprob: -11.131744384765625
    4. '#' → logprob: -12.006744384765625
    5. '	def' → logprob: -12.381744384765625
    6. 'from' → logprob: -13.631744384765625
    7. '(' → logprob: -13.631744384765625
    8. '
' → logprob: -14.756744384765625
    9. ':def' → logprob: -15.006744384765625
    10. ' ' → logprob: -15.631744384765625

Token 120: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.5094070477061905e-05
    2. ' def' → logprob: -11.125015258789062
    3. '
' → logprob: -15.125015258789062
    4. '	def' → logprob: -17.375015258789062
    5. '```' → logprob: -17.875015258789062
    6. 'from' → logprob: -18.125015258789062
    7. 'import' → logprob: -18.625015258789062
    8. ':def' → logprob: -19.750015258789062
    9. 'de' → logprob: -20.375015258789062
    10. '#' → logprob: -20.625015258789062

Token 121: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.512236498361744e-07
    2. ' def' → logprob: -14.500000953674316
    3. 'from' → logprob: -18.5
    4. 'import' → logprob: -18.75
    5. '```' → logprob: -19.125
    6. 'de' → logprob: -19.75
    7. '
' → logprob: -20.625
    8. '	def' → logprob: -20.625
    9. ':def' → logprob: -20.75
    10. '#' → logprob: -23.5

Token 122: ' Conv' (ID: 52133)
  Prédit: 'Conv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Conv' → logprob: -0.7059465646743774
    2. ' Conv' → logprob: -0.7059465646743774
    3. 'G' → logprob: -5.580946445465088
    4. ' convex' → logprob: -6.205946445465088
    5. 'Make' → logprob: -6.580946445465088
    6. 'conv' → logprob: -6.705946445465088
    7. 'Get' → logprob: -6.705946445465088
    8. ' Get' → logprob: -6.705946445465088
    9. ' Make' → logprob: -7.830946445465088
    10. ' Compute' → logprob: -8.705946922302246

Token 123: 'ex' (ID: 490)
  Prédit: 'ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -1.282920129597187e-05
    2. 'Hull' → logprob: -11.500012397766113
    3. 'e' → logprob: -14.250012397766113
    4. 'Ex' → logprob: -15.125012397766113
    5. 'Conv' → logprob: -15.125012397766113
    6. '	ex' → logprob: -15.375012397766113
    7. 'EX' → logprob: -15.500012397766113
    8. 'exp' → logprob: -15.625012397766113
    9. '```' → logprob: -15.875012397766113
    10. 'ext' → logprob: -15.875012397766113

Token 124: 'Hull' (ID: 159984)
  Prédit: 'Hull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Hull' → logprob: -1.9743012671824545e-05
    2. 'h' → logprob: -11.250020027160645
    3. '_h' → logprob: -13.250020027160645
    4. '#' → logprob: -13.875020027160645
    5. 'Envelope' → logprob: -14.000020027160645
    6. ' Hull' → logprob: -14.125020027160645
    7. 'Polygon' → logprob: -14.375020027160645
    8. ' hull' → logprob: -15.000020027160645
    9. 'Hall' → logprob: -15.000020027160645
    10. 'Chain' → logprob: -15.875020027160645

Token 125: '(d' (ID: 2572)
  Prédit: '(points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.011585543863475323
    2. '(P' → logprob: -5.261585712432861
    3. '(point' → logprob: -5.761585712432861
    4. '(ps' → logprob: -6.511585712432861
    5. '(' → logprob: -6.886585712432861
    6. '(p' → logprob: -7.761585712432861
    7. '(Point' → logprob: -9.011585235595703
    8. '(arr' → logprob: -9.386585235595703
    9. '(lst' → logprob: -11.386585235595703
    10. '(S' → logprob: -11.761585235595703

Token 126: 'ots' (ID: 2677)
  Prédit: 'ata'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ata' → logprob: -0.09694048762321472
    2. '):' → logprob: -3.346940517425537
    3. 'ots' → logprob: -3.596940517425537
    4. 'atas' → logprob: -4.471940517425537
    5. 'atalist' → logprob: -4.971940517425537
    6. 'list' → logprob: -6.096940517425537
    7. '):
' → logprob: -6.471940517425537
    8. 'ef' → logprob: -6.971940517425537
    9. '_points' → logprob: -7.096940517425537
    10. 'ataset' → logprob: -7.096940517425537

Token 127: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0018172669224441051
    2. '):
' → logprob: -6.376817226409912
    3. ')' → logprob: -10.12681770324707
    4. ' ):' → logprob: -10.25181770324707
    5. '):
' → logprob: -10.50181770324707
    6. ':' → logprob: -11.75181770324707
    7. ')：' → logprob: -13.50181770324707
    8. '):

' → logprob: -14.37681770324707
    9. '[]):' → logprob: -14.50181770324707
    10. '）：' → logprob: -14.62681770324707

Token 128: '	d' (ID: 5971)
  Prédit: '	n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	n' → logprob: -0.647152304649353
    2. '	d' → logprob: -0.897152304649353
    3. '	if' → logprob: -3.6471524238586426
    4. '	s' → logprob: -4.147152423858643
    5. 'dots' → logprob: -5.022152423858643
    6. '   ' → logprob: -5.647152423858643
    7. '	N' → logprob: -5.772152423858643
    8. '	points' → logprob: -6.022152423858643
    9. '	p' → logprob: -6.272152423858643
    10. '	l' → logprob: -6.397152423858643

Token 129: 'ots' (ID: 2677)
  Prédit: 'ots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ots' → logprob: -0.00018732868193183094
    2. 'sorted' → logprob: -10.000186920166016
    3. 'ot' → logprob: -10.375186920166016
    4. 'o' → logprob: -10.750186920166016
    5. 'dots' → logprob: -11.000186920166016
    6. 's' → logprob: -11.250186920166016
    7. 'e' → logprob: -12.000186920166016
    8. 'ef' → logprob: -12.125186920166016
    9. '_sorted' → logprob: -12.125186920166016
    10. 'OTS' → logprob: -12.250186920166016

Token 130: '.sort' (ID: 19551)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29903849959373474
    2. '=' → logprob: -1.6740385293960571
    3. '.sort' → logprob: -2.6740384101867676
    4. '_sorted' → logprob: -6.924038410186768
    5. 'sorted' → logprob: -7.799038410186768
    6. '＝' → logprob: -8.174038887023926
    7. '.sorted' → logprob: -8.799038887023926
    8. '.' → logprob: -9.799038887023926
    9. '[:]' → logprob: -10.299038887023926
    10. ' sorted' → logprob: -10.799038887023926

Token 131: '(key' (ID: 8932)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6934905052185059
    2. '(key' → logprob: -0.6934905052185059
    3. '(reverse' → logprob: -8.068490982055664
    4. 'key' → logprob: -10.943490982055664
    5. '(' → logprob: -11.943490982055664
    6. '()
' → logprob: -12.443490982055664
    7. '(keys' → logprob: -15.318490982055664
    8. '(inplace' → logprob: -15.443490982055664
    9. '()(' → logprob: -15.568490982055664
    10. ',key' → logprob: -15.568490982055664

Token 132: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0007220837287604809
    2. '=' → logprob: -7.2507219314575195
    3. ' =' → logprob: -11.37572193145752
    4. '=len' → logprob: -15.00072193145752
    5. '=l' → logprob: -15.87572193145752
    6. '＝' → logprob: -16.375722885131836
    7. '=str' → logprob: -18.250722885131836
    8. '=
' → logprob: -18.750722885131836
    9. '	' → logprob: -19.250722885131836
    10. '=float' → logprob: -19.500722885131836

Token 133: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.19631728529930115
    2. ' x' → logprob: -2.571317195892334
    3. 'p' → logprob: -2.696317195892334
    4. 'dot' → logprob: -4.071317195892334
    5. ' p' → logprob: -4.446317195892334
    6. 'd' → logprob: -6.071317195892334
    7. ' dot' → logprob: -6.571317195892334
    8. 'a' → logprob: -7.446317195892334
    9. 'point' → logprob: -8.071317672729492
    10. ' a' → logprob: -8.821317672729492

Token 134: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006310671451501548
    2. ':x' → logprob: -7.500630855560303
    3. ':(' → logprob: -9.750631332397461
    4. ' :' → logprob: -10.875631332397461
    5. '：' → logprob: -14.875631332397461
    6. ':
' → logprob: -15.375631332397461
    7. 'x' → logprob: -16.62563133239746
    8. ' :(' → logprob: -16.87563133239746
    9. ':

' → logprob: -17.75063133239746
    10. '	' → logprob: -17.75063133239746

Token 135: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.004489700309932232
    2. ' (' → logprob: -5.629489898681641
    3. 'x' → logprob: -7.129489898681641
    4. '(' → logprob: -9.62948989868164
    5. '(d' → logprob: -12.00448989868164
    6. ' x' → logprob: -12.12948989868164
    7. '[x' → logprob: -12.87948989868164
    8. '(com' → logprob: -12.87948989868164
    9. '(lambda' → logprob: -13.12948989868164
    10. '（' → logprob: -14.25448989868164

Token 136: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00042102107545360923
    2. '(x' → logprob: -8.000420570373535
    3. ' x' → logprob: -9.375420570373535
    4. '	x' → logprob: -14.625420570373535
    5. ' (' → logprob: -15.125420570373535
    6. '(' → logprob: -17.00042152404785
    7. '[x' → logprob: -17.62542152404785
    8. 'float' → logprob: -18.50042152404785
    9. ')x' → logprob: -18.75042152404785
    10. '
' → logprob: -19.00042152404785

Token 137: '.real' (ID: 63800)
  Prédit: '.real'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.real' → logprob: -0.001510335598140955
    2. '[' → logprob: -6.501510143280029
    3. '.imag' → logprob: -12.376510620117188
    4. '.x' → logprob: -13.001510620117188
    5. 'real' → logprob: -14.501510620117188
    6. '.' → logprob: -14.751510620117188
    7. ').' → logprob: -15.251510620117188
    8. '.Real' → logprob: -16.251510620117188
    9. 'Real' → logprob: -17.001510620117188
    10. '.con' → logprob: -17.001510620117188

Token 138: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017226649215444922
    2. ',x' → logprob: -6.376722812652588
    3. ' ,' → logprob: -10.87672233581543
    4. ',d' → logprob: -14.37672233581543
    5. ',
' → logprob: -15.12672233581543
    6. 'x' → logprob: -15.50172233581543
    7. '	' → logprob: -16.00172233581543
    8. '，' → logprob: -16.00172233581543
    9. '	x' → logprob: -16.50172233581543
    10. 'd' → logprob: -17.37672233581543

Token 139: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00861528143286705
    2. ' x' → logprob: -4.758615493774414
    3. '	x' → logprob: -14.133615493774414
    4. '   ' → logprob: -19.008615493774414
    5. '    ' → logprob: -19.258615493774414
    6. ' ' → logprob: -19.258615493774414
    7. '  ' → logprob: -20.133615493774414
    8. ' ' → logprob: -20.633615493774414
    9. '(x' → logprob: -20.758615493774414
    10. '
' → logprob: -21.133615493774414

Token 140: '.imag' (ID: 171484)
  Prédit: '.imag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.imag' → logprob: -0.001277257571928203
    2. '.real' → logprob: -7.001277446746826
    3. 'imag' → logprob: -8.501276969909668
    4. '.im' → logprob: -8.876276969909668
    5. '.con' → logprob: -11.626276969909668
    6. '.' → logprob: -12.126276969909668
    7. ').' → logprob: -12.376276969909668
    8. 'Imag' → logprob: -13.126276969909668
    9. ')' → logprob: -14.876276969909668
    10. ' .' → logprob: -14.876276969909668

Token 141: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -1.664371848164592e-05
    2. '))
' → logprob: -11.875016212463379
    3. ')' → logprob: -12.125016212463379
    4. ' ))' → logprob: -13.125016212463379
    5. '),' → logprob: -13.375016212463379
    6. '))

' → logprob: -15.500016212463379
    7. ')))' → logprob: -16.250017166137695
    8. '	' → logprob: -16.875017166137695
    9. '()))' → logprob: -16.875017166137695
    10. '));' → logprob: -17.250017166137695

Token 142: '	res' (ID: 18266)
  Prédit: '	n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	n' → logprob: -0.3412661552429199
    2. 'n' → logprob: -2.21626615524292
    3. '	stack' → logprob: -2.71626615524292
    4. '	l' → logprob: -3.59126615524292
    5. '	h' → logprob: -3.84126615524292
    6. ' hull' → logprob: -4.21626615524292
    7. 'stack' → logprob: -4.46626615524292
    8. '	if' → logprob: -5.09126615524292
    9. ' n' → logprob: -5.34126615524292
    10. '	up' → logprob: -5.59126615524292

Token 143: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12774141132831573
    2. '=' → logprob: -2.1277413368225098
    3. '=[]' → logprob: -7.12774133682251
    4. '=[]
' → logprob: -12.377741813659668
    5. '＝' → logprob: -12.752741813659668
    6. ',' → logprob: -13.627741813659668
    7. ' ' → logprob: -15.002741813659668
    8. '=[]
' → logprob: -15.002741813659668
    9. '[:]' → logprob: -15.377741813659668
    10. '=[' → logprob: -15.627741813659668

Token 144: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.167268306016922
    2. '=' → logprob: -1.9172682762145996
    3. '=[]' → logprob: -5.0422682762146
    4. ',' → logprob: -7.5422682762146
    5. '=[' → logprob: -11.917268753051758
    6. '＝' → logprob: -12.292268753051758
    7. '=[]
' → logprob: -12.417268753051758
    8. ' ' → logprob: -12.792268753051758
    9. '[]' → logprob: -12.917268753051758
    10. '.append' → logprob: -13.417268753051758

Token 145: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.021127058193087578
    2. '[]
' → logprob: -4.521127223968506
    3. '[' → logprob: -4.771127223968506
    4. '[d' → logprob: -6.521127223968506
    5. ' []' → logprob: -10.646126747131348
    6. '[list' → logprob: -10.896126747131348
    7. '[]

' → logprob: -11.521126747131348
    8. '[data' → logprob: -12.146126747131348
    9. '[get' → logprob: -12.896126747131348
    10. '[len' → logprob: -12.896126747131348

Token 146: 'dots' (ID: 183433)
  Prédit: 'dots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dots' → logprob: -0.0002810007717926055
    2. ' dots' → logprob: -8.37528133392334
    3. '	d' → logprob: -10.00028133392334
    4. '0' → logprob: -13.00028133392334
    5. ']' → logprob: -14.50028133392334
    6. '[]' → logprob: -14.87528133392334
    7. 'drops' → logprob: -15.00028133392334
    8. 'dot' → logprob: -15.12528133392334
    9. 'd' → logprob: -15.25028133392334
    10. '\d' → logprob: -15.75028133392334

Token 147: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8074162653647363e-05
    2. '0' → logprob: -11.000018119812012
    3. ']' → logprob: -15.000018119812012
    4. '	' → logprob: -15.375018119812012
    5. '(' → logprob: -15.625018119812012
    6. ' [' → logprob: -16.125017166137695
    7. '[
' → logprob: -16.250017166137695
    8. 's' → logprob: -16.875017166137695
    9. '[-' → logprob: -16.875017166137695
    10. '#' → logprob: -17.250017166137695

Token 148: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.301394023466855e-05
    2. ' ' → logprob: -9.875062942504883
    3. '-' → logprob: -12.687562942504883
    4. '   ' → logprob: -13.312562942504883
    5. '	' → logprob: -13.375062942504883
    6. '[' → logprob: -13.625062942504883
    7. '０' → logprob: -14.187562942504883
    8. '1' → logprob: -14.250062942504883
    9. '(' → logprob: -14.625062942504883
    10. '  ' → logprob: -15.062562942504883

Token 149: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10553436726331711
    2. ']
' → logprob: -2.355534315109253
    3. ',' → logprob: -5.730534553527832
    4. ']

' → logprob: -6.355534553527832
    5. ']
' → logprob: -8.730534553527832
    6. ' ]' → logprob: -8.980534553527832
    7. ' ]
' → logprob: -10.480534553527832
    8. ',d' → logprob: -12.480534553527832
    9. ']

' → logprob: -13.105534553527832
    10. ',
' → logprob: -13.355534553527832

Token 150: '	for' (ID: 3903)
  Prédit: '	for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	for' → logprob: -0.38846129179000854
    2. 'for' → logprob: -1.2634613513946533
    3. ' for' → logprob: -3.2634613513946533
    4. 'res' → logprob: -7.888461112976074
    5. '	res' → logprob: -8.138461112976074
    6. '	n' → logprob: -9.513461112976074
    7. '	tmp' → logprob: -9.638461112976074
    8. 'n' → logprob: -10.013461112976074
    9. '	l' → logprob: -11.388461112976074
    10. ' res' → logprob: -11.513461112976074

Token 151: ' d' (ID: 272)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7928513288497925
    2. 'dot' → logprob: -1.0428513288497925
    3. 'd' → logprob: -2.292851448059082
    4. 'p' → logprob: -2.542851448059082
    5. ' i' → logprob: -5.542851448059082
    6. 'pt' → logprob: -5.667851448059082
    7. ' dot' → logprob: -6.167851448059082
    8. 'x' → logprob: -6.417851448059082
    9. 'point' → logprob: -6.667851448059082
    10. ' d' → logprob: -6.917851448059082

Token 152: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.056501731276512146
    2. 'ots' → logprob: -3.556501626968384
    3. 'in' → logprob: -3.681501626968384
    4. 'ot' → logprob: -7.181501865386963
    5. '	in' → logprob: -7.931501865386963
    6. ' dots' → logprob: -10.431501388549805
    7. 'o' → logprob: -10.806501388549805
    8. 'dots' → logprob: -11.681501388549805
    9. '	' → logprob: -12.056501388549805
    10. 'i' → logprob: -12.181501388549805

Token 153: ' dots' (ID: 53572)
  Prédit: ' dots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dots' → logprob: -0.5763601660728455
    2. 'dots' → logprob: -0.8263601660728455
    3. '	d' → logprob: -7.95136022567749
    4. 'd' → logprob: -9.951359748840332
    5. '[d' → logprob: -11.451359748840332
    6. '[' → logprob: -12.701359748840332
    7. '(d' → logprob: -13.076359748840332
    8. 'ots' → logprob: -13.076359748840332
    9. 'Dots' → logprob: -13.701359748840332
    10. ' ' → logprob: -14.451359748840332

Token 154: '[' (ID: 58)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5782585740089417
    2. '[' → logprob: -0.8282585740089417
    3. ':
' → logprob: -6.078258514404297
    4. '：' → logprob: -12.328258514404297
    5. ':
' → logprob: -12.578258514404297
    6. '[:-' → logprob: -12.578258514404297
    7. '1' → logprob: -12.953258514404297
    8. '[:' → logprob: -12.953258514404297
    9. ':

' → logprob: -13.078258514404297
    10. ' :' → logprob: -13.453258514404297

Token 155: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.625001907348633
    3. ':' → logprob: -15.000001907348633
    4. '１' → logprob: -15.125001907348633
    5. '[' → logprob: -16.250001907348633
    6. '
' → logprob: -16.500001907348633
    7. '   ' → logprob: -16.750001907348633
    8. 'res' → logprob: -18.375001907348633
    9. '```' → logprob: -18.375001907348633
    10. '	' → logprob: -18.500001907348633

Token 156: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002712738234549761
    2. ']:' → logprob: -6.127712726593018
    3. ':]' → logprob: -8.002713203430176
    4. ']:
' → logprob: -9.627713203430176
    5. 'd' → logprob: -9.877713203430176
    6. ':d' → logprob: -10.752713203430176
    7. '：' → logprob: -11.127713203430176
    8. '1' → logprob: -12.127713203430176
    9. ' :' → logprob: -12.127713203430176
    10. ':],' → logprob: -12.252713203430176

Token 157: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7274298667907715
    2. '	' → logprob: -1.1024298667907715
    3. ':' → logprob: -1.7274298667907715
    4. '	while' → logprob: -6.4774298667907715
    5. '	if' → logprob: -6.7274298667907715
    6. ' :
' → logprob: -6.9774298667907715
    7. ',' → logprob: -7.4774298667907715
    8. '   ' → logprob: -7.6024298667907715
    9. '	   ' → logprob: -7.8524298667907715
    10. ' :' → logprob: -7.9774298667907715

Token 158: '	' (ID: 197)
  Prédit: '	'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.005206244066357613
    2. '	while' → logprob: -6.380206108093262
    3. '	   ' → logprob: -6.380206108093262
    4. ' while' → logprob: -7.005206108093262
    5. '	if' → logprob: -8.130206108093262
    6. 'while' → logprob: -8.380206108093262
    7. ' if' → logprob: -8.880206108093262
    8. '   ' → logprob: -9.630206108093262
    9. '       ' → logprob: -10.005206108093262
    10. 'if' → logprob: -10.130206108093262

Token 159: '	if' (ID: 1224)
  Prédit: '	while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	while' → logprob: -0.23142941296100616
    2. ' while' → logprob: -1.7314294576644897
    3. 'while' → logprob: -3.7314293384552
    4. '	' → logprob: -5.231429576873779
    5. '	   ' → logprob: -8.481429100036621
    6. '   ' → logprob: -10.981429100036621
    7. '	if' → logprob: -10.981429100036621
    8. '       ' → logprob: -11.856429100036621
    9. '	 ' → logprob: -12.481429100036621
    10. '    ' → logprob: -12.981429100036621

Token 160: ' len' (ID: 4631)
  Prédit: 'CC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'CC' → logprob: -0.7915343642234802
    2. 'not' → logprob: -0.9165343642234802
    3. ' not' → logprob: -2.416534423828125
    4. 'len' → logprob: -4.166534423828125
    5. '	CC' → logprob: -4.291534423828125
    6. ' CC' → logprob: -4.416534423828125
    7. 'res' → logprob: -4.666534423828125
    8. '	not' → logprob: -5.791534423828125
    9. ' res' → logprob: -6.416534423828125
    10. '	' → logprob: -7.416534423828125

Token 161: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.00011880126112373546
    2. 'res' → logprob: -9.37511920928955
    3. '(' → logprob: -10.62511920928955
    4. ' (' → logprob: -12.12511920928955
    5. ' res' → logprob: -12.87511920928955
    6. '	res' → logprob: -13.50011920928955
    7. '(
' → logprob: -15.50011920928955
    8. '=res' → logprob: -17.000118255615234
    9. '$res' → logprob: -17.250118255615234
    10. '>' → logprob: -17.500118255615234

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005757896578870714
    2. 'res' → logprob: -7.625576019287109
    3. ')' → logprob: -10.37557601928711
    4. '(res' → logprob: -11.00057601928711
    5. '>' → logprob: -11.37557601928711
    6. 's' → logprob: -12.00057601928711
    7. '<' → logprob: -12.87557601928711
    8. '```' → logprob: -13.12557601928711
    9. ')==' → logprob: -13.25057601928711
    10. '
' → logprob: -13.25057601928711

Token 163: ')' (ID: 8)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.011809871532022953
    2. '==' → logprob: -5.011809825897217
    3. '>=' → logprob: -5.761809825897217
    4. ' <' → logprob: -6.886809825897217
    5. '<=' → logprob: -7.761809825897217
    6. '>' → logprob: -8.511810302734375
    7. ' ==' → logprob: -9.386810302734375
    8. '<len' → logprob: -9.511810302734375
    9. 'and' → logprob: -11.011810302734375
    10. ')<' → logprob: -11.136810302734375

Token 164: ' ==' (ID: 951)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.8347960114479065
    2. '==' → logprob: -1.4597959518432617
    3. '>' → logprob: -1.7097959518432617
    4. '>=' → logprob: -1.9597959518432617
    5. ' ==' → logprob: -5.209795951843262
    6. ' <' → logprob: -5.834795951843262
    7. ' >' → logprob: -6.459795951843262
    8. ' >=' → logprob: -6.959795951843262
    9. '<=' → logprob: -7.084795951843262
    10. '<len' → logprob: -10.084795951843262

Token 165: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.054940734058618546
    2. '0' → logprob: -2.929940700531006
    3. ' ' → logprob: -9.804941177368164
    4. '<' → logprob: -13.554941177368164
    5. '１' → logprob: -13.554941177368164
    6. '=' → logprob: -14.929941177368164
    7. '	' → logprob: -16.179941177368164
    8. '   ' → logprob: -16.679941177368164
    9. '０' → logprob: -17.429941177368164
    10. '01' → logprob: -17.867441177368164

Token 166: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1602364182472229
    2. '0' → logprob: -1.9102363586425781
    3. ' ' → logprob: -11.785236358642578
    4. '１' → logprob: -13.035236358642578
    5. '<' → logprob: -13.160236358642578
    6. '=' → logprob: -15.285236358642578
    7. '０' → logprob: -15.910236358642578
    8. '	' → logprob: -17.285236358642578
    9. '```' → logprob: -17.972736358642578
    10. '۱' → logprob: -18.285236358642578

Token 167: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.3405190706253052
    2. 'or' → logprob: -1.4655190706253052
    3. '	or' → logprob: -3.2155189514160156
    4. ':
' → logprob: -4.840518951416016
    5. ':' → logprob: -4.965518951416016
    6. 'and' → logprob: -6.840518951416016
    7. ' and' → logprob: -6.965518951416016
    8. ' ' → logprob: -8.215518951416016
    9. '	' → logprob: -8.965518951416016
    10. '	and' → logprob: -9.465518951416016

Token 168: '		' (ID: 335)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.07914215326309204
    2. '	' → logprob: -2.9541420936584473
    3. '		' → logprob: -3.8291420936584473
    4. '	or' → logprob: -7.079142093658447
    5. ' and' → logprob: -7.204142093658447
    6. ' ' → logprob: -9.079142570495605
    7. ':' → logprob: -9.079142570495605
    8. 'or' → logprob: -9.204142570495605
    9. ':
' → logprob: -9.579142570495605
    10. ' 	' → logprob: -10.329142570495605

Token 169: '	res' (ID: 18266)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7930968403816223
    2. '	' → logprob: -1.0430967807769775
    3. ' res' → logprob: -1.7930967807769775
    4. '	res' → logprob: -3.6680967807769775
    5. '		' → logprob: -6.543097019195557
    6. ' if' → logprob: -7.043097019195557
    7. 'if' → logprob: -7.918097019195557
    8. '	if' → logprob: -8.793096542358398
    9. 'while' → logprob: -9.418096542358398
    10. ' while' → logprob: -9.543096542358398

Token 170: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '１' → logprob: -15.250000953674316
    3. '.append' → logprob: -16.25
    4. '		' → logprob: -18.375
    5. '	' → logprob: -18.5625
    6. '१' → logprob: -18.8125
    7. '১' → logprob: -18.875
    8. '```' → logprob: -19.0
    9. '' → logprob: -19.0625
    10. 'append' → logprob: -19.5

Token 171: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.843177233240567e-05
    2. '.' → logprob: -11.125018119812012
    3. ' .' → logprob: -13.000018119812012
    4. '.app' → logprob: -14.500018119812012
    5. 'append' → logprob: -15.125018119812012
    6. '[-' → logprob: -15.500018119812012
    7. ' append' → logprob: -15.875018119812012
    8. '+=' → logprob: -16.625019073486328
    9. '	append' → logprob: -16.625019073486328
    10. '.extend' → logprob: -17.125019073486328

Token 172: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -2.1008713702030946e-06
    2. '(' → logprob: -13.125001907348633
    3. 'd' → logprob: -18.500001907348633
    4. '(
' → logprob: -19.250001907348633
    5. '((' → logprob: -19.375001907348633
    6. ' (' → logprob: -21.125001907348633
    7. '	d' → logprob: -21.375001907348633
    8. '(res' → logprob: -23.000001907348633
    9. '(D' → logprob: -23.250001907348633
    10. '()' → logprob: -23.250001907348633

Token 173: ')
' (ID: 446)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.08594450354576111
    2. ')' → logprob: -2.710944414138794
    3. '	elif' → logprob: -4.960944652557373
    4. '		' → logprob: -5.835944652557373
    5. ')
' → logprob: -5.835944652557373
    6. 'elif' → logprob: -7.085944652557373
    7. '	else' → logprob: -7.460944652557373
    8. '
' → logprob: -8.210944175720215
    9. ' elif' → logprob: -8.585944175720215
    10. ',' → logprob: -8.710944175720215

Token 174: '	' (ID: 197)
  Prédit: '	'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.004615491721779108
    2. ' else' → logprob: -6.379615306854248
    3. 'else' → logprob: -6.879615306854248
    4. '		' → logprob: -7.754615306854248
    5. '	elif' → logprob: -7.879615306854248
    6. ' elif' → logprob: -8.004615783691406
    7. '	else' → logprob: -8.004615783691406
    8. 'elif' → logprob: -8.379615783691406
    9. ',' → logprob: -9.504615783691406
    10. '       ' → logprob: -11.254615783691406

Token 175: '	else' (ID: 5107)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.8614755272865295
    2. '	' → logprob: -1.1114754676818848
    3. '	else' → logprob: -1.7364754676818848
    4. ' else' → logprob: -2.7364754676818848
    5. '	elif' → logprob: -5.611475467681885
    6. 'elif' → logprob: -6.361475467681885
    7. ':' → logprob: -6.986475467681885
    8. ':
' → logprob: -7.986475467681885
    9. ' elif' → logprob: -8.486475944519043
    10. '	while' → logprob: -8.611475944519043

Token 176: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3536280393600464
    2. ':
' → logprob: -1.2286280393600464
    3. '		' → logprob: -5.728628158569336
    4. '	' → logprob: -6.353628158569336
    5. ' if' → logprob: -10.103628158569336
    6. ' :' → logprob: -10.353628158569336
    7. ' :
' → logprob: -10.478628158569336
    8. ',' → logprob: -11.728628158569336
    9. '	if' → logprob: -11.853628158569336
    10. 'if' → logprob: -11.853628158569336

Token 177: '		' (ID: 335)
  Prédit: '		'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.10732821375131607
    2. '	' → logprob: -2.857328176498413
    3. ' while' → logprob: -3.607328176498413
    4. 'while' → logprob: -4.357328414916992
    5. '	while' → logprob: -5.482328414916992
    6. '		   ' → logprob: -10.107328414916992
    7. '	       ' → logprob: -10.232328414916992
    8. '	   ' → logprob: -10.732328414916992
    9. '			' → logprob: -10.857328414916992
    10. '	 	' → logprob: -11.107328414916992

Token 178: '	while' (ID: 10883)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4080093204975128
    2. ' while' → logprob: -1.1580092906951904
    3. '	while' → logprob: -3.9080092906951904
    4. '		' → logprob: -7.7830095291137695
    5. '	' → logprob: -8.40800952911377
    6. 'if' → logprob: -9.03300952911377
    7. '			' → logprob: -10.28300952911377
    8. ' if' → logprob: -10.65800952911377
    9. '	if' → logprob: -11.90800952911377
    10. '   ' → logprob: -13.15800952911377

Token 179: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5630598664283752
    2. 'Outer' → logprob: -1.9380598068237305
    3. 'not' → logprob: -2.6880598068237305
    4. ' not' → logprob: -2.6880598068237305
    5. ' len' → logprob: -2.6880598068237305
    6. ' Outer' → logprob: -2.9380598068237305
    7. 'CC' → logprob: -4.3130598068237305
    8. '(len' → logprob: -4.8130598068237305
    9. '(not' → logprob: -6.0630598068237305
    10. 'res' → logprob: -6.6880598068237305

Token 180: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.001099968678317964
    2. 'res' → logprob: -7.001100063323975
    3. ' (' → logprob: -9.251099586486816
    4. ' res' → logprob: -9.376099586486816
    5. '	res' → logprob: -12.126099586486816
    6. '(' → logprob: -13.126099586486816
    7. '$res' → logprob: -16.126100540161133
    8. '=res' → logprob: -16.126100540161133
    9. '(
' → logprob: -16.251100540161133
    10. 's' → logprob: -17.376100540161133

Token 181: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. 'res' → logprob: -12.625005722045898
    3. '(res' → logprob: -13.250005722045898
    4. '１' → logprob: -15.125005722045898
    5. '	res' → logprob: -16.7500057220459
    6. '```' → logprob: -17.1250057220459
    7. ' res' → logprob: -17.3750057220459
    8. ' ' → logprob: -17.6250057220459
    9. 's' → logprob: -18.1875057220459
    10. '
' → logprob: -18.3750057220459

Token 182: ')' (ID: 8)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.007223942782729864
    2. '>' → logprob: -5.257224082946777
    3. ' >=' → logprob: -6.507224082946777
    4. ')>=' → logprob: -7.757224082946777
    5. ']>=' → logprob: -9.757224082946777
    6. ' >' → logprob: -12.257224082946777
    7. '≥' → logprob: -13.257224082946777
    8. ')' → logprob: -13.757224082946777
    9. '	' → logprob: -14.382224082946777
    10. ')>' → logprob: -14.632224082946777

Token 183: ' >' (ID: 1424)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.030185235664248466
    2. '>' → logprob: -3.7801852226257324
    3. ' >=' → logprob: -5.030185222625732
    4. ')>=' → logprob: -8.40518569946289
    5. ' >' → logprob: -9.40518569946289
    6. ']>=' → logprob: -9.78018569946289
    7. '≥' → logprob: -12.40518569946289
    8. ' ' → logprob: -12.90518569946289
    9. '()>' → logprob: -12.90518569946289
    10. '	' → logprob: -13.40518569946289

Token 184: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028633661568164825
    2. ' ' → logprob: -6.25286340713501
    3. '2' → logprob: -7.00286340713501
    4. '=' → logprob: -11.127862930297852
    5. '１' → logprob: -12.877862930297852
    6. '
' → logprob: -13.127862930297852
    7. '	' → logprob: -13.252862930297852
    8. '>' → logprob: -13.752862930297852
    9. '' → logprob: -14.877862930297852
    10. '0' → logprob: -15.002862930297852

Token 185: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.500000953674316
    3. '１' → logprob: -15.750000953674316
    4. '=' → logprob: -17.25
    5. '2' → logprob: -17.625
    6. '	' → logprob: -17.75
    7. '
' → logprob: -18.375
    8. '   ' → logprob: -18.5
    9. '' → logprob: -18.75
    10. '۱' → logprob: -19.0

Token 186: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.00802451092749834
    2. 'and' → logprob: -4.8830246925354
    3. '	and' → logprob: -7.8830246925354
    4. '		' → logprob: -10.383024215698242
    5. '	' → logprob: -11.883024215698242
    6. ' ' → logprob: -13.633024215698242
    7. 'そして' → logprob: -14.633024215698242
    8. '			' → logprob: -14.758024215698242
    9. ' ' → logprob: -14.883024215698242
    10. ' и' → logprob: -15.758024215698242

Token 187: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.1719004064798355
    2. ' not' → logprob: -1.9219003915786743
    3. 'CC' → logprob: -4.546900272369385
    4. ' CC' → logprob: -7.421900272369385
    5. '(not' → logprob: -8.546900749206543
    6. '	not' → logprob: -9.046900749206543
    7. '	CC' → logprob: -10.046900749206543
    8. '(CC' → logprob: -10.671900749206543
    9. '!' → logprob: -12.171900749206543
    10. '	' → logprob: -12.421900749206543

Token 188: ' CC' (ID: 21547)
  Prédit: 'CC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CC' → logprob: -0.016202112659811974
    2. ' CC' → logprob: -4.141201972961426
    3. '	CC' → logprob: -8.891201972961426
    4. '(CC' → logprob: -10.516201972961426
    5. ' ' → logprob: -13.766201972961426
    6. '   ' → logprob: -14.141201972961426
    7. '	' → logprob: -14.266201972961426
    8. '_CC' → logprob: -15.266201972961426
    9. ' ' → logprob: -16.016202926635742
    10. '  ' → logprob: -16.141202926635742

Token 189: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -7.465036105713807e-06
    2. '(res' → logprob: -13.250007629394531
    3. 'CW' → logprob: -13.875007629394531
    4. 'w' → logprob: -14.437507629394531
    5. '```' → logprob: -14.562507629394531
    6. '
' → logprob: -14.937507629394531
    7. '(' → logprob: -15.062507629394531
    8. '#' → logprob: -15.125007629394531
    9. '1' → logprob: -15.187507629394531
    10. '

' → logprob: -15.250007629394531

Token 190: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -7.827200897736475e-05
    2. '(' → logprob: -10.375078201293945
    3. 'res' → logprob: -10.875078201293945
    4. '(
' → logprob: -11.250078201293945
    5. '	res' → logprob: -11.500078201293945
    6. ' (' → logprob: -13.000078201293945
    7. '	' → logprob: -13.125078201293945
    8. ' res' → logprob: -15.250078201293945
    9. '		' → logprob: -16.250078201293945
    10. '((' → logprob: -16.375078201293945

Token 191: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. '(res' → logprob: -14.375000953674316
    3. 'res' → logprob: -15.250000953674316
    4. '[' → logprob: -16.000001907348633
    5. ' res' → logprob: -16.625001907348633
    6. '[-' → logprob: -17.250001907348633
    7. '１' → logprob: -17.562501907348633
    8. '2' → logprob: -17.750001907348633
    9. '(' → logprob: -18.062501907348633
    10. '```' → logprob: -18.250001907348633

Token 192: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -4.320199877838604e-07
    2. '
' → logprob: -15.875
    3. '	' → logprob: -16.375
    4. '```' → logprob: -16.5
    5. ' [-' → logprob: -17.375
    6. '[' → logprob: -17.375
    7. '-' → logprob: -18.0
    8. '(-' → logprob: -18.125
    9. '   ' → logprob: -18.75
    10. '][-' → logprob: -19.125

Token 193: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0026697113644331694
    2. '-' → logprob: -6.252669811248779
    3. '1' → logprob: -7.252669811248779
    4. ' -' → logprob: -11.002669334411621
    5. '(-' → logprob: -12.127669334411621
    6. ' ' → logprob: -13.002669334411621
    7. '	' → logprob: -13.127669334411621
    8. '   ' → logprob: -13.502669334411621
    9. '[-' → logprob: -13.627669334411621
    10. '```' → logprob: -14.127669334411621

Token 194: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008454833878204226
    2. ' ,' → logprob: -8.125845909118652
    3. '	' → logprob: -8.875845909118652
    4. ',res' → logprob: -8.875845909118652
    5. '],' → logprob: -9.000845909118652
    6. '[-' → logprob: -9.375845909118652
    7. 'res' → logprob: -11.250845909118652
    8. '	res' → logprob: -11.500845909118652
    9. ']' → logprob: -11.625845909118652
    10. ',d' → logprob: -11.625845909118652

Token 195: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00043972869752906263
    2. ' res' → logprob: -7.750439643859863
    3. '	res' → logprob: -12.125439643859863
    4. '
' → logprob: -12.750439643859863
    5. '(res' → logprob: -15.250439643859863
    6. 'd' → logprob: -16.00044059753418
    7. '$res' → logprob: -16.50044059753418
    8. '	' → logprob: -16.50044059753418
    9. '
' → logprob: -16.75044059753418
    10. 'r' → logprob: -16.75044059753418

Token 196: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000940642727073282
    2. '[-' → logprob: -7.000940799713135
    3. '-' → logprob: -10.500940322875977
    4. '   ' → logprob: -15.250940322875977
    5. '−' → logprob: -15.875940322875977
    6. '2' → logprob: -15.875940322875977
    7. '[' → logprob: -16.000940322875977
    8. 's' → logprob: -16.125940322875977
    9. '(-' → logprob: -16.125940322875977
    10. '...' → logprob: -16.125940322875977

Token 197: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.014189359731972218
    2. '-' → logprob: -4.26418924331665
    3. '(-' → logprob: -11.389189720153809
    4. 's' → logprob: -12.389189720153809
    5. '	' → logprob: -12.889189720153809
    6. '][-' → logprob: -13.264189720153809
    7. ' -' → logprob: -13.639189720153809
    8. 'd' → logprob: -14.389189720153809
    9. ',' → logprob: -14.389189720153809
    10. '...' → logprob: -14.889189720153809

Token 198: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003025729674845934
    2. '2' → logprob: -8.1253023147583
    3. '3' → logprob: -12.6253023147583
    4. '
' → logprob: -13.8753023147583
    5. ' ' → logprob: -14.0003023147583
    6. '１' → logprob: -15.1253023147583
    7. '   ' → logprob: -15.8753023147583
    8. '

' → logprob: -16.312803268432617
    9. '```' → logprob: -16.500303268432617
    10. '0' → logprob: -16.625303268432617

Token 199: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4340083599090576
    2. '],' → logprob: -1.0590083599090576
    3. '),' → logprob: -5.934008598327637
    4. 'd' → logprob: -6.809008598327637
    5. ',d' → logprob: -7.434008598327637
    6. ' ,' → logprob: -7.559008598327637
    7. '	' → logprob: -8.309008598327637
    8. '},' → logprob: -10.309008598327637
    9. '）,' → logprob: -10.309008598327637
    10. '	d' → logprob: -10.434008598327637

Token 200: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00044092073221690953
    2. ' d' → logprob: -8.12544059753418
    3. '	d' → logprob: -8.87544059753418
    4. '	' → logprob: -13.62544059753418
    5. '   ' → logprob: -14.00044059753418
    6. '		' → logprob: -14.12544059753418
    7. '
' → logprob: -14.25044059753418
    8. ' ' → logprob: -15.12544059753418
    9. ')d' → logprob: -15.12544059753418
    10. ')' → logprob: -15.12544059753418

Token 201: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.00960780680179596
    2. '):' → logprob: -4.759607791900635
    3. '	' → logprob: -7.134607791900635
    4. ' ):
' → logprob: -9.634608268737793
    5. ')' → logprob: -9.759608268737793
    6. '):
' → logprob: -10.759608268737793
    7. ':
' → logprob: -10.884608268737793
    8. '		' → logprob: -11.134608268737793
    9. ':' → logprob: -11.759608268737793
    10. '):

' → logprob: -12.759608268737793

Token 202: '			' (ID: 833)
  Prédit: '			'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '			' → logprob: -0.0038188379257917404
    2. '		' → logprob: -6.253818988800049
    3. ':
' → logprob: -7.628818988800049
    4. '               ' → logprob: -8.00381851196289
    5. '		       ' → logprob: -8.50381851196289
    6. '			   ' → logprob: -8.62881851196289
    7. ':' → logprob: -9.12881851196289
    8. '				
' → logprob: -9.25381851196289
    9. '    		' → logprob: -9.75381851196289
    10. '				' → logprob: -10.00381851196289

Token 203: '	res' (ID: 18266)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.5661705732345581
    2. 'res' → logprob: -0.9411705732345581
    3. '	res' → logprob: -3.5661706924438477
    4. '		' → logprob: -4.816170692443848
    5. '			' → logprob: -5.941170692443848
    6. '				' → logprob: -5.941170692443848
    7. ',res' → logprob: -9.441170692443848
    8. ' del' → logprob: -9.691170692443848
    9. '_res' → logprob: -9.691170692443848
    10. '
' → logprob: -10.191170692443848

Token 204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. 'es' → logprob: -13.500001907348633
    3. '１' → logprob: -15.000001907348633
    4. 's' → logprob: -16.750001907348633
    5. '		' → logprob: -17.000001907348633
    6. '				' → logprob: -17.125001907348633
    7. '			' → logprob: -17.500001907348633
    8. 'res' → logprob: -17.625001907348633
    9. '```' → logprob: -17.625001907348633
    10. '' → logprob: -18.375001907348633

Token 205: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.00012713817704934627
    2. '.' → logprob: -9.000126838684082
    3. 'pop' → logprob: -13.125126838684082
    4. ' .' → logprob: -13.625126838684082
    5. '	pop' → logprob: -15.375126838684082
    6. '.remove' → logprob: -16.7501277923584
    7. '.po' → logprob: -17.1251277923584
    8. '.Pop' → logprob: -17.5001277923584
    9. '_pop' → logprob: -17.8751277923584
    10. '．' → logprob: -18.6251277923584

Token 206: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -8.77627644513268e-06
    2. '()
' → logprob: -11.750008583068848
    3. '()

' → logprob: -14.875008583068848
    4. '()-' → logprob: -15.750008583068848
    5. '(' → logprob: -16.125009536743164
    6. '(-' → logprob: -16.375009536743164
    7. '()
' → logprob: -17.625009536743164
    8. '())' → logprob: -17.750009536743164
    9. '()]' → logprob: -18.000009536743164
    10. '()\' → logprob: -18.625009536743164

Token 207: '		' (ID: 335)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.31345298886299133
    2. '		' → logprob: -1.313452959060669
    3. '		
' → logprob: -9.56345272064209
    4. '           ' → logprob: -10.68845272064209
    5. '       ' → logprob: -10.81345272064209
    6. '   ' → logprob: -11.06345272064209
    7. '			
' → logprob: -11.56345272064209
    8. '			' → logprob: -11.56345272064209
    9. ',' → logprob: -12.18845272064209
    10. '	       ' → logprob: -12.31345272064209

Token 208: '	res' (ID: 18266)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.005644705146551132
    2. '		' → logprob: -5.505644798278809
    3. '	res' → logprob: -6.880644798278809
    4. ' res' → logprob: -7.755644798278809
    5. '   ' → logprob: -10.130644798278809
    6. 'res' → logprob: -10.630644798278809
    7. '       ' → logprob: -10.630644798278809
    8. ' ' → logprob: -12.380644798278809
    9. '		
' → logprob: -12.505644798278809
    10. '			' → logprob: -13.380644798278809

Token 209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. '.append' → logprob: -12.625003814697266
    3. 'append' → logprob: -17.625003814697266
    4. '１' → logprob: -19.000003814697266
    5. 'app' → logprob: -19.875003814697266
    6. '   ' → logprob: -20.500003814697266
    7. 'es' → logprob: -20.500003814697266
    8. '```' → logprob: -20.750003814697266
    9. 'res' → logprob: -21.375003814697266
    10. ' ' → logprob: -21.625003814697266

Token 210: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -8.180258191714529e-06
    2. '.' → logprob: -12.125008583068848
    3. '.app' → logprob: -13.375008583068848
    4. 'append' → logprob: -14.500008583068848
    5. '.ap' → logprob: -15.125008583068848
    6. ' .' → logprob: -15.250008583068848
    7. '.Append' → logprob: -16.25000762939453
    8. 'Append' → logprob: -17.37500762939453
    9. '	append' → logprob: -18.25000762939453
    10. ' append' → logprob: -18.25000762939453

Token 211: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -2.165027217415627e-05
    2. '(' → logprob: -10.750021934509277
    3. '(
' → logprob: -16.00002098083496
    4. '	d' → logprob: -19.50002098083496
    5. '((' → logprob: -21.25002098083496
    6. '(D' → logprob: -21.37502098083496
    7. ' (' → logprob: -21.75002098083496
    8. '(
' → logprob: -21.87502098083496
    9. '	' → logprob: -22.00002098083496
    10. '()' → logprob: -22.00002098083496

Token 212: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012130453251302242
    2. ')
' → logprob: -9.500121116638184
    3. ')return' → logprob: -10.375121116638184
    4. '	' → logprob: -12.125121116638184
    5. '	return' → logprob: -12.125121116638184
    6. ' )' → logprob: -12.625121116638184
    7. '<|end|>' → logprob: -14.375121116638184
    8. '）' → logprob: -15.875121116638184
    9. ')

' → logprob: -16.2501220703125
    10. ')
' → logprob: -17.1251220703125

Token 213: '	d' (ID: 5971)
  Prédit: '	res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	res' → logprob: -0.06450912356376648
    2. '
' → logprob: -4.18950891494751
    3. 'res' → logprob: -4.43950891494751
    4. '	return' → logprob: -4.43950891494751
    5. '	
' → logprob: -4.43950891494751
    6. ' res' → logprob: -5.06450891494751
    7. '	for' → logprob: -5.43950891494751
    8. '	while' → logprob: -7.31450891494751
    9. '		
' → logprob: -9.064509391784668
    10. '	m' → logprob: -9.939509391784668

Token 214: 'ots' (ID: 2677)
  Prédit: 'ots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ots' → logprob: -0.00041875618626363575
    2. 'ef' → logprob: -8.125418663024902
    3. 'efs' → logprob: -10.125418663024902
    4. 'ot' → logprob: -10.500418663024902
    5. '#' → logprob: -11.750418663024902
    6. 'els' → logprob: -12.375418663024902
    7. '```' → logprob: -12.625418663024902
    8. '=' → logprob: -12.625418663024902
    9. ' =' → logprob: -12.937918663024902
    10. 'o' → logprob: -13.000418663024902

Token 215: '.reverse' (ID: 65426)
  Prédit: '.reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reverse' → logprob: -0.7147787809371948
    2. '=' → logprob: -1.7147787809371948
    3. '2' → logprob: -2.5897789001464844
    4. '1' → logprob: -2.8397789001464844
    5. '.sort' → logprob: -2.8397789001464844
    6. ' =' → logprob: -2.9647789001464844
    7. '[::-' → logprob: -3.0897789001464844
    8. '.clear' → logprob: -3.9647789001464844
    9. '[:]' → logprob: -5.089778900146484
    10. '.pop' → logprob: -5.714778900146484

Token 216: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.020546913146972656
    2. '()
' → logprob: -3.8955469131469727
    3. '()
' → logprob: -12.770546913146973
    4. '()

' → logprob: -14.270546913146973
    5. '()\' → logprob: -14.270546913146973
    6. 'for' → logprob: -15.395546913146973
    7. '(' → logprob: -15.520546913146973
    8. '()`' → logprob: -16.020545959472656
    9. 'def' → logprob: -16.395545959472656
    10. '()<' → logprob: -16.520545959472656

Token 217: '	res' (ID: 18266)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -3.15441757265944e-05
    2. ' res' → logprob: -11.000031471252441
    3. '	res' → logprob: -11.125031471252441
    4. '_res' → logprob: -17.250032424926758
    5. 'for' → logprob: -17.500032424926758
    6. 'rest' → logprob: -19.250032424926758
    7. 'from' → logprob: -19.375032424926758
    8. 'ress' → logprob: -19.500032424926758
    9. '(res' → logprob: -20.375032424926758
    10. '   ' → logprob: -20.750032424926758

Token 218: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1797965168952942
    2. '1' → logprob: -1.8047964572906494
    3. 'es' → logprob: -10.30479621887207
    4. 's' → logprob: -11.67979621887207
    5. 'res' → logprob: -12.30479621887207
    6. '3' → logprob: -13.30479621887207
    7. ' ' → logprob: -14.30479621887207
    8. '２' → logprob: -14.42979621887207
    9. '=' → logprob: -14.67979621887207
    10. '```' → logprob: -15.30479621887207

Token 219: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31329429149627686
    2. '=' → logprob: -1.3132942914962769
    3. '=[' → logprob: -10.563294410705566
    4. '=[]' → logprob: -12.813294410705566
    5. ' =[' → logprob: -12.813294410705566
    6. '＝' → logprob: -13.938294410705566
    7. ' ' → logprob: -16.06329345703125
    8. '[' → logprob: -16.31329345703125
    9. '=[]
' → logprob: -16.43829345703125
    10. ' [' → logprob: -17.18829345703125

Token 220: ' [' (ID: 723)
  Prédit: '[d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.020097065716981888
    2. '[' → logprob: -4.020097255706787
    3. ' [' → logprob: -6.270097255706787
    4. '[]' → logprob: -9.895096778869629
    5. '[]
' → logprob: -14.020096778869629
    6. '[data' → logprob: -14.895096778869629
    7. '[df' → logprob: -14.895096778869629
    8. '[result' → logprob: -15.145096778869629
    9. '[c' → logprob: -15.770096778869629
    10. ' []' → logprob: -15.770096778869629

Token 221: 'dots' (ID: 183433)
  Prédit: 'dots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dots' → logprob: -0.00016074994346126914
    2. ' dots' → logprob: -8.750161170959473
    3. 'd' → logprob: -14.125161170959473
    4. '[d' → logprob: -14.750161170959473
    5. '[' → logprob: -14.750161170959473
    6. 'dot' → logprob: -15.625161170959473
    7. '	d' → logprob: -15.750161170959473
    8. 'docs' → logprob: -16.750160217285156
    9. 'drops' → logprob: -17.000160217285156
    10. '[]' → logprob: -17.000160217285156

Token 222: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0019299437990412116
    2. '0' → logprob: -6.251929759979248
    3. '(' → logprob: -15.001930236816406
    4. '	' → logprob: -15.626930236816406
    5. '1' → logprob: -16.001930236816406
    6. '   ' → logprob: -16.501930236816406
    7. '[-' → logprob: -16.501930236816406
    8. 'from' → logprob: -16.751930236816406
    9. ' ' → logprob: -16.876930236816406
    10. '#' → logprob: -16.876930236816406

Token 223: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -14.250001907348633
    3. ' ' → logprob: -14.750001907348633
    4. '０' → logprob: -15.750001907348633
    5. '1' → logprob: -16.625001907348633
    6. '۰' → logprob: -17.437501907348633
    7. '﻿' → logprob: -18.125001907348633
    8. '	' → logprob: -18.375001907348633
    9. '#' → logprob: -18.375001907348633
    10. '   ' → logprob: -18.687501907348633

Token 224: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0021896373946219683
    2. ']
' → logprob: -6.127189636230469
    3. ']

' → logprob: -13.127189636230469
    4. ' ]' → logprob: -13.127189636230469
    5. ']
' → logprob: -15.127189636230469
    6. ',' → logprob: -15.877189636230469
    7. '[' → logprob: -16.37718963623047
    8. '']' → logprob: -17.62718963623047
    9. '］' → logprob: -18.12718963623047
    10. ' ]
' → logprob: -18.50218963623047

Token 225: '	for' (ID: 3903)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0019562290981411934
    2. ' for' → logprob: -6.251956462860107
    3. '	for' → logprob: -10.50195598602295
    4. 'from' → logprob: -16.126956939697266
    5. 'For' → logprob: -17.376956939697266
    6. '<|end|>' → logprob: -18.126956939697266
    7. '```' → logprob: -18.251956939697266
    8. '_for' → logprob: -18.751956939697266
    9. '.for' → logprob: -19.376956939697266
    10. '
' → logprob: -20.501956939697266

Token 226: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.281181663274765
    2. ' d' → logprob: -1.4061816930770874
    3. '	d' → logprob: -10.406181335449219
    4. '_d' → logprob: -14.781181335449219
    5. ' ' → logprob: -15.906181335449219
    6. ' ' → logprob: -16.09368133544922
    7. ')d' → logprob: -16.78118133544922
    8. '>d' → logprob: -16.96868133544922
    9. ' д' → logprob: -17.09368133544922
    10. 'D' → logprob: -17.15618133544922

Token 227: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.142728790640831
    2. 'in' → logprob: -2.017728805541992
    3. 'd' → logprob: -10.517728805541992
    4. '	in' → logprob: -10.892728805541992
    5. ' ' → logprob: -13.142728805541992
    6. '[' → logprob: -13.392728805541992
    7. 'ins' → logprob: -14.267728805541992
    8. 's' → logprob: -14.392728805541992
    9. '[in' → logprob: -14.517728805541992
    10. '_in' → logprob: -14.767728805541992

Token 228: ' dots' (ID: 53572)
  Prédit: 'dots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dots' → logprob: -0.029751643538475037
    2. ' dots' → logprob: -3.5297515392303467
    3. '	d' → logprob: -14.279751777648926
    4. 'd' → logprob: -14.779751777648926
    5. 'Dots' → logprob: -17.15475082397461
    6. '[d' → logprob: -17.40475082397461
    7. ' ' → logprob: -17.90475082397461
    8. '[' → logprob: -17.90475082397461
    9. '\d' → logprob: -18.65475082397461
    10. 'ots' → logprob: -19.02975082397461

Token 229: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1472419600977446e-06
    2. '1' → logprob: -13.750000953674316
    3. 'from' → logprob: -17.500001907348633
    4. ':' → logprob: -18.625001907348633
    5. '[
' → logprob: -19.000001907348633
    6. ' [' → logprob: -19.375001907348633
    7. '```' → logprob: -19.875001907348633
    8. '(' → logprob: -19.875001907348633
    9. '2' → logprob: -20.750001907348633
    10. 's' → logprob: -20.875001907348633

Token 230: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.000000953674316
    3. '１' → logprob: -17.5
    4. ' ' → logprob: -20.0
    5. '(' → logprob: -20.75
    6. '۱' → logprob: -20.75
    7. '```' → logprob: -21.0
    8. '
' → logprob: -21.0
    9. '﻿' → logprob: -21.5
    10. 'range' → logprob: -21.5

Token 231: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002123614540323615
    2. ']:' → logprob: -9.125212669372559
    3. '[' → logprob: -9.250212669372559
    4. ':]' → logprob: -12.375212669372559
    5. '：' → logprob: -14.000212669372559
    6. ' :' → logprob: -14.750212669372559
    7. ':],' → logprob: -15.250212669372559
    8. '[]' → logprob: -15.375212669372559
    9. '():' → logprob: -15.500212669372559
    10. '	' → logprob: -15.625212669372559

Token 232: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.2284964770078659
    2. ':
' → logprob: -2.103496551513672
    3. ':' → logprob: -2.728496551513672
    4. '	' → logprob: -4.728496551513672
    5. ']:' → logprob: -4.853496551513672
    6. '():
' → logprob: -9.603496551513672
    7. ']:
' → logprob: -10.103496551513672
    8. '	if' → logprob: -10.228496551513672
    9. '):
' → logprob: -10.478496551513672
    10. ']' → logprob: -11.103496551513672

Token 233: '	' (ID: 197)
  Prédit: '	'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.003908607643097639
    2. '	if' → logprob: -5.628908634185791
    3. ' if' → logprob: -8.378908157348633
    4. '   ' → logprob: -10.503908157348633
    5. '       ' → logprob: -10.628908157348633
    6. 'if' → logprob: -11.753908157348633
    7. ' ' → logprob: -12.128908157348633
    8. '	   ' → logprob: -12.628908157348633
    9. ':' → logprob: -12.878908157348633
    10. ' 	' → logprob: -13.128908157348633

Token 234: '	if' (ID: 1224)
  Prédit: '	if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	if' → logprob: -0.3832733929157257
    2. 'if' → logprob: -1.5082733631134033
    3. ' if' → logprob: -2.3832733631134033
    4. '	' → logprob: -5.383273601531982
    5. '   ' → logprob: -8.633273124694824
    6. '       ' → logprob: -10.633273124694824
    7. '	   ' → logprob: -11.008273124694824
    8. ' ' → logprob: -11.508273124694824
    9. '	while' → logprob: -12.633273124694824
    10. '    ' → logprob: -13.008273124694824

Token 235: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.20159849524497986
    2. 'len' → logprob: -1.7015985250473022
    3. '	len' → logprob: -8.951598167419434
    4. '(len' → logprob: -9.826598167419434
    5. ' ' → logprob: -14.201598167419434
    6. '	' → logprob: -14.576598167419434
    7. '[len' → logprob: -15.576598167419434
    8. ',len' → logprob: -16.70159912109375
    9. '   ' → logprob: -16.82659912109375
    10. '  ' → logprob: -16.95159912109375

Token 236: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.07006958872079849
    2. 'res' → logprob: -2.8200695514678955
    3. ' res' → logprob: -4.820069789886475
    4. '	res' → logprob: -13.445069313049316
    5. ' (' → logprob: -14.445069313049316
    6. '=res' → logprob: -15.320069313049316
    7. '(' → logprob: -15.445069313049316
    8. ',res' → logprob: -15.570069313049316
    9. '$res' → logprob: -15.695069313049316
    10. '_res' → logprob: -16.195070266723633

Token 237: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9981420336989686e-05
    2. 'res' → logprob: -11.000020027160645
    3. '1' → logprob: -13.000020027160645
    4. '２' → logprob: -14.875020027160645
    5. '[' → logprob: -15.375020027160645
    6. '(res' → logprob: -16.750019073486328
    7. '```' → logprob: -16.875019073486328
    8. '২' → logprob: -17.250019073486328
    9. '۲' → logprob: -17.437519073486328
    10. '२' → logprob: -17.437519073486328

Token 238: ')' (ID: 8)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4294247031211853
    2. '==' → logprob: -1.05442476272583
    3. '()==' → logprob: -8.304424285888672
    4. ')' → logprob: -8.429424285888672
    5. ')==' → logprob: -8.679424285888672
    6. '()' → logprob: -9.679424285888672
    7. ']==' → logprob: -11.554424285888672
    8. '=' → logprob: -12.179424285888672
    9. '<|end|>' → logprob: -12.554424285888672
    10. ' ' → logprob: -13.429424285888672

Token 239: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02637612447142601
    2. ' ==' → logprob: -3.6513760089874268
    3. '()==' → logprob: -10.026375770568848
    4. ')==' → logprob: -11.651375770568848
    5. '=' → logprob: -11.776375770568848
    6. '==
' → logprob: -12.401375770568848
    7. ']==' → logprob: -12.526375770568848
    8. '(' → logprob: -13.026375770568848
    9. 'def' → logprob: -13.901375770568848
    10. '	' → logprob: -14.026375770568848

Token 240: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009126556105911732
    2. ' ' → logprob: -7.000912666320801
    3. '	' → logprob: -14.7509126663208
    4. '<|end|>' → logprob: -15.3759126663208
    5. '１' → logprob: -15.5009126663208
    6. '[' → logprob: -16.500911712646484
    7. '   ' → logprob: -16.625911712646484
    8. '2' → logprob: -17.125911712646484
    9. '  ' → logprob: -17.250911712646484
    10. '۱' → logprob: -17.625911712646484

Token 241: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -11.875007629394531
    3. '１' → logprob: -16.50000762939453
    4. '۱' → logprob: -17.37500762939453
    5. '	' → logprob: -18.12500762939453
    6. 'len' → logprob: -18.62500762939453
    7. '   ' → logprob: -18.62500762939453
    8. '```' → logprob: -19.12500762939453
    9. '१' → logprob: -19.25000762939453
    10. '[' → logprob: -19.31250762939453

Token 242: ':
' (ID: 734)
  Prédit: '		'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.5671675801277161
    2. '	' → logprob: -1.5671675205230713
    3. ':
' → logprob: -2.1921675205230713
    4. ':' → logprob: -2.1921675205230713
    5. '.append' → logprob: -8.317167282104492
    6. '<|end|>' → logprob: -8.817167282104492
    7. '):
' → logprob: -9.192167282104492
    8. '           ' → logprob: -9.567167282104492
    9. '.' → logprob: -9.817167282104492
    10. '	       ' → logprob: -10.317167282104492

Token 243: '		' (ID: 335)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.022014891728758812
    2. '		' → logprob: -3.897014856338501
    3. 'res' → logprob: -6.64701509475708
    4. ' res' → logprob: -9.897014617919922
    5. ':
' → logprob: -10.147014617919922
    6. '	res' → logprob: -11.022014617919922
    7. '           ' → logprob: -11.147014617919922
    8. ':' → logprob: -11.397014617919922
    9. '```' → logprob: -11.897014617919922
    10. '   ' → logprob: -11.897014617919922

Token 244: '	res' (ID: 18266)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00036787090357393026
    2. ' res' → logprob: -8.000368118286133
    3. '	res' → logprob: -10.375368118286133
    4. '		' → logprob: -14.125368118286133
    5. '	' → logprob: -15.000368118286133
    6. '(res' → logprob: -16.750368118286133
    7. '.res' → logprob: -17.625368118286133
    8. '_res' → logprob: -17.750368118286133
    9. ',res' → logprob: -17.875368118286133
    10. '$res' → logprob: -18.000368118286133

Token 245: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3856492842023727e-06
    2. '.append' → logprob: -14.375000953674316
    3. 'append' → logprob: -14.500000953674316
    4. 'res' → logprob: -16.375001907348633
    5. '２' → logprob: -16.375001907348633
    6. '```' → logprob: -18.125001907348633
    7. 'app' → logprob: -18.375001907348633
    8. '۲' → logprob: -18.375001907348633
    9. '₂' → logprob: -18.875001907348633
    10. '২' → logprob: -19.125001907348633

Token 246: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.5451681974809617e-05
    2. 'append' → logprob: -11.125015258789062
    3. '.' → logprob: -15.000015258789062
    4. 'Append' → logprob: -15.875015258789062
    5. '.Append' → logprob: -16.500015258789062
    6. '.app' → logprob: -16.500015258789062
    7. 'app' → logprob: -17.250015258789062
    8. '_append' → logprob: -17.250015258789062
    9. '	append' → logprob: -17.500015258789062
    10. 'appen' → logprob: -17.875015258789062

Token 247: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.125
    3. 'd' → logprob: -17.625
    4. '	d' → logprob: -18.125
    5. '(
' → logprob: -18.875
    6. '[d' → logprob: -19.875
    7. ' (' → logprob: -19.875
    8. '	' → logprob: -20.5
    9. '(D' → logprob: -22.25
    10. '((' → logprob: -23.0

Token 248: ')
' (ID: 446)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.077874094247818
    2. ')
' → logprob: -2.952874183654785
    3. ')' → logprob: -3.827874183654785
    4. '       ' → logprob: -7.452874183654785
    5. '		' → logprob: -8.952874183654785
    6. '<|end|>' → logprob: -9.577874183654785
    7. '):
' → logprob: -9.952874183654785
    8. 'else' → logprob: -10.327874183654785
    9. '	else' → logprob: -11.077874183654785
    10. '()' → logprob: -11.202874183654785

Token 249: '	' (ID: 197)
  Prédit: '	'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.3312728703022003
    2. 'else' → logprob: -1.331272840499878
    3. '	else' → logprob: -4.206273078918457
    4. ' else' → logprob: -5.831273078918457
    5. '		' → logprob: -11.831273078918457
    6. '       ' → logprob: -13.331273078918457
    7. '	elif' → logprob: -13.956273078918457
    8. '#else' → logprob: -14.206273078918457
    9. '	while' → logprob: -14.456273078918457
    10. 'elif' → logprob: -14.581273078918457

Token 250: '	else' (ID: 5107)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2560761570930481
    2. '	else' → logprob: -1.5060760974884033
    3. ' else' → logprob: -5.631076335906982
    4. '	' → logprob: -7.506076335906982
    5. '	while' → logprob: -13.631075859069824
    6. '		' → logprob: -14.131075859069824
    7. '	for' → logprob: -14.881075859069824
    8. '	elif' → logprob: -14.881075859069824
    9. ':
' → logprob: -15.006075859069824
    10. 'while' → logprob: -15.506075859069824

Token 251: ':
' (ID: 734)
  Prédit: '		'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.0005556552205234766
    2. ':' → logprob: -8.250555992126465
    3. ':
' → logprob: -8.625555992126465
    4. '	' → logprob: -10.000555992126465
    5. ' while' → logprob: -10.625555992126465
    6. '			' → logprob: -10.875555992126465
    7. 'while' → logprob: -12.375555992126465
    8. '			
' → logprob: -12.375555992126465
    9. ' 		' → logprob: -13.000555992126465
    10. '```' → logprob: -13.000555992126465

Token 252: '		' (ID: 335)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.115700863301754
    2. '		' → logprob: -2.2407009601593018
    3. ' while' → logprob: -6.865700721740723
    4. '	while' → logprob: -7.115700721740723
    5. 'while' → logprob: -7.115700721740723
    6. '			' → logprob: -9.240700721740723
    7. '   ' → logprob: -10.990700721740723
    8. '           ' → logprob: -11.365700721740723
    9. '	       ' → logprob: -11.490700721740723
    10. '		
' → logprob: -11.740700721740723

Token 253: '	while' (ID: 10883)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6583370566368103
    2. '	while' → logprob: -1.658337116241455
    3. '	' → logprob: -1.908337116241455
    4. ' while' → logprob: -2.783337116241455
    5. '		' → logprob: -3.033337116241455
    6. '			' → logprob: -3.408337116241455
    7. 'While' → logprob: -8.783336639404297
    8. '		       ' → logprob: -10.283336639404297
    9. '				' → logprob: -10.408336639404297
    10. '	   ' → logprob: -10.783336639404297

Token 254: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.20145036280155182
    2. 'len' → logprob: -1.7014503479003906
    3. '(len' → logprob: -10.45145034790039
    4. '	len' → logprob: -11.82645034790039
    5. '[len' → logprob: -15.32645034790039
    6. ' not' → logprob: -15.45145034790039
    7. ' ' → logprob: -15.70145034790039
    8. ' ' → logprob: -16.45145034790039
    9. '=len' → logprob: -16.82645034790039
    10. '<len' → logprob: -17.20145034790039

Token 255: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.07889761030673981
    2. 'res' → logprob: -2.578897714614868
    3. ' res' → logprob: -11.828897476196289
    4. '	res' → logprob: -14.578897476196289
    5. '$res' → logprob: -16.70389747619629
    6. '(' → logprob: -17.45389747619629
    7. ' (' → logprob: -18.45389747619629
    8. '_res' → logprob: -18.45389747619629
    9. '=res' → logprob: -18.70389747619629
    10. ',res' → logprob: -18.70389747619629

Token 256: '2' (ID: 17)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.003980804234743118
    2. '(res' → logprob: -6.00398063659668
    3. '2' → logprob: -6.50398063659668
    4. ' res' → logprob: -12.25398063659668
    5. '_res' → logprob: -14.25398063659668
    6. '	res' → logprob: -14.37898063659668
    7. '$res' → logprob: -15.12898063659668
    8. '(' → logprob: -15.75398063659668
    9. 'ress' → logprob: -17.12898063659668
    10. '.res' → logprob: -17.25398063659668

Token 257: ')' (ID: 8)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.005245022010058165
    2. '>' → logprob: -5.380245208740234
    3. ')' → logprob: -7.505245208740234
    4. ')>' → logprob: -10.005245208740234
    5. ' <' → logprob: -11.880245208740234
    6. '()>' → logprob: -12.005245208740234
    7. '[-' → logprob: -12.255245208740234
    8. '>-' → logprob: -12.380245208740234
    9. '()' → logprob: -13.130245208740234
    10. '-' → logprob: -13.505245208740234

Token 258: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.07889397442340851
    2. '>' → logprob: -2.5788938999176025
    3. '()>' → logprob: -12.828893661499023
    4. '>-' → logprob: -15.203893661499023
    5. ' ' → logprob: -15.328893661499023
    6. '＞' → logprob: -15.453893661499023
    7. ' <' → logprob: -15.578893661499023
    8. 'res' → logprob: -15.578893661499023
    9. ')>' → logprob: -16.328893661499023
    10. '()' → logprob: -16.453893661499023

Token 259: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005929743405431509
    2. ' ' → logprob: -5.130929946899414
    3. '2' → logprob: -14.380929946899414
    4. '１' → logprob: -16.005929946899414
    5. '   ' → logprob: -16.443429946899414
    6. '(' → logprob: -16.505929946899414
    7. '```' → logprob: -16.755929946899414
    8. '>' → logprob: -16.755929946899414
    9. '[' → logprob: -17.568429946899414
    10. '۱' → logprob: -17.818429946899414

Token 260: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '１' → logprob: -17.375003814697266
    4. '```' → logprob: -19.000003814697266
    5. 'res' → logprob: -19.250003814697266
    6. '2' → logprob: -19.250003814697266
    7. '   ' → logprob: -19.500003814697266
    8. '(' → logprob: -19.875003814697266
    9. '۱' → logprob: -20.187503814697266
    10. '...' → logprob: -20.437503814697266

Token 261: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.002480412134900689
    2. 'and' → logprob: -6.002480506896973
    3. '	and' → logprob: -12.502480506896973
    4. '		' → logprob: -14.502480506896973
    5. '	' → logprob: -15.377480506896973
    6. ' ' → logprob: -16.002479553222656
    7. ' ' → logprob: -16.502479553222656
    8. '			' → logprob: -17.627479553222656
    9. ' not' → logprob: -17.627479553222656
    10. '		 ' → logprob: -18.252479553222656

Token 262: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.20142453908920288
    2. 'not' → logprob: -1.7014245986938477
    3. '	not' → logprob: -11.826424598693848
    4. ' ' → logprob: -13.451424598693848
    5. '(not' → logprob: -13.951424598693848
    6. '!' → logprob: -13.951424598693848
    7. ':not' → logprob: -15.576424598693848
    8. ' ' → logprob: -15.826424598693848
    9. '```' → logprob: -16.20142364501953
    10. '
' → logprob: -16.70142364501953

Token 263: ' CC' (ID: 21547)
  Prédit: 'CC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CC' → logprob: -0.16024160385131836
    2. ' CC' → logprob: -1.9102416038513184
    3. '	CC' → logprob: -11.160242080688477
    4. '(CC' → logprob: -13.285242080688477
    5. '_CC' → logprob: -14.035242080688477
    6. ' ' → logprob: -15.035242080688477
    7. '   ' → logprob: -16.035242080688477
    8. 'cc' → logprob: -16.035242080688477
    9. ' ' → logprob: -16.410242080688477
    10. 'C' → logprob: -17.285242080688477

Token 264: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -5.228561349213123e-05
    2. '2' → logprob: -10.625052452087402
    3. '#' → logprob: -11.875052452087402
    4. 'CW' → logprob: -12.625052452087402
    5. 'w' → logprob: -12.937552452087402
    6. '
' → logprob: -13.187552452087402
    7. '[' → logprob: -13.562552452087402
    8. '(' → logprob: -13.562552452087402
    9. '1' → logprob: -13.625052452087402
    10. ' W' → logprob: -14.000052452087402

Token 265: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -2.5776860184123507e-06
    2. 'res' → logprob: -13.00000286102295
    3. ' res' → logprob: -15.62500286102295
    4. '	res' → logprob: -16.500001907348633
    5. ' (' → logprob: -16.875001907348633
    6. '=res' → logprob: -18.000001907348633
    7. ',res' → logprob: -18.250001907348633
    8. '$res' → logprob: -18.875001907348633
    9. '(' → logprob: -19.125001907348633
    10. '(
' → logprob: -20.500001907348633

Token 266: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.074907287256792e-05
    2. '-' → logprob: -10.25006103515625
    3. '[-' → logprob: -10.62506103515625
    4. '1' → logprob: -14.62506103515625
    5. '２' → logprob: -15.87506103515625
    6. '[' → logprob: -16.12506103515625
    7. '{-' → logprob: -16.25006103515625
    8. '(-' → logprob: -17.25006103515625
    9. '   ' → logprob: -17.31256103515625
    10. '−' → logprob: -17.31256103515625

Token 267: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.9361264946837764e-07
    2. '-' → logprob: -16.5
    3. ' [-' → logprob: -17.5
    4. '	' → logprob: -18.0
    5. '   ' → logprob: -18.125
    6. '[' → logprob: -18.25
    7. '[:-' → logprob: -18.375
    8. '(-' → logprob: -19.75
    9. '
' → logprob: -19.75
    10. '```' → logprob: -20.125

Token 268: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009213464800268412
    2. '-' → logprob: -7.000921249389648
    3. '[-' → logprob: -12.750921249389648
    4. '	' → logprob: -13.125921249389648
    5. ' ' → logprob: -13.250921249389648
    6. ' -' → logprob: -14.000921249389648
    7. '[' → logprob: -14.375921249389648
    8. '```' → logprob: -15.000921249389648
    9. '' → logprob: -15.188421249389648
    10. '1' → logprob: -15.250921249389648

Token 269: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3487563729286194
    2. '],' → logprob: -1.2237563133239746
    3. ' ,' → logprob: -8.723756790161133
    4. ',res' → logprob: -10.098756790161133
    5. '),' → logprob: -10.723756790161133
    6. 'res' → logprob: -10.848756790161133
    7. ' ],' → logprob: -11.098756790161133
    8. '},' → logprob: -11.348756790161133
    9. '	' → logprob: -11.973756790161133
    10. ']' → logprob: -12.098756790161133

Token 270: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0024806505534797907
    2. ' res' → logprob: -6.002480506896973
    3. '	res' → logprob: -12.252480506896973
    4. '(res' → logprob: -16.37748146057129
    5. '$res' → logprob: -16.87748146057129
    6. ' ' → logprob: -18.25248146057129
    7. '	' → logprob: -19.00248146057129
    8. '[' → logprob: -19.37748146057129
    9. '_res' → logprob: -19.50248146057129
    10. 'ress' → logprob: -19.62748146057129

Token 271: '2' (ID: 17)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.657282829284668
    2. '1' → logprob: -0.907282829284668
    3. '-' → logprob: -3.032282829284668
    4. '2' → logprob: -3.532282829284668
    5. '(-' → logprob: -7.532282829284668
    6. ' -' → logprob: -10.407282829284668
    7. ' [-' → logprob: -11.032282829284668
    8. '{-' → logprob: -11.157282829284668
    9. '```' → logprob: -11.157282829284668
    10. '−' → logprob: -11.157282829284668

Token 272: '[-' (ID: 17503)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.47729453444480896
    2. '[-' → logprob: -0.9772945642471313
    3. ',' → logprob: -6.602294445037842
    4. '	' → logprob: -6.852294445037842
    5. ',-' → logprob: -7.477294445037842
    6. '],' → logprob: -9.477294921875
    7. ' -' → logprob: -9.852294921875
    8. '][-' → logprob: -10.227294921875
    9. '(-' → logprob: -10.977294921875
    10. '		' → logprob: -10.977294921875

Token 273: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -14.000001907348633
    3. '１' → logprob: -14.125001907348633
    4. '۱' → logprob: -15.937501907348633
    5. '```' → logprob: -16.250001907348633
    6. '	' → logprob: -16.437501907348633
    7. '2' → logprob: -16.937501907348633
    8. '[' → logprob: -17.062501907348633
    9. '-' → logprob: -17.500001907348633
    10. ']' → logprob: -17.500001907348633

Token 274: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005784447304904461
    2. ',d' → logprob: -5.255784511566162
    3. ' ,' → logprob: -7.630784511566162
    4. 'd' → logprob: -10.005784034729004
    5. '	d' → logprob: -12.255784034729004
    6. '	' → logprob: -12.505784034729004
    7. '),' → logprob: -12.505784034729004
    8. '```' → logprob: -13.505784034729004
    9. '(d' → logprob: -13.755784034729004
    10. '`,' → logprob: -13.880784034729004

Token 275: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.20146334171295166
    2. ' d' → logprob: -1.7014633417129517
    3. '	d' → logprob: -9.95146369934082
    4. ' ' → logprob: -14.20146369934082
    5. ' ' → logprob: -15.32646369934082
    6. '   ' → logprob: -15.45146369934082
    7. '	' → logprob: -15.45146369934082
    8. '		' → logprob: -15.70146369934082
    9. '_d' → logprob: -16.07646369934082
    10. '
' → logprob: -16.07646369934082

Token 276: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.005363248288631439
    2. '):' → logprob: -5.255363464355469
    3. '	' → logprob: -9.255363464355469
    4. '):
' → logprob: -11.380363464355469
    5. ':
' → logprob: -12.005363464355469
    6. ')' → logprob: -12.630363464355469
    7. '		' → logprob: -12.630363464355469
    8. '):

' → logprob: -12.630363464355469
    9. '			' → logprob: -12.755363464355469
    10. ':' → logprob: -13.880363464355469

Token 277: '			' (ID: 833)
  Prédit: '			'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '			' → logprob: -0.00012725738633889705
    2. '		' → logprob: -9.500126838684082
    3. 'res' → logprob: -11.125126838684082
    4. '				' → logprob: -11.375126838684082
    5. '               ' → logprob: -11.375126838684082
    6. '	' → logprob: -12.000126838684082
    7. '	res' → logprob: -13.125126838684082
    8. ' res' → logprob: -13.500126838684082
    9. '		       ' → logprob: -14.000126838684082
    10. ' 			' → logprob: -14.000126838684082

Token 278: '	res' (ID: 18266)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.01856953278183937
    2. ' res' → logprob: -4.018569469451904
    3. '	res' → logprob: -8.018569946289062
    4. '	' → logprob: -9.518569946289062
    5. '			' → logprob: -11.393569946289062
    6. '				' → logprob: -12.518569946289062
    7. '		' → logprob: -13.643569946289062
    8. '_res' → logprob: -15.768569946289062
    9. '       ' → logprob: -16.518569946289062
    10. '               ' → logprob: -16.643569946289062

Token 279: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3856492842023727e-06
    2. '２' → logprob: -14.375000953674316
    3. 'res' → logprob: -14.375000953674316
    4. 's' → logprob: -16.625001907348633
    5. '```' → logprob: -17.500001907348633
    6. '₂' → logprob: -17.625001907348633
    7. '۲' → logprob: -18.125001907348633
    8. '1' → logprob: -18.250001907348633
    9. ' res' → logprob: -18.937501907348633
    10. 'r' → logprob: -19.312501907348633

Token 280: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -3.845798710244708e-05
    2. 'pop' → logprob: -10.250038146972656
    3. '2' → logprob: -12.875038146972656
    4. '.' → logprob: -15.125038146972656
    5. ' .' → logprob: -16.000038146972656
    6. '(pop' → logprob: -17.000038146972656
    7. '	pop' → logprob: -17.500038146972656
    8. '.popup' → logprob: -18.625038146972656
    9. '```' → logprob: -18.625038146972656
    10. '.append' → logprob: -18.750038146972656

Token 281: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08189888298511505
    2. '()
' → logprob: -2.5818989276885986
    3. '		' → logprob: -5.8318986892700195
    4. '	' → logprob: -10.08189868927002
    5. '()
' → logprob: -11.45689868927002
    6. '()

' → logprob: -11.58189868927002
    7. '(' → logprob: -12.45689868927002
    8. '()\' → logprob: -12.83189868927002
    9. '			' → logprob: -13.70689868927002
    10. '```' → logprob: -14.95689868927002

Token 282: '		' (ID: 335)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.030629515647888184
    2. '		' → logprob: -3.5306296348571777
    3. 'res' → logprob: -7.155629634857178
    4. '	res' → logprob: -10.03062915802002
    5. '			' → logprob: -10.53062915802002
    6. ' res' → logprob: -11.53062915802002
    7. '       ' → logprob: -11.65562915802002
    8. '           ' → logprob: -12.53062915802002
    9. '   ' → logprob: -13.15562915802002
    10. '[' → logprob: -14.40562915802002

Token 283: '	res' (ID: 18266)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0025962304789572954
    2. '	' → logprob: -6.002596378326416
    3. ' res' → logprob: -9.502595901489258
    4. '	res' → logprob: -10.002595901489258
    5. '		' → logprob: -15.002595901489258
    6. '       ' → logprob: -15.752595901489258
    7. '   ' → logprob: -17.127595901489258
    8. '[' → logprob: -17.627595901489258
    9. '			' → logprob: -17.627595901489258
    10. '_res' → logprob: -18.002595901489258

Token 284: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. '.append' → logprob: -15.625
    3. '２' → logprob: -17.0
    4. '```' → logprob: -17.125
    5. 'append' → logprob: -18.375
    6. 'res' → logprob: -18.5
    7. 's' → logprob: -18.625
    8. '1' → logprob: -18.75
    9. '₂' → logprob: -19.0
    10. '[' → logprob: -19.5

Token 285: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.5094070477061905e-05
    2. 'append' → logprob: -11.125015258789062
    3. '.' → logprob: -15.250015258789062
    4. ' .' → logprob: -17.000015258789062
    5. '	append' → logprob: -18.250015258789062
    6. '.app' → logprob: -18.625015258789062
    7. ' append' → logprob: -19.000015258789062
    8. 'appen' → logprob: -19.500015258789062
    9. '.Append' → logprob: -19.500015258789062
    10. 'Append' → logprob: -19.750015258789062

Token 286: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: 0.0
    2. '(' → logprob: -17.75
    3. 'd' → logprob: -20.0
    4. '	d' → logprob: -20.5
    5. '(
' → logprob: -21.0
    6. '(D' → logprob: -23.875
    7. ' (' → logprob: -24.625
    8. '[d' → logprob: -24.75
    9. '	' → logprob: -25.0
    10. '()' → logprob: -25.875

Token 287: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01970323920249939
    2. ')
' → logprob: -4.019703388214111
    3. 'd' → logprob: -7.144703388214111
    4. ')d' → logprob: -7.269703388214111
    5. '	d' → logprob: -10.144702911376953
    6. ')
' → logprob: -11.269702911376953
    7. '(d' → logprob: -12.144702911376953
    8. '	' → logprob: -12.269702911376953
    9. ')

' → logprob: -13.394702911376953
    10. '[d' → logprob: -14.519702911376953

Token 288: '	return' (ID: 1393)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0643559917807579
    2. 'return' → logprob: -2.8143560886383057
    3. '	res' → logprob: -6.189355850219727
    4. '	return' → logprob: -8.314355850219727
    5. ' res' → logprob: -9.689355850219727
    6. ' return' → logprob: -10.689355850219727
    7. '```' → logprob: -13.439355850219727
    8. '   ' → logprob: -13.814355850219727
    9. 'if' → logprob: -14.314355850219727
    10. '#' → logprob: -15.314355850219727

Token 289: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.038059741258621216
    2. ' res' → logprob: -3.288059711456299
    3. '	res' → logprob: -11.788060188293457
    4. 'list' → logprob: -12.163060188293457
    5. '(res' → logprob: -13.288060188293457
    6. ' ' → logprob: -13.538060188293457
    7. '[' → logprob: -13.663060188293457
    8. '   ' → logprob: -14.413060188293457
    9. ' list' → logprob: -14.913060188293457
    10. 're' → logprob: -16.41305923461914

Token 290: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014406509581021965
    2. 'res' → logprob: -8.875144004821777
    3. '[' → logprob: -13.000144004821777
    4. 's' → logprob: -14.125144004821777
    5. ' res' → logprob: -14.250144004821777
    6. '１' → logprob: -16.125144958496094
    7. '[]' → logprob: -16.250144958496094
    8. '```' → logprob: -16.625144958496094
    9. '(res' → logprob: -16.875144958496094
    10. 'r' → logprob: -17.250144958496094

Token 291: '[:-' (ID: 63556)
  Prédit: '[:-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -0.0009398083784617484
    2. '+' → logprob: -7.250939846038818
    3. '[' → logprob: -8.50093936920166
    4. ' +' → logprob: -10.62593936920166
    5. '[::-' → logprob: -13.75093936920166
    6. '[:' → logprob: -14.00093936920166
    7. '.pop' → logprob: -15.75093936920166
    8. '[...,' → logprob: -15.87593936920166
    9. '[:]' → logprob: -16.125940322875977
    10. '[-' → logprob: -17.125940322875977

Token 292: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. '-' → logprob: -13.375001907348633
    3. '１' → logprob: -14.875001907348633
    4. '```' → logprob: -17.500001907348633
    5. ' ' → logprob: -17.750001907348633
    6. '(' → logprob: -18.000001907348633
    7. '   ' → logprob: -18.125001907348633
    8. '5' → logprob: -18.125001907348633
    9. '  ' → logprob: -18.687501907348633
    10. '2' → logprob: -18.687501907348633

Token 293: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4587900936603546
    2. ']+' → logprob: -1.4587900638580322
    3. '+' → logprob: -2.0837900638580322
    4. ' +' → logprob: -4.583790302276611
    5. ' ]' → logprob: -7.208790302276611
    6. '+]' → logprob: -11.833789825439453
    7. ']+=' → logprob: -12.833789825439453
    8. ',' → logprob: -13.333789825439453
    9. ' ' → logprob: -13.583789825439453
    10. '	' → logprob: -13.958789825439453

Token 294: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4740851819515228
    2. '+' → logprob: -0.9740852117538452
    3. '[:-' → logprob: -12.099084854125977
    4. '＋' → logprob: -13.474084854125977
    5. '+[' → logprob: -14.599084854125977
    6. '[::-' → logprob: -15.224084854125977
    7. 'res' → logprob: -16.099084854125977
    8. '+r' → logprob: -16.724084854125977
    9. '	' → logprob: -16.849084854125977
    10. '+
' → logprob: -17.099084854125977

Token 295: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.02975083328783512
    2. ' res' → logprob: -3.5297508239746094
    3. '	res' → logprob: -14.77975082397461
    4. '[' → logprob: -17.77975082397461
    5. '(res' → logprob: -18.15475082397461
    6. ' ' → logprob: -19.15475082397461
    7. '$res' → logprob: -19.65475082397461
    8. '.res' → logprob: -20.27975082397461
    9. ',res' → logprob: -20.40475082397461
    10. '_res' → logprob: -21.40475082397461

Token 296: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.13349682092666626
    2. 's' → logprob: -2.5084967613220215
    3. '1' → logprob: -3.1334967613220215
    4. '[' → logprob: -11.50849723815918
    5. '```' → logprob: -14.25849723815918
    6. 'с' → logprob: -14.50849723815918
    7. '２' → logprob: -14.50849723815918
    8. 'S' → logprob: -15.00849723815918
    9. ' s' → logprob: -15.19599723815918
    10. 'res' → logprob: -15.19599723815918

Token 297: '[:-' (ID: 63556)
  Prédit: '[:-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -0.07889287173748016
    2. '[' → logprob: -2.578892946243286
    3. '[-' → logprob: -13.203892707824707
    4. '[:' → logprob: -14.203892707824707
    5. '1' → logprob: -14.328892707824707
    6. '```' → logprob: -18.328893661499023
    7. '[::-' → logprob: -18.578893661499023
    8. '#' → logprob: -19.828893661499023
    9. '-' → logprob: -20.453893661499023
    10. '2' → logprob: -20.703893661499023

Token 298: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.259079363080673e-05
    2. '11' → logprob: -11.500012397766113
    3. ' ' → logprob: -14.625012397766113
    4. '１' → logprob: -14.812512397766113
    5. '-' → logprob: -14.937512397766113
    6. '۱' → logprob: -15.062512397766113
    7. '111' → logprob: -15.750012397766113
    8. '```' → logprob: -16.00001335144043
    9. '১' → logprob: -17.06251335144043
    10. '' → logprob: -17.25001335144043

Token 299: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3853883147239685
    2. '<|end|>' → logprob: -1.6353883743286133
    3. ')' → logprob: -2.1353883743286133
    4. '}' → logprob: -5.135388374328613
    5. '<|end|>' → logprob: -7.885388374328613
    6. '```' → logprob: -8.260388374328613
    7. ' ]' → logprob: -9.760388374328613
    8. '']' → logprob: -10.510388374328613
    9. '）' → logprob: -10.760388374328613
    10. '[]' → logprob: -11.385388374328613

Token 300: 'n' (ID: 77)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.04490375518798828
    2. '<|end|>' → logprob: -3.7949037551879883
    3. 'def' → logprob: -4.669903755187988
    4. '.' → logprob: -5.044903755187988
    5. '<|end|>' → logprob: -6.044903755187988
    6. 'print' → logprob: -7.169903755187988
    7. '```' → logprob: -7.794903755187988
    8. 'dots' → logprob: -7.794903755187988
    9. ')' → logprob: -8.419903755187988
    10. ' ' → logprob: -8.919903755187988

Token 301: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05165877193212509
    2. '=' → logprob: -3.051658868789673
    3. ' ' → logprob: -5.801658630371094
    4. '=int' → logprob: -10.926658630371094
    5. ',' → logprob: -11.551658630371094
    6. ' =
' → logprob: -12.551658630371094
    7. ' ' → logprob: -12.801658630371094
    8. '.' → logprob: -13.301658630371094
    9. '  ' → logprob: -13.801658630371094
    10. ' ,' → logprob: -14.051658630371094

Token 302: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005240156780928373
    2. ' int' → logprob: -5.255239963531494
    3. '	int' → logprob: -12.755240440368652
    4. '[int' → logprob: -13.255240440368652
    5. '(int' → logprob: -14.255240440368652
    6. ' ' → logprob: -14.755240440368652
    7. '0' → logprob: -15.380240440368652
    8. '<int' → logprob: -15.630240440368652
    9. '10' → logprob: -16.130239486694336
    10. '=int' → logprob: -16.255239486694336

Token 303: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.008838986977934837
    2. '(' → logprob: -4.758839130401611
    3. 'input' → logprob: -8.508838653564453
    4. '()' → logprob: -11.008838653564453
    5. '(
' → logprob: -12.883838653564453
    6. '('' → logprob: -13.758838653564453
    7. ' input' → logprob: -14.008838653564453
    8. ' (' → logprob: -14.133838653564453
    9. '=input' → logprob: -14.633838653564453
    10. '	input' → logprob: -15.633838653564453

Token 304: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0015066476771607995
    2. '()' → logprob: -6.501506805419922
    3. '())
' → logprob: -12.876506805419922
    4. ')' → logprob: -13.876506805419922
    5. '().' → logprob: -14.876506805419922
    6. '(' → logprob: -15.376506805419922
    7. ' ())' → logprob: -15.876506805419922
    8. '()
' → logprob: -16.876506805419922
    9. '())

' → logprob: -16.876506805419922
    10. '();)' → logprob: -17.876506805419922

Token 305: 'dots' (ID: 183433)
  Prédit: 'dots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dots' → logprob: -0.004721445497125387
    2. 'points' → logprob: -5.379721641540527
    3. 'd' → logprob: -9.504721641540527
    4. 'pts' → logprob: -12.129721641540527
    5. ' dots' → logprob: -12.504721641540527
    6. 'data' → logprob: -12.629721641540527
    7. '```' → logprob: -12.754721641540527
    8. 'dot' → logprob: -12.754721641540527
    9. 'Dots' → logprob: -13.379721641540527
    10. 'a' → logprob: -13.629721641540527

Token 306: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5770531296730042
    2. ' =' → logprob: -0.8270531296730042
    3. '=[]' → logprob: -6.827053070068359
    4. '=[' → logprob: -11.32705307006836
    5. '=[]
' → logprob: -11.57705307006836
    6. '＝' → logprob: -12.82705307006836
    7. ' =[' → logprob: -13.07705307006836
    8. '	' → logprob: -14.32705307006836
    9. '=[]
' → logprob: -14.32705307006836
    10. '[]' → logprob: -14.57705307006836

Token 307: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02554514817893505
    2. '[list' → logprob: -3.775545120239258
    3. '[int' → logprob: -7.150545120239258
    4. '[]' → logprob: -7.775545120239258
    5. '[class' → logprob: -8.025545120239258
    6. '[input' → logprob: -8.400545120239258
    7. '[array' → logprob: -9.025545120239258
    8. '[List' → logprob: -9.525545120239258
    9. '[data' → logprob: -9.650545120239258
    10. '[]
' → logprob: -10.025545120239258

Token 308: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.165027217415627e-05
    2. ' for' → logprob: -10.750021934509277
    3. '	for' → logprob: -16.12502098083496
    4. '<|end|>' → logprob: -17.37502098083496
    5. '
' → logprob: -17.62502098083496
    6. 'import' → logprob: -19.37502098083496
    7. '```' → logprob: -19.75002098083496
    8. '[' → logprob: -20.12502098083496
    9. 'For' → logprob: -21.62502098083496
    10. 'from' → logprob: -22.37502098083496

Token 309: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.008641401305794716
    2. '_i' → logprob: -4.758641242980957
    3. '_in' → logprob: -10.883641242980957
    4. ' _' → logprob: -12.133641242980957
    5. '_input' → logprob: -13.758641242980957
    6. '_name' → logprob: -15.633641242980957
    7. 'i' → logprob: -15.758641242980957
    8. '_n' → logprob: -15.883641242980957
    9. '_index' → logprob: -16.008642196655273
    10. '_id' → logprob: -16.133642196655273

Token 310: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016289133578538895
    2. 'in' → logprob: -4.141289234161377
    3. ' ' → logprob: -8.641288757324219
    4. 'i' → logprob: -10.391288757324219
    5. 'n' → logprob: -10.516288757324219
    6. ' i' → logprob: -11.641288757324219
    7. '	in' → logprob: -11.641288757324219
    8. ' _' → logprob: -13.141288757324219
    9. '_' → logprob: -15.641288757324219
    10. ' n' → logprob: -15.766288757324219

Token 311: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.583550642360933e-05
    2. ' range' → logprob: -10.250036239624023
    3. '	range' → logprob: -15.875036239624023
    4. 'r' → logprob: -16.250036239624023
    5. '_' → logprob: -16.500036239624023
    6. 'rang' → logprob: -17.000036239624023
    7. 'ran' → logprob: -17.125036239624023
    8. '_range' → logprob: -18.625036239624023
    9. '(range' → logprob: -18.875036239624023
    10. '[' → logprob: -19.000036239624023

Token 312: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.011176676489412785
    2. 'n' → logprob: -4.511176586151123
    3. ' n' → logprob: -9.761177062988281
    4. '(' → logprob: -9.886177062988281
    5. '	n' → logprob: -10.886177062988281
    6. ' (' → logprob: -13.511177062988281
    7. '(
' → logprob: -15.886177062988281
    8. '_n' → logprob: -16.26117706298828
    9. '(int' → logprob: -16.63617706298828
    10. '(range' → logprob: -17.13617706298828

Token 313: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0008280907059088349
    2. '):' → logprob: -7.500828266143799
    3. ' ):
' → logprob: -9.12582778930664
    4. ')' → logprob: -9.37582778930664
    5. ':
' → logprob: -9.75082778930664
    6. '):
' → logprob: -11.00082778930664
    7. '	' → logprob: -13.50082778930664
    8. ')
' → logprob: -13.50082778930664
    9. ':' → logprob: -13.62582778930664
    10. '):

' → logprob: -14.50082778930664

Token 314: '	x' (ID: 21395)
  Prédit: '	x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	x' → logprob: -0.31961384415626526
    2. 'x' → logprob: -2.3196139335632324
    3. '   ' → logprob: -2.3196139335632324
    4. ' x' → logprob: -2.5696139335632324
    5. ' ' → logprob: -9.194613456726074
    6. '_x' → logprob: -9.319613456726074
    7. '	a' → logprob: -9.944613456726074
    8. '   ' → logprob: -10.319613456726074
    9. ',x' → logprob: -11.069613456726074
    10. '　' → logprob: -11.069613456726074

Token 315: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012573461048305035
    2. ',y' → logprob: -4.3875732421875
    3. ' ,' → logprob: -9.8875732421875
    4. 'y' → logprob: -12.0125732421875
    5. ',x' → logprob: -13.0125732421875
    6. ',Y' → logprob: -14.3875732421875
    7. ',s' → logprob: -14.8875732421875
    8. ',input' → logprob: -14.8875732421875
    9. ',d' → logprob: -15.0125732421875
    10. ',n' → logprob: -15.0125732421875

Token 316: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.018152397125959396
    2. ' y' → logprob: -4.018152236938477
    3. '	y' → logprob: -13.143152236938477
    4. ',y' → logprob: -14.643152236938477
    5. ' ' → logprob: -17.143152236938477
    6. ',' → logprob: -17.393152236938477
    7. '_y' → logprob: -17.893152236938477
    8. '

' → logprob: -18.268152236938477
    9. '<|end|>' → logprob: -18.268152236938477
    10. ' 
' → logprob: -18.768152236938477

Token 317: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.313262403011322
    2. ' =' → logprob: -1.3132624626159668
    3. '＝' → logprob: -15.438261985778809
    4. '=input' → logprob: -15.688261985778809
    5. '	' → logprob: -16.188262939453125
    6. ' ' → logprob: -16.813262939453125
    7. 'complex' → logprob: -17.188262939453125
    8. '=int' → logprob: -17.563262939453125
    9. '=
' → logprob: -17.813262939453125
    10. ' =
' → logprob: -18.563262939453125

Token 318: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.2519342005252838
    2. ' map' → logprob: -1.5019341707229614
    3. '	map' → logprob: -12.251934051513672
    4. 'input' → logprob: -16.126934051513672
    5. '(map' → logprob: -16.501934051513672
    6. 'list' → logprob: -16.501934051513672
    7. '[' → logprob: -17.376934051513672
    8. '_map' → logprob: -18.376934051513672
    9. '.map' → logprob: -18.376934051513672
    10. ',map' → logprob: -18.376934051513672

Token 319: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00011069540778407827
    2. 'int' → logprob: -9.875110626220703
    3. '(float' → logprob: -10.000110626220703
    4. '(' → logprob: -11.250110626220703
    5. '(str' → logprob: -15.500110626220703
    6. '(input' → logprob: -15.500110626220703
    7. '[int' → logprob: -15.750110626220703
    8. ' int' → logprob: -16.625110626220703
    9. '<int' → logprob: -16.750110626220703
    10. '	int' → logprob: -17.000110626220703

Token 320: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.0895254984498024
    2. ',' → logprob: -2.5895254611968994
    3. 'input' → logprob: -4.8395256996154785
    4. '(input' → logprob: -5.9645256996154785
    5. ' input' → logprob: -9.58952522277832
    6. '	input' → logprob: -11.33952522277832
    7. '(' → logprob: -11.83952522277832
    8. ' ,' → logprob: -12.46452522277832
    9. '=input' → logprob: -12.71452522277832
    10. '<input' → logprob: -13.46452522277832

Token 321: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0067161982879042625
    2. ' input' → logprob: -5.006716251373291
    3. ',input' → logprob: -14.506715774536133
    4. '	input' → logprob: -15.256715774536133
    5. '(input' → logprob: -17.006715774536133
    6. '_input' → logprob: -17.756715774536133
    7. '=input' → logprob: -18.256715774536133
    8. '<input' → logprob: -18.756715774536133
    9. ')' → logprob: -18.756715774536133
    10. '[input' → logprob: -19.381715774536133

Token 322: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.896309739408025e-07
    2. '()' → logprob: -14.375000953674316
    3. ' ().' → logprob: -17.125
    4. '.split' → logprob: -18.0
    5. '(' → logprob: -19.5
    6. '()
' → logprob: -19.75
    7. 'split' → logprob: -20.125
    8. '.' → logprob: -20.75
    9. '	' → logprob: -21.0
    10. '("").' → logprob: -21.625

Token 323: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.3902033970225602e-05
    2. 'strip' → logprob: -11.250014305114746
    3. ' split' → logprob: -14.750014305114746
    4. '().' → logprob: -15.500014305114746
    5. 'spl' → logprob: -15.875014305114746
    6. 'rstrip' → logprob: -16.37501335144043
    7. '(split' → logprob: -16.75001335144043
    8. 's' → logprob: -17.75001335144043
    9. '.split' → logprob: -18.87501335144043
    10. 'plit' → logprob: -21.25001335144043

Token 324: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1684514731168747
    2. ')' → logprob: -1.9184514284133911
    3. '())
' → logprob: -4.918451309204102
    4. '()' → logprob: -7.668451309204102
    5. ')
' → logprob: -7.918451309204102
    6. '())
' → logprob: -10.793451309204102
    7. '(' → logprob: -10.918451309204102
    8. ')
' → logprob: -12.793451309204102
    9. '()
' → logprob: -13.043451309204102
    10. '))' → logprob: -13.168451309204102

Token 325: '	d' (ID: 5971)
  Prédit: 'dots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dots' → logprob: -0.2059510499238968
    2. '	d' → logprob: -2.205950975418091
    3. ' dots' → logprob: -2.580950975418091
    4. 'd' → logprob: -8.580950736999512
    5. '   ' → logprob: -10.330950736999512
    6. ',d' → logprob: -10.580950736999512
    7. '
' → logprob: -11.705950736999512
    8. 'Dots' → logprob: -11.955950736999512
    9. '\d' → logprob: -12.205950736999512
    10. ' d' → logprob: -12.580950736999512

Token 326: 'ots' (ID: 2677)
  Prédit: 'ots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ots' → logprob: -1.318681188422488e-05
    2. 'dots' → logprob: -11.75001335144043
    3. 'otsi' → logprob: -13.62501335144043
    4. 'ot' → logprob: -13.62501335144043
    5. 'otsa' → logprob: -14.50001335144043
    6. 'o' → logprob: -14.62501335144043
    7. 'otse' → logprob: -14.62501335144043
    8. ' ots' → logprob: -15.25001335144043
    9. 'otso' → logprob: -15.50001335144043
    10. ' dots' → logprob: -15.87501335144043

Token 327: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00410012761130929
    2. '.' → logprob: -5.504100322723389
    3. '.ap' → logprob: -11.50409984588623
    4. '.app' → logprob: -11.62909984588623
    5. ' .' → logprob: -13.00409984588623
    6. '.Append' → logprob: -15.62909984588623
    7. '.a' → logprob: -15.75409984588623
    8. 'append' → logprob: -17.004100799560547
    9. '​.' → logprob: -17.754100799560547
    10. '].' → logprob: -18.129100799560547

Token 328: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.009199085645377636
    2. 'complex' → logprob: -5.009199142456055
    3. '(x' → logprob: -6.009199142456055
    4. '(' → logprob: -10.759199142456055
    5. 'x' → logprob: -13.384199142456055
    6. ' complex' → logprob: -13.634199142456055
    7. '((' → logprob: -15.509199142456055
    8. 'com' → logprob: -16.009199142456055
    9. '(float' → logprob: -16.009199142456055
    10. ' (' → logprob: -17.634199142456055

Token 329: 'plex' (ID: 12081)
  Prédit: 'plex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plex' → logprob: -2.7610454708337784e-05
    2. 'pl' → logprob: -11.250027656555176
    3. 'ple' → logprob: -12.125027656555176
    4. 'complex' → logprob: -12.125027656555176
    5. 'x' → logprob: -14.000027656555176
    6. 'px' → logprob: -14.125027656555176
    7. 'p' → logprob: -15.125027656555176
    8. '+' → logprob: -15.125027656555176
    9. '[' → logprob: -15.250027656555176
    10. '1' → logprob: -15.500027656555176

Token 330: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.4498052223643754e-05
    2. '(' → logprob: -11.625014305114746
    3. 'x' → logprob: -12.125014305114746
    4. ')' → logprob: -17.000015258789062
    5. ')x' → logprob: -17.375015258789062
    6. '(
' → logprob: -18.125015258789062
    7. ')(' → logprob: -18.375015258789062
    8. ' (' → logprob: -19.125015258789062
    9. '
' → logprob: -19.625015258789062
    10. ' x' → logprob: -19.875015258789062

Token 331: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011562933214008808
    2. ',y' → logprob: -6.876156330108643
    3. ' ,' → logprob: -9.001155853271484
    4. ',
' → logprob: -16.001155853271484
    5. '	' → logprob: -17.126155853271484
    6. 'y' → logprob: -17.126155853271484
    7. ' y' → logprob: -18.626155853271484
    8. '‌,' → logprob: -19.501155853271484
    9. '	y' → logprob: -19.501155853271484
    10. ' ' → logprob: -19.626155853271484

Token 332: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0067176250740885735
    2. ' y' → logprob: -5.006717681884766
    3. '	y' → logprob: -13.006717681884766
    4. ')y' → logprob: -17.131717681884766
    5. ' ' → logprob: -18.631717681884766
    6. '<|end|>' → logprob: -18.631717681884766
    7. '   ' → logprob: -18.756717681884766
    8. ''y' → logprob: -19.631717681884766
    9. '
' → logprob: -19.756717681884766
    10. ',y' → logprob: -19.756717681884766

Token 333: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00524454889819026
    2. ')' → logprob: -5.255244731903076
    3. '))
' → logprob: -11.505244255065918
    4. ' ))' → logprob: -14.755244255065918
    5. ')))' → logprob: -15.130244255065918
    6. ')
' → logprob: -17.380245208740234
    7. '))

' → logprob: -17.630245208740234
    8. '));' → logprob: -18.130245208740234
    9. '),' → logprob: -18.505245208740234
    10. '))
' → logprob: -18.880245208740234

Token 334: 'if' (ID: 366)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.8719242215156555
    2. 'ans' → logprob: -1.4969241619110107
    3. 'ch' → logprob: -1.6219241619110107
    4. 'res' → logprob: -2.1219241619110107
    5. 'conv' → logprob: -3.8719241619110107
    6. 'result' → logprob: -4.87192440032959
    7. 'answer' → logprob: -5.74692440032959
    8. 'for' → logprob: -6.24692440032959
    9. 'chs' → logprob: -6.37192440032959
    10. 'out' → logprob: -6.49692440032959

Token 335: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.641884446144104
    2. ' n' → logprob: -1.266884446144104
    3. 'len' → logprob: -2.5168843269348145
    4. 'n' → logprob: -2.6418843269348145
    5. ' __' → logprob: -3.8918843269348145
    6. ' dots' → logprob: -4.7668843269348145
    7. '__' → logprob: -5.5168843269348145
    8. 'dots' → logprob: -5.7668843269348145
    9. ' Conv' → logprob: -6.6418843269348145
    10. 'Conv' → logprob: -7.1418843269348145

Token 336: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.8312570318812504e-05
    2. '(set' → logprob: -11.250018119812012
    3. '(' → logprob: -12.375018119812012
    4. ' (' → logprob: -14.125018119812012
    5. '(conv' → logprob: -16.625019073486328
    6. '(points' → logprob: -17.000019073486328
    7. 'dots' → logprob: -17.000019073486328
    8. '(dot' → logprob: -17.250019073486328
    9. '	d' → logprob: -17.625019073486328
    10. '(C' → logprob: -17.750019073486328

Token 337: 'ots' (ID: 2677)
  Prédit: 'ots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ots' → logprob: -0.0020221394952386618
    2. 'dots' → logprob: -6.2520222663879395
    3. ' dots' → logprob: -10.002021789550781
    4. '(d' → logprob: -11.502021789550781
    5. ')' → logprob: -11.627021789550781
    6. ' ots' → logprob: -12.002021789550781
    7. '>' → logprob: -12.252021789550781
    8. 'ot' → logprob: -12.502021789550781
    9. '(' → logprob: -12.877021789550781
    10. 'otsi' → logprob: -13.627021789550781

Token 338: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1277933567762375
    2. '<=' → logprob: -3.002793312072754
    3. '<' → logprob: -3.502793312072754
    4. ')<=' → logprob: -4.377793312072754
    5. '>' → logprob: -5.252793312072754
    6. ' )' → logprob: -5.377793312072754
    7. ')<' → logprob: -5.377793312072754
    8. ' <=' → logprob: -5.377793312072754
    9. '>=' → logprob: -5.877793312072754
    10. '==' → logprob: -6.252793312072754

Token 339: ' ==' (ID: 951)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4194318652153015
    2. '<=' → logprob: -1.2944319248199463
    3. ' <' → logprob: -3.4194319248199463
    4. ' <=' → logprob: -3.7944319248199463
    5. '>=' → logprob: -5.169431686401367
    6. '==' → logprob: -5.294431686401367
    7. '>' → logprob: -6.294431686401367
    8. ' >=' → logprob: -7.794431686401367
    9. ' ==' → logprob: -8.544431686401367
    10. ' >' → logprob: -9.294431686401367

Token 340: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5897130966186523
    2. '0' → logprob: -1.0897130966186523
    3. ' ' → logprob: -2.2147130966186523
    4. '2' → logprob: -12.089713096618652
    5. 'n' → logprob: -12.464713096618652
    6. '3' → logprob: -13.652213096618652
    7. '  ' → logprob: -14.339713096618652
    8. '   ' → logprob: -14.589713096618652
    9. '１' → logprob: -14.652213096618652
    10. ' n' → logprob: -14.777213096618652

Token 341: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10439442098140717
    2. '0' → logprob: -2.3543944358825684
    3. ' ' → logprob: -5.479394435882568
    4. '１' → logprob: -13.22939395904541
    5. 'n' → logprob: -13.60439395904541
    6. '2' → logprob: -13.97939395904541
    7. '
' → logprob: -14.22939395904541
    8. '   ' → logprob: -14.35439395904541
    9. '  ' → logprob: -15.10439395904541
    10. '    ' → logprob: -15.54189395904541

Token 342: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3296085596084595
    2. ' and' → logprob: -1.8296085596084595
    3. ':' → logprob: -2.32960844039917
    4. 'and' → logprob: -4.45460844039917
    5. ' or' → logprob: -4.57960844039917
    6. 'or' → logprob: -7.57960844039917
    7. '	and' → logprob: -8.829608917236328
    8. ' :
' → logprob: -9.329608917236328
    9. ':
' → logprob: -9.579608917236328
    10. ' ' → logprob: -9.579608917236328

Token 343: '	print' (ID: 15269)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.41242605447769165
    2. '	print' → logprob: -1.9124259948730469
    3. 'if' → logprob: -3.162425994873047
    4. '	p' → logprob: -3.662425994873047
    5. 'res' → logprob: -3.787425994873047
    6. 'for' → logprob: -4.287425994873047
    7. '	if' → logprob: -4.537425994873047
    8. 'h' → logprob: -4.537425994873047
    9. 'p' → logprob: -4.662425994873047
    10. '	h' → logprob: -4.912425994873047

Token 344: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0770559310913086
    2. '"' → logprob: -1.2020559310913086
    3. '0' → logprob: -1.4520559310913086
    4. '3' → logprob: -3.0770559310913086
    5. 'Yes' → logprob: -3.2020559310913086
    6. 'Triangle' → logprob: -4.827055931091309
    7. '180' → logprob: -5.452055931091309
    8. '2' → logprob: -5.702055931091309
    9. 'YES' → logprob: -5.827055931091309
    10. '("' → logprob: -5.827055931091309

Token 345: '1' (ID: 16)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.825029194355011
    2. '1' → logprob: -1.0750291347503662
    3. '0' → logprob: -2.075029134750366
    4. '3' → logprob: -3.200029134750366
    5. 'int' → logprob: -4.325029373168945
    6. 'abs' → logprob: -4.700029373168945
    7. '2' → logprob: -5.075029373168945
    8. ''' → logprob: -5.325029373168945
    9. 'Yes' → logprob: -5.575029373168945
    10. 'max' → logprob: -5.700029373168945

Token 346: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004318672232329845
    2. ' if' → logprob: -6.379318714141846
    3. ')
' → logprob: -6.379318714141846
    4. ' )' → logprob: -7.504318714141846
    5. 'if' → logprob: -8.629318237304688
    6. '0' → logprob: -8.754318237304688
    7. ' ' → logprob: -12.129318237304688
    8. '+' → logprob: -12.254318237304688
    9. ')

' → logprob: -12.754318237304688
    10. ')
' → logprob: -12.879318237304688

Token 347: 'elif' (ID: 29767)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0005589892389252782
    2. 'elif' → logprob: -7.500558853149414
    3. ' else' → logprob: -13.500558853149414
    4. 'exit' → logprob: -13.625558853149414
    5. 'import' → logprob: -14.250558853149414
    6. 'continue' → logprob: -14.500558853149414
    7. 'print' → logprob: -14.625558853149414
    8. 'if' → logprob: -14.875558853149414
    9. 'els' → logprob: -15.375558853149414
    10. 'for' → logprob: -16.125558853149414

Token 348: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.07856540381908417
    2. ' len' → logprob: -2.7035653591156006
    3. 'True' → logprob: -6.07856559753418
    4. 'else' → logprob: -6.32856559753418
    5. ' ' → logprob: -7.32856559753418
    6. '1' → logprob: -7.45356559753418
    7. 'n' → logprob: -7.45356559753418
    8. 'Conv' → logprob: -7.45356559753418
    9. ' True' → logprob: -7.57856559753418
    10. '	len' → logprob: -8.20356559753418

Token 349: '(' (ID: 7)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0022571911104023457
    2. '(set' → logprob: -7.002257347106934
    3. '(len' → logprob: -7.377257347106934
    4. '(' → logprob: -7.627257347106934
    5. '(C' → logprob: -9.752257347106934
    6. 'dots' → logprob: -10.127257347106934
    7. '(conv' → logprob: -10.252257347106934
    8. '(dot' → logprob: -11.127257347106934
    9. '>' → logprob: -11.377257347106934
    10. '==' → logprob: -11.627257347106934

Token 350: 'Conv' (ID: 47862)
  Prédit: 'dots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dots' → logprob: -0.02235395647585392
    2. 'Conv' → logprob: -4.0223541259765625
    3. 'set' → logprob: -5.6473541259765625
    4. 'Dots' → logprob: -8.272354125976562
    5. ' dots' → logprob: -9.022354125976562
    6. 'list' → logprob: -9.522354125976562
    7. 'dot' → logprob: -10.647354125976562
    8. 'docs' → logprob: -10.772354125976562
    9. 'd' → logprob: -10.834854125976562
    10. 'conv' → logprob: -10.897354125976562

Token 351: 'ex' (ID: 490)
  Prédit: 'ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -2.4153549020411447e-05
    2. 'Conv' → logprob: -10.75002384185791
    3. 'Ex' → logprob: -14.25002384185791
    4. 'Hull' → logprob: -14.62502384185791
    5. '(' → logprob: -15.00002384185791
    6. 'exp' → logprob: -15.25002384185791
    7. '(d' → logprob: -15.50002384185791
    8. '(D' → logprob: -15.75002384185791
    9. '(ex' → logprob: -16.000024795532227
    10. 'EX' → logprob: -16.000024795532227

Token 352: 'Hull' (ID: 159984)
  Prédit: 'Hull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Hull' → logprob: -6.153795766294934e-06
    2. 'h' → logprob: -13.375005722045898
    3. '(d' → logprob: -13.375005722045898
    4. 'd' → logprob: -14.000005722045898
    5. ' Hull' → logprob: -14.250005722045898
    6. 'Hall' → logprob: -15.250005722045898
    7. '
' → logprob: -15.875005722045898
    8. 'Hub' → logprob: -16.0000057220459
    9. 'H' → logprob: -16.3750057220459
    10. ' hull' → logprob: -16.3750057220459

Token 353: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -3.292907877039397e-06
    2. '(' → logprob: -14.00000286102295
    3. ' (' → logprob: -14.00000286102295
    4. '(n' → logprob: -14.37500286102295
    5. ')' → logprob: -14.50000286102295
    6. ')(' → logprob: -15.00000286102295
    7. '((' → logprob: -17.375003814697266
    8. '(
' → logprob: -17.750003814697266
    9. '(de' → logprob: -18.125003814697266
    10. '(def' → logprob: -19.000003814697266

Token 354: 'ots' (ID: 2677)
  Prédit: 'ots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ots' → logprob: -2.2961512513575144e-05
    2. ')' → logprob: -11.750022888183594
    3. 'dots' → logprob: -12.500022888183594
    4. 'ot' → logprob: -13.125022888183594
    5. ' ots' → logprob: -13.875022888183594
    6. ')
' → logprob: -14.000022888183594
    7. ' dots' → logprob: -14.500022888183594
    8. '
' → logprob: -14.625022888183594
    9. '```' → logprob: -14.750022888183594
    10. '...' → logprob: -14.875022888183594

Token 355: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011677557602524757
    2. ')<' → logprob: -5.1366777420043945
    3. ')==' → logprob: -5.5116777420043945
    4. '))' → logprob: -7.5116777420043945
    5. ')!=' → logprob: -8.011677742004395
    6. ' )' → logprob: -8.261677742004395
    7. '())' → logprob: -8.886677742004395
    8. ')>=' → logprob: -9.136677742004395
    9. ')>' → logprob: -9.261677742004395
    10. ').' → logprob: -9.511677742004395

Token 356: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6794658899307251
    2. ' ==' → logprob: -1.179465889930725
    3. ' <' → logprob: -2.5544657707214355
    4. '<' → logprob: -2.6794657707214355
    5. ' <=' → logprob: -4.5544657707214355
    6. '<=' → logprob: -4.8044657707214355
    7. '>' → logprob: -5.1794657707214355
    8. '>=' → logprob: -5.3044657707214355
    9. ' >=' → logprob: -5.4294657707214355
    10. ' >' → logprob: -5.9294657707214355

Token 357: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6710174083709717
    2. '3' → logprob: -0.7960174083709717
    3. 'len' → logprob: -3.4210174083709717
    4. ' n' → logprob: -6.171017646789551
    5. '2' → logprob: -6.296017646789551
    6. ' ' → logprob: -7.671017646789551
    7. ' len' → logprob: -8.42101764678955
    8. '4' → logprob: -8.54601764678955
    9. '0' → logprob: -9.54601764678955
    10. '1' → logprob: -9.67101764678955

Token 358: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2520821690559387
    2. ':' → logprob: -1.502082109451294
    3. ':
' → logprob: -9.502081871032715
    4. '	print' → logprob: -10.127081871032715
    5. 'print' → logprob: -11.752081871032715
    6. '==' → logprob: -11.752081871032715
    7. ' and' → logprob: -11.752081871032715
    8. ' :
' → logprob: -12.877081871032715
    9. 'and' → logprob: -13.502081871032715
    10. '	' → logprob: -13.502081871032715

Token 359: '	print' (ID: 15269)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011780180968344212
    2. '0' → logprob: -5.386780261993408
    3. '1' → logprob: -5.636780261993408
    4. '2' → logprob: -6.761780261993408
    5. '	print' → logprob: -6.761780261993408
    6. '3' → logprob: -7.136780261993408
    7. '   ' → logprob: -8.63677978515625
    8. '4' → logprob: -9.01177978515625
    9. ' print' → logprob: -9.01177978515625
    10. '5' → logprob: -11.76177978515625

Token 360: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6537923812866211
    2. '1' → logprob: -0.7787923812866211
    3. '3' → logprob: -4.903792381286621
    4. 'n' → logprob: -4.903792381286621
    5. '2' → logprob: -5.528792381286621
    6. '"' → logprob: -6.278792381286621
    7. '4' → logprob: -9.153792381286621
    8. '-' → logprob: -10.653792381286621
    9. '
' → logprob: -10.653792381286621
    10. '(n' → logprob: -11.278792381286621

Token 361: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0681939572095871
    2. '0' → logprob: -2.9431939125061035
    3. 'n' → logprob: -4.9431939125061035
    4. '"' → logprob: -5.8181939125061035
    5. '3' → logprob: -6.4431939125061035
    6. '2' → logprob: -6.5681939125061035
    7. '-' → logprob: -10.443194389343262
    8. '4' → logprob: -10.443194389343262
    9. ''' → logprob: -11.818194389343262
    10. '
' → logprob: -12.068194389343262

Token 362: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1380627453327179
    2. 'else' → logprob: -2.1380627155303955
    3. ')' → logprob: -4.513062953948975
    4. 'elif' → logprob: -9.763062477111816
    5. ' else' → logprob: -10.138062477111816
    6. '):
' → logprob: -12.513062477111816
    7. ':
' → logprob: -13.388062477111816
    8. ')
' → logprob: -14.138062477111816
    9. ' )
' → logprob: -14.263062477111816
    10. '	else' → logprob: -14.263062477111816

Token 363: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -2.522638169466518e-05
    2. 'elif' → logprob: -10.875024795532227
    3. ' else' → logprob: -12.000024795532227
    4. '	else' → logprob: -16.250024795532227
    5. 'els' → logprob: -16.500024795532227
    6. '_else' → logprob: -18.750024795532227
    7. 'e' → logprob: -18.875024795532227
    8. 'elser' → logprob: -18.875024795532227
    9. 'el' → logprob: -19.000024795532227
    10. '#else' → logprob: -19.250024795532227

Token 364: ':
' (ID: 734)
  Prédit: '	print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	print' → logprob: -0.016389993950724602
    2. ':
' → logprob: -4.391389846801758
    3. ':' → logprob: -5.766389846801758
    4. 'print' → logprob: -8.891389846801758
    5. '	printf' → logprob: -9.391389846801758
    6. '   ' → logprob: -9.391389846801758
    7. '	plt' → logprob: -9.641389846801758
    8. ' print' → logprob: -9.891389846801758
    9. '	if' → logprob: -10.141389846801758
    10. '	System' → logprob: -10.766389846801758

Token 365: '	print' (ID: 15269)
  Prédit: '	print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	print' → logprob: -0.10072891414165497
    2. 'print' → logprob: -2.350728988647461
    3. '	' → logprob: -7.850728988647461
    4. ' print' → logprob: -9.350728988647461
    5. '0' → logprob: -11.100728988647461
    6. '1' → logprob: -11.600728988647461
    7. '2' → logprob: -11.725728988647461
    8. '3' → logprob: -12.725728988647461
    9. '	printf' → logprob: -13.600728988647461
    10. '10' → logprob: -13.725728988647461

Token 366: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10426639765501022
    2. '0' → logprob: -2.354266405105591
    3. '(n' → logprob: -5.729266166687012
    4. '2' → logprob: -7.729266166687012
    5. '(len' → logprob: -8.354266166687012
    6. '(
' → logprob: -10.604266166687012
    7. '(-' → logprob: -10.604266166687012
    8. '()' → logprob: -11.229266166687012
    9. 'n' → logprob: -11.354266166687012
    10. '3' → logprob: -11.479266166687012

Token 367: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015122907236218452
    2. '2' → logprob: -4.265122890472412
    3. 'len' → logprob: -7.640122890472412
    4. 'n' → logprob: -8.39012336730957
    5. '3' → logprob: -9.01512336730957
    6. '1' → logprob: -9.76512336730957
    7. '-' → logprob: -10.89012336730957
    8. '(len' → logprob: -11.39012336730957
    9. '(n' → logprob: -11.70262336730957
    10. ')' → logprob: -12.01512336730957

Token 368: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: 0.0
    2. ' )' → logprob: -17.5
    3. ')
' → logprob: -17.625
    4. '))' → logprob: -19.0
    5. ')`' → logprob: -19.375
    6. '）' → logprob: -19.5
    7. '())' → logprob: -21.5
    8. ')}' → logprob: -21.5
    9. '`)' → logprob: -22.0
    10. '}' → logprob: -22.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 366
Tokens correctement prédits (1ère position, stricte): 169
Tokens correctement prédits (1ère position, avec adaptation): 169
Tokens correctement prédits (top 10): 309
Précision stricte (1ère position): 46.17%
Précision adaptée (1ère position): 46.17%
Précision (top 10): 84.43%
================================================================================
