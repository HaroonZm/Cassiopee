================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Aizu Problem CGL_3_B: Is-Convex
#
import sys, math, os

# read input:
PYDEV = os.environ.get('PYDEV')
if PYDEV=="True":
    sys.stdin = open("sample-input3.txt", "rt")

def is_convex(P):
    # check whether polygon P is convex or not
    # see: https://stackoverflow.com/questions/471962/how-do-determine-if-a-polygon-is-complex-convex-nonconvex
    N = len(P)
    prods = []
    for k in range(N):
        x0, y0 = P[k]
        x1, y1 = P[(k + 1) % N]
        x2, y2 = P[(k + 2) % N]
        dx1 = x1 - x0
        dy1 = y1 - y0
        dx2 = x2 - x1
        dy2 = y2 - y1
        cross = dx1 * dy2 - dy1 * dx2
        prods.append(cross)
    prods = sorted(prods)
    return prods[0] * prods[-1] >= 0

N = int(input())
P = [[int(_) for _ in input().split()] for __ in range(N)]
print(1 if is_convex(P) else 0)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' A' (ID: 355)
  → Token d'amorce (pas de prédiction)

Token 2: 'izu' (ID: 75080)
  → Token d'amorce (pas de prédiction)

Token 3: ' Problem' (ID: 26113)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.45950308442115784
    2. '_' → logprob: -1.4595030546188354
    3. '#' → logprob: -3.459503173828125
    4. '-' → logprob: -4.084503173828125
    5. '```' → logprob: -4.209503173828125
    6. ' #' → logprob: -4.584503173828125
    7. ' is' → logprob: -4.834503173828125
    8. '_:' → logprob: -5.334503173828125
    9. 'A' → logprob: -5.459503173828125
    10. ':#' → logprob: -5.584503173828125

Token 4: ' C' (ID: 363)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21067096292972565
    2. '_' → logprob: -2.2106709480285645
    3. '#' → logprob: -2.9606709480285645
    4. ' ' → logprob: -4.9606709480285645
    5. '-' → logprob: -5.4606709480285645
    6. 'B' → logprob: -5.9606709480285645
    7. '.' → logprob: -6.2106709480285645
    8. '`' → logprob: -6.3356709480285645
    9. '_:' → logprob: -6.7106709480285645
    10. 'A' → logprob: -6.9606709480285645

Token 5: 'GL' (ID: 7833)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3494794368743896
    2. 'def' → logprob: -1.8494794368743896
    3. 'n' → logprob: -1.9744794368743896
    4. 's' → logprob: -2.0994794368743896
    5. 'a' → logprob: -2.7244794368743896
    6. ':' → logprob: -3.2244794368743896
    7. '#include' → logprob: -3.7244794368743896
    8. ' #' → logprob: -4.099479675292969
    9. '```' → logprob: -4.099479675292969
    10. '\' → logprob: -4.099479675292969

Token 6: '_' (ID: 62)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9174168705940247
    2. '#' → logprob: -1.2924168109893799
    3. '_' → logprob: -1.6674168109893799
    4. '.' → logprob: -4.042417049407959
    5. 'C' → logprob: -4.292417049407959
    6. '/' → logprob: -4.292417049407959
    7. '#include' → logprob: -4.417417049407959
    8. 'A' → logprob: -4.542417049407959
    9. '```' → logprob: -4.667417049407959
    10. '-' → logprob: -4.792417049407959

Token 7: '3' (ID: 18)
  Prédit: '001'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '001' → logprob: -0.5935253500938416
    2. 'b' → logprob: -1.5935254096984863
    3. '002' → logprob: -2.3435254096984863
    4. '003' → logprob: -4.468525409698486
    5. '022' → logprob: -4.593525409698486
    6. '009' → logprob: -4.593525409698486
    7. '202' → logprob: -4.593525409698486
    8. '_' → logprob: -4.718525409698486
    9. '099' → logprob: -4.718525409698486
    10. '004' → logprob: -5.093525409698486

Token 8: '_B' (ID: 3201)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.018486738204956
    2. 'n' → logprob: -1.893486738204956
    3. 'def' → logprob: -2.268486738204956
    4. '#' → logprob: -2.268486738204956
    5. 'd' → logprob: -2.893486738204956
    6. '```' → logprob: -2.893486738204956
    7. 'import' → logprob: -3.268486738204956
    8. 'from' → logprob: -3.643486738204956
    9. '_' → logprob: -3.768486738204956
    10. 'a' → logprob: -3.893486738204956

Token 9: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.112874984741211
    2. 'n' → logprob: -1.237874984741211
    3. 'import' → logprob: -2.612874984741211
    4. 'def' → logprob: -2.737874984741211
    5. 'd' → logprob: -3.362874984741211
    6. 'a' → logprob: -3.487874984741211
    7. 'x' → logprob: -3.612874984741211
    8. 's' → logprob: -3.612874984741211
    9. 'from' → logprob: -3.737874984741211
    10. '#' → logprob: -3.987874984741211

Token 10: ' Is' (ID: 2763)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9129117131233215
    2. 'def' → logprob: -1.0379116535186768
    3. 'import' → logprob: -2.6629116535186768
    4. 'from' → logprob: -2.9129116535186768
    5. '#' → logprob: -3.1629116535186768
    6. '#include' → logprob: -3.6629116535186768
    7. 'n' → logprob: -4.537911891937256
    8. ' def' → logprob: -4.787911891937256
    9. 'D' → logprob: -5.162911891937256
    10. '``' → logprob: -5.412911891937256

Token 11: '-' (ID: 12)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.9728710651397705
    2. 'os' → logprob: -2.3478710651397705
    3. ' it' → logprob: -2.7228710651397705
    4. '```' → logprob: -2.7228710651397705
    5. '   ' → logprob: -3.0978710651397705
    6. ' ' → logprob: -3.4103710651397705
    7. 's' → logprob: -3.4728710651397705
    8. '  ' → logprob: -3.6603710651397705
    9. '\' → logprob: -3.7228710651397705
    10. ''s' → logprob: -3.7853710651397705

Token 12: 'Conv' (ID: 47862)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_b' → logprob: -2.1538634300231934
    2. '```' → logprob: -2.5288634300231934
    3. 'om' → logprob: -2.7788634300231934
    4. 'ometric' → logprob: -3.0288634300231934
    5. '_' → logprob: -3.0288634300231934
    6. 'omorphic' → logprob: -3.1538634300231934
    7. 's' → logprob: -3.2788634300231934
    8. '_s' → logprob: -3.2788634300231934
    9. '\' → logprob: -3.2788634300231934
    10. '_point' → logprob: -3.4038634300231934

Token 13: 'ex' (ID: 490)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1110308170318604
    2. '(' → logprob: -1.7360308170318604
    3. 'def' → logprob: -1.8610308170318604
    4. '#' → logprob: -2.7360308170318604
    5. '[' → logprob: -2.8610308170318604
    6. ')' → logprob: -2.8610308170318604
    7. '()' → logprob: -2.9860308170318604
    8. ':' → logprob: -4.111030578613281
    9. ' _' → logprob: -4.486030578613281
    10. ' ' → logprob: -4.861030578613281

Token 14: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8079802393913269
    2. 'def' → logprob: -0.9329802393913269
    3. ':' → logprob: -2.8079802989959717
    4. '[' → logprob: -3.9329802989959717
    5. '_' → logprob: -4.307980060577393
    6. '```' → logprob: -4.432980060577393
    7. '?' → logprob: -4.807980060577393
    8. '()' → logprob: -4.807980060577393
    9. '#' → logprob: -4.807980060577393
    10. 's' → logprob: -5.432980060577393

Token 15: '#
' (ID: 11240)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9941827058792114
    2. 'def' → logprob: -1.7441827058792114
    3. '_' → logprob: -1.9941827058792114
    4. '(' → logprob: -1.9941827058792114
    5. '#' → logprob: -2.619182586669922
    6. ')' → logprob: -3.494182586669922
    7. '?' → logprob: -4.119182586669922
    8. '[' → logprob: -4.494182586669922
    9. '```' → logprob: -4.619182586669922
    10. ' ' → logprob: -5.494182586669922

Token 16: 'import' (ID: 561)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.208733931183815
    2. ' def' → logprob: -1.9587339162826538
    3. ' ' → logprob: -3.4587340354919434
    4. '_' → logprob: -5.083734035491943
    5. 'import' → logprob: -6.333734035491943
    6. ' d' → logprob: -6.458734035491943
    7. 'd' → logprob: -6.708734035491943
    8. '#' → logprob: -6.958734035491943
    9. ':' → logprob: -7.333734035491943
    10. '```' → logprob: -7.458734035491943

Token 17: ' sys' (ID: 12228)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.26403093338012695
    2. ' numpy' → logprob: -1.514030933380127
    3. ' sys' → logprob: -5.264030933380127
    4. ' itertools' → logprob: -6.264030933380127
    5. ' sym' → logprob: -6.389030933380127
    6. ' ' → logprob: -6.889030933380127
    7. ' matplotlib' → logprob: -7.264030933380127
    8. 'numpy' → logprob: -7.389030933380127
    9. 'math' → logprob: -8.389030456542969
    10. ' collections' → logprob: -8.764030456542969

Token 18: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0425806045532227
    2. '<|end|>' → logprob: -1.2925806045532227
    3. '

' → logprob: -1.5425806045532227
    4. 'import' → logprob: -2.0425806045532227
    5. '\n' → logprob: -4.292580604553223
    6. '\' → logprob: -5.167580604553223
    7. '<|end|>' → logprob: -6.042580604553223
    8. '```' → logprob: -6.292580604553223
    9. '' → logprob: -6.667580604553223
    10. '#' → logprob: -7.167580604553223

Token 19: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.20434190332889557
    2. ' math' → logprob: -1.7043418884277344
    3. 'collections' → logprob: -6.454341888427734
    4. ' collections' → logprob: -7.329341888427734
    5. ' itertools' → logprob: -7.829341888427734
    6. 'cmath' → logprob: -8.204341888427734
    7. 'heap' → logprob: -12.204341888427734
    8. 'os' → logprob: -12.454341888427734
    9. ' threading' → logprob: -13.329341888427734
    10. ' typing' → logprob: -13.329341888427734

Token 20: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6977449655532837
    2. '

' → logprob: -0.6977449655532837
    3. '


' → logprob: -6.322744846343994
    4. ' 

' → logprob: -7.197744846343994
    5. '
' → logprob: -7.697744846343994
    6. '' → logprob: -7.697744846343994
    7. '
 
' → logprob: -8.322745323181152
    8. ' 
' → logprob: -8.822745323181152
    9. '



' → logprob: -8.822745323181152
    10. ',' → logprob: -9.072745323181152

Token 21: ' os' (ID: 1994)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.9209129810333252
    2. 'collections' → logprob: -1.1709129810333252
    3. ' itertools' → logprob: -1.2959129810333252
    4. ' functools' → logprob: -5.795912742614746
    5. ' fractions' → logprob: -5.920912742614746
    6. 'cmath' → logprob: -6.170912742614746
    7. 'heap' → logprob: -6.170912742614746
    8. 'deque' → logprob: -6.545912742614746
    9. ' heap' → logprob: -6.920912742614746
    10. 'it' → logprob: -7.170912742614746

Token 22: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10084950923919678
    2. '

' → logprob: -2.4758496284484863
    3. '<|end|>' → logprob: -6.225849628448486
    4. '\n' → logprob: -6.350849628448486
    5. ',' → logprob: -6.475849628448486
    6. '' → logprob: -6.475849628448486
    7. '
 
' → logprob: -6.725849628448486
    8. 'import' → logprob: -6.975849628448486
    9. '


' → logprob: -7.100849628448486
    10. '
' → logprob: -8.225849151611328

Token 23: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13741156458854675
    2. '

' → logprob: -2.512411594390869
    3. 'def' → logprob: -4.137411594390869
    4. 'import' → logprob: -4.637411594390869
    5. 'd' → logprob: -5.012411594390869
    6. '\n' → logprob: -5.012411594390869
    7. '' → logprob: -6.387411594390869
    8. '```' → logprob: -6.762411594390869
    9. '\' → logprob: -6.887411594390869
    10. '#' → logprob: -6.887411594390869

Token 24: ' read' (ID: 1729)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0083110136911273
    2. ' def' → logprob: -6.508310794830322
    3. 'import' → logprob: -6.633310794830322
    4. 'class' → logprob: -6.633310794830322
    5. ' ' → logprob: -6.758310794830322
    6. '#' → logprob: -7.008310794830322
    7. 'from' → logprob: -7.508310794830322
    8. 'd' → logprob: -7.508310794830322
    9. 'de' → logprob: -8.25831127166748
    10. '_' → logprob: -8.75831127166748

Token 25: ' input' (ID: 3422)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9021134972572327
    2. '_' → logprob: -1.652113437652588
    3. ' (' → logprob: -2.402113437652588
    4. ' =' → logprob: -2.527113437652588
    5. ' ' → logprob: -2.777113437652588
    6. 's' → logprob: -3.777113437652588
    7. '()' → logprob: -3.902113437652588
    8. 'line' → logprob: -4.027113437652588
    9. '_lines' → logprob: -4.027113437652588
    10. ' line' → logprob: -4.277113437652588

Token 26: ':
' (ID: 734)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.16810941696167
    2. 'input' → logprob: -1.54310941696167
    3. 's' → logprob: -2.16810941696167
    4. 'n' → logprob: -2.79310941696167
    5. '
' → logprob: -3.04310941696167
    6. ',' → logprob: -3.16810941696167
    7. ')' → logprob: -3.54310941696167
    8. '(' → logprob: -3.54310941696167
    9. 'a' → logprob: -4.16810941696167
    10. '```' → logprob: -4.16810941696167

Token 27: 'PY' (ID: 64719)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.21312250196933746
    2. 'data' → logprob: -2.713122606277466
    3. ' n' → logprob: -3.338122606277466
    4. 's' → logprob: -3.963122606277466
    5. ' points' → logprob: -4.088122367858887
    6. ' lines' → logprob: -4.338122367858887
    7. ' data' → logprob: -4.838122367858887
    8. 'points' → logprob: -5.213122367858887
    9. 'p' → logprob: -5.338122367858887
    10. ' line' → logprob: -5.463122367858887

Token 28: 'DEV' (ID: 66773)
  Prédit: 'THON'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'THON' → logprob: -0.1939665973186493
    2. 'thon' → logprob: -2.0689666271209717
    3. '3' → logprob: -3.4439666271209717
    4. '2' → logprob: -5.068966388702393
    5. '_input' → logprob: -6.068966388702393
    6. '=' → logprob: -6.068966388702393
    7. '_' → logprob: -6.318966388702393
    8. '```' → logprob: -6.943966388702393
    9. 'TH' → logprob: -7.068966388702393
    10. '=sys' → logprob: -7.193966388702393

Token 29: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8686558604240417
    2. 'D' → logprob: -1.9936559200286865
    3. 'L' → logprob: -1.9936559200286865
    4. 'E' → logprob: -2.7436559200286865
    5. 'DEBUG' → logprob: -3.8686559200286865
    6. 'RUN' → logprob: -3.8686559200286865
    7. '_L' → logprob: -3.9936559200286865
    8. 'ML' → logprob: -4.243655681610107
    9. 'INPUT' → logprob: -4.243655681610107
    10. 'LOC' → logprob: -4.618655681610107

Token 30: ' os' (ID: 1994)
  Prédit: ' os'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.5358745455741882
    2. ''' → logprob: -2.535874605178833
    3. ' '' → logprob: -2.785874605178833
    4. ' True' → logprob: -3.035874605178833
    5. ' False' → logprob: -3.160874605178833
    6. 'False' → logprob: -3.410874605178833
    7. 'os' → logprob: -3.535874605178833
    8. ''s' → logprob: -3.535874605178833
    9. '"' → logprob: -3.785874605178833
    10. 'True' → logprob: -3.910874605178833

Token 31: '.environ' (ID: 52020)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2424895018339157
    2. '.environ' → logprob: -1.8674894571304321
    3. '.path' → logprob: -3.7424895763397217
    4. '.getenv' → logprob: -3.7424895763397217
    5. '.getcwd' → logprob: -4.617489337921143
    6. ' .' → logprob: -6.617489337921143
    7. '.name' → logprob: -6.992489337921143
    8. '.sep' → logprob: -7.492489337921143
    9. '```' → logprob: -8.8674898147583
    10. '.env' → logprob: -9.1174898147583

Token 32: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.043110065162181854
    2. '.' → logprob: -3.1681101322174072
    3. '.setdefault' → logprob: -10.043109893798828
    4. ' .' → logprob: -10.293109893798828
    5. 'get' → logprob: -10.793109893798828
    6. ' ' → logprob: -12.668109893798828
    7. '[' → logprob: -12.918109893798828
    8. '.g' → logprob: -13.293109893798828
    9. '.ge' → logprob: -13.418109893798828
    10. ').' → logprob: -14.043109893798828

Token 33: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.24406656622886658
    2. '(' → logprob: -1.619066596031189
    3. '("' → logprob: -3.9940664768218994
    4. '('_' → logprob: -10.86906623840332
    5. '("("' → logprob: -11.86906623840332
    6. ' (' → logprob: -11.99406623840332
    7. ''' → logprob: -12.61906623840332
    8. '('__' → logprob: -12.86906623840332
    9. '(
' → logprob: -13.36906623840332
    10. '("""' → logprob: -13.49406623840332

Token 34: 'PY' (ID: 64719)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.004819564986974001
    2. 'PY' → logprob: -5.629819393157959
    3. ' '' → logprob: -8.004819869995117
    4. '"' → logprob: -8.254819869995117
    5. ''S' → logprob: -8.879819869995117
    6. ''T' → logprob: -9.004819869995117
    7. ''D' → logprob: -9.629819869995117
    8. ''C' → logprob: -9.754819869995117
    9. ''A' → logprob: -9.879819869995117
    10. ''E' → logprob: -10.129819869995117

Token 35: 'DEV' (ID: 66773)
  Prédit: 'DEV'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEV' → logprob: -0.0034053747076541185
    2. 'THON' → logprob: -6.128405570983887
    3. 'DE' → logprob: -7.003405570983887
    4. 'CHAR' → logprob: -8.378405570983887
    5. 'ENV' → logprob: -10.503405570983887
    6. 'thon' → logprob: -10.878405570983887
    7. 'dev' → logprob: -11.378405570983887
    8. '   ' → logprob: -12.253405570983887
    9. 'V' → logprob: -12.628405570983887
    10. '_DEV' → logprob: -12.878405570983887

Token 36: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.014510639011859894
    2. '',' → logprob: -4.389510631561279
    3. '_RUN' → logprob: -7.764510631561279
    4. '_DEBUG' → logprob: -8.139511108398438
    5. 'DEBUG' → logprob: -8.889511108398438
    6. '_' → logprob: -9.014511108398438
    7. ''' → logprob: -9.389511108398438
    8. '_ROOT' → logprob: -9.514511108398438
    9. ' ')' → logprob: -9.639511108398438
    10. '')
' → logprob: -9.639511108398438

Token 37: 'if' (ID: 366)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.203498125076294
    2. 'if' → logprob: -1.203498125076294
    3. 'input' → logprob: -1.828498125076294
    4. ' if' → logprob: -3.203498125076294
    5. ' 
' → logprob: -3.578498125076294
    6. 'n' → logprob: -3.828498125076294
    7. '#' → logprob: -4.078497886657715
    8. '\n' → logprob: -4.203497886657715
    9. '

' → logprob: -4.328497886657715
    10. 'i' → logprob: -4.578497886657715

Token 38: ' PY' (ID: 99148)
  Prédit: ' PY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' PY' → logprob: -0.7897980809211731
    2. ' not' → logprob: -1.0397980213165283
    3. ' ' → logprob: -1.6647980213165283
    4. 'PY' → logprob: -6.414798259735107
    5. 'not' → logprob: -6.914798259735107
    6. ' '' → logprob: -7.539798259735107
    7. ''' → logprob: -9.91479778289795
    8. '  ' → logprob: -10.66479778289795
    9. ' "' → logprob: -10.91479778289795
    10. ' ' → logprob: -11.41479778289795

Token 39: 'DEV' (ID: 66773)
  Prédit: 'DEV'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEV' → logprob: -7.703443770878948e-06
    2. 'DE' → logprob: -12.625007629394531
    3. '_DEV' → logprob: -12.875007629394531
    4. 'D' → logprob: -13.875007629394531
    5. '_' → logprob: -15.250007629394531
    6. 'dev' → logprob: -16.00000762939453
    7. 'Dev' → logprob: -16.12500762939453
    8. 'DV' → logprob: -16.12500762939453
    9. 'EV' → logprob: -16.37500762939453
    10. '==' → logprob: -16.87500762939453

Token 40: '=="' (ID: 24027)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.23754307627677917
    2. '==' → logprob: -1.6125431060791016
    3. ':' → logprob: -4.987543106079102
    4. ' is' → logprob: -5.612543106079102
    5. ' !=' → logprob: -7.612543106079102
    6. ' :' → logprob: -7.737543106079102
    7. ' ' → logprob: -8.237543106079102
    8. '=='' → logprob: -9.487543106079102
    9. ' in' → logprob: -9.612543106079102
    10. '!=' → logprob: -9.737543106079102

Token 41: 'True' (ID: 4710)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5235028862953186
    2. '1' → logprob: -1.1485028266906738
    3. ''' → logprob: -3.148502826690674
    4. 'True' → logprob: -4.273502826690674
    5. ''t' → logprob: -4.398502826690674
    6. 'TRUE' → logprob: -5.023502826690674
    7. 'true' → logprob: -5.773502826690674
    8. 'local' → logprob: -6.898502826690674
    9. 'YES' → logprob: -7.148502826690674
    10. 'ON' → logprob: -7.398502826690674

Token 42: '":
' (ID: 9213)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015269667841494083
    2. '":' → logprob: -4.390269756317139
    3. '):' → logprob: -6.390269756317139
    4. ' :' → logprob: -7.015269756317139
    5. ':
' → logprob: -9.89026927947998
    6. ' ":' → logprob: -10.14026927947998
    7. '"' → logprob: -10.39026927947998
    8. ',' → logprob: -11.64026927947998
    9. ':"' → logprob: -11.76526927947998
    10. ' ):' → logprob: -11.89026927947998

Token 43: '   ' (ID: 271)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -1.1863876581192017
    2. '   ' → logprob: -1.5613876581192017
    3. ' input' → logprob: -1.8113876581192017
    4. ' readline' → logprob: -2.311387538909912
    5. ' ' → logprob: -3.436387538909912
    6. ' :' → logprob: -3.811387538909912
    7. 'input' → logprob: -4.061387538909912
    8. '    
' → logprob: -4.186387538909912
    9. ':' → logprob: -4.311387538909912
    10. '	input' → logprob: -4.561387538909912

Token 44: ' sys' (ID: 12228)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.680025339126587
    2. ' f' → logprob: -1.930025339126587
    3. ' data' → logprob: -1.930025339126587
    4. ' path' → logprob: -2.055025339126587
    5. ' lines' → logprob: -2.555025339126587
    6. ' sys' → logprob: -2.680025339126587
    7. ' file' → logprob: -3.305025339126587
    8. ' filename' → logprob: -3.555025339126587
    9. ' import' → logprob: -3.555025339126587
    10. ' s' → logprob: -3.680025339126587

Token 45: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.06305360049009323
    2. '.stdout' → logprob: -3.438053607940674
    3. '.' → logprob: -3.688053607940674
    4. '.argv' → logprob: -5.938053607940674
    5. '.exit' → logprob: -7.563053607940674
    6. '.stderr' → logprob: -7.938053607940674
    7. ' .' → logprob: -8.438053131103516
    8. '.path' → logprob: -8.813053131103516
    9. '.setdefault' → logprob: -9.938053131103516
    10. '.readline' → logprob: -11.313053131103516

Token 46: ' =' (ID: 314)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.41470691561698914
    2. '=' → logprob: -1.1647069454193115
    3. '=open' → logprob: -4.414706707000732
    4. ' =' → logprob: -4.789706707000732
    5. '.read' → logprob: -5.664706707000732
    6. '.write' → logprob: -5.914706707000732
    7. '.seek' → logprob: -8.03970718383789
    8. 'read' → logprob: -9.03970718383789
    9. '.' → logprob: -9.28970718383789
    10. '=sys' → logprob: -9.66470718383789

Token 47: ' open' (ID: 2494)
  Prédit: ' open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' open' → logprob: -0.2521292269229889
    2. 'open' → logprob: -1.5021291971206665
    3. 'sys' → logprob: -8.752129554748535
    4. '	open' → logprob: -10.502129554748535
    5. '=open' → logprob: -11.627129554748535
    6. ' sys' → logprob: -12.377129554748535
    7. 'io' → logprob: -14.627129554748535
    8. '(open' → logprob: -15.127129554748535
    9. 'os' → logprob: -15.377129554748535
    10. '.open' → logprob: -17.00212860107422

Token 48: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14537803828716278
    2. '('' → logprob: -2.0203781127929688
    3. '("' → logprob: -6.020378112792969
    4. ' (' → logprob: -10.020378112792969
    5. '("")' → logprob: -10.020378112792969
    6. '('./' → logprob: -10.395378112792969
    7. '("("' → logprob: -10.770378112792969
    8. '(""' → logprob: -10.895378112792969
    9. '('',' → logprob: -11.145378112792969
    10. '(None' → logprob: -11.270378112792969

Token 49: 'sample' (ID: 28434)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3128634989261627
    2. '"' → logprob: -2.56286358833313
    3. 'test' → logprob: -3.06286358833313
    4. ''' → logprob: -3.56286358833313
    5. ''t' → logprob: -3.81286358833313
    6. ' input' → logprob: -4.062863349914551
    7. 'sample' → logprob: -4.562863349914551
    8. 'in' → logprob: -4.687863349914551
    9. 'example' → logprob: -4.812863349914551
    10. 'a' → logprob: -5.062863349914551

Token 50: '-input' (ID: 28375)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.40662217140197754
    2. '_input' → logprob: -1.1566221714019775
    3. 'input' → logprob: -4.781621932983398
    4. '.in' → logprob: -5.906621932983398
    5. '-' → logprob: -6.281621932983398
    6. '_in' → logprob: -6.531621932983398
    7. '.txt' → logprob: -6.656621932983398
    8. 'in' → logprob: -7.281621932983398
    9. '1' → logprob: -7.406621932983398
    10. '_' → logprob: -7.781621932983398

Token 51: '3' (ID: 18)
  Prédit: '.txt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.txt' → logprob: -0.4854188859462738
    2. '.' → logprob: -0.9854189157485962
    3. '1' → logprob: -4.985418796539307
    4. '-' → logprob: -5.985418796539307
    5. 's' → logprob: -7.610418796539307
    6. '2' → logprob: -7.735418796539307
    7. '0' → logprob: -7.860418796539307
    8. '3' → logprob: -8.610419273376465
    9. '4' → logprob: -8.735419273376465
    10. '.py' → logprob: -9.235419273376465

Token 52: '.txt' (ID: 7186)
  Prédit: '.txt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.txt' → logprob: -0.2276688814163208
    2. '.' → logprob: -1.6026688814163208
    3. '-' → logprob: -7.727668762207031
    4. '2' → logprob: -7.852668762207031
    5. '1' → logprob: -8.102668762207031
    6. ' .' → logprob: -8.477668762207031
    7. 'B' → logprob: -8.852668762207031
    8. '0' → logprob: -9.102668762207031
    9. '.B' → logprob: -9.602668762207031
    10. '.b' → logprob: -9.727668762207031

Token 53: '",' (ID: 672)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.47864872217178345
    2. '",' → logprob: -1.7286486625671387
    3. '","' → logprob: -1.7286486625671387
    4. '"' → logprob: -3.7286486625671387
    5. '",'' → logprob: -6.728648662567139
    6. ')' → logprob: -9.478649139404297
    7. '",
' → logprob: -12.103649139404297
    8. '','' → logprob: -12.603649139404297
    9. '',' → logprob: -12.853649139404297
    10. ''' → logprob: -12.978649139404297

Token 54: ' "' (ID: 392)
  Prédit: ''r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''r' → logprob: -0.1667802780866623
    2. '"' → logprob: -2.0417802333831787
    3. ' "' → logprob: -4.791780471801758
    4. ' '' → logprob: -4.791780471801758
    5. ''' → logprob: -5.416780471801758
    6. ''t' → logprob: -7.041780471801758
    7. ''m' → logprob: -7.166780471801758
    8. 'r' → logprob: -7.541780471801758
    9. ')' → logprob: -8.791780471801758
    10. ' r' → logprob: -8.916780471801758

Token 55: 'rt' (ID: 6197)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00010926496179308742
    2. 'rt' → logprob: -9.125109672546387
    3. 't' → logprob: -16.62510871887207
    4. 'read' → logprob: -16.75010871887207
    5. 'w' → logprob: -17.37510871887207
    6. ' r' → logprob: -17.87510871887207
    7. 'rb' → logprob: -18.12510871887207
    8. '```' → logprob: -19.75010871887207
    9. 'rd' → logprob: -20.37510871887207
    10. '

' → logprob: -21.00010871887207

Token 56: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.014239664189517498
    2. ')' → logprob: -4.26423978805542
    3. '"' → logprob: -10.139239311218262
    4. ')")' → logprob: -11.014239311218262
    5. '')' → logprob: -11.264239311218262
    6. '")
' → logprob: -12.764239311218262
    7. ' )' → logprob: -13.639239311218262
    8. ')"' → logprob: -13.764239311218262
    9. '",' → logprob: -13.889239311218262
    10. ' ")' → logprob: -14.514239311218262

Token 57: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05300629884004593
    2. 'def' → logprob: -3.553006410598755
    3. 'x' → logprob: -4.803006172180176
    4. '
' → logprob: -5.178006172180176
    5. '#' → logprob: -5.303006172180176
    6. 'class' → logprob: -6.553006172180176
    7. 'N' → logprob: -6.553006172180176
    8. 'import' → logprob: -7.803006172180176
    9. 'for' → logprob: -8.678006172180176
    10. 's' → logprob: -8.928006172180176

Token 58: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.1833011507987976
    2. ' main' → logprob: -1.9333012104034424
    3. ' convex' → logprob: -4.933300971984863
    4. ' ' → logprob: -5.433300971984863
    5. ' vector' → logprob: -6.183300971984863
    6. '_' → logprob: -6.183300971984863
    7. ' point' → logprob: -6.558300971984863
    8. ' points' → logprob: -7.308300971984863
    9. ' compute' → logprob: -7.433300971984863
    10. '_point' → logprob: -7.683300971984863

Token 59: '_conv' (ID: 58653)
  Prédit: '_conv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_conv' → logprob: -0.003469636430963874
    2. '_point' → logprob: -5.878469467163086
    3. '_' → logprob: -7.503469467163086
    4. '_con' → logprob: -10.503469467163086
    5. '_str' → logprob: -10.628469467163086
    6. '_inside' → logprob: -11.253469467163086
    7. '_polygon' → logprob: -11.628469467163086
    8. '_simple' → logprob: -11.878469467163086
    9. '_points' → logprob: -12.378469467163086
    10. '_cont' → logprob: -12.503469467163086

Token 60: 'ex' (ID: 490)
  Prédit: 'ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -3.4121114822482923e-06
    2. 'exp' → logprob: -13.000003814697266
    3. '_ex' → logprob: -15.125003814697266
    4. '```' → logprob: -15.125003814697266
    5. 'exc' → logprob: -15.500003814697266
    6. '	ex' → logprob: -16.375003814697266
    7. '(ex' → logprob: -16.375003814697266
    8. 'ext' → logprob: -16.750003814697266
    9. 'exe' → logprob: -17.000003814697266
    10. 'exit' → logprob: -17.125003814697266

Token 61: '(P' (ID: 8952)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08330544084310532
    2. '(points' → logprob: -3.4583053588867188
    3. '_polygon' → logprob: -3.7083053588867188
    4. '(p' → logprob: -4.333305358886719
    5. '(poly' → logprob: -5.208305358886719
    6. '(point' → logprob: -6.208305358886719
    7. '_poly' → logprob: -6.833305358886719
    8. '(Point' → logprob: -7.458305358886719
    9. ' (' → logprob: -8.333305358886719
    10. '_point' → logprob: -8.458305358886719

Token 62: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3706444203853607
    2. 'oints' → logprob: -1.245644450187683
    3. 'olygon' → logprob: -4.745644569396973
    4. 'oint' → logprob: -4.995644569396973
    5. ')' → logprob: -6.245644569396973
    6. '[]):' → logprob: -6.370644569396973
    7. ',' → logprob: -6.995644569396973
    8. '[' → logprob: -7.620644569396973
    9. ' ):' → logprob: -7.995644569396973
    10. '):
' → logprob: -8.370644569396973

Token 63: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02748200111091137
    2. '   ' → logprob: -3.777482032775879
    3. ' :' → logprob: -6.277482032775879
    4. '):' → logprob: -7.402482032775879
    5. ':
' → logprob: -7.402482032775879
    6. '[' → logprob: -8.152482032775879
    7. ' ' → logprob: -8.777482032775879
    8. '(' → logprob: -8.777482032775879
    9. '    ' → logprob: -9.152482032775879
    10. '():' → logprob: -9.277482032775879

Token 64: ' #' (ID: 1069)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3492307960987091
    2. 'n' → logprob: -1.4742307662963867
    3. '    ' → logprob: -3.4742307662963867
    4. ' ' → logprob: -4.099230766296387
    5. '   ' → logprob: -4.349230766296387
    6. ' if' → logprob: -6.724230766296387
    7. ' N' → logprob: -6.974230766296387
    8. ':' → logprob: -7.474230766296387
    9. '  ' → logprob: -8.099230766296387
    10. 'if' → logprob: -8.474230766296387

Token 65: ' check' (ID: 2371)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.11844812333583832
    2. 'n' → logprob: -2.24344801902771
    3. ' def' → logprob: -6.368448257446289
    4. '   ' → logprob: -6.993448257446289
    5. 'def' → logprob: -6.993448257446289
    6. ' N' → logprob: -7.368448257446289
    7. ' if' → logprob: -8.368448257446289
    8. ' ' → logprob: -8.493448257446289
    9. 'N' → logprob: -8.493448257446289
    10. '    ' → logprob: -8.618448257446289

Token 66: ' whether' (ID: 5588)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.44405633211135864
    2. ' ' → logprob: -1.5690562725067139
    3. ' (' → logprob: -3.319056272506714
    4. ' )' → logprob: -3.694056272506714
    5. ' if' → logprob: -3.819056272506714
    6. ')' → logprob: -3.944056272506714
    7. '   ' → logprob: -4.194056510925293
    8. '_' → logprob: -4.944056510925293
    9. '(P' → logprob: -5.194056510925293
    10. ':' → logprob: -5.694056510925293

Token 67: ' polygon' (ID: 65081)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2302110195159912
    2. ' len' → logprob: -1.9802110195159912
    3. ' the' → logprob: -3.980211019515991
    4. ' all' → logprob: -4.10521125793457
    5. 'n' → logprob: -4.85521125793457
    6. 'the' → logprob: -4.98021125793457
    7. ' P' → logprob: -5.73021125793457
    8. ' ' → logprob: -5.98021125793457
    9. '(len' → logprob: -6.35521125793457
    10. '   ' → logprob: -6.60521125793457

Token 68: ' P' (ID: 398)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.026972046121954918
    2. '   ' → logprob: -3.7769720554351807
    3. ' ' → logprob: -7.026971817016602
    4. ')' → logprob: -7.901971817016602
    5. ' P' → logprob: -8.151971817016602
    6. ' vertices' → logprob: -8.151971817016602
    7. 'is' → logprob: -8.401971817016602
    8. ' points' → logprob: -8.401971817016602
    9. '_vertices' → logprob: -8.526971817016602
    10. ' )' → logprob: -8.901971817016602

Token 69: ' is' (ID: 382)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6554169058799744
    2. ' is' → logprob: -1.4054169654846191
    3. '[' → logprob: -2.155416965484619
    4. ':' → logprob: -2.655416965484619
    5. ')' → logprob: -4.280416965484619
    6. ' ' → logprob: -4.405416965484619
    7. '[:]' → logprob: -5.030416965484619
    8. '  ' → logprob: -5.905416965484619
    9. '[]' → logprob: -6.155416965484619
    10. 'def' → logprob: -6.280416965484619

Token 70: ' convex' (ID: 142423)
  Prédit: ' convex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convex' → logprob: -0.08186329156160355
    2. 'conv' → logprob: -2.5818634033203125
    3. '_conv' → logprob: -6.7068634033203125
    4. '   ' → logprob: -7.5818634033203125
    5. ' strictly' → logprob: -8.081863403320312
    6. ' ' → logprob: -8.331863403320312
    7. '[]' → logprob: -9.456863403320312
    8. ' empty' → logprob: -9.456863403320312
    9. ' conc' → logprob: -9.706863403320312
    10. ' None' → logprob: -9.831863403320312

Token 71: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007725168019533157
    2. '   ' → logprob: -5.007725238800049
    3. ' :' → logprob: -7.882725238800049
    4. ':
' → logprob: -8.13272476196289
    5. '):' → logprob: -8.88272476196289
    6. ',' → logprob: -10.38272476196289
    7. ' ' → logprob: -10.63272476196289
    8. '.' → logprob: -10.75772476196289
    9. 'def' → logprob: -11.13272476196289
    10. '[' → logprob: -11.25772476196289

Token 72: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.03535466268658638
    2. 'not' → logprob: -3.4103546142578125
    3. ' ' → logprob: -8.035354614257812
    4. '   ' → logprob: -8.160354614257812
    5. ' True' → logprob: -8.285354614257812
    6. ' conc' → logprob: -8.910354614257812
    7. ' None' → logprob: -9.160354614257812
    8. '	not' → logprob: -9.410354614257812
    9. 'None' → logprob: -9.785354614257812
    10. 'or' → logprob: -9.910354614257812

Token 73: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014722446911036968
    2. '   ' → logprob: -4.2647223472595215
    3. '):' → logprob: -8.63972282409668
    4. ' :' → logprob: -9.13972282409668
    5. '.' → logprob: -9.63972282409668
    6. ':
' → logprob: -9.76472282409668
    7. ',' → logprob: -10.13972282409668
    8. ')' → logprob: -10.38972282409668
    9. ' ' → logprob: -10.76472282409668
    10. '<|end|>' → logprob: -11.13972282409668

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2534356415271759
    2. ':' → logprob: -1.5034356117248535
    3. '):' → logprob: -7.1284356117248535
    4. ' :' → logprob: -8.753436088562012
    5. ',' → logprob: -9.128436088562012
    6. ' ' → logprob: -9.503436088562012
    7. ')' → logprob: -9.753436088562012
    8. ':
' → logprob: -10.003436088562012
    9. '    ' → logprob: -10.003436088562012
    10. '       ' → logprob: -10.378436088562012

Token 75: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1479077339172363
    2. 'n' → logprob: -1.3979077339172363
    3. '    ' → logprob: -1.7729077339172363
    4. ' ' → logprob: -2.1479077339172363
    5. ' n' → logprob: -2.1479077339172363
    6. ':' → logprob: -4.522907733917236
    7. '(' → logprob: -6.022907733917236
    8. '     
' → logprob: -6.147907733917236
    9. '  ' → logprob: -6.397907733917236
    10. ' \' → logprob: -6.522907733917236

Token 76: ' see' (ID: 1921)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.08828488737344742
    2. 'n' → logprob: -2.713284969329834
    3. '   ' → logprob: -4.088284969329834
    4. ' for' → logprob: -7.713284969329834
    5. '    ' → logprob: -8.338284492492676
    6. ' N' → logprob: -8.463284492492676
    7. ' return' → logprob: -9.213284492492676
    8. ' ' → logprob: -9.713284492492676
    9. ' def' → logprob: -9.713284492492676
    10. 'N' → logprob: -9.713284492492676

Token 77: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0534974336624146
    2. ' ' → logprob: -1.3034974336624146
    3. 'def' → logprob: -1.8034974336624146
    4. 'len' → logprob: -3.178497314453125
    5. '<|end|>' → logprob: -3.678497314453125
    6. '(P' → logprob: -4.053497314453125
    7. ':' → logprob: -4.303497314453125
    8. ' len' → logprob: -4.303497314453125
    9. '  ' → logprob: -4.303497314453125
    10. ' P' → logprob: -4.428497314453125

Token 78: ' https' (ID: 5918)
  Prédit: ' https'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' https' → logprob: -0.5439642071723938
    2. '   ' → logprob: -1.918964147567749
    3. 'https' → logprob: -3.043964147567749
    4. ' ' → logprob: -3.043964147567749
    5. 'def' → logprob: -3.293964147567749
    6. ' def' → logprob: -3.543964147567749
    7. ' for' → logprob: -3.793964147567749
    8. ' http' → logprob: -4.668964385986328
    9. '#' → logprob: -5.106464385986328
    10. ' "' → logprob: -5.356464385986328

Token 79: '://' (ID: 1684)
  Prédit: '://'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '://' → logprob: -0.014218159019947052
    2. ':' → logprob: -4.264218330383301
    3. ':\/\/' → logprob: -10.7642183303833
    4. ' :' → logprob: -11.5142183303833
    5. ':#' → logprob: -11.7642183303833
    6. '#' → logprob: -12.0142183303833
    7. ':///' → logprob: -12.1392183303833
    8. '[:]' → logprob: -13.6392183303833
    9. 's' → logprob: -14.3892183303833
    10. ':return' → logprob: -14.6392183303833

Token 80: 'stackoverflow' (ID: 99294)
  Prédit: 'judge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'judge' → logprob: -0.5883987545967102
    2. 'at' → logprob: -1.0883986949920654
    3. 'en' → logprob: -3.7133986949920654
    4. 'ja' → logprob: -3.9633986949920654
    5. 'online' → logprob: -4.2133989334106445
    6. 'qi' → logprob: -4.5883989334106445
    7. 'www' → logprob: -4.5883989334106445
    8. 'oe' → logprob: -4.5883989334106445
    9. 'math' → logprob: -5.8383989334106445
    10. 'cp' → logprob: -5.9633989334106445

Token 81: '.com' (ID: 1136)
  Prédit: '.com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.com' → logprob: -0.00013679367839358747
    2. '.' → logprob: -10.375136375427246
    3. 'user' → logprob: -11.125136375427246
    4. '<|end|>' → logprob: -11.125136375427246
    5. 'usercontent' → logprob: -11.500136375427246
    6. '.net' → logprob: -11.500136375427246
    7. '.co' → logprob: -11.625136375427246
    8. '.org' → logprob: -11.750136375427246
    9. '.ai' → logprob: -12.000136375427246
    10. 'python' → logprob: -12.375136375427246

Token 82: '/questions' (ID: 100087)
  Prédit: '/questions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/questions' → logprob: -0.26632413268089294
    2. '.com' → logprob: -1.5163241624832153
    3. '/' → logprob: -4.266324043273926
    4. 'questions' → logprob: -9.016324043273926
    5. '/comments' → logprob: -9.641324043273926
    6. '/posts' → logprob: -11.016324043273926
    7. '/items' → logprob: -11.391324043273926
    8. '/articles' → logprob: -11.516324043273926
    9. '/users' → logprob: -12.016324043273926
    10. '.' → logprob: -12.391324043273926

Token 83: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.00029029499273747206
    2. '.com' → logprob: -8.750289916992188
    3. '/questions' → logprob: -9.125289916992188
    4. '.' → logprob: -12.125289916992188
    5. '/code' → logprob: -12.250289916992188
    6. '<|end|>' → logprob: -12.875289916992188
    7. '?q' → logprob: -13.125289916992188
    8. 'questions' → logprob: -13.875289916992188
    9. '<|end|>' → logprob: -14.125289916992188
    10. '#' → logprob: -14.250289916992188

Token 84: '471' (ID: 39553)
  Prédit: '156'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '156' → logprob: -0.8275550007820129
    2. '457' → logprob: -2.327554941177368
    3. '223' → logprob: -4.077555179595947
    4. '109' → logprob: -4.077555179595947
    5. '251' → logprob: -4.452555179595947
    6. 'check' → logprob: -4.452555179595947
    7. '236' → logprob: -4.577555179595947
    8. '563' → logprob: -4.577555179595947
    9. '237' → logprob: -4.827555179595947
    10. '233' → logprob: -4.827555179595947

Token 85: '962' (ID: 51294)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.39932799339294434
    2. '7' → logprob: -4.274328231811523
    3. '6' → logprob: -4.399328231811523
    4. '4' → logprob: -4.649328231811523
    5. '8' → logprob: -4.649328231811523
    6. '417' → logprob: -4.774328231811523
    7. '3' → logprob: -4.899328231811523
    8. '9' → logprob: -4.899328231811523
    9. '2' → logprob: -5.024328231811523
    10. '0' → logprob: -5.336828231811523

Token 86: '/how' (ID: 89541)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '8' → logprob: -2.615438222885132
    2. '9' → logprob: -2.615438222885132
    3. '4' → logprob: -2.740438222885132
    4. '3' → logprob: -2.865438222885132
    5. '6' → logprob: -2.990438222885132
    6. '7' → logprob: -3.115438222885132
    7. '0' → logprob: -3.115438222885132
    8. '/' → logprob: -3.240438222885132
    9. '5' → logprob: -3.365438222885132
    10. '1' → logprob: -3.490438222885132

Token 87: '-do' (ID: 42025)
  Prédit: '-to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-to' → logprob: -0.03068592958152294
    2. 'to' → logprob: -3.9056859016418457
    3. '-do' → logprob: -4.905685901641846
    4. '-can' → logprob: -6.780685901641846
    5. '-' → logprob: -7.155685901641846
    6. ' to' → logprob: -8.030686378479004
    7. 'do' → logprob: -8.530686378479004
    8. 'def' → logprob: -10.155686378479004
    9. ' ' → logprob: -10.280686378479004
    10. '#' → logprob: -10.655686378479004

Token 88: '-det' (ID: 161903)
  Prédit: '-i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.00956518854945898
    2. '-to' → logprob: -5.134565353393555
    3. '-I' → logprob: -6.134565353393555
    4. 'to' → logprob: -7.634565353393555
    5. 'I' → logprob: -7.759565353393555
    6. '-you' → logprob: -8.384565353393555
    7. '-' → logprob: -9.009565353393555
    8. '-do' → logprob: -9.634565353393555
    9. 'i' → logprob: -10.009565353393555
    10. ' I' → logprob: -10.134565353393555

Token 89: 'ermine' (ID: 32574)
  Prédit: 'ermine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ermine' → logprob: -0.467369943857193
    2. 'ermin' → logprob: -1.3423699140548706
    3. 'erm' → logprob: -2.21737003326416
    4. 'er' → logprob: -6.46737003326416
    5. 'ermi' → logprob: -7.09237003326416
    6. 'erming' → logprob: -9.09237003326416
    7. 'e' → logprob: -9.46737003326416
    8. '=' → logprob: -9.59237003326416
    9. '```' → logprob: -9.84237003326416
    10. 'emine' → logprob: -9.96737003326416

Token 90: '-if' (ID: 103314)
  Prédit: '-if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-if' → logprob: -0.333524614572525
    2. '-' → logprob: -1.3335245847702026
    3. '-the' → logprob: -4.708524703979492
    4. '-i' → logprob: -5.583524703979492
    5. ' if' → logprob: -5.708524703979492
    6. '-w' → logprob: -5.833524703979492
    7. '-a' → logprob: -8.333524703979492
    8. 'if' → logprob: -8.958524703979492
    9. '-ion' → logprob: -8.958524703979492
    10. '-
' → logprob: -9.333524703979492

Token 91: '-a' (ID: 8575)
  Prédit: '-a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-a' → logprob: -0.03488679602742195
    2. '-' → logprob: -4.159886837005615
    3. 'a' → logprob: -4.284886837005615
    4. ' a' → logprob: -5.909886837005615
    5. '-p' → logprob: -7.659886837005615
    6. '>a' → logprob: -7.909886837005615
    7. '-the' → logprob: -8.034886360168457
    8. '	a' → logprob: -9.034886360168457
    9. '-an' → logprob: -9.284886360168457
    10. '>' → logprob: -9.534886360168457

Token 92: '-p' (ID: 3161)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.6725633144378662
    2. 'point' → logprob: -1.2975633144378662
    3. '-point' → logprob: -2.297563314437866
    4. ' polygon' → logprob: -3.047563314437866
    5. 'pol' → logprob: -4.422563552856445
    6. 'olygon' → logprob: -4.547563552856445
    7. 'poly' → logprob: -4.672563552856445
    8. '-p' → logprob: -5.172563552856445
    9. 'sequence' → logprob: -5.297563552856445
    10. '-poly' → logprob: -5.672563552856445

Token 93: 'olygon' (ID: 80431)
  Prédit: 'olygon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olygon' → logprob: -0.014666400849819183
    2. 'oly' → logprob: -4.889666557312012
    3. 'ol' → logprob: -5.264666557312012
    4. 'oint' → logprob: -6.389666557312012
    5. 'o' → logprob: -9.014666557312012
    6. 'oy' → logprob: -11.139666557312012
    7. '#' → logprob: -11.264666557312012
    8. '```' → logprob: -11.514666557312012
    9. 'ython' → logprob: -11.639666557312012
    10. '   ' → logprob: -13.264666557312012

Token 94: '-is' (ID: 43403)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12541864812374115
    2. '-is' → logprob: -2.5004186630249023
    3. '#' → logprob: -4.250418663024902
    4. '-p' → logprob: -5.125418663024902
    5. 's' → logprob: -6.000418663024902
    6. '-point' → logprob: -6.500418663024902
    7. '-can' → logprob: -6.750418663024902
    8. ''s' → logprob: -6.875418663024902
    9. '-vector' → logprob: -7.250418663024902
    10. '-h' → logprob: -7.375418663024902

Token 95: '-com' (ID: 18251)
  Prédit: '-con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-con' → logprob: -0.30219224095344543
    2. 'conv' → logprob: -1.427192211151123
    3. '-' → logprob: -5.177192211151123
    4. 'conc' → logprob: -5.302192211151123
    5. ' convex' → logprob: -5.677192211151123
    6. 'a' → logprob: -6.927192211151123
    7. '-simple' → logprob: -7.052192211151123
    8. '0' → logprob: -7.177192211151123
    9. '_conv' → logprob: -7.677192211151123
    10. 'c' → logprob: -8.302192687988281

Token 96: 'plex' (ID: 12081)
  Prédit: 'plete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plete' → logprob: -0.8467801809310913
    2. 'pleted' → logprob: -0.8467801809310913
    3. 'pat' → logprob: -3.471780300140381
    4. '/' → logprob: -3.846780300140381
    5. 'p' → logprob: -4.346780300140381
    6. 'pletely' → logprob: -4.721780300140381
    7. 'python' → logprob: -4.846780300140381
    8. 'puted' → logprob: -5.221780300140381
    9. '/blob' → logprob: -5.221780300140381
    10. '```' → logprob: -5.346780300140381

Token 97: '-con' (ID: 21675)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6237571239471436
    2. 'def' → logprob: -1.4987571239471436
    3. ')' → logprob: -1.9987571239471436
    4. ' ' → logprob: -3.2487571239471436
    5. '#' → logprob: -3.9987571239471436
    6. '/' → logprob: -4.123757362365723
    7. 'import' → logprob: -5.498757362365723
    8. '-' → logprob: -5.623757362365723
    9. 's' → logprob: -5.748757362365723
    10. '  ' → logprob: -5.998757362365723

Token 98: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.1795143187046051
    2. 'tour' → logprob: -2.4295144081115723
    3. 't' → logprob: -2.6795144081115723
    4. 'c' → logprob: -5.929514408111572
    5. 'tent' → logprob: -6.054514408111572
    6. 'test' → logprob: -7.554514408111572
    7. 'd' → logprob: -7.804514408111572
    8. 's' → logprob: -7.929514408111572
    9. 'x' → logprob: -8.429513931274414
    10. 'struct' → logprob: -8.804513931274414

Token 99: 'ex' (ID: 490)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0019914438016712666
    2. 'ex' → logprob: -6.251991271972656
    3. '#' → logprob: -10.626991271972656
    4. '-e' → logprob: -11.501991271972656
    5. 'ite' → logprob: -11.876991271972656
    6. 'al' → logprob: -12.501991271972656
    7. '-shaped' → logprob: -12.751991271972656
    8. 'ity' → logprob: -12.876991271972656
    9. 'ef' → logprob: -13.251991271972656
    10. 'ed' → logprob: -13.751991271972656

Token 100: '-n' (ID: 5219)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0655548945069313
    2. ')' → logprob: -3.6905548572540283
    3. ' ' → logprob: -3.9405548572540283
    4. 'def' → logprob: -4.815555095672607
    5. ':' → logprob: -5.440555095672607
    6. '  ' → logprob: -6.565555095672607
    7. '(' → logprob: -7.190555095672607
    8. ',' → logprob: -7.565555095672607
    9. '_' → logprob: -7.565555095672607
    10. '/' → logprob: -7.690555095672607

Token 101: 'on' (ID: 263)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6683346629142761
    2. 'on' → logprob: -1.043334722518921
    3. '-' → logprob: -3.293334722518921
    4. 'p' → logprob: -3.918334722518921
    5. '-p' → logprob: -4.168334484100342
    6. '-on' → logprob: -4.418334484100342
    7. 'o' → logprob: -5.168334484100342
    8. '-def' → logprob: -5.793334484100342
    9. '-con' → logprob: -5.793334484100342
    10. '```' → logprob: -5.918334484100342

Token 102: 'conv' (ID: 26093)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3632952570915222
    2. '-con' → logprob: -1.613295316696167
    3. 'conv' → logprob: -3.238295316696167
    4. '#' → logprob: -3.363295316696167
    5. '-simple' → logprob: -4.613295078277588
    6. 'polygon' → logprob: -5.863295078277588
    7. '+' → logprob: -5.988295078277588
    8. '-empty' → logprob: -5.988295078277588
    9. '-poly' → logprob: -6.238295078277588
    10. 'poly' → logprob: -6.738295078277588

Token 103: 'ex' (ID: 490)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.12694774568080902
    2. 'ex' → logprob: -2.1269476413726807
    3. 'ity' → logprob: -12.126947402954102
    4. 'ite' → logprob: -12.626947402954102
    5. 'exp' → logprob: -12.626947402954102
    6. 'al' → logprob: -12.876947402954102
    7. '-ex' → logprob: -13.751947402954102
    8. 'expl' → logprob: -14.126947402954102
    9. '-e' → logprob: -15.001947402954102
    10. '%e' → logprob: -15.126947402954102

Token 104: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004082674626260996
    2. ')' → logprob: -6.254082679748535
    3. ':' → logprob: -7.129082679748535
    4. '):' → logprob: -7.629082679748535
    5. 'def' → logprob: -8.004082679748535
    6. '    
' → logprob: -8.754082679748535
    7. '<|end|>' → logprob: -9.754082679748535
    8. ',' → logprob: -10.129082679748535
    9. '    ' → logprob: -10.629082679748535
    10. '
' → logprob: -10.629082679748535

Token 105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0111361313611269
    2. ':' → logprob: -5.386136054992676
    3. '    ' → logprob: -6.636136054992676
    4. ' :' → logprob: -6.886136054992676
    5. ' n' → logprob: -7.261136054992676
    6. '    
' → logprob: -7.261136054992676
    7. 'n' → logprob: -7.511136054992676
    8. 'def' → logprob: -8.011136054992676
    9. ' 
' → logprob: -8.386136054992676
    10. ' ' → logprob: -8.511136054992676

Token 106: ' N' (ID: 478)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.039197154343128204
    2. 'n' → logprob: -3.6641972064971924
    3. '   ' → logprob: -4.414196968078613
    4. ' def' → logprob: -7.914196968078613
    5. ' N' → logprob: -9.164196968078613
    6. ' if' → logprob: -9.414196968078613
    7. 'def' → logprob: -9.664196968078613
    8. '    
' → logprob: -11.289196968078613
    9. ' prev' → logprob: -11.789196968078613
    10. '	n' → logprob: -11.914196968078613

Token 107: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006372982170432806
    2. '=' → logprob: -5.131372928619385
    3. '=len' → logprob: -7.756372928619385
    4. ' ' → logprob: -12.256373405456543
    5. ' =
' → logprob: -12.756373405456543
    6. '=int' → logprob: -13.131373405456543
    7. ' >=' → logprob: -13.631373405456543
    8. ')' → logprob: -13.631373405456543
    9. '   ' → logprob: -13.881373405456543
    10. ' >' → logprob: -14.506373405456543

Token 108: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.38687291741371155
    2. 'len' → logprob: -1.1368728876113892
    3. '(len' → logprob: -13.886873245239258
    4. '[len' → logprob: -14.386873245239258
    5. '=len' → logprob: -15.261873245239258
    6. '	len' → logprob: -16.386873245239258
    7. ' ' → logprob: -17.511873245239258
    8. ',len' → logprob: -18.011873245239258
    9. '<len' → logprob: -18.261873245239258
    10. '   ' → logprob: -19.636873245239258

Token 109: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.000205566844670102
    2. '(' → logprob: -8.500205993652344
    3. '(
' → logprob: -14.125205993652344
    4. ' (' → logprob: -15.250205993652344
    5. '<|end|>' → logprob: -15.250205993652344
    6. '(Py' → logprob: -15.500205993652344
    7. 'P' → logprob: -15.625205993652344
    8. ')' → logprob: -16.625205993652344
    9. '(A' → logprob: -16.625205993652344
    10. '(Q' → logprob: -17.125205993652344

Token 110: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012023737654089928
    2. ')
' → logprob: -6.751202583312988
    3. '   ' → logprob: -10.876202583312988
    4. ' )' → logprob: -11.376202583312988
    5. ' ' → logprob: -14.501202583312988
    6. ')

' → logprob: -15.626202583312988
    7. ')
' → logprob: -15.626202583312988
    8. ')#' → logprob: -16.501201629638672
    9. 'def' → logprob: -16.626201629638672
    10. '-' → logprob: -16.751201629638672

Token 111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007365252356976271
    2. '    
' → logprob: -6.3823652267456055
    3. ' signs' → logprob: -6.7573652267456055
    4. 'sign' → logprob: -7.5073652267456055
    5. ' sign' → logprob: -7.5073652267456055
    6. 'def' → logprob: -7.7573652267456055
    7. '    ' → logprob: -8.132365226745605
    8. '
' → logprob: -8.632365226745605
    9. ' def' → logprob: -8.632365226745605
    10. ' c' → logprob: -8.632365226745605

Token 112: ' pro' (ID: 440)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.9993180632591248
    2. 'def' → logprob: -1.1243181228637695
    3. 'prev' → logprob: -1.8743181228637695
    4. 'if' → logprob: -2.8743181228637695
    5. 'z' → logprob: -3.3743181228637695
    6. 'pos' → logprob: -3.3743181228637695
    7. 'direction' → logprob: -5.3743181228637695
    8. 'positive' → logprob: -5.6243181228637695
    9. 'flag' → logprob: -5.6243181228637695
    10. 'cross' → logprob: -5.8743181228637695

Token 113: 'ds' (ID: 8559)
  Prédit: 'duct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duct' → logprob: -0.12678813934326172
    2. 'd' → logprob: -2.2517881393432617
    3. 'ds' → logprob: -5.001788139343262
    4. 'sign' → logprob: -6.501788139343262
    5. '   ' → logprob: -6.626788139343262
    6. 'du' → logprob: -7.126788139343262
    7. 's' → logprob: -7.376788139343262
    8. 'j' → logprob: -8.001788139343262
    9. 'def' → logprob: -8.126788139343262
    10. 'per' → logprob: -8.501788139343262

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03976129740476608
    2. '=' → logprob: -3.2897613048553467
    3. '=[]' → logprob: -7.039761066436768
    4. 'uct' → logprob: -7.789761066436768
    5. ',' → logprob: -9.039761543273926
    6. 'sign' → logprob: -10.039761543273926
    7. 'duct' → logprob: -10.164761543273926
    8. ')' → logprob: -10.664761543273926
    9. 's' → logprob: -10.914761543273926
    10. '   ' → logprob: -11.289761543273926

Token 115: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.04409879818558693
    2. ' []' → logprob: -3.2940988540649414
    3. '[' → logprob: -5.169098854064941
    4. ' [' → logprob: -8.044098854064941
    5. '[]
' → logprob: -11.294098854064941
    6. '[int' → logprob: -12.419098854064941
    7. '[]}' → logprob: -12.919098854064941
    8. '0' → logprob: -13.419098854064941
    9. ' ' → logprob: -13.669098854064941
    10. '   ' → logprob: -13.794098854064941

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040085580199956894
    2. ' for' → logprob: -3.415085554122925
    3. 'for' → logprob: -5.665085792541504
    4. '<|end|>' → logprob: -6.040085792541504
    5. '    
' → logprob: -8.290085792541504
    6. 'def' → logprob: -9.540085792541504
    7. '
' → logprob: -9.790085792541504
    8. ' ' → logprob: -9.915085792541504
    9. '  ' → logprob: -10.540085792541504
    10. '	for' → logprob: -10.790085792541504

Token 117: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.13752326369285583
    2. ' for' → logprob: -2.1375231742858887
    3. '   ' → logprob: -4.637523174285889
    4. 'def' → logprob: -7.137523174285889
    5. '	for' → logprob: -9.887523651123047
    6. ' def' → logprob: -12.637523651123047
    7. 'prev' → logprob: -12.887523651123047
    8. '    ' → logprob: -13.512523651123047
    9. '  ' → logprob: -13.762523651123047
    10. 'import' → logprob: -14.262523651123047

Token 118: ' k' (ID: 372)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.033720970153808594
    2. 'i' → logprob: -3.4087209701538086
    3. ' ' → logprob: -9.658720970153809
    4. '	i' → logprob: -11.783720970153809
    5. ' ' → logprob: -14.533720970153809
    6. '(i' → logprob: -14.533720970153809
    7. 'I' → logprob: -14.658720970153809
    8. '  ' → logprob: -15.158720970153809
    9. '_i' → logprob: -15.283720970153809
    10. 'k' → logprob: -15.533720970153809

Token 119: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007147844880819321
    2. 'in' → logprob: -5.007147789001465
    3. ' ' → logprob: -8.007147789001465
    4. '	in' → logprob: -10.507147789001465
    5. '+' → logprob: -10.882147789001465
    6. '   ' → logprob: -11.132147789001465
    7. '  ' → logprob: -12.132147789001465
    8. 'k' → logprob: -12.132147789001465
    9. ',' → logprob: -12.632147789001465
    10. '-' → logprob: -12.632147789001465

Token 120: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005234356038272381
    2. ' range' → logprob: -5.255234241485596
    3. ' ' → logprob: -14.755234718322754
    4. '  ' → logprob: -16.380233764648438
    5. '   ' → logprob: -16.505233764648438
    6. '	range' → logprob: -17.130233764648438
    7. ' xrange' → logprob: -17.755233764648438
    8. '(range' → logprob: -17.755233764648438
    9. 'r' → logprob: -19.505233764648438
    10. '```' → logprob: -19.630233764648438

Token 121: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.008631941862404346
    2. '(' → logprob: -4.758631706237793
    3. '(-' → logprob: -11.508631706237793
    4. '(len' → logprob: -12.008631706237793
    5. '(n' → logprob: -14.633631706237793
    6. '   ' → logprob: -15.508631706237793
    7. '((' → logprob: -15.883631706237793
    8. 'N' → logprob: -16.25863265991211
    9. '(k' → logprob: -16.25863265991211
    10. '(
' → logprob: -16.88363265991211

Token 122: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11997666954994202
    2. '):
' → logprob: -2.244976758956909
    3. '-' → logprob: -5.36997652053833
    4. '   ' → logprob: -6.99497652053833
    5. ')' → logprob: -7.11997652053833
    6. '+' → logprob: -8.119976997375488
    7. ' ' → logprob: -8.869976997375488
    8. ':' → logprob: -9.244976997375488
    9. ' ):' → logprob: -9.494976997375488
    10. ' -' → logprob: -9.994976997375488

Token 123: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.12697744369506836
    2. ' x' → logprob: -3.5019774436950684
    3. '   ' → logprob: -3.6269774436950684
    4. 'p' → logprob: -3.6269774436950684
    5. 'a' → logprob: -4.251977443695068
    6. 'ax' → logprob: -5.126977443695068
    7. 'dx' → logprob: -5.751977443695068
    8. 'px' → logprob: -5.876977443695068
    9. ' p' → logprob: -6.126977443695068
    10. ' ax' → logprob: -6.126977443695068

Token 125: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6437461972236633
    2. '0' → logprob: -0.7687461972236633
    3. ',' → logprob: -5.018746376037598
    4. ',y' → logprob: -6.143746376037598
    5. ' =' → logprob: -6.643746376037598
    6. 'y' → logprob: -8.393746376037598
    7. '2' → logprob: -8.768746376037598
    8. '=' → logprob: -8.893746376037598
    9. '_' → logprob: -9.143746376037598
    10. 'k' → logprob: -9.518746376037598

Token 126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016048915684223175
    2. ',y' → logprob: -4.266048908233643
    3. '1' → logprob: -7.141048908233643
    4. '0' → logprob: -7.516048908233643
    5. ' ,' → logprob: -8.7660493850708
    6. ' =' → logprob: -8.7660493850708
    7. '=' → logprob: -8.8910493850708
    8. ',x' → logprob: -10.2660493850708
    9. 'y' → logprob: -10.7660493850708
    10. ',k' → logprob: -11.0160493850708

Token 127: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.004081485792994499
    2. ' y' → logprob: -5.5040812492370605
    3. ',y' → logprob: -13.004081726074219
    4. ',' → logprob: -15.254081726074219
    5. '	y' → logprob: -15.254081726074219
    6. '       ' → logprob: -15.629081726074219
    7. 'yj' → logprob: -15.879081726074219
    8. 'x' → logprob: -17.00408172607422
    9. '   ' → logprob: -17.50408172607422
    10. '
' → logprob: -18.50408172607422

Token 128: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.034862734377384186
    2. ' =' → logprob: -4.534862518310547
    3. '=' → logprob: -4.909862518310547
    4. ',' → logprob: -4.909862518310547
    5. 'k' → logprob: -5.534862518310547
    6. '<|end|>' → logprob: -5.659862518310547
    7. ')' → logprob: -8.034862518310547
    8. '1' → logprob: -8.409862518310547
    9. '_' → logprob: -8.534862518310547
    10. ',k' → logprob: -8.909862518310547

Token 129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10119809210300446
    2. '=' → logprob: -2.351198196411133
    3. ',' → logprob: -6.976198196411133
    4. '=k' → logprob: -10.851198196411133
    5. '<|end|>' → logprob: -11.351198196411133
    6. '=P' → logprob: -12.101198196411133
    7. ' =
' → logprob: -12.351198196411133
    8. ')' → logprob: -12.476198196411133
    9. '=x' → logprob: -12.851198196411133
    10. ',k' → logprob: -12.851198196411133

Token 130: ' P' (ID: 398)
  Prédit: ' P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' P' → logprob: -0.38694843649864197
    2. 'P' → logprob: -1.1369484663009644
    3. '<|end|>' → logprob: -10.261948585510254
    4. '=P' → logprob: -11.261948585510254
    5. '	P' → logprob: -12.011948585510254
    6. '\P' → logprob: -12.136948585510254
    7. '(P' → logprob: -12.386948585510254
    8. '   ' → logprob: -13.011948585510254
    9. '<P' → logprob: -13.136948585510254
    10. '<|end|>' → logprob: -13.136948585510254

Token 131: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -3.531315314830863e-06
    2. 'k' → logprob: -13.250003814697266
    3. '[' → logprob: -13.625003814697266
    4. '[
' → logprob: -15.875003814697266
    5. '[x' → logprob: -15.875003814697266
    6. '[key' → logprob: -17.000003814697266
    7. '[(' → logprob: -17.250003814697266
    8. '[m' → logprob: -17.500003814697266
    9. '[j' → logprob: -17.750003814697266
    10. '[i' → logprob: -17.875003814697266

Token 132: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.27380120754241943
    2. ']
' → logprob: -1.6488012075424194
    3. '][' → logprob: -3.148801326751709
    4. '-' → logprob: -6.398801326751709
    5. '%' → logprob: -6.773801326751709
    6. '[' → logprob: -7.023801326751709
    7. '   ' → logprob: -9.02380084991455
    8. '<|end|>' → logprob: -9.27380084991455
    9. ']
' → logprob: -9.27380084991455
    10. ']%' → logprob: -9.77380084991455

Token 133: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6464858651161194
    2. '<|end|>' → logprob: -1.7714858055114746
    3. '       ' → logprob: -1.8964858055114746
    4. '   ' → logprob: -2.8964858055114746
    5. ' 
' → logprob: -4.146485805511475
    6. ' ' → logprob: -4.146485805511475
    7. ',' → logprob: -4.396485805511475
    8. '    
' → logprob: -4.396485805511475
    9. '  
' → logprob: -4.521485805511475
    10. '        
' → logprob: -4.646485805511475

Token 134: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -2.339278580620885e-06
    2. ' x' → logprob: -13.375001907348633
    3. '   ' → logprob: -15.125001907348633
    4. '       ' → logprob: -15.125001907348633
    5. '	x' → logprob: -15.750001907348633
    6. '(x' → logprob: -18.375001907348633
    7. '        
' → logprob: -18.875001907348633
    8. 'xn' → logprob: -19.250001907348633
    9. 'import' → logprob: -19.500001907348633
    10. '#' → logprob: -20.000001907348633

Token 135: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. ',' → logprob: -13.37500286102295
    3. '_' → logprob: -14.62500286102295
    4. 'prev' → logprob: -14.75000286102295
    5. 'm' → logprob: -16.125003814697266
    6. 'next' → logprob: -16.375003814697266
    7. '_prev' → logprob: -16.375003814697266
    8. ' ' → logprob: -16.375003814697266
    9. '2' → logprob: -16.500003814697266
    10. '```' → logprob: -16.500003814697266

Token 136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021057340200059116
    2. ' ,' → logprob: -9.000210762023926
    3. '=' → logprob: -9.500210762023926
    4. ' =' → logprob: -12.375210762023926
    5. ',y' → logprob: -12.500210762023926
    6. '<|end|>' → logprob: -13.875210762023926
    7. ' ' → logprob: -14.000210762023926
    8. ',x' → logprob: -14.500210762023926
    9. ',k' → logprob: -15.000210762023926
    10. ',
' → logprob: -15.125210762023926

Token 137: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.0036017363891005516
    2. 'y' → logprob: -5.628601551055908
    3. ',' → logprob: -14.003602027893066
    4. ',y' → logprob: -15.003602027893066
    5. '<|end|>' → logprob: -15.503602027893066
    6. ' ' → logprob: -15.878602027893066
    7. '	y' → logprob: -16.00360107421875
    8. ' ' → logprob: -17.37860107421875
    9. ' =' → logprob: -18.25360107421875
    10. '_y' → logprob: -18.87860107421875

Token 138: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5142533183097839
    2. 'k' → logprob: -1.5142533779144287
    3. ',' → logprob: -2.1392533779144287
    4. ',k' → logprob: -3.6392533779144287
    5. '1' → logprob: -3.7642533779144287
    6. ' ' → logprob: -4.76425313949585
    7. ' k' → logprob: -6.01425313949585
    8. 'x' → logprob: -6.76425313949585
    9. '[k' → logprob: -7.76425313949585
    10. ')' → logprob: -8.014253616333008

Token 139: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06995688378810883
    2. '=' → logprob: -2.6949567794799805
    3. ' ' → logprob: -11.69495677947998
    4. '   ' → logprob: -12.06995677947998
    5. ')' → logprob: -12.44495677947998
    6. ',' → logprob: -13.81995677947998
    7. ' =
' → logprob: -14.31995677947998
    8. '=P' → logprob: -15.31995677947998
    9. '  ' → logprob: -15.81995677947998
    10. '    ' → logprob: -16.194957733154297

Token 140: ' P' (ID: 398)
  Prédit: ' P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' P' → logprob: -0.06993921101093292
    2. 'P' → logprob: -2.694939136505127
    3. ' ' → logprob: -13.694939613342285
    4. '=P' → logprob: -14.694939613342285
    5. '	P' → logprob: -14.819939613342285
    6. '   ' → logprob: -15.069939613342285
    7. '>P' → logprob: -15.944939613342285
    8. '(P' → logprob: -16.06993865966797
    9. '_P' → logprob: -16.19493865966797
    10. '<P' → logprob: -17.19493865966797

Token 141: '[(' (ID: 20542)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.20226314663887024
    2. '[(' → logprob: -1.7022631168365479
    3. '[k' → logprob: -7.702263355255127
    4. '((' → logprob: -8.077262878417969
    5. '(x' → logprob: -10.327262878417969
    6. '(' → logprob: -10.577262878417969
    7. '(K' → logprob: -11.202262878417969
    8. ' (' → logprob: -12.327262878417969
    9. '(next' → logprob: -12.827262878417969
    10. '[
' → logprob: -13.202262878417969

Token 142: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.01815216802060604
    2. '(k' → logprob: -4.018152236938477
    3. '{k' → logprob: -14.018152236938477
    4. ' k' → logprob: -14.393152236938477
    5. ' (' → logprob: -14.893152236938477
    6. '[k' → logprob: -15.393152236938477
    7. '_k' → logprob: -15.518152236938477
    8. '(' → logprob: -16.518152236938477
    9. '
' → logprob: -17.018152236938477
    10. '   ' → logprob: -17.393152236938477

Token 143: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07898683845996857
    2. '1' → logprob: -2.578986883163452
    3. ' +' → logprob: -9.453987121582031
    4. '+k' → logprob: -11.953987121582031
    5. 'k' → logprob: -12.828987121582031
    6. '(' → logprob: -12.828987121582031
    7. '-' → logprob: -12.828987121582031
    8. ' ' → logprob: -12.953987121582031
    9. '0' → logprob: -14.078987121582031
    10. '```' → logprob: -15.078987121582031

Token 144: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -16.8750057220459
    4. '```' → logprob: -18.6250057220459
    5. '  ' → logprob: -18.8750057220459
    6. '
' → logprob: -19.0000057220459
    7. '2' → logprob: -19.0625057220459
    8. '+' → logprob: -20.3125057220459
    9. '-' → logprob: -20.3750057220459
    10. 'def' → logprob: -21.0000057220459

Token 145: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.750008583068848
    3. '
' → logprob: -16.50000762939453
    4. '   ' → logprob: -17.12500762939453
    5. '-' → logprob: -18.06250762939453
    6. '(' → logprob: -18.25000762939453
    7. '```' → logprob: -18.25000762939453
    8. '  ' → logprob: -18.75000762939453
    9. '2' → logprob: -19.31250762939453
    10. 'for' → logprob: -19.43750762939453

Token 146: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014176322147250175
    2. ')%' → logprob: -4.264176368713379
    3. ')]' → logprob: -11.639176368713379
    4. '%' → logprob: -13.264176368713379
    5. ' )' → logprob: -14.014176368713379
    6. ')
' → logprob: -14.389176368713379
    7. ']' → logprob: -15.014176368713379
    8. '）' → logprob: -15.889176368713379
    9. ']%' → logprob: -16.389175415039062
    10. '%)' → logprob: -16.514175415039062

Token 147: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35875576734542847
    2. ')%' → logprob: -1.6087558269500732
    3. '%' → logprob: -2.6087558269500732
    4. ']' → logprob: -3.9837558269500732
    5. ']%' → logprob: -4.858755588531494
    6. ' %' → logprob: -6.858755588531494
    7. ')]' → logprob: -9.983756065368652
    8. '%n' → logprob: -10.108756065368652
    9. '0' → logprob: -10.233756065368652
    10. '1' → logprob: -10.608756065368652

Token 148: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -3.547789674485102e-05
    2. ' N' → logprob: -10.250035285949707
    3. ' ' → logprob: -19.750036239624023
    4. 'n' → logprob: -21.250036239624023
    5. '	N' → logprob: -21.500036239624023
    6. '```' → logprob: -22.500036239624023
    7. '>N' → logprob: -22.625036239624023
    8. 'len' → logprob: -22.750036239624023
    9. '  ' → logprob: -22.875036239624023
    10. '   ' → logprob: -23.000036239624023

Token 149: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.4292726516723633
    2. ']' → logprob: -1.0542726516723633
    3. ']
' → logprob: -7.679272651672363
    4. ']

' → logprob: -9.804272651672363
    5. ' ]
' → logprob: -10.304272651672363
    6. ' ]' → logprob: -11.429272651672363
    7. '   ' → logprob: -13.179272651672363
    8. '       ' → logprob: -13.304272651672363
    9. ')]' → logprob: -13.804272651672363
    10. ')' → logprob: -13.804272651672363

Token 150: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013903543585911393
    2. '
' → logprob: -7.00139045715332
    3. '   ' → logprob: -8.50139045715332
    4. '        
' → logprob: -9.37639045715332
    5. ',' → logprob: -9.75139045715332
    6. 'x' → logprob: -10.37639045715332
    7. ' ' → logprob: -10.75139045715332
    8. '  
' → logprob: -11.12639045715332
    9. ',
' → logprob: -11.75139045715332
    10. ' x' → logprob: -11.87639045715332

Token 151: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.007839658297598362
    2. ' x' → logprob: -4.882839679718018
    3. '       ' → logprob: -8.38283920288086
    4. '	x' → logprob: -13.00783920288086
    5. '
' → logprob: -14.50783920288086
    6. '   ' → logprob: -14.50783920288086
    7. ' ' → logprob: -15.25783920288086
    8. '#' → logprob: -15.25783920288086
    9. ',' → logprob: -15.38283920288086
    10. '0' → logprob: -15.75783920288086

Token 152: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002834707498550415
    2. ',' → logprob: -5.877834796905518
    3. ' ,' → logprob: -11.62783432006836
    4. '0' → logprob: -12.25283432006836
    5. ' ' → logprob: -12.62783432006836
    6. '_,' → logprob: -13.37783432006836
    7. 'k' → logprob: -14.06533432006836
    8. ',
' → logprob: -14.12783432006836
    9. 'm' → logprob: -14.19033432006836
    10. '```' → logprob: -14.31533432006836

Token 153: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.0339031834737398e-05
    2. ' ,' → logprob: -11.000020027160645
    3. ',y' → logprob: -12.625020027160645
    4. '0' → logprob: -16.75002098083496
    5. '=' → logprob: -16.87502098083496
    6. '<|end|>' → logprob: -17.37502098083496
    7. '‌,' → logprob: -17.37502098083496
    8. 'y' → logprob: -18.12502098083496
    9. '_,' → logprob: -18.25002098083496
    10. ' y' → logprob: -18.37502098083496

Token 154: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.005235529970377684
    2. 'y' → logprob: -5.25523567199707
    3. ',' → logprob: -13.75523567199707
    4. ',y' → logprob: -14.50523567199707
    5. '	y' → logprob: -16.50523567199707
    6. ' ' → logprob: -16.75523567199707
    7. '    ' → logprob: -17.63023567199707
    8. '   ' → logprob: -18.75523567199707
    9. ')y' → logprob: -18.75523567199707
    10. '0' → logprob: -18.88023567199707

Token 155: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5380324125289917
    2. '2' → logprob: -1.1630324125289917
    3. ',' → logprob: -2.5380325317382812
    4. '(y' → logprob: -4.538032531738281
    5. '(' → logprob: -5.163032531738281
    6. '0' → logprob: -6.163032531738281
    7. ' (' → logprob: -6.413032531738281
    8. ' ' → logprob: -7.038032531738281
    9. ' y' → logprob: -7.163032531738281
    10. 'y' → logprob: -7.163032531738281

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47408145666122437
    2. '=' → logprob: -0.9740814566612244
    3. ')' → logprob: -13.099081039428711
    4. ',' → logprob: -13.599081039428711
    5. ' ' → logprob: -14.599081039428711
    6. ' =
' → logprob: -15.224081039428711
    7. '=
' → logprob: -16.09908103942871
    8. '   ' → logprob: -16.22408103942871
    9. '=P' → logprob: -16.47408103942871
    10. ' ' → logprob: -16.72408103942871

Token 157: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.6931533813476562
    2. ' P' → logprob: -0.6931533813476562
    3. '=P' → logprob: -13.193153381347656
    4. ' ' → logprob: -14.068153381347656
    5. '	P' → logprob: -14.193153381347656
    6. '   ' → logprob: -14.318153381347656
    7. '(P' → logprob: -14.568153381347656
    8. ')' → logprob: -14.818153381347656
    9. '>P' → logprob: -15.568153381347656
    10. '[P' → logprob: -15.943153381347656

Token 158: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0005131178768351674
    2. '((' → logprob: -7.625513076782227
    3. ' [(' → logprob: -11.375513076782227
    4. '(' → logprob: -12.750513076782227
    5. '(k' → logprob: -12.750513076782227
    6. ' (' → logprob: -12.750513076782227
    7. '[k' → logprob: -13.250513076782227
    8. '[((' → logprob: -13.875513076782227
    9. '[' → logprob: -14.000513076782227
    10. '[
' → logprob: -14.250513076782227

Token 159: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.10036927461624146
    2. '(k' → logprob: -2.3503692150115967
    3. ' k' → logprob: -9.100369453430176
    4. ' (' → logprob: -9.975369453430176
    5. '   ' → logprob: -13.475369453430176
    6. '(' → logprob: -13.975369453430176
    7. '	k' → logprob: -14.225369453430176
    8. '{k' → logprob: -14.225369453430176
    9. ' ' → logprob: -15.600369453430176
    10. '"k' → logprob: -15.850369453430176

Token 160: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.13711227476596832
    2. '2' → logprob: -2.6371123790740967
    3. ' +' → logprob: -2.8871123790740967
    4. ' ' → logprob: -7.137112140655518
    5. '   ' → logprob: -11.637112617492676
    6. '       ' → logprob: -11.762112617492676
    7. '    ' → logprob: -12.762112617492676
    8. '     ' → logprob: -13.262112617492676
    9. '+
' → logprob: -13.387112617492676
    10. '        ' → logprob: -13.512112617492676

Token 161: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0046235607005655766
    2. ' ' → logprob: -5.3796234130859375
    3. '   ' → logprob: -13.567123413085938
    4. '```' → logprob: -15.379623413085938
    5. '  ' → logprob: -15.442123413085938
    6. '
' → logprob: -15.504623413085938
    7. ')' → logprob: -15.817123413085938
    8. '     ' → logprob: -16.129623413085938
    9. '1' → logprob: -16.379623413085938
    10. '       ' → logprob: -16.754623413085938

Token 162: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003821716527454555
    2. ' ' → logprob: -7.875381946563721
    3. '   ' → logprob: -14.562882423400879
    4. '1' → logprob: -14.875382423400879
    5. '```' → logprob: -15.562882423400879
    6. '
' → logprob: -15.875382423400879
    7. '  ' → logprob: -16.000381469726562
    8. 'k' → logprob: -16.562881469726562
    9. ')' → logprob: -16.625381469726562
    10. 'N' → logprob: -16.687881469726562

Token 163: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014723646454513073
    2. ')%' → logprob: -6.626472473144531
    3. '%' → logprob: -9.501472473144531
    4. ' )' → logprob: -9.876472473144531
    5. ']' → logprob: -11.626472473144531
    6. ' %' → logprob: -12.376472473144531
    7. '1' → logprob: -13.251472473144531
    8. ')
' → logprob: -13.501472473144531
    9. '0' → logprob: -13.751472473144531
    10. ')]' → logprob: -14.126472473144531

Token 164: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.2697659432888031
    2. '%' → logprob: -1.5197659730911255
    3. ')' → logprob: -4.144765853881836
    4. ')%' → logprob: -7.144765853881836
    5. ' ' → logprob: -7.769765853881836
    6. ']' → logprob: -7.894765853881836
    7. ']%' → logprob: -9.894765853881836
    8. '0' → logprob: -10.144765853881836
    9. '```' → logprob: -10.644765853881836
    10. 'def' → logprob: -10.894765853881836

Token 165: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.01815216802060604
    2. ' N' → logprob: -4.018152236938477
    3. ')' → logprob: -14.143152236938477
    4. '```' → logprob: -14.768152236938477
    5. '	N' → logprob: -15.143152236938477
    6. ' ' → logprob: -15.268152236938477
    7. '   ' → logprob: -16.143152236938477
    8. '_N' → logprob: -16.643152236938477
    9. '<|end|>' → logprob: -16.643152236938477
    10. '(N' → logprob: -17.518152236938477

Token 166: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015852760523557663
    2. ']
' → logprob: -4.265852928161621
    3. ']

' → logprob: -7.015852928161621
    4. ')' → logprob: -7.640852928161621
    5. ')]' → logprob: -9.390852928161621
    6. ' ]' → logprob: -9.640852928161621
    7. ']
' → logprob: -9.640852928161621
    8. '   ' → logprob: -9.765852928161621
    9. '       ' → logprob: -11.015852928161621
    10. ')
' → logprob: -12.515852928161621

Token 167: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3003098964691162
    2. '
' → logprob: -1.4253098964691162
    3. '        
' → logprob: -4.675310134887695
    4. '   ' → logprob: -5.300310134887695
    5. '  
' → logprob: -6.300310134887695
    6. '<|end|>' → logprob: -6.550310134887695
    7. '    
' → logprob: -7.175310134887695
    8. ' 
' → logprob: -9.050310134887695
    9. '<|end|>' → logprob: -9.050310134887695
    10. ',' → logprob: -9.550310134887695

Token 168: ' dx' (ID: 29472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17359638214111328
    2. ' dx' → logprob: -2.5485963821411133
    3. 'dx' (adapté à ' dx') → logprob: -2.9235963821411133
    4. ' ux' → logprob: -4.423596382141113
    5. '   ' → logprob: -5.548596382141113
    6. 'x' → logprob: -5.798596382141113
    7. ' x' → logprob: -6.298596382141113
    8. ' vx' → logprob: -6.673596382141113
    9. 'ax' → logprob: -7.048596382141113
    10. 'vx' → logprob: -7.423596382141113

Token 169: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013061909703537822
    2. '0' → logprob: -6.751306056976318
    3. '=' → logprob: -9.251306533813477
    4. '01' → logprob: -11.001306533813477
    5. ' =' → logprob: -11.251306533813477
    6. ' ' → logprob: -12.001306533813477
    7. '_' → logprob: -13.126306533813477
    8. 'a' → logprob: -14.001306533813477
    9. '10' → logprob: -14.126306533813477
    10. ',' → logprob: -15.001306533813477

Token 170: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43919065594673157
    2. '=' → logprob: -1.0641906261444092
    3. ',' → logprob: -4.564190864562988
    4. ' ,' → logprob: -11.689190864562988
    5. '=x' → logprob: -12.939190864562988
    6. ' ' → logprob: -13.939190864562988
    7. 'x' → logprob: -14.314190864562988
    8. 's' → logprob: -14.689190864562988
    9. ',y' → logprob: -14.689190864562988
    10. '=y' → logprob: -15.064190864562988

Token 171: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00043448375072330236
    2. ' x' → logprob: -7.750434398651123
    3. '(x' → logprob: -12.500434875488281
    4. '	x' → logprob: -16.50043487548828
    5. '   ' → logprob: -18.62543487548828
    6. ' (' → logprob: -18.62543487548828
    7. '=x' → logprob: -20.00043487548828
    8. ' ' → logprob: -20.00043487548828
    9. '"x' → logprob: -20.12543487548828
    10. '[x' → logprob: -20.25043487548828

Token 172: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. '0' → logprob: -13.375001907348633
    3. '2' → logprob: -19.000001907348633
    4. '１' → logprob: -19.437501907348633
    5. 'k' → logprob: -19.562501907348633
    6. '[k' → logprob: -19.875001907348633
    7. '۱' → logprob: -20.062501907348633
    8. ')' → logprob: -20.250001907348633
    9. 'from' → logprob: -20.312501907348633
    10. '```' → logprob: -20.312501907348633

Token 173: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4740956723690033
    2. ' -' → logprob: -0.9740957021713257
    3. '-x' → logprob: -10.974095344543457
    4. ' ' → logprob: -14.474095344543457
    5. '0' → logprob: -15.474095344543457
    6. '   ' → logprob: -15.599095344543457
    7. 'x' → logprob: -15.724095344543457
    8. '1' → logprob: -16.349096298217773
    9. '−' → logprob: -16.974096298217773
    10. 'minus' → logprob: -17.099096298217773

Token 174: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002613358374219388
    2. ' x' → logprob: -8.250261306762695
    3. '0' → logprob: -16.750261306762695
    4. '	x' → logprob: -18.250261306762695
    5. ' ' → logprob: -18.875261306762695
    6. ')x' → logprob: -18.875261306762695
    7. '(x' → logprob: -19.125261306762695
    8. '{x' → logprob: -19.500261306762695
    9. '   ' → logprob: -19.687761306762695
    10. '```' → logprob: -19.875261306762695

Token 175: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '۰' → logprob: -17.625
    3. ' ' → logprob: -18.25
    4. '<|end|>' → logprob: -18.375
    5. 'x' → logprob: -18.5
    6. '০' → logprob: -19.5
    7. ')' → logprob: -19.5
    8. 'O' → logprob: -19.6875
    9. 'def' → logprob: -19.6875
    10. '```' → logprob: -20.5

Token 176: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.049110837280750275
    2. '<|end|>' → logprob: -3.1741108894348145
    3. ',' → logprob: -5.2991108894348145
    4. '<|end|>' → logprob: -7.4241108894348145
    5. ';' → logprob: -8.799110412597656
    6. '
' → logprob: -8.924110412597656
    7. ' 
' → logprob: -9.799110412597656
    8. '

' → logprob: -10.299110412597656
    9. 'x' → logprob: -10.924110412597656
    10. '#' → logprob: -10.924110412597656

Token 177: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9924687743186951
    2. ' dy' → logprob: -1.4924688339233398
    3. ' dx' → logprob: -1.7424688339233398
    4. 'dx' → logprob: -1.7424688339233398
    5. '<|end|>' → logprob: -3.36746883392334
    6. 'dy' → logprob: -4.11746883392334
    7. '<|end|>' → logprob: -6.61746883392334
    8. '_dx' → logprob: -7.61746883392334
    9. ' ,' → logprob: -7.74246883392334
    10. ' ' → logprob: -7.86746883392334

Token 178: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' (adapté à ' dy') → logprob: -0.10023190826177597
    2. ' dy' → logprob: -2.350231885910034
    3. 'dx' → logprob: -11.225232124328613
    4. '       ' → logprob: -11.725232124328613
    5. 'y' → logprob: -13.725232124328613
    6. '.dy' → logprob: -14.100232124328613
    7. ' dx' → logprob: -14.475232124328613
    8. ' ' → logprob: -14.850232124328613
    9. 'Dy' → logprob: -15.100232124328613
    10. ',' → logprob: -15.475232124328613

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.839121826691553e-05
    2. '<|end|>' → logprob: -9.500078201293945
    3. '0' → logprob: -12.750078201293945
    4. '<|end|>' → logprob: -15.625078201293945
    5. '2' → logprob: -16.000078201293945
    6. '=' → logprob: -16.125078201293945
    7. ' ' → logprob: -17.000078201293945
    8. 'x' → logprob: -17.125078201293945
    9. ',' → logprob: -17.375078201293945
    10. 'dx' → logprob: -18.250078201293945

Token 180: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.386884480714798
    2. '=' → logprob: -1.1368844509124756
    3. '<|end|>' → logprob: -11.886884689331055
    4. ' ' → logprob: -12.136884689331055
    5. ' =
' → logprob: -15.011884689331055
    6. ')' → logprob: -15.136884689331055
    7. ',' → logprob: -15.386884689331055
    8. '=
' → logprob: -16.386884689331055
    9. '<|end|>' → logprob: -16.386884689331055
    10. ' =)' → logprob: -16.636884689331055

Token 181: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.02324605919420719
    2. 'y' → logprob: -3.7732460498809814
    3. '<|end|>' → logprob: -15.398245811462402
    4. '	y' → logprob: -15.648245811462402
    5. '(y' → logprob: -16.02324676513672
    6. ')y' → logprob: -17.27324676513672
    7. '0' → logprob: -18.39824676513672
    8. '1' → logprob: -19.52324676513672
    9. '       ' → logprob: -19.52324676513672
    10. ''y' → logprob: -19.64824676513672

Token 182: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5237149596214294
    2. '1' → logprob: -0.8987149596214294
    3. ' ' → logprob: -8.273715019226074
    4. '-' → logprob: -8.523715019226074
    5. '2' → logprob: -9.148715019226074
    6. ' -' → logprob: -10.648715019226074
    7. '```' → logprob: -12.648715019226074
    8. '<|end|>' → logprob: -13.898715019226074
    9. ' y' → logprob: -14.711215019226074
    10. '   ' → logprob: -14.836215019226074

Token 183: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.39579248428344727
    2. '-' → logprob: -1.1457924842834473
    3. '<|end|>' → logprob: -4.770792484283447
    4. ' ' → logprob: -8.145792007446289
    5. '=' → logprob: -9.895792007446289
    6. ')' → logprob: -10.770792007446289
    7. '<|end|>' → logprob: -11.520792007446289
    8. '#' → logprob: -12.270792007446289
    9. '0' → logprob: -12.270792007446289
    10. ' =' → logprob: -12.895792007446289

Token 184: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.01816738210618496
    2. ' y' → logprob: -4.018167495727539
    3. '<|end|>' → logprob: -11.518167495727539
    4. '0' → logprob: -11.893167495727539
    5. '	y' → logprob: -15.268167495727539
    6. ')y' → logprob: -15.393167495727539
    7. '(y' → logprob: -16.76816749572754
    8. 'dy' → logprob: -16.89316749572754
    9. ' ' → logprob: -17.01816749572754
    10. 'x' → logprob: -17.01816749572754

Token 185: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.625001907348633
    3. '1' → logprob: -15.750001907348633
    4. 'o' → logprob: -17.687501907348633
    5. '-' → logprob: -17.937501907348633
    6. '<|end|>' → logprob: -17.937501907348633
    7. '۰' → logprob: -18.187501907348633
    8. 'k' → logprob: -18.250001907348633
    9. '```' → logprob: -18.750001907348633
    10. '   ' → logprob: -18.875001907348633

Token 186: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1151098906993866
    2. '
' → logprob: -2.240109920501709
    3. '        
' → logprob: -6.990109920501709
    4. ',' → logprob: -8.24010944366455
    5. '  
' → logprob: -8.36510944366455
    6. '   ' → logprob: -8.49010944366455
    7. 'dx' → logprob: -9.24010944366455
    8. '
' → logprob: -9.36510944366455
    9. '<|end|>' → logprob: -9.49010944366455
    10. ',
' → logprob: -9.61510944366455

Token 187: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007767513394355774
    2. '
' → logprob: -4.882767677307129
    3. 'dx' → logprob: -10.382767677307129
    4. ',' → logprob: -10.507767677307129
    5. ' dx' → logprob: -10.507767677307129
    6. '        
' → logprob: -10.507767677307129
    7. '   ' → logprob: -11.132767677307129
    8. '<|end|>' → logprob: -11.507767677307129
    9. ' ' → logprob: -12.132767677307129
    10. '
' → logprob: -12.632767677307129

Token 188: ' dx' (ID: 29472)
  Prédit: ' dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.23853826522827148
    2. 'dx' (adapté à ' dx') → logprob: -1.8635382652282715
    3. '       ' → logprob: -2.8635382652282715
    4. '(dx' → logprob: -11.48853874206543
    5. '_dx' → logprob: -11.86353874206543
    6. ' ' → logprob: -12.11353874206543
    7. '   ' → logprob: -12.73853874206543
    8. '
' → logprob: -13.36353874206543
    9. '.dx' → logprob: -13.86353874206543
    10. 'Dx' → logprob: -14.73853874206543

Token 189: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -12.87500286102295
    3. '1' → logprob: -15.12500286102295
    4. '0' → logprob: -15.87500286102295
    5. '```' → logprob: -16.000003814697266
    6. ' =' → logprob: -16.500003814697266
    7. '=' → logprob: -16.750003814697266
    8. '   ' → logprob: -17.250003814697266
    9. ',' → logprob: -17.500003814697266
    10. 'dx' → logprob: -19.187503814697266

Token 190: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08894665539264679
    2. '=' → logprob: -2.463946580886841
    3. ' ' → logprob: -12.588946342468262
    4. '<|end|>' → logprob: -12.838946342468262
    5. ' =
' → logprob: -14.713946342468262
    6. ',' → logprob: -15.213946342468262
    7. 'x' → logprob: -16.088947296142578
    8. '0' → logprob: -16.963947296142578
    9. '＝' → logprob: -17.088947296142578
    10. ')' → logprob: -17.088947296142578

Token 191: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16022655367851257
    2. ' x' → logprob: -1.910226583480835
    3. '(x' → logprob: -14.035226821899414
    4. '       ' → logprob: -14.160226821899414
    5. '	x' → logprob: -15.035226821899414
    6. '>x' → logprob: -16.285226821899414
    7. '   ' → logprob: -16.660226821899414
    8. '        ' → logprob: -16.910226821899414
    9. '$x' → logprob: -17.035226821899414
    10. '<|end|>' → logprob: -17.535226821899414

Token 192: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008127244072966278
    2. '1' → logprob: -7.125812530517578
    3. '0' → logprob: -12.500812530517578
    4. ' ' → logprob: -12.750812530517578
    5. '```' → logprob: -13.875812530517578
    6. ' x' → logprob: -15.875812530517578
    7. 'x' → logprob: -16.188312530517578
    8. '   ' → logprob: -16.250812530517578
    9. ' -' → logprob: -16.688312530517578
    10. '[' → logprob: -17.063312530517578

Token 193: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.023255029693245888
    2. '-' → logprob: -3.7732551097869873
    3. ' ' → logprob: -12.273255348205566
    4. '<|end|>' → logprob: -13.273255348205566
    5. '1' → logprob: -14.898255348205566
    6. 'x' → logprob: -15.148255348205566
    7. ',' → logprob: -15.273255348205566
    8. '   ' → logprob: -15.273255348205566
    9. '−' → logprob: -15.398255348205566
    10. '[' → logprob: -15.398255348205566

Token 194: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00317783304490149
    2. ' x' → logprob: -5.753177642822266
    3. '(x' → logprob: -16.003177642822266
    4. '	x' → logprob: -17.753177642822266
    5. '<|end|>' → logprob: -18.253177642822266
    6. ')x' → logprob: -18.503177642822266
    7. '0' → logprob: -18.753177642822266
    8. '"x' → logprob: -19.003177642822266
    9. '$x' → logprob: -19.128177642822266
    10. ' ' → logprob: -19.378177642822266

Token 195: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. 'x' → logprob: -14.000000953674316
    3. ' ' → logprob: -16.000001907348633
    4. '0' → logprob: -16.875001907348633
    5. '۱' → logprob: -17.250001907348633
    6. ' x' → logprob: -17.687501907348633
    7. '<|end|>' → logprob: -17.750001907348633
    8. 'y' → logprob: -17.812501907348633
    9. '_' → logprob: -18.312501907348633
    10. '```' → logprob: -18.312501907348633

Token 196: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006151323672384024
    2. '       ' → logprob: -5.25615119934082
    3. '
' → logprob: -7.63115119934082
    4. '<|end|>' → logprob: -8.13115119934082
    5. ' dy' → logprob: -9.13115119934082
    6. '' → logprob: -11.75615119934082
    7. 'dy' → logprob: -12.00615119934082
    8. '        ' → logprob: -12.50615119934082
    9. ' 
' → logprob: -12.75615119934082
    10. '   ' → logprob: -13.38115119934082

Token 197: '       ' (ID: 309)
  Prédit: ' dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.02538871578872204
    2. 'dy' → logprob: -3.775388717651367
    3. '       ' → logprob: -6.775388717651367
    4. '<|end|>' → logprob: -7.025388717651367
    5. ' ' → logprob: -9.900388717651367
    6. 'Dy' → logprob: -10.900388717651367
    7. '
' → logprob: -11.525388717651367
    8. ',' → logprob: -12.025388717651367
    9. '   ' → logprob: -12.025388717651367
    10. ' Dy' → logprob: -12.150388717651367

Token 198: ' dy' (ID: 11996)
  Prédit: ' dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.1269282102584839
    2. 'dy' (adapté à ' dy') → logprob: -2.1269283294677734
    3. '   ' → logprob: -17.251928329467773
    4. 'y' → logprob: -17.376928329467773
    5. '.dy' → logprob: -17.751928329467773
    6. ' y' → logprob: -18.001928329467773
    7. ' ' → logprob: -18.126928329467773
    8. '```' → logprob: -18.251928329467773
    9. '       ' → logprob: -18.376928329467773
    10. 'Dy' → logprob: -18.376928329467773

Token 199: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9027791495318525e-05
    2. '_' → logprob: -11.250019073486328
    3. ' ' → logprob: -12.375019073486328
    4. '=' → logprob: -14.000019073486328
    5. '1' → logprob: -14.750019073486328
    6. '₂' → logprob: -15.625019073486328
    7. '```' → logprob: -15.875019073486328
    8. ' =' → logprob: -15.875019073486328
    9. '-' → logprob: -17.125019073486328
    10. '[' → logprob: -17.750019073486328

Token 200: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048633918166160583
    2. ' =' → logprob: -3.0486338138580322
    3. '<|end|>' → logprob: -10.048633575439453
    4. ' ' → logprob: -13.673633575439453
    5. ')' → logprob: -13.798633575439453
    6. '=}' → logprob: -15.173633575439453
    7. ' =)' → logprob: -15.923633575439453
    8. '<|end|>' → logprob: -16.048633575439453
    9. 's' → logprob: -16.173633575439453
    10. '#' → logprob: -16.173633575439453

Token 201: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.07889033854007721
    2. 'y' → logprob: -2.578890323638916
    3. '	y' → logprob: -15.703890800476074
    4. ' ' → logprob: -16.078889846801758
    5. '(y' → logprob: -16.328889846801758
    6. '   ' → logprob: -16.328889846801758
    7. '  ' → logprob: -17.828889846801758
    8. 'dy' → logprob: -18.328889846801758
    9. '0' → logprob: -18.453889846801758
    10. '    ' → logprob: -18.828889846801758

Token 202: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028917749878019094
    2. '2' → logprob: -6.002891540527344
    3. ' ' → logprob: -8.877891540527344
    4. '0' → logprob: -9.002891540527344
    5. '-' → logprob: -9.252891540527344
    6. '<|end|>' → logprob: -9.877891540527344
    7. ' -' → logprob: -12.627891540527344
    8. '```' → logprob: -14.127891540527344
    9. '<|end|>' → logprob: -14.127891540527344
    10. '{-#' → logprob: -15.877891540527344

Token 203: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.034037988632917404
    2. ' -' → logprob: -3.5340380668640137
    3. '<|end|>' → logprob: -5.534038066864014
    4. '=' → logprob: -9.409037590026855
    5. ' ' → logprob: -9.659037590026855
    6. ')' → logprob: -10.034037590026855
    7. '```' → logprob: -10.159037590026855
    8. '#' → logprob: -10.534037590026855
    9. '0' → logprob: -11.034037590026855
    10. '1' → logprob: -11.784037590026855

Token 204: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3133188486099243
    2. ' y' → logprob: -1.3133188486099243
    3. '1' → logprob: -10.063319206237793
    4. 'dy' → logprob: -12.188319206237793
    5. ' dy' → logprob: -12.813319206237793
    6. '0' → logprob: -13.063319206237793
    7. ')y' → logprob: -13.313319206237793
    8. '	y' → logprob: -13.813319206237793
    9. ')' → logprob: -14.563319206237793
    10. 'yll' → logprob: -14.688319206237793

Token 205: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007135047344490886
    2. '0' → logprob: -7.250713348388672
    3. ' ' → logprob: -13.000713348388672
    4. '-' → logprob: -14.000713348388672
    5. '<|end|>' → logprob: -15.500713348388672
    6. '```' → logprob: -15.875713348388672
    7. 'y' → logprob: -16.250713348388672
    8. '2' → logprob: -17.750713348388672
    9. 'dy' → logprob: -17.750713348388672
    10. ' y' → logprob: -17.875713348388672

Token 206: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13197818398475647
    2. '   ' → logprob: -2.8819782733917236
    3. '
' → logprob: -2.8819782733917236
    4. ',' → logprob: -5.3819780349731445
    5. ')' → logprob: -6.0069780349731445
    6. '<|end|>' → logprob: -6.5069780349731445
    7. '\n' → logprob: -6.8819780349731445
    8. '        
' → logprob: -7.6319780349731445
    9. ',
' → logprob: -8.131978034973145
    10. '    
' → logprob: -8.131978034973145

Token 207: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011339050251990557
    2. '
' → logprob: -7.126133918762207
    3. ',' → logprob: -9.376133918762207
    4. '        
' → logprob: -9.376133918762207
    5. '   ' → logprob: -9.626133918762207
    6. '  
' → logprob: -10.876133918762207
    7. ' 
' → logprob: -11.376133918762207
    8. ')' → logprob: -11.501133918762207
    9. '<|end|>' → logprob: -11.751133918762207
    10. '        ' → logprob: -12.251133918762207

Token 208: ' cross' (ID: 8088)
  Prédit: ' cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cross' → logprob: -0.2594582736492157
    2. 'cross' (adapté à ' cross') → logprob: -2.009458303451538
    3. ' z' → logprob: -3.009458303451538
    4. '       ' → logprob: -3.884458303451538
    5. 'z' → logprob: -4.384458065032959
    6. ' prod' → logprob: -5.509458065032959
    7. ' cp' → logprob: -5.759458065032959
    8. 'prod' → logprob: -6.259458065032959
    9. 'cp' → logprob: -6.509458065032959
    10. ' c' → logprob: -8.509458541870117

Token 209: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10585428774356842
    2. '=' → logprob: -2.3558542728424072
    3. '_product' → logprob: -5.605854511260986
    4. '_prod' → logprob: -6.855854511260986
    5. 'product' → logprob: -8.105854034423828
    6. 'prod' → logprob: -8.105854034423828
    7. '_products' → logprob: -9.105854034423828
    8. '_' → logprob: -9.855854034423828
    9. '_pro' → logprob: -10.230854034423828
    10. ' product' → logprob: -10.980854034423828

Token 210: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0011888028820976615
    2. ' dx' → logprob: -6.7511887550354
    3. '   ' → logprob: -11.376189231872559
    4. '(dx' → logprob: -12.001189231872559
    5. '_dx' → logprob: -14.751189231872559
    6. ' ' → logprob: -15.376189231872559
    7. 'dy' → logprob: -16.376188278198242
    8. '	d' → logprob: -16.751188278198242
    9. '       ' → logprob: -16.876188278198242
    10. 'd' → logprob: -16.876188278198242

Token 211: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '```' → logprob: -17.0
    3. '2' → logprob: -17.375
    4. ' ' → logprob: -17.75
    5. '１' → logprob: -18.25
    6. '۱' → logprob: -19.5625
    7. '' → logprob: -19.6875
    8. '_' → logprob: -19.875
    9. '১' → logprob: -19.9375
    10. '१' → logprob: -20.5

Token 212: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.575939416885376
    2. '*' → logprob: -0.825939416885376
    3. '**' → logprob: -17.700939178466797
    4. ' ' → logprob: -19.325939178466797
    5. '*d' → logprob: -19.575939178466797
    6. '*y' → logprob: -19.575939178466797
    7. '   ' → logprob: -20.450939178466797
    8. '```' → logprob: -20.825939178466797
    9. ' **' → logprob: -20.950939178466797
    10. ' ' → logprob: -21.200939178466797

Token 213: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0006271334132179618
    2. ' dy' → logprob: -7.375627040863037
    3. '.dy' → logprob: -14.625627517700195
    4. 'd' → logprob: -16.000627517700195
    5. '-d' → logprob: -17.125627517700195
    6. '	d' → logprob: -17.750627517700195
    7. 'Dy' → logprob: -17.750627517700195
    8. 'dym' → logprob: -18.625627517700195
    9. '```' → logprob: -19.125627517700195
    10. '
' → logprob: -19.875627517700195

Token 214: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '۲' → logprob: -19.375
    3. '```' → logprob: -19.375
    4. ' ' → logprob: -19.625
    5. '₂' → logprob: -19.75
    6. '২' → logprob: -20.0
    7. '２' → logprob: -20.0
    8. 'def' → logprob: -20.125
    9. '<|end|>' → logprob: -20.375
    10. 'dx' → logprob: -21.0

Token 215: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4740784466266632
    2. '-' → logprob: -0.9740784168243408
    3. ' ' → logprob: -14.474078178405762
    4. ' ' → logprob: -15.099078178405762
    5. '-
' → logprob: -15.474078178405762
    6. ' -
' → logprob: -15.849078178405762
    7. '-d' → logprob: -16.224079132080078
    8. '−' → logprob: -16.724079132080078
    9. '```' → logprob: -17.849079132080078
    10. '   ' → logprob: -17.974079132080078

Token 216: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.023254098370671272
    2. ' dy' → logprob: -3.773254156112671
    3. 'dx' → logprob: -11.77325439453125
    4. '   ' → logprob: -15.52325439453125
    5. '	d' → logprob: -15.52325439453125
    6. '.dy' → logprob: -15.64825439453125
    7. ' dx' → logprob: -16.39825439453125
    8. 'd' → logprob: -16.39825439453125
    9. ' ' → logprob: -16.77325439453125
    10. 'dym' → logprob: -16.89825439453125

Token 217: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. 'dx' → logprob: -15.75
    3. 'dy' → logprob: -16.75
    4. 'x' → logprob: -17.0
    5. ' ' → logprob: -17.625
    6. '```' → logprob: -18.25
    7. '[' → logprob: -18.5
    8. '2' → logprob: -18.6875
    9. 'import' → logprob: -19.625
    10. '１' → logprob: -19.6875

Token 218: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.474091112613678
    2. '*' → logprob: -0.974091112613678
    3. '<|end|>' → logprob: -11.724091529846191
    4. '**' → logprob: -12.349091529846191
    5. '   ' → logprob: -15.099091529846191
    6. '```' → logprob: -15.724091529846191
    7. ' ' → logprob: -15.849091529846191
    8. '*object' → logprob: -16.099090576171875
    9. 'x' → logprob: -16.099090576171875
    10. '<|end|>' → logprob: -16.349090576171875

Token 219: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.00012439649435691535
    2. ' dx' → logprob: -9.000123977661133
    3. '_dx' → logprob: -14.375123977661133
    4. '(dx' → logprob: -15.750123977661133
    5. '.dx' → logprob: -16.000123977661133
    6. 'Dx' → logprob: -16.625123977661133
    7. '<|end|>' → logprob: -18.375123977661133
    8. 'DX' → logprob: -18.875123977661133
    9. '
' → logprob: -20.000123977661133
    10. 'd' → logprob: -20.125123977661133

Token 220: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.020557070150971413
    2. '1' → logprob: -3.895557165145874
    3. '<|end|>' → logprob: -12.270557403564453
    4. 'x' → logprob: -13.020557403564453
    5. 'cross' → logprob: -13.020557403564453
    6. 'dx' → logprob: -13.895557403564453
    7. ' cross' → logprob: -14.020557403564453
    8. ' ' → logprob: -14.145557403564453
    9. '```' → logprob: -14.145557403564453
    10. '0' → logprob: -14.145557403564453

Token 221: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04248176887631416
    2. '<|end|>' → logprob: -3.2924816608428955
    3. ')' → logprob: -6.417481899261475
    4. '<|end|>' → logprob: -6.667481899261475
    5. ',' → logprob: -7.042481899261475
    6. '
' → logprob: -8.417481422424316
    7. '   ' → logprob: -8.792481422424316
    8. ' ' → logprob: -9.792481422424316
    9. ':' → logprob: -9.917481422424316
    10. ' if' → logprob: -10.417481422424316

Token 222: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07035563141107559
    2. '<|end|>' → logprob: -3.0703556537628174
    3. '
' → logprob: -3.9453556537628174
    4. ')' → logprob: -7.445355415344238
    5. ',' → logprob: -7.695355415344238
    6. '<|end|>' → logprob: -7.945355415344238
    7. '#' → logprob: -8.695355415344238
    8. '   ' → logprob: -8.945355415344238
    9. ' if' → logprob: -9.445355415344238
    10. '        
' → logprob: -9.570355415344238

Token 223: ' pro' (ID: 440)
  Prédit: ' pro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pro' → logprob: -0.10278289020061493
    2. 'pro' (adapté à ' pro') → logprob: -2.727782964706421
    3. ' if' → logprob: -3.602782964706421
    4. '       ' → logprob: -5.852782726287842
    5. 'if' → logprob: -6.227782726287842
    6. '   ' → logprob: -8.727783203125
    7. '	pro' → logprob: -10.852783203125
    8. ' ' → logprob: -11.477783203125
    9. '    ' → logprob: -11.852783203125
    10. '        ' → logprob: -12.602783203125

Token 224: 'ds' (ID: 8559)
  Prédit: 'ds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ds' → logprob: -2.117345684382599e-05
    2. 'd' → logprob: -10.875020980834961
    3. 's' → logprob: -14.375020980834961
    4. 'cs' → logprob: -14.625020980834961
    5. 'dx' → logprob: -15.250020980834961
    6. 'duct' → logprob: -15.375020980834961
    7. '_ds' → logprob: -15.875020980834961
    8. 'dds' → logprob: -16.12502098083496
    9. 'dc' → logprob: -16.75002098083496
    10. 'dd' → logprob: -16.75002098083496

Token 225: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0011818927014246583
    2. '.' → logprob: -6.7511820793151855
    3. '.app' → logprob: -11.876181602478027
    4. '.ap' → logprob: -13.001181602478027
    5. 'append' → logprob: -13.376181602478027
    6. ' .' → logprob: -15.376181602478027
    7. '.push' → logprob: -15.501181602478027
    8. '=' → logprob: -15.751181602478027
    9. '.Append' → logprob: -15.876181602478027
    10. '.=' → logprob: -17.001182556152344

Token 226: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -4.727905979962088e-05
    2. '(math' → logprob: -10.37504768371582
    3. '(' → logprob: -11.37504768371582
    4. 'cross' → logprob: -12.62504768371582
    5. '((' → logprob: -15.00004768371582
    6. '(abs' → logprob: -15.12504768371582
    7. '(sign' → logprob: -15.37504768371582
    8. ' cross' → logprob: -16.37504768371582
    9. '(Math' → logprob: -16.62504768371582
    10. '	c' → logprob: -16.75004768371582

Token 227: 'ross' (ID: 2838)
  Prédit: 'ross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ross' → logprob: -9.088346359931165e-07
    2. 'cross' → logprob: -15.000000953674316
    3. ' ross' → logprob: -15.125000953674316
    4. '[' → logprob: -16.625
    5. 'lass' → logprob: -16.75
    6. 'oss' → logprob: -16.875
    7. '#' → logprob: -16.875
    8. 'r' → logprob: -17.375
    9. '>' → logprob: -17.75
    10. ')' → logprob: -17.75

Token 228: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019094774033874273
    2. '       ' → logprob: -7.251909255981445
    3. ' )' → logprob: -7.376909255981445
    4. '<|end|>' → logprob: -8.501909255981445
    5. '   ' → logprob: -8.626909255981445
    6. ')
' → logprob: -9.126909255981445
    7. ')return' → logprob: -10.876909255981445
    8. ')>' → logprob: -11.001909255981445
    9. '
' → logprob: -11.376909255981445
    10. '<|end|>' → logprob: -11.751909255981445

Token 229: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8162263631820679
    2. '   ' → logprob: -0.8162263631820679
    3. '  
' → logprob: -3.1912264823913574
    4. ' 
' → logprob: -3.3162264823913574
    5. '    
' → logprob: -4.191226482391357
    6. '<|end|>' → logprob: -4.441226482391357
    7. '       ' → logprob: -5.691226482391357
    8. '   
' → logprob: -6.066226482391357
    9. ' ' → logprob: -6.816226482391357
    10. '  ' → logprob: -6.941226482391357

Token 230: ' pro' (ID: 440)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2353328913450241
    2. 'sign' → logprob: -2.61033296585083
    3. ' signs' → logprob: -2.73533296585083
    4. 'pos' → logprob: -4.36033296585083
    5. ' pos' → logprob: -4.36033296585083
    6. ' sign' → logprob: -4.36033296585083
    7. ' all' → logprob: -4.86033296585083
    8. ' positive' → logprob: -4.86033296585083
    9. 'positive' → logprob: -5.48533296585083
    10. 'all' → logprob: -5.61033296585083

Token 231: 'ds' (ID: 8559)
  Prédit: 'ds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ds' → logprob: -9.014684110297821e-06
    2. 'd' → logprob: -11.750008583068848
    3. '_ds' → logprob: -14.750008583068848
    4. '
' → logprob: -16.250009536743164
    5. '   ' → logprob: -16.375009536743164
    6. 'dsl' → logprob: -16.500009536743164
    7. 's' → logprob: -16.625009536743164
    8. '	ds' → logprob: -16.625009536743164
    9. ' ds' → logprob: -17.000009536743164
    10. 'ods' → logprob: -17.250009536743164

Token 232: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 233: ' sorted' (ID: 20099)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.19618366658687592
    2. '[list' → logprob: -2.196183681488037
    3. 'list' → logprob: -2.946183681488037
    4. 'set' → logprob: -4.696183681488037
    5. '[p' → logprob: -6.446183681488037
    6. ' [' → logprob: -6.821183681488037
    7. '[len' → logprob: -6.946183681488037
    8. 'sorted' → logprob: -8.196183204650879
    9. '[s' → logprob: -8.321183204650879
    10. '[max' → logprob: -9.071183204650879

Token 234: '(pro' (ID: 7092)
  Prédit: '(pro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pro' → logprob: -0.0034495643340051174
    2. '(set' → logprob: -6.253449440002441
    3. '([' → logprob: -6.503449440002441
    4. '(list' → logprob: -11.503449440002441
    5. 'pro' → logprob: -12.128449440002441
    6. '(p' → logprob: -12.878449440002441
    7. '(abs' → logprob: -13.878449440002441
    8. '([(' → logprob: -14.503449440002441
    9. '(filter' → logprob: -15.003449440002441
    10. '(' → logprob: -15.003449440002441

Token 235: 'ds' (ID: 8559)
  Prédit: 'ds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ds' → logprob: -0.00019209683523513377
    2. 'pro' → logprob: -9.500191688537598
    3. 'ods' → logprob: -10.375191688537598
    4. 'ads' → logprob: -10.625191688537598
    5. '[' → logprob: -10.625191688537598
    6. '(pro' → logprob: -11.000191688537598
    7. 'uds' → logprob: -11.500191688537598
    8. ' pro' → logprob: -13.000191688537598
    9. 'eds' → logprob: -13.250191688537598
    10. 'd' → logprob: -13.500191688537598

Token 236: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016244759317487478
    2. ')
' → logprob: -6.876624584197998
    3. ',' → logprob: -8.00162410736084
    4. '<|end|>' → logprob: -8.75162410736084
    5. ')#' → logprob: -10.50162410736084
    6. '[::-' → logprob: -10.62662410736084
    7. ')return' → logprob: -11.62662410736084
    8. ',key' → logprob: -12.12662410736084
    9. ' )' → logprob: -12.25162410736084
    10. '
' → logprob: -12.87662410736084

Token 237: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20468303561210632
    2. 'if' → logprob: -1.8296830654144287
    3. ' if' → logprob: -3.8296830654144287
    4. 'for' → logprob: -7.32968282699585
    5. 'first' → logprob: -7.57968282699585
    6. ' for' → logprob: -7.95468282699585
    7. 'min' → logprob: -8.204683303833008
    8. 'def' → logprob: -8.579683303833008
    9. '#' → logprob: -8.579683303833008
    10. ' first' → logprob: -8.954683303833008

Token 238: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02683696337044239
    2. '   ' → logprob: -4.52683687210083
    3. ' if' → logprob: -4.77683687210083
    4. 'return' (adapté à ' return') → logprob: -5.02683687210083
    5. '[' → logprob: -8.026837348937988
    6. ' return' → logprob: -8.526837348937988
    7. '0' → logprob: -9.276837348937988
    8. '
' → logprob: -10.901837348937988
    9. '#' → logprob: -11.026837348937988
    10. 'for' → logprob: -12.026837348937988

Token 239: ' pro' (ID: 440)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.08228334039449692
    2. ' pro' → logprob: -2.5822832584381104
    3. 'not' → logprob: -6.4572834968566895
    4. ' not' → logprob: -6.9572834968566895
    5. '(pro' → logprob: -7.3322834968566895
    6. 'all' → logprob: -8.957283020019531
    7. ' ' → logprob: -10.582283020019531
    8. ' all' → logprob: -10.957283020019531
    9. '0' → logprob: -11.082283020019531
    10. '(' → logprob: -11.082283020019531

Token 240: 'ds' (ID: 8559)
  Prédit: 'ds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ds' → logprob: -1.4021237802808173e-05
    2. 'd' → logprob: -11.250014305114746
    3. '[' → logprob: -15.250014305114746
    4. 'ps' → logprob: -15.375014305114746
    5. 's' → logprob: -15.500014305114746
    6. 'ads' → logprob: -16.62501335144043
    7. 'pro' → logprob: -16.87501335144043
    8. '
' → logprob: -17.25001335144043
    9. 'cts' → logprob: -17.75001335144043
    10. 'duct' → logprob: -18.00001335144043

Token 241: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.3213025744771585e-05
    2. '[-' → logprob: -10.625033378601074
    3. '0' → logprob: -11.750033378601074
    4. '
' → logprob: -15.250033378601074
    5. ' ' → logprob: -15.375033378601074
    6. '#' → logprob: -16.125032424926758
    7. '[
' → logprob: -16.250032424926758
    8. '[len' → logprob: -16.750032424926758
    9. ' [' → logprob: -16.875032424926758
    10. '```' → logprob: -17.125032424926758

Token 242: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008604847243987024
    2. '-' → logprob: -7.375860691070557
    3. ' ' → logprob: -8.500860214233398
    4. ':' → logprob: -11.375860214233398
    5. '
' → logprob: -11.750860214233398
    6. '1' → logprob: -12.813360214233398
    7. '::-' → logprob: -13.125860214233398
    8. ' -' → logprob: -13.563360214233398
    9. '   ' → logprob: -13.875860214233398
    10. '```' → logprob: -14.375860214233398

Token 243: ']' (ID: 60)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.23884490132331848
    2. ' >=' → logprob: -1.613844871520996
    3. '>' → logprob: -4.363844871520996
    4. ' >' → logprob: -8.238844871520996
    5. '*' → logprob: -8.738844871520996
    6. ')' → logprob: -9.238844871520996
    7. ')>=' → logprob: -10.113844871520996
    8. ']>=' → logprob: -10.738844871520996
    9. ' *' → logprob: -10.988844871520996
    10. ']' → logprob: -12.988844871520996

Token 244: ' *' (ID: 425)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.015541194938123226
    2. '*' → logprob: -4.515541076660156
    3. ' >=' → logprob: -5.515541076660156
    4. '>' → logprob: -7.765541076660156
    5. ' *' → logprob: -11.515541076660156
    6. '≥' → logprob: -12.015541076660156
    7. '<' → logprob: -12.265541076660156
    8. '0' → logprob: -12.640541076660156
    9. ']>=' → logprob: -13.265541076660156
    10. '==' → logprob: -13.265541076660156

Token 245: ' pro' (ID: 440)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.2014446258544922
    2. ' pro' → logprob: -1.7014446258544922
    3. '	pro' → logprob: -11.076444625854492
    4. '(pro' → logprob: -12.326444625854492
    5. '   ' → logprob: -12.451444625854492
    6. ' ' → logprob: -13.076444625854492
    7. '  ' → logprob: -13.951444625854492
    8. '0' → logprob: -13.951444625854492
    9. '1' → logprob: -14.326444625854492
    10. '_pro' → logprob: -14.576444625854492

Token 246: 'ds' (ID: 8559)
  Prédit: 'ds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ds' → logprob: -0.004683834034949541
    2. 'ods' → logprob: -5.379683971405029
    3. 's' → logprob: -10.629683494567871
    4. 'd' → logprob: -11.879683494567871
    5. '[' → logprob: -12.004683494567871
    6. 'ads' → logprob: -12.504683494567871
    7. '2' → logprob: -12.629683494567871
    8. '=' → logprob: -12.879683494567871
    9. 'uds' → logprob: -13.129683494567871
    10. '{' → logprob: -13.504683494567871

Token 247: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0007252985378727317
    2. '-' → logprob: -7.375725269317627
    3. '[' → logprob: -9.250725746154785
    4. '1' → logprob: -13.375725746154785
    5. '```' → logprob: -14.500725746154785
    6. '2' → logprob: -15.125725746154785
    7. '>' → logprob: -16.75072479248047
    8. ' [-' → logprob: -17.00072479248047
    9. '[
' → logprob: -17.37572479248047
    10. '{-' → logprob: -17.50072479248047

Token 248: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. ']' → logprob: -17.75
    4. '0' → logprob: -18.0
    5. '１' → logprob: -18.75
    6. '```' → logprob: -18.875
    7. '۱' → logprob: -19.125
    8. '2' → logprob: -19.25
    9. '()]' → logprob: -19.75
    10. '(' → logprob: -19.875

Token 249: ']' (ID: 60)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.04862949252128601
    2. '>' → logprob: -3.7986295223236084
    3. ' >=' → logprob: -3.7986295223236084
    4. '<=' → logprob: -6.173629283905029
    5. ' >' → logprob: -8.298629760742188
    6. ')>=' → logprob: -8.673629760742188
    7. ')' → logprob: -9.298629760742188
    8. ' <=' → logprob: -10.423629760742188
    9. ']>=' → logprob: -11.173629760742188
    10. '=' → logprob: -12.048629760742188

Token 250: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.0047437530010938644
    2. '>' → logprob: -5.379743576049805
    3. ' >=' → logprob: -9.254743576049805
    4. '≥' → logprob: -11.504743576049805
    5. ')>=' → logprob: -11.504743576049805
    6. ']>=' → logprob: -12.504743576049805
    7. '=' → logprob: -14.004743576049805
    8. '=>' → logprob: -14.629743576049805
    9. '0' → logprob: -14.629743576049805
    10. '<=' → logprob: -14.754743576049805

Token 251: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.584861744660884e-05
    2. ' ' → logprob: -10.000045776367188
    3. '=' → logprob: -15.375045776367188
    4. '۰' → logprob: -17.000045776367188
    5. '```' → logprob: -17.250045776367188
    6. '
' → logprob: -18.250045776367188
    7. '000' → logprob: -18.375045776367188
    8. '０' → logprob: -19.000045776367188
    9. '

' → logprob: -19.000045776367188
    10. '   ' → logprob: -19.000045776367188

Token 252: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '000' → logprob: -18.500001907348633
    4. '```' → logprob: -18.750001907348633
    5. '-' → logprob: -19.125001907348633
    6. '۰' → logprob: -19.375001907348633
    7. '00' → logprob: -19.375001907348633
    8. '   ' → logprob: -20.250001907348633
    9. '０' → logprob: -20.625001907348633
    10. '1' → logprob: -20.875001907348633

Token 253: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.017555780708789825
    2. 'def' → logprob: -5.0175557136535645
    3. '

' → logprob: -5.1425557136535645
    4. '<|end|>' → logprob: -5.3925557136535645
    5. '#' → logprob: -9.017556190490723
    6. '\n' → logprob: -9.392556190490723
    7. '
' → logprob: -10.267556190490723
    8. '  
' → logprob: -10.392556190490723
    9. 'n' → logprob: -10.517556190490723
    10. 'if' → logprob: -11.142556190490723

Token 254: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3086199164390564
    2. 'if' → logprob: -2.058619976043701
    3. 'n' → logprob: -2.558619976043701
    4. 'N' → logprob: -2.933619976043701
    5. 'for' → logprob: -5.558619976043701
    6. '#' → logprob: -5.933619976043701
    7. '
' → logprob: -8.183619499206543
    8. 'T' → logprob: -9.058619499206543
    9. '\' → logprob: -9.433619499206543
    10. ' 
' → logprob: -9.933619499206543

Token 255: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016068974509835243
    2. '=' → logprob: -4.141068935394287
    3. '=int' → logprob: -10.641069412231445
    4. ' ' → logprob: -11.766069412231445
    5. ',' → logprob: -13.891069412231445
    6. '=input' → logprob: -14.016069412231445
    7. ' =
' → logprob: -14.766069412231445
    8. ')' → logprob: -15.766069412231445
    9. ' ' → logprob: -15.891069412231445
    10. '.' → logprob: -16.016069412231445

Token 256: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00407923199236393
    2. ' int' → logprob: -5.504079341888428
    3. ' ' → logprob: -14.87907886505127
    4. '(int' → logprob: -16.129079818725586
    5. '   ' → logprob: -16.504079818725586
    6. '[int' → logprob: -16.504079818725586
    7. '  ' → logprob: -16.629079818725586
    8. '	int' → logprob: -17.004079818725586
    9. '=int' → logprob: -18.879079818725586
    10. '
' → logprob: -19.504079818725586

Token 257: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.01486949436366558
    2. '(sys' → logprob: -4.264869689941406
    3. '(' → logprob: -7.514869689941406
    4. 'input' → logprob: -8.764869689941406
    5. 'sys' → logprob: -12.514869689941406
    6. ' (' → logprob: -14.639869689941406
    7. '()' → logprob: -14.764869689941406
    8. ' input' → logprob: -16.139869689941406
    9. '(
' → logprob: -16.639869689941406
    10. '=input' → logprob: -17.014869689941406

Token 258: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00026860725483857095
    2. '()' → logprob: -8.250268936157227
    3. '().' → logprob: -12.125268936157227
    4. '())
' → logprob: -13.500268936157227
    5. ' ())' → logprob: -14.750268936157227
    6. ')' → logprob: -16.250268936157227
    7. '()
' → logprob: -16.375268936157227
    8. '(' → logprob: -17.125268936157227
    9. '();)' → logprob: -17.375268936157227
    10. '())

' → logprob: -17.875268936157227

Token 259: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -3.6550729419104755e-05
    2. 'points' → logprob: -10.250036239624023
    3. ' P' → logprob: -14.750036239624023
    4. ' points' → logprob: -15.125036239624023
    5. 'polygon' → logprob: -15.625036239624023
    6. 'vertices' → logprob: -16.375036239624023
    7. 'Points' → logprob: -16.750036239624023
    8. 'pts' → logprob: -17.000036239624023
    9. '```' → logprob: -17.375036239624023
    10. 'poly' → logprob: -17.375036239624023

Token 260: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20187832415103912
    2. ' =' → logprob: -1.701878309249878
    3. '=[]' → logprob: -7.701878547668457
    4. '[]' → logprob: -12.201878547668457
    5. '=[' → logprob: -12.326878547668457
    6. '=[]
' → logprob: -13.326878547668457
    7. '[:]' → logprob: -14.451878547668457
    8. '[' → logprob: -14.576878547668457
    9. ' =[' → logprob: -15.326878547668457
    10. '[]=' → logprob: -15.451878547668457

Token 261: ' [[' (ID: 9237)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0033243417274206877
    2. '[int' → logprob: -6.503324508666992
    3. '[list' → logprob: -7.503324508666992
    4. '[]' → logprob: -7.753324508666992
    5. '[array' → logprob: -7.753324508666992
    6. '[input' → logprob: -8.753324508666992
    7. '[List' → logprob: -9.503324508666992
    8. '[str' → logprob: -10.503324508666992
    9. '[class' → logprob: -11.128324508666992
    10. '[index' → logprob: -11.378324508666992

Token 262: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.607469379901886
    2. 'float' → logprob: -1.1074693202972412
    3. '*' → logprob: -2.107469320297241
    4. 'map' → logprob: -5.98246955871582
    5. 'tuple' → logprob: -7.98246955871582
    6. ']*' → logprob: -8.35746955871582
    7. '0' → logprob: -8.98246955871582
    8. ']' → logprob: -9.73246955871582
    9. ' float' → logprob: -10.48246955871582
    10. '   ' → logprob: -12.85746955871582

Token 263: '(_)' (ID: 108255)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0007119550718925893
    2. '(i' → logprob: -7.375711917877197
    3. '(_)' → logprob: -10.125712394714355
    4. '(a' → logprob: -11.750712394714355
    5. '(s' → logprob: -11.875712394714355
    6. 'x' → logprob: -12.000712394714355
    7. '(input' → logprob: -12.125712394714355
    8. '()]' → logprob: -12.250712394714355
    9. '(token' → logprob: -12.500712394714355
    10. '(_' → logprob: -12.625712394714355

Token 264: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6776676177978516
    2. 'for' → logprob: -1.0526676177978516
    3. 'input' → logprob: -2.6776676177978516
    4. 'or' → logprob: -3.9276676177978516
    5. ' for' → logprob: -4.052667617797852
    6. '(input' → logprob: -4.177667617797852
    7. '()' → logprob: -4.427667617797852
    8. ',input' → logprob: -6.427667617797852
    9. '=input' → logprob: -6.677667617797852
    10. ' input' → logprob: -6.677667617797852

Token 265: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.046699900180101395
    2. 'input' → logprob: -4.0467000007629395
    3. ' input' → logprob: -4.5467000007629395
    4. ' in' → logprob: -5.1717000007629395
    5. ' _' → logprob: -5.4217000007629395
    6. 'x' → logprob: -5.7967000007629395
    7. 's' → logprob: -6.7967000007629395
    8. 'in' → logprob: -6.9217000007629395
    9. ' x' → logprob: -7.1717000007629395
    10. ' s' → logprob: -7.6717000007629395

Token 266: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.062004204839468
    2. 'in' → logprob: -2.8120040893554688
    3. 'input' → logprob: -10.687004089355469
    4. ' ' → logprob: -11.937004089355469
    5. '_' → logprob: -12.437004089355469
    6. 'x' → logprob: -13.437004089355469
    7. '  ' → logprob: -14.812004089355469
    8. 'i' → logprob: -14.812004089355469
    9. 's' → logprob: -15.062004089355469
    10. 'inp' → logprob: -15.812004089355469

Token 267: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.005234952084720135
    2. ' input' → logprob: -5.255234718322754
    3. 'sys' → logprob: -14.505234718322754
    4. '(input' → logprob: -15.630234718322754
    5. 'range' → logprob: -15.755234718322754
    6. 'line' → logprob: -15.755234718322754
    7. 'in' → logprob: -16.25523567199707
    8. ' sys' → logprob: -17.88023567199707
    9. ' ' → logprob: -18.00523567199707
    10. '
' → logprob: -18.25523567199707

Token 268: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: 0.0
    2. '()' → logprob: -17.75
    3. ' ().' → logprob: -18.125
    4. '.split' → logprob: -20.125
    5. '()].' → logprob: -20.75
    6. '(' → logprob: -21.75
    7. '()]' → logprob: -23.0
    8. 'split' → logprob: -23.375
    9. '.' → logprob: -24.125
    10. '.strip' → logprob: -24.25

Token 269: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00861729308962822
    2. 'strip' → logprob: -4.758617401123047
    3. 'rstrip' → logprob: -13.008617401123047
    4. ' split' → logprob: -15.008617401123047
    5. '(split' → logprob: -15.883617401123047
    6. ' strip' → logprob: -17.508617401123047
    7. 'spl' → logprob: -20.633617401123047
    8. '.split' → logprob: -20.633617401123047
    9. '(strip' → logprob: -21.508617401123047
    10. 's' → logprob: -21.633617401123047

Token 270: '()]' (ID: 59063)
  Prédit: '()]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.2014286369085312
    2. '()' → logprob: -1.7014286518096924
    3. '(' → logprob: -12.076428413391113
    4. '()],' → logprob: -12.576428413391113
    5. '()]
' → logprob: -12.701428413391113
    6. '('' → logprob: -14.701428413391113
    7. '()))' → logprob: -14.701428413391113
    8. '()}' → logprob: -14.701428413391113
    9. '()][' → logprob: -14.826428413391113
    10. '())' → logprob: -15.201428413391113

Token 271: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.27164360880851746
    2. 'for' → logprob: -1.5216436386108398
    3. ']' → logprob: -4.02164363861084
    4. '()' → logprob: -6.52164363861084
    5. ' ' → logprob: -9.52164363861084
    6. '()]' → logprob: -10.64664363861084
    7. '   ' → logprob: -11.64664363861084
    8. '	for' → logprob: -11.77164363861084
    9. ')' → logprob: -12.14664363861084
    10. ' ]' → logprob: -12.52164363861084

Token 272: ' __' (ID: 2516)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16187645494937897
    2. ' range' → logprob: -1.9118764400482178
    3. '_' → logprob: -6.411876678466797
    4. '_range' → logprob: -11.786876678466797
    5. '(range' → logprob: -13.911876678466797
    6. '	range' → logprob: -14.536876678466797
    7. ' _' → logprob: -17.036876678466797
    8. ' ' → logprob: -17.911876678466797
    9. 'i' → logprob: -18.161876678466797
    10. '   ' → logprob: -18.411876678466797

Token 273: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759613513946533
    2. 'range' → logprob: -0.8259613513946533
    3. ' in' → logprob: -11.075961112976074
    4. '(range' → logprob: -12.575961112976074
    5. 'in' → logprob: -12.950961112976074
    6. '_' → logprob: -14.950961112976074
    7. ' ' → logprob: -16.32596206665039
    8. '_range' → logprob: -16.82596206665039
    9. '	range' → logprob: -16.95096206665039
    10. 'rang' → logprob: -17.32596206665039

Token 274: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.15310683415737e-05
    2. ' range' → logprob: -10.750021934509277
    3. '(range' → logprob: -19.62502098083496
    4. 'rang' → logprob: -20.12502098083496
    5. '
' → logprob: -20.25002098083496
    6. '	range' → logprob: -20.50002098083496
    7. 'r' → logprob: -21.50002098083496
    8. ' ' → logprob: -21.62502098083496
    9. 'ran' → logprob: -21.75002098083496
    10. '   ' → logprob: -22.00002098083496

Token 275: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0011708177626132965
    2. 'N' → logprob: -6.751170635223389
    3. '(' → logprob: -14.376171112060547
    4. '(n' → logprob: -18.001171112060547
    5. '	N' → logprob: -18.251171112060547
    6. ' N' → logprob: -18.376171112060547
    7. '(
' → logprob: -18.626171112060547
    8. ' (' → logprob: -19.501171112060547
    9. '_N' → logprob: -20.001171112060547
    10. '   ' → logprob: -20.876171112060547

Token 276: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0031932818237692118
    2. ']' → logprob: -5.753193378448486
    3. ')' → logprob: -11.128192901611328
    4. '])' → logprob: -14.753192901611328
    5. '}]' → logprob: -15.628192901611328
    6. ']]' → logprob: -15.878192901611328
    7. '])]' → logprob: -16.878192901611328
    8. ')],' → logprob: -17.128192901611328
    9. ')]
' → logprob: -17.253192901611328
    10. ']
' → logprob: -17.378192901611328

Token 277: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.848420551046729e-05
    2. 'if' → logprob: -9.7500581741333
    3. 'result' → logprob: -16.750059127807617
    4. '```' → logprob: -17.000059127807617
    5. ' print' → logprob: -17.125059127807617
    6. '
' → logprob: -18.000059127807617
    7. 'answer' → logprob: -18.125059127807617
    8. '#print' → logprob: -18.375059127807617
    9. 'for' → logprob: -19.625059127807617
    10. 'pr' → logprob: -20.625059127807617

Token 278: '(' (ID: 7)
  Prédit: '(is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(is' → logprob: -0.20543494820594788
    2. '("' → logprob: -1.7054349184036255
    3. '(' → logprob: -5.830434799194336
    4. '('' → logprob: -7.580434799194336
    5. '(int' → logprob: -7.580434799194336
    6. '(bool' → logprob: -11.080434799194336
    7. 'is' → logprob: -11.205434799194336
    8. '(("' → logprob: -11.330434799194336
    9. '((' → logprob: -12.205434799194336
    10. '"is' → logprob: -12.580434799194336

Token 279: '1' (ID: 16)
  Prédit: '"is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"is' → logprob: -0.25741228461265564
    2. '"' → logprob: -1.507412314414978
    3. 'is' → logprob: -5.757412433624268
    4. ''is' → logprob: -6.257412433624268
    5. ''' → logprob: -8.63241195678711
    6. '1' → logprob: -9.25741195678711
    7. 'int' → logprob: -10.00741195678711
    8. ''int' → logprob: -10.25741195678711
    9. '("' → logprob: -11.63241195678711
    10. ' "' → logprob: -11.63241195678711

Token 280: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6932804584503174
    2. ' if' → logprob: -0.6932804584503174
    3. ')' → logprob: -9.068280220031738
    4. '*' → logprob: -12.318280220031738
    5. '   ' → logprob: -12.693280220031738
    6. '0' → logprob: -12.818280220031738
    7. '()' → logprob: -13.068280220031738
    8. '1' → logprob: -13.693280220031738
    9. ' ' → logprob: -14.068280220031738
    10. 'int' → logprob: -14.568280220031738

Token 281: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -5.836499985889532e-05
    2. ' is' → logprob: -9.7500581741333
    3. '(is' → logprob: -18.625059127807617
    4. ')is' → logprob: -19.750059127807617
    5. '   ' → logprob: -20.625059127807617
    6. ')' → logprob: -21.000059127807617
    7. '
' → logprob: -21.000059127807617
    8. 'not' → logprob: -22.000059127807617
    9. '	is' → logprob: -22.500059127807617
    10. ' ' → logprob: -22.625059127807617

Token 282: '_conv' (ID: 58653)
  Prédit: '_conv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_conv' → logprob: -3.15441757265944e-05
    2. 'conv' → logprob: -10.375031471252441
    3. '_con' → logprob: -16.000032424926758
    4. '_cov' → logprob: -16.750032424926758
    5. 'Conv' → logprob: -17.500032424926758
    6. ' convex' → logprob: -18.500032424926758
    7. '_' → logprob: -18.875032424926758
    8. '_const' → logprob: -19.000032424926758
    9. '(conv' → logprob: -19.500032424926758
    10. '_cons' → logprob: -19.750032424926758

Token 283: 'ex' (ID: 490)
  Prédit: 'ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -3.128163257315464e-07
    2. 'P' → logprob: -16.625
    3. '(P' → logprob: -16.75
    4. 'exp' → logprob: -16.875
    5. 'EX' → logprob: -17.5
    6. '(ex' → logprob: -18.125
    7. 'ext' → logprob: -19.125
    8. '_ex' → logprob: -19.375
    9. '```' → logprob: -19.5
    10. 'exit' → logprob: -20.0

Token 284: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -5.676981345459353e-06
    2. '(' → logprob: -12.500005722045898
    3. ')' → logprob: -14.000005722045898
    4. ' (' → logprob: -14.250005722045898
    5. ')(' → logprob: -15.500005722045898
    6. '(
' → logprob: -16.1250057220459
    7. '(Py' → logprob: -17.2500057220459
    8. '((' → logprob: -17.7500057220459
    9. '
' → logprob: -17.8750057220459
    10. 'P' → logprob: -18.3750057220459

Token 285: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ' else' → logprob: -14.375001907348633
    3. 'else' → logprob: -14.500001907348633
    4. ' )' → logprob: -14.625001907348633
    5. '))' → logprob: -16.750001907348633
    6. ')
' → logprob: -17.250001907348633
    7. '())' → logprob: -19.250001907348633
    8. '(P' → logprob: -19.500001907348633
    9. '")' → logprob: -19.750001907348633
    10. '）' → logprob: -19.750001907348633

Token 286: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.2014182209968567
    2. 'else' → logprob: -1.701418161392212
    3. ')' → logprob: -13.326417922973633
    4. '```' → logprob: -13.326417922973633
    5. '()' → logprob: -13.826417922973633
    6. '	else' → logprob: -15.701417922973633
    7. ' ' → logprob: -16.201417922973633
    8. '
' → logprob: -16.451417922973633
    9. '==' → logprob: -16.701417922973633
    10. ' ' → logprob: -16.826417922973633

Token 287: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011047814972698689
    2. ' ' → logprob: -4.511047840118408
    3. '(' → logprob: -17.76104736328125
    4. ' ' → logprob: -17.88604736328125
    5. '  ' → logprob: -18.76104736328125
    6. '   ' → logprob: -19.13604736328125
    7. ' 
' → logprob: -19.26104736328125
    8. ')' → logprob: -20.13604736328125
    9. '０' → logprob: -20.38604736328125
    10. '
' → logprob: -20.38604736328125

Token 288: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '０' → logprob: -19.500009536743164
    4. '   ' → logprob: -19.875009536743164
    5. '
' → logprob: -19.875009536743164
    6. '00' → logprob: -20.625009536743164
    7. '  ' → logprob: -20.750009536743164
    8. '۰' → logprob: -21.375009536743164
    9. ' ' → logprob: -21.875009536743164
    10. '(' → logprob: -22.000009536743164

Token 289: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -14.375000953674316
    3. ')
' → logprob: -15.250000953674316
    4. '))' → logprob: -18.25
    5. ')`' → logprob: -18.375
    6. '`)' → logprob: -19.0
    7. '())' → logprob: -19.375
    8. '')' → logprob: -19.5
    9. '）' → logprob: -19.625
    10. '")' → logprob: -20.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 287
Tokens correctement prédits (1ère position, stricte): 127
Tokens correctement prédits (1ère position, avec adaptation): 132
Tokens correctement prédits (top 10): 235
Précision stricte (1ère position): 44.25%
Précision adaptée (1ère position): 45.99%
Précision (top 10): 81.88%
================================================================================
