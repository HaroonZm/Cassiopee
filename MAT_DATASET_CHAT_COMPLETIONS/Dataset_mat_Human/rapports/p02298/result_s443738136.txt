================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
#!usr/bin/env python3
from collections import defaultdict, deque
from heapq import heappush, heappop
from itertools import permutations, accumulate
import sys
import math
import bisect
def LI(): return [int(x) for x in sys.stdin.readline().split()]
def I(): return int(sys.stdin.readline())
def LS():return [list(x) for x in sys.stdin.readline().split()]
def S():
    res = list(sys.stdin.readline())
    if res[-1] == "\n":
        return res[:-1]
    return res
def IR(n):
    return [I() for i in range(n)]
def LIR(n):
    return [LI() for i in range(n)]
def SR(n):
    return [S() for i in range(n)]
def LSR(n):
    return [LS() for i in range(n)]

sys.setrecursionlimit(1000000)
mod = 1000000007

def solve():
    def det(a,b):
        return a[0]*b[1]-a[1]*b[0]

    def minus(a,b):
        return (a[0]-b[0],a[1]-b[1])

    def convex_hull(ps):
        n = len(ps)
        ps.sort()
        k = 0
        qs = [0]*(n+2)
        for i in range(n):
            while k > 1 and det(minus(qs[k-1], qs[k-2]), minus(ps[i], qs[k-1])) < 0:
                k -= 1
            qs[k] = ps[i]
            k += 1
        t = k
        for i in range(n-1)[::-1]:
            while k > t and det(minus(qs[k-1], qs[k-2]), minus(ps[i], qs[k-1])) < 0:
                k -= 1
            qs[k] = ps[i]
            k += 1
        qs = qs[:min(n,k-1)]
        return qs
    n = I()
    ps = LIR(n)
    qs = convex_hull(ps)
    if len(qs) == n:
        print(1)
    else:
        print(0)
    return

#Solve
if __name__ == "__main__":
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#!' (ID: 18666)
  → Token d'amorce (pas de prédiction)

Token 1: 'usr' (ID: 15943)
  → Token d'amorce (pas de prédiction)

Token 2: '/bin' (ID: 20950)
  → Token d'amorce (pas de prédiction)

Token 3: '/env' (ID: 34630)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.0011627229396253824
    2. '/bin' → logprob: -7.376162528991699
    3. '/env' → logprob: -8.1261625289917
    4. '/python' → logprob: -8.7511625289917
    5. '/bash' → logprob: -10.2511625289917
    6. '#!/' → logprob: -11.3761625289917
    7. '/usr' → logprob: -11.3761625289917
    8. '/b' → logprob: -11.6261625289917
    9. '#' → logprob: -12.7511625289917
    10. '```' → logprob: -12.8761625289917

Token 4: ' python' (ID: 22752)
  Prédit: ' python'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' python' → logprob: -0.339009165763855
    2. 'python' → logprob: -1.339009165763855
    3. '/python' → logprob: -3.8390092849731445
    4. ' ' → logprob: -6.0890092849731445
    5. '/' → logprob: -7.3390092849731445
    6. '```' → logprob: -8.589009284973145
    7. 'b' → logprob: -8.714009284973145
    8. ' bash' → logprob: -9.089009284973145
    9. 'p' → logprob: -9.214009284973145
    10. ' Python' → logprob: -9.339009284973145

Token 5: '3' (ID: 18)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8000779747962952
    2. '+' → logprob: -1.3000779151916504
    3. '-' → logprob: -2.1750779151916504
    4. '>' → logprob: -2.9250779151916504
    5. '\' → logprob: -3.5500779151916504
    6. '```' → logprob: -3.6750779151916504
    7. '#!/' → logprob: -3.9250779151916504
    8. '!' → logprob: -4.92507791519165
    9. '﻿' → logprob: -5.17507791519165
    10. '_' → logprob: -5.42507791519165

Token 6: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.13486787676811218
    2. '\n' → logprob: -3.3848679065704346
    3. '```' → logprob: -3.5098679065704346
    4. '\' → logprob: -3.7598679065704346
    5. '#!/' → logprob: -4.3848676681518555
    6. '>' → logprob: -5.2598676681518555
    7. '-' → logprob: -5.2598676681518555
    8. '!' → logprob: -6.3848676681518555
    9. '<|end|>' → logprob: -6.3848676681518555
    10. '#!' → logprob: -6.3848676681518555

Token 7: 'from' (ID: 2845)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.39625978469848633
    2. '```' → logprob: -2.1462597846984863
    3. '#!/' → logprob: -2.5212597846984863
    4. '!' → logprob: -3.1462597846984863
    5. '>' → logprob: -3.6462597846984863
    6. '\' → logprob: -4.021259784698486
    7. '#!' → logprob: -4.271259784698486
    8. '-' → logprob: -4.896259784698486
    9. '/bin' → logprob: -5.771259784698486
    10. '/' → logprob: -6.146259784698486

Token 8: ' collections' (ID: 22690)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1735077053308487
    2. ' os' → logprob: -1.9235076904296875
    3. ' import' → logprob: -5.1735076904296875
    4. ' sys' → logprob: -6.0485076904296875
    5. ' python' → logprob: -6.0485076904296875
    6. ' collections' → logprob: -7.2985076904296875
    7. ' math' → logprob: -7.4235076904296875
    8. ' space' → logprob: -7.9235076904296875
    9. ' functools' → logprob: -8.548507690429688
    10. ' subprocess' → logprob: -9.173507690429688

Token 9: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.2893039286136627
    2. 'import' → logprob: -1.4143038988113403
    3. '.' → logprob: -4.914303779602051
    4. '.Counter' → logprob: -8.28930377960205
    5. '```' → logprob: -8.66430377960205
    6. '.import' → logprob: -9.03930377960205
    7. '_import' → logprob: -9.78930377960205
    8. '_' → logprob: -9.78930377960205
    9. '<|end|>' → logprob: -10.53930377960205
    10. ' defaultdict' → logprob: -10.78930377960205

Token 10: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.017140576615929604
    2. ' deque' → logprob: -4.3921403884887695
    3. ' Counter' → logprob: -5.8921403884887695
    4. 'deque' → logprob: -7.6421403884887695
    5. ' abc' → logprob: -8.26714038848877
    6. ' collections' → logprob: -8.26714038848877
    7. 'default' → logprob: -8.39214038848877
    8. ' ' → logprob: -8.51714038848877
    9. ' counter' → logprob: -8.64214038848877
    10. ' default' → logprob: -8.89214038848877

Token 11: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34070733189582825
    2. '
' → logprob: -2.715707302093506
    3. '' → logprob: -2.715707302093506
    4. ' 
' → logprob: -3.340707302093506
    5. ' 

' → logprob: -3.465707302093506
    6. '

' → logprob: -3.590707302093506
    7. '```' → logprob: -4.215707302093506
    8. '<|end|>' → logprob: -4.215707302093506
    9. '\' → logprob: -4.965707302093506
    10. '  
' → logprob: -5.840707302093506

Token 12: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.7826104164123535
    2. ' Counter' → logprob: -1.4076104164123535
    3. 'deque' → logprob: -1.4076104164123535
    4. 'Counter' → logprob: -3.4076104164123535
    5. ' Ordered' → logprob: -4.1576104164123535
    6. 'Ordered' → logprob: -6.0326104164123535
    7. 'named' → logprob: -6.9076104164123535
    8. ' named' → logprob: -6.9076104164123535
    9. ' abc' → logprob: -9.782609939575195
    10. ' counter' → logprob: -10.782609939575195

Token 13: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14387968182563782
    2. '

' → logprob: -2.1438796520233154
    3. '
' → logprob: -4.8938798904418945
    4. '' → logprob: -6.2688798904418945
    5. ' 

' → logprob: -6.5188798904418945
    6. '```' → logprob: -6.7688798904418945
    7. '


' → logprob: -7.1438798904418945
    8. '\n' → logprob: -7.1438798904418945
    9. '<|end|>' → logprob: -7.1438798904418945
    10. 'import' → logprob: -7.6438798904418945

Token 14: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.2833423614501953
    2. '
' → logprob: -1.5333423614501953
    3. '<|end|>' → logprob: -5.033342361450195
    4. ' 

' → logprob: -5.158342361450195
    5. '' → logprob: -5.408342361450195
    6. 'd' → logprob: -6.033342361450195
    7. '```' → logprob: -6.158342361450195
    8. 'import' → logprob: -6.283342361450195
    9. '
' → logprob: -6.533342361450195
    10. '\n' → logprob: -6.783342361450195

Token 15: ' heap' (ID: 37237)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.09864561259746552
    2. ' typing' → logprob: -3.5986456871032715
    3. ' ' → logprob: -3.7236456871032715
    4. ' sys' → logprob: -3.8486456871032715
    5. ' collections' → logprob: -5.3486456871032715
    6. ' heap' → logprob: -5.3486456871032715
    7. ' math' → logprob: -5.4736456871032715
    8. ' os' → logprob: -5.8486456871032715
    9. ' functools' → logprob: -6.9736456871032715
    10. ' datetime' → logprob: -7.0986456871032715

Token 16: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: 0.0
    2. 'queue' → logprob: -16.75
    3. 'import' → logprob: -16.875
    4. ' queue' → logprob: -18.375
    5. 's' → logprob: -18.75
    6. ' q' → logprob: -18.75
    7. 'dict' → logprob: -19.0
    8. '.' → logprob: -19.125
    9. ' ' → logprob: -19.375
    10. 'a' → logprob: -19.5

Token 17: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0017641937592998147
    2. 'import' → logprob: -6.376764297485352
    3. ' ' → logprob: -9.751764297485352
    4. '	import' → logprob: -13.501764297485352
    5. '_import' → logprob: -14.251764297485352
    6. '<|end|>' → logprob: -14.376764297485352
    7. ' imports' → logprob: -14.501764297485352
    8. ' importar' → logprob: -16.00176429748535
    9. ' Import' → logprob: -16.50176429748535
    10. ' impor' → logprob: -16.50176429748535

Token 18: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.013486186042428017
    2. 'he' → logprob: -4.513486385345459
    3. ' heap' → logprob: -6.388486385345459
    4. ' ' → logprob: -8.0134859085083
    5. 'heap' → logprob: -8.5134859085083
    6. ' n' → logprob: -9.0134859085083
    7. 'n' → logprob: -11.1384859085083
    8. '.he' → logprob: -11.1384859085083
    9. '```' → logprob: -11.1384859085083
    10. ' merge' → logprob: -11.2634859085083

Token 19: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00862627848982811
    2. 'ap' → logprob: -4.758626461029053
    3. 'a' → logprob: -11.383625984191895
    4. 'aq' → logprob: -15.758625984191895
    5. 'ап' → logprob: -16.25862693786621
    6. 'appen' → logprob: -17.50862693786621
    7. 'aps' → logprob: -17.88362693786621
    8. 'apl' → logprob: -17.88362693786621
    9. '   ' → logprob: -18.63362693786621
    10. 'q' → logprob: -18.63362693786621

Token 20: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0005532711511477828
    2. 'op' → logprob: -7.500553131103516
    3. 'u' → logprob: -16.125553131103516
    4. 'us' → logprob: -16.375553131103516
    5. 'ut' → logprob: -16.750553131103516
    6. '```' → logprob: -18.000553131103516
    7. 'push' → logprob: -18.375553131103516
    8. 'o' → logprob: -18.500553131103516
    9. 'ushed' → logprob: -18.875553131103516
    10. 'USH' → logprob: -19.000553131103516

Token 21: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.026517411693930626
    2. ',' → logprob: -4.526517391204834
    3. '<|end|>' → logprob: -4.526517391204834
    4. ' he' → logprob: -6.526517391204834
    5. 'he' → logprob: -6.776517391204834
    6. ' ,' → logprob: -6.901517391204834
    7. '_' → logprob: -8.651517868041992
    8. 'import' → logprob: -8.651517868041992
    9. '<|end|>' → logprob: -9.026517868041992
    10. ' 
' → logprob: -9.276517868041992

Token 22: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.38692405819892883
    2. ' he' → logprob: -1.1369240283966064
    3. 'heap' → logprob: -10.761923789978027
    4. ' ' → logprob: -11.636923789978027
    5. '.he' → logprob: -12.011923789978027
    6. ' heap' → logprob: -12.761923789978027
    7. '_he' → logprob: -13.386923789978027
    8. 'hev' → logprob: -13.449423789978027
    9. '```' → logprob: -13.574423789978027
    10. 'h' → logprob: -13.636923789978027

Token 23: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.003178782993927598
    2. 'ap' → logprob: -5.753178596496582
    3. 'a' → logprob: -14.878178596496582
    4. 'ап' → logprob: -16.0031795501709
    5. 'appt' → logprob: -16.2531795501709
    6. ' app' → logprob: -16.3781795501709
    7. '_app' → logprob: -16.6281795501709
    8. '	app' → logprob: -16.7531795501709
    9. 'appen' → logprob: -17.0031795501709
    10. '.app' → logprob: -17.3781795501709

Token 24: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.5759692788124084
    2. 'ush' → logprob: -0.8259692788124084
    3. 'o' → logprob: -10.700969696044922
    4. 'opp' → logprob: -12.700969696044922
    5. '   ' → logprob: -14.325969696044922
    6. 'opleft' → logprob: -14.700969696044922
    7. 'us' → logprob: -14.825969696044922
    8. '```' → logprob: -14.825969696044922
    9. 'p' → logprob: -14.950969696044922
    10. 'osh' → logprob: -15.325969696044922

Token 25: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4394325911998749
    2. '

' → logprob: -1.0644326210021973
    3. '
' → logprob: -5.939432621002197
    4. '' → logprob: -6.439432621002197
    5. '```' → logprob: -6.439432621002197
    6. ' 

' → logprob: -6.689432621002197
    7. '\n' → logprob: -6.814432621002197
    8. '<|end|>' → logprob: -7.814432621002197
    9. 'def' → logprob: -7.939432621002197
    10. '


' → logprob: -8.064432144165039

Token 26: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.592276930809021
    2. '

' → logprob: -0.842276930809021
    3. '' → logprob: -5.0922770500183105
    4. 'import' → logprob: -5.9672770500183105
    5. 'def' → logprob: -6.3422770500183105
    6. ' 

' → logprob: -6.9672770500183105
    7. '```' → logprob: -6.9672770500183105
    8. '


' → logprob: -7.0922770500183105
    9. 'd' → logprob: -7.3422770500183105
    10. '
' → logprob: -7.5922770500183105

Token 27: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.07402358949184418
    2. ' math' → logprob: -3.324023485183716
    3. ' typing' → logprob: -3.574023485183716
    4. ' sys' → logprob: -5.199023723602295
    5. ' functools' → logprob: -7.699023723602295
    6. 'math' → logprob: -8.074023246765137
    7. ' queue' → logprob: -8.449023246765137
    8. ' collections' → logprob: -8.574023246765137
    9. 'typing' → logprob: -8.574023246765137
    10. ' operator' → logprob: -9.324023246765137

Token 28: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.005836011376231909
    2. 'import' → logprob: -5.255836009979248
    3. '.' → logprob: -8.005836486816406
    4. ' ' → logprob: -8.755836486816406
    5. '	import' → logprob: -10.380836486816406
    6. '.import' → logprob: -10.630836486816406
    7. ' .' → logprob: -10.755836486816406
    8. '<|end|>' → logprob: -11.005836486816406
    9. ' itertools' → logprob: -12.880836486816406
    10. '_import' → logprob: -13.005836486816406

Token 29: ' permutations' (ID: 174595)
  Prédit: ' permutations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.6671750545501709
    2. ' count' → logprob: -1.667175054550171
    3. ' combinations' → logprob: -2.417175054550171
    4. ' group' → logprob: -2.542175054550171
    5. 'count' → logprob: -2.917175054550171
    6. ' accumulate' → logprob: -3.417175054550171
    7. 'com' → logprob: -4.54217529296875
    8. ' chain' → logprob: -4.54217529296875
    9. ' cycle' → logprob: -5.29217529296875
    10. ' product' → logprob: -5.29217529296875

Token 30: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6253800392150879
    2. '

' → logprob: -0.8753800392150879
    3. 'import' → logprob: -4.625380039215088
    4. ' 

' → logprob: -5.000380039215088
    5. '\n' → logprob: -5.250380039215088
    6. '<|end|>' → logprob: -5.375380039215088
    7. '' → logprob: -5.500380039215088
    8. 'def' → logprob: -5.625380039215088
    9. 'n' → logprob: -5.750380039215088
    10. '```' → logprob: -5.875380039215088

Token 31: ' accumulate' (ID: 74226)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.8386747241020203
    2. 'com' → logprob: -0.9636747241020203
    3. ' product' → logprob: -1.963674783706665
    4. ' combinations' → logprob: -3.213674783706665
    5. 'chain' → logprob: -6.213674545288086
    6. 'group' → logprob: -6.838674545288086
    7. 'count' → logprob: -7.213674545288086
    8. ' group' → logprob: -7.588674545288086
    9. ' chain' → logprob: -7.838674545288086
    10. 'cycle' → logprob: -8.088674545288086

Token 32: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5822646617889404
    2. '

' → logprob: -0.9572646617889404
    3. 'import' → logprob: -3.2072646617889404
    4. '<|end|>' → logprob: -5.2072649002075195
    5. ' 

' → logprob: -5.8322649002075195
    6. '' → logprob: -6.0822649002075195
    7. '#' → logprob: -6.9572649002075195
    8. ' 
' → logprob: -7.2072649002075195
    9. '```' → logprob: -7.2072649002075195
    10. '


' → logprob: -7.2072649002075195

Token 33: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8417767882347107
    2. '

' → logprob: -0.9667767882347107
    3. 'import' → logprob: -1.8417768478393555
    4. '<|end|>' → logprob: -4.4667768478393555
    5. '\n' → logprob: -5.5917768478393555
    6. '#' → logprob: -5.9667768478393555
    7. '' → logprob: -6.2167768478393555
    8. ' 

' → logprob: -6.3417768478393555
    9. ',' → logprob: -7.0917768478393555
    10. '


' → logprob: -7.2167768478393555

Token 34: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.7303824424743652
    2. ' math' → logprob: -0.8553824424743652
    3. ' ' → logprob: -3.3553824424743652
    4. ' os' → logprob: -3.6053824424743652
    5. ' itertools' → logprob: -3.6053824424743652
    6. ' collections' → logprob: -6.230382442474365
    7. ' functools' → logprob: -7.105382442474365
    8. ' ' → logprob: -7.980382442474365
    9. ' space' → logprob: -8.355382919311523
    10. ' json' → logprob: -9.105382919311523

Token 35: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06201384216547012
    2. '

' → logprob: -2.937013864517212
    3. '' → logprob: -5.937013626098633
    4. '\n' → logprob: -7.062013626098633
    5. '
' → logprob: -7.062013626098633
    6. '#' → logprob: -7.687013626098633
    7. '<|end|>' → logprob: -7.687013626098633
    8. ' 
' → logprob: -8.062013626098633
    9. 'import' → logprob: -8.062013626098633
    10. 'def' → logprob: -8.687013626098633

Token 37: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.029690789058804512
    2. ' ' → logprob: -3.904690742492676
    3. ' math' → logprob: -5.279690742492676
    4. ' space' → logprob: -6.154690742492676
    5. ' o' → logprob: -7.404690742492676
    6. ' collections' → logprob: -7.904690742492676
    7. ' itertools' → logprob: -7.904690742492676
    8. ' ​' → logprob: -9.529690742492676
    9. ' ‌' → logprob: -9.904690742492676
    10. ' ' → logprob: -10.029690742492676

Token 38: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27785524725914
    2. '

' → logprob: -1.6528552770614624
    3. '' → logprob: -4.027855396270752
    4. '<|end|>' → logprob: -4.152855396270752
    5. '\n' → logprob: -5.402855396270752
    6. '#' → logprob: -5.527855396270752
    7. '
' → logprob: -6.027855396270752
    8. 'n' → logprob: -6.277855396270752
    9. '```' → logprob: -7.277855396270752
    10. '\' → logprob: -7.277855396270752

Token 39: 'import' (ID: 561)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.35736310482025146
    2. '
' → logprob: -1.2323631048202515
    3. '' → logprob: -5.232363224029541
    4. '
' → logprob: -6.607363224029541
    5. '#' → logprob: -7.732363224029541
    6. '


' → logprob: -7.732363224029541
    7. '<|end|>' → logprob: -7.857363224029541
    8. '\n' → logprob: -8.607362747192383
    9. ' 

' → logprob: -9.107362747192383
    10. 'import' → logprob: -9.482362747192383

Token 40: ' bis' (ID: 7204)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.024968137964606285
    2. ' bis' → logprob: -4.774968147277832
    3. ' itertools' → logprob: -5.649968147277832
    4. ' collections' → logprob: -5.899968147277832
    5. ' functools' → logprob: -6.024968147277832
    6. ' random' → logprob: -6.024968147277832
    7. ' operator' → logprob: -6.274968147277832
    8. 'os' → logprob: -6.524968147277832
    9. ' heap' → logprob: -7.024968147277832
    10. ' o' → logprob: -8.399968147277832

Token 41: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -8.2994620242971e-06
    2. 'e' → logprob: -11.875008583068848
    3. 'ec' → logprob: -14.500008583068848
    4. 't' → logprob: -15.000008583068848
    5. 'ected' → logprob: -15.750008583068848
    6. 'ectl' → logprob: -16.62500762939453
    7. 'ector' → logprob: -16.62500762939453
    8. 'ection' → logprob: -16.87500762939453
    9. '```' → logprob: -17.00000762939453
    10. 'ects' → logprob: -17.62500762939453

Token 42: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.4413650929927826
    2. '
' → logprob: -1.066365122795105
    3. '' → logprob: -5.3163652420043945
    4. '#' → logprob: -6.0663652420043945
    5. '
' → logprob: -6.6913652420043945
    6. '\n' → logprob: -6.8163652420043945
    7. '


' → logprob: -7.1913652420043945
    8. '<|end|>' → logprob: -7.3163652420043945
    9. ' 

' → logprob: -7.4413652420043945
    10. '```' → logprob: -8.941365242004395

Token 43: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4557304382324219
    2. '

' → logprob: -1.0807304382324219
    3. '' → logprob: -4.955730438232422
    4. ' 

' → logprob: -5.705730438232422
    5. '<|end|>' → logprob: -5.705730438232422
    6. '
' → logprob: -5.955730438232422
    7. '\n' → logprob: -6.205730438232422
    8. '#' → logprob: -6.205730438232422
    9. ' 
' → logprob: -6.580730438232422
    10. 'import' → logprob: -6.705730438232422

Token 44: ' LI' (ID: 14875)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0008184424950741231
    2. '_' → logprob: -7.625818252563477
    3. ' s' → logprob: -9.250818252563477
    4. ' space' → logprob: -10.125818252563477
    5. '<|end|>' → logprob: -10.125818252563477
    6. ' _' → logprob: -10.875818252563477
    7. ' main' → logprob: -11.125818252563477
    8. '_space' → logprob: -11.375818252563477
    9. ' ```' → logprob: -11.500818252563477
    10. ' a' → logprob: -11.625818252563477

Token 45: '():' (ID: 9442)
  Prédit: 'ST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ST' → logprob: -0.46679016947746277
    2. 'st' → logprob: -1.4667901992797852
    3. 'N' → logprob: -2.216790199279785
    4. '():' → logprob: -3.966790199279785
    5. 'St' → logprob: -5.466790199279785
    6. 'T' → logprob: -6.216790199279785
    7. 'S' → logprob: -6.466790199279785
    8. 'n' → logprob: -6.591790199279785
    9. 'NT' → logprob: -6.716790199279785
    10. '()' → logprob: -7.341790199279785

Token 46: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3641429841518402
    2. ' ' → logprob: -1.6141430139541626
    3. ' []' → logprob: -2.489142894744873
    4. ' list' → logprob: -4.489142894744873
    5. ' map' → logprob: -5.364142894744873
    6. ' input' → logprob: -6.114142894744873
    7. 'return' → logprob: -6.614142894744873
    8. '[]' → logprob: -7.239142894744873
    9. ' int' → logprob: -7.364142894744873
    10. ' n' → logprob: -7.364142894744873

Token 47: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.20367281138896942
    2. ' list' → logprob: -1.7036727666854858
    3. 'map' → logprob: -6.328672885894775
    4. ' map' → logprob: -8.078672409057617
    5. 'ist' → logprob: -9.703672409057617
    6. 'int' → logprob: -10.578672409057617
    7. '[' → logprob: -10.953672409057617
    8. '[list' → logprob: -11.453672409057617
    9. 'lis' → logprob: -11.578672409057617
    10. 'li' → logprob: -11.578672409057617

Token 48: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00012809180771000683
    2. 'i' → logprob: -9.125127792358398
    3. 'in' → logprob: -11.000127792358398
    4. '*' → logprob: -13.750127792358398
    5. ' int' → logprob: -14.250127792358398
    6. ']int' → logprob: -15.000127792358398
    7. '0' → logprob: -15.375127792358398
    8. '(int' → logprob: -16.8751277923584
    9. ']' → logprob: -17.2501277923584
    10. 'inti' → logprob: -17.6251277923584

Token 49: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.10231207311153412
    2. '(' → logprob: -2.3523120880126953
    3. '(i' → logprob: -6.352312088012695
    4. '(s' → logprob: -8.727312088012695
    5. '(input' → logprob: -9.102312088012695
    6. '()]' → logprob: -10.602312088012695
    7. ']' → logprob: -11.227312088012695
    8. '(
' → logprob: -11.477312088012695
    9. '(a' → logprob: -11.852312088012695
    10. '(sys' → logprob: -12.102312088012695

Token 50: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007621031254529953
    2. 'for' → logprob: -7.375761985778809
    3. ' for' → logprob: -10.250761985778809
    4. '(' → logprob: -10.250761985778809
    5. '(x' → logprob: -10.625761985778809
    6. ' )' → logprob: -11.125761985778809
    7. ')]' → logprob: -11.500761985778809
    8. '())' → logprob: -12.750761985778809
    9. ']' → logprob: -13.125761985778809
    10. '()' → logprob: -13.250761985778809

Token 51: ' for' (ID: 395)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1615258753299713
    2. 'for' → logprob: -2.7865259647369385
    3. '(x' → logprob: -3.1615259647369385
    4. ' for' → logprob: -3.1615259647369385
    5. ']' → logprob: -6.786525726318359
    6. '()]' → logprob: -7.911525726318359
    7. '(s' → logprob: -8.16152572631836
    8. '(sys' → logprob: -8.41152572631836
    9. ')' → logprob: -8.66152572631836
    10. '(i' → logprob: -8.78652572631836

Token 52: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.017487255856394768
    2. 'input' → logprob: -4.142487049102783
    3. ' sys' → logprob: -6.642487049102783
    4. ' x' → logprob: -9.517487525939941
    5. ' ' → logprob: -10.892487525939941
    6. ' raw' → logprob: -10.892487525939941
    7. 'sys' → logprob: -12.017487525939941
    8. '(input' → logprob: -12.142487525939941
    9. '=input' → logprob: -12.392487525939941
    10. ' in' → logprob: -12.642487525939941

Token 53: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.39740005135536194
    2. 'input' → logprob: -1.8974000215530396
    3. '(input' → logprob: -2.272400140762329
    4. ' input' → logprob: -4.02239990234375
    5. '(' → logprob: -4.14739990234375
    6. '(sys' → logprob: -4.52239990234375
    7. '=sys' → logprob: -4.52239990234375
    8. '=input' → logprob: -4.77239990234375
    9. 'in' → logprob: -5.14739990234375
    10. '.' → logprob: -6.64739990234375

Token 54: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7877081632614136
    2. 'sys' → logprob: -1.2877081632614136
    3. ' sys' → logprob: -1.5377081632614136
    4. ' input' → logprob: -2.912708282470703
    5. '=sys' → logprob: -12.912708282470703
    6. '(sys' → logprob: -13.037708282470703
    7. 'in' → logprob: -13.662708282470703
    8. 's' → logprob: -13.662708282470703
    9. ' ' → logprob: -13.787708282470703
    10. '	sys' → logprob: -14.287708282470703

Token 55: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0006718054646626115
    2. '.' → logprob: -7.500671863555908
    3. '.st' → logprob: -9.37567138671875
    4. '.argv' → logprob: -10.87567138671875
    5. '.std' → logprob: -11.75067138671875
    6. '.stdout' → logprob: -12.12567138671875
    7. '.s' → logprob: -14.25067138671875
    8. '.readline' → logprob: -14.50067138671875
    9. '.input' → logprob: -15.50067138671875
    10. 'stdin' → logprob: -15.62567138671875

Token 56: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00041577612864784896
    2. '.' → logprob: -8.375415802001953
    3. '.read' → logprob: -8.625415802001953
    4. '.readlines' → logprob: -12.750415802001953
    5. '.stdin' → logprob: -13.375415802001953
    6. '.re' → logprob: -14.250415802001953
    7. ' .' → logprob: -15.500415802001953
    8. '.r' → logprob: -15.875415802001953
    9. ' readline' → logprob: -16.875415802001953
    10. '].' → logprob: -17.250415802001953

Token 57: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.32387158274650574
    2. '()]' → logprob: -1.3238716125488281
    3. '()' → logprob: -4.573871612548828
    4. '()].' → logprob: -8.448871612548828
    5. '()][' → logprob: -12.073871612548828
    6. '())' → logprob: -12.573871612548828
    7. '()[' → logprob: -12.698871612548828
    8. ' ()' → logprob: -13.448871612548828
    9. ']()' → logprob: -13.573871612548828
    10. '()-' → logprob: -13.573871612548828

Token 58: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.012207402847707272
    2. 'rstrip' → logprob: -4.512207508087158
    3. 'split' → logprob: -6.762207508087158
    4. 'read' → logprob: -13.63720703125
    5. ' strip' → logprob: -14.13720703125
    6. 'decode' → logprob: -15.01220703125
    7. '(strip' → logprob: -19.13720703125
    8. 'rs' → logprob: -19.51220703125
    9. ' split' → logprob: -19.76220703125
    10. 'rst' → logprob: -20.01220703125

Token 59: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -8.292095299111679e-05
    2. '()' → logprob: -9.875082969665527
    3. '(' → logprob: -10.500082969665527
    4. ']' → logprob: -12.875082969665527
    5. '()]
' → logprob: -14.250082969665527
    6. ']()' → logprob: -15.500082969665527
    7. '('' → logprob: -15.750082969665527
    8. '())' → logprob: -15.875082969665527
    9. '()][' → logprob: -16.37508201599121
    10. '()].' → logprob: -17.25008201599121

Token 60: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08155985921621323
    2. '
' → logprob: -2.581559896469116
    3. '#' → logprob: -7.456559658050537
    4. 'd' → logprob: -7.706559658050537
    5. '' → logprob: -7.831559658050537
    6. '\' → logprob: -8.206560134887695
    7. '

' → logprob: -8.456560134887695
    8. '\n' → logprob: -8.581560134887695
    9. ' 
' → logprob: -9.206560134887695
    10. '
' → logprob: -9.456560134887695

Token 61: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.1198604628443718
    2. 'II' → logprob: -2.6198604106903076
    3. ' I' → logprob: -3.7448604106903076
    4. ' II' → logprob: -4.869860649108887
    5. 'S' → logprob: -6.244860649108887
    6. 'int' → logprob: -6.494860649108887
    7. 'LS' → logprob: -7.369860649108887
    8. 'input' → logprob: -7.369860649108887
    9. 'IN' → logprob: -7.619860649108887
    10. 'IS' → logprob: -7.619860649108887

Token 62: '():' (ID: 9442)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.765872061252594
    2. 'n' → logprob: -1.0158720016479492
    3. '():' → logprob: -2.515872001647949
    4. '()' → logprob: -2.765872001647949
    5. 'N' → logprob: -3.765872001647949
    6. 'nit' → logprob: -5.265872001647949
    7. 'NT' → logprob: -8.39087200164795
    8. 'np' → logprob: -8.39087200164795
    9. '(' → logprob: -9.89087200164795
    10. ' nt' → logprob: -10.26587200164795

Token 63: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.05635448545217514
    2. ' int' → logprob: -3.056354522705078
    3. 'return' → logprob: -5.181354522705078
    4. 'int' → logprob: -6.181354522705078
    5. ' ' → logprob: -10.056354522705078
    6. ' retur' → logprob: -12.931354522705078
    7. '=int' → logprob: -13.181354522705078
    8. 'eturn' → logprob: -14.431354522705078
    9. ' ' → logprob: -14.931354522705078
    10. '(int' → logprob: -15.556354522705078

Token 64: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2519395649433136
    2. ' int' → logprob: -1.5019395351409912
    3. 'nt' → logprob: -12.00193977355957
    4. ' nt' → logprob: -13.62693977355957
    5. ' ' → logprob: -13.75193977355957
    6. 'in' → logprob: -13.75193977355957
    7. ' in' → logprob: -15.00193977355957
    8. '  ' → logprob: -15.37693977355957
    9. '(int' → logprob: -15.75193977355957
    10. ' i' → logprob: -16.12693977355957

Token 65: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1008470430970192
    2. '(sys' → logprob: -2.350847005844116
    3. '(input' → logprob: -7.475847244262695
    4. '(int' → logprob: -10.475847244262695
    5. '(
' → logprob: -11.725847244262695
    6. '(system' → logprob: -12.100847244262695
    7. '(s' → logprob: -12.100847244262695
    8. '(x' → logprob: -12.100847244262695
    9. ' (' → logprob: -12.350847244262695
    10. '(System' → logprob: -12.600847244262695

Token 66: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.038352664560079575
    2. '.' → logprob: -3.2883527278900146
    3. '.readline' → logprob: -8.413352966308594
    4. 'stdin' → logprob: -9.913352966308594
    5. '.stdout' → logprob: -11.163352966308594
    6. '.argv' → logprob: -11.538352966308594
    7. '.std' → logprob: -11.788352966308594
    8. '.read' → logprob: -12.788352966308594
    9. '(stdin' → logprob: -13.788352966308594
    10. '.)' → logprob: -13.788352966308594

Token 67: '.readline' (ID: 74673)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.32738569378852844
    2. '()' → logprob: -1.702385663986206
    3. '.readline' → logprob: -2.577385663986206
    4. '())' → logprob: -4.202385902404785
    5. ')' → logprob: -5.577385902404785
    6. '.' → logprob: -6.952385902404785
    7. 'line' → logprob: -7.327385902404785
    8. 'read' → logprob: -8.827385902404785
    9. '(' → logprob: -9.577385902404785
    10. ' ()' → logprob: -9.702385902404785

Token 68: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2617560923099518
    2. '().' → logprob: -1.5117560625076294
    3. '()' → logprob: -4.63675594329834
    4. ' ())' → logprob: -10.63675594329834
    5. '()]' → logprob: -10.76175594329834
    6. ')' → logprob: -11.01175594329834
    7. '()))' → logprob: -11.38675594329834
    8. '.readline' → logprob: -11.88675594329834
    9. '();)' → logprob: -12.38675594329834
    10. '());' → logprob: -14.01175594329834

Token 69: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4935646653175354
    2. 'd' → logprob: -1.1185646057128906
    3. '
' → logprob: -3.6185646057128906
    4. '\' → logprob: -3.6185646057128906
    5. '\n' → logprob: -5.493564605712891
    6. 'n' → logprob: -6.743564605712891
    7. '#' → logprob: -6.868564605712891
    8. '' → logprob: -6.868564605712891
    9. ' 
' → logprob: -7.743564605712891
    10. 'de' → logprob: -7.868564605712891

Token 70: ' LS' (ID: 60790)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.14570556581020355
    2. 'LS' → logprob: -2.020705461502075
    3. 'L' → logprob: -6.145705699920654
    4. 'LI' → logprob: -8.020705223083496
    5. 's' → logprob: -9.145705223083496
    6. ' S' → logprob: -9.145705223083496
    7. 'SI' → logprob: -9.145705223083496
    8. 'SL' → logprob: -10.145705223083496
    9. 'Ls' → logprob: -10.145705223083496
    10. ' LS' → logprob: -10.395705223083496

Token 71: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3874683082103729
    2. '()' → logprob: -1.1374683380126953
    3. '().' → logprob: -8.387468338012695
    4. ' ()' → logprob: -8.887468338012695
    5. '()[' → logprob: -9.637468338012695
    6. '()]' → logprob: -9.762468338012695
    7. '()>' → logprob: -10.012468338012695
    8. '()<' → logprob: -11.637468338012695
    9. '[]' → logprob: -11.762468338012695
    10. ' ():' → logprob: -12.137468338012695

Token 72: 'return' (ID: 1034)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1142214760184288
    2. 'return' → logprob: -2.2392215728759766
    3. ' sys' → logprob: -7.239221572875977
    4. ' ' → logprob: -8.614221572875977
    5. 'def' → logprob: -9.239221572875977
    6. '()' → logprob: -9.364221572875977
    7. 'sys' → logprob: -9.489221572875977
    8. ' def' → logprob: -10.364221572875977
    9. ')' → logprob: -10.364221572875977
    10. ' lambda' → logprob: -10.489221572875977

Token 73: ' [' (ID: 723)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.1009918674826622
    2. ' [' → logprob: -2.97599196434021
    3. 'sys' → logprob: -4.100991725921631
    4. '[' → logprob: -4.225991725921631
    5. ' list' → logprob: -4.350991725921631
    6. 'list' → logprob: -7.725991725921631
    7. '[s' → logprob: -8.725992202758789
    8. ' ' → logprob: -9.100992202758789
    9. '[list' → logprob: -9.225992202758789
    10. ' ' → logprob: -9.725992202758789

Token 74: 'list' (ID: 2641)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0006776464288122952
    2. 's' → logprob: -8.000678062438965
    3. 'sys' → logprob: -8.000678062438965
    4. 'str' → logprob: -12.125678062438965
    5. ' x' → logprob: -14.125678062438965
    6. '(x' → logprob: -14.750678062438965
    7. 'input' → logprob: -15.125678062438965
    8. ' sys' → logprob: -16.37567710876465
    9. 'list' → logprob: -18.00067710876465
    10. '(sys' → logprob: -18.00067710876465

Token 75: '(x' (ID: 4061)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.6804013848304749
    2. '(x' → logprob: -1.68040132522583
    3. '(sys' → logprob: -2.05540132522583
    4. '(' → logprob: -2.05540132522583
    5. '(str' → logprob: -3.43040132522583
    6. '(input' → logprob: -4.18040132522583
    7. '(s' → logprob: -5.80540132522583
    8. '(token' → logprob: -9.055401802062988
    9. 'map' → logprob: -9.180401802062988
    10. '(line' → logprob: -9.930401802062988

Token 76: ')' (ID: 8)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0007112398743629456
    2. '()' → logprob: -8.000711441040039
    3. '(' → logprob: -8.750711441040039
    4. '())' → logprob: -9.500711441040039
    5. '()]' → logprob: -10.125711441040039
    6. '=sys' → logprob: -10.250711441040039
    7. '(s' → logprob: -10.750711441040039
    8. 'sys' → logprob: -11.500711441040039
    9. '(input' → logprob: -11.750711441040039
    10. '(str' → logprob: -11.875711441040039

Token 77: ' for' (ID: 395)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0003110327525064349
    2. '(' → logprob: -8.375310897827148
    3. '(s' → logprob: -10.000310897827148
    4. 'sys' → logprob: -11.000310897827148
    5. '=sys' → logprob: -11.750310897827148
    6. '(system' → logprob: -12.625310897827148
    7. '()' → logprob: -13.125310897827148
    8. '(input' → logprob: -13.750310897827148
    9. ' (' → logprob: -14.000310897827148
    10. '(str' → logprob: -14.125310897827148

Token 78: ' x' (ID: 1215)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.6364450454711914
    2. ' sys' → logprob: -0.7614450454711914
    3. 'sys' → logprob: -6.011445045471191
    4. '=sys' → logprob: -8.011445045471191
    5. '(' → logprob: -8.136445045471191
    6. '(x' → logprob: -8.386445045471191
    7. ' x' → logprob: -8.386445045471191
    8. ' (' → logprob: -9.011445045471191
    9. '(s' → logprob: -9.136445045471191
    10. '	sys' → logprob: -10.261445045471191

Token 79: ' in' (ID: 306)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18349269032478333
    2. '(sys' → logprob: -2.308492660522461
    3. ' ()' → logprob: -3.058492660522461
    4. '(' → logprob: -4.183492660522461
    5. '().' → logprob: -5.933492660522461
    6. '()]' → logprob: -6.558492660522461
    7. '=sys' → logprob: -7.183492660522461
    8. ' (' → logprob: -8.183492660522461
    9. 'sys' → logprob: -8.683492660522461
    10. ' in' → logprob: -8.808492660522461

Token 80: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.3133023977279663
    2. ' sys' → logprob: -1.3133023977279663
    3. '(sys' → logprob: -10.438302040100098
    4. '	sys' → logprob: -12.813302040100098
    5. 'input' → logprob: -13.063302040100098
    6. '=sys' → logprob: -13.188302040100098
    7. 'str' → logprob: -13.313302040100098
    8. ' ' → logprob: -13.813302040100098
    9. ' input' → logprob: -14.188302040100098
    10. 'map' → logprob: -14.438302040100098

Token 81: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.010962927713990211
    2. '.readline' → logprob: -4.635962963104248
    3. '.' → logprob: -7.635962963104248
    4. '.stdout' → logprob: -7.885962963104248
    5. 'stdin' → logprob: -9.01096248626709
    6. '(stdin' → logprob: -9.13596248626709
    7. '().' → logprob: -9.88596248626709
    8. '.argv' → logprob: -11.01096248626709
    9. '.std' → logprob: -11.76096248626709
    10. ' .' → logprob: -11.76096248626709

Token 82: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.6055865287780762
    2. '().' → logprob: -0.8555865287780762
    3. '()' → logprob: -3.980586528778076
    4. '()]' → logprob: -4.605586528778076
    5. '.' → logprob: -8.480587005615234
    6. '.readlines' → logprob: -9.730587005615234
    7. '()].' → logprob: -9.980587005615234
    8. '())' → logprob: -10.230587005615234
    9. '().__' → logprob: -10.480587005615234
    10. '()]
' → logprob: -10.605587005615234

Token 83: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0018089372897520661
    2. '()' → logprob: -6.501809120178223
    3. '()]' → logprob: -8.126809120178223
    4. '()].' → logprob: -11.876809120178223
    5. '())' → logprob: -13.001809120178223
    6. ' ().' → logprob: -14.251809120178223
    7. '().'' → logprob: -15.001809120178223
    8. '()[' → logprob: -15.626809120178223
    9. '()][' → logprob: -15.626809120178223
    10. '()<' → logprob: -16.126808166503906

Token 84: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.06600741297006607
    2. 'rstrip' → logprob: -3.316007375717163
    3. 'split' → logprob: -4.066007614135742
    4. 'read' → logprob: -4.566007614135742
    5. 'decode' → logprob: -10.566007614135742
    6. ' strip' → logprob: -12.191007614135742
    7. 'str' → logprob: -13.066007614135742
    8. ' split' → logprob: -16.566007614135742
    9. 'rs' → logprob: -16.816007614135742
    10. ' readline' → logprob: -17.191007614135742

Token 85: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0002285694790771231
    2. '()' → logprob: -8.500228881835938
    3. '(' → logprob: -11.375228881835938
    4. ']' → logprob: -11.500228881835938
    5. '()]
' → logprob: -13.250228881835938
    6. ']()' → logprob: -14.250228881835938
    7. '()][' → logprob: -15.375228881835938
    8. ' ()' → logprob: -15.625228881835938
    9. '())' → logprob: -15.625228881835938
    10. ')]' → logprob: -16.125228881835938

Token 86: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00823511928319931
    2. '()' → logprob: -5.383234977722168
    3. 'd' → logprob: -7.008234977722168
    4. '\' → logprob: -7.133234977722168
    5. '()
' → logprob: -7.758234977722168
    6. '
' → logprob: -8.133234977722168
    7. '#' → logprob: -8.258234977722168
    8. '(' → logprob: -8.758234977722168
    9. '```' → logprob: -8.883234977722168
    10. ')' → logprob: -9.133234977722168

Token 87: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.01223295833915472
    2. ' S' → logprob: -4.887232780456543
    3. 'L' → logprob: -5.512232780456543
    4. 'LS' → logprob: -7.762232780456543
    5. ' L' → logprob: -9.387232780456543
    6. 'I' → logprob: -10.262232780456543
    7. 's' → logprob: -11.762232780456543
    8. ' ' → logprob: -12.512232780456543
    9. 'input' → logprob: -12.762232780456543
    10. '()' → logprob: -12.762232780456543

Token 88: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0009188431431539357
    2. '()' → logprob: -7.000918865203857
    3. ' ():' → logprob: -12.5009183883667
    4. '():
' → logprob: -13.8759183883667
    5. '(' → logprob: -14.2509183883667
    6. '().' → logprob: -14.3759183883667
    7. '()>' → logprob: -14.5009183883667
    8. 'tring' → logprob: -15.3759183883667
    9. ' ()' → logprob: -16.000919342041016
    10. '();' → logprob: -16.125919342041016

Token 89: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.559856116771698
    2. ' return' → logprob: -1.1848561763763428
    3. ':return' → logprob: -2.5598561763763428
    4. '():' → logprob: -3.6848561763763428
    5. ':' → logprob: -5.309855937957764
    6. '()' → logprob: -5.434855937957764
    7. '   ' → logprob: -5.934855937957764
    8. ' ' → logprob: -6.184855937957764
    9. ' :' → logprob: -6.809855937957764
    10. '	return' → logprob: -7.434855937957764

Token 90: ' res' (ID: 694)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16034558415412903
    2. ' return' → logprob: -1.9103455543518066
    3. ' sys' → logprob: -10.410346031188965
    4. '   ' → logprob: -10.410346031188965
    5. 'sys' → logprob: -10.535346031188965
    6. 'ret' → logprob: -11.160346031188965
    7. '    ' → logprob: -12.035346031188965
    8. ' retur' → logprob: -12.160346031188965
    9. 'r' → logprob: -13.035346031188965
    10. ' ' → logprob: -13.160346031188965

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16232562065124512
    2. '=' → logprob: -1.9123256206512451
    3. ' ' → logprob: -6.287325859069824
    4. 'u' → logprob: -9.287325859069824
    5. '  ' → logprob: -10.537325859069824
    6. '.' → logprob: -10.537325859069824
    7. 'ult' → logprob: -11.537325859069824
    8. ' =
' → logprob: -11.662325859069824
    9. '=[]' → logprob: -11.662325859069824
    10. ' +=' → logprob: -12.162325859069824

Token 92: ' list' (ID: 1562)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.3773505985736847
    2. 'sys' → logprob: -1.5023505687713623
    3. '[]' → logprob: -2.7523505687713623
    4. ' []' → logprob: -4.377350807189941
    5. '""' → logprob: -4.502350807189941
    6. '''' → logprob: -6.627350807189941
    7. ' ' → logprob: -7.127350807189941
    8. ' ""' → logprob: -7.502350807189941
    9. '	sys' → logprob: -7.877350807189941
    10. ' ''' → logprob: -8.252350807189941

Token 93: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.27593734860420227
    2. '(input' → logprob: -1.9009373188018799
    3. '()' → logprob: -2.77593731880188
    4. '(' → logprob: -3.65093731880188
    5. '(map' → logprob: -6.150937557220459
    6. '(s' → logprob: -7.775937557220459
    7. '(str' → logprob: -7.775937557220459
    8. '(range' → logprob: -8.9009370803833
    9. '(system' → logprob: -9.5259370803833
    10. '("")' → logprob: -10.0259370803833

Token 94: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -6.2729995988775045e-06
    2. '.' → logprob: -12.625006675720215
    3. '.stdout' → logprob: -13.000006675720215
    4. '.readline' → logprob: -15.375006675720215
    5. '.std' → logprob: -16.0000057220459
    6. '.argv' → logprob: -16.0000057220459
    7. '(stdin' → logprob: -16.0000057220459
    8. 'stdin' → logprob: -16.8750057220459
    9. ' stdin' → logprob: -19.1250057220459
    10. '.input' → logprob: -20.2500057220459

Token 95: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0023140492849051952
    2. 'read' → logprob: -6.12731409072876
    3. 'stdin' → logprob: -9.877313613891602
    4. ' readline' → logprob: -9.877313613891602
    5. '.read' → logprob: -11.627313613891602
    6. '.' → logprob: -12.252313613891602
    7. 'rstrip' → logprob: -12.752313613891602
    8. '().' → logprob: -12.752313613891602
    9. 'line' → logprob: -12.877313613891602
    10. '_read' → logprob: -13.752313613891602

Token 96: '())
' (ID: 4574)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.012735074386000633
    2. '())' → logprob: -4.512734889984131
    3. '()' → logprob: -6.387734889984131
    4. ' ())' → logprob: -14.262735366821289
    5. ' ().' → logprob: -14.637735366821289
    6. '();)' → logprob: -14.887735366821289
    7. '()[' → logprob: -15.012735366821289
    8. '()-' → logprob: -15.137735366821289
    9. '()]' → logprob: -15.137735366821289
    10. '(' → logprob: -15.887735366821289

Token 97: '   ' (ID: 271)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.29464191198349
    2. '()' → logprob: -2.2946419715881348
    3. '.rstrip' → logprob: -2.5446419715881348
    4. 'rstrip' → logprob: -3.9196419715881348
    5. '.strip' → logprob: -4.169641971588135
    6. '   ' → logprob: -4.169641971588135
    7. '()\' → logprob: -4.794641971588135
    8. '<|end|>' → logprob: -5.294641971588135
    9. '.' → logprob: -5.794641971588135
    10. '(' → logprob: -6.169641971588135

Token 98: ' if' (ID: 538)
  Prédit: 'rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.7753317952156067
    2. '   ' → logprob: -1.275331735610962
    3. '.rstrip' → logprob: -1.900331735610962
    4. 'return' → logprob: -3.150331735610962
    5. '<|end|>' → logprob: -3.900331735610962
    6. ' ' → logprob: -4.400331974029541
    7. ')' → logprob: -5.275331974029541
    8. '()' → logprob: -5.400331974029541
    9. '.strip' → logprob: -5.525331974029541
    10. '
' → logprob: -6.150331974029541

Token 99: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.22573894262313843
    2. ' res' → logprob: -1.6007390022277832
    3. ' not' → logprob: -8.725738525390625
    4. 'len' → logprob: -9.100738525390625
    5. ' len' → logprob: -10.725738525390625
    6. '(res' → logprob: -11.475738525390625
    7. 'not' → logprob: -11.725738525390625
    8. ' ' → logprob: -11.850738525390625
    9. '
' → logprob: -13.975738525390625
    10. '	res' → logprob: -14.100738525390625

Token 100: '[-' (ID: 17503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5477921366691589
    2. '[-' → logprob: -0.9227921366691589
    3. 'and' → logprob: -3.7977921962738037
    4. '>' → logprob: -6.922791957855225
    5. '[' → logprob: -7.172791957855225
    6. '.endswith' → logprob: -9.422792434692383
    7. '==' → logprob: -10.297792434692383
    8. ':' → logprob: -11.297792434692383
    9. '[len' → logprob: -11.797792434692383
    10. '&&' → logprob: -11.922792434692383

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00040636269841343164
    2. ''\' → logprob: -8.500406265258789
    3. '\n' → logprob: -9.000406265258789
    4. '\' → logprob: -10.625406265258789
    5. ' ' → logprob: -11.125406265258789
    6. '"\' → logprob: -11.500406265258789
    7. '('\' → logprob: -11.500406265258789
    8. '='\' → logprob: -12.375406265258789
    9. '
' → logprob: -12.500406265258789
    10. '   ' → logprob: -12.875406265258789

Token 102: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03734798729419708
    2. ' ==' → logprob: -3.4123480319976807
    3. '=='' → logprob: -6.037347793579102
    4. '=' → logprob: -7.162347793579102
    5. '==
' → logprob: -7.912347793579102
    6. '=="' → logprob: -9.662347793579102
    7. ' in' → logprob: -10.162347793579102
    8. '===' → logprob: -11.037347793579102
    9. ' ' → logprob: -11.537347793579102
    10. '==(' → logprob: -11.787347793579102

Token 103: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.006499481853097677
    2. '==
' → logprob: -5.506499290466309
    3. ' ==' → logprob: -6.631499290466309
    4. '=' → logprob: -7.006499290466309
    5. '=='' → logprob: -8.756499290466309
    6. '=="' → logprob: -11.131499290466309
    7. '\n' → logprob: -12.131499290466309
    8. ' in' → logprob: -12.506499290466309
    9. 'in' → logprob: -13.131499290466309
    10. '===' → logprob: -13.506499290466309

Token 104: ' "\' (ID: 6512)
  Prédit: ''\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''\' → logprob: -0.0006234417669475079
    2. ' '\' → logprob: -8.25062370300293
    3. ''
' → logprob: -8.50062370300293
    4. '\n' → logprob: -9.50062370300293
    5. '"\' → logprob: -9.75062370300293
    6. ''' → logprob: -11.25062370300293
    7. '`\' → logprob: -11.75062370300293
    8. '`
' → logprob: -13.62562370300293
    9. '
' → logprob: -14.25062370300293
    10. '\
' → logprob: -14.50062370300293

Token 105: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.320199877838604e-07
    2. '\n' → logprob: -15.25
    3. ' n' → logprob: -16.5
    4. '
' → logprob: -17.25
    5. '"' → logprob: -19.75
    6. 'newline' → logprob: -20.75
    7. '```' → logprob: -20.75
    8. '	n' → logprob: -21.0
    9. ' ' → logprob: -21.125
    10. 'r' → logprob: -21.875

Token 106: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.02183237299323082
    2. '"' → logprob: -4.021832466125488
    3. '":
' → logprob: -5.646832466125488
    4. ':' → logprob: -10.521832466125488
    5. ')' → logprob: -10.646832466125488
    6. ']' → logprob: -11.021832466125488
    7. '):' → logprob: -11.021832466125488
    8. ')":' → logprob: -11.021832466125488
    9. '"):' → logprob: -11.646832466125488
    10. '"]:' → logprob: -11.646832466125488

Token 107: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3095054030418396
    2. ' res' → logprob: -1.5595054626464844
    3. 'res' → logprob: -3.0595054626464844
    4. '	res' → logprob: -4.809505462646484
    5. '
' → logprob: -7.934505462646484
    6. ' del' → logprob: -8.809505462646484
    7. '    
' → logprob: -8.809505462646484
    8. '.res' → logprob: -9.184505462646484
    9. '_res' → logprob: -11.059505462646484
    10. '.pop' → logprob: -11.059505462646484

Token 108: ' return' (ID: 622)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.05530501902103424
    2. ' res' → logprob: -2.930305004119873
    3. '   ' → logprob: -7.930305004119873
    4. '	res' → logprob: -10.805305480957031
    5. 'del' → logprob: -11.180305480957031
    6. ' del' → logprob: -11.305305480957031
    7. '
' → logprob: -11.555305480957031
    8. 'r' → logprob: -13.430305480957031
    9. 're' → logprob: -13.680305480957031
    10. 'return' (adapté à ' return') → logprob: -14.055305480957031

Token 109: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.02975071594119072
    2. ' res' → logprob: -3.5297508239746094
    3. '	res' → logprob: -16.15475082397461
    4. '"' → logprob: -17.15475082397461
    5. '(res' → logprob: -17.15475082397461
    6. '[' → logprob: -17.52975082397461
    7. 're' → logprob: -17.77975082397461
    8. ' ' → logprob: -17.90475082397461
    9. '$res' → logprob: -17.90475082397461
    10. 'r' → logprob: -18.27975082397461

Token 110: '[:-' (ID: 63556)
  Prédit: '[:-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -2.8921695047756657e-05
    2. '[' → logprob: -10.500028610229492
    3. '[:' → logprob: -13.875028610229492
    4. '[:]' → logprob: -15.250028610229492
    5. '0' → logprob: -16.000028610229492
    6. '.rstrip' → logprob: -17.750028610229492
    7. '[
' → logprob: -18.250028610229492
    8. '[]' → logprob: -18.375028610229492
    9. ' ' → logprob: -18.625028610229492
    10. '[-' → logprob: -18.750028610229492

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. ']' → logprob: -16.75
    4. '   ' → logprob: -17.5
    5. 'newline' → logprob: -19.0
    6. '１' → logprob: -20.25
    7. '  ' → logprob: -20.375
    8. '
' → logprob: -20.875
    9. '-' → logprob: -21.0
    10. 'len' → logprob: -22.0

Token 112: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003396343090571463
    2. ' ]' → logprob: -8.62533950805664
    3. '<|end|>' → logprob: -9.12533950805664
    4. ']
' → logprob: -10.25033950805664
    5. ')' → logprob: -12.37533950805664
    6. '   ' → logprob: -12.50033950805664
    7. '}' → logprob: -13.37533950805664
    8. '']' → logprob: -13.62533950805664
    9. '<|end|>' → logprob: -13.62533950805664
    10. ' ' → logprob: -14.25033950805664

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005898815114051104
    2. '<|end|>' → logprob: -5.380898952484131
    3. ' ' → logprob: -8.505898475646973
    4. '    
' → logprob: -8.630898475646973
    5. '	return' → logprob: -9.005898475646973
    6. 'return' → logprob: -9.380898475646973
    7. '
' → logprob: -9.380898475646973
    8. 'else' → logprob: -9.505898475646973
    9. '\n' → logprob: -9.505898475646973
    10. '  ' → logprob: -9.630898475646973

Token 114: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11100880801677704
    2. 'return' (adapté à ' return') → logprob: -2.486008882522583
    3. 'else' → logprob: -4.861008644104004
    4. ' return' → logprob: -5.111008644104004
    5. ' else' → logprob: -5.486008644104004
    6. ' ' → logprob: -6.486008644104004
    7. '	return' → logprob: -7.111008644104004
    8. ':return' → logprob: -7.736008644104004
    9. '<|end|>' → logprob: -7.986008644104004
    10. ')' → logprob: -8.486008644104004

Token 115: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0024780353996902704
    2. ' res' → logprob: -6.002478122711182
    3. '[]' → logprob: -13.127477645874023
    4. 's' → logprob: -16.502477645874023
    5. '	res' → logprob: -16.627477645874023
    6. 're' → logprob: -17.002477645874023
    7. '(res' → logprob: -17.127477645874023
    8. 'r' → logprob: -17.252477645874023
    9. 'ress' → logprob: -17.252477645874023
    10. 'resi' → logprob: -17.252477645874023

Token 116: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04780386760830879
    2. 'def' → logprob: -3.6728038787841797
    3. '<|end|>' → logprob: -4.54780387878418
    4. '\n' → logprob: -5.17280387878418
    5. '

' → logprob: -7.17280387878418
    6. '#' → logprob: -7.29780387878418
    7. 'newline' → logprob: -7.54780387878418
    8. ':' → logprob: -7.67280387878418
    9. 'n' → logprob: -8.04780387878418
    10. '```' → logprob: -8.17280387878418

Token 117: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1958039551973343
    2. 'def' → logprob: -2.1958038806915283
    3. '#' → logprob: -3.0708038806915283
    4. ' 
' → logprob: -5.195804119110107
    5. '\n' → logprob: -5.695804119110107
    6. '<|end|>' → logprob: -5.695804119110107
    7. '  
' → logprob: -5.945804119110107
    8. '\' → logprob: -6.695804119110107
    9. 'd' → logprob: -7.070804119110107
    10. '' → logprob: -7.195804119110107

Token 118: ' IR' (ID: 23712)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.011920606717467308
    2. 'main' → logprob: -4.76192045211792
    3. ' ' → logprob: -7.26192045211792
    4. ' input' → logprob: -7.76192045211792
    5. '_main' → logprob: -8.136920928955078
    6. ' solve' → logprob: -8.261920928955078
    7. ' ma' → logprob: -8.511920928955078
    8. ' M' → logprob: -8.511920928955078
    9. ' max' → logprob: -8.636920928955078
    10. '_' → logprob: -9.261920928955078

Token 119: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.003131728619337082
    2. 'E' → logprob: -6.128131866455078
    3. '()' → logprob: -7.253131866455078
    4. 'ead' → logprob: -9.378131866455078
    5. '():
' → logprob: -9.378131866455078
    6. 'e' → logprob: -10.378131866455078
    7. ' ():' → logprob: -11.628131866455078
    8. '):' → logprob: -12.003131866455078
    9. 'EC' → logprob: -12.878131866455078
    10. 'eturn' → logprob: -12.878131866455078

Token 120: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004493805463425815
    2. ')' → logprob: -8.000449180603027
    3. ' ):' → logprob: -9.250449180603027
    4. '):
' → logprob: -11.000449180603027
    5. '):
' → logprob: -15.125449180603027
    6. ':' → logprob: -15.875449180603027
    7. ')：' → logprob: -16.000450134277344
    8. ''):' → logprob: -16.125450134277344
    9. ' )' → logprob: -16.750450134277344
    10. ' ' → logprob: -16.875450134277344

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09568213671445847
    2. ':' → logprob: -2.720682144165039
    3. ' return' → logprob: -4.595682144165039
    4. ':
' → logprob: -4.720682144165039
    5. ' ' → logprob: -6.095682144165039
    6. '	return' → logprob: -6.345682144165039
    7. '[' → logprob: -7.470682144165039
    8. ':return' → logprob: -7.845682144165039
    9. ' for' → logprob: -8.470682144165039
    10. '
' → logprob: -8.970682144165039

Token 122: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.06924602389335632
    2. 'return' (adapté à ' return') → logprob: -2.8192460536956787
    3. ' res' → logprob: -5.3192458152771
    4. ' r' → logprob: -6.9442458152771
    5. 'res' → logprob: -7.5692458152771
    6. 'r' → logprob: -7.6942458152771
    7. ' for' → logprob: -8.444246292114258
    8. '   ' → logprob: -10.194246292114258
    9. ' arr' → logprob: -10.319246292114258
    10. 'for' → logprob: -10.569246292114258

Token 123: ' [' (ID: 723)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.045048490166664124
    2. '[' → logprob: -3.295048475265503
    3. '[I' → logprob: -5.295048713684082
    4. ' [' → logprob: -6.545048713684082
    5. '[Int' → logprob: -8.420048713684082
    6. '[list' → logprob: -8.545048713684082
    7. '[i' → logprob: -9.670048713684082
    8. '[List' → logprob: -11.170048713684082
    9. '[n' → logprob: -11.545048713684082
    10. '[L' → logprob: -12.670048713684082

Token 124: 'I' (ID: 40)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.47409483790397644
    2. 'I' → logprob: -0.9740948677062988
    3. ' I' → logprob: -11.59909439086914
    4. ' int' → logprob: -12.09909439086914
    5. '[int' → logprob: -14.09909439086914
    6. '(int' → logprob: -14.47409439086914
    7. '<int' → logprob: -14.97409439086914
    8. '
' → logprob: -15.09909439086914
    9. 'Int' → logprob: -15.47409439086914
    10. 'ints' → logprob: -15.97409439086914

Token 125: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -8.41866585687967e-06
    2. '()]' → logprob: -11.875008583068848
    3. '()
' → logprob: -14.375008583068848
    4. ' ()' → logprob: -14.375008583068848
    5. '(' → logprob: -15.375008583068848
    6. '（）' → logprob: -17.87500762939453
    7. '()+' → logprob: -19.00000762939453
    8. '()\' → logprob: -19.12500762939453
    9. ']()' → logprob: -19.25000762939453
    10. '()]
' → logprob: -19.25000762939453

Token 126: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006943239714019
    2. 'for' → logprob: -7.625694274902344
    3. ' for' → logprob: -8.500694274902344
    4. ')' → logprob: -14.125694274902344
    5. ' ()' → logprob: -14.125694274902344
    6. '()]' → logprob: -14.625694274902344
    7. '(' → logprob: -14.750694274902344
    8. '	for' → logprob: -15.125694274902344
    9. '()
' → logprob: -15.625694274902344
    10. ']' → logprob: -15.875694274902344

Token 127: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.043119657784700394
    2. ' _' → logprob: -3.1681196689605713
    3. ' ' → logprob: -9.043119430541992
    4. ' i' → logprob: -13.543119430541992
    5. '(' → logprob: -15.043119430541992
    6. ' ' → logprob: -15.668119430541992
    7. '_i' → logprob: -16.043119430541992
    8. 'i' → logprob: -16.418119430541992
    9. ' in' → logprob: -16.793119430541992
    10. ' range' → logprob: -17.043119430541992

Token 128: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.45373833179473877
    2. 'in' → logprob: -1.3287383317947388
    3. 'n' → logprob: -2.828738212585449
    4. ' ' → logprob: -3.953738212585449
    5. '_' → logprob: -4.078738212585449
    6. ' n' → logprob: -6.328738212585449
    7. 'range' → logprob: -6.453738212585449
    8. ' range' → logprob: -7.578738212585449
    9. '(n' → logprob: -8.07873821258545
    10. '(' → logprob: -8.82873821258545

Token 129: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02976287715137005
    2. ' range' → logprob: -3.5297629833221436
    3. 'rang' → logprob: -12.654763221740723
    4. '	range' → logprob: -12.654763221740723
    5. ' ' → logprob: -13.029763221740723
    6. '(range' → logprob: -13.779763221740723
    7. 'ran' → logprob: -13.779763221740723
    8. 'ra' → logprob: -14.279763221740723
    9. ' ran' → logprob: -14.654763221740723
    10. 'r' → logprob: -15.029763221740723

Token 130: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0010356683051213622
    2. '(' → logprob: -6.876035690307617
    3. ' n' → logprob: -13.376035690307617
    4. ' (' → logprob: -14.001035690307617
    5. 'n' → logprob: -14.751035690307617
    6. '(
' → logprob: -16.501035690307617
    7. ')n' → logprob: -16.751035690307617
    8. '	n' → logprob: -17.126035690307617
    9. '(nx' → logprob: -18.751035690307617
    10. '(nt' → logprob: -19.001035690307617

Token 131: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.4849443838757e-06
    2. ')' → logprob: -12.625004768371582
    3. ']' → logprob: -13.875004768371582
    4. ')]
' → logprob: -16.250003814697266
    5. '))' → logprob: -17.625003814697266
    6. ' )' → logprob: -18.000003814697266
    7. ')}' → logprob: -18.500003814697266
    8. ')].' → logprob: -18.750003814697266
    9. '}]' → logprob: -18.750003814697266
    10. ')],' → logprob: -18.875003814697266

Token 132: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09674116969108582
    2. 'def' → logprob: -2.721741199493408
    3. '<|end|>' → logprob: -3.721741199493408
    4. ' 
' → logprob: -7.221741199493408
    5. '\n' → logprob: -7.971741199493408
    6. ':' → logprob: -8.09674072265625
    7. '#' → logprob: -9.09674072265625
    8. '

' → logprob: -9.34674072265625
    9. ':def' → logprob: -9.34674072265625
    10. '<|end|>' → logprob: -9.59674072265625

Token 133: ' L' (ID: 451)
  Prédit: 'LS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LS' → logprob: -0.19184958934783936
    2. 'LR' → logprob: -2.316849708557129
    3. 'L' → logprob: -3.066849708557129
    4. 'IRS' → logprob: -4.441849708557129
    5. 'SR' → logprob: -4.816849708557129
    6. 'LI' → logprob: -5.941849708557129
    7. 'IR' → logprob: -6.066849708557129
    8. 'IS' → logprob: -6.441849708557129
    9. ' L' → logprob: -7.066849708557129
    10. 'S' → logprob: -7.566849708557129

Token 134: 'IR' (ID: 4368)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -1.5332478142227046e-05
    2. 'IR' → logprob: -11.750015258789062
    3. 'S' → logprob: -14.125015258789062
    4. 'IST' → logprob: -14.125015258789062
    5. 'R' → logprob: -14.250015258789062
    6. '```' → logprob: -14.375015258789062
    7. '(n' → logprob: -14.625015258789062
    8. 'ist' → logprob: -14.875015258789062
    9. ' I' → logprob: -15.125015258789062
    10. '(' → logprob: -15.125015258789062

Token 135: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.375000953674316
    3. ' (' → logprob: -17.0
    4. '(N' → logprob: -17.25
    5. '(num' → logprob: -18.0
    6. '(i' → logprob: -19.125
    7. '(size' → logprob: -19.5
    8. '(nn' → logprob: -20.0
    9. '(a' → logprob: -20.125
    10. 'n' → logprob: -20.5

Token 136: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00028612653841264546
    2. '):
' → logprob: -8.750286102294922
    3. ')' → logprob: -9.000286102294922
    4. ']:' → logprob: -13.250286102294922
    5. '):
' → logprob: -14.000286102294922
    6. '):

' → logprob: -14.125286102294922
    7. '）：' → logprob: -14.750286102294922
    8. '():' → logprob: -15.625286102294922
    9. ' ):' → logprob: -15.750286102294922
    10. ')]' → logprob: -15.875286102294922

Token 137: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7206950783729553
    2. '   ' → logprob: -1.4706950187683105
    3. ':' → logprob: -1.9706950187683105
    4. 'return' → logprob: -2.4706950187683105
    5. ':return' → logprob: -3.2206950187683105
    6. ':
' → logprob: -4.0956950187683105
    7. '[' → logprob: -7.3456950187683105
    8. '():' → logprob: -7.3456950187683105
    9. '):' → logprob: -7.9706950187683105
    10. ' ' → logprob: -7.9706950187683105

Token 138: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08121182769536972
    2. ' return' → logprob: -2.581211805343628
    3. '[' → logprob: -6.206212043762207
    4. ' [' → logprob: -8.456212043762207
    5. '   ' → logprob: -9.956212043762207
    6. '[]' → logprob: -10.581212043762207
    7. '[int' → logprob: -12.456212043762207
    8. ':return' → logprob: -13.331212043762207
    9. '[[' → logprob: -13.456212043762207
    10. '[r' → logprob: -13.831212043762207

Token 139: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009108675294555724
    2. '[int' → logprob: -7.250910758972168
    3. ' [' → logprob: -8.750910758972168
    4. '[List' → logprob: -10.750910758972168
    5. '[list' → logprob: -11.125910758972168
    6. '[Int' → logprob: -12.375910758972168
    7. '[L' → logprob: -14.375910758972168
    8. '[I' → logprob: -14.625910758972168
    9. '[[' → logprob: -15.125910758972168
    10. '[len' → logprob: -15.250910758972168

Token 140: 'LI' (ID: 14313)
  Prédit: 'LI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -1.6240566083070007e-06
    2. 'list' → logprob: -14.125001907348633
    3. 'int' → logprob: -14.625001907348633
    4. 'li' → logprob: -15.750001907348633
    5. ' LI' → logprob: -15.750001907348633
    6. 'tuple' → logprob: -17.125001907348633
    7. '[' → logprob: -18.000001907348633
    8. 'Li' → logprob: -18.000001907348633
    9. '[int' → logprob: -18.250001907348633
    10. 'I' → logprob: -21.750001907348633

Token 141: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00034118397161364555
    2. '(n' → logprob: -8.000341415405273
    3. '()]' → logprob: -12.750341415405273
    4. ' ()' → logprob: -13.750341415405273
    5. '(i' → logprob: -14.125341415405273
    6. '(' → logprob: -14.625341415405273
    7. '()
' → logprob: -15.125341415405273
    8. '()(' → logprob: -16.250341415405273
    9. '().' → logprob: -17.125341415405273
    10. '()[' → logprob: -17.125341415405273

Token 142: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.822646693966817e-06
    2. '(' → logprob: -12.500007629394531
    3. 'for' → logprob: -13.125007629394531
    4. ' for' → logprob: -14.125007629394531
    5. ' (' → logprob: -14.750007629394531
    6. 'n' → logprob: -14.875007629394531
    7. '()' → logprob: -15.125007629394531
    8. '(i' → logprob: -15.125007629394531
    9. ')' → logprob: -19.62500762939453
    10. ' n' → logprob: -20.37500762939453

Token 143: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.13768832385540009
    2. ' i' → logprob: -2.137688398361206
    3. '_' → logprob: -4.637688159942627
    4. ' range' → logprob: -7.387688159942627
    5. 'range' → logprob: -8.762688636779785
    6. '(i' → logprob: -9.137688636779785
    7. ' _' → logprob: -9.512688636779785
    8. '_i' → logprob: -10.137688636779785
    9. ' in' → logprob: -11.387688636779785
    10. ' ' → logprob: -12.387688636779785

Token 144: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2020653337240219
    2. 'in' → logprob: -1.702065348625183
    3. 'n' → logprob: -7.702065467834473
    4. '(' → logprob: -9.327065467834473
    5. 'i' → logprob: -10.577065467834473
    6. '(n' → logprob: -10.702065467834473
    7. 'range' → logprob: -10.702065467834473
    8. ' i' → logprob: -11.077065467834473
    9. ' ' → logprob: -11.327065467834473
    10. ' n' → logprob: -13.202065467834473

Token 145: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0041059465147554874
    2. ' range' → logprob: -5.504106044769287
    3. '(range' → logprob: -10.504105567932129
    4. 'rang' → logprob: -17.504106521606445
    5. '	range' → logprob: -17.754106521606445
    6. 'ange' → logprob: -18.129106521606445
    7. '(' → logprob: -18.879106521606445
    8. 'ran' → logprob: -19.004106521606445
    9. 'r' → logprob: -19.129106521606445
    10. '(n' → logprob: -19.379106521606445

Token 146: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.9795445849886164e-05
    2. 'n' → logprob: -10.250060081481934
    3. '(' → logprob: -10.625060081481934
    4. ' n' → logprob: -17.375059127807617
    5. ' (' → logprob: -18.000059127807617
    6. '(
' → logprob: -18.250059127807617
    7. '	n' → logprob: -19.250059127807617
    8. 's' → logprob: -20.625059127807617
    9. ')n' → logprob: -20.625059127807617
    10. '   ' → logprob: -21.500059127807617

Token 147: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0007881867350079119
    2. ']' → logprob: -7.50078821182251
    3. '()]' → logprob: -8.375787734985352
    4. ')' → logprob: -12.625787734985352
    5. '()' → logprob: -15.000787734985352
    6. '}]' → logprob: -15.125787734985352
    7. '())' → logprob: -15.500787734985352
    8. '])' → logprob: -15.500787734985352
    9. '(' → logprob: -15.750787734985352
    10. '')]' → logprob: -16.25078773498535

Token 148: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.38660407066345215
    2. '
' → logprob: -1.3866040706634521
    3. '<|end|>' → logprob: -3.011604070663452
    4. '#' → logprob: -4.636604309082031
    5. '\n' → logprob: -5.886604309082031
    6. '\' → logprob: -6.136604309082031
    7. ' 
' → logprob: -6.511604309082031
    8. ':' → logprob: -6.636604309082031
    9. ' ' → logprob: -7.511604309082031
    10. 'd' → logprob: -7.761604309082031

Token 149: ' SR' (ID: 30704)
  Prédit: 'SR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SR' → logprob: -0.09617611765861511
    2. 'LS' → logprob: -2.9711761474609375
    3. 'IR' → logprob: -4.0961761474609375
    4. 'S' → logprob: -4.4711761474609375
    5. 'main' → logprob: -5.7211761474609375
    6. 'print' → logprob: -6.4711761474609375
    7. 'RS' → logprob: -6.5961761474609375
    8. 'IS' → logprob: -6.9711761474609375
    9. 'SI' → logprob: -6.9711761474609375
    10. ' SR' → logprob: -7.5961761474609375

Token 150: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.011550189927220345
    2. '():' → logprob: -4.511550426483154
    3. '()' → logprob: -7.886550426483154
    4. '()(' → logprob: -9.761549949645996
    5. '():
' → logprob: -10.261549949645996
    6. '(' → logprob: -10.386549949645996
    7. '(N' → logprob: -13.511549949645996
    8. '(num' → logprob: -15.511549949645996
    9. ' (' → logprob: -15.886549949645996
    10. '():
' → logprob: -16.136550903320312

Token 151: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004170764237642288
    2. '):
' → logprob: -5.504170894622803
    3. ')' → logprob: -9.379170417785645
    4. '):
' → logprob: -12.629170417785645
    5. ']:' → logprob: -13.004170417785645
    6. ' ):' → logprob: -14.004170417785645
    7. '):

' → logprob: -14.379170417785645
    8. '）：' → logprob: -15.754170417785645
    9. '():' → logprob: -15.879170417785645
    10. '):(' → logprob: -16.00417137145996

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007024224614724517
    2. ' return' → logprob: -7.375702381134033
    3. 'return' → logprob: -9.625702857971191
    4. '[' → logprob: -13.375702857971191
    5. ' ' → logprob: -13.500702857971191
    6. '	return' → logprob: -13.875702857971191
    7. ':
' → logprob: -13.875702857971191
    8. 'def' → logprob: -14.500702857971191
    9. '
' → logprob: -14.625702857971191
    10. '    
' → logprob: -14.625702857971191

Token 153: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6800485849380493
    2. '[' → logprob: -0.8050485849380493
    3. '[S' → logprob: -3.5550484657287598
    4. ' [' → logprob: -5.18004846572876
    5. ' return' → logprob: -5.30504846572876
    6. '[s' → logprob: -5.80504846572876
    7. '[list' → logprob: -6.93004846572876
    8. '   ' → logprob: -7.68004846572876
    9. '[line' → logprob: -7.93004846572876
    10. '[r' → logprob: -8.305048942565918

Token 154: ' [' (ID: 723)
  Prédit: '[S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[S' → logprob: -0.048038627952337265
    2. ' [' → logprob: -3.4230387210845947
    3. '[' → logprob: -4.298038482666016
    4. '[list' → logprob: -7.673038482666016
    5. '[s' → logprob: -8.923038482666016
    6. '[String' → logprob: -10.673038482666016
    7. '[List' → logprob: -11.298038482666016
    8. ' S' → logprob: -11.798038482666016
    9. '['' → logprob: -11.798038482666016
    10. '[str' → logprob: -11.923038482666016

Token 155: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00021057340200059116
    2. 'list' → logprob: -8.500210762023926
    3. 'sys' → logprob: -12.000210762023926
    4. ' S' → logprob: -14.125210762023926
    5. 'input' → logprob: -16.62520980834961
    6. 's' → logprob: -16.75020980834961
    7. 'str' → logprob: -17.12520980834961
    8. '_S' → logprob: -17.37520980834961
    9. '(list' → logprob: -18.12520980834961
    10. '(S' → logprob: -18.37520980834961

Token 156: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03815968707203865
    2. '(n' → logprob: -3.2881596088409424
    3. '(i' → logprob: -9.663159370422363
    4. ' ()' → logprob: -10.288159370422363
    5. '()]' → logprob: -11.163159370422363
    6. '(' → logprob: -12.288159370422363
    7. ' (' → logprob: -14.663159370422363
    8. '()(' → logprob: -14.788159370422363
    9. '()
' → logprob: -15.163159370422363
    10. 'for' → logprob: -15.538159370422363

Token 157: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00014370749704539776
    2. 'for' → logprob: -9.625144004821777
    3. ')' → logprob: -10.375144004821777
    4. ' for' → logprob: -10.625144004821777
    5. '(' → logprob: -11.250144004821777
    6. '(i' → logprob: -12.375144004821777
    7. ' (' → logprob: -13.000144004821777
    8. 'n' → logprob: -13.125144004821777
    9. '()' → logprob: -15.000144004821777
    10. ')n' → logprob: -16.00014305114746

Token 158: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005385776050388813
    2. ' i' → logprob: -5.255385875701904
    3. '_' → logprob: -9.005385398864746
    4. 'range' → logprob: -11.505385398864746
    5. ' range' → logprob: -11.755385398864746
    6. 'n' → logprob: -12.255385398864746
    7. ' in' → logprob: -12.755385398864746
    8. '(i' → logprob: -13.880385398864746
    9. '_i' → logprob: -13.880385398864746
    10. 'in' → logprob: -14.005385398864746

Token 159: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2679656744003296
    2. 'in' → logprob: -1.5179656744003296
    3. '(' → logprob: -4.392965793609619
    4. 'n' → logprob: -6.517965793609619
    5. ' ' → logprob: -7.267965793609619
    6. '(n' → logprob: -7.642965793609619
    7. ' (' → logprob: -7.642965793609619
    8. ' i' → logprob: -8.767965316772461
    9. 'range' → logprob: -9.142965316772461
    10. 'i' → logprob: -10.142965316772461

Token 160: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011676029535010457
    2. '(range' → logprob: -7.5011677742004395
    3. ' range' → logprob: -7.6261677742004395
    4. '(n' → logprob: -9.001167297363281
    5. 'n' → logprob: -13.626167297363281
    6. '(' → logprob: -14.001167297363281
    7. 'rang' → logprob: -14.626167297363281
    8. '(r' → logprob: -14.876167297363281
    9. 'ra' → logprob: -15.376167297363281
    10. 'r' → logprob: -15.376167297363281

Token 161: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00043221889063715935
    2. 'n' → logprob: -7.875432014465332
    3. '(' → logprob: -9.875432014465332
    4. ' (' → logprob: -14.625432014465332
    5. '(
' → logprob: -15.875432014465332
    6. ' n' → logprob: -17.00043296813965
    7. ')' → logprob: -18.50043296813965
    8. ')n' → logprob: -18.50043296813965
    9. '   ' → logprob: -19.00043296813965
    10. '
' → logprob: -19.25043296813965

Token 162: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0001495484757469967
    2. ')' → logprob: -8.875149726867676
    3. ']' → logprob: -11.750149726867676
    4. '):' → logprob: -14.375149726867676
    5. ')]
' → logprob: -14.875149726867676
    6. ' )' → logprob: -15.875149726867676
    7. ')],' → logprob: -16.00014877319336
    8. '))' → logprob: -16.00014877319336
    9. ')}' → logprob: -16.25014877319336
    10. ')].' → logprob: -16.62514877319336

Token 163: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.020144619047641754
    2. 'd' → logprob: -4.145144462585449
    3. '#' → logprob: -5.770144462585449
    4. 'n' → logprob: -8.14514446258545
    5. 'class' → logprob: -8.39514446258545
    6. 'a' → logprob: -9.02014446258545
    7. '
' → logprob: -9.77014446258545
    8. 'de' → logprob: -9.89514446258545
    9. '<|end|>' → logprob: -10.14514446258545
    10. '0' → logprob: -10.39514446258545

Token 164: ' L' (ID: 451)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5411199331283569
    2. 'main' → logprob: -0.9161199331283569
    3. ' solve' → logprob: -5.4161200523376465
    4. 'solve' → logprob: -5.9161200523376465
    5. 'D' → logprob: -6.5411200523376465
    6. 'T' → logprob: -6.7911200523376465
    7. 'M' → logprob: -7.2911200523376465
    8. 'dfs' → logprob: -7.4161200523376465
    9. ' D' → logprob: -7.7911200523376465
    10. 'LI' → logprob: -8.041119575500488

Token 165: 'SR' (ID: 22892)
  Prédit: 'IR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IR' → logprob: -0.2820803225040436
    2. 'I' → logprob: -1.5320802927017212
    3. 'R' → logprob: -3.7820804119110107
    4. 'SR' → logprob: -5.657080173492432
    5. 'S' → logprob: -5.782080173492432
    6. 'def' → logprob: -9.03208065032959
    7. 'IS' → logprob: -9.15708065032959
    8. '(IR' → logprob: -10.90708065032959
    9. ' IR' → logprob: -11.28208065032959
    10. '(' → logprob: -11.65708065032959

Token 166: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.8550976164988242e-05
    2. '(' → logprob: -11.000018119812012
    3. ' (' → logprob: -13.625018119812012
    4. '():' → logprob: -14.375018119812012
    5. '(
' → logprob: -18.000019073486328
    6. 'def' → logprob: -18.750019073486328
    7. '():
' → logprob: -19.000019073486328
    8. '(N' → logprob: -19.125019073486328
    9. '()(' → logprob: -20.000019073486328
    10. 'n' → logprob: -20.125019073486328

Token 167: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -9.913265239447355e-05
    2. '):
' → logprob: -9.375099182128906
    3. ')' → logprob: -11.250099182128906
    4. '():' → logprob: -14.250099182128906
    5. ' ):' → logprob: -14.875099182128906
    6. '):

' → logprob: -16.500099182128906
    7. ']:' → logprob: -16.625099182128906
    8. '):
' → logprob: -16.750099182128906
    9. 'def' → logprob: -17.000099182128906
    10. '(n' → logprob: -17.500099182128906

Token 168: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.000678361626341939
    2. '   ' → logprob: -7.625678539276123
    3. '(' → logprob: -9.375678062438965
    4. ':' → logprob: -9.875678062438965
    5. ' (' → logprob: -10.875678062438965
    6. ' n' → logprob: -11.125678062438965
    7. ' return' → logprob: -11.750678062438965
    8. ' =' → logprob: -13.250678062438965
    9. 'n' → logprob: -13.250678062438965
    10. ':return' → logprob: -13.500678062438965

Token 169: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1603224277496338
    2. 'return' (adapté à ' return') → logprob: -2.160322427749634
    3. '[L' → logprob: -3.910322427749634
    4. ' return' → logprob: -5.035322189331055
    5. ' [' → logprob: -5.410322189331055
    6. '[List' → logprob: -7.535322189331055
    7. '[S' → logprob: -7.660322189331055
    8. '[int' → logprob: -8.785322189331055
    9. '[list' → logprob: -8.785322189331055
    10. 'def' → logprob: -9.035322189331055

Token 170: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.020792949944734573
    2. '[L' → logprob: -4.0207929611206055
    3. ' [' → logprob: -6.0207929611206055
    4. '[List' → logprob: -9.270792961120605
    5. '[S' → logprob: -9.645792961120605
    6. '[int' → logprob: -10.395792961120605
    7. '[list' → logprob: -11.020792961120605
    8. '[len' → logprob: -13.520792961120605
    9. '[Int' → logprob: -13.645792961120605
    10. '[line' → logprob: -13.895792961120605

Token 171: 'LS' (ID: 10172)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.20270906388759613
    2. 'LS' → logprob: -1.9527090787887573
    3. 'list' → logprob: -3.2027089595794678
    4. '[S' → logprob: -7.077709197998047
    5. '[list' → logprob: -10.327709197998047
    6. '[' → logprob: -10.577709197998047
    7. 'ls' → logprob: -11.077709197998047
    8. 'sys' → logprob: -11.952709197998047
    9. ' list' → logprob: -12.202709197998047
    10. '(list' → logprob: -13.202709197998047

Token 172: '()' (ID: 416)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5780482292175293
    2. '()' → logprob: -0.8280482292175293
    3. '()]' → logprob: -6.328048229217529
    4. '(' → logprob: -8.453048706054688
    5. ' ()' → logprob: -10.203048706054688
    6. '()(' → logprob: -10.453048706054688
    7. '()
' → logprob: -10.703048706054688
    8. ' (' → logprob: -11.703048706054688
    9. '(i' → logprob: -12.703048706054688
    10. '()+' → logprob: -13.828048706054688

Token 173: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.641841820150148e-05
    2. 'for' → logprob: -10.87502670288086
    3. '(' → logprob: -12.25002670288086
    4. ' (' → logprob: -13.37502670288086
    5. ' for' → logprob: -14.00002670288086
    6. ')' → logprob: -16.25002670288086
    7. 'n' → logprob: -16.25002670288086
    8. '(i' → logprob: -17.00002670288086
    9. '()' → logprob: -19.12502670288086
    10. '((' → logprob: -19.25002670288086

Token 174: ' i' (ID: 575)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0030277445912361145
    2. '(n' → logprob: -6.00302791595459
    3. ' n' → logprob: -7.50302791595459
    4. ')n' → logprob: -15.37802791595459
    5. 'int' → logprob: -16.128026962280273
    6. 'range' → logprob: -16.503026962280273
    7. '	n' → logprob: -16.753026962280273
    8. ',n' → logprob: -18.003026962280273
    9. '<n' → logprob: -18.253026962280273
    10. '[n' → logprob: -19.503026962280273

Token 175: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5889902710914612
    2. ' in' → logprob: -0.9639902710914612
    3. 'range' → logprob: -3.0889902114868164
    4. '(' → logprob: -4.463990211486816
    5. ' range' → logprob: -5.338990211486816
    6. '(range' → logprob: -6.838990211486816
    7. ' ' → logprob: -8.088990211486816
    8. ' (' → logprob: -8.588990211486816
    9. 'i' → logprob: -9.088990211486816
    10. ' i' → logprob: -9.588990211486816

Token 176: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001978118671104312
    2. ' range' → logprob: -6.251977920532227
    3. '(range' → logprob: -10.001977920532227
    4. '(n' → logprob: -12.876977920532227
    5. 'rang' → logprob: -13.501977920532227
    6. 'n' → logprob: -16.376977920532227
    7. 'ran' → logprob: -16.376977920532227
    8. 'ange' → logprob: -16.876977920532227
    9. '(' → logprob: -17.251977920532227
    10. 'r' → logprob: -18.001977920532227

Token 177: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.700132997939363e-05
    2. 'n' → logprob: -11.125017166137695
    3. '(' → logprob: -13.125017166137695
    4. ' (' → logprob: -15.125017166137695
    5. ' n' → logprob: -17.875017166137695
    6. ')' → logprob: -19.125017166137695
    7. '(
' → logprob: -19.500017166137695
    8. ')n' → logprob: -20.000017166137695
    9. 'def' → logprob: -20.375017166137695
    10. '((' → logprob: -21.000017166137695

Token 178: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00130094971973449
    2. ')' → logprob: -7.126300811767578
    3. '):' → logprob: -7.751300811767578
    4. ']' → logprob: -10.501300811767578
    5. '(n' → logprob: -10.751300811767578
    6. 'n' → logprob: -11.626300811767578
    7. ')]
' → logprob: -12.751300811767578
    8. ')n' → logprob: -13.626300811767578
    9. '()]' → logprob: -14.001300811767578
    10. '))' → logprob: -14.501300811767578

Token 179: 'sys' (ID: 17324)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.23113389313220978
    2. 'def' → logprob: -1.6061339378356934
    3. '
' → logprob: -5.981133937835693
    4. 'n' → logprob: -6.356133937835693
    5. '\' → logprob: -7.731133937835693
    6. 'de' → logprob: -8.106133460998535
    7. '#' → logprob: -8.856133460998535
    8. 'a' → logprob: -8.981133460998535
    9. '\n' → logprob: -8.981133460998535
    10. '' → logprob: -9.106133460998535

Token 180: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4588383138179779
    2. '.exit' → logprob: -1.2088383436203003
    3. '.stdout' → logprob: -2.9588382244110107
    4. '.stdin' → logprob: -4.20883846282959
    5. '.stderr' → logprob: -6.58383846282959
    6. '.argv' → logprob: -7.08383846282959
    7. '.setdefault' → logprob: -8.08383846282959
    8. '.set' → logprob: -10.33383846282959
    9. '.readline' → logprob: -10.45883846282959
    10. '.max' → logprob: -10.45883846282959

Token 181: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.0008949052426032722
    2. 'set' → logprob: -7.625895023345947
    3. '_rec' → logprob: -8.250894546508789
    4. 'limit' → logprob: -9.375894546508789
    5. 're' → logprob: -10.625894546508789
    6. 'execution' → logprob: -11.750894546508789
    7. 'ursion' → logprob: -12.250894546508789
    8. ' recursion' → logprob: -12.250894546508789
    9. 's' → logprob: -12.875894546508789
    10. 'ecution' → logprob: -13.375894546508789

Token 182: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -7.703443770878948e-06
    2. 'urs' → logprob: -12.875007629394531
    3. 'limit' → logprob: -13.125007629394531
    4. 'ursive' → logprob: -13.125007629394531
    5. 'usion' → logprob: -14.625007629394531
    6. 'ur' → logprob: -15.250007629394531
    7. 'ursor' → logprob: -15.375007629394531
    8. '_limit' → logprob: -17.12500762939453
    9. 'ision' → logprob: -17.62500762939453
    10. 'rs' → logprob: -18.50000762939453

Token 183: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -4.008129963040119e-06
    2. '_limit' → logprob: -13.000003814697266
    3. 'lim' → logprob: -14.000003814697266
    4. ' limit' → logprob: -14.500003814697266
    5. 'depth' → logprob: -14.750003814697266
    6. 'limits' → logprob: -17.625003814697266
    7. 'Limit' → logprob: -18.625003814697266
    8. '(limit' → logprob: -19.250003814697266
    9. '-limit' → logprob: -20.000003814697266
    10. 'LIMIT' → logprob: -20.750003814697266

Token 184: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5451681974809617e-05
    2. ' (' → logprob: -11.875015258789062
    3. '(
' → logprob: -12.250015258789062
    4. '(int' → logprob: -13.000015258789062
    5. '((' → logprob: -14.250015258789062
    6. '()' → logprob: -15.500015258789062
    7. '100' → logprob: -15.625015258789062
    8. '(

' → logprob: -15.875015258789062
    9. '(max' → logprob: -17.000015258789062
    10. ' ' → logprob: -17.250015258789062

Token 185: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0015040287980809808
    2. '100' → logprob: -6.501503944396973
    3. '1' → logprob: -13.626503944396973
    4. ' ' → logprob: -15.001503944396973
    5. '500' → logprob: -16.87650489807129
    6. '400' → logprob: -16.87650489807129
    7. '200' → logprob: -16.87650489807129
    8. '300' → logprob: -17.25150489807129
    9. '999' → logprob: -17.37650489807129
    10. '410' → logprob: -17.75150489807129

Token 186: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.0067312344908714294
    2. '00' → logprob: -5.006731033325195
    3. '0' → logprob: -11.381731033325195
    4. '_' → logprob: -12.756731033325195
    5. '010' → logprob: -14.256731033325195
    6. '001' → logprob: -14.631731033325195
    7. '007' → logprob: -14.881731033325195
    8. ')' → logprob: -16.631731033325195
    9. '**' → logprob: -17.131731033325195
    10. '006' → logprob: -17.256731033325195

Token 187: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00091217877343297
    2. ')' → logprob: -7.000912189483643
    3. '00' → logprob: -14.875911712646484
    4. ' )' → logprob: -16.375911712646484
    5. '(' → logprob: -16.625911712646484
    6. '1' → logprob: -16.750911712646484
    7. '))' → logprob: -17.375911712646484
    8. ' ' → logprob: -18.250911712646484
    9. '000' → logprob: -18.625911712646484
    10. ')
' → logprob: -18.750911712646484

Token 188: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.2729995988775045e-06
    2. ')
' → logprob: -12.125006675720215
    3. ' )' → logprob: -14.375006675720215
    4. ')

' → logprob: -16.6250057220459
    5. '))' → logprob: -17.1250057220459
    6. ')`' → logprob: -17.5000057220459
    7. ')
' → logprob: -17.6250057220459
    8. '),' → logprob: -17.7500057220459
    9. ');' → logprob: -18.0000057220459
    10. ')#' → logprob: -18.5000057220459

Token 189: 'mod' (ID: 4847)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4029369354248047
    2. '
' → logprob: -1.1529369354248047
    3. '

' → logprob: -4.777936935424805
    4. 'class' → logprob: -6.277936935424805
    5. 'n' → logprob: -6.402936935424805
    6. 'd' → logprob: -6.652936935424805
    7. ' 
' → logprob: -6.902936935424805
    8. '' → logprob: -7.527936935424805
    9. '#' → logprob: -7.777936935424805
    10. '\n' → logprob: -9.027936935424805

Token 190: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07261880487203598
    2. '=' → logprob: -2.6976187229156494
    3. ' ' → logprob: -6.1976189613342285
    4. '_' → logprob: -7.4476189613342285
    5. ',' → logprob: -11.44761848449707
    6. '  ' → logprob: -11.57261848449707
    7. ' =
' → logprob: -11.57261848449707
    8. ' _' → logprob: -11.57261848449707
    9. '.' → logprob: -12.69761848449707
    10. 'space' → logprob: -12.94761848449707

Token 191: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6942963004112244
    2. '10' → logprob: -0.6942963004112244
    3. '100' → logprob: -6.819296360015869
    4. '1' → logprob: -9.819295883178711
    5. '998' → logprob: -14.819295883178711
    6. 'int' → logprob: -14.944295883178711
    7. '999' → logprob: -15.194295883178711
    8. ' ' → logprob: -16.06929588317871
    9. ' 
' → logprob: -16.19429588317871
    10. ' (' → logprob: -16.19429588317871

Token 192: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0015500946901738644
    2. '100' → logprob: -6.501550197601318
    3. ' ' → logprob: -10.12654972076416
    4. '1' → logprob: -12.00154972076416
    5. '998' → logprob: -13.37654972076416
    6. 'int' → logprob: -16.626550674438477
    7. '109' → logprob: -18.501550674438477
    8. '１０' → logprob: -18.626550674438477
    9. '999' → logprob: -18.876550674438477
    10. 'pow' → logprob: -19.501550674438477

Token 193: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.0165964774787426
    2. '9' → logprob: -4.14159631729126
    3. '0' → logprob: -8.266596794128418
    4. '09' → logprob: -8.516596794128418
    5. '+' → logprob: -10.266596794128418
    6. '00' → logprob: -10.516596794128418
    7. '009' → logprob: -10.641596794128418
    8. ' ' → logprob: -11.391596794128418
    9. '_' → logprob: -13.641596794128418
    10. '7' → logprob: -14.141596794128418

Token 194: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -6.861651490908116e-05
    2. '007' → logprob: -10.125068664550781
    3. '7' → logprob: -11.000068664550781
    4. '0' → logprob: -11.875068664550781
    5. '+' → logprob: -13.125068664550781
    6. '9' → logprob: -13.500068664550781
    7. '00' → logprob: -14.250068664550781
    8. '07' → logprob: -15.125068664550781
    9. '19' → logprob: -15.250068664550781
    10. '009' → logprob: -15.750068664550781

Token 195: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -5.5577775128767826e-06
    2. '07' → logprob: -12.625005722045898
    3. '9' → logprob: -13.250005722045898
    4. ' ' → logprob: -15.625005722045898
    5. '0' → logprob: -16.0000057220459
    6. '+' → logprob: -16.1250057220459
    7. '79' → logprob: -18.5000057220459
    8. '   ' → logprob: -18.7500057220459
    9. '007' → logprob: -18.7500057220459
    10. '```' → logprob: -18.8750057220459

Token 196: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.003107368713244796
    2. '

' → logprob: -6.62810754776001
    3. '<|end|>' → logprob: -7.37810754776001
    4. '\n' → logprob: -7.75310754776001
    5. 'def' → logprob: -8.503107070922852
    6. '#' → logprob: -8.503107070922852
    7. '' → logprob: -9.253107070922852
    8. ' 
' → logprob: -9.253107070922852
    9. '
' → logprob: -9.753107070922852
    10. 'n' → logprob: -10.878107070922852

Token 197: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007437554653733969
    2. 'd' → logprob: -5.507437705993652
    3. 'class' → logprob: -6.257437705993652
    4. 'n' → logprob: -6.632437705993652
    5. 'de' → logprob: -9.382437705993652
    6. '#' → logprob: -11.382437705993652
    7. '
' → logprob: -11.632437705993652
    8. 'ndef' → logprob: -12.757437705993652
    9. 'dp' → logprob: -12.882437705993652
    10. ' 
' → logprob: -13.132437705993652

Token 198: ' solve' (ID: 17722)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.01701636053621769
    2. ' solve' → logprob: -4.642016410827637
    3. 'main' → logprob: -5.642016410827637
    4. ' dfs' → logprob: -6.392016410827637
    5. ' factorial' → logprob: -7.517016410827637
    6. 'solve' → logprob: -7.892016410827637
    7. ' mod' → logprob: -8.392016410827637
    8. ' pow' → logprob: -8.517016410827637
    9. ' ma' → logprob: -8.642016410827637
    10. 'dfs' → logprob: -9.392016410827637

Token 199: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00014525714504998177
    2. ' ():' → logprob: -8.875144958496094
    3. '()' → logprob: -12.625144958496094
    4. '():
' → logprob: -13.250144958496094
    5. '(' → logprob: -15.125144958496094
    6. ' ()' → logprob: -18.000144958496094
    7. '()(' → logprob: -18.875144958496094
    8. '(:' → logprob: -19.125144958496094
    9. '(":' → logprob: -19.250144958496094
    10. '().' → logprob: -19.875144958496094

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010395623743534088
    2. '(' → logprob: -5.760395526885986
    3. ':' → logprob: -5.885395526885986
    4. ' ' → logprob: -6.760395526885986
    5. '    
' → logprob: -7.510395526885986
    6. '    ' → logprob: -7.635395526885986
    7. 'n' → logprob: -7.635395526885986
    8. ' 
' → logprob: -7.760395526885986
    9. ')' → logprob: -8.635396003723145
    10. '<|end|>' → logprob: -8.760396003723145

Token 201: ' def' (ID: 1056)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0700320228934288
    2. ' n' → logprob: -3.4450321197509766
    3. 'n' → logprob: -3.8200321197509766
    4. ' pass' → logprob: -5.070032119750977
    5. '(' → logprob: -6.320032119750977
    6. '    ' → logprob: -6.445032119750977
    7. 'r' → logprob: -7.570032119750977
    8. ' 
' → logprob: -7.570032119750977
    9. ' \' → logprob: -7.695032119750977
    10. '(n' → logprob: -7.695032119750977

Token 202: ' det' (ID: 1476)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.42551544308662415
    2. ' dfs' → logprob: -1.3005154132843018
    3. ' ' → logprob: -3.8005154132843018
    4. ' helper' → logprob: -4.675515651702881
    5. 'dfs' → logprob: -5.175515651702881
    6. ' bfs' → logprob: -5.175515651702881
    7. ' factorial' → logprob: -5.425515651702881
    8. ' check' → logprob: -5.425515651702881
    9. ' factor' → logprob: -5.675515651702881
    10. '_' → logprob: -5.800515651702881

Token 203: '(a' (ID: 6271)
  Prédit: 'ermin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ermin' → logprob: -0.027402563020586967
    2. '(' → logprob: -4.277402400970459
    3. '(matrix' → logprob: -5.527402400970459
    4. '(a' → logprob: -6.027402400970459
    5. '(*' → logprob: -6.152402400970459
    6. 'erm' → logprob: -7.027402400970459
    7. '():' → logprob: -7.027402400970459
    8. '(x' → logprob: -7.152402400970459
    9. '(A' → logprob: -7.402402400970459
    10. 'ermine' → logprob: -7.777402400970459

Token 204: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5321735739707947
    2. '):' → logprob: -0.9071735739707947
    3. ',b' → logprob: -5.5321736335754395
    4. '):
' → logprob: -6.1571736335754395
    5. ' ,' → logprob: -6.6571736335754395
    6. ',n' → logprob: -7.6571736335754395
    7. ',a' → logprob: -7.7821736335754395
    8. ' ):' → logprob: -8.657173156738281
    9. ',k' → logprob: -9.282173156738281
    10. ',m' → logprob: -9.532173156738281

Token 205: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3246881067752838
    2. ',' → logprob: -1.3246880769729614
    3. '):
' → logprob: -4.949687957763672
    4. ',c' → logprob: -6.074687957763672
    5. ')' → logprob: -7.199687957763672
    6. ',b' → logprob: -7.949687957763672
    7. ' ,' → logprob: -8.199687957763672
    8. ',a' → logprob: -8.699687957763672
    9. ' ):' → logprob: -8.824687957763672
    10. '   ' → logprob: -9.699687957763672

Token 206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5278087258338928
    2. ' ' → logprob: -1.402808666229248
    3. '    ' → logprob: -2.777808666229248
    4. ' return' → logprob: -3.277808666229248
    5. '   ' → logprob: -3.777808666229248
    6. ',' → logprob: -4.152808666229248
    7. ')' → logprob: -5.277808666229248
    8. '<|end|>' → logprob: -5.277808666229248
    9. ' =' → logprob: -5.902808666229248
    10. ':' → logprob: -6.152808666229248

Token 207: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.12047337740659714
    2. 'return' (adapté à ' return') → logprob: -2.4954733848571777
    3. ' a' → logprob: -3.7454733848571777
    4. '   ' → logprob: -5.245473384857178
    5. 'a' → logprob: -6.745473384857178
    6. ' ' → logprob: -7.370473384857178
    7. '    ' → logprob: -8.37047290802002
    8. '	return' → logprob: -10.62047290802002
    9. ' ' → logprob: -11.24547290802002
    10. ' (' → logprob: -11.37047290802002

Token 208: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0031803252641111612
    2. ' a' → logprob: -5.753180503845215
    3. '   ' → logprob: -13.003180503845215
    4. '(a' → logprob: -15.878180503845215
    5. '	a' → logprob: -16.6281795501709
    6. ' ' → logprob: -16.6281795501709
    7. ' (' → logprob: -18.5031795501709
    8. '  ' → logprob: -18.6281795501709
    9. 'abs' → logprob: -19.0031795501709
    10. ' abs' → logprob: -20.2531795501709

Token 209: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00011069540778407827
    2. '*' → logprob: -9.875110626220703
    3. ' [' → logprob: -10.875110626220703
    4. 'x' → logprob: -11.250110626220703
    5. ' *' → logprob: -11.250110626220703
    6. ' ' → logprob: -12.500110626220703
    7. '0' → logprob: -12.750110626220703
    8. '*x' → logprob: -13.125110626220703
    9. '[x' → logprob: -13.750110626220703
    10. '*b' → logprob: -14.000110626220703

Token 210: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.822646693966817e-06
    2. '1' → logprob: -12.500007629394531
    3. ' ' → logprob: -13.250007629394531
    4. ']' → logprob: -14.125007629394531
    5. '
' → logprob: -15.000007629394531
    6. '   ' → logprob: -15.062507629394531
    7. '[' → logprob: -15.187507629394531
    8. '][' → logprob: -15.562507629394531
    9. 'x' → logprob: -16.87500762939453
    10. ':' → logprob: -17.12500762939453

Token 211: ']*' (ID: 18579)
  Prédit: '*b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.8384772539138794
    2. ']*' → logprob: -1.2134772539138794
    3. ' *' → logprob: -1.3384772539138794
    4. '*' → logprob: -5.21347713470459
    5. ']' → logprob: -5.96347713470459
    6. ')*' → logprob: -9.46347713470459
    7. '*y' → logprob: -10.46347713470459
    8. '**' → logprob: -11.08847713470459
    9. '*a' → logprob: -11.21347713470459
    10. '   ' → logprob: -11.71347713470459

Token 212: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -8.061054359131958e-06
    2. ' b' → logprob: -11.750007629394531
    3. '*b' → logprob: -17.50000762939453
    4. ')b' → logprob: -17.87500762939453
    5. '   ' → logprob: -18.00000762939453
    6. '	b' → logprob: -18.12500762939453
    7. '%b' → logprob: -20.00000762939453
    8. '>b' → logprob: -20.25000762939453
    9. '(b' → logprob: -20.37500762939453
    10. '       ' → logprob: -20.62500762939453

Token 213: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3485056757926941
    2. '[' → logprob: -1.2235057353973389
    3. '```' → logprob: -10.848505973815918
    4. ' ' → logprob: -10.973505973815918
    5. '
' → logprob: -12.223505973815918
    6. '0' → logprob: -12.598505973815918
    7. '`' → logprob: -12.723505973815918
    8. '[
' → logprob: -13.223505973815918
    9. '][' → logprob: -13.223505973815918
    10. ']' → logprob: -13.473505973815918

Token 214: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. '0' → logprob: -13.625001907348633
    3. '
' → logprob: -14.250001907348633
    4. ']' → logprob: -17.250001907348633
    5. ' ' → logprob: -17.250001907348633
    6. '

' → logprob: -17.562501907348633
    7. '   ' → logprob: -17.750001907348633
    8. '```' → logprob: -18.187501907348633
    9. '[' → logprob: -18.437501907348633
    10. '`' → logprob: -19.937501907348633

Token 215: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6931834816932678
    2. ' -' → logprob: -0.6931834816932678
    3. ' ' → logprob: -11.193183898925781
    4. ')' → logprob: -12.193183898925781
    5. '-
' → logprob: -12.568183898925781
    6. ' ' → logprob: -12.943183898925781
    7. ' -
' → logprob: -13.068183898925781
    8. '<|end|>' → logprob: -13.193183898925781
    9. '-a' → logprob: -13.318183898925781
    10. '-b' → logprob: -13.943183898925781

Token 216: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0010379294399172068
    2. ' a' → logprob: -6.876038074493408
    3. '<|end|>' → logprob: -12.37603759765625
    4. '	a' → logprob: -14.25103759765625
    5. 'b' → logprob: -16.25103759765625
    6. '   ' → logprob: -17.12603759765625
    7. ' ' → logprob: -17.87603759765625
    8. ')a' → logprob: -18.12603759765625
    9. '_a' → logprob: -18.37603759765625
    10. '1' → logprob: -18.37603759765625

Token 217: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.03521392197581e-05
    2. '0' → logprob: -10.625030517578125
    3. '1' → logprob: -12.875030517578125
    4. ''[' → logprob: -13.750030517578125
    5. '[
' → logprob: -13.875030517578125
    6. ' [' → logprob: -14.625030517578125
    7. '][' → logprob: -15.625030517578125
    8. '
' → logprob: -15.625030517578125
    9. '(' → logprob: -15.875030517578125
    10. '```' → logprob: -16.000030517578125

Token 218: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020497082732617855
    2. '0' → logprob: -8.500205039978027
    3. '[' → logprob: -14.125205039978027
    4. ' ' → logprob: -14.875205039978027
    5. '
' → logprob: -16.37520408630371
    6. ']' → logprob: -16.50020408630371
    7. '   ' → logprob: -17.12520408630371
    8. '3' → logprob: -17.37520408630371
    9. '2' → logprob: -17.87520408630371
    10. '```' → logprob: -18.31270408630371

Token 219: ']*' (ID: 18579)
  Prédit: '*b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.2523110508918762
    2. '*' → logprob: -1.5023109912872314
    3. 'b' → logprob: -9.377310752868652
    4. '*out' → logprob: -9.752310752868652
    5. '*object' → logprob: -9.877310752868652
    6. '*a' → logprob: -10.002310752868652
    7. '*x' → logprob: -10.252310752868652
    8. '*f' → logprob: -11.377310752868652
    9. '<|end|>' → logprob: -11.377310752868652
    10. '*u' → logprob: -11.627310752868652

Token 220: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -4.320199877838604e-07
    2. ' b' → logprob: -14.875
    3. 'a' → logprob: -18.625
    4. ')b' → logprob: -19.375
    5. '<|end|>' → logprob: -19.5
    6. '0' → logprob: -19.75
    7. '
' → logprob: -20.25
    8. '[' → logprob: -20.625
    9. '*b' → logprob: -20.625
    10. '   ' → logprob: -20.875

Token 221: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006272526225075126
    2. '0' → logprob: -7.375627040863037
    3. '[
' → logprob: -15.875627517700195
    4. '.' → logprob: -16.000627517700195
    5. ']' → logprob: -16.125627517700195
    6. '][' → logprob: -16.500627517700195
    7. ')' → logprob: -16.750627517700195
    8. '```' → logprob: -16.875627517700195
    9. ' [' → logprob: -17.250627517700195
    10. 'def' → logprob: -17.875627517700195

Token 222: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -16.375001907348633
    4. '۰' → logprob: -17.562501907348633
    5. '1' → logprob: -18.312501907348633
    6. '<|end|>' → logprob: -18.500001907348633
    7. '
' → logprob: -18.750001907348633
    8. '[' → logprob: -18.812501907348633
    9. '00' → logprob: -19.000001907348633
    10. ']' → logprob: -19.000001907348633

Token 223: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008111746865324676
    2. '<|end|>' → logprob: -7.6258111000061035
    3. '}' → logprob: -8.500811576843262
    4. ']' → logprob: -10.500811576843262
    5. '   ' → logprob: -10.750811576843262
    6. ')return' → logprob: -10.875811576843262
    7. '
' → logprob: -11.250811576843262
    8. ')
' → logprob: -11.500811576843262
    9. '<|end|>' → logprob: -11.875811576843262
    10. ')}' → logprob: -11.875811576843262

Token 224: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02100064605474472
    2. '    
' → logprob: -5.021000862121582
    3. ' ' → logprob: -5.396000862121582
    4. ' 
' → logprob: -5.646000862121582
    5. '
' → logprob: -6.646000862121582
    6. '<|end|>' → logprob: -6.646000862121582
    7. ')' → logprob: -7.396000862121582
    8. '    ' → logprob: -7.521000862121582
    9. '       ' → logprob: -7.771000862121582
    10. ',' → logprob: -7.771000862121582

Token 225: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47353580594062805
    2. 'n' → logprob: -1.9735357761383057
    3. ' n' → logprob: -2.7235357761383057
    4. 'a' → logprob: -2.7235357761383057
    5. ' a' → logprob: -3.4735357761383057
    6. 'p' → logprob: -3.8485357761383057
    7. ' p' → logprob: -4.223536014556885
    8. 'def' (adapté à ' def') → logprob: -5.223536014556885
    9. ' A' → logprob: -5.223536014556885
    10. ' def' → logprob: -5.473536014556885

Token 226: ' minus' (ID: 40335)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.46193763613700867
    2. ' cross' → logprob: -1.586937665939331
    3. 'cc' → logprob: -3.086937665939331
    4. 'dot' → logprob: -4.086937427520752
    5. ' cc' → logprob: -4.336937427520752
    6. 'conv' → logprob: -4.586937427520752
    7. 'dist' → logprob: -4.711937427520752
    8. 'vec' → logprob: -4.961937427520752
    9. 'orientation' → logprob: -5.211937427520752
    10. ' dist' → logprob: -5.211937427520752

Token 227: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.004079470410943031
    2. '(' → logprob: -6.004079341888428
    3. ' (' → logprob: -6.504079341888428
    4. '_' → logprob: -9.879079818725586
    5. '_(' → logprob: -10.379079818725586
    6. '(A' → logprob: -12.629079818725586
    7. '(x' → logprob: -12.754079818725586
    8. '_vec' → logprob: -13.254079818725586
    9. 'def' → logprob: -13.504079818725586
    10. '_vector' → logprob: -13.629079818725586

Token 228: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31499984860420227
    2. ',a' → logprob: -1.3149998188018799
    3. ' ,' → logprob: -7.065000057220459
    4. ',b' → logprob: -7.315000057220459
    5. '(a' → logprob: -8.9399995803833
    6. 'a' → logprob: -10.6899995803833
    7. ',A' → logprob: -10.8149995803833
    8. '):' → logprob: -10.9399995803833
    9. ',v' → logprob: -12.6899995803833
    10. ',k' → logprob: -12.9399995803833

Token 229: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002695608709473163
    2. '):
' → logprob: -8.250269889831543
    3. ' ):' → logprob: -12.125269889831543
    4. '):
' → logprob: -13.500269889831543
    5. ')' → logprob: -14.000269889831543
    6. ':' → logprob: -14.875269889831543
    7. '[]):' → logprob: -15.750269889831543
    8. ']:' → logprob: -16.500268936157227
    9. '):

' → logprob: -17.000268936157227
    10. '   ' → logprob: -17.125268936157227

Token 230: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6333411931991577
    2. ' return' → logprob: -1.8833411931991577
    3. '   ' → logprob: -2.6333413124084473
    4. '<|end|>' → logprob: -2.7583413124084473
    5. '(a' → logprob: -3.2583413124084473
    6. ':return' → logprob: -3.6333413124084473
    7. ' =' → logprob: -3.8833413124084473
    8. '():' → logprob: -3.8833413124084473
    9. ',' → logprob: -4.133341312408447
    10. '):' → logprob: -4.133341312408447

Token 231: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8314038515090942
    2. 'return' (adapté à ' return') → logprob: -1.2064038515090942
    3. ' [' → logprob: -1.4564038515090942
    4. '[a' → logprob: -3.9564037322998047
    5. '[' → logprob: -4.581403732299805
    6. ' (' → logprob: -6.581403732299805
    7. '   ' → logprob: -6.706403732299805
    8. '(return' → logprob: -9.831403732299805
    9. ' ' → logprob: -10.081403732299805
    10. '{return' → logprob: -10.206403732299805

Token 232: ' (' (ID: 350)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.4890344440937042
    2. '[a' → logprob: -0.9890344142913818
    3. '[' → logprob: -4.239034652709961
    4. ' (' → logprob: -7.989034652709961
    5. '(a' → logprob: -9.489034652709961
    6. '(' → logprob: -13.239034652709961
    7. 'a' → logprob: -13.489034652709961
    8. '[(' → logprob: -13.614034652709961
    9. ' a' → logprob: -13.739034652709961
    10. '([' → logprob: -14.114034652709961

Token 233: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0006282062386162579
    2. ' a' → logprob: -7.3756279945373535
    3. '(a' → logprob: -13.750628471374512
    4. '   ' → logprob: -15.000628471374512
    5. ')a' → logprob: -15.375628471374512
    6. '	a' → logprob: -17.125627517700195
    7. ')' → logprob: -17.375627517700195
    8. 'b' → logprob: -17.500627517700195
    9. ' (' → logprob: -17.750627517700195
    10. '(' → logprob: -17.750627517700195

Token 234: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00038467496051453054
    2. '0' → logprob: -7.87538480758667
    3. ' [' → logprob: -13.250384330749512
    4. ')' → logprob: -13.750384330749512
    5. '[
' → logprob: -14.000384330749512
    6. ' ' → logprob: -14.875384330749512
    7. ',' → logprob: -15.125384330749512
    8. '(' → logprob: -16.000385284423828
    9. ')[' → logprob: -16.250385284423828
    10. '
' → logprob: -16.375385284423828

Token 235: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.25000286102295
    3. '[' → logprob: -14.50000286102295
    4. '
' → logprob: -16.125001907348633
    5. '1' → logprob: -16.375001907348633
    6. '   ' → logprob: -16.750001907348633
    7. '۰' → logprob: -18.562501907348633
    8. ',' → logprob: -18.875001907348633
    9. ')' → logprob: -19.187501907348633
    10. 'x' → logprob: -19.375001907348633

Token 236: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.23113000392913818
    2. ' -' → logprob: -1.6061300039291382
    3. '-b' → logprob: -5.231130123138428
    4. ')' → logprob: -9.10612964630127
    5. ',' → logprob: -9.60612964630127
    6. '-
' → logprob: -9.85612964630127
    7. ',b' → logprob: -9.98112964630127
    8. ' ' → logprob: -10.10612964630127
    9. '[' → logprob: -11.85612964630127
    10. ')-' → logprob: -12.23112964630127

Token 237: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0024756586644798517
    2. ' b' → logprob: -6.002475738525391
    3. ')b' → logprob: -17.50247573852539
    4. '	b' → logprob: -18.87747573852539
    5. '   ' → logprob: -18.87747573852539
    6. ' ' → logprob: -19.87747573852539
    7. ')' → logprob: -20.62747573852539
    8. ',b' → logprob: -21.00247573852539
    9. '    ' → logprob: -21.37747573852539
    10. '  ' → logprob: -21.62747573852539

Token 238: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.968312951968983e-06
    2. '0' → logprob: -12.500009536743164
    3. '(' → logprob: -12.875009536743164
    4. '[
' → logprob: -13.000009536743164
    5. '<|end|>' → logprob: -14.625009536743164
    6. ' [' → logprob: -14.875009536743164
    7. '()[' → logprob: -15.375009536743164
    8. ')' → logprob: -16.125009536743164
    9. '][' → logprob: -16.500009536743164
    10. ')[' → logprob: -17.000009536743164

Token 239: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003384422743692994
    2. '[' → logprob: -8.000338554382324
    3. ' ' → logprob: -12.750338554382324
    4. ')' → logprob: -16.875337600708008
    5. '1' → logprob: -18.250337600708008
    6. '(' → logprob: -18.250337600708008
    7. '<|end|>' → logprob: -18.375337600708008
    8. '<|end|>' → logprob: -18.750337600708008
    9. '[
' → logprob: -18.875337600708008
    10. '   ' → logprob: -19.250337600708008

Token 240: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011225953930988908
    2. ',a' → logprob: -7.00112247467041
    3. ',
' → logprob: -9.37612247467041
    4. ',b' → logprob: -10.25112247467041
    5. ' ,' → logprob: -10.37612247467041
    6. ')' → logprob: -10.87612247467041
    7. '),' → logprob: -11.25112247467041
    8. ',)' → logprob: -11.25112247467041
    9. ',\
' → logprob: -12.75112247467041
    10. '),(' → logprob: -12.75112247467041

Token 241: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.023245712742209435
    2. ' a' → logprob: -3.7732458114624023
    3. '	a' → logprob: -16.023244857788086
    4. '<|end|>' → logprob: -17.023244857788086
    5. ')a' → logprob: -17.148244857788086
    6. '   ' → logprob: -17.398244857788086
    7. ' ' → logprob: -18.398244857788086
    8. '
' → logprob: -18.648244857788086
    9. '    ' → logprob: -19.023244857788086
    10. ''a' → logprob: -19.773244857788086

Token 242: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00038241007132455707
    2. '1' → logprob: -7.875382423400879
    3. '[
' → logprob: -13.625382423400879
    4. ')' → logprob: -15.375382423400879
    5. '<|end|>' → logprob: -15.375382423400879
    6. ',' → logprob: -16.000381469726562
    7. ')[' → logprob: -16.125381469726562
    8. '(' → logprob: -16.250381469726562
    9. '<|end|>' → logprob: -16.375381469726562
    10. ' [' → logprob: -16.375381469726562

Token 243: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -14.125000953674316
    3. '
' → logprob: -15.875000953674316
    4. ' ' → logprob: -16.000001907348633
    5. '0' → logprob: -17.125001907348633
    6. '' → logprob: -17.812501907348633
    7. ')' → logprob: -17.812501907348633
    8. '１' → logprob: -18.312501907348633
    9. '   ' → logprob: -18.500001907348633
    10. '۱' → logprob: -18.687501907348633

Token 244: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2518082559108734
    2. ']-' → logprob: -2.0018081665039062
    3. '-b' → logprob: -2.7518081665039062
    4. ')-' → logprob: -4.501808166503906
    5. '[' → logprob: -5.251808166503906
    6. ' -' → logprob: -5.501808166503906
    7. ']' → logprob: -6.751808166503906
    8. ')' → logprob: -7.126808166503906
    9. '-)' → logprob: -7.751808166503906
    10. '<|end|>' → logprob: -8.126808166503906

Token 245: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.054500666621607e-06
    2. ' b' → logprob: -12.87500286102295
    3. ')b' → logprob: -15.25000286102295
    4. '<|end|>' → logprob: -15.50000286102295
    5. ')' → logprob: -17.500003814697266
    6. '0' → logprob: -18.875003814697266
    7. '1' → logprob: -19.875003814697266
    8. '>b' → logprob: -20.125003814697266
    9. ' ' → logprob: -20.625003814697266
    10. '```' → logprob: -20.875003814697266

Token 246: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005397868808358908
    2. '1' → logprob: -5.755397796630859
    3. '-' → logprob: -6.255397796630859
    4. '])' → logprob: -8.63039779663086
    5. ')' → logprob: -9.50539779663086
    6. ']' → logprob: -10.25539779663086
    7. '0' → logprob: -12.88039779663086
    8. '][' → logprob: -13.00539779663086
    9. '-[' → logprob: -13.75539779663086
    10. '   ' → logprob: -14.88039779663086

Token 247: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020576341077685356
    2. '0' → logprob: -3.895576238632202
    3. '])' → logprob: -10.395576477050781
    4. '[' → logprob: -13.395576477050781
    5. ']' → logprob: -14.395576477050781
    6. ')' → logprob: -14.645576477050781
    7. ' ' → logprob: -14.645576477050781
    8. '])
' → logprob: -15.520576477050781
    9. '```' → logprob: -15.645576477050781
    10. '-' → logprob: -16.14557647705078

Token 248: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ')
' → logprob: -14.625000953674316
    3. ' )' → logprob: -15.375000953674316
    4. '   ' → logprob: -16.25
    5. '))' → logprob: -17.625
    6. ')return' → logprob: -18.0
    7. ')}' → logprob: -18.25
    8. '       ' → logprob: -18.5
    9. '),' → logprob: -19.125
    10. '())' → logprob: -19.25

Token 249: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03339831158518791
    2. '
' → logprob: -3.908398389816284
    3. '    
' → logprob: -4.783398151397705
    4. '<|end|>' → logprob: -6.158398151397705
    5. 'def' → logprob: -7.158398151397705
    6. ')' → logprob: -7.283398151397705
    7. ',' → logprob: -8.158398628234863
    8. 'n' → logprob: -9.283398628234863
    9. ':' → logprob: -9.533398628234863
    10. '  
' → logprob: -10.033398628234863

Token 250: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7353943586349487
    2. 'def' (adapté à ' def') → logprob: -0.9853943586349487
    3. 'n' → logprob: -2.6103944778442383
    4. ' def' → logprob: -3.1103944778442383
    5. 'p' → logprob: -4.235394477844238
    6. ' n' → logprob: -4.985394477844238
    7. 'points' → logprob: -6.610394477844238
    8. 'for' → logprob: -6.985394477844238
    9. ' p' → logprob: -7.110394477844238
    10. ' points' → logprob: -7.235394477844238

Token 251: ' convex' (ID: 142423)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.5799196362495422
    2. ' cross' → logprob: -0.9549196362495422
    3. 'dot' → logprob: -4.329919815063477
    4. ' dot' → logprob: -4.829919815063477
    5. 'add' → logprob: -5.079919815063477
    6. 'cc' → logprob: -5.204919815063477
    7. ' add' → logprob: -5.329919815063477
    8. 'conv' → logprob: -5.454919815063477
    9. ' cc' → logprob: -6.329919815063477
    10. 'plus' → logprob: -6.704919815063477

Token 252: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.0031821096781641245
    2. 'h' → logprob: -6.6281819343566895
    3. '_polygon' → logprob: -7.6281819343566895
    4. '_' → logprob: -8.378182411193848
    5. 'Hull' → logprob: -8.378182411193848
    6. '_points' → logprob: -8.503182411193848
    7. 'a' → logprob: -8.628182411193848
    8. '<|end|>' → logprob: -9.378182411193848
    9. '(points' → logprob: -9.628182411193848
    10. '_point' → logprob: -9.628182411193848

Token 253: 'ull' (ID: 754)
  Prédit: 'ull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -0.000856193364597857
    2. 'ex' → logprob: -7.375856399536133
    3. 'ul' → logprob: -10.250856399536133
    4. '```' → logprob: -10.250856399536133
    5. '
' → logprob: -10.750856399536133
    6. '(' → logprob: -10.875856399536133
    7. '

' → logprob: -11.125856399536133
    8. '   ' → logprob: -11.250856399536133
    9. 'all' → logprob: -11.500856399536133
    10. '[' → logprob: -11.500856399536133

Token 254: '(ps' (ID: 72187)
  Prédit: '(points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.010832864791154861
    2. '(' → logprob: -5.510832786560059
    3. '(P' → logprob: -5.510832786560059
    4. '(p' → logprob: -6.635832786560059
    5. '(point' → logprob: -7.260832786560059
    6. '(a' → logprob: -8.135832786560059
    7. '(Point' → logprob: -8.635832786560059
    8. '_points' → logprob: -9.510832786560059
    9. '(arr' → logprob: -10.635832786560059
    10. '(ps' → logprob: -10.885832786560059

Token 255: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011964209843426943
    2. '):
' → logprob: -6.751196384429932
    3. ')' → logprob: -10.87619686126709
    4. ' ):' → logprob: -12.25119686126709
    5. ':' → logprob: -13.12619686126709
    6. '):
' → logprob: -15.62619686126709
    7. '():' → logprob: -16.376195907592773
    8. '[]):' → logprob: -16.501195907592773
    9. '):

' → logprob: -16.626195907592773
    10. '   ' → logprob: -17.126195907592773

Token 256: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015023918822407722
    2. '   ' → logprob: -4.265023708343506
    3. ':' → logprob: -8.140024185180664
    4. '(ps' → logprob: -8.265024185180664
    5. '(points' → logprob: -8.640024185180664
    6. '(' → logprob: -10.890024185180664
    7. '     ' → logprob: -11.015024185180664
    8. '    ' → logprob: -11.140024185180664
    9. ',' → logprob: -11.390024185180664
    10. '	ps' → logprob: -11.640024185180664

Token 257: ' n' (ID: 297)
  Prédit: 'ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ps' → logprob: -0.02773944102227688
    2. ' ps' → logprob: -4.027739524841309
    3. '   ' → logprob: -4.902739524841309
    4. '       ' → logprob: -6.527739524841309
    5. 'if' → logprob: -7.902739524841309
    6. ' if' → logprob: -9.402739524841309
    7. '	ps' → logprob: -9.402739524841309
    8. 'pts' → logprob: -10.152739524841309
    9. 'points' → logprob: -10.652739524841309
    10. 'n' (adapté à ' n') → logprob: -10.777739524841309

Token 258: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.062135737389326096
    2. '=' → logprob: -2.812135696411133
    3. '=len' → logprob: -8.812135696411133
    4. ' ' → logprob: -11.312135696411133
    5. '=int' → logprob: -12.187135696411133
    6. '   ' → logprob: -14.312135696411133
    7. ')' → logprob: -15.562135696411133
    8. ' =)' → logprob: -15.687135696411133
    9. ' :=' → logprob: -15.812135696411133
    10. '  ' → logprob: -16.062135696411133

Token 259: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.005235529970377684
    2. ' len' → logprob: -5.25523567199707
    3. '(len' → logprob: -13.50523567199707
    4. '=len' → logprob: -15.25523567199707
    5. '[len' → logprob: -15.75523567199707
    6. '	len' → logprob: -18.50523567199707
    7. '<len' → logprob: -18.63023567199707
    8. ',len' → logprob: -19.13023567199707
    9. '0' → logprob: -20.13023567199707
    10. '<|end|>' → logprob: -22.25523567199707

Token 260: '(ps' (ID: 72187)
  Prédit: '(ps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ps' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -13.625001907348633
    3. '	ps' → logprob: -15.500001907348633
    4. 'ps' → logprob: -15.500001907348633
    5. '(points' → logprob: -18.500001907348633
    6. '_ps' → logprob: -18.875001907348633
    7. 's' → logprob: -19.250001907348633
    8. '(s' → logprob: -19.375001907348633
    9. '(p' → logprob: -19.625001907348633
    10. ' ps' → logprob: -19.625001907348633

Token 261: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011103283613920212
    2. ')
' → logprob: -6.876110553741455
    3. ' )' → logprob: -9.501110076904297
    4. ' ' → logprob: -14.376110076904297
    5. ')#' → logprob: -14.501110076904297
    6. ')
' → logprob: -14.876110076904297
    7. ' )
' → logprob: -15.376110076904297
    8. ')return' → logprob: -15.501110076904297
    9. ')n' → logprob: -15.626110076904297
    10. ')set' → logprob: -16.126110076904297

Token 262: '       ' (ID: 309)
  Prédit: '	ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	ps' → logprob: -0.8017815351486206
    2. 'ps' → logprob: -1.3017815351486206
    3. '   ' → logprob: -2.05178165435791
    4. '       ' → logprob: -2.92678165435791
    5. ' ps' → logprob: -3.17678165435791
    6. ' if' → logprob: -3.92678165435791
    7. '<|end|>' → logprob: -4.17678165435791
    8. '    
' → logprob: -5.67678165435791
    9. '
' → logprob: -6.17678165435791
    10. ',' → logprob: -6.30178165435791

Token 263: ' ps' (ID: 10942)
  Prédit: 'ps'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ps' (adapté à ' ps') → logprob: -0.002223529852926731
    2. 'if' → logprob: -6.127223491668701
    3. 'pts' → logprob: -11.62722396850586
    4. 'points' → logprob: -11.75222396850586
    5. 'res' → logprob: -12.37722396850586
    6. 'p' → logprob: -12.87722396850586
    7. 'qs' → logprob: -13.00222396850586
    8. 'k' → logprob: -13.37722396850586
    9. 's' → logprob: -13.37722396850586
    10. 'px' → logprob: -13.75222396850586

Token 264: '.sort' (ID: 19551)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4004420042037964
    2. '.sort' → logprob: -1.1504420042037964
    3. ' =' → logprob: -4.650442123413086
    4. '.' → logprob: -5.900442123413086
    5. 'sort' → logprob: -7.400442123413086
    6. '.=' → logprob: -8.150442123413086
    7. '_sorted' → logprob: -9.775442123413086
    8. 'sorted' → logprob: -9.900442123413086
    9. ')' → logprob: -10.275442123413086
    10. ')=' → logprob: -10.650442123413086

Token 265: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008218993316404521
    2. '(key' → logprob: -7.125822067260742
    3. '()
' → logprob: -11.750822067260742
    4. 'key' → logprob: -12.250822067260742
    5. '(' → logprob: -13.000822067260742
    6. '(reverse' → logprob: -13.375822067260742
    7. ' ()' → logprob: -15.500822067260742
    8. '()<' → logprob: -15.875822067260742
    9. '())' → logprob: -16.125822067260742
    10. ' key' → logprob: -16.250822067260742

Token 266: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5382745862007141
    2. '       ' → logprob: -1.2882745265960693
    3. '   ' → logprob: -2.9132745265960693
    4. '        
' → logprob: -3.2882745265960693
    5. '    
' → logprob: -3.2882745265960693
    6. '  
' → logprob: -5.538274765014648
    7. ' 
' → logprob: -6.788274765014648
    8. ',' → logprob: -6.913274765014648
    9. '	
' → logprob: -7.163274765014648
    10. '		
' → logprob: -7.163274765014648

Token 267: ' k' (ID: 372)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.11083253473043442
    2. 'l' → logprob: -2.360832452774048
    3. 'L' → logprob: -5.985832691192627
    4. ' lower' → logprob: -6.110832691192627
    5. 'low' → logprob: -6.485832691192627
    6. 'll' → logprob: -6.735832691192627
    7. 'upper' → logprob: -6.985832691192627
    8. 'up' → logprob: -7.735832691192627
    9. 'if' → logprob: -7.985832691192627
    10. 'k' (adapté à ' k') → logprob: -8.360832214355469

Token 268: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0485910028219223
    2. '=' → logprob: -3.048590898513794
    3. ' ' → logprob: -12.923590660095215
    4. '=[]' → logprob: -14.548590660095215
    5. '   ' → logprob: -15.048590660095215
    6. '  ' → logprob: -15.923590660095215
    7. '=k' → logprob: -17.29859161376953
    8. '	' → logprob: -17.42359161376953
    9. ' +=' → logprob: -17.54859161376953
    10. '＝' → logprob: -17.67359161376953

Token 269: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009253957541659474
    2. ' ' → logprob: -7.000925540924072
    3. '[]' → logprob: -11.250925064086914
    4. '   ' → logprob: -15.375925064086914
    5. '[]
' → logprob: -16.125925064086914
    6. '1' → logprob: -16.250925064086914
    7. '۰' → logprob: -16.500925064086914
    8. '  ' → logprob: -16.500925064086914
    9. '<|end|>' → logprob: -16.500925064086914
    10. ' []' → logprob: -16.750925064086914

Token 270: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.13388703338569e-06
    2. '[]' → logprob: -11.875009536743164
    3. ' ' → logprob: -13.125009536743164
    4. '1' → logprob: -16.500009536743164
    5. '[]
' → logprob: -17.125009536743164
    6. '۰' → logprob: -18.000009536743164
    7. '   ' → logprob: -18.375009536743164
    8. '2' → logprob: -18.625009536743164
    9. '[' → logprob: -18.875009536743164
    10. '```' → logprob: -18.875009536743164

Token 271: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1879996508359909
    2. '
' → logprob: -2.687999725341797
    3. '       ' → logprob: -3.062999725341797
    4. ' hull' → logprob: -3.562999725341797
    5. ',' → logprob: -4.687999725341797
    6. '<|end|>' → logprob: -5.187999725341797
    7. ' ' → logprob: -5.812999725341797
    8. '    
' → logprob: -6.312999725341797
    9. '  ' → logprob: -6.437999725341797
    10. ' Hull' → logprob: -6.562999725341797

Token 272: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5898271799087524
    2. ' hull' → logprob: -0.8398271799087524
    3. '   ' → logprob: -4.839827060699463
    4. ' Hull' → logprob: -6.464827060699463
    5. '	stack' → logprob: -6.464827060699463
    6. '	h' → logprob: -6.839827060699463
    7. 'Hull' → logprob: -7.589827060699463
    8. '	   ' → logprob: -8.714827537536621
    9. '<|end|>' → logprob: -9.214827537536621
    10. '	' → logprob: -9.214827537536621

Token 273: ' qs' (ID: 75083)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0005494566285051405
    2. ' hull' → logprob: -8.12554931640625
    3. 'ch' → logprob: -8.50054931640625
    4. '	h' → logprob: -10.87554931640625
    5. 'hs' → logprob: -11.37554931640625
    6. 'res' → logprob: -12.12554931640625
    7. '   ' → logprob: -13.37554931640625
    8. 'hk' → logprob: -13.62554931640625
    9. 'hn' → logprob: -14.00054931640625
    10. 'hx' → logprob: -14.00054931640625

Token 274: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760244727134705
    2. '=' → logprob: -0.8260244727134705
    3. '=[]' → logprob: -9.576024055480957
    4. '   ' → logprob: -12.701024055480957
    5. '=[]
' → logprob: -12.826024055480957
    6. '[' → logprob: -12.951024055480957
    7. '[]' → logprob: -13.076024055480957
    8. '=[' → logprob: -13.076024055480957
    9. ' ' → logprob: -13.576024055480957
    10. ' =[' → logprob: -14.451024055480957

Token 275: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3231448531150818
    2. '[]' → logprob: -2.0731449127197266
    3. '[(' → logprob: -2.3231449127197266
    4. ' [' → logprob: -3.1981449127197266
    5. '[n' → logprob: -5.073144912719727
    6. '[len' → logprob: -6.823144912719727
    7. ' [(' → logprob: -6.948144912719727
    8. '[length' → logprob: -6.948144912719727
    9. '[size' → logprob: -7.573144912719727
    10. ' []' → logprob: -7.948144912719727

Token 276: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014835665002465248
    2. 'None' → logprob: -4.264835834503174
    3. '(None' → logprob: -8.139835357666016
    4. '0' → logprob: -8.264835357666016
    5. '[' → logprob: -9.889835357666016
    6. '(-' → logprob: -10.389835357666016
    7. ']' → logprob: -10.764835357666016
    8. ' (' → logprob: -11.889835357666016
    9. '()]' → logprob: -11.889835357666016
    10. ' None' → logprob: -12.639835357666016

Token 277: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09776806831359863
    2. ']*' → logprob: -2.8477680683135986
    3. ']*(' → logprob: -3.3477680683135986
    4. '   ' → logprob: -13.47276782989502
    5. ',' → logprob: -13.84776782989502
    6. '](' → logprob: -14.84776782989502
    7. ' ]' → logprob: -14.84776782989502
    8. '0' → logprob: -14.97276782989502
    9. ' for' → logprob: -15.47276782989502
    10. 'None' → logprob: -15.59776782989502

Token 278: 'n' (ID: 77)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007136239437386394
    2. 'n' → logprob: -7.25071382522583
    3. '(' → logprob: -13.125713348388672
    4. '(n' → logprob: -14.375713348388672
    5. ' ' → logprob: -14.625713348388672
    6. 'len' → logprob: -15.125713348388672
    7. '20' → logprob: -15.875713348388672
    8. '
' → logprob: -16.750713348388672
    9. '22' → logprob: -16.875713348388672
    10. ' n' → logprob: -17.375713348388672

Token 279: '+' (ID: 10)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.012597124092280865
    2. ')' → logprob: -4.38759708404541
    3. '2' → logprob: -10.38759708404541
    4. ' *' → logprob: -10.63759708404541
    5. '*)' → logprob: -11.51259708404541
    6. ']' → logprob: -11.63759708404541
    7. ')
' → logprob: -12.76259708404541
    8. '<<' → logprob: -12.88759708404541
    9. ')*' → logprob: -13.01259708404541
    10. ')]' → logprob: -13.51259708404541

Token 280: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.375006675720215
    3. 'n' → logprob: -14.375006675720215
    4. '2' → logprob: -14.750006675720215
    5. '10' → logprob: -15.000006675720215
    6. '...' → logprob: -16.0000057220459
    7. '0' → logprob: -16.1250057220459
    8. '<|end|>' → logprob: -16.3125057220459
    9. '26' → logprob: -17.0000057220459
    10. '-' → logprob: -17.0000057220459

Token 281: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4736459888808895e-05
    2. ' )' → logprob: -11.625014305114746
    3. ')
' → logprob: -12.125014305114746
    4. ')#' → logprob: -16.000015258789062
    5. '),' → logprob: -17.250015258789062
    6. ')

' → logprob: -17.375015258789062
    7. ')return' → logprob: -17.500015258789062
    8. '))' → logprob: -17.500015258789062
    9. ')`' → logprob: -17.750015258789062
    10. ' ' → logprob: -18.000015258789062

Token 282: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031695619225502014
    2. ' for' → logprob: -4.53169584274292
    3. '<|end|>' → logprob: -4.53169584274292
    4. '       ' → logprob: -4.78169584274292
    5. 'for' → logprob: -7.78169584274292
    6. '	for' → logprob: -8.031695365905762
    7. ' ' → logprob: -8.406695365905762
    8. ')' → logprob: -9.781695365905762
    9. 'def' → logprob: -9.781695365905762
    10. ',' → logprob: -9.906695365905762

Token 283: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10054060071706772
    2. ' for' → logprob: -2.4755406379699707
    3. '   ' → logprob: -4.475540637969971
    4. '	for' → logprob: -9.350540161132812
    5. '       ' → logprob: -9.975540161132812
    6. ' ' → logprob: -11.850540161132812
    7. '  ' → logprob: -12.850540161132812
    8. 'q' → logprob: -13.100540161132812
    9. '<|end|>' → logprob: -13.225540161132812
    10. 'def' → logprob: -13.475540161132812

Token 284: ' i' (ID: 575)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.16064570844173431
    2. ' p' → logprob: -1.9106457233428955
    3. 'i' → logprob: -7.910645484924316
    4. ' i' → logprob: -9.910645484924316
    5. '   ' → logprob: -12.910645484924316
    6. 'x' → logprob: -13.910645484924316
    7. 'pt' → logprob: -14.285645484924316
    8. 'point' → logprob: -14.410645484924316
    9. ' ' → logprob: -15.785645484924316
    10. ' point' → logprob: -16.035646438598633

Token 285: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07028107345104218
    2. 'in' → logprob: -2.6952810287475586
    3. ' ' → logprob: -8.320281028747559
    4. 'n' → logprob: -9.695281028747559
    5. ' n' → logprob: -11.445281028747559
    6. '  ' → logprob: -11.570281028747559
    7. ',' → logprob: -12.445281028747559
    8. 'range' → logprob: -12.445281028747559
    9. '	in' → logprob: -12.945281028747559
    10. '   ' → logprob: -13.195281028747559

Token 286: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02975129522383213
    2. ' range' → logprob: -3.5297513008117676
    3. '(range' → logprob: -14.65475082397461
    4. ' ' → logprob: -16.02975082397461
    5. '   ' → logprob: -16.77975082397461
    6. '	range' → logprob: -16.77975082397461
    7. 'n' → logprob: -18.02975082397461
    8. 'ps' → logprob: -18.02975082397461
    9. 'rang' → logprob: -18.40475082397461
    10. 'r' → logprob: -18.90475082397461

Token 287: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.16697247326374054
    2. 'n' → logprob: -1.9169725179672241
    3. '(' → logprob: -5.291972637176514
    4. ' n' → logprob: -6.791972637176514
    5. '1' → logprob: -7.541972637176514
    6. ')n' → logprob: -11.166972160339355
    7. '	n' → logprob: -11.541972160339355
    8. '(
' → logprob: -12.541972160339355
    9. '   ' → logprob: -12.916972160339355
    10. ',n' → logprob: -13.166972160339355

Token 288: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06223565712571144
    2. '):
' → logprob: -2.8122355937957764
    3. ')' → logprob: -9.312235832214355
    4. ' ):' → logprob: -9.437235832214355
    5. '+' → logprob: -10.062235832214355
    6. ':' → logprob: -10.437235832214355
    7. '   ' → logprob: -12.062235832214355
    8. '):
' → logprob: -12.562235832214355
    9. ' ):
' → logprob: -12.562235832214355
    10. ' ' → logprob: -12.937235832214355

Token 289: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42854031920433044
    2. '           ' → logprob: -2.1785402297973633
    3. '        ' → logprob: -2.8035402297973633
    4. ' ' → logprob: -2.9285402297973633
    5. ' while' → logprob: -3.6785402297973633
    6. '<|end|>' → logprob: -3.6785402297973633
    7. '   ' → logprob: -4.053540229797363
    8. '        
' → logprob: -4.428540229797363
    9. ' qs' → logprob: -4.678540229797363
    10. '    ' → logprob: -4.928540229797363

Token 290: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.17820565402507782
    2. 'while' (adapté à ' while') → logprob: -2.303205728530884
    3. '       ' → logprob: -2.803205728530884
    4. '   ' → logprob: -6.053205490112305
    5. '	while' → logprob: -8.053205490112305
    6. '    ' → logprob: -13.053205490112305
    7. '           ' → logprob: -13.303205490112305
    8. ' ' → logprob: -13.553205490112305
    9. '        
' → logprob: -14.178205490112305
    10. 'While' → logprob: -14.928205490112305

Token 291: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5761019587516785
    2. 'k' → logprob: -0.8261019587516785
    3. '(k' → logprob: -9.451102256774902
    4. ' ' → logprob: -10.201102256774902
    5. '   ' → logprob: -10.951102256774902
    6. '	k' → logprob: -11.201102256774902
    7. '(' → logprob: -11.451102256774902
    8. '  ' → logprob: -13.576102256774902
    9. ' (' → logprob: -13.826102256774902
    10. ' not' → logprob: -15.013602256774902

Token 292: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3870146572589874
    2. '>=' → logprob: -1.137014627456665
    3. 'and' → logprob: -9.637014389038086
    4. ' >=' → logprob: -10.137014389038086
    5. ' >' → logprob: -11.137014389038086
    6. '≥' → logprob: -11.387014389038086
    7. ' and' → logprob: -11.637014389038086
    8. '   ' → logprob: -14.012014389038086
    9. '&gt' → logprob: -14.387014389038086
    10. '1' → logprob: -14.637014389038086

Token 293: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3306015716807451e-05
    2. ' ' → logprob: -11.62501335144043
    3. '0' → logprob: -13.12501335144043
    4. '=' → logprob: -13.25001335144043
    5. '
' → logprob: -15.87501335144043
    6. '   ' → logprob: -16.12501335144043
    7. '>' → logprob: -16.25001335144043
    8. '  ' → logprob: -16.87501335144043
    9. '```' → logprob: -18.37501335144043
    10. '１' → logprob: -18.62501335144043

Token 294: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. '
' → logprob: -14.375000953674316
    3. '0' → logprob: -15.125000953674316
    4. '=' → logprob: -15.250000953674316
    5. ' ' → logprob: -15.250000953674316
    6. '>' → logprob: -16.750001907348633
    7. '

' → logprob: -18.250001907348633
    8. '１' → logprob: -18.875001907348633
    9. '' → logprob: -19.125001907348633
    10. '   ' → logprob: -19.500001907348633

Token 295: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2014191895723343
    2. 'and' → logprob: -1.7014192342758179
    3. '    ' → logprob: -12.82641887664795
    4. '   ' → logprob: -13.70141887664795
    5. ' ' → logprob: -14.07641887664795
    6. '	and' → logprob: -14.70141887664795
    7. '        ' → logprob: -14.95141887664795
    8. '  ' → logprob: -16.201419830322266
    9. '           ' → logprob: -16.201419830322266
    10. '       ' → logprob: -16.701419830322266

Token 296: ' det' (ID: 1476)
  Prédit: 'det'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'det' → logprob: -0.0040807779878377914
    2. ' det' → logprob: -5.504080772399902
    3. '   ' → logprob: -13.379080772399902
    4. '(det' → logprob: -14.504080772399902
    5. '  ' → logprob: -16.00408172607422
    6. ' ' → logprob: -16.75408172607422
    7. 'def' → logprob: -17.00408172607422
    8. '           ' → logprob: -17.50408172607422
    9. '     ' → logprob: -18.12908172607422
    10. '    ' → logprob: -18.62908172607422

Token 297: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.004111642483621836
    2. '(' → logprob: -5.5041117668151855
    3. '((' → logprob: -11.129111289978027
    4. '	min' → logprob: -12.379111289978027
    5. ' (' → logprob: -12.504111289978027
    6. '(
' → logprob: -12.629111289978027
    7. 'min' → logprob: -12.879111289978027
    8. 'minus' → logprob: -13.129111289978027
    9. '   ' → logprob: -13.879111289978027
    10. '```' → logprob: -15.129111289978027

Token 298: 'us' (ID: 385)
  Prédit: 'us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.000356199947418645
    2. '(us' → logprob: -8.250356674194336
    3. 'ус' → logprob: -11.125356674194336
    4. '(min' → logprob: -11.125356674194336
    5. '```' → logprob: -11.125356674194336
    6. '   ' → logprob: -11.250356674194336
    7. 's' → logprob: -11.875356674194336
    8. '(' → logprob: -12.375356674194336
    9. ')' → logprob: -12.500356674194336
    10. 'usz' → logprob: -12.875356674194336

Token 299: '(q' (ID: 21479)
  Prédit: '(ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ps' → logprob: -0.002269562566652894
    2. '(q' → logprob: -6.377269744873047
    3. '(' → logprob: -7.502269744873047
    4. '((' → logprob: -12.127269744873047
    5. '	ps' → logprob: -13.002269744873047
    6. '(
' → logprob: -13.502269744873047
    7. 'ps' → logprob: -13.877269744873047
    8. '   ' → logprob: -14.002269744873047
    9. '(points' → logprob: -14.127269744873047
    10. ' (' → logprob: -14.502269744873047

Token 300: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -5.8126592193730175e-05
    2. '[s' → logprob: -10.6250581741333
    3. '[' → logprob: -10.8750581741333
    4. '(s' → logprob: -12.3750581741333
    5. ')s' → logprob: -12.8750581741333
    6. 'ps' → logprob: -13.5000581741333
    7. ' s' → logprob: -13.5000581741333
    8. '(ps' → logprob: -13.8750581741333
    9. 'S' → logprob: -14.2500581741333
    10. 'qs' → logprob: -14.7500581741333

Token 301: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0035327249206602573
    2. '(k' → logprob: -6.128532886505127
    3. '[q' → logprob: -7.503532886505127
    4. '[' → logprob: -8.503532409667969
    5. 'k' → logprob: -8.878532409667969
    6. 'qs' → logprob: -9.128532409667969
    7. '[(' → logprob: -9.878532409667969
    8. ' [' → logprob: -10.003532409667969
    9. '   ' → logprob: -10.128532409667969
    10. ',k' → logprob: -10.128532409667969

Token 302: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03508789464831352
    2. '],' → logprob: -3.660087823867798
    3. '][' → logprob: -5.410088062286377
    4. ' -' → logprob: -6.160088062286377
    5. '[' → logprob: -6.910088062286377
    6. '   ' → logprob: -8.410087585449219
    7. ']' → logprob: -9.160087585449219
    8. '(' → logprob: -9.285087585449219
    9. ' ' → logprob: -9.285087585449219
    10. '],[' → logprob: -9.285087585449219

Token 303: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.52919222577475e-05
    2. ' ' → logprob: -10.125075340270996
    3. '2' → logprob: -11.500075340270996
    4. '   ' → logprob: -12.250075340270996
    5. '11' → logprob: -12.562575340270996
    6. '0' → logprob: -12.625075340270996
    7. '-' → logprob: -12.875075340270996
    8. 'i' → logprob: -13.500075340270996
    9. ']' → logprob: -13.562575340270996
    10. '
' → logprob: -13.875075340270996

Token 304: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.003335394663736224
    2. '],[' → logprob: -6.503335475921631
    3. ',' → logprob: -7.003335475921631
    4. '),' → logprob: -7.753335475921631
    5. ']' → logprob: -8.628334999084473
    6. ' ],' → logprob: -9.503334999084473
    7. '][' → logprob: -9.503334999084473
    8. ',q' → logprob: -10.003334999084473
    9. '   ' → logprob: -10.503334999084473
    10. ' ' → logprob: -10.753334999084473

Token 305: ' qs' (ID: 75083)
  Prédit: 'qs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qs' → logprob: -0.002655797405168414
    2. ' qs' → logprob: -6.002655982971191
    3. 'ps' → logprob: -9.377655982971191
    4. 'q' → logprob: -9.752655982971191
    5. ')' → logprob: -11.127655982971191
    6. '   ' → logprob: -12.002655982971191
    7. ' ' → logprob: -12.627655982971191
    8. '  ' → logprob: -13.002655982971191
    9. '
' → logprob: -13.252655982971191
    10. ' q' → logprob: -13.877655982971191

Token 306: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -2.4272752852994017e-05
    2. 'k' → logprob: -10.75002384185791
    3. '[' → logprob: -13.50002384185791
    4. '[i' → logprob: -14.00002384185791
    5. '{k' → logprob: -15.00002384185791
    6. '(k' → logprob: -15.62502384185791
    7. '   ' → logprob: -16.875024795532227
    8. '[q' → logprob: -17.250024795532227
    9. ')' → logprob: -17.625024795532227
    10. '	k' → logprob: -17.750024795532227

Token 307: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0022148462012410164
    2. '2' → logprob: -6.1272149085998535
    3. ' -' → logprob: -11.127214431762695
    4. '1' → logprob: -12.002214431762695
    5. '])' → logprob: -12.502214431762695
    6. ']))' → logprob: -13.127214431762695
    7. '0' → logprob: -13.877214431762695
    8. '   ' → logprob: -14.252214431762695
    9. ' ' → logprob: -15.002214431762695
    10. '```' → logprob: -15.127214431762695

Token 308: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.013994814362377e-05
    2. '-' → logprob: -10.50005054473877
    3. '1' → logprob: -11.12505054473877
    4. ' ' → logprob: -12.50005054473877
    5. '   ' → logprob: -13.50005054473877
    6. '
' → logprob: -13.87505054473877
    7. 'i' → logprob: -14.62505054473877
    8. '0' → logprob: -14.75005054473877
    9. '3' → logprob: -15.18755054473877
    10. '```' → logprob: -16.000049591064453

Token 309: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.021462332457304
    2. ' ),' → logprob: -4.646462440490723
    3. ']),' → logprob: -4.896462440490723
    4. '],' → logprob: -5.771462440490723
    5. ')' → logprob: -8.021462440490723
    6. '[' → logprob: -8.771462440490723
    7. '   ' → logprob: -8.771462440490723
    8. '       ' → logprob: -9.146462440490723
    9. '           ' → logprob: -10.146462440490723
    10. '])' → logprob: -10.271462440490723

Token 310: ' minus' (ID: 40335)
  Prédit: 'minus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minus' → logprob: -0.001509739668108523
    2. ' minus' → logprob: -6.626509666442871
    3. 'min' → logprob: -9.126509666442871
    4. '   ' → logprob: -10.126509666442871
    5. '           ' → logprob: -11.251509666442871
    6. '     ' → logprob: -12.501509666442871
    7. '    ' → logprob: -13.126509666442871
    8. '       ' → logprob: -13.251509666442871
    9. 'mins' → logprob: -13.376509666442871
    10. ')' → logprob: -13.376509666442871

Token 311: '(ps' (ID: 72187)
  Prédit: '(ps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ps' → logprob: -0.00026336227892898023
    2. 'ps' → logprob: -8.375263214111328
    3. '(' → logprob: -10.625263214111328
    4. '   ' → logprob: -12.875263214111328
    5. '(p' → logprob: -13.375263214111328
    6. '	ps' → logprob: -13.500263214111328
    7. '((' → logprob: -13.625263214111328
    8. ')' → logprob: -14.750263214111328
    9. ' ps' → logprob: -15.500263214111328
    10. '(ls' → logprob: -15.875263214111328

Token 312: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00018327576981391758
    2. '[' → logprob: -8.62518310546875
    3. 'i' → logprob: -13.00018310546875
    4. '[
' → logprob: -13.75018310546875
    5. ' [' → logprob: -16.87518310546875
    6. '(i' → logprob: -17.00018310546875
    7. ')' → logprob: -17.00018310546875
    8. '[n' → logprob: -17.37518310546875
    9. '[I' → logprob: -17.62518310546875
    10. ',i' → logprob: -18.00018310546875

Token 313: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26324397325515747
    2. '],' → logprob: -1.5132439136505127
    3. ']))' → logprob: -5.138244152069092
    4. ',q' → logprob: -6.013244152069092
    5. ' ,' → logprob: -6.763244152069092
    6. '),' → logprob: -7.013244152069092
    7. ']' → logprob: -8.513243675231934
    8. '   ' → logprob: -8.888243675231934
    9. '])' → logprob: -9.263243675231934
    10. '[' → logprob: -9.888243675231934

Token 314: ' qs' (ID: 75083)
  Prédit: 'qs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qs' → logprob: -0.002074006013572216
    2. ' qs' → logprob: -6.252074241638184
    3. 'q' → logprob: -9.502074241638184
    4. 'ps' → logprob: -9.877074241638184
    5. ')' → logprob: -11.502074241638184
    6. '(q' → logprob: -12.877074241638184
    7. '[' → logprob: -13.252074241638184
    8. '
' → logprob: -13.877074241638184
    9. '[q' → logprob: -13.877074241638184
    10. '))' → logprob: -14.502074241638184

Token 315: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0013294065138325095
    2. '[' → logprob: -7.25132942199707
    3. 'k' → logprob: -7.50132942199707
    4. '[
' → logprob: -10.87632942199707
    5. '{k' → logprob: -11.37632942199707
    6. '[i' → logprob: -11.62632942199707
    7. ' k' → logprob: -12.12632942199707
    8. '(k' → logprob: -12.12632942199707
    9. '[q' → logprob: -13.25132942199707
    10. '   ' → logprob: -13.37632942199707

Token 316: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.4894986785948277e-05
    2. ' -' → logprob: -10.250044822692871
    3. '2' → logprob: -11.875044822692871
    4. '-
' → logprob: -14.375044822692871
    5. '[' → logprob: -14.500044822692871
    6. ']))' → logprob: -15.000044822692871
    7. '' → logprob: -15.375044822692871
    8. '[-' → logprob: -15.500044822692871
    9. '])' → logprob: -16.000045776367188
    10. ']-' → logprob: -16.000045776367188

Token 317: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.033650655299425125
    2. '2' → logprob: -3.4086506366729736
    3. ' ' → logprob: -12.408650398254395
    4. '   ' → logprob: -15.033650398254395
    5. '3' → logprob: -16.03365135192871
    6. '-' → logprob: -16.22115135192871
    7. '{' → logprob: -16.65865135192871
    8. '```' → logprob: -16.78365135192871
    9. ')' → logprob: -17.22115135192871
    10. '  ' → logprob: -17.59615135192871

Token 318: ']))' (ID: 20259)
  Prédit: ']))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.5425004959106445
    2. '))' → logprob: -0.9175004959106445
    3. ')))' → logprob: -4.0425004959106445
    4. ')' → logprob: -7.4175004959106445
    5. '])):
' → logprob: -7.7925004959106445
    6. '']))' → logprob: -8.417500495910645
    7. ']' → logprob: -9.292500495910645
    8. ')])' → logprob: -9.417500495910645
    9. '])' → logprob: -10.042500495910645
    10. '}))' → logprob: -10.417500495910645

Token 319: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6943169832229614
    2. '<=' → logprob: -1.1943169832229614
    3. ')' → logprob: -1.8193169832229614
    4. ' <' → logprob: -4.069316864013672
    5. '<' → logprob: -4.319316864013672
    6. ')<=' → logprob: -6.194316864013672
    7. '):' → logprob: -7.194316864013672
    8. ':' → logprob: -7.319316864013672
    9. ')<' → logprob: -7.819316864013672
    10. ' ==' → logprob: -8.194316864013672

Token 320: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0032738489098846912
    2. ' ' → logprob: -5.753273963928223
    3. '=' → logprob: -9.253273963928223
    4. '1' → logprob: -16.003273010253906
    5. '  ' → logprob: -16.503273010253906
    6. '   ' → logprob: -17.128273010253906
    7. ' =' → logprob: -17.565773010253906
    8. '۰' → logprob: -17.565773010253906
    9. ')' → logprob: -18.128273010253906
    10. '
' → logprob: -18.940773010253906

Token 321: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007114782347343862
    2. '=' → logprob: -7.500711441040039
    3. ' ' → logprob: -8.750711441040039
    4. '=
' → logprob: -17.00071144104004
    5. '۰' → logprob: -17.12571144104004
    6. '1' → logprob: -17.12571144104004
    7. ' =' → logprob: -17.25071144104004
    8. ')' → logprob: -17.87571144104004
    9. 'zero' → logprob: -18.00071144104004
    10. '
' → logprob: -18.37571144104004

Token 322: ':
' (ID: 734)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.41572389006614685
    2. '):
' → logprob: -1.1657239198684692
    3. ':' → logprob: -3.6657238006591797
    4. ')' → logprob: -6.79072380065918
    5. ':
' → logprob: -7.16572380065918
    6. ' ):' → logprob: -8.04072380065918
    7. ' ):
' → logprob: -8.29072380065918
    8. ' ' → logprob: -9.16572380065918
    9. '   ' → logprob: -9.66572380065918
    10. '():' → logprob: -10.04072380065918

Token 323: '               ' (ID: 506)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.03605691343545914
    2. ' 
' → logprob: -3.9110569953918457
    3. 'k' → logprob: -4.286056995391846
    4. ' ' → logprob: -6.911056995391846
    5. ' ks' → logprob: -8.036056518554688
    6. ' qs' → logprob: -9.036056518554688
    7. '	k' → logprob: -9.286056518554688
    8. 'ks' → logprob: -10.411056518554688
    9. '
' → logprob: -11.036056518554688
    10. ' q' → logprob: -11.411056518554688

Token 324: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.14272207021713257
    2. 'k' (adapté à ' k') → logprob: -2.0177221298217773
    3. '	k' → logprob: -10.642722129821777
    4. ' 
' → logprob: -12.142722129821777
    5. ' ks' → logprob: -12.267722129821777
    6. ' qs' → logprob: -12.392722129821777
    7. 'ks' → logprob: -13.017722129821777
    8. 'q' → logprob: -13.392722129821777
    9. '
' → logprob: -13.392722129821777
    10. ' q' → logprob: -14.392722129821777

Token 325: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.021976523101329803
    2. '-' → logprob: -4.521976470947266
    3. ' -=' → logprob: -4.521976470947266
    4. '=' → logprob: -13.896976470947266
    5. ' -' → logprob: -14.271976470947266
    6. '+=' → logprob: -15.271976470947266
    7. ' ' → logprob: -17.896976470947266
    8. ',' → logprob: -18.146976470947266
    9. '   ' → logprob: -18.646976470947266
    10. '−' → logprob: -19.146976470947266

Token 326: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -19.625
    4. '
' → logprob: -21.125
    5. '１' → logprob: -21.5
    6. '  ' → logprob: -22.0
    7. '```' → logprob: -22.125
    8. '<|end|>' → logprob: -22.625
    9. '۱' → logprob: -22.875
    10. '१' → logprob: -23.125

Token 327: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -18.937501907348633
    4. '<|end|>' → logprob: -19.437501907348633
    5. '```' → logprob: -19.625001907348633
    6. '
' → logprob: -19.750001907348633
    7. '  ' → logprob: -20.125001907348633
    8. '۱' → logprob: -20.750001907348633
    9. '１' → logprob: -21.312501907348633
    10. '१' → logprob: -21.375001907348633

Token 328: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15687428414821625
    2. '       ' → logprob: -2.781874179840088
    3. ' 
' → logprob: -3.406874179840088
    4. ')
' → logprob: -4.531874179840088
    5. '           ' → logprob: -4.656874179840088
    6. ')' → logprob: -4.906874179840088
    7. '[' → logprob: -5.531874179840088
    8. '        
' → logprob: -5.531874179840088
    9. '  
' → logprob: -5.781874179840088
    10. '               ' → logprob: -6.281874179840088

Token 329: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4809303283691406
    2. ']' → logprob: -1.3559303283691406
    3. '       ' → logprob: -2.9809303283691406
    4. '[' → logprob: -4.230930328369141
    5. ')
' → logprob: -4.480930328369141
    6. '               ' → logprob: -4.980930328369141
    7. '
' → logprob: -5.230930328369141
    8. '           ' → logprob: -5.355930328369141
    9. ' ' → logprob: -5.605930328369141
    10. '[i' → logprob: -5.980930328369141

Token 330: ' qs' (ID: 75083)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3452715575695038
    2. 'qs' (adapté à ' qs') → logprob: -1.9702715873718262
    3. ' k' → logprob: -2.220271587371826
    4. ' qs' → logprob: -3.220271587371826
    5. 'q' → logprob: -6.845271587371826
    6. '       ' → logprob: -6.970271587371826
    7. '           ' → logprob: -7.220271587371826
    8. '   ' → logprob: -7.970271587371826
    9. ' q' → logprob: -9.095271110534668
    10. 'ks' → logprob: -9.220271110534668

Token 331: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -6.869017852295656e-06
    2. '[' → logprob: -12.250006675720215
    3. '[q' → logprob: -13.625006675720215
    4. ' [' → logprob: -15.000006675720215
    5. '[
' → logprob: -15.250006675720215
    6. 'k' → logprob: -16.25000762939453
    7. '[m' → logprob: -16.75000762939453
    8. '
' → logprob: -17.37500762939453
    9. '][' → logprob: -17.50000762939453
    10. '[i' → logprob: -17.50000762939453

Token 332: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001075918786227703
    2. ']=' → logprob: -6.876075744628906
    3. ' ]' → logprob: -10.251075744628906
    4. '=' → logprob: -12.251075744628906
    5. ')' → logprob: -13.751075744628906
    6. '],' → logprob: -14.626075744628906
    7. ']
' → logprob: -15.001075744628906
    8. '[' → logprob: -15.501075744628906
    9. ']=(' → logprob: -15.626075744628906
    10. ' =' → logprob: -16.126075744628906

Token 333: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10085468739271164
    2. ' =' → logprob: -2.3508546352386475
    3. '=q' → logprob: -7.350854873657227
    4. '=k' → logprob: -12.475854873657227
    5. ',' → logprob: -14.225854873657227
    6. '=s' → logprob: -14.600854873657227
    7. '＝' → logprob: -16.100854873657227
    8. ')=' → logprob: -16.350854873657227
    9. ',q' → logprob: -16.350854873657227
    10. '.=' → logprob: -16.600854873657227

Token 334: ' ps' (ID: 10942)
  Prédit: 'ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ps' → logprob: -1.723973582556937e-05
    2. ' ps' → logprob: -11.000017166137695
    3. '(ps' → logprob: -15.500017166137695
    4. 'py' → logprob: -16.125017166137695
    5. '	ps' → logprob: -16.750017166137695
    6. 'psis' → logprob: -17.000017166137695
    7. 'qs' → logprob: -17.375017166137695
    8. 'p' → logprob: -18.625017166137695
    9. '   ' → logprob: -19.625017166137695
    10. '_ps' → logprob: -19.625017166137695

Token 335: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -13.625001907348633
    3. 'i' → logprob: -13.750001907348633
    4. '[
' → logprob: -18.875001907348633
    5. '[k' → logprob: -19.750001907348633
    6. '[I' → logprob: -19.750001907348633
    7. ' i' → logprob: -20.000001907348633
    8. '(i' → logprob: -20.375001907348633
    9. ' [' → logprob: -22.000001907348633
    10. '	i' → logprob: -22.125001907348633

Token 336: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47609183192253113
    2. ')
' → logprob: -0.9760918617248535
    3. '
' → logprob: -7.4760918617248535
    4. 'k' → logprob: -7.9760918617248535
    5. ']' → logprob: -8.601091384887695
    6. '<|end|>' → logprob: -8.601091384887695
    7. ']
' → logprob: -8.726091384887695
    8. '       ' → logprob: -9.226091384887695
    9. '   ' → logprob: -9.351091384887695
    10. '           ' → logprob: -9.476091384887695

Token 337: '           ' (ID: 352)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.009201920591294765
    2. ' k' → logprob: -5.384202003479004
    3. '           ' → logprob: -5.884202003479004
    4. '       ' → logprob: -6.759202003479004
    5. '   ' → logprob: -7.759202003479004
    6. '	k' → logprob: -8.634202003479004
    7. ',k' → logprob: -12.009202003479004
    8. ' ' → logprob: -12.509202003479004
    9. '_k' → logprob: -12.634202003479004
    10. '{k' → logprob: -12.884202003479004

Token 338: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.0007123126997612417
    2. ' k' → logprob: -7.2507123947143555
    3. '	k' → logprob: -13.000712394714355
    4. '   ' → logprob: -16.50071144104004
    5. '_k' → logprob: -18.75071144104004
    6. ',k' → logprob: -19.25071144104004
    7. '{k' → logprob: -19.75071144104004
    8. '+k' → logprob: -20.37571144104004
    9. '       ' → logprob: -20.75071144104004
    10. '           ' → logprob: -20.87571144104004

Token 339: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.005285461433231831
    2. ' +=' → logprob: -5.255285263061523
    3. '+' → logprob: -9.880285263061523
    4. '=' → logprob: -15.005285263061523
    5. ']+=' → logprob: -15.630285263061523
    6. '+="' → logprob: -18.380285263061523
    7. '1' → logprob: -18.505285263061523
    8. '   ' → logprob: -18.630285263061523
    9. '+='' → logprob: -19.255285263061523
    10. '+=(' → logprob: -19.505285263061523

Token 340: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007099286303855479
    2. ' ' → logprob: -7.2507100105285645
    3. '   ' → logprob: -18.875709533691406
    4. '<|end|>' → logprob: -19.500709533691406
    5. '```' → logprob: -19.500709533691406
    6. '１' → logprob: -20.250709533691406
    7. ' ' → logprob: -21.125709533691406
    8. '
' → logprob: -21.813209533691406
    9. '۱' → logprob: -21.813209533691406
    10. '0' → logprob: -21.938209533691406

Token 341: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '```' → logprob: -21.375
    4. '１' → logprob: -22.125
    5. '   ' → logprob: -22.5
    6. '۱' → logprob: -23.375
    7. '<|end|>' → logprob: -23.9375
    8. '१' → logprob: -24.0
    9. '১' → logprob: -24.1875
    10. '0' → logprob: -24.375

Token 342: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 343: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004288880620151758
    2. '       ' → logprob: -6.129288673400879
    3. ' for' → logprob: -6.254288673400879
    4. 'for' → logprob: -9.629288673400879
    5. '
' → logprob: -10.004288673400879
    6. ' while' → logprob: -10.379288673400879
    7. '  ' → logprob: -11.879288673400879
    8. ' ' → logprob: -12.379288673400879
    9. '<|end|>' → logprob: -12.379288673400879
    10. '    
' → logprob: -12.629288673400879

Token 344: ' t' (ID: 260)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.23165391385555267
    2. '   ' → logprob: -2.231653928756714
    3. 'while' → logprob: -2.356653928756714
    4. '
' → logprob: -6.981653690338135
    5. ' 
' → logprob: -7.106653690338135
    6. '    
' → logprob: -7.106653690338135
    7. 'While' → logprob: -7.106653690338135
    8. '	while' → logprob: -7.731653690338135
    9. '       ' → logprob: -7.731653690338135
    10. '        
' → logprob: -9.606654167175293

Token 345: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3796039819717407
    2. '=' → logprob: -1.3796039819717407
    3. '=k' → logprob: -2.754603862762451
    4. 'k' → logprob: -7.629603862762451
    5. '=q' → logprob: -10.75460433959961
    6. '=len' → logprob: -11.75460433959961
    7. '=r' → logprob: -11.87960433959961
    8. 's' → logprob: -12.87960433959961
    9. '=n' → logprob: -13.00460433959961
    10. '=t' → logprob: -13.25460433959961

Token 346: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0009118211455643177
    2. ' k' → logprob: -7.000911712646484
    3. '	k' → logprob: -15.375911712646484
    4. '=k' → logprob: -16.375911712646484
    5. 'ks' → logprob: -17.750911712646484
    6. '   ' → logprob: -17.875911712646484
    7. ' ' → logprob: -18.250911712646484
    8. '"k' → logprob: -18.625911712646484
    9. '
' → logprob: -19.375911712646484
    10. '(k' → logprob: -19.375911712646484

Token 347: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03567599505186081
    2. '<|end|>' → logprob: -3.4106760025024414
    3. 'for' → logprob: -7.160676002502441
    4. '<|end|>' → logprob: -7.660676002502441
    5. '0' → logprob: -8.910676002502441
    6. '-' → logprob: -9.160676002502441
    7. '   ' → logprob: -9.535676002502441
    8. '    
' → logprob: -9.660676002502441
    9. '1' → logprob: -9.660676002502441
    10. 'while' → logprob: -9.785676002502441

Token 348: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07121359556913376
    2. '   ' → logprob: -2.821213483810425
    3. ' for' → logprob: -4.946213722229004
    4. 'for' → logprob: -6.196213722229004
    5. ' ' → logprob: -10.946213722229004
    6. '
' → logprob: -10.946213722229004
    7. '	for' → logprob: -12.321213722229004
    8. '	   ' → logprob: -12.821213722229004
    9. '        
' → logprob: -13.071213722229004
    10. '     ' → logprob: -13.196213722229004

Token 349: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6007801294326782
    2. '       ' → logprob: -0.8507801294326782
    3. ' for' → logprob: -3.7257800102233887
    4. '   ' → logprob: -7.850780010223389
    5. ' ' → logprob: -10.225780487060547
    6. '
' → logprob: -11.850780487060547
    7. 'k' → logprob: -12.725780487060547
    8. 'qs' → logprob: -13.725780487060547
    9. '	for' → logprob: -13.975780487060547
    10. 'q' → logprob: -14.225780487060547

Token 350: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01820824109017849
    2. ' i' → logprob: -4.018208026885986
    3. 'range' → logprob: -9.768208503723145
    4. ' range' → logprob: -13.893208503723145
    5. 'in' → logprob: -16.518207550048828
    6. 'r' → logprob: -17.018207550048828
    7. '	i' → logprob: -17.268207550048828
    8. 're' → logprob: -18.018207550048828
    9. 'reverse' → logprob: -18.143207550048828
    10. ' ' → logprob: -18.143207550048828

Token 351: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03027256205677986
    2. 'in' → logprob: -3.5302724838256836
    3. 'range' → logprob: -7.655272483825684
    4. ' range' → logprob: -10.280272483825684
    5. 'n' → logprob: -11.530272483825684
    6. '   ' → logprob: -14.155272483825684
    7. 'reverse' → logprob: -14.280272483825684
    8. ' reversed' → logprob: -14.405272483825684
    9. 'r' → logprob: -14.530272483825684
    10. ' ' → logprob: -14.655272483825684

Token 352: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001593195047462359
    2. ' range' → logprob: -8.75015926361084
    3. 're' → logprob: -14.12515926361084
    4. '   ' → logprob: -16.500160217285156
    5. '(range' → logprob: -17.250160217285156
    6. 'r' → logprob: -19.625160217285156
    7. ' ' → logprob: -19.750160217285156
    8. 'rang' → logprob: -19.750160217285156
    9. 'reverse' → logprob: -20.125160217285156
    10. '  ' → logprob: -20.625160217285156

Token 353: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4820842444896698
    2. '(range' → logprob: -0.9820842742919922
    3. '(re' → logprob: -4.982084274291992
    4. 'range' → logprob: -6.982084274291992
    5. ' range' → logprob: -9.107084274291992
    6. '(' → logprob: -10.607084274291992
    7. 'n' → logprob: -10.732084274291992
    8. 're' → logprob: -11.982084274291992
    9. ' (' → logprob: -11.982084274291992
    10. '(r' → logprob: -12.607084274291992

Token 354: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0010329303331673145
    2. ' -' → logprob: -6.876032829284668
    3. '1' → logprob: -15.876032829284668
    4. '-
' → logprob: -17.501033782958984
    5. '   ' → logprob: -18.751033782958984
    6. ' ' → logprob: -18.751033782958984
    7. '
' → logprob: -18.876033782958984
    8. '--' → logprob: -19.001033782958984
    9. '2' → logprob: -19.626033782958984
    10. '()-' → logprob: -20.001033782958984

Token 355: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011803467059507966
    2. '2' → logprob: -6.751180171966553
    3. '-' → logprob: -12.001180648803711
    4. ' ' → logprob: -12.626180648803711
    5. '
' → logprob: -14.876180648803711
    6. ' -' → logprob: -16.62618064880371
    7. '   ' → logprob: -16.62618064880371
    8. '(' → logprob: -16.87618064880371
    9. '3' → logprob: -16.87618064880371
    10. '

' → logprob: -17.68868064880371

Token 356: ')[' (ID: 13637)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02980221062898636
    2. ',-' → logprob: -3.5298023223876953
    3. '-' → logprob: -10.654802322387695
    4. ' ,' → logprob: -10.904802322387695
    5. ' ,-' → logprob: -12.029802322387695
    6. ' -' → logprob: -12.904802322387695
    7. ',
' → logprob: -14.154802322387695
    8. ',n' → logprob: -16.029802322387695
    9. '   ' → logprob: -16.279802322387695
    10. '-,' → logprob: -16.654802322387695

Token 357: '::-' (ID: 96612)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4524841010570526
    2. '::-' → logprob: -1.077484130859375
    3. ' ,' → logprob: -4.577484130859375
    4. '-' → logprob: -4.827484130859375
    5. '[::-' → logprob: -6.202484130859375
    6. ',-' → logprob: -6.202484130859375
    7. ' -' → logprob: -7.577484130859375
    8. ' :' → logprob: -8.952484130859375
    9. '-,' → logprob: -9.077484130859375
    10. ':' → logprob: -9.202484130859375

Token 358: '1' (ID: 16)
  Prédit: '::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::-' → logprob: -0.35121873021125793
    2. '1' → logprob: -1.3512187004089355
    3. '-' → logprob: -3.3512187004089355
    4. ':' → logprob: -6.8512187004089355
    5. ':-' → logprob: -7.3512187004089355
    6. '```' → logprob: -8.601219177246094
    7. ']' → logprob: -9.351219177246094
    8. ' :' → logprob: -9.976219177246094
    9. '::' → logprob: -10.101219177246094
    10. '--' → logprob: -11.476219177246094

Token 359: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.30699843168258667
    2. ':' → logprob: -1.5569984912872314
    3. ']:
' → logprob: -3.1819984912872314
    4. ':
' → logprob: -5.181998252868652
    5. ' :' → logprob: -6.056998252868652
    6. ']' → logprob: -6.431998252868652
    7. '   ' → logprob: -7.306998252868652
    8. '():
' → logprob: -7.931998252868652
    9. '):' → logprob: -8.056998252868652
    10. ' ]' → logprob: -8.431998252868652

Token 360: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5986658930778503
    2. ' while' → logprob: -1.4736659526824951
    3. '   ' → logprob: -1.7236659526824951
    4. ' ' → logprob: -4.223665714263916
    5. '    ' → logprob: -4.598665714263916
    6. '<|end|>' → logprob: -5.223665714263916
    7. '        
' → logprob: -5.473665714263916
    8. '    
' → logprob: -6.223665714263916
    9. ' 
' → logprob: -6.348665714263916
    10. '	while' → logprob: -6.973665714263916

Token 361: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.02387109585106373
    2. 'while' (adapté à ' while') → logprob: -3.7738711833953857
    3. '       ' → logprob: -7.773870944976807
    4. '   ' → logprob: -8.648871421813965
    5. '	while' → logprob: -11.273871421813965
    6. '           ' → logprob: -11.773871421813965
    7. '    ' → logprob: -12.023871421813965
    8. ' ' → logprob: -13.273871421813965
    9. 'While' → logprob: -14.273871421813965
    10. '        ' → logprob: -15.523871421813965

Token 362: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.04858771339058876
    2. 'k' → logprob: -3.0485877990722656
    3. '(k' → logprob: -16.298587799072266
    4. '   ' → logprob: -16.548587799072266
    5. ' ' → logprob: -17.298587799072266
    6. '	k' → logprob: -17.423587799072266
    7. '    ' → logprob: -17.923587799072266
    8. ',k' → logprob: -19.048587799072266
    9. '{k' → logprob: -19.048587799072266
    10. 't' → logprob: -19.173587799072266

Token 363: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.00861468818038702
    2. '>' → logprob: -4.758614540100098
    3. ' ' → logprob: -16.258615493774414
    4. ' >
' → logprob: -17.508615493774414
    5. ' >=' → logprob: -19.383615493774414
    6. '   ' → logprob: -19.508615493774414
    7. '()>' → logprob: -19.633615493774414
    8. ' >
' → logprob: -19.758615493774414
    9. ')>' → logprob: -19.883615493774414
    10. '[' → logprob: -20.008615493774414

Token 364: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0010154220508411527
    2. '1' → logprob: -7.2510151863098145
    3. ' t' → logprob: -8.126015663146973
    4. ' ' → logprob: -12.376015663146973
    5. '(t' → logprob: -13.001015663146973
    6. '   ' → logprob: -14.001015663146973
    7. '0' → logprob: -14.001015663146973
    8. '`t' → logprob: -14.001015663146973
    9. '	t' → logprob: -15.001015663146973
    10. ')t' → logprob: -15.626015663146973

Token 365: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04666292294859886
    2. 'and' → logprob: -3.1716628074645996
    3. '1' → logprob: -5.7966628074646
    4. ' ' → logprob: -7.4216628074646
    5. '   ' → logprob: -11.671663284301758
    6. '  ' → logprob: -12.671663284301758
    7. '    ' → logprob: -12.796663284301758
    8. '-' → logprob: -13.421663284301758
    9. '	and' → logprob: -14.171663284301758
    10. '0' → logprob: -14.546663284301758

Token 366: ' det' (ID: 1476)
  Prédit: 'det'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'det' → logprob: -0.20141616463661194
    2. ' det' → logprob: -1.7014161348342896
    3. '(det' → logprob: -13.076416015625
    4. '   ' → logprob: -15.451416015625
    5. 'd' → logprob: -15.576416015625
    6. 'def' → logprob: -15.826416015625
    7. '_det' → logprob: -15.951416015625
    8. ' ' → logprob: -16.826416015625
    9. '.det' → logprob: -16.826416015625
    10. 'Det' → logprob: -17.826416015625

Token 367: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -13.500001907348633
    3. ' (' → logprob: -16.750001907348633
    4. '((' → logprob: -17.750001907348633
    5. '	min' → logprob: -18.375001907348633
    6. '   ' → logprob: -19.000001907348633
    7. '(m' → logprob: -19.500001907348633
    8. 'minus' → logprob: -19.625001907348633
    9. 'min' → logprob: -19.875001907348633
    10. '(
' → logprob: -19.875001907348633

Token 368: 'us' (ID: 385)
  Prédit: 'us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.00481944577768445
    2. 'minus' → logprob: -5.629819393157959
    3. 'os' → logprob: -7.879819393157959
    4. '(min' → logprob: -8.629819869995117
    5. 'uses' → logprob: -9.754819869995117
    6. '(' → logprob: -10.004819869995117
    7. 'a' → logprob: -10.004819869995117
    8. 'usz' → logprob: -10.129819869995117
    9. 'inus' → logprob: -10.254819869995117
    10. '(us' → logprob: -10.504819869995117

Token 369: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.16025398671627045
    2. '(ps' → logprob: -1.9102540016174316
    3. '(' → logprob: -10.535253524780273
    4. 'qs' → logprob: -13.035253524780273
    5. 'ps' → logprob: -15.035253524780273
    6. '(p' → logprob: -15.410253524780273
    7. '	ps' → logprob: -16.410253524780273
    8. '((' → logprob: -16.535253524780273
    9. 'q' → logprob: -16.785253524780273
    10. '(
' → logprob: -16.910253524780273

Token 370: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0206720617134124e-05
    2. '[' → logprob: -12.87501049041748
    3. '[i' → logprob: -13.00001049041748
    4. 'qs' → logprob: -13.00001049041748
    5. 'ps' → logprob: -13.25001049041748
    6. '
' → logprob: -15.37501049041748
    7. 'q' → logprob: -15.50001049041748
    8. '_s' → logprob: -16.500009536743164
    9. ''s' → logprob: -16.500009536743164
    10. 'si' → logprob: -16.625009536743164

Token 371: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -2.963691804325208e-05
    2. 'k' → logprob: -10.625029563903809
    3. '[' → logprob: -13.125029563903809
    4. '(k' → logprob: -13.625029563903809
    5. '[i' → logprob: -14.000029563903809
    6. '   ' → logprob: -15.375029563903809
    7. '[
' → logprob: -15.500029563903809
    8. '
' → logprob: -15.625029563903809
    9. '[q' → logprob: -15.625029563903809
    10. '{k' → logprob: -16.000030517578125

Token 372: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.253090865968261e-06
    2. ' -' → logprob: -11.750009536743164
    3. '[-' → logprob: -14.750009536743164
    4. '[' → logprob: -15.000009536743164
    5. '-
' → logprob: -15.250009536743164
    6. '1' → logprob: -15.500009536743164
    7. '   ' → logprob: -16.875009536743164
    8. ']-' → logprob: -17.625009536743164
    9. '−' → logprob: -18.000009536743164
    10. '[i' → logprob: -18.500009536743164

Token 373: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. '-' → logprob: -13.125006675720215
    3. '
' → logprob: -13.500006675720215
    4. ' ' → logprob: -13.625006675720215
    5. '2' → logprob: -13.875006675720215
    6. '   ' → logprob: -14.750006675720215
    7. '{' → logprob: -15.562506675720215
    8. '[' → logprob: -15.875006675720215
    9. '

' → logprob: -16.06250762939453
    10. '```' → logprob: -16.25000762939453

Token 374: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005794849130325019
    2. '],' → logprob: -8.375579833984375
    3. ' ,' → logprob: -8.375579833984375
    4. ',q' → logprob: -9.625579833984375
    5. '),' → logprob: -10.125579833984375
    6. '>,' → logprob: -13.375579833984375
    7. '<|end|>' → logprob: -13.500579833984375
    8. '(),' → logprob: -13.625579833984375
    9. '‌,' → logprob: -13.625579833984375
    10. '},' → logprob: -14.000579833984375

Token 375: ' qs' (ID: 75083)
  Prédit: 'qs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qs' → logprob: -0.038075923919677734
    2. ' qs' → logprob: -3.2880759239196777
    3. '
' → logprob: -11.663076400756836
    4. 'ps' → logprob: -11.788076400756836
    5. '   ' → logprob: -12.538076400756836
    6. ' ' → logprob: -12.538076400756836
    7. 'q' → logprob: -12.788076400756836
    8. '
' → logprob: -13.163076400756836
    9. ')' → logprob: -14.288076400756836
    10. ',' → logprob: -14.413076400756836

Token 376: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.2233183042553719e-05
    2. 'k' → logprob: -11.375012397766113
    3. '[' → logprob: -15.125012397766113
    4. '{k' → logprob: -15.125012397766113
    5. '[i' → logprob: -16.625011444091797
    6. '[q' → logprob: -16.750011444091797
    7. '(k' → logprob: -17.000011444091797
    8. '[n' → logprob: -18.000011444091797
    9. '#' → logprob: -18.250011444091797
    10. '
' → logprob: -18.375011444091797

Token 377: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.076218025758862e-05
    2. '[' → logprob: -10.125070571899414
    3. '2' → logprob: -11.000070571899414
    4. '[-' → logprob: -12.125070571899414
    5. '[i' → logprob: -12.250070571899414
    6. ' -' → logprob: -12.750070571899414
    7. '   ' → logprob: -15.125070571899414
    8. '[t' → logprob: -16.625070571899414
    9. 'i' → logprob: -16.750070571899414
    10. '][' → logprob: -17.000070571899414

Token 378: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.061054359131958e-06
    2. '1' → logprob: -11.875007629394531
    3. '
' → logprob: -14.000007629394531
    4. '   ' → logprob: -16.12500762939453
    5. ' ' → logprob: -16.75000762939453
    6. 't' → logprob: -17.25000762939453
    7. '-' → logprob: -17.43750762939453
    8. '' → logprob: -17.56250762939453
    9. '```' → logprob: -17.62500762939453
    10. '

' → logprob: -17.87500762939453

Token 379: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -3.5358694731257856e-05
    2. ' ),' → logprob: -10.500035285949707
    3. '           ' → logprob: -13.125035285949707
    4. '               ' → logprob: -13.250035285949707
    5. '],' → logprob: -13.750035285949707
    6. '                   ' → logprob: -15.000035285949707
    7. '   ' → logprob: -15.125035285949707
    8. '         ' → logprob: -15.375035285949707
    9. ''),' → logprob: -15.375035285949707
    10. ')' → logprob: -15.500035285949707

Token 380: ' minus' (ID: 40335)
  Prédit: 'minus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minus' → logprob: -0.31331634521484375
    2. ' minus' → logprob: -1.3133163452148438
    3. '   ' → logprob: -10.438316345214844
    4. '    ' → logprob: -12.688316345214844
    5. '-minus' → logprob: -12.813316345214844
    6. '       ' → logprob: -12.938316345214844
    7. 'min' → logprob: -12.938316345214844
    8. '           ' → logprob: -13.063316345214844
    9. ' ' → logprob: -13.188316345214844
    10. '        ' → logprob: -13.563316345214844

Token 381: '(ps' (ID: 72187)
  Prédit: '(ps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ps' → logprob: -1.4736459888808895e-05
    2. '(' → logprob: -11.625014305114746
    3. 'ps' → logprob: -12.250014305114746
    4. '	ps' → logprob: -14.500014305114746
    5. '   ' → logprob: -16.125015258789062
    6. '(p' → logprob: -16.375015258789062
    7. ' ps' → logprob: -17.250015258789062
    8. '(q' → logprob: -17.250015258789062
    9. '(py' → logprob: -17.250015258789062
    10. '(pm' → logprob: -17.375015258789062

Token 382: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3544423381972592e-05
    2. '[' → logprob: -11.25001335144043
    3. 'i' → logprob: -15.12501335144043
    4. '[
' → logprob: -15.87501335144043
    5. '[I' → logprob: -17.12501335144043
    6. '
' → logprob: -17.50001335144043
    7. ' [' → logprob: -17.50001335144043
    8. '   ' → logprob: -18.50001335144043
    9. '[q' → logprob: -18.62501335144043
    10. '```' → logprob: -19.12501335144043

Token 383: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011986687779426575
    2. '],' → logprob: -4.63698673248291
    3. ' ,' → logprob: -6.13698673248291
    4. ',q' → logprob: -10.13698673248291
    5. '(),' → logprob: -11.88698673248291
    6. '),' → logprob: -12.51198673248291
    7. '‌,' → logprob: -12.51198673248291
    8. '`,' → logprob: -13.01198673248291
    9. '   ' → logprob: -13.13698673248291
    10. ' ' → logprob: -13.26198673248291

Token 384: ' qs' (ID: 75083)
  Prédit: 'qs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qs' → logprob: -0.03808428719639778
    2. ' qs' → logprob: -3.2880842685699463
    3. 'q' → logprob: -10.913084030151367
    4. '   ' → logprob: -12.038084030151367
    5. ' ' → logprob: -12.163084030151367
    6. '
' → logprob: -13.038084030151367
    7. 'ps' → logprob: -13.413084030151367
    8. ')' → logprob: -13.538084030151367
    9. '    ' → logprob: -13.663084030151367
    10. ' q' → logprob: -13.788084030151367

Token 385: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0081187654286623
    2. '[k' → logprob: -4.883118629455566
    3. ')' → logprob: -9.008118629455566
    4. '[' → logprob: -9.133118629455566
    5. '])' → logprob: -9.508118629455566
    6. 'i' → logprob: -9.508118629455566
    7. ']' → logprob: -10.383118629455566
    8. '))' → logprob: -10.508118629455566
    9. ']))' → logprob: -10.508118629455566
    10. '   ' → logprob: -11.633118629455566

Token 386: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.012733547016978264
    2. '[' → logprob: -4.637733459472656
    3. '])' → logprob: -6.637733459472656
    4. 'i' → logprob: -8.012733459472656
    5. ']' → logprob: -8.012733459472656
    6. '   ' → logprob: -8.387733459472656
    7. '-' → logprob: -8.387733459472656
    8. '[
' → logprob: -8.512733459472656
    9. '[k' → logprob: -9.512733459472656
    10. '[j' → logprob: -9.637733459472656

Token 387: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.23917081207037e-05
    2. ' ' → logprob: -10.375041961669922
    3. '   ' → logprob: -13.000041961669922
    4. '
' → logprob: -13.062541961669922
    5. 'i' → logprob: -13.437541961669922
    6. '])' → logprob: -13.875041961669922
    7. ']' → logprob: -14.250041961669922
    8. '

' → logprob: -15.125041961669922
    9. '[i' → logprob: -15.187541961669922
    10. ')' → logprob: -15.312541961669922

Token 388: ']))' (ID: 20259)
  Prédit: ']))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.01713261380791664
    2. '))' → logprob: -4.267132759094238
    3. ')))' → logprob: -6.142132759094238
    4. '])' → logprob: -7.267132759094238
    5. ')' → logprob: -10.142132759094238
    6. ')])' → logprob: -10.267132759094238
    7. '}))' → logprob: -11.892132759094238
    8. ']' → logprob: -12.142132759094238
    9. '])):
' → logprob: -12.142132759094238
    10. '])))' → logprob: -12.267132759094238

Token 389: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.05823361873626709
    2. ' <=' → logprob: -3.6832337379455566
    3. '<' → logprob: -3.9332337379455566
    4. ')' → logprob: -4.558233737945557
    5. '<=' → logprob: -7.433233737945557
    6. ' >' → logprob: -7.558233737945557
    7. '>' → logprob: -9.183233261108398
    8. ' >=' → logprob: -9.683233261108398
    9. ' )' → logprob: -10.558233261108398
    10. ' ' → logprob: -10.683233261108398

Token 390: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01934901811182499
    2. '=' → logprob: -4.269349098205566
    3. ' ' → logprob: -5.269349098205566
    4. '1' → logprob: -11.019349098205566
    5. ' =' → logprob: -12.769349098205566
    6. '   ' → logprob: -13.644349098205566
    7. ')' → logprob: -14.144349098205566
    8. '
' → logprob: -14.644349098205566
    9. '۰' → logprob: -15.144349098205566
    10. '=
' → logprob: -15.269349098205566

Token 391: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000340945553034544
    2. ' ' → logprob: -8.375341415405273
    3. '=' → logprob: -9.125341415405273
    4. '1' → logprob: -14.125341415405273
    5. '
' → logprob: -16.312841415405273
    6. ' =' → logprob: -16.437841415405273
    7. '۰' → logprob: -16.437841415405273
    8. '   ' → logprob: -16.500341415405273
    9. ')' → logprob: -16.500341415405273
    10. ',' → logprob: -17.500341415405273

Token 392: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.30599045753479
    2. '):
' → logprob: -1.30599045753479
    3. ':' → logprob: -1.43099045753479
    4. '               ' → logprob: -1.80599045753479
    5. '           ' → logprob: -3.43099045753479
    6. '):' → logprob: -4.555990219116211
    7. '       ' → logprob: -4.805990219116211
    8. '<|end|>' → logprob: -6.805990219116211
    9. ')' → logprob: -7.055990219116211
    10. '   ' → logprob: -8.055990219116211

Token 393: '               ' (ID: 506)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.7391360998153687
    2. 'k' → logprob: -1.2391360998153687
    3. '       ' → logprob: -1.6141360998153687
    4. '           ' → logprob: -3.864136219024658
    5. '               ' → logprob: -4.989136219024658
    6. '   ' → logprob: -5.239136219024658
    7. ' ' → logprob: -8.2391357421875
    8. '	k' → logprob: -8.6141357421875
    9. '```' → logprob: -10.2391357421875
    10. ')' → logprob: -10.2391357421875

Token 394: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.011049000546336174
    2. ' k' → logprob: -4.511048793792725
    3. '               ' → logprob: -14.511049270629883
    4. '	k' → logprob: -14.886049270629883
    5. '           ' → logprob: -15.011049270629883
    6. '                   ' → logprob: -17.136049270629883
    7. '   ' → logprob: -17.261049270629883
    8. ' ' → logprob: -18.761049270629883
    9. '
' → logprob: -19.636049270629883
    10. '       ' → logprob: -19.761049270629883

Token 395: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.16534680128097534
    2. '-=' → logprob: -1.9153468608856201
    3. '-' → logprob: -5.290346622467041
    4. ' -' → logprob: -9.7903470993042
    5. '   ' → logprob: -12.2903470993042
    6. ' ' → logprob: -12.2903470993042
    7. '=' → logprob: -13.4153470993042
    8. '    ' → logprob: -14.1653470993042
    9. '           ' → logprob: -14.1653470993042
    10. '       ' → logprob: -15.0403470993042

Token 396: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023059594968799502
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -18.87523078918457
    4. '           ' → logprob: -19.62523078918457
    5. ' ' → logprob: -20.12523078918457
    6. '<|end|>' → logprob: -20.12523078918457
    7. '１' → logprob: -20.12523078918457
    8. '```' → logprob: -20.25023078918457
    9. '               ' → logprob: -20.50023078918457
    10. '
' → logprob: -21.18773078918457

Token 397: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '<|end|>' → logprob: -17.000017166137695
    4. '```' → logprob: -17.625017166137695
    5. '   ' → logprob: -19.312517166137695
    6. '
' → logprob: -19.687517166137695
    7. '0' → logprob: -20.062517166137695
    8. '2' → logprob: -20.125017166137695
    9. '' → logprob: -20.562517166137695
    10. 'k' → logprob: -20.750017166137695

Token 398: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00046856500557623804
    2. '       ' → logprob: -8.375468254089355
    3. 'qs' → logprob: -8.875468254089355
    4. '   ' → logprob: -10.750468254089355
    5. ' qs' → logprob: -10.875468254089355
    6. '		' → logprob: -11.250468254089355
    7. '```' → logprob: -11.250468254089355
    8. '          ' → logprob: -11.625468254089355
    9. ' ' → logprob: -12.375468254089355
    10. ')' → logprob: -12.875468254089355

Token 399: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6952248215675354
    2. '           ' → logprob: -1.1952247619628906
    3. '   ' → logprob: -2.3202247619628906
    4. ' qs' → logprob: -2.5702247619628906
    5. 'qs' → logprob: -3.8202247619628906
    6. ' ' → logprob: -8.19522476196289
    7. '    ' → logprob: -8.19522476196289
    8. '```' → logprob: -8.44522476196289
    9. '               ' → logprob: -8.57022476196289
    10. '        ' → logprob: -8.94522476196289

Token 400: ' qs' (ID: 75083)
  Prédit: 'qs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qs' (adapté à ' qs') → logprob: -0.11462463438510895
    2. ' qs' → logprob: -2.4896247386932373
    3. '           ' → logprob: -4.364624500274658
    4. '       ' → logprob: -4.489624500274658
    5. '   ' → logprob: -7.239624500274658
    6. 'k' → logprob: -8.114624977111816
    7. 'q' → logprob: -8.614624977111816
    8. '               ' → logprob: -9.989624977111816
    9. '    ' → logprob: -10.364624977111816
    10. 'ks' → logprob: -10.364624977111816

Token 401: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.125
    3. 'k' → logprob: -16.25
    4. '[
' → logprob: -18.125
    5. '=k' → logprob: -19.125
    6. '
' → logprob: -19.5
    7. '=' → logprob: -19.5
    8. ' [' → logprob: -19.5
    9. '[i' → logprob: -19.625
    10. '(k' → logprob: -19.875

Token 402: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05152381584048271
    2. '=' → logprob: -3.1765239238739014
    3. ']=' → logprob: -4.801523685455322
    4. ' =' → logprob: -8.30152416229248
    5. ')' → logprob: -11.05152416229248
    6. ' ]' → logprob: -12.30152416229248
    7. ')=' → logprob: -14.05152416229248
    8. '=k' → logprob: -14.67652416229248
    9. '=q' → logprob: -14.80152416229248
    10. '   ' → logprob: -15.30152416229248

Token 403: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005234356038272381
    2. ' =' → logprob: -5.255234241485596
    3. '=q' → logprob: -15.130234718322754
    4. '=k' → logprob: -15.380234718322754
    5. ')' → logprob: -17.755233764648438
    6. ']=' → logprob: -17.880233764648438
    7. ']' → logprob: -18.005233764648438
    8. '=s' → logprob: -18.005233764648438
    9. '   ' → logprob: -18.130233764648438
    10. ')=' → logprob: -18.380233764648438

Token 404: ' ps' (ID: 10942)
  Prédit: 'ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ps' → logprob: -0.004090985283255577
    2. ' ps' → logprob: -5.504090785980225
    3. 'qs' → logprob: -11.379091262817383
    4. '(ps' → logprob: -14.629091262817383
    5. '	ps' → logprob: -14.754091262817383
    6. '   ' → logprob: -16.254091262817383
    7. ' qs' → logprob: -16.754091262817383
    8. 'p' → logprob: -17.129091262817383
    9. 'py' → logprob: -17.254091262817383
    10. ' ' → logprob: -17.754091262817383

Token 405: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.5776860184123507e-06
    2. 'i' → logprob: -13.50000286102295
    3. '[' → logprob: -14.25000286102295
    4. '[k' → logprob: -14.50000286102295
    5. '[int' → logprob: -18.250001907348633
    6. '(i' → logprob: -18.375001907348633
    7. '```' → logprob: -18.375001907348633
    8. '[
' → logprob: -18.625001907348633
    9. '[I' → logprob: -19.000001907348633
    10. '[q' → logprob: -19.375001907348633

Token 406: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005472332704812288
    2. '       ' → logprob: -5.755472183227539
    3. '   ' → logprob: -6.755472183227539
    4. ')' → logprob: -7.505472183227539
    5. 'k' → logprob: -8.130472183227539
    6. '<|end|>' → logprob: -9.630472183227539
    7. ' k' → logprob: -9.880472183227539
    8. ',k' → logprob: -10.130472183227539
    9. ',' → logprob: -10.505472183227539
    10. '               ' → logprob: -11.255472183227539

Token 407: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006665873806923628
    2. 'k' → logprob: -5.5066657066345215
    3. '       ' → logprob: -6.5066657066345215
    4. '   ' → logprob: -7.1316657066345215
    5. ' k' → logprob: -8.25666618347168
    6. '	k' → logprob: -11.88166618347168
    7. '	       ' → logprob: -12.38166618347168
    8. '               ' → logprob: -12.50666618347168
    9. '<|end|>' → logprob: -12.50666618347168
    10. '	   ' → logprob: -12.88166618347168

Token 408: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -9.639096970204264e-05
    2. ' k' → logprob: -9.250096321105957
    3. '	k' → logprob: -16.000097274780273
    4. '       ' → logprob: -17.375097274780273
    5. '           ' → logprob: -17.750097274780273
    6. '{k' → logprob: -18.250097274780273
    7. ',k' → logprob: -18.625097274780273
    8. '+k' → logprob: -18.750097274780273
    9. '   ' → logprob: -19.000097274780273
    10. 'ks' → logprob: -19.625097274780273

Token 409: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.25364232063293457
    2. ' +=' → logprob: -1.5036423206329346
    3. '+' → logprob: -6.3786420822143555
    4. '=' → logprob: -11.878642082214355
    5. ' +' → logprob: -12.253642082214355
    6. ']+=' → logprob: -14.128642082214355
    7. '   ' → logprob: -14.128642082214355
    8. ' ' → logprob: -14.628642082214355
    9. '+="' → logprob: -15.378642082214355
    10. '+='' → logprob: -15.503642082214355

Token 410: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003600071184337139
    2. ' ' → logprob: -5.628600120544434
    3. '   ' → logprob: -18.378599166870117
    4. ' ' → logprob: -18.503599166870117
    5. '```' → logprob: -18.753599166870117
    6. '
' → logprob: -19.128599166870117
    7. '	' → logprob: -19.878599166870117
    8. '１' → logprob: -20.253599166870117
    9. '0' → logprob: -20.503599166870117
    10. ' 
' → logprob: -20.878599166870117

Token 411: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -18.3750057220459
    4. '   ' → logprob: -18.7500057220459
    5. '<|end|>' → logprob: -20.6875057220459
    6. '' → logprob: -20.8750057220459
    7. '
' → logprob: -21.0625057220459
    8. '-' → logprob: -21.0625057220459
    9. '	' → logprob: -21.0625057220459
    10. 'k' → logprob: -21.0625057220459

Token 412: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001305118203163147
    2. 'return' → logprob: -7.251305103302002
    3. '<|end|>' → logprob: -8.12630558013916
    4. '   ' → logprob: -8.75130558013916
    5. ' return' → logprob: -9.37630558013916
    6. '0' → logprob: -11.75130558013916
    7. '#' → logprob: -11.87630558013916
    8. 's' → logprob: -12.00130558013916
    9. ')' → logprob: -12.25130558013916
    10. '[' → logprob: -12.62630558013916

Token 413: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06679831445217133
    2. '   ' → logprob: -2.816798210144043
    3. '<|end|>' → logprob: -6.316798210144043
    4. '2' → logprob: -6.566798210144043
    5. '0' → logprob: -7.566798210144043
    6. ' ' → logprob: -8.191798210144043
    7. 'k' → logprob: -8.941798210144043
    8. '[' → logprob: -9.066798210144043
    9. '1' → logprob: -9.566798210144043
    10. 'return' → logprob: -9.816798210144043

Token 414: ' qs' (ID: 75083)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07073866575956345
    2. ' return' → logprob: -2.6957385540008545
    3. '   ' → logprob: -8.195738792419434
    4. 'qs' (adapté à ' qs') → logprob: -8.445738792419434
    5. 'q' → logprob: -9.070738792419434
    6. '       ' → logprob: -9.445738792419434
    7. ')' → logprob: -9.445738792419434
    8. ' qs' → logprob: -11.320738792419434
    9. '#' → logprob: -11.945738792419434
    10. ' ' → logprob: -12.445738792419434

Token 415: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03719361871480942
    2. ' =' → logprob: -3.787193536758423
    3. '[:' → logprob: -4.787193775177002
    4. '=k' → logprob: -5.287193775177002
    5. '=q' → logprob: -8.287193298339844
    6. '[:]' → logprob: -10.037193298339844
    7. 'k' → logprob: -10.162193298339844
    8. '[k' → logprob: -10.162193298339844
    9. 's' → logprob: -10.662193298339844
    10. '[' → logprob: -11.537193298339844

Token 416: ' qs' (ID: 75083)
  Prédit: 'qs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qs' → logprob: -0.029777569696307182
    2. ' qs' → logprob: -3.5297775268554688
    3. '   ' → logprob: -10.779777526855469
    4. 'q' → logprob: -13.029777526855469
    5. ' ' → logprob: -13.654777526855469
    6. ' q' → logprob: -15.029777526855469
    7. 'ps' → logprob: -15.154777526855469
    8. 'qt' → logprob: -15.154777526855469
    9. 'Qs' → logprob: -15.154777526855469
    10. 'QS' → logprob: -15.779777526855469

Token 417: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -16.0
    3. '[:-' → logprob: -16.125
    4. 'k' → logprob: -16.875
    5. '[:]' → logprob: -17.625
    6. ':k' → logprob: -18.375
    7. '[k' → logprob: -18.75
    8. ':' → logprob: -19.75
    9. ' [:' → logprob: -21.0
    10. '][:' → logprob: -21.625

Token 418: 'min' (ID: 1493)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.8889261304575484e-06
    2. '(k' → logprob: -13.000003814697266
    3. ' k' → logprob: -13.500003814697266
    4. '-k' → logprob: -16.625003814697266
    5. '
' → logprob: -17.125003814697266
    6. '	k' → logprob: -17.250003814697266
    7. ':k' → logprob: -18.125003814697266
    8. '{k' → logprob: -18.125003814697266
    9. '"k' → logprob: -18.125003814697266
    10. '+k' → logprob: -18.500003814697266

Token 419: '(n' (ID: 2406)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.00980850588530302
    2. 'k' → logprob: -4.634808540344238
    3. '(' → logprob: -10.509808540344238
    4. ' k' → logprob: -12.259808540344238
    5. '(len' → logprob: -12.384808540344238
    6. '[k' → logprob: -12.509808540344238
    7. ',k' → logprob: -12.884808540344238
    8. '{k' → logprob: -12.884808540344238
    9. '(n' → logprob: -13.384808540344238
    10. 'len' → logprob: -13.509808540344238

Token 420: ',k' (ID: 35155)
  Prédit: ',k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.04925825074315071
    2. ',' → logprob: -3.299258232116699
    3. '+' → logprob: -4.674258232116699
    4. '+k' → logprob: -6.674258232116699
    5. 'k' → logprob: -8.2992582321167
    6. ',
' → logprob: -9.0492582321167
    7. ' ,' → logprob: -9.7992582321167
    8. '+,' → logprob: -10.1742582321167
    9. ',q' → logprob: -10.7992582321167
    10. '
' → logprob: -10.9242582321167

Token 421: '-' (ID: 12)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0009641039068810642
    2. ']' → logprob: -7.375964164733887
    3. '-' → logprob: -8.625964164733887
    4. ')]
' → logprob: -9.125964164733887
    5. ')' → logprob: -11.375964164733887
    6. ']]' → logprob: -11.375964164733887
    7. '])' → logprob: -11.750964164733887
    8. '+' → logprob: -12.375964164733887
    9. '])]' → logprob: -12.750964164733887
    10. ' ' → logprob: -13.125964164733887

Token 422: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.65707261255011e-06
    2. ' ' → logprob: -12.125008583068848
    3. '```' → logprob: -14.125008583068848
    4. '+' → logprob: -14.562508583068848
    5. '   ' → logprob: -14.625008583068848
    6. '１' → logprob: -14.687508583068848
    7. '
' → logprob: -15.750008583068848
    8. '``' → logprob: -15.937508583068848
    9. '2' → logprob: -16.062509536743164
    10. '...' → logprob: -16.625009536743164

Token 423: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.002488737925887108
    2. ']' → logprob: -6.002488613128662
    3. ')' → logprob: -12.25248908996582
    4. ')]
' → logprob: -13.12748908996582
    5. ' ]' → logprob: -13.50248908996582
    6. ']
' → logprob: -13.62748908996582
    7. '])' → logprob: -13.75248908996582
    8. ' )' → logprob: -13.75248908996582
    9. ']]' → logprob: -15.00248908996582
    10. '}]' → logprob: -15.12748908996582

Token 424: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009918416617438197
    2. '       ' → logprob: -7.5009918212890625
    3. '
' → logprob: -8.500991821289062
    4. 'return' → logprob: -9.125991821289062
    5. ' return' → logprob: -9.250991821289062
    6. '    
' → logprob: -11.000991821289062
    7. '	return' → logprob: -11.625991821289062
    8. '<|end|>' → logprob: -13.750991821289062
    9. ')' → logprob: -14.000991821289062
    10. ',' → logprob: -14.750991821289062

Token 425: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3935758173465729
    2. ' return' → logprob: -1.7685757875442505
    3. '   ' → logprob: -1.8935757875442505
    4. '       ' → logprob: -6.018575668334961
    5. '	return' → logprob: -6.518575668334961
    6. ')' → logprob: -8.643575668334961
    7. '
' → logprob: -9.893575668334961
    8. ' ' → logprob: -10.518575668334961
    9. 'eturn' → logprob: -11.268575668334961
    10. ':return' → logprob: -11.393575668334961

Token 426: ' qs' (ID: 75083)
  Prédit: 'qs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qs' → logprob: -1.0921942703134846e-05
    2. ' qs' → logprob: -11.50001049041748
    3. 'q' → logprob: -14.50001049041748
    4. '[' → logprob: -17.000011444091797
    5. '   ' → logprob: -17.000011444091797
    6. '[q' → logprob: -18.125011444091797
    7. 'set' → logprob: -18.375011444091797
    8. 'list' → logprob: -18.875011444091797
    9. '[(' → logprob: -19.125011444091797
    10. ' ' → logprob: -19.250011444091797

Token 427: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 428: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 429: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060861192643642426
    2. 'points' → logprob: -3.935861110687256
    3. ' points' → logprob: -4.560861110687256
    4. '#' → logprob: -4.685861110687256
    5. '<|end|>' → logprob: -5.185861110687256
    6. ')' → logprob: -5.185861110687256
    7. 'n' (adapté à ' n') → logprob: -6.060861110687256
    8. '(points' → logprob: -6.810861110687256
    9. 'x' → logprob: -7.185861110687256
    10. 'p' → logprob: -7.685861110687256

Token 430: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10649877786636353
    2. '=' → logprob: -2.3564987182617188
    3. ',' → logprob: -5.106498718261719
    4. ' ' → logprob: -8.981498718261719
    5. ' ,' → logprob: -9.481498718261719
    6. '=int' → logprob: -12.356498718261719
    7. ',n' → logprob: -12.856498718261719
    8. ')' → logprob: -13.606498718261719
    9. ' ' → logprob: -14.356498718261719
    10. '=n' → logprob: -14.356498718261719

Token 431: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.017893780022859573
    2. 'int' → logprob: -4.5178937911987305
    3. ' I' → logprob: -5.0178937911987305
    4. ' int' → logprob: -8.51789379119873
    5. ' ' → logprob: -12.76789379119873
    6. 'LI' → logprob: -13.76789379119873
    7. '  ' → logprob: -15.39289379119873
    8. '   ' → logprob: -16.892892837524414
    9. ' LI' → logprob: -17.517892837524414
    10. 'L' → logprob: -17.642892837524414

Token 432: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.5213274309644476e-05
    2. '()
' → logprob: -11.125015258789062
    3. ' ()' → logprob: -16.000015258789062
    4. '()

' → logprob: -16.625015258789062
    5. '(' → logprob: -17.000015258789062
    6. '()\' → logprob: -17.375015258789062
    7. '()<' → logprob: -17.375015258789062
    8. '()]' → logprob: -17.500015258789062
    9. '())' → logprob: -17.625015258789062
    10. '()>' → logprob: -17.625015258789062

Token 433: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24222466349601746
    2. ' points' → logprob: -1.8672246932983398
    3. 'points' → logprob: -3.24222469329834
    4. ' pts' → logprob: -4.49222469329834
    5. 'pts' → logprob: -5.11722469329834
    6. 'p' → logprob: -6.36722469329834
    7. 'ps' → logprob: -7.11722469329834
    8. ' p' → logprob: -7.11722469329834
    9. ' ps' → logprob: -7.99222469329834
    10. '	points' → logprob: -8.11722469329834

Token 434: ' ps' (ID: 10942)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.29790830612182617
    2. 'ps' (adapté à ' ps') → logprob: -1.5479083061218262
    3. ' points' → logprob: -3.672908306121826
    4. 'pts' → logprob: -4.047908306121826
    5. ' ps' → logprob: -7.047908306121826
    6. ' pts' → logprob: -7.547908306121826
    7. 'p' → logprob: -7.797908306121826
    8. '   ' → logprob: -8.547908782958984
    9. '	points' → logprob: -11.297908782958984
    10. 'a' → logprob: -11.797908782958984

Token 435: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01104935072362423
    2. ' =' → logprob: -4.511049270629883
    3. '=[]' → logprob: -13.386049270629883
    4. '=[' → logprob: -17.011049270629883
    5. '＝' → logprob: -17.386049270629883
    6. '=[]
' → logprob: -18.386049270629883
    7. ',' → logprob: -18.511049270629883
    8. ' ' → logprob: -18.761049270629883
    9. ' =[' → logprob: -19.136049270629883
    10. ')' → logprob: -19.636049270629883

Token 436: ' L' (ID: 451)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7265419960021973
    2. '[S' → logprob: -0.8515419960021973
    3. '[L' → logprob: -3.1015419960021973
    4. 'SR' → logprob: -3.8515419960021973
    5. 'LS' → logprob: -4.851541996002197
    6. 'S' → logprob: -5.226541996002197
    7. '[]' → logprob: -5.476541996002197
    8. '[]
' → logprob: -5.851541996002197
    9. 'L' → logprob: -7.101541996002197
    10. '[(' → logprob: -7.226541996002197

Token 437: 'IR' (ID: 4368)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.02223188988864422
    2. 'IR' → logprob: -3.8972318172454834
    3. '(n' → logprob: -6.8972320556640625
    4. 'SR' → logprob: -7.3972320556640625
    5. 'S' → logprob: -10.022232055664062
    6. 'I' → logprob: -12.397232055664062
    7. '(' → logprob: -12.522232055664062
    8. ' R' → logprob: -13.272232055664062
    9. '(IR' → logprob: -13.397232055664062
    10. 'r' → logprob: -13.647232055664062

Token 438: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0002615742268972099
    2. '(' → logprob: -8.250261306762695
    3. ' (' → logprob: -15.750261306762695
    4. '()' → logprob: -16.625261306762695
    5. 'n' → logprob: -16.875261306762695
    6. '(
' → logprob: -17.625261306762695
    7. '((' → logprob: -17.625261306762695
    8. '   ' → logprob: -19.125261306762695
    9. '(int' → logprob: -19.375261306762695
    10. '(N' → logprob: -19.875261306762695

Token 439: ')
' (ID: 446)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.27194875478744507
    2. ')' → logprob: -1.5219488143920898
    3. '(n' → logprob: -4.64694881439209
    4. '()' → logprob: -4.77194881439209
    5. '(' → logprob: -6.52194881439209
    6. '())
' → logprob: -8.39694881439209
    7. ')
' → logprob: -10.89694881439209
    8. ' ())' → logprob: -11.02194881439209
    9. ')n' → logprob: -11.52194881439209
    10. ' )' → logprob: -12.02194881439209

Token 440: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09148652106523514
    2. 'h' → logprob: -3.5914864540100098
    3. 'conv' → logprob: -3.7164864540100098
    4. 'points' → logprob: -5.09148645401001
    5. '
' → logprob: -5.59148645401001
    6. ' points' → logprob: -5.71648645401001
    7. ' hull' → logprob: -5.84148645401001
    8. 'ps' → logprob: -5.84148645401001
    9. 'p' → logprob: -6.21648645401001
    10. 's' → logprob: -6.34148645401001

Token 441: ' qs' (ID: 75083)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.8683931827545166
    2. 'ch' → logprob: -0.9933931827545166
    3. 'ps' → logprob: -2.2433931827545166
    4. 'hs' → logprob: -2.4933931827545166
    5. 'chs' → logprob: -4.6183929443359375
    6. 'qs' (adapté à ' qs') → logprob: -5.7433929443359375
    7. '   ' → logprob: -6.4933929443359375
    8. 'conv' → logprob: -6.7433929443359375
    9. ' hull' → logprob: -6.7433929443359375
    10. 'res' → logprob: -6.9933929443359375

Token 442: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868822753429413
    2. ' =' → logprob: -1.1368823051452637
    3. ',' → logprob: -12.136881828308105
    4. '.' → logprob: -13.636881828308105
    5. '.extend' → logprob: -13.761881828308105
    6. '＝' → logprob: -14.636881828308105
    7. '=[]' → logprob: -14.886881828308105
    8. '=q' → logprob: -15.136881828308105
    9. '=list' → logprob: -15.261881828308105
    10. ' +=' → logprob: -15.761881828308105

Token 443: ' convex' (ID: 142423)
  Prédit: 'conv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conv' → logprob: -0.2812765836715698
    2. ' convex' → logprob: -1.4062765836715698
    3. ' conv' → logprob: -9.53127670288086
    4. '(conv' → logprob: -10.03127670288086
    5. '   ' → logprob: -12.90627670288086
    6. '[' → logprob: -13.40627670288086
    7. ' ' → logprob: -13.90627670288086
    8. 'con' → logprob: -14.03127670288086
    9. 'ps' → logprob: -14.65627670288086
    10. 'solve' → logprob: -14.78127670288086

Token 444: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -3.8889261304575484e-06
    2. '_' → logprob: -13.125003814697266
    3. '_q' → logprob: -14.125003814697266
    4. '_ps' → logprob: -14.750003814697266
    5. 'h' → logprob: -15.125003814697266
    6. '(ps' → logprob: -15.750003814697266
    7. 'ps' → logprob: -16.125003814697266
    8. '(h' → logprob: -17.125003814697266
    9. ' _' → logprob: -18.000003814697266
    10. 'q' → logprob: -18.000003814697266

Token 445: 'ull' (ID: 754)
  Prédit: 'ull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -0.0008610807126387954
    2. 'ul' → logprob: -7.375861167907715
    3. 'ps' → logprob: -9.125861167907715
    4. 'qs' → logprob: -10.500861167907715
    5. 'u' → logprob: -11.125861167907715
    6. 'q' → logprob: -11.125861167907715
    7. 's' → logprob: -11.500861167907715
    8. '[' → logprob: -11.750861167907715
    9. 'ulf' → logprob: -11.750861167907715
    10. 'all' → logprob: -11.875861167907715

Token 446: '(ps' (ID: 72187)
  Prédit: '(ps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ps' → logprob: -0.0006305903079919517
    2. '([(' → logprob: -8.125630378723145
    3. '([' → logprob: -8.250630378723145
    4. '(list' → logprob: -10.375630378723145
    5. '((' → logprob: -10.750630378723145
    6. 'ps' → logprob: -11.875630378723145
    7. '[(' → logprob: -12.500630378723145
    8. '(tuple' → logprob: -12.750630378723145
    9. '(' → logprob: -13.625630378723145
    10. '(p' → logprob: -14.125630378723145

Token 447: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20146897435188293
    2. ')
' → logprob: -1.7014689445495605
    3. '()' → logprob: -11.076469421386719
    4. ')
' → logprob: -11.326469421386719
    5. '())' → logprob: -11.451469421386719
    6. '())
' → logprob: -12.201469421386719
    7. ')

' → logprob: -12.701469421386719
    8. '()
' → logprob: -12.826469421386719
    9. ' )' → logprob: -13.076469421386719
    10. '   ' → logprob: -13.451469421386719

Token 448: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00013154871703591198
    2. 'print' → logprob: -9.250131607055664
    3. 'return' → logprob: -11.250131607055664
    4. '    
' → logprob: -11.750131607055664
    5. 'for' → logprob: -12.625131607055664
    6. '
' → logprob: -12.750131607055664
    7. '<|end|>' → logprob: -13.375131607055664
    8. ' print' → logprob: -13.750131607055664
    9. ' for' → logprob: -13.875131607055664
    10. ')' → logprob: -14.000131607055664

Token 449: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0499555729329586
    2. '   ' → logprob: -3.2999556064605713
    3. 'for' → logprob: -4.799955368041992
    4. 'return' → logprob: -6.049955368041992
    5. 'area' → logprob: -7.549955368041992
    6. 'if' (adapté à ' if') → logprob: -8.299955368041992
    7. 'p' → logprob: -8.799955368041992
    8. 'r' → logprob: -9.299955368041992
    9. 'pr' → logprob: -10.174955368041992
    10. 'length' → logprob: -10.299955368041992

Token 450: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.048646751791238785
    2. 'len' → logprob: -3.0486466884613037
    3. '(len' → logprob: -10.548646926879883
    4. ' n' → logprob: -10.673646926879883
    5. ' ' → logprob: -11.923646926879883
    6. 'n' → logprob: -13.673646926879883
    7. '   ' → logprob: -14.298646926879883
    8. ' le' → logprob: -14.923646926879883
    9. ' l' → logprob: -15.048646926879883
    10. ' not' → logprob: -15.548646926879883

Token 451: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -14.125000953674316
    3. '(ps' → logprob: -15.000000953674316
    4. 'qs' → logprob: -17.375001907348633
    5. '(s' → logprob: -17.750001907348633
    6. ' (' → logprob: -18.500001907348633
    7. '(
' → logprob: -19.375001907348633
    8. '(Q' → logprob: -19.625001907348633
    9. ')' → logprob: -20.125001907348633
    10. '
' → logprob: -20.375001907348633

Token 452: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.870950215263292e-05
    2. '(s' → logprob: -10.875048637390137
    3. ')s' → logprob: -11.250048637390137
    4. 'qs' → logprob: -11.375048637390137
    5. 'q' → logprob: -13.375048637390137
    6. '[s' → logprob: -14.000048637390137
    7. ')' → logprob: -14.125048637390137
    8. '<s' → logprob: -14.625048637390137
    9. '>s' → logprob: -15.000048637390137
    10. ' s' → logprob: -15.375048637390137

Token 453: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3172295391559601
    2. '<=' → logprob: -2.1922295093536377
    3. '<' → logprob: -2.5672295093536377
    4. '==' → logprob: -3.0672295093536377
    5. ' <=' → logprob: -3.9422295093536377
    6. ' <' → logprob: -4.567229747772217
    7. ' ==' → logprob: -6.192229747772217
    8. ')<' → logprob: -6.192229747772217
    9. ')<=' → logprob: -6.442229747772217
    10. ' )' → logprob: -7.567229747772217

Token 454: ' ==' (ID: 951)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6953617334365845
    2. '<=' → logprob: -1.0703617334365845
    3. '==' → logprob: -2.320361614227295
    4. ' <=' → logprob: -3.570361614227295
    5. ' <' → logprob: -3.695361614227295
    6. ' ==' → logprob: -5.445361614227295
    7. '>=' → logprob: -6.320361614227295
    8. '>' → logprob: -8.320362091064453
    9. ' ' → logprob: -8.820362091064453
    10. ' >=' → logprob: -9.445362091064453

Token 455: ' n' (ID: 297)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0033694924786686897
    2. '0' → logprob: -6.003369331359863
    3. ' ' → logprob: -7.503369331359863
    4. 'n' → logprob: -8.628369331359863
    5. '2' → logprob: -8.878369331359863
    6. '3' → logprob: -11.753369331359863
    7. '
' → logprob: -12.253369331359863
    8. 'len' → logprob: -12.628369331359863
    9. '   ' → logprob: -12.878369331359863
    10. ' 
' → logprob: -13.503369331359863

Token 456: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.429589182138443
    2. ':
' → logprob: -1.0545891523361206
    3. '   ' → logprob: -8.30458927154541
    4. ' and' → logprob: -8.30458927154541
    5. ':return' → logprob: -8.67958927154541
    6. ' or' → logprob: -9.05458927154541
    7. ' :
' → logprob: -10.05458927154541
    8. ' :' → logprob: -10.67958927154541
    9. ' ' → logprob: -11.67958927154541
    10. '):
' → logprob: -11.92958927154541

Token 457: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03404444083571434
    2. '   ' → logprob: -3.5340445041656494
    3. '
' → logprob: -5.65904426574707
    4. ' print' → logprob: -8.65904426574707
    5. 'print' → logprob: -8.78404426574707
    6. '        
' → logprob: -8.78404426574707
    7. '    
' → logprob: -8.90904426574707
    8. ':' → logprob: -10.03404426574707
    9. '	   ' → logprob: -10.78404426574707
    10. '	print' → logprob: -11.03404426574707

Token 458: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.537368655204773
    2. '   ' → logprob: -0.912368655204773
    3. ' print' → logprob: -4.6623687744140625
    4. '
' → logprob: -5.4123687744140625
    5. '    
' → logprob: -9.787368774414062
    6. 'return' → logprob: -10.162368774414062
    7. '       ' → logprob: -10.412368774414062
    8. 'pr' → logprob: -10.912368774414062
    9. '	print' → logprob: -10.912368774414062
    10. '
' → logprob: -11.037368774414062

Token 459: '(' (ID: 7)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.18997293710708618
    2. '(' → logprob: -1.8149728775024414
    3. '"' → logprob: -5.814972877502441
    4. '0' → logprob: -5.939972877502441
    5. '('' → logprob: -6.314972877502441
    6. '(-' → logprob: -6.564972877502441
    7. '(len' → logprob: -6.939972877502441
    8. '(n' → logprob: -8.939972877502441
    9. '-' → logprob: -10.189972877502441
    10. '"No' → logprob: -10.189972877502441

Token 460: '1' (ID: 16)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5025320053100586
    2. '0' → logprob: -1.1275320053100586
    3. '-' → logprob: -3.0025320053100586
    4. '1' → logprob: -4.502532005310059
    5. '"No' → logprob: -5.127532005310059
    6. 'n' → logprob: -6.502532005310059
    7. 'Yes' → logprob: -6.877532005310059
    8. 'YES' → logprob: -7.502532005310059
    9. ''' → logprob: -8.127532005310059
    10. '"N' → logprob: -8.502532005310059

Token 461: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12705881893634796
    2. ')
' → logprob: -2.127058744430542
    3. '   ' → logprob: -9.627058982849121
    4. ' )' → logprob: -10.252058982849121
    5. ' )
' → logprob: -11.252058982849121
    6. '0' → logprob: -12.502058982849121
    7. 'else' → logprob: -13.002058982849121
    8. '()' → logprob: -13.377058982849121
    9. '
' → logprob: -13.377058982849121
    10. ' ' → logprob: -13.377058982849121

Token 462: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005866816733032465
    2. '       ' → logprob: -5.505867004394531
    3. 'else' → logprob: -6.380867004394531
    4. ' else' → logprob: -9.505867004394531
    5. '    
' → logprob: -12.755867004394531
    6. ')' → logprob: -12.755867004394531
    7. '
' → logprob: -12.755867004394531
    8. '	else' → logprob: -13.380867004394531
    9. '<|end|>' → logprob: -13.505867004394531
    10. '.' → logprob: -13.505867004394531

Token 463: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.04552242532372475
    2. '   ' → logprob: -3.295522451400757
    3. ' else' → logprob: -4.920522212982178
    4. 'elif' → logprob: -8.920522689819336
    5. 'el' → logprob: -11.545522689819336
    6. '	else' → logprob: -12.045522689819336
    7. '.' → logprob: -13.545522689819336
    8. ' ' → logprob: -13.545522689819336
    9. 'e' → logprob: -13.545522689819336
    10. 'els' → logprob: -13.670522689819336

Token 464: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03895043581724167
    2. ':
' → logprob: -3.2889504432678223
    3. '       ' → logprob: -7.538950443267822
    4. '   ' → logprob: -8.163949966430664
    5. '(' → logprob: -10.163949966430664
    6. '():
' → logprob: -11.038949966430664
    7. '():' → logprob: -11.288949966430664
    8. 'print' → logprob: -12.413949966430664
    9. ' :' → logprob: -12.413949966430664
    10. ' :
' → logprob: -12.663949966430664

Token 465: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005344442906789482
    2. 'print' → logprob: -8.000534057617188
    3. '   ' → logprob: -8.625534057617188
    4. ' print' → logprob: -10.875534057617188
    5. ' ' → logprob: -15.875534057617188
    6. '     ' → logprob: -16.625534057617188
    7. '	print' → logprob: -16.625534057617188
    8. '    ' → logprob: -16.875534057617188
    9. '1' → logprob: -16.875534057617188
    10. '      ' → logprob: -17.125534057617188

Token 466: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0001721934968372807
    2. '       ' → logprob: -9.37517261505127
    3. '   ' → logprob: -9.75017261505127
    4. ' print' → logprob: -10.62517261505127
    5. 'pr' → logprob: -13.25017261505127
    6. 'prin' → logprob: -13.87517261505127
    7. 'for' → logprob: -14.62517261505127
    8. '0' → logprob: -15.50017261505127
    9. 'pri' → logprob: -15.50017261505127
    10. '
' → logprob: -15.50017261505127

Token 467: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03398936241865158
    2. '0' → logprob: -3.533989429473877
    3. '(len' → logprob: -5.533989429473877
    4. '(n' → logprob: -8.908988952636719
    5. 'len' → logprob: -9.908988952636719
    6. '(-' → logprob: -10.783988952636719
    7. '((' → logprob: -10.783988952636719
    8. '(
' → logprob: -11.033988952636719
    9. '()' → logprob: -11.658988952636719
    10. '(q' → logprob: -12.158988952636719

Token 468: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00215668766759336
    2. 'len' → logprob: -6.377156734466553
    3. '2' → logprob: -7.877156734466553
    4. '1' → logprob: -10.502156257629395
    5. 'n' → logprob: -10.877156257629395
    6. '-' → logprob: -11.002156257629395
    7. '(len' → logprob: -13.002156257629395
    8. ' ' → logprob: -13.252156257629395
    9. '3' → logprob: -13.377156257629395
    10. '```' → logprob: -13.752156257629395

Token 469: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5776860184123507e-06
    2. ')
' → logprob: -13.00000286102295
    3. ' )' → logprob: -16.250001907348633
    4. '())' → logprob: -17.500001907348633
    5. '')' → logprob: -17.750001907348633
    6. '
' → logprob: -18.000001907348633
    7. '```' → logprob: -18.000001907348633
    8. '   ' → logprob: -18.250001907348633
    9. '}' → logprob: -18.500001907348633
    10. '()' → logprob: -18.500001907348633

Token 470: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3953353464603424
    2. '
' → logprob: -1.39533531665802
    3. '<|end|>' → logprob: -2.8953354358673096
    4. '\n' → logprob: -3.8953354358673096
    5. '```' → logprob: -6.6453351974487305
    6. '#' → logprob: -7.2703351974487305
    7. '(' → logprob: -8.02033519744873
    8. ')
' → logprob: -8.27033519744873
    9. '\' → logprob: -9.39533519744873
    10. '<|end|>' → logprob: -9.77033519744873

Token 471: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 472: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 473: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7441189885139465
    2. 'solve' → logprob: -1.3691189289093018
    3. '<|end|>' → logprob: -1.9941189289093018
    4. '#' → logprob: -2.7441189289093018
    5. '```' → logprob: -3.4941189289093018
    6. '
' → logprob: -3.7441189289093018
    7. '\n' → logprob: -4.869119167327881
    8. ' solve' → logprob: -6.119119167327881
    9. '[' → logprob: -6.869119167327881
    10. '\' → logprob: -7.494119167327881

Token 474: 'Solve' (ID: 144594)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 475: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03278027102351189
    2. 'solve' → logprob: -3.657780170440674
    3. '()' → logprob: -5.782780170440674
    4. '<|end|>' → logprob: -6.032780170440674
    5. '```' → logprob: -7.282780170440674
    6. '
' → logprob: -9.407780647277832
    7. '#' → logprob: -9.782780647277832
    8. ' if' → logprob: -10.157780647277832
    9. ' solve' → logprob: -10.782780647277832
    10. '{' → logprob: -11.157780647277832

Token 476: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.47407999634742737
    2. 'solve' → logprob: -0.974079966545105
    3. ' solve' → logprob: -13.349080085754395
    4. '```' → logprob: -14.349080085754395
    5. ' if' → logprob: -14.474080085754395
    6. '.solve' → logprob: -16.099079132080078
    7. 'for' → logprob: -16.974079132080078
    8. 'i' → logprob: -17.474079132080078
    9. 'resolve' → logprob: -17.474079132080078
    10. '#!/' → logprob: -17.724079132080078

Token 477: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.16028311848640442
    2. '__' → logprob: -1.910283088684082
    3. '_name' → logprob: -10.035283088684082
    4. 'name' → logprob: -11.910283088684082
    5. '_' → logprob: -12.035283088684082
    6. '___' → logprob: -13.160283088684082
    7. ' '__' → logprob: -15.785283088684082
    8. ' "__' → logprob: -16.0352840423584
    9. ' ' → logprob: -16.5352840423584
    10. ' _' → logprob: -16.7852840423584

Token 478: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.17592571675777435
    2. ' __' → logprob: -1.9259257316589355
    3. 'name' → logprob: -4.8009257316589355
    4. '_' → logprob: -5.3009257316589355
    5. ' ==' → logprob: -6.4259257316589355
    6. '_name' → logprob: -8.050925254821777
    7. '==' → logprob: -8.175925254821777
    8. ' _' → logprob: -10.300925254821777
    9. '_main' → logprob: -10.425925254821777
    10. ' ' → logprob: -11.175925254821777

Token 479: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.5094070477061905e-05
    2. '==' → logprob: -12.125015258789062
    3. '__.__' → logprob: -12.500015258789062
    4. '_' → logprob: -12.750015258789062
    5. '___' → logprob: -13.375015258789062
    6. '____' → logprob: -14.500015258789062
    7. '=="' → logprob: -14.750015258789062
    8. '__.' → logprob: -15.375015258789062
    9. ' ==' → logprob: -15.875015258789062
    10. ' __' → logprob: -17.125015258789062

Token 480: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.17670464515686035
    2. '==' → logprob: -2.1767046451568604
    3. '=="' → logprob: -3.5517046451568604
    4. ' ==' → logprob: -3.9267046451568604
    5. '_' → logprob: -9.551704406738281
    6. '=='' → logprob: -9.801704406738281
    7. '=' → logprob: -10.801704406738281
    8. ' =="' → logprob: -12.176704406738281
    9. '___' → logprob: -12.301704406738281
    10. '==
' → logprob: -12.801704406738281

Token 481: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0067941173911094666
    2. ''' → logprob: -5.006793975830078
    3. '__' → logprob: -9.506793975830078
    4. ' "__' → logprob: -12.506793975830078
    5. '"name' → logprob: -15.506793975830078
    6. '"user' → logprob: -16.381793975830078
    7. ' '__' → logprob: -16.756793975830078
    8. ''"' → logprob: -17.131793975830078
    9. '"_' → logprob: -17.256793975830078
    10. 'main' → logprob: -17.256793975830078

Token 482: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.5716304410016164e-05
    2. 'name' → logprob: -10.250035285949707
    3. '__' → logprob: -15.625035285949707
    4. '_main' → logprob: -16.000036239624023
    5. 'ma' → logprob: -18.250036239624023
    6. '"' → logprob: -18.375036239624023
    7. ' main' → logprob: -18.875036239624023
    8. '(main' → logprob: -20.625036239624023
    9. 'm' → logprob: -20.875036239624023
    10. '	main' → logprob: -20.875036239624023

Token 483: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.12752841413021088
    2. '__' → logprob: -2.127528429031372
    3. '__:' → logprob: -7.752528190612793
    4. '__':
' → logprob: -8.752528190612793
    5. '_' → logprob: -11.377528190612793
    6. '__["' → logprob: -15.252528190612793
    7. '":' → logprob: -15.377528190612793
    8. ':' → logprob: -15.752528190612793
    9. '___' → logprob: -16.25252914428711
    10. '__.' → logprob: -16.37752914428711

Token 484: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06412570178508759
    2. 'solve' → logprob: -2.8141257762908936
    3. ' solve' → logprob: -6.1891255378723145
    4. '	s' → logprob: -9.814126014709473
    5. '.solve' → logprob: -10.314126014709473
    6. '   ' → logprob: -12.564126014709473
    7. '  ' → logprob: -12.689126014709473
    8. '```' → logprob: -12.814126014709473
    9. ' ' → logprob: -13.189126014709473
    10. '    
' → logprob: -13.689126014709473

Token 485: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -4.4849443838757e-06
    2. ' solve' → logprob: -12.500004768371582
    3. '   ' → logprob: -14.250004768371582
    4. '.solve' → logprob: -18.625003814697266
    5. 'resolve' → logprob: -20.750003814697266
    6. '  ' → logprob: -21.375003814697266
    7. 'save' → logprob: -22.000003814697266
    8. 's' → logprob: -22.500003814697266
    9. 'main' → logprob: -22.750003814697266
    10. '```' → logprob: -23.500003814697266

Token 486: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.580929347255733e-05
    2. '(' → logprob: -11.875016212463379
    3. '()
' → logprob: -12.625016212463379
    4. '();' → logprob: -13.375016212463379
    5. ' ()' → logprob: -13.750016212463379
    6. '()`' → logprob: -14.500016212463379
    7. '()">' → logprob: -14.625016212463379
    8. '()<' → logprob: -14.750016212463379
    9. '()?' → logprob: -14.875016212463379
    10. '()

' → logprob: -15.750016212463379


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 484
Tokens correctement prédits (1ère position, stricte): 210
Tokens correctement prédits (1ère position, avec adaptation): 224
Tokens correctement prédits (top 10): 423
Précision stricte (1ère position): 43.39%
Précision adaptée (1ère position): 46.28%
Précision (top 10): 87.40%
================================================================================
