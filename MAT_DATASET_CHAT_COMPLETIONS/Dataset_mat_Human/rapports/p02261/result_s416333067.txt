================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from copy import deepcopy

def bubblesort(C,N):
    A = deepcopy(C)
    for i in range(N):
        for j in reversed(range(i+1,N)):
            if int(A[j][1]) < int(A[j-1][1]):
                A[j],A[j-1] = A[j-1],A[j]
    return A

def selectionsort(C,N):
    A = deepcopy(C)
    for i in range(N):
        minj = i
        for j in range(i,N):
            if int(A[j][1]) < int(A[minj][1]):
                minj = j
        A[i],A[minj] = A[minj],A[i]
    return A

def main():
    N = int(input())
    C = list(input().split())
    bs = bubblesort(C,N)
    print(*bs)
    print("Stable")
    ss = selectionsort(C,N)
    print(*ss)
    if bs == ss:
        print("Stable")
    else:
        print("Not stable")

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' copy' (ID: 5150)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' deepcopy' (ID: 130230)
  Prédit: ' deepcopy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deepcopy' → logprob: -0.060019489377737045
    2. 'copy' → logprob: -3.3100194931030273
    3. ' copy' → logprob: -4.435019493103027
    4. 'deep' → logprob: -4.685019493103027
    5. '.deepcopy' → logprob: -8.185019493103027
    6. ' import' → logprob: -8.560019493103027
    7. 'import' → logprob: -8.810019493103027
    8. ' deep' → logprob: -10.685019493103027
    9. 'de' → logprob: -12.685019493103027
    10. 'reg' → logprob: -13.685019493103027

Token 4: '

' (ID: 279)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4140236973762512
    2. '(' → logprob: -1.1640236377716064
    3. '\' → logprob: -4.1640238761901855
    4. ' (' → logprob: -5.6640238761901855
    5. '[' → logprob: -6.7890238761901855
    6. '<|end|>' → logprob: -6.7890238761901855
    7. '(space' → logprob: -7.4140238761901855
    8. '```' → logprob: -7.4140238761901855
    9. '  
' → logprob: -7.6640238761901855
    10. ',' → logprob: -7.9140238761901855

Token 5: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2954048216342926
    2. ' ' → logprob: -1.6704047918319702
    3. 'a' → logprob: -3.7954049110412598
    4. 'd' → logprob: -3.9204049110412598
    5. '[' → logprob: -5.42040491104126
    6. '\' → logprob: -5.42040491104126
    7. 'n' → logprob: -6.17040491104126
    8. '\n' → logprob: -6.29540491104126
    9. '```' → logprob: -6.67040491104126
    10. ' 
' → logprob: -7.04540491104126

Token 6: ' bubbles' (ID: 72184)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0076278080232441425
    2. ' deepcopy' → logprob: -5.382627964019775
    3. ' ' → logprob: -6.757627964019775
    4. ' space' → logprob: -7.882627964019775
    5. '_' → logprob: -8.507627487182617
    6. ' deep' → logprob: -8.632627487182617
    7. '_space' → logprob: -8.882627487182617
    8. ' process' → logprob: -9.257627487182617
    9. ' _' → logprob: -9.632627487182617
    10. ' copy' → logprob: -9.882627487182617

Token 7: 'ort' (ID: 390)
  Prédit: 'ort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ort' → logprob: -0.06944644451141357
    2. '_sort' → logprob: -2.944446563720703
    3. '_' → logprob: -4.694446563720703
    4. 'o' → logprob: -5.319446563720703
    5. 'sort' → logprob: -8.569446563720703
    6. 'орт' → logprob: -9.569446563720703
    7. 'or' → logprob: -9.944446563720703
    8. '_s' → logprob: -10.694446563720703
    9. '_o' → logprob: -11.194446563720703
    10. 'orts' → logprob: -11.444446563720703

Token 8: '(C' (ID: 5559)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0029684302862733603
    2. '_' → logprob: -5.8779683113098145
    3. '(_' → logprob: -10.002968788146973
    4. '_(' → logprob: -10.502968788146973
    5. '(b' → logprob: -11.502968788146973
    6. ' (' → logprob: -11.627968788146973
    7. '(
' → logprob: -12.002968788146973
    8. '(a' → logprob: -12.127968788146973
    9. '_b' → logprob: -12.377968788146973
    10. '(n' → logprob: -12.502968788146973

Token 9: ',N' (ID: 49539)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012653261423110962
    2. ')' → logprob: -4.512653350830078
    3. '[' → logprob: -7.262653350830078
    4. ':' → logprob: -8.012653350830078
    5. ',' → logprob: -8.012653350830078
    6. ' ):' → logprob: -9.387653350830078
    7. '[]):' → logprob: -9.637653350830078
    8. '):
' → logprob: -10.637653350830078
    9. '[C' → logprob: -11.637653350830078
    10. 's' → logprob: -11.637653350830078

Token 10: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03007003292441368
    2. ')' → logprob: -3.5300700664520264
    3. ',' → logprob: -8.155070304870605
    4. ':' → logprob: -11.155070304870605
    5. ' ):' → logprob: -12.155070304870605
    6. ''):' → logprob: -12.405070304870605
    7. '):
' → logprob: -13.280070304870605
    8. ')：' → logprob: -13.530070304870605
    9. '),' → logprob: -14.155070304870605
    10. '=' → logprob: -14.905070304870605

Token 11: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003887130646035075
    2. ':
' → logprob: -5.878887176513672
    3. '   ' → logprob: -7.503887176513672
    4. ' :' → logprob: -8.128887176513672
    5. '```' → logprob: -10.128887176513672
    6. '():' → logprob: -10.628887176513672
    7. '):' → logprob: -10.878887176513672
    8. '
' → logprob: -11.128887176513672
    9. '  
' → logprob: -11.128887176513672
    10. '(' → logprob: -11.128887176513672

Token 12: ' A' (ID: 355)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.016503963619470596
    2. 'for' → logprob: -4.391503810882568
    3. ' i' → logprob: -6.266503810882568
    4. '   ' → logprob: -6.891503810882568
    5. ' if' → logprob: -7.391503810882568
    6. ' sorted' → logprob: -8.766504287719727
    7. '```' → logprob: -9.391504287719727
    8. ' ```' → logprob: -10.141504287719727
    9. ' C' → logprob: -10.641504287719727
    10. ' ' → logprob: -10.641504287719727

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1136995181441307
    2. '=' → logprob: -2.238699436187744
    3. ',' → logprob: -7.613699436187744
    4. '[' → logprob: -8.238699913024902
    5. '[:]' → logprob: -10.113699913024902
    6. '=[]' → logprob: -10.613699913024902
    7. ' ' → logprob: -11.863699913024902
    8. ')' → logprob: -11.863699913024902
    9. '=[' → logprob: -11.863699913024902
    10. '.' → logprob: -11.863699913024902

Token 14: ' deepcopy' (ID: 130230)
  Prédit: 'deep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deep' → logprob: -0.6023082733154297
    2. ' deepcopy' → logprob: -0.8523082733154297
    3. 'C' → logprob: -4.22730827331543
    4. ' deep' → logprob: -4.97730827331543
    5. ' C' → logprob: -5.60230827331543
    6. 'de' → logprob: -8.10230827331543
    7. 'Deep' → logprob: -8.85230827331543
    8. 'list' → logprob: -9.35230827331543
    9. 'deque' → logprob: -9.72730827331543
    10. '[' → logprob: -9.72730827331543

Token 15: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.029768195003271103
    2. '(' → logprob: -3.529768228530884
    3. '(A' → logprob: -11.904767990112305
    4. '(
' → logprob: -12.279767990112305
    5. ' (' → logprob: -12.654767990112305
    6. '((' → logprob: -13.654767990112305
    7. '(

' → logprob: -14.029767990112305
    8. '(B' → logprob: -15.279767990112305
    9. '(N' → logprob: -15.404767990112305
    10. '(S' → logprob: -15.779767990112305

Token 16: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015693542081862688
    2. ' )' → logprob: -8.875157356262207
    3. ')
' → logprob: -11.500157356262207
    4. '   ' → logprob: -12.250157356262207
    5. ' ' → logprob: -14.875157356262207
    6. '[' → logprob: -15.125157356262207
    7. '[N' → logprob: -15.500157356262207
    8. ')
' → logprob: -15.500157356262207
    9. '))' → logprob: -15.625157356262207
    10. '`)' → logprob: -16.25015640258789

Token 17: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2889100909233093
    2. ' for' → logprob: -2.038910150527954
    3. '   ' → logprob: -2.913910150527954
    4. 'for' → logprob: -3.413910150527954
    5. '    
' → logprob: -4.163909912109375
    6. '[' → logprob: -5.163909912109375
    7. '  
' → logprob: -5.913909912109375
    8. '   
' → logprob: -6.288909912109375
    9. ' 
' → logprob: -6.913909912109375
    10. '\n' → logprob: -6.913909912109375

Token 18: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.24009640514850616
    2. 'for' (adapté à ' for') → logprob: -1.8650964498519897
    3. '
' → logprob: -2.8650963306427
    4. '   ' → logprob: -8.115096092224121
    5. '<|end|>' → logprob: -8.240096092224121
    6. '\n' → logprob: -8.490096092224121
    7. '    
' → logprob: -8.990096092224121
    8. ' 
' → logprob: -9.115096092224121
    9. ',' → logprob: -9.365096092224121
    10. '	for' → logprob: -9.615096092224121

Token 19: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.31499552726745605
    2. ' ' → logprob: -1.314995527267456
    3. 'i' → logprob: -6.939995765686035
    4. ' _' → logprob: -7.939995765686035
    5. ' range' → logprob: -8.189995765686035
    6. '_' → logprob: -10.939995765686035
    7. ' in' → logprob: -10.939995765686035
    8. '  ' → logprob: -11.064995765686035
    9. ' ‌' → logprob: -11.314995765686035
    10. ' space' → logprob: -11.689995765686035

Token 20: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007644013501703739
    2. 'in' → logprob: -4.882644176483154
    3. ' ' → logprob: -10.382643699645996
    4. '	in' → logprob: -12.382643699645996
    5. '  ' → logprob: -14.257643699645996
    6. ',' → logprob: -14.382643699645996
    7. '   ' → logprob: -15.007643699645996
    8. '    ' → logprob: -15.757643699645996
    9. ' ,' → logprob: -16.257644653320312
    10. ')' → logprob: -16.257644653320312

Token 21: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1426916867494583
    2. 'range' → logprob: -2.0176916122436523
    3. ' ' → logprob: -11.642691612243652
    4. '   ' → logprob: -12.892691612243652
    5. '	range' → logprob: -13.392691612243652
    6. '  ' → logprob: -13.892691612243652
    7. '0' → logprob: -14.267691612243652
    8. '```' → logprob: -15.017691612243652
    9. '    ' → logprob: -15.267691612243652
    10. ' xrange' → logprob: -15.267691612243652

Token 22: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07399402558803558
    2. '(N' → logprob: -2.6989939212799072
    3. ' (' → logprob: -5.573994159698486
    4. '(len' → logprob: -9.198993682861328
    5. ' ' → logprob: -9.573993682861328
    6. '(n' → logprob: -9.948993682861328
    7. ' N' → logprob: -10.573993682861328
    8. ')' → logprob: -13.323993682861328
    9. '1' → logprob: -13.573993682861328
    10. '(
' → logprob: -13.573993682861328

Token 23: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0574522465467453
    2. '):' → logprob: -3.4324522018432617
    3. ' -' → logprob: -3.8074522018432617
    4. '   ' → logprob: -7.307452201843262
    5. '):
' → logprob: -8.307452201843262
    6. ' ):' → logprob: -8.557452201843262
    7. ')' → logprob: -8.932452201843262
    8. ' ' → logprob: -9.807452201843262
    9. '  ' → logprob: -12.182452201843262
    10. '    ' → logprob: -12.432452201843262

Token 24: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.6803871989250183
    2. '   ' → logprob: -1.305387258529663
    3. '       ' → logprob: -1.930387258529663
    4. ' ' → logprob: -3.055387258529663
    5. '     
' → logprob: -4.430387020111084
    6. '    
' → logprob: -4.805387020111084
    7. '<|end|>' → logprob: -6.055387020111084
    8. ' 
' → logprob: -6.180387020111084
    9. ':' → logprob: -6.680387020111084
    10. '
' → logprob: -6.930387020111084

Token 25: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.360522985458374
    2. 'for' (adapté à ' for') → logprob: -1.485522985458374
    3. '   ' → logprob: -3.235522985458374
    4. '    ' → logprob: -3.735522985458374
    5. '       ' → logprob: -4.485523223876953
    6. ' ' → logprob: -7.235523223876953
    7. 'range' → logprob: -7.735523223876953
    8. ' range' → logprob: -8.485523223876953
    9. '  ' → logprob: -8.735523223876953
    10. '           ' → logprob: -9.735523223876953

Token 26: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.4327905476093292
    2. ' range' → logprob: -1.3077905178070068
    3. 'range' → logprob: -3.182790517807007
    4. 'j' → logprob: -3.307790517807007
    5. ' ' → logprob: -5.932790756225586
    6. ')' → logprob: -9.932790756225586
    7. ' ' → logprob: -10.807790756225586
    8. '<|end|>' → logprob: -10.932790756225586
    9. '	range' → logprob: -11.307790756225586
    10. '    ' → logprob: -11.432790756225586

Token 27: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0024160840548574924
    2. 'in' → logprob: -6.127416133880615
    3. ' ' → logprob: -8.502415657043457
    4. '    ' → logprob: -11.002415657043457
    5. '   ' → logprob: -13.127415657043457
    6. ' range' → logprob: -13.127415657043457
    7. '<|end|>' → logprob: -13.377415657043457
    8. '	in' → logprob: -13.502415657043457
    9. 'range' → logprob: -13.752415657043457
    10. ' =' → logprob: -14.127415657043457

Token 28: ' reversed' (ID: 57184)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.048655495047569275
    2. 'range' → logprob: -3.0486555099487305
    3. ' ' → logprob: -9.79865550994873
    4. '(range' → logprob: -12.17365550994873
    5. ' in' → logprob: -12.67365550994873
    6. '	range' → logprob: -13.17365550994873
    7. ' xrange' → logprob: -14.04865550994873
    8. '0' → logprob: -14.67365550994873
    9. '1' → logprob: -15.04865550994873
    10. '  ' → logprob: -15.54865550994873

Token 29: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.000836312014143914
    2. '(' → logprob: -7.500836372375488
    3. 'range' → logprob: -8.750836372375488
    4. ' range' → logprob: -9.000836372375488
    5. ' (' → logprob: -13.875836372375488
    6. '	range' → logprob: -14.750836372375488
    7. '(s' → logprob: -16.625835418701172
    8. '(
' → logprob: -17.250835418701172
    9. ' ' → logprob: -17.500835418701172
    10. '(r' → logprob: -17.750835418701172

Token 30: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.003407635958865285
    2. '(' → logprob: -6.3784074783325195
    3. '(N' → logprob: -6.3784074783325195
    4. '(n' → logprob: -13.25340747833252
    5. '(I' → logprob: -13.25340747833252
    6. '(A' → logprob: -13.75340747833252
    7. '(
' → logprob: -14.50340747833252
    8. 'i' → logprob: -15.25340747833252
    9. '(len' → logprob: -15.50340747833252
    10. '(j' → logprob: -15.75340747833252

Token 31: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005301565979607403
    2. ' +' → logprob: -7.750530242919922
    3. ',' → logprob: -9.500530242919922
    4. ',N' → logprob: -11.125530242919922
    5. '1' → logprob: -12.750530242919922
    6. ' ,' → logprob: -13.375530242919922
    7. '+,' → logprob: -13.375530242919922
    8. ' ' → logprob: -14.125530242919922
    9. '))' → logprob: -14.375530242919922
    10. '-' → logprob: -14.500530242919922

Token 32: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.455048449221067e-05
    2. ' ' → logprob: -9.875054359436035
    3. '   ' → logprob: -13.250054359436035
    4. '2' → logprob: -15.250054359436035
    5. '    ' → logprob: -15.500054359436035
    6. '  ' → logprob: -15.875054359436035
    7. '+' → logprob: -15.875054359436035
    8. ',' → logprob: -16.00005531311035
    9. '     ' → logprob: -16.31255531311035
    10. '```' → logprob: -16.43755531311035

Token 33: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3886687755584717
    2. ',N' → logprob: -1.1386687755584717
    3. ' ,' → logprob: -6.388669013977051
    4. ',n' → logprob: -9.76366901397705
    5. 'to' → logprob: -11.01366901397705
    6. '，' → logprob: -12.26366901397705
    7. '   ' → logprob: -12.63866901397705
    8. '))' → logprob: -12.76366901397705
    9. ',num' → logprob: -12.76366901397705
    10. ' ' → logprob: -13.01366901397705

Token 34: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.11650657653808594
    2. '):' → logprob: -2.241506576538086
    3. '))' → logprob: -5.991506576538086
    4. ':' → logprob: -6.866506576538086
    5. ')):
' → logprob: -10.491506576538086
    6. ')):
' → logprob: -10.616506576538086
    7. '+' → logprob: -11.116506576538086
    8. ')' → logprob: -11.116506576538086
    9. '-' → logprob: -11.241506576538086
    10. '():' → logprob: -11.491506576538086

Token 35: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5423263907432556
    2. ':' → logprob: -1.0423264503479004
    3. '       ' → logprob: -3.5423264503479004
    4. ' if' → logprob: -4.9173264503479
    5. '               ' → logprob: -4.9173264503479
    6. '<|end|>' → logprob: -5.0423264503479
    7. '):' → logprob: -5.5423264503479
    8. '            ' → logprob: -5.9173264503479
    9. '        ' → logprob: -6.1673264503479
    10. ' :' → logprob: -6.5423264503479

Token 36: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4961199164390564
    2. ' if' → logprob: -1.4961199760437012
    3. '               ' → logprob: -1.9961199760437012
    4. '           ' → logprob: -3.496119976043701
    5. ' ' → logprob: -8.121119499206543
    6. '<|end|>' → logprob: -8.246119499206543
    7. '            ' → logprob: -9.371119499206543
    8. '```' → logprob: -9.621119499206543
    9. '       ' → logprob: -9.996119499206543
    10. '   ' → logprob: -10.121119499206543

Token 37: ' int' (ID: 677)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.0017347980756312609
    2. 'A' → logprob: -6.376734733581543
    3. '	A' → logprob: -11.126734733581543
    4. ' ' → logprob: -11.251734733581543
    5. '    ' → logprob: -13.376734733581543
    6. '(A' → logprob: -13.501734733581543
    7. '>A' → logprob: -14.001734733581543
    8. '<|end|>' → logprob: -14.376734733581543
    9. '   ' → logprob: -15.626734733581543
    10. ' (' → logprob: -16.62673568725586

Token 38: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -7.636475493200123e-05
    2. '(' → logprob: -9.625076293945312
    3. ')' → logprob: -12.125076293945312
    4. ' (' → logprob: -13.625076293945312
    5. '(C' → logprob: -14.000076293945312
    6. 'A' → logprob: -14.000076293945312
    7. '(a' → logprob: -14.250076293945312
    8. '(B' → logprob: -14.875076293945312
    9. '[A' → logprob: -15.750076293945312
    10. '(
' → logprob: -16.250076293945312

Token 39: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -15.500000953674316
    3. '[i' → logprob: -15.750000953674316
    4. '```' → logprob: -16.0
    5. ' [' → logprob: -16.125
    6. 'j' → logprob: -16.5
    7. ')' → logprob: -17.375
    8. '[
' → logprob: -17.75
    9. '[js' → logprob: -18.375
    10. '[J' → logprob: -18.375

Token 40: '][' (ID: 2696)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14266036450862885
    2. '-' → logprob: -2.39266037940979
    3. '])' → logprob: -3.39266037940979
    4. '[' → logprob: -5.892660140991211
    5. ')<' → logprob: -5.892660140991211
    6. ' )' → logprob: -7.267660140991211
    7. ')>' → logprob: -7.767660140991211
    8. ' -' → logprob: -8.392660140991211
    9. ']' → logprob: -8.642660140991211
    10. '>)' → logprob: -8.892660140991211

Token 41: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.034281305968761444
    2. '1' → logprob: -3.5342812538146973
    3. '-' → logprob: -6.409281253814697
    4. '2' → logprob: -7.159281253814697
    5. '"' → logprob: -7.409281253814697
    6. ':' → logprob: -7.784281253814697
    7. ''' → logprob: -8.034281730651855
    8. '3' → logprob: -8.784281730651855
    9. ' ' → logprob: -9.284281730651855
    10. '[' → logprob: -9.471781730651855

Token 42: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.002374223666265607
    2. ']' → logprob: -7.002374172210693
    3. '[' → logprob: -7.502374172210693
    4. ')' → logprob: -8.127374649047852
    5. '][' → logprob: -8.877374649047852
    6. '-' → logprob: -9.127374649047852
    7. ' ])' → logprob: -9.377374649047852
    8. ''])' → logprob: -9.502374649047852
    9. '>)' → logprob: -9.877374649047852
    10. ']>' → logprob: -10.127374649047852

Token 43: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.08728548884391785
    2. ' <' → logprob: -3.0872855186462402
    3. '>' → logprob: -3.3372855186462402
    4. ' >' → logprob: -6.21228551864624
    5. '<int' → logprob: -7.96228551864624
    6. '[' → logprob: -10.837285041809082
    7. ' ' → logprob: -11.212285041809082
    8. ',' → logprob: -11.837285041809082
    9. ')' → logprob: -12.712285041809082
    10. '<float' → logprob: -13.087285041809082

Token 44: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.14284619688987732
    2. ' int' → logprob: -2.01784610748291
    3. '=int' → logprob: -8.76784610748291
    4. '	int' → logprob: -12.64284610748291
    5. '<int' → logprob: -12.64284610748291
    6. '(int' → logprob: -13.01784610748291
    7. '=' → logprob: -13.26784610748291
    8. '   ' → logprob: -13.51784610748291
    9. ' ' → logprob: -13.64284610748291
    10. ':int' → logprob: -14.01784610748291

Token 45: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0005555360112339258
    2. '(' → logprob: -7.500555515289307
    3. 'A' → logprob: -13.250555992126465
    4. ' (' → logprob: -14.500555992126465
    5. ')' → logprob: -16.00055503845215
    6. ' A' → logprob: -17.62555503845215
    7. '(a' → logprob: -17.87555503845215
    8. '   ' → logprob: -18.62555503845215
    9. '`' → logprob: -18.75055503845215
    10. '((' → logprob: -18.75055503845215

Token 46: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.723352049040841e-06
    2. '[' → logprob: -12.375004768371582
    3. ' [' → logprob: -15.750004768371582
    4. '[i' → logprob: -16.000003814697266
    5. 'j' → logprob: -17.250003814697266
    6. '1' → logprob: -17.625003814697266
    7. '][' → logprob: -17.875003814697266
    8. '   ' → logprob: -17.875003814697266
    9. '
' → logprob: -18.250003814697266
    10. '[js' → logprob: -18.625003814697266

Token 47: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0073005142621695995
    2. '[' → logprob: -5.63230037689209
    3. '[j' → logprob: -6.13230037689209
    4. ' -' → logprob: -6.63230037689209
    5. '1' → logprob: -8.75730037689209
    6. '][' → logprob: -10.88230037689209
    7. 'j' → logprob: -11.38230037689209
    8. '   ' → logprob: -11.75730037689209
    9. ' ' → logprob: -13.00730037689209
    10. ' [' → logprob: -13.63230037689209

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001075918786227703
    2. '][' → logprob: -7.876075744628906
    3. '[' → logprob: -8.251075744628906
    4. '[j' → logprob: -8.501075744628906
    5. ' ' → logprob: -9.251075744628906
    6. '   ' → logprob: -9.751075744628906
    7. '0' → logprob: -10.126075744628906
    8. 'j' → logprob: -10.876075744628906
    9. '  ' → logprob: -12.501075744628906
    10. '])' → logprob: -12.626075744628906

Token 49: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.000397422380046919
    2. ']' → logprob: -8.375397682189941
    3. '[' → logprob: -8.875397682189941
    4. ' ][' → logprob: -10.875397682189941
    5. ''][' → logprob: -13.250397682189941
    6. '"][' → logprob: -13.750397682189941
    7. '])' → logprob: -13.875397682189941
    8. '   ' → logprob: -14.562897682189941
    9. ']][' → logprob: -14.687897682189941
    10. '1' → logprob: -14.937897682189941

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.387458365177736e-05
    2. '][' → logprob: -9.875083923339844
    3. '[' → logprob: -10.875083923339844
    4. ']' → logprob: -12.000083923339844
    5. ' ' → logprob: -12.375083923339844
    6. '   ' → logprob: -14.375083923339844
    7. '```' → logprob: -14.875083923339844
    8. ']][' → logprob: -15.187583923339844
    9. 'j' → logprob: -15.375083923339844
    10. '])' → logprob: -15.437583923339844

Token 51: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.05090123787522316
    2. '):' → logprob: -3.550901174545288
    3. '])' → logprob: -4.050901412963867
    4. ')' → logprob: -6.175901412963867
    5. ']' → logprob: -7.050901412963867
    6. ']:' → logprob: -8.550901412963867
    7. ']):
' → logprob: -8.925901412963867
    8. ':' → logprob: -9.050901412963867
    9. ')):' → logprob: -10.550901412963867
    10. '>):' → logprob: -10.675901412963867

Token 52: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004633995704352856
    2. '           ' → logprob: -6.254633903503418
    3. '<|end|>' → logprob: -6.629633903503418
    4. '            ' → logprob: -7.504633903503418
    5. '                ' → logprob: -7.629633903503418
    6. '              ' → logprob: -9.004633903503418
    7. ' ' → logprob: -10.004633903503418
    8. ',' → logprob: -10.504633903503418
    9. '             ' → logprob: -10.879633903503418
    10. '<|end|>' → logprob: -11.129633903503418

Token 53: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.09507299959659576
    2. 'A' (adapté à ' A') → logprob: -2.4700729846954346
    3. '               ' → logprob: -5.595073223114014
    4. '                   ' → logprob: -6.345073223114014
    5. '           ' → logprob: -8.345072746276855
    6. '   ' → logprob: -8.595072746276855
    7. '                ' → logprob: -9.970072746276855
    8. '                       ' → logprob: -10.595072746276855
    9. 'tmp' → logprob: -10.720072746276855
    10. '	A' → logprob: -10.720072746276855

Token 54: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.935296834039036e-06
    2. ',j' → logprob: -13.25000286102295
    3. '[' → logprob: -13.87500286102295
    4. '[i' → logprob: -16.625003814697266
    5. '[J' → logprob: -18.375003814697266
    6. ',' → logprob: -18.750003814697266
    7. 'j' → logprob: -19.375003814697266
    8. '[a' → logprob: -20.250003814697266
    9. '[
' → logprob: -20.375003814697266
    10. ' [' → logprob: -20.500003814697266

Token 55: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.004673156887292862
    2. ']' → logprob: -5.379673004150391
    3. '[' → logprob: -11.25467300415039
    4. ',' → logprob: -11.37967300415039
    5. '][' → logprob: -11.50467300415039
    6. '-' → logprob: -11.87967300415039
    7. '],[' → logprob: -12.50467300415039
    8. '"],' → logprob: -13.50467300415039
    9. '>,' → logprob: -13.75467300415039
    10. ''],' → logprob: -13.75467300415039

Token 56: 'A' (ID: 32)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.251944363117218
    2. 'A' → logprob: -1.5019443035125732
    3. '<|end|>' → logprob: -11.251944541931152
    4. ' ' → logprob: -13.376944541931152
    5. '	A' → logprob: -15.126944541931152
    6. ' ' → logprob: -15.376944541931152
    7. '<|end|>' → logprob: -17.126943588256836
    8. '  ' → logprob: -17.251943588256836
    9. '    ' → logprob: -17.626943588256836
    10. '```' → logprob: -17.751943588256836

Token 57: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -13.500001907348633
    3. '-' → logprob: -18.000001907348633
    4. ',j' → logprob: -18.125001907348633
    5. 'j' → logprob: -18.375001907348633
    6. '[js' → logprob: -18.625001907348633
    7. '[
' → logprob: -19.250001907348633
    8. '[i' → logprob: -19.375001907348633
    9. '```' → logprob: -19.750001907348633
    10. '	j' → logprob: -19.875001907348633

Token 58: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.523948907968588e-05
    2. ' -' → logprob: -11.125035285949707
    3. '[j' → logprob: -11.125035285949707
    4. '[' → logprob: -12.500035285949707
    5. '1' → logprob: -14.375035285949707
    6. '-j' → logprob: -14.500035285949707
    7. 'j' → logprob: -14.750035285949707
    8. ' j' → logprob: -16.00003433227539
    9. '-[' → logprob: -16.12503433227539
    10. '−' → logprob: -16.37503433227539

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -16.25
    4. '<|end|>' → logprob: -17.25
    5. '   ' → logprob: -17.3125
    6. 'j' → logprob: -17.3125
    7. '-' → logprob: -17.625
    8. 'i' → logprob: -18.375
    9. '    ' → logprob: -18.75
    10. '१' → logprob: -18.8125

Token 60: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05570671707391739
    2. '=' → logprob: -3.555706739425659
    3. ']=' → logprob: -3.680706739425659
    4. ' =' → logprob: -7.93070650100708
    5. ')' → logprob: -10.930706977844238
    6. ' ]' → logprob: -11.805706977844238
    7. '>' → logprob: -11.805706977844238
    8. '<|end|>' → logprob: -11.805706977844238
    9. '[' → logprob: -12.430706977844238
    10. ')=' → logprob: -12.930706977844238

Token 61: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858975484967232
    2. ' =' → logprob: -3.0485897064208984
    3. '=A' → logprob: -14.798589706420898
    4. '＝' → logprob: -14.923589706420898
    5. '=

' → logprob: -15.048589706420898
    6. ',' → logprob: -15.423589706420898
    7. ' =)' → logprob: -15.673589706420898
    8. '.=' → logprob: -15.923589706420898
    9. '=s' → logprob: -16.0485897064209
    10. ' =[' → logprob: -16.6735897064209

Token 62: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4740777015686035
    2. ' A' → logprob: -0.9740777015686035
    3. ' ' → logprob: -14.974077224731445
    4. '	A' → logprob: -15.224077224731445
    5. '>A' → logprob: -17.224077224731445
    6. '   ' → logprob: -17.474077224731445
    7. '  ' → logprob: -17.724077224731445
    8. '(A' → logprob: -18.349077224731445
    9. ' ' → logprob: -18.474077224731445
    10. '_A' → logprob: -18.599077224731445

Token 63: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -5.204720582696609e-05
    2. '[' → logprob: -9.875052452087402
    3. ' [' → logprob: -16.000051498413086
    4. '-' → logprob: -16.250051498413086
    5. '[i' → logprob: -16.250051498413086
    6. 'j' → logprob: -16.500051498413086
    7. ',j' → logprob: -16.750051498413086
    8. '```' → logprob: -18.125051498413086
    9. '[
' → logprob: -18.375051498413086
    10. '[js' → logprob: -18.625051498413086

Token 64: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03146762028336525
    2. '[j' → logprob: -3.9064676761627197
    3. '[' → logprob: -4.781467437744141
    4. '],[' → logprob: -6.656467437744141
    5. '-,' → logprob: -7.406467437744141
    6. '],' → logprob: -8.53146743774414
    7. ' -' → logprob: -9.03146743774414
    8. '][' → logprob: -9.28146743774414
    9. ',j' → logprob: -9.53146743774414
    10. ']' → logprob: -10.78146743774414

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.250005722045898
    3. '-' → logprob: -15.562505722045898
    4. '```' → logprob: -16.0625057220459
    5. '<|end|>' → logprob: -16.5000057220459
    6. '[' → logprob: -16.7500057220459
    7. '   ' → logprob: -17.0000057220459
    8. '2' → logprob: -17.8750057220459
    9. '    ' → logprob: -17.9375057220459
    10. ']' → logprob: -18.0625057220459

Token 66: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0722491443157196
    2. ',A' → logprob: -2.697249174118042
    3. '],' → logprob: -6.822248935699463
    4. ',j' → logprob: -7.072248935699463
    5. '],[' → logprob: -8.822249412536621
    6. ']' → logprob: -9.072249412536621
    7. ' ,' → logprob: -9.822249412536621
    8. ',[' → logprob: -10.822249412536621
    9. ',C' → logprob: -11.322249412536621
    10. '‌,' → logprob: -12.072249412536621

Token 67: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.676292231422849e-05
    2. ' A' → logprob: -11.000017166137695
    3. '	A' → logprob: -20.125017166137695
    4. 'Ａ' → logprob: -21.500017166137695
    5. '>A' → logprob: -21.625017166137695
    6. 'C' → logprob: -21.750017166137695
    7. '<|end|>' → logprob: -22.125017166137695
    8. '_A' → logprob: -22.750017166137695
    9. '   ' → logprob: -22.750017166137695
    10. 'a' → logprob: -22.875017166137695

Token 68: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.9743012671824545e-05
    2. '[' → logprob: -11.125020027160645
    3. ']' → logprob: -12.875020027160645
    4. ',j' → logprob: -14.625020027160645
    5. 'j' → logprob: -14.875020027160645
    6. '```' → logprob: -15.000020027160645
    7. '   ' → logprob: -15.125020027160645
    8. '][' → logprob: -15.250020027160645
    9. '       ' → logprob: -16.250019073486328
    10. '[i' → logprob: -16.500019073486328

Token 69: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10127081722021103
    2. ']' → logprob: -2.351270914077759
    3. ')
' → logprob: -7.10127067565918
    4. '<|end|>' → logprob: -9.22627067565918
    5. '}' → logprob: -9.72627067565918
    6. ']
' → logprob: -9.85127067565918
    7. ')]' → logprob: -11.60127067565918
    8. '）' → logprob: -12.10127067565918
    9. '])' → logprob: -12.72627067565918
    10. ')

' → logprob: -13.22627067565918

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8869193196296692
    2. '<|end|>' → logprob: -1.0119192600250244
    3. '    
' → logprob: -2.6369192600250244
    4. '\n' → logprob: -2.8869192600250244
    5. '
' → logprob: -3.2619192600250244
    6. '  
' → logprob: -4.0119194984436035
    7. ' 
' → logprob: -4.3869194984436035
    8. '```' → logprob: -5.1369194984436035
    9. '       ' → logprob: -5.6369194984436035
    10. '<|end|>' → logprob: -5.6369194984436035

Token 71: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.465544730424881
    2. ' return' → logprob: -1.8405447006225586
    3. '    ' → logprob: -2.0905447006225586
    4. '   ' → logprob: -3.3405447006225586
    5. '       ' → logprob: -3.5905447006225586
    6. ' ' → logprob: -4.465544700622559
    7. '        ' → logprob: -5.090544700622559
    8. '           ' → logprob: -6.590544700622559
    9. '<|end|>' → logprob: -6.715544700622559
    10. '    
' → logprob: -6.965544700622559

Token 72: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.1269284337759018
    2. 'A' → logprob: -2.1269283294677734
    3. '(A' → logprob: -15.876928329467773
    4. ' ' → logprob: -16.126928329467773
    5. '[A' → logprob: -16.376928329467773
    6. '	A' → logprob: -17.001928329467773
    7. ' ' → logprob: -17.001928329467773
    8. '[' → logprob: -18.876928329467773
    9. '_A' → logprob: -19.376928329467773
    10. 'Ａ' → logprob: -19.376928329467773

Token 73: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: ' selection' (ID: 8441)
  Prédit: ' quick'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' quick' → logprob: -0.7051272392272949
    2. ' ' → logprob: -2.080127239227295
    3. ' stable' → logprob: -2.705127239227295
    4. ' main' → logprob: -2.705127239227295
    5. 'qu' → logprob: -3.455127239227295
    6. ' selection' → logprob: -3.455127239227295
    7. 'selection' → logprob: -3.705127239227295
    8. 'stable' → logprob: -3.830127239227295
    9. 'quick' → logprob: -3.830127239227295
    10. 'partition' → logprob: -4.080127239227295

Token 76: 'sort' (ID: 13373)
  Prédit: 'sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.0005925900186412036
    2. '_sort' → logprob: -7.5005927085876465
    3. 'Sort' → logprob: -10.250592231750488
    4. 'ort' → logprob: -12.875592231750488
    5. ' sort' → logprob: -13.875592231750488
    6. 's' → logprob: -14.500592231750488
    7. '	sort' → logprob: -16.875593185424805
    8. '(A' → logprob: -16.875593185424805
    9. '_SORT' → logprob: -17.000593185424805
    10. '.sort' → logprob: -17.125593185424805

Token 77: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.0067665292881429195
    2. '(' → logprob: -5.006766319274902
    3. '(A' → logprob: -10.506766319274902
    4. ' (' → logprob: -11.256766319274902
    5. '(S' → logprob: -13.006766319274902
    6. '(Code' → logprob: -13.256766319274902
    7. '((' → logprob: -13.381766319274902
    8. '(B' → logprob: -13.756766319274902
    9. '(c' → logprob: -14.131766319274902
    10. '(a' → logprob: -15.006766319274902

Token 78: ',N' (ID: 49539)
  Prédit: ',N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',N' → logprob: -0.026381585747003555
    2. ',' → logprob: -3.651381492614746
    3. ' ,' → logprob: -9.526381492614746
    4. ',n' → logprob: -12.276381492614746
    5. ',int' → logprob: -14.276381492614746
    6. '   ' → logprob: -14.526381492614746
    7. ',num' → logprob: -14.776381492614746
    8. ',K' → logprob: -15.026381492614746
    9. '，' → logprob: -15.401381492614746
    10. ',M' → logprob: -15.526381492614746

Token 79: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -1.9266199160483666e-05
    2. '):
' → logprob: -11.500019073486328
    3. ')' → logprob: -11.750019073486328
    4. ':' → logprob: -13.750019073486328
    5. ' ):' → logprob: -16.000019073486328
    6. '):
' → logprob: -17.375019073486328
    7. '   ' → logprob: -17.875019073486328
    8. '}:' → logprob: -18.250019073486328
    9. '):

' → logprob: -18.375019073486328
    10. ']:' → logprob: -18.625019073486328

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5646407008171082
    2. ' A' → logprob: -1.189640760421753
    3. 'A' → logprob: -2.064640760421753
    4. '	A' → logprob: -9.439640998840332
    5. '>A' → logprob: -10.439640998840332
    6. '    ' → logprob: -10.689640998840332
    7. ' ' → logprob: -10.689640998840332
    8. '```' → logprob: -10.939640998840332
    9. '  ' → logprob: -11.439640998840332
    10. '   ' → logprob: -11.689640998840332

Token 81: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.004913515876978636
    2. ' A' → logprob: -5.504913330078125
    3. '   ' → logprob: -7.629913330078125
    4. ' ' → logprob: -8.629913330078125
    5. 'B' → logprob: -9.129913330078125
    6. '  ' → logprob: -10.504913330078125
    7. 'for' → logprob: -10.879913330078125
    8. 'import' → logprob: -12.629913330078125
    9. 'min' → logprob: -12.754913330078125
    10. '       ' → logprob: -13.129913330078125

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975071594119072
    2. '=' → logprob: -3.5297508239746094
    3. ' ' → logprob: -15.77975082397461
    4. '   ' → logprob: -16.40475082397461
    5. '  ' → logprob: -18.65475082397461
    6. ' =
' → logprob: -18.90475082397461
    7. ' ' → logprob: -19.27975082397461
    8. '＝' → logprob: -19.40475082397461
    9. '=A' → logprob: -19.40475082397461
    10. '=

' → logprob: -19.77975082397461

Token 83: ' deepcopy' (ID: 130230)
  Prédit: 'deep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deep' → logprob: -0.38720569014549255
    2. ' deepcopy' → logprob: -1.137205719947815
    3. 'dee' → logprob: -8.637206077575684
    4. ' deep' → logprob: -8.887206077575684
    5. '.deepcopy' → logprob: -11.762206077575684
    6. 'copy' → logprob: -12.262206077575684
    7. 'depth' → logprob: -13.012206077575684
    8. 'deque' → logprob: -13.387206077575684
    9. 'de' → logprob: -13.637206077575684
    10. ' dee' → logprob: -14.762206077575684

Token 84: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -1.1756367712223437e-05
    2. '(' → logprob: -11.375011444091797
    3. 'C' → logprob: -16.125011444091797
    4. '(
' → logprob: -16.875011444091797
    5. ')' → logprob: -17.000011444091797
    6. ' (' → logprob: -17.625011444091797
    7. '```' → logprob: -18.250011444091797
    8. '(A' → logprob: -18.375011444091797
    9. '<|end|>' → logprob: -18.500011444091797
    10. ')(' → logprob: -18.875011444091797

Token 85: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011069164611399174
    2. ')
' → logprob: -4.511069297790527
    3. ')
' → logprob: -11.011069297790527
    4. '   ' → logprob: -12.636069297790527
    5. ')

' → logprob: -14.011069297790527
    6. ' )' → logprob: -14.511069297790527
    7. ' ' → logprob: -16.88606834411621
    8. ')a' → logprob: -17.26106834411621
    9. ')i' → logprob: -17.26106834411621
    10. ' )
' → logprob: -18.01106834411621

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038502372801303864
    2. 'for' → logprob: -3.6635024547576904
    3. ' for' → logprob: -4.413502216339111
    4. '	for' → logprob: -11.66350269317627
    5. '    
' → logprob: -13.03850269317627
    6. '   ' → logprob: -13.66350269317627
    7. '  ' → logprob: -13.91350269317627
    8. '
' → logprob: -14.41350269317627
    9. ' ' → logprob: -14.66350269317627
    10. '    ' → logprob: -14.78850269317627

Token 87: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004220028407871723
    2. ' for' → logprob: -5.504220008850098
    3. '   ' → logprob: -8.879220008850098
    4. ' ' → logprob: -13.629220008850098
    5. '	for' → logprob: -14.754220008850098
    6. '    ' → logprob: -15.129220008850098
    7. '  ' → logprob: -15.504220008850098
    8. 'i' → logprob: -16.754220962524414
    9. '    
' → logprob: -17.129220962524414
    10. 'f' → logprob: -17.129220962524414

Token 88: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1002156138420105
    2. ' i' → logprob: -2.3502156734466553
    3. ' ' → logprob: -11.725215911865234
    4. '   ' → logprob: -15.100215911865234
    5. '	i' → logprob: -15.475215911865234
    6. '    ' → logprob: -15.975215911865234
    7. 'j' → logprob: -16.100215911865234
    8. '[i' → logprob: -16.475215911865234
    9. '  ' → logprob: -17.100215911865234
    10. '_i' → logprob: -17.475215911865234

Token 89: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0076286387629806995
    2. 'in' → logprob: -4.882628440856934
    3. ' ' → logprob: -10.882628440856934
    4. '<|end|>' → logprob: -14.257628440856934
    5. '	in' → logprob: -14.257628440856934
    6. '  ' → logprob: -14.757628440856934
    7. 'range' → logprob: -14.882628440856934
    8. '   ' → logprob: -15.007628440856934
    9. 'n' → logprob: -15.757628440856934
    10. 'In' → logprob: -15.882628440856934

Token 90: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1603032350540161
    2. ' range' → logprob: -1.9103032350540161
    3. '(range' → logprob: -10.160303115844727
    4. ' ' → logprob: -10.535303115844727
    5. '	range' → logprob: -12.160303115844727
    6. ' xrange' → logprob: -13.160303115844727
    7. '   ' → logprob: -13.285303115844727
    8. '  ' → logprob: -13.535303115844727
    9. 'ange' → logprob: -14.035303115844727
    10. 'rang' → logprob: -14.160303115844727

Token 91: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0014903423143550754
    2. '(' → logprob: -7.001490116119385
    3. '(i' → logprob: -7.501490116119385
    4. '(n' → logprob: -10.626490592956543
    5. '(
' → logprob: -14.376490592956543
    6. '(len' → logprob: -14.501490592956543
    7. ' (' → logprob: -14.626490592956543
    8. '(I' → logprob: -14.876490592956543
    9. '(range' → logprob: -16.376489639282227
    10. '((' → logprob: -17.251489639282227

Token 92: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.077329620718956
    2. ',' → logprob: -2.827329635620117
    3. '):
' → logprob: -5.077329635620117
    4. '+' → logprob: -5.202329635620117
    5. '   ' → logprob: -6.702329635620117
    6. ',N' → logprob: -6.952329635620117
    7. ',n' → logprob: -7.702329635620117
    8. ' ):' → logprob: -7.827329635620117
    9. ')' → logprob: -8.827329635620117
    10. ':' → logprob: -9.327329635620117

Token 93: '       ' (ID: 309)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.13603907823562622
    2. '   ' → logprob: -2.5110390186309814
    3. ' min' → logprob: -3.1360390186309814
    4. '	min' → logprob: -7.2610392570495605
    5. '       ' → logprob: -7.3860392570495605
    6. '    ' → logprob: -7.3860392570495605
    7. 'mini' → logprob: -8.011038780212402
    8. 'm' → logprob: -9.636038780212402
    9. '_min' → logprob: -9.886038780212402
    10. '```' → logprob: -10.511038780212402

Token 94: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.0060862768441438675
    2. ' min' → logprob: -5.631086349487305
    3. '   ' → logprob: -6.256086349487305
    4. 'mini' → logprob: -7.756086349487305
    5. 'm' → logprob: -10.006086349487305
    6. '	min' → logprob: -10.256086349487305
    7. 'minimum' → logprob: -11.381086349487305
    8. '_min' → logprob: -11.506086349487305
    9. 'mi' → logprob: -11.631086349487305
    10. 'imin' → logprob: -12.881086349487305

Token 95: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.45677831768989563
    2. '_idx' → logprob: -1.5817782878875732
    3. '_j' → logprob: -2.4567782878875732
    4. '_i' → logprob: -2.9567782878875732
    5. '_index' → logprob: -4.206778526306152
    6. '_' → logprob: -4.956778526306152
    7. 'idx' → logprob: -7.331778526306152
    8. 'i' → logprob: -8.081778526306152
    9. 'I' → logprob: -8.456778526306152
    10. 'index' → logprob: -9.081778526306152

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16856537759304047
    2. '=' → logprob: -1.9185653924942017
    3. '=i' → logprob: -4.793565273284912
    4. '＝' → logprob: -11.79356575012207
    5. ' =
' → logprob: -12.16856575012207
    6. '=j' → logprob: -12.54356575012207
    7. '=int' → logprob: -12.91856575012207
    8. ' ' → logprob: -13.29356575012207
    9. '=index' → logprob: -13.91856575012207
    10. '=
' → logprob: -14.04356575012207

Token 97: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.023251768201589584
    2. ' i' → logprob: -3.77325177192688
    3. '	i' → logprob: -12.7732515335083
    4. '<|end|>' → logprob: -13.0232515335083
    5. ' ' → logprob: -14.7732515335083
    6. '=i' → logprob: -15.6482515335083
    7. '<|end|>' → logprob: -15.8982515335083
    8. '*i' → logprob: -16.398252487182617
    9. '{i' → logprob: -16.398252487182617
    10. '_i' → logprob: -16.648252487182617

Token 98: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 100: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7209383845329285
    2. 'for' (adapté à ' for') → logprob: -1.0959384441375732
    3. '       ' → logprob: -1.7209384441375732
    4. '   ' → logprob: -7.720938205718994
    5. '	for' → logprob: -9.595938682556152
    6. '    ' → logprob: -10.720938682556152
    7. ' ' → logprob: -11.470938682556152
    8. '<|end|>' → logprob: -12.095938682556152
    9. '        ' → logprob: -12.595938682556152
    10. '```' → logprob: -12.595938682556152

Token 101: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.0912104919552803
    2. 'j' → logprob: -2.7162106037139893
    3. ' range' → logprob: -4.46621036529541
    4. 'range' → logprob: -4.71621036529541
    5. ' in' → logprob: -8.09121036529541
    6. ' ' → logprob: -8.21621036529541
    7. '    ' → logprob: -11.84121036529541
    8. 'in' → logprob: -12.46621036529541
    9. '```' → logprob: -12.71621036529541
    10. '  ' → logprob: -12.84121036529541

Token 102: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.062029752880334854
    2. 'in' → logprob: -2.8120298385620117
    3. ' ' → logprob: -10.687029838562012
    4. 'range' → logprob: -10.687029838562012
    5. '<|end|>' → logprob: -11.812029838562012
    6. ' range' → logprob: -13.062029838562012
    7. '	in' → logprob: -13.687029838562012
    8. '    ' → logprob: -13.687029838562012
    9. ' i' → logprob: -13.812029838562012
    10. '   ' → logprob: -14.562029838562012

Token 103: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12693022191524506
    2. ' range' → logprob: -2.1269302368164062
    3. '(range' → logprob: -13.876930236816406
    4. ' ' → logprob: -14.251930236816406
    5. '   ' → logprob: -15.876930236816406
    6. ' in' → logprob: -16.501930236816406
    7. 'r' → logprob: -16.751930236816406
    8. '    ' → logprob: -16.876930236816406
    9. 'i' → logprob: -17.251930236816406
    10. 'rang' → logprob: -17.501930236816406

Token 104: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -9.424530435353518e-05
    2. '(' → logprob: -9.500094413757324
    3. ' i' → logprob: -11.000094413757324
    4. ' (' → logprob: -13.500094413757324
    5. '(
' → logprob: -14.500094413757324
    6. '(I' → logprob: -15.125094413757324
    7. 'i' → logprob: -15.375094413757324
    8. '(N' → logprob: -15.500094413757324
    9. ',i' → logprob: -17.125093460083008
    10. ' ' → logprob: -17.625093460083008

Token 105: ',N' (ID: 49539)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008691507391631603
    2. ',N' → logprob: -4.883691310882568
    3. ',' → logprob: -7.133691310882568
    4. ' +' → logprob: -8.383691787719727
    5. ' ,' → logprob: -10.508691787719727
    6. '   ' → logprob: -11.383691787719727
    7. '+
' → logprob: -12.258691787719727
    8. ' ' → logprob: -12.258691787719727
    9. '+,' → logprob: -12.383691787719727
    10. '1' → logprob: -13.133691787719727

Token 106: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6328065991401672
    2. '):' → logprob: -0.7578065991401672
    3. '):
' → logprob: -9.632806777954102
    4. '       ' → logprob: -9.757806777954102
    5. '   ' → logprob: -11.007806777954102
    6. ':' → logprob: -11.007806777954102
    7. ',' → logprob: -11.507806777954102
    8. ')' → logprob: -11.507806777954102
    9. '+' → logprob: -11.757806777954102
    10. '<|end|>' → logprob: -12.382806777954102

Token 107: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010279521346092224
    2. '<|end|>' → logprob: -4.760279655456543
    3. ' if' → logprob: -7.510279655456543
    4. '       ' → logprob: -8.260279655456543
    5. ':' → logprob: -8.260279655456543
    6. '<|end|>' → logprob: -8.510279655456543
    7. '            
' → logprob: -9.010279655456543
    8. '               ' → logprob: -9.760279655456543
    9. '	       ' → logprob: -9.885279655456543
    10. '          ' → logprob: -10.135279655456543

Token 108: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7376098036766052
    2. ' if' → logprob: -0.7376098036766052
    3. '               ' → logprob: -3.61260986328125
    4. 'if' (adapté à ' if') → logprob: -4.11260986328125
    5. '       ' → logprob: -9.73760986328125
    6. '   ' → logprob: -9.98760986328125
    7. ' ' → logprob: -11.86260986328125
    8. '	       ' → logprob: -11.98760986328125
    9. '            ' → logprob: -12.36260986328125
    10. '          ' → logprob: -12.86260986328125

Token 109: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1269425004720688
    2. ' int' → logprob: -2.1269423961639404
    3. '   ' → logprob: -11.75194263458252
    4. ' ' → logprob: -13.00194263458252
    5. '  ' → logprob: -13.12694263458252
    6. '<int' → logprob: -13.50194263458252
    7. '(int' → logprob: -14.87694263458252
    8. '	int' → logprob: -14.87694263458252
    9. '    ' → logprob: -16.001941680908203
    10. ':int' → logprob: -17.001941680908203

Token 110: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -1.7432603272027336e-06
    2. 'A' → logprob: -13.500001907348633
    3. ')' → logprob: -15.375001907348633
    4. '(' → logprob: -16.625001907348633
    5. ')(' → logprob: -17.000001907348633
    6. '<|end|>' → logprob: -17.500001907348633
    7. '[A' → logprob: -17.625001907348633
    8. '(
' → logprob: -18.125001907348633
    9. '```' → logprob: -18.250001907348633
    10. '   ' → logprob: -18.625001907348633

Token 111: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -14.375000953674316
    3. ')[' → logprob: -15.375000953674316
    4. 'j' → logprob: -15.625000953674316
    5. '
' → logprob: -16.000001907348633
    6. ')' → logprob: -17.000001907348633
    7. '[i' → logprob: -17.125001907348633
    8. '   ' → logprob: -17.375001907348633
    9. '[min' → logprob: -17.500001907348633
    10. '[
' → logprob: -17.750001907348633

Token 112: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07553471624851227
    2. '][' → logprob: -2.7005348205566406
    3. ')[' → logprob: -5.325534820556641
    4. '>[' → logprob: -8.45053482055664
    5. '[j' → logprob: -8.95053482055664
    6. ''][' → logprob: -9.57553482055664
    7. '"][' → logprob: -9.82553482055664
    8. '}[' → logprob: -10.20053482055664
    9. ')' → logprob: -10.32553482055664
    10. ''[' → logprob: -10.45053482055664

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011331788846291602
    2. '[' → logprob: -9.125113487243652
    3. ' ' → logprob: -13.000113487243652
    4. ')' → logprob: -14.125113487243652
    5. '][' → logprob: -14.750113487243652
    6. '   ' → logprob: -14.875113487243652
    7. ')[' → logprob: -15.375113487243652
    8. '```' → logprob: -16.000112533569336
    9. '
' → logprob: -16.875112533569336
    10. ']' → logprob: -17.312612533569336

Token 114: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028462229296565056
    2. '])' → logprob: -3.6534621715545654
    3. ' )' → logprob: -6.2784624099731445
    4. ')<' → logprob: -8.653462409973145
    5. '[' → logprob: -10.403462409973145
    6. '）' → logprob: -11.028462409973145
    7. ''])' → logprob: -11.153462409973145
    8. ' ])' → logprob: -11.278462409973145
    9. '')' → logprob: -11.653462409973145
    10. '`)' → logprob: -12.153462409973145

Token 115: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.16157689690589905
    2. '<' → logprob: -1.9115768671035767
    3. ')' → logprob: -6.786576747894287
    4. '<int' → logprob: -9.286577224731445
    5. ')<' → logprob: -10.161577224731445
    6. '[' → logprob: -10.411577224731445
    7. ' ' → logprob: -10.661577224731445
    8. '>' → logprob: -12.286577224731445
    9. ' )' → logprob: -12.786577224731445
    10. '<|end|>' → logprob: -12.786577224731445

Token 116: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.004079112783074379
    2. ' int' → logprob: -5.504079341888428
    3. '=int' → logprob: -15.00407886505127
    4. '<int' → logprob: -15.25407886505127
    5. '(int' → logprob: -16.379079818725586
    6. '	int' → logprob: -16.754079818725586
    7. '   ' → logprob: -17.754079818725586
    8. '[int' → logprob: -17.879079818725586
    9. ' ' → logprob: -18.004079818725586
    10. '  ' → logprob: -18.004079818725586

Token 117: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -2.3676733690081164e-05
    2. 'A' → logprob: -10.75002384185791
    3. '(' → logprob: -13.25002384185791
    4. '(int' → logprob: -15.25002384185791
    5. ' (' → logprob: -16.750022888183594
    6. '(
' → logprob: -17.625022888183594
    7. ' A' → logprob: -17.625022888183594
    8. 'int' → logprob: -17.875022888183594
    9. '(C' → logprob: -18.000022888183594
    10. ')' → logprob: -18.000022888183594

Token 118: '[min' (ID: 135647)
  Prédit: '[min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -0.000399925687815994
    2. 'min' → logprob: -7.875400066375732
    3. '[i' → logprob: -12.125399589538574
    4. '[' → logprob: -12.125399589538574
    5. '[j' → logprob: -12.500399589538574
    6. '[max' → logprob: -13.250399589538574
    7. '[m' → logprob: -14.125399589538574
    8. '   ' → logprob: -14.250399589538574
    9. 'A' → logprob: -14.500399589538574
    10. ' min' → logprob: -14.750399589538574

Token 119: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.5690089639974758e-05
    2. ']' → logprob: -12.375015258789062
    3. '<|end|>' → logprob: -12.375015258789062
    4. 'i' → logprob: -13.375015258789062
    5. '```' → logprob: -13.750015258789062
    6. ' j' → logprob: -13.875015258789062
    7. '   ' → logprob: -14.000015258789062
    8. ')' → logprob: -14.375015258789062
    9. ' ' → logprob: -14.500015258789062
    10. '])' → logprob: -15.125015258789062

Token 120: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.009113786742091179
    2. '[' → logprob: -4.759113788604736
    3. ' ][' → logprob: -9.009113311767578
    4. ']' → logprob: -9.259113311767578
    5. ''][' → logprob: -9.384113311767578
    6. '[j' → logprob: -9.759113311767578
    7. '"][' → logprob: -10.384113311767578
    8. '   ' → logprob: -10.509113311767578
    9. '1' → logprob: -11.009113311767578
    10. 'j' → logprob: -11.384113311767578

Token 121: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004688464570790529
    2. 'j' → logprob: -5.379688262939453
    3. '   ' → logprob: -10.754688262939453
    4. ' ' → logprob: -11.379688262939453
    5. ']' → logprob: -11.629688262939453
    6. '[' → logprob: -11.754688262939453
    7. '][' → logprob: -12.629688262939453
    8. ')' → logprob: -12.879688262939453
    9. '<|end|>' → logprob: -12.879688262939453
    10. '])' → logprob: -13.254688262939453

Token 122: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007825111038982868
    2. '):
' → logprob: -5.757824897766113
    3. ']):' → logprob: -5.882824897766113
    4. ')' → logprob: -6.757824897766113
    5. ']:' → logprob: -7.882824897766113
    6. ':' → logprob: -9.132824897766113
    7. '       ' → logprob: -9.757824897766113
    8. ']):
' → logprob: -10.757824897766113
    9. '):
' → logprob: -10.882824897766113
    10. '）：' → logprob: -10.882824897766113

Token 123: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13182678818702698
    2. '           ' → logprob: -2.506826877593994
    3. ':
' → logprob: -3.756826877593994
    4. ':' → logprob: -5.506826877593994
    5. '[min' → logprob: -5.506826877593994
    6. 'min' → logprob: -5.631826877593994
    7. ' min' → logprob: -6.131826877593994
    8. ':min' → logprob: -6.256826877593994
    9. '):
' → logprob: -7.381826877593994
    10. '
' → logprob: -7.506826877593994

Token 124: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.018219366669654846
    2. 'min' (adapté à ' min') → logprob: -4.018219470977783
    3. '           ' → logprob: -10.643218994140625
    4. '               ' → logprob: -11.143218994140625
    5. '	min' → logprob: -11.518218994140625
    6. '                   ' → logprob: -11.893218994140625
    7. '[min' → logprob: -12.143218994140625
    8. '(min' → logprob: -12.643218994140625
    9. '_min' → logprob: -13.143218994140625
    10. '   ' → logprob: -13.643218994140625

Token 125: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.896309739408025e-07
    2. '           ' → logprob: -15.500000953674316
    3. '       ' → logprob: -15.875000953674316
    4. '   ' → logprob: -16.0
    5. ' j' → logprob: -16.0
    6. '               ' → logprob: -16.375
    7. '```' → logprob: -16.75
    8. ' ' → logprob: -17.0
    9. '<|end|>' → logprob: -17.375
    10. '  ' → logprob: -18.25

Token 126: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12755486369132996
    2. '=' → logprob: -2.1275548934936523
    3. '=j' → logprob: -7.377554893493652
    4. ' ' → logprob: -13.877554893493652
    5. '    ' → logprob: -15.627554893493652
    6. ' =
' → logprob: -16.252553939819336
    7. '   ' → logprob: -16.627553939819336
    8. '＝' → logprob: -17.002553939819336
    9. ')' → logprob: -17.627553939819336
    10. ' j' → logprob: -18.252553939819336

Token 127: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.038043782114982605
    2. ' j' → logprob: -3.288043737411499
    3. '<|end|>' → logprob: -13.538043975830078
    4. '	j' → logprob: -14.038043975830078
    5. ' ' → logprob: -16.038043975830078
    6. '   ' → logprob: -16.288043975830078
    7. '$j' → logprob: -17.913043975830078
    8. '    ' → logprob: -18.163043975830078
    9. '[j' → logprob: -19.038043975830078
    10. '<|end|>' → logprob: -19.288043975830078

Token 128: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8450872302055359
    2. '
' → logprob: -1.2200872898101807
    3. '<|end|>' → logprob: -1.4700872898101807
    4. '        
' → logprob: -3.7200872898101807
    5. ' 
' → logprob: -4.845087051391602
    6. '  
' → logprob: -5.470087051391602
    7. '<|end|>' → logprob: -5.845087051391602
    8. '    
' → logprob: -5.845087051391602
    9. '   
' → logprob: -7.220087051391602
    10. '   ' → logprob: -7.345087051391602

Token 129: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038734700065106153
    2. '        
' → logprob: -5.878873348236084
    3. '
' → logprob: -7.878873348236084
    4. '   ' → logprob: -8.253873825073242
    5. '<|end|>' → logprob: -8.878873825073242
    6. '    
' → logprob: -9.003873825073242
    7. '       
' → logprob: -9.753873825073242
    8. ' 
' → logprob: -10.628873825073242
    9. '  
' → logprob: -11.378873825073242
    10. '    ' → logprob: -11.378873825073242

Token 130: ' A' (ID: 355)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7696514129638672
    2. ' A' → logprob: -1.0196514129638672
    3. 'A' (adapté à ' A') → logprob: -2.144651412963867
    4. '   ' → logprob: -3.144651412963867
    5. '        
' → logprob: -5.019651412963867
    6. ' if' → logprob: -6.394651412963867
    7. '           ' → logprob: -6.394651412963867
    8. '
' → logprob: -6.769651412963867
    9. '    ' → logprob: -7.019651412963867
    10. ' 
' → logprob: -7.394651412963867

Token 131: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.029210779815912247
    2. '[j' → logprob: -3.7792108058929443
    3. '[' → logprob: -5.154210567474365
    4. '[min' → logprob: -9.654211044311523
    5. '[I' → logprob: -9.654211044311523
    6. '[A' → logprob: -11.279211044311523
    7. '[
' → logprob: -12.029211044311523
    8. ',' → logprob: -12.029211044311523
    9. ',i' → logprob: -13.154211044311523
    10. '[int' → logprob: -13.279211044311523

Token 132: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3793710172176361
    2. '],' → logprob: -1.2543710470199585
    3. ',A' → logprob: -3.879370927810669
    4. '],[' → logprob: -4.879371166229248
    5. ']' → logprob: -6.504371166229248
    6. '[' → logprob: -7.754371166229248
    7. '[A' → logprob: -9.62937068939209
    8. '>,' → logprob: -9.62937068939209
    9. 'A' → logprob: -10.62937068939209
    10. ',[' → logprob: -11.00437068939209

Token 133: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0008136780234053731
    2. ' A' → logprob: -7.1258134841918945
    3. '<|end|>' → logprob: -11.625813484191895
    4. ' ' → logprob: -16.50081443786621
    5. '>A' → logprob: -16.87581443786621
    6. '	A' → logprob: -17.12581443786621
    7. '  ' → logprob: -17.37581443786621
    8. '   ' → logprob: -18.00081443786621
    9. '=A' → logprob: -18.12581443786621
    10. '
' → logprob: -19.00081443786621

Token 134: '[min' (ID: 135647)
  Prédit: '[min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -2.6537622034084052e-05
    2. '[' → logprob: -10.75002670288086
    3. '[max' → logprob: -12.87502670288086
    4. 'min' → logprob: -14.00002670288086
    5. '<|end|>' → logprob: -14.00002670288086
    6. '[
' → logprob: -14.75002670288086
    7. '[m' → logprob: -15.62502670288086
    8. '[...,' → logprob: -16.37502670288086
    9. '[j' → logprob: -16.75002670288086
    10. '```' → logprob: -16.87502670288086

Token 135: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00014239625306800008
    2. 'min' → logprob: -9.125142097473145
    3. '<|end|>' → logprob: -11.250142097473145
    4. '       ' → logprob: -11.500142097473145
    5. '   ' → logprob: -12.875142097473145
    6. 'i' → logprob: -12.875142097473145
    7. ']' → logprob: -13.125142097473145
    8. '```' → logprob: -14.375142097473145
    9. '           ' → logprob: -15.000142097473145
    10. '<|end|>' → logprob: -15.000142097473145

Token 136: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004732102679554373
    2. ']=' → logprob: -8.250473022460938
    3. ' ]' → logprob: -8.875473022460938
    4. '=' → logprob: -9.750473022460938
    5. ' =' → logprob: -11.500473022460938
    6. '   ' → logprob: -13.125473022460938
    7. ')' → logprob: -14.500473022460938
    8. ' ' → logprob: -14.500473022460938
    9. '    ' → logprob: -15.375473022460938
    10. '[' → logprob: -15.625473022460938

Token 137: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868727385997772
    2. ' =' → logprob: -1.1368727684020996
    3. '=
' → logprob: -14.011872291564941
    4. ' =
' → logprob: -14.261872291564941
    5. ' ' → logprob: -16.136873245239258
    6. '=

' → logprob: -16.261873245239258
    7. '<|end|>' → logprob: -16.386873245239258
    8. '＝' → logprob: -17.511873245239258
    9. '[' → logprob: -18.386873245239258
    10. ')' → logprob: -18.511873245239258

Token 138: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.14269158244132996
    2. 'A' → logprob: -2.0176916122436523
    3. '<|end|>' → logprob: -11.767691612243652
    4. ' ' → logprob: -12.267691612243652
    5. '	A' → logprob: -13.142691612243652
    6. ' ' → logprob: -14.642691612243652
    7. '>A' → logprob: -15.142691612243652
    8. '<|end|>' → logprob: -15.392691612243652
    9. '  ' → logprob: -15.642691612243652
    10. '_A' → logprob: -16.017690658569336

Token 139: '[min' (ID: 135647)
  Prédit: '[min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -0.032556094229221344
    2. '[i' → logprob: -4.157556056976318
    3. '[j' → logprob: -4.157556056976318
    4. '[' → logprob: -7.657556056976318
    5. 'min' → logprob: -8.782556533813477
    6. '[max' → logprob: -10.282556533813477
    7. '<|end|>' → logprob: -10.282556533813477
    8. '[user' → logprob: -10.657556533813477
    9. '[
' → logprob: -11.657556533813477
    10. '[m' → logprob: -13.282556533813477

Token 140: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -8.149051427608356e-05
    2. 'min' → logprob: -10.000081062316895
    3. 'i' → logprob: -11.125081062316895
    4. ']' → logprob: -12.000081062316895
    5. '   ' → logprob: -12.125081062316895
    6. '```' → logprob: -13.000081062316895
    7. '<|end|>' → logprob: -13.750081062316895
    8. '       ' → logprob: -14.000081062316895
    9. '[j' → logprob: -14.125081062316895
    10. '_j' → logprob: -14.375081062316895

Token 141: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1666659563779831
    2. '],' → logprob: -2.166666030883789
    3. ',' → logprob: -3.666666030883789
    4. ',i' → logprob: -5.416666030883789
    5. ',A' → logprob: -5.666666030883789
    6. '],[' → logprob: -6.041666030883789
    7. '<|end|>' → logprob: -6.666666030883789
    8. '[i' → logprob: -6.916666030883789
    9. '   ' → logprob: -8.541666030883789
    10. ' ,' → logprob: -8.791666030883789

Token 142: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.005235291086137295
    2. ' A' → logprob: -5.255235195159912
    3. '<|end|>' → logprob: -13.75523567199707
    4. ' ' → logprob: -15.25523567199707
    5. '   ' → logprob: -16.50523567199707
    6. '	A' → logprob: -16.50523567199707
    7. '```' → logprob: -17.63023567199707
    8. '  ' → logprob: -17.75523567199707
    9. '>A' → logprob: -17.88023567199707
    10. '
' → logprob: -18.13023567199707

Token 143: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00018208740220870823
    2. '[' → logprob: -8.875182151794434
    3. 'i' → logprob: -10.625182151794434
    4. '[
' → logprob: -11.875182151794434
    5. '[j' → logprob: -11.875182151794434
    6. '<|end|>' → logprob: -13.750182151794434
    7. '```' → logprob: -14.000182151794434
    8. ' i' → logprob: -14.375182151794434
    9. '[user' → logprob: -14.500182151794434
    10. ' [' → logprob: -14.875182151794434

Token 144: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00895820651203394
    2. ')' → logprob: -4.758958339691162
    3. '<|end|>' → logprob: -8.508957862854004
    4. '}' → logprob: -9.383957862854004
    5. ']
' → logprob: -10.383957862854004
    6. '[' → logprob: -11.633957862854004
    7. '[i' → logprob: -12.258957862854004
    8. ']

' → logprob: -12.508957862854004
    9. '<|end|>' → logprob: -13.508957862854004
    10. ' ]' → logprob: -13.508957862854004

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4207891821861267
    2. '
' → logprob: -1.4207892417907715
    3. '<|end|>' → logprob: -3.1707892417907715
    4. '    
' → logprob: -3.5457892417907715
    5. '\n' → logprob: -3.7957892417907715
    6. 'return' → logprob: -5.4207892417907715
    7. '  
' → logprob: -6.5457892417907715
    8. ' return' → logprob: -7.1707892417907715
    9. ' 
' → logprob: -7.4207892417907715
    10. '	return' → logprob: -8.045788764953613

Token 146: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.002298228442668915
    2. ' return' → logprob: -6.252298355102539
    3. '   ' → logprob: -8.127298355102539
    4. '
' → logprob: -9.752298355102539
    5. '    
' → logprob: -11.877298355102539
    6. ' ' → logprob: -12.877298355102539
    7. '  
' → logprob: -13.502298355102539
    8. '	return' → logprob: -14.002298355102539
    9. '```' → logprob: -14.002298355102539
    10. ' 
' → logprob: -14.127298355102539

Token 147: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.10020828247070312
    2. ' A' → logprob: -2.350208282470703
    3. '(A' → logprob: -13.600208282470703
    4. '	A' → logprob: -14.725208282470703
    5. '_A' → logprob: -17.225208282470703
    6. ' ' → logprob: -17.350208282470703
    7. '<|end|>' → logprob: -17.850208282470703
    8. '[A' → logprob: -18.100208282470703
    9. ' ' → logprob: -18.350208282470703
    10. 'Ａ' → logprob: -18.600208282470703

Token 148: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06913210451602936
    2. '<|end|>' → logprob: -2.819132089614868
    3. '
' → logprob: -5.944132328033447
    4. 'C' → logprob: -6.569132328033447
    5. '  
' → logprob: -7.694132328033447
    6. '```' → logprob: -7.819132328033447
    7. 'A' → logprob: -8.069131851196289
    8. '#' → logprob: -8.194131851196289
    9. '<|end|>' → logprob: -8.694131851196289
    10. ' 
' → logprob: -8.819131851196289

Token 149: 'def' (ID: 1314)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.057786814868450165
    2. 'def' → logprob: -3.432786703109741
    3. 'A' → logprob: -5.05778694152832
    4. '#' → logprob: -5.05778694152832
    5. 'if' → logprob: -6.18278694152832
    6. 'n' → logprob: -6.43278694152832
    7. 'data' → logprob: -6.55778694152832
    8. 'print' → logprob: -7.05778694152832
    9. 'N' → logprob: -7.43278694152832
    10. 'B' → logprob: -7.55778694152832

Token 150: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3375855088233948
    2. 'main' → logprob: -1.46258544921875
    3. ' is' → logprob: -3.71258544921875
    4. 'is' → logprob: -4.46258544921875
    5. ' stable' → logprob: -5.08758544921875
    6. 'stable' → logprob: -5.21258544921875
    7. ' quick' → logprob: -5.83758544921875
    8. 'print' → logprob: -6.83758544921875
    9. ' print' → logprob: -7.33758544921875
    10. 'quick' → logprob: -7.71258544921875

Token 151: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.664371848164592e-05
    2. ' ():' → logprob: -12.000016212463379
    3. '()' → logprob: -12.250016212463379
    4. '(' → logprob: -12.375016212463379
    5. '():
' → logprob: -13.875016212463379
    6. '(:' → logprob: -16.375017166137695
    7. '()>' → logprob: -16.625017166137695
    8. '(":' → logprob: -16.750017166137695
    9. ':' → logprob: -17.250017166137695
    10. '():
' → logprob: -17.625017166137695

Token 152: '   ' (ID: 271)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3973129391670227
    2. 'n' → logprob: -1.397312879562378
    3. '   ' → logprob: -3.022312879562378
    4. ' N' → logprob: -3.647312879562378
    5. ' n' → logprob: -5.272313117980957
    6. '    ' → logprob: -8.022313117980957
    7. ' ' → logprob: -9.522313117980957
    8. '  ' → logprob: -9.522313117980957
    9. '	N' → logprob: -9.522313117980957
    10. '	n' → logprob: -10.022313117980957

Token 153: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.430541068315506
    2. 'n' → logprob: -1.0555410385131836
    3. '   ' → logprob: -7.430541038513184
    4. ' N' → logprob: -7.430541038513184
    5. ' n' → logprob: -7.930541038513184
    6. '    
' → logprob: -8.805541038513184
    7. 'import' → logprob: -10.055541038513184
    8. '    ' → logprob: -10.680541038513184
    9. '	n' → logprob: -11.305541038513184
    10. ' ' → logprob: -11.680541038513184

Token 154: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004382893908768892
    2. '=' → logprob: -5.629383087158203
    3. ',' → logprob: -7.754383087158203
    4. '=int' → logprob: -8.004383087158203
    5. '=input' → logprob: -12.004383087158203
    6. ' ,' → logprob: -12.129383087158203
    7. ',int' → logprob: -12.504383087158203
    8. ' =
' → logprob: -13.879383087158203
    9. ',input' → logprob: -13.879383087158203
    10. ' ' → logprob: -14.004383087158203

Token 155: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3132665753364563
    2. ' int' → logprob: -1.3132665157318115
    3. 'input' → logprob: -13.18826675415039
    4. ' input' → logprob: -13.56326675415039
    5. ' ' → logprob: -13.68826675415039
    6. '  ' → logprob: -15.31326675415039
    7. '	int' → logprob: -16.56326675415039
    8. '<int' → logprob: -16.81326675415039
    9. '   ' → logprob: -16.93826675415039
    10. '=int' → logprob: -17.31326675415039

Token 156: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.023285893723368645
    2. '(' → logprob: -3.7732858657836914
    3. 'input' → logprob: -10.148285865783691
    4. '()' → logprob: -14.773285865783691
    5. ' input' → logprob: -14.898285865783691
    6. '(
' → logprob: -15.398285865783691
    7. ' (' → logprob: -15.773285865783691
    8. '('' → logprob: -17.023286819458008
    9. '=input' → logprob: -17.273286819458008
    10. '(

' → logprob: -17.523286819458008

Token 157: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07901272922754288
    2. '()' → logprob: -2.579012632369995
    3. '(' → logprob: -9.704012870788574
    4. '();)' → logprob: -11.329012870788574
    5. '()>' → logprob: -11.454012870788574
    6. '().' → logprob: -11.454012870788574
    7. '());' → logprob: -11.954012870788574
    8. '()))' → logprob: -12.579012870788574
    9. '()]' → logprob: -12.954012870788574
    10. '()
' → logprob: -13.079012870788574

Token 158: '   ' (ID: 271)
  Prédit: ' C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.37259331345558167
    2. 'C' → logprob: -1.6225932836532593
    3. '   ' → logprob: -2.247593402862549
    4. ' A' → logprob: -5.872593402862549
    5. 'A' → logprob: -6.247593402862549
    6. '	C' → logprob: -6.372593402862549
    7. ' ' → logprob: -7.747593402862549
    8. '    ' → logprob: -8.49759292602539
    9. '   ' → logprob: -8.99759292602539
    10. '  ' → logprob: -9.24759292602539

Token 159: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.0070878262631595135
    2. 'cards' → logprob: -5.632087707519531
    3. ' C' → logprob: -6.007087707519531
    4. ' cards' → logprob: -7.757087707519531
    5. 'data' → logprob: -8.132087707519531
    6. 'card' → logprob: -8.882087707519531
    7. 'A' → logprob: -10.507087707519531
    8. 'S' → logprob: -10.757087707519531
    9. '_C' → logprob: -10.757087707519531
    10. 'Cards' → logprob: -11.007087707519531

Token 160: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0803016871213913
    2. '=' → logprob: -2.5803017616271973
    3. '=[]' → logprob: -6.705301761627197
    4. '[]' → logprob: -9.455301284790039
    5. ' []' → logprob: -10.705301284790039
    6. ' =[' → logprob: -10.830301284790039
    7. '[' → logprob: -11.205301284790039
    8. 's' → logprob: -11.330301284790039
    9. '[:]' → logprob: -11.580301284790039
    10. ',' → logprob: -11.705301284790039

Token 161: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.21415852010250092
    2. '[input' → logprob: -1.964158535003662
    3. '[]' → logprob: -3.589158535003662
    4. '[list' → logprob: -4.464158535003662
    5. ' [' → logprob: -4.714158535003662
    6. '[array' → logprob: -6.839158535003662
    7. '[int' → logprob: -6.964158535003662
    8. '[str' → logprob: -7.339158535003662
    9. ' []' → logprob: -7.964158535003662
    10. '[index' → logprob: -8.589158058166504

Token 162: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.34327536821365356
    2. '()' → logprob: -1.3432753086090088
    3. '(map' → logprob: -3.968275308609009
    4. '(' → logprob: -4.593275547027588
    5. '([' → logprob: -8.71827507019043
    6. '(tuple' → logprob: -9.46827507019043
    7. '(range' → logprob: -9.71827507019043
    8. '(eval' → logprob: -9.84327507019043
    9. '[input' → logprob: -10.46827507019043
    10. '();' → logprob: -10.84327507019043

Token 163: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0009137284359894693
    2. '()' → logprob: -7.000913619995117
    3. ' ().' → logprob: -13.750913619995117
    4. '(' → logprob: -14.125913619995117
    5. '()
' → logprob: -15.750913619995117
    6. '())' → logprob: -16.375913619995117
    7. ' ()' → logprob: -16.750913619995117
    8. 'split' → logprob: -17.125913619995117
    9. '（）' → logprob: -17.875913619995117
    10. '.split' → logprob: -17.875913619995117

Token 164: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.005265888292342424
    2. 'strip' → logprob: -5.255265712738037
    3. 'rstrip' → logprob: -10.505266189575195
    4. ' split' → logprob: -12.380266189575195
    5. 'spl' → logprob: -15.130266189575195
    6. '(split' → logprob: -15.380266189575195
    7. ' strip' → logprob: -18.005266189575195
    8. 's' → logprob: -18.255266189575195
    9. 'rs' → logprob: -18.880266189575195
    10. 'sp' → logprob: -19.130266189575195

Token 165: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.018696019425988197
    2. '()' → logprob: -4.143695831298828
    3. '(' → logprob: -6.518695831298828
    4. ')' → logprob: -7.518695831298828
    5. '('' → logprob: -7.893695831298828
    6. '()))' → logprob: -8.518695831298828
    7. ' ())' → logprob: -10.768695831298828
    8. '("' → logprob: -10.893695831298828
    9. '())
' → logprob: -11.018695831298828
    10. '(""))' → logprob: -12.893695831298828

Token 166: '   ' (ID: 271)
  Prédit: ' C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.44699031114578247
    2. 'C' → logprob: -2.0719902515411377
    3. '   ' → logprob: -2.1969902515411377
    4. '[' → logprob: -2.6969902515411377
    5. ' for' → logprob: -4.446990489959717
    6. 'for' → logprob: -4.821990489959717
    7. '[]' → logprob: -5.071990489959717
    8. ' ' → logprob: -5.196990489959717
    9. 'A' → logprob: -5.321990489959717
    10. ' A' → logprob: -5.571990489959717

Token 167: ' bs' (ID: 35414)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.8070705533027649
    2. ' C' → logprob: -1.6820704936981201
    3. '[' → logprob: -2.30707049369812
    4. 'for' → logprob: -3.05707049369812
    5. '   ' → logprob: -3.05707049369812
    6. ' for' → logprob: -3.18207049369812
    7. ' ' → logprob: -3.55707049369812
    8. '[]' → logprob: -3.68207049369812
    9. 'def' → logprob: -4.182070732116699
    10. 's' → logprob: -4.682070732116699

Token 168: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7781569957733154
    2. 'ort' → logprob: -1.6531569957733154
    3. ' =' → logprob: -1.7781569957733154
    4. 'orted' → logprob: -2.2781569957733154
    5. 'sorted' → logprob: -4.2781572341918945
    6. '=C' → logprob: -4.2781572341918945
    7. '=A' → logprob: -4.5281572341918945
    8. '_' → logprob: -5.0281572341918945
    9. '_sorted' → logprob: -5.0281572341918945
    10. 'sort' → logprob: -5.1531572341918945

Token 169: ' bubbles' (ID: 72184)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.14395400881767273
    2. ' bubbles' → logprob: -2.018954038619995
    3. ' selection' → logprob: -7.268953800201416
    4. 'selection' → logprob: -7.893953800201416
    5. ' b' → logprob: -9.268954277038574
    6. 'bubble' → logprob: -9.393954277038574
    7. '(b' → logprob: -11.393954277038574
    8. ' bubble' → logprob: -12.393954277038574
    9. '(selection' → logprob: -12.518954277038574
    10. ' ' → logprob: -13.143954277038574

Token 170: 'ort' (ID: 390)
  Prédit: 'ort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ort' → logprob: -0.01608540117740631
    2. 'sort' → logprob: -4.141085624694824
    3. 'o' → logprob: -10.391085624694824
    4. 'or' → logprob: -12.266085624694824
    5. 'orts' → logprob: -12.391085624694824
    6. 'орт' → logprob: -12.391085624694824
    7. '_sort' → logprob: -13.391085624694824
    8. 'ortut' → logprob: -14.141085624694824
    9. '.sort' → logprob: -14.266085624694824
    10. ' sort' → logprob: -14.516085624694824

Token 171: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.20253576338291168
    2. '(' → logprob: -1.7025357484817505
    3. '(
' → logprob: -6.952535629272461
    4. ' (' → logprob: -9.077535629272461
    5. '(

' → logprob: -10.577535629272461
    6. '((' → logprob: -11.327535629272461
    7. '(B' → logprob: -11.827535629272461
    8. '(CG' → logprob: -13.577535629272461
    9. ' ' → logprob: -13.702535629272461
    10. '<|end|>' → logprob: -14.327535629272461

Token 172: ',N' (ID: 49539)
  Prédit: ',N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',N' → logprob: -0.01825331151485443
    2. ',' → logprob: -4.018253326416016
    3. ' ,' → logprob: -9.268253326416016
    4. ',n' → logprob: -12.393253326416016
    5. 'N' → logprob: -12.643253326416016
    6. ')' → logprob: -14.518253326416016
    7. '	N' → logprob: -16.018253326416016
    8. '   ' → logprob: -16.018253326416016
    9. '(N' → logprob: -16.268253326416016
    10. ',
' → logprob: -16.393253326416016

Token 173: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010450744302943349
    2. ')
' → logprob: -6.876045227050781
    3. ' )' → logprob: -11.376045227050781
    4. ')
' → logprob: -15.001045227050781
    5. ' )
' → logprob: -16.25104522705078
    6. ')

' → logprob: -16.37604522705078
    7. '   ' → logprob: -16.50104522705078
    8. '),' → logprob: -16.75104522705078
    9. '<|end|>' → logprob: -17.50104522705078
    10. ')#' → logprob: -17.75104522705078

Token 174: '   ' (ID: 271)
  Prédit: 'ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.002158472081646323
    2. ' ss' → logprob: -6.7521586418151855
    3. '   ' → logprob: -7.8771586418151855
    4. '	ss' → logprob: -8.002158164978027
    5. '_ss' → logprob: -9.627158164978027
    6. 's' → logprob: -9.627158164978027
    7. '    
' → logprob: -10.252158164978027
    8. ' ' → logprob: -11.002158164978027
    9. 'sss' → logprob: -11.252158164978027
    10. '(ss' → logprob: -12.002158164978027

Token 175: ' print' (ID: 2123)
  Prédit: 'ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.00026777281891554594
    2. 'print' (adapté à ' print') → logprob: -8.87526798248291
    3. '    
' → logprob: -10.12526798248291
    4. ' ss' → logprob: -10.62526798248291
    5. '   ' → logprob: -10.87526798248291
    6. 's' → logprob: -11.75026798248291
    7. 'sss' → logprob: -11.75026798248291
    8. '
' → logprob: -11.87526798248291
    9. 'sl' → logprob: -13.00026798248291
    10. 'se' → logprob: -13.25026798248291

Token 176: '(*' (ID: 9000)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.7116087079048157
    2. '(' → logprob: -1.336608648300171
    3. '(*' → logprob: -1.711608648300171
    4. '('' → logprob: -3.336608648300171
    5. '("("' → logprob: -3.586608648300171
    6. '("(' → logprob: -7.46160888671875
    7. '(len' → logprob: -7.83660888671875
    8. '((' → logprob: -8.08660888671875
    9. '(bs' → logprob: -8.08660888671875
    10. '(*(' → logprob: -8.46160888671875

Token 177: 'bs' (ID: 6229)
  Prédit: 'bs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bs' → logprob: -0.0008056987426243722
    2. ' bs' → logprob: -7.125805854797363
    3. 'b' → logprob: -14.000805854797363
    4. '(bs' → logprob: -15.625805854797363
    5. '[' → logprob: -16.000804901123047
    6. ' ' → logprob: -17.625804901123047
    7. '   ' → logprob: -18.125804901123047
    8. ')' → logprob: -18.500804901123047
    9. '_bs' → logprob: -18.625804901123047
    10. '.bs' → logprob: -18.750804901123047

Token 178: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007684589363634586
    2. ')
' → logprob: -4.882684707641602
    3. '<|end|>' → logprob: -10.757684707641602
    4. ' )' → logprob: -11.257684707641602
    5. '())' → logprob: -11.382684707641602
    6. '()' → logprob: -11.382684707641602
    7. ',' → logprob: -11.632684707641602
    8. ')

' → logprob: -13.007684707641602
    9. '[' → logprob: -13.507684707641602
    10. '   ' → logprob: -13.507684707641602

Token 179: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.84781813621521
    2. '<|end|>' → logprob: -0.84781813621521
    3. '
' → logprob: -2.72281813621521
    4. '    
' → logprob: -3.34781813621521
    5. ' ' → logprob: -4.597818374633789
    6. ')' → logprob: -4.972818374633789
    7. ' 
' → logprob: -5.097818374633789
    8. '  
' → logprob: -5.222818374633789
    9. '\n' → logprob: -5.972818374633789
    10. '<|end|>' → logprob: -6.097818374633789

Token 180: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.9769083857536316
    2. 'selection' → logprob: -1.3519084453582764
    3. 'ss' → logprob: -1.6019084453582764
    4. 'sel' → logprob: -2.2269084453582764
    5. 's' → logprob: -4.226908206939697
    6. 'sl' → logprob: -4.601908206939697
    7. 'as' → logprob: -5.226908206939697
    8. 'se' → logprob: -6.101908206939697
    9. 'sc' → logprob: -6.101908206939697
    10. 'sv' → logprob: -6.226908206939697

Token 181: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6061941981315613
    2. '("' → logprob: -1.106194257736206
    3. '()' → logprob: -2.606194257736206
    4. '(selection' → logprob: -3.606194257736206
    5. '(bs' → logprob: -4.981194019317627
    6. '(*' → logprob: -4.981194019317627
    7. '('' → logprob: -5.481194019317627
    8. '(b' → logprob: -6.356194019317627
    9. '(False' → logprob: -7.231194019317627
    10. '("("' → logprob: -7.731194019317627

Token 182: 'Stable' (ID: 129551)
  Prédit: 'No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.928291916847229
    2. 'Stable' → logprob: -0.928291916847229
    3. 'Yes' → logprob: -1.803291916847229
    4. 'Not' → logprob: -3.1782917976379395
    5. 'NO' → logprob: -5.9282917976379395
    6. 'YES' → logprob: -8.428292274475098
    7. '"' → logprob: -9.428292274475098
    8. 'stable' → logprob: -10.303292274475098
    9. '"No' → logprob: -11.053292274475098
    10. 'False' → logprob: -11.178292274475098

Token 183: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.05924953147768974
    2. '")
' → logprob: -3.3092496395111084
    3. '"' → logprob: -3.9342496395111084
    4. 'Yes' → logprob: -6.934249401092529
    5. ')' → logprob: -8.809249877929688
    6. '\n' → logprob: -10.059249877929688
    7. '")
' → logprob: -10.184249877929688
    8. ' Yes' → logprob: -10.434249877929688
    9. '=True' → logprob: -10.559249877929688
    10. '
' → logprob: -10.559249877929688

Token 184: '   ' (ID: 271)
  Prédit: 'ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.004797849804162979
    2. 'sl' → logprob: -6.75479793548584
    3. 'sel' → logprob: -6.75479793548584
    4. '   ' → logprob: -6.87979793548584
    5. 'se' → logprob: -8.37979793548584
    6. 's' → logprob: -8.37979793548584
    7. 'sc' → logprob: -8.75479793548584
    8. '
' → logprob: -8.87979793548584
    9. ' ss' → logprob: -9.00479793548584
    10. '    
' → logprob: -9.12979793548584

Token 185: ' ss' (ID: 20928)
  Prédit: 'ss'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ss' (adapté à ' ss') → logprob: -0.0018898528069257736
    2. ' ss' → logprob: -8.001890182495117
    3. 'sc' → logprob: -8.001890182495117
    4. 'cs' → logprob: -8.126890182495117
    5. 'sss' → logprob: -8.251890182495117
    6. '   ' → logprob: -8.626890182495117
    7. 'ps' → logprob: -9.501890182495117
    8. 'sel' → logprob: -9.626890182495117
    9. 'bs' → logprob: -9.751890182495117
    10. 's' → logprob: -10.001890182495117

Token 186: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007614439819008112
    2. '=' → logprob: -4.882614612579346
    3. ' ' → logprob: -12.507614135742188
    4. '_' → logprob: -13.007614135742188
    5. '    ' → logprob: -14.382614135742188
    6. '   ' → logprob: -14.382614135742188
    7. 'space' → logprob: -14.882614135742188
    8. '  ' → logprob: -15.507614135742188
    9. 's' → logprob: -15.757614135742188
    10. '(' → logprob: -16.257614135742188

Token 187: ' selection' (ID: 8441)
  Prédit: 'selection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'selection' → logprob: -0.1798054575920105
    2. ' selection' → logprob: -1.8048055171966553
    3. '(selection' → logprob: -9.804805755615234
    4. 'select' → logprob: -12.679805755615234
    5. '_selection' → logprob: -14.679805755615234
    6. 'selected' → logprob: -14.929805755615234
    7. ' ' → logprob: -14.929805755615234
    8. '.selection' → logprob: -14.929805755615234
    9. 'Selection' → logprob: -15.679805755615234
    10. ' selectie' → logprob: -15.929805755615234

Token 188: 'sort' (ID: 13373)
  Prédit: 'sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -1.9361264946837764e-07
    2. ' sort' → logprob: -17.125
    3. 's' → logprob: -17.75
    4. 'ort' → logprob: -18.0
    5. 'sorted' → logprob: -19.25
    6. '_sort' → logprob: -19.625
    7. '(sort' → logprob: -19.625
    8. 'Sort' → logprob: -20.75
    9. '.sort' → logprob: -20.75
    10. '	sort' → logprob: -21.125

Token 189: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -5.5577775128767826e-06
    2. '(' → logprob: -12.250005722045898
    3. ' (' → logprob: -14.500005722045898
    4. '(
' → logprob: -15.500005722045898
    5. '<|end|>' → logprob: -17.3750057220459
    6. '(CG' → logprob: -18.0000057220459
    7. '(B' → logprob: -18.6250057220459
    8. '(CType' → logprob: -18.6250057220459
    9. '(c' → logprob: -19.0000057220459
    10. '((' → logprob: -19.3750057220459

Token 190: ',N' (ID: 49539)
  Prédit: ',N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',N' → logprob: -0.08045458048582077
    2. ',' → logprob: -2.5804545879364014
    3. ',C' → logprob: -6.580454349517822
    4. ' ,' → logprob: -8.83045482635498
    5. '(N' → logprob: -11.33045482635498
    6. ',n' → logprob: -11.58045482635498
    7. ',S' → logprob: -12.70545482635498
    8. '(' → logprob: -13.70545482635498
    9. ',K' → logprob: -13.95545482635498
    10. ',Q' → logprob: -14.08045482635498

Token 191: ')
' (ID: 446)
  Prédit: ',N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',N' → logprob: -0.2429288625717163
    2. ',' → logprob: -1.6179288625717163
    3. ')' → logprob: -4.117928981781006
    4. ')
' → logprob: -7.117928981781006
    5. ',
' → logprob: -8.992928504943848
    6. ' ,' → logprob: -9.242928504943848
    7. '   ' → logprob: -10.867928504943848
    8. ',n' → logprob: -11.242928504943848
    9. ' ' → logprob: -12.617928504943848
    10. '
' → logprob: -12.617928504943848

Token 192: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34887152910232544
    2. 'print' → logprob: -1.2238714694976807
    3. ' print' → logprob: -8.098871231079102
    4. '
' → logprob: -9.348871231079102
    5. '```' → logprob: -10.723871231079102
    6. '    
' → logprob: -12.723871231079102
    7. '
' → logprob: -13.348871231079102
    8. 'if' → logprob: -13.723871231079102
    9. '	print' → logprob: -13.848871231079102
    10. 'for' → logprob: -13.848871231079102

Token 193: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0133969159796834
    2. ' print' → logprob: -4.388396739959717
    3. '   ' → logprob: -8.013397216796875
    4. 'if' → logprob: -8.888397216796875
    5. 'stable' → logprob: -9.013397216796875
    6. ' if' → logprob: -9.513397216796875
    7. 'result' → logprob: -9.763397216796875
    8. 'st' → logprob: -10.263397216796875
    9. ' stable' → logprob: -10.513397216796875
    10. 's' → logprob: -11.013397216796875

Token 194: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.00091217877343297
    2. '(' → logprob: -7.000912189483643
    3. '(*)' → logprob: -14.375911712646484
    4. '(*(' → logprob: -17.125911712646484
    5. ' (*' → logprob: -17.375911712646484
    6. '(
' → logprob: -17.750911712646484
    7. '("' → logprob: -18.125911712646484
    8. '((*' → logprob: -18.375911712646484
    9. '()' → logprob: -20.000911712646484
    10. '(

' → logprob: -20.125911712646484

Token 195: 'ss' (ID: 1087)
  Prédit: 'ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ss' → logprob: -1.735893965815194e-05
    2. '(ss' → logprob: -11.250017166137695
    3. ' ss' → logprob: -12.375017166137695
    4. ')' → logprob: -17.375017166137695
    5. 's' → logprob: -18.375017166137695
    6. '(' → logprob: -18.500017166137695
    7. '	ss' → logprob: -18.750017166137695
    8. ' ' → logprob: -19.250017166137695
    9. '  ' → logprob: -19.875017166137695
    10. 'sss' → logprob: -19.875017166137695

Token 196: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.05905110761523247
    2. '
' → logprob: -3.184051036834717
    3. ')' → logprob: -4.559051036834717
    4. '   ' → logprob: -6.559051036834717
    5. 'if' → logprob: -6.809051036834717
    6. '    
' → logprob: -7.309051036834717
    7. '  
' → logprob: -7.434051036834717
    8. '()
' → logprob: -7.434051036834717
    9. ' 
' → logprob: -7.809051036834717
    10. '\n' → logprob: -8.809051513671875

Token 197: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.637006938457489
    2. '
' → logprob: -1.1370069980621338
    3. 'print' → logprob: -2.012006998062134
    4. ' if' → logprob: -5.012006759643555
    5. '\n' → logprob: -5.887006759643555
    6. ' 
' → logprob: -6.137006759643555
    7. 'for' → logprob: -6.762006759643555
    8. '
' → logprob: -6.887006759643555
    9. '"\' → logprob: -7.637006759643555
    10. '   ' → logprob: -7.762006759643555

Token 198: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08099451661109924
    2. 'print' → logprob: -2.5809946060180664
    3. 'for' → logprob: -6.330994606018066
    4. ' if' → logprob: -9.080994606018066
    5. 'stable' → logprob: -9.580994606018066
    6. '   ' → logprob: -10.330994606018066
    7. '"' → logprob: -10.580994606018066
    8. 'st' → logprob: -11.080994606018066
    9. 'stab' → logprob: -11.080994606018066
    10. 'def' → logprob: -11.955994606018066

Token 199: ' bs' (ID: 35414)
  Prédit: ' bs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bs' → logprob: -0.23778200149536133
    2. 'bs' → logprob: -1.7377820014953613
    3. ' ss' → logprob: -3.8627820014953613
    4. 'ss' → logprob: -4.862782001495361
    5. ' bubbles' → logprob: -5.487782001495361
    6. '(bs' → logprob: -6.612782001495361
    7. 'b' → logprob: -6.862782001495361
    8. ' b' → logprob: -8.987781524658203
    9. '(ss' → logprob: -9.737781524658203
    10. ' ' → logprob: -9.862781524658203

Token 200: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.23349662125110626
    2. ' ==' → logprob: -1.6084966659545898
    3. '!=' → logprob: -5.48349666595459
    4. ' !=' → logprob: -5.60849666595459
    5. '[:]' → logprob: -8.85849666595459
    6. '=' → logprob: -10.23349666595459
    7. '[' → logprob: -10.35849666595459
    8. ' ' → logprob: -12.35849666595459
    9. '[:' → logprob: -12.98349666595459
    10. ']==' → logprob: -13.35849666595459

Token 201: ' ss' (ID: 20928)
  Prédit: 'ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.0011705794604495168
    2. ' ss' → logprob: -6.751170635223389
    3. '	ss' → logprob: -16.001171112060547
    4. ' ' → logprob: -16.376171112060547
    5. '(ss' → logprob: -16.626171112060547
    6. 'sss' → logprob: -18.251171112060547
    7. 's' → logprob: -18.501171112060547
    8. ':ss' → logprob: -18.751171112060547
    9. '   ' → logprob: -19.376171112060547
    10. '_ss' → logprob: -19.626171112060547

Token 202: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.043052855879068375
    2. ':
' → logprob: -3.168052911758423
    3. ' :' → logprob: -10.293052673339844
    4. ' :
' → logprob: -11.668052673339844
    5. '[' → logprob: -12.918052673339844
    6. ':\' → logprob: -13.168052673339844
    7. ':
' → logprob: -13.293052673339844
    8. ' and' → logprob: -13.918052673339844
    9. 'and' → logprob: -14.168052673339844
    10. '   ' → logprob: -14.543052673339844

Token 203: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1392262876033783
    2. ' print' → logprob: -2.139226198196411
    3. 'print' → logprob: -4.63922643661499
    4. '"' → logprob: -6.51422643661499
    5. '       ' → logprob: -7.51422643661499
    6. '    ' → logprob: -8.889225959777832
    7. '	print' → logprob: -8.889225959777832
    8. ' True' → logprob: -9.139225959777832
    9. '    
' → logprob: -10.139225959777832
    10. ''' → logprob: -10.889225959777832

Token 204: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09004831314086914
    2. 'print' (adapté à ' print') → logprob: -2.840048313140869
    3. ' print' → logprob: -3.590048313140869
    4. '	print' → logprob: -9.590047836303711
    5. '       ' → logprob: -10.715047836303711
    6. ' ' → logprob: -13.590047836303711
    7. '           ' → logprob: -15.090047836303711
    8. '  ' → logprob: -15.340047836303711
    9. '   ' → logprob: -15.465047836303711
    10. '.print' → logprob: -15.590047836303711

Token 205: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.007824399508535862
    2. '"' → logprob: -5.757824420928955
    3. 'Stable' → logprob: -5.882824420928955
    4. ' Stable' → logprob: -6.882824420928955
    5. ' ("' → logprob: -8.007823944091797
    6. '(' → logprob: -8.132823944091797
    7. '('' → logprob: -9.132823944091797
    8. ' "' → logprob: -10.257823944091797
    9. '   ' → logprob: -10.757823944091797
    10. '(True' → logprob: -11.882823944091797

Token 206: 'Stable' (ID: 129551)
  Prédit: 'Stable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stable' → logprob: -9.066919301403686e-05
    2. ' Stable' → logprob: -9.375090599060059
    3. '"' → logprob: -12.625090599060059
    4. ' stable' → logprob: -13.125090599060059
    5. 'Safe' → logprob: -16.125091552734375
    6. 'stable' → logprob: -16.125091552734375
    7. 'True' → logprob: -16.750091552734375
    8. 'St' → logprob: -16.750091552734375
    9. 'Yes' → logprob: -17.000091552734375
    10. ' ' → logprob: -17.750091552734375

Token 207: '")
' (ID: 1896)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0034028785303235054
    2. '")
' → logprob: -6.2534027099609375
    3. '
' → logprob: -7.8784027099609375
    4. ')
' → logprob: -7.8784027099609375
    5. '")' → logprob: -7.8784027099609375
    6. ' else' → logprob: -8.128402709960938
    7. 's' → logprob: -12.003402709960938
    8. '   ' → logprob: -12.503402709960938
    9. 'Else' → logprob: -12.503402709960938
    10. ')' → logprob: -12.628402709960938

Token 208: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.008408784866333008
    2. '   ' → logprob: -5.008408546447754
    3. ' else' → logprob: -6.383408546447754
    4. '	else' → logprob: -13.133408546447754
    5. '  ' → logprob: -15.383408546447754
    6. ' ' → logprob: -15.633408546447754
    7. '_else' → logprob: -16.38340950012207
    8. '<|end|>' → logprob: -16.38340950012207
    9. 'Else' → logprob: -17.63340950012207
    10. '
' → logprob: -17.63340950012207

Token 209: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0015041481237858534
    2. ' else' → logprob: -6.501503944396973
    3. '   ' → logprob: -13.251503944396973
    4. '	else' → logprob: -17.62650489807129
    5. '
' → logprob: -18.87650489807129
    6. ' ' → logprob: -19.12650489807129
    7. '}else' → logprob: -19.62650489807129
    8. '    
' → logprob: -19.75150489807129
    9. 'elif' → logprob: -20.50150489807129
    10. 'Else' → logprob: -20.87650489807129

Token 210: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12237060815095901
    2. ':
' → logprob: -2.372370719909668
    3. '       ' → logprob: -4.122370719909668
    4. '   ' → logprob: -5.247370719909668
    5. ' :
' → logprob: -8.872370719909668
    6. '    ' → logprob: -9.497370719909668
    7. ' :' → logprob: -9.747370719909668
    8. '     ' → logprob: -10.497370719909668
    9. '<|end|>' → logprob: -10.622370719909668
    10. '    
' → logprob: -10.997370719909668

Token 211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3796977698802948
    2. '   ' → logprob: -1.2546977996826172
    3. '"' → logprob: -4.129697799682617
    4. ' print' → logprob: -5.129697799682617
    5. 'print' → logprob: -5.504697799682617
    6. ' Not' → logprob: -6.629697799682617
    7. 'Not' → logprob: -7.004697799682617
    8. ' not' → logprob: -7.379697799682617
    9. '           ' → logprob: -7.629697799682617
    10. '    ' → logprob: -8.129697799682617

Token 212: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.38717323541641235
    2. ' print' → logprob: -1.1371731758117676
    3. '   ' → logprob: -8.512173652648926
    4. '"' → logprob: -9.637173652648926
    5. '       ' → logprob: -10.512173652648926
    6. 'Print' → logprob: -12.512173652648926
    7. '	print' → logprob: -13.762173652648926
    8. '.print' → logprob: -13.887173652648926
    9. '           ' → logprob: -14.637173652648926
    10. ' ' → logprob: -14.637173652648926

Token 213: '("' (ID: 568)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.43908625841140747
    2. '("' → logprob: -1.0640861988067627
    3. '(' → logprob: -4.814086437225342
    4. '()' → logprob: -6.689086437225342
    5. ' ' → logprob: -7.939086437225342
    6. ' ("' → logprob: -8.439085960388184
    7. ''' → logprob: -9.314085960388184
    8. '   ' → logprob: -9.564085960388184
    9. '  ' → logprob: -9.689085960388184
    10. '`' → logprob: -10.314085960388184

Token 214: 'Not' (ID: 2874)
  Prédit: 'Not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Not' → logprob: -0.00023619852436240762
    2. '"' → logprob: -8.750236511230469
    3. 'Un' → logprob: -9.750236511230469
    4. ' Not' → logprob: -11.125236511230469
    5. 'No' → logprob: -13.000236511230469
    6. 'Non' → logprob: -14.375236511230469
    7. '_not' → logprob: -15.000236511230469
    8. ''' → logprob: -15.625236511230469
    9. 'None' → logprob: -15.625236511230469
    10. 'Stable' → logprob: -15.625236511230469

Token 215: ' stable' (ID: 22105)
  Prédit: ' Stable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Stable' → logprob: -0.0005311102140694857
    2. 'Stable' → logprob: -7.750531196594238
    3. ' stable' → logprob: -9.250531196594238
    4. ' St' → logprob: -13.125531196594238
    5. ' Safe' → logprob: -13.750531196594238
    6. ' ' → logprob: -14.125531196594238
    7. ' Stabil' → logprob: -15.125531196594238
    8. ' S' → logprob: -16.125530242919922
    9. ' Balanced' → logprob: -16.625530242919922
    10. '  ' → logprob: -16.625530242919922

Token 216: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0009480224689468741
    2. ')' → logprob: -7.000947952270508
    3. ')")' → logprob: -10.250947952270508
    4. '")
' → logprob: -13.750947952270508
    5. '')' → logprob: -16.500947952270508
    6. '}")' → logprob: -18.000947952270508
    7. ')"' → logprob: -19.375947952270508
    8. '`)' → logprob: -19.375947952270508
    9. '”)' → logprob: -19.500947952270508
    10. '!")' → logprob: -19.500947952270508

Token 217: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00017636561824474484
    2. ' if' → logprob: -9.250176429748535
    3. '
' → logprob: -10.375176429748535
    4. '\n' → logprob: -10.875176429748535
    5. 'main' → logprob: -11.500176429748535
    6. '#' → logprob: -11.625176429748535
    7. '```' → logprob: -12.750176429748535
    8. '\' → logprob: -13.250176429748535
    9. '<|end|>' → logprob: -13.750176429748535
    10. '__' → logprob: -13.875176429748535

Token 218: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.17315608263015747
    2. '__' → logprob: -2.0481560230255127
    3. '_' → logprob: -3.5481560230255127
    4. ' ' → logprob: -6.923156261444092
    5. ' _' → logprob: -9.048155784606934
    6. '_name' → logprob: -9.423155784606934
    7. ' ' → logprob: -11.298155784606934
    8. ' ' → logprob: -11.423155784606934
    9. '___' → logprob: -11.548155784606934
    10. 'name' → logprob: -12.048155784606934

Token 219: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.048714544624090195
    2. ' __' → logprob: -3.0487146377563477
    3. '_' → logprob: -10.173714637756348
    4. ' ==' → logprob: -10.423714637756348
    5. '_name' → logprob: -10.923714637756348
    6. '==' → logprob: -11.673714637756348
    7. '___' → logprob: -11.923714637756348
    8. '.__' → logprob: -12.048714637756348
    9. '__.__' → logprob: -12.048714637756348
    10. '__.' → logprob: -12.548714637756348

Token 220: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.4121114822482923e-06
    2. '__.__' → logprob: -13.125003814697266
    3. '==' → logprob: -14.250003814697266
    4. '__.' → logprob: -15.500003814697266
    5. '_' → logprob: -16.125003814697266
    6. '__
' → logprob: -16.375003814697266
    7. '___' → logprob: -16.375003814697266
    8. ' ==' → logprob: -16.625003814697266
    9. '____' → logprob: -16.750003814697266
    10. ' __' → logprob: -17.750003814697266

Token 221: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.22219650447368622
    2. '==' → logprob: -2.347196578979492
    3. ' ==' → logprob: -2.347196578979492
    4. '=="' → logprob: -4.847196578979492
    5. '=='' → logprob: -9.597196578979492
    6. '___' → logprob: -11.347196578979492
    7. '=' → logprob: -11.972196578979492
    8. '_' → logprob: -12.097196578979492
    9. '.__' → logprob: -12.347196578979492
    10. ' =="' → logprob: -12.347196578979492

Token 222: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4741378426551819
    2. ''' → logprob: -0.9741378426551819
    3. ' "__' → logprob: -10.099138259887695
    4. '__' → logprob: -11.474138259887695
    5. ' '__' → logprob: -11.974138259887695
    6. ' "' → logprob: -13.099138259887695
    7. ' '' → logprob: -15.099138259887695
    8. '"user' → logprob: -15.349138259887695
    9. ''_' → logprob: -16.224138259887695
    10. ''s' → logprob: -16.599138259887695

Token 223: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.1003042608499527
    2. '__' → logprob: -2.350304365158081
    3. '"' → logprob: -10.22530460357666
    4. '_main' → logprob: -10.60030460357666
    5. 'name' → logprob: -10.85030460357666
    6. '___' → logprob: -12.60030460357666
    7. 'built' → logprob: -12.60030460357666
    8. '__":
' → logprob: -12.72530460357666
    9. '__
' → logprob: -13.72530460357666
    10. ' main' → logprob: -13.97530460357666

Token 224: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.2614334225654602
    2. '__' → logprob: -1.5114333629608154
    3. '__.' → logprob: -5.0114336013793945
    4. '__.__' → logprob: -6.2614336013793945
    5. '__["' → logprob: -7.3864336013793945
    6. '__':
' → logprob: -8.761433601379395
    7. '__
' → logprob: -10.136433601379395
    8. '__
' → logprob: -10.511433601379395
    9. '__[' → logprob: -10.886433601379395
    10. '__("' → logprob: -12.011433601379395

Token 225: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.1823219507932663
    2. 'main' → logprob: -1.8073219060897827
    3. '"' → logprob: -7.057322025299072
    4. '__' → logprob: -7.432322025299072
    5. '   ' → logprob: -8.432321548461914
    6. ' __' → logprob: -8.557321548461914
    7. ' ' → logprob: -8.557321548461914
    8. ' run' → logprob: -9.057321548461914
    9. ''' → logprob: -9.307321548461914
    10. '	main' → logprob: -9.307321548461914

Token 226: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.0005558936391025782
    2. ' main' → logprob: -7.500555992126465
    3. '	main' → logprob: -12.875555992126465
    4. '   ' → logprob: -15.250555992126465
    5. ' ' → logprob: -19.87555503845215
    6. '_main' → logprob: -20.00055503845215
    7. '.main' → logprob: -20.62555503845215
    8. '(main' → logprob: -21.00055503845215
    9. '  ' → logprob: -21.25055503845215
    10. '    
' → logprob: -21.87555503845215

Token 227: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 225
Tokens correctement prédits (1ère position, stricte): 112
Tokens correctement prédits (1ère position, avec adaptation): 127
Tokens correctement prédits (top 10): 205
Précision stricte (1ère position): 49.78%
Précision adaptée (1ère position): 56.44%
Précision (top 10): 91.11%
================================================================================
