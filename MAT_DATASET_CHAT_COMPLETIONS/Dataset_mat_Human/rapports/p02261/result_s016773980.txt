================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

class Card:

	def __init__(self, card):
		self.card = card
		self.mark = card[0]
		self.value = int(card[1])

	def __str__(self):
		return self.card

def print_arr(arr):
	for i in range(len(arr)):
		sys.stdout.write(str(arr[i]))
		if i != len(arr) - 1:
			sys.stdout.write(' ')
	print()

def swap(arr, i, j):
	temp = arr[i]
	arr[i] = arr[j]
	arr[j] = temp

def bubble_sort(arr, n):
	swap_count = 0
	for i in range(0, n):
		for j in range(n - 1, i, -1):
			if arr[j].value < arr[j - 1].value:
				swap(arr, j, j - 1)
				swap_count += 1
	return swap_count

def selection_sort(arr, n):
	stable = True
	for i in range(n):
		minj = i
		for j in range(i, n):
			if arr[j].value < arr[minj].value:
				minj = j
		if minj != i:
			for k in range(i + 1, minj):
				if arr[k].value == arr[i].value: stable = False
			swap(arr, i, minj)
	return stable

n = int(input())
arr = list(map(str, input().split()))
cards1 = [None] * n
cards2 = [None] * n
for i in range(n):
	cards1[i] = Card(arr[i])
	cards2[i] = Card(arr[i])

swap_count = bubble_sort(cards1, n)
stable = selection_sort(cards2, n)

print_arr(cards1)
print('Stable')
print_arr(cards2)
if stable == True:
	print('Stable')
else:
	print('Not stable')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'class' (ID: 1444)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0347585454583168
    2. '\n' → logprob: -4.034758567810059
    3. 'import' → logprob: -4.909758567810059
    4. '<|end|>' → logprob: -5.284758567810059
    5. '\' → logprob: -7.159758567810059
    6. '<|end|>' → logprob: -7.534758567810059
    7. 'newline' → logprob: -7.909758567810059
    8. ',' → logprob: -8.159758567810059
    9. '[' → logprob: -8.284758567810059
    10. '' → logprob: -8.284758567810059

Token 4: ' Card' (ID: 9958)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0018424903973937035
    2. ' My' → logprob: -6.751842498779297
    3. '  ' → logprob: -8.001842498779297
    4. ' Space' → logprob: -9.126842498779297
    5. ' System' → logprob: -10.126842498779297
    6. ' ' → logprob: -10.251842498779297
    7. ' A' → logprob: -10.626842498779297
    8. ' C' → logprob: -11.126842498779297
    9. ' User' → logprob: -11.376842498779297
    10. '_' → logprob: -11.376842498779297

Token 5: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026711732149124146
    2. '(' → logprob: -3.6517117023468018
    3. ' :' → logprob: -8.651711463928223
    4. '(:' → logprob: -8.901711463928223
    5. '.' → logprob: -10.651711463928223
    6. '```' → logprob: -10.901711463928223
    7. '{' → logprob: -11.276711463928223
    8. '(C' → logprob: -11.526711463928223
    9. '():' → logprob: -11.776711463928223
    10. 's' → logprob: -12.526711463928223

Token 6: '	def' (ID: 23154)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31561222672462463
    2. '(' → logprob: -1.5656121969223022
    3. '   ' → logprob: -2.940612316131592
    4. '```' → logprob: -5.940612316131592
    5. ' :' → logprob: -6.565612316131592
    6. ''' → logprob: -6.940612316131592
    7. '.' → logprob: -7.065612316131592
    8. ' ' → logprob: -7.065612316131592
    9. '  ' → logprob: -8.315611839294434
    10. '    ' → logprob: -8.565611839294434

Token 7: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00881428923457861
    2. ' init' → logprob: -5.758814334869385
    3. ' ' → logprob: -6.383814334869385
    4. ' _' → logprob: -6.383814334869385
    5. '__' → logprob: -6.508814334869385
    6. '_init' → logprob: -8.258813858032227
    7. 'init' → logprob: -8.383813858032227
    8. '_' → logprob: -8.883813858032227
    9. ' def' → logprob: -10.383813858032227
    10. ' ```' → logprob: -10.383813858032227

Token 8: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.7432603272027336e-06
    2. ' init' → logprob: -13.500001907348633
    3. '	init' → logprob: -16.000001907348633
    4. '_init' → logprob: -16.500001907348633
    5. 'ini' → logprob: -18.125001907348633
    6. 'inite' → logprob: -20.000001907348633
    7. 'new' → logprob: -20.375001907348633
    8. 'int' → logprob: -20.500001907348633
    9. 'in' → logprob: -20.625001907348633
    10. '_' → logprob: -21.125001907348633

Token 9: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.47451063990592957
    2. '__(' → logprob: -0.974510669708252
    3. '__(
' → logprob: -8.349510192871094
    4. '__('' → logprob: -9.474510192871094
    5. '_' → logprob: -9.724510192871094
    6. '__((' → logprob: -10.224510192871094
    7. '__.__' → logprob: -11.724510192871094
    8. '___' → logprob: -12.224510192871094
    9. '__("' → logprob: -12.349510192871094
    10. '__(*' → logprob: -12.849510192871094

Token 10: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.160971628967673e-05
    2. ' self' → logprob: -9.500082015991211
    3. '	self' → logprob: -12.000082015991211
    4. '(self' → logprob: -15.375082015991211
    5. ')' → logprob: -15.750082015991211
    6. ',self' → logprob: -16.75008201599121
    7. ' ' → logprob: -17.12508201599121
    8. '0' → logprob: -17.25008201599121
    9. '_self' → logprob: -17.25008201599121
    10. '[self' → logprob: -18.37508201599121

Token 11: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6433744430541992
    2. ',' → logprob: -1.0183744430541992
    3. 'self' → logprob: -3.018374443054199
    4. '<|end|>' → logprob: -3.518374443054199
    5. '(self' → logprob: -4.768374443054199
    6. ' ,' → logprob: -4.893374443054199
    7. ' )' → logprob: -5.143374443054199
    8. ' self' → logprob: -5.518374443054199
    9. ' ' → logprob: -5.768374443054199
    10. '(' → logprob: -6.393374443054199

Token 12: ' card' (ID: 4766)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.18108579516410828
    2. ' self' → logprob: -1.8060858249664307
    3. 's' → logprob: -7.056085586547852
    4. ' suit' → logprob: -8.556085586547852
    5. 'rank' → logprob: -9.056085586547852
    6. ' rank' → logprob: -9.431085586547852
    7. '	self' → logprob: -9.806085586547852
    8. 'number' → logprob: -11.056085586547852
    9. 'suite' → logprob: -12.181085586547852
    10. ' number' → logprob: -13.056085586547852

Token 13: '):
' (ID: 1883)
  Prédit: '_type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -0.49754098057746887
    2. '_name' → logprob: -1.9975409507751465
    3. '):' → logprob: -2.2475409507751465
    4. ')' → logprob: -2.8725409507751465
    5. '_' → logprob: -2.8725409507751465
    6. '):
' → logprob: -4.6225409507751465
    7. '_number' → logprob: -4.9975409507751465
    8. 's' → logprob: -5.7475409507751465
    9. ' _' → logprob: -5.8725409507751465
    10. ',' → logprob: -6.2475409507751465

Token 14: '	' (ID: 197)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8295372128486633
    2. '	' → logprob: -1.0795371532440186
    3. 'self' → logprob: -2.2045371532440186
    4. ' ' → logprob: -3.9545371532440186
    5. '        ' → logprob: -4.329537391662598
    6. '.' → logprob: -4.454537391662598
    7. '   ' → logprob: -4.579537391662598
    8. '(' → logprob: -4.829537391662598
    9. '    ' → logprob: -4.829537391662598
    10. '		' → logprob: -5.079537391662598

Token 15: '	self' (ID: 11576)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.083140254020691
    2. '	' → logprob: -1.458140254020691
    3. '.' → logprob: -1.708140254020691
    4. '       ' → logprob: -1.958140254020691
    5. '   ' → logprob: -4.3331403732299805
    6. ')' → logprob: -4.4581403732299805
    7. 'card' → logprob: -4.7081403732299805
    8. '_' → logprob: -4.9581403732299805
    9. '(card' → logprob: -4.9581403732299805
    10. '		' → logprob: -5.0831403732299805

Token 16: '.card' (ID: 41809)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.014592872001230717
    2. '.card' → logprob: -4.26459264755249
    3. '._' → logprob: -8.264593124389648
    4. ' .' → logprob: -10.139593124389648
    5. '.cards' → logprob: -10.514593124389648
    6. '_card' → logprob: -10.639593124389648
    7. '.value' → logprob: -11.139593124389648
    8. '_' → logprob: -11.639593124389648
    9. '.code' → logprob: -11.764593124389648
    10. '.name' → logprob: -12.139593124389648

Token 17: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12792374193668365
    2. '.' → logprob: -2.3779237270355225
    3. ' =' → logprob: -3.6279237270355225
    4. '<|end|>' → logprob: -8.502923965454102
    5. '.=' → logprob: -8.877923965454102
    6. '[' → logprob: -9.252923965454102
    7. '_' → logprob: -9.627923965454102
    8. ')' → logprob: -9.752923965454102
    9. '<|end|>' → logprob: -10.252923965454102
    10. ',' → logprob: -10.377923965454102

Token 18: ' card' (ID: 4766)
  Prédit: ' card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' card' → logprob: -0.28148362040519714
    2. 'card' → logprob: -1.4064836502075195
    3. '	card' → logprob: -8.03148365020752
    4. '(card' → logprob: -12.40648365020752
    5. ' ' → logprob: -13.65648365020752
    6. '_card' → logprob: -13.78148365020752
    7. '.card' → logprob: -14.28148365020752
    8. 'Card' → logprob: -14.65648365020752
    9. ' ' → logprob: -15.53148365020752
    10. ' 카드' → logprob: -16.281482696533203

Token 19: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.13024064898490906
    2. '<|end|>' → logprob: -3.0052406787872314
    3. ' ' → logprob: -4.255240440368652
    4. '_' → logprob: -4.380240440368652
    5. '[' → logprob: -4.630240440368652
    6. ':' → logprob: -4.880240440368652
    7. '	' → logprob: -5.005240440368652
    8. '\' → logprob: -5.130240440368652
    9. '   ' → logprob: -5.880240440368652
    10. '
' → logprob: -6.130240440368652

Token 20: '	' (ID: 197)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2793816924095154
    2. '<|end|>' → logprob: -1.7793817520141602
    3. '_' → logprob: -3.27938175201416
    4. '[' → logprob: -4.40438175201416
    5. '<|end|>' → logprob: -5.15438175201416
    6. '	def' → logprob: -5.52938175201416
    7. ' ' → logprob: -5.65438175201416
    8. 'def' → logprob: -5.65438175201416
    9. ':' → logprob: -6.02938175201416
    10. '	' → logprob: -6.77938175201416

Token 21: '	self' (ID: 11576)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9427206516265869
    2. '<|end|>' → logprob: -1.067720651626587
    3. 'def' → logprob: -2.442720651626587
    4. ' ' → logprob: -2.692720651626587
    5. '_' → logprob: -3.317720651626587
    6. ' def' → logprob: -4.192720413208008
    7. '	' → logprob: -4.192720413208008
    8. '	def' → logprob: -4.692720413208008
    9. ')' → logprob: -4.817720413208008
    10. '<|end|>' → logprob: -4.817720413208008

Token 22: '.mark' (ID: 32834)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.027448609471321106
    2. '.value' → logprob: -4.027448654174805
    3. '.rank' → logprob: -5.652448654174805
    4. '.s' → logprob: -6.152448654174805
    5. '.card' → logprob: -6.652448654174805
    6. '._' → logprob: -7.277448654174805
    7. '.type' → logprob: -7.777448654174805
    8. '.cards' → logprob: -8.652448654174805
    9. '.color' → logprob: -8.777448654174805
    10. '_value' → logprob: -9.277448654174805

Token 23: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 24: ' card' (ID: 4766)
  Prédit: ' card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' card' → logprob: -0.14975792169570923
    2. 'card' → logprob: -2.0247578620910645
    3. ' self' → logprob: -5.6497578620910645
    4. 'self' → logprob: -6.5247578620910645
    5. '	card' → logprob: -6.6497578620910645
    6. ''' → logprob: -8.399758338928223
    7. ' '' → logprob: -8.524758338928223
    8. ' None' → logprob: -8.899758338928223
    9. '"' → logprob: -9.274758338928223
    10. ' ' → logprob: -9.899758338928223

Token 25: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10123731195926666
    2. '.' → logprob: -2.3512372970581055
    3. '[-' → logprob: -7.4762372970581055
    4. '.split' → logprob: -9.351237297058105
    5. '[:]' → logprob: -9.476237297058105
    6. '[
' → logprob: -9.851237297058105
    7. '['' → logprob: -9.976237297058105
    8. '[len' → logprob: -10.726237297058105
    9. '.[' → logprob: -10.976237297058105
    10. '[:' → logprob: -11.476237297058105

Token 26: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012323977425694466
    2. '1' → logprob: -4.88732385635376
    3. ':' → logprob: -5.88732385635376
    4. ' ' → logprob: -6.76232385635376
    5. '-' → logprob: -7.38732385635376
    6. ' :' → logprob: -9.262324333190918
    7. ' -' → logprob: -10.887324333190918
    8. ':-' → logprob: -10.887324333190918
    9. ':
' → logprob: -11.637324333190918
    10. '2' → logprob: -12.262324333190918

Token 27: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.615255839889869e-05
    2. ' ]' → logprob: -9.375096321105957
    3. ']
' → logprob: -11.875096321105957
    4. '[' → logprob: -13.500096321105957
    5. '']' → logprob: -13.875096321105957
    6. ':]' → logprob: -15.250096321105957
    7. '	' → logprob: -15.250096321105957
    8. ')' → logprob: -15.500096321105957
    9. '`]' → logprob: -15.625096321105957
    10. '<|end|>' → logprob: -15.625096321105957

Token 28: '	' (ID: 197)
  Prédit: '	'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.028675856068730354
    2. '	self' → logprob: -4.0286760330200195
    3. '[' → logprob: -5.1536760330200195
    4. 's' → logprob: -6.9036760330200195
    5. '<|end|>' → logprob: -7.0286760330200195
    6. '       ' → logprob: -7.5286760330200195
    7. 'self' → logprob: -7.6536760330200195
    8. '	s' → logprob: -8.02867603302002
    9. ' ' → logprob: -8.15367603302002
    10. 'e' → logprob: -8.40367603302002

Token 29: '	self' (ID: 11576)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.3479301929473877
    2. '	self' → logprob: -1.4729301929473877
    3. 'self' → logprob: -2.9729301929473877
    4. ' self' → logprob: -4.597929954528809
    5. 'elf' → logprob: -6.097929954528809
    6. 's' → logprob: -8.097929954528809
    7. '[' → logprob: -9.347929954528809
    8. '		' → logprob: -9.472929954528809
    9. '	s' → logprob: -9.722929954528809
    10. '       ' → logprob: -9.722929954528809

Token 30: '.value' (ID: 4683)
  Prédit: '.rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -0.5818445086479187
    2. '.value' → logprob: -1.0818445682525635
    3. 'value' → logprob: -3.0818445682525635
    4. 'rank' → logprob: -3.3318445682525635
    5. '[' → logprob: -5.081844329833984
    6. '.' → logprob: -5.206844329833984
    7. '_rank' → logprob: -6.081844329833984
    8. 'ank' → logprob: -6.081844329833984
    9. '_value' → logprob: -6.581844329833984
    10. '.val' → logprob: -6.831844329833984

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.049188803881406784
    2. '=' → logprob: -3.0491888523101807
    3. ' ' → logprob: -7.924188613891602
    4. '_' → logprob: -9.174188613891602
    5. 's' → logprob: -9.674188613891602
    6. '<|end|>' → logprob: -10.049188613891602
    7. '[' → logprob: -11.424188613891602
    8. '<|end|>' → logprob: -11.924188613891602
    9. ')' → logprob: -13.049188613891602
    10. ',' → logprob: -13.174188613891602

Token 32: ' int' (ID: 677)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.6593890190124512
    2. ' card' → logprob: -0.7843890190124512
    3. 'int' → logprob: -4.159389019012451
    4. ' int' → logprob: -4.534389019012451
    5. '	card' → logprob: -10.03438949584961
    6. ' ' → logprob: -10.53438949584961
    7. '(card' → logprob: -11.90938949584961
    8. '	int' → logprob: -14.28438949584961
    9. '.card' → logprob: -14.40938949584961
    10. 'Card' → logprob: -14.40938949584961

Token 33: '(card' (ID: 51112)
  Prédit: '(card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(card' → logprob: -0.0024779161904007196
    2. '(' → logprob: -6.002478122711182
    3. '(cards' → logprob: -13.627477645874023
    4. '(Card' → logprob: -15.127477645874023
    5. '	card' → logprob: -15.252477645874023
    6. 'card' → logprob: -15.252477645874023
    7. ' (' → logprob: -15.877477645874023
    8. ' card' → logprob: -16.752477645874023
    9. '(code' → logprob: -17.377477645874023
    10. '(
' → logprob: -17.377477645874023

Token 34: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -14.625000953674316
    3. ' [' → logprob: -15.000000953674316
    4. '1' → logprob: -16.000001907348633
    5. '[
' → logprob: -16.125001907348633
    6. ')' → logprob: -17.000001907348633
    7. '```' → logprob: -17.000001907348633
    8. '	' → logprob: -17.750001907348633
    9. '[-' → logprob: -18.625001907348633
    10. '()[' → logprob: -19.000001907348633

Token 35: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006145051447674632
    2. '2' → logprob: -8.000614166259766
    3. ' ' → logprob: -8.250614166259766
    4. ':' → logprob: -12.500614166259766
    5. '	' → logprob: -12.750614166259766
    6. '```' → logprob: -13.000614166259766
    7. '[' → logprob: -13.063114166259766
    8. '(' → logprob: -13.375614166259766
    9. '   ' → logprob: -14.000614166259766
    10. '１' → logprob: -14.188114166259766

Token 36: '])

' (ID: 21045)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.049073491245508194
    2. '])' → logprob: -3.0490734577178955
    3. ']' → logprob: -8.174073219299316
    4. ':]' → logprob: -9.424073219299316
    5. ' :' → logprob: -9.799073219299316
    6. ':])
' → logprob: -10.424073219299316
    7. ' ])' → logprob: -11.049073219299316
    8. ':],' → logprob: -11.674073219299316
    9. ':].' → logprob: -12.799073219299316
    10. '-' → logprob: -12.924073219299316

Token 37: '	def' (ID: 23154)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: ' __' (ID: 2516)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6472805142402649
    2. ' get' → logprob: -2.02228045463562
    3. ' ' → logprob: -2.27228045463562
    4. ' is' → logprob: -2.39728045463562
    5. ' __' → logprob: -2.89728045463562
    6. ' _' → logprob: -3.39728045463562
    7. '__' → logprob: -3.89728045463562
    8. ' def' → logprob: -4.772280693054199
    9. 'get' → logprob: -5.147280693054199
    10. ' compare' → logprob: -5.272280693054199

Token 39: 'str' (ID: 689)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.219720259308815
    2. 'str' → logprob: -1.8447202444076538
    3. 'lt' → logprob: -4.094720363616943
    4. 'repr' → logprob: -4.594720363616943
    5. 'init' → logprob: -4.969720363616943
    6. 'i' → logprob: -6.094720363616943
    7. 's' → logprob: -6.344720363616943
    8. 'e' → logprob: -6.969720363616943
    9. 'r' → logprob: -8.969719886779785
    10. 'l' → logprob: -9.594719886779785

Token 40: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.387302428483963
    2. '__' → logprob: -1.1373023986816406
    3. '(' → logprob: -8.51230239868164
    4. '__(
' → logprob: -9.01230239868164
    5. '__('' → logprob: -10.13730239868164
    6. '___' → logprob: -10.76230239868164
    7. '(self' → logprob: -10.76230239868164
    8. '__((' → logprob: -11.38730239868164
    9. '__("' → logprob: -12.38730239868164
    10. '__(*' → logprob: -12.76230239868164

Token 41: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.6166903151315637e-05
    2. ')' → logprob: -11.125016212463379
    3. '	self' → logprob: -14.000016212463379
    4. ' self' → logprob: -14.750016212463379
    5. '(self' → logprob: -16.375015258789062
    6. 'elf' → logprob: -17.625015258789062
    7. '_self' → logprob: -18.500015258789062
    8. 'sel' → logprob: -18.625015258789062
    9. '),' → logprob: -18.750015258789062
    10. '
' → logprob: -18.875015258789062

Token 42: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.565159261226654
    2. ')' → logprob: -0.940159261226654
    3. 'self' → logprob: -3.940159320831299
    4. ',' → logprob: -3.940159320831299
    5. '	self' → logprob: -7.190159320831299
    6. '):
' → logprob: -7.315159320831299
    7. '(self' → logprob: -8.44015884399414
    8. ',self' → logprob: -8.81515884399414
    9. ')return' → logprob: -9.44015884399414
    10. '	' → logprob: -9.44015884399414

Token 43: '	' (ID: 197)
  Prédit: '	'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.00046975704026408494
    2. '       ' → logprob: -7.87546968460083
    3. ' return' → logprob: -10.500470161437988
    4. '		' → logprob: -11.000470161437988
    5. ' 	' → logprob: -11.000470161437988
    6. 'return' → logprob: -11.250470161437988
    7. '   ' → logprob: -11.750470161437988
    8. '	return' → logprob: -12.625470161437988
    9. ' ' → logprob: -13.875470161437988
    10. '	   ' → logprob: -13.875470161437988

Token 44: '	return' (ID: 1393)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.0051162270829081535
    2. 'return' → logprob: -5.5051164627075195
    3. ' return' → logprob: -7.2551164627075195
    4. '       ' → logprob: -8.63011646270752
    5. '		' → logprob: -9.75511646270752
    6. '	return' → logprob: -10.00511646270752
    7. '   ' → logprob: -10.38011646270752
    8. ' 	' → logprob: -12.13011646270752
    9. '	   ' → logprob: -13.00511646270752
    10. ' ' → logprob: -13.13011646270752

Token 45: ' self' (ID: 1051)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.30152010917663574
    2. ' self' → logprob: -1.6765201091766357
    3. 'f' → logprob: -3.0515201091766357
    4. 'self' → logprob: -3.6765201091766357
    5. ' ' → logprob: -8.676520347595215
    6. ' str' → logprob: -8.676520347595215
    7. '"' → logprob: -8.676520347595215
    8. ' ' → logprob: -10.051520347595215
    9. ' "{}' → logprob: -10.426520347595215
    10. '	self' → logprob: -10.551520347595215

Token 46: '.card' (ID: 41809)
  Prédit: '.card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.card' → logprob: -0.10863382369279861
    2. '.' → logprob: -2.7336337566375732
    3. ' .' → logprob: -3.6086337566375732
    4. '.__' → logprob: -6.108633995056152
    5. '	' → logprob: -6.233633995056152
    6. '	card' → logprob: -6.608633995056152
    7. ' ' → logprob: -6.858633995056152
    8. '	self' → logprob: -7.233633995056152
    9. 'self' → logprob: -7.358633995056152
    10. '.str' → logprob: -7.733633995056152

Token 47: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 48: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: ' print' (ID: 2123)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.030816372483968735
    2. ' solve' → logprob: -4.155816555023193
    3. ' deal' → logprob: -5.655816555023193
    4. ' sort' → logprob: -6.405816555023193
    5. ' calculate' → logprob: -6.405816555023193
    6. ' parse' → logprob: -6.530816555023193
    7. ' split' → logprob: -7.030816555023193
    8. ' check' → logprob: -7.155816555023193
    9. ' process' → logprob: -7.155816555023193
    10. ' play' → logprob: -7.655816555023193

Token 50: '_arr' (ID: 25121)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008492941851727664
    2. '_cards' → logprob: -8.000849723815918
    3. '_card' → logprob: -9.250849723815918
    4. '_' → logprob: -9.375849723815918
    5. '("("' → logprob: -9.375849723815918
    6. '('' → logprob: -9.750849723815918
    7. '("' → logprob: -10.375849723815918
    8. '(card' → logprob: -10.875849723815918
    9. '(Card' → logprob: -11.000849723815918
    10. '(_' → logprob: -11.125849723815918

Token 51: '(arr' (ID: 19646)
  Prédit: 'ay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ay' → logprob: -0.013757008127868176
    2. '(' → logprob: -4.388757228851318
    3. 'ays' → logprob: -7.388757228851318
    4. '(arr' → logprob: -8.01375675201416
    5. '(a' → logprob: -8.51375675201416
    6. '(array' → logprob: -10.38875675201416
    7. '```' → logprob: -10.76375675201416
    8. ' ay' → logprob: -12.13875675201416
    9. '()' → logprob: -12.26375675201416
    10. 'ayout' → logprob: -12.51375675201416

Token 52: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016158826649188995
    2. ')' → logprob: -4.1411590576171875
    3. ':' → logprob: -10.266159057617188
    4. '[' → logprob: -10.516159057617188
    5. '(arr' → logprob: -11.141159057617188
    6. ',' → logprob: -11.391159057617188
    7. '(' → logprob: -11.391159057617188
    8. '[]):' → logprob: -11.891159057617188
    9. '):
' → logprob: -12.141159057617188
    10. ' ):' → logprob: -12.516159057617188

Token 53: '	for' (ID: 3903)
  Prédit: '	for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	for' → logprob: -1.0762488842010498
    2. '	arr' → logprob: -1.0762488842010498
    3. '(arr' → logprob: -1.5762488842010498
    4. '	print' → logprob: -2.57624888420105
    5. '(' → logprob: -3.82624888420105
    6. '   ' → logprob: -5.576249122619629
    7. '	def' → logprob: -5.826249122619629
    8. '	' → logprob: -6.576249122619629
    9. ' for' → logprob: -6.826249122619629
    10. '	return' → logprob: -7.076249122619629

Token 54: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.24665682017803192
    2. ' item' → logprob: -1.7466567754745483
    3. ' ' → logprob: -3.996656894683838
    4. ' element' → logprob: -4.871656894683838
    5. ' x' → logprob: -5.246656894683838
    6. ' elem' → logprob: -5.496656894683838
    7. ' val' → logprob: -6.246656894683838
    8. 'i' → logprob: -6.496656894683838
    9. ' card' → logprob: -6.746656894683838
    10. ' e' → logprob: -6.871656894683838

Token 55: ' in' (ID: 306)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.46454501152038574
    2. ' in' → logprob: -1.2145450115203857
    3. 'in' → logprob: -2.7145450115203857
    4. '	in' → logprob: -5.339545249938965
    5. ' ' → logprob: -6.464545249938965
    6. ' n' → logprob: -6.714545249938965
    7. '	n' → logprob: -7.839545249938965
    8. '	' → logprob: -8.839545249938965
    9. ',' → logprob: -9.339545249938965
    10. 'nt' → logprob: -9.464545249938965

Token 56: ' range' (ID: 3352)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.6215553879737854
    2. 'range' → logprob: -0.9965553879737854
    3. ' range' → logprob: -2.6215553283691406
    4. ' arr' → logprob: -3.8715553283691406
    5. '	arr' → logprob: -8.62155532836914
    6. '	range' → logprob: -11.12155532836914
    7. '(arr' → logprob: -11.24655532836914
    8. ' ' → logprob: -12.62155532836914
    9. '```' → logprob: -12.99655532836914
    10. '<arr' → logprob: -13.37155532836914

Token 57: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0031907858792692423
    2. '(' → logprob: -5.753190994262695
    3. ' (' → logprob: -11.628190994262695
    4. 'len' → logprob: -13.128190994262695
    5. ' len' → logprob: -13.628190994262695
    6. '	len' → logprob: -14.378190994262695
    7. '	' → logprob: -16.003190994262695
    8. '(length' → logprob: -16.253190994262695
    9. '(l' → logprob: -16.378190994262695
    10. '<len' → logprob: -16.753190994262695

Token 58: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -4.704065213445574e-05
    2. '(' → logprob: -10.000046730041504
    3. ' (' → logprob: -14.125046730041504
    4. 'arr' → logprob: -15.125046730041504
    5. '	arr' → logprob: -15.750046730041504
    6. ')' → logprob: -16.25004768371582
    7. '(array' → logprob: -16.37504768371582
    8. '<arr' → logprob: -16.37504768371582
    9. '[arr' → logprob: -17.87504768371582
    10. '(
' → logprob: -18.12504768371582

Token 59: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.5778663754463196
    2. '):' → logprob: -0.8278663754463196
    3. '))' → logprob: -6.952866554260254
    4. ' ):' → logprob: -7.577866554260254
    5. ')):
' → logprob: -8.702866554260254
    6. ')' → logprob: -9.327866554260254
    7. '	' → logprob: -9.827866554260254
    8. '):
' → logprob: -10.077866554260254
    9. ']):' → logprob: -10.827866554260254
    10. ':' → logprob: -10.827866554260254

Token 60: '	' (ID: 197)
  Prédit: '	print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	print' → logprob: -0.6303256750106812
    2. '	' → logprob: -0.8803256750106812
    3. ':' → logprob: -3.3803257942199707
    4. ' print' → logprob: -5.380325794219971
    5. '   ' → logprob: -5.505325794219971
    6. '	   ' → logprob: -6.755325794219971
    7. '		' → logprob: -7.005325794219971
    8. '	
' → logprob: -7.005325794219971
    9. '       ' → logprob: -7.130325794219971
    10. ' 	' → logprob: -7.255325794219971

Token 61: '	sys' (ID: 97746)
  Prédit: '	print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	print' → logprob: -0.440369576215744
    2. ' print' → logprob: -1.0653696060180664
    3. 'print' → logprob: -5.065369606018066
    4. '	' → logprob: -5.315369606018066
    5. '   ' → logprob: -8.440369606018066
    6. '	pr' → logprob: -9.565369606018066
    7. '```' → logprob: -11.065369606018066
    8. ' ' → logprob: -11.065369606018066
    9. '	if' → logprob: -11.690369606018066
    10. '	sys' → logprob: -12.065369606018066

Token 62: '.stdout' (ID: 59462)
  Prédit: '.stdout'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdout' → logprob: -8.208653162000701e-05
    2. '.' → logprob: -10.375082015991211
    3. '.stderr' → logprob: -10.500082015991211
    4. '.print' → logprob: -11.750082015991211
    5. '.out' → logprob: -12.125082015991211
    6. '.stdin' → logprob: -12.250082015991211
    7. '.exit' → logprob: -13.625082015991211
    8. '.setdefault' → logprob: -13.875082015991211
    9. '.argv' → logprob: -14.000082015991211
    10. '.write' → logprob: -14.125082015991211

Token 63: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -2.3915141355246305e-05
    2. '.' → logprob: -10.87502384185791
    3. 'write' → logprob: -12.62502384185791
    4. '	write' → logprob: -14.37502384185791
    5. '.print' → logprob: -15.00002384185791
    6. '.w' → logprob: -15.25002384185791
    7. '	' → logprob: -15.62502384185791
    8. ' .' → logprob: -16.125024795532227
    9. '.flush' → logprob: -16.125024795532227
    10. '.Write' → logprob: -17.000024795532227

Token 64: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.10074228048324585
    2. '(arr' → logprob: -2.3507423400878906
    3. 'arr' → logprob: -8.47574234008789
    4. '(' → logprob: -8.85074234008789
    5. 'str' → logprob: -8.85074234008789
    6. '(f' → logprob: -10.47574234008789
    7. '	str' → logprob: -11.85074234008789
    8. '	arr' → logprob: -12.97574234008789
    9. ' str' → logprob: -14.22574234008789
    10. ' arr' → logprob: -14.35074234008789

Token 65: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -6.392202976712724e-06
    2. '(' → logprob: -12.375006675720215
    3. 'arr' → logprob: -13.500006675720215
    4. '	arr' → logprob: -14.750006675720215
    5. '[arr' → logprob: -15.375006675720215
    6. '<arr' → logprob: -17.3750057220459
    7. ' (' → logprob: -17.5000057220459
    8. ' arr' → logprob: -17.7500057220459
    9. '$arr' → logprob: -18.5000057220459
    10. '_arr' → logprob: -18.6250057220459

Token 66: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000491076149046421
    2. '[' → logprob: -7.625491142272949
    3. ')[' → logprob: -13.50049114227295
    4. ')' → logprob: -13.62549114227295
    5. ' [' → logprob: -15.25049114227295
    6. '[
' → logprob: -16.875490188598633
    7. '[I' → logprob: -17.750490188598633
    8. '[j' → logprob: -18.000490188598633
    9. ')i' → logprob: -18.375490188598633
    10. '```' → logprob: -18.375490188598633

Token 67: ']))
' (ID: 24801)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49206188321113586
    2. '))' → logprob: -0.9920618534088135
    3. ')))' → logprob: -4.492062091827393
    4. ')+' → logprob: -5.742062091827393
    5. '())' → logprob: -6.867062091827393
    6. '])' → logprob: -7.617062091827393
    7. '))+' → logprob: -7.867062091827393
    8. ' )' → logprob: -7.992062091827393
    9. ']))' → logprob: -8.117061614990234
    10. '()))' → logprob: -8.367061614990234

Token 68: '	' (ID: 197)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.4073878526687622
    2. '	' → logprob: -1.5323878526687622
    3. '+' → logprob: -1.6573878526687622
    4. '\n' → logprob: -2.0323877334594727
    5. '	sys' → logprob: -2.9073877334594727
    6. ''' → logprob: -3.2823877334594727
    7. 'sys' → logprob: -4.032387733459473
    8. ''\' → logprob: -4.407387733459473
    9. 'if' → logprob: -4.407387733459473
    10. ' ' → logprob: -4.532387733459473

Token 69: '	if' (ID: 1224)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3204158544540405
    2. '	if' → logprob: -2.44541597366333
    3. '	sys' → logprob: -2.94541597366333
    4. 'sys' → logprob: -3.07041597366333
    5. '	' → logprob: -3.07041597366333
    6. ' if' → logprob: -3.69541597366333
    7. ' ' → logprob: -5.07041597366333
    8. '	
' → logprob: -6.07041597366333
    9. '<|end|>' → logprob: -6.32041597366333
    10. ' sys' → logprob: -7.32041597366333

Token 70: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3138563334941864
    2. 'i' → logprob: -1.3138563632965088
    3. '	i' → logprob: -7.56385612487793
    4. '(i' → logprob: -9.68885612487793
    5. ' ' → logprob: -11.31385612487793
    6. ' ' → logprob: -14.93885612487793
    7. '	' → logprob: -15.18885612487793
    8. '  ' → logprob: -15.18885612487793
    9. '(' → logprob: -15.56385612487793
    10. ' (' → logprob: -15.68885612487793

Token 71: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5351758003234863
    2. ' !=' → logprob: -1.2851758003234863
    3. '<' → logprob: -2.0351758003234863
    4. ' <' → logprob: -5.535175800323486
    5. '<len' → logprob: -6.410175800323486
    6. '<|end|>' → logprob: -7.785175800323486
    7. '<int' → logprob: -8.410175323486328
    8. '	' → logprob: -8.535175323486328
    9. '!=(' → logprob: -8.535175323486328
    10. ' ' → logprob: -9.285175323486328

Token 72: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.57634037733078
    2. ' len' → logprob: -0.82634037733078
    3. '	len' → logprob: -7.826340198516846
    4. '(len' → logprob: -13.701340675354004
    5. '<len' → logprob: -15.576340675354004
    6. ' ' → logprob: -15.826340675354004
    7. '	' → logprob: -16.201339721679688
    8. '=len' → logprob: -16.326339721679688
    9. '[len' → logprob: -16.576339721679688
    10. '		' → logprob: -17.326339721679688

Token 73: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -1.0921942703134846e-05
    2. '-' → logprob: -11.75001049041748
    3. 'arr' → logprob: -13.37501049041748
    4. '	arr' → logprob: -13.75001049041748
    5. '<arr' → logprob: -16.000011444091797
    6. '(' → logprob: -16.375011444091797
    7. '-arr' → logprob: -17.375011444091797
    8. ' -' → logprob: -17.625011444091797
    9. '[arr' → logprob: -18.375011444091797
    10. '	' → logprob: -18.875011444091797

Token 74: ')' (ID: 8)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005612930748611689
    2. ' -' → logprob: -6.005612850189209
    3. 'arr' → logprob: -6.880612850189209
    4. ')' → logprob: -6.880612850189209
    5. ')-' → logprob: -7.630612850189209
    6. '-arr' → logprob: -8.755613327026367
    7. '	arr' → logprob: -8.880613327026367
    8. '(arr' → logprob: -9.130613327026367
    9. '	' → logprob: -9.380613327026367
    10. '()-' → logprob: -10.505613327026367

Token 75: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0036139667499810457
    2. ' -' → logprob: -5.6286139488220215
    3. '()-' → logprob: -11.87861442565918
    4. '	' → logprob: -12.37861442565918
    5. ' ' → logprob: -14.12861442565918
    6. '<|end|>' → logprob: -14.25361442565918
    7. '1' → logprob: -14.87861442565918
    8. '−' → logprob: -15.25361442565918
    9. '–' → logprob: -15.50361442565918
    10. '```' → logprob: -15.62861442565918

Token 76: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007648272439837456
    2. ' ' → logprob: -4.882648468017578
    3. '	' → logprob: -10.132648468017578
    4. '１' → logprob: -14.007648468017578
    5. '   ' → logprob: -14.632648468017578
    6. ' ' → logprob: -15.257648468017578
    7. '<|end|>' → logprob: -15.507648468017578
    8. '  ' → logprob: -15.632648468017578
    9. '```' → logprob: -15.882648468017578
    10. '		' → logprob: -16.382648468017578

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007119550718925893
    2. ' ' → logprob: -7.250711917877197
    3. '	' → logprob: -13.750712394714355
    4. '<|end|>' → logprob: -15.125712394714355
    5. '```' → logprob: -15.125712394714355
    6. '１' → logprob: -16.00071144104004
    7. '  ' → logprob: -16.12571144104004
    8. '   ' → logprob: -16.62571144104004
    9. ' ' → logprob: -17.37571144104004
    10. '-' → logprob: -17.75071144104004

Token 78: ':
' (ID: 734)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.5728976130485535
    2. '		' → logprob: -0.9478976130485535
    3. ':' → logprob: -3.3228976726531982
    4. '<|end|>' → logprob: -5.947897434234619
    5. ':
' → logprob: -6.197897434234619
    6. '			' → logprob: -7.072897434234619
    7. ' ' → logprob: -7.322897434234619
    8. ' ' → logprob: -7.447897434234619
    9. '<|end|>' → logprob: -7.947897434234619
    10. ' 	' → logprob: -7.947897434234619

Token 79: '		' (ID: 335)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.5004721283912659
    2. '		' → logprob: -1.000472068786621
    3. '	sys' → logprob: -4.750472068786621
    4. ' sys' → logprob: -5.250472068786621
    5. 'sys' → logprob: -5.750472068786621
    6. ' ' → logprob: -6.250472068786621
    7. '	 ' → logprob: -6.750472068786621
    8. '	       ' → logprob: -7.125472068786621
    9. '<|end|>' → logprob: -7.375472068786621
    10. ' 	' → logprob: -7.500472068786621

Token 80: '	sys' (ID: 97746)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1628605127334595
    2. ' sys' → logprob: -1.5378605127334595
    3. '	' → logprob: -1.7878605127334595
    4. 'sys' → logprob: -1.9128605127334595
    5. '	 ' → logprob: -2.91286039352417
    6. '		' → logprob: -3.16286039352417
    7. '	sys' → logprob: -3.78786039352417
    8. 'print' → logprob: -4.53786039352417
    9. ''' → logprob: -4.78786039352417
    10. ' 	' → logprob: -5.53786039352417

Token 81: '.stdout' (ID: 59462)
  Prédit: '.stdout'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdout' → logprob: -0.00013977376511320472
    2. 'stdout' → logprob: -9.125140190124512
    3. '.write' → logprob: -11.750140190124512
    4. '_stdout' → logprob: -11.750140190124512
    5. '.out' → logprob: -12.125140190124512
    6. '.stderr' → logprob: -12.625140190124512
    7. '.stdin' → logprob: -13.250140190124512
    8. '.sys' → logprob: -13.375140190124512
    9. 'out' → logprob: -13.750140190124512
    10. '.' → logprob: -15.000140190124512

Token 82: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -0.0004926258116029203
    2. 'write' → logprob: -8.125493049621582
    3. '	write' → logprob: -8.750493049621582
    4. '_write' → logprob: -10.750493049621582
    5. '	' → logprob: -11.750493049621582
    6. 'sys' → logprob: -12.500493049621582
    7. '	sys' → logprob: -13.500493049621582
    8. '=sys' → logprob: -13.875493049621582
    9. '_WRITE' → logprob: -14.750493049621582
    10. '.flush' → logprob: -15.125493049621582

Token 83: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.43338125944137573
    2. ''' → logprob: -1.1833813190460205
    3. '(' → logprob: -3.9333813190460205
    4. '("' → logprob: -4.058381080627441
    5. '"' → logprob: -4.808381080627441
    6. ' ' → logprob: -8.058381080627441
    7. '`' → logprob: -9.683381080627441
    8. ''s' → logprob: -11.058381080627441
    9. '32' → logprob: -11.433381080627441
    10. '()' → logprob: -11.808381080627441

Token 84: ' ')
' (ID: 49195)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13439181447029114
    2. ' )' → logprob: -2.3843917846679688
    3. ' ')' → logprob: -3.7593917846679688
    4. ')' → logprob: -5.134391784667969
    5. '')' → logprob: -6.634391784667969
    6. '<|end|>' → logprob: -6.884391784667969
    7. ' ")' → logprob: -7.134391784667969
    8. ' '' → logprob: -7.384391784667969
    9. ''' → logprob: -8.009391784667969
    10. ' ')'' → logprob: -10.009391784667969

Token 85: '	print' (ID: 15269)
  Prédit: '	sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	sys' → logprob: -0.5495933890342712
    2. 'sys' → logprob: -1.299593448638916
    3. '\n' → logprob: -3.049593448638916
    4. '	else' → logprob: -3.424593448638916
    5. 'else' → logprob: -3.799593448638916
    6. '
' → logprob: -4.049593448638916
    7. 'print' → logprob: -4.424593448638916
    8. '	
' → logprob: -5.299593448638916
    9. '<|end|>' → logprob: -5.424593448638916
    10. '	print' → logprob: -5.924593448638916

Token 86: '()

' (ID: 5874)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008652626536786556
    2. '<|end|>' → logprob: -5.508652687072754
    3. '[' → logprob: -6.633652687072754
    4. '#' → logprob: -7.008652687072754
    5. ' ' → logprob: -7.758652687072754
    6. 'd' → logprob: -7.883652687072754
    7. '
' → logprob: -8.508652687072754
    8. 'class' → logprob: -8.883652687072754
    9. 's' → logprob: -9.008652687072754
    10. '  
' → logprob: -9.133652687072754

Token 88: ' swap' (ID: 25489)
  Prédit: ' bubble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bubble' → logprob: -0.44374316930770874
    2. ' selection' → logprob: -1.8187432289123535
    3. ' main' → logprob: -2.1937432289123535
    4. ' insertion' → logprob: -2.8187432289123535
    5. ' sort' → logprob: -5.0687432289123535
    6. 'bubble' → logprob: -5.4437432289123535
    7. 'selection' → logprob: -5.8187432289123535
    8. ' quick' → logprob: -6.0687432289123535
    9. ' merge' → logprob: -6.1937432289123535
    10. ' ' → logprob: -6.5687432289123535

Token 89: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.2541276514530182
    2. '(' → logprob: -1.5041276216506958
    3. '(a' → logprob: -6.254127502441406
    4. '(i' → logprob: -8.879127502441406
    5. '(array' → logprob: -9.879127502441406
    6. '(A' → logprob: -10.129127502441406
    7. '()' → logprob: -11.754127502441406
    8. '((' → logprob: -12.004127502441406
    9. ' (' → logprob: -12.129127502441406
    10. '(`' → logprob: -12.879127502441406

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4259644558478612e-05
    2. ',i' → logprob: -11.625014305114746
    3. ' ,' → logprob: -13.375014305114746
    4. ',index' → logprob: -13.500014305114746
    5. '[],' → logprob: -14.625014305114746
    6. '	arr' → logprob: -15.250014305114746
    7. '	' → logprob: -15.375014305114746
    8. ',array' → logprob: -15.500014305114746
    9. '),' → logprob: -15.875014305114746
    10. ')' → logprob: -16.00001335144043

Token 91: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5243885517120361
    2. 'i' → logprob: -0.8993885517120361
    3. ' x' → logprob: -7.774388313293457
    4. 'x' → logprob: -8.149388313293457
    5. 'a' → logprob: -8.524388313293457
    6. '	i' → logprob: -8.774388313293457
    7. ' a' → logprob: -8.899388313293457
    8. ' ' → logprob: -10.774388313293457
    9. ' l' → logprob: -11.524388313293457
    10. ' idx' → logprob: -11.649388313293457

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.1093578804284334e-05
    2. ',i' → logprob: -10.375051498413086
    3. ' ,' → logprob: -11.250051498413086
    4. ',j' → logprob: -12.625051498413086
    5. '1' → logprob: -14.250051498413086
    6. ' ' → logprob: -14.500051498413086
    7. ')' → logprob: -14.625051498413086
    8. '‌,' → logprob: -15.125051498413086
    9. ',
' → logprob: -15.500051498413086
    10. ',n' → logprob: -15.750051498413086

Token 93: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1647016406059265
    2. ' j' → logprob: -1.9147017002105713
    3. 'i' → logprob: -5.789701461791992
    4. '	j' → logprob: -7.039701461791992
    5. ' i' → logprob: -7.664701461791992
    6. '	i' → logprob: -10.414701461791992
    7. ' ' → logprob: -10.914701461791992
    8. '	' → logprob: -12.164701461791992
    9. '   ' → logprob: -13.164701461791992
    10. ',j' → logprob: -13.164701461791992

Token 94: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002795703476294875
    2. ')' → logprob: -8.250279426574707
    3. '):
' → logprob: -11.125279426574707
    4. ' ):' → logprob: -13.250279426574707
    5. ':' → logprob: -13.625279426574707
    6. '):
' → logprob: -15.250279426574707
    7. ')：' → logprob: -16.250280380249023
    8. '):

' → logprob: -16.625280380249023
    9. ''):' → logprob: -17.125280380249023
    10. '）：' → logprob: -17.375280380249023

Token 95: '	temp' (ID: 33775)
  Prédit: '	arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	arr' → logprob: -0.0040956162847578526
    2. 'arr' → logprob: -6.254095554351807
    3. '	temp' → logprob: -6.879095554351807
    4. '	tmp' → logprob: -7.254095554351807
    5. ' arr' → logprob: -7.879095554351807
    6. '   ' → logprob: -10.129096031188965
    7. '	' → logprob: -12.504096031188965
    8. 'tmp' → logprob: -13.504096031188965
    9. '[arr' → logprob: -13.629096031188965
    10. 'temp' → logprob: -14.129096031188965

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01815205067396164
    2. '=' → logprob: -4.018152236938477
    3. '	' → logprob: -13.393152236938477
    4. ' ' → logprob: -15.268152236938477
    5. ',' → logprob: -16.018152236938477
    6. '＝' → logprob: -16.268152236938477
    7. ' ' → logprob: -16.518152236938477
    8. '  ' → logprob: -17.143152236938477
    9. '[arr' → logprob: -17.393152236938477
    10. '<arr' → logprob: -17.643152236938477

Token 97: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.00410274276509881
    2. ' arr' → logprob: -5.50410270690918
    3. '	arr' → logprob: -10.62910270690918
    4. '$arr' → logprob: -16.62910270690918
    5. '(arr' → logprob: -17.50410270690918
    6. '<arr' → logprob: -17.75410270690918
    7. '[arr' → logprob: -18.25410270690918
    8. '_arr' → logprob: -18.37910270690918
    9. '<|end|>' → logprob: -18.87910270690918
    10. '.arr' → logprob: -19.12910270690918

Token 98: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0010356683051213622
    2. '[j' → logprob: -6.876035690307617
    3. '[' → logprob: -12.876035690307617
    4. '```' → logprob: -15.501035690307617
    5. '[temp' → logprob: -16.751035690307617
    6. 'i' → logprob: -16.751035690307617
    7. '[]' → logprob: -17.501035690307617
    8. '[I' → logprob: -18.251035690307617
    9. '[int' → logprob: -19.251035690307617
    10. '\[' → logprob: -19.501035690307617

Token 99: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03379565104842186
    2. ']
' → logprob: -3.4087955951690674
    3. ']
' → logprob: -9.658795356750488
    4. ']

' → logprob: -10.033795356750488
    5. ' ]' → logprob: -10.158795356750488
    6. ' ]
' → logprob: -13.533795356750488
    7. '];' → logprob: -14.158795356750488
    8. ')' → logprob: -14.783795356750488
    9. ']

' → logprob: -15.283795356750488
    10. ' ' → logprob: -16.158796310424805

Token 100: '	arr' (ID: 72877)
  Prédit: '	arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	arr' → logprob: -0.002545697148889303
    2. 'arr' → logprob: -6.0025458335876465
    3. ' arr' → logprob: -10.502545356750488
    4. '[arr' → logprob: -10.627545356750488
    5. '	' → logprob: -11.377545356750488
    6. '	ans' → logprob: -13.127545356750488
    7. '<arr' → logprob: -14.002545356750488
    8. '[' → logprob: -14.252545356750488
    9. '	i' → logprob: -14.377545356750488
    10. '
' → logprob: -14.502545356750488

Token 101: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00017743845819495618
    2. '[j' → logprob: -8.750177383422852
    3. '[' → logprob: -10.875177383422852
    4. '```' → logprob: -17.37517738342285
    5. 'i' → logprob: -17.87517738342285
    6. '[index' → logprob: -19.12517738342285
    7. ' [' → logprob: -19.37517738342285
    8. '	i' → logprob: -19.50017738342285
    9. ',i' → logprob: -19.50017738342285
    10. '][' → logprob: -19.62517738342285

Token 102: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01142102386802435
    2. '],' → logprob: -5.261421203613281
    3. '[i' → logprob: -5.886421203613281
    4. ']=' → logprob: -6.511421203613281
    5. '[j' → logprob: -7.261421203613281
    6. ',' → logprob: -7.886421203613281
    7. '[' → logprob: -8.011421203613281
    8. '][' → logprob: -8.011421203613281
    9. ' ]' → logprob: -10.261421203613281
    10. ',j' → logprob: -10.761421203613281

Token 103: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28275394439697266
    2. ' =' → logprob: -1.4077539443969727
    3. '[j' → logprob: -6.657753944396973
    4. '[' → logprob: -9.157753944396973
    5. '[i' → logprob: -9.157753944396973
    6. '=j' → logprob: -9.407753944396973
    7. ',' → logprob: -11.907753944396973
    8. ' ' → logprob: -12.282753944396973
    9. '=i' → logprob: -12.532753944396973
    10. ',j' → logprob: -13.282753944396973

Token 104: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.00015991552209015936
    2. ' arr' → logprob: -8.750160217285156
    3. '	arr' → logprob: -13.500160217285156
    4. '[arr' → logprob: -18.000160217285156
    5. '(arr' → logprob: -18.375160217285156
    6. '$arr' → logprob: -18.750160217285156
    7. '<arr' → logprob: -19.750160217285156
    8. '_arr' → logprob: -20.250160217285156
    9. '.arr' → logprob: -20.625160217285156
    10. 'j' → logprob: -20.875160217285156

Token 105: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -5.512236498361744e-07
    2. 'j' → logprob: -14.625000953674316
    3. '	j' → logprob: -16.5
    4. '```' → logprob: -17.25
    5. '[' → logprob: -19.0
    6. '_j' → logprob: -20.0
    7. '[js' → logprob: -20.375
    8. '[arr' → logprob: -20.625
    9. '[i' → logprob: -20.875
    10. ',j' → logprob: -21.0

Token 106: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7384544610977173
    2. ')' → logprob: -1.3634544610977173
    3. '<|end|>' → logprob: -1.8634544610977173
    4. ')
' → logprob: -2.9884543418884277
    5. '
' → logprob: -3.4884543418884277
    6. ']
' → logprob: -3.6134543418884277
    7. '<|end|>' → logprob: -6.238454341888428
    8. '	' → logprob: -7.863454341888428
    9. '```' → logprob: -7.863454341888428
    10. '}' → logprob: -8.488454818725586

Token 107: '	arr' (ID: 72877)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.18026068806648254
    2. 'arr' → logprob: -2.05526065826416
    3. '	temp' → logprob: -3.68026065826416
    4. '	arr' → logprob: -5.05526065826416
    5. ' temp' → logprob: -5.55526065826416
    6. ' arr' → logprob: -6.68026065826416
    7. '   ' → logprob: -9.05526065826416
    8. '[arr' → logprob: -10.93026065826416
    9. '[temp' → logprob: -11.43026065826416
    10. 'tmp' → logprob: -12.18026065826416

Token 108: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00023166877508629113
    2. '[' → logprob: -8.750231742858887
    3. 'j' → logprob: -10.375231742858887
    4. ']' → logprob: -10.625231742858887
    5. '[i' → logprob: -11.625231742858887
    6. '```' → logprob: -12.125231742858887
    7. '	j' → logprob: -13.875231742858887
    8. '[]' → logprob: -14.125231742858887
    9. '[
' → logprob: -15.375231742858887
    10. '][' → logprob: -15.625231742858887

Token 109: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.029847231227905e-05
    2. ']=' → logprob: -10.125080108642578
    3. ' ]' → logprob: -10.625080108642578
    4. ']
' → logprob: -11.250080108642578
    5. ']

' → logprob: -14.250080108642578
    6. '	' → logprob: -14.750080108642578
    7. '=' → logprob: -15.250080108642578
    8. ']]' → logprob: -15.250080108642578
    9. '<|end|>' → logprob: -15.250080108642578
    10. ')' → logprob: -15.375080108642578

Token 110: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04681764170527458
    2. ' =' → logprob: -3.4218175411224365
    3. '=temp' → logprob: -4.421817779541016
    4. 'temp' → logprob: -7.546817779541016
    5. '=
' → logprob: -8.046817779541016
    6. '<|end|>' → logprob: -8.796817779541016
    7. '[temp' → logprob: -10.671817779541016
    8. '[' → logprob: -11.546817779541016
    9. '	temp' → logprob: -12.046817779541016
    10. ' =
' → logprob: -12.296817779541016

Token 111: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.014164329506456852
    2. ' temp' → logprob: -4.264164447784424
    3. '	temp' → logprob: -14.139163970947266
    4. 'tmp' → logprob: -16.889163970947266
    5. 'arr' → logprob: -17.639163970947266
    6. '(temp' → logprob: -18.764163970947266
    7. 't' → logprob: -18.764163970947266
    8. 'tem' → logprob: -18.889163970947266
    9. '$temp' → logprob: -18.889163970947266
    10. '[temp' → logprob: -19.389163970947266

Token 112: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.578330397605896
    2. '<|end|>' → logprob: -0.828330397605896
    3. '<|end|>' → logprob: -6.3283305168151855
    4. ' def' → logprob: -8.953330039978027
    5. '
' → logprob: -9.328330039978027
    6. '	def' → logprob: -9.328330039978027
    7. '```' → logprob: -9.578330039978027
    8. '	
' → logprob: -9.953330039978027
    9. '#' → logprob: -10.578330039978027
    10. '[' → logprob: -10.703330039978027

Token 113: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0007329129730351269
    2. '<|end|>' → logprob: -7.375732898712158
    3. '
' → logprob: -9.500733375549316
    4. ' def' → logprob: -11.625733375549316
    5. '<|end|>' → logprob: -11.875733375549316
    6. '	def' → logprob: -12.500733375549316
    7. '

' → logprob: -12.750733375549316
    8. '#' → logprob: -13.125733375549316
    9. '  
' → logprob: -13.125733375549316
    10. '```' → logprob: -13.750733375549316

Token 114: ' bubble' (ID: 40447)
  Prédit: ' bubble'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bubble' → logprob: -0.7520456314086914
    2. ' selection' → logprob: -1.5020456314086914
    3. ' partition' → logprob: -1.8770456314086914
    4. ' quick' → logprob: -2.2520456314086914
    5. 'partition' → logprob: -4.252045631408691
    6. ' def' → logprob: -4.502045631408691
    7. ' insertion' → logprob: -4.752045631408691
    8. 'selection' → logprob: -5.377045631408691
    9. 'bubble' → logprob: -5.752045631408691
    10. ' bubbles' → logprob: -6.252045631408691

Token 115: '_sort' (ID: 43815)
  Prédit: '_sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sort' → logprob: -0.0024310708977282047
    2. 'sort' → logprob: -6.2524309158325195
    3. 'Sort' → logprob: -7.7524309158325195
    4. '_' → logprob: -9.75243091583252
    5. '(arr' → logprob: -11.62743091583252
    6. ' sort' → logprob: -12.75243091583252
    7. '_SORT' → logprob: -14.00243091583252
    8. '_sorted' → logprob: -14.37743091583252
    9. '_S' → logprob: -15.00243091583252
    10. '	sort' → logprob: -15.50243091583252

Token 116: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -3.4121114822482923e-06
    2. ' (' → logprob: -13.000003814697266
    3. '(' → logprob: -13.750003814697266
    4. '(array' → logprob: -17.250003814697266
    5. '(a' → logprob: -18.875003814697266
    6. '(lst' → logprob: -19.000003814697266
    7. '	arr' → logprob: -19.875003814697266
    8. '(ar' → logprob: -20.000003814697266
    9. '```' → logprob: -20.125003814697266
    10. '[arr' → logprob: -20.250003814697266

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20208491384983063
    2. '):' → logprob: -1.7020848989486694
    3. '):
' → logprob: -7.827085018157959
    4. ')' → logprob: -9.0770845413208
    5. ' ,' → logprob: -10.0770845413208
    6. ',n' → logprob: -10.2020845413208
    7. ' ):' → logprob: -10.3270845413208
    8. ':' → logprob: -11.8270845413208
    9. '):
' → logprob: -11.8270845413208
    10. '	' → logprob: -12.2020845413208

Token 118: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2550521790981293
    2. ' n' → logprob: -1.5050522089004517
    3. '	n' → logprob: -6.380052089691162
    4. 'len' → logprob: -6.880052089691162
    5. 'N' → logprob: -8.38005256652832
    6. ' N' → logprob: -9.50505256652832
    7. ' len' → logprob: -10.63005256652832
    8. ' ' → logprob: -10.88005256652832
    9. ')' → logprob: -11.13005256652832
    10. 'length' → logprob: -12.00505256652832

Token 119: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007363698096014559
    2. '):
' → logprob: -7.500736236572266
    3. ',' → logprob: -9.500736236572266
    4. ')' → logprob: -9.750736236572266
    5. ' ):' → logprob: -10.750736236572266
    6. '):
' → logprob: -11.125736236572266
    7. '	' → logprob: -11.375736236572266
    8. ':' → logprob: -13.750736236572266
    9. '):

' → logprob: -14.250736236572266
    10. '）：' → logprob: -15.750736236572266

Token 120: '	swap' (ID: 167637)
  Prédit: '	for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	for' → logprob: -0.02685716561973095
    2. 'for' → logprob: -4.026857376098633
    3. ' for' → logprob: -4.776857376098633
    4. '	' → logprob: -9.526857376098633
    5. '   ' → logprob: -9.901857376098633
    6. '	sw' → logprob: -10.526857376098633
    7. '	is' → logprob: -10.651857376098633
    8. '	flag' → logprob: -10.776857376098633
    9. '	while' → logprob: -10.901857376098633
    10. '	done' → logprob: -11.776857376098633

Token 121: '_count' (ID: 7536)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.7663935422897339
    2. 'd' → logprob: -1.5163935422897339
    3. '_flag' → logprob: -2.0163936614990234
    4. '_count' → logprob: -2.3913936614990234
    5. '_oc' → logprob: -3.3913936614990234
    6. '_cnt' → logprob: -4.266393661499023
    7. ' =' → logprob: -4.266393661499023
    8. '(arr' → logprob: -4.266393661499023
    9. 'flag' → logprob: -5.891393661499023
    10. '=' → logprob: -5.891393661499023

Token 122: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12694312632083893
    2. '=' → logprob: -2.1269431114196777
    3. '	' → logprob: -12.001943588256836
    4. ' ' → logprob: -12.126943588256836
    5. ' +=' → logprob: -13.251943588256836
    6. ' ' → logprob: -14.501943588256836
    7. ',' → logprob: -15.251943588256836
    8. '=int' → logprob: -15.501943588256836
    9. '＝' → logprob: -15.626943588256836
    10. '  ' → logprob: -15.751943588256836

Token 123: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015023599844425917
    2. ' ' → logprob: -6.501502513885498
    3. '	' → logprob: -16.876502990722656
    4. 'True' → logprob: -17.501502990722656
    5. ' True' → logprob: -17.876502990722656
    6. ' ' → logprob: -18.126502990722656
    7. '０' → logprob: -18.626502990722656
    8. '   ' → logprob: -19.376502990722656
    9. '  ' → logprob: -19.376502990722656
    10. '=' → logprob: -19.689002990722656

Token 124: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '０' → logprob: -18.37501335144043
    4. '	' → logprob: -19.50001335144043
    5. 'True' → logprob: -19.50001335144043
    6. 'int' → logprob: -20.00001335144043
    7. ' ' → logprob: -20.00001335144043
    8. '```' → logprob: -20.62501335144043
    9. '۰' → logprob: -20.62501335144043
    10. '   ' → logprob: -20.75001335144043

Token 125: '
' (ID: 198)
  Prédit: '	for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	for' → logprob: -0.17325302958488464
    2. '
' → logprob: -1.923253059387207
    3. ' for' → logprob: -4.548253059387207
    4. '	
' → logprob: -6.798253059387207
    5. '<|end|>' → logprob: -7.423253059387207
    6. '	while' → logprob: -8.298253059387207
    7. '
' → logprob: -8.923253059387207
    8. 'for' → logprob: -9.173253059387207
    9. '	true' → logprob: -10.798253059387207
    10. '   ' → logprob: -10.798253059387207

Token 126: '	for' (ID: 3903)
  Prédit: '	for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	for' → logprob: -0.01742120087146759
    2. ' for' → logprob: -4.267421245574951
    3. 'for' → logprob: -5.767421245574951
    4. '	while' → logprob: -9.017420768737793
    5. '   ' → logprob: -13.142420768737793
    6. '	' → logprob: -15.142420768737793
    7. '
' → logprob: -15.142420768737793
    8. '	
' → logprob: -15.642420768737793
    9. ',' → logprob: -15.892420768737793
    10. '	true' → logprob: -15.892420768737793

Token 127: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3872058689594269
    2. 'i' → logprob: -1.1372058391571045
    3. ' j' → logprob: -9.387206077575684
    4. 'range' → logprob: -9.387206077575684
    5. ' range' → logprob: -9.512206077575684
    6. 'j' → logprob: -9.887206077575684
    7. '	i' → logprob: -10.262206077575684
    8. ' ' → logprob: -12.137206077575684
    9. '   ' → logprob: -15.137206077575684
    10. ' in' → logprob: -15.387206077575684

Token 128: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10026674717664719
    2. 'in' → logprob: -2.350266695022583
    3. 'range' → logprob: -9.975266456604004
    4. ' ' → logprob: -11.975266456604004
    5. '	in' → logprob: -12.600266456604004
    6. ' range' → logprob: -13.225266456604004
    7. '   ' → logprob: -14.600266456604004
    8. '```' → logprob: -14.975266456604004
    9. '  ' → logprob: -15.475266456604004
    10. '+' → logprob: -15.475266456604004

Token 129: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02325270138680935
    2. ' range' → logprob: -3.7732527256011963
    3. '	range' → logprob: -12.523252487182617
    4. ' ' → logprob: -12.773252487182617
    5. '(range' → logprob: -15.148252487182617
    6. '   ' → logprob: -15.148252487182617
    7. '  ' → logprob: -16.148252487182617
    8. '	' → logprob: -16.398252487182617
    9. ' ' → logprob: -16.898252487182617
    10. 'ran' → logprob: -17.273252487182617

Token 130: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.02326982282102108
    2. '(' → logprob: -3.7732698917388916
    3. ' (' → logprob: -11.648269653320312
    4. '	n' → logprob: -12.023269653320312
    5. '	' → logprob: -12.273269653320312
    6. ' n' → logprob: -12.773269653320312
    7. 'n' → logprob: -14.398269653320312
    8. '1' → logprob: -15.148269653320312
    9. '((' → logprob: -15.273269653320312
    10. ' ' → logprob: -15.398269653320312

Token 131: '0' (ID: 15)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0014952188357710838
    2. ' n' → logprob: -6.626495361328125
    3. '	n' → logprob: -9.251495361328125
    4. '1' → logprob: -9.751495361328125
    5. '(n' → logprob: -11.251495361328125
    6. '0' → logprob: -13.876495361328125
    7. '
' → logprob: -15.251495361328125
    8. ' ' → logprob: -15.626495361328125
    9. '   ' → logprob: -16.126495361328125
    10. 'len' → logprob: -16.501495361328125

Token 132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006176563911139965
    2. ',n' → logprob: -5.756176471710205
    3. ' ,' → logprob: -6.256176471710205
    4. '	n' → logprob: -7.881176471710205
    5. '	' → logprob: -8.256176948547363
    6. '1' → logprob: -9.006176948547363
    7. 'n' → logprob: -9.131176948547363
    8. ' ' → logprob: -9.506176948547363
    9. '(n' → logprob: -10.006176948547363
    10. ' n' → logprob: -10.756176948547363

Token 133: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07920162379741669
    2. ' n' → logprob: -2.5792016983032227
    3. '	n' → logprob: -8.079201698303223
    4. ' ' → logprob: -13.954201698303223
    5. '	' → logprob: -14.829201698303223
    6. '   ' → logprob: -15.454201698303223
    7. '
' → logprob: -15.829201698303223
    8. '  ' → logprob: -15.829201698303223
    9. ' ' → logprob: -16.204200744628906
    10. '    ' → logprob: -16.454200744628906

Token 134: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02984836883842945
    2. ' -' → logprob: -3.529848337173462
    3. '):' → logprob: -10.029848098754883
    4. '):
' → logprob: -10.154848098754883
    5. ' ' → logprob: -11.904848098754883
    6. '	' → logprob: -12.779848098754883
    7. ')' → logprob: -12.904848098754883
    8. ' ' → logprob: -13.904848098754883
    9. '):

' → logprob: -14.404848098754883
    10. ' ):' → logprob: -14.654848098754883

Token 135: '	' (ID: 197)
  Prédit: '	for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	for' → logprob: -0.29769569635391235
    2. '	' → logprob: -1.5476956367492676
    3. ' for' → logprob: -3.5476956367492676
    4. 'for' → logprob: -4.172695636749268
    5. '   ' → logprob: -7.672695636749268
    6. '       ' → logprob: -10.422696113586426
    7. '	   ' → logprob: -10.922696113586426
    8. '    ' → logprob: -11.797696113586426
    9. ' ' → logprob: -12.422696113586426
    10. '		' → logprob: -12.547696113586426

Token 136: '	for' (ID: 3903)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2223643958568573
    2. '	for' → logprob: -1.7223644256591797
    3. '	' → logprob: -3.9723644256591797
    4. ' for' → logprob: -6.34736442565918
    5. '   ' → logprob: -8.84736442565918
    6. '	   ' → logprob: -12.84736442565918
    7. ' ' → logprob: -13.09736442565918
    8. '		' → logprob: -13.47236442565918
    9. '       ' → logprob: -13.47236442565918
    10. '  ' → logprob: -14.47236442565918

Token 137: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.38268062472343445
    2. ' range' → logprob: -1.7576806545257568
    3. 'range' → logprob: -2.007680654525757
    4. 'j' → logprob: -4.507680416107178
    5. '	j' → logprob: -9.382680892944336
    6. '	range' → logprob: -10.132680892944336
    7. ' in' → logprob: -10.507680892944336
    8. ' ' → logprob: -10.632680892944336
    9. '(range' → logprob: -11.507680892944336
    10. ' ' → logprob: -12.507680892944336

Token 138: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038219355046749115
    2. 'in' → logprob: -3.288219451904297
    3. 'range' → logprob: -8.788219451904297
    4. ' range' → logprob: -11.038219451904297
    5. ' ' → logprob: -11.788219451904297
    6. '	in' → logprob: -13.663219451904297
    7. '	' → logprob: -16.413219451904297
    8. ' ' → logprob: -17.038219451904297
    9. '(range' → logprob: -17.038219451904297
    10. 'import' → logprob: -17.163219451904297

Token 139: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16030475497245789
    2. ' range' → logprob: -1.9103047847747803
    3. '(range' → logprob: -10.16030502319336
    4. ' ' → logprob: -11.28530502319336
    5. '	range' → logprob: -11.28530502319336
    6. ' in' → logprob: -11.41030502319336
    7. '(' → logprob: -13.16030502319336
    8. '0' → logprob: -13.41030502319336
    9. 'in' → logprob: -13.53530502319336
    10. '	' → logprob: -15.03530502319336

Token 140: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00018852073117159307
    2. '(n' → logprob: -8.625188827514648
    3. '(i' → logprob: -12.375188827514648
    4. ' (' → logprob: -12.500188827514648
    5. '	' → logprob: -14.375188827514648
    6. '0' → logprob: -15.125188827514648
    7. '(j' → logprob: -17.00018882751465
    8. '1' → logprob: -17.50018882751465
    9. '((' → logprob: -17.75018882751465
    10. '(len' → logprob: -18.25018882751465

Token 141: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.25199654698371887
    2. ' -' → logprob: -1.5019965171813965
    3. '	' → logprob: -10.501996994018555
    4. '1' → logprob: -11.126996994018555
    5. ' ' → logprob: -11.376996994018555
    6. '-i' → logprob: -11.626996994018555
    7. ' ' → logprob: -12.626996994018555
    8. ')' → logprob: -14.376996994018555
    9. '−' → logprob: -15.501996994018555
    10. '   ' → logprob: -16.251996994018555

Token 142: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003936513792723417
    2. ' ' → logprob: -5.753936290740967
    3. 'i' → logprob: -7.378936290740967
    4. '	' → logprob: -10.003936767578125
    5. ' i' → logprob: -10.003936767578125
    6. '	i' → logprob: -10.253936767578125
    7. '   ' → logprob: -12.503936767578125
    8. '  ' → logprob: -13.878936767578125
    9. '-' → logprob: -14.253936767578125
    10. '
' → logprob: -14.503936767578125

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011212585377506912
    2. ' ' → logprob: -9.375112533569336
    3. 'i' → logprob: -10.625112533569336
    4. '	' → logprob: -14.000112533569336
    5. '-' → logprob: -14.875112533569336
    6. '2' → logprob: -15.187612533569336
    7. '   ' → logprob: -15.250112533569336
    8. ' i' → logprob: -15.625112533569336
    9. '１' → logprob: -15.687612533569336
    10. '	i' → logprob: -15.875112533569336

Token 144: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05669358745217323
    2. ' -' → logprob: -3.0566935539245605
    3. '-' → logprob: -5.5566935539245605
    4. '-i' → logprob: -6.4316935539245605
    5. ' ,' → logprob: -7.1816935539245605
    6. '	' → logprob: -7.1816935539245605
    7. ',i' → logprob: -8.181694030761719
    8. '):
' → logprob: -8.306694030761719
    9. '0' → logprob: -8.306694030761719
    10. '):' → logprob: -8.806694030761719

Token 145: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005536708049476147
    2. ' i' → logprob: -5.3805365562438965
    3. '	i' → logprob: -7.0055365562438965
    4. '0' → logprob: -12.380537033081055
    5. '	' → logprob: -13.755537033081055
    6. '   ' → logprob: -14.005537033081055
    7. ' ' → logprob: -14.380537033081055
    8. ',' → logprob: -14.755537033081055
    9. '=i' → logprob: -15.005537033081055
    10. ',i' → logprob: -15.130537033081055

Token 146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004010726697742939
    2. '	' → logprob: -6.6290106773376465
    3. ',-' → logprob: -6.8790106773376465
    4. '0' → logprob: -8.004011154174805
    5. '   ' → logprob: -8.379011154174805
    6. ')' → logprob: -8.504011154174805
    7. '-' → logprob: -9.004011154174805
    8. ' ,' → logprob: -9.379011154174805
    9. ',j' → logprob: -9.504011154174805
    10. '<|end|>' → logprob: -9.754011154174805

Token 147: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6330001950263977
    2. ' -' → logprob: -0.7580001950263977
    3. '	' → logprob: -8.008000373840332
    4. ' ' → logprob: -10.258000373840332
    5. '0' → logprob: -11.008000373840332
    6. '   ' → logprob: -12.133000373840332
    7. '    ' → logprob: -12.758000373840332
    8. '		' → logprob: -13.258000373840332
    9. '  ' → logprob: -13.508000373840332
    10. '−' → logprob: -13.883000373840332

Token 148: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.093505099765025e-05
    2. ' ' → logprob: -10.875020980834961
    3. '0' → logprob: -14.750020980834961
    4. ')' → logprob: -14.875020980834961
    5. '):
' → logprob: -15.250020980834961
    6. ',' → logprob: -15.562520980834961
    7. '   ' → logprob: -15.937520980834961
    8. '```' → logprob: -16.12502098083496
    9. '	' → logprob: -16.18752098083496
    10. '１' → logprob: -16.75002098083496

Token 149: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.43475475907325745
    2. '-' → logprob: -1.309754729270935
    3. '):
' → logprob: -2.8097548484802246
    4. ',-' → logprob: -4.934754848480225
    5. ',' → logprob: -5.059754848480225
    6. '	' → logprob: -5.184754848480225
    7. ' -' → logprob: -6.434754848480225
    8. '1' → logprob: -7.434754848480225
    9. '):
' → logprob: -8.059754371643066
    10. '):-' → logprob: -8.059754371643066

Token 150: '		' (ID: 335)
  Prédit: '		'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.4336877167224884
    2. '	' → logprob: -1.058687686920166
    3. '           ' → logprob: -6.683687686920166
    4. '		
' → logprob: -7.058687686920166
    5. ' if' → logprob: -7.183687686920166
    6. ' 	' → logprob: -8.433688163757324
    7. ' ' → logprob: -8.433688163757324
    8. '       ' → logprob: -8.683688163757324
    9. ' ' → logprob: -8.683688163757324
    10. ',' → logprob: -9.058688163757324

Token 151: '	if' (ID: 1224)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.38533633947372437
    2. 'if' → logprob: -1.2603363990783691
    3. '		' → logprob: -3.760336399078369
    4. '	' → logprob: -4.760336399078369
    5. '	if' → logprob: -6.135336399078369
    6. '			' → logprob: -6.760336399078369
    7. ' ' → logprob: -8.135335922241211
    8. '1' → logprob: -9.135335922241211
    9. '   ' → logprob: -9.260335922241211
    10. '           ' → logprob: -9.260335922241211

Token 152: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.15248069167137146
    2. 'arr' → logprob: -2.0274806022644043
    3. ' int' → logprob: -4.902480602264404
    4. '	arr' → logprob: -6.527480602264404
    5. 'int' → logprob: -7.152480602264404
    6. '(arr' → logprob: -10.527481079101562
    7. ' ' → logprob: -11.027481079101562
    8. ' ' → logprob: -11.402481079101562
    9. '	int' → logprob: -12.152481079101562
    10. '   ' → logprob: -12.902481079101562

Token 153: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.0280383548888494e-06
    2. ' [' → logprob: -14.875000953674316
    3. '[' → logprob: -15.000000953674316
    4. '[i' → logprob: -16.500001907348633
    5. '```' → logprob: -17.125001907348633
    6. ')[' → logprob: -18.125001907348633
    7. '[arr' → logprob: -18.250001907348633
    8. 'arr' → logprob: -18.375001907348633
    9. '	j' → logprob: -18.500001907348633
    10. '"[' → logprob: -18.625001907348633

Token 154: '].' (ID: 1651)
  Prédit: '.value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.002147762104868889
    2. '].' → logprob: -7.252147674560547
    3. '.' → logprob: -7.627147674560547
    4. ' .' → logprob: -8.127147674560547
    5. '>.' → logprob: -8.127147674560547
    6. ').' → logprob: -8.752147674560547
    7. '}.' → logprob: -9.377147674560547
    8. '.val' → logprob: -10.127147674560547
    9. ' ' → logprob: -11.377147674560547
    10. 'value' → logprob: -11.627147674560547

Token 155: 'value' (ID: 1594)
  Prédit: 'value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -1.3306015716807451e-05
    2. ' value' → logprob: -11.50001335144043
    3. '.value' → logprob: -14.12501335144043
    4. '```' → logprob: -14.50001335144043
    5. 'alue' → logprob: -14.62501335144043
    6. '	value' → logprob: -15.00001335144043
    7. ' ' → logprob: -15.37501335144043
    8. 'val' → logprob: -15.50001335144043
    9. '<' → logprob: -16.12501335144043
    10. '"value' → logprob: -16.25001335144043

Token 156: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.08373508602380753
    2. ' <' → logprob: -2.5837349891662598
    3. '<arr' → logprob: -5.33373498916626
    4. ' ' → logprob: -12.333735466003418
    5. '<int' → logprob: -14.333735466003418
    6. 'arr' → logprob: -14.458735466003418
    7. ' arr' → logprob: -15.083735466003418
    8. '>' → logprob: -15.083735466003418
    9. '<
' → logprob: -15.583735466003418
    10. '[arr' → logprob: -16.0837345123291

Token 157: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.008681466802954674
    2. ' arr' → logprob: -4.758681297302246
    3. '	arr' → logprob: -9.633681297302246
    4. '(arr' → logprob: -14.633681297302246
    5. ' ' → logprob: -14.758681297302246
    6. '[arr' → logprob: -15.633681297302246
    7. '$arr' → logprob: -15.883681297302246
    8. '<arr' → logprob: -15.883681297302246
    9. '.arr' → logprob: -16.633682250976562
    10. ' ' → logprob: -16.758682250976562

Token 158: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -16.375
    3. '	j' → logprob: -16.375
    4. 'j' → logprob: -16.625
    5. '	' → logprob: -17.5
    6. '[i' → logprob: -18.125
    7. ' [' → logprob: -18.875
    8. '```' → logprob: -18.875
    9. '[js' → logprob: -19.875
    10. '   ' → logprob: -20.0

Token 159: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.015578166581690311
    2. '[' → logprob: -5.140578269958496
    3. ' -' → logprob: -5.140578269958496
    4. '[j' → logprob: -5.765578269958496
    5. '1' → logprob: -7.890578269958496
    6. '	' → logprob: -8.890578269958496
    7. '.' → logprob: -10.140578269958496
    8. ' ' → logprob: -11.140578269958496
    9. ' [' → logprob: -11.890578269958496
    10. '	j' → logprob: -11.890578269958496

Token 160: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.44312788406387e-05
    2. ' ' → logprob: -9.875054359436035
    3. '	' → logprob: -13.500054359436035
    4. '   ' → logprob: -14.750054359436035
    5. '```' → logprob: -15.250054359436035
    6. ']' → logprob: -15.375054359436035
    7. '		' → logprob: -16.18755531311035
    8. 'value' → logprob: -16.18755531311035
    9. '１' → logprob: -16.87505531311035
    10. '0' → logprob: -16.93755531311035

Token 161: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.570319702499546e-05
    2. ' ' → logprob: -10.875025749206543
    3. '```' → logprob: -13.250025749206543
    4. 'j' → logprob: -13.375025749206543
    5. 'value' → logprob: -13.750025749206543
    6. ']' → logprob: -14.687525749206543
    7. '	' → logprob: -14.875025749206543
    8. '   ' → logprob: -14.937525749206543
    9. '１' → logprob: -15.625025749206543
    10. ' j' → logprob: -16.437524795532227

Token 162: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.03845534101128578
    2. '.value' → logprob: -3.2884552478790283
    3. '.' → logprob: -8.16345500946045
    4. '}.' → logprob: -9.91345500946045
    5. ']' → logprob: -10.41345500946045
    6. '.val' → logprob: -11.03845500946045
    7. ' ].' → logprob: -11.41345500946045
    8. ').' → logprob: -11.53845500946045
    9. '.j' → logprob: -12.78845500946045
    10. ''].' → logprob: -13.16345500946045

Token 163: 'value' (ID: 1594)
  Prédit: 'value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -9.372294698550832e-06
    2. ' value' → logprob: -12.125009536743164
    3. '	value' → logprob: -13.625009536743164
    4. '.value' → logprob: -13.875009536743164
    5. '"value' → logprob: -14.875009536743164
    6. 'val' → logprob: -15.250009536743164
    7. ''value' → logprob: -15.375009536743164
    8. 'alue' → logprob: -15.500009536743164
    9. 'valu' → logprob: -15.875009536743164
    10. ' ' → logprob: -16.000009536743164

Token 164: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12771832942962646
    2. ':
' → logprob: -2.127718448638916
    3. '		' → logprob: -8.002717971801758
    4. '			' → logprob: -8.877717971801758
    5. '):' → logprob: -9.127717971801758
    6. '):
' → logprob: -9.502717971801758
    7. '	' → logprob: -9.877717971801758
    8. ':
' → logprob: -10.377717971801758
    9. ',' → logprob: -11.002717971801758
    10. '=' → logprob: -12.377717971801758

Token 165: '			' (ID: 833)
  Prédit: '			'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '			' → logprob: -0.013227521441876888
    2. '               ' → logprob: -4.888227462768555
    3. '				
' → logprob: -5.388227462768555
    4. '		' → logprob: -8.013227462768555
    5. '				' → logprob: -8.638227462768555
    6. '			   ' → logprob: -9.138227462768555
    7. '			
' → logprob: -9.513227462768555
    8. ' swap' → logprob: -9.763227462768555
    9. '	swap' → logprob: -10.138227462768555
    10. 'swap' → logprob: -10.638227462768555

Token 166: '	swap' (ID: 167637)
  Prédit: '			'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '			' → logprob: -0.6886650323867798
    2. 'swap' → logprob: -0.8136650323867798
    3. ' swap' → logprob: -3.0636649131774902
    4. '	swap' → logprob: -5.81366491317749
    5. '				' → logprob: -6.06366491317749
    6. '.swap' → logprob: -6.81366491317749
    7. '               ' → logprob: -7.06366491317749
    8. '
' → logprob: -8.688665390014648
    9. '		' → logprob: -8.688665390014648
    10. '				
' → logprob: -9.313665390014648

Token 167: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -2.069664333248511e-05
    2. '(' → logprob: -10.875020980834961
    3. 'arr' → logprob: -13.875020980834961
    4. '	arr' → logprob: -15.000020980834961
    5. '_arr' → logprob: -15.375020980834961
    6. '[arr' → logprob: -16.50002098083496
    7. ' (' → logprob: -17.87502098083496
    8. '<arr' → logprob: -18.00002098083496
    9. '(a' → logprob: -18.50002098083496
    10. 's' → logprob: -18.50002098083496

Token 168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019445802317932248
    2. ',j' → logprob: -6.251944541931152
    3. 'arr' → logprob: -11.501944541931152
    4. ' ,' → logprob: -12.751944541931152
    5. ',
' → logprob: -13.501944541931152
    6. ',n' → logprob: -14.876944541931152
    7. '	arr' → logprob: -15.126944541931152
    8. '(arr' → logprob: -15.751944541931152
    9. ')' → logprob: -15.751944541931152
    10. '(j' → logprob: -16.00194549560547

Token 169: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0005855606868863106
    2. ' j' → logprob: -7.500585556030273
    3. '	j' → logprob: -10.375585556030273
    4. '[j' → logprob: -13.875585556030273
    5. '(j' → logprob: -15.375585556030273
    6. '   ' → logprob: -16.000585556030273
    7. '    ' → logprob: -16.750585556030273
    8. '$j' → logprob: -17.125585556030273
    9. '_j' → logprob: -17.250585556030273
    10. ' ' → logprob: -17.875585556030273

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010571392253041267
    2. ',j' → logprob: -4.635571479797363
    3. ' ,' → logprob: -7.635571479797363
    4. ' j' → logprob: -8.635571479797363
    5. 'j' → logprob: -9.510571479797363
    6. '	j' → logprob: -10.635571479797363
    7. '	' → logprob: -10.760571479797363
    8. '-' → logprob: -10.885571479797363
    9. ' ' → logprob: -11.885571479797363
    10. '		' → logprob: -12.385571479797363

Token 171: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0009211080614477396
    2. ' j' → logprob: -7.000921249389648
    3. '	j' → logprob: -11.625921249389648
    4. '[j' → logprob: -14.500921249389648
    5. '(j' → logprob: -16.37592124938965
    6. ')' → logprob: -16.87592124938965
    7. ' ' → logprob: -16.87592124938965
    8. '	' → logprob: -17.12592124938965
    9. '$j' → logprob: -17.25092124938965
    10. '   ' → logprob: -18.25092124938965

Token 172: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0006313055637292564
    2. ' -' → logprob: -7.375631332397461
    3. '1' → logprob: -12.375631332397461
    4. ')' → logprob: -15.625631332397461
    5. '	' → logprob: -16.00063133239746
    6. ' ' → logprob: -16.87563133239746
    7. '−' → logprob: -17.12563133239746
    8. '-)' → logprob: -17.37563133239746
    9. '–' → logprob: -17.75063133239746
    10. ')-' → logprob: -18.25063133239746

Token 173: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.3226136767771095e-05
    2. ' ' → logprob: -10.125042915344238
    3. '	' → logprob: -13.500042915344238
    4. '		' → logprob: -15.375042915344238
    5. '```' → logprob: -15.625042915344238
    6. '				' → logprob: -16.000043869018555
    7. ')' → logprob: -16.187543869018555
    8. '' → logprob: -16.250043869018555
    9. '0' → logprob: -16.250043869018555
    10. '   ' → logprob: -16.375043869018555

Token 174: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -13.00000286102295
    3. '	' → logprob: -15.75000286102295
    4. ')' → logprob: -16.125003814697266
    5. '```' → logprob: -16.125003814697266
    6. '１' → logprob: -17.187503814697266
    7. '۱' → logprob: -17.312503814697266
    8. '<|end|>' → logprob: -17.437503814697266
    9. '' → logprob: -17.500003814697266
    10. '		' → logprob: -18.250003814697266

Token 175: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2604426145553589
    2. ')' → logprob: -1.8854426145553589
    3. '			' → logprob: -2.6354427337646484
    4. '               ' → logprob: -5.260442733764648
    5. ')
' → logprob: -7.510442733764648
    6. '				' → logprob: -9.760442733764648
    7. '		' → logprob: -11.010442733764648
    8. ')

' → logprob: -12.010442733764648
    9. '	' → logprob: -12.635442733764648
    10. '		       ' → logprob: -12.760442733764648

Token 176: '			' (ID: 833)
  Prédit: '			'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '			' → logprob: -0.014590521343052387
    2. '               ' → logprob: -4.389590740203857
    3. 'swap' → logprob: -6.264590740203857
    4. '				' → logprob: -9.6395902633667
    5. ' swap' → logprob: -10.1395902633667
    6. '				
' → logprob: -10.6395902633667
    7. '	swap' → logprob: -10.6395902633667
    8. '.swap' → logprob: -11.5145902633667
    9. '		' → logprob: -12.2645902633667
    10. '
' → logprob: -13.2645902633667

Token 177: '	swap' (ID: 167637)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.1844644695520401
    2. '			' → logprob: -1.934464454650879
    3. ' swap' → logprob: -3.934464454650879
    4. '	swap' → logprob: -5.809464454650879
    5. '               ' → logprob: -7.059464454650879
    6. '		' → logprob: -8.434464454650879
    7. '				' → logprob: -8.684464454650879
    8. '.swap' → logprob: -9.059464454650879
    9. '	' → logprob: -11.684464454650879
    10. '
' → logprob: -12.434464454650879

Token 178: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -16.25
    3. '_swap' → logprob: -17.0
    4. '_c' → logprob: -17.25
    5. '_counter' → logprob: -17.5
    6. '_counts' → logprob: -18.375
    7. 'count' → logprob: -18.75
    8. ' _' → logprob: -18.875
    9. '_co' → logprob: -18.875
    10. '_Count' → logprob: -19.5

Token 179: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.12696108222007751
    2. '+=' → logprob: -2.1269609928131104
    3. ' =' → logprob: -11.001960754394531
    4. '=' → logprob: -11.251960754394531
    5. '+' → logprob: -13.251960754394531
    6. '	' → logprob: -13.876960754394531
    7. ' ' → logprob: -14.876960754394531
    8. ' +' → logprob: -16.00196075439453
    9. ']+=' → logprob: -16.50196075439453
    10. ' ' → logprob: -17.50196075439453

Token 180: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '	' → logprob: -17.875030517578125
    4. '<|end|>' → logprob: -18.500030517578125
    5. '   ' → logprob: -19.375030517578125
    6. '１' → logprob: -19.750030517578125
    7. '```' → logprob: -20.375030517578125
    8. '  ' → logprob: -20.750030517578125
    9. ' ' → logprob: -21.000030517578125
    10. '۱' → logprob: -21.875030517578125

Token 181: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '<|end|>' → logprob: -17.250001907348633
    4. '１' → logprob: -17.375001907348633
    5. '۱' → logprob: -19.437501907348633
    6. '```' → logprob: -19.562501907348633
    7. '   ' → logprob: -19.625001907348633
    8. '	' → logprob: -19.875001907348633
    9. '  ' → logprob: -20.062501907348633
    10. '
' → logprob: -20.125001907348633

Token 182: '
' (ID: 198)
  Prédit: '	return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	return' → logprob: -0.005542985629290342
    2. '
' → logprob: -5.505542755126953
    3. ' return' → logprob: -7.505542755126953
    4. 'return' → logprob: -7.755542755126953
    5. '	
' → logprob: -8.130542755126953
    6. '	' → logprob: -10.005542755126953
    7. '   ' → logprob: -10.630542755126953
    8. '		
' → logprob: -11.130542755126953
    9. '  
' → logprob: -11.130542755126953
    10. '<|end|>' → logprob: -11.380542755126953

Token 183: '	return' (ID: 1393)
  Prédit: '	return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	return' → logprob: -0.0012666594702750444
    2. 'return' → logprob: -6.8762664794921875
    3. '   ' → logprob: -9.126266479492188
    4. ' return' → logprob: -9.626266479492188
    5. 'def' → logprob: -11.126266479492188
    6. '	' → logprob: -11.251266479492188
    7. '	for' → logprob: -11.376266479492188
    8. '	def' → logprob: -12.751266479492188
    9. '	while' → logprob: -12.751266479492188
    10. '	
' → logprob: -13.001266479492188

Token 184: ' swap' (ID: 25489)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.004755376372486353
    2. ' swap' → logprob: -5.50475549697876
    3. 'arr' → logprob: -7.37975549697876
    4. '	swap' → logprob: -9.879755020141602
    5. ' arr' → logprob: -13.879755020141602
    6. 'sw' → logprob: -14.879755020141602
    7. '.swap' → logprob: -16.3797550201416
    8. '	arr' → logprob: -16.6297550201416
    9. ' ' → logprob: -17.1297550201416
    10. 'sort' → logprob: -17.1297550201416

Token 185: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.8624639324116288e-06
    2. 'count' → logprob: -13.750001907348633
    3. '_' → logprob: -14.750001907348633
    4. '_co' → logprob: -16.375001907348633
    5. '_swap' → logprob: -16.375001907348633
    6. '_c' → logprob: -16.500001907348633
    7. '_counts' → logprob: -17.125001907348633
    8. '_COUNT' → logprob: -18.375001907348633
    9. 'Count' → logprob: -18.500001907348633
    10. '_Count' → logprob: -18.500001907348633

Token 186: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14513617753982544
    2. '<|end|>' → logprob: -2.0201361179351807
    3. '<|end|>' → logprob: -6.64513635635376
    4. 'for' → logprob: -7.89513635635376
    5. 'arr' → logprob: -8.020135879516602
    6. '
' → logprob: -9.020135879516602
    7. '```' → logprob: -10.020135879516602
    8. '#' → logprob: -10.395135879516602
    9. ' def' → logprob: -10.520135879516602
    10. ' for' → logprob: -10.645135879516602

Token 187: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0019546831026673317
    2. '<|end|>' → logprob: -7.251954555511475
    3. 'arr' → logprob: -7.501954555511475
    4. 'for' → logprob: -7.626954555511475
    5. 'n' → logprob: -9.251955032348633
    6. '
' → logprob: -10.876955032348633
    7. '```' → logprob: -11.126955032348633
    8. '<|end|>' → logprob: -11.376955032348633
    9. '#' → logprob: -11.501955032348633
    10. ' def' → logprob: -11.501955032348633

Token 188: ' selection' (ID: 8441)
  Prédit: 'selection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'selection' → logprob: -0.49243947863578796
    2. ' selection' → logprob: -0.9924395084381104
    3. 'in' → logprob: -5.117439270019531
    4. ' quick' → logprob: -5.867439270019531
    5. ' insertion' → logprob: -5.867439270019531
    6. 'quick' → logprob: -6.492439270019531
    7. ' main' → logprob: -6.867439270019531
    8. 'select' → logprob: -6.992439270019531
    9. ' ' → logprob: -6.992439270019531
    10. 'main' → logprob: -7.617439270019531

Token 189: '_sort' (ID: 43815)
  Prédit: '_sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sort' → logprob: -2.339278580620885e-06
    2. '_' → logprob: -13.875001907348633
    3. 'sort' → logprob: -14.375001907348633
    4. '_sorted' → logprob: -15.000001907348633
    5. '_swap' → logprob: -16.250001907348633
    6. ' _' → logprob: -16.375001907348633
    7. '```' → logprob: -16.625001907348633
    8. '_select' → logprob: -17.625001907348633
    9. '_SORT' → logprob: -17.750001907348633
    10. '_search' → logprob: -17.875001907348633

Token 190: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.375
    3. ' (' → logprob: -18.25
    4. '(array' → logprob: -20.875
    5. '(ar' → logprob: -20.875
    6. '[arr' → logprob: -21.125
    7. '(a' → logprob: -21.25
    8. '(lst' → logprob: -22.0
    9. '<arr' → logprob: -22.0
    10. 'arr' → logprob: -22.25

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.264322317088954e-05
    2. ',n' → logprob: -10.000052452087402
    3. ' ,' → logprob: -11.875052452087402
    4. ',
' → logprob: -16.25005340576172
    5. ',
' → logprob: -17.50005340576172
    6. '[],' → logprob: -18.37505340576172
    7. '```' → logprob: -18.62505340576172
    8. '	' → logprob: -18.87505340576172
    9. '_,' → logprob: -19.00005340576172
    10. '‌,' → logprob: -19.25005340576172

Token 192: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2256908118724823
    2. ' n' → logprob: -1.6006908416748047
    3. '	n' → logprob: -8.225690841674805
    4. ' ' → logprob: -12.475690841674805
    5. ' ' → logprob: -12.850690841674805
    6. '	' → logprob: -13.475690841674805
    7. '   ' → logprob: -15.100690841674805
    8. ',' → logprob: -15.225690841674805
    9. '_n' → logprob: -15.413190841674805
    10. 'len' → logprob: -15.725690841674805

Token 193: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008706753142178059
    2. '):
' → logprob: -4.758706569671631
    3. ')' → logprob: -10.008707046508789
    4. '):
' → logprob: -10.258707046508789
    5. ' ):' → logprob: -12.383707046508789
    6. ':' → logprob: -12.383707046508789
    7. ',' → logprob: -13.383707046508789
    8. '	' → logprob: -13.633707046508789
    9. '):

' → logprob: -14.383707046508789
    10. '}:' → logprob: -16.88370704650879

Token 194: '	st' (ID: 31921)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.3996634781360626
    2. 'for' → logprob: -1.5246634483337402
    3. '	for' → logprob: -2.8996634483337402
    4. '	swap' → logprob: -2.8996634483337402
    5. ' for' → logprob: -7.52466344833374
    6. 'min' → logprob: -7.77466344833374
    7. '	min' → logprob: -8.649663925170898
    8. ' swap' → logprob: -8.649663925170898
    9. '	' → logprob: -9.774663925170898
    10. 'sw' → logprob: -9.899663925170898

Token 195: 'able' (ID: 562)
  Prédit: 'wap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wap' → logprob: -0.2967236042022705
    2. 'for' → logprob: -2.2967236042022705
    3. 'ap' → logprob: -2.4217236042022705
    4. '	for' → logprob: -3.1717236042022705
    5. 'w' → logprob: -4.921723365783691
    6. 'r' → logprob: -5.421723365783691
    7. '	swap' → logprob: -5.796723365783691
    8. '	' → logprob: -5.921723365783691
    9. 'swap' → logprob: -6.546723365783691
    10. 'aps' → logprob: -7.046723365783691

Token 196: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5365058183670044
    2. '=' → logprob: -0.9115058183670044
    3. '_' → logprob: -4.411505699157715
    4. '_count' → logprob: -7.286505699157715
    5. '_=' → logprob: -8.661505699157715
    6. '=False' → logprob: -9.036505699157715
    7. '_swap' → logprob: -10.161505699157715
    8. '=True' → logprob: -10.661505699157715
    9. 'y' → logprob: -11.036505699157715
    10. 'ness' → logprob: -11.161505699157715

Token 197: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.01604175940155983
    2. ' True' → logprob: -4.1410417556762695
    3. '	' → logprob: -13.14104175567627
    4. 'False' → logprob: -13.26604175567627
    5. '(True' → logprob: -13.39104175567627
    6. 'Tr' → logprob: -13.51604175567627
    7. '=True' → logprob: -14.76604175567627
    8. '1' → logprob: -15.89104175567627
    9. ' ' → logprob: -16.141042709350586
    10. 'true' → logprob: -16.141042709350586

Token 198: '
' (ID: 198)
  Prédit: '	for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	for' → logprob: -0.0018035804387181997
    2. 'for' → logprob: -6.501803398132324
    3. ' for' → logprob: -8.251803398132324
    4. '
' → logprob: -10.251803398132324
    5. '	
' → logprob: -12.876803398132324
    6. '	last' → logprob: -13.501803398132324
    7. '	' → logprob: -15.501803398132324
    8. '	prev' → logprob: -15.751803398132324
    9. '	swap' → logprob: -15.876803398132324
    10. '	min' → logprob: -16.00180435180664

Token 199: '	for' (ID: 3903)
  Prédit: '	for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	for' → logprob: -0.575985848903656
    2. 'for' → logprob: -0.825985848903656
    3. ' for' → logprob: -10.2009859085083
    4. '	swap' → logprob: -12.5759859085083
    5. 'swap' → logprob: -12.8259859085083
    6. '	' → logprob: -13.5759859085083
    7. '	min' → logprob: -14.4509859085083
    8. '	count' → logprob: -15.4509859085083
    9. '	last' → logprob: -15.9509859085083
    10. 'count' → logprob: -16.075984954833984

Token 200: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0008299979381263256
    2. ' i' → logprob: -7.125830173492432
    3. '	i' → logprob: -10.625829696655273
    4. ' ' → logprob: -14.625829696655273
    5. 'k' → logprob: -15.125829696655273
    6. '```' → logprob: -15.875829696655273
    7. '0' → logprob: -16.125829696655273
    8. '	' → logprob: -16.250829696655273
    9. '[i' → logprob: -16.500829696655273
    10. '
' → logprob: -16.875829696655273

Token 201: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016062524169683456
    2. 'in' → logprob: -4.1410627365112305
    3. ' ' → logprob: -11.64106273651123
    4. '	in' → logprob: -11.76606273651123
    5. 'range' → logprob: -12.01606273651123
    6. ',' → logprob: -12.64106273651123
    7. '	' → logprob: -14.39106273651123
    8. 'import' → logprob: -14.89106273651123
    9. '0' → logprob: -15.26606273651123
    10. '```' → logprob: -15.64106273651123

Token 202: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005275499541312456
    2. ' range' → logprob: -5.255275726318359
    3. '	range' → logprob: -10.75527572631836
    4. '(range' → logprob: -10.88027572631836
    5. ' ' → logprob: -14.38027572631836
    6. '	' → logprob: -15.25527572631836
    7. '
' → logprob: -16.00527572631836
    8. 'ange' → logprob: -16.00527572631836
    9. '   ' → logprob: -16.13027572631836
    10. '```' → logprob: -16.25527572631836

Token 203: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5775035619735718
    2. '(' → logprob: -0.8275035619735718
    3. ',' → logprob: -6.577503681182861
    4. ' (' → logprob: -9.202503204345703
    5. '	' → logprob: -10.827503204345703
    6. '0' → logprob: -10.827503204345703
    7. '(len' → logprob: -11.577503204345703
    8. ' ,' → logprob: -11.952503204345703
    9. 'n' → logprob: -12.077503204345703
    10. ',n' → logprob: -12.202503204345703

Token 204: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.35242971777915955
    2. '):
' → logprob: -1.227429747581482
    3. '	' → logprob: -6.4774298667907715
    4. '-' → logprob: -6.9774298667907715
    5. ',' → logprob: -7.7274298667907715
    6. ')' → logprob: -7.9774298667907715
    7. '+' → logprob: -8.352429389953613
    8. ' ):' → logprob: -9.227429389953613
    9. '):
' → logprob: -9.602429389953613
    10. ':' → logprob: -9.852429389953613

Token 205: '	' (ID: 197)
  Prédit: '	min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	min' → logprob: -0.049268584698438644
    2. 'min' → logprob: -3.0492684841156006
    3. '	' → logprob: -7.92426872253418
    4. ' min' → logprob: -8.92426872253418
    5. '	index' → logprob: -9.92426872253418
    6. '	max' → logprob: -10.04926872253418
    7. '_min' → logprob: -11.04926872253418
    8. '	k' → logprob: -11.29926872253418
    9. '	pos' → logprob: -11.54926872253418
    10. 'mini' → logprob: -11.92426872253418

Token 206: '	min' (ID: 50614)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.16033299267292023
    2. '	min' → logprob: -1.9103330373764038
    3. '	' → logprob: -9.910332679748535
    4. ' min' → logprob: -10.285332679748535
    5. '_min' → logprob: -12.035332679748535
    6. 'mini' → logprob: -12.035332679748535
    7. 'minimum' → logprob: -12.535332679748535
    8. '		' → logprob: -12.660332679748535
    9. '	m' → logprob: -13.285332679748535
    10. 'max' → logprob: -14.285332679748535

Token 207: 'j' (ID: 73)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.2037297785282135
    2. '_index' → logprob: -2.2037298679351807
    3. '_j' → logprob: -2.8287298679351807
    4. '_' → logprob: -4.953729629516602
    5. 'j' → logprob: -5.078729629516602
    6. '_i' → logprob: -6.703729629516602
    7. '_pos' → logprob: -9.328729629516602
    8. '	' → logprob: -9.328729629516602
    9. 'idx' → logprob: -10.453729629516602
    10. '	j' → logprob: -10.828729629516602

Token 208: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4748154878616333
    2. ' =' → logprob: -0.9748154878616333
    3. '=i' → logprob: -7.224815368652344
    4. '	' → logprob: -12.474815368652344
    5. ' ' → logprob: -12.974815368652344
    6. '＝' → logprob: -13.724815368652344
    7. '=int' → logprob: -13.849815368652344
    8. '=j' → logprob: -13.849815368652344
    9. ',' → logprob: -15.724815368652344
    10. '=index' → logprob: -15.974815368652344

Token 209: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006234383210539818
    2. ' i' → logprob: -5.131234169006348
    3. '	i' → logprob: -8.131234169006348
    4. '<|end|>' → logprob: -11.756234169006348
    5. ' ' → logprob: -13.006234169006348
    6. '<|end|>' → logprob: -14.631234169006348
    7. '=i' → logprob: -15.631234169006348
    8. '[i' → logprob: -15.756234169006348
    9. ',i' → logprob: -16.006235122680664
    10. '*i' → logprob: -16.381235122680664

Token 210: '
' (ID: 198)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.825605571269989
    2. '	for' → logprob: -1.0756056308746338
    3. '
' → logprob: -1.9506056308746338
    4. ' for' → logprob: -3.450605630874634
    5. '<|end|>' → logprob: -3.825605630874634
    6. 'for' → logprob: -4.325605392456055
    7. '		
' → logprob: -5.200605392456055
    8. '		' → logprob: -5.700605392456055
    9. '	
' → logprob: -6.825605392456055
    10. '<|end|>' → logprob: -7.075605392456055

Token 211: '	' (ID: 197)
  Prédit: '	'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.03201950713992119
    2. '	for' → logprob: -3.65701961517334
    3. ' for' → logprob: -5.40701961517334
    4. 'for' → logprob: -6.78201961517334
    5. '		' → logprob: -10.15701961517334
    6. '
' → logprob: -10.53201961517334
    7. '       ' → logprob: -11.90701961517334
    8. '		
' → logprob: -12.28201961517334
    9. '	   ' → logprob: -13.65701961517334
    10. ',' → logprob: -13.78201961517334

Token 212: '	for' (ID: 3903)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06592616438865662
    2. '	' → logprob: -3.0659260749816895
    3. '	for' → logprob: -4.3159260749816895
    4. ' for' → logprob: -5.5659260749816895
    5. '   ' → logprob: -12.315926551818848
    6. '       ' → logprob: -13.315926551818848
    7. '		' → logprob: -13.565926551818848
    8. '	   ' → logprob: -13.940926551818848
    9. ' ' → logprob: -15.065926551818848
    10. '_for' → logprob: -16.06592559814453

Token 213: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4741097390651703
    2. ' j' → logprob: -0.9741097688674927
    3. '	j' → logprob: -10.349109649658203
    4. ' ' → logprob: -14.849109649658203
    5. ' ' → logprob: -16.099109649658203
    6. '[j' → logprob: -16.599109649658203
    7. '   ' → logprob: -17.474109649658203
    8. '$j' → logprob: -17.849109649658203
    9. '```' → logprob: -17.849109649658203
    10. ',j' → logprob: -17.849109649658203

Token 214: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12720872461795807
    2. 'in' → logprob: -2.127208709716797
    3. 'range' → logprob: -8.502208709716797
    4. ' range' → logprob: -10.627208709716797
    5. '	' → logprob: -10.752208709716797
    6. '	in' → logprob: -11.127208709716797
    7. '		' → logprob: -11.752208709716797
    8. ' ' → logprob: -12.502208709716797
    9. 'import' → logprob: -13.002208709716797
    10. ' i' → logprob: -13.627208709716797

Token 215: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1269315630197525
    2. ' range' → logprob: -2.126931667327881
    3. 'i' → logprob: -13.501931190490723
    4. '(range' → logprob: -13.751931190490723
    5. '	range' → logprob: -14.376931190490723
    6. ' i' → logprob: -14.876931190490723
    7. ' ' → logprob: -16.50193214416504
    8. '(i' → logprob: -17.75193214416504
    9. '[i' → logprob: -18.62693214416504
    10. ' in' → logprob: -18.87693214416504

Token 216: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.07456740736961365
    2. 'i' → logprob: -2.9495673179626465
    3. ' i' → logprob: -4.6995673179626465
    4. 'range' → logprob: -4.9495673179626465
    5. ' range' → logprob: -5.9495673179626465
    6. ' (' → logprob: -8.199567794799805
    7. '(range' → logprob: -9.074567794799805
    8. '	i' → logprob: -9.199567794799805
    9. '	' → logprob: -9.574567794799805
    10. '(' → logprob: -9.824567794799805

Token 217: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.23376472294330597
    2. ',' → logprob: -1.8587647676467896
    3. ' +' → logprob: -2.9837646484375
    4. ',n' → logprob: -6.3587646484375
    5. ' ,' → logprob: -9.1087646484375
    6. '	' → logprob: -9.8587646484375
    7. 'n' → logprob: -10.8587646484375
    8. '1' → logprob: -10.8587646484375
    9. '+n' → logprob: -11.1087646484375
    10. '	n' → logprob: -11.6087646484375

Token 218: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12742651998996735
    2. ' n' → logprob: -2.1274266242980957
    3. '	n' → logprob: -7.627426624298096
    4. '	' → logprob: -12.127426147460938
    5. ' ' → logprob: -13.627426147460938
    6. '		' → logprob: -13.752426147460938
    7. ',n' → logprob: -14.502426147460938
    8. '   ' → logprob: -14.502426147460938
    9. '(n' → logprob: -14.877426147460938
    10. '    ' → logprob: -15.002426147460938

Token 219: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3133556544780731
    2. '):' → logprob: -1.3133556842803955
    3. '	' → logprob: -10.188355445861816
    4. '):
' → logprob: -10.438355445861816
    5. '):

' → logprob: -11.313355445861816
    6. ')' → logprob: -12.438355445861816
    7. ':' → logprob: -12.688355445861816
    8. '+' → logprob: -12.813355445861816
    9. ',' → logprob: -13.563355445861816
    10. '		' → logprob: -13.938355445861816

Token 220: '		' (ID: 335)
  Prédit: '		'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.0034641751553863287
    2. ' if' → logprob: -5.878464221954346
    3. '           ' → logprob: -7.878464221954346
    4. '	if' → logprob: -9.503463745117188
    5. '		   ' → logprob: -9.878463745117188
    6. '	' → logprob: -10.128463745117188
    7. 'if' → logprob: -10.753463745117188
    8. '			' → logprob: -11.128463745117188
    9. '<|end|>' → logprob: -11.128463745117188
    10. ' ' → logprob: -11.503463745117188

Token 221: '	if' (ID: 1224)
  Prédit: '		'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.199236199259758
    2. ' if' → logprob: -1.8242361545562744
    3. 'if' → logprob: -4.0742363929748535
    4. '	if' → logprob: -7.0742363929748535
    5. '           ' → logprob: -7.3242363929748535
    6. '			' → logprob: -7.3242363929748535
    7. '		   ' → logprob: -10.574235916137695
    8. ' ' → logprob: -10.824235916137695
    9. '   ' → logprob: -10.949235916137695
    10. '	' → logprob: -11.074235916137695

Token 222: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0019324433524161577
    2. ' arr' → logprob: -6.251932621002197
    3. '	arr' → logprob: -12.501932144165039
    4. '		' → logprob: -17.00193214416504
    5. '(arr' → logprob: -17.75193214416504
    6. '<arr' → logprob: -18.75193214416504
    7. '$arr' → logprob: -18.87693214416504
    8. '[arr' → logprob: -19.62693214416504
    9. '_arr' → logprob: -19.75193214416504
    10. '	' → logprob: -20.00193214416504

Token 223: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: 0.0
    2. '[i' → logprob: -17.0
    3. '[' → logprob: -17.5
    4. '```' → logprob: -18.875
    5. '	j' → logprob: -19.375
    6. 'j' → logprob: -19.5
    7. ')[' → logprob: -19.5
    8. '   ' → logprob: -19.75
    9. '[a' → logprob: -20.125
    10. '
' → logprob: -20.125

Token 224: '].' (ID: 1651)
  Prédit: '.value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -8.172891830326989e-05
    2. '.' → logprob: -9.625082015991211
    3. '].' → logprob: -11.625082015991211
    4. ').' → logprob: -12.500082015991211
    5. ' .' → logprob: -13.875082015991211
    6. '}.' → logprob: -14.125082015991211
    7. '>.' → logprob: -14.500082015991211
    8. '.val' → logprob: -15.750082015991211
    9. '<|end|>' → logprob: -16.00008201599121
    10. 'value' → logprob: -16.37508201599121

Token 225: 'value' (ID: 1594)
  Prédit: 'value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -3.15441757265944e-05
    2. '.value' → logprob: -10.625031471252441
    3. ' value' → logprob: -12.125031471252441
    4. '"value' → logprob: -14.375031471252441
    5. '	value' → logprob: -14.875031471252441
    6. 'alue' → logprob: -15.625031471252441
    7. ''value' → logprob: -15.875031471252441
    8. '```' → logprob: -16.250032424926758
    9. '(value' → logprob: -16.750032424926758
    10. 'card' → logprob: -16.875032424926758

Token 226: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5233901739120483
    2. ' <' → logprob: -0.8983901739120483
    3. '<arr' → logprob: -8.27338981628418
    4. ' ' → logprob: -11.77338981628418
    5. '<int' → logprob: -14.02338981628418
    6. '[' → logprob: -14.77338981628418
    7. ' ' → logprob: -15.02338981628418
    8. '<class' → logprob: -15.39838981628418
    9. '	' → logprob: -15.52338981628418
    10. 'arr' → logprob: -15.64838981628418

Token 227: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.000558512459974736
    2. ' arr' → logprob: -7.500558376312256
    3. '	arr' → logprob: -12.125558853149414
    4. '_arr' → logprob: -18.500558853149414
    5. '$arr' → logprob: -18.625558853149414
    6. '(arr' → logprob: -18.750558853149414
    7. '[arr' → logprob: -18.750558853149414
    8. '<arr' → logprob: -18.750558853149414
    9. ' ' → logprob: -19.125558853149414
    10. '
' → logprob: -19.125558853149414

Token 228: '[min' (ID: 135647)
  Prédit: '[min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -0.05295044556260109
    2. '[j' → logprob: -3.177950382232666
    3. 'min' → logprob: -4.802950382232666
    4. 'j' → logprob: -7.677950382232666
    5. '.min' → logprob: -7.802950382232666
    6. '	min' → logprob: -8.052950859069824
    7. '[i' → logprob: -8.802950859069824
    8. 'arr' → logprob: -9.302950859069824
    9. '.' → logprob: -9.677950859069824
    10. ' min' → logprob: -9.802950859069824

Token 229: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.842555426876061e-06
    2. 'arr' → logprob: -12.625004768371582
    3. 'i' → logprob: -14.875004768371582
    4. '```' → logprob: -15.125004768371582
    5. ']' → logprob: -15.250004768371582
    6. '	j' → logprob: -15.875004768371582
    7. ' j' → logprob: -16.1250057220459
    8. ')' → logprob: -16.6250057220459
    9. '_j' → logprob: -16.6250057220459
    10. '[j' → logprob: -17.1250057220459

Token 230: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.07913576066493988
    2. '.value' → logprob: -2.5791356563568115
    3. ']' → logprob: -9.20413589477539
    4. '.' → logprob: -9.82913589477539
    5. ' ].' → logprob: -10.20413589477539
    6. '	' → logprob: -11.32913589477539
    7. 'value' → logprob: -11.57913589477539
    8. '.val' → logprob: -11.95413589477539
    9. '[j' → logprob: -12.20413589477539
    10. 'j' → logprob: -12.45413589477539

Token 231: 'value' (ID: 1594)
  Prédit: 'value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.100290447473526
    2. 'j' → logprob: -2.350290536880493
    3. ' value' → logprob: -9.975290298461914
    4. '.value' → logprob: -10.975290298461914
    5. ' j' → logprob: -11.975290298461914
    6. '	value' → logprob: -12.350290298461914
    7. '[j' → logprob: -13.850290298461914
    8. '_value' → logprob: -13.850290298461914
    9. '	j' → logprob: -14.225290298461914
    10. '```' → logprob: -14.350290298461914

Token 232: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1776823103427887
    2. ':' → logprob: -1.9276822805404663
    3. '			' → logprob: -4.552682399749756
    4. '		' → logprob: -6.177682399749756
    5. ':min' → logprob: -6.302682399749756
    6. '[min' → logprob: -6.802682399749756
    7. '):
' → logprob: -7.677682399749756
    8. 'min' → logprob: -7.677682399749756
    9. '               ' → logprob: -8.177681922912598
    10. '	min' → logprob: -9.427681922912598

Token 233: '			' (ID: 833)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6445565223693848
    2. '			' → logprob: -1.3945565223693848
    3. '	min' → logprob: -2.5195565223693848
    4. '		' → logprob: -2.7695565223693848
    5. ' min' → logprob: -2.8945565223693848
    6. '[min' → logprob: -3.7695565223693848
    7. ':min' → logprob: -6.769556522369385
    8. ':
' → logprob: -6.894556522369385
    9. '(min' → logprob: -6.894556522369385
    10. '				' → logprob: -7.394556522369385

Token 234: '	min' (ID: 50614)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.016217829659581184
    2. ' min' → logprob: -4.2662177085876465
    3. '	min' → logprob: -6.2662177085876465
    4. '			' → logprob: -9.641218185424805
    5. '				' → logprob: -9.766218185424805
    6. '[min' → logprob: -11.016218185424805
    7. '_min' → logprob: -12.391218185424805
    8. '(min' → logprob: -12.641218185424805
    9. '		' → logprob: -12.891218185424805
    10. ',min' → logprob: -13.391218185424805

Token 235: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.1008713702030946e-06
    2. '	j' → logprob: -14.375001907348633
    3. 'min' → logprob: -15.250001907348633
    4. '	' → logprob: -15.375001907348633
    5. '```' → logprob: -15.500001907348633
    6. 'arr' → logprob: -15.500001907348633
    7. '
' → logprob: -16.125001907348633
    8. ' j' → logprob: -16.250001907348633
    9. '		' → logprob: -16.375001907348633
    10. '

' → logprob: -16.625001907348633

Token 236: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3136667013168335
    2. '=' → logprob: -1.3136667013168335
    3. '=j' → logprob: -7.813666820526123
    4. '	' → logprob: -15.438666343688965
    5. '		' → logprob: -15.563666343688965
    6. ' ' → logprob: -15.938666343688965
    7. '＝' → logprob: -15.938666343688965
    8. 'j' → logprob: -16.56366729736328
    9. ' j' → logprob: -17.18866729736328
    10. ' =
' → logprob: -17.31366729736328

Token 237: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.014184661209583282
    2. ' j' → logprob: -4.264184474945068
    3. '	j' → logprob: -10.764184951782227
    4. '$j' → logprob: -18.139184951782227
    5. '[j' → logprob: -18.389184951782227
    6. ' ' → logprob: -19.889184951782227
    7. '	' → logprob: -20.139184951782227
    8. '		' → logprob: -20.889184951782227
    9. ':j' → logprob: -20.889184951782227
    10. ' ' → logprob: -21.014184951782227

Token 238: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09403987228870392
    2. '	' → logprob: -2.7190399169921875
    3. '		
' → logprob: -4.0940399169921875
    4. '
' → logprob: -5.8440399169921875
    5. '<|end|>' → logprob: -6.9690399169921875
    6. '		' → logprob: -7.3440399169921875
    7. '

' → logprob: -7.3440399169921875
    8. '' → logprob: -7.7190399169921875
    9. '	
' → logprob: -8.094039916992188
    10. '				
' → logprob: -8.469039916992188

Token 239: '	' (ID: 197)
  Prédit: '	'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.012341880239546299
    2. '
' → logprob: -4.6373419761657715
    3. '		
' → logprob: -6.1373419761657715
    4. '		' → logprob: -8.387341499328613
    5. '       ' → logprob: -10.012341499328613
    6. '	if' → logprob: -10.262341499328613
    7. '
' → logprob: -11.012341499328613
    8. '				
' → logprob: -11.262341499328613
    9. '			
' → logprob: -11.762341499328613
    10. '	
' → logprob: -11.762341499328613

Token 240: '	if' (ID: 1224)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.3248273432254791
    2. 'if' → logprob: -1.3248273134231567
    3. ' if' → logprob: -5.199827194213867
    4. '	if' → logprob: -5.949827194213867
    5. 'swap' → logprob: -6.199827194213867
    6. '
' → logprob: -6.949827194213867
    7. '		' → logprob: -8.699827194213867
    8. '	swap' → logprob: -9.949827194213867
    9. '		
' → logprob: -10.199827194213867
    10. ' swap' → logprob: -10.449827194213867

Token 241: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0011190229561179876
    2. ' min' → logprob: -6.876119136810303
    3. 'i' → logprob: -10.001118659973145
    4. '	min' → logprob: -10.251118659973145
    5. 'arr' → logprob: -12.376118659973145
    6. ' i' → logprob: -13.751118659973145
    7. '(min' → logprob: -16.25111961364746
    8. 'not' → logprob: -16.37611961364746
    9. ' arr' → logprob: -17.37611961364746
    10. '   ' → logprob: -17.62611961364746

Token 242: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00018792471382766962
    2. 'min' → logprob: -8.625187873840332
    3. ' min' → logprob: -13.125187873840332
    4. '(min' → logprob: -13.250187873840332
    5. '[min' → logprob: -13.750187873840332
    6. '```' → logprob: -14.750187873840332
    7. ' j' → logprob: -14.875187873840332
    8. '[j' → logprob: -15.000187873840332
    9. '	' → logprob: -15.500187873840332
    10. '	min' → logprob: -15.625187873840332

Token 243: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.4741118848323822
    2. '!=' → logprob: -0.9741119146347046
    3. '		' → logprob: -11.349111557006836
    4. '	' → logprob: -11.599111557006836
    5. '				' → logprob: -12.599111557006836
    6. 'is' → logprob: -13.099111557006836
    7. ']!=' → logprob: -13.349111557006836
    8. '			' → logprob: -13.349111557006836
    9. ')!=' → logprob: -13.974111557006836
    10. '```' → logprob: -14.474111557006836

Token 244: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006583464564755559
    2. ' i' → logprob: -7.3756585121154785
    3. '	i' → logprob: -10.37565803527832
    4. '<|end|>' → logprob: -14.87565803527832
    5. '	' → logprob: -16.25065803527832
    6. ' ' → logprob: -16.75065803527832
    7. '<|end|>' → logprob: -17.50065803527832
    8. '```' → logprob: -17.62565803527832
    9. '[i' → logprob: -18.12565803527832
    10. '
' → logprob: -18.37565803527832

Token 245: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.22891178727149963
    2. ':' → logprob: -1.7289117574691772
    3. '		' → logprob: -3.978911876678467
    4. ' and' → logprob: -5.103911876678467
    5. '	' → logprob: -6.353911876678467
    6. ':

' → logprob: -8.728911399841309
    7. 'and' → logprob: -8.978911399841309
    8. ',' → logprob: -9.478911399841309
    9. ':
' → logprob: -9.478911399841309
    10. '			' → logprob: -9.978911399841309

Token 246: '		' (ID: 335)
  Prédit: '		'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.06965405493974686
    2. 'if' → logprob: -3.0696539878845215
    3. 'swap' → logprob: -5.1946539878845215
    4. ' if' → logprob: -5.4446539878845215
    5. 'stable' → logprob: -5.8196539878845215
    6. '           ' → logprob: -5.8196539878845215
    7. 'st' → logprob: -6.1946539878845215
    8. '#' → logprob: -7.3196539878845215
    9. '	' → logprob: -7.8196539878845215
    10. '	if' → logprob: -7.9446539878845215

Token 247: '	for' (ID: 3903)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.29811376333236694
    2. '		' → logprob: -1.7981138229370117
    3. 'if' → logprob: -2.9231138229370117
    4. 'stable' → logprob: -4.173113822937012
    5. 'temp' → logprob: -4.673113822937012
    6. '	swap' → logprob: -5.048113822937012
    7. '#' → logprob: -6.298113822937012
    8. 'tmp' → logprob: -6.673113822937012
    9. ' swap' → logprob: -7.298113822937012
    10. 'st' → logprob: -7.548113822937012

Token 248: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.005533031187951565
    2. ' k' → logprob: -5.380533218383789
    3. 'j' → logprob: -7.130533218383789
    4. '	k' → logprob: -9.255533218383789
    5. ' j' → logprob: -11.630533218383789
    6. '(k' → logprob: -13.005533218383789
    7. '	j' → logprob: -13.630533218383789
    8. 'x' → logprob: -14.130533218383789
    9. '	' → logprob: -14.505533218383789
    10. '```' → logprob: -14.755533218383789

Token 249: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.42915135622024536
    2. 'in' → logprob: -1.0541512966156006
    3. 'range' → logprob: -7.92915153503418
    4. 'i' → logprob: -10.67915153503418
    5. '	in' → logprob: -11.05415153503418
    6. ',' → logprob: -11.42915153503418
    7. '		' → logprob: -12.17915153503418
    8. 'from' → logprob: -12.30415153503418
    9. '	' → logprob: -12.30415153503418
    10. '```' → logprob: -12.30415153503418

Token 250: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023252815008163452
    2. ' range' → logprob: -3.7732527256011963
    3. '	range' → logprob: -12.148252487182617
    4. '(range' → logprob: -14.273252487182617
    5. '		' → logprob: -14.773252487182617
    6. '	' → logprob: -15.023252487182617
    7. '   ' → logprob: -15.148252487182617
    8. 're' → logprob: -16.273252487182617
    9. '
' → logprob: -16.773252487182617
    10. ' ' → logprob: -16.898252487182617

Token 251: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.17615434527397156
    2. '(min' → logprob: -2.551154375076294
    3. 'min' → logprob: -3.176154375076294
    4. 'i' → logprob: -3.301154375076294
    5. '	i' → logprob: -6.176154136657715
    6. '	min' → logprob: -6.176154136657715
    7. '	' → logprob: -7.676154136657715
    8. '(' → logprob: -9.551154136657715
    9. '   ' → logprob: -9.801154136657715
    10. '		' → logprob: -9.801154136657715

Token 252: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.053871817886829376
    2. ',min' → logprob: -3.3038718700408936
    3. '+' → logprob: -4.3038716316223145
    4. 'min' → logprob: -7.0538716316223145
    5. ',k' → logprob: -7.8038716316223145
    6. '	min' → logprob: -7.9288716316223145
    7. '	' → logprob: -8.178872108459473
    8. ' ,' → logprob: -10.053872108459473
    9. '	   ' → logprob: -10.053872108459473
    10. ' +' → logprob: -10.303872108459473

Token 253: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00025204161647707224
    2. ' ' → logprob: -8.375251770019531
    3. '	' → logprob: -11.625251770019531
    4. '0' → logprob: -12.500251770019531
    5. '		' → logprob: -12.750251770019531
    6. 'k' → logprob: -13.250251770019531
    7. '   ' → logprob: -13.500251770019531
    8. ' k' → logprob: -14.625251770019531
    9. '			' → logprob: -15.125251770019531
    10. '     ' → logprob: -15.375251770019531

Token 254: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010866894444916397
    2. 'min' → logprob: -9.37510871887207
    3. '0' → logprob: -11.37510871887207
    4. ' ' → logprob: -12.12510871887207
    5. 'k' → logprob: -12.25010871887207
    6. 'n' → logprob: -14.12510871887207
    7. '	' → logprob: -15.00010871887207
    8. '	min' → logprob: -15.37510871887207
    9. '(' → logprob: -15.62510871887207
    10. '(min' → logprob: -15.75010871887207

Token 255: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26284828782081604
    2. ',min' → logprob: -1.5128482580184937
    3. 'min' → logprob: -4.637848377227783
    4. '	min' → logprob: -6.887848377227783
    5. ',k' → logprob: -10.012847900390625
    6. ' ,' → logprob: -10.387847900390625
    7. '	' → logprob: -10.512847900390625
    8. '		' → logprob: -11.137847900390625
    9. ' min' → logprob: -11.387847900390625
    10. '(min' → logprob: -12.012847900390625

Token 256: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0001478796184528619
    2. ' min' → logprob: -9.250147819519043
    3. '	min' → logprob: -10.000147819519043
    4. 'n' → logprob: -12.000147819519043
    5. '[min' → logprob: -16.75014877319336
    6. '(min' → logprob: -16.87514877319336
    7. ',min' → logprob: -17.37514877319336
    8. '	n' → logprob: -17.37514877319336
    9. '=min' → logprob: -17.87514877319336
    10. '		' → logprob: -18.00014877319336

Token 257: 'j' (ID: 73)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.34824591875076294
    2. 'j' → logprob: -1.7232458591461182
    3. 'min' → logprob: -2.848245859146118
    4. '1' → logprob: -3.348245859146118
    5. '	' → logprob: -4.848246097564697
    6. '(n' → logprob: -5.098246097564697
    7. '		' → logprob: -5.723246097564697
    8. '	n' → logprob: -6.223246097564697
    9. '```' → logprob: -7.098246097564697
    10. '``' → logprob: -7.598246097564697

Token 258: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.13009487092494965
    2. '):' → logprob: -2.1300947666168213
    3. '		' → logprob: -6.6300950050354
    4. '+' → logprob: -7.8800950050354
    5. ':' → logprob: -7.8800950050354
    6. '):
' → logprob: -8.130094528198242
    7. '	' → logprob: -8.255094528198242
    8. ':
' → logprob: -8.755094528198242
    9. '			' → logprob: -9.005094528198242
    10. ')' → logprob: -10.005094528198242

Token 259: '			' (ID: 833)
  Prédit: '			'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '			' → logprob: -0.1414518654346466
    2. ' if' → logprob: -2.266451835632324
    3. 'if' → logprob: -4.016451835632324
    4. '		' → logprob: -5.391451835632324
    5. '               ' → logprob: -5.891451835632324
    6. '	if' → logprob: -6.516451835632324
    7. '			   ' → logprob: -8.016451835632324
    8. '				
' → logprob: -8.266451835632324
    9. '	' → logprob: -8.391451835632324
    10. '				' → logprob: -8.766451835632324

Token 260: '	if' (ID: 1224)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006629874464124441
    2. '		' → logprob: -5.256629943847656
    3. '			' → logprob: -7.131629943847656
    4. ' if' → logprob: -7.631629943847656
    5. '	if' → logprob: -9.381629943847656
    6. '				' → logprob: -10.756629943847656
    7. '           ' → logprob: -13.256629943847656
    8. '	' → logprob: -13.506629943847656
    9. '               ' → logprob: -14.631629943847656
    10. 'If' → logprob: -14.756629943847656

Token 261: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.000755427754484117
    2. ' arr' → logprob: -7.250755310058594
    3. '	arr' → logprob: -10.125755310058594
    4. '			' → logprob: -13.000755310058594
    5. '				' → logprob: -13.250755310058594
    6. '		' → logprob: -14.375755310058594
    7. '(arr' → logprob: -15.250755310058594
    8. '[arr' → logprob: -15.375755310058594
    9. '$arr' → logprob: -15.875755310058594
    10. '<arr' → logprob: -16.375755310058594

Token 262: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.4259644558478612e-05
    2. 'k' → logprob: -11.250014305114746
    3. '[j' → logprob: -14.000014305114746
    4. '	k' → logprob: -15.875014305114746
    5. '{k' → logprob: -16.87501335144043
    6. '[min' → logprob: -17.12501335144043
    7. ',k' → logprob: -17.12501335144043
    8. '[i' → logprob: -17.25001335144043
    9. '[' → logprob: -17.50001335144043
    10. '				' → logprob: -17.62501335144043

Token 263: '].' (ID: 1651)
  Prédit: '.value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -2.4034345187828876e-05
    2. '.' → logprob: -11.25002384185791
    3. '].' → logprob: -12.00002384185791
    4. ').' → logprob: -13.00002384185791
    5. 'value' → logprob: -13.87502384185791
    6. ' .' → logprob: -14.25002384185791
    7. '>.' → logprob: -14.87502384185791
    8. '.val' → logprob: -15.37502384185791
    9. '}.' → logprob: -16.000024795532227
    10. '.mark' → logprob: -16.750024795532227

Token 264: 'value' (ID: 1594)
  Prédit: 'value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -3.047134305234067e-05
    2. '.value' → logprob: -11.125030517578125
    3. 'card' → logprob: -11.375030517578125
    4. ' value' → logprob: -12.750030517578125
    5. '"value' → logprob: -15.375030517578125
    6. '```' → logprob: -15.625030517578125
    7. 'val' → logprob: -15.750030517578125
    8. 'mark' → logprob: -15.875030517578125
    9. 'alue' → logprob: -15.875030517578125
    10. '	value' → logprob: -16.375030517578125

Token 265: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.27311262488365173
    2. '<' → logprob: -1.7731126546859741
    3. ' ==' → logprob: -2.7731125354766846
    4. '>' → logprob: -5.273112773895264
    5. ' <' → logprob: -7.023112773895264
    6. '=' → logprob: -8.523112297058105
    7. '	' → logprob: -8.898112297058105
    8. '<arr' → logprob: -9.398112297058105
    9. ' >' → logprob: -9.648112297058105
    10. '<int' → logprob: -9.773112297058105

Token 266: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -2.057743949990254e-05
    2. ' arr' → logprob: -10.875020980834961
    3. '	arr' → logprob: -13.375020980834961
    4. '<arr' → logprob: -19.37502098083496
    5. '$arr' → logprob: -19.62502098083496
    6. '[arr' → logprob: -19.75002098083496
    7. 'a' → logprob: -20.12502098083496
    8. 'min' → logprob: -20.25002098083496
    9. '
' → logprob: -20.37502098083496
    10. '(arr' → logprob: -20.62502098083496

Token 267: '[i' (ID: 1768)
  Prédit: '[min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -0.00012642296496778727
    2. 'min' → logprob: -9.875126838684082
    3. '[i' → logprob: -10.125126838684082
    4. '[arr' → logprob: -10.375126838684082
    5. '[j' → logprob: -13.625126838684082
    6. 'arr' → logprob: -14.125126838684082
    7. '[' → logprob: -14.250126838684082
    8. ' min' → logprob: -15.250126838684082
    9. '	min' → logprob: -15.625126838684082
    10. '[max' → logprob: -15.875126838684082

Token 268: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -1.5570885807392187e-05
    2. '.value' → logprob: -11.375015258789062
    3. ']' → logprob: -13.375015258789062
    4. 'value' → logprob: -13.500015258789062
    5. ' ].' → logprob: -14.375015258789062
    6. '	' → logprob: -16.375015258789062
    7. ''].' → logprob: -16.625015258789062
    8. '[' → logprob: -16.750015258789062
    9. '}.' → logprob: -16.750015258789062
    10. '		' → logprob: -17.000015258789062

Token 269: 'value' (ID: 1594)
  Prédit: 'value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -2.117345684382599e-05
    2. ' value' → logprob: -11.625020980834961
    3. '.value' → logprob: -13.125020980834961
    4. 'swap' → logprob: -13.250020980834961
    5. 'card' → logprob: -13.375020980834961
    6. '```' → logprob: -13.375020980834961
    7. '	value' → logprob: -14.000020980834961
    8. '"value' → logprob: -14.125020980834961
    9. 'valu' → logprob: -14.500020980834961
    10. '
' → logprob: -14.750020980834961

Token 270: ':' (ID: 25)
  Prédit: '				'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '				' → logprob: -0.33069539070129395
    2. ':
' → logprob: -1.580695390701294
    3. ':' → logprob: -3.580695390701294
    4. '					' → logprob: -3.705695390701294
    5. '			' → logprob: -4.330695152282715
    6. '					
' → logprob: -6.330695152282715
    7. '		' → logprob: -6.580695152282715
    8. '                   ' → logprob: -6.705695152282715
    9. '	' → logprob: -6.705695152282715
    10. '						' → logprob: -6.955695152282715

Token 271: ' stable' (ID: 22105)
  Prédit: '				'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '				' → logprob: -0.004419555421918631
    2. '					' → logprob: -6.254419326782227
    3. '			' → logprob: -7.254419326782227
    4. '
' → logprob: -7.254419326782227
    5. '		' → logprob: -7.504419326782227
    6. '                   ' → logprob: -8.754419326782227
    7. '					
' → logprob: -9.129419326782227
    8. '				   ' → logprob: -9.254419326782227
    9. 'stable' → logprob: -10.504419326782227
    10. '				
' → logprob: -10.879419326782227

Token 272: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011793961748480797
    2. '=' → logprob: -4.511794090270996
    3. '=False' → logprob: -7.261794090270996
    4. '=True' → logprob: -10.511794090270996
    5. ' =
' → logprob: -11.761794090270996
    6. '=false' → logprob: -13.261794090270996
    7. ' ' → logprob: -13.261794090270996
    8. '			' → logprob: -13.636794090270996
    9. '=
' → logprob: -14.761794090270996
    10. '		' → logprob: -14.886794090270996

Token 273: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0031786637846380472
    2. ' False' → logprob: -5.753178596496582
    3. 'True' → logprob: -14.128178596496582
    4. '=False' → logprob: -16.1281795501709
    5. '(False' → logprob: -16.6281795501709
    6. 'false' → logprob: -18.5031795501709
    7. '	' → logprob: -18.6281795501709
    8. '.False' → logprob: -19.1281795501709
    9. '
' → logprob: -19.2531795501709
    10. 'F' → logprob: -19.3781795501709

Token 274: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23390533030033112
    2. '		' → logprob: -1.73390531539917
    3. '			
' → logprob: -4.98390531539917
    4. '				
' → logprob: -5.10890531539917
    5. '			' → logprob: -5.35890531539917
    6. '
' → logprob: -5.98390531539917
    7. '	swap' → logprob: -6.10890531539917
    8. '				' → logprob: -6.48390531539917
    9. '					
' → logprob: -6.73390531539917
    10. '		
' → logprob: -6.73390531539917

Token 275: '		' (ID: 335)
  Prédit: '		'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.005004852078855038
    2. '
' → logprob: -5.6300048828125
    3. 'swap' → logprob: -7.6300048828125
    4. ' swap' → logprob: -8.3800048828125
    5. '	swap' → logprob: -8.6300048828125
    6. '	' → logprob: -8.7550048828125
    7. '			
' → logprob: -9.3800048828125
    8. '			' → logprob: -9.5050048828125
    9. '           ' → logprob: -9.5050048828125
    10. '
' → logprob: -10.6300048828125

Token 276: '	swap' (ID: 167637)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.5339151620864868
    2. '		' → logprob: -0.9089151620864868
    3. ' swap' → logprob: -5.283915042877197
    4. '	swap' → logprob: -5.908915042877197
    5. '	' → logprob: -6.158915042877197
    6. '			' → logprob: -7.408915042877197
    7. '
' → logprob: -9.533915519714355
    8. '				' → logprob: -9.908915519714355
    9. '.swap' → logprob: -10.408915519714355
    10. '			
' → logprob: -10.533915519714355

Token 277: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -3.128163257315464e-07
    2. 'arr' → logprob: -15.5
    3. '[arr' → logprob: -17.25
    4. '(' → logprob: -17.5
    5. '<arr' → logprob: -17.75
    6. '	arr' → logprob: -17.875
    7. ' arr' → logprob: -19.75
    8. '(
' → logprob: -20.0
    9. '(ans' → logprob: -20.125
    10. '$arr' → logprob: -20.75

Token 278: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.644463479053229e-05
    2. '(arr' → logprob: -10.000046730041504
    3. 'arr' → logprob: -14.750046730041504
    4. ' ,' → logprob: -15.125046730041504
    5. '	arr' → logprob: -16.125045776367188
    6. '[arr' → logprob: -16.625045776367188
    7. ',
' → logprob: -17.125045776367188
    8. ',(' → logprob: -17.125045776367188
    9. ' arr' → logprob: -17.375045776367188
    10. ',i' → logprob: -17.875045776367188

Token 279: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.27464136481285095
    2. 'arr' → logprob: -1.6496413946151733
    3. ' i' → logprob: -3.149641275405884
    4. ' arr' → logprob: -5.274641513824463
    5. '	i' → logprob: -10.649641036987305
    6. '	arr' → logprob: -11.274641036987305
    7. 'min' → logprob: -12.024641036987305
    8. ' ' → logprob: -13.024641036987305
    9. ' min' → logprob: -14.149641036987305
    10. '   ' → logprob: -14.649641036987305

Token 280: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007151735480874777
    2. ',min' → logprob: -7.250715255737305
    3. ' ,' → logprob: -12.625715255737305
    4. 'min' → logprob: -13.250715255737305
    5. ' min' → logprob: -16.750715255737305
    6. '[min' → logprob: -16.875715255737305
    7. ',
' → logprob: -17.000715255737305
    8. '	min' → logprob: -17.875715255737305
    9. '	' → logprob: -18.125715255737305
    10. '```' → logprob: -18.750715255737305

Token 281: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0007125511183403432
    2. ' min' → logprob: -7.2507123947143555
    3. '	min' → logprob: -12.875712394714355
    4. '[min' → logprob: -17.375713348388672
    5. ' ' → logprob: -18.750713348388672
    6. 'minimum' → logprob: -18.875713348388672
    7. ',min' → logprob: -19.375713348388672
    8. '(min' → logprob: -19.375713348388672
    9. 'max' → logprob: -19.750713348388672
    10. '=min' → logprob: -20.000713348388672

Token 282: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.292907877039397e-06
    2. ' j' → logprob: -13.75000286102295
    3. 'i' → logprob: -15.00000286102295
    4. ')' → logprob: -15.00000286102295
    5. 'min' → logprob: -15.00000286102295
    6. '```' → logprob: -15.00000286102295
    7. '	j' → logprob: -15.62500286102295
    8. ' ' → logprob: -16.000003814697266
    9. '_j' → logprob: -16.312503814697266
    10. '
' → logprob: -16.687503814697266

Token 283: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002625278721097857
    2. ')
' → logprob: -8.250262260437012
    3. ')return' → logprob: -14.000262260437012
    4. ')

' → logprob: -15.625262260437012
    5. ')
' → logprob: -16.000263214111328
    6. ' )' → logprob: -16.750263214111328
    7. '<|end|>' → logprob: -17.375263214111328
    8. '	' → logprob: -17.875263214111328
    9. ')#' → logprob: -19.125263214111328
    10. '）' → logprob: -19.250263214111328

Token 284: '	return' (ID: 1393)
  Prédit: '	return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	return' → logprob: -0.00022952310973778367
    2. 'return' → logprob: -8.750229835510254
    3. ' return' → logprob: -9.875229835510254
    4. '	' → logprob: -11.375229835510254
    5. '		' → logprob: -12.750229835510254
    6. '   ' → logprob: -12.875229835510254
    7. '	for' → logprob: -14.125229835510254
    8. '	if' → logprob: -14.375229835510254
    9. '	print' → logprob: -15.000229835510254
    10. '<|end|>' → logprob: -15.500229835510254

Token 285: ' stable' (ID: 22105)
  Prédit: 'stable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stable' → logprob: -0.06202750653028488
    2. ' stable' → logprob: -2.8120274543762207
    3. 'st' → logprob: -10.312027931213379
    4. 'swap' → logprob: -11.687027931213379
    5. '(st' → logprob: -12.062027931213379
    6. 'not' → logprob: -12.312027931213379
    7. '	st' → logprob: -13.437027931213379
    8. '(' → logprob: -13.437027931213379
    9. 'arr' → logprob: -13.437027931213379
    10. ' not' → logprob: -13.812027931213379

Token 286: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 287: 'n' (ID: 77)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7147283554077148
    2. 'n' → logprob: -0.9647283554077148
    3. 'def' → logprob: -3.089728355407715
    4. 'cards' → logprob: -3.589728355407715
    5. 'arr' → logprob: -3.839728355407715
    6. 'import' → logprob: -4.589728355407715
    7. 'card' → logprob: -4.589728355407715
    8. '#' → logprob: -4.714728355407715
    9. 'input' → logprob: -5.839728355407715
    10. 'N' → logprob: -7.839728355407715

Token 288: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.015295258723199368
    2. '=' → logprob: -4.515295028686523
    3. ' ' → logprob: -5.515295028686523
    4. '<|end|>' → logprob: -9.765295028686523
    5. ',' → logprob: -10.140295028686523
    6. ' =
' → logprob: -10.640295028686523
    7. ' ,' → logprob: -11.015295028686523
    8. ' =)' → logprob: -11.140295028686523
    9. ' >' → logprob: -11.515295028686523
    10. ' ' → logprob: -11.640295028686523

Token 289: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.000158842682139948
    2. ' int' → logprob: -8.75015926361084
    3. '	int' → logprob: -15.37515926361084
    4. '[int' → logprob: -17.750158309936523
    5. '=int' → logprob: -18.625158309936523
    6. '<int' → logprob: -19.000158309936523
    7. '(int' → logprob: -19.000158309936523
    8. 'len' → logprob: -19.750158309936523
    9. 'input' → logprob: -20.250158309936523
    10. ' ' → logprob: -20.625158309936523

Token 290: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0014049944002181292
    2. '(sys' → logprob: -6.751404762268066
    3. '(' → logprob: -8.501404762268066
    4. 'input' → logprob: -10.626404762268066
    5. '()' → logprob: -12.001404762268066
    6. ' (' → logprob: -14.251404762268066
    7. '=input' → logprob: -15.751404762268066
    8. 'sys' → logprob: -16.376405715942383
    9. '(raw' → logprob: -16.751405715942383
    10. ' input' → logprob: -16.876405715942383

Token 291: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0009206312242895365
    2. '()' → logprob: -7.00092077255249
    3. '())
' → logprob: -12.125920295715332
    4. '().' → logprob: -13.000920295715332
    5. ' ())' → logprob: -14.750920295715332
    6. ')' → logprob: -15.000920295715332
    7. '(' → logprob: -15.250920295715332
    8. '()
' → logprob: -15.250920295715332
    9. '())

' → logprob: -16.25092124938965
    10. '();)' → logprob: -17.00092124938965

Token 292: 'arr' (ID: 1614)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.04918154701590538
    2. 'arr' → logprob: -3.0491814613342285
    3. 'card' → logprob: -8.299181938171387
    4. ' cards' → logprob: -8.924181938171387
    5. 'c' → logprob: -9.799181938171387
    6. 's' → logprob: -10.299181938171387
    7. 'a' → logprob: -10.549181938171387
    8. 'data' → logprob: -10.799181938171387
    9. '_cards' → logprob: -10.924181938171387
    10. 'raw' → logprob: -10.924181938171387

Token 293: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05490699037909508
    2. '=' → logprob: -2.9299070835113525
    3. '=[]' → logprob: -10.929906845092773
    4. '[' → logprob: -13.429906845092773
    5. '[]' → logprob: -13.554906845092773
    6. ',' → logprob: -14.054906845092773
    7. '_' → logprob: -14.429906845092773
    8. '	' → logprob: -14.679906845092773
    9. ' =[' → logprob: -14.804906845092773
    10. 's' → logprob: -14.804906845092773

Token 294: ' list' (ID: 1562)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.020617567002773285
    2. '[input' → logprob: -4.770617485046387
    3. '[' → logprob: -5.020617485046387
    4. '[]' → logprob: -5.520617485046387
    5. 'list' → logprob: -7.020617485046387
    6. '[str' → logprob: -8.770617485046387
    7. '[class' → logprob: -9.145617485046387
    8. '[List' → logprob: -9.895617485046387
    9. '[int' → logprob: -10.145617485046387
    10. '[]
' → logprob: -10.520617485046387

Token 295: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.030854402109980583
    2. '()' → logprob: -3.5308544635772705
    3. '(input' → logprob: -7.655854225158691
    4. '(' → logprob: -7.655854225158691
    5. '(Card' → logprob: -9.155854225158691
    6. '(C' → logprob: -10.280854225158691
    7. '(str' → logprob: -11.780854225158691
    8. '()
' → logprob: -12.780854225158691
    9. '(sys' → logprob: -13.905854225158691
    10. 'map' → logprob: -14.030854225158691

Token 296: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.007277564611285925
    2. '(lambda' → logprob: -5.507277488708496
    3. '(Card' → logprob: -5.757277488708496
    4. '(input' → logprob: -11.257277488708496
    5. 'str' → logprob: -11.382277488708496
    6. '(' → logprob: -11.757277488708496
    7. 'Card' → logprob: -14.382277488708496
    8. '(int' → logprob: -14.757277488708496
    9. '(sys' → logprob: -14.882277488708496
    10. ' str' → logprob: -15.257277488708496

Token 297: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06207367032766342
    2. ',input' → logprob: -2.8120737075805664
    3. 'input' → logprob: -9.437073707580566
    4. '(input' → logprob: -11.437073707580566
    5. ' ,' → logprob: -11.812073707580566
    6. ' input' → logprob: -12.687073707580566
    7. '(),' → logprob: -12.812073707580566
    8. '	input' → logprob: -14.062073707580566
    9. '=input' → logprob: -14.562073707580566
    10. '_input' → logprob: -14.687073707580566

Token 298: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0015786595176905394
    2. ' input' → logprob: -6.5015788078308105
    3. 'sys' → logprob: -9.501578330993652
    4. ' sys' → logprob: -13.876578330993652
    5. '<input' → logprob: -15.751578330993652
    6. '(input' → logprob: -15.876578330993652
    7. '	input' → logprob: -16.00157928466797
    8. ',input' → logprob: -16.37657928466797
    9. '=input' → logprob: -16.87657928466797
    10. ' ' → logprob: -17.25157928466797

Token 299: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.512236498361744e-07
    2. '()' → logprob: -14.750000953674316
    3. ' ().' → logprob: -16.5
    4. '(' → logprob: -16.625
    5. '.split' → logprob: -17.875
    6. '	' → logprob: -19.625
    7. '.' → logprob: -21.0
    8. '()
' → logprob: -21.5
    9. ' .' → logprob: -21.625
    10. 'split' → logprob: -22.125

Token 300: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.008619185537099838
    2. 'strip' → logprob: -4.75861930847168
    3. 'rstrip' → logprob: -12.50861930847168
    4. ' split' → logprob: -14.13361930847168
    5. '(split' → logprob: -16.00861930847168
    6. '.split' → logprob: -17.75861930847168
    7. ' strip' → logprob: -17.75861930847168
    8. 'spl' → logprob: -18.38361930847168
    9. '().' → logprob: -19.13361930847168
    10. 'read' → logprob: -19.25861930847168

Token 301: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.16134002804756165
    2. '))' → logprob: -1.9113399982452393
    3. '()' → logprob: -7.161340236663818
    4. '()))
' → logprob: -8.28633975982666
    5. '())' → logprob: -10.16133975982666
    6. '(' → logprob: -10.66133975982666
    7. '()));' → logprob: -12.03633975982666
    8. '()))

' → logprob: -12.16133975982666
    9. '))
' → logprob: -12.28633975982666
    10. ')' → logprob: -12.66133975982666

Token 302: 'cards' (ID: 40956)
  Prédit: 'cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.011378013528883457
    2. 'arr' → logprob: -4.886377811431885
    3. 'card' → logprob: -5.636377811431885
    4. ' cards' → logprob: -8.886378288269043
    5. '_cards' → logprob: -11.636378288269043
    6. 'data' → logprob: -11.886378288269043
    7. 'car' → logprob: -12.261378288269043
    8. 'print' → logprob: -12.261378288269043
    9. '.cards' → logprob: -12.386378288269043
    10. 'b' → logprob: -12.386378288269043

Token 303: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0076099359430372715
    2. '=' → logprob: -4.882609844207764
    3. '=[]' → logprob: -13.257610321044922
    4. '[:]' → logprob: -14.007610321044922
    5. 's' → logprob: -15.132610321044922
    6. ' =[' → logprob: -15.132610321044922
    7. '=[' → logprob: -15.757610321044922
    8. ' ' → logprob: -15.882610321044922
    9. '[' → logprob: -16.757610321044922
    10. '_' → logprob: -17.007610321044922

Token 304: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029757089912891388
    2. '=' → logprob: -3.529757022857666
    3. '[:]' → logprob: -13.404757499694824
    4. ' =[' → logprob: -13.529757499694824
    5. ',' → logprob: -13.779757499694824
    6. '＝' → logprob: -14.154757499694824
    7. '=[]' → logprob: -14.529757499694824
    8. '	' → logprob: -14.529757499694824
    9. ' ' → logprob: -15.154757499694824
    10. ' =
' → logprob: -15.654757499694824

Token 305: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5186784863471985
    2. '[list' → logprob: -1.0186784267425537
    3. '[arr' → logprob: -3.2686784267425537
    4. ' [' → logprob: -5.518678665161133
    5. '[List' → logprob: -7.393678665161133
    6. '[C' → logprob: -7.893678665161133
    7. '[array' → logprob: -8.268678665161133
    8. 'list' → logprob: -8.893678665161133
    9. '[class' → logprob: -9.643678665161133
    10. '[]' → logprob: -10.518678665161133

Token 306: 'None' (ID: 8505)
  Prédit: 'Card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Card' → logprob: -1.0206720617134124e-05
    2. ' Card' → logprob: -11.50001049041748
    3. '<Card' → logprob: -21.500009536743164
    4. '(Card' → logprob: -21.875009536743164
    5. 'Car' → logprob: -22.750009536743164
    6. '   ' → logprob: -22.875009536743164
    7. ' ' → logprob: -23.000009536743164
    8. ']' → logprob: -23.375009536743164
    9. '.Card' → logprob: -23.375009536743164
    10. 'Class' → logprob: -23.500009536743164

Token 307: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04052446037530899
    2. '(Card' → logprob: -4.040524482727051
    3. ']*' → logprob: -4.165524482727051
    4. ' for' → logprob: -5.790524482727051
    5. '(C' → logprob: -7.290524482727051
    6. ')' → logprob: -7.540524482727051
    7. 'for' → logprob: -7.665524482727051
    8. ']*(' → logprob: -8.04052448272705
    9. '(' → logprob: -8.16552448272705
    10. ',' → logprob: -8.16552448272705

Token 308: ' *' (ID: 425)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.055584486573934555
    2. ' for' → logprob: -3.80558443069458
    3. 'for' → logprob: -4.30558443069458
    4. '(len' → logprob: -4.93058443069458
    5. '(' → logprob: -5.68058443069458
    6. ']' → logprob: -5.80558443069458
    7. ',' → logprob: -6.43058443069458
    8. '(cards' → logprob: -6.80558443069458
    9. '(arr' → logprob: -8.055584907531738
    10. ' (' → logprob: -8.055584907531738

Token 309: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00021951000962872058
    2. ' n' → logprob: -8.500219345092773
    3. '(n' → logprob: -11.250219345092773
    4. '	n' → logprob: -12.875219345092773
    5. '[n' → logprob: -16.000219345092773
    6. 'len' → logprob: -16.000219345092773
    7. '
' → logprob: -16.500219345092773
    8. ' (' → logprob: -18.625219345092773
    9. '(' → logprob: -18.750219345092773
    10. ',n' → logprob: -19.000219345092773

Token 310: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8636928200721741
    2. 'cards' → logprob: -0.8636928200721741
    3. '<|end|>' → logprob: -2.4886927604675293
    4. 'for' → logprob: -3.9886927604675293
    5. '[' → logprob: -3.9886927604675293
    6. ' cards' → logprob: -4.363692760467529
    7. '(cards' → logprob: -5.113692760467529
    8. '  
' → logprob: -5.738692760467529
    9. ' for' → logprob: -5.863692760467529
    10. ',' → logprob: -6.363692760467529

Token 311: 'cards' (ID: 40956)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07966329902410507
    2. 'cards' → logprob: -2.5796632766723633
    3. ' for' → logprob: -7.329663276672363
    4. '	for' → logprob: -9.329663276672363
    5. ' cards' → logprob: -11.454663276672363
    6. '.cards' → logprob: -11.829663276672363
    7. '(cards' → logprob: -13.204663276672363
    8. '_cards' → logprob: -13.329663276672363
    9. '/cards' → logprob: -13.704663276672363
    10. '[' → logprob: -13.829663276672363

Token 312: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002691578818485141
    2. '1' → logprob: -6.002691745758057
    3. '_' → logprob: -9.377691268920898
    4. ' =' → logprob: -9.377691268920898
    5. '=' → logprob: -10.127691268920898
    6. ' ' → logprob: -13.002691268920898
    7. '_=' → logprob: -14.502691268920898
    8. '0' → logprob: -14.627691268920898
    9. '[' → logprob: -14.627691268920898
    10. '```' → logprob: -14.752691268920898

Token 313: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519504129886627
    2. '=' → logprob: -1.5019503831863403
    3. '=[' → logprob: -11.75195026397705
    4. ' =[' → logprob: -12.00195026397705
    5. '=[]' → logprob: -12.25195026397705
    6. '[' → logprob: -13.62695026397705
    7. '<|end|>' → logprob: -15.25195026397705
    8. '＝' → logprob: -15.25195026397705
    9. '[:]' → logprob: -16.001951217651367
    10. ' ' → logprob: -16.376951217651367

Token 314: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0702170729637146
    2. ' [' → logprob: -2.8202171325683594
    3. '[n' → logprob: -4.820217132568359
    4. '[arr' → logprob: -9.07021713256836
    5. 'arr' → logprob: -11.82021713256836
    6. '[list' → logprob: -12.07021713256836
    7. 'cards' → logprob: -12.32021713256836
    8. '[List' → logprob: -12.57021713256836
    9. '[N' → logprob: -12.69521713256836
    10. '[len' → logprob: -12.82021713256836

Token 315: 'None' (ID: 8505)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01871567592024803
    2. 'None' → logprob: -4.518715858459473
    3. ' n' → logprob: -4.893715858459473
    4. ' None' → logprob: -8.893715858459473
    5. ']' → logprob: -13.518715858459473
    6. '	n' → logprob: -13.643715858459473
    7. '[' → logprob: -13.768715858459473
    8. '
' → logprob: -14.268715858459473
    9. '(n' → logprob: -14.518715858459473
    10. '(None' → logprob: -14.518715858459473

Token 316: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6239815354347229
    2. '*' → logprob: -0.8739815354347229
    3. ']' → logprob: -3.123981475830078
    4. ')' → logprob: -5.998981475830078
    5. '*n' → logprob: -8.123981475830078
    6. ' n' → logprob: -9.748981475830078
    7. 'n' → logprob: -10.748981475830078
    8. '	' → logprob: -10.873981475830078
    9. ']*' → logprob: -10.873981475830078
    10. ' ' → logprob: -12.123981475830078

Token 317: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3546982705593109
    2. ' *' → logprob: -1.6046983003616333
    3. '*n' → logprob: -2.3546981811523438
    4. 'n' → logprob: -6.104698181152344
    5. '(n' → logprob: -7.979698181152344
    6. '[n' → logprob: -9.104698181152344
    7. '[' → logprob: -10.604698181152344
    8. ' n' → logprob: -10.979698181152344
    9. '*[' → logprob: -12.479698181152344
    10. '_n' → logprob: -13.354698181152344

Token 318: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.848420551046729e-05
    2. ' n' → logprob: -9.7500581741333
    3. '	n' → logprob: -16.250059127807617
    4. '(n' → logprob: -17.000059127807617
    5. '```' → logprob: -20.250059127807617
    6. '(' → logprob: -21.125059127807617
    7. '
' → logprob: -21.500059127807617
    8. '_n' → logprob: -21.500059127807617
    9. '[n' → logprob: -21.750059127807617
    10. '$n' → logprob: -21.875059127807617

Token 319: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011253184638917446
    2. ' for' → logprob: -4.511253356933594
    3. '	for' → logprob: -8.886253356933594
    4. '
' → logprob: -9.636253356933594
    5. '<|end|>' → logprob: -14.011253356933594
    6. '	
' → logprob: -14.761253356933594
    7. ' 
' → logprob: -15.511253356933594
    8. '[' → logprob: -16.386253356933594
    9. '
' → logprob: -16.886253356933594
    10. '	' → logprob: -17.261253356933594

Token 320: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002656271681189537
    2. ' for' → logprob: -8.250266075134277
    3. '	for' → logprob: -12.375266075134277
    4. '<|end|>' → logprob: -15.875266075134277
    5. '
' → logprob: -17.87526512145996
    6. 'i' → logprob: -19.00026512145996
    7. '[' → logprob: -19.87526512145996
    8. '

' → logprob: -20.75026512145996
    9. ' 
' → logprob: -20.87526512145996
    10. '	
' → logprob: -21.00026512145996

Token 321: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02324768900871277
    2. ' i' → logprob: -3.773247718811035
    3. '	i' → logprob: -13.023247718811035
    4. 'x' → logprob: -17.39824676513672
    5. '_i' → logprob: -17.89824676513672
    6. 'k' → logprob: -18.14824676513672
    7. ' ' → logprob: -18.27324676513672
    8. 'index' → logprob: -18.77324676513672
    9. '(i' → logprob: -18.77324676513672
    10. 'idx' → logprob: -19.02324676513672

Token 322: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02066170610487461
    2. 'in' → logprob: -3.8956615924835205
    3. '	in' → logprob: -9.395661354064941
    4. ' ' → logprob: -10.770661354064941
    5. ',' → logprob: -11.770661354064941
    6. ' i' → logprob: -12.645661354064941
    7. 'i' → logprob: -13.770661354064941
    8. '	' → logprob: -14.270661354064941
    9. 'In' → logprob: -14.645661354064941
    10. 'range' → logprob: -14.770661354064941

Token 323: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005551783833652735
    2. ' range' → logprob: -7.500555038452148
    3. 'in' → logprob: -13.250555038452148
    4. '	range' → logprob: -16.12555503845215
    5. '(range' → logprob: -16.12555503845215
    6. ' ' → logprob: -16.25055503845215
    7. ' in' → logprob: -16.75055503845215
    8. 'n' → logprob: -18.12555503845215
    9. '   ' → logprob: -18.62555503845215
    10. 'ran' → logprob: -19.25055503845215

Token 324: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.672236824873835e-05
    2. '(' → logprob: -9.625076293945312
    3. ' (' → logprob: -11.500076293945312
    4. 'n' → logprob: -15.500076293945312
    5. '	n' → logprob: -15.625076293945312
    6. ' n' → logprob: -16.250076293945312
    7. '(
' → logprob: -16.750076293945312
    8. '(len' → logprob: -17.875076293945312
    9. '	' → logprob: -19.375076293945312
    10. ' ' → logprob: -20.250076293945312

Token 325: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.31341639161109924
    2. '):' → logprob: -1.3134163618087769
    3. '):
' → logprob: -8.813416481018066
    4. ' ):
' → logprob: -12.813416481018066
    5. ' ):' → logprob: -13.188416481018066
    6. ')' → logprob: -14.438416481018066
    7. '):

' → logprob: -15.313416481018066
    8. ':' → logprob: -15.688416481018066
    9. ':
' → logprob: -16.06341552734375
    10. '	' → logprob: -16.06341552734375

Token 326: '	c' (ID: 2736)
  Prédit: '	c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	c' → logprob: -0.009135294705629349
    2. ' cards' → logprob: -4.7591352462768555
    3. '   ' → logprob: -7.7591352462768555
    4. 'cards' → logprob: -9.884135246276855
    5. '	card' → logprob: -10.884135246276855
    6. '	' → logprob: -11.384135246276855
    7. '(cards' → logprob: -12.384135246276855
    8. '.cards' → logprob: -12.634135246276855
    9. '	C' → logprob: -12.884135246276855
    10. '	t' → logprob: -14.134135246276855

Token 327: 'ards' (ID: 3098)
  Prédit: 'ards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ards' → logprob: -0.0007551893359050155
    2. 'cards' → logprob: -8.000755310058594
    3. 'ard' → logprob: -8.000755310058594
    4. 'a' → logprob: -10.375755310058594
    5. '=' → logprob: -11.375755310058594
    6. '_cards' → logprob: -12.250755310058594
    7. 'arts' → logprob: -12.250755310058594
    8. 'ads' → logprob: -12.625755310058594
    9. 'ar' → logprob: -12.750755310058594
    10. '	' → logprob: -13.000755310058594

Token 328: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. '[i' → logprob: -13.750001907348633
    3. '[' → logprob: -14.625001907348633
    4. '```' → logprob: -14.875001907348633
    5. '
' → logprob: -15.875001907348633
    6. '１' → logprob: -16.000001907348633
    7. 's' → logprob: -16.750001907348633
    8. ' ' → logprob: -16.750001907348633
    9. '' → logprob: -17.375001907348633
    10. 'cards' → logprob: -18.375001907348633

Token 329: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -14.500000953674316
    3. '=' → logprob: -15.000000953674316
    4. ' =' → logprob: -15.375000953674316
    5. ' [' → logprob: -16.125001907348633
    6. '[int' → logprob: -17.125001907348633
    7. '[I' → logprob: -19.375001907348633
    8. '[
' → logprob: -19.750001907348633
    9. '```' → logprob: -20.375001907348633
    10. '
' → logprob: -20.500001907348633

Token 330: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4834931194782257
    2. ' =' → logprob: -0.9834930896759033
    3. ']' → logprob: -4.733493328094482
    4. ')' → logprob: -7.858493328094482
    5. ']=' → logprob: -8.733492851257324
    6. '	' → logprob: -11.483492851257324
    7. ')=' → logprob: -11.733492851257324
    8. ',' → logprob: -12.608492851257324
    9. ' ]' → logprob: -12.983492851257324
    10. ' ' → logprob: -13.608492851257324

Token 331: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141392946243286
    2. ' =' → logprob: -1.701413869857788
    3. '＝' → logprob: -15.076414108276367
    4. ',' → logprob: -15.826414108276367
    5. ' ' → logprob: -16.701414108276367
    6. '=create' → logprob: -17.076414108276367
    7. '=C' → logprob: -17.201414108276367
    8. '=
' → logprob: -17.326414108276367
    9. '	' → logprob: -17.701414108276367
    10. ' =
' → logprob: -18.076414108276367

Token 332: ' Card' (ID: 9958)
  Prédit: 'Card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Card' → logprob: -0.011047814972698689
    2. ' Card' → logprob: -4.511047840118408
    3. '(Card' → logprob: -18.63604736328125
    4. ' ' → logprob: -18.76104736328125
    5. '<Card' → logprob: -19.13604736328125
    6. 'Car' → logprob: -19.51104736328125
    7. 'card' → logprob: -19.63604736328125
    8. '	' → logprob: -19.76104736328125
    9. '_card' → logprob: -19.88604736328125
    10. '.Card' → logprob: -20.26104736328125

Token 333: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -1.0280383548888494e-06
    2. 'arr' → logprob: -14.250000953674316
    3. '(' → logprob: -15.625000953674316
    4. '[arr' → logprob: -17.125001907348633
    5. ' (' → logprob: -17.375001907348633
    6. '(cards' → logprob: -18.000001907348633
    7. '((' → logprob: -18.750001907348633
    8. '	arr' → logprob: -19.000001907348633
    9. '(ar' → logprob: -19.125001907348633
    10. ' arr' → logprob: -19.250001907348633

Token 334: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -15.000000953674316
    3. '(i' → logprob: -15.250000953674316
    4. ')' → logprob: -15.250000953674316
    5. ' [' → logprob: -16.000001907348633
    6. '[
' → logprob: -16.750001907348633
    7. 'i' → logprob: -17.375001907348633
    8. ')[' → logprob: -18.000001907348633
    9. '[I' → logprob: -18.125001907348633
    10. '	' → logprob: -19.250001907348633

Token 335: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025734021328389645
    2. ')
' → logprob: -6.502573490142822
    3. '])' → logprob: -6.877573490142822
    4. ' )' → logprob: -10.752573013305664
    5. ')
' → logprob: -11.627573013305664
    6. ']' → logprob: -12.627573013305664
    7. '])
' → logprob: -13.127573013305664
    8. ')]' → logprob: -13.877573013305664
    9. '	' → logprob: -14.002573013305664
    10. '))' → logprob: -14.627573013305664

Token 336: '	c' (ID: 2736)
  Prédit: '	c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	c' → logprob: -0.001402025343850255
    2. 'cards' → logprob: -6.626401901245117
    3. ' cards' → logprob: -9.751401901245117
    4. '   ' → logprob: -12.376401901245117
    5. '	card' → logprob: -12.376401901245117
    6. '.cards' → logprob: -12.751401901245117
    7. '\t' → logprob: -13.251401901245117
    8. 'c' → logprob: -13.251401901245117
    9. '(cards' → logprob: -13.876401901245117
    10. '_cards' → logprob: -14.251401901245117

Token 337: 'ards' (ID: 3098)
  Prédit: 'ards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ards' → logprob: -0.00021140782337170094
    2. 'cards' → logprob: -8.500211715698242
    3. 'ard' → logprob: -12.625211715698242
    4. 'a' → logprob: -12.875211715698242
    5. '_cards' → logprob: -14.625211715698242
    6. 'arts' → logprob: -14.875211715698242
    7. 'ads' → logprob: -14.875211715698242
    8. '.cards' → logprob: -15.500211715698242
    9. '(cards' → logprob: -16.125211715698242
    10. 'ARDS' → logprob: -16.125211715698242

Token 338: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '[' → logprob: -18.25
    3. '２' → logprob: -19.125
    4. '```' → logprob: -19.25
    5. 's' → logprob: -19.375
    6. '_' → logprob: -20.5
    7. '۲' → logprob: -20.5
    8. '₂' → logprob: -20.5
    9. ' ' → logprob: -21.375
    10. '=' → logprob: -21.375

Token 339: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -13.125001907348633
    3. ' [' → logprob: -15.875001907348633
    4. '[I' → logprob: -17.250001907348633
    5. '=' → logprob: -18.750001907348633
    6. '```' → logprob: -19.000001907348633
    7. 'i' → logprob: -19.125001907348633
    8. ' =' → logprob: -19.125001907348633
    9. ')[' → logprob: -19.125001907348633
    10. '[
' → logprob: -19.125001907348633

Token 340: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005017667077481747
    2. ')' → logprob: -5.6300177574157715
    3. ']=' → logprob: -7.2550177574157715
    4. '=' → logprob: -7.3800177574157715
    5. '])' → logprob: -10.630017280578613
    6. '=i' → logprob: -10.630017280578613
    7. ' =' → logprob: -11.005017280578613
    8. '[i' → logprob: -11.255017280578613
    9. ')=' → logprob: -12.505017280578613
    10. ' ]' → logprob: -12.755017280578613

Token 341: ' =' (ID: 314)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.676981345459353e-06
    2. '=' → logprob: -12.250005722045898
    3. '[' → logprob: -14.125005722045898
    4. '=i' → logprob: -16.2500057220459
    5. ' [' → logprob: -17.0000057220459
    6. ' =' → logprob: -18.1250057220459
    7. 'i' → logprob: -18.5000057220459
    8. '[I' → logprob: -19.1250057220459
    9. '=[' → logprob: -19.6250057220459
    10. '[int' → logprob: -19.8750057220459

Token 342: ' Card' (ID: 9958)
  Prédit: 'Card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Card' → logprob: -0.0015023599844425917
    2. ' Card' → logprob: -6.501502513885498
    3. 'card' → logprob: -18.501502990722656
    4. ' ' → logprob: -19.376502990722656
    5. '<Card' → logprob: -19.626502990722656
    6. 'cards' → logprob: -19.876502990722656
    7. '(Card' → logprob: -19.876502990722656
    8. '_card' → logprob: -20.376502990722656
    9. 'Cards' → logprob: -20.376502990722656
    10. 'Car' → logprob: -20.626502990722656

Token 343: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -3.173704271830502e-06
    2. 'arr' → logprob: -12.75000286102295
    3. '[arr' → logprob: -15.50000286102295
    4. '(' → logprob: -18.625003814697266
    5. ' (' → logprob: -18.750003814697266
    6. ' arr' → logprob: -18.750003814697266
    7. '	arr' → logprob: -19.000003814697266
    8. '<arr' → logprob: -19.125003814697266
    9. '(cards' → logprob: -19.250003814697266
    10. '(ans' → logprob: -20.500003814697266

Token 344: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2200749754119897e-06
    2. 'i' → logprob: -13.125001907348633
    3. '(i' → logprob: -16.125001907348633
    4. ')' → logprob: -17.000001907348633
    5. '[' → logprob: -17.375001907348633
    6. '	i' → logprob: -18.625001907348633
    7. '```' → logprob: -19.125001907348633
    8. '1' → logprob: -19.625001907348633
    9. ',i' → logprob: -19.750001907348633
    10. '[
' → logprob: -19.750001907348633

Token 345: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.002497417852282524
    2. ')' → logprob: -6.00249719619751
    3. '[i' → logprob: -11.502497673034668
    4. ')]' → logprob: -12.627497673034668
    5. '])
' → logprob: -12.752497673034668
    6. ')])' → logprob: -13.252497673034668
    7. '))' → logprob: -13.502497673034668
    8. ']' → logprob: -14.127497673034668
    9. '})' → logprob: -14.752497673034668
    10. ' ])' → logprob: -15.002497673034668

Token 346: 'swap' (ID: 55961)
  Prédit: 'swap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.3651241660118103
    2. 'count' → logprob: -1.490124225616455
    3. 'bubble' → logprob: -2.740124225616455
    4. 'cnt' → logprob: -4.490124225616455
    5. 'b' → logprob: -6.615124225616455
    6. 'sw' → logprob: -6.990124225616455
    7. 'c' → logprob: -7.990124225616455
    8. 'counts' → logprob: -7.990124225616455
    9. 'x' → logprob: -8.240123748779297
    10. 'cards' → logprob: -8.240123748779297

Token 347: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00015050210640765727
    2. '_' → logprob: -9.000150680541992
    3. '_counts' → logprob: -11.500150680541992
    4. '_c' → logprob: -11.750150680541992
    5. '_cnt' → logprob: -12.500150680541992
    6. 's' → logprob: -13.500150680541992
    7. 'count' → logprob: -13.750150680541992
    8. '_co' → logprob: -14.750150680541992
    9. '(_' → logprob: -14.875150680541992
    10. '_counter' → logprob: -15.375150680541992

Token 348: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029773399233818054
    2. '=' → logprob: -3.529773473739624
    3. '=b' → logprob: -11.029773712158203
    4. '(' → logprob: -13.154773712158203
    5. ' ' → logprob: -13.404773712158203
    6. '_' → logprob: -13.779773712158203
    7. ')' → logprob: -15.029773712158203
    8. '(b' → logprob: -15.029773712158203
    9. ',' → logprob: -15.154773712158203
    10. 'bubble' → logprob: -15.654773712158203

Token 349: ' bubble' (ID: 40447)
  Prédit: 'bubble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bubble' → logprob: -0.2015359252691269
    2. ' bubble' → logprob: -1.701535940170288
    3. 'b' → logprob: -9.076536178588867
    4. '	b' → logprob: -11.826536178588867
    5. '(b' → logprob: -15.201536178588867
    6. 'Bubble' → logprob: -15.701536178588867
    7. ' ' → logprob: -15.701536178588867
    8. '```' → logprob: -16.451536178588867
    9. ' bubbles' → logprob: -16.701536178588867
    10. 'ball' → logprob: -16.951536178588867

Token 350: '_sort' (ID: 43815)
  Prédit: '_sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sort' → logprob: -6.869017852295656e-06
    2. '_count' → logprob: -12.625006675720215
    3. '_' → logprob: -12.750006675720215
    4. '_sorted' → logprob: -14.750006675720215
    5. '_swap' → logprob: -16.62500762939453
    6. '_SORT' → logprob: -17.12500762939453
    7. 'sort' → logprob: -17.37500762939453
    8. ' _' → logprob: -18.00000762939453
    9. '_s' → logprob: -18.37500762939453
    10. '_
' → logprob: -19.37500762939453

Token 351: '(cards' (ID: 161529)
  Prédit: '(cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cards' → logprob: -0.0024914760142564774
    2. '(arr' → logprob: -6.002491474151611
    3. '(c' → logprob: -11.12749195098877
    4. '(card' → logprob: -14.50249195098877
    5. '(' → logprob: -15.37749195098877
    6. '(chars' → logprob: -15.62749195098877
    7. ' (' → logprob: -17.002490997314453
    8. '(items' → logprob: -17.377490997314453
    9. '(car' → logprob: -17.752490997314453
    10. '(records' → logprob: -18.127490997314453

Token 352: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.875000953674316
    3. '```' → logprob: -16.125
    4. ')' → logprob: -16.625
    5. '１' → logprob: -16.75
    6. '_' → logprob: -18.75
    7. '[' → logprob: -19.0625
    8. '(' → logprob: -19.125
    9. ',' → logprob: -19.4375
    10. '   ' → logprob: -19.5625

Token 353: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7432603272027336e-06
    2. ',n' → logprob: -14.000001907348633
    3. ',c' → logprob: -14.750001907348633
    4. ' ,' → logprob: -14.750001907348633
    5. ',
' → logprob: -16.750001907348633
    6. ')' → logprob: -17.875001907348633
    7. '	' → logprob: -18.250001907348633
    8. '‌,' → logprob: -18.875001907348633
    9. ',

' → logprob: -19.500001907348633
    10. '[],' → logprob: -19.625001907348633

Token 354: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001171056181192398
    2. ' n' → logprob: -6.751171112060547
    3. '	n' → logprob: -14.001171112060547
    4. ')n' → logprob: -19.001171112060547
    5. ')' → logprob: -21.626171112060547
    6. '
' → logprob: -21.751171112060547
    7. 'len' → logprob: -22.376171112060547
    8. '(n' → logprob: -22.376171112060547
    9. '_n' → logprob: -22.626171112060547
    10. '[n' → logprob: -23.376171112060547

Token 355: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014199826866388321
    2. ')
' → logprob: -4.264199733734131
    3. ')

' → logprob: -10.514200210571289
    4. ')
' → logprob: -11.639200210571289
    5. ' )' → logprob: -15.889200210571289
    6. ')

' → logprob: -16.13920021057129
    7. ')


' → logprob: -16.26420021057129
    8. ')#' → logprob: -17.13920021057129
    9. '	' → logprob: -18.01420021057129
    10. '),' → logprob: -18.13920021057129

Token 356: 'stable' (ID: 55927)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.694591224193573
    2. 'stable' → logprob: -0.819591224193573
    3. 'for' → logprob: -2.8195912837982178
    4. 'if' → logprob: -8.319591522216797
    5. 'is' → logprob: -9.069591522216797
    6. '```' → logprob: -10.194591522216797
    7. 'st' → logprob: -10.444591522216797
    8. 'swap' → logprob: -11.069591522216797
    9. '[' → logprob: -11.069591522216797
    10. ' stable' → logprob: -12.319591522216797

Token 357: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5471996068954468
    2. '=' → logprob: -0.9221996068954468
    3. ',' → logprob: -4.047199726104736
    4. '=True' → logprob: -5.797199726104736
    5. '=False' → logprob: -6.547199726104736
    6. '<|end|>' → logprob: -6.547199726104736
    7. ' ' → logprob: -9.422199249267578
    8. '_' → logprob: -9.672199249267578
    9. ':' → logprob: -10.047199249267578
    10. ')' → logprob: -10.172199249267578

Token 358: ' selection' (ID: 8441)
  Prédit: 'selection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'selection' → logprob: -0.006717267446219921
    2. ' selection' → logprob: -5.006717205047607
    3. '(selection' → logprob: -13.256717681884766
    4. 'select' → logprob: -16.631717681884766
    5. '	' → logprob: -18.006717681884766
    6. 'selected' → logprob: -18.131717681884766
    7. '.selection' → logprob: -18.756717681884766
    8. ' ' → logprob: -19.381717681884766
    9. ' ' → logprob: -19.381717681884766
    10. 'se' → logprob: -19.506717681884766

Token 359: '_sort' (ID: 43815)
  Prédit: '_sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sort' → logprob: -7.896309739408025e-07
    2. '_' → logprob: -14.750000953674316
    3. '_sorted' → logprob: -15.875000953674316
    4. 'sort' → logprob: -16.375
    5. '_swap' → logprob: -16.625
    6. '_SORT' → logprob: -17.75
    7. '_select' → logprob: -18.5
    8. '_s' → logprob: -18.875
    9. ' _' → logprob: -19.0
    10. '_selection' → logprob: -19.5

Token 360: '(cards' (ID: 161529)
  Prédit: '(cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cards' → logprob: -1.3856492842023727e-06
    2. '(arr' → logprob: -13.750000953674316
    3. '(card' → logprob: -16.000001907348633
    4. 'cards' → logprob: -16.500001907348633
    5. ' cards' → logprob: -19.000001907348633
    6. '(items' → logprob: -20.125001907348633
    7. '(colors' → logprob: -20.125001907348633
    8. '/cards' → logprob: -20.125001907348633
    9. '(commands' → logprob: -20.500001907348633
    10. '(chars' → logprob: -20.875001907348633

Token 361: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.45848218582978e-06
    2. '(cards' → logprob: -13.50000286102295
    3. ' ' → logprob: -15.25000286102295
    4. '```' → logprob: -15.37500286102295
    5. 'cards' → logprob: -16.625001907348633
    6. '(' → logprob: -16.750001907348633
    7. 'arr' → logprob: -16.875001907348633
    8. '２' → logprob: -16.875001907348633
    9. '۲' → logprob: -16.875001907348633
    10. '
' → logprob: -17.000001907348633

Token 362: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10028732568025589
    2. '(cards' → logprob: -2.350287437438965
    3. ' ,' → logprob: -9.975287437438965
    4. ',c' → logprob: -10.975287437438965
    5. ')' → logprob: -12.100287437438965
    6. ' cards' → logprob: -12.225287437438965
    7. 'cards' → logprob: -13.475287437438965
    8. '.cards' → logprob: -13.725287437438965
    9. '),' → logprob: -13.975287437438965
    10. '/cards' → logprob: -14.350287437438965

Token 363: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16024452447891235
    2. ' n' → logprob: -1.9102444648742676
    3. '	n' → logprob: -11.160244941711426
    4. 'cards' → logprob: -12.660244941711426
    5. ' cards' → logprob: -13.410244941711426
    6. 'arr' → logprob: -14.410244941711426
    7. ')n' → logprob: -15.160244941711426
    8. ')' → logprob: -15.535244941711426
    9. ' ' → logprob: -16.66024398803711
    10. '```' → logprob: -17.16024398803711

Token 364: ')

' (ID: 1029)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015529518714174628
    2. ')' → logprob: -6.626553058624268
    3. ',n' → logprob: -8.62655258178711
    4. ' ,' → logprob: -10.50155258178711
    5. ')
' → logprob: -12.25155258178711
    6. '	' → logprob: -12.37655258178711
    7. ',c' → logprob: -12.75155258178711
    8. 'n' → logprob: -12.87655258178711
    9. '	n' → logprob: -13.62655258178711
    10. ',
' → logprob: -13.75155258178711

Token 365: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.4868770196917467e-05
    2. 'for' → logprob: -10.625024795532227
    3. ' print' → logprob: -15.250024795532227
    4. 'sys' → logprob: -16.000024795532227
    5. 'if' → logprob: -16.250024795532227
    6. 'import' → logprob: -16.875024795532227
    7. '#print' → logprob: -17.375024795532227
    8. '	print' → logprob: -17.625024795532227
    9. '```' → logprob: -17.750024795532227
    10. 'def' → logprob: -18.000024795532227

Token 366: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.024021700024604797
    2. '("' → logprob: -4.524021625518799
    3. '('' → logprob: -5.399021625518799
    4. '('_' → logprob: -5.399021625518799
    5. '("_' → logprob: -6.274021625518799
    6. 'arr' → logprob: -7.274021625518799
    7. 'Arr' → logprob: -7.774021625518799
    8. '(arr' → logprob: -8.024022102355957
    9. '(*' → logprob: -8.899022102355957
    10. '(str' → logprob: -9.524022102355957

Token 367: '(cards' (ID: 161529)
  Prédit: '(cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cards' → logprob: -2.8444881536415778e-05
    2. '(arr' → logprob: -10.875028610229492
    3. '(' → logprob: -12.250028610229492
    4. '(c' → logprob: -13.250028610229492
    5. '(card' → logprob: -14.250028610229492
    6. '(tokens' → logprob: -14.875028610229492
    7. '(items' → logprob: -15.250028610229492
    8. '(chars' → logprob: -15.750028610229492
    9. '(parts' → logprob: -16.250028610229492
    10. '(C' → logprob: -16.250028610229492

Token 368: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.250000953674316
    3. 'cards' → logprob: -17.25
    4. '(' → logprob: -17.375
    5. ')' → logprob: -18.125
    6. 's' → logprob: -18.25
    7. '```' → logprob: -18.75
    8. ' ' → logprob: -19.25
    9. '１' → logprob: -19.375
    10. '(cards' → logprob: -20.25

Token 369: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022196033969521523
    2. ')
' → logprob: -6.1272196769714355
    3. ',' → logprob: -11.127219200134277
    4. '[' → logprob: -12.127219200134277
    5. '(cards' → logprob: -12.502219200134277
    6. ')

' → logprob: -12.627219200134277
    7. ' )' → logprob: -13.252219200134277
    8. ')c' → logprob: -13.752219200134277
    9. ');' → logprob: -14.002219200134277
    10. ')#' → logprob: -14.627219200134277

Token 370: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.5358694731257856e-05
    2. 'True' → logprob: -10.500035285949707
    3. '"' → logprob: -12.500035285949707
    4. 'Stable' → logprob: -14.125035285949707
    5. 'swap' → logprob: -14.125035285949707
    6. 'Print' → logprob: -14.250035285949707
    7. 'true' → logprob: -14.375035285949707
    8. 'stable' → logprob: -15.000035285949707
    9. ' print' → logprob: -15.250035285949707
    10. 'Yes' → logprob: -15.875035285949707

Token 371: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0389886200428009
    2. '('' → logprob: -3.2889885902404785
    3. '(' → logprob: -7.4139885902404785
    4. '("_' → logprob: -8.413989067077637
    5. '()' → logprob: -9.788989067077637
    6. '('_' → logprob: -10.788989067077637
    7. ' ("' → logprob: -11.538989067077637
    8. '(("' → logprob: -11.663989067077637
    9. '_("' → logprob: -12.288989067077637
    10. '("(' → logprob: -12.413989067077637

Token 372: 'Stable' (ID: 129551)
  Prédit: 'Stable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stable' → logprob: -0.0172128789126873
    2. '"' → logprob: -4.392212867736816
    3. 'Yes' → logprob: -5.892212867736816
    4. ''' → logprob: -6.642212867736816
    5. 'Bubble' → logprob: -8.142212867736816
    6. 'Not' → logprob: -9.142212867736816
    7. '('' → logprob: -9.267212867736816
    8. '("' → logprob: -10.767212867736816
    9. 'Safe' → logprob: -10.892212867736816
    10. 'stable' → logprob: -11.142212867736816

Token 373: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0022398277651518583
    2. '')
' → logprob: -6.12723970413208
    3. ''' → logprob: -10.127240180969238
    4. ')' → logprob: -11.877240180969238
    5. '')

' → logprob: -12.752240180969238
    6. 'True' → logprob: -13.377240180969238
    7. '')
' → logprob: -13.502240180969238
    8. '")' → logprob: -14.127240180969238
    9. '\n' → logprob: -14.252240180969238
    10. '(True' → logprob: -15.502240180969238

Token 374: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00020401719666551799
    2. 'if' → logprob: -8.500204086303711
    3. ' print' → logprob: -15.250204086303711
    4. '#print' → logprob: -16.00020408630371
    5. '	print' → logprob: -17.00020408630371
    6. '(print' → logprob: -17.50020408630371
    7. '#' → logprob: -18.37520408630371
    8. '```' → logprob: -18.37520408630371
    9. '<|end|>' → logprob: -18.50020408630371
    10. ' if' → logprob: -18.62520408630371

Token 375: '_arr' (ID: 25121)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.22457467019557953
    2. '('_' → logprob: -2.349574565887451
    3. '_arr' → logprob: -2.349574565887451
    4. '(' → logprob: -5.224574565887451
    5. '_' → logprob: -5.724574565887451
    6. '("' → logprob: -6.974574565887451
    7. '("_' → logprob: -8.72457504272461
    8. '(('' → logprob: -9.09957504272461
    9. '_(' → logprob: -9.22457504272461
    10. 'Arr' → logprob: -9.22457504272461

Token 376: '(cards' (ID: 161529)
  Prédit: '(cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cards' → logprob: -3.128163257315464e-07
    2. '(card' → logprob: -15.625
    3. 'cards' → logprob: -16.625
    4. '/cards' → logprob: -18.0
    5. '(arr' → logprob: -18.5
    6. '(' → logprob: -19.0
    7. '(commands' → logprob: -20.0
    8. ' cards' → logprob: -20.125
    9. '(tokens' → logprob: -20.25
    10. '(chars' → logprob: -20.625

Token 377: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.553032628493384e-05
    2. 'cards' → logprob: -9.500075340270996
    3. '(cards' → logprob: -14.875075340270996
    4. '[' → logprob: -15.125075340270996
    5. '```' → logprob: -17.375076293945312
    6. ' cards' → logprob: -17.375076293945312
    7. ')' → logprob: -17.500076293945312
    8. ' ' → logprob: -18.000076293945312
    9. '２' → logprob: -18.625076293945312
    10. '(' → logprob: -18.625076293945312

Token 378: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.014167623594403267
    2. ')' → logprob: -4.264167785644531
    3. '())
' → logprob: -13.139167785644531
    4. ')
' → logprob: -13.764167785644531
    5. '()
' → logprob: -14.764167785644531
    6. '()' → logprob: -15.514167785644531
    7. ')

' → logprob: -15.889167785644531
    8. '')
' → logprob: -16.38916778564453
    9. '(' → logprob: -16.51416778564453
    10. ' )
' → logprob: -17.26416778564453

Token 379: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.46870726346969604
    2. 'if' → logprob: -1.3437073230743408
    3. 'Stable' → logprob: -2.218707323074341
    4. '('' → logprob: -6.093707084655762
    5. ''' → logprob: -6.218707084655762
    6. 'Yes' → logprob: -10.343707084655762
    7. 'stable' → logprob: -10.593707084655762
    8. '(print' → logprob: -10.593707084655762
    9. 'for' → logprob: -10.718707084655762
    10. 'St' → logprob: -10.843707084655762

Token 380: ' stable' (ID: 22105)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.7846631407737732
    2. 'not' → logprob: -0.9096631407737732
    3. 'stable' → logprob: -2.534663200378418
    4. ' stable' → logprob: -2.784663200378418
    5. '	not' → logprob: -11.159663200378418
    6. 'st' → logprob: -12.159663200378418
    7. '(not' → logprob: -12.534663200378418
    8. ' ' → logprob: -13.284663200378418
    9. ' ' → logprob: -13.784663200378418
    10. '!' → logprob: -13.784663200378418

Token 381: ' ==' (ID: 951)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15781071782112122
    2. ':
' → logprob: -2.032810688018799
    3. '==' → logprob: -4.782810688018799
    4. ' ==' → logprob: -5.032810688018799
    5. ':
' → logprob: -9.532811164855957
    6. ' ' → logprob: -11.532811164855957
    7. ' is' → logprob: -11.907811164855957
    8. 'else' → logprob: -12.032811164855957
    9. ':

' → logprob: -12.282811164855957
    10. ' ' → logprob: -12.282811164855957

Token 382: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.029875915497541428
    2. 'False' → logprob: -3.6548759937286377
    3. ' True' → logprob: -5.654875755310059
    4. ' False' → logprob: -9.654875755310059
    5. '	' → logprob: -12.779875755310059
    6. '(True' → logprob: -14.529875755310059
    7. '=True' → logprob: -14.904875755310059
    8. 'Tr' → logprob: -15.279875755310059
    9. ' ' → logprob: -15.279875755310059
    10. '
' → logprob: -15.404875755310059

Token 383: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.034738849848508835
    2. ':' → logprob: -3.409738779067993
    3. '	print' → logprob: -7.409739017486572
    4. 'print' → logprob: -8.284738540649414
    5. ' print' → logprob: -9.159738540649414
    6. '==' → logprob: -9.534738540649414
    7. ' ==' → logprob: -10.784738540649414
    8. ':
' → logprob: -11.784738540649414
    9. ' :
' → logprob: -11.784738540649414
    10. 'else' → logprob: -12.159738540649414

Token 384: '	print' (ID: 15269)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.8206473871250637e-05
    2. ' print' → logprob: -10.875028610229492
    3. '	print' → logprob: -12.125028610229492
    4. '   ' → logprob: -12.500028610229492
    5. '.print' → logprob: -17.750028610229492
    6. '(print' → logprob: -18.250028610229492
    7. ':' → logprob: -19.625028610229492
    8. ' ' → logprob: -19.625028610229492
    9. '_print' → logprob: -19.875028610229492
    10. '#print' → logprob: -20.375028610229492

Token 385: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.000217006730963476
    2. '("' → logprob: -8.50021743774414
    3. ''S' → logprob: -11.75021743774414
    4. ''' → logprob: -12.37521743774414
    5. '(' → logprob: -13.62521743774414
    6. '(St' → logprob: -16.00021743774414
    7. ' ('' → logprob: -17.75021743774414
    8. ''s' → logprob: -17.75021743774414
    9. 's' → logprob: -18.00021743774414
    10. '(S' → logprob: -18.25021743774414

Token 386: 'Stable' (ID: 129551)
  Prédit: 'Stable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stable' → logprob: -0.0005562512087635696
    2. ''' → logprob: -7.500556468963623
    3. ''S' → logprob: -12.750555992126465
    4. 'St' → logprob: -15.750555992126465
    5. ' Stable' → logprob: -16.37555694580078
    6. '"' → logprob: -16.50055694580078
    7. '`' → logprob: -16.87555694580078
    8. ' stable' → logprob: -17.25055694580078
    9. 'Safe' → logprob: -17.62555694580078
    10. '('' → logprob: -17.75055694580078

Token 387: '')
' (ID: 2515)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5781554579734802
    2. '')
' → logprob: -0.8281554579734802
    3. '')' → logprob: -6.453155517578125
    4. ')
' → logprob: -8.078155517578125
    5. ' else' → logprob: -8.203155517578125
    6. '")
' → logprob: -11.453155517578125
    7. '
' → logprob: -11.578155517578125
    8. 'Else' → logprob: -11.578155517578125
    9. 'e' → logprob: -12.703155517578125
    10. ''
' → logprob: -12.828155517578125

Token 388: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.9361264946837764e-07
    2. ' else' → logprob: -15.875
    3. '	else' → logprob: -17.625
    4. 'elif' → logprob: -18.625
    5. 'print' → logprob: -19.25
    6. '}else' → logprob: -20.375
    7. 'Else' → logprob: -20.625
    8. '	
' → logprob: -21.25
    9. '```' → logprob: -21.75
    10. '#else' → logprob: -21.75

Token 389: ':
' (ID: 734)
  Prédit: '	print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	print' → logprob: -0.010350318625569344
    2. ':
' → logprob: -5.260350227355957
    3. ':' → logprob: -5.510350227355957
    4. '   ' → logprob: -8.135350227355957
    5. '	printf' → logprob: -8.260350227355957
    6. '	' → logprob: -8.885350227355957
    7. ' print' → logprob: -9.260350227355957
    8. '
' → logprob: -9.760350227355957
    9. 'print' → logprob: -10.010350227355957
    10. '	
' → logprob: -10.885350227355957

Token 390: '	print' (ID: 15269)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014209231361746788
    2. '	print' → logprob: -4.264209270477295
    3. ' print' → logprob: -10.014208793640137
    4. 'Print' → logprob: -14.889208793640137
    5. '.print' → logprob: -15.264208793640137
    6. '(print' → logprob: -16.139209747314453
    7. '```' → logprob: -16.264209747314453
    8. '   ' → logprob: -16.514209747314453
    9. '#print' → logprob: -16.764209747314453
    10. 'prints' → logprob: -17.639209747314453

Token 391: '('' (ID: 706)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.14276185631752014
    2. '('' → logprob: -2.0177619457244873
    3. ' ' → logprob: -10.642762184143066
    4. ' '' → logprob: -11.142762184143066
    5. '   ' → logprob: -11.642762184143066
    6. 'Not' → logprob: -11.642762184143066
    7. '	' → logprob: -12.142762184143066
    8. '"' → logprob: -12.517762184143066
    9. 'Un' → logprob: -13.017762184143066
    10. ''un' → logprob: -13.267762184143066

Token 392: 'Not' (ID: 2874)
  Prédit: 'Not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Not' → logprob: -1.9981420336989686e-05
    2. 'Un' → logprob: -11.625020027160645
    3. ' Not' → logprob: -12.625020027160645
    4. '_not' → logprob: -13.750020027160645
    5. 'None' → logprob: -13.750020027160645
    6. 'No' → logprob: -13.875020027160645
    7. ''' → logprob: -14.000020027160645
    8. 'Neither' → logprob: -14.125020027160645
    9. 'Non' → logprob: -14.375020027160645
    10. 'Stable' → logprob: -14.375020027160645

Token 393: ' stable' (ID: 22105)
  Prédit: ' Stable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Stable' → logprob: -0.01107033807784319
    2. ' stable' → logprob: -4.761070251464844
    3. 'Stable' → logprob: -6.011070251464844
    4. 'stable' → logprob: -14.136070251464844
    5. ' ' → logprob: -14.511070251464844
    6. ' ' → logprob: -17.261070251464844
    7. ' Safe' → logprob: -17.386070251464844
    8. ' stabile' → logprob: -17.511070251464844
    9. ' St' → logprob: -17.761070251464844
    10. ' Stabil' → logprob: -18.261070251464844

Token 394: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.00016146517009474337
    2. ')' → logprob: -8.750161170959473
    3. '")' → logprob: -13.250161170959473
    4. '')
' → logprob: -13.625161170959473
    5. ''' → logprob: -19.50016212463379
    6. '!' → logprob: -19.62516212463379
    7. '.')' → logprob: -19.62516212463379
    8. '}')' → logprob: -19.87516212463379
    9. '')"' → logprob: -20.25016212463379
    10. '')

' → logprob: -20.37516212463379


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 392
Tokens correctement prédits (1ère position, stricte): 186
Tokens correctement prédits (1ère position, avec adaptation): 186
Tokens correctement prédits (top 10): 359
Précision stricte (1ère position): 47.45%
Précision adaptée (1ère position): 47.45%
Précision (top 10): 91.58%
================================================================================
