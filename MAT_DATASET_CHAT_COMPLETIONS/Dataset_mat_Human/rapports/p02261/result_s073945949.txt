================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def BubbleSort(C,N):
    for i in range(N):
        for j in range(i+1, N)[::-1]:
            if int(C[j][1]) < int(C[j - 1][1]):
                C[j],C[j-1] = C[j-1],C[j]

def SelectionSort(C,N):
    for i in range(N):
        minj = i
        for j in range(i,N):
            if int(C[j][1]) < int(C[minj][1]):
                minj = j
        C[i],C[minj] = C[minj],C[i]

N = int(input())
C = (input()).split()
ORG = C[:]
BubbleSort(C,N)
print (" ".join(C))
print ("Stable")
C2=ORG
SelectionSort(C2,N)
print(" ".join(C2))
if C == C2:
    print ("Stable")
else:
    print ("Not stable")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' Bubble' (ID: 84882)
  → Token d'amorce (pas de prédiction)

Token 2: 'Sort' (ID: 11602)
  → Token d'amorce (pas de prédiction)

Token 3: '(C' (ID: 5559)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00023441045777872205
    2. '(:' → logprob: -9.000234603881836
    3. ':' → logprob: -10.125234603881836
    4. '```' → logprob: -10.500234603881836
    5. ' (' → logprob: -11.250234603881836
    6. '():' → logprob: -11.500234603881836
    7. '(B' → logprob: -12.125234603881836
    8. '(
' → logprob: -13.000234603881836
    9. '((' → logprob: -13.375234603881836
    10. '(`' → logprob: -13.500234603881836

Token 4: ',N' (ID: 49539)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0764865130186081
    2. ' ):' → logprob: -2.951486587524414
    3. '[' → logprob: -4.951486587524414
    4. ')' → logprob: -5.451486587524414
    5. 'o' → logprob: -6.076486587524414
    6. '[]):' → logprob: -6.201486587524414
    7. 'ont' → logprob: -6.576486587524414
    8. 'ol' → logprob: -7.076486587524414
    9. 'ode' → logprob: -7.576486587524414
    10. '[]' → logprob: -7.701486587524414

Token 5: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2522437274456024
    2. ')' → logprob: -1.5022437572479248
    3. ':' → logprob: -8.502243995666504
    4. '[' → logprob: -10.502243995666504
    5. ''):' → logprob: -11.127243995666504
    6. ' ):' → logprob: -11.127243995666504
    7. ',' → logprob: -11.627243995666504
    8. '```' → logprob: -11.752243995666504
    9. '):
' → logprob: -12.127243995666504
    10. ')：' → logprob: -12.377243995666504

Token 6: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001912457519210875
    2. '   ' → logprob: -7.126912593841553
    3. ':
' → logprob: -7.751912593841553
    4. ' :' → logprob: -8.626912117004395
    5. '):' → logprob: -9.001912117004395
    6. '(' → logprob: -9.001912117004395
    7. '```' → logprob: -9.376912117004395
    8. '():' → logprob: -9.876912117004395
    9. ')' → logprob: -10.876912117004395
    10. '    ' → logprob: -11.501912117004395

Token 7: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1709505319595337
    2. ' for' → logprob: -3.295950412750244
    3. ':' → logprob: -3.545950412750244
    4. ' ' → logprob: -3.795950412750244
    5. 'i' → logprob: -3.920950412750244
    6. 'for' (adapté à ' for') → logprob: -4.170950412750244
    7. '```' → logprob: -4.545950412750244
    8. '    ' → logprob: -5.420950412750244
    9. ' 
' → logprob: -5.545950412750244
    10. '  ' → logprob: -6.670950412750244

Token 8: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3201092481613159
    2. ' i' → logprob: -1.320109248161316
    3. '  ' → logprob: -5.0701093673706055
    4. 'i' → logprob: -7.9451093673706055
    5. ' ‌' → logprob: -9.570109367370605
    6. '   ' → logprob: -10.820109367370605
    7. ')' → logprob: -10.945109367370605
    8. ' )' → logprob: -11.570109367370605
    9. ' ' → logprob: -11.945109367370605
    10. ' N' → logprob: -11.945109367370605

Token 9: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.015512087382376194
    2. 'in' → logprob: -4.265511989593506
    3. ' ' → logprob: -6.890511989593506
    4. '  ' → logprob: -8.765512466430664
    5. '   ' → logprob: -9.015512466430664
    6. '    ' → logprob: -11.140512466430664
    7. ' i' → logprob: -11.390512466430664
    8. '	in' → logprob: -12.140512466430664
    9. ' n' → logprob: -12.515512466430664
    10. ',' → logprob: -12.640512466430664

Token 10: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00976293720304966
    2. 'range' → logprob: -4.634762763977051
    3. ' ' → logprob: -12.00976276397705
    4. '	range' → logprob: -14.75976276397705
    5. ' xrange' → logprob: -15.88476276397705
    6. '   ' → logprob: -16.384763717651367
    7. '  ' → logprob: -16.509763717651367
    8. ')' → logprob: -16.509763717651367
    9. ' in' → logprob: -16.759763717651367
    10. '```' → logprob: -17.134763717651367

Token 11: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07464519143104553
    2. ' (' → logprob: -2.6996452808380127
    3. '(N' → logprob: -5.449645042419434
    4. '(len' → logprob: -8.199645042419434
    5. '(n' → logprob: -10.074645042419434
    6. '(i' → logprob: -10.324645042419434
    7. ' ' → logprob: -11.074645042419434
    8. '(C' → logprob: -11.824645042419434
    9. '   ' → logprob: -12.199645042419434
    10. '  ' → logprob: -12.699645042419434

Token 12: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008696592412889004
    2. '-' → logprob: -5.383696556091309
    3. ' ):' → logprob: -5.633696556091309
    4. '):
' → logprob: -8.758696556091309
    5. ')' → logprob: -8.758696556091309
    6. ' -' → logprob: -9.133696556091309
    7. '   ' → logprob: -10.258696556091309
    8. ':' → logprob: -11.258696556091309
    9. ' ' → logprob: -12.383696556091309
    10. ',' → logprob: -12.508696556091309

Token 13: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16238491237163544
    2. '    ' → logprob: -2.1623849868774414
    3. ':' → logprob: -4.037384986877441
    4. '   ' → logprob: -4.912384986877441
    5. '     ' → logprob: -5.787384986877441
    6. ' ' → logprob: -5.912384986877441
    7. ' :' → logprob: -6.912384986877441
    8. '      ' → logprob: -7.412384986877441
    9. '        ' → logprob: -7.537384986877441
    10. '     
' → logprob: -7.787384986877441

Token 14: ' for' (ID: 395)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.6670215725898743
    2. ' for' → logprob: -0.9170215725898743
    3. '   ' → logprob: -3.6670215129852295
    4. 'for' (adapté à ' for') → logprob: -3.7920215129852295
    5. ' ' → logprob: -3.9170215129852295
    6. '       ' → logprob: -4.667021751403809
    7. '        ' → logprob: -5.417021751403809
    8. '     ' → logprob: -6.292021751403809
    9. ' ' → logprob: -7.292021751403809
    10. '```' → logprob: -7.417021751403809

Token 15: ' j' (ID: 441)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.765131413936615
    2. ' j' → logprob: -0.890131413936615
    3. ' range' → logprob: -2.3901314735412598
    4. 'j' → logprob: -4.51513147354126
    5. 'range' → logprob: -4.89013147354126
    6. '<|end|>' → logprob: -5.01513147354126
    7. ')' → logprob: -5.89013147354126
    8. ' N' → logprob: -7.01513147354126
    9. ' ' → logprob: -7.76513147354126
    10. ' in' → logprob: -7.95263147354126

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00892961211502552
    2. 'in' → logprob: -4.75892972946167
    3. ' ' → logprob: -8.633929252624512
    4. '    ' → logprob: -9.133929252624512
    5. '   ' → logprob: -11.633929252624512
    6. '<|end|>' → logprob: -11.758929252624512
    7. '	in' → logprob: -12.883929252624512
    8. '```' → logprob: -12.883929252624512
    9. '  ' → logprob: -13.008929252624512
    10. '        ' → logprob: -14.133929252624512

Token 17: ' range' (ID: 3352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7520593404769897
    2. ' range' → logprob: -0.8770593404769897
    3. '0' → logprob: -2.7520594596862793
    4. 'range' → logprob: -3.2520594596862793
    5. ' N' → logprob: -4.877059459686279
    6. '1' → logprob: -6.252059459686279
    7. 'N' → logprob: -8.002058982849121
    8. '    ' → logprob: -9.627058982849121
    9. ' i' → logprob: -9.877058982849121
    10. '  ' → logprob: -10.877058982849121

Token 18: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7077956795692444
    2. '(N' → logprob: -0.8327956795692444
    3. '(i' → logprob: -3.0827956199645996
    4. ' (' → logprob: -3.7077956199645996
    5. ' ' → logprob: -6.3327956199646
    6. ' i' → logprob: -9.457796096801758
    7. ' N' → logprob: -9.457796096801758
    8. '(I' → logprob: -9.957796096801758
    9. '1' → logprob: -10.707796096801758
    10. '(int' → logprob: -11.207796096801758

Token 19: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008647306822240353
    2. ' +' → logprob: -4.758647441864014
    3. ',' → logprob: -11.258646965026855
    4. '+,' → logprob: -12.008646965026855
    5. ' ,' → logprob: -12.133646965026855
    6. '1' → logprob: -12.633646965026855
    7. ' ' → logprob: -12.758646965026855
    8. '+j' → logprob: -14.258646965026855
    9. '   ' → logprob: -14.633646965026855
    10. '+)' → logprob: -15.633646965026855

Token 20: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005532711511477828
    2. ' ' → logprob: -7.500553131103516
    3. '<|end|>' → logprob: -15.875553131103516
    4. '   ' → logprob: -16.625553131103516
    5. '```' → logprob: -17.250553131103516
    6. '  ' → logprob: -17.625553131103516
    7. ',' → logprob: -17.750553131103516
    8. ' N' → logprob: -17.875553131103516
    9. '0' → logprob: -17.875553131103516
    10. '    ' → logprob: -18.000553131103516

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026592405512928963
    2. ',N' → logprob: -3.651592493057251
    3. ' ,' → logprob: -8.651592254638672
    4. ',n' → logprob: -9.526592254638672
    5. '   ' → logprob: -10.776592254638672
    6. '       ' → logprob: -12.026592254638672
    7. ')' → logprob: -12.526592254638672
    8. '，' → logprob: -12.901592254638672
    9. 'to' → logprob: -13.401592254638672
    10. '```' → logprob: -13.651592254638672

Token 22: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0036301235668361187
    2. ' N' → logprob: -5.6286301612854
    3. '   ' → logprob: -10.753629684448242
    4. '	N' → logprob: -11.878629684448242
    5. '<N' → logprob: -14.628629684448242
    6. ' ' → logprob: -14.878629684448242
    7. '    ' → logprob: -15.378629684448242
    8. '       ' → logprob: -15.628629684448242
    9. ',N' → logprob: -15.753629684448242
    10. ')' → logprob: -15.753629684448242

Token 23: ')[' (ID: 13637)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012920241570100188
    2. ':' → logprob: -6.7512922286987305
    3. '):
' → logprob: -9.37629222869873
    4. ' ):' → logprob: -11.50129222869873
    5. ')' → logprob: -11.75129222869873
    6. '   ' → logprob: -11.87629222869873
    7. '       ' → logprob: -12.25129222869873
    8. ',' → logprob: -13.50129222869873
    9. '+' → logprob: -13.62629222869873
    10. '():' → logprob: -13.75129222869873

Token 24: '::-' (ID: 96612)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01019846461713314
    2. ']:' → logprob: -5.010198593139648
    3. '):' → logprob: -6.885198593139648
    4. '       ' → logprob: -7.510198593139648
    5. ':]' → logprob: -7.635198593139648
    6. '   ' → logprob: -8.510198593139648
    7. ' :' → logprob: -8.510198593139648
    8. '           ' → logprob: -8.635198593139648
    9. 'if' → logprob: -8.635198593139648
    10. ']' → logprob: -9.135198593139648

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005979516077786684
    2. '-' → logprob: -5.130979537963867
    3. ']:' → logprob: -10.755979537963867
    4. ' -' → logprob: -11.380979537963867
    5. ':' → logprob: -12.505979537963867
    6. '```' → logprob: -12.630979537963867
    7. ' ' → logprob: -12.755979537963867
    8. ':-' → logprob: -13.255979537963867
    9. ']):' → logprob: -14.005979537963867
    10. '::-' → logprob: -14.005979537963867

Token 26: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6668616533279419
    2. ']:' → logprob: -0.7918616533279419
    3. '):' → logprob: -3.4168615341186523
    4. ']' → logprob: -8.166861534118652
    5. '>:' → logprob: -8.791861534118652
    6. ']):' → logprob: -9.166861534118652
    7. '       ' → logprob: -9.541861534118652
    8. ' :' → logprob: -10.291861534118652
    9. ':**' → logprob: -10.291861534118652
    10. ',:' → logprob: -10.291861534118652

Token 27: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1995116025209427
    2. ' :' → logprob: -2.4495115280151367
    3. '       ' → logprob: -3.0745115280151367
    4. ' ' → logprob: -4.699511528015137
    5. '<|end|>' → logprob: -4.949511528015137
    6. '           ' → logprob: -5.074511528015137
    7. '    ' → logprob: -5.324511528015137
    8. '   ' → logprob: -5.449511528015137
    9. '        ' → logprob: -5.949511528015137
    10. '[' → logprob: -5.949511528015137

Token 28: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2619151771068573
    2. ':' → logprob: -2.5119152069091797
    3. ' :' → logprob: -3.8869152069091797
    4. 'C' → logprob: -4.01191520690918
    5. '           ' → logprob: -4.01191520690918
    6. '               ' → logprob: -4.51191520690918
    7. '-' → logprob: -4.51191520690918
    8. ' ]' → logprob: -4.88691520690918
    9. '       ' → logprob: -5.26191520690918
    10. '            ' → logprob: -5.38691520690918

Token 29: ' int' (ID: 677)
  Prédit: ' C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.009140965528786182
    2. 'C' → logprob: -4.759140968322754
    3. ' ' → logprob: -8.009140968322754
    4. '	C' → logprob: -8.884140968322754
    5. ' ' → logprob: -10.884140968322754
    6. ' (' → logprob: -11.759140968322754
    7. '<|end|>' → logprob: -11.759140968322754
    8. '    ' → logprob: -12.009140968322754
    9. '(C' → logprob: -13.134140968322754
    10. ' A' → logprob: -13.509140968322754

Token 30: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.014731486327946186
    2. '(' → logprob: -4.264731407165527
    3. ' (' → logprob: -7.764731407165527
    4. 'C' → logprob: -9.264731407165527
    5. ' C' → logprob: -11.014731407165527
    6. ')' → logprob: -11.639731407165527
    7. ' ' → logprob: -12.139731407165527
    8. '[C' → logprob: -12.639731407165527
    9. '	C' → logprob: -12.889731407165527
    10. '(B' → logprob: -13.264731407165527

Token 31: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00011832444579340518
    2. '[' → logprob: -9.250118255615234
    3. '[i' → logprob: -11.625118255615234
    4. ')' → logprob: -11.625118255615234
    5. ' [' → logprob: -13.875118255615234
    6. '[C' → logprob: -14.750118255615234
    7. '[J' → logprob: -14.875118255615234
    8. '[a' → logprob: -15.000118255615234
    9. '```' → logprob: -15.000118255615234
    10. 'j' → logprob: -15.000118255615234

Token 32: '][' (ID: 2696)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03571787104010582
    2. '])' → logprob: -3.7857179641723633
    3. ' )' → logprob: -5.285717964172363
    4. '-' → logprob: -5.910717964172363
    5. '[' → logprob: -6.285717964172363
    6. ']' → logprob: -7.160717964172363
    7. ')<' → logprob: -7.285717964172363
    8. ')>' → logprob: -7.535717964172363
    9. ' -' → logprob: -8.535717964172363
    10. '")' → logprob: -9.660717964172363

Token 33: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0187927708029747
    2. '1' → logprob: -4.018792629241943
    3. 'i' → logprob: -8.643793106079102
    4. ' ' → logprob: -8.643793106079102
    5. '2' → logprob: -9.518793106079102
    6. '-' → logprob: -9.643793106079102
    7. '   ' → logprob: -10.268793106079102
    8. ')' → logprob: -10.831293106079102
    9. '"' → logprob: -11.268793106079102
    10. '3' → logprob: -11.643793106079102

Token 34: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.015328837558627129
    2. ']' → logprob: -4.265328884124756
    3. ' ])' → logprob: -7.640328884124756
    4. ')' → logprob: -8.015328407287598
    5. ''])' → logprob: -9.265328407287598
    6. ']>' → logprob: -9.640328407287598
    7. '-' → logprob: -10.265328407287598
    8. '>)' → logprob: -10.640328407287598
    9. ':' → logprob: -10.890328407287598
    10. ' ' → logprob: -11.140328407287598

Token 35: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5373955965042114
    2. ' >' → logprob: -1.1623955965042114
    3. ' <' → logprob: -2.912395477294922
    4. '<' → logprob: -3.037395477294922
    5. ' ' → logprob: -8.162395477294922
    6. '">' → logprob: -9.537395477294922
    7. '[' → logprob: -9.537395477294922
    8. ')' → logprob: -9.662395477294922
    9. '<int' → logprob: -10.037395477294922
    10. ')>' → logprob: -10.912395477294922

Token 36: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.14435207843780518
    2. ' int' → logprob: -2.0193519592285156
    3. '=int' → logprob: -6.519351959228516
    4. '(int' → logprob: -10.144351959228516
    5. ' ' → logprob: -10.269351959228516
    6. '   ' → logprob: -10.644351959228516
    7. '<int' → logprob: -10.644351959228516
    8. '=' → logprob: -10.769351959228516
    9. '  ' → logprob: -10.769351959228516
    10. '	int' → logprob: -11.269351959228516

Token 37: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.31329238414764404
    2. '(' → logprob: -1.313292384147644
    3. ' (' → logprob: -11.188292503356934
    4. ')' → logprob: -12.063292503356934
    5. 'C' → logprob: -12.188292503356934
    6. '<|end|>' → logprob: -13.188292503356934
    7. '(
' → logprob: -13.813292503356934
    8. '(

' → logprob: -14.063292503356934
    9. ' C' → logprob: -14.688292503356934
    10. '(CType' → logprob: -15.063292503356934

Token 38: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.349075556499884e-05
    2. '[C' → logprob: -10.3750638961792
    3. '[' → logprob: -10.5000638961792
    4. '[i' → logprob: -12.5000638961792
    5. '[c' → logprob: -16.000062942504883
    6. 'C' → logprob: -16.125062942504883
    7. '[js' → logprob: -16.125062942504883
    8. '<|end|>' → logprob: -16.375062942504883
    9. '```' → logprob: -16.500062942504883
    10. ')[' → logprob: -16.625062942504883

Token 39: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0023403274826705456
    2. ' -' → logprob: -6.502340316772461
    3. '[' → logprob: -7.252340316772461
    4. '[j' → logprob: -9.252340316772461
    5. '1' → logprob: -11.627340316772461
    6. '[-' → logprob: -11.627340316772461
    7. ' ' → logprob: -12.127340316772461
    8. '   ' → logprob: -12.877340316772461
    9. '-[' → logprob: -12.877340316772461
    10. '][' → logprob: -13.877340316772461

Token 40: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008797810296528041
    2. ' ' → logprob: -7.125879764556885
    3. '   ' → logprob: -9.875880241394043
    4. '    ' → logprob: -11.875880241394043
    5. '  ' → logprob: -12.125880241394043
    6. '```' → logprob: -13.125880241394043
    7. '           ' → logprob: -13.438380241394043
    8. ']' → logprob: -13.438380241394043
    9. ')' → logprob: -13.563380241394043
    10. '       ' → logprob: -14.563380241394043

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7120533811976202e-05
    2. ' ' → logprob: -11.125017166137695
    3. '   ' → logprob: -13.375017166137695
    4. '  ' → logprob: -14.625017166137695
    5. '```' → logprob: -15.937517166137695
    6. '    ' → logprob: -16.187517166137695
    7. '     ' → logprob: -17.562517166137695
    8. '       ' → logprob: -17.750017166137695
    9. '-' → logprob: -17.875017166137695
    10. '           ' → logprob: -18.000017166137695

Token 42: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00028064317302778363
    2. ']' → logprob: -8.625280380249023
    3. '[' → logprob: -10.375280380249023
    4. ' ][' → logprob: -10.500280380249023
    5. ''][' → logprob: -11.125280380249023
    6. '])' → logprob: -11.500280380249023
    7. '   ' → logprob: -12.625280380249023
    8. '"][' → logprob: -12.875280380249023
    9. ')][' → logprob: -13.125280380249023
    10. ']][' → logprob: -13.500280380249023

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029065259150229394
    2. '][' → logprob: -8.250290870666504
    3. ' ' → logprob: -11.125290870666504
    4. '[' → logprob: -11.750290870666504
    5. 'j' → logprob: -13.250290870666504
    6. '   ' → logprob: -13.625290870666504
    7. ']' → logprob: -14.000290870666504
    8. ''][' → logprob: -14.125290870666504
    9. '"][' → logprob: -15.375290870666504
    10. '0' → logprob: -15.625290870666504

Token 44: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.05276331678032875
    2. '])' → logprob: -3.4277632236480713
    3. '):' → logprob: -4.17776346206665
    4. ')' → logprob: -6.05276346206665
    5. ']' → logprob: -7.30276346206665
    6. ']:' → logprob: -8.677762985229492
    7. ')]' → logprob: -9.427762985229492
    8. ']):
' → logprob: -9.552762985229492
    9. ':' → logprob: -9.677762985229492
    10. '       ' → logprob: -10.427762985229492

Token 45: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3943570852279663
    2. '<|end|>' → logprob: -1.2693570852279663
    3. '           ' → logprob: -3.394357204437256
    4. ' ' → logprob: -6.144357204437256
    5. '<|end|>' → logprob: -6.644357204437256
    6. ')' → logprob: -6.894357204437256
    7. '       ' → logprob: -7.019357204437256
    8. '            ' → logprob: -7.269357204437256
    9. ',' → logprob: -7.519357204437256
    10. '.swap' → logprob: -7.644357204437256

Token 46: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.42490842938423157
    2. '                   ' → logprob: -1.7999083995819092
    3. ' C' → logprob: -2.174908399581909
    4. '               ' → logprob: -2.924908399581909
    5. '                ' → logprob: -5.299908638000488
    6. '<|end|>' → logprob: -5.924908638000488
    7. '                       ' → logprob: -6.674908638000488
    8. '           ' → logprob: -7.049908638000488
    9. ' ' → logprob: -7.299908638000488
    10. '                    ' → logprob: -7.549908638000488

Token 47: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0019857329316437244
    2. '[' → logprob: -6.251985549926758
    3. ',j' → logprob: -10.501985549926758
    4. ',' → logprob: -11.501985549926758
    5. '.swap' → logprob: -12.001985549926758
    6. '.' → logprob: -12.626985549926758
    7. '[i' → logprob: -13.001985549926758
    8. '```' → logprob: -13.751985549926758
    9. '[
' → logprob: -13.876985549926758
    10. '[J' → logprob: -14.001985549926758

Token 48: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.25865989923477173
    2. ',' → logprob: -1.508659839630127
    3. ']' → logprob: -6.258659839630127
    4. '-' → logprob: -6.508659839630127
    5. '[' → logprob: -7.008659839630127
    6. '],[' → logprob: -7.133659839630127
    7. ',C' → logprob: -7.133659839630127
    8. ' ,' → logprob: -8.008660316467285
    9. ',j' → logprob: -9.258660316467285
    10. ' ],' → logprob: -9.633660316467285

Token 49: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.062167104333639145
    2. ' C' → logprob: -2.812167167663574
    3. '<|end|>' → logprob: -8.562167167663574
    4. ' ' → logprob: -12.437167167663574
    5. '               ' → logprob: -13.562167167663574
    6. '<|end|>' → logprob: -14.187167167663574
    7. '	C' → logprob: -14.562167167663574
    8. '  ' → logprob: -15.062167167663574
    9. 'c' → logprob: -15.562167167663574
    10. '                ' → logprob: -15.562167167663574

Token 50: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.531315314830863e-06
    2. '[' → logprob: -12.625003814697266
    3. '[js' → logprob: -16.750003814697266
    4. '<|end|>' → logprob: -17.000003814697266
    5. ',j' → logprob: -17.125003814697266
    6. 'j' → logprob: -18.125003814697266
    7. '[
' → logprob: -18.375003814697266
    8. '[...,' → logprob: -18.500003814697266
    9. '	j' → logprob: -18.625003814697266
    10. '[i' → logprob: -18.625003814697266

Token 51: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12693849205970764
    2. ' -' → logprob: -2.126938581466675
    3. '<|end|>' → logprob: -12.376938819885254
    4. ' ' → logprob: -13.001938819885254
    5. '[' → logprob: -13.751938819885254
    6. '```' → logprob: -14.376938819885254
    7. ']' → logprob: -14.876938819885254
    8. '   ' → logprob: -15.001938819885254
    9. '−' → logprob: -15.126938819885254
    10. '<|end|>' → logprob: -15.251938819885254

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.081584716506768e-05
    2. ' ' → logprob: -11.375020980834961
    3. '<|end|>' → logprob: -12.000020980834961
    4. '   ' → logprob: -13.625020980834961
    5. '```' → logprob: -13.750020980834961
    6. '0' → logprob: -15.750020980834961
    7. '<|end|>' → logprob: -16.25002098083496
    8. 's' → logprob: -16.37502098083496
    9. '  ' → logprob: -16.56252098083496
    10. '    ' → logprob: -16.62502098083496

Token 53: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6143547296524048
    2. ']' → logprob: -1.2393547296524048
    3. ' =' → logprob: -1.9893547296524048
    4. ']=' → logprob: -3.6143546104431152
    5. ')' → logprob: -5.489354610443115
    6. ')=' → logprob: -7.239354610443115
    7. '<|end|>' → logprob: -7.239354610443115
    8. ' ' → logprob: -11.114355087280273
    9. ',' → logprob: -11.114355087280273
    10. '>' → logprob: -11.114355087280273

Token 54: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34845536947250366
    2. ' =' → logprob: -1.2234554290771484
    3. '＝' → logprob: -12.848455429077148
    4. '=

' → logprob: -13.848455429077148
    5. ' ' → logprob: -14.223455429077148
    6. '=C' → logprob: -14.223455429077148
    7. ',' → logprob: -14.223455429077148
    8. '<|end|>' → logprob: -14.723455429077148
    9. '=j' → logprob: -14.848455429077148
    10. '=s' → logprob: -14.973455429077148

Token 55: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.6931664943695068
    2. ' C' → logprob: -0.6931664943695068
    3. ' ' → logprob: -11.818166732788086
    4. '	C' → logprob: -12.318166732788086
    5. '<|end|>' → logprob: -13.318166732788086
    6. '               ' → logprob: -13.568166732788086
    7. '>C' → logprob: -13.943166732788086
    8. ' ' → logprob: -14.568166732788086
    9. '                ' → logprob: -14.568166732788086
    10. '   ' → logprob: -14.693166732788086

Token 56: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.292907877039397e-06
    2. '[' → logprob: -12.75000286102295
    3. ' [' → logprob: -16.375003814697266
    4. '```' → logprob: -16.625003814697266
    5. '[i' → logprob: -16.750003814697266
    6. ',j' → logprob: -16.875003814697266
    7. 'j' → logprob: -16.875003814697266
    8. '[
' → logprob: -16.875003814697266
    9. '[js' → logprob: -17.250003814697266
    10. '   ' → logprob: -18.000003814697266

Token 57: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -8.613945101387799e-05
    2. ' -' → logprob: -9.375085830688477
    3. '1' → logprob: -14.375085830688477
    4. '-,' → logprob: -15.625085830688477
    5. '[' → logprob: -16.000085830688477
    6. ',' → logprob: -16.125085830688477
    7. ' ' → logprob: -16.250085830688477
    8. ',j' → logprob: -16.625085830688477
    9. '],' → logprob: -16.750085830688477
    10. '−' → logprob: -17.250085830688477

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.259079363080673e-05
    2. ' ' → logprob: -11.375012397766113
    3. '```' → logprob: -15.125012397766113
    4. '   ' → logprob: -15.250012397766113
    5. '<|end|>' → logprob: -16.62501335144043
    6. '    ' → logprob: -16.62501335144043
    7. '...' → logprob: -16.93751335144043
    8. '0' → logprob: -17.50001335144043
    9. '  ' → logprob: -17.68751335144043
    10. '१' → logprob: -17.81251335144043

Token 59: '],' (ID: 2155)
  Prédit: ',C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',C' → logprob: -0.37511909008026123
    2. ',' → logprob: -1.3751190900802612
    3. '],' → logprob: -2.875119209289551
    4. ' ,' → logprob: -6.500119209289551
    5. '],[' → logprob: -7.000119209289551
    6. ']' → logprob: -7.250119209289551
    7. ',j' → logprob: -8.00011920928955
    8. '},' → logprob: -11.00011920928955
    9. '‌,' → logprob: -11.00011920928955
    10. 'C' → logprob: -11.25011920928955

Token 60: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.0206720617134124e-05
    2. ' C' → logprob: -11.50001049041748
    3. '	C' → logprob: -19.000009536743164
    4. '   ' → logprob: -19.625009536743164
    5. '<|end|>' → logprob: -19.625009536743164
    6. '>C' → logprob: -20.625009536743164
    7. '```' → logprob: -20.875009536743164
    8. 'Ｃ' → logprob: -21.250009536743164
    9. ' ' → logprob: -21.500009536743164
    10. '  ' → logprob: -21.500009536743164

Token 61: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.3425219549390022e-05
    2. '[' → logprob: -11.37501335144043
    3. ',j' → logprob: -13.50001335144043
    4. 'j' → logprob: -15.12501335144043
    5. '[:' → logprob: -16.75001335144043
    6. '	j' → logprob: -17.25001335144043
    7. '[i' → logprob: -17.37501335144043
    8. '[js' → logprob: -17.37501335144043
    9. '```' → logprob: -17.75001335144043
    10. ']' → logprob: -17.87501335144043

Token 62: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15970247983932495
    2. '<|end|>' → logprob: -2.4097025394439697
    3. ']' → logprob: -2.9097025394439697
    4. '}' → logprob: -6.409702301025391
    5. '<|end|>' → logprob: -6.909702301025391
    6. '```' → logprob: -7.909702301025391
    7. ')
' → logprob: -9.03470230102539
    8. ')]' → logprob: -10.78470230102539
    9. ')return' → logprob: -11.15970230102539
    10. ']
' → logprob: -11.15970230102539

Token 63: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: ' Selection' (ID: 41903)
  Prédit: 'Selection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Selection' → logprob: -1.184364676475525
    2. 'Quick' → logprob: -1.309364676475525
    3. ' Quick' → logprob: -1.934364676475525
    4. ' Selection' → logprob: -2.4343647956848145
    5. 'Insertion' → logprob: -2.6843647956848145
    6. ' In' → logprob: -3.5593647956848145
    7. 'selection' → logprob: -4.4343647956848145
    8. ' selection' → logprob: -4.8093647956848145
    9. ' main' → logprob: -4.9343647956848145
    10. ' quick' → logprob: -4.9343647956848145

Token 65: 'Sort' (ID: 11602)
  Prédit: 'Sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sort' → logprob: -2.816093228830141e-06
    2. ' Sort' → logprob: -13.37500286102295
    3. 'sort' → logprob: -14.00000286102295
    4. '_sort' → logprob: -15.87500286102295
    5. '_S' → logprob: -16.375001907348633
    6. 'S' → logprob: -17.250001907348633
    7. 'Sor' → logprob: -17.250001907348633
    8. ' sort' → logprob: -17.375001907348633
    9. '(S' → logprob: -18.250001907348633
    10. 'Sorter' → logprob: -18.500001907348633

Token 66: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.0005356363253667951
    2. '(' → logprob: -8.00053596496582
    3. '(A' → logprob: -9.62553596496582
    4. '(S' → logprob: -9.75053596496582
    5. ' (' → logprob: -9.87553596496582
    6. '(N' → logprob: -11.87553596496582
    7. '(lst' → logprob: -12.87553596496582
    8. '(I' → logprob: -13.00053596496582
    9. '(arr' → logprob: -13.00053596496582
    10. '(B' → logprob: -13.12553596496582

Token 67: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28530463576316833
    2. ',N' → logprob: -1.4103046655654907
    3. ',C' → logprob: -5.660304546356201
    4. ' ,' → logprob: -7.785304546356201
    5. ',n' → logprob: -8.53530502319336
    6. ',size' → logprob: -11.78530502319336
    7. ',A' → logprob: -12.28530502319336
    8. '   ' → logprob: -12.41030502319336
    9. ',K' → logprob: -12.53530502319336
    10. ',num' → logprob: -12.66030502319336

Token 68: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -6.718606891809031e-05
    2. ':' → logprob: -9.875066757202148
    3. ')' → logprob: -11.375066757202148
    4. '):
' → logprob: -12.625066757202148
    5. ' ):' → logprob: -14.875066757202148
    6. '>:' → logprob: -15.875066757202148
    7. '():' → logprob: -16.12506675720215
    8. ']:' → logprob: -16.87506675720215
    9. '   ' → logprob: -17.00006675720215
    10. '):
' → logprob: -17.25006675720215

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037581557407975197
    2. ' for' → logprob: -5.628757953643799
    3. '	for' → logprob: -9.628758430480957
    4. 'for' → logprob: -10.253758430480957
    5. '<|end|>' → logprob: -10.253758430480957
    6. '   ' → logprob: -11.503758430480957
    7. '    ' → logprob: -12.503758430480957
    8. '    
' → logprob: -12.753758430480957
    9. ' ' → logprob: -14.003758430480957
    10. '```' → logprob: -14.503758430480957

Token 70: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0034132052678614855
    2. 'min' → logprob: -5.753413200378418
    3. ' for' → logprob: -8.628413200378418
    4. '   ' → logprob: -9.878413200378418
    5. 'minimum' → logprob: -13.128413200378418
    6. '```' → logprob: -14.128413200378418
    7. ' min' → logprob: -14.753413200378418
    8. 'max' → logprob: -15.003413200378418
    9. ' ' → logprob: -15.503413200378418
    10. 'index' → logprob: -15.628413200378418

Token 71: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.17975588142871857
    2. 'i' → logprob: -1.8047559261322021
    3. ' ' → logprob: -11.929756164550781
    4. '	i' → logprob: -13.179756164550781
    5. '   ' → logprob: -14.179756164550781
    6. '  ' → logprob: -14.929756164550781
    7. '_i' → logprob: -15.179756164550781
    8. '0' → logprob: -15.554756164550781
    9. 'range' → logprob: -15.929756164550781
    10. ' ' → logprob: -16.05475616455078

Token 72: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006747227627784014
    2. 'in' → logprob: -5.006747245788574
    3. ' ' → logprob: -10.506747245788574
    4. '	in' → logprob: -13.631747245788574
    5. '   ' → logprob: -14.006747245788574
    6. '  ' → logprob: -14.131747245788574
    7. 'range' → logprob: -14.881747245788574
    8. '+' → logprob: -15.006747245788574
    9. '<|end|>' → logprob: -15.381747245788574
    10. '```' → logprob: -15.631747245788574

Token 73: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3133127689361572
    2. ' range' → logprob: -1.3133127689361572
    3. '0' → logprob: -10.313312530517578
    4. ' ' → logprob: -11.188312530517578
    5. '(range' → logprob: -13.563312530517578
    6. '  ' → logprob: -14.063312530517578
    7. '   ' → logprob: -14.188312530517578
    8. '	range' → logprob: -14.563312530517578
    9. '    ' → logprob: -15.063312530517578
    10. '1' → logprob: -16.438312530517578

Token 74: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.002731290180236101
    2. '(' → logprob: -6.0027313232421875
    3. 'N' → logprob: -8.377731323242188
    4. '   ' → logprob: -11.752731323242188
    5. ' N' → logprob: -12.127731323242188
    6. '1' → logprob: -12.127731323242188
    7. '(n' → logprob: -13.377731323242188
    8. '0' → logprob: -13.752731323242188
    9. '(i' → logprob: -14.002731323242188
    10. '<N' → logprob: -14.002731323242188

Token 75: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.43433621525764465
    2. '):
' → logprob: -1.0593361854553223
    3. '   ' → logprob: -6.059336185455322
    4. '-' → logprob: -6.184336185455322
    5. ')' → logprob: -6.809336185455322
    6. '):
' → logprob: -10.55933666229248
    7. '+' → logprob: -10.80933666229248
    8. ':' → logprob: -10.93433666229248
    9. '):

' → logprob: -10.93433666229248
    10. ' -' → logprob: -11.55933666229248

Token 76: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34645259380340576
    2. 'min' → logprob: -1.7214525938034058
    3. ' min' → logprob: -2.3464527130126953
    4. '   ' → logprob: -4.471452713012695
    5. '    ' → logprob: -5.346452713012695
    6. '	min' → logprob: -6.721452713012695
    7. '_min' → logprob: -8.596452713012695
    8. ' minimum' → logprob: -9.221452713012695
    9. 'max' → logprob: -9.346452713012695
    10. '           ' → logprob: -9.721452713012695

Token 77: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.016252072528004646
    2. 'k' → logprob: -5.266252040863037
    3. '   ' → logprob: -5.766252040863037
    4. ' min' → logprob: -6.016252040863037
    5. 'm' → logprob: -6.391252040863037
    6. 'mini' → logprob: -7.516252040863037
    7. 'minimum' → logprob: -7.766252040863037
    8. 'pos' → logprob: -7.891252040863037
    9. 'max' → logprob: -7.891252040863037
    10. 'idx' → logprob: -8.016252517700195

Token 78: 'j' (ID: 73)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.5030799508094788
    2. '_index' → logprob: -1.378079891204834
    3. '_' → logprob: -2.503079891204834
    4. '_i' → logprob: -2.878079891204834
    5. '_j' → logprob: -5.378079891204834
    6. '_=' → logprob: -8.128080368041992
    7. '_ind' → logprob: -9.503080368041992
    8. '_ix' → logprob: -9.503080368041992
    9. 'Index' → logprob: -10.753080368041992
    10. '_pos' → logprob: -10.878080368041992

Token 79: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4927443265914917
    2. '=' → logprob: -0.9927443265914917
    3. '=i' → logprob: -3.9927444458007812
    4. '=j' → logprob: -10.617744445800781
    5. '=int' → logprob: -11.867744445800781
    6. '=index' → logprob: -11.992744445800781
    7. ' ' → logprob: -13.242744445800781
    8. '＝' → logprob: -13.242744445800781
    9. '=n' → logprob: -14.867744445800781
    10. '=

' → logprob: -15.117744445800781

Token 80: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14269302785396576
    2. ' i' → logprob: -2.017693042755127
    3. '	i' → logprob: -11.767692565917969
    4. ' ' → logprob: -12.517692565917969
    5. '<|end|>' → logprob: -12.892692565917969
    6. '    ' → logprob: -13.767692565917969
    7. '   ' → logprob: -14.017692565917969
    8. '{i' → logprob: -14.642692565917969
    9. '=i' → logprob: -15.017692565917969
    10. '[i' → logprob: -15.267692565917969

Token 81: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5526349544525146
    2. 'for' (adapté à ' for') → logprob: -0.9276349544525146
    3. '       ' → logprob: -3.8026349544525146
    4. '<|end|>' → logprob: -6.052635192871094
    5. '
' → logprob: -6.302635192871094
    6. '   ' → logprob: -7.052635192871094
    7. '+' → logprob: -7.052635192871094
    8. '	for' → logprob: -8.302635192871094
    9. ' ' → logprob: -9.177635192871094
    10. '        ' → logprob: -9.427635192871094

Token 84: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.21931147575378418
    2. ' range' → logprob: -2.344311475753784
    3. 'j' → logprob: -2.719311475753784
    4. 'range' → logprob: -3.469311475753784
    5. ' in' → logprob: -6.094311714172363
    6. ' ' → logprob: -6.719311714172363
    7. '    ' → logprob: -8.469311714172363
    8. '  ' → logprob: -10.094311714172363
    9. '```' → logprob: -10.094311714172363
    10. ' i' → logprob: -10.344311714172363

Token 85: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002926591783761978
    2. 'in' → logprob: -5.877926826477051
    3. 'range' → logprob: -9.62792682647705
    4. ' ' → logprob: -10.50292682647705
    5. ' range' → logprob: -11.37792682647705
    6. ' i' → logprob: -12.25292682647705
    7. '<|end|>' → logprob: -12.25292682647705
    8. '    ' → logprob: -13.50292682647705
    9. '   ' → logprob: -14.12792682647705
    10. '	in' → logprob: -14.25292682647705

Token 86: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3869427740573883
    2. 'range' → logprob: -1.136942744255066
    3. ' i' → logprob: -10.386942863464355
    4. '(range' → logprob: -10.636942863464355
    5. 'i' → logprob: -11.511942863464355
    6. ' ' → logprob: -12.386942863464355
    7. '	range' → logprob: -14.136942863464355
    8. ' rang' → logprob: -14.636942863464355
    9. '(i' → logprob: -15.011942863464355
    10. '    ' → logprob: -15.386942863464355

Token 87: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.570319702499546e-05
    2. '(' → logprob: -10.625025749206543
    3. '(N' → logprob: -14.250025749206543
    4. ' i' → logprob: -15.125025749206543
    5. 'i' → logprob: -15.250025749206543
    6. '(I' → logprob: -16.000024795532227
    7. ' (' → logprob: -17.625024795532227
    8. '(
' → logprob: -18.250024795532227
    9. '(n' → logprob: -19.000024795532227
    10. ',i' → logprob: -19.125024795532227

Token 88: ',N' (ID: 49539)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00012689977302215993
    2. ' +' → logprob: -9.125126838684082
    3. '+,' → logprob: -11.500126838684082
    4. ',' → logprob: -12.375126838684082
    5. '+
' → logprob: -13.250126838684082
    6. ',N' → logprob: -13.500126838684082
    7. '1' → logprob: -15.500126838684082
    8. ' ,' → logprob: -15.875126838684082
    9. '+i' → logprob: -16.3751277923584
    10. ',+' → logprob: -17.2501277923584

Token 89: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016321858391165733
    2. '):
' → logprob: -4.141321659088135
    3. ':' → logprob: -8.641322135925293
    4. '+' → logprob: -10.141322135925293
    5. ')' → logprob: -10.641322135925293
    6. '):
' → logprob: -11.641322135925293
    7. '       ' → logprob: -11.641322135925293
    8. '<|end|>' → logprob: -11.766322135925293
    9. '   ' → logprob: -12.141322135925293
    10. '):

' → logprob: -12.516322135925293

Token 90: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12777812778949738
    2. ':' → logprob: -2.3777780532836914
    3. '<|end|>' → logprob: -4.002778053283691
    4. '       ' → logprob: -6.627778053283691
    5. '               ' → logprob: -6.627778053283691
    6. ':
' → logprob: -6.752778053283691
    7. '<|end|>' → logprob: -7.002778053283691
    8. ' if' → logprob: -7.002778053283691
    9. ' ' → logprob: -7.377778053283691
    10. '   ' → logprob: -7.377778053283691

Token 91: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4708389341831207
    2. '           ' → logprob: -1.7208389043807983
    3. ' if' → logprob: -1.7208389043807983
    4. 'if' (adapté à ' if') → logprob: -4.470839023590088
    5. ' 
' → logprob: -6.220839023590088
    6. ' ' → logprob: -6.845839023590088
    7. '   ' → logprob: -7.595839023590088
    8. '<|end|>' → logprob: -7.720839023590088
    9. '                
' → logprob: -7.970839023590088
    10. '                   ' → logprob: -7.970839023590088

Token 92: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.018214095383882523
    2. 'int' → logprob: -4.018214225769043
    3. '   ' → logprob: -10.768214225769043
    4. '    ' → logprob: -11.268214225769043
    5. '(int' → logprob: -11.518214225769043
    6. '<int' → logprob: -12.018214225769043
    7. '	int' → logprob: -12.393214225769043
    8. '[int' → logprob: -12.893214225769043
    9. ' ' → logprob: -13.393214225769043
    10. ' ' → logprob: -13.768214225769043

Token 93: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -2.1008713702030946e-06
    2. '(' → logprob: -13.125001907348633
    3. 'C' → logprob: -17.375001907348633
    4. ' (' → logprob: -17.750001907348633
    5. ')' → logprob: -18.750001907348633
    6. '(CType' → logprob: -19.500001907348633
    7. '(B' → logprob: -20.000001907348633
    8. '(A' → logprob: -20.000001907348633
    9. '(Code' → logprob: -20.250001907348633
    10. '<|end|>' → logprob: -20.250001907348633

Token 94: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.125000953674316
    3. 'j' → logprob: -16.875001907348633
    4. '[i' → logprob: -17.000001907348633
    5. '[js' → logprob: -17.875001907348633
    6. '   ' → logprob: -18.250001907348633
    7. ')[' → logprob: -18.375001907348633
    8. ')' → logprob: -18.500001907348633
    9. '[min' → logprob: -18.500001907348633
    10. '[
' → logprob: -18.625001907348633

Token 95: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2279735803604126
    2. '][' → logprob: -1.6029735803604126
    3. ')[' → logprob: -6.227973461151123
    4. '>[' → logprob: -8.977973937988281
    5. '[j' → logprob: -9.477973937988281
    6. ']' → logprob: -9.477973937988281
    7. ' [' → logprob: -9.602973937988281
    8. ')' → logprob: -10.352973937988281
    9. '"][' → logprob: -10.477973937988281
    10. '}[' → logprob: -10.727973937988281

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005387356504797935
    2. '[' → logprob: -7.6255388259887695
    3. ' ' → logprob: -10.50053882598877
    4. '][' → logprob: -11.00053882598877
    5. ']' → logprob: -13.75053882598877
    6. '0' → logprob: -14.06303882598877
    7. ' [' → logprob: -14.31303882598877
    8. '   ' → logprob: -14.37553882598877
    9. '```' → logprob: -14.50053882598877
    10. ')' → logprob: -14.56303882598877

Token 97: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007310099899768829
    2. '])' → logprob: -5.007309913635254
    3. ' )' → logprob: -7.632309913635254
    4. ')<' → logprob: -10.507309913635254
    5. '）' → logprob: -11.007309913635254
    6. ''])' → logprob: -11.132309913635254
    7. '[' → logprob: -11.632309913635254
    8. '')' → logprob: -11.882309913635254
    9. '>)' → logprob: -12.007309913635254
    10. ')>' → logprob: -12.132309913635254

Token 98: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.16035066545009613
    2. ' <' → logprob: -1.9103506803512573
    3. '<int' → logprob: -9.160350799560547
    4. ')' → logprob: -11.535350799560547
    5. '>' → logprob: -12.910350799560547
    6. '[' → logprob: -13.035350799560547
    7. ' ' → logprob: -13.410350799560547
    8. '<|end|>' → logprob: -13.535350799560547
    9. ')<' → logprob: -14.285350799560547
    10. '<size' → logprob: -14.785350799560547

Token 99: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0019299437990412116
    2. ' int' → logprob: -6.251929759979248
    3. '=int' → logprob: -14.876930236816406
    4. '<int' → logprob: -15.001930236816406
    5. '   ' → logprob: -15.751930236816406
    6. '(int' → logprob: -15.751930236816406
    7. '  ' → logprob: -15.876930236816406
    8. '	int' → logprob: -16.001930236816406
    9. ' ' → logprob: -17.376930236816406
    10. '[int' → logprob: -17.376930236816406

Token 100: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.007634543348103762
    2. 'C' → logprob: -4.88263463973999
    3. '(' → logprob: -11.257634162902832
    4. ' C' → logprob: -11.632634162902832
    5. ' (' → logprob: -12.507634162902832
    6. ')' → logprob: -13.257634162902832
    7. '(
' → logprob: -15.132634162902832
    8. '   ' → logprob: -15.257634162902832
    9. '	C' → logprob: -15.507634162902832
    10. '           ' → logprob: -16.63263511657715

Token 101: '[min' (ID: 135647)
  Prédit: '[min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -4.930552313453518e-05
    2. 'min' → logprob: -10.125049591064453
    3. '[m' → logprob: -12.125049591064453
    4. '[C' → logprob: -13.125049591064453
    5. '[' → logprob: -14.125049591064453
    6. '[j' → logprob: -14.750049591064453
    7. '[max' → logprob: -15.750049591064453
    8. '[i' → logprob: -16.250049591064453
    9. '	min' → logprob: -16.375049591064453
    10. '   ' → logprob: -16.625049591064453

Token 102: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0005421888781711459
    2. ']' → logprob: -7.625542163848877
    3. ' j' → logprob: -11.375542640686035
    4. '][' → logprob: -11.750542640686035
    5. '[j' → logprob: -12.000542640686035
    6. '   ' → logprob: -12.000542640686035
    7. '])' → logprob: -12.125542640686035
    8. '[' → logprob: -12.500542640686035
    9. '       ' → logprob: -12.875542640686035
    10. '	j' → logprob: -12.875542640686035

Token 103: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.007915828377008438
    2. '[' → logprob: -4.88291597366333
    3. ' ][' → logprob: -9.257915496826172
    4. ')[' → logprob: -9.757915496826172
    5. ']' → logprob: -10.007915496826172
    6. '[j' → logprob: -10.007915496826172
    7. '   ' → logprob: -11.257915496826172
    8. '"][' → logprob: -11.507915496826172
    9. ''][' → logprob: -11.632915496826172
    10. '])[' → logprob: -11.882915496826172

Token 104: '1' (ID: 16)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.018260452896356583
    2. '1' → logprob: -4.018260478973389
    3. ' j' → logprob: -9.51826000213623
    4. '   ' → logprob: -10.64326000213623
    5. ')' → logprob: -12.64326000213623
    6. '	j' → logprob: -13.01826000213623
    7. ']' → logprob: -13.14326000213623
    8. '[' → logprob: -13.26826000213623
    9. 'i' → logprob: -14.14326000213623
    10. '[j' → logprob: -14.39326000213623

Token 105: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007536829449236393
    2. ']):' → logprob: -5.132536888122559
    3. ']:' → logprob: -7.382536888122559
    4. '):
' → logprob: -7.632536888122559
    5. ')' → logprob: -8.382536888122559
    6. ':' → logprob: -9.007536888122559
    7. '       ' → logprob: -9.507536888122559
    8. '）：' → logprob: -10.882536888122559
    9. ']):
' → logprob: -11.382536888122559
    10. ' ):' → logprob: -11.757536888122559

Token 106: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.957547128200531
    2. '               ' → logprob: -1.0825471878051758
    3. '           ' → logprob: -1.4575471878051758
    4. ':
' → logprob: -4.082547187805176
    5. ':min' → logprob: -5.207547187805176
    6. '):
' → logprob: -5.332547187805176
    7. '<|end|>' → logprob: -5.457547187805176
    8. '):' → logprob: -5.707547187805176
    9. '[min' → logprob: -5.832547187805176
    10. ')' → logprob: -6.207547187805176

Token 107: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.03804849088191986
    2. 'min' (adapté à ' min') → logprob: -3.288048505783081
    3. '	min' → logprob: -13.03804874420166
    4. '(min' → logprob: -13.53804874420166
    5. '_min' → logprob: -13.66304874420166
    6. '[min' → logprob: -14.16304874420166
    7. ' 
' → logprob: -14.66304874420166
    8. '
' → logprob: -14.66304874420166
    9. '               ' → logprob: -15.41304874420166
    10. '           ' → logprob: -15.91304874420166

Token 108: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.128163257315464e-07
    2. ' j' → logprob: -16.5
    3. '```' → logprob: -16.75
    4. '   ' → logprob: -17.125
    5. '           ' → logprob: -18.125
    6. '       ' → logprob: -18.25
    7. ' ' → logprob: -19.375
    8. '    ' → logprob: -19.375
    9. '	j' → logprob: -19.625
    10. '  ' → logprob: -20.0

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008625093847513199
    2. '=' → logprob: -4.758625030517578
    3. '=j' → logprob: -11.508625030517578
    4. ' ' → logprob: -14.883625030517578
    5. ' =
' → logprob: -15.633625030517578
    6. '=i' → logprob: -17.133625030517578
    7. '＝' → logprob: -18.008625030517578
    8. ' ==' → logprob: -19.633625030517578
    9. ' =)' → logprob: -20.008625030517578
    10. '   ' → logprob: -20.133625030517578

Token 110: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.25193002820014954
    2. ' j' → logprob: -1.5019299983978271
    3. '	j' → logprob: -14.376930236816406
    4. '<|end|>' → logprob: -15.501930236816406
    5. ' ' → logprob: -16.501930236816406
    6. '   ' → logprob: -16.751930236816406
    7. '    ' → logprob: -16.876930236816406
    8. '$j' → logprob: -18.126930236816406
    9. '[j' → logprob: -19.001930236816406
    10. '_j' → logprob: -19.001930236816406

Token 111: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9316650032997131
    2. '
' → logprob: -1.0566649436950684
    3. '<|end|>' → logprob: -1.5566649436950684
    4. ' 
' → logprob: -4.056664943695068
    5. '        
' → logprob: -4.056664943695068
    6. '  
' → logprob: -5.681664943695068
    7. '    
' → logprob: -5.806664943695068
    8. '   ' → logprob: -6.806664943695068
    9. '            
' → logprob: -7.056664943695068
    10. '<|end|>' → logprob: -7.181664943695068

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05497470125555992
    2. '<|end|>' → logprob: -3.1799747943878174
    3. '        
' → logprob: -5.304974555969238
    4. '
' → logprob: -6.054974555969238
    5. '   ' → logprob: -6.679974555969238
    6. ' 
' → logprob: -6.929974555969238
    7. '    
' → logprob: -7.804974555969238
    8. '  
' → logprob: -7.929974555969238
    9. '	' → logprob: -8.054974555969238
    10. '\' → logprob: -8.929974555969238

Token 113: ' C' (ID: 363)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3256361186504364
    2. '<|end|>' → logprob: -1.4506361484527588
    3. ' ' → logprob: -3.700636148452759
    4. ' 
' → logprob: -5.20063591003418
    5. '        
' → logprob: -5.45063591003418
    6. '   ' → logprob: -5.45063591003418
    7. '           ' → logprob: -7.57563591003418
    8. '  ' → logprob: -7.70063591003418
    9. '        ' → logprob: -7.70063591003418
    10. '    ' → logprob: -7.70063591003418

Token 114: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.398067828034982e-05
    2. '[' → logprob: -9.75007438659668
    3. '[I' → logprob: -11.75007438659668
    4. '[C' → logprob: -12.00007438659668
    5. '[j' → logprob: -13.62507438659668
    6. 'i' → logprob: -15.25007438659668
    7. '[min' → logprob: -16.25007438659668
    8. ',i' → logprob: -17.50007438659668
    9. '```' → logprob: -17.50007438659668
    10. '[int' → logprob: -17.75007438659668

Token 115: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5578128695487976
    2. '],' → logprob: -1.0578129291534424
    3. ',C' → logprob: -2.6828129291534424
    4. ']' → logprob: -4.557812690734863
    5. '],[' → logprob: -6.682812690734863
    6. '>,' → logprob: -10.057812690734863
    7. ' ,' → logprob: -10.057812690734863
    8. ',j' → logprob: -10.682812690734863
    9. '},' → logprob: -10.682812690734863
    10. ' ],' → logprob: -11.307812690734863

Token 116: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -7.994086627149954e-05
    2. '<|end|>' → logprob: -9.875080108642578
    3. ' C' → logprob: -10.500080108642578
    4. ' ' → logprob: -15.375080108642578
    5. '>C' → logprob: -16.000080108642578
    6. '  ' → logprob: -16.125080108642578
    7. 'def' → logprob: -16.125080108642578
    8. '   ' → logprob: -16.250080108642578
    9. '       ' → logprob: -16.875080108642578
    10. 'c' → logprob: -16.875080108642578

Token 117: '[min' (ID: 135647)
  Prédit: '[min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -2.6537622034084052e-05
    2. '[' → logprob: -11.25002670288086
    3. '<|end|>' → logprob: -11.62502670288086
    4. '[max' → logprob: -12.87502670288086
    5. 'min' → logprob: -13.50002670288086
    6. '[user' → logprob: -15.75002670288086
    7. '[
' → logprob: -16.00002670288086
    8. '[j' → logprob: -16.37502670288086
    9. '[m' → logprob: -16.62502670288086
    10. '(min' → logprob: -17.50002670288086

Token 118: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00022356293629854918
    2. ']' → logprob: -9.375223159790039
    3. '   ' → logprob: -10.500223159790039
    4. '       ' → logprob: -10.750223159790039
    5. 'min' → logprob: -10.875223159790039
    6. ' ' → logprob: -11.125223159790039
    7. 'i' → logprob: -11.125223159790039
    8. '```' → logprob: -11.625223159790039
    9. '           ' → logprob: -12.500223159790039
    10. '<|end|>' → logprob: -12.625223159790039

Token 119: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003059111535549164
    2. ' ]' → logprob: -6.628058910369873
    3. ']=' → logprob: -7.003058910369873
    4. '=' → logprob: -7.503058910369873
    5. ' =' → logprob: -8.503059387207031
    6. '   ' → logprob: -9.878059387207031
    7. ')' → logprob: -12.378059387207031
    8. ' ' → logprob: -12.503059387207031
    9. '[' → logprob: -12.628059387207031
    10. '    ' → logprob: -13.003059387207031

Token 120: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142309367656708
    2. ' =' → logprob: -1.7014230489730835
    3. '=
' → logprob: -12.576422691345215
    4. ' ' → logprob: -12.826422691345215
    5. ' =
' → logprob: -13.826422691345215
    6. '<|end|>' → logprob: -13.826422691345215
    7. '=

' → logprob: -13.951422691345215
    8. '   ' → logprob: -14.951422691345215
    9. '  ' → logprob: -16.57642364501953
    10. '    ' → logprob: -16.82642364501953

Token 121: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.5760505795478821
    2. 'C' → logprob: -0.8260505795478821
    3. '<|end|>' → logprob: -9.326050758361816
    4. ' ' → logprob: -11.701050758361816
    5. '	C' → logprob: -11.951050758361816
    6. '   ' → logprob: -13.951050758361816
    7. '>C' → logprob: -13.951050758361816
    8. ' ' → logprob: -14.076050758361816
    9. '<|end|>' → logprob: -14.263550758361816
    10. '_C' → logprob: -14.388550758361816

Token 122: '[min' (ID: 135647)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001114106344175525
    2. '[j' → logprob: -9.25011157989502
    3. '[' → logprob: -12.25011157989502
    4. 'i' → logprob: -13.00011157989502
    5. ',i' → logprob: -13.00011157989502
    6. '[min' → logprob: -13.50011157989502
    7. '<|end|>' → logprob: -13.62511157989502
    8. '[
' → logprob: -13.87511157989502
    9. ',' → logprob: -14.00011157989502
    10. '[user' → logprob: -14.25011157989502

Token 123: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.165027217415627e-05
    2. 'i' → logprob: -11.625021934509277
    3. ']' → logprob: -12.125021934509277
    4. '   ' → logprob: -12.875021934509277
    5. '<|end|>' → logprob: -13.625021934509277
    6. 'min' → logprob: -13.750021934509277
    7. ' j' → logprob: -14.250021934509277
    8. '```' → logprob: -15.125021934509277
    9. '    ' → logprob: -15.250021934509277
    10. ' ' → logprob: -15.375021934509277

Token 124: '],' (ID: 2155)
  Prédit: ',i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',i' → logprob: -0.8914465308189392
    2. ',' → logprob: -1.141446590423584
    3. ']' → logprob: -1.516446590423584
    4. '],' → logprob: -3.516446590423584
    5. ',C' → logprob: -3.891446590423584
    6. ' ,' → logprob: -7.641446590423584
    7. '[i' → logprob: -8.641446113586426
    8. '],[' → logprob: -9.266446113586426
    9. ',j' → logprob: -10.141446113586426
    10. 'C' → logprob: -10.141446113586426

Token 125: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.2664456789934775e-06
    2. ' C' → logprob: -13.750000953674316
    3. '<|end|>' → logprob: -15.875000953674316
    4. ' ' → logprob: -18.500001907348633
    5. '```' → logprob: -19.125001907348633
    6. '
' → logprob: -19.375001907348633
    7. '`' → logprob: -19.375001907348633
    8. '[' → logprob: -19.750001907348633
    9. '   ' → logprob: -19.750001907348633
    10. 'i' → logprob: -20.000001907348633

Token 126: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.5597102396423e-05
    2. '[' → logprob: -10.625035285949707
    3. 'i' → logprob: -11.750035285949707
    4. '[j' → logprob: -13.500035285949707
    5. '[
' → logprob: -13.500035285949707
    6. '<|end|>' → logprob: -15.250035285949707
    7. '[user' → logprob: -16.375036239624023
    8. '[I' → logprob: -16.750036239624023
    9. ',i' → logprob: -16.875036239624023
    10. ' i' → logprob: -16.875036239624023

Token 127: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005943780997768044
    2. ']' → logprob: -8.000594139099121
    3. '}' → logprob: -8.500594139099121
    4. '<|end|>' → logprob: -10.125594139099121
    5. ')
' → logprob: -12.000594139099121
    6. '[' → logprob: -12.625594139099121
    7. '[i' → logprob: -13.250594139099121
    8. ')}' → logprob: -13.750594139099121
    9. ')

' → logprob: -14.250594139099121
    10. '）' → logprob: -14.625594139099121

Token 128: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5323607921600342
    2. 'd' → logprob: -1.0323607921600342
    3. '
' → logprob: -4.157361030578613
    4. '#' → logprob: -4.407361030578613
    5. '<|end|>' → logprob: -4.407361030578613
    6. '\' → logprob: -5.532361030578613
    7. '[' → logprob: -6.032361030578613
    8. 'B' → logprob: -6.032361030578613
    9. '```' → logprob: -6.157361030578613
    10. 'D' → logprob: -6.782361030578613

Token 129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03813650459051132
    2. '=' → logprob: -3.2881364822387695
    3. ',' → logprob: -9.78813648223877
    4. ' ' → logprob: -11.28813648223877
    5. '=int' → logprob: -11.91313648223877
    6. '_' → logprob: -12.78813648223877
    7. ' =
' → logprob: -12.78813648223877
    8. '=input' → logprob: -12.91313648223877
    9. '>' → logprob: -13.41313648223877
    10. '.' → logprob: -13.53813648223877

Token 130: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5262944102287292
    2. 'int' → logprob: -1.026294469833374
    3. '5' → logprob: -3.276294469833374
    4. '10' → logprob: -5.401294231414795
    5. ' ' → logprob: -5.526294231414795
    6. '6' → logprob: -6.401294231414795
    7. '4' → logprob: -6.776294231414795
    8. '7' → logprob: -7.026294231414795
    9. '3' → logprob: -7.151294231414795
    10. 'input' → logprob: -10.151294708251953

Token 131: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.038093242794275284
    2. '(' → logprob: -3.288093328475952
    3. 'input' → logprob: -10.163093566894531
    4. '('' → logprob: -12.038093566894531
    5. '()' → logprob: -12.288093566894531
    6. '(
' → logprob: -13.413093566894531
    7. '("' → logprob: -14.413093566894531
    8. ' (' → logprob: -15.163093566894531
    9. ' input' → logprob: -16.03809356689453
    10. '(

' → logprob: -16.53809356689453

Token 132: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3142980635166168
    2. '())' → logprob: -1.3142980337142944
    3. '(' → logprob: -6.939298152923584
    4. ')' → logprob: -11.439297676086426
    5. '("' → logprob: -11.689297676086426
    6. '();)' → logprob: -11.939297676086426
    7. '()`' → logprob: -12.064297676086426
    8. '()
' → logprob: -12.064297676086426
    9. '().' → logprob: -12.314297676086426
    10. '()>' → logprob: -12.564297676086426

Token 133: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.011857111938297749
    2. ' C' → logprob: -4.511857032775879
    3. 'data' → logprob: -8.511857032775879
    4. 'A' → logprob: -8.761857032775879
    5. 's' → logprob: -9.136857032775879
    6. 'items' → logprob: -9.761857032775879
    7. 'a' → logprob: -10.511857032775879
    8. 'lst' → logprob: -10.761857032775879
    9. '_C' → logprob: -10.886857032775879
    10. 'S' → logprob: -11.011857032775879

Token 134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6327218413352966
    2. '=' → logprob: -0.7577218413352966
    3. '=[]' → logprob: -9.632721900939941
    4. '[' → logprob: -10.757721900939941
    5. ' =[' → logprob: -11.257721900939941
    6. '=[' → logprob: -11.757721900939941
    7. ',' → logprob: -12.757721900939941
    8. '[:]' → logprob: -12.882721900939941
    9. 's' → logprob: -13.257721900939941
    10. '=list' → logprob: -13.257721900939941

Token 135: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04236511513590813
    2. '[input' → logprob: -3.792365074157715
    3. '[]' → logprob: -4.542365074157715
    4. '[list' → logprob: -5.292365074157715
    5. '[int' → logprob: -6.292365074157715
    6. '[array' → logprob: -7.667365074157715
    7. '[str' → logprob: -8.167365074157715
    8. ' [' → logprob: -8.792365074157715
    9. '[List' → logprob: -9.167365074157715
    10. '[index' → logprob: -10.042365074157715

Token 136: 'input' (ID: 2586)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.07668228447437286
    2. '[' → logprob: -2.8266823291778564
    3. '[int' → logprob: -5.326682090759277
    4. '[list' → logprob: -5.951682090759277
    5. '[])' → logprob: -6.076682090759277
    6. '[str' → logprob: -6.326682090759277
    7. '[]' → logprob: -6.576682090759277
    8. '[i' → logprob: -6.951682090759277
    9. 'input' → logprob: -8.326682090759277
    10. '[index' → logprob: -9.201682090759277

Token 137: '()).' (ID: 9503)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.6352195739746094
    2. '()' → logprob: -0.8852195739746094
    3. '()).' → logprob: -3.0102195739746094
    4. '())' → logprob: -4.885219573974609
    5. '(' → logprob: -8.76021957397461
    6. '()[' → logprob: -8.76021957397461
    7. ')' → logprob: -8.88521957397461
    8. ' ()' → logprob: -9.63521957397461
    9. ').' → logprob: -10.13521957397461
    10. '()
' → logprob: -10.38521957397461

Token 138: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001295596593990922
    2. 'strip' → logprob: -6.751295566558838
    3. ' split' → logprob: -9.251296043395996
    4. 'rstrip' → logprob: -10.626296043395996
    5. 'replace' → logprob: -12.376296043395996
    6. 'spl' → logprob: -14.626296043395996
    7. '(split' → logprob: -16.12629508972168
    8. 's' → logprob: -16.25129508972168
    9. '.split' → logprob: -17.12629508972168
    10. ' strip' → logprob: -17.37629508972168

Token 139: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05259208753705025
    2. '('' → logprob: -3.5525920391082764
    3. '(' → logprob: -3.8025920391082764
    4. '("("' → logprob: -8.677592277526855
    5. '("' → logprob: -9.802592277526855
    6. '()
' → logprob: -12.052592277526855
    7. '())' → logprob: -12.177592277526855
    8. ' ()' → logprob: -12.177592277526855
    9. '()"' → logprob: -12.552592277526855
    10. '()]' → logprob: -12.802592277526855

Token 140: 'ORG' (ID: 85332)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.095212459564209
    2. '[' → logprob: -1.345212459564209
    3. '<|end|>' → logprob: -1.470212459564209
    4. ' for' → logprob: -2.345212459564209
    5. '[
' → logprob: -3.470212459564209
    6. '
' → logprob: -4.345212459564209
    7. '[:]' → logprob: -4.595212459564209
    8. 'C' → logprob: -5.595212459564209
    9. '#' → logprob: -5.720212459564209
    10. '[]' → logprob: -5.720212459564209

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01159248873591423
    2. '=' → logprob: -4.636592388153076
    3. '[:]' → logprob: -6.761592388153076
    4. ')' → logprob: -8.761592864990234
    5. '=[]' → logprob: -9.261592864990234
    6. '.' → logprob: -9.636592864990234
    7. ',' → logprob: -9.761592864990234
    8. '=[' → logprob: -9.761592864990234
    9. ' =[' → logprob: -10.136592864990234
    10. 's' → logprob: -10.261592864990234

Token 142: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.020772993564605713
    2. ' C' → logprob: -4.020772933959961
    3. '[C' → logprob: -7.020772933959961
    4. '[]' → logprob: -7.270772933959961
    5. 'list' → logprob: -7.395772933959961
    6. '[' → logprob: -8.520772933959961
    7. ' list' → logprob: -9.645772933959961
    8. '[:]' → logprob: -9.770772933959961
    9. ' [' → logprob: -10.270772933959961
    10. ' []' → logprob: -10.395772933959961

Token 143: '[:' (ID: 7808)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 144: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001127955736592412
    2. ')' → logprob: -7.50112771987915
    3. ')]' → logprob: -8.751128196716309
    4. '()]' → logprob: -8.876128196716309
    5. ' ]' → logprob: -9.001128196716309
    6. ']()' → logprob: -9.251128196716309
    7. ']
' → logprob: -10.751128196716309
    8. ']

' → logprob: -11.501128196716309
    9. '])' → logprob: -11.501128196716309
    10. '<|end|>' → logprob: -12.501128196716309

Token 145: 'Bubble' (ID: 79555)
  Prédit: 'Selection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Selection' → logprob: -0.6181336641311646
    2. 'for' → logprob: -1.6181336641311646
    3. 'def' → logprob: -1.9931336641311646
    4. 'Bubble' → logprob: -2.118133544921875
    5. ' for' → logprob: -6.743133544921875
    6. 'C' → logprob: -7.118133544921875
    7. '
' → logprob: -7.243133544921875
    8. 'Sorting' → logprob: -7.368133544921875
    9. 'Insertion' → logprob: -7.618133544921875
    10. 'Sorted' → logprob: -7.868133544921875

Token 146: 'Sort' (ID: 11602)
  Prédit: 'Sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sort' → logprob: -5.512236498361744e-07
    2. 'sort' → logprob: -14.625000953674316
    3. '_sort' → logprob: -17.375
    4. 'S' → logprob: -18.0
    5. ' Sort' → logprob: -18.625
    6. '_SORT' → logprob: -19.25
    7. 'Sor' → logprob: -19.5
    8. '(S' → logprob: -19.75
    9. 'SORT' → logprob: -19.75
    10. ' sort' → logprob: -20.0

Token 147: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.043147746473550797
    2. '(' → logprob: -3.1681478023529053
    3. '(N' → logprob: -10.168148040771484
    4. '(
' → logprob: -10.168148040771484
    5. '(B' → logprob: -10.293148040771484
    6. ' (' → logprob: -11.543148040771484
    7. '(CG' → logprob: -11.668148040771484
    8. '<|end|>' → logprob: -11.793148040771484
    9. '(

' → logprob: -12.418148040771484
    10. '(org' → logprob: -13.793148040771484

Token 148: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0791129618883133
    2. ',N' → logprob: -2.579113006591797
    3. ' ,' → logprob: -8.954113006591797
    4. ',C' → logprob: -9.704113006591797
    5. ')' → logprob: -11.329113006591797
    6. '(' → logprob: -12.079113006591797
    7. ',(' → logprob: -12.954113006591797
    8. '(N' → logprob: -13.079113006591797
    9. ',O' → logprob: -13.204113006591797
    10. ',n' → logprob: -13.329113006591797

Token 149: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31342989206314087
    2. ')
' → logprob: -1.313429832458496
    3. ')

' → logprob: -9.188429832458496
    4. ')
' → logprob: -9.688429832458496
    5. ' )
' → logprob: -14.563429832458496
    6. 'print' → logprob: -14.563429832458496
    7. '#' → logprob: -14.813429832458496
    8. ' )' → logprob: -14.813429832458496
    9. ')#' → logprob: -15.063429832458496
    10. '),' → logprob: -15.188429832458496

Token 150: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009550517424941063
    2. ' print' → logprob: -7.750955104827881
    3. 'for' → logprob: -7.750955104827881
    4. 'C' → logprob: -10.500954627990723
    5. 'Print' → logprob: -10.750954627990723
    6. ' for' → logprob: -10.750954627990723
    7. '
' → logprob: -11.750954627990723
    8. '#print' → logprob: -13.250954627990723
    9. '```' → logprob: -13.250954627990723
    10. 'Selection' → logprob: -13.625954627990723

Token 151: ' ("' (ID: 7109)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07912970334291458
    2. '("("' → logprob: -2.829129695892334
    3. '('' → logprob: -4.454129695892334
    4. '(C' → logprob: -5.954129695892334
    5. '((' → logprob: -6.329129695892334
    6. '("(' → logprob: -7.454129695892334
    7. '("' → logprob: -9.079130172729492
    8. '(len' → logprob: -10.079130172729492
    9. '(B' → logprob: -10.079130172729492
    10. '("""' → logprob: -10.454130172729492

Token 152: ' ".' (ID: 11730)
  Prédit: ' ".'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ".' → logprob: -0.32421067357063293
    2. ' '.' → logprob: -1.6992106437683105
    3. '".' → logprob: -3.0742106437683105
    4. '"' → logprob: -4.1992106437683105
    5. ''' → logprob: -4.9492106437683105
    6. 'Stable' → logprob: -4.9492106437683105
    7. ''.' → logprob: -5.5742106437683105
    8. ' "' → logprob: -5.8242106437683105
    9. ' ' → logprob: -6.0742106437683105
    10. '[' → logprob: -6.5742106437683105

Token 153: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.9027791495318525e-05
    2. ' join' → logprob: -11.375019073486328
    3. 'jo' → logprob: -12.625019073486328
    4. 'print' → logprob: -12.750019073486328
    5. '(join' → logprob: -14.000019073486328
    6. 'j' → logprob: -15.625019073486328
    7. ')' → logprob: -16.000019073486328
    8. '.' → logprob: -16.500019073486328
    9. '.join' → logprob: -17.250019073486328
    10. ').' → logprob: -17.625019073486328

Token 154: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.0029527393635362387
    2. '(' → logprob: -5.877952575683594
    3. '(B' → logprob: -9.002952575683594
    4. ')' → logprob: -11.502952575683594
    5. ' (' → logprob: -12.502952575683594
    6. '((' → logprob: -12.877952575683594
    7. '(N' → logprob: -13.502952575683594
    8. '(CG' → logprob: -13.627952575683594
    9. ')(' → logprob: -13.752952575683594
    10. '(c' → logprob: -14.002952575683594

Token 155: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002111694193445146
    2. '))' → logprob: -9.000210762023926
    3. ')
' → logprob: -9.500210762023926
    4. ' )' → logprob: -12.000210762023926
    5. ')`' → logprob: -13.750210762023926
    6. ')")' → logprob: -14.000210762023926
    7. '),' → logprob: -14.375210762023926
    8. '")' → logprob: -14.500210762023926
    9. ')**' → logprob: -14.875210762023926
    10. ')}}' → logprob: -14.875210762023926

Token 156: 'print' (ID: 1598)
  Prédit: 'Selection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Selection' → logprob: -0.020843038335442543
    2. 'print' → logprob: -3.895843029022217
    3. 'Bubble' → logprob: -9.020843505859375
    4. 'for' → logprob: -9.270843505859375
    5. 'ORG' → logprob: -10.770843505859375
    6. 'selection' → logprob: -10.895843505859375
    7. 'C' → logprob: -11.895843505859375
    8. '
' → logprob: -11.895843505859375
    9. ' Selection' → logprob: -12.020843505859375
    10. '.Selection' → logprob: -12.020843505859375

Token 157: ' ("' (ID: 7109)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1243206113576889
    2. '("' → logprob: -2.3743205070495605
    3. '()' → logprob: -4.3743205070495605
    4. '("("' → logprob: -4.9993205070495605
    5. ' ("' → logprob: -6.4993205070495605
    6. ' (' → logprob: -6.8743205070495605
    7. ' ()' → logprob: -7.7493205070495605
    8. '("")' → logprob: -7.9993205070495605
    9. '('' → logprob: -8.249320983886719
    10. '(S' → logprob: -8.624320983886719

Token 158: 'Stable' (ID: 129551)
  Prédit: '".'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '".' → logprob: -0.27979278564453125
    2. '"' → logprob: -1.6547927856445312
    3. 'Selection' → logprob: -4.154792785644531
    4. ' ".' → logprob: -4.154792785644531
    5. 'ORG' → logprob: -4.529792785644531
    6. 'org' → logprob: -6.154792785644531
    7. ''.' → logprob: -6.279792785644531
    8. 'selection' → logprob: -6.779792785644531
    9. ')' → logprob: -7.279792785644531
    10. 'Original' → logprob: -7.779792785644531

Token 159: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.4222777485847473
    2. 'Yes' → logprob: -1.1722776889801025
    3. ' Yes' → logprob: -4.922277927398682
    4. '"' → logprob: -5.047277927398682
    5. ' ")' → logprob: -5.297277927398682
    6. 'True' → logprob: -5.422277927398682
    7. '?' → logprob: -5.797277927398682
    8. '？' → logprob: -6.422277927398682
    9. ')' → logprob: -6.547277927398682
    10. 'Sort' → logprob: -6.797277927398682

Token 160: 'C' (ID: 34)
  Prédit: 'Selection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Selection' → logprob: -2.7729658540920354e-05
    2. 'C' → logprob: -10.750027656555176
    3. 'selection' → logprob: -13.250027656555176
    4. 'def' → logprob: -13.375027656555176
    5. 'Select' → logprob: -13.750027656555176
    6. ' Selection' → logprob: -14.500027656555176
    7. 'for' → logprob: -14.625027656555176
    8. '.Selection' → logprob: -15.375027656555176
    9. 'OR' → logprob: -16.000028610229492
    10. '_selection' → logprob: -16.125028610229492

Token 161: '2' (ID: 17)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 162: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016037069261074066
    2. '=' → logprob: -4.1410369873046875
    3. ' ' → logprob: -14.641036987304688
    4. ' =[' → logprob: -14.641036987304688
    5. '=[]' → logprob: -15.141036987304688
    6. ',' → logprob: -15.141036987304688
    7. '[:]' → logprob: -15.266036987304688
    8. ' =
' → logprob: -15.516036987304688
    9. '＝' → logprob: -15.766036987304688
    10. ' =)' → logprob: -16.391036987304688

Token 163: 'ORG' (ID: 85332)
  Prédit: 'ORG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ORG' → logprob: -0.15948235988616943
    2. ' OR' → logprob: -2.034482479095459
    3. 'OR' → logprob: -4.159482479095459
    4. 'C' → logprob: -8.7844820022583
    5. 'org' → logprob: -8.9094820022583
    6. 'ORB' → logprob: -9.1594820022583
    7. '_OR' → logprob: -9.1594820022583
    8. '<|end|>' → logprob: -9.1594820022583
    9. '[' → logprob: -9.7844820022583
    10. '(' → logprob: -9.9094820022583

Token 164: '
' (ID: 198)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.03277842327952385
    2. '=' → logprob: -4.282778263092041
    3. ' =' → logprob: -4.657778263092041
    4. '[:' → logprob: -4.782778263092041
    5. '[' → logprob: -8.0327787399292
    6. '<|end|>' → logprob: -9.2827787399292
    7. '.' → logprob: -10.2827787399292
    8. '[]' → logprob: -10.9077787399292
    9. '=[]' → logprob: -11.0327787399292
    10. ',' → logprob: -11.2827787399292

Token 165: 'Selection' (ID: 12653)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 166: 'Sort' (ID: 11602)
  Prédit: 'Sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sort' → logprob: -6.704273118884885e-07
    2. ' Sort' → logprob: -15.375000953674316
    3. 'S' → logprob: -16.375
    4. '_sort' → logprob: -16.375
    5. 'sort' → logprob: -17.125
    6. '.Sort' → logprob: -17.25
    7. '_SORT' → logprob: -17.375
    8. 'Sorting' → logprob: -18.25
    9. 'SORT' → logprob: -18.75
    10. 'Sor' → logprob: -18.875

Token 167: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.003622404532507062
    2. '(' → logprob: -5.628622531890869
    3. '(
' → logprob: -11.253622055053711
    4. ' (' → logprob: -12.003622055053711
    5. '<|end|>' → logprob: -13.253622055053711
    6. 'C' → logprob: -14.753622055053711
    7. '(CG' → logprob: -15.378622055053711
    8. '(

' → logprob: -16.12862205505371
    9. '(Q' → logprob: -16.37862205505371
    10. '(CC' → logprob: -16.50362205505371

Token 168: '2' (ID: 17)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4583119750022888
    2. ',C' → logprob: -1.0833120346069336
    3. 'C' → logprob: -3.8333120346069336
    4. ' ,' → logprob: -5.458312034606934
    5. ',N' → logprob: -6.333312034606934
    6. '(C' → logprob: -6.958312034606934
    7. ')' → logprob: -8.708312034606934
    8. ' C' → logprob: -9.333312034606934
    9. ',
' → logprob: -9.333312034606934
    10. '(' → logprob: -9.833312034606934

Token 169: ',N' (ID: 49539)
  Prédit: ',C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',C' → logprob: -0.11747964471578598
    2. ',' → logprob: -2.2424795627593994
    3. ',N' → logprob: -5.9924798011779785
    4. ' ,' → logprob: -6.3674798011779785
    5. '(C' → logprob: -7.9924798011779785
    6. ')' → logprob: -10.61747932434082
    7. '(' → logprob: -10.74247932434082
    8. 'C' → logprob: -10.86747932434082
    9. ' (' → logprob: -12.24247932434082
    10. ',c' → logprob: -12.61747932434082

Token 170: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.005734551697969437
    2. ')' → logprob: -5.255734443664551
    3. 'print' → logprob: -7.630734443664551
    4. ' )
' → logprob: -11.50573444366455
    5. ')

' → logprob: -12.88073444366455
    6. '
' → logprob: -13.38073444366455
    7. ')
' → logprob: -14.13073444366455
    8. ' print' → logprob: -15.13073444366455
    9. ' )' → logprob: -17.255735397338867
    10. '.print' → logprob: -17.755735397338867

Token 171: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0280383548888494e-06
    2. 'for' → logprob: -14.625000953674316
    3. ' print' → logprob: -15.000000953674316
    4. 'if' → logprob: -17.375001907348633
    5. '
' → logprob: -17.625001907348633
    6. '```' → logprob: -17.625001907348633
    7. '.print' → logprob: -18.500001907348633
    8. 'is' → logprob: -18.500001907348633
    9. '#print' → logprob: -19.250001907348633
    10. 'from' → logprob: -19.250001907348633

Token 172: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.3008652329444885
    2. ' ("' → logprob: -1.9258651733398438
    3. '(' → logprob: -2.1758651733398438
    4. ' (' → logprob: -7.800865173339844
    5. ' ' → logprob: -10.175865173339844
    6. '"' → logprob: -10.300865173339844
    7. '(("' → logprob: -10.425865173339844
    8. '('' → logprob: -10.925865173339844
    9. '("("' → logprob: -11.175865173339844
    10. '(
' → logprob: -12.175865173339844

Token 173: ' ".' (ID: 11730)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.14906679093837738
    2. '"' → logprob: -2.024066686630249
    3. ' ' → logprob: -5.274066925048828
    4. ' ".' → logprob: -7.149066925048828
    5. ' .' → logprob: -9.149066925048828
    6. ' ' → logprob: -9.524066925048828
    7. ' "".' → logprob: -9.524066925048828
    8. ' ")' → logprob: -9.524066925048828
    9. ' ").' → logprob: -9.899066925048828
    10. ' ","' → logprob: -10.774066925048828

Token 174: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -5.5577775128767826e-06
    2. '".' → logprob: -13.500005722045898
    3. ' join' → logprob: -13.500005722045898
    4. 'print' → logprob: -13.875005722045898
    5. '.join' → logprob: -13.875005722045898
    6. '.' → logprob: -14.375005722045898
    7. '(join' → logprob: -15.750005722045898
    8. ').' → logprob: -16.6250057220459
    9. '"' → logprob: -17.0000057220459
    10. 'write' → logprob: -17.1250057220459

Token 175: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -5.764977686339989e-05
    2. 'C' → logprob: -10.375057220458984
    3. '(' → logprob: -10.625057220458984
    4. ')' → logprob: -13.250057220458984
    5. '(
' → logprob: -16.000057220458984
    6. ' (' → logprob: -16.375057220458984
    7. '(c' → logprob: -17.500057220458984
    8. '((' → logprob: -17.875057220458984
    9. ')(' → logprob: -18.125057220458984
    10. '(CC' → logprob: -18.500057220458984

Token 176: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1517960956552997e-05
    2. ')' → logprob: -11.500011444091797
    3. '[' → logprob: -13.750011444091797
    4. ' ' → logprob: -16.625011444091797
    5. '₂' → logprob: -17.000011444091797
    6. '),' → logprob: -17.375011444091797
    7. '(' → logprob: -17.500011444091797
    8. '۲' → logprob: -17.875011444091797
    9. '```' → logprob: -17.875011444091797
    10. '_' → logprob: -18.000011444091797

Token 177: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017994173686020076
    2. ')
' → logprob: -8.7501802444458
    3. '))' → logprob: -11.6251802444458
    4. '")' → logprob: -11.6251802444458
    5. ' )' → logprob: -13.5001802444458
    6. ')")' → logprob: -14.2501802444458
    7. '`)' → logprob: -14.6251802444458
    8. '')' → logprob: -15.0001802444458
    9. ')
' → logprob: -15.5001802444458
    10. ')`' → logprob: -15.6251802444458

Token 178: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.039882842451334
    2. 'print' → logprob: -3.4148828983306885
    3. ' if' → logprob: -5.414882659912109
    4. 'for' → logprob: -6.789882659912109
    5. 'stable' → logprob: -9.03988265991211
    6. '"' → logprob: -9.16488265991211
    7. 'Stable' → logprob: -9.78988265991211
    8. 'i' → logprob: -9.91488265991211
    9. 'a' → logprob: -10.28988265991211
    10. ' for' → logprob: -10.66488265991211

Token 179: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.6001100540161133
    2. 'C' → logprob: -0.8501100540161133
    3. 'Bubble' → logprob: -4.850110054016113
    4. ' Bubble' → logprob: -4.975110054016113
    5. 'OR' → logprob: -5.600110054016113
    6. ' OR' → logprob: -5.850110054016113
    7. '[' → logprob: -7.725110054016113
    8. 'B' → logprob: -7.725110054016113
    9. 'ORG' → logprob: -7.850110054016113
    10. ' B' → logprob: -8.350110054016113

Token 180: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06425203382968903
    2. ' ==' → logprob: -3.1892521381378174
    3. '2' → logprob: -4.564251899719238
    4. '!=' → logprob: -4.689251899719238
    5. ' !=' → logprob: -7.314251899719238
    6. '[:]' → logprob: -7.814251899719238
    7. '[' → logprob: -8.689251899719238
    8. '[:' → logprob: -9.314251899719238
    9. ' ' → logprob: -11.189251899719238
    10. '=' → logprob: -11.564251899719238

Token 181: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00038038729690015316
    2. ' C' → logprob: -7.875380516052246
    3. ' ' → logprob: -16.00037956237793
    4. '   ' → logprob: -16.62537956237793
    5. '  ' → logprob: -17.50037956237793
    6. '	C' → logprob: -18.00037956237793
    7. '
' → logprob: -18.87537956237793
    8. 'ORG' → logprob: -18.87537956237793
    9. '```' → logprob: -19.12537956237793
    10. '[' → logprob: -19.25037956237793

Token 182: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -13.375003814697266
    3. '[' → logprob: -14.625003814697266
    4. '₂' → logprob: -14.750003814697266
    5. ':' → logprob: -15.000003814697266
    6. '_' → logprob: -15.500003814697266
    7. '```' → logprob: -15.500003814697266
    8. '۲' → logprob: -16.875003814697266
    9. 'C' → logprob: -17.125003814697266
    10. '２' → logprob: -17.187503814697266

Token 183: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00883910246193409
    2. ' :' → logprob: -4.883839130401611
    3. ':
' → logprob: -6.883839130401611
    4. '[:]' → logprob: -9.633838653564453
    5. ' :
' → logprob: -10.008838653564453
    6. '[' → logprob: -10.258838653564453
    7. ' ==' → logprob: -10.258838653564453
    8. '[:' → logprob: -11.758838653564453
    9. ' and' → logprob: -12.508838653564453
    10. ':**' → logprob: -13.383838653564453

Token 184: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06417691707611084
    2. ' print' → logprob: -2.9391770362854004
    3. 'print' → logprob: -4.6891770362854
    4. '	print' → logprob: -10.064176559448242
    5. '       ' → logprob: -12.064176559448242
    6. '
' → logprob: -13.439176559448242
    7. '    ' → logprob: -13.814176559448242
    8. '```' → logprob: -13.814176559448242
    9. '   ' → logprob: -13.939176559448242
    10. '    
' → logprob: -13.939176559448242

Token 185: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.006004044320434332
    2. ' print' → logprob: -5.5060038566589355
    3. '   ' → logprob: -6.2560038566589355
    4. '	print' → logprob: -12.381004333496094
    5. '
' → logprob: -15.006004333496094
    6. '```' → logprob: -15.756004333496094
    7. ' ' → logprob: -16.631004333496094
    8. '.print' → logprob: -16.756004333496094
    9. '    
' → logprob: -17.006004333496094
    10. '``' → logprob: -17.756004333496094

Token 186: ' ("' (ID: 7109)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.007647445425391197
    2. ' ("' → logprob: -5.257647514343262
    3. '(' → logprob: -6.257647514343262
    4. '"' → logprob: -7.757647514343262
    5. ' (' → logprob: -10.257647514343262
    6. '('' → logprob: -10.882647514343262
    7. ' ' → logprob: -12.132647514343262
    8. ' "' → logprob: -12.882647514343262
    9. '   ' → logprob: -13.632647514343262
    10. '(
' → logprob: -13.882647514343262

Token 187: 'Stable' (ID: 129551)
  Prédit: 'Stable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stable' → logprob: -2.339278580620885e-06
    2. ' Stable' → logprob: -14.125001907348633
    3. '"' → logprob: -14.500001907348633
    4. 'St' → logprob: -14.500001907348633
    5. ' stable' → logprob: -15.125001907348633
    6. 'S' → logprob: -16.375001907348633
    7. 'True' → logprob: -16.375001907348633
    8. 'Yes' → logprob: -16.625001907348633
    9. '   ' → logprob: -16.750001907348633
    10. 'Safe' → logprob: -17.125001907348633

Token 188: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.6210905313491821
    2. 'else' → logprob: -1.1210905313491821
    3. ')
' → logprob: -2.4960904121398926
    4. '
' → logprob: -3.3710904121398926
    5. '")' → logprob: -4.121090412139893
    6. '  
' → logprob: -7.246090412139893
    7. ' else' → logprob: -7.871090412139893
    8. '')
' → logprob: -7.871090412139893
    9. '\n' → logprob: -8.12109088897705
    10. '\
' → logprob: -8.24609088897705

Token 189: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -8.518582762917504e-05
    2. ' else' → logprob: -9.37508487701416
    3. '	else' → logprob: -15.87508487701416
    4. '   ' → logprob: -16.000085830688477
    5. 'Else' → logprob: -16.750085830688477
    6. 'e' → logprob: -19.375085830688477
    7. '}else' → logprob: -19.750085830688477
    8. '#else' → logprob: -19.875085830688477
    9. '_else' → logprob: -20.000085830688477
    10. 'els' → logprob: -20.125085830688477

Token 190: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2863457202911377
    2. '
' → logprob: -2.4113457202911377
    3. ':' → logprob: -2.6613457202911377
    4. ':
' → logprob: -3.0363457202911377
    5. '    
' → logprob: -4.411345481872559
    6. ' 
' → logprob: -4.786345481872559
    7. '    ' → logprob: -5.036345481872559
    8. '\' → logprob: -6.036345481872559
    9. '\n' → logprob: -6.036345481872559
    10. '  
' → logprob: -6.411345481872559

Token 191: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.40093570947647095
    2. '   ' → logprob: -1.6509356498718262
    3. ' print' → logprob: -2.775935649871826
    4. '\n' → logprob: -3.650935649871826
    5. '"\' → logprob: -4.525935649871826
    6. 'print' → logprob: -4.650935649871826
    7. ' "' → logprob: -4.900935649871826
    8. ' ' → logprob: -5.400935649871826
    9. ' 
' → logprob: -5.650935649871826
    10. '    ' → logprob: -5.650935649871826

Token 192: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.34382373094558716
    2. 'print' (adapté à ' print') → logprob: -1.8438236713409424
    3. '"' → logprob: -2.2188236713409424
    4. '   ' → logprob: -4.3438239097595215
    5. '    ' → logprob: -5.8438239097595215
    6. '\n' → logprob: -5.8438239097595215
    7. '"\' → logprob: -6.2188239097595215
    8. ' 
' → logprob: -7.3438239097595215
    9. ' ' → logprob: -7.4688239097595215
    10. ' "' → logprob: -7.7188239097595215

Token 193: ' ("' (ID: 7109)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.2469349354505539
    2. '"' → logprob: -1.6219348907470703
    3. ' ("' → logprob: -3.9969348907470703
    4. '(' → logprob: -6.49693489074707
    5. ' ' → logprob: -6.99693489074707
    6. '(
' → logprob: -9.24693489074707
    7. '('' → logprob: -9.87193489074707
    8. '()' → logprob: -9.87193489074707
    9. '("\' → logprob: -9.99693489074707
    10. ' "' → logprob: -10.12193489074707

Token 194: 'Not' (ID: 2874)
  Prédit: 'Not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Not' → logprob: -0.034943316131830215
    2. 'Un' → logprob: -3.6599433422088623
    3. '"' → logprob: -4.784943103790283
    4. 'No' → logprob: -8.534943580627441
    5. ' Not' → logprob: -11.534943580627441
    6. '\n' → logprob: -11.784943580627441
    7. ''' → logprob: -12.159943580627441
    8. 'None' → logprob: -12.159943580627441
    9. 'Non' → logprob: -12.909943580627441
    10. '"No' → logprob: -13.034943580627441

Token 195: ' stable' (ID: 22105)
  Prédit: ' Stable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Stable' → logprob: -0.00019722258730325848
    2. 'Stable' → logprob: -8.625197410583496
    3. ' stable' → logprob: -11.500197410583496
    4. ' St' → logprob: -12.500197410583496
    5. ' Safe' → logprob: -13.125197410583496
    6. ' ' → logprob: -13.750197410583496
    7. ' Stabil' → logprob: -14.875197410583496
    8. ' Stability' → logprob: -16.50019645690918
    9. '  ' → logprob: -17.00019645690918
    10. ' Sta' → logprob: -17.12519645690918

Token 196: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.029817258939146996
    2. ')' → logprob: -3.5298173427581787
    3. ')")' → logprob: -9.654817581176758
    4. '')' → logprob: -14.029817581176758
    5. '")
' → logprob: -14.154817581176758
    6. '!")' → logprob: -15.029817581176758
    7. '()' → logprob: -15.529817581176758
    8. '`)' → logprob: -15.779817581176758
    9. ' )' → logprob: -16.154817581176758
    10. '.")' → logprob: -16.529817581176758


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 194
Tokens correctement prédits (1ère position, stricte): 95
Tokens correctement prédits (1ère position, avec adaptation): 99
Tokens correctement prédits (top 10): 165
Précision stricte (1ère position): 48.97%
Précision adaptée (1ère position): 51.03%
Précision (top 10): 85.05%
================================================================================
