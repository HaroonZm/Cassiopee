================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
n = int(input())
A = [int(e)for e in sys.stdin]
cnt = 0
G = [int((2.25**i-1)/1.25)for i in range(17,0,-1)]
G = [v for v in G if v <= n]
def insertionSort(A, n, g):
    global cnt
    for i in range(g, n):
        v = A[i]
        j = i - g
        while j >= 0 and A[j] > v:
            A[j+g] = A[j]
            j = j - g
            cnt += 1
        A[j+g] = v
for g in G:
    insertionSort(A, n, g)
print(len(G))
print(' '.join(map(str,G)))
print(cnt)
print('\n'.join(map(str,A)))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'n' (ID: 77)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5993443727493286
    2. '=' → logprob: -1.3493443727493286
    3. '_' → logprob: -2.474344253540039
    4. ' =' → logprob: -3.099344253540039
    5. ' ' → logprob: -4.099344253540039
    6. ',' → logprob: -4.474344253540039
    7. 'a' → logprob: -4.474344253540039
    8. 'e' → logprob: -5.099344253540039
    9. 'u' → logprob: -5.474344253540039
    10. 'p' → logprob: -6.224344253540039

Token 5: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.05597424507141113
    2. ' ' → logprob: -3.305974245071411
    3. 'int' → logprob: -4.055974006652832
    4. '10' → logprob: -9.055974006652832
    5. ' input' → logprob: -9.305974006652832
    6. ' sys' → logprob: -9.805974006652832
    7. '0' → logprob: -10.555974006652832
    8. '1' → logprob: -10.555974006652832
    9. '=int' → logprob: -10.555974006652832
    10. '20' → logprob: -11.180974006652832

Token 6: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -4.692145012086257e-05
    2. '(sys' → logprob: -11.250046730041504
    3. '('' → logprob: -11.750046730041504
    4. '(n' → logprob: -12.000046730041504
    5. '()' → logprob: -12.250046730041504
    6. ' (' → logprob: -12.500046730041504
    7. '(
' → logprob: -12.500046730041504
    8. '("("' → logprob: -13.500046730041504
    9. '(`' → logprob: -13.750046730041504
    10. '(

' → logprob: -14.000046730041504

Token 7: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13481004536151886
    2. ')' → logprob: -2.509809970855713
    3. '()' → logprob: -3.259809970855713
    4. '())' → logprob: -5.384809970855713
    5. '(
' → logprob: -7.259809970855713
    6. '('' → logprob: -7.759809970855713
    7. '(

' → logprob: -8.759810447692871
    8. '))' → logprob: -9.009810447692871
    9. '("("' → logprob: -9.009810447692871
    10. '")' → logprob: -9.634810447692871

Token 8: 'A' (ID: 32)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05408935248851776
    2. 's' → logprob: -4.179089546203613
    3. 'a' → logprob: -4.679089546203613
    4. 'f' → logprob: -5.304089546203613
    5. 'if' → logprob: -5.304089546203613
    6. 'i' → logprob: -5.804089546203613
    7. 'data' → logprob: -5.929089546203613
    8. 'result' → logprob: -6.179089546203613
    9. ' for' → logprob: -6.304089546203613
    10. 'sum' → logprob: -7.054089546203613

Token 9: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00029518234077841043
    2. '\[' → logprob: -9.500295639038086
    3. '.' → logprob: -9.750295639038086
    4. '[A' → logprob: -10.125295639038086
    5. '=' → logprob: -10.250295639038086
    6. '[n' → logprob: -10.625295639038086
    7. '[]' → logprob: -10.750295639038086
    8. 'A' → logprob: -12.000295639038086
    9. '[:]' → logprob: -12.125295639038086
    10. '[...]' → logprob: -12.375295639038086

Token 10: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.8277474641799927
    2. ' list' → logprob: -1.4527474641799927
    3. 'list' → logprob: -1.7027474641799927
    4. '[]' → logprob: -2.452747344970703
    5. ' [' → logprob: -3.202747344970703
    6. '[' → logprob: -4.702747344970703
    7. '[list' → logprob: -4.952747344970703
    8. '[input' → logprob: -5.827747344970703
    9. '[int' → logprob: -7.452747344970703
    10. 'input' → logprob: -8.452747344970703

Token 11: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.002065802924335003
    2. ')' → logprob: -7.127065658569336
    3. '0' → logprob: -7.377065658569336
    4. ' int' → logprob: -7.877065658569336
    5. '(int' → logprob: -9.127065658569336
    6. ']int' → logprob: -9.627065658569336
    7. ']' → logprob: -10.752065658569336
    8. 'i' → logprob: -11.502065658569336
    9. '])' → logprob: -11.752065658569336
    10. ',int' → logprob: -12.002065658569336

Token 12: '(e' (ID: 3454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011437291279435158
    2. '(x' → logprob: -4.76143741607666
    3. '(input' → logprob: -6.01143741607666
    4. '(i' → logprob: -9.01143741607666
    5. '(a' → logprob: -9.26143741607666
    6. '()' → logprob: -10.51143741607666
    7. '()]' → logprob: -10.51143741607666
    8. '('' → logprob: -11.13643741607666
    9. '(token' → logprob: -11.26143741607666
    10. '(s' → logprob: -11.63643741607666

Token 13: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27181002497673035
    2. '())' → logprob: -2.0218100547790527
    3. '(' → logprob: -2.8968100547790527
    4. '(input' → logprob: -3.5218100547790527
    5. '(x' → logprob: -4.146810054779053
    6. '()' → logprob: -6.521810054779053
    7. '(i' → logprob: -6.896810054779053
    8. ' )' → logprob: -7.396810054779053
    9. 'input' → logprob: -7.521810054779053
    10. 'or' → logprob: -7.771810054779053

Token 14: 'for' (ID: 1938)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6935073733329773
    2. 'for' → logprob: -1.068507432937622
    3. ' for' → logprob: -2.318507432937622
    4. '(' → logprob: -3.443507432937622
    5. '(input' → logprob: -4.193507194519043
    6. ')]' → logprob: -5.318507194519043
    7. '(x' → logprob: -5.568507194519043
    8. ']' → logprob: -7.068507194519043
    9. 'input' → logprob: -7.568507194519043
    10. ' ' → logprob: -8.818507194519043

Token 15: ' e' (ID: 319)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005654775071889162
    2. ' e' → logprob: -5.880654811859131
    3. ' input' → logprob: -6.505654811859131
    4. ' range' → logprob: -6.880654811859131
    5. ' sys' → logprob: -9.255654335021973
    6. '  ' → logprob: -9.380654335021973
    7. ' A' → logprob: -10.505654335021973
    8. '<|end|>' → logprob: -11.005654335021973
    9. ' in' → logprob: -11.130654335021973
    10. ' (' → logprob: -11.380654335021973

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.024659037590026855
    2. ' ' → logprob: -4.149659156799316
    3. 'in' → logprob: -4.774659156799316
    4. 'n' → logprob: -10.149659156799316
    5. '  ' → logprob: -10.524659156799316
    6. '_' → logprob: -10.899659156799316
    7. 'e' → logprob: -11.274659156799316
    8. ' n' → logprob: -11.774659156799316
    9. ' e' → logprob: -11.899659156799316
    10. ')' → logprob: -12.024659156799316

Token 17: ' sys' (ID: 12228)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.40059635043144226
    2. 'input' → logprob: -1.1505963802337646
    3. ' sys' → logprob: -4.9005961418151855
    4. ' range' → logprob: -5.4005961418151855
    5. 'range' → logprob: -7.0255961418151855
    6. 'sys' → logprob: -7.1505961418151855
    7. ' ' → logprob: -13.400596618652344
    8. '(input' → logprob: -15.275596618652344
    9. 'A' → logprob: -16.150596618652344
    10. ' A' → logprob: -16.400596618652344

Token 18: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4958213269710541
    2. '.stdin' → logprob: -0.9958213567733765
    3. '.argv' → logprob: -3.870821237564087
    4. '.readline' → logprob: -7.995821475982666
    5. ' .' → logprob: -8.870820999145508
    6. '.stdout' → logprob: -8.995820999145508
    7. '.stderr' → logprob: -10.745820999145508
    8. '.std' → logprob: -10.745820999145508
    9. '.import' → logprob: -12.245820999145508
    10. '.input' → logprob: -13.120820999145508

Token 19: ']
' (ID: 1592)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.014082522131502628
    2. '.readlines' → logprob: -4.514082431793213
    3. ']' → logprob: -6.514082431793213
    4. '.' → logprob: -6.889082431793213
    5. '.read' → logprob: -8.139082908630371
    6. ')]' → logprob: -8.639082908630371
    7. '.]' → logprob: -10.514082908630371
    8. 'read' → logprob: -10.889082908630371
    9. '()]' → logprob: -12.764082908630371
    10. ')' → logprob: -13.014082908630371

Token 20: 'cnt' (ID: 33160)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1582099199295044
    2. '.' → logprob: -3.783209800720215
    3. '[:]' → logprob: -3.908209800720215
    4. 'for' → logprob: -4.033209800720215
    5. '[:' → logprob: -4.033209800720215
    6. 'A' → logprob: -4.158209800720215
    7. 'if' → logprob: -4.533209800720215
    8. '[' → logprob: -4.783209800720215
    9. '.sort' → logprob: -5.033209800720215
    10. '[:-' → logprob: -5.408209800720215

Token 21: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.45502015948295593
    2. '_' → logprob: -1.3300201892852783
    3. '=' → logprob: -2.4550201892852783
    4. '(' → logprob: -4.580019950866699
    5. ' =' → logprob: -6.080019950866699
    6. 's' → logprob: -6.330019950866699
    7. '[:]' → logprob: -8.3300199508667
    8. '_=' → logprob: -9.3300199508667
    9. 'A' → logprob: -9.3300199508667
    10. ']' → logprob: -9.4550199508667

Token 22: ' ' (ID: 220)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.13906188309192657
    2. '[' → logprob: -2.51406192779541
    3. '0' → logprob: -3.63906192779541
    4. ' {}' → logprob: -4.63906192779541
    5. '{' → logprob: -4.88906192779541
    6. ' [' → logprob: -5.76406192779541
    7. ' ' → logprob: -6.38906192779541
    8. '[A' → logprob: -8.13906192779541
    9. '[len' → logprob: -9.26406192779541
    10. ' {' → logprob: -10.26406192779541

Token 23: '0' (ID: 15)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.014285974204540253
    2. '[' → logprob: -4.764286041259766
    3. '{' → logprob: -5.764286041259766
    4. '0' → logprob: -6.014286041259766
    5. 'dict' → logprob: -10.014286041259766
    6. '[A' → logprob: -11.764286041259766
    7. 'len' → logprob: -12.014286041259766
    8. '{}
' → logprob: -12.139286041259766
    9. 'default' → logprob: -13.014286041259766
    10. '[len' → logprob: -13.514286041259766

Token 24: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004121619276702404
    2. ' for' → logprob: -5.504121780395508
    3. 'n' → logprob: -11.629121780395508
    4. '\n' → logprob: -11.629121780395508
    5. 'i' → logprob: -11.754121780395508
    6. '
' → logprob: -11.754121780395508
    7. '```' → logprob: -12.879121780395508
    8. '<|end|>' → logprob: -13.379121780395508
    9. '	for' → logprob: -13.754121780395508
    10. '' → logprob: -14.504121780395508

Token 25: 'G' (ID: 38)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011257312260568142
    2. ' for' → logprob: -4.511257171630859
    3. '\n' → logprob: -9.13625717163086
    4. '
' → logprob: -10.63625717163086
    5. '```' → logprob: -10.88625717163086
    6. 'n' → logprob: -11.38625717163086
    7. '<|end|>' → logprob: -11.38625717163086
    8. ')' → logprob: -11.76125717163086
    9. '[' → logprob: -12.13625717163086
    10. '(' → logprob: -12.13625717163086

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34197497367858887
    2. '=' → logprob: -2.341974973678589
    3. 'CD' → logprob: -2.841974973678589
    4. '[' → logprob: -2.966974973678589
    5. 'A' → logprob: -3.716974973678589
    6. ' +=' → logprob: -4.966975212097168
    7. 'cd' → logprob: -5.091975212097168
    8. '[i' → logprob: -5.216975212097168
    9. '+=' → logprob: -5.591975212097168
    10. 'G' → logprob: -5.716975212097168

Token 27: ' [' (ID: 723)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -1.0288872718811035
    2. ' [' → logprob: -2.0288872718811035
    3. ' []' → logprob: -2.0288872718811035
    4. '[' → logprob: -2.1538872718811035
    5. '[]' → logprob: -2.1538872718811035
    6. ' {}' → logprob: -2.4038872718811035
    7. '[n' → logprob: -4.1538872718811035
    8. '0' → logprob: -4.5288872718811035
    9. ' ' → logprob: -4.6538872718811035
    10. '[A' → logprob: -5.1538872718811035

Token 28: 'int' (ID: 491)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009446980431675911
    2. ']' → logprob: -5.00944709777832
    3. ' ' → logprob: -7.38444709777832
    4. '[]' → logprob: -7.38444709777832
    5. 'False' → logprob: -7.63444709777832
    6. '1' → logprob: -8.00944709777832
    7. '[' → logprob: -8.38444709777832
    8. 'A' → logprob: -8.88444709777832
    9. '(' → logprob: -9.63444709777832
    10. '-' → logprob: -10.63444709777832

Token 29: '((' (ID: 2054)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.5121311545372009
    2. '(' → logprob: -1.5121312141418457
    3. '()' → logprob: -2.6371312141418457
    4. '(x' → logprob: -2.7621312141418457
    5. '()]' → logprob: -4.012131214141846
    6. '(i' → logprob: -4.137131214141846
    7. '(a' → logprob: -5.262131214141846
    8. ']' → logprob: -5.387131214141846
    9. ' ()' → logprob: -7.637131214141846
    10. '(n' → logprob: -8.137130737304688

Token 30: '2' (ID: 17)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6516212821006775
    2. 'n' → logprob: -1.6516213417053223
    3. 'e' → logprob: -2.2766213417053223
    4. 'x' → logprob: -3.0266213417053223
    5. 'a' → logprob: -3.2766213417053223
    6. '(A' → logprob: -3.7766213417053223
    7. 'i' → logprob: -4.151621341705322
    8. '(n' → logprob: -4.276621341705322
    9. 'len' → logprob: -4.401621341705322
    10. '(' → logprob: -4.901621341705322

Token 31: '.' (ID: 13)
  Prédit: '*n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*n' → logprob: -0.6618920564651489
    2. '**' → logprob: -1.036892056465149
    3. ' *' → logprob: -3.1618919372558594
    4. 'e' → logprob: -3.5368919372558594
    5. '*' → logprob: -4.036891937255859
    6. 'n' → logprob: -4.161891937255859
    7. ' **' → logprob: -5.036891937255859
    8. ')**' → logprob: -5.286891937255859
    9. '*(' → logprob: -6.161891937255859
    10. ' n' → logprob: -6.411891937255859

Token 32: '25' (ID: 1161)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08736163377761841
    2. 'len' → logprob: -3.5873615741729736
    3. '*n' → logprob: -3.8373615741729736
    4. '**' → logprob: -4.337361812591553
    5. '*' → logprob: -5.087361812591553
    6. ' n' → logprob: -5.212361812591553
    7. 'A' → logprob: -6.587361812591553
    8. '0' → logprob: -6.712361812591553
    9. 'max' → logprob: -6.837361812591553
    10. '(n' → logprob: -7.212361812591553

Token 33: '**' (ID: 410)
  Prédit: '*n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*n' → logprob: -0.9639604091644287
    2. '**' → logprob: -1.0889604091644287
    3. ')**' → logprob: -2.3389604091644287
    4. '*' → logprob: -2.4639604091644287
    5. ' *' → logprob: -2.9639604091644287
    6. ' **' → logprob: -4.213960647583008
    7. ')' → logprob: -4.713960647583008
    8. '*i' → logprob: -4.963960647583008
    9. ')*' → logprob: -5.463960647583008
    10. 'e' → logprob: -5.588960647583008

Token 34: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04057906195521355
    2. ' i' → logprob: -3.790579080581665
    3. 'n' → logprob: -4.540578842163086
    4. 'x' → logprob: -5.790578842163086
    5. 'k' → logprob: -6.665578842163086
    6. ' n' → logprob: -7.790578842163086
    7. '(i' → logprob: -7.790578842163086
    8. 'j' → logprob: -8.415578842163086
    9. '(' → logprob: -8.790578842163086
    10. ' x' → logprob: -9.290578842163086

Token 35: '-' (ID: 12)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5249460935592651
    2. ')' → logprob: -1.1499460935592651
    3. ')**' → logprob: -2.8999462127685547
    4. ')*' → logprob: -4.524946212768555
    5. '-' → logprob: -5.399946212768555
    6. ' ))' → logprob: -5.524946212768555
    7. ' )' → logprob: -5.649946212768555
    8. ')-' → logprob: -5.899946212768555
    9. ' -' → logprob: -5.899946212768555
    10. '**' → logprob: -6.524946212768555

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.017641521990299225
    2. ' ' → logprob: -4.392641544342041
    3. '0' → logprob: -5.892641544342041
    4. '2' → logprob: -6.267641544342041
    5. 'i' → logprob: -9.142641067504883
    6. 'n' → logprob: -9.392641067504883
    7. ' i' → logprob: -9.642641067504883
    8. ' n' → logprob: -9.892641067504883
    9. '3' → logprob: -10.392641067504883
    10. ' (' → logprob: -10.517641067504883

Token 37: ')/' (ID: 11876)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38074859976768494
    2. ')//' → logprob: -2.0057485103607178
    3. ')/(' → logprob: -2.8807485103607178
    4. ')/' → logprob: -2.8807485103607178
    5. ')**' → logprob: -3.5057485103607178
    6. ' )' → logprob: -3.7557485103607178
    7. '))' → logprob: -4.505748748779297
    8. ')-' → logprob: -5.880748748779297
    9. ')+' → logprob: -8.005748748779297
    10. '+' → logprob: -8.130748748779297

Token 38: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03101828508079052
    2. '(' → logprob: -3.7810182571411133
    3. '(i' → logprob: -5.906018257141113
    4. '0' → logprob: -6.156018257141113
    5. 'i' → logprob: -6.906018257141113
    6. '2' → logprob: -7.156018257141113
    7. ' ' → logprob: -7.281018257141113
    8. ' (' → logprob: -8.531018257141113
    9. '((' → logprob: -9.906018257141113
    10. '3' → logprob: -9.906018257141113

Token 39: '.' (ID: 13)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.4233016073703766
    2. '0' → logprob: -1.7983015775680542
    3. '.' → logprob: -2.4233016967773438
    4. '2' → logprob: -4.048301696777344
    5. 'i' → logprob: -4.548301696777344
    6. '1' → logprob: -4.548301696777344
    7. ')' → logprob: -4.673301696777344
    8. '00' → logprob: -5.048301696777344
    9. '4' → logprob: -5.423301696777344
    10. '6' → logprob: -5.798301696777344

Token 40: '25' (ID: 1161)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.008188646286725998
    2. '3' → logprob: -5.883188724517822
    3. '618' → logprob: -6.258188724517822
    4. '2' → logprob: -6.633188724517822
    5. '25' → logprob: -7.383188724517822
    6. '4' → logprob: -7.383188724517822
    7. '414' → logprob: -8.758188247680664
    8. '35' → logprob: -8.883188247680664
    9. '6' → logprob: -9.008188247680664
    10. '7' → logprob: -9.133188247680664

Token 41: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3430982530117035
    2. '**' → logprob: -1.4680982828140259
    3. ')]' → logprob: -4.093098163604736
    4. ' )' → logprob: -4.218098163604736
    5. '*i' → logprob: -4.343098163604736
    6. ')**' → logprob: -5.218098163604736
    7. ' ' → logprob: -5.718098163604736
    8. '),' → logprob: -6.343098163604736
    9. ')i' → logprob: -7.343098163604736
    10. '*' → logprob: -7.468098163604736

Token 42: 'for' (ID: 1938)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.055519308894872665
    2. 'for' → logprob: -2.9305193424224854
    3. ' ' → logprob: -7.805519104003906
    4. ')' → logprob: -9.180519104003906
    5. ']' → logprob: -9.305519104003906
    6. '	for' → logprob: -11.180519104003906
    7. ' ]' → logprob: -12.055519104003906
    8. ' i' → logprob: -12.305519104003906
    9. ' )' → logprob: -13.055519104003906
    10. '  ' → logprob: -13.555519104003906

Token 43: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2147371768951416
    2. 'i' → logprob: -1.7147371768951416
    3. ' range' → logprob: -4.3397369384765625
    4. 'range' → logprob: -8.589736938476562
    5. ' ' → logprob: -11.964736938476562
    6. ' xrange' → logprob: -13.589736938476562
    7. '	i' → logprob: -14.089736938476562
    8. '<|end|>' → logprob: -14.964736938476562
    9. '  ' → logprob: -15.339736938476562
    10. '	range' → logprob: -15.839736938476562

Token 44: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03461460769176483
    2. 'in' → logprob: -3.4096145629882812
    3. ' ' → logprob: -7.034614562988281
    4. ' range' → logprob: -10.034614562988281
    5. 'range' → logprob: -10.409614562988281
    6. '<|end|>' → logprob: -12.909614562988281
    7. '(' → logprob: -13.034614562988281
    8. '  ' → logprob: -13.284614562988281
    9. 'import' → logprob: -13.659614562988281
    10. '	in' → logprob: -13.659614562988281

Token 45: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.004081247374415398
    2. 'range' → logprob: -5.5040812492370605
    3. ' ' → logprob: -13.379080772399902
    4. ' xrange' → logprob: -14.254080772399902
    5. '	range' → logprob: -14.754080772399902
    6. '(range' → logprob: -15.129080772399902
    7. '  ' → logprob: -18.50408172607422
    8. '.range' → logprob: -19.25408172607422
    9. ' n' → logprob: -19.50408172607422
    10. 'Range' → logprob: -20.00408172607422

Token 46: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0020857853814959526
    2. '(n' → logprob: -6.7520856857299805
    3. '(len' → logprob: -7.1270856857299805
    4. ' (' → logprob: -9.50208568572998
    5. '9' → logprob: -12.00208568572998
    6. '20' → logprob: -12.25208568572998
    7. '10' → logprob: -12.37708568572998
    8. '7' → logprob: -12.50208568572998
    9. '6' → logprob: -12.75208568572998
    10. '8' → logprob: -13.00208568572998

Token 47: '17' (ID: 1422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5222752094268799
    2. ' n' → logprob: -1.3972752094268799
    3. '1' → logprob: -3.02227520942688
    4. ' ' → logprob: -4.022274971008301
    5. '20' → logprob: -4.397274971008301
    6. '10' → logprob: -4.647274971008301
    7. '40' → logprob: -4.647274971008301
    8. '30' → logprob: -5.397274971008301
    9. '21' → logprob: -5.397274971008301
    10. '50' → logprob: -5.647274971008301

Token 48: ',' (ID: 11)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0026273811236023903
    2. ']' → logprob: -6.002627372741699
    3. ')' → logprob: -9.3776273727417
    4. '+' → logprob: -11.3776273727417
    5. ')])' → logprob: -11.5026273727417
    6. ' ]' → logprob: -11.5026273727417
    7. ' )' → logprob: -11.8776273727417
    8. ')],' → logprob: -12.0026273727417
    9. ',' → logprob: -12.2526273727417
    10. '])]' → logprob: -12.2526273727417

Token 49: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.47802460193634033
    2. ' -' → logprob: -1.3530246019363403
    3. ' ' → logprob: -2.728024482727051
    4. '17' → logprob: -3.603024482727051
    5. '16' → logprob: -3.728024482727051
    6. '18' → logprob: -5.478024482727051
    7. '0' → logprob: -7.978024482727051
    8. '15' → logprob: -8.85302448272705
    9. '1' → logprob: -9.35302448272705
    10. '20' → logprob: -10.47802448272705

Token 50: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.6309858560562134
    2. ',' → logprob: -0.8809858560562134
    3. '-' → logprob: -3.130985736846924
    4. ' ,' → logprob: -5.630985736846924
    5. ' ,-' → logprob: -6.005985736846924
    6. ' -' → logprob: -6.380985736846924
    7. ')]' → logprob: -6.880985736846924
    8. ')' → logprob: -7.880985736846924
    9. '0' → logprob: -8.005986213684082
    10. '1' → logprob: -8.880986213684082

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011033779446734115
    2. ' ' → logprob: -9.125110626220703
    3. '2' → logprob: -13.875110626220703
    4. '-' → logprob: -15.500110626220703
    5. ' -' → logprob: -15.750110626220703
    6. '```' → logprob: -16.375110626220703
    7. '0' → logprob: -17.500110626220703
    8. '  ' → logprob: -18.062610626220703
    9. '１' → logprob: -18.437610626220703
    10. ')' → logprob: -18.500110626220703

Token 52: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0011190229561179876
    2. ',' → logprob: -7.501119136810303
    3. ')' → logprob: -8.126118659973145
    4. ']' → logprob: -9.251118659973145
    5. ' )' → logprob: -10.001118659973145
    6. '),' → logprob: -10.126118659973145
    7. ')],' → logprob: -10.376118659973145
    8. ')])' → logprob: -10.376118659973145
    9. '):' → logprob: -11.876118659973145
    10. '))' → logprob: -12.501118659973145

Token 53: 'G' (ID: 38)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013602360850200057
    2. ':
' → logprob: -7.0013604164123535
    3. ' :' → logprob: -8.001359939575195
    4. ' ' → logprob: -10.376359939575195
    5. ':]' → logprob: -10.376359939575195
    6. ']:' → logprob: -11.251359939575195
    7. ']' → logprob: -11.501359939575195
    8. ' :
' → logprob: -12.501359939575195
    9. ',' → logprob: -12.626359939575195
    10. '):' → logprob: -12.751359939575195

Token 54: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: ' [' (ID: 723)
  Prédit: ' G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' G' → logprob: -1.576668620109558
    2. ' [' → logprob: -1.576668620109558
    3. ' sorted' → logprob: -1.701668620109558
    4. 'G' → logprob: -2.0766687393188477
    5. '[' → logprob: -2.4516687393188477
    6. ' list' → logprob: -2.5766687393188477
    7. 'sorted' → logprob: -2.5766687393188477
    8. 'list' → logprob: -3.4516687393188477
    9. '[::-' → logprob: -6.076668739318848
    10. '[G' → logprob: -6.576668739318848

Token 56: 'v' (ID: 85)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.36673855781555176
    2. 'x' → logprob: -1.4917385578155518
    3. 'e' → logprob: -2.9917385578155518
    4. ' g' → logprob: -4.366738319396973
    5. '0' → logprob: -5.366738319396973
    6. ' x' → logprob: -5.366738319396973
    7. 'i' → logprob: -5.491738319396973
    8. ' e' → logprob: -6.491738319396973
    9. '(' → logprob: -6.991738319396973
    10. 'int' → logprob: -7.491738319396973

Token 57: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.030434228479862213
    2. 'for' → logprob: -3.5304341316223145
    3. ' ' → logprob: -8.155434608459473
    4. '*' → logprob: -9.155434608459473
    5. '-' → logprob: -9.530434608459473
    6. '	for' → logprob: -9.905434608459473
    7. '+' → logprob: -10.030434608459473
    8. '*v' → logprob: -10.780434608459473
    9. '**' → logprob: -11.030434608459473
    10. ' *' → logprob: -11.030434608459473

Token 58: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.02060787007212639
    2. 'v' → logprob: -3.8956079483032227
    3. ' ' → logprob: -10.520607948303223
    4. '	v' → logprob: -10.770607948303223
    5. ' G' → logprob: -12.145607948303223
    6. 'G' → logprob: -12.270607948303223
    7. '  ' → logprob: -12.770607948303223
    8. ' ' → logprob: -13.395607948303223
    9. '   ' → logprob: -14.145607948303223
    10. '(v' → logprob: -14.270607948303223

Token 59: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02063671499490738
    2. 'in' → logprob: -3.895636796951294
    3. ' ' → logprob: -10.020636558532715
    4. 'v' → logprob: -10.770636558532715
    5. '	in' → logprob: -12.270636558532715
    6. ' v' → logprob: -13.083136558532715
    7. ' i' → logprob: -13.083136558532715
    8. 'import' → logprob: -13.208136558532715
    9. 'In' → logprob: -13.458136558532715
    10. 'i' → logprob: -13.645636558532715

Token 60: ' G' (ID: 499)
  Prédit: ' G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' G' → logprob: -0.04318005219101906
    2. 'G' → logprob: -3.168179988861084
    3. ' ' → logprob: -9.293180465698242
    4. ' A' → logprob: -9.543180465698242
    5. '  ' → logprob: -12.418180465698242
    6. '	G' → logprob: -12.543180465698242
    7. 'A' → logprob: -12.668180465698242
    8. '   ' → logprob: -13.668180465698242
    9. '(G' → logprob: -14.168180465698242
    10. ' ' → logprob: -14.293180465698242

Token 61: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0017616904806345701
    2. 'if' → logprob: -6.3767619132995605
    3. ' ' → logprob: -9.751761436462402
    4. '	if' → logprob: -14.001761436462402
    5. ' in' → logprob: -15.751761436462402
    6. '   ' → logprob: -16.75176239013672
    7. '    ' → logprob: -16.87676239013672
    8. '  ' → logprob: -16.87676239013672
    9. '[::-' → logprob: -17.25176239013672
    10. ' 
' → logprob: -17.75176239013672

Token 62: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.012595826759934425
    2. 'v' → logprob: -4.3875956535339355
    3. ' ' → logprob: -9.637596130371094
    4. '	v' → logprob: -11.887596130371094
    5. '    ' → logprob: -12.512596130371094
    6. ' n' → logprob: -12.762596130371094
    7. '  ' → logprob: -13.137596130371094
    8. '   ' → logprob: -13.262596130371094
    9. ' A' → logprob: -14.387596130371094
    10. ' ' → logprob: -14.512596130371094

Token 63: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0012615446466952562
    2. '<=' → logprob: -6.7512617111206055
    3. ' ' → logprob: -9.876261711120605
    4. ' <' → logprob: -10.251261711120605
    5. ' >' → logprob: -13.376261711120605
    6. ']<=' → logprob: -13.876261711120605
    7. '<' → logprob: -14.626261711120605
    8. ' ]' → logprob: -15.001261711120605
    9. '>' → logprob: -15.501261711120605
    10. ')<=' → logprob: -15.626261711120605

Token 64: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5762723088264465
    2. 'n' → logprob: -0.8262723088264465
    3. ' A' → logprob: -8.826272010803223
    4. 'A' → logprob: -9.076272010803223
    5. ' ' → logprob: -9.951272010803223
    6. ' max' → logprob: -11.576272010803223
    7. 'max' → logprob: -12.326272010803223
    8. '  ' → logprob: -13.576272010803223
    9. '100' → logprob: -13.576272010803223
    10. ' ' → logprob: -13.576272010803223

Token 65: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.384836888173595e-05
    2. ' ]' → logprob: -9.8750638961792
    3. ']
' → logprob: -12.0000638961792
    4. ')]' → logprob: -12.8750638961792
    5. ' and' → logprob: -13.8750638961792
    6. ']

' → logprob: -14.2500638961792
    7. '()]' → logprob: -14.7500638961792
    8. ',' → logprob: -14.8750638961792
    9. ')' → logprob: -15.0000638961792
    10. '`]' → logprob: -15.2500638961792

Token 66: 'def' (ID: 1314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.063600778579712
    2. '
' → logprob: -1.438600778579712
    3. '\n' → logprob: -1.938600778579712
    4. '<|end|>' → logprob: -1.938600778579712
    5. ' 
' → logprob: -3.438600778579712
    6. ':
' → logprob: -3.813600778579712
    7. ']' → logprob: -3.938600778579712
    8. ' ' → logprob: -4.438600540161133
    9. ')' → logprob: -4.563600540161133
    10. '  
' → logprob: -5.063600540161133

Token 67: ' insertion' (ID: 68881)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.8642601370811462
    2. ' check' → logprob: -1.489260196685791
    3. ' count' → logprob: -1.989260196685791
    4. ' dfs' → logprob: -3.114260196685791
    5. ' f' → logprob: -3.239260196685791
    6. ' coin' → logprob: -3.364260196685791
    7. ' find' → logprob: -4.114260196685791
    8. ' calculate' → logprob: -4.239260196685791
    9. ' is' → logprob: -4.239260196685791
    10. ' ' → logprob: -4.614260196685791

Token 68: 'Sort' (ID: 11602)
  Prédit: '_sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sort' → logprob: -0.062016863375902176
    2. '_' → logprob: -2.8120169639587402
    3. ' _' → logprob: -11.062016487121582
    4. '_insert' → logprob: -11.312016487121582
    5. '_sorted' → logprob: -11.687016487121582
    6. '_step' → logprob: -13.187016487121582
    7. '_in' → logprob: -13.812016487121582
    8. '_point' → logprob: -14.312016487121582
    9. '_sequence' → logprob: -14.437016487121582
    10. '__' → logprob: -14.687016487121582

Token 69: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25315943360328674
    2. '(A' → logprob: -1.6281594038009644
    3. '(arr' → logprob: -3.628159523010254
    4. '(array' → logprob: -8.503159523010254
    5. '(a' → logprob: -8.503159523010254
    6. '(lst' → logprob: -9.128159523010254
    7. ' (' → logprob: -9.253159523010254
    8. '(nums' → logprob: -9.253159523010254
    9. '(n' → logprob: -10.503159523010254
    10. '_' → logprob: -11.128159523010254

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003598952607717365
    2. ',i' → logprob: -8.625359535217285
    3. ',n' → logprob: -9.375359535217285
    4. ',k' → logprob: -10.250359535217285
    5. ' ,' → logprob: -10.625359535217285
    6. ',index' → logprob: -10.750359535217285
    7. '):' → logprob: -12.500359535217285
    8. ',j' → logprob: -13.125359535217285
    9. ',size' → logprob: -13.875359535217285
    10. ',len' → logprob: -14.000359535217285

Token 71: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.8599433302879333
    2. 'n' → logprob: -1.1099433898925781
    3. ' k' → logprob: -2.859943389892578
    4. 'i' → logprob: -3.109943389892578
    5. 'k' → logprob: -3.109943389892578
    6. ' i' → logprob: -3.234943389892578
    7. ' j' → logprob: -4.109943389892578
    8. 'j' → logprob: -4.734943389892578
    9. ' size' → logprob: -5.484943389892578
    10. 'length' → logprob: -5.484943389892578

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10052333772182465
    2. '):' → logprob: -2.3505232334136963
    3. ')' → logprob: -9.225522994995117
    4. ',n' → logprob: -9.475522994995117
    5. ' ,' → logprob: -10.350522994995117
    6. ',index' → logprob: -11.350522994995117
    7. ',i' → logprob: -11.600522994995117
    8. ',k' → logprob: -11.600522994995117
    9. ',a' → logprob: -11.850522994995117
    10. ' ):' → logprob: -11.975522994995117

Token 73: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.61558598279953
    2. ' g' → logprob: -0.99058598279953
    3. ' i' → logprob: -3.740586042404175
    4. ')' → logprob: -4.240585803985596
    5. 'i' → logprob: -4.365585803985596
    6. 'G' → logprob: -4.990585803985596
    7. ' ' → logprob: -5.365585803985596
    8. ' )' → logprob: -5.365585803985596
    9. ' G' → logprob: -5.490585803985596
    10. ' v' → logprob: -5.740585803985596

Token 74: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.038603078573942184
    2. ',' → logprob: -3.4136030673980713
    3. '):
' → logprob: -5.41360330581665
    4. ')' → logprob: -8.538602828979492
    5. ']:' → logprob: -9.788602828979492
    6. '):
' → logprob: -9.788602828979492
    7. '):

' → logprob: -10.538602828979492
    8. ']):' → logprob: -10.538602828979492
    9. ' ):' → logprob: -11.038602828979492
    10. ',
' → logprob: -11.288602828979492

Token 75: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03303449600934982
    2. '<|end|>' → logprob: -4.533034324645996
    3. ' ' → logprob: -4.908034324645996
    4. ' :' → logprob: -5.033034324645996
    5. '):' → logprob: -5.908034324645996
    6. ':
' → logprob: -6.658034324645996
    7. '   ' → logprob: -6.658034324645996
    8. ')' → logprob: -7.533034324645996
    9. '
' → logprob: -8.158034324645996
    10. '  ' → logprob: -8.908034324645996

Token 76: ' global' (ID: 5466)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.661415696144104
    2. ' ' → logprob: -1.286415696144104
    3. '   ' → logprob: -2.4114155769348145
    4. '    ' → logprob: -3.2864155769348145
    5. '	i' → logprob: -4.1614155769348145
    6. 'i' → logprob: -4.2864155769348145
    7. ' 
' → logprob: -4.4114155769348145
    8. ' for' → logprob: -4.4114155769348145
    9. '  ' → logprob: -5.1614155769348145
    10. '' → logprob: -5.6614155769348145

Token 77: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.6410614252090454
    2. ' ' → logprob: -0.7660614252090454
    3. 'cnt' → logprob: -5.641061305999756
    4. ' A' → logprob: -5.766061305999756
    5. ' c' → logprob: -7.641061305999756
    6. ' ' → logprob: -8.266061782836914
    7. 'A' → logprob: -8.516061782836914
    8. '  ' → logprob: -8.766061782836914
    9. ' n' → logprob: -8.766061782836914
    10. 'c' → logprob: -8.766061782836914

Token 78: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07411745190620422
    2. '   ' → logprob: -3.199117422103882
    3. '<|end|>' → logprob: -3.824117422103882
    4. '    
' → logprob: -5.824117660522461
    5. ':' → logprob: -6.574117660522461
    6. '  
' → logprob: -6.949117660522461
    7. '
' → logprob: -7.074117660522461
    8. '<|end|>' → logprob: -7.199117660522461
    9. '```' → logprob: -8.324117660522461
    10. '   
' → logprob: -8.449117660522461

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3390560448169708
    2. ' for' → logprob: -2.2140560150146484
    3. '<|end|>' → logprob: -2.3390560150146484
    4. '
' → logprob: -3.3390560150146484
    5. '	for' → logprob: -3.7140560150146484
    6. '  ' → logprob: -5.339056015014648
    7. 'for' → logprob: -5.464056015014648
    8. ',' → logprob: -6.089056015014648
    9. '    
' → logprob: -6.339056015014648
    10. ' ' → logprob: -6.339056015014648

Token 80: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6999124884605408
    2. ' i' → logprob: -1.3249125480651855
    3. 'for' (adapté à ' for') → logprob: -1.5749125480651855
    4. '   ' → logprob: -4.1999125480651855
    5. 'i' → logprob: -4.3249125480651855
    6. '    ' → logprob: -7.0749125480651855
    7. '	for' → logprob: -7.6999125480651855
    8. '  ' → logprob: -8.074912071228027
    9. ' ' → logprob: -8.074912071228027
    10. '	i' → logprob: -8.324912071228027

Token 81: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4992664158344269
    2. 'i' → logprob: -0.9992663860321045
    3. ' j' → logprob: -4.124266624450684
    4. 'j' → logprob: -4.874266624450684
    5. ' ' → logprob: -7.249266624450684
    6. 'range' → logprob: -9.374266624450684
    7. ' in' → logprob: -9.499266624450684
    8. ' range' → logprob: -9.874266624450684
    9. '   ' → logprob: -10.499266624450684
    10. 'in' → logprob: -11.124266624450684

Token 82: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02342156507074833
    2. 'in' → logprob: -3.7734215259552
    3. ' ' → logprob: -9.773421287536621
    4. 'n' → logprob: -10.023421287536621
    5. '  ' → logprob: -10.773421287536621
    6. '	in' → logprob: -10.898421287536621
    7. 'g' → logprob: -11.398421287536621
    8. 'range' → logprob: -11.898421287536621
    9. 'import' → logprob: -13.023421287536621
    10. 'In' → logprob: -13.273421287536621

Token 83: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12698626518249512
    2. ' range' → logprob: -2.126986265182495
    3. 'g' → logprob: -10.501986503601074
    4. ' ' → logprob: -11.001986503601074
    5. '  ' → logprob: -12.501986503601074
    6. '   ' → logprob: -12.626986503601074
    7. ' g' → logprob: -12.751986503601074
    8. 'r' → logprob: -13.626986503601074
    9. '	range' → logprob: -14.001986503601074
    10. ' xrange' → logprob: -14.501986503601074

Token 84: '(g' (ID: 7791)
  Prédit: ' g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.7863015532493591
    2. 'g' → logprob: -1.036301612854004
    3. '(g' → logprob: -1.786301612854004
    4. '	g' → logprob: -4.411301612854004
    5. ' (' → logprob: -5.286301612854004
    6. '(' → logprob: -5.536301612854004
    7. '    ' → logprob: -8.161301612854004
    8. ' ' → logprob: -8.286301612854004
    9. '[g' → logprob: -9.161301612854004
    10. ')' → logprob: -9.911301612854004

Token 85: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12766492366790771
    2. ',n' → logprob: -2.1276650428771973
    3. ' ,' → logprob: -7.252665042877197
    4. 'n' → logprob: -11.377664566040039
    5. ',len' → logprob: -11.502664566040039
    6. ',
' → logprob: -14.002664566040039
    7. '	' → logprob: -14.002664566040039
    8. ' n' → logprob: -14.252664566040039
    9. '	n' → logprob: -14.252664566040039
    10. '<n' → logprob: -14.502664566040039

Token 86: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008615988306701183
    2. ' n' → logprob: -4.758615970611572
    3. '	n' → logprob: -14.63361644744873
    4. ' ' → logprob: -15.00861644744873
    5. 'len' → logprob: -15.13361644744873
    6. '   ' → logprob: -15.38361644744873
    7. '<|end|>' → logprob: -16.508615493774414
    8. ' len' → logprob: -16.633615493774414
    9. ')n' → logprob: -17.133615493774414
    10. '  ' → logprob: -17.883615493774414

Token 87: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006498866132460535
    2. '):
' → logprob: -7.500649929046631
    3. ')' → logprob: -9.750649452209473
    4. ' ):' → logprob: -10.625649452209473
    5. ':' → logprob: -11.625649452209473
    6. '):
' → logprob: -13.375649452209473
    7. '):

' → logprob: -13.875649452209473
    8. '}:' → logprob: -14.625649452209473
    9. '   ' → logprob: -14.750649452209473
    10. '():' → logprob: -15.125649452209473

Token 88: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16780175268650055
    2. '       ' → logprob: -2.417801856994629
    3. '<|end|>' → logprob: -3.417801856994629
    4. '    ' → logprob: -4.042801856994629
    5. '        ' → logprob: -4.917801856994629
    6. '   ' → logprob: -6.417801856994629
    7. ' 
' → logprob: -6.667801856994629
    8. '        
' → logprob: -6.667801856994629
    9. '  ' → logprob: -7.292801856994629
    10. ' A' → logprob: -8.542801856994629

Token 89: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.1562613695859909
    2. ' v' → logprob: -2.406261444091797
    3. 'j' → logprob: -4.031261444091797
    4. 'tmp' → logprob: -4.406261444091797
    5. '       ' → logprob: -4.781261444091797
    6. 'temp' → logprob: -5.156261444091797
    7. ' j' → logprob: -6.031261444091797
    8. ' temp' → logprob: -6.156261444091797
    9. ' tmp' → logprob: -6.281261444091797
    10. 'key' → logprob: -6.531261444091797

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012782384641468525
    2. '=' → logprob: -4.387782573699951
    3. '=A' → logprob: -8.262782096862793
    4. ' ' → logprob: -11.512782096862793
    5. ',' → logprob: -13.762782096862793
    6. ')' → logprob: -14.137782096862793
    7. '   ' → logprob: -14.637782096862793
    8. '    ' → logprob: -14.637782096862793
    9. ' A' → logprob: -14.762782096862793
    10. 'A' → logprob: -14.887782096862793

Token 91: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.01105442550033331
    2. ' A' → logprob: -4.511054515838623
    3. '	A' → logprob: -12.136054039001465
    4. '<|end|>' → logprob: -14.386054039001465
    5. '>A' → logprob: -14.886054039001465
    6. ' ' → logprob: -15.636054039001465
    7. '=A' → logprob: -16.88605499267578
    8. ',A' → logprob: -17.26105499267578
    9. '   ' → logprob: -17.38605499267578
    10. '_A' → logprob: -18.26105499267578

Token 92: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.451116051815916e-05
    2. '[' → logprob: -10.625024795532227
    3. '[j' → logprob: -16.750024795532227
    4. '[v' → logprob: -17.250024795532227
    5. 'i' → logprob: -17.500024795532227
    6. '       ' → logprob: -18.000024795532227
    7. '[
' → logprob: -18.250024795532227
    8. '	i' → logprob: -18.375024795532227
    9. ' [' → logprob: -19.000024795532227
    10. '```' → logprob: -19.375024795532227

Token 93: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37113267183303833
    2. ']' → logprob: -1.7461326122283936
    3. ')
' → logprob: -2.1211326122283936
    4. ']
' → logprob: -4.371132850646973
    5. ')
' → logprob: -6.121132850646973
    6. ']
' → logprob: -7.496132850646973
    7. '       ' → logprob: -8.996132850646973
    8. '）' → logprob: -10.121132850646973
    9. ']

' → logprob: -11.121132850646973
    10. '   ' → logprob: -11.121132850646973

Token 94: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1638481169939041
    2. '        ' → logprob: -3.1638481616973877
    3. ' j' → logprob: -3.2888481616973877
    4. '<|end|>' → logprob: -4.038847923278809
    5. '
' → logprob: -4.913847923278809
    6. ' 	' → logprob: -5.038847923278809
    7. '       ' → logprob: -5.038847923278809
    8. '		' → logprob: -5.413847923278809
    9. ' 
' → logprob: -5.413847923278809
    10. '        
' → logprob: -5.538847923278809

Token 95: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.10027901083230972
    2. ' j' → logprob: -2.3502790927886963
    3. '   ' → logprob: -9.850278854370117
    4. ' ' → logprob: -11.475278854370117
    5. '    ' → logprob: -12.725278854370117
    6. '  ' → logprob: -13.225278854370117
    7. '       ' → logprob: -13.350278854370117
    8. '```' → logprob: -13.850278854370117
    9. '	j' → logprob: -14.225278854370117
    10. '    
' → logprob: -15.100278854370117

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023726625367999077
    2. '=' → logprob: -3.77372670173645
    3. '=i' → logprob: -7.648726463317871
    4. '＝' → logprob: -12.648726463317871
    5. ' ' → logprob: -14.273726463317871
    6. '=j' → logprob: -15.523726463317871
    7. ' =
' → logprob: -15.773726463317871
    8. '=
' → logprob: -17.023727416992188
    9. '=

' → logprob: -17.648727416992188
    10. '   ' → logprob: -17.773727416992188

Token 97: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5759592056274414
    2. ' i' → logprob: -0.8259592056274414
    3. ' ' → logprob: -11.075959205627441
    4. '	i' → logprob: -13.075959205627441
    5. 'j' → logprob: -14.200959205627441
    6. '  ' → logprob: -14.575959205627441
    7. ' j' → logprob: -15.325959205627441
    8. '   ' → logprob: -15.575959205627441
    9. '```' → logprob: -15.950959205627441
    10. '(i' → logprob: -16.450958251953125

Token 98: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.016912054270505905
    2. '-' → logprob: -4.51691198348999
    3. '-g' → logprob: -5.14191198348999
    4. '-G' → logprob: -15.141912460327148
    5. '-j' → logprob: -15.766912460327148
    6. '-gh' → logprob: -16.51691246032715
    7. ' ' → logprob: -16.76691246032715
    8. 'g' → logprob: -17.51691246032715
    9. ' -
' → logprob: -17.76691246032715
    10. ' -=' → logprob: -17.89191246032715

Token 99: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0110534792765975
    2. ' g' → logprob: -4.511053562164307
    3. '1' → logprob: -12.886053085327148
    4. '	g' → logprob: -13.011053085327148
    5. ' ' → logprob: -14.136053085327148
    6. '   ' → logprob: -17.63605308532715
    7. '#g' → logprob: -18.26105308532715
    8. ' gâ' → logprob: -18.26105308532715
    9. '_g' → logprob: -18.38605308532715
    10. '    ' → logprob: -18.63605308532715

Token 100: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 101: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.20243169367313385
    2. 'while' (adapté à ' while') → logprob: -1.8274316787719727
    3. '	while' → logprob: -3.8274316787719727
    4. '<|end|>' → logprob: -8.202431678771973
    5. '       ' → logprob: -8.327431678771973
    6. ' ' → logprob: -10.452431678771973
    7. '    ' → logprob: -10.827431678771973
    8. '   ' → logprob: -11.077431678771973
    9. '
' → logprob: -11.577431678771973
    10. '>' → logprob: -11.577431678771973

Token 103: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.20145660638809204
    2. 'j' → logprob: -1.7014565467834473
    3. ' ' → logprob: -10.701457023620605
    4. '0' → logprob: -11.076457023620605
    5. '(j' → logprob: -13.451457023620605
    6. ' (' → logprob: -13.701457023620605
    7. '	j' → logprob: -13.951457023620605
    8. '(' → logprob: -15.326457023620605
    9. ' ' → logprob: -15.451457023620605
    10. ',' → logprob: -15.576457023620605

Token 104: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.038044244050979614
    2. ' >=' → logprob: -3.2880442142486572
    3. '>' → logprob: -13.538043975830078
    4. ']>=' → logprob: -14.038043975830078
    5. ')>=' → logprob: -14.913043975830078
    6. ' ' → logprob: -15.288043975830078
    7. '≥' → logprob: -17.663043975830078
    8. '   ' → logprob: -17.913043975830078
    9. '=>' → logprob: -18.288043975830078
    10. ' >' → logprob: -18.413043975830078

Token 105: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001170225441455841
    2. ' ' → logprob: -6.7511701583862305
    3. '   ' → logprob: -20.376171112060547
    4. '۰' → logprob: -20.876171112060547
    5. '０' → logprob: -21.626171112060547
    6. '00' → logprob: -21.751171112060547
    7. '  ' → logprob: -22.501171112060547
    8. 'and' → logprob: -22.501171112060547
    9. '    ' → logprob: -22.626171112060547
    10. ' ' → logprob: -22.876171112060547

Token 106: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '۰' → logprob: -22.250059127807617
    4. '   ' → logprob: -22.625059127807617
    5. '０' → logprob: -22.875059127807617
    6. '00' → logprob: -23.250059127807617
    7. '  ' → logprob: -24.500059127807617
    8. '       ' → logprob: -24.750059127807617
    9. ' ' → logprob: -24.875059127807617
    10. ' and' → logprob: -24.875059127807617

Token 107: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.029767731204628944
    2. 'and' → logprob: -3.5297677516937256
    3. '        ' → logprob: -11.404767990112305
    4. ' ' → logprob: -13.279767990112305
    5. '    ' → logprob: -13.404767990112305
    6. '       ' → logprob: -13.529767990112305
    7. '      ' → logprob: -14.654767990112305
    8. '   ' → logprob: -15.404767990112305
    9. '     ' → logprob: -15.654767990112305
    10. '           ' → logprob: -15.654767990112305

Token 108: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5759493708610535
    2. ' A' → logprob: -0.8259493708610535
    3. ' ' → logprob: -12.200949668884277
    4. '   ' → logprob: -13.200949668884277
    5. '	A' → logprob: -13.450949668884277
    6. 'v' → logprob: -14.825949668884277
    7. ' ' → logprob: -14.825949668884277
    8. '  ' → logprob: -15.325949668884277
    9. '>A' → logprob: -15.450949668884277
    10. '    ' → logprob: -16.32594871520996

Token 109: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.3425219549390022e-05
    2. '[' → logprob: -11.50001335144043
    3. 'j' → logprob: -12.87501335144043
    4. ' [' → logprob: -15.00001335144043
    5. '   ' → logprob: -16.50001335144043
    6. '[i' → logprob: -16.62501335144043
    7. '[
' → logprob: -17.37501335144043
    8. '```' → logprob: -17.87501335144043
    9. '][' → logprob: -18.12501335144043
    10. '[js' → logprob: -18.50001335144043

Token 110: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.016621213406324387
    2. ' >' → logprob: -4.141621112823486
    3. ']' → logprob: -7.641621112823486
    4. ']>' → logprob: -9.266621589660645
    5. ' ' → logprob: -12.641621589660645
    6. '＞' → logprob: -12.766621589660645
    7. '```' → logprob: -13.766621589660645
    8. '[' → logprob: -13.766621589660645
    9. '   ' → logprob: -13.891621589660645
    10. '">' → logprob: -13.891621589660645

Token 111: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.06197720766067505
    2. ' >' → logprob: -2.8119771480560303
    3. ' ' → logprob: -12.06197738647461
    4. '   ' → logprob: -13.93697738647461
    5. '＞' → logprob: -14.43697738647461
    6. '```' → logprob: -14.56197738647461
    7. '[' → logprob: -14.93697738647461
    8. ']>' → logprob: -15.68697738647461
    9. '  ' → logprob: -15.68697738647461
    10. '>A' → logprob: -15.93697738647461

Token 112: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.16022644937038422
    2. ' v' → logprob: -1.9102264642715454
    3. '	v' → logprob: -13.035226821899414
    4. '   ' → logprob: -17.035226821899414
    5. '    ' → logprob: -17.160226821899414
    6. ')v' → logprob: -17.660226821899414
    7. '<v' → logprob: -17.910226821899414
    8. ' ' → logprob: -18.410226821899414
    9. '*v' → logprob: -19.035226821899414
    10. '(v' → logprob: -19.035226821899414

Token 113: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.09127958863973618
    2. ':' → logprob: -2.4662795066833496
    3. ' :
' → logprob: -6.21627950668335
    4. '       ' → logprob: -8.841279983520508
    5. '   ' → logprob: -9.591279983520508
    6. '):
' → logprob: -9.841279983520508
    7. ' :' → logprob: -10.591279983520508
    8. ':
' → logprob: -10.716279983520508
    9. ' ' → logprob: -12.216279983520508
    10. ':

' → logprob: -12.591279983520508

Token 114: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20626913011074066
    2. ':
' → logprob: -2.4562690258026123
    3. ':' → logprob: -3.2062690258026123
    4. ' :
' → logprob: -3.9562690258026123
    5. '       ' → logprob: -5.081269264221191
    6. '        ' → logprob: -5.331269264221191
    7. ' and' → logprob: -5.581269264221191
    8. '
' → logprob: -5.831269264221191
    9. ' ' → logprob: -5.831269264221191
    10. ' :' → logprob: -5.956269264221191

Token 115: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.44108790159225464
    2. ' A' → logprob: -1.0660879611968994
    3. '           ' → logprob: -4.44108772277832
    4. '               ' → logprob: -8.06608772277832
    5. '            ' → logprob: -9.19108772277832
    6. ' ' → logprob: -10.19108772277832
    7. ' 
' → logprob: -11.06608772277832
    8. '            
' → logprob: -11.19108772277832
    9. '```' → logprob: -11.44108772277832
    10. '          ' → logprob: -12.69108772277832

Token 116: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00012487331696320325
    2. '[' → logprob: -9.00012493133545
    3. 'j' → logprob: -14.12512493133545
    4. ' [' → logprob: -14.87512493133545
    5. '[js' → logprob: -16.250123977661133
    6. '[i' → logprob: -16.375123977661133
    7. '_j' → logprob: -17.375123977661133
    8. '	j' → logprob: -17.750123977661133
    9. ',j' → logprob: -17.750123977661133
    10. '][' → logprob: -18.125123977661133

Token 117: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0024976562708616257
    2. ' +' → logprob: -6.002497673034668
    3. '+]' → logprob: -10.877497673034668
    4. ']' → logprob: -13.252497673034668
    5. '+j' → logprob: -15.002497673034668
    6. ' ' → logprob: -15.127497673034668
    7. '+
' → logprob: -15.377497673034668
    8. ' ]' → logprob: -16.00249671936035
    9. '+

' → logprob: -16.00249671936035
    10. '+=' → logprob: -16.50249671936035

Token 118: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -9.849109119386412e-06
    2. ' g' → logprob: -11.625009536743164
    3. '   ' → logprob: -14.750009536743164
    4. ' ' → logprob: -15.125009536743164
    5. '    ' → logprob: -16.750009536743164
    6. '  ' → logprob: -17.125009536743164
    7. ']' → logprob: -17.625009536743164
    8. '	g' → logprob: -17.875009536743164
    9. '_g' → logprob: -18.125009536743164
    10. '     ' → logprob: -18.375009536743164

Token 119: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002602629829198122
    2. ' ]' → logprob: -8.375260353088379
    3. ']=' → logprob: -10.500260353088379
    4. '=' → logprob: -13.250260353088379
    5. ' =' → logprob: -14.750260353088379
    6. ')' → logprob: -17.000259399414062
    7. ']

' → logprob: -17.125259399414062
    8. ']
' → logprob: -18.500259399414062
    9. '`]' → logprob: -18.750259399414062
    10. '']' → logprob: -19.125259399414062

Token 120: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061970602720975876
    2. '=' → logprob: -2.8119707107543945
    3. ' ' → logprob: -13.186970710754395
    4. '=A' → logprob: -14.936970710754395
    5. ',' → logprob: -15.311970710754395
    6. ' =)' → logprob: -16.561969757080078
    7. '＝' → logprob: -16.686969757080078
    8. ' =
' → logprob: -16.686969757080078
    9. '<|end|>' → logprob: -16.686969757080078
    10. ']' → logprob: -17.186969757080078

Token 121: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0019288709154352546
    2. ' A' → logprob: -6.251928806304932
    3. '	A' → logprob: -15.75192928314209
    4. '>A' → logprob: -16.626928329467773
    5. '   ' → logprob: -18.876928329467773
    6. '<|end|>' → logprob: -18.876928329467773
    7. '```' → logprob: -19.251928329467773
    8. '           ' → logprob: -20.001928329467773
    9. '_A' → logprob: -20.126928329467773
    10. ' ' → logprob: -20.251928329467773

Token 122: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.173704271830502e-06
    2. '[' → logprob: -12.87500286102295
    3. 'j' → logprob: -14.50000286102295
    4. '[
' → logprob: -17.000003814697266
    5. '[js' → logprob: -17.250003814697266
    6. ' [' → logprob: -18.250003814697266
    7. '[i' → logprob: -18.500003814697266
    8. '	j' → logprob: -19.250003814697266
    9. '```' → logprob: -19.375003814697266
    10. '[g' → logprob: -19.750003814697266

Token 123: ']
' (ID: 1592)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5998358130455017
    2. '<|end|>' → logprob: -0.9748358130455017
    3. '           ' → logprob: -2.9748358726501465
    4. '<|end|>' → logprob: -4.5998358726501465
    5. ')' → logprob: -5.2248358726501465
    6. '            
' → logprob: -6.2248358726501465
    7. ' 
' → logprob: -6.9748358726501465
    8. '               ' → logprob: -7.4748358726501465
    9. ' ' → logprob: -7.4748358726501465
    10. '  
' → logprob: -7.5998358726501465

Token 124: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015205761883407831
    2. '
' → logprob: -7.75152063369751
    3. ' j' → logprob: -7.87652063369751
    4. ' 
' → logprob: -8.376520156860352
    5. 'j' → logprob: -8.501520156860352
    6. '            
' → logprob: -8.751520156860352
    7. '<|end|>' → logprob: -10.501520156860352
    8. '  
' → logprob: -10.626520156860352
    9. '		' → logprob: -11.501520156860352
    10. '```' → logprob: -12.001520156860352

Token 125: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.019607510417699814
    2. ' j' → logprob: -4.0196075439453125
    3. 'cnt' → logprob: -6.6446075439453125
    4. ' cnt' → logprob: -9.144607543945312
    5. '           ' → logprob: -10.019607543945312
    6. '	j' → logprob: -13.394607543945312
    7. '    ' → logprob: -14.394607543945312
    8. '       ' → logprob: -14.644607543945312
    9. '            ' → logprob: -14.644607543945312
    10. '   ' → logprob: -14.894607543945312

Token 126: ' =' (ID: 314)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.031581975519657135
    2. '-=' → logprob: -4.031581878662109
    3. '-' → logprob: -4.781581878662109
    4. ' -' → logprob: -5.406581878662109
    5. ' =' → logprob: -8.40658187866211
    6. '=' → logprob: -8.65658187866211
    7. '<|end|>' → logprob: -11.15658187866211
    8. ' ' → logprob: -11.28158187866211
    9. '    ' → logprob: -11.78158187866211
    10. '            ' → logprob: -11.90658187866211

Token 127: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.16022422909736633
    2. ' j' → logprob: -1.910224199295044
    3. '	j' → logprob: -16.03522491455078
    4. ':j' → logprob: -18.53522491455078
    5. '$j' → logprob: -18.66022491455078
    6. 'user' → logprob: -20.16022491455078
    7. '[j' → logprob: -20.28522491455078
    8. 'jax' → logprob: -20.28522491455078
    9. '*j' → logprob: -20.66022491455078
    10. ' ' → logprob: -20.66022491455078

Token 128: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.059033580124378204
    2. '-' → logprob: -3.5590336322784424
    3. '-j' → logprob: -3.5590336322784424
    4. '-g' → logprob: -8.184033393859863
    5. ' j' → logprob: -9.434033393859863
    6. 'j' → logprob: -10.434033393859863
    7. ' ' → logprob: -13.184033393859863
    8. 'g' → logprob: -14.434033393859863
    9. '-gap' → logprob: -15.684033393859863
    10. ' -
' → logprob: -16.18403434753418

Token 129: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0031797364354133606
    2. ' g' → logprob: -5.753179550170898
    3. '1' → logprob: -13.253179550170898
    4. '	g' → logprob: -16.1281795501709
    5. ' ' → logprob: -16.2531795501709
    6. '   ' → logprob: -18.0031795501709
    7. '#g' → logprob: -19.5031795501709
    8. '_g' → logprob: -20.0031795501709
    9. '    ' → logprob: -20.0031795501709
    10. '*g' → logprob: -20.1281795501709

Token 130: '
' (ID: 198)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.07138475775718689
    2. ' g' → logprob: -2.6963846683502197
    3. '	g' → logprob: -6.821384906768799
    4. ' ' → logprob: -8.57138442993164
    5. '_g' → logprob: -9.57138442993164
    6. '   ' → logprob: -10.44638442993164
    7. ' ' → logprob: -11.19638442993164
    8. '    ' → logprob: -11.69638442993164
    9. '#g' → logprob: -11.69638442993164
    10. ',g' → logprob: -11.82138442993164

Token 131: '           ' (ID: 352)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.36477378010749817
    2. ' g' → logprob: -1.4897737503051758
    3. '       ' → logprob: -3.364773750305176
    4. '	g' → logprob: -4.489773750305176
    5. '[g' → logprob: -4.489773750305176
    6. '           ' → logprob: -4.739773750305176
    7. '[' → logprob: -5.614773750305176
    8. '
' → logprob: -5.864773750305176
    9. '```' → logprob: -6.864773750305176
    10. ' 
' → logprob: -7.114773750305176

Token 132: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.011223006062209606
    2. ' cnt' → logprob: -4.511222839355469
    3. '           ' → logprob: -9.636222839355469
    4. '	cnt' → logprob: -9.761222839355469
    5. '       ' → logprob: -10.261222839355469
    6. ' ' → logprob: -11.261222839355469
    7. '   ' → logprob: -13.386222839355469
    8. '(cnt' → logprob: -13.886222839355469
    9. '[cnt' → logprob: -14.136222839355469
    10. '
' → logprob: -14.636222839355469

Token 133: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6957300305366516
    2. '+=' → logprob: -0.8207300305366516
    3. '+' → logprob: -2.820729970932007
    4. ' +' → logprob: -7.195730209350586
    5. '=' → logprob: -7.695730209350586
    6. '<|end|>' → logprob: -8.070730209350586
    7. ']+=' → logprob: -10.320730209350586
    8. ' =' → logprob: -11.070730209350586
    9. '+='' → logprob: -11.445730209350586
    10. '++' → logprob: -11.445730209350586

Token 134: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '<|end|>' → logprob: -19.00002670288086
    4. '   ' → logprob: -21.62502670288086
    5. '           ' → logprob: -21.75002670288086
    6. '  ' → logprob: -21.75002670288086
    7. '```' → logprob: -21.87502670288086
    8. '１' → logprob: -21.87502670288086
    9. '0' → logprob: -22.12502670288086
    10. '+' → logprob: -22.62502670288086

Token 135: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -20.000001907348633
    4. '１' → logprob: -20.625001907348633
    5. '  ' → logprob: -21.000001907348633
    6. '```' → logprob: -21.500001907348633
    7. '१' → logprob: -22.250001907348633
    8. '+' → logprob: -22.312501907348633
    9. '0' → logprob: -22.375001907348633
    10. '    ' → logprob: -22.375001907348633

Token 136: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001613769680261612
    2. '   ' → logprob: -6.501613616943359
    3. ' A' → logprob: -9.75161361694336
    4. 'A' → logprob: -10.62661361694336
    5. '           ' → logprob: -11.25161361694336
    6. '      ' → logprob: -12.62661361694336
    7. ' ' → logprob: -12.62661361694336
    8. '  ' → logprob: -13.25161361694336
    9. '[A' → logprob: -13.25161361694336
    10. '
' → logprob: -13.75161361694336

Token 137: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7410771250724792
    2. 'A' → logprob: -0.9910771250724792
    3. ' A' → logprob: -2.366077184677124
    4. '       ' → logprob: -2.866077184677124
    5. ' ' → logprob: -7.991076946258545
    6. '           ' → logprob: -8.116077423095703
    7. '  ' → logprob: -8.241077423095703
    8. '[A' → logprob: -8.866077423095703
    9. '```' → logprob: -8.991077423095703
    10. '	A' → logprob: -9.491077423095703

Token 138: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.01662144809961319
    2. ' A' → logprob: -4.2666215896606445
    3. '   ' → logprob: -6.0166215896606445
    4. ' ' → logprob: -11.891621589660645
    5. '       ' → logprob: -12.141621589660645
    6. '  ' → logprob: -13.266621589660645
    7. '```' → logprob: -13.391621589660645
    8. '	A' → logprob: -13.641621589660645
    9. '[A' → logprob: -16.641620635986328
    10. '
' → logprob: -16.766620635986328

Token 139: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.935296834039036e-06
    2. '[' → logprob: -13.00000286102295
    3. 'j' → logprob: -15.75000286102295
    4. '[js' → logprob: -16.125003814697266
    5. '```' → logprob: -16.500003814697266
    6. '[i' → logprob: -16.625003814697266
    7. '][' → logprob: -16.625003814697266
    8. ' [' → logprob: -16.750003814697266
    9. ']' → logprob: -17.875003814697266
    10. '[
' → logprob: -18.125003814697266

Token 140: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.431207682704553e-05
    2. ' +' → logprob: -9.875054359436035
    3. '+j' → logprob: -14.125054359436035
    4. '+s' → logprob: -14.375054359436035
    5. '+
' → logprob: -14.500054359436035
    6. '+h' → logprob: -15.250054359436035
    7. '+k' → logprob: -15.750054359436035
    8. '+t' → logprob: -15.875054359436035
    9. '+n' → logprob: -16.50005340576172
    10. '+c' → logprob: -17.12505340576172

Token 141: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.7432603272027336e-06
    2. ' g' → logprob: -13.375001907348633
    3. '+' → logprob: -17.125001907348633
    4. ' ' → logprob: -17.375001907348633
    5. '   ' → logprob: -17.625001907348633
    6. '<|end|>' → logprob: -17.625001907348633
    7. '```' → logprob: -18.000001907348633
    8. '#g' → logprob: -18.750001907348633
    9. '  ' → logprob: -19.625001907348633
    10. '_g' → logprob: -20.000001907348633

Token 142: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00011200665176147595
    2. ']=' → logprob: -9.75011157989502
    3. ' ]' → logprob: -10.37511157989502
    4. '=' → logprob: -10.75011157989502
    5. ' =' → logprob: -14.12511157989502
    6. '`]' → logprob: -15.87511157989502
    7. ')' → logprob: -16.375112533569336
    8. '']' → logprob: -17.375112533569336
    9. ']
' → logprob: -17.750112533569336
    10. '"]' → logprob: -18.250112533569336

Token 143: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0380416102707386
    2. ' =' → logprob: -3.288041591644287
    3. '＝' → logprob: -16.288042068481445
    4. '=

' → logprob: -17.663042068481445
    5. '=v' → logprob: -18.288042068481445
    6. '=
' → logprob: -18.538042068481445
    7. ')=' → logprob: -19.413042068481445
    8. '.=' → logprob: -19.413042068481445
    9. ' =
' → logprob: -19.413042068481445
    10. ')' → logprob: -19.663042068481445

Token 144: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0004306692280806601
    2. ' v' → logprob: -7.750430583953857
    3. '	v' → logprob: -20.375431060791016
    4. '$v' → logprob: -22.875431060791016
    5. 'vq' → logprob: -23.125431060791016
    6. '<v' → logprob: -23.375431060791016
    7. '*v' → logprob: -23.500431060791016
    8. ')v' → logprob: -24.000431060791016
    9. '_v' → logprob: -24.000431060791016
    10. 'vj' → logprob: -24.125431060791016

Token 145: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.024639729410409927
    2. 'for' → logprob: -4.14963960647583
    3. 'def' → logprob: -5.27463960647583
    4. ' for' → logprob: -6.89963960647583
    5. '

' → logprob: -7.39963960647583
    6. '  
' → logprob: -7.64963960647583
    7. ' 
' → logprob: -7.89963960647583
    8. '
' → logprob: -8.274640083312988
    9. '    
' → logprob: -8.274640083312988
    10. '<|end|>' → logprob: -8.774640083312988

Token 146: 'for' (ID: 1938)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38599473237991333
    2. 'def' → logprob: -1.6359946727752686
    3. 'for' → logprob: -2.2609946727752686
    4. ' for' → logprob: -4.135994911193848
    5. '   ' → logprob: -6.385994911193848
    6. ' 
' → logprob: -6.885994911193848
    7. '<|end|>' → logprob: -7.010994911193848
    8. '    
' → logprob: -7.510994911193848
    9. '  
' → logprob: -8.260994911193848
    10. 'return' → logprob: -8.385994911193848

Token 147: ' g' (ID: 329)
  Prédit: ' g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.2016693353652954
    2. 'g' → logprob: -1.7016693353652954
    3. ' ' → logprob: -9.076669692993164
    4. ' i' → logprob: -9.201669692993164
    5. 'i' → logprob: -11.201669692993164
    6. ' gap' → logprob: -11.576669692993164
    7. '	g' → logprob: -12.201669692993164
    8. '   ' → logprob: -12.701669692993164
    9. 'G' → logprob: -13.201669692993164
    10. '  ' → logprob: -13.826669692993164

Token 148: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026353247463703156
    2. 'in' → logprob: -3.651353359222412
    3. ' ' → logprob: -10.026352882385254
    4. 'g' → logprob: -12.901352882385254
    5. '	in' → logprob: -13.026352882385254
    6. 'n' → logprob: -14.151352882385254
    7. '_in' → logprob: -14.401352882385254
    8. 's' → logprob: -14.776352882385254
    9. '  ' → logprob: -14.901352882385254
    10. ' g' → logprob: -15.526352882385254

Token 149: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -4.5491004129871726e-05
    2. ' G' → logprob: -10.000045776367188
    3. '   ' → logprob: -18.250045776367188
    4. ' ' → logprob: -19.000045776367188
    5. '	G' → logprob: -20.375045776367188
    6. '  ' → logprob: -20.625045776367188
    7. 'Ｇ' → logprob: -21.750045776367188
    8. '    ' → logprob: -22.750045776367188
    9. 'range' → logprob: -22.750045776367188
    10. '<G' → logprob: -22.875045776367188

Token 150: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00012999906903132796
    2. ' :' → logprob: -9.375129699707031
    3. ':
' → logprob: -11.000129699707031
    4. '):' → logprob: -11.125129699707031
    5. ',' → logprob: -12.000129699707031
    6. '<|end|>' → logprob: -13.250129699707031
    7. ':**' → logprob: -13.875129699707031
    8. '():' → logprob: -13.875129699707031
    9. '：' → logprob: -14.375129699707031
    10. ' in' → logprob: -14.750129699707031

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07387556880712509
    2. ' insertion' → logprob: -2.823875665664673
    3. 'in' → logprob: -4.448875427246094
    4. '    
' → logprob: -9.448875427246094
    5. '	in' → logprob: -10.573875427246094
    6. '
' → logprob: -11.573875427246094
    7. ' in' → logprob: -11.698875427246094
    8. 'Insertion' → logprob: -12.073875427246094
    9. '   ' → logprob: -12.698875427246094
    10. '  ' → logprob: -13.323875427246094

Token 152: ' insertion' (ID: 68881)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -8.554343366995454e-05
    2. '   ' → logprob: -10.000085830688477
    3. ' insertion' → logprob: -10.125085830688477
    4. '    
' → logprob: -16.875085830688477
    5. 'Insertion' → logprob: -17.500085830688477
    6. '
' → logprob: -18.000085830688477
    7. '  ' → logprob: -18.000085830688477
    8. 'insert' → logprob: -18.125085830688477
    9. ' ' → logprob: -18.375085830688477
    10. '	in' → logprob: -18.875085830688477

Token 153: 'Sort' (ID: 11602)
  Prédit: 'Sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sort' → logprob: -1.2664456789934775e-06
    2. 'Sor' → logprob: -14.375000953674316
    3. 'sort' → logprob: -14.500000953674316
    4. 'S' → logprob: -16.375001907348633
    5. '_sort' → logprob: -16.750001907348633
    6. ' Sort' → logprob: -17.250001907348633
    7. 'Sorter' → logprob: -17.375001907348633
    8. 'Sorting' → logprob: -17.875001907348633
    9. ' sort' → logprob: -18.000001907348633
    10. 'Sorted' → logprob: -18.375001907348633

Token 154: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.00028183520771563053
    2. '(' → logprob: -8.250282287597656
    3. ' (' → logprob: -11.000282287597656
    4. '(
' → logprob: -13.000282287597656
    5. '<|end|>' → logprob: -13.750282287597656
    6. '(AST' → logprob: -16.000282287597656
    7. '(G' → logprob: -16.125282287597656
    8. '(I' → logprob: -17.000282287597656
    9. ')' → logprob: -17.375282287597656
    10. '​' → logprob: -17.500282287597656

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010730616049841046
    2. ',n' → logprob: -6.876072883605957
    3. ' ,' → logprob: -10.376072883605957
    4. ',len' → logprob: -11.751072883605957
    5. ' n' → logprob: -14.251072883605957
    6. '(n' → logprob: -15.126072883605957
    7. 'n' → logprob: -16.126073837280273
    8. ' len' → logprob: -17.501073837280273
    9. '(len' → logprob: -18.001073837280273
    10. '(' → logprob: -18.001073837280273

Token 156: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0009639846975915134
    2. ' n' → logprob: -7.125964164733887
    3. 'len' → logprob: -8.750964164733887
    4. ' len' → logprob: -13.750964164733887
    5. '   ' → logprob: -15.875964164733887
    6. '	n' → logprob: -17.12596321105957
    7. ' ' → logprob: -17.25096321105957
    8. ')n' → logprob: -18.00096321105957
    9. '
' → logprob: -19.12596321105957
    10. '    ' → logprob: -19.25096321105957

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001872094871941954
    2. ',g' → logprob: -9.000186920166016
    3. ' ,' → logprob: -9.750186920166016
    4. 'g' → logprob: -12.125186920166016
    5. ' g' → logprob: -16.750186920166016
    6. '   ' → logprob: -17.500186920166016
    7. ')' → logprob: -18.375186920166016
    8. ',
' → logprob: -18.875186920166016
    9. '_,' → logprob: -19.000186920166016
    10. '),' → logprob: -19.250186920166016

Token 158: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -6.392202976712724e-06
    2. ' g' → logprob: -12.000006675720215
    3. ')' → logprob: -16.3750057220459
    4. '   ' → logprob: -18.8750057220459
    5. '	g' → logprob: -20.3750057220459
    6. ' ' → logprob: -21.0000057220459
    7. '```' → logprob: -21.1250057220459
    8. '  ' → logprob: -21.8750057220459
    9. '_g' → logprob: -22.0000057220459
    10. '#g' → logprob: -22.1250057220459

Token 159: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000204851632588543
    2. ')
' → logprob: -8.500205039978027
    3. ' )' → logprob: -13.875205039978027
    4. ')

' → logprob: -15.375205039978027
    5. ')
' → logprob: -16.37520408630371
    6. ')n' → logprob: -17.75020408630371
    7. ')#' → logprob: -18.00020408630371
    8. '),' → logprob: -18.12520408630371
    9. ')**' → logprob: -18.75020408630371
    10. ')`' → logprob: -18.87520408630371

Token 160: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0011959441471844912
    2. 'for' → logprob: -7.376195907592773
    3. 'cnt' → logprob: -7.626195907592773
    4. 'import' → logprob: -10.376195907592773
    5. '```' → logprob: -10.626195907592773
    6. 'n' → logprob: -12.126195907592773
    7. ' print' → logprob: -12.876195907592773
    8. 'sys' → logprob: -12.876195907592773
    9. '
' → logprob: -13.251195907592773
    10. '#print' → logprob: -13.376195907592773

Token 161: '(len' (ID: 14990)
  Prédit: '(cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.002268731826916337
    2. '(' → logprob: -6.5022687911987305
    3. '(len' → logprob: -7.6272687911987305
    4. '("' → logprob: -9.37726879119873
    5. '('' → logprob: -9.75226879119873
    6. 'cnt' → logprob: -10.00226879119873
    7. ' (' → logprob: -10.37726879119873
    8. '(n' → logprob: -10.87726879119873
    9. '()' → logprob: -11.00226879119873
    10. '(sum' → logprob: -12.00226879119873

Token 162: '(G' (ID: 12449)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.003415109124034643
    2. '(' → logprob: -6.378415107727051
    3. '(G' → logprob: -6.378415107727051
    4. '(s' → logprob: -13.25341510772705
    5. ')' → logprob: -13.62841510772705
    6. '(str' → logprob: -13.75341510772705
    7. '(a' → logprob: -13.87841510772705
    8. '(S' → logprob: -14.00341510772705
    9. '(C' → logprob: -14.00341510772705
    10. '(
' → logprob: -14.00341510772705

Token 163: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00136368942912668
    2. '))' → logprob: -6.626363754272461
    3. ')
' → logprob: -11.001363754272461
    4. ' )' → logprob: -11.876363754272461
    5. ',' → logprob: -12.376363754272461
    6. '),' → logprob: -12.626363754272461
    7. '+' → logprob: -12.751363754272461
    8. ')))' → logprob: -13.626363754272461
    9. ')>' → logprob: -15.001363754272461
    10. '))
' → logprob: -15.376363754272461

Token 164: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.991464786347933e-05
    2. 'for' → logprob: -9.750060081481934
    3. ' print' → logprob: -13.375060081481934
    4. ' for' → logprob: -18.000059127807617
    5. '```' → logprob: -18.625059127807617
    6. '
' → logprob: -18.875059127807617
    7. '#print' → logprob: -18.875059127807617
    8. ' ' → logprob: -19.625059127807617
    9. '0' → logprob: -19.625059127807617
    10. '(print' → logprob: -20.500059127807617

Token 165: '('' (ID: 706)
  Prédit: '(cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.008294225670397282
    2. '('' → logprob: -5.383294105529785
    3. '(A' → logprob: -6.008294105529785
    4. '(*' → logprob: -7.258294105529785
    5. '("' → logprob: -8.758294105529785
    6. '(' → logprob: -8.758294105529785
    7. '()' → logprob: -9.508294105529785
    8. '(G' → logprob: -10.258294105529785
    9. 'cnt' → logprob: -11.258294105529785
    10. '(f' → logprob: -11.383294105529785

Token 166: ' '.' (ID: 12662)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.13379353284835815
    2. 'cnt' → logprob: -2.258793592453003
    3. 'G' → logprob: -5.508793354034424
    4. '(cnt' → logprob: -5.633793354034424
    5. '(*' → logprob: -5.758793354034424
    6. '*' → logprob: -5.758793354034424
    7. ' '' → logprob: -6.258793354034424
    8. ' *' → logprob: -6.633793354034424
    9. ''g' → logprob: -7.133793354034424
    10. 'g' → logprob: -7.633793354034424

Token 167: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -3.650518920039758e-06
    2. ' join' → logprob: -13.125003814697266
    3. 'print' → logprob: -13.375003814697266
    4. 'j' → logprob: -17.500003814697266
    5. 'jo' → logprob: -18.500003814697266
    6. '```' → logprob: -18.500003814697266
    7. 'sep' → logprob: -18.500003814697266
    8. 'expand' → logprob: -19.375003814697266
    9. '.join' → logprob: -20.000003814697266
    10. 'count' → logprob: -20.500003814697266

Token 168: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.004757034592330456
    2. '(str' → logprob: -5.504756927490234
    3. 'map' → logprob: -7.504756927490234
    4. '[str' → logprob: -9.129756927490234
    5. '([' → logprob: -11.629756927490234
    6. 'str' → logprob: -12.254756927490234
    7. ' map' → logprob: -12.379756927490234
    8. '	map' → logprob: -14.379756927490234
    9. ',map' → logprob: -14.879756927490234
    10. '.map' → logprob: -14.879756927490234

Token 169: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.0009126556105911732
    2. 'str' → logprob: -7.000912666320801
    3. '```' → logprob: -14.6259126663208
    4. '(' → logprob: -15.2509126663208
    5. ' str' → logprob: -15.5009126663208
    6. '	str' → logprob: -16.125911712646484
    7. ',str' → logprob: -17.000911712646484
    8. '[str' → logprob: -17.000911712646484
    9. '=str' → logprob: -17.125911712646484
    10. ')' → logprob: -17.125911712646484

Token 170: ',G' (ID: 66991)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.06197642162442207
    2. '(G' → logprob: -2.811976432800293
    3. '(' → logprob: -12.811976432800293
    4. '((' → logprob: -13.311976432800293
    5. ',A' → logprob: -14.186976432800293
    6. '([' → logprob: -14.311976432800293
    7. '(cnt' → logprob: -14.561976432800293
    8. ' (' → logprob: -14.561976432800293
    9. ')(' → logprob: -14.936976432800293
    10. ',' → logprob: -14.936976432800293

Token 171: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03224379941821098
    2. '))
' → logprob: -3.5322437286376953
    3. ')))' → logprob: -6.032243728637695
    4. ')))
' → logprob: -9.407243728637695
    5. ')' → logprob: -12.782243728637695
    6. ' ))' → logprob: -12.907243728637695
    7. '))
' → logprob: -13.157243728637695
    8. ' ))
' → logprob: -14.782243728637695
    9. '))

' → logprob: -15.407243728637695
    10. '))}
' → logprob: -17.282243728637695

Token 172: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.512236498361744e-07
    2. ' print' → logprob: -15.625000953674316
    3. '#print' → logprob: -15.750000953674316
    4. '
' → logprob: -16.875
    5. 'for' → logprob: -16.875
    6. '```' → logprob: -18.75
    7. '<|end|>' → logprob: -19.375
    8. '.print' → logprob: -19.875
    9. 'Print' → logprob: -20.0
    10. '(print' → logprob: -20.25

Token 173: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -2.696889623621246e-06
    2. 'cnt' → logprob: -13.25000286102295
    3. '(len' → logprob: -15.12500286102295
    4. '(' → logprob: -15.75000286102295
    5. '[cnt' → logprob: -15.75000286102295
    6. ' (' → logprob: -15.75000286102295
    7. '(
' → logprob: -16.250001907348633
    8. '(count' → logprob: -17.750001907348633
    9. '(counter' → logprob: -17.875001907348633
    10. '(cont' → logprob: -17.875001907348633

Token 174: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. ')
' → logprob: -13.500001907348633
    3. ' )' → logprob: -14.750001907348633
    4. '))' → logprob: -17.125001907348633
    5. '())' → logprob: -17.875001907348633
    6. '')' → logprob: -18.250001907348633
    7. ')#' → logprob: -18.875001907348633
    8. ')`' → logprob: -18.875001907348633
    9. '),' → logprob: -19.375001907348633
    10. ')}' → logprob: -19.375001907348633

Token 175: 'print' (ID: 1598)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06200476363301277
    2. 'print' → logprob: -2.812004804611206
    3. ' for' → logprob: -10.562005043029785
    4. '<|end|>' → logprob: -12.312005043029785
    5. '#' → logprob: -13.312005043029785
    6. 'A' → logprob: -13.437005043029785
    7. '[' → logprob: -13.812005043029785
    8. '#print' → logprob: -13.937005043029785
    9. '```' → logprob: -14.812005043029785
    10. 'import' → logprob: -15.437005043029785

Token 176: '('\' (ID: 24345)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.017058080062270164
    2. '('' → logprob: -4.1420578956604
    3. '(' → logprob: -7.5170578956604
    4. '('\' → logprob: -8.392058372497559
    5. '(A' → logprob: -8.642058372497559
    6. '(*(' → logprob: -9.892058372497559
    7. '()' → logprob: -11.517058372497559
    8. ' (*' → logprob: -11.767058372497559
    9. 'A' → logprob: -13.017058372497559
    10. '("' → logprob: -13.142058372497559

Token 177: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09286706149578094
    2. ''' → logprob: -3.217867136001587
    3. '
' → logprob: -3.592867136001587
    4. '\n' → logprob: -4.467866897583008
    5. ''\' → logprob: -4.842866897583008
    6. ' 
' → logprob: -7.717866897583008
    7. 's' → logprob: -8.217866897583008
    8. ''
' → logprob: -8.842866897583008
    9. 'join' → logprob: -9.092866897583008
    10. '(n' → logprob: -9.467866897583008

Token 178: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.0023172497749328613
    2. '.join' → logprob: -6.377317428588867
    3. ''' → logprob: -7.502317428588867
    4. '".' → logprob: -10.877317428588867
    5. ''\' → logprob: -11.002317428588867
    6. '''.' → logprob: -11.127317428588867
    7. '.' → logprob: -11.877317428588867
    8. 'join' → logprob: -12.627317428588867
    9. ' '.' → logprob: -14.127317428588867
    10. ')' → logprob: -14.252317428588867

Token 179: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -6.885492621222511e-05
    2. ''.' → logprob: -9.750068664550781
    3. '''.' → logprob: -12.125068664550781
    4. ' join' → logprob: -12.875068664550781
    5. 'print' → logprob: -13.750068664550781
    6. ''\' → logprob: -14.375068664550781
    7. '.join' → logprob: -15.125068664550781
    8. 'for' → logprob: -15.375068664550781
    9. '.' → logprob: -16.12506866455078
    10. ''' → logprob: -16.50006866455078

Token 180: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00075769261457026
    2. 'map' → logprob: -7.500757694244385
    3. '(str' → logprob: -8.500757217407227
    4. 'str' → logprob: -14.250757217407227
    5. '(' → logprob: -15.125757217407227
    6. ' map' → logprob: -15.375757217407227
    7. '([' → logprob: -15.625757217407227
    8. '	map' → logprob: -16.125757217407227
    9. '(list' → logprob: -16.625757217407227
    10. ' (' → logprob: -17.875757217407227

Token 181: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.0009124171338044107
    2. 'str' → logprob: -7.000912189483643
    3. '=str' → logprob: -15.1259126663208
    4. '[str' → logprob: -15.6259126663208
    5. ',str' → logprob: -15.8759126663208
    6. ' str' → logprob: -16.125911712646484
    7. ')' → logprob: -16.625911712646484
    8. ')(' → logprob: -16.750911712646484
    9. '	str' → logprob: -17.000911712646484
    10. '_str' → logprob: -17.250911712646484

Token 182: ',A' (ID: 59196)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -1.3902033970225602e-05
    2. ',A' → logprob: -11.375014305114746
    3. 'A' → logprob: -13.500014305114746
    4. ')(' → logprob: -14.625014305114746
    5. ',' → logprob: -15.250014305114746
    6. '(' → logprob: -15.875014305114746
    7. ')' → logprob: -16.12501335144043
    8. '[A' → logprob: -17.62501335144043
    9. ' (' → logprob: -17.75001335144043
    10. ' A' → logprob: -17.75001335144043

Token 183: ')))' (ID: 15975)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.04859611392021179
    2. ')))' → logprob: -3.048596143722534
    3. '))
' → logprob: -12.298596382141113
    4. ')' → logprob: -12.798596382141113
    5. '))))' → logprob: -14.798596382141113
    6. '}))' → logprob: -15.048596382141113
    7. ')))
' → logprob: -15.423596382141113
    8. ' ))' → logprob: -15.548596382141113
    9. '()))' → logprob: -15.673596382141113
    10. ']))' → logprob: -15.923596382141113


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 181
Tokens correctement prédits (1ère position, stricte): 78
Tokens correctement prédits (1ère position, avec adaptation): 84
Tokens correctement prédits (top 10): 152
Précision stricte (1ère position): 43.09%
Précision adaptée (1ère position): 46.41%
Précision (top 10): 83.98%
================================================================================
