================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def insertionSort( nums, n, g ):
	cnt = 0
	i = g
	while i < n:
		v = nums[i]
		j = i - g
		while 0 <= j and v < nums[j]:
			nums[ j+g ] = nums[j]
			j -= g
			cnt += 1
		nums[ j+g ] = v
		i += 1
	return cnt
		
def shellSort( nums, n ):
	g = []
	val = 1
	while val <= n:
		g.append( val )
		val = 3*val+1
	
	g.reverse( )
	m = len( g )
	print( m )
	print( " ".join( map( str, g ) ) )
	cnt = 0
	for i in range( m ):
		cnt += insertionSort( nums, n, g[i] )
	print( cnt )
    
n = int( sys.stdin.readline( ) )
nums = []
for i in range( n ):
	nums.append( int( sys.stdin.readline( ) ) )

shellSort( nums, n )
print( "\n".join( map( str, nums ) ) )
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0347585454583168
    2. '\n' → logprob: -4.034758567810059
    3. 'import' → logprob: -4.909758567810059
    4. '<|end|>' → logprob: -5.284758567810059
    5. '\' → logprob: -7.159758567810059
    6. '<|end|>' → logprob: -7.534758567810059
    7. 'newline' → logprob: -7.909758567810059
    8. ',' → logprob: -8.159758567810059
    9. '[' → logprob: -8.284758567810059
    10. '' → logprob: -8.284758567810059

Token 4: ' insertion' (ID: 68881)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0201973095536232
    2. ' ' → logprob: -5.39519739151001
    3. '  ' → logprob: -6.39519739151001
    4. '<|end|>' → logprob: -6.39519739151001
    5. ' process' → logprob: -6.52019739151001
    6. ' space' → logprob: -6.77019739151001
    7. ' sys' → logprob: -6.89519739151001
    8. ' main' → logprob: -6.89519739151001
    9. ' a' → logprob: -7.02019739151001
    10. ')' → logprob: -7.27019739151001

Token 5: 'Sort' (ID: 11602)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0014279751339927316
    2. '(' → logprob: -7.001428127288818
    3. ' _' → logprob: -8.25142765045166
    4. '_space' → logprob: -9.87642765045166
    5. '_insert' → logprob: -10.12642765045166
    6. '_in' → logprob: -10.75142765045166
    7. '```' → logprob: -11.00142765045166
    8. '(_' → logprob: -11.12642765045166
    9. '_s' → logprob: -11.25142765045166
    10. '_(' → logprob: -11.62642765045166

Token 6: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00016754455282352865
    2. '_' → logprob: -10.000167846679688
    3. ':' → logprob: -11.500167846679688
    4. '```' → logprob: -11.500167846679688
    5. ' (' → logprob: -11.875167846679688
    6. '(
' → logprob: -12.125167846679688
    7. '():' → logprob: -12.125167846679688
    8. '(a' → logprob: -12.375167846679688
    9. '(:' → logprob: -12.375167846679688
    10. '(x' → logprob: -12.375167846679688

Token 7: ' nums' (ID: 18117)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.017440982162952423
    2. ' arr' → logprob: -4.2674407958984375
    3. 'array' → logprob: -6.1424407958984375
    4. ')' → logprob: -7.8924407958984375
    5. 'lst' → logprob: -8.392440795898438
    6. ' array' → logprob: -8.517440795898438
    7. ' )' → logprob: -8.642440795898438
    8. '(arr' → logprob: -10.517440795898438
    9. 'data' → logprob: -10.642440795898438
    10. ' lst' → logprob: -10.892440795898438

Token 8: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010488229803740978
    2. ')' → logprob: -5.385488033294678
    3. ',' → logprob: -5.635488033294678
    4. ' ):' → logprob: -6.635488033294678
    5. '[' → logprob: -7.260488033294678
    6. ':' → logprob: -9.135488510131836
    7. '   ' → logprob: -9.510488510131836
    8. '[]):' → logprob: -10.760488510131836
    9. ']:' → logprob: -10.885488510131836
    10. ' ' → logprob: -11.260488510131836

Token 9: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4355897307395935
    2. ')' → logprob: -1.4355897903442383
    3. ' )' → logprob: -3.0605897903442383
    4. ' key' → logprob: -3.8105897903442383
    5. ' i' → logprob: -4.560589790344238
    6. 'n' → logprob: -4.560589790344238
    7. ' start' → logprob: -4.560589790344238
    8. ' size' → logprob: -5.185589790344238
    9. '):' → logprob: -6.935589790344238
    10. 'i' → logprob: -7.060589790344238

Token 10: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010256627574563026
    2. ')' → logprob: -4.635256767272949
    3. ' ):' → logprob: -7.760256767272949
    4. ',' → logprob: -9.76025676727295
    5. ':' → logprob: -12.63525676727295
    6. ' )' → logprob: -12.76025676727295
    7. ' ' → logprob: -12.88525676727295
    8. '[' → logprob: -13.38525676727295
    9. ')：' → logprob: -13.88525676727295
    10. '):
' → logprob: -14.01025676727295

Token 11: ' g' (ID: 329)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.40609729290008545
    2. ' )' → logprob: -2.156097412109375
    3. ' i' → logprob: -2.406097412109375
    4. ')' → logprob: -3.781097412109375
    5. ' ):' → logprob: -4.031097412109375
    6. ' ):
' → logprob: -4.406097412109375
    7. ' pos' → logprob: -4.656097412109375
    8. 'key' → logprob: -4.781097412109375
    9. ' ' → logprob: -4.781097412109375
    10. ' gap' → logprob: -5.281097412109375

Token 12: ' ):
' (ID: 48169)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.04759826883673668
    2. 'aps' → logprob: -3.672598361968994
    3. 'a' → logprob: -4.047598361968994
    4. '):' → logprob: -5.922598361968994
    5. ')' → logprob: -8.172597885131836
    6. '[' → logprob: -9.172597885131836
    7. 'roup' → logprob: -9.422597885131836
    8. '[]):' → logprob: -10.047597885131836
    9. ' ap' → logprob: -10.297597885131836
    10. '=' → logprob: -10.297597885131836

Token 13: '	cnt' (ID: 143135)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014608492143452168
    2. '   ' → logprob: -5.139608383178711
    3. ' :' → logprob: -5.264608383178711
    4. '):' → logprob: -6.514608383178711
    5. ':
' → logprob: -7.139608383178711
    6. ' ' → logprob: -7.764608383178711
    7. ')' → logprob: -8.639608383178711
    8. '':' → logprob: -9.514608383178711
    9. '    ' → logprob: -9.764608383178711
    10. ':\' → logprob: -9.889608383178711

Token 14: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0353691577911377
    2. 't' → logprob: -1.6603691577911377
    3. ' =' → logprob: -2.4103691577911377
    4. ' ' → logprob: -2.9103691577911377
    5. '	t' → logprob: -2.9103691577911377
    6. '[' → logprob: -2.9103691577911377
    7. '	' → logprob: -3.0353691577911377
    8. ' +=' → logprob: -3.1603691577911377
    9. '   ' → logprob: -3.2853691577911377
    10. '\t' → logprob: -3.9103691577911377

Token 15: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6334717869758606
    2. ' ' → logprob: -0.7584717869758606
    3. 'len' → logprob: -8.008471488952637
    4. '	' → logprob: -8.758471488952637
    5. 'n' → logprob: -9.508471488952637
    6. ' n' → logprob: -9.758471488952637
    7. '1' → logprob: -9.883471488952637
    8. ' len' → logprob: -9.883471488952637
    9. 'nums' → logprob: -10.258471488952637
    10. '  ' → logprob: -10.883471488952637

Token 16: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007528659421950579
    2. ' ' → logprob: -5.757528781890869
    3. 'len' → logprob: -5.882528781890869
    4. '1' → logprob: -7.007528781890869
    5. 'n' → logprob: -7.882528781890869
    6. 'g' → logprob: -8.882528305053711
    7. ' len' → logprob: -10.257528305053711
    8. '	' → logprob: -11.007528305053711
    9. ' n' → logprob: -11.382528305053711
    10. '   ' → logprob: -11.882528305053711

Token 17: '
' (ID: 198)
  Prédit: '	for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	for' → logprob: -0.33040133118629456
    2. '	' → logprob: -2.8304014205932617
    3. '	
' → logprob: -3.4554014205932617
    4. ' ' → logprob: -3.5804014205932617
    5. '	while' → logprob: -3.5804014205932617
    6. '	if' → logprob: -3.8304014205932617
    7. '<|end|>' → logprob: -4.080401420593262
    8. ' for' → logprob: -4.330401420593262
    9. '   ' → logprob: -4.580401420593262
    10. '\' → logprob: -4.705401420593262

Token 18: '	i' (ID: 16156)
  Prédit: '	for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	for' → logprob: -0.13808952271938324
    2. ' for' → logprob: -3.388089418411255
    3. '	' → logprob: -3.638089418411255
    4. '	while' → logprob: -4.388089656829834
    5. ' ' → logprob: -4.513089656829834
    6. '	if' → logprob: -4.888089656829834
    7. ':' → logprob: -5.013089656829834
    8. '   ' → logprob: -5.263089656829834
    9. 'for' → logprob: -5.388089656829834
    10. '	i' → logprob: -5.763089656829834

Token 19: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.086132287979126
    2. ' =' → logprob: -1.461132287979126
    3. ' ' → logprob: -1.711132287979126
    4. 'n' → logprob: -2.211132287979126
    5. '  ' → logprob: -3.461132287979126
    6. ' in' → logprob: -3.836132287979126
    7. 'nt' → logprob: -3.961132287979126
    8. ' <' → logprob: -4.211132049560547
    9. ' n' → logprob: -4.461132049560547
    10. ' +=' → logprob: -4.586132049560547

Token 20: ' g' (ID: 329)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6667797565460205
    2. '1' → logprob: -0.9167797565460205
    3. ' g' → logprob: -2.7917797565460205
    4. 'g' → logprob: -4.416779518127441
    5. '	' → logprob: -5.166779518127441
    6. '0' → logprob: -5.416779518127441
    7. '	g' → logprob: -6.541779518127441
    8. ' n' → logprob: -7.416779518127441
    9. 'n' → logprob: -7.541779518127441
    10. '2' → logprob: -8.166779518127441

Token 21: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2117134928703308
    2. ' ' → logprob: -2.4617135524749756
    3. ' +' → logprob: -2.7117135524749756
    4. '<|end|>' → logprob: -4.2117133140563965
    5. ' 
' → logprob: -5.0867133140563965
    6. '  ' → logprob: -5.8367133140563965
    7. '  
' → logprob: -5.8367133140563965
    8. '	
' → logprob: -6.3367133140563965
    9. '   ' → logprob: -6.8367133140563965
    10. '	' → logprob: -6.8367133140563965

Token 22: '	while' (ID: 10883)
  Prédit: '	while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	while' → logprob: -0.5056441426277161
    2. 'while' → logprob: -2.2556440830230713
    3. '+' → logprob: -2.3806440830230713
    4. ' ' → logprob: -3.0056440830230713
    5. '	' → logprob: -3.5056440830230713
    6. ' while' → logprob: -3.5056440830230713
    7. '   ' → logprob: -3.6306440830230713
    8. '<' → logprob: -4.13064432144165
    9. ' <' → logprob: -5.00564432144165
    10. '	for' → logprob: -5.25564432144165

Token 23: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04355240240693092
    2. 'i' → logprob: -3.1685523986816406
    3. '	i' → logprob: -7.668552398681641
    4. ' ' → logprob: -9.79355239868164
    5. ' <' → logprob: -11.54355239868164
    6. '(i' → logprob: -12.16855239868164
    7. '<' → logprob: -12.54355239868164
    8. '	' → logprob: -12.66855239868164
    9. ' (' → logprob: -12.91855239868164
    10. '(' → logprob: -13.41855239868164

Token 24: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.023426340892910957
    2. '<' → logprob: -3.7734262943267822
    3. '<n' → logprob: -8.898426055908203
    4. '<len' → logprob: -10.148426055908203
    5. ' ' → logprob: -13.273426055908203
    6. '<size' → logprob: -14.148426055908203
    7. '<num' → logprob: -14.648426055908203
    8. '	' → logprob: -14.898426055908203
    9. ' lt' → logprob: -15.148426055908203
    10. '<N' → logprob: -15.398426055908203

Token 25: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5760911107063293
    2. ' n' → logprob: -0.8260911107063293
    3. '	n' → logprob: -8.826090812683105
    4. ' ' → logprob: -13.076090812683105
    5. 'len' → logprob: -13.326090812683105
    6. '_n' → logprob: -15.576090812683105
    7. '   ' → logprob: -15.701090812683105
    8. ' len' → logprob: -15.826090812683105
    9. ')n' → logprob: -16.076091766357422
    10. '<n' → logprob: -16.201091766357422

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001395592000335455
    2. ':
' → logprob: -7.2513957023620605
    3. ' :' → logprob: -7.3763957023620605
    4. '	' → logprob: -10.376395225524902
    5. ':i' → logprob: -12.251395225524902
    6. ' :
' → logprob: -12.251395225524902
    7. '):' → logprob: -12.751395225524902
    8. ',' → logprob: -12.876395225524902
    9. ':**' → logprob: -13.251395225524902
    10. ':

' → logprob: -13.501395225524902

Token 27: '	' (ID: 197)
  Prédit: '	'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -1.2573740482330322
    2. ' ' → logprob: -1.5073740482330322
    3. ' 	' → logprob: -1.6323740482330322
    4. '	 ' → logprob: -2.6323740482330322
    5. '		' → logprob: -2.8823740482330322
    6. '	   ' → logprob: -3.1323740482330322
    7. '       ' → logprob: -3.8823740482330322
    8. '  ' → logprob: -4.132373809814453
    9. '   ' → logprob: -4.132373809814453
    10. '    ' → logprob: -4.507373809814453

Token 28: '	v' (ID: 20800)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1038657426834106
    2. ' 	' → logprob: -1.3538657426834106
    3. '	' → logprob: -1.6038657426834106
    4. '		' → logprob: -2.228865623474121
    5. '	 ' → logprob: -3.853865623474121
    6. '  ' → logprob: -4.478865623474121
    7. '   ' → logprob: -4.603865623474121
    8. '	   ' → logprob: -4.853865623474121
    9. '=' → logprob: -5.103865623474121
    10. '	 	' → logprob: -5.478865623474121

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45985716581344604
    2. 'al' → logprob: -1.2098572254180908
    3. '=' → logprob: -2.959857225418091
    4. '	' → logprob: -4.834856986999512
    5. 'alue' → logprob: -5.959856986999512
    6. 'a' → logprob: -6.584856986999512
    7. 'alu' → logprob: -6.584856986999512
    8. 'alid' → logprob: -6.584856986999512
    9. 'als' → logprob: -7.084856986999512
    10. ' ' → logprob: -7.084856986999512

Token 30: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.07892724871635437
    2. ' nums' → logprob: -2.5789272785186768
    3. 'num' → logprob: -10.328927040100098
    4. '	num' → logprob: -12.578927040100098
    5. '(nums' → logprob: -14.703927040100098
    6. ' num' → logprob: -14.828927040100098
    7. '	' → logprob: -15.703927040100098
    8. ' ' → logprob: -15.953927040100098
    9. '_nums' → logprob: -16.328927993774414
    10. 'Nums' → logprob: -17.078927993774414

Token 31: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0017049367306753993
    2. '[' → logprob: -6.376705169677734
    3. '	' → logprob: -13.876705169677734
    4. ' [' → logprob: -14.501705169677734
    5. 'i' → logprob: -14.751705169677734
    6. '	i' → logprob: -15.376705169677734
    7. '```' → logprob: -15.376705169677734
    8. '[
' → logprob: -16.376705169677734
    9. '[v' → logprob: -16.501705169677734
    10. ' ' → logprob: -16.751705169677734

Token 32: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.030826197937130928
    2. ']
' → logprob: -3.5308260917663574
    3. ')' → logprob: -7.905826091766357
    4. ']
' → logprob: -8.655826568603516
    5. '	' → logprob: -8.780826568603516
    6. ' ]' → logprob: -8.780826568603516
    7. '
' → logprob: -9.780826568603516
    8. ']

' → logprob: -10.280826568603516
    9. '<|end|>' → logprob: -11.155826568603516
    10. '```' → logprob: -11.280826568603516

Token 33: '	' (ID: 197)
  Prédit: '	'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -1.957171082496643
    2. '
' → logprob: -1.957171082496643
    3. '		
' → logprob: -1.957171082496643
    4. '<|end|>' → logprob: -1.957171082496643
    5. '	
' → logprob: -2.2071709632873535
    6. ' ' → logprob: -2.3321709632873535
    7. '		' → logprob: -2.4571709632873535
    8. '		 
' → logprob: -3.8321709632873535
    9. '	i' → logprob: -3.9571709632873535
    10. '	 ' → logprob: -4.0821709632873535

Token 34: '	j' (ID: 22672)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.34451085329055786
    2. 'j' → logprob: -2.219510793685913
    3. '		' → logprob: -2.469510793685913
    4. '	j' → logprob: -3.094510793685913
    5. ' ' → logprob: -3.969510793685913
    6. '	' → logprob: -4.094511032104492
    7. ' 	' → logprob: -4.719511032104492
    8. ' while' → logprob: -6.719511032104492
    9. '  ' → logprob: -6.844511032104492
    10. 'while' → logprob: -7.469511032104492

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005606888327747583
    2. '=' → logprob: -5.380606651306152
    3. '	' → logprob: -7.255606651306152
    4. '=i' → logprob: -8.255606651306152
    5. ' ' → logprob: -11.005606651306152
    6. '		' → logprob: -13.255606651306152
    7. '	 ' → logprob: -14.380606651306152
    8. ' 	' → logprob: -14.755606651306152
    9. '=int' → logprob: -15.755606651306152
    10. ' ' → logprob: -16.00560760498047

Token 36: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6932920217514038
    2. ' i' → logprob: -0.6932920217514038
    3. '	i' → logprob: -9.193291664123535
    4. ' ' → logprob: -10.068291664123535
    5. ' ' → logprob: -15.318291664123535
    6. '  ' → logprob: -16.56829261779785
    7. '%i' → logprob: -16.56829261779785
    8. '{i' → logprob: -16.69329261779785
    9. '<|end|>' → logprob: -16.69329261779785
    10. '	' → logprob: -16.94329261779785

Token 37: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.23015202581882477
    2. '-g' → logprob: -2.230152130126953
    3. '-' → logprob: -2.355152130126953
    4. '<|end|>' → logprob: -6.230152130126953
    5. '	' → logprob: -7.605152130126953
    6. '	g' → logprob: -8.230152130126953
    7. '<|end|>' → logprob: -9.605152130126953
    8. ' ' → logprob: -10.355152130126953
    9. '-n' → logprob: -10.480152130126953
    10. '-j' → logprob: -10.605152130126953

Token 38: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0031639374792575836
    2. ' g' → logprob: -6.128163814544678
    3. '	g' → logprob: -7.003163814544678
    4. '1' → logprob: -9.628164291381836
    5. ' ' → logprob: -13.253164291381836
    6. '_g' → logprob: -14.503164291381836
    7. '#g' → logprob: -15.378164291381836
    8. '	' → logprob: -15.503164291381836
    9. '    ' → logprob: -15.628164291381836
    10. '   ' → logprob: -15.878164291381836

Token 39: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: '	' (ID: 197)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: '	while' (ID: 10883)
  Prédit: '	while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	while' → logprob: -0.6565238833427429
    2. '<|end|>' → logprob: -1.0315239429473877
    3. '	
' → logprob: -3.1565239429473877
    4. ' while' → logprob: -4.281523704528809
    5. '		
' → logprob: -4.281523704528809
    6. 'while' → logprob: -4.906523704528809
    7. '
' → logprob: -4.906523704528809
    8. '	' → logprob: -5.031523704528809
    9. ' ' → logprob: -5.531523704528809
    10. '<|end|>' → logprob: -5.656523704528809

Token 42: ' ' (ID: 220)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.3883863389492035
    2. 'j' → logprob: -1.1383863687515259
    3. '	j' → logprob: -6.513386249542236
    4. ' ' → logprob: -11.763386726379395
    5. '	' → logprob: -11.888386726379395
    6. '0' → logprob: -12.013386726379395
    7. '		' → logprob: -13.388386726379395
    8. ' (' → logprob: -13.638386726379395
    9. ':j' → logprob: -13.763386726379395
    10. ',j' → logprob: -13.888386726379395

Token 43: '0' (ID: 15)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06233254447579384
    2. ' j' → logprob: -2.8123326301574707
    3. '	j' → logprob: -7.937332630157471
    4. '0' → logprob: -12.437332153320312
    5. '(j' → logprob: -13.437332153320312
    6. ' ' → logprob: -14.437332153320312
    7. '(' → logprob: -14.437332153320312
    8. ' (' → logprob: -14.687332153320312
    9. '$j' → logprob: -15.062332153320312
    10. '	' → logprob: -16.312332153320312

Token 44: ' <=' (ID: 5017)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.2334943413734436
    2. ' >=' → logprob: -1.6084942817687988
    3. '<=' → logprob: -5.108494281768799
    4. ' <=' → logprob: -6.358494281768799
    5. '>' → logprob: -9.233494758605957
    6. '=' → logprob: -9.608494758605957
    7. '[' → logprob: -10.358494758605957
    8. '	' → logprob: -11.108494758605957
    9. ')' → logprob: -11.483494758605957
    10. ' ' → logprob: -11.733494758605957

Token 45: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.008665625005960464
    2. ' j' → logprob: -4.758665561676025
    3. '	j' → logprob: -9.883666038513184
    4. 'and' → logprob: -17.258665084838867
    5. '$j' → logprob: -17.383665084838867
    6. '<|end|>' → logprob: -17.758665084838867
    7. '[j' → logprob: -18.008665084838867
    8. '   ' → logprob: -18.258665084838867
    9. ' ' → logprob: -18.383665084838867
    10. ' and' → logprob: -18.633665084838867

Token 46: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.31327974796295166
    2. 'and' → logprob: -1.3132797479629517
    3. '	and' → logprob: -11.18828010559082
    4. ' ' → logprob: -12.81328010559082
    5. 'nd' → logprob: -15.06328010559082
    6. ' и' → logprob: -16.06328010559082
    7. '   ' → logprob: -16.06328010559082
    8. '&&' → logprob: -16.18828010559082
    9. '    ' → logprob: -16.56328010559082
    10. '```' → logprob: -16.56328010559082

Token 47: ' v' (ID: 323)
  Prédit: ' nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nums' → logprob: -0.026362420991063118
    2. 'nums' → logprob: -3.651362419128418
    3. ' num' → logprob: -10.401362419128418
    4. '	num' → logprob: -11.151362419128418
    5. '(nums' → logprob: -11.901362419128418
    6. 'num' → logprob: -12.526362419128418
    7. ' ' → logprob: -12.651362419128418
    8. '	' → logprob: -13.526362419128418
    9. 'Nums' → logprob: -14.401362419128418
    10. ' v' → logprob: -14.526362419128418

Token 48: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.05569646134972572
    2. '<' → logprob: -2.930696487426758
    3. ' >' → logprob: -8.055696487426758
    4. ' ' → logprob: -8.805696487426758
    5. '[' → logprob: -9.555696487426758
    6. '>' → logprob: -9.555696487426758
    7. '<int' → logprob: -9.805696487426758
    8. '<num' → logprob: -10.305696487426758
    9. '<n' → logprob: -10.680696487426758
    10. '<v' → logprob: -11.180696487426758

Token 49: ' nums' (ID: 18117)
  Prédit: ' nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nums' → logprob: -0.6931594014167786
    2. 'nums' → logprob: -0.6931594014167786
    3. 'num' → logprob: -11.818159103393555
    4. '(nums' → logprob: -12.693159103393555
    5. '	num' → logprob: -14.318159103393555
    6. ' num' → logprob: -14.818159103393555
    7. '_nums' → logprob: -15.318159103393555
    8. 'Nums' → logprob: -16.068159103393555
    9. 'ums' → logprob: -16.318159103393555
    10. '	' → logprob: -16.318159103393555

Token 50: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -7.52919222577475e-05
    2. '[' → logprob: -9.500075340270996
    3. ' [' → logprob: -16.00007438659668
    4. '[i' → logprob: -16.37507438659668
    5. '\[' → logprob: -17.12507438659668
    6. '	' → logprob: -17.37507438659668
    7. '```' → logprob: -17.87507438659668
    8. '	j' → logprob: -18.12507438659668
    9. 'j' → logprob: -18.75007438659668
    10. '[v' → logprob: -19.00007438659668

Token 51: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.027466922998428345
    2. ']' → logprob: -4.277466773986816
    3. ']:
' → logprob: -5.027466773986816
    4. ':' → logprob: -5.402466773986816
    5. ' ]' → logprob: -6.652466773986816
    6. '[' → logprob: -8.152466773986816
    7. '	' → logprob: -8.902466773986816
    8. ']:
' → logprob: -9.027466773986816
    9. '[j' → logprob: -9.902466773986816
    10. ']:

' → logprob: -10.027466773986816

Token 52: '		' (ID: 335)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5459179282188416
    2. ':
' → logprob: -1.2959179878234863
    3. '	' → logprob: -2.0459179878234863
    4. '		' → logprob: -5.795917987823486
    5. ' :
' → logprob: -5.920917987823486
    6. '```' → logprob: -6.170917987823486
    7. '		
' → logprob: -6.295917987823486
    8. '<|end|>' → logprob: -6.545917987823486
    9. ',' → logprob: -7.295917987823486
    10. '
' → logprob: -7.420917987823486

Token 53: '	num' (ID: 41724)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.6026546955108643
    2. '\n' → logprob: -2.2276546955108643
    3. '		' → logprob: -2.6026546955108643
    4. ' nums' → logprob: -2.7276546955108643
    5. 's' → logprob: -3.1026546955108643
    6. '		
' → logprob: -3.4776546955108643
    7. '			' → logprob: -3.4776546955108643
    8. '	
' → logprob: -4.102654457092285
    9. '			
' → logprob: -4.227654457092285
    10. ' 
' → logprob: -4.602654457092285

Token 54: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0001600347168277949
    2. '[s' → logprob: -9.000160217285156
    3. ' s' → logprob: -10.875160217285156
    4. '[j' → logprob: -11.500160217285156
    5. '	s' → logprob: -12.000160217285156
    6. ')s' → logprob: -14.375160217285156
    7. 'sj' → logprob: -14.875160217285156
    8. '{s' → logprob: -16.000160217285156
    9. '		' → logprob: -16.500160217285156
    10. '`s' → logprob: -16.625160217285156

Token 55: '[' (ID: 58)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.06995199620723724
    2. '[' → logprob: -2.6949520111083984
    3. ' [' → logprob: -12.069952011108398
    4. '[js' → logprob: -12.819952011108398
    5. '[:]' → logprob: -12.819952011108398
    6. '[i' → logprob: -13.944952011108398
    7. '[...]' → logprob: -14.444952011108398
    8. '	' → logprob: -14.569952011108398
    9. '\[' → logprob: -14.819952011108398
    10. '```' → logprob: -15.194952011108398

Token 56: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00039730319986119866
    2. ' j' → logprob: -8.750397682189941
    3. '[j' → logprob: -8.875397682189941
    4. '	j' → logprob: -9.250397682189941
    5. '<|end|>' → logprob: -13.875397682189941
    6. '[' → logprob: -14.250397682189941
    7. ' ' → logprob: -14.625397682189941
    8. '(j' → logprob: -16.250396728515625
    9. '$j' → logprob: -16.250396728515625
    10. '_j' → logprob: -16.375396728515625

Token 57: '+' (ID: 10)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.42710307240486145
    2. '+' → logprob: -1.427103042602539
    3. ' ]' → logprob: -2.302103042602539
    4. ' +' → logprob: -5.677103042602539
    5. '-' → logprob: -6.552103042602539
    6. '-g' → logprob: -6.552103042602539
    7. ']=' → logprob: -7.927103042602539
    8. ' ' → logprob: -8.302103042602539
    9. 'g' → logprob: -8.927103042602539
    10. ' -' → logprob: -9.052103042602539

Token 58: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0003285520360805094
    2. '	g' → logprob: -8.12532901763916
    3. ' g' → logprob: -10.37532901763916
    4. '1' → logprob: -15.25032901763916
    5. ' ' → logprob: -15.37532901763916
    6. '	' → logprob: -15.62532901763916
    7. ''g' → logprob: -15.62532901763916
    8. '#g' → logprob: -15.87532901763916
    9. '_g' → logprob: -16.375328063964844
    10. '    ' → logprob: -16.875328063964844

Token 59: ' ]' (ID: 6045)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3869003355503082
    2. ' ]' → logprob: -1.1369003057479858
    3. ']=' → logprob: -10.511899948120117
    4. '	' → logprob: -14.011899948120117
    5. '=' → logprob: -14.261899948120117
    6. ' ]

' → logprob: -15.636899948120117
    7. ')' → logprob: -15.761899948120117
    8. ' =' → logprob: -16.511899948120117
    9. ' ' → logprob: -16.761899948120117
    10. '']' → logprob: -16.761899948120117

Token 60: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048591457307338715
    2. ' =' → logprob: -3.048591375350952
    3. '<|end|>' → logprob: -13.173591613769531
    4. '	' → logprob: -14.673591613769531
    5. '=

' → logprob: -15.048591613769531
    6. '＝' → logprob: -15.548591613769531
    7. ' ' → logprob: -15.673591613769531
    8. ']' → logprob: -15.673591613769531
    9. '=}' → logprob: -15.923591613769531
    10. ' =)' → logprob: -15.923591613769531

Token 61: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.01851745881140232
    2. ' nums' → logprob: -4.01851749420166
    3. 'num' → logprob: -8.01851749420166
    4. '	num' → logprob: -10.26851749420166
    5. ' num' → logprob: -13.14351749420166
    6. '(nums' → logprob: -14.39351749420166
    7. ' ' → logprob: -14.76851749420166
    8. '	' → logprob: -15.14351749420166
    9. 'numbers' → logprob: -16.268516540527344
    10. '		' → logprob: -16.643516540527344

Token 62: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.4740792512893677
    2. '[' → logprob: -0.9740792512893677
    3. '[js' → logprob: -13.474079132080078
    4. ' [' → logprob: -15.099079132080078
    5. '[
' → logprob: -15.974079132080078
    6. '[q' → logprob: -16.849079132080078
    7. 'j' → logprob: -16.974079132080078
    8. '[g' → logprob: -16.974079132080078
    9. '[u' → logprob: -17.474079132080078
    10. '[i' → logprob: -17.599079132080078

Token 63: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6258583068847656
    2. '		' → logprob: -1.0008583068847656
    3. '	' → logprob: -2.5008583068847656
    4. '			' → logprob: -5.250858306884766
    5. ')
' → logprob: -5.625858306884766
    6. ']' → logprob: -5.750858306884766
    7. ' )' → logprob: -7.875858306884766
    8. '				' → logprob: -8.000858306884766
    9. '<|end|>' → logprob: -8.250858306884766
    10. ' 		' → logprob: -8.375858306884766

Token 64: '		' (ID: 335)
  Prédit: '		'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -1.0409823656082153
    2. '	j' → logprob: -1.2909823656082153
    3. '	' → logprob: -1.5409823656082153
    4. '	
' → logprob: -2.915982246398926
    5. '		
' → logprob: -2.915982246398926
    6. '			
' → logprob: -4.165982246398926
    7. '			' → logprob: -5.665982246398926
    8. ' 
' → logprob: -5.790982246398926
    9. '\n' → logprob: -5.915982246398926
    10. '				
' → logprob: -6.040982246398926

Token 65: '	j' (ID: 22672)
  Prédit: '		'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.7030340433120728
    2. '	j' → logprob: -0.7030340433120728
    3. '	' → logprob: -5.453033924102783
    4. 'j' → logprob: -5.453033924102783
    5. '			' → logprob: -7.078033924102783
    6. '[j' → logprob: -9.578034400939941
    7. '				' → logprob: -9.828034400939941
    8. '	 	' → logprob: -10.078034400939941
    9. '\t' → logprob: -10.328034400939941
    10. ' 		' → logprob: -10.328034400939941

Token 66: ' -=' (ID: 12583)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.721167266368866
    2. ' -=' → logprob: -0.971167266368866
    3. '-=' → logprob: -2.9711673259735107
    4. '=' → logprob: -2.9711673259735107
    5. ' -' → logprob: -3.5961673259735107
    6. ' =' → logprob: -5.971167087554932
    7. '		' → logprob: -6.721167087554932
    8. '	' → logprob: -7.221167087554932
    9. '<|end|>' → logprob: -8.47116756439209
    10. ' ' → logprob: -8.59616756439209

Token 67: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0010496005415916443
    2. ' g' → logprob: -6.876049518585205
    3. '	g' → logprob: -11.126049995422363
    4. '1' → logprob: -13.251049995422363
    5. ' ' → logprob: -15.501049995422363
    6. '6' → logprob: -18.376049041748047
    7. '	' → logprob: -18.501049041748047
    8. '#g' → logprob: -18.501049041748047
    9. '    ' → logprob: -18.876049041748047
    10. '   ' → logprob: -19.001049041748047

Token 68: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7206951379776001
    2. '	' → logprob: -1.0956951379776
    3. '		
' → logprob: -2.3456950187683105
    4. ' 
' → logprob: -3.7206950187683105
    5. '	
' → logprob: -3.8456950187683105
    6. '		' → logprob: -4.4706950187683105
    7. '
' → logprob: -5.2206950187683105
    8. ' 	' → logprob: -5.3456950187683105
    9. ' ' → logprob: -6.0956950187683105
    10. '\t' → logprob: -6.3456950187683105

Token 69: '		' (ID: 335)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.0011398615315556526
    2. '		' → logprob: -7.8761396408081055
    3. '		
' → logprob: -8.251139640808105
    4. '```' → logprob: -9.251139640808105
    5. '\t' → logprob: -9.376139640808105
    6. '
' → logprob: -9.501139640808105
    7. '	num' → logprob: -10.126139640808105
    8. ' 	' → logprob: -10.251139640808105
    9. '       ' → logprob: -10.376139640808105
    10. '[' → logprob: -10.501139640808105

Token 70: '	cnt' (ID: 143135)
  Prédit: '	cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	cnt' → logprob: -0.12792238593101501
    2. 'cnt' → logprob: -2.377922296524048
    3. '	num' → logprob: -4.627922534942627
    4. '	' → logprob: -4.627922534942627
    5. '1' → logprob: -5.502922534942627
    6. '	count' → logprob: -6.127922534942627
    7. ' cnt' → logprob: -7.002922534942627
    8. '		' → logprob: -9.127922058105469
    9. '	c' → logprob: -9.127922058105469
    10. 'num' → logprob: -9.502922058105469

Token 71: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18150833249092102
    2. ' +=' → logprob: -1.9315083026885986
    3. '+=' → logprob: -3.9315083026885986
    4. ' +' → logprob: -6.931508541107178
    5. '++' → logprob: -8.05650806427002
    6. ' ' → logprob: -9.55650806427002
    7. '<|end|>' → logprob: -10.05650806427002
    8. '+++' → logprob: -10.43150806427002
    9. '=' → logprob: -13.43150806427002
    10. '+='' → logprob: -13.80650806427002

Token 72: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015024791937321424
    2. ' ' → logprob: -6.501502513885498
    3. '	' → logprob: -15.87650203704834
    4. '		' → logprob: -17.626502990722656
    5. '0' → logprob: -19.126502990722656
    6. '１' → logprob: -19.376502990722656
    7. ' ' → logprob: -19.751502990722656
    8. '   ' → logprob: -20.001502990722656
    9. '+' → logprob: -20.126502990722656
    10. '' → logprob: -20.376502990722656

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '	' → logprob: -20.125001907348633
    4. '<|end|>' → logprob: -21.500001907348633
    5. '１' → logprob: -21.750001907348633
    6. '0' → logprob: -22.500001907348633
    7. '		' → logprob: -22.875001907348633
    8. '  ' → logprob: -23.500001907348633
    9. '```' → logprob: -23.750001907348633
    10. '۱' → logprob: -24.000001907348633

Token 74: '
' (ID: 198)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	' → logprob: -0.009954053908586502
    2. '	num' → logprob: -4.63495397567749
    3. '		
' → logprob: -9.509954452514648
    4. '		' → logprob: -10.509954452514648
    5. '[num' → logprob: -11.009954452514648
    6. 'num' → logprob: -11.259954452514648
    7. '       ' → logprob: -11.509954452514648
    8. '	return' → logprob: -12.134954452514648
    9. '		
' → logprob: -12.259954452514648
    10. '	n' → logprob: -12.259954452514648

Token 75: '	' (ID: 197)
  Prédit: '	'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.003653052495792508
    2. '	num' → logprob: -5.628653049468994
    3. 'num' → logprob: -10.378653526306152
    4. 'nums' → logprob: -11.878653526306152
    5. '		
' → logprob: -12.378653526306152
    6. '[num' → logprob: -12.628653526306152
    7. '		' → logprob: -12.878653526306152
    8. '       ' → logprob: -14.503653526306152
    9. '[' → logprob: -14.753653526306152
    10. ')' → logprob: -14.878653526306152

Token 76: '	num' (ID: 41724)
  Prédit: '	num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	num' → logprob: -0.00471848389133811
    2. 'nums' → logprob: -5.87971830368042
    3. 'num' → logprob: -6.87971830368042
    4. '	' → logprob: -7.37971830368042
    5. '	n' → logprob: -9.754718780517578
    6. ' nums' → logprob: -9.879718780517578
    7. ' num' → logprob: -10.504718780517578
    8. '[' → logprob: -10.629718780517578
    9. '[num' → logprob: -10.754718780517578
    10. ')' → logprob: -11.254718780517578

Token 77: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -5.676981345459353e-06
    2. '[' → logprob: -13.000005722045898
    3. '[s' → logprob: -13.250005722045898
    4. 'nums' → logprob: -14.250005722045898
    5. '	s' → logprob: -14.750005722045898
    6. '[j' → logprob: -15.875005722045898
    7. '	' → logprob: -16.5000057220459
    8. '		' → logprob: -16.6250057220459
    9. '[i' → logprob: -16.7500057220459
    10. 'ums' → logprob: -17.0000057220459

Token 78: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10021431744098663
    2. '[j' → logprob: -2.3502142429351807
    3. ' [' → logprob: -11.850214004516602
    4. '[
' → logprob: -15.850214004516602
    5. '	j' → logprob: -16.6002140045166
    6. '	' → logprob: -16.9752140045166
    7. '[js' → logprob: -17.1002140045166
    8. '```' → logprob: -17.2252140045166
    9. '[i' → logprob: -17.4752140045166
    10. ' j' → logprob: -17.9752140045166

Token 79: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.05087539926171303
    2. ' j' → logprob: -3.050875425338745
    3. '[j' → logprob: -6.175875186920166
    4. '	j' → logprob: -8.800875663757324
    5. '[' → logprob: -9.925875663757324
    6. ' [' → logprob: -13.050875663757324
    7. '][' → logprob: -13.300875663757324
    8. ' ' → logprob: -13.550875663757324
    9. '	' → logprob: -14.925875663757324
    10. ']' → logprob: -14.925875663757324

Token 80: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.849109119386412e-06
    2. ' +' → logprob: -11.875009536743164
    3. '+]' → logprob: -13.375009536743164
    4. '+
' → logprob: -14.750009536743164
    5. 'g' → logprob: -15.625009536743164
    6. '+j' → logprob: -15.875009536743164
    7. '+s' → logprob: -16.000009536743164
    8. '+</' → logprob: -16.375009536743164
    9. '+

' → logprob: -16.625009536743164
    10. '+)' → logprob: -16.750009536743164

Token 81: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -3.6550729419104755e-05
    2. ' g' → logprob: -10.375036239624023
    3. '	g' → logprob: -13.125036239624023
    4. ''g' → logprob: -13.375036239624023
    5. '<|end|>' → logprob: -13.875036239624023
    6. ' ' → logprob: -14.875036239624023
    7. '#g' → logprob: -15.375036239624023
    8. '+' → logprob: -16.875036239624023
    9. '```' → logprob: -17.375036239624023
    10. '*g' → logprob: -17.500036239624023

Token 82: ' ]' (ID: 6045)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011071285232901573
    2. ' ]' → logprob: -4.51107120513916
    3. ']=' → logprob: -10.76107120513916
    4. '=' → logprob: -13.26107120513916
    5. ' =' → logprob: -15.26107120513916
    6. '']' → logprob: -15.63607120513916
    7. '`]' → logprob: -17.011072158813477
    8. '	' → logprob: -17.136072158813477
    9. '"]' → logprob: -17.511072158813477
    10. ')' → logprob: -17.511072158813477

Token 83: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692873179912567
    2. ' =' → logprob: -2.1269288063049316
    3. '＝' → logprob: -14.501928329467773
    4. '=

' → logprob: -16.001928329467773
    5. '=s' → logprob: -17.876928329467773
    6. '	' → logprob: -17.876928329467773
    7. ']=' → logprob: -18.126928329467773
    8. '.=' → logprob: -18.126928329467773
    9. ' ' → logprob: -18.251928329467773
    10. ']' → logprob: -18.251928329467773

Token 84: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.003179975086823106
    2. ' v' → logprob: -5.753180027008057
    3. '	v' → logprob: -13.003179550170898
    4. '<v' → logprob: -20.7531795501709
    5. '$v' → logprob: -20.7531795501709
    6. 'vq' → logprob: -21.3781795501709
    7. '.v' → logprob: -21.6281795501709
    8. '*v' → logprob: -21.8781795501709
    9. ')v' → logprob: -21.8781795501709
    10. '[v' → logprob: -21.8781795501709

Token 85: '
' (ID: 198)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.005404150113463402
    2. '		
' → logprob: -5.505403995513916
    3. '	i' → logprob: -7.005403995513916
    4. '\n' → logprob: -9.255404472351074
    5. '	
' → logprob: -9.630404472351074
    6. '
' → logprob: -9.880404472351074
    7. '	return' → logprob: -10.130404472351074
    8. '' → logprob: -10.255404472351074
    9. '		' → logprob: -10.380404472351074
    10. '		
' → logprob: -11.005404472351074

Token 86: '	' (ID: 197)
  Prédit: '	'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.004294096026569605
    2. '	i' → logprob: -5.504293918609619
    3. '		
' → logprob: -8.879294395446777
    4. '	return' → logprob: -10.629294395446777
    5. 'i' → logprob: -11.629294395446777
    6. '		' → logprob: -11.754294395446777
    7. '	
' → logprob: -12.129294395446777
    8. '```' → logprob: -12.254294395446777
    9. '
' → logprob: -12.754294395446777
    10. '' → logprob: -12.879294395446777

Token 87: '	i' (ID: 16156)
  Prédit: '	i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	i' → logprob: -0.21836334466934204
    2. '	' → logprob: -1.7183632850646973
    3. 'i' → logprob: -4.093363285064697
    4. ' i' → logprob: -9.468363761901855
    5. '		
' → logprob: -11.343363761901855
    6. '		' → logprob: -11.968363761901855
    7. '   ' → logprob: -12.343363761901855
    8. '[i' → logprob: -12.593363761901855
    9. '	
' → logprob: -12.718363761901855
    10. '```' → logprob: -12.843363761901855

Token 88: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06818103790283203
    2. ' +=' → logprob: -2.818181037902832
    3. '+=' → logprob: -5.193181037902832
    4. ' +' → logprob: -7.443181037902832
    5. '++' → logprob: -10.068181037902832
    6. '+++' → logprob: -12.443181037902832
    7. ' ' → logprob: -13.193181037902832
    8. '<|end|>' → logprob: -13.318181037902832
    9. '+='' → logprob: -13.693181037902832
    10. '+="' → logprob: -13.943181037902832

Token 89: ' ' (ID: 220)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.012381556443870068
    2. ' g' → logprob: -4.512381553649902
    3. '1' → logprob: -6.637381553649902
    4. '	g' → logprob: -11.137381553649902
    5. ' ' → logprob: -11.762381553649902
    6. '_g' → logprob: -17.01238250732422
    7. '#g' → logprob: -17.51238250732422
    8. '.g' → logprob: -18.13738250732422
    9. ':g' → logprob: -19.01238250732422
    10. '*g' → logprob: -19.01238250732422

Token 90: '1' (ID: 16)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0017088521271944046
    2. '1' → logprob: -6.376708984375
    3. ' g' → logprob: -12.126708984375
    4. '	g' → logprob: -13.626708984375
    5. ' ' → logprob: -17.251708984375
    6. '#g' → logprob: -17.876708984375
    7. '.g' → logprob: -18.751708984375
    8. '_g' → logprob: -19.251708984375
    9. '*g' → logprob: -19.251708984375
    10. '4' → logprob: -20.251708984375

Token 91: '
' (ID: 198)
  Prédit: '	return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	return' → logprob: -0.04216022416949272
    2. '	
' → logprob: -3.5421602725982666
    3. '
' → logprob: -5.0421600341796875
    4. 'return' → logprob: -6.2921600341796875
    5. '<|end|>' → logprob: -7.2921600341796875
    6. '	' → logprob: -7.4171600341796875
    7. '' → logprob: -7.5421600341796875
    8. '  
' → logprob: -7.7921600341796875
    9. '		
' → logprob: -7.9171600341796875
    10. '\n' → logprob: -7.9171600341796875

Token 92: '	return' (ID: 1393)
  Prédit: '	return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	return' → logprob: -0.0032966553699225187
    2. 'return' → logprob: -5.878296852111816
    3. '	
' → logprob: -8.628296852111816
    4. ' return' → logprob: -9.253296852111816
    5. '   ' → logprob: -9.503296852111816
    6. '	' → logprob: -10.128296852111816
    7. '<|end|>' → logprob: -10.378296852111816
    8. '```' → logprob: -10.753296852111816
    9. '		
' → logprob: -11.878296852111816
    10. ':return' → logprob: -12.003296852111816

Token 93: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.10028667747974396
    2. ' cnt' → logprob: -2.3502867221832275
    3. '(cnt' → logprob: -9.725286483764648
    4. '	cnt' → logprob: -10.975286483764648
    5. '[cnt' → logprob: -12.725286483764648
    6. 'cn' → logprob: -16.60028648376465
    7. 'c' → logprob: -16.72528648376465
    8. '_cnt' → logprob: -17.47528648376465
    9. ' ' → logprob: -17.60028648376465
    10. 'count' → logprob: -17.97528648376465

Token 94: '
		
' (ID: 53318)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.061897989362478256
    2. '<|end|>' → logprob: -3.5618979930877686
    3. '\n' → logprob: -4.0618977546691895
    4. '

' → logprob: -4.9368977546691895
    5. '' → logprob: -5.9368977546691895
    6. 'def' → logprob: -6.6868977546691895
    7. '```' → logprob: -7.1868977546691895
    8. '


' → logprob: -7.5618977546691895
    9. '
' → logprob: -7.9368977546691895
    10. '<|end|>' → logprob: -8.061898231506348

Token 95: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09994975477457047
    2. '
' → logprob: -3.224949836730957
    3. '<|end|>' → logprob: -3.349949836730957
    4. '\n' → logprob: -4.724949836730957
    5. '	
' → logprob: -6.224949836730957
    6. '' → logprob: -6.224949836730957
    7. '```' → logprob: -6.474949836730957
    8. '

' → logprob: -7.349949836730957
    9. '<|end|>' → logprob: -7.349949836730957
    10. 'n' → logprob: -7.474949836730957

Token 96: ' shell' (ID: 20059)
  Prédit: ' shell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shell' → logprob: -0.04580269381403923
    2. 'shell' → logprob: -3.170802593231201
    3. '_shell' → logprob: -6.295802593231201
    4. ' Shell' → logprob: -7.295802593231201
    5. 'Shell' → logprob: -8.79580307006836
    6. ' comb' → logprob: -9.92080307006836
    7. ' insertion' → logprob: -10.67080307006836
    8. ' ' → logprob: -10.92080307006836
    9. '   ' → logprob: -12.17080307006836
    10. '-shell' → logprob: -12.54580307006836

Token 97: 'Sort' (ID: 11602)
  Prédit: 'Sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sort' → logprob: -0.006902921013534069
    2. 'sort' → logprob: -5.006902694702148
    3. '_sort' → logprob: -8.631902694702148
    4. ' sort' → logprob: -12.631902694702148
    5. 'S' → logprob: -13.131902694702148
    6. ' Sort' → logprob: -14.006902694702148
    7. '_S' → logprob: -14.381902694702148
    8. 'Sor' → logprob: -14.631902694702148
    9. 'So' → logprob: -14.756902694702148
    10. '-sort' → logprob: -15.131902694702148

Token 98: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0024779161904007196
    2. '(nums' → logprob: -6.002478122711182
    3. '(num' → logprob: -13.502477645874023
    4. '(arr' → logprob: -15.752477645874023
    5. ' (' → logprob: -15.752477645874023
    6. '(s' → logprob: -15.877477645874023
    7. '(numbers' → logprob: -15.877477645874023
    8. '(n' → logprob: -15.877477645874023
    9. '(
' → logprob: -16.877477645874023
    10. '(array' → logprob: -16.877477645874023

Token 99: ' nums' (ID: 18117)
  Prédit: ' nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nums' → logprob: -0.475052148103714
    2. 'nums' → logprob: -0.9750521183013916
    3. ' arr' → logprob: -8.100051879882812
    4. 'arr' → logprob: -8.475051879882812
    5. '(nums' → logprob: -8.725051879882812
    6. ',' → logprob: -9.225051879882812
    7. ')' → logprob: -10.100051879882812
    8. ' ' → logprob: -10.475051879882812
    9. ' )' → logprob: -10.475051879882812
    10. ' a' → logprob: -10.850051879882812

Token 100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016516048344783485
    2. ',n' → logprob: -8.875164985656738
    3. ' ,' → logprob: -10.750164985656738
    4. '):' → logprob: -12.750164985656738
    5. ' ):' → logprob: -14.375164985656738
    6. '	' → logprob: -15.375164985656738
    7. ',num' → logprob: -16.625165939331055
    8. ')' → logprob: -17.750165939331055
    9. '	n' → logprob: -18.125165939331055
    10. ' ' → logprob: -18.375165939331055

Token 101: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6958823800086975
    2. ' n' → logprob: -0.6958823800086975
    3. '	n' → logprob: -5.945882320404053
    4. ' ' → logprob: -10.320882797241211
    5. ')n' → logprob: -10.570882797241211
    6. ')' → logprob: -10.945882797241211
    7. ' )' → logprob: -11.820882797241211
    8. 'nums' → logprob: -12.195882797241211
    9. '):
' → logprob: -12.570882797241211
    10. '	' → logprob: -12.695882797241211

Token 102: ' ):
' (ID: 48169)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00801777932792902
    2. '):' → logprob: -5.2580180168151855
    3. ' ):' → logprob: -6.1330180168151855
    4. ',g' → logprob: -7.8830180168151855
    5. '	' → logprob: -9.133017539978027
    6. ' ,' → logprob: -9.508017539978027
    7. ')' → logprob: -11.133017539978027
    8. ' )' → logprob: -11.508017539978027
    9. '):
' → logprob: -11.508017539978027
    10. ' ):
' → logprob: -12.383017539978027

Token 103: '	g' (ID: 9663)
  Prédit: '	cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	cnt' → logprob: -0.5393326282501221
    2. 'cnt' → logprob: -1.164332628250122
    3. '	g' → logprob: -2.539332628250122
    4. 'g' → logprob: -4.539332389831543
    5. ' cnt' → logprob: -4.914332389831543
    6. '	count' → logprob: -6.289332389831543
    7. 'gap' → logprob: -6.664332389831543
    8. '	c' → logprob: -6.789332389831543
    9. '	m' → logprob: -7.789332389831543
    10. '	ans' → logprob: -7.914332389831543

Token 104: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6770557165145874
    2. ' =' → logprob: -1.5520557165145874
    3. 'aps' → logprob: -1.8020557165145874
    4. 'ap' → logprob: -2.552055835723877
    5. 's' → logprob: -4.177055835723877
    6. '=[]' → logprob: -4.177055835723877
    7. '	' → logprob: -6.177055835723877
    8. 'enerated' → logprob: -7.052055835723877
    9. '=[]
' → logprob: -7.302055835723877
    10. 'enerate' → logprob: -7.427055835723877

Token 105: ' []
' (ID: 8911)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4704609811306
    2. '[n' → logprob: -1.4704610109329224
    3. '1' → logprob: -2.720460891723633
    4. '[' → logprob: -2.970460891723633
    5. ' n' → logprob: -4.470460891723633
    6. ' [' → logprob: -4.970460891723633
    7. ' ' → logprob: -5.595460891723633
    8. '[]' → logprob: -5.845460891723633
    9. '3' → logprob: -7.095460891723633
    10. '(n' → logprob: -7.470460891723633

Token 106: '	val' (ID: 42587)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.34809479117393494
    2. 'k' → logprob: -1.5980948209762573
    3. 'gap' → logprob: -3.0980947017669678
    4. 'm' → logprob: -4.098094940185547
    5. 'd' → logprob: -4.598094940185547
    6. '	h' → logprob: -5.098094940185547
    7. '	k' → logprob: -5.598094940185547
    8. ' h' → logprob: -6.098094940185547
    9. '	g' → logprob: -6.848094940185547
    10. 't' → logprob: -6.973094940185547

Token 107: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08895441144704819
    2. 'ue' → logprob: -2.713954448699951
    3. '=' → logprob: -4.588954448699951
    4. 'ues' → logprob: -4.838954448699951
    5. 'e' → logprob: -8.463953971862793
    6. 's' → logprob: -8.588953971862793
    7. 'es' → logprob: -8.713953971862793
    8. '	' → logprob: -9.713953971862793
    9. 'id' → logprob: -10.588953971862793
    10. '=int' → logprob: -11.088953971862793

Token 108: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006258073262870312
    2. 'n' → logprob: -5.381258010864258
    3. ' ' → logprob: -6.631258010864258
    4. '[' → logprob: -9.381258010864258
    5. '[n' → logprob: -9.506258010864258
    6. ' n' → logprob: -10.506258010864258
    7. '(n' → logprob: -10.506258010864258
    8. '(' → logprob: -10.631258010864258
    9. '0' → logprob: -10.756258010864258
    10. '3' → logprob: -11.631258010864258

Token 109: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007710324716754258
    2. 'n' → logprob: -7.8757710456848145
    3. '0' → logprob: -8.875770568847656
    4. ' ' → logprob: -9.125770568847656
    5. '[' → logprob: -9.750770568847656
    6. '3' → logprob: -10.875770568847656
    7. '[n' → logprob: -11.125770568847656
    8. '(' → logprob: -11.500770568847656
    9. '(n' → logprob: -11.625770568847656
    10. '2' → logprob: -12.375770568847656

Token 110: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2955703139305115
    2. '	while' → logprob: -2.1705703735351562
    3. '<|end|>' → logprob: -2.7955703735351562
    4. ' while' → logprob: -3.0455703735351562
    5. '
' → logprob: -4.045570373535156
    6. '	
' → logprob: -4.545570373535156
    7. '<|end|>' → logprob: -6.920570373535156
    8. ' 
' → logprob: -7.045570373535156
    9. '*' → logprob: -7.420570373535156
    10. '+' → logprob: -8.045570373535156

Token 111: '	while' (ID: 10883)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.8171074390411377
    2. '	while' → logprob: -0.8171074390411377
    3. ' while' → logprob: -2.1921074390411377
    4. 'val' → logprob: -5.817107200622559
    5. '	val' → logprob: -6.317107200622559
    6. ' val' → logprob: -9.692107200622559
    7. '	
' → logprob: -10.442107200622559
    8. 'g' → logprob: -12.442107200622559
    9. 'While' → logprob: -12.567107200622559
    10. '	g' → logprob: -12.567107200622559

Token 112: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.038063179701566696
    2. ' val' → logprob: -3.2880632877349854
    3. '	val' → logprob: -10.788063049316406
    4. '(val' → logprob: -14.538063049316406
    5. '1' → logprob: -15.788063049316406
    6. '_val' → logprob: -15.913063049316406
    7. ' ' → logprob: -16.163063049316406
    8. '[val' → logprob: -16.663063049316406
    9. ',val' → logprob: -17.038063049316406
    10. '.val' → logprob: -17.163063049316406

Token 113: ' <=' (ID: 5017)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3126348853111267
    2. ' <' → logprob: -1.4376349449157715
    3. ' <=' → logprob: -4.0626349449157715
    4. '<=' → logprob: -4.5626349449157715
    5. '*' → logprob: -6.0626349449157715
    6. ' *' → logprob: -7.1876349449157715
    7. '<n' → logprob: -9.062634468078613
    8. '<len' → logprob: -9.312634468078613
    9. '	' → logprob: -10.437634468078613
    10. '<<' → logprob: -11.562634468078613

Token 114: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006358166225254536
    2. ' n' → logprob: -5.1313581466674805
    3. '	n' → logprob: -7.7563581466674805
    4. '(n' → logprob: -14.50635814666748
    5. ' ' → logprob: -15.00635814666748
    6. ' ' → logprob: -15.50635814666748
    7. '	' → logprob: -16.131359100341797
    8. '<n' → logprob: -17.006359100341797
    9. '  ' → logprob: -17.381359100341797
    10. '(' → logprob: -17.381359100341797

Token 115: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5321905016899109
    2. ':
' → logprob: -1.2821905612945557
    3. 'val' → logprob: -2.5321905612945557
    4. '//' → logprob: -3.2821905612945557
    5. '*' → logprob: -4.782190322875977
    6. ' :' → logprob: -5.907190322875977
    7. ' :
' → logprob: -6.782190322875977
    8. ' //' → logprob: -6.907190322875977
    9. '	' → logprob: -7.032190322875977
    10. '://' → logprob: -7.157190322875977

Token 116: '	' (ID: 197)
  Prédit: '	val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	val' → logprob: -0.13409380614757538
    2. 'val' → logprob: -2.384093761444092
    3. '	g' → logprob: -3.509093761444092
    4. 'g' → logprob: -6.759093761444092
    5. ' val' → logprob: -6.759093761444092
    6. '	' → logprob: -7.134093761444092
    7. '	if' → logprob: -9.00909423828125
    8. '	v' → logprob: -9.63409423828125
    9. ' g' → logprob: -11.13409423828125
    10. '	s' → logprob: -11.63409423828125

Token 117: '	g' (ID: 9663)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.23665021359920502
    2. '	val' → logprob: -1.7366502285003662
    3. 'g' → logprob: -3.736650228500366
    4. '	g' → logprob: -4.736649990081787
    5. ' val' → logprob: -6.361649990081787
    6. '	' → logprob: -8.486650466918945
    7. ' g' → logprob: -9.986650466918945
    8. '	v' → logprob: -11.236650466918945
    9. '```' → logprob: -12.236650466918945
    10. '   ' → logprob: -12.236650466918945

Token 118: '.append' (ID: 3709)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0322127528488636
    2. '=' → logprob: -3.782212734222412
    3. '.append' → logprob: -5.032212734222412
    4. ' *=' → logprob: -6.657212734222412
    5. '	' → logprob: -8.28221321105957
    6. ' <<=' → logprob: -8.40721321105957
    7. ' ' → logprob: -8.53221321105957
    8. '.' → logprob: -8.78221321105957
    9. ' +=' → logprob: -8.78221321105957
    10. '*=' → logprob: -9.90721321105957

Token 119: '(' (ID: 7)
  Prédit: '(val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.0068741487339138985
    2. '(' → logprob: -5.006874084472656
    3. 'val' → logprob: -9.631874084472656
    4. '((' → logprob: -10.131874084472656
    5. ' val' → logprob: -10.881874084472656
    6. '(int' → logprob: -11.381874084472656
    7. ' (' → logprob: -11.506874084472656
    8. '	val' → logprob: -11.506874084472656
    9. '(n' → logprob: -13.756874084472656
    10. '[val' → logprob: -14.381874084472656

Token 120: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.01388973742723465
    2. ' val' → logprob: -4.388889789581299
    3. '	val' → logprob: -6.638889789581299
    4. 'n' → logprob: -10.38888931274414
    5. '	' → logprob: -11.13888931274414
    6. ' ' → logprob: -12.26388931274414
    7. '1' → logprob: -12.38888931274414
    8. ' n' → logprob: -13.01388931274414
    9. '3' → logprob: -13.13888931274414
    10. 'v' → logprob: -13.63888931274414

Token 121: ' )
' (ID: 3270)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5759931206703186
    2. '*' → logprob: -0.8259931206703186
    3. 'val' → logprob: -10.575993537902832
    4. ')' → logprob: -11.825993537902832
    5. '	' → logprob: -12.075993537902832
    6. ' ' → logprob: -12.575993537902832
    7. ' val' → logprob: -13.075993537902832
    8. ' )' → logprob: -13.325993537902832
    9. '
' → logprob: -13.450993537902832
    10. '*(' → logprob: -13.575993537902832

Token 122: '	' (ID: 197)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.011513661593198776
    2. '	val' → logprob: -4.511513710021973
    3. ' val' → logprob: -7.761513710021973
    4. '	' → logprob: -10.511513710021973
    5. ',val' → logprob: -12.261513710021973
    6. '```' → logprob: -13.511513710021973
    7. '[val' → logprob: -13.761513710021973
    8. '_val' → logprob: -13.886513710021973
    9. '.val' → logprob: -14.261513710021973
    10. '*' → logprob: -14.511513710021973

Token 123: '	val' (ID: 42587)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -3.881560041918419e-05
    2. '	val' → logprob: -10.500039100646973
    3. ' val' → logprob: -11.625039100646973
    4. '	' → logprob: -13.875039100646973
    5. '```' → logprob: -14.375039100646973
    6. 'vall' → logprob: -15.125039100646973
    7. '3' → logprob: -15.875039100646973
    8. '_val' → logprob: -16.250038146972656
    9. '		' → logprob: -17.250038146972656
    10. '.val' → logprob: -17.250038146972656

Token 124: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931968331336975
    2. '*=' → logprob: -0.6931968331336975
    3. ' =' → logprob: -10.193197250366211
    4. ' *=' → logprob: -11.818197250366211
    5. '*' → logprob: -13.693197250366211
    6. '//=' → logprob: -13.818197250366211
    7. '<<' → logprob: -14.193197250366211
    8. ' <<=' → logprob: -14.943197250366211
    9. '＝' → logprob: -14.943197250366211
    10. '_=' → logprob: -15.068197250366211

Token 125: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.2277267873287201
    2. 'val' → logprob: -1.6027268171310425
    3. ' ' → logprob: -6.602726936340332
    4. ' val' → logprob: -8.102726936340332
    5. '(' → logprob: -8.477726936340332
    6. '(val' → logprob: -8.477726936340332
    7. '	val' → logprob: -9.727726936340332
    8. '2' → logprob: -10.227726936340332
    9. 'int' → logprob: -10.227726936340332
    10. '```' → logprob: -10.727726936340332

Token 126: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.25228986144065857
    2. 'val' → logprob: -1.502289891242981
    3. '(val' → logprob: -8.877289772033691
    4. '(' → logprob: -9.252289772033691
    5. ' ' → logprob: -10.502289772033691
    6. '	val' → logprob: -10.627289772033691
    7. ' val' → logprob: -10.877289772033691
    8. 'int' → logprob: -11.127289772033691
    9. '[val' → logprob: -12.002289772033691
    10. '2' → logprob: -12.252289772033691

Token 127: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0003357006062287837
    2. ' *' → logprob: -8.000335693359375
    3. 'val' → logprob: -16.375335693359375
    4. '[val' → logprob: -16.500335693359375
    5. ' val' → logprob: -17.500335693359375
    6. '**' → logprob: -18.250335693359375
    7. '	val' → logprob: -18.875335693359375
    8. ' ' → logprob: -18.875335693359375
    9. '```' → logprob: -19.125335693359375
    10. '*v' → logprob: -19.250335693359375

Token 128: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0008223761687986553
    2. ' val' → logprob: -7.1258225440979
    3. '	val' → logprob: -11.250822067260742
    4. '[val' → logprob: -12.500822067260742
    5. '*' → logprob: -14.625822067260742
    6. '_val' → logprob: -15.000822067260742
    7. 'vald' → logprob: -15.875822067260742
    8. 'valu' → logprob: -16.250822067260742
    9. '.val' → logprob: -16.500822067260742
    10. 'valg' → logprob: -17.125822067260742

Token 129: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07905789464712143
    2. ' +' → logprob: -2.5790579319000244
    3. 'val' → logprob: -9.079057693481445
    4. 'plus' → logprob: -10.704057693481445
    5. ' plus' → logprob: -11.454057693481445
    6. '＋' → logprob: -11.454057693481445
    7. '1' → logprob: -12.704057693481445
    8. '```' → logprob: -13.579057693481445
    9. '+=' → logprob: -13.954057693481445
    10. ' val' → logprob: -14.079057693481445

Token 130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.463036435074173e-05
    2. ' ' → logprob: -10.625024795532227
    3. '１' → logprob: -16.750024795532227
    4. '```' → logprob: -17.562524795532227
    5. '<|end|>' → logprob: -17.687524795532227
    6. '	' → logprob: -18.187524795532227
    7. '১' → logprob: -18.687524795532227
    8. '.' → logprob: -19.062524795532227
    9. ',' → logprob: -19.187524795532227
    10. '۱' → logprob: -19.187524795532227

Token 131: '
	
' (ID: 40612)
  Prédit: '	
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	
' → logprob: -0.23629827797412872
    2. '	return' → logprob: -2.7362983226776123
    3. '	g' → logprob: -2.8612983226776123
    4. '	while' → logprob: -3.1112983226776123
    5. '	' → logprob: -4.236298084259033
    6. '	for' → logprob: -4.736298084259033
    7. '
' → logprob: -5.236298084259033
    8. '		
' → logprob: -5.236298084259033
    9. '	
' → logprob: -6.361298084259033
    10. '	n' → logprob: -6.361298084259033

Token 132: '	g' (ID: 9663)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.10122621804475784
    2. '	g' → logprob: -2.351226329803467
    3. '	
' → logprob: -7.726226329803467
    4. '	for' → logprob: -8.726225852966309
    5. '	while' → logprob: -8.851225852966309
    6. '
' → logprob: -8.976225852966309
    7. 'for' → logprob: -9.476225852966309
    8. 'while' → logprob: -10.101225852966309
    9. '	del' → logprob: -11.476225852966309
    10. '	n' → logprob: -12.851225852966309

Token 133: '.reverse' (ID: 65426)
  Prédit: '.reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reverse' → logprob: -0.6073009371757507
    2. '.pop' → logprob: -0.8573009371757507
    3. '.' → logprob: -3.9823009967803955
    4. '=' → logprob: -4.482300758361816
    5. '.sort' → logprob: -7.982300758361816
    6. ' =' → logprob: -8.357300758361816
    7. '=g' → logprob: -8.607300758361816
    8. '[::-' → logprob: -9.232300758361816
    9. '.=' → logprob: -9.982300758361816
    10. '.g' → logprob: -12.607300758361816

Token 134: '(' (ID: 7)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.843177233240567e-05
    2. '()
' → logprob: -11.250018119812012
    3. '(' → logprob: -12.375018119812012
    4. '()

' → logprob: -14.875018119812012
    5. '()`' → logprob: -15.375018119812012
    6. '())' → logprob: -16.500019073486328
    7. '(),' → logprob: -16.750019073486328
    8. '()\' → logprob: -16.875019073486328
    9. '()]' → logprob: -17.000019073486328
    10. '();' → logprob: -17.000019073486328

Token 135: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3306015716807451e-05
    2. ' )' → logprob: -11.62501335144043
    3. '()' → logprob: -12.62501335144043
    4. ')
' → logprob: -14.00001335144043
    5. '))' → logprob: -16.87501335144043
    6. ' ' → logprob: -16.87501335144043
    7. ')`' → logprob: -17.25001335144043
    8. '())' → logprob: -17.37501335144043
    9. '）' → logprob: -17.75001335144043
    10. ')

' → logprob: -17.75001335144043

Token 136: '	m' (ID: 4460)
  Prédit: '	for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	for' → logprob: -0.04481964930891991
    2. '	cnt' → logprob: -4.2948198318481445
    3. '	i' → logprob: -4.4198198318481445
    4. '	count' → logprob: -5.1698198318481445
    5. 'for' → logprob: -5.2948198318481445
    6. ' for' → logprob: -5.9198198318481445
    7. '	
' → logprob: -6.2948198318481445
    8. '	' → logprob: -7.1698198318481445
    9. '	n' → logprob: -7.9198198318481445
    10. 'cnt' → logprob: -8.169819831848145

Token 137: ' =' (ID: 314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.024635424837470055
    2. '	for' → logprob: -4.149635314941406
    3. ' for' → logprob: -5.524635314941406
    4. 'i' → logprob: -6.399635314941406
    5. '=' → logprob: -6.899635314941406
    6. 'n' → logprob: -7.774635314941406
    7. ' =' → logprob: -8.649635314941406
    8. 'ax' → logprob: -8.774635314941406
    9. '```' → logprob: -8.774635314941406
    10. 'def' → logprob: -8.899635314941406

Token 138: ' len' (ID: 4631)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07892691344022751
    2. ' ' → logprob: -2.5789268016815186
    3. '	' → logprob: -11.453927040100098
    4. 'len' → logprob: -11.828927040100098
    5. 'n' → logprob: -12.578927040100098
    6. ' ' → logprob: -12.703927040100098
    7. ' len' → logprob: -12.828927040100098
    8. ' n' → logprob: -12.953927040100098
    9. 'cnt' → logprob: -13.453927040100098
    10. '  ' → logprob: -13.766427040100098

Token 139: '(' (ID: 7)
  Prédit: '(g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.06196993216872215
    2. '(' → logprob: -2.8119699954986572
    3. 'g' → logprob: -13.811969757080078
    4. '(
' → logprob: -14.561969757080078
    5. ' (' → logprob: -14.811969757080078
    6. '(G' → logprob: -15.936969757080078
    7. '(s' → logprob: -16.061969757080078
    8. '	g' → logprob: -16.811969757080078
    9. '(nums' → logprob: -17.436969757080078
    10. '(

' → logprob: -17.936969757080078

Token 140: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.20275849103927612
    2. '(g' → logprob: -1.702758550643921
    3. '(' → logprob: -7.077758312225342
    4. ' g' → logprob: -7.702758312225342
    5. '	g' → logprob: -10.2027587890625
    6. ')' → logprob: -11.5777587890625
    7. '[g' → logprob: -14.4527587890625
    8. ',g' → logprob: -14.5777587890625
    9. '_g' → logprob: -14.7027587890625
    10. ' (' → logprob: -15.3277587890625

Token 141: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022020140662789345
    2. ' )' → logprob: -4.02202033996582
    3. ')
' → logprob: -5.64702033996582
    4. ' )
' → logprob: -8.14702033996582
    5. '	' → logprob: -10.77202033996582
    6. ')
' → logprob: -11.77202033996582
    7. ' ' → logprob: -12.02202033996582
    8. ')

' → logprob: -12.39702033996582
    9. ' )
' → logprob: -14.02202033996582
    10. ')-' → logprob: -14.02202033996582

Token 142: '	print' (ID: 15269)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.2656051218509674
    2. '	cnt' → logprob: -1.640605092048645
    3. 'res' → logprob: -4.0156049728393555
    4. 'for' → logprob: -5.5156049728393555
    5. '	c' → logprob: -5.6406049728393555
    6. 'count' → logprob: -6.1406049728393555
    7. '	
' → logprob: -6.1406049728393555
    8. ' cnt' → logprob: -6.3906049728393555
    9. 'total' → logprob: -6.5156049728393555
    10. '	for' → logprob: -6.5156049728393555

Token 143: '(' (ID: 7)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.03902805596590042
    2. '(' → logprob: -3.2890281677246094
    3. 'm' → logprob: -7.039028167724609
    4. '(len' → logprob: -9.66402816772461
    5. '()' → logprob: -10.91402816772461
    6. '(g' → logprob: -11.78902816772461
    7. ' m' → logprob: -11.91402816772461
    8. '(n' → logprob: -12.41402816772461
    9. '	m' → logprob: -12.78902816772461
    10. '("' → logprob: -13.66402816772461

Token 144: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -7.827200897736475e-05
    2. ' m' → logprob: -9.500078201293945
    3. '	m' → logprob: -13.750078201293945
    4. ')' → logprob: -14.250078201293945
    5. ')m' → logprob: -14.750078201293945
    6. 'len' → logprob: -15.125078201293945
    7. 'n' → logprob: -15.250078201293945
    8. '(m' → logprob: -15.625078201293945
    9. 'str' → logprob: -16.375078201293945
    10. '"' → logprob: -16.750078201293945

Token 145: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027175310999155045
    2. ' )' → logprob: -3.6521754264831543
    3. ')
' → logprob: -7.402175426483154
    4. ',' → logprob: -8.527174949645996
    5. ' )
' → logprob: -10.027174949645996
    6. ',)' → logprob: -11.902174949645996
    7. '	' → logprob: -12.152174949645996
    8. ' ' → logprob: -13.527174949645996
    9. ')
' → logprob: -13.652174949645996
    10. ')

' → logprob: -13.777174949645996

Token 146: '	print' (ID: 15269)
  Prédit: '	for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	for' → logprob: -0.13345520198345184
    2. 'for' → logprob: -2.133455276489258
    3. '	cnt' → logprob: -5.758455276489258
    4. '	i' → logprob: -6.758455276489258
    5. ' for' → logprob: -7.008455276489258
    6. 'cnt' → logprob: -7.383455276489258
    7. '	count' → logprob: -8.758455276489258
    8. '	' → logprob: -8.883455276489258
    9. '	
' → logprob: -9.258455276489258
    10. 'i' → logprob: -9.508455276489258

Token 147: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5483008027076721
    2. '(*' → logprob: -0.9233008027076721
    3. '(g' → logprob: -4.298300743103027
    4. '('' → logprob: -5.048300743103027
    5. '((' → logprob: -6.548300743103027
    6. '(*(' → logprob: -6.673300743103027
    7. '("' → logprob: -7.173300743103027
    8. '("("' → logprob: -7.423300743103027
    9. '()' → logprob: -8.298300743103027
    10. '(
' → logprob: -8.548300743103027

Token 148: ' "' (ID: 392)
  Prédit: '*g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*g' → logprob: -0.1415306180715561
    2. '*' → logprob: -3.0165305137634277
    3. ''' → logprob: -3.3915305137634277
    4. '"' → logprob: -4.016530513763428
    5. 'g' → logprob: -4.141530513763428
    6. ''g' → logprob: -4.516530513763428
    7. ' *' → logprob: -6.016530513763428
    8. ')' → logprob: -7.016530513763428
    9. ' g' → logprob: -7.516530513763428
    10. '(*' → logprob: -9.016530990600586

Token 149: ' ".' (ID: 11730)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2594430148601532
    2. ' ".' → logprob: -2.0094430446624756
    3. '".' → logprob: -3.1344430446624756
    4. ''' → logprob: -3.2594430446624756
    5. ' "' → logprob: -5.3844428062438965
    6. 'g' → logprob: -5.8844428062438965
    7. '")' → logprob: -6.1344428062438965
    8. ' ' → logprob: -8.009443283081055
    9. '{}' → logprob: -8.009443283081055
    10. '*' → logprob: -8.134443283081055

Token 150: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -7.100059156073257e-05
    2. 'print' → logprob: -9.625070571899414
    3. 'jo' → logprob: -13.250070571899414
    4. 'j' → logprob: -13.375070571899414
    5. ' join' → logprob: -13.375070571899414
    6. '```' → logprob: -17.125070571899414
    7. 'write' → logprob: -18.000070571899414
    8. '".' → logprob: -18.625070571899414
    9. 'jou' → logprob: -19.000070571899414
    10. '.' → logprob: -19.250070571899414

Token 151: '(' (ID: 7)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.10152415931224823
    2. '(' → logprob: -2.8515241146087646
    3. '(str' → logprob: -3.3515241146087646
    4. '([' → logprob: -5.976524353027344
    5. '(list' → logprob: -6.726524353027344
    6. 'map' → logprob: -11.101524353027344
    7. ' map' → logprob: -14.351524353027344
    8. 'str' → logprob: -15.226524353027344
    9. ' (' → logprob: -15.226524353027344
    10. 'list' → logprob: -15.601524353027344

Token 152: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.32115259766578674
    2. 'str' → logprob: -1.5711525678634644
    3. '[str' → logprob: -2.821152687072754
    4. 'list' → logprob: -5.571152687072754
    5. '[' → logprob: -5.821152687072754
    6. ' map' → logprob: -8.321152687072754
    7. ' str' → logprob: -9.071152687072754
    8. '(map' → logprob: -9.696152687072754
    9. '[list' → logprob: -9.821152687072754
    10. '(str' → logprob: -10.071152687072754

Token 153: '(' (ID: 7)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.02977120317518711
    2. '(' → logprob: -3.529771089553833
    3. 'str' → logprob: -10.904770851135254
    4. '	str' → logprob: -13.904770851135254
    5. '=str' → logprob: -14.404770851135254
    6. ' str' → logprob: -14.904770851135254
    7. '```' → logprob: -15.529770851135254
    8. '[str' → logprob: -15.654770851135254
    9. ')' → logprob: -16.52977180480957
    10. ' (' → logprob: -17.27977180480957

Token 154: ' str' (ID: 989)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.10052022337913513
    2. '(' → logprob: -2.350520133972168
    3. 'str' → logprob: -8.100520133972168
    4. '	str' → logprob: -12.100520133972168
    5. ' str' → logprob: -12.975520133972168
    6. '=str' → logprob: -14.225520133972168
    7. ')' → logprob: -14.350520133972168
    8. '[str' → logprob: -15.225520133972168
    9. ',str' → logprob: -15.350520133972168
    10. ':str' → logprob: -16.350521087646484

Token 155: ',' (ID: 11)
  Prédit: ',g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',g' → logprob: -0.48302581906318665
    2. ',' → logprob: -0.9830257892608643
    3. ' ,' → logprob: -5.108026027679443
    4. '(g' → logprob: -6.483026027679443
    5. '(' → logprob: -6.733026027679443
    6. ',(' → logprob: -9.858025550842285
    7. ',num' → logprob: -10.108025550842285
    8. 'g' → logprob: -10.733025550842285
    9. '	g' → logprob: -11.608025550842285
    10. ' g' → logprob: -12.733025550842285

Token 156: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.01108649279922247
    2. ' g' → logprob: -4.511086463928223
    3. '(g' → logprob: -10.761086463928223
    4. '	g' → logprob: -11.011086463928223
    5. '(' → logprob: -14.386086463928223
    6. '[g' → logprob: -15.386086463928223
    7. '_g' → logprob: -16.51108741760254
    8. ' ' → logprob: -16.88608741760254
    9. ',g' → logprob: -17.38608741760254
    10. '.g' → logprob: -17.76108741760254

Token 157: ' )' (ID: 1546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8148444294929504
    2. ' )' → logprob: -1.0648443698883057
    3. ')))' → logprob: -1.6898443698883057
    4. '))' → logprob: -3.8148443698883057
    5. ' ' → logprob: -5.314844608306885
    6. ' ))' → logprob: -7.189844608306885
    7. ')))
' → logprob: -8.564844131469727
    8. '))))' → logprob: -10.689844131469727
    9. '	' → logprob: -11.314844131469727
    10. ')));' → logprob: -12.189844131469727

Token 158: ' )' (ID: 1546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04116210713982582
    2. '))' → logprob: -3.6661620140075684
    3. ' )' → logprob: -4.291162014007568
    4. '	' → logprob: -7.541162014007568
    5. '))
' → logprob: -7.916162014007568
    6. ' ))' → logprob: -9.541162490844727
    7. ' ' → logprob: -10.291162490844727
    8. ')))' → logprob: -10.916162490844727
    9. '   ' → logprob: -11.416162490844727
    10. ' ))
' → logprob: -11.791162490844727

Token 159: ' )
' (ID: 3270)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5913750529289246
    2. ')' → logprob: -0.8413750529289246
    3. ' )
' → logprob: -4.71637487411499
    4. ' )' → logprob: -5.34137487411499
    5. '	' → logprob: -6.59137487411499
    6. ')
' → logprob: -9.341375350952148
    7. ')

' → logprob: -9.466375350952148
    8. '   ' → logprob: -10.966375350952148
    9. ' ' → logprob: -11.841375350952148
    10. ' )
' → logprob: -12.591375350952148

Token 160: '	cnt' (ID: 143135)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.09658478945493698
    2. '	cnt' → logprob: -2.4715847969055176
    3. 'total' → logprob: -6.096584796905518
    4. 'count' → logprob: -6.596584796905518
    5. '	c' → logprob: -6.846584796905518
    6. 'res' → logprob: -7.471584796905518
    7. '	total' → logprob: -7.596584796905518
    8. '	ans' → logprob: -7.596584796905518
    9. '	count' → logprob: -7.971584796905518
    10. '	
' → logprob: -8.09658432006836

Token 161: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519596517086029
    2. ' =' → logprob: -1.5019596815109253
    3. '_total' → logprob: -11.126959800720215
    4. 'total' → logprob: -11.501959800720215
    5. '	' → logprob: -13.376959800720215
    6. '_' → logprob: -14.001959800720215
    7. ',' → logprob: -14.126959800720215
    8. 'Total' → logprob: -14.376959800720215
    9. ' ' → logprob: -14.626959800720215
    10. '＝' → logprob: -14.751959800720215

Token 162: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04300045222043991
    2. ' ' → logprob: -3.1680004596710205
    3. '	' → logprob: -14.418000221252441
    4. 'sum' → logprob: -14.918000221252441
    5. ' ' → logprob: -16.168001174926758
    6. ' sum' → logprob: -16.418001174926758
    7. '  ' → logprob: -17.293001174926758
    8. '<|end|>' → logprob: -17.418001174926758
    9. '０' → logprob: -17.793001174926758
    10. '۰' → logprob: -17.918001174926758

Token 163: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.623244553338736e-05
    2. ' ' → logprob: -9.625065803527832
    3. 'sum' → logprob: -16.12506675720215
    4. '	' → logprob: -17.12506675720215
    5. '０' → logprob: -17.25006675720215
    6. '۰' → logprob: -19.37506675720215
    7. ' ' → logprob: -20.00006675720215
    8. '   ' → logprob: -20.37506675720215
    9. '  ' → logprob: -20.75006675720215
    10. ' sum' → logprob: -21.00006675720215

Token 164: '
' (ID: 198)
  Prédit: '	for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	for' → logprob: -0.036680180579423904
    2. '	
' → logprob: -4.036680221557617
    3. ' for' → logprob: -4.536680221557617
    4. '<|end|>' → logprob: -5.161680221557617
    5. '
' → logprob: -7.036680221557617
    6. 'for' → logprob: -7.786680221557617
    7. '<|end|>' → logprob: -9.036680221557617
    8. '	
' → logprob: -9.286680221557617
    9. '	while' → logprob: -10.036680221557617
    10. '  
' → logprob: -10.286680221557617

Token 165: '	for' (ID: 3903)
  Prédit: '	for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	for' → logprob: -0.44509157538414
    2. 'for' → logprob: -1.5700916051864624
    3. ' for' → logprob: -1.9450916051864624
    4. '<|end|>' → logprob: -4.820091724395752
    5. '	
' → logprob: -9.570091247558594
    6. '<|end|>' → logprob: -9.945091247558594
    7. '
' → logprob: -10.695091247558594
    8. '   ' → logprob: -12.445091247558594
    9. '	while' → logprob: -12.695091247558594
    10. ' ' → logprob: -12.820091247558594

Token 166: ' i' (ID: 575)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.3482112884521484
    2. ' g' → logprob: -1.5982112884521484
    3. ' gap' → logprob: -1.7232112884521484
    4. ' i' → logprob: -2.3482112884521484
    5. ' gi' → logprob: -2.4732112884521484
    6. 'i' → logprob: -2.5982112884521484
    7. 'gap' → logprob: -2.7232112884521484
    8. 'gi' → logprob: -4.098211288452148
    9. 'h' → logprob: -5.098211288452148
    10. ' h' → logprob: -5.473211288452148

Token 167: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0890260562300682
    2. 'in' → logprob: -2.4640259742736816
    3. ' ' → logprob: -9.58902645111084
    4. '	in' → logprob: -11.46402645111084
    5. ',' → logprob: -12.46402645111084
    6. 'g' → logprob: -13.96402645111084
    7. '  ' → logprob: -14.33902645111084
    8. ' ,' → logprob: -14.46402645111084
    9. 'range' → logprob: -14.71402645111084
    10. '	' → logprob: -15.46402645111084

Token 168: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.27161017060279846
    2. ' range' → logprob: -1.771610140800476
    3. 'g' → logprob: -2.7716102600097656
    4. ' g' → logprob: -5.271610260009766
    5. '	range' → logprob: -10.271610260009766
    6. ' ' → logprob: -11.146610260009766
    7. ' xrange' → logprob: -11.146610260009766
    8. '   ' → logprob: -11.271610260009766
    9. '	g' → logprob: -11.646610260009766
    10. '(range' → logprob: -12.771610260009766

Token 169: '(' (ID: 7)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.12694017589092255
    2. '(' → logprob: -2.1269402503967285
    3. '(len' → logprob: -11.50193977355957
    4. '	m' → logprob: -13.75193977355957
    5. ' (' → logprob: -14.75193977355957
    6. '(
' → logprob: -15.75193977355957
    7. '(M' → logprob: -16.00193977355957
    8. '(s' → logprob: -16.25193977355957
    9. '	' → logprob: -16.62693977355957
    10. 'm' → logprob: -16.75193977355957

Token 170: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.07017361372709274
    2. ' m' → logprob: -2.695173501968384
    3. '	m' → logprob: -8.820173263549805
    4. 'len' → logprob: -9.570173263549805
    5. ' len' → logprob: -11.070173263549805
    6. ')m' → logprob: -13.570173263549805
    7. ' ' → logprob: -13.820173263549805
    8. '0' → logprob: -14.445173263549805
    9. '(m' → logprob: -15.195173263549805
    10. ',m' → logprob: -15.445173263549805

Token 171: ' ):
' (ID: 48169)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08180254697799683
    2. ' ):' → logprob: -2.8318026065826416
    3. '):
' → logprob: -3.9568026065826416
    4. ' ):
' → logprob: -7.7068023681640625
    5. '):
' → logprob: -10.956802368164062
    6. ')' → logprob: -11.456802368164062
    7. '():' → logprob: -11.706802368164062
    8. '(' → logprob: -11.706802368164062
    9. '	' → logprob: -11.706802368164062
    10. '   ' → logprob: -12.831802368164062

Token 172: '	' (ID: 197)
  Prédit: '	cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	cnt' → logprob: -0.5965487957000732
    2. 'cnt' → logprob: -0.8465487957000732
    3. ' cnt' → logprob: -4.721549034118652
    4. '	' → logprob: -5.971549034118652
    5. '       ' → logprob: -5.971549034118652
    6. '[cnt' → logprob: -6.846549034118652
    7. ',' → logprob: -6.971549034118652
    8. '(cnt' → logprob: -7.096549034118652
    9. '	   ' → logprob: -7.346549034118652
    10. '
' → logprob: -7.346549034118652

Token 173: '	cnt' (ID: 143135)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.003648295532912016
    2. '	cnt' → logprob: -5.628648281097412
    3. ' cnt' → logprob: -10.25364875793457
    4. '   ' → logprob: -12.12864875793457
    5. '	   ' → logprob: -13.25364875793457
    6. '[cnt' → logprob: -13.37864875793457
    7. '(cnt' → logprob: -14.00364875793457
    8. 'c' → logprob: -14.12864875793457
    9. '	c' → logprob: -14.25364875793457
    10. 'count' → logprob: -14.25364875793457

Token 174: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6932157874107361
    2. '+=' → logprob: -0.6932157874107361
    3. '	' → logprob: -10.068215370178223
    4. '+=(' → logprob: -10.818215370178223
    5. ']+=' → logprob: -12.693215370178223
    6. '=' → logprob: -13.318215370178223
    7. '+' → logprob: -14.443215370178223
    8. '++' → logprob: -15.568215370178223
    9. ' =' → logprob: -15.568215370178223
    10. '+='' → logprob: -15.818215370178223

Token 175: ' insertion' (ID: 68881)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.012563803233206272
    2. ' insertion' → logprob: -4.387563705444336
    3. '	in' → logprob: -9.887563705444336
    4. 'Insertion' → logprob: -13.637563705444336
    5. ' in' → logprob: -14.262563705444336
    6. 'insert' → logprob: -14.512563705444336
    7. '[in' → logprob: -15.387563705444336
    8. ' ' → logprob: -15.512563705444336
    9. '   ' → logprob: -15.637563705444336
    10. ' ' → logprob: -16.012563705444336

Token 176: 'Sort' (ID: 11602)
  Prédit: 'Sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sort' → logprob: -1.0280383548888494e-06
    2. 'sort' → logprob: -14.000000953674316
    3. 'S' → logprob: -17.500001907348633
    4. '(' → logprob: -17.750001907348633
    5. 'Sorted' → logprob: -17.750001907348633
    6. '_sort' → logprob: -18.000001907348633
    7. 'Sor' → logprob: -18.250001907348633
    8. ' Sort' → logprob: -18.500001907348633
    9. 'Sorting' → logprob: -19.125001907348633
    10. 'Sorter' → logprob: -19.250001907348633

Token 177: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06197429448366165
    2. '(nums' → logprob: -2.811974287033081
    3. '(num' → logprob: -13.18697452545166
    4. '((' → logprob: -13.56197452545166
    5. '(
' → logprob: -13.81197452545166
    6. '(numbers' → logprob: -13.81197452545166
    7. ' (' → logprob: -13.81197452545166
    8. 'nums' → logprob: -15.68697452545166
    9. ' nums' → logprob: -16.686973571777344
    10. '```' → logprob: -16.811973571777344

Token 178: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.11170788109302521
    2. ' nums' → logprob: -2.361707925796509
    3. '(nums' → logprob: -4.48670768737793
    4. '(' → logprob: -8.86170768737793
    5. ')' → logprob: -10.86170768737793
    6. 'num' → logprob: -11.23670768737793
    7. '_nums' → logprob: -13.86170768737793
    8. 'Nums' → logprob: -14.11170768737793
    9. '	num' → logprob: -14.23670768737793
    10. ' ' → logprob: -14.86170768737793

Token 179: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000743399141356349
    2. ',n' → logprob: -7.625743389129639
    3. ' ,' → logprob: -8.500743865966797
    4. ',num' → logprob: -10.125743865966797
    5. '(' → logprob: -11.750743865966797
    6. '(nums' → logprob: -13.125743865966797
    7. ',
' → logprob: -14.000743865966797
    8. ',len' → logprob: -14.500743865966797
    9. '(n' → logprob: -14.625743865966797
    10. ' nums' → logprob: -16.625743865966797

Token 180: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12863025069236755
    2. ' n' → logprob: -2.1286301612854004
    3. '	n' → logprob: -6.3786301612854
    4. ')n' → logprob: -13.878630638122559
    5. '	' → logprob: -14.003630638122559
    6. '   ' → logprob: -14.503630638122559
    7. ' ' → logprob: -15.253630638122559
    8. '    ' → logprob: -15.503630638122559
    9. '
' → logprob: -15.628630638122559
    10. '		' → logprob: -16.503629684448242

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022284770966507494
    2. ',g' → logprob: -8.875223159790039
    3. ' ,' → logprob: -9.750223159790039
    4. 'g' → logprob: -10.750223159790039
    5. '	' → logprob: -13.500223159790039
    6. '`,' → logprob: -14.500223159790039
    7. ',
' → logprob: -15.000223159790039
    8. '，' → logprob: -15.250223159790039
    9. ' g' → logprob: -15.625223159790039
    10. '```' → logprob: -16.37522315979004

Token 182: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.1269364058971405
    2. ' g' → logprob: -2.126936435699463
    3. '	g' → logprob: -11.876935958862305
    4. ')' → logprob: -14.251935958862305
    5. ' ' → logprob: -15.376935958862305
    6. ' ' → logprob: -15.501935958862305
    7. '_g' → logprob: -16.001935958862305
    8. ' )' → logprob: -16.626935958862305
    9. '[g' → logprob: -17.251935958862305
    10. '```' → logprob: -17.751935958862305

Token 183: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001170225441455841
    2. '[' → logprob: -6.7511701583862305
    3. ' [' → logprob: -17.251171112060547
    4. '[
' → logprob: -19.876171112060547
    5. '[u' → logprob: -20.626171112060547
    6. '[I' → logprob: -20.751171112060547
    7. '[x' → logprob: -21.251171112060547
    8. '[idx' → logprob: -21.501171112060547
    9. 'i' → logprob: -21.501171112060547
    10. '[m' → logprob: -21.626171112060547

Token 184: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12722070515155792
    2. ' )' → logprob: -2.127220630645752
    3. '	' → logprob: -8.25222110748291
    4. ' ' → logprob: -11.50222110748291
    5. ' )
' → logprob: -11.75222110748291
    6. ')
' → logprob: -11.87722110748291
    7. '))' → logprob: -13.50222110748291
    8. '       ' → logprob: -14.00222110748291
    9. ')`' → logprob: -14.00222110748291
    10. '		' → logprob: -14.12722110748291

Token 185: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10278428345918655
    2. ')
' → logprob: -2.3527843952178955
    3. ' )' → logprob: -6.727784156799316
    4. ')
' → logprob: -7.477784156799316
    5. '	' → logprob: -7.852784156799316
    6. ' )
' → logprob: -7.852784156799316
    7. ')

' → logprob: -11.102784156799316
    8. ')return' → logprob: -11.602784156799316
    9. ' )
' → logprob: -12.727784156799316
    10. '   ' → logprob: -13.602784156799316

Token 186: '	print' (ID: 15269)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.839770495891571
    2. 'return' → logprob: -1.3397705554962158
    3. '	return' → logprob: -1.3397705554962158
    4. '	print' → logprob: -3.214770555496216
    5. ' return' → logprob: -5.714770317077637
    6. ' print' → logprob: -7.714770317077637
    7. '	
' → logprob: -7.964770317077637
    8. '
' → logprob: -9.464770317077637
    9. '```' → logprob: -11.964770317077637
    10. '		
' → logprob: -12.089770317077637

Token 187: '(' (ID: 7)
  Prédit: '(cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.023260852321982384
    2. '(' → logprob: -3.7732608318328857
    3. 'cnt' → logprob: -11.148261070251465
    4. '(count' → logprob: -14.773261070251465
    5. '[cnt' → logprob: -15.898261070251465
    6. '(
' → logprob: -16.14826011657715
    7. '(cont' → logprob: -16.39826011657715
    8. '(ct' → logprob: -16.52326011657715
    9. ' cnt' → logprob: -16.77326011657715
    10. '(counter' → logprob: -16.89826011657715

Token 188: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.000432695698691532
    2. ' cnt' → logprob: -7.75043249130249
    3. '(cnt' → logprob: -13.625432968139648
    4. '	cnt' → logprob: -14.125432968139648
    5. '[cnt' → logprob: -17.37543296813965
    6. 'count' → logprob: -17.62543296813965
    7. ')' → logprob: -18.00043296813965
    8. 'cn' → logprob: -18.62543296813965
    9. 'ct' → logprob: -20.12543296813965
    10. ' ' → logprob: -20.50043296813965

Token 189: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012376103550195694
    2. ' )' → logprob: -6.751237392425537
    3. ')
' → logprob: -9.626237869262695
    4. ')

' → logprob: -14.876237869262695
    5. ' )
' → logprob: -15.126237869262695
    6. '
' → logprob: -15.626237869262695
    7. ')
' → logprob: -16.126237869262695
    8. ')`' → logprob: -16.376237869262695
    9. ')return' → logprob: -16.751237869262695
    10. ' ' → logprob: -17.126237869262695

Token 190: '    
' (ID: 1944)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1477549523115158
    2. 'n' → logprob: -2.1477549076080322
    3. 'def' → logprob: -4.022755146026611
    4. 'nums' → logprob: -7.647755146026611
    5. '<|end|>' → logprob: -7.647755146026611
    6. '#' → logprob: -8.022754669189453
    7. 'num' → logprob: -8.272754669189453
    8. ' if' → logprob: -8.522754669189453
    9. 'return' → logprob: -8.522754669189453
    10. 'for' → logprob: -9.022754669189453

Token 191: 'n' (ID: 77)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18946005403995514
    2. 'n' → logprob: -1.814460039138794
    3. 'def' → logprob: -5.564460277557373
    4. '<|end|>' → logprob: -5.689460277557373
    5. 'nums' → logprob: -6.939460277557373
    6. 'num' → logprob: -7.564460277557373
    7. ' if' → logprob: -8.189459800720215
    8. '#' → logprob: -8.314459800720215
    9. 'print' → logprob: -9.814459800720215
    10. ' ' → logprob: -10.064459800720215

Token 192: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20153602957725525
    2. '=' → logprob: -1.7015360593795776
    3. ' ' → logprob: -9.826536178588867
    4. 'um' → logprob: -10.451536178588867
    5. ',' → logprob: -11.326536178588867
    6. '=int' → logprob: -11.576536178588867
    7. '	' → logprob: -11.951536178588867
    8. ' =
' → logprob: -13.076536178588867
    9. '=input' → logprob: -13.076536178588867
    10. 'umber' → logprob: -13.576536178588867

Token 193: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0024762547109276056
    2. ' int' → logprob: -6.002476215362549
    3. 'len' → logprob: -15.627476692199707
    4. '<int' → logprob: -15.627476692199707
    5. '	int' → logprob: -15.877476692199707
    6. ' ' → logprob: -16.25247573852539
    7. '=int' → logprob: -17.00247573852539
    8. '[int' → logprob: -17.00247573852539
    9. '(int' → logprob: -17.87747573852539
    10. 'input' → logprob: -18.00247573852539

Token 194: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16348710656166077
    2. '(input' → logprob: -1.9134870767593384
    3. 'input' → logprob: -6.413486957550049
    4. '(sys' → logprob: -6.663486957550049
    5. '()' → logprob: -8.038487434387207
    6. '(
' → logprob: -11.663487434387207
    7. ' (' → logprob: -12.288487434387207
    8. ' input' → logprob: -12.788487434387207
    9. '(

' → logprob: -14.538487434387207
    10. 'sys' → logprob: -14.538487434387207

Token 195: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.17673613131046295
    2. 'sys' → logprob: -1.9267361164093018
    3. ' sys' → logprob: -4.426736354827881
    4. ' input' → logprob: -5.426736354827881
    5. '(sys' → logprob: -10.676735877990723
    6. ' ' → logprob: -14.301735877990723
    7. '(input' → logprob: -14.301735877990723
    8. '	sys' → logprob: -14.301735877990723
    9. '=sys' → logprob: -15.176735877990723
    10. '	input' → logprob: -15.301735877990723

Token 196: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.012935608625411987
    2. '.argv' → logprob: -4.637935638427734
    3. '.' → logprob: -5.762935638427734
    4. '.readline' → logprob: -10.637935638427734
    5. '.stdout' → logprob: -12.637935638427734
    6. ' .' → logprob: -13.137935638427734
    7. '.std' → logprob: -13.637935638427734
    8. '(stdin' → logprob: -14.387935638427734
    9. '.input' → logprob: -15.012935638427734
    10. '.)' → logprob: -15.887935638427734

Token 197: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -4.179569077678025e-05
    2. '.' → logprob: -10.125041961669922
    3. '().' → logprob: -14.375041961669922
    4. ' .' → logprob: -14.500041961669922
    5. '.read' → logprob: -15.000041961669922
    6. ' readline' → logprob: -15.750041961669922
    7. '.stdin' → logprob: -16.750041961669922
    8. '.readlines' → logprob: -18.875041961669922
    9. ')' → logprob: -20.000041961669922
    10. '.Read' → logprob: -20.125041961669922

Token 198: '(' (ID: 7)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09570455551147461
    2. '())' → logprob: -2.5957045555114746
    3. '().' → logprob: -4.095704555511475
    4. '(' → logprob: -10.595705032348633
    5. '())
' → logprob: -13.220705032348633
    6. ' ()' → logprob: -14.220705032348633
    7. '（）' → logprob: -14.345705032348633
    8. '()
' → logprob: -14.595705032348633
    9. '()`' → logprob: -14.845705032348633
    10. ')' → logprob: -14.845705032348633

Token 199: ' )' (ID: 1546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015583566389977932
    2. '))' → logprob: -4.265583515167236
    3. ').' → logprob: -7.390583515167236
    4. ' )' → logprob: -8.390583992004395
    5. '().' → logprob: -8.640583992004395
    6. '())' → logprob: -8.640583992004395
    7. '()' → logprob: -8.640583992004395
    8. ' ' → logprob: -10.515583992004395
    9. ' ))' → logprob: -12.015583992004395
    10. '(' → logprob: -12.265583992004395

Token 200: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002903658663854003
    2. ')
' → logprob: -5.877903461456299
    3. ' )' → logprob: -9.627903938293457
    4. ')n' → logprob: -11.127903938293457
    5. '.strip' → logprob: -11.752903938293457
    6. ')
' → logprob: -12.377903938293457
    7. '()' → logprob: -13.502903938293457
    8. ' )
' → logprob: -13.627903938293457
    9. ')

' → logprob: -13.752903938293457
    10. '())' → logprob: -14.627903938293457

Token 201: 'nums' (ID: 44465)
  Prédit: 'nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -4.179569077678025e-05
    2. 'num' → logprob: -10.500041961669922
    3. ' nums' → logprob: -12.250041961669922
    4. 'numbers' → logprob: -12.500041961669922
    5. 'arr' → logprob: -12.875041961669922
    6. 'a' → logprob: -13.375041961669922
    7. 'lst' → logprob: -14.625041961669922
    8. '_nums' → logprob: -14.750041961669922
    9. 'data' → logprob: -15.375041961669922
    10. 'n' → logprob: -15.500041961669922

Token 202: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269693672657013
    2. '=' → logprob: -2.126969337463379
    3. '[' → logprob: -11.001969337463379
    4. '=[]' → logprob: -11.501969337463379
    5. '[:]' → logprob: -11.751969337463379
    6. '	' → logprob: -13.751969337463379
    7. ' =[' → logprob: -13.876969337463379
    8. '.' → logprob: -14.001969337463379
    9. '[]' → logprob: -14.126969337463379
    10. ',' → logprob: -14.501969337463379

Token 203: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.603585958480835
    2. '[list' → logprob: -0.853585958480835
    3. '[int' → logprob: -4.103586196899414
    4. '[]' → logprob: -4.853586196899414
    5. ' [' → logprob: -6.103586196899414
    6. '[List' → logprob: -8.103586196899414
    7. 'list' → logprob: -8.853586196899414
    8. '[n' → logprob: -8.978586196899414
    9. ' []' → logprob: -10.228586196899414
    10. ' list' → logprob: -10.853586196899414

Token 204: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005535095697268844
    2. ' for' → logprob: -7.500553607940674
    3. '
' → logprob: -15.375553131103516
    4. 'n' → logprob: -16.125553131103516
    5. '	for' → logprob: -16.375553131103516
    6. 'i' → logprob: -17.125553131103516
    7. ' 
' → logprob: -17.375553131103516
    8. '<|end|>' → logprob: -18.000553131103516
    9. '[' → logprob: -18.250553131103516
    10. 'while' → logprob: -19.875553131103516

Token 205: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.007429623045027256
    2. ' _' → logprob: -5.007429599761963
    3. '_i' → logprob: -8.007430076599121
    4. ' i' → logprob: -8.507430076599121
    5. 'i' → logprob: -8.632430076599121
    6. ' ' → logprob: -14.382430076599121
    7. '	i' → logprob: -16.507429122924805
    8. '＿' → logprob: -16.882429122924805
    9. '   ' → logprob: -17.132429122924805
    10. '	' → logprob: -18.007429122924805

Token 206: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04860644042491913
    2. 'in' → logprob: -3.0486063957214355
    3. ' ' → logprob: -11.673606872558594
    4. '_' → logprob: -12.548606872558594
    5. 'range' → logprob: -12.548606872558594
    6. 'n' → logprob: -13.423606872558594
    7. '	in' → logprob: -13.798606872558594
    8. '[' → logprob: -15.173606872558594
    9. ',' → logprob: -16.173606872558594
    10. ' _' → logprob: -16.298606872558594

Token 207: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.048592932522296906
    2. ' range' → logprob: -3.048593044281006
    3. '	range' → logprob: -12.673592567443848
    4. ' ' → logprob: -13.423592567443848
    5. 'in' → logprob: -15.173592567443848
    6. '_' → logprob: -15.173592567443848
    7. ' in' → logprob: -15.548592567443848
    8. '  ' → logprob: -16.548593521118164
    9. 'rang' → logprob: -17.173593521118164
    10. '   ' → logprob: -17.173593521118164

Token 208: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5759888887405396
    2. '(' → logprob: -0.8259888887405396
    3. 'n' → logprob: -10.32598876953125
    4. '	n' → logprob: -11.82598876953125
    5. ' n' → logprob: -12.45098876953125
    6. ' (' → logprob: -12.57598876953125
    7. '(
' → logprob: -13.20098876953125
    8. '_n' → logprob: -17.07598876953125
    9. ')n' → logprob: -17.95098876953125
    10. ',n' → logprob: -18.20098876953125

Token 209: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.38693806529045105
    2. ' n' → logprob: -1.1369380950927734
    3. '	n' → logprob: -9.636938095092773
    4. ')n' → logprob: -13.511938095092773
    5. '_n' → logprob: -15.761938095092773
    6. ',n' → logprob: -16.636938095092773
    7. '(n' → logprob: -17.011938095092773
    8. '0' → logprob: -17.011938095092773
    9. ' н' → logprob: -18.136938095092773
    10. '<n' → logprob: -18.261938095092773

Token 210: ' ):
' (ID: 48169)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0286570955067873
    2. '):' → logprob: -4.028656959533691
    3. ':
' → logprob: -5.528656959533691
    4. ' ):
' → logprob: -5.778656959533691
    5. '):
' → logprob: -6.653656959533691
    6. ':' → logprob: -6.778656959533691
    7. ')' → logprob: -7.278656959533691
    8. '	' → logprob: -8.903656959533691
    9. ' ):' → logprob: -10.153656959533691
    10. '():
' → logprob: -10.278656959533691

Token 211: '	num' (ID: 41724)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -1.018320083618164
    2. 'nums' → logprob: -1.268320083618164
    3. '	num' → logprob: -1.768320083618164
    4. ' nums' → logprob: -2.268320083618164
    5. ' num' → logprob: -2.518320083618164
    6. '   ' → logprob: -5.893320083618164
    7. ' ' → logprob: -11.393320083618164
    8. 'x' → logprob: -11.768320083618164
    9. ' x' → logprob: -13.018320083618164
    10. ',num' → logprob: -13.143320083618164

Token 212: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0007634070352651179
    2. ' =' → logprob: -7.625763416290283
    3. '=' → logprob: -8.375762939453125
    4. ' ' → logprob: -11.000762939453125
    5. '.append' → logprob: -12.125762939453125
    6. 'nums' → logprob: -12.625762939453125
    7. '	' → logprob: -12.750762939453125
    8. 'ms' → logprob: -12.750762939453125
    9. '	s' → logprob: -13.125762939453125
    10. 'ber' → logprob: -13.250762939453125

Token 213: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.01818588376045227
    2. '.' → logprob: -4.018186092376709
    3. '.app' → logprob: -10.76818561553955
    4. 'append' → logprob: -11.76818561553955
    5. '.ap' → logprob: -13.14318561553955
    6. '.extend' → logprob: -13.39318561553955
    7. ' .' → logprob: -13.51818561553955
    8. '.=' → logprob: -14.89318561553955
    9. '.py' → logprob: -15.01818561553955
    10. '=' → logprob: -15.14318561553955

Token 214: '(' (ID: 7)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.4741543233394623
    2. '(' → logprob: -0.9741543531417847
    3. 'int' → logprob: -9.474154472351074
    4. '(
' → logprob: -15.224154472351074
    5. ' int' → logprob: -16.349153518676758
    6. ' (' → logprob: -16.349153518676758
    7. '	int' → logprob: -16.974153518676758
    8. '(i' → logprob: -17.974153518676758
    9. '<int' → logprob: -17.974153518676758
    10. '(in' → logprob: -18.724153518676758

Token 215: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.029751067981123924
    2. ' int' → logprob: -3.5297510623931885
    3. '	int' → logprob: -14.65475082397461
    4. '(int' → logprob: -15.65475082397461
    5. '<int' → logprob: -18.40475082397461
    6. '   ' → logprob: -18.65475082397461
    7. ' ' → logprob: -19.02975082397461
    8. '[int' → logprob: -19.15475082397461
    9. ',int' → logprob: -19.52975082397461
    10. '=int' → logprob: -19.77975082397461

Token 216: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07889717072248459
    2. '(sys' → logprob: -2.57889723777771
    3. 'sys' → logprob: -13.328897476196289
    4. '(
' → logprob: -13.328897476196289
    5. ' sys' → logprob: -13.578897476196289
    6. ' (' → logprob: -14.078897476196289
    7. '(Sys' → logprob: -14.453897476196289
    8. '=sys' → logprob: -14.578897476196289
    9. '()' → logprob: -15.203897476196289
    10. '	sys' → logprob: -15.328897476196289

Token 217: ' sys' (ID: 12228)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.6145013570785522
    2. 'sys' → logprob: -1.1145013570785522
    3. ' sys' → logprob: -2.114501476287842
    4. '(' → logprob: -4.614501476287842
    5. '	sys' → logprob: -7.864501476287842
    6. '=sys' → logprob: -11.114500999450684
    7. ' (' → logprob: -12.239500999450684
    8. '_sys' → logprob: -12.989500999450684
    9. '/sys' → logprob: -13.114500999450684
    10. 'Sys' → logprob: -14.114500999450684

Token 218: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00684798089787364
    2. '.readline' → logprob: -5.131847858428955
    3. 'stdin' → logprob: -7.006847858428955
    4. '(stdin' → logprob: -11.756848335266113
    5. '.' → logprob: -12.631848335266113
    6. '().' → logprob: -14.256848335266113
    7. '.stdout' → logprob: -14.631848335266113
    8. '.argv' → logprob: -15.006848335266113
    9. 'sys' → logprob: -15.756848335266113
    10. 'in' → logprob: -15.756848335266113

Token 219: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -6.511406809295295e-06
    2. ' readline' → logprob: -12.000006675720215
    3. '().' → logprob: -16.0000057220459
    4. '.' → logprob: -17.0000057220459
    5. 'read' → logprob: -18.2500057220459
    6. '.readlines' → logprob: -18.6250057220459
    7. 'line' → logprob: -18.8750057220459
    8. ')' → logprob: -20.0000057220459
    9. '()' → logprob: -20.3750057220459
    10. 'getline' → logprob: -20.6250057220459

Token 220: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38843080401420593
    2. '())' → logprob: -1.3884308338165283
    3. '()' → logprob: -2.6384308338165283
    4. '()))' → logprob: -7.013430595397949
    5. '().' → logprob: -10.26343059539795
    6. '()]' → logprob: -13.76343059539795
    7. ')' → logprob: -14.01343059539795
    8. ' ())' → logprob: -14.51343059539795
    9. '()))
' → logprob: -14.63843059539795
    10. '())))' → logprob: -14.76343059539795

Token 221: ' )' (ID: 1546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.052246496081352234
    2. '))' → logprob: -3.302246570587158
    3. '(' → logprob: -4.802246570587158
    4. '()' → logprob: -5.552246570587158
    5. '())' → logprob: -6.677246570587158
    6. ' )' → logprob: -7.552246570587158
    7. '()))' → logprob: -9.42724609375
    8. ' ' → logprob: -9.42724609375
    9. ' ))' → logprob: -10.05224609375
    10. ')))' → logprob: -11.42724609375

Token 222: ' )' (ID: 1546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010310231009498239
    2. '())' → logprob: -7.751030921936035
    3. '()' → logprob: -7.876030921936035
    4. '))' → logprob: -9.376030921936035
    5. ' )' → logprob: -9.501030921936035
    6. '(' → logprob: -9.751030921936035
    7. ' ' → logprob: -13.751030921936035
    8. ')
' → logprob: -14.376030921936035
    9. '	' → logprob: -14.501030921936035
    10. ')\' → logprob: -15.626030921936035

Token 223: ' )

' (ID: 11467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31708717346191406
    2. ')
' → logprob: -1.317087173461914
    3. ' )
' → logprob: -6.067087173461914
    4. ' )' → logprob: -6.567087173461914
    5. ')
' → logprob: -9.817087173461914
    6. ')

' → logprob: -10.442087173461914
    7. ')n' → logprob: -12.317087173461914
    8. ' )
' → logprob: -13.692087173461914
    9. '
' → logprob: -14.067087173461914
    10. 'n' → logprob: -14.192087173461914

Token 224: 'shell' (ID: 65700)
  Prédit: 'shell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shell' → logprob: -7.896309739408025e-07
    2. ' shell' → logprob: -15.250000953674316
    3. '
' → logprob: -15.625000953674316
    4. '(shell' → logprob: -15.750000953674316
    5. 's' → logprob: -17.125
    6. '_shell' → logprob: -17.875
    7. 'Shell' → logprob: -18.25
    8. '```' → logprob: -18.375
    9. '.shell' → logprob: -18.375
    10. ')' → logprob: -18.875

Token 225: 'Sort' (ID: 11602)
  Prédit: 'Sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sort' → logprob: -3.128163257315464e-07
    2. 'ort' → logprob: -16.25
    3. 'sort' → logprob: -16.25
    4. 'S' → logprob: -16.5
    5. '_sort' → logprob: -18.5
    6. 'So' → logprob: -18.875
    7. 'Sor' → logprob: -19.0
    8. 'Sorting' → logprob: -19.375
    9. 'SORT' → logprob: -19.625
    10. '.Sort' → logprob: -19.625

Token 226: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25216051936149597
    2. '(nums' → logprob: -1.5021605491638184
    3. '(num' → logprob: -8.87716007232666
    4. '(numbers' → logprob: -9.37716007232666
    5. '(n' → logprob: -12.75216007232666
    6. '(
' → logprob: -12.87716007232666
    7. ' (' → logprob: -14.12716007232666
    8. 'nums' → logprob: -15.62716007232666
    9. '(

' → logprob: -15.87716007232666
    10. '((' → logprob: -16.252161026000977

Token 227: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.5759845972061157
    2. ' nums' → logprob: -0.8259845972061157
    3. '(nums' → logprob: -10.075984954833984
    4. 'num' → logprob: -12.950984954833984
    5. 'numbers' → logprob: -15.200984954833984
    6. ' num' → logprob: -16.075984954833984
    7. ')' → logprob: -16.200984954833984
    8. 'Nums' → logprob: -16.825984954833984
    9. '_nums' → logprob: -16.950984954833984
    10. ' numbers' → logprob: -17.325984954833984

Token 228: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00410998472943902
    2. ',n' → logprob: -5.504109859466553
    3. ' ,' → logprob: -10.379110336303711
    4. ',len' → logprob: -16.00411033630371
    5. ',num' → logprob: -16.25411033630371
    6. '，' → logprob: -16.50411033630371
    7. '	' → logprob: -17.00411033630371
    8. 'n' → logprob: -17.25411033630371
    9. ')' → logprob: -17.50411033630371
    10. '‌,' → logprob: -18.00411033630371

Token 229: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6931484341621399
    2. ' n' → logprob: -0.6931484341621399
    3. '	n' → logprob: -13.693148612976074
    4. 'len' → logprob: -17.568147659301758
    5. ')n' → logprob: -17.943147659301758
    6. ' len' → logprob: -18.193147659301758
    7. ')' → logprob: -18.443147659301758
    8. ' ' → logprob: -18.568147659301758
    9. ' ' → logprob: -18.943147659301758
    10. 'num' → logprob: -19.068147659301758

Token 230: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005557744298130274
    2. ' )' → logprob: -7.500555992126465
    3. ')
' → logprob: -12.875555992126465
    4. ')`' → logprob: -16.00055503845215
    5. '))' → logprob: -17.50055503845215
    6. ')
' → logprob: -17.75055503845215
    7. '(' → logprob: -17.87555503845215
    8. ' )
' → logprob: -18.00055503845215
    9. ');' → logprob: -18.12555503845215
    10. '),' → logprob: -18.87555503845215

Token 231: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 232: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10160966217517853
    2. '("' → logprob: -2.351609706878662
    3. '(*' → logprob: -6.726609706878662
    4. '('' → logprob: -8.851609230041504
    5. '("("' → logprob: -9.976609230041504
    6. '"' → logprob: -12.101609230041504
    7. '("")' → logprob: -13.226609230041504
    8. '()' → logprob: -13.601609230041504
    9. '("(' → logprob: -14.101609230041504
    10. '(nums' → logprob: -14.101609230041504

Token 233: ' "\' (ID: 6512)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.547261655330658
    2. '"\' → logprob: -1.6722617149353027
    3. '*' → logprob: -1.9222617149353027
    4. '*num' → logprob: -3.5472617149353027
    5. ' *' → logprob: -3.6722617149353027
    6. ''\' → logprob: -4.422261714935303
    7. ''' → logprob: -4.922261714935303
    8. ')' → logprob: -5.047261714935303
    9. ' "\' → logprob: -5.797261714935303
    10. 'nums' → logprob: -7.172261714935303

Token 234: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4324875771999359
    2. '"' → logprob: -1.1824876070022583
    3. '\n' → logprob: -3.5574874877929688
    4. '"\' → logprob: -4.307487487792969
    5. 's' → logprob: -7.557487487792969
    6. ''' → logprob: -7.682487487792969
    7. '".' → logprob: -8.057487487792969
    8. 'nums' → logprob: -8.557487487792969
    9. ' "\' → logprob: -8.682487487792969
    10. '
' → logprob: -9.307487487792969

Token 235: '".' (ID: 4050)
  Prédit: '".'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '".' → logprob: -0.00022916549642104656
    2. '"' → logprob: -8.500228881835938
    3. ' ".' → logprob: -11.500228881835938
    4. '.join' → logprob: -11.500228881835938
    5. 'join' → logprob: -13.000228881835938
    6. '")' → logprob: -13.125228881835938
    7. ''.' → logprob: -14.625228881835938
    8. ')' → logprob: -15.000228881835938
    9. '"\' → logprob: -15.875228881835938
    10. '.' → logprob: -16.625228881835938

Token 236: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.0008089098846539855
    2. '".' → logprob: -7.2508087158203125
    3. '"' → logprob: -10.000808715820312
    4. ' join' → logprob: -10.750808715820312
    5. '.join' → logprob: -10.750808715820312
    6. '"\' → logprob: -11.750808715820312
    7. ')' → logprob: -13.750808715820312
    8. ''.' → logprob: -14.250808715820312
    9. '.' → logprob: -15.375808715820312
    10. ').' → logprob: -15.500808715820312

Token 237: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018836528062820435
    2. '(map' → logprob: -4.018836498260498
    3. '(str' → logprob: -8.268836975097656
    4. '([' → logprob: -8.393836975097656
    5. '(list' → logprob: -8.518836975097656
    6. ' (' → logprob: -13.143836975097656
    7. 'map' → logprob: -13.768836975097656
    8. '((' → logprob: -14.768836975097656
    9. '(
' → logprob: -15.018836975097656
    10. 'list' → logprob: -16.268836975097656

Token 238: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0019697926472872496
    2. 'str' → logprob: -6.751969814300537
    3. ' map' → logprob: -7.501969814300537
    4. 'list' → logprob: -8.501969337463379
    5. '	map' → logprob: -10.626969337463379
    6. '(map' → logprob: -11.376969337463379
    7. ' str' → logprob: -12.751969337463379
    8. ' list' → logprob: -13.126969337463379
    9. '[str' → logprob: -13.251969337463379
    10. '[' → logprob: -13.626969337463379

Token 239: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16024738550186157
    2. '(str' → logprob: -1.9102473258972168
    3. ' (' → logprob: -11.660247802734375
    4. 'str' → logprob: -11.785247802734375
    5. '(
' → logprob: -12.910247802734375
    6. ' str' → logprob: -13.785247802734375
    7. '=str' → logprob: -13.910247802734375
    8. ')' → logprob: -14.535247802734375
    9. '(lambda' → logprob: -14.660247802734375
    10. ')(' → logprob: -15.160247802734375

Token 240: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0032990318723022938
    2. ' str' → logprob: -5.753299236297607
    3. '(str' → logprob: -9.25329875946045
    4. '	str' → logprob: -11.25329875946045
    5. ')' → logprob: -11.75329875946045
    6. '(' → logprob: -12.50329875946045
    7. '   ' → logprob: -14.75329875946045
    8. '=str' → logprob: -15.37829875946045
    9. ' ' → logprob: -15.50329875946045
    10. ',str' → logprob: -16.378299713134766

Token 241: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01008658204227686
    2. ',num' → logprob: -5.260086536407471
    3. '(' → logprob: -5.885086536407471
    4. '(nums' → logprob: -6.260086536407471
    5. ' ,' → logprob: -9.135087013244629
    6. ',(' → logprob: -11.010087013244629
    7. 'nums' → logprob: -11.510087013244629
    8. ',n' → logprob: -11.635087013244629
    9. '(num' → logprob: -13.385087013244629
    10. ',
' → logprob: -14.010087013244629

Token 242: ' nums' (ID: 18117)
  Prédit: ' nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nums' → logprob: -0.31333044171333313
    2. 'nums' → logprob: -1.3133304119110107
    3. '(nums' → logprob: -9.68833065032959
    4. 'num' → logprob: -12.56333065032959
    5. ' num' → logprob: -13.93833065032959
    6. ' ' → logprob: -14.18833065032959
    7. ')' → logprob: -14.31333065032959
    8. ' )' → logprob: -15.43833065032959
    9. '_nums' → logprob: -15.56333065032959
    10. '(' → logprob: -15.56333065032959

Token 243: ' )' (ID: 1546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015930612571537495
    2. '))' → logprob: -6.626593112945557
    3. ' )' → logprob: -8.376592636108398
    4. ')))' → logprob: -10.376592636108398
    5. ' ' → logprob: -12.376592636108398
    6. '()' → logprob: -14.251592636108398
    7. '(' → logprob: -15.126592636108398
    8. ' ))' → logprob: -15.626592636108398
    9. '   ' → logprob: -16.1265926361084
    10. '	' → logprob: -16.6265926361084

Token 244: ' )' (ID: 1546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005244310479611158
    2. '))' → logprob: -5.255244255065918
    3. ' )' → logprob: -11.505244255065918
    4. '	' → logprob: -16.505245208740234
    5. '))
' → logprob: -16.505245208740234
    6. ' ' → logprob: -16.880245208740234
    7. ' ))' → logprob: -16.880245208740234
    8. ')`' → logprob: -17.505245208740234
    9. ')
' → logprob: -17.630245208740234
    10. '()' → logprob: -17.630245208740234

Token 245: ' )' (ID: 1546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.32654589228332e-05
    2. ' )' → logprob: -9.625073432922363
    3. ')
' → logprob: -12.250073432922363
    4. '()' → logprob: -13.500073432922363
    5. '(' → logprob: -14.625073432922363
    6. '())' → logprob: -15.000073432922363
    7. '))' → logprob: -15.750073432922363
    8. ')`' → logprob: -16.500072479248047
    9. '}' → logprob: -17.625072479248047
    10. ')

' → logprob: -17.875072479248047


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 243
Tokens correctement prédits (1ère position, stricte): 84
Tokens correctement prédits (1ère position, avec adaptation): 84
Tokens correctement prédits (top 10): 213
Précision stricte (1ère position): 34.57%
Précision adaptée (1ère position): 34.57%
Précision (top 10): 87.65%
================================================================================
