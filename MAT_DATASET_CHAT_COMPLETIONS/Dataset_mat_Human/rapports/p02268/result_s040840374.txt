================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
s = set(map(int, input().split()))
q = int(input())
t = set(map(int, input().split()))

print(len(s & t))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00042768914136104286
    2. ''' → logprob: -8.62542724609375
    3. '('' → logprob: -9.37542724609375
    4. '(n' → logprob: -9.87542724609375
    5. '```' → logprob: -10.37542724609375
    6. '`' → logprob: -10.75042724609375
    7. '("("' → logprob: -11.12542724609375
    8. '(
' → logprob: -11.12542724609375
    9. ')' → logprob: -11.75042724609375
    10. '()' → logprob: -12.25042724609375

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11869344860315323
    2. ')' → logprob: -2.2436933517456055
    3. '()' → logprob: -5.3686933517456055
    4. '())' → logprob: -7.4936933517456055
    5. '(
' → logprob: -8.243693351745605
    6. '```' → logprob: -9.993693351745605
    7. '(

' → logprob: -10.368693351745605
    8. '('' → logprob: -10.493693351745605
    9. ''' → logprob: -10.618693351745605
    10. '(n' → logprob: -10.868693351745605

Token 5: 's' (ID: 82)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7040315866470337
    2. 'if' → logprob: -1.4540315866470337
    3. 'for' → logprob: -2.329031467437744
    4. 's' → logprob: -2.454031467437744
    5. 'f' → logprob: -4.329031467437744
    6. ' ' → logprob: -4.454031467437744
    7. 'x' → logprob: -4.829031467437744
    8. ')' → logprob: -4.954031467437744
    9. 'a' → logprob: -4.954031467437744
    10. ''' → logprob: -5.079031467437744

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7856029868125916
    2. '.' → logprob: -1.4106030464172363
    3. 'um' → logprob: -2.1606030464172363
    4. ' =' → logprob: -2.6606030464172363
    5. 'u' → logprob: -4.035603046417236
    6. '=' → logprob: -4.160603046417236
    7. 't' → logprob: -4.285603046417236
    8. 'tr' → logprob: -4.410603046417236
    9. '[i' → logprob: -4.910603046417236
    10. '+' → logprob: -5.035603046417236

Token 7: ' set' (ID: 920)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.29172635078430176
    2. ' input' → logprob: -1.4167263507843018
    3. '""' → logprob: -5.166726112365723
    4. '''' → logprob: -6.791726112365723
    5. '0' → logprob: -7.041726112365723
    6. ' ' → logprob: -7.041726112365723
    7. '"' → logprob: -7.416726112365723
    8. ' ""' → logprob: -7.916726112365723
    9. ''' → logprob: -8.041726112365723
    10. ' ''' → logprob: -8.416726112365723

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018816526979207993
    2. '()' → logprob: -4.1438164710998535
    3. '(s' → logprob: -6.1438164710998535
    4. '(n' → logprob: -8.393816947937012
    5. '())' → logprob: -9.018816947937012
    6. '(`' → logprob: -10.393816947937012
    7. 's' → logprob: -10.518816947937012
    8. '(range' → logprob: -10.518816947937012
    9. ')' → logprob: -10.643816947937012
    10. '(input' → logprob: -10.893816947937012

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.010946185328066349
    2. '(' → logprob: -4.635946273803711
    3. '(str' → logprob: -7.135946273803711
    4. '(input' → logprob: -8.635946273803711
    5. 'int' → logprob: -9.385946273803711
    6. '<int' → logprob: -10.260946273803711
    7. '[int' → logprob: -10.510946273803711
    8. '=int' → logprob: -11.260946273803711
    9. '(
' → logprob: -11.510946273803711
    10. '```' → logprob: -11.760946273803711

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0016966033726930618
    2. '(' → logprob: -6.876696586608887
    3. ',input' → logprob: -7.626696586608887
    4. 'input' → logprob: -9.626696586608887
    5. ')' → logprob: -10.001696586608887
    6. '))' → logprob: -10.876696586608887
    7. '=input' → logprob: -11.126696586608887
    8. ',' → logprob: -12.001696586608887
    9. ' (' → logprob: -12.001696586608887
    10. '(user' → logprob: -12.376696586608887

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04870784282684326
    2. ' input' → logprob: -3.048707962036133
    3. '(input' → logprob: -9.048707962036133
    4. ',input' → logprob: -13.798707962036133
    5. ')' → logprob: -14.173707962036133
    6. '=input' → logprob: -14.548707962036133
    7. '[input' → logprob: -15.048707962036133
    8. 'range' → logprob: -15.298707962036133
    9. '	input' → logprob: -16.423707962036133
    10. '<input' → logprob: -16.923707962036133

Token 12: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7852587699890137
    2. '()))' → logprob: -1.0352587699890137
    3. '())' → logprob: -2.0352587699890137
    4. '().' → logprob: -2.9102587699890137
    5. '()));' → logprob: -6.535258769989014
    6. '(' → logprob: -6.785258769989014
    7. '())))' → logprob: -8.160259246826172
    8. ')' → logprob: -8.910259246826172
    9. '());' → logprob: -8.910259246826172
    10. '()>' → logprob: -9.035259246826172

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011846343986690044
    2. 'strip' → logprob: -6.751184463500977
    3. 'rstrip' → logprob: -11.501184463500977
    4. ' split' → logprob: -13.001184463500977
    5. '(split' → logprob: -13.876184463500977
    6. ')' → logprob: -14.376184463500977
    7. 's' → logprob: -14.876184463500977
    8. 'spl' → logprob: -15.501184463500977
    9. 'replace' → logprob: -17.251184463500977
    10. 'sp' → logprob: -17.626184463500977

Token 14: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.17112846672534943
    2. ')' → logprob: -2.171128511428833
    3. '()))' → logprob: -3.296128511428833
    4. '())' → logprob: -5.671128273010254
    5. '(' → logprob: -6.296128273010254
    6. '()' → logprob: -7.296128273010254
    7. ')))' → logprob: -8.921128273010254
    8. ''))' → logprob: -9.796128273010254
    9. '"))' → logprob: -11.796128273010254
    10. '(
' → logprob: -11.921128273010254

Token 15: 'q' (ID: 80)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.42604002356529236
    2. ')' → logprob: -1.9260400533676147
    3. 'a' → logprob: -2.801039934158325
    4. 'n' → logprob: -3.051039934158325
    5. '.' → logprob: -3.551039934158325
    6. 'i' → logprob: -4.676040172576904
    7. '' → logprob: -4.801040172576904
    8. 'x' → logprob: -5.051040172576904
    9. 'm' → logprob: -5.301040172576904
    10. '```' → logprob: -5.426040172576904

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4422784447669983
    2. '=' → logprob: -1.3172783851623535
    3. 'u' → logprob: -3.1922783851623535
    4. ' ' → logprob: -3.5672783851623535
    5. '.' → logprob: -4.6922783851623535
    6. '_' → logprob: -4.8172783851623535
    7. '[' → logprob: -6.4422783851623535
    8. ')' → logprob: -7.5672783851623535
    9. ',' → logprob: -8.442278861999512
    10. '(' → logprob: -8.567278861999512

Token 17: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.11289172619581223
    2. 'int' → logprob: -2.237891674041748
    3. ' ' → logprob: -10.112892150878906
    4. '0' → logprob: -11.112892150878906
    5. '[int' → logprob: -11.987892150878906
    6. ' n' → logprob: -13.612892150878906
    7. '=int' → logprob: -13.612892150878906
    8. 'n' → logprob: -14.237892150878906
    9. '<int' → logprob: -14.487892150878906
    10. '  ' → logprob: -14.612892150878906

Token 18: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5760947465896606
    2. '(input' → logprob: -0.8260947465896606
    3. '()' → logprob: -9.326094627380371
    4. '(
' → logprob: -10.451094627380371
    5. '(in' → logprob: -12.076094627380371
    6. ' (' → logprob: -12.451094627380371
    7. '("("' → logprob: -12.576094627380371
    8. 'input' → logprob: -12.826094627380371
    9. '(open' → logprob: -12.951094627380371
    10. '('' → logprob: -13.076094627380371

Token 19: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9305495619773865
    2. '())' → logprob: -0.9305495619773865
    3. '()' → logprob: -1.5555496215820312
    4. '`)' → logprob: -9.430549621582031
    5. '))' → logprob: -9.805549621582031
    6. '(' → logprob: -10.430549621582031
    7. '()
' → logprob: -10.805549621582031
    8. '')' → logprob: -10.930549621582031
    9. '())
' → logprob: -11.180549621582031
    10. '")' → logprob: -11.555549621582031

Token 20: 't' (ID: 83)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00013321757433004677
    2. 'f' → logprob: -9.000133514404297
    3. ' for' → logprob: -12.500133514404297
    4. 'r' → logprob: -13.125133514404297
    5. 'i' → logprob: -14.500133514404297
    6. '```' → logprob: -14.500133514404297
    7. 't' → logprob: -14.625133514404297
    8. 'fo' → logprob: -14.625133514404297
    9. 'w' → logprob: -14.875133514404297
    10. 'c' → logprob: -15.625133514404297

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18875740468502045
    2. '=' → logprob: -1.8137574195861816
    3. ' ' → logprob: -5.188757419586182
    4. 's' → logprob: -7.063757419586182
    5. '.' → logprob: -7.438757419586182
    6. 'arget' → logprob: -7.563757419586182
    7. '  ' → logprob: -7.938757419586182
    8. '[' → logprob: -8.438756942749023
    9. '_' → logprob: -8.688756942749023
    10. ')' → logprob: -8.813756942749023

Token 22: ' set' (ID: 920)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.25721365213394165
    2. 'set' → logprob: -1.7572135925292969
    3. ' list' → logprob: -3.507213592529297
    4. 'map' → logprob: -5.007213592529297
    5. 'int' → logprob: -5.257213592529297
    6. '[]' → logprob: -5.257213592529297
    7. ' set' → logprob: -5.882213592529297
    8. ' []' → logprob: -6.007213592529297
    9. '[int' → logprob: -7.507213592529297
    10. '[' → logprob: -7.632213592529297

Token 23: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.34972092509269714
    2. '(map' → logprob: -1.2247209548950195
    3. '(input' → logprob: -8.09972095489502
    4. '(int' → logprob: -8.22472095489502
    5. '((' → logprob: -8.22472095489502
    6. '(list' → logprob: -8.47472095489502
    7. ' (' → logprob: -9.47472095489502
    8. '("("' → logprob: -9.97472095489502
    9. '()' → logprob: -10.47472095489502
    10. '(()' → logprob: -11.47472095489502

Token 24: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.016071321442723274
    2. '(' → logprob: -4.141071319580078
    3. '<int' → logprob: -10.766071319580078
    4. '[int' → logprob: -12.016071319580078
    5. ' (' → logprob: -13.141071319580078
    6. '=int' → logprob: -13.266071319580078
    7. '(str' → logprob: -13.391071319580078
    8. 'int' → logprob: -13.516071319580078
    9. ')(' → logprob: -14.266071319580078
    10. '(in' → logprob: -14.266071319580078

Token 25: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0945308655500412
    2. ',int' → logprob: -2.4695308208465576
    3. ',' → logprob: -5.719531059265137
    4. '(' → logprob: -6.594531059265137
    5. ',(' → logprob: -7.969531059265137
    6. '=int' → logprob: -8.844531059265137
    7. '[int' → logprob: -8.844531059265137
    8. 'int' → logprob: -8.969531059265137
    9. ' (' → logprob: -9.844531059265137
    10. ' ,' → logprob: -10.594531059265137

Token 26: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.009951572865247726
    2. ' int' → logprob: -4.759951591491699
    3. '(int' → logprob: -7.009951591491699
    4. 'input' → logprob: -7.884951591491699
    5. '[int' → logprob: -10.3849515914917
    6. ' input' → logprob: -11.2599515914917
    7. ',int' → logprob: -12.2599515914917
    8. '<int' → logprob: -12.8849515914917
    9. ' ' → logprob: -13.3849515914917
    10. '=int' → logprob: -13.5099515914917

Token 27: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.1267397254705429
    2. '(.' → logprob: -2.626739740371704
    3. '(' → logprob: -3.376739740371704
    4. '(int' → logprob: -4.626739501953125
    5. '()' → logprob: -6.126739501953125
    6. '.' → logprob: -9.376739501953125
    7. ')' → logprob: -9.376739501953125
    8. ').' → logprob: -9.626739501953125
    9. ',' → logprob: -9.876739501953125
    10. '(),' → logprob: -10.001739501953125

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.292907877039397e-06
    2. ')' → logprob: -13.87500286102295
    3. 'spl' → logprob: -14.12500286102295
    4. 's' → logprob: -14.25000286102295
    5. ' split' → logprob: -15.00000286102295
    6. 'sp' → logprob: -15.37500286102295
    7. '```' → logprob: -16.250003814697266
    8. '(split' → logprob: -16.375003814697266
    9. 'plit' → logprob: -16.625003814697266
    10. 'strip' → logprob: -17.625003814697266

Token 29: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3472200036048889
    2. '()))' → logprob: -1.5972199440002441
    3. ')' → logprob: -2.722219944000244
    4. '())' → logprob: -3.972219944000244
    5. '()' → logprob: -5.097219944000244
    6. '(' → logprob: -9.722220420837402
    7. ' ))' → logprob: -9.972220420837402
    8. ')))' → logprob: -10.097220420837402
    9. ''))' → logprob: -11.222220420837402
    10. '()))
' → logprob: -11.472220420837402

Token 30: 'print' (ID: 1598)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.08412717282772064
    2. '
' → logprob: -2.959127187728882
    3. 's' → logprob: -4.209126949310303
    4. '\' → logprob: -5.584126949310303
    5. ')' → logprob: -5.709126949310303
    6. ''\' → logprob: -6.334126949310303
    7. 'n' → logprob: -6.709126949310303
    8. '' → logprob: -7.584126949310303
    9. ''' → logprob: -7.709126949310303
    10. ')
' → logprob: -7.834126949310303

Token 31: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.024498283863067627
    2. '(s' → logprob: -4.274498462677002
    3. '("("' → logprob: -5.649498462677002
    4. '('' → logprob: -5.774498462677002
    5. '((' → logprob: -5.774498462677002
    6. '(len' → logprob: -8.024497985839844
    7. '("' → logprob: -10.149497985839844
    8. '(t' → logprob: -10.524497985839844
    9. '("(' → logprob: -10.524497985839844
    10. '('(' → logprob: -11.024497985839844

Token 32: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.01831686869263649
    2. '(' → logprob: -4.018316745758057
    3. '(t' → logprob: -9.518317222595215
    4. '(n' → logprob: -10.268317222595215
    5. 's' → logprob: -10.393317222595215
    6. '((' → logprob: -11.143317222595215
    7. ')' → logprob: -12.018317222595215
    8. '()' → logprob: -13.018317222595215
    9. '(q' → logprob: -13.018317222595215
    10. '(
' → logprob: -14.518317222595215

Token 33: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.04774147644639015
    2. '&' → logprob: -3.797741413116455
    3. '.inter' → logprob: -3.797741413116455
    4. '.union' → logprob: -7.297741413116455
    5. ' ' → logprob: -7.922741413116455
    6. '&s' → logprob: -8.797741889953613
    7. '&t' → logprob: -9.172741889953613
    8. ' |' → logprob: -9.172741889953613
    9. 'intersection' → logprob: -9.297741889953613
    10. ')' → logprob: -9.422741889953613

Token 34: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1797514110803604
    2. ' t' → logprob: -1.8047513961791992
    3. ' ' → logprob: -12.6797513961792
    4. ')' → logprob: -13.5547513961792
    5. '`t' → logprob: -14.3047513961792
    6. ')t' → logprob: -14.8047513961792
    7. 'q' → logprob: -14.9297513961792
    8. ' )' → logprob: -14.9297513961792
    9. '	t' → logprob: -15.4297513961792
    10. ' ' → logprob: -15.9297513961792

Token 35: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.575942873954773
    2. '))' → logprob: -0.825942873954773
    3. ')))' → logprob: -13.200942993164062
    4. ')
' → logprob: -14.950942993164062
    5. ' )' → logprob: -15.075942993164062
    6. ' ))' → logprob: -15.200942993164062
    7. '))
' → logprob: -15.825942993164062
    8. '()))' → logprob: -16.200942993164062
    9. ''))' → logprob: -16.450942993164062
    10. '),' → logprob: -16.450942993164062


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 33
Tokens correctement prédits (1ère position, stricte): 10
Tokens correctement prédits (1ère position, avec adaptation): 10
Tokens correctement prédits (top 10): 25
Précision stricte (1ère position): 30.30%
Précision adaptée (1ère position): 30.30%
Précision (top 10): 75.76%
================================================================================
