================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def count(xs, ys):
    """Returns a count of elements in ys which is also in xs.
    - xs: a sequence of integers sorted in ascending order.
    - ys: a sequence of different integers.

    >>> count([1, 2, 3], [1, 3])
    2
    >>> count([1, 2, 3, 4, 5], [3, 4, 1])
    3
    >>> count([1, 2, 3], [5])
    0
    >>> count([1, 1, 2, 2, 3], [1, 2])
    2
    """
    def binsearch(i, j, n):
        while i <= j:
            mid = (i + j) // 2
            if xs[mid] > n:
                j = mid - 1
            elif xs[mid] < n:
                i = mid + 1
            else:
                return True

        return False

    return [binsearch(0, len(xs)-1, y) for y in ys].count(True)

def run():
    _ = input()  # flake8: noqa
    s = [int(i) for i in input().split()]
    _ = input()  # flake8: noqa
    t = [int(j) for j in input().split()]

    print(count(s, t))

if __name__ == '__main__':
    run()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' count' (ID: 3605)
  → Token d'amorce (pas de prédiction)

Token 2: '(xs' (ID: 132690)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5912232995033264
    2. '[' → logprob: -0.8412232995033264
    3. ')' → logprob: -4.466223239898682
    4. ':' → logprob: -5.841223239898682
    5. '[]):' → logprob: -8.34122371673584
    6. '[
' → logprob: -9.34122371673584
    7. '[int' → logprob: -9.46622371673584
    8. ',' → logprob: -9.59122371673584
    9. '):
' → logprob: -10.09122371673584
    10. '```' → logprob: -10.34122371673584

Token 4: ' ys' (ID: 67301)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3338823616504669
    2. 'item' → logprob: -2.2088823318481445
    3. 'element' → logprob: -2.7088823318481445
    4. 'value' → logprob: -3.3338823318481445
    5. ')' → logprob: -3.4588823318481445
    6. 'predicate' → logprob: -4.2088823318481445
    7. 'key' → logprob: -4.8338823318481445
    8. ' x' → logprob: -5.3338823318481445
    9. 'y' → logprob: -6.0838823318481445
    10. 'elem' → logprob: -6.2088823318481445

Token 5: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1282188594341278
    2. ',' → logprob: -2.25321888923645
    3. ')' → logprob: -4.253218650817871
    4. ':' → logprob: -7.503218650817871
    5. '[' → logprob: -9.253218650817871
    6. '):
' → logprob: -9.628218650817871
    7. '=' → logprob: -9.753218650817871
    8. '```' → logprob: -9.878218650817871
    9. '   ' → logprob: -10.253218650817871
    10. '[]):' → logprob: -10.503218650817871

Token 6: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09805948287248611
    2. '   ' → logprob: -2.5980594158172607
    3. ''' → logprob: -5.09805965423584
    4. '```' → logprob: -5.97305965423584
    5. ' :' → logprob: -6.47305965423584
    6. '(' → logprob: -6.72305965423584
    7. '():' → logprob: -6.84805965423584
    8. ' ' → logprob: -6.84805965423584
    9. '':' → logprob: -7.09805965423584
    10. '":' → logprob: -7.34805965423584

Token 7: ' """' (ID: 9280)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42925015091896057
    2. 'return' → logprob: -2.0542502403259277
    3. ' ' → logprob: -2.4292502403259277
    4. '    ' → logprob: -3.6792502403259277
    5. '[' → logprob: -3.8042502403259277
    6. 'x' → logprob: -4.054250240325928
    7. 'r' → logprob: -4.179250240325928
    8. ' return' → logprob: -4.554250240325928
    9. 'i' → logprob: -4.804250240325928
    10. '```' → logprob: -5.804250240325928

Token 8: 'Returns' (ID: 30409)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.0784645676612854
    2. '""' → logprob: -4.078464508056641
    3. '   ' → logprob: -4.203464508056641
    4. 'count' → logprob: -4.578464508056641
    5. ''''' → logprob: -4.828464508056641
    6. 'return' → logprob: -4.828464508056641
    7. '\n' → logprob: -5.953464508056641
    8. 'for' → logprob: -6.328464508056641
    9. '"""
' → logprob: -6.453464508056641
    10. '''' → logprob: -6.578464508056641

Token 9: ' a' (ID: 261)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.026675289496779442
    2. ' len' → logprob: -4.651675224304199
    3. ' ' → logprob: -5.026675224304199
    4. 'the' → logprob: -5.151675224304199
    5. ' a' → logprob: -6.651675224304199
    6. 'len' → logprob: -6.901675224304199
    7. ' number' → logprob: -7.651675224304199
    8. ' True' → logprob: -7.776675224304199
    9. ' how' → logprob: -8.1516752243042
    10. ' sum' → logprob: -8.4016752243042

Token 10: ' count' (ID: 3605)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2168257087469101
    2. ' dictionary' → logprob: -1.9668257236480713
    3. 'n' → logprob: -4.091825485229492
    4. ' defaultdict' → logprob: -4.841825485229492
    5. ' new' → logprob: -5.091825485229492
    6. 's' → logprob: -5.591825485229492
    7. ' list' → logprob: -5.716825485229492
    8. ' dict' → logprob: -6.216825485229492
    9. ' )' → logprob: -6.216825485229492
    10. ' count' → logprob: -6.341825485229492

Token 11: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3984144926071167
    2. ' of' → logprob: -1.5234144926071167
    3. ')' → logprob: -3.1484146118164062
    4. 'of' → logprob: -3.7734146118164062
    5. 's' → logprob: -4.398414611816406
    6. ' (' → logprob: -4.898414611816406
    7. ' ' → logprob: -5.023414611816406
    8. '```' → logprob: -5.648414611816406
    9. 'er' → logprob: -5.773414611816406
    10. ''' → logprob: -6.273414611816406

Token 12: ' elements' (ID: 8632)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38396379351615906
    2. ' elements' → logprob: -2.2589638233184814
    3. ' the' → logprob: -2.5089638233184814
    4. ' items' → logprob: -3.0089638233184814
    5. ' each' → logprob: -3.3839638233184814
    6. ' matching' → logprob: -4.383963584899902
    7. ' )' → logprob: -4.883963584899902
    8. ' occurrences' → logprob: -5.133963584899902
    9. 's' → logprob: -5.883963584899902
    10. ' unique' → logprob: -5.883963584899902

Token 13: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20456014573574066
    2. ')' → logprob: -2.9545600414276123
    3. ' ' → logprob: -2.9545600414276123
    4. ' of' → logprob: -3.3295600414276123
    5. ' )' → logprob: -4.204560279846191
    6. ' that' → logprob: -4.579560279846191
    7. '```' → logprob: -5.454560279846191
    8. '   ' → logprob: -5.704560279846191
    9. '(' → logprob: -5.829560279846191
    10. 's' → logprob: -6.579560279846191

Token 14: ' ys' (ID: 67301)
  Prédit: ' xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' xs' → logprob: -0.8031858801841736
    2. ' the' → logprob: -1.1781859397888184
    3. ' both' → logprob: -2.4281859397888184
    4. ' ys' → logprob: -2.6781859397888184
    5. ' ' → logprob: -3.1781859397888184
    6. 'the' → logprob: -4.553185939788818
    7. 'xs' → logprob: -4.803185939788818
    8. ' a' → logprob: -5.178185939788818
    9. ' each' → logprob: -5.178185939788818
    10. '(xs' → logprob: -5.303185939788818

Token 15: ' which' (ID: 1118)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.762900710105896
    2. ' that' → logprob: -1.387900710105896
    3. '```' → logprob: -2.2629008293151855
    4. '   ' → logprob: -2.5129008293151855
    5. '"""' → logprob: -2.7629008293151855
    6. '.' → logprob: -4.8879008293151855
    7. ',' → logprob: -5.2629008293151855
    8. '"""
' → logprob: -5.3879008293151855
    9. 'that' → logprob: -5.5129008293151855
    10. ' ' → logprob: -5.6379008293151855

Token 16: ' is' (ID: 382)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.010707732290029526
    2. ' appear' → logprob: -5.885707855224609
    3. ' not' → logprob: -6.260707855224609
    4. ' in' → logprob: -6.385707855224609
    5. ' is' → logprob: -6.760707855224609
    6. 'are' → logprob: -6.885707855224609
    7. ' match' → logprob: -7.260707855224609
    8. ' occur' → logprob: -7.635707855224609
    9. '```' → logprob: -8.13570785522461
    10. ' have' → logprob: -9.38570785522461

Token 17: ' also' (ID: 1217)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7774937152862549
    2. ' also' → logprob: -1.0274937152862549
    3. ' not' → logprob: -2.402493715286255
    4. 'in' → logprob: -3.152493715286255
    5. ' a' → logprob: -4.277493476867676
    6. 'also' → logprob: -4.277493476867676
    7. 'not' → logprob: -4.652493476867676
    8. ' contained' → logprob: -5.902493476867676
    9. ' ' → logprob: -6.152493476867676
    10. ' found' → logprob: -6.402493476867676

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04170309007167816
    2. 'in' → logprob: -3.54170298576355
    3. ' present' → logprob: -5.166703224182129
    4. ' found' → logprob: -5.791703224182129
    5. ' a' → logprob: -7.291703224182129
    6. '```' → logprob: -7.291703224182129
    7. ' ' → logprob: -7.416703224182129
    8. 'found' → logprob: -7.416703224182129
    9. ')' → logprob: -9.416703224182129
    10. 'present' → logprob: -9.541703224182129

Token 19: ' xs' (ID: 26642)
  Prédit: ' xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' xs' → logprob: -0.06231137737631798
    2. 'xs' → logprob: -2.8123114109039307
    3. ' ' → logprob: -8.812311172485352
    4. '```' → logprob: -10.312311172485352
    5. '(xs' → logprob: -10.437311172485352
    6. 'Xs' → logprob: -10.437311172485352
    7. ' the' → logprob: -10.562311172485352
    8. 'x' → logprob: -11.062311172485352
    9. ' ys' → logprob: -11.187311172485352
    10. ' x' → logprob: -11.312311172485352

Token 20: '.
' (ID: 558)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.26912635564804077
    2. '```' → logprob: -2.5191264152526855
    3. ')' → logprob: -3.2691264152526855
    4. '   ' → logprob: -3.2691264152526855
    5. '.' → logprob: -3.6441264152526855
    6. '\n' → logprob: -3.8941264152526855
    7. '"""
' → logprob: -4.2691264152526855
    8. '""' → logprob: -4.6441264152526855
    9. '"' → logprob: -5.3941264152526855
    10. '``' → logprob: -6.5191264152526855

Token 21: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2347402125597
    2. '"""' → logprob: -2.3597402572631836
    3. '   ' → logprob: -3.1097402572631836
    4. '"""
' → logprob: -3.8597402572631836
    5. ')' → logprob: -4.484740257263184
    6. '"' → logprob: -4.484740257263184
    7. '```' → logprob: -4.859740257263184
    8. '  
' → logprob: -5.609740257263184
    9. '\r' → logprob: -5.984740257263184
    10. ''' → logprob: -5.984740257263184

Token 22: ' -' (ID: 533)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.19857433438301086
    2. '"""' → logprob: -2.8235743045806885
    3. '```' → logprob: -3.1985743045806885
    4. '   ' → logprob: -3.6985743045806885
    5. ')' → logprob: -4.073574542999268
    6. '"""
' → logprob: -4.948574542999268
    7. '  
' → logprob: -5.323574542999268
    8. '\' → logprob: -5.573574542999268
    9. '\r' → logprob: -5.698574542999268
    10. '"' → logprob: -5.823574542999268

Token 23: ' xs' (ID: 26642)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10097721219062805
    2. '"""' → logprob: -3.7259771823883057
    3. ' """' → logprob: -3.9759771823883057
    4. ''' → logprob: -4.100977420806885
    5. ')' → logprob: -4.475977420806885
    6. '"' → logprob: -4.600977420806885
    7. ' )' → logprob: -5.225977420806885
    8. '```' → logprob: -5.850977420806885
    9. '`' → logprob: -7.350977420806885
    10. ' """
' → logprob: -7.350977420806885

Token 24: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.548685073852539
    2. ' and' → logprob: -1.548685073852539
    3. ')' → logprob: -1.798685073852539
    4. ' in' → logprob: -2.298685073852539
    5. ' ' → logprob: -2.548685073852539
    6. ',' → logprob: -3.173685073852539
    7. '"' → logprob: -3.673685073852539
    8. ''' → logprob: -4.173685073852539
    9. '"""' → logprob: -4.173685073852539
    10. '  ' → logprob: -4.548685073852539

Token 25: ' a' (ID: 261)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.1029553934931755
    2. ' List' → logprob: -2.8529553413391113
    3. ' set' → logprob: -3.9779553413391113
    4. 'list' → logprob: -4.352955341339111
    5. ' iterable' → logprob: -5.852955341339111
    6. ' Iterable' → logprob: -6.352955341339111
    7. 'List' → logprob: -7.227955341339111
    8. ' ' → logprob: -7.227955341339111
    9. ' sequence' → logprob: -7.352955341339111
    10. ' a' → logprob: -8.10295581817627

Token 26: ' sequence' (ID: 16281)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2802332043647766
    2. ' set' → logprob: -1.9052331447601318
    3. ' list' → logprob: -2.405233144760132
    4. ' sequence' → logprob: -6.905233383178711
    5. ' )' → logprob: -7.280233383178711
    6. ')' → logprob: -7.405233383178711
    7. '<|end|>' → logprob: -7.530233383178711
    8. 'set' → logprob: -7.530233383178711
    9. 'list' → logprob: -7.655233383178711
    10. ' space' → logprob: -8.030233383178711

Token 27: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1363050937652588
    2. ' ' → logprob: -2.636305093765259
    3. ',' → logprob: -4.01130485534668
    4. '<|end|>' → logprob: -4.76130485534668
    5. '   ' → logprob: -4.88630485534668
    6. ' )' → logprob: -5.01130485534668
    7. '.' → logprob: -5.01130485534668
    8. ''' → logprob: -6.38630485534668
    9. '  ' → logprob: -6.51130485534668
    10. ' ,' → logprob: -6.76130485534668

Token 28: ' integers' (ID: 54912)
  Prédit: ' elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.590090274810791
    2. 'elements' → logprob: -2.090090274810791
    3. ' ' → logprob: -2.465090274810791
    4. ')' → logprob: -3.465090274810791
    5. ' strings' → logprob: -3.840090274810791
    6. 'str' → logprob: -3.965090274810791
    7. ' items' → logprob: -3.965090274810791
    8. ' ys' → logprob: -3.965090274810791
    9. ' objects' → logprob: -4.340090274810791
    10. ' str' → logprob: -4.340090274810791

Token 29: ' sorted' (ID: 20099)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3485339283943176
    2. ')' → logprob: -1.7235338687896729
    3. '"""
' → logprob: -4.223534107208252
    4. '```' → logprob: -4.348534107208252
    5. '\n' → logprob: -4.723534107208252
    6. '"""' → logprob: -4.848534107208252
    7. '    
' → logprob: -4.973534107208252
    8. ',' → logprob: -4.973534107208252
    9. '"\' → logprob: -5.098534107208252
    10. '"' → logprob: -5.223534107208252

Token 30: ' in' (ID: 306)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9829771518707275
    2. '<|end|>' → logprob: -0.9829771518707275
    3. ',' → logprob: -2.8579771518707275
    4. ' in' → logprob: -3.1079771518707275
    5. ' ,' → logprob: -3.2329771518707275
    6. ')' → logprob: -3.6079771518707275
    7. ' and' → logprob: -3.7329771518707275
    8. '  ' → logprob: -3.9829771518707275
    9. '<|end|>' → logprob: -4.982976913452148
    10. ' (' → logprob: -4.982976913452148

Token 31: ' ascending' (ID: 75564)
  Prédit: ' ascending'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ascending' → logprob: -0.25689247250556946
    2. ' increasing' → logprob: -2.131892442703247
    3. ' non' → logprob: -2.756892442703247
    4. 'ascending' → logprob: -3.256892442703247
    5. 'non' → logprob: -6.131892681121826
    6. 'creasing' → logprob: -6.381892681121826
    7. ' strictly' → logprob: -7.131892681121826
    8. 'in' → logprob: -7.131892681121826
    9. ' ' → logprob: -9.131892204284668
    10. ' a' → logprob: -9.381892204284668

Token 32: ' order' (ID: 2569)
  Prédit: ' order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.11111420392990112
    2. '<|end|>' → logprob: -2.611114263534546
    3. ' ' → logprob: -3.611114263534546
    4. 'order' → logprob: -5.611114025115967
    5. '<|end|>' → logprob: -7.986114025115967
    6. ')' → logprob: -8.236114501953125
    7. ' )' → logprob: -9.111114501953125
    8. ',' → logprob: -9.611114501953125
    9. '_order' → logprob: -10.111114501953125
    10. '```' → logprob: -10.111114501953125

Token 33: '.
' (ID: 558)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2120010107755661
    2. '   ' → logprob: -2.587001085281372
    3. ')' → logprob: -2.712001085281372
    4. '\' → logprob: -4.587000846862793
    5. '```' → logprob: -5.087000846862793
    6. '\r' → logprob: -5.337000846862793
    7. ' ' → logprob: -5.587000846862793
    8. '"\' → logprob: -5.712000846862793
    9. '"""' → logprob: -5.962000846862793
    10. '    
' → logprob: -5.962000846862793

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3336820602416992
    2. '\n' → logprob: -2.833682060241699
    3. ')' → logprob: -3.083682060241699
    4. '\' → logprob: -3.208682060241699
    5. '<|end|>' → logprob: -3.583682060241699
    6. ' 
' → logprob: -3.958682060241699
    7. ' ' → logprob: -3.958682060241699
    8. '```' → logprob: -4.083682060241699
    9. '    
' → logprob: -4.458682060241699
    10. '    ' → logprob: -4.708682060241699

Token 35: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46802181005477905
    2. '"""' → logprob: -1.3430218696594238
    3. ' """' → logprob: -3.093021869659424
    4. ')' → logprob: -4.468021869659424
    5. ' ' → logprob: -4.718021869659424
    6. '```' → logprob: -4.718021869659424
    7. '\n' → logprob: -4.968021869659424
    8. '\' → logprob: -5.093021869659424
    9. '    ' → logprob: -5.218021869659424
    10. ' 
' → logprob: -5.843021869659424

Token 36: ' ys' (ID: 67301)
  Prédit: ' ys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ys' → logprob: -0.03369583934545517
    2. 'ys' → logprob: -3.408695936203003
    3. ' y' → logprob: -10.533696174621582
    4. 'y' → logprob: -11.533696174621582
    5. '```' → logprob: -12.658696174621582
    6. ' yl' → logprob: -13.658696174621582
    7. 'Ys' → logprob: -13.783696174621582
    8. ' ' → logprob: -14.033696174621582
    9. 'The' → logprob: -14.283696174621582
    10. ')' → logprob: -14.283696174621582

Token 37: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01105265598744154
    2. '):' → logprob: -4.88605260848999
    3. ' :' → logprob: -6.63605260848999
    4. ' is' → logprob: -6.63605260848999
    5. ',' → logprob: -7.88605260848999
    6. ')' → logprob: -8.636053085327148
    7. '   ' → logprob: -8.636053085327148
    8. '<|end|>' → logprob: -10.886053085327148
    9. '```' → logprob: -10.886053085327148
    10. '  ' → logprob: -12.386053085327148

Token 38: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.02538197673857212
    2. 'a' → logprob: -3.7753820419311523
    3. ' ' → logprob: -7.025382041931152
    4. '<|end|>' → logprob: -7.775382041931152
    5. ' sequence' → logprob: -8.525382041931152
    6. ' A' → logprob: -8.650382041931152
    7. ' an' → logprob: -9.275382041931152
    8. ' sequences' → logprob: -9.650382041931152
    9. 'sequence' → logprob: -9.650382041931152
    10. ' list' → logprob: -9.900382041931152

Token 39: ' sequence' (ID: 16281)
  Prédit: ' sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.19273187220096588
    2. ' ' → logprob: -1.8177318572998047
    3. 'sequence' → logprob: -4.567731857299805
    4. ' space' → logprob: -6.567731857299805
    5. ' list' → logprob: -7.192731857299805
    6. ' s' → logprob: -9.192731857299805
    7. 's' → logprob: -9.192731857299805
    8. 'n' → logprob: -10.442731857299805
    9. ' )' → logprob: -10.692731857299805
    10. 'space' → logprob: -10.942731857299805

Token 40: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.022150861099362373
    2. '<|end|>' → logprob: -4.397150993347168
    3. 'of' → logprob: -5.522150993347168
    4. ')' → logprob: -5.897150993347168
    5. ' ' → logprob: -6.522150993347168
    6. '<|end|>' → logprob: -7.522150993347168
    7. '[' → logprob: -8.522150993347168
    8. ' in' → logprob: -9.147150993347168
    9. '```' → logprob: -9.397150993347168
    10. ' )' → logprob: -9.522150993347168

Token 41: ' different' (ID: 2647)
  Prédit: ' integers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.014922928996384144
    2. 'inte' → logprob: -4.264923095703125
    3. ' int' → logprob: -8.014923095703125
    4. 'int' → logprob: -8.389923095703125
    5. ' integer' → logprob: -9.639923095703125
    6. ' ' → logprob: -10.514923095703125
    7. 'ints' → logprob: -10.514923095703125
    8. ' ints' → logprob: -11.139923095703125
    9. ' a' → logprob: -11.389923095703125
    10. 'space' → logprob: -11.514923095703125

Token 42: ' integers' (ID: 54912)
  Prédit: ' integers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.1149296760559082
    2. ' ' → logprob: -2.739929676055908
    3. ')' → logprob: -3.489929676055908
    4. '<|end|>' → logprob: -5.489929676055908
    5. 's' → logprob: -5.989929676055908
    6. '  ' → logprob: -6.239929676055908
    7. 'inte' → logprob: -6.489929676055908
    8. ',' → logprob: -7.239929676055908
    9. ' )' → logprob: -7.489929676055908
    10. ' elements' → logprob: -7.489929676055908

Token 43: '.

' (ID: 364)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26402169466018677
    2. '):' → logprob: -1.764021635055542
    3. '"""' → logprob: -3.514021635055542
    4. '```' → logprob: -4.139021873474121
    5. '   ' → logprob: -4.639021873474121
    6. '):
' → logprob: -6.639021873474121
    7. '""' → logprob: -7.014021873474121
    8. '"""
' → logprob: -7.264021873474121
    9. ':' → logprob: -7.389021873474121
    10. ',' → logprob: -8.139021873474121

Token 44: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2330370545387268
    2. '"""' → logprob: -2.358036994934082
    3. '   ' → logprob: -2.608036994934082
    4. ' ' → logprob: -4.108036994934082
    5. '"' → logprob: -4.358036994934082
    6. ' )' → logprob: -5.858036994934082
    7. ' """' → logprob: -6.108036994934082
    8. '```' → logprob: -6.483036994934082
    9. '"""
' → logprob: -7.608036994934082
    10. '\n' → logprob: -7.608036994934082

Token 45: ' >>>' (ID: 25030)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.1967330425977707
    2. ' """' → logprob: -2.821732997894287
    3. '   ' → logprob: -2.946732997894287
    4. '"' → logprob: -4.071732997894287
    5. ' ' → logprob: -4.071732997894287
    6. ' """
' → logprob: -4.821732997894287
    7. '"""
' → logprob: -4.821732997894287
    8. 'n' → logprob: -5.696732997894287
    9. '\n' → logprob: -5.821732997894287
    10. ')' → logprob: -6.571732997894287

Token 46: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.49025747179985046
    2. ' count' → logprob: -1.3652575016021729
    3. 'sum' → logprob: -3.240257501602173
    4. ' sum' → logprob: -3.865257501602173
    5. 'x' → logprob: -4.115257263183594
    6. ' x' → logprob: -4.115257263183594
    7. ' xs' → logprob: -4.615257263183594
    8. 'len' → logprob: -5.240257263183594
    9. 'c' → logprob: -5.365257263183594
    10. ' len' → logprob: -5.615257263183594

Token 47: '([' (ID: 5194)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04877301678061485
    2. '(xs' → logprob: -3.0487730503082275
    3. '([' → logprob: -9.298772811889648
    4. '(x' → logprob: -10.548772811889648
    5. ' (' → logprob: -10.798772811889648
    6. '(
' → logprob: -11.423772811889648
    7. '("""' → logprob: -12.048772811889648
    8. '(s' → logprob: -12.423772811889648
    9. '(`' → logprob: -12.423772811889648
    10. '('' → logprob: -12.548772811889648

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012742599472403526
    2. '2' → logprob: -5.262742519378662
    3. ']' → logprob: -6.262742519378662
    4. '3' → logprob: -6.512742519378662
    5. ' ' → logprob: -6.637742519378662
    6. '])' → logprob: -6.887742519378662
    7. '0' → logprob: -7.137742519378662
    8. ')' → logprob: -8.38774299621582
    9. '-' → logprob: -8.38774299621582
    10. '5' → logprob: -8.51274299621582

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015241486253216863
    2. ' ,' → logprob: -7.001523971557617
    3. '2' → logprob: -7.751523971557617
    4. '0' → logprob: -9.626523971557617
    5. ' ' → logprob: -9.876523971557617
    6. ',
' → logprob: -11.126523971557617
    7. '   ' → logprob: -11.251523971557617
    8. '1' → logprob: -11.626523971557617
    9. '3' → logprob: -11.626523971557617
    10. '5' → logprob: -12.001523971557617

Token 50: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2888621389865875
    2. '2' → logprob: -1.4138621091842651
    3. '3' → logprob: -4.913862228393555
    4. '4' → logprob: -8.413862228393555
    5. '5' → logprob: -9.913862228393555
    6. '1' → logprob: -10.163862228393555
    7. '  ' → logprob: -11.913862228393555
    8. '7' → logprob: -12.726362228393555
    9. '9' → logprob: -12.788862228393555
    10. '   ' → logprob: -12.913862228393555

Token 51: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.027560988441109657
    2. '3' → logprob: -3.6525609493255615
    3. '4' → logprob: -7.277561187744141
    4. '5' → logprob: -8.15256118774414
    5. ' ' → logprob: -9.15256118774414
    6. '1' → logprob: -9.77756118774414
    7. '10' → logprob: -9.77756118774414
    8. '7' → logprob: -10.90256118774414
    9. '9' → logprob: -11.65256118774414
    10. '6' → logprob: -12.15256118774414

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005691165570169687
    2. '3' → logprob: -5.630691051483154
    3. ' ,' → logprob: -6.380691051483154
    4. '],' → logprob: -8.130691528320312
    5. ' ' → logprob: -9.755691528320312
    6. ']' → logprob: -11.505691528320312
    7. ' ],' → logprob: -12.130691528320312
    8. '<|end|>' → logprob: -12.255691528320312
    9. '5' → logprob: -12.505691528320312
    10. '4' → logprob: -12.755691528320312

Token 53: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42889538407325745
    2. '3' → logprob: -1.053895354270935
    3. '4' → logprob: -8.928894996643066
    4. '5' → logprob: -10.803894996643066
    5. '<|end|>' → logprob: -11.303894996643066
    6. ')' → logprob: -11.428894996643066
    7. ' )' → logprob: -12.678894996643066
    8. '2' → logprob: -13.178894996643066
    9. '7' → logprob: -13.178894996643066
    10. '1' → logprob: -13.491394996643066

Token 54: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0002690840628929436
    2. '4' → logprob: -9.250268936157227
    3. ' ' → logprob: -9.375268936157227
    4. '5' → logprob: -9.750268936157227
    5. '])' → logprob: -11.875268936157227
    6. '2' → logprob: -12.375268936157227
    7. ']' → logprob: -12.500268936157227
    8. ')' → logprob: -12.500268936157227
    9. '```' → logprob: -13.125268936157227
    10. '7' → logprob: -13.250268936157227

Token 55: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.12797428667545319
    2. ',' → logprob: -2.127974271774292
    3. '4' → logprob: -7.752974510192871
    4. ']' → logprob: -8.252974510192871
    5. ' ],' → logprob: -8.502974510192871
    6. ' ,' → logprob: -10.127974510192871
    7. '),' → logprob: -10.627974510192871
    8. '],[' → logprob: -10.877974510192871
    9. '])' → logprob: -11.002974510192871
    10. '1' → logprob: -11.377974510192871

Token 56: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.14647139608860016
    2. '[' → logprob: -2.0214715003967285
    3. ' ' → logprob: -5.8964715003967285
    4. ' ys' → logprob: -7.7714715003967285
    5. ' )' → logprob: -8.52147102355957
    6. ')' → logprob: -9.02147102355957
    7. '<|end|>' → logprob: -9.14647102355957
    8. '4' → logprob: -9.77147102355957
    9. ' ' → logprob: -10.39647102355957
    10. ' y' → logprob: -11.14647102355957

Token 57: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4916519224643707
    2. '3' → logprob: -1.8666518926620483
    3. '4' → logprob: -1.9916518926620483
    4. '1' → logprob: -2.366652011871338
    5. ' ' → logprob: -6.116652011871338
    6. '5' → logprob: -7.116652011871338
    7. '7' → logprob: -8.99165153503418
    8. '0' → logprob: -9.61665153503418
    9. '6' → logprob: -9.86665153503418
    10. '])' → logprob: -9.99165153503418

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007241101702675223
    2. ' ,' → logprob: -7.3757243156433105
    3. ',
' → logprob: -10.250723838806152
    4. ' ' → logprob: -10.750723838806152
    5. '2' → logprob: -11.000723838806152
    6. ',

' → logprob: -11.500723838806152
    7. ')' → logprob: -12.875723838806152
    8. ']' → logprob: -13.000723838806152
    9. '])' → logprob: -13.125723838806152
    10. '4' → logprob: -13.250723838806152

Token 59: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2912684679031372
    2. '2' → logprob: -1.7912684679031372
    3. '4' → logprob: -2.5412683486938477
    4. '3' → logprob: -5.541268348693848
    5. '5' → logprob: -6.041268348693848
    6. ')' → logprob: -8.541268348693848
    7. '1' → logprob: -8.791268348693848
    8. '9' → logprob: -9.041268348693848
    9. '6' → logprob: -9.291268348693848
    10. ' )' → logprob: -9.791268348693848

Token 60: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.33047473430633545
    2. '4' → logprob: -1.4554747343063354
    3. '3' → logprob: -3.330474853515625
    4. ' ' → logprob: -5.080474853515625
    5. '5' → logprob: -5.580474853515625
    6. '1' → logprob: -6.205474853515625
    7. '7' → logprob: -9.080474853515625
    8. '6' → logprob: -9.830474853515625
    9. '9' → logprob: -10.205474853515625
    10. '10' → logprob: -10.330474853515625

Token 61: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.20346041023731232
    2. ',' → logprob: -1.703460454940796
    3. ']' → logprob: -6.703460216522217
    4. ' ])' → logprob: -7.703460216522217
    5. ')' → logprob: -8.328460693359375
    6. '4' → logprob: -10.453460693359375
    7. ' ' → logprob: -10.828460693359375
    8. ' ,' → logprob: -11.203460693359375
    9. '2' → logprob: -11.453460693359375
    10. '])
' → logprob: -11.953460693359375

Token 62: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08499245345592499
    2. ' ' → logprob: -4.084992408752441
    3. '"""' → logprob: -4.334992408752441
    4. '"""
' → logprob: -4.584992408752441
    5. ')
' → logprob: -4.709992408752441
    6. '   ' → logprob: -4.834992408752441
    7. '):' → logprob: -5.334992408752441
    8. ' )' → logprob: -5.584992408752441
    9. '"' → logprob: -6.084992408752441
    10. '```' → logprob: -6.209992408752441

Token 63: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.18315555155277252
    2. ' ' → logprob: -1.9331555366516113
    3. '3' → logprob: -3.9331555366516113
    4. '1' → logprob: -5.808155536651611
    5. '4' → logprob: -10.18315601348877
    6. ''' → logprob: -10.30815601348877
    7. '0' → logprob: -12.55815601348877
    8. '5' → logprob: -12.80815601348877
    9. '6' → logprob: -12.93315601348877
    10. ' '' → logprob: -14.05815601348877

Token 64: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5082094669342041
    2. ')' → logprob: -1.508209466934204
    3. '4' → logprob: -1.883209466934204
    4. '2' → logprob: -4.383209228515625
    5. '"""' → logprob: -5.508209228515625
    6. '1' → logprob: -6.383209228515625
    7. '5' → logprob: -6.383209228515625
    8. ')
' → logprob: -7.133209228515625
    9. '7' → logprob: -7.133209228515625
    10. ' )' → logprob: -7.133209228515625

Token 65: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34738463163375854
    2. '\n' → logprob: -2.3473846912384033
    3. '"""' → logprob: -2.3473846912384033
    4. '```' → logprob: -3.4723846912384033
    5. '
' → logprob: -3.5973846912384033
    6. '\' → logprob: -4.722384452819824
    7. '"""
' → logprob: -4.847384452819824
    8. ' ' → logprob: -5.222384452819824
    9. '"' → logprob: -5.722384452819824
    10. '"\' → logprob: -6.222384452819824

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09794794023036957
    2. '"""' → logprob: -2.972947835922241
    3. '```' → logprob: -4.34794807434082
    4. '"""
' → logprob: -4.72294807434082
    5. '\n' → logprob: -5.22294807434082
    6. '"' → logprob: -5.34794807434082
    7. ')' → logprob: -5.72294807434082
    8. '\' → logprob: -6.22294807434082
    9. '    
' → logprob: -7.34794807434082
    10. '`' → logprob: -7.47294807434082

Token 67: ' >>>' (ID: 25030)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10041165351867676
    2. '"""' → logprob: -2.4754116535186768
    3. ' """' → logprob: -5.225411415100098
    4. '"' → logprob: -6.725411415100098
    5. ')' → logprob: -6.725411415100098
    6. '```' → logprob: -6.725411415100098
    7. '"""
' → logprob: -6.975411415100098
    8. '  ' → logprob: -8.100411415100098
    9. ' """
' → logprob: -8.350411415100098
    10. '""' → logprob: -8.600411415100098

Token 68: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.42896726727485657
    2. 'count' → logprob: -1.0539672374725342
    3. ' ' → logprob: -9.553967475891113
    4. '   ' → logprob: -9.803967475891113
    5. ' ys' → logprob: -10.678967475891113
    6. 'print' → logprob: -10.928967475891113
    7. '  ' → logprob: -11.303967475891113
    8. 'ys' → logprob: -11.803967475891113
    9. ' len' → logprob: -11.803967475891113
    10. ' print' → logprob: -11.803967475891113

Token 69: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.005328505299985409
    2. '(' → logprob: -5.25532865524292
    3. '([]' → logprob: -10.130328178405762
    4. ' ([' → logprob: -10.880328178405762
    5. '([...' → logprob: -11.880328178405762
    6. '(['' → logprob: -12.130328178405762
    7. '([],' → logprob: -12.380328178405762
    8. '([-' → logprob: -12.755328178405762
    9. '(
' → logprob: -12.880328178405762
    10. '([
' → logprob: -13.255328178405762

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31559935212135315
    2. '4' → logprob: -1.4405993223190308
    3. '2' → logprob: -3.5655994415283203
    4. '[' → logprob: -6.56559944152832
    5. '3' → logprob: -6.94059944152832
    6. '10' → logprob: -7.06559944152832
    7. '0' → logprob: -7.31559944152832
    8. '5' → logprob: -7.31559944152832
    9. ' ' → logprob: -7.31559944152832
    10. '-' → logprob: -9.31559944152832

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019025320187211037
    2. ' ,' → logprob: -4.0190253257751465
    3. '2' → logprob: -7.1440253257751465
    4. '4' → logprob: -10.519024848937988
    5. '3' → logprob: -10.769024848937988
    6. ' ' → logprob: -11.019024848937988
    7. '[' → logprob: -12.394024848937988
    8. '1' → logprob: -12.644024848937988
    9. ',
' → logprob: -12.769024848937988
    10. '   ' → logprob: -12.769024848937988

Token 72: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11292602121829987
    2. '2' → logprob: -2.3629260063171387
    3. '4' → logprob: -4.487926006317139
    4. '3' → logprob: -7.112926006317139
    5. '1' → logprob: -8.612926483154297
    6. '5' → logprob: -8.862926483154297
    7. ' [' → logprob: -8.987926483154297
    8. '[' → logprob: -10.237926483154297
    9. '  ' → logprob: -10.862926483154297
    10. ')' → logprob: -10.862926483154297

Token 73: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.27388542890548706
    2. ' ' → logprob: -1.6488854885101318
    3. '4' → logprob: -3.148885488510132
    4. '3' → logprob: -6.148885250091553
    5. '5' → logprob: -6.523885250091553
    6. '1' → logprob: -7.648885250091553
    7. '10' → logprob: -9.273885726928711
    8. '])' → logprob: -9.773885726928711
    9. '  ' → logprob: -10.148885726928711
    10. '   ' → logprob: -10.398885726928711

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016670884797349572
    2. ' ,' → logprob: -6.501667022705078
    3. '3' → logprob: -9.626667022705078
    4. '[' → logprob: -10.001667022705078
    5. ',[' → logprob: -10.626667022705078
    6. ' ' → logprob: -11.751667022705078
    7. '4' → logprob: -11.876667022705078
    8. '],' → logprob: -12.626667022705078
    9. ' ,[' → logprob: -12.751667022705078
    10. '   ' → logprob: -13.376667022705078

Token 75: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.6950892806053162
    2. ' ' → logprob: -0.8200892806053162
    3. '3' → logprob: -2.820089340209961
    4. '5' → logprob: -7.570089340209961
    5. '2' → logprob: -8.570089340209961
    6. '])' → logprob: -9.445089340209961
    7. '1' → logprob: -9.820089340209961
    8. '[' → logprob: -10.195089340209961
    9. ' [' → logprob: -10.445089340209961
    10. '  ' → logprob: -11.507589340209961

Token 76: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.239540696144104
    2. '4' → logprob: -1.614540696144104
    3. ' ' → logprob: -4.4895405769348145
    4. '5' → logprob: -6.3645405769348145
    5. '])' → logprob: -7.7395405769348145
    6. '2' → logprob: -7.9895405769348145
    7. '7' → logprob: -9.614541053771973
    8. '[' → logprob: -9.739541053771973
    9. '6' → logprob: -10.114541053771973
    10. '1' → logprob: -10.239541053771973

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2023433893918991
    2. '],' → logprob: -1.7023433446884155
    3. ']' → logprob: -7.452343463897705
    4. ' ,' → logprob: -8.577342987060547
    5. ' ],' → logprob: -9.077342987060547
    6. '4' → logprob: -11.702342987060547
    7. ' ' → logprob: -11.952342987060547
    8. '),' → logprob: -12.077342987060547
    9. '],[' → logprob: -12.577342987060547
    10. '3' → logprob: -12.702342987060547

Token 78: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1633302867412567
    2. '4' → logprob: -1.913330316543579
    3. '5' → logprob: -5.913330078125
    4. '])' → logprob: -9.038330078125
    5. '7' → logprob: -9.663330078125
    6. '6' → logprob: -9.663330078125
    7. ',' → logprob: -10.538330078125
    8. ']' → logprob: -10.663330078125
    9. ' ])' → logprob: -10.788330078125
    10. ' ]' → logprob: -11.475830078125

Token 79: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.12204158306121826
    2. '5' → logprob: -2.247041702270508
    3. ' ' → logprob: -5.747041702270508
    4. '7' → logprob: -5.997041702270508
    5. '6' → logprob: -6.247041702270508
    6. '3' → logprob: -7.372041702270508
    7. '10' → logprob: -8.122041702270508
    8. '])' → logprob: -8.872041702270508
    9. '2' → logprob: -9.247041702270508
    10. '8' → logprob: -9.372041702270508

Token 80: ',' (ID: 11)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.02795426920056343
    2. ',' → logprob: -3.652954339981079
    3. ' ],' → logprob: -6.7779541015625
    4. '5' → logprob: -8.0279541015625
    5. '4' → logprob: -9.7779541015625
    6. ']' → logprob: -10.1529541015625
    7. '),' → logprob: -10.5279541015625
    8. '7' → logprob: -11.4029541015625
    9. '],[' → logprob: -11.5279541015625
    10. '6' → logprob: -11.5279541015625

Token 81: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38752639293670654
    2. '5' → logprob: -1.1375263929367065
    3. '4' → logprob: -8.762526512145996
    4. '7' → logprob: -9.012526512145996
    5. '6' → logprob: -9.137526512145996
    6. ']' → logprob: -9.887526512145996
    7. ' [' → logprob: -10.012526512145996
    8. '2' → logprob: -10.512526512145996
    9. '1' → logprob: -10.512526512145996
    10. '[' → logprob: -10.762526512145996

Token 82: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.02393348142504692
    2. '6' → logprob: -4.648933410644531
    3. ' ' → logprob: -4.898933410644531
    4. '7' → logprob: -5.148933410644531
    5. '8' → logprob: -8.648933410644531
    6. '])' → logprob: -8.773933410644531
    7. '4' → logprob: -9.148933410644531
    8. ']' → logprob: -9.336433410644531
    9. '9' → logprob: -9.773933410644531
    10. '10' → logprob: -9.898933410644531

Token 83: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.009442967362701893
    2. ',' → logprob: -4.7594428062438965
    3. ' ],' → logprob: -7.5094428062438965
    4. '6' → logprob: -8.884443283081055
    5. ']' → logprob: -10.134443283081055
    6. '),' → logprob: -10.634443283081055
    7. '7' → logprob: -10.634443283081055
    8. '4' → logprob: -10.759443283081055
    9. ' ,' → logprob: -11.884443283081055
    10. '3' → logprob: -11.884443283081055

Token 84: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.18001072108745575
    2. '[' → logprob: -1.8050106763839722
    3. ' ' → logprob: -8.680010795593262
    4. ')' → logprob: -9.930010795593262
    5. ' ' → logprob: -11.430010795593262
    6. '6' → logprob: -12.555010795593262
    7. '<|end|>' → logprob: -12.617510795593262
    8. '7' → logprob: -12.742510795593262
    9. '4' → logprob: -12.992510795593262
    10. ',' → logprob: -13.055010795593262

Token 85: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5269604325294495
    2. '2' → logprob: -1.7769603729248047
    3. '3' → logprob: -1.9019603729248047
    4. '6' → logprob: -2.5269603729248047
    5. '4' → logprob: -4.776960372924805
    6. ' ' → logprob: -6.776960372924805
    7. '5' → logprob: -7.026960372924805
    8. '7' → logprob: -7.901960372924805
    9. '0' → logprob: -8.151960372924805
    10. '10' → logprob: -9.776960372924805

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020628197118639946
    2. '])' → logprob: -4.145627975463867
    3. ' ' → logprob: -6.395627975463867
    4. '4' → logprob: -7.020627975463867
    5. '6' → logprob: -7.520627975463867
    6. ' ,' → logprob: -7.895627975463867
    7. ' ])' → logprob: -8.020627975463867
    8. ']' → logprob: -8.145627975463867
    9. '3' → logprob: -8.645627975463867
    10. ')' → logprob: -9.020627975463867

Token 87: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.011065982282161713
    2. '6' → logprob: -4.88606595993042
    3. '4' → logprob: -6.38606595993042
    4. '1' → logprob: -7.38606595993042
    5. '5' → logprob: -8.011066436767578
    6. '2' → logprob: -8.136066436767578
    7. '7' → logprob: -8.261066436767578
    8. '9' → logprob: -8.886066436767578
    9. '3' → logprob: -9.636066436767578
    10. '8' → logprob: -10.761066436767578

Token 88: '4' (ID: 19)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.40148818492889404
    2. '4' → logprob: -1.526488184928894
    3. ' ' → logprob: -2.6514883041381836
    4. '6' → logprob: -3.5264883041381836
    5. '2' → logprob: -4.651488304138184
    6. '1' → logprob: -5.901488304138184
    7. '3' → logprob: -7.526488304138184
    8. '7' → logprob: -7.901488304138184
    9. ']' → logprob: -9.901488304138184
    10. ')' → logprob: -10.276488304138184

Token 89: ',' (ID: 11)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.39315828680992126
    2. ',' → logprob: -1.1431583166122437
    3. ' ])' → logprob: -5.768158435821533
    4. '6' → logprob: -7.393158435821533
    5. '])
' → logprob: -7.518158435821533
    6. ')' → logprob: -7.518158435821533
    7. '4' → logprob: -7.893158435821533
    8. '3' → logprob: -8.518157958984375
    9. ']' → logprob: -8.768157958984375
    10. '2' → logprob: -9.018157958984375

Token 90: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.43113791942596436
    2. ' ' → logprob: -1.0561379194259644
    3. '6' → logprob: -7.306138038635254
    4. '])' → logprob: -7.431138038635254
    5. '1' → logprob: -8.056138038635254
    6. '2' → logprob: -8.181138038635254
    7. ' ])' → logprob: -8.431138038635254
    8. '3' → logprob: -9.431138038635254
    9. ' ]' → logprob: -9.431138038635254
    10. ']' → logprob: -9.431138038635254

Token 91: '1' (ID: 16)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.001862953184172511
    2. ' ' → logprob: -7.0018630027771
    3. '])' → logprob: -7.0018630027771
    4. '4' → logprob: -11.126862525939941
    5. ']' → logprob: -11.751862525939941
    6. '1' → logprob: -12.126862525939941
    7. '2' → logprob: -12.126862525939941
    8. ')' → logprob: -13.001862525939941
    9. ' ])' → logprob: -13.251862525939941
    10. '3' → logprob: -14.001862525939941

Token 92: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.08894459158182144
    2. ')' → logprob: -2.838944673538208
    3. '])
' → logprob: -4.463944435119629
    4. ']' → logprob: -4.713944435119629
    5. ',' → logprob: -5.713944435119629
    6. ')
' → logprob: -7.338944435119629
    7. ' ])' → logprob: -7.463944435119629
    8. '4' → logprob: -8.088944435119629
    9. '6' → logprob: -8.213944435119629
    10. '2' → logprob: -8.338944435119629

Token 93: '   ' (ID: 271)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.8159412741661072
    2. '3' → logprob: -1.190941333770752
    3. '   ' → logprob: -1.565941333770752
    4. '2' → logprob: -4.190941333770752
    5. ' ' → logprob: -4.440941333770752
    6. '5' → logprob: -5.315941333770752
    7. '
' → logprob: -5.565941333770752
    8. ' 
' → logprob: -5.690941333770752
    9. ')' → logprob: -6.690941333770752
    10. '\n' → logprob: -6.690941333770752

Token 94: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.03811929374933243
    2. ' ' → logprob: -3.288119316101074
    3. '4' → logprob: -9.913119316101074
    4. '5' → logprob: -10.538119316101074
    5. '   ' → logprob: -13.663119316101074
    6. '1' → logprob: -15.288119316101074
    7. '2' → logprob: -16.163118362426758
    8. '0' → logprob: -16.413118362426758
    9. ''' → logprob: -17.288118362426758
    10. '```' → logprob: -17.600618362426758

Token 95: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0002851729223039001
    2. ' ' → logprob: -8.500285148620605
    3. '4' → logprob: -9.625285148620605
    4. ')' → logprob: -11.750285148620605
    5. '   ' → logprob: -12.000285148620605
    6. '5' → logprob: -13.875285148620605
    7. '2' → logprob: -15.625285148620605
    8. ' )' → logprob: -15.875285148620605
    9. '```' → logprob: -16.000286102294922
    10. '"""' → logprob: -16.125286102294922

Token 96: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07250838726758957
    2. '
' → logprob: -3.0725083351135254
    3. ' ' → logprob: -5.197508335113525
    4. '    ' → logprob: -5.822508335113525
    5. '    
' → logprob: -6.197508335113525
    6. '\n' → logprob: -6.197508335113525
    7. '"' → logprob: -6.447508335113525
    8. ':' → logprob: -6.572508335113525
    9. '"""' → logprob: -6.572508335113525
    10. 'n' → logprob: -6.947508335113525

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2752593755722046
    2. ')' → logprob: -2.525259494781494
    3. '"""' → logprob: -2.650259494781494
    4. ':' → logprob: -3.775259494781494
    5. '"' → logprob: -3.775259494781494
    6. ' ' → logprob: -3.900259494781494
    7. ' """' → logprob: -5.025259494781494
    8. '
' → logprob: -5.400259494781494
    9. '```' → logprob: -5.650259494781494
    10. 'n' → logprob: -6.400259494781494

Token 98: ' >>>' (ID: 25030)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3056628108024597
    2. '"""' → logprob: -1.4306628704071045
    3. '"' → logprob: -4.305662631988525
    4. '    ' → logprob: -6.055662631988525
    5. ')' → logprob: -6.180662631988525
    6. ' """' → logprob: -6.305662631988525
    7. '```' → logprob: -6.555662631988525
    8. '
' → logprob: -7.305662631988525
    9. 'n' → logprob: -7.930662631988525
    10. '"""
' → logprob: -8.055663108825684

Token 99: ' count' (ID: 3605)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -1.4719899892807007
    2. ' ' → logprob: -1.7219899892807007
    3. '   ' → logprob: -1.8469899892807007
    4. ' i' → logprob: -2.2219901084899902
    5. ' def' → logprob: -2.2219901084899902
    6. ' count' → logprob: -2.8469901084899902
    7. ' n' → logprob: -3.2219901084899902
    8. ' """' → logprob: -3.5969901084899902
    9. ' import' → logprob: -4.59699010848999
    10. ' c' → logprob: -4.72199010848999

Token 100: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.024824650958180428
    2. '(' → logprob: -4.274824619293213
    3. '([]' → logprob: -4.649824619293213
    4. '(xs' → logprob: -7.149824619293213
    5. '([...' → logprob: -9.274825096130371
    6. '([],' → logprob: -10.024825096130371
    7. '([(' → logprob: -10.274825096130371
    8. '(
' → logprob: -11.024825096130371
    9. '([
' → logprob: -11.149825096130371
    10. '(['' → logprob: -11.274825096130371

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.024524809792637825
    2. '10' → logprob: -4.399524688720703
    3. '2' → logprob: -5.524524688720703
    4. '])' → logprob: -6.024524688720703
    5. '5' → logprob: -6.524524688720703
    6. '0' → logprob: -7.024524688720703
    7. '6' → logprob: -7.274524688720703
    8. '3' → logprob: -7.399524688720703
    9. '-' → logprob: -7.649524688720703
    10. '4' → logprob: -8.024524688720703

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002891417359933257
    2. ' ,' → logprob: -5.877891540527344
    3. '2' → logprob: -9.502891540527344
    4. '0' → logprob: -12.752891540527344
    5. ',
' → logprob: -12.877891540527344
    6. '4' → logprob: -13.377891540527344
    7. ' ' → logprob: -14.002891540527344
    8. '   ' → logprob: -14.002891540527344
    9. '3' → logprob: -14.127891540527344
    10. '1' → logprob: -14.252891540527344

Token 103: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42943376302719116
    2. '2' → logprob: -1.054433822631836
    3. '3' → logprob: -8.429433822631836
    4. '4' → logprob: -8.429433822631836
    5. '1' → logprob: -8.929433822631836
    6. '5' → logprob: -9.804433822631836
    7. ' [' → logprob: -10.554433822631836
    8. '[' → logprob: -11.054433822631836
    9. '  ' → logprob: -11.179433822631836
    10. '10' → logprob: -11.429433822631836

Token 104: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.048635851591825485
    2. ' ' → logprob: -3.173635959625244
    3. '3' → logprob: -5.798635959625244
    4. '4' → logprob: -6.673635959625244
    5. '5' → logprob: -7.173635959625244
    6. '1' → logprob: -8.048635482788086
    7. '10' → logprob: -9.548635482788086
    8. '[' → logprob: -10.048635482788086
    9. ')' → logprob: -10.173635482788086
    10. ' [' → logprob: -11.048635482788086

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013042837381362915
    2. ' ,' → logprob: -6.7513041496276855
    3. '3' → logprob: -9.501304626464844
    4. ']' → logprob: -10.751304626464844
    5. '   ' → logprob: -11.126304626464844
    6. '4' → logprob: -12.001304626464844
    7. ',
' → logprob: -12.376304626464844
    8. ' ' → logprob: -13.126304626464844
    9. ')' → logprob: -13.251304626464844
    10. '[' → logprob: -13.751304626464844

Token 106: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19041842222213745
    2. '3' → logprob: -1.8154184818267822
    3. '4' → logprob: -4.690418243408203
    4. '5' → logprob: -7.315418243408203
    5. '6' → logprob: -8.815418243408203
    6. '2' → logprob: -8.815418243408203
    7. '1' → logprob: -8.815418243408203
    8. '7' → logprob: -8.940418243408203
    9. '  ' → logprob: -10.065418243408203
    10. '9' → logprob: -10.565418243408203

Token 107: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.003333372063934803
    2. '4' → logprob: -6.378333568572998
    3. ' ' → logprob: -7.128333568572998
    4. '5' → logprob: -7.628333568572998
    5. '])' → logprob: -8.87833309173584
    6. '2' → logprob: -9.37833309173584
    7. '6' → logprob: -10.37833309173584
    8. '[' → logprob: -10.62833309173584
    9. '7' → logprob: -11.00333309173584
    10. '1' → logprob: -11.25333309173584

Token 108: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0013629741733893752
    2. ' ],' → logprob: -7.1263628005981445
    3. ',' → logprob: -7.7513628005981445
    4. '])' → logprob: -9.501362800598145
    5. ']' → logprob: -11.126362800598145
    6. '4' → logprob: -11.376362800598145
    7. '),' → logprob: -11.876362800598145
    8. '],
' → logprob: -12.501362800598145
    9. ']):' → logprob: -12.501362800598145
    10. ' ,' → logprob: -12.751362800598145

Token 109: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.20316049456596375
    2. '[' → logprob: -1.7031605243682861
    3. ' ' → logprob: -7.453160285949707
    4. ' ys' → logprob: -8.078160285949707
    5. ' [])' → logprob: -8.953160285949707
    6. '[]' → logprob: -8.953160285949707
    7. '   ' → logprob: -9.078160285949707
    8. ' []' → logprob: -9.078160285949707
    9. '4' → logprob: -9.703160285949707
    10. '  ' → logprob: -10.140660285949707

Token 110: '5' (ID: 20)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.08672185242176056
    2. '1' → logprob: -3.711721897125244
    3. '2' → logprob: -3.961721897125244
    4. '0' → logprob: -4.586721897125244
    5. '3' → logprob: -4.711721897125244
    6. '10' → logprob: -4.961721897125244
    7. '5' → logprob: -5.336721897125244
    8. '6' → logprob: -5.586721897125244
    9. '7' → logprob: -5.836721897125244
    10. ' ' → logprob: -6.961721897125244

Token 111: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.06664620339870453
    2. ',' → logprob: -2.816646099090576
    3. '])
' → logprob: -7.191646099090576
    4. '   ' → logprob: -7.441646099090576
    5. '6' → logprob: -7.441646099090576
    6. ')' → logprob: -7.566646099090576
    7. ']' → logprob: -7.566646099090576
    8. ' ])' → logprob: -7.691646099090576
    9. '4' → logprob: -7.816646099090576
    10. '5' → logprob: -8.191646575927734

Token 112: '   ' (ID: 271)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00044592362246476114
    2. '   ' → logprob: -8.250446319580078
    3. ' ' → logprob: -8.625446319580078
    4. '\n' → logprob: -13.000446319580078
    5. '
' → logprob: -13.125446319580078
    6. '    
' → logprob: -15.875446319580078
    7. ' 
' → logprob: -16.000446319580078
    8. '  ' → logprob: -16.125446319580078
    9. '`
' → logprob: -16.250446319580078
    10. '
' → logprob: -16.375446319580078

Token 113: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004311460361350328
    2. ' ' → logprob: -7.750431060791016
    3. '   ' → logprob: -14.625431060791016
    4. '00' → logprob: -18.625431060791016
    5. '000' → logprob: -18.625431060791016
    6. '۰' → logprob: -19.500431060791016
    7. '  ' → logprob: -19.500431060791016
    8. '
' → logprob: -19.562931060791016
    9. ' 
' → logprob: -19.625431060791016
    10. '`' → logprob: -19.687931060791016

Token 114: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.79811754100956e-05
    2. ' ' → logprob: -10.375038146972656
    3. '   ' → logprob: -12.000038146972656
    4. ')' → logprob: -14.625038146972656
    5. '1' → logprob: -18.250038146972656
    6. '```' → logprob: -18.500038146972656
    7. ' 
' → logprob: -18.875038146972656
    8. '  ' → logprob: -19.125038146972656
    9. '    ' → logprob: -19.125038146972656
    10. 'return' → logprob: -19.250038146972656

Token 115: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4124611020088196
    2. ':' → logprob: -1.5374610424041748
    3. '
' → logprob: -2.662461042404175
    4. ' ' → logprob: -3.787461042404175
    5. ')' → logprob: -4.162461280822754
    6. ' 
' → logprob: -5.912461280822754
    7. '    ' → logprob: -6.412461280822754
    8. '    
' → logprob: -6.537461280822754
    9. '```' → logprob: -6.787461280822754
    10. 'n' → logprob: -6.912461280822754

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.670026421546936
    2. ')' → logprob: -1.795026421546936
    3. ' ' → logprob: -2.1700263023376465
    4. ':' → logprob: -2.1700263023376465
    5. '"""' → logprob: -3.0450263023376465
    6. '"' → logprob: -4.5450263023376465
    7. '\n' → logprob: -4.5450263023376465
    8. ' 
' → logprob: -5.1700263023376465
    9. ' """' → logprob: -5.5450263023376465
    10. '```' → logprob: -5.9200263023376465

Token 117: ' >>>' (ID: 25030)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48641836643218994
    2. '"""' → logprob: -1.36141836643219
    3. ')' → logprob: -3.3614182472229004
    4. '"' → logprob: -3.4864182472229004
    5. ' """' → logprob: -3.4864182472229004
    6. ' ' → logprob: -4.4864182472229
    7. '""' → logprob: -5.4864182472229
    8. '    ' → logprob: -5.6114182472229
    9. 'n' → logprob: -5.9864182472229
    10. '  ' → logprob: -6.2364182472229

Token 118: ' count' (ID: 3605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.006811499595642
    2. ' result' → logprob: -1.256811499595642
    3. 'result' → logprob: -1.631811499595642
    4. 'i' → logprob: -3.3818116188049316
    5. ' i' → logprob: -3.6318116188049316
    6. 'def' → logprob: -3.8818116188049316
    7. 'count' → logprob: -4.131811618804932
    8. ' return' → logprob: -4.631811618804932
    9. ' count' → logprob: -5.006811618804932
    10. 'n' → logprob: -5.006811618804932

Token 119: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.11855454742908478
    2. '(' → logprob: -2.2435545921325684
    3. '([]' → logprob: -5.743554592132568
    4. '(xs' → logprob: -6.243554592132568
    5. '([(' → logprob: -8.49355411529541
    6. '([...' → logprob: -9.61855411529541
    7. '(
' → logprob: -9.74355411529541
    8. '([
' → logprob: -9.99355411529541
    9. '([],' → logprob: -10.11855411529541
    10. '((' → logprob: -10.74355411529541

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01997332274913788
    2. '5' → logprob: -5.269973278045654
    3. '2' → logprob: -5.519973278045654
    4. '3' → logprob: -6.144973278045654
    5. '10' → logprob: -6.394973278045654
    6. '4' → logprob: -6.519973278045654
    7. '[],' → logprob: -6.519973278045654
    8. '])' → logprob: -6.769973278045654
    9. '[' → logprob: -7.144973278045654
    10. ']' → logprob: -7.894973278045654

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005141906440258026
    2. ' ,' → logprob: -7.625514030456543
    3. '2' → logprob: -11.500514030456543
    4. '[' → logprob: -12.250514030456543
    5. '   ' → logprob: -12.250514030456543
    6. ',
' → logprob: -13.000514030456543
    7. '0' → logprob: -14.250514030456543
    8. ']' → logprob: -14.500514030456543
    9. ' ' → logprob: -14.750514030456543
    10. '1' → logprob: -14.750514030456543

Token 122: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.18078288435935974
    2. ' ' → logprob: -1.8057829141616821
    3. '[' → logprob: -8.30578327178955
    4. ' [' → logprob: -8.43078327178955
    5. '   ' → logprob: -8.55578327178955
    6. '  ' → logprob: -9.30578327178955
    7. '4' → logprob: -9.43078327178955
    8. ',' → logprob: -9.55578327178955
    9. '3' → logprob: -9.68078327178955
    10. '1' → logprob: -10.68078327178955

Token 123: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10105501860380173
    2. ' ' → logprob: -2.3510549068450928
    3. '3' → logprob: -7.976055145263672
    4. '4' → logprob: -8.226055145263672
    5. '5' → logprob: -9.101055145263672
    6. ',' → logprob: -10.476055145263672
    7. '1' → logprob: -10.726055145263672
    8. '   ' → logprob: -10.726055145263672
    9. '  ' → logprob: -10.976055145263672
    10. '[' → logprob: -11.413555145263672

Token 124: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004662711173295975
    2. ' ,' → logprob: -5.50466251373291
    3. '2' → logprob: -8.12966251373291
    4. ']' → logprob: -9.50466251373291
    5. ' ' → logprob: -10.00466251373291
    6. '])' → logprob: -10.12966251373291
    7. '4' → logprob: -10.75466251373291
    8. '3' → logprob: -10.87966251373291
    9. '   ' → logprob: -11.00466251373291
    10. '],' → logprob: -11.37966251373291

Token 125: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.24045884609222412
    2. ' ' → logprob: -1.6154588460922241
    3. ',' → logprob: -5.615458965301514
    4. '1' → logprob: -5.740458965301514
    5. '<|end|>' → logprob: -5.865458965301514
    6. '3' → logprob: -6.115458965301514
    7. '   ' → logprob: -6.990458965301514
    8. '  ' → logprob: -7.490458965301514
    9. ']' → logprob: -7.740458965301514
    10. '5' → logprob: -8.365458488464355

Token 126: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02535942755639553
    2. ' ' → logprob: -3.7753593921661377
    3. '3' → logprob: -6.900359630584717
    4. '1' → logprob: -7.025359630584717
    5. ',' → logprob: -9.650359153747559
    6. '])' → logprob: -10.025359153747559
    7. '   ' → logprob: -10.025359153747559
    8. '[' → logprob: -11.462859153747559
    9. '  ' → logprob: -11.462859153747559
    10. ']' → logprob: -11.775359153747559

Token 127: ',' (ID: 11)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.04467841610312462
    2. '])' → logprob: -3.7946784496307373
    3. ',' → logprob: -3.9196784496307373
    4. ' ],' → logprob: -6.794678211212158
    5. '),' → logprob: -9.794678688049316
    6. ']' → logprob: -9.919678688049316
    7. ' ])' → logprob: -10.669678688049316
    8. ' ,' → logprob: -10.794678688049316
    9. '   ' → logprob: -11.044678688049316
    10. '3' → logprob: -11.294678688049316

Token 128: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5456668734550476
    2. '3' → logprob: -1.0456669330596924
    3. '1' → logprob: -3.5456669330596924
    4. '2' → logprob: -3.9206669330596924
    5. '<|end|>' → logprob: -4.670666694641113
    6. '5' → logprob: -4.920666694641113
    7. '   ' → logprob: -7.045666694641113
    8. '4' → logprob: -7.045666694641113
    9. '  ' → logprob: -7.170666694641113
    10. ',' → logprob: -7.670666694641113

Token 129: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.40504521131515503
    2. '2' → logprob: -1.1550452709197998
    3. ' ' → logprob: -4.030045032501221
    4. '1' → logprob: -9.405045509338379
    5. '   ' → logprob: -10.467545509338379
    6. '])' → logprob: -10.905045509338379
    7. ']' → logprob: -10.905045509338379
    8. '  ' → logprob: -10.967545509338379
    9. '<|end|>' → logprob: -11.030045509338379
    10. '[' → logprob: -11.467545509338379

Token 130: ',' (ID: 11)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0011772511061280966
    2. ',' → logprob: -6.8761773109436035
    3. ' ],' → logprob: -9.001176834106445
    4. ']' → logprob: -12.001176834106445
    5. '   ' → logprob: -12.126176834106445
    6. '),' → logprob: -12.626176834106445
    7. '])' → logprob: -13.126176834106445
    8. ' ' → logprob: -13.751176834106445
    9. ''],' → logprob: -13.876176834106445
    10. '3' → logprob: -14.626176834106445

Token 131: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.14559736847877502
    2. ' ' → logprob: -2.020597457885742
    3. '1' → logprob: -7.145597457885742
    4. '5' → logprob: -7.270597457885742
    5. '2' → logprob: -7.395597457885742
    6. ',' → logprob: -8.395597457885742
    7. '   ' → logprob: -8.395597457885742
    8. '4' → logprob: -9.270597457885742
    9. '<|end|>' → logprob: -9.395597457885742
    10. '  ' → logprob: -9.895597457885742

Token 132: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.06317726522684097
    2. '2' → logprob: -2.9381773471832275
    3. ' ' → logprob: -4.813177108764648
    4. '1' → logprob: -9.688177108764648
    5. '5' → logprob: -10.938177108764648
    6. ']' → logprob: -11.250677108764648
    7. '])' → logprob: -11.250677108764648
    8. '   ' → logprob: -12.000677108764648
    9. '4' → logprob: -12.500677108764648
    10. '  ' → logprob: -12.938177108764648

Token 133: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.00019138160860165954
    2. ' ],' → logprob: -8.750191688537598
    3. '])' → logprob: -11.500191688537598
    4. ',' → logprob: -11.750191688537598
    5. '   ' → logprob: -12.500191688537598
    6. ''],' → logprob: -12.625191688537598
    7. ']' → logprob: -12.750191688537598
    8. '),' → logprob: -12.875191688537598
    9. ' ' → logprob: -13.625191688537598
    10. '],
' → logprob: -15.125191688537598

Token 134: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.01729419454932213
    2. '[' → logprob: -4.142294406890869
    3. ')' → logprob: -7.142294406890869
    4. ' ' → logprob: -8.517293930053711
    5. ' ys' → logprob: -8.892293930053711
    6. '<|end|>' → logprob: -9.267293930053711
    7. ' )' → logprob: -11.767293930053711
    8. ' ['' → logprob: -12.392293930053711
    9. ' ' → logprob: -12.642293930053711
    10. ' y' → logprob: -12.767293930053711

Token 135: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.7738837003707886
    2. '1' → logprob: -1.2738837003707886
    3. '5' → logprob: -1.6488837003707886
    4. '2' → logprob: -3.023883819580078
    5. '4' → logprob: -4.273883819580078
    6. ' ' → logprob: -5.523883819580078
    7. '])' → logprob: -9.398883819580078
    8. ']' → logprob: -9.648883819580078
    9. ')' → logprob: -10.898883819580078
    10. '```' → logprob: -11.148883819580078

Token 136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5980402827262878
    2. '])' → logprob: -0.8480402827262878
    3. ' ])' → logprob: -4.7230401039123535
    4. ')' → logprob: -5.4730401039123535
    5. ' ' → logprob: -5.5980401039123535
    6. ' ,' → logprob: -6.3480401039123535
    7. '1' → logprob: -7.3480401039123535
    8. '])
' → logprob: -7.5980401039123535
    9. '2' → logprob: -7.7230401039123535
    10. '3' → logprob: -8.098040580749512

Token 137: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7796780467033386
    2. ' ' → logprob: -0.9046780467033386
    3. '2' → logprob: -2.0296781063079834
    4. '3' → logprob: -5.279677867889404
    5. '5' → logprob: -8.904678344726562
    6. '  ' → logprob: -10.029678344726562
    7. '<|end|>' → logprob: -10.154678344726562
    8. '   ' → logprob: -10.279678344726562
    9. '4' → logprob: -10.654678344726562
    10. ' 
' → logprob: -12.092178344726562

Token 138: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.31743115186691284
    2. '1' → logprob: -2.1924312114715576
    3. '2' → logprob: -2.1924312114715576
    4. ' ' → logprob: -3.0674312114715576
    5. '5' → logprob: -6.3174309730529785
    6. '4' → logprob: -8.192431449890137
    7. ']' → logprob: -11.129931449890137
    8. '  ' → logprob: -11.317431449890137
    9. '])' → logprob: -11.567431449890137
    10. '0' → logprob: -11.692431449890137

Token 139: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.05523677542805672
    2. '])
' → logprob: -2.93023681640625
    3. ',' → logprob: -8.68023681640625
    4. '])

' → logprob: -10.05523681640625
    5. ' ])' → logprob: -10.18023681640625
    6. ')' → logprob: -10.55523681640625
    7. '3' → logprob: -10.68023681640625
    8. '4' → logprob: -11.93023681640625
    9. ' ])
' → logprob: -12.05523681640625
    10. '])
' → logprob: -12.05523681640625

Token 140: '   ' (ID: 271)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.9468410611152649
    2. '4' → logprob: -2.07184100151062
    3. '   ' → logprob: -2.07184100151062
    4. '1' → logprob: -2.19684100151062
    5. ' ' → logprob: -2.44684100151062
    6. '0' → logprob: -2.44684100151062
    7. ' 
' → logprob: -3.57184100151062
    8. '
' → logprob: -3.94684100151062
    9. '3' → logprob: -4.321841239929199
    10. ')' → logprob: -5.571841239929199

Token 141: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5101019144058228
    2. '4' → logprob: -1.3851019144058228
    3. '3' → logprob: -2.135101795196533
    4. ' ' → logprob: -3.635101795196533
    5. '1' → logprob: -6.385101795196533
    6. '5' → logprob: -6.510101795196533
    7. '0' → logprob: -7.010101795196533
    8. '6' → logprob: -7.510101795196533
    9. '   ' → logprob: -11.760102272033691
    10. 'Type' → logprob: -12.010102272033691

Token 142: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5315855145454407
    2. '4' → logprob: -2.031585454940796
    3. '0' → logprob: -2.531585454940796
    4. ' ' → logprob: -2.531585454940796
    5. '3' → logprob: -2.656585454940796
    6. ')' → logprob: -3.531585454940796
    7. '1' → logprob: -4.781585693359375
    8. '   ' → logprob: -5.031585693359375
    9. '5' → logprob: -5.906585693359375
    10. '6' → logprob: -6.031585693359375

Token 143: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9716090559959412
    2. ' ' → logprob: -1.346609115600586
    3. ':' → logprob: -1.596609115600586
    4. ')' → logprob: -2.846609115600586
    5. ' 
' → logprob: -2.971609115600586
    6. '\n' → logprob: -4.471609115600586
    7. '
' → logprob: -4.846609115600586
    8. '  
' → logprob: -4.971609115600586
    9. '  ' → logprob: -5.471609115600586
    10. ':
' → logprob: -5.721609115600586

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1918085664510727
    2. ' ' → logprob: -2.3168084621429443
    3. '
' → logprob: -3.1918084621429443
    4. 'n' → logprob: -4.316808700561523
    5. ' 
' → logprob: -4.941808700561523
    6. '    ' → logprob: -5.816808700561523
    7. '    
' → logprob: -6.191808700561523
    8. '\n' → logprob: -6.691808700561523
    9. '  ' → logprob: -6.816808700561523
    10. 'i' → logprob: -6.816808700561523

Token 145: ' """
' (ID: 7037)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5440289974212646
    2. '   ' → logprob: -1.2940289974212646
    3. ' i' → logprob: -3.7940289974212646
    4. ' 
' → logprob: -3.7940289974212646
    5. ' """' → logprob: -3.7940289974212646
    6. 'i' → logprob: -3.9190289974212646
    7. 'n' → logprob: -3.9190289974212646
    8. '    ' → logprob: -4.669029235839844
    9. 'x' → logprob: -5.419029235839844
    10. '  ' → logprob: -6.044029235839844

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.562481701374054
    2. 'i' → logprob: -2.062481641769409
    3. ' i' → logprob: -2.187481641769409
    4. 'n' → logprob: -3.187481641769409
    5. ' ' → logprob: -3.312481641769409
    6. ' 
' → logprob: -3.687481641769409
    7. 'c' → logprob: -3.937481641769409
    8. ' c' → logprob: -4.187481880187988
    9. ' n' → logprob: -4.562481880187988
    10. ' return' → logprob: -5.062481880187988

Token 147: ' def' (ID: 1056)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5975537300109863
    2. 'count' → logprob: -1.3475537300109863
    3. 'i' → logprob: -2.3475537300109863
    4. ' count' → logprob: -3.7225537300109863
    5. 'n' → logprob: -4.597553730010986
    6. 'result' → logprob: -4.597553730010986
    7. ' i' → logprob: -4.722553730010986
    8. ' c' → logprob: -4.972553730010986
    9. '   ' → logprob: -5.222553730010986
    10. ' ' → logprob: -5.472553730010986

Token 148: ' bin' (ID: 6958)
  Prédit: ' binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' binary' → logprob: -0.004581907298415899
    2. 'binary' → logprob: -6.629581928253174
    3. ' bin' → logprob: -7.129581928253174
    4. ' bis' → logprob: -7.504581928253174
    5. ' helper' → logprob: -7.754581928253174
    6. ' is' → logprob: -8.004581451416016
    7. ' find' → logprob: -8.379581451416016
    8. ' b' → logprob: -8.379581451416016
    9. ' search' → logprob: -8.754581451416016
    10. ' ' → logprob: -9.379581451416016

Token 149: 'search' (ID: 2624)
  Prédit: 'ary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ary' → logprob: -0.029531998559832573
    2. '   ' → logprob: -4.154531955718994
    3. '_search' → logprob: -4.779531955718994
    4. 'search' → logprob: -5.529531955718994
    5. 'def' → logprob: -7.904531955718994
    6. ' search' → logprob: -8.029532432556152
    7. '       ' → logprob: -9.279532432556152
    8. 'ay' → logprob: -10.404532432556152
    9. '    ' → logprob: -10.529532432556152
    10. '```' → logprob: -10.654532432556152

Token 150: '(i' (ID: 3649)
  Prédit: '(xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(xs' → logprob: -0.03652515262365341
    2. '(x' → logprob: -4.286525249481201
    3. '(arr' → logprob: -4.411525249481201
    4. '(lst' → logprob: -5.036525249481201
    5. '(' → logprob: -7.036525249481201
    6. '(low' → logprob: -7.286525249481201
    7. '(ls' → logprob: -7.786525249481201
    8. '(a' → logprob: -8.036524772644043
    9. '(target' → logprob: -8.286524772644043
    10. '(array' → logprob: -8.536524772644043

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35455936193466187
    2. 'nd' → logprob: -2.2295594215393066
    3. 'xs' → logprob: -2.2295594215393066
    4. 'x' → logprob: -3.1045594215393066
    5. 'n' → logprob: -4.104559421539307
    6. '   ' → logprob: -4.979559421539307
    7. 'dx' → logprob: -5.604559421539307
    8. '):' → logprob: -6.229559421539307
    9. ',x' → logprob: -6.479559421539307
    10. 'def' → logprob: -6.979559421539307

Token 152: ' j' (ID: 441)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -1.7758899927139282
    2. 'lo' → logprob: -2.2758898735046387
    3. ' low' → logprob: -2.2758898735046387
    4. 'start' → logprob: -2.5258898735046387
    5. 'left' → logprob: -2.5258898735046387
    6. 'x' → logprob: -2.6508898735046387
    7. ' left' → logprob: -2.9008898735046387
    8. 'l' → logprob: -3.1508898735046387
    9. 'xs' → logprob: -3.1508898735046387
    10. ' lo' → logprob: -3.2758898735046387

Token 153: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.673547563375905e-05
    2. ' ,' → logprob: -9.750086784362793
    3. ',val' → logprob: -11.250086784362793
    4. '   ' → logprob: -11.875086784362793
    5. ',x' → logprob: -12.125086784362793
    6. '_,' → logprob: -14.625086784362793
    7. 'x' → logprob: -14.750086784362793
    8. ',key' → logprob: -15.000086784362793
    9. 'val' → logprob: -15.125086784362793
    10. ',target' → logprob: -15.125086784362793

Token 154: ' n' (ID: 297)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.28404513001441956
    2. ' x' → logprob: -1.7840451002120972
    3. 'target' → logprob: -3.4090452194213867
    4. ' target' → logprob: -4.909045219421387
    5. 'v' → logprob: -5.159045219421387
    6. 'key' → logprob: -5.159045219421387
    7. 'k' → logprob: -5.159045219421387
    8. 'val' → logprob: -5.409045219421387
    9. ' key' → logprob: -5.409045219421387
    10. ' val' → logprob: -5.784045219421387

Token 155: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03844065219163895
    2. '):
' → logprob: -3.413440704345703
    3. ',' → logprob: -5.538440704345703
    4. ' ):' → logprob: -7.413440704345703
    5. ')' → logprob: -9.538440704345703
    6. '   ' → logprob: -9.788440704345703
    7. '):
' → logprob: -10.163440704345703
    8. '):

' → logprob: -11.288440704345703
    9. ' ):
' → logprob: -11.538440704345703
    10. ':' → logprob: -11.538440704345703

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5153035521507263
    2. ':' → logprob: -1.765303611755371
    3. '<|end|>' → logprob: -2.390303611755371
    4. '    ' → logprob: -3.015303611755371
    5. ' ' → logprob: -3.265303611755371
    6. ',' → logprob: -3.390303611755371
    7. '   ' → logprob: -4.515303611755371
    8. ')' → logprob: -6.515303611755371
    9. '        ' → logprob: -7.015303611755371
    10. '<|end|>' → logprob: -7.265303611755371

Token 157: ' while' (ID: 2049)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3601387143135071
    2. ' if' → logprob: -2.1101386547088623
    3. ' m' → logprob: -2.7351386547088623
    4. '   ' → logprob: -3.2351386547088623
    5. ' ' → logprob: -3.3601386547088623
    6. '    ' → logprob: -4.235138893127441
    7. 'if' → logprob: -4.235138893127441
    8. ' mid' → logprob: -5.485138893127441
    9. '       ' → logprob: -5.610138893127441
    10. ' while' → logprob: -6.735138893127441

Token 158: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014165391214191914
    2. ' i' → logprob: -4.26416540145874
    3. '	i' → logprob: -13.889164924621582
    4. ' ' → logprob: -14.264164924621582
    5. '   ' → logprob: -16.3891658782959
    6. 'j' → logprob: -17.1391658782959
    7. ')' → logprob: -17.2641658782959
    8. '_i' → logprob: -17.3891658782959
    9. '(i' → logprob: -17.5141658782959
    10. ')i' → logprob: -17.6391658782959

Token 159: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5862088203430176
    2. ' <=' → logprob: -0.8362088203430176
    3. ' <' → logprob: -4.836208820343018
    4. '<' → logprob: -6.086208820343018
    5. '<|end|>' → logprob: -12.96120834350586
    6. ' ' → logprob: -13.33620834350586
    7. '<len' → logprob: -15.21120834350586
    8. '<int' → logprob: -15.33620834350586
    9. '≤' → logprob: -15.71120834350586
    10. ' ≤' → logprob: -15.71120834350586

Token 160: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.126930832862854
    2. ' j' → logprob: -2.1269307136535645
    3. ' ' → logprob: -13.001931190490723
    4. '	j' → logprob: -15.126931190490723
    5. '   ' → logprob: -15.626931190490723
    6. '  ' → logprob: -16.751930236816406
    7. '
' → logprob: -18.126930236816406
    8. ' ' → logprob: -18.251930236816406
    9. '$j' → logprob: -18.251930236816406
    10. '    ' → logprob: -18.376930236816406

Token 161: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006635082419961691
    2. ':
' → logprob: -5.3816351890563965
    3. ' and' → logprob: -6.2566351890563965
    4. ' :' → logprob: -10.006634712219238
    5. 'and' → logprob: -10.131634712219238
    6. '<|end|>' → logprob: -13.131634712219238
    7. ',' → logprob: -13.506634712219238
    8. ':

' → logprob: -13.506634712219238
    9. ' :
' → logprob: -13.631634712219238
    10. '       ' → logprob: -14.006634712219238

Token 162: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09646496921777725
    2. ':' → logprob: -2.9714648723602295
    3. '<|end|>' → logprob: -4.471465110778809
    4. '           ' → logprob: -4.596465110778809
    5. ',' → logprob: -4.846465110778809
    6. ' :' → logprob: -5.471465110778809
    7. ':
' → logprob: -6.221465110778809
    8. '<|end|>' → logprob: -6.596465110778809
    9. '.' → logprob: -7.596465110778809
    10. ' ' → logprob: -7.721465110778809

Token 163: ' mid' (ID: 6959)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.3029816746711731
    2. ' mid' → logprob: -1.6779816150665283
    3. 'm' → logprob: -3.0529816150665283
    4. '           ' → logprob: -4.177981853485107
    5. 'mid' (adapté à ' mid') → logprob: -4.427981853485107
    6. ' midpoint' → logprob: -9.92798137664795
    7. ' ' → logprob: -10.55298137664795
    8. '	m' → logprob: -10.92798137664795
    9. '   ' → logprob: -11.30298137664795
    10. '[mid' → logprob: -11.55298137664795

Token 164: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061969030648469925
    2. '=' → logprob: -2.811969041824341
    3. ' ' → logprob: -14.436968803405762
    4. '=int' → logprob: -14.936968803405762
    5. ' =(' → logprob: -15.186968803405762
    6. '=(' → logprob: -16.061969757080078
    7. '=i' → logprob: -16.811969757080078
    8. '   ' → logprob: -17.811969757080078
    9. ',' → logprob: -17.936969757080078
    10. 'x' → logprob: -18.061969757080078

Token 165: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5760522484779358
    2. ' (' → logprob: -0.8260522484779358
    3. 'i' → logprob: -9.82605266571045
    4. '(' → logprob: -10.20105266571045
    5. ' ' → logprob: -11.32605266571045
    6. ' i' → logprob: -11.70105266571045
    7. '   ' → logprob: -14.57605266571045
    8. '(I' → logprob: -14.70105266571045
    9. '[i' → logprob: -15.45105266571045
    10. '  ' → logprob: -16.951051712036133

Token 166: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0325924449716695e-05
    2. ' i' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.625009536743164
    4. '	i' → logprob: -16.750009536743164
    5. '_i' → logprob: -18.125009536743164
    6. ' ' → logprob: -18.250009536743164
    7. '(i' → logprob: -18.375009536743164
    8. 'j' → logprob: -18.875009536743164
    9. ')' → logprob: -19.500009536743164
    10. ')i' → logprob: -19.500009536743164

Token 167: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06197642162442207
    2. ' +' → logprob: -2.811976432800293
    3. '+j' → logprob: -12.061976432800293
    4. '+i' → logprob: -13.061976432800293
    5. '+
' → logprob: -14.186976432800293
    6. ' +
' → logprob: -16.061975479125977
    7. '＋' → logprob: -17.061975479125977
    8. ' ' → logprob: -17.186975479125977
    9. ' plus' → logprob: -17.561975479125977
    10. 'plus' → logprob: -18.311975479125977

Token 168: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0067156096920371056
    2. ' j' → logprob: -5.006715774536133
    3. '   ' → logprob: -16.006715774536133
    4. '	j' → logprob: -16.381715774536133
    5. ' ' → logprob: -16.881715774536133
    6. '    ' → logprob: -18.756715774536133
    7. '           ' → logprob: -19.256715774536133
    8. '  ' → logprob: -19.381715774536133
    9. '$j' → logprob: -20.256715774536133
    10. '(j' → logprob: -20.756715774536133

Token 169: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000488811288960278
    2. ')//' → logprob: -7.625488758087158
    3. ' )' → logprob: -15.000489234924316
    4. ')>>' → logprob: -15.125489234924316
    5. ')
' → logprob: -16.50048828125
    6. '   ' → logprob: -18.25048828125
    7. '//' → logprob: -18.50048828125
    8. '）' → logprob: -19.12548828125
    9. ']' → logprob: -19.50048828125
    10. ' ' → logprob: -21.00048828125

Token 170: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.3488343358039856
    2. '//' → logprob: -1.2238342761993408
    3. '   ' → logprob: -9.098834037780762
    4. '       ' → logprob: -9.348834037780762
    5. '>>' → logprob: -9.598834037780762
    6. ')' → logprob: -9.723834037780762
    7. '           ' → logprob: -10.973834037780762
    8. ' ' → logprob: -11.098834037780762
    9. ')//' → logprob: -11.348834037780762
    10. '```' → logprob: -12.223834037780762

Token 171: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005233763717114925
    2. ' ' → logprob: -5.2552337646484375
    3. '   ' → logprob: -17.755233764648438
    4. '  ' → logprob: -18.505233764648438
    5. '۲' → logprob: -19.255233764648438
    6. '```' → logprob: -19.755233764648438
    7. '    ' → logprob: -20.255233764648438
    8. '２' → logprob: -20.880233764648438
    9. '
' → logprob: -20.942733764648438
    10. '3' → logprob: -21.317733764648438

Token 172: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -18.250059127807617
    4. '  ' → logprob: -19.625059127807617
    5. '۲' → logprob: -19.875059127807617
    6. '```' → logprob: -20.125059127807617
    7. '２' → logprob: -20.250059127807617
    8. '3' → logprob: -20.500059127807617
    9. '22' → logprob: -21.625059127807617
    10. '    ' → logprob: -21.625059127807617

Token 173: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006114955060184002
    2. '
' → logprob: -5.256114959716797
    3. '<|end|>' → logprob: -8.256114959716797
    4. 'n' → logprob: -8.381114959716797
    5. '       ' → logprob: -9.006114959716797
    6. ' if' → logprob: -9.256114959716797
    7. '            
' → logprob: -10.006114959716797
    8. 'if' → logprob: -10.131114959716797
    9. '   ' → logprob: -11.006114959716797
    10. ' 
' → logprob: -11.131114959716797

Token 174: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0038993461057543755
    2. '
' → logprob: -6.878899574279785
    3. '<|end|>' → logprob: -7.128899574279785
    4. '       ' → logprob: -7.503899574279785
    5. '            
' → logprob: -7.628899574279785
    6. ' if' → logprob: -8.128899574279785
    7. 'n' → logprob: -8.378899574279785
    8. ' 
' → logprob: -8.753899574279785
    9. '   ' → logprob: -9.753899574279785
    10. '  
' → logprob: -9.753899574279785

Token 175: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.023519158363342285
    2. ' if' → logprob: -3.8985190391540527
    3. '           ' → logprob: -5.898519039154053
    4. 'x' → logprob: -9.648519515991211
    5. 'mid' → logprob: -9.773519515991211
    6. '       ' → logprob: -10.148519515991211
    7. '   ' → logprob: -11.023519515991211
    8. 'val' → logprob: -11.023519515991211
    9. 'v' → logprob: -11.523519515991211
    10. ' ' → logprob: -11.648519515991211

Token 176: ' xs' (ID: 26642)
  Prédit: ' xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' xs' → logprob: -0.004760834388434887
    2. 'xs' → logprob: -5.6297607421875
    3. ' n' → logprob: -7.0047607421875
    4. 'n' → logprob: -8.7547607421875
    5. ' x' → logprob: -9.6297607421875
    6. 'x' → logprob: -11.2547607421875
    7. '(xs' → logprob: -11.8797607421875
    8. ' ' → logprob: -12.1297607421875
    9. '   ' → logprob: -13.7547607421875
    10. 's' → logprob: -13.7547607421875

Token 177: '[mid' (ID: 82578)
  Prédit: '[mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[mid' → logprob: -4.60414821645827e-06
    2. '[m' → logprob: -12.625004768371582
    3. ' [' → logprob: -14.000004768371582
    4. '[' → logprob: -15.125004768371582
    5. 'mid' → logprob: -16.750003814697266
    6. '[
' → logprob: -18.000003814697266
    7. '           ' → logprob: -18.500003814697266
    8. '
' → logprob: -19.000003814697266
    9. '[min' → logprob: -19.500003814697266
    10. '[int' → logprob: -19.625003814697266

Token 178: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.1145966053009033
    2. ' ==' → logprob: -1.3645966053009033
    3. '<' → logprob: -1.4895966053009033
    4. ' <' → logprob: -1.7395966053009033
    5. ']' → logprob: -4.364596366882324
    6. ']==' → logprob: -6.489596366882324
    7. '>' → logprob: -7.489596366882324
    8. ' ' → logprob: -8.239596366882324
    9. ')' → logprob: -8.989596366882324
    10. '<n' → logprob: -9.864596366882324

Token 179: ' >' (ID: 1424)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.1748955249786377
    2. '<' → logprob: -1.2998955249786377
    3. ' <' → logprob: -1.2998955249786377
    4. '==' → logprob: -1.9248955249786377
    5. ' ' → logprob: -9.924895286560059
    6. '<int' → logprob: -10.174895286560059
    7. '<n' → logprob: -11.299895286560059
    8. '>' → logprob: -11.674895286560059
    9. '<num' → logprob: -12.674895286560059
    10. '[' → logprob: -12.924895286560059

Token 180: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.008614808320999146
    2. 'n' → logprob: -4.758615016937256
    3. ' ' → logprob: -16.133615493774414
    4. '	n' → logprob: -16.633615493774414
    5. ' ' → logprob: -18.008615493774414
    6. ' 
' → logprob: -19.008615493774414
    7. ')n' → logprob: -19.258615493774414
    8. '
' → logprob: -19.758615493774414
    9. '_n' → logprob: -20.883615493774414
    10. '=n' → logprob: -20.883615493774414

Token 181: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005299692507833242
    2. ':
' → logprob: -5.2552995681762695
    3. ')' → logprob: -11.00529956817627
    4. '<|end|>' → logprob: -11.00529956817627
    5. '):' → logprob: -11.50529956817627
    6. '):
' → logprob: -11.63029956817627
    7. ':return' → logprob: -12.13029956817627
    8. ' :' → logprob: -12.75529956817627
    9. ':

' → logprob: -13.00529956817627
    10. '<|end|>' → logprob: -14.25529956817627

Token 182: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1789073497056961
    2. ':' → logprob: -2.8039073944091797
    3. '           ' → logprob: -2.8039073944091797
    4. '<|end|>' → logprob: -3.6789073944091797
    5. ':
' → logprob: -4.67890739440918
    6. 'j' → logprob: -6.55390739440918
    7. '<|end|>' → logprob: -7.17890739440918
    8. ')' → logprob: -7.17890739440918
    9. ' j' → logprob: -7.42890739440918
    10. '            ' → logprob: -7.67890739440918

Token 183: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.006007598713040352
    2. 'j' (adapté à ' j') → logprob: -5.131007671356201
    3. ' 
' → logprob: -10.256007194519043
    4. ' ' → logprob: -10.756007194519043
    5. '           ' → logprob: -12.006007194519043
    6. '               ' → logprob: -12.256007194519043
    7. ' ' → logprob: -12.506007194519043
    8. '
' → logprob: -12.631007194519043
    9. '<|end|>' → logprob: -13.881007194519043
    10. '	j' → logprob: -14.381007194519043

Token 184: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602250337600708
    2. '=' → logprob: -1.9102250337600708
    3. ' -=' → logprob: -14.410224914550781
    4. ' ' → logprob: -15.410224914550781
    5. ' =
' → logprob: -16.53522491455078
    6. '-=' → logprob: -17.53522491455078
    7. '=}' → logprob: -17.66022491455078
    8. ' +=' → logprob: -17.91022491455078
    9. '<|end|>' → logprob: -18.03522491455078
    10. '.=' → logprob: -18.03522491455078

Token 185: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.474077433347702
    2. 'mid' → logprob: -0.9740774631500244
    3. '[mid' → logprob: -15.099077224731445
    4. '(mid' → logprob: -15.974077224731445
    5. ' midpoint' → logprob: -16.974077224731445
    6. ' ' → logprob: -18.974077224731445
    7. 'm' → logprob: -19.099077224731445
    8. '_mid' → logprob: -19.224077224731445
    9. ' midd' → logprob: -19.974077224731445
    10. '.mid' → logprob: -20.099077224731445

Token 186: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20141352713108063
    2. ' -' → logprob: -1.7014135122299194
    3. ' ' → logprob: -15.70141315460205
    4. '           ' → logprob: -17.826414108276367
    5. 's' → logprob: -18.451414108276367
    6. '-
' → logprob: -18.576414108276367
    7. 'minus' → logprob: -18.951414108276367
    8. '1' → logprob: -19.076414108276367
    9. '−' → logprob: -19.076414108276367
    10. '               ' → logprob: -19.326414108276367

Token 187: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.623244553338736e-05
    2. ' ' → logprob: -9.625065803527832
    3. '<|end|>' → logprob: -15.875065803527832
    4. '
' → logprob: -18.87506675720215
    5. '           ' → logprob: -19.37506675720215
    6. '   ' → logprob: -19.50006675720215
    7. '```' → logprob: -19.62506675720215
    8. '<|end|>' → logprob: -20.00006675720215
    9. '۱' → logprob: -20.62506675720215
    10. '  ' → logprob: -21.00006675720215

Token 188: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '<|end|>' → logprob: -17.375
    4. '           ' → logprob: -19.5
    5. '```' → logprob: -19.75
    6. '   ' → logprob: -21.0
    7. '                   ' → logprob: -21.375
    8. '
' → logprob: -21.5
    9. '               ' → logprob: -21.625
    10. '۱' → logprob: -21.875

Token 189: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0053098928183317184
    2. 'elif' → logprob: -5.50531005859375
    3. ' elif' → logprob: -6.75531005859375
    4. '<|end|>' → logprob: -10.63031005859375
    5. '	elif' → logprob: -11.25531005859375
    6. '       ' → logprob: -11.88031005859375
    7. ' else' → logprob: -12.38031005859375
    8. '
' → logprob: -12.75531005859375
    9. 'else' → logprob: -12.88031005859375
    10. '            
' → logprob: -13.00531005859375

Token 190: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016570918262004852
    2. 'elif' → logprob: -4.391571044921875
    3. ' elif' → logprob: -5.516571044921875
    4. ' else' → logprob: -11.266571044921875
    5. 'else' → logprob: -12.141571044921875
    6. '
' → logprob: -12.266571044921875
    7. '	elif' → logprob: -13.016571044921875
    8. '            
' → logprob: -13.141571044921875
    9. '       ' → logprob: -13.391571044921875
    10. '          ' → logprob: -13.641571044921875

Token 191: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.24709227681159973
    2. ' elif' → logprob: -1.9970922470092773
    3. '           ' → logprob: -2.4970922470092773
    4. 'else' → logprob: -7.497092247009277
    5. ' else' → logprob: -8.122092247009277
    6. '	elif' → logprob: -11.122092247009277
    7. '       ' → logprob: -12.122092247009277
    8. 'elseif' → logprob: -13.497092247009277
    9. '   ' → logprob: -13.872092247009277
    10. '
' → logprob: -14.372092247009277

Token 192: ' xs' (ID: 26642)
  Prédit: ' xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' xs' → logprob: -0.009807798080146313
    2. 'xs' → logprob: -4.634807586669922
    3. '(xs' → logprob: -10.009807586669922
    4. ' ' → logprob: -12.134807586669922
    5. 'Xs' → logprob: -14.134807586669922
    6. 's' → logprob: -14.884807586669922
    7. '-xs' → logprob: -16.134807586669922
    8. '<|end|>' → logprob: -16.634807586669922
    9. ' ' → logprob: -16.759807586669922
    10. 'x' → logprob: -17.259807586669922

Token 193: '[mid' (ID: 82578)
  Prédit: '[mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[mid' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.625
    3. '[m' → logprob: -15.75
    4. ' [' → logprob: -17.375
    5. '[min' → logprob: -18.125
    6. '[
' → logprob: -18.625
    7. 'mid' → logprob: -18.75
    8. '[mem' → logprob: -19.125
    9. '(mid' → logprob: -19.25
    10. '[next' → logprob: -19.5

Token 194: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1129002496600151
    2. '<' → logprob: -2.2379002571105957
    3. '<n' → logprob: -10.612899780273438
    4. ' ==' → logprob: -10.612899780273438
    5. '==' → logprob: -11.112899780273438
    6. ' ' → logprob: -11.987899780273438
    7. ']' → logprob: -12.737899780273438
    8. ')' → logprob: -13.362899780273438
    9. '[' → logprob: -13.362899780273438
    10. '<num' → logprob: -15.737899780273438

Token 195: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.048609621822834015
    2. '<' → logprob: -3.048609733581543
    3. ' ==' → logprob: -11.798609733581543
    4. ' ' → logprob: -12.048609733581543
    5. '<n' → logprob: -12.423609733581543
    6. '==' → logprob: -12.423609733581543
    7. '[' → logprob: -15.548609733581543
    8. ' ' → logprob: -16.423608779907227
    9. ' <
' → logprob: -16.923608779907227
    10. '<num' → logprob: -17.048608779907227

Token 196: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.06196925416588783
    2. 'n' → logprob: -2.81196928024292
    3. ' ' → logprob: -14.186968803405762
    4. '	n' → logprob: -14.561968803405762
    5. ' ' → logprob: -14.811968803405762
    6. '_n' → logprob: -17.686969757080078
    7. 's' → logprob: -17.686969757080078
    8. '<|end|>' → logprob: -17.936969757080078
    9. ')n' → logprob: -17.936969757080078
    10. '(n' → logprob: -18.311969757080078

Token 197: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04314419999718666
    2. ':
' → logprob: -3.1681442260742188
    3. '               ' → logprob: -8.918144226074219
    4. '):
' → logprob: -12.918144226074219
    5. ' :' → logprob: -13.168144226074219
    6. ':return' → logprob: -13.793144226074219
    7. ' :
' → logprob: -13.918144226074219
    8. ':

' → logprob: -13.918144226074219
    9. '           ' → logprob: -14.043144226074219
    10. ':
' → logprob: -14.293144226074219

Token 198: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.49928319454193115
    2. ':' → logprob: -0.9992831945419312
    3. ':
' → logprob: -3.7492833137512207
    4. ' :' → logprob: -7.499283313751221
    5. ' :
' → logprob: -9.249282836914062
    6. '):
' → logprob: -9.249282836914062
    7. 'j' → logprob: -9.374282836914062
    8. ' else' → logprob: -9.499282836914062
    9. ')' → logprob: -9.749282836914062
    10. '<|end|>' → logprob: -9.749282836914062

Token 199: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0013729690108448267
    2. 'i' (adapté à ' i') → logprob: -6.626372814178467
    3. '               ' → logprob: -10.876373291015625
    4. ' j' → logprob: -10.876373291015625
    5. ' ' → logprob: -13.001373291015625
    6. '    ' → logprob: -13.876373291015625
    7. '                ' → logprob: -14.001373291015625
    8. '	i' → logprob: -14.001373291015625
    9. ' ' → logprob: -14.001373291015625
    10. '            ' → logprob: -14.251373291015625

Token 200: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0009115827269852161
    2. '=' → logprob: -7.000911712646484
    3. ' ' → logprob: -17.125911712646484
    4. ' =
' → logprob: -18.625911712646484
    5. ' +=' → logprob: -19.125911712646484
    6. '            ' → logprob: -19.125911712646484
    7. '                ' → logprob: -19.625911712646484
    8. '               ' → logprob: -19.875911712646484
    9. ')' → logprob: -20.000911712646484
    10. '<|end|>' → logprob: -20.375911712646484

Token 201: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.011048882268369198
    2. 'mid' → logprob: -4.511048793792725
    3. '(mid' → logprob: -14.136049270629883
    4. '[mid' → logprob: -15.136049270629883
    5. ' midpoint' → logprob: -16.386049270629883
    6. ' mids' → logprob: -17.136049270629883
    7. '_mid' → logprob: -17.761049270629883
    8. '.mid' → logprob: -18.761049270629883
    9. 'Mid' → logprob: -19.636049270629883
    10. 'm' → logprob: -20.636049270629883

Token 202: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.03804803267121315
    2. '+' → logprob: -3.288048028945923
    3. ' ' → logprob: -12.788047790527344
    4. '               ' → logprob: -13.538047790527344
    5. '[mid' → logprob: -13.913047790527344
    6. 'mid' → logprob: -14.538047790527344
    7. '                   ' → logprob: -15.163047790527344
    8. '           ' → logprob: -15.413047790527344
    9. '1' → logprob: -15.663047790527344
    10. ' +
' → logprob: -16.163047790527344

Token 203: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04300034046173096
    2. ' ' → logprob: -3.1680002212524414
    3. '```' → logprob: -14.918000221252441
    4. '   ' → logprob: -15.668000221252441
    5. '           ' → logprob: -15.668000221252441
    6. 'def' → logprob: -16.668001174926758
    7. '0' → logprob: -16.668001174926758
    8. '               ' → logprob: -16.668001174926758
    9. '                   ' → logprob: -16.918001174926758
    10. '<|end|>' → logprob: -17.043001174926758

Token 204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002622894535306841
    2. ' ' → logprob: -8.250262260437012
    3. '0' → logprob: -14.500262260437012
    4. '```' → logprob: -15.500262260437012
    5. '   ' → logprob: -15.875262260437012
    6. '
' → logprob: -17.125263214111328
    7. 'def' → logprob: -18.000263214111328
    8. '  ' → logprob: -18.500263214111328
    9. '-' → logprob: -18.562763214111328
    10. '           ' → logprob: -18.562763214111328

Token 205: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026770342141389847
    2. 'else' → logprob: -3.7767703533172607
    3. ' else' → logprob: -5.651770114898682
    4. '		' → logprob: -12.90177059173584
    5. '
' → logprob: -13.77677059173584
    6. 'elif' → logprob: -13.90177059173584
    7. '       ' → logprob: -14.40177059173584
    8. '          ' → logprob: -14.77677059173584
    9. '	else' → logprob: -14.77677059173584
    10. '<|end|>' → logprob: -15.02677059173584

Token 206: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022684868425130844
    2. 'else' → logprob: -3.8976848125457764
    3. ' else' → logprob: -6.1476850509643555
    4. 'elif' → logprob: -14.522685050964355
    5. '		' → logprob: -14.772685050964355
    6. '          ' → logprob: -15.147685050964355
    7. '       ' → logprob: -15.522685050964355
    8. '	else' → logprob: -15.772685050964355
    9. '
' → logprob: -15.897685050964355
    10. '               ' → logprob: -16.27268409729004

Token 207: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.005803062580525875
    2. '           ' → logprob: -5.255803108215332
    3. ' else' → logprob: -7.505803108215332
    4. '       ' → logprob: -11.005803108215332
    5. '	else' → logprob: -13.505803108215332
    6. 'elif' → logprob: -14.380803108215332
    7. 'return' → logprob: -15.380803108215332
    8. '_else' → logprob: -15.380803108215332
    9. '   ' → logprob: -15.505803108215332
    10. '               ' → logprob: -16.630802154541016

Token 208: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1411072015762329
    2. ':
' → logprob: -2.1411070823669434
    3. ':return' → logprob: -4.266107082366943
    4. 'return' → logprob: -11.141107559204102
    5. ' return' → logprob: -11.516107559204102
    6. '<|end|>' → logprob: -12.141107559204102
    7. ':
' → logprob: -12.266107559204102
    8. ':

' → logprob: -12.516107559204102
    9. ' :' → logprob: -14.016107559204102
    10. ' :
' → logprob: -14.266107559204102

Token 209: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01566958799958229
    2. ' return' → logprob: -4.390669822692871
    3. 'return' → logprob: -5.765669822692871
    4. ':return' → logprob: -11.765669822692871
    5. '   ' → logprob: -12.140669822692871
    6. '                   ' → logprob: -12.640669822692871
    7. '           ' → logprob: -12.890669822692871
    8. '              ' → logprob: -13.890669822692871
    9. '	return' → logprob: -14.265669822692871
    10. '                ' → logprob: -15.140669822692871

Token 210: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5770496129989624
    2. ' return' → logprob: -0.8270496129989624
    3. '               ' → logprob: -6.827049732208252
    4. '                   ' → logprob: -11.327049255371094
    5. '           ' → logprob: -12.327049255371094
    6. '   ' → logprob: -12.577049255371094
    7. '                ' → logprob: -13.577049255371094
    8. ' ' → logprob: -13.577049255371094
    9. ':return' → logprob: -14.202049255371094
    10. '       ' → logprob: -14.327049255371094

Token 211: ' True' (ID: 6432)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.3139338195323944
    2. ' mid' → logprob: -1.3139338493347168
    3. ' True' → logprob: -7.438933849334717
    4. 'True' → logprob: -9.438933372497559
    5. '[mid' → logprob: -12.688933372497559
    6. '(mid' → logprob: -14.688933372497559
    7. ' ' → logprob: -14.813933372497559
    8. ' ' → logprob: -15.813933372497559
    9. ' mids' → logprob: -16.688934326171875
    10. ' true' → logprob: -16.813934326171875

Token 212: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02092966064810753
    2. '       ' → logprob: -3.8959295749664307
    3. '    
' → logprob: -9.145929336547852
    4. ' return' → logprob: -9.395929336547852
    5. 'return' → logprob: -9.645929336547852
    6. '            
' → logprob: -9.645929336547852
    7. '        
' → logprob: -10.520929336547852
    8. '   ' → logprob: -11.270929336547852
    9. '\n' → logprob: -12.270929336547852
    10. '               ' → logprob: -12.645929336547852

Token 213: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012523733312264085
    2. '           ' → logprob: -7.126252174377441
    3. '   ' → logprob: -8.501252174377441
    4. ' return' → logprob: -8.751252174377441
    5. 'return' → logprob: -9.501252174377441
    6. '      ' → logprob: -12.626252174377441
    7. '     ' → logprob: -13.251252174377441
    8. ' None' → logprob: -13.501252174377441
    9. '    ' → logprob: -14.001252174377441
    10. 'None' → logprob: -14.251252174377441

Token 214: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.12280784547328949
    2. '       ' → logprob: -2.372807741165161
    3. '   ' → logprob: -3.872807741165161
    4. ' return' → logprob: -6.49780797958374
    5. '    ' → logprob: -11.622807502746582
    6. '           ' → logprob: -11.622807502746582
    7. '     ' → logprob: -11.997807502746582
    8. '	return' → logprob: -12.247807502746582
    9. ' ' → logprob: -12.622807502746582
    10. '               ' → logprob: -12.622807502746582

Token 215: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.676292231422849e-05
    2. ' False' → logprob: -11.000017166137695
    3. '(False' → logprob: -18.500017166137695
    4. 'None' → logprob: -19.500017166137695
    5. '=False' → logprob: -21.625017166137695
    6. 'false' → logprob: -22.375017166137695
    7. 'True' → logprob: -23.125017166137695
    8. '   ' → logprob: -23.500017166137695
    9. '.False' → logprob: -23.875017166137695
    10. '_false' → logprob: -24.500017166137695

Token 216: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056565169245004654
    2. '    
' → logprob: -3.931565284729004
    3. 'count' → logprob: -4.056565284729004
    4. ' count' → logprob: -4.306565284729004
    5. '
' → logprob: -5.806565284729004
    6. 'result' → logprob: -7.181565284729004
    7. ' result' → logprob: -8.056565284729004
    8. ' ' → logprob: -9.181565284729004
    9. '  
' → logprob: -9.556565284729004
    10. '        
' → logprob: -10.181565284729004

Token 217: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036031387746334076
    2. 'count' → logprob: -3.661031484603882
    3. ' count' → logprob: -4.786031246185303
    4. '    
' → logprob: -7.786031246185303
    5. 'c' → logprob: -8.036031723022461
    6. 'result' → logprob: -8.286031723022461
    7. ' result' → logprob: -9.036031723022461
    8. ' c' → logprob: -9.911031723022461
    9. '
' → logprob: -10.161031723022461
    10. ' ' → logprob: -10.786031723022461

Token 218: ' return' (ID: 622)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.367521733045578
    2. 'return' (adapté à ' return') → logprob: -1.8675217628479004
    3. 'result' → logprob: -2.4925217628479004
    4. '   ' → logprob: -3.4925217628479004
    5. ' count' → logprob: -4.7425217628479
    6. 'c' → logprob: -4.9925217628479
    7. 'cnt' → logprob: -4.9925217628479
    8. 'res' → logprob: -5.2425217628479
    9. ' return' → logprob: -5.2425217628479
    10. 'total' → logprob: -5.6175217628479

Token 219: ' [' (ID: 723)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.20149773359298706
    2. ' sum' → logprob: -1.7014977931976318
    3. 'len' → logprob: -9.701498031616211
    4. ' len' → logprob: -11.076498031616211
    5. ' ' → logprob: -12.076498031616211
    6. '   ' → logprob: -13.576498031616211
    7. '(sum' → logprob: -14.826498031616211
    8. ' ' → logprob: -15.701498031616211
    9. '  ' → logprob: -16.07649803161621
    10. '=sum' → logprob: -17.45149803161621

Token 220: 'bin' (ID: 11893)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.7971180081367493
    2. '1' → logprob: -1.6721179485321045
    3. 'int' → logprob: -2.0471179485321045
    4. 'count' → logprob: -2.5471179485321045
    5. 'bin' → logprob: -2.5471179485321045
    6. 'ys' → logprob: -3.0471179485321045
    7. 'x' → logprob: -4.547118186950684
    8. 'n' → logprob: -5.047118186950684
    9. 'True' → logprob: -5.297118186950684
    10. 'y' → logprob: -5.797118186950684

Token 221: 'search' (ID: 2624)
  Prédit: 'search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -3.128163257315464e-07
    2. ' search' → logprob: -16.375
    3. 'se' → logprob: -16.625
    4. '(search' → logprob: -17.375
    5. 's' → logprob: -17.75
    6. 'earch' → logprob: -17.875
    7. ')' → logprob: -18.625
    8. '(i' → logprob: -20.125
    9. ']' → logprob: -20.625
    10. '   ' → logprob: -20.875

Token 222: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.5577775128767826e-06
    2. '0' → logprob: -12.375005722045898
    3. ' (' → logprob: -13.875005722045898
    4. '(
' → logprob: -15.625005722045898
    5. '   ' → logprob: -16.7500057220459
    6. '](' → logprob: -17.0000057220459
    7. ']' → logprob: -17.1250057220459
    8. ')' → logprob: -17.1250057220459
    9. '
' → logprob: -17.3750057220459
    10. '((' → logprob: -17.5000057220459

Token 223: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '(' → logprob: -16.750009536743164
    4. '   ' → logprob: -17.000009536743164
    5. ',' → logprob: -17.750009536743164
    6. ')' → logprob: -18.125009536743164
    7. '00' → logprob: -18.375009536743164
    8. '  ' → logprob: -18.625009536743164
    9. '<|end|>' → logprob: -18.625009536743164
    10. '
' → logprob: -19.375009536743164

Token 224: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.100059156073257e-05
    2. ',len' → logprob: -9.875070571899414
    3. '(len' → logprob: -11.500070571899414
    4. ' ,' → logprob: -11.875070571899414
    5. ',
' → logprob: -13.625070571899414
    6. 'len' → logprob: -13.875070571899414
    7. '(' → logprob: -15.875070571899414
    8. ' len' → logprob: -17.000070571899414
    9. ',

' → logprob: -17.000070571899414
    10. '   ' → logprob: -19.125070571899414

Token 225: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.7610454708337784e-05
    2. ' len' → logprob: -10.500027656555176
    3. '   ' → logprob: -16.87502670288086
    4. '(len' → logprob: -17.62502670288086
    5. ' ' → logprob: -19.00002670288086
    6. '[len' → logprob: -19.87502670288086
    7. '	len' → logprob: -20.62502670288086
    8. '  ' → logprob: -21.00002670288086
    9. '
' → logprob: -21.87502670288086
    10. '    ' → logprob: -22.37502670288086

Token 226: '(xs' (ID: 132690)
  Prédit: '(xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(xs' → logprob: -4.4849443838757e-06
    2. '(' → logprob: -12.625004768371582
    3. 'xs' → logprob: -14.375004768371582
    4. '(x' → logprob: -14.500004768371582
    5. '-xs' → logprob: -17.625003814697266
    6. ' xs' → logprob: -17.875003814697266
    7. '(nums' → logprob: -18.375003814697266
    8. 'Xs' → logprob: -18.750003814697266
    9. '(
' → logprob: -18.875003814697266
    10. ' (' → logprob: -19.000003814697266

Token 227: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6345736980438232
    2. '-' → logprob: -0.8845736980438232
    3. ' -' → logprob: -2.8845736980438232
    4. ')-' → logprob: -7.384573936462402
    5. ' ' → logprob: -9.009573936462402
    6. '()' → logprob: -9.134573936462402
    7. '   ' → logprob: -9.134573936462402
    8. ' )' → logprob: -10.884573936462402
    9. '```' → logprob: -11.009573936462402
    10. '(' → logprob: -11.009573936462402

Token 228: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017982252757064998
    2. ' ' → logprob: -8.6251802444458
    3. '<|end|>' → logprob: -16.250179290771484
    4. ')' → logprob: -16.500179290771484
    5. '   ' → logprob: -17.375179290771484
    6. '
' → logprob: -17.625179290771484
    7. '  ' → logprob: -17.750179290771484
    8. '```' → logprob: -18.125179290771484
    9. ',' → logprob: -18.750179290771484
    10. '

' → logprob: -19.562679290771484

Token 229: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003065030323341489
    2. ',y' → logprob: -8.250306129455566
    3. ' ,' → logprob: -10.125306129455566
    4. ',n' → logprob: -12.750306129455566
    5. 'y' → logprob: -13.625306129455566
    6. ',x' → logprob: -15.000306129455566
    7. ',k' → logprob: -15.125306129455566
    8. ',
' → logprob: -15.875306129455566
    9. ',item' → logprob: -16.875307083129883
    10. '   ' → logprob: -17.125307083129883

Token 230: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.01876024715602398
    2. ' y' → logprob: -4.0187602043151855
    3. 'n' → logprob: -7.5187602043151855
    4. 'x' → logprob: -10.768760681152344
    5. ' n' → logprob: -11.643760681152344
    6. 'v' → logprob: -11.893760681152344
    7. 'k' → logprob: -11.893760681152344
    8. 'e' → logprob: -12.018760681152344
    9. '   ' → logprob: -12.643760681152344
    10. 'i' → logprob: -12.768760681152344

Token 231: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.2994620242971e-06
    2. ' )' → logprob: -12.500008583068848
    3. ')]' → logprob: -12.875008583068848
    4. 's' → logprob: -14.250008583068848
    5. ']' → logprob: -14.625008583068848
    6. ')
' → logprob: -14.625008583068848
    7. '))' → logprob: -15.750008583068848
    8. ' for' → logprob: -16.50000762939453
    9. ' ' → logprob: -17.25000762939453
    10. '])' → logprob: -17.37500762939453

Token 232: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02326073683798313
    2. 'for' → logprob: -3.7732608318328857
    3. '   ' → logprob: -11.648261070251465
    4. ' ' → logprob: -12.523261070251465
    5. ')' → logprob: -13.773261070251465
    6. ' in' → logprob: -14.648261070251465
    7. '    ' → logprob: -14.898261070251465
    8. '	for' → logprob: -15.398261070251465
    9. ' y' → logprob: -15.648261070251465
    10. '  ' → logprob: -15.898261070251465

Token 233: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5440303087234497
    2. ' ys' → logprob: -1.0440303087234497
    3. 'y' → logprob: -3.16903018951416
    4. 'ys' → logprob: -3.66903018951416
    5. ' ' → logprob: -11.91903018951416
    6. ' yn' → logprob: -13.04403018951416
    7. '	y' → logprob: -13.16903018951416
    8. 'yn' → logprob: -14.04403018951416
    9. 'yt' → logprob: -14.29403018951416
    10. '   ' → logprob: -14.54403018951416

Token 234: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08902115374803543
    2. 'in' → logprob: -2.4640212059020996
    3. 's' → logprob: -10.089020729064941
    4. 'y' → logprob: -11.089020729064941
    5. ' ' → logprob: -11.214020729064941
    6. ' ys' → logprob: -12.589020729064941
    7. 'ins' → logprob: -13.214020729064941
    8. '  ' → logprob: -13.839020729064941
    9. ' y' → logprob: -13.964020729064941
    10. ',' → logprob: -13.964020729064941

Token 235: ' ys' (ID: 67301)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.038044705986976624
    2. ' ys' → logprob: -3.2880446910858154
    3. ' ' → logprob: -13.663044929504395
    4. 'yt' → logprob: -14.288044929504395
    5. '   ' → logprob: -15.038044929504395
    6. 'yn' → logprob: -15.538044929504395
    7. 'yl' → logprob: -16.038043975830078
    8. 'ym' → logprob: -16.038043975830078
    9. '
' → logprob: -16.413043975830078
    10. 'yp' → logprob: -16.413043975830078

Token 236: '].' (ID: 1651)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006619225605390966
    2. ' ]' → logprob: -7.875661849975586
    3. '].' → logprob: -9.250661849975586
    4. ' if' → logprob: -9.500661849975586
    5. '   ' → logprob: -9.875661849975586
    6. '])' → logprob: -10.375661849975586
    7. ')]' → logprob: -11.750661849975586
    8. ')' → logprob: -12.000661849975586
    9. ']==' → logprob: -12.500661849975586
    10. 'if' → logprob: -12.875661849975586

Token 237: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.9266199160483666e-05
    2. ' count' → logprob: -11.500019073486328
    3. 'sum' → logprob: -11.625019073486328
    4. '	count' → logprob: -16.500019073486328
    5. '.count' → logprob: -16.625019073486328
    6. '```' → logprob: -18.500019073486328
    7. ' ' → logprob: -18.625019073486328
    8. '   ' → logprob: -18.875019073486328
    9. 'index' → logprob: -20.000019073486328
    10. 'filter' → logprob: -20.750019073486328

Token 238: '(True' (ID: 55978)
  Prédit: '(True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(True' → logprob: -0.0001290454383706674
    2. '(' → logprob: -9.250128746032715
    3. '(lambda' → logprob: -10.375128746032715
    4. 'True' → logprob: -13.875128746032715
    5. '(
' → logprob: -15.375128746032715
    6. '(T' → logprob: -16.12512969970703
    7. ' (' → logprob: -16.25012969970703
    8. '("("' → logprob: -16.37512969970703
    9. '(False' → logprob: -16.50012969970703
    10. '(TRUE' → logprob: -17.75012969970703

Token 239: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -15.875
    3. ' )' → logprob: -15.875
    4. '))' → logprob: -17.125
    5. ')`' → logprob: -17.5
    6. '())' → logprob: -19.25
    7. '}' → logprob: -19.375
    8. '   ' → logprob: -19.375
    9. ')

' → logprob: -19.5
    10. '()' → logprob: -19.5

Token 240: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 241: ' run' (ID: 2461)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.9117437601089478
    2. ' count' → logprob: -1.4117437601089478
    3. ' sum' → logprob: -3.036743640899658
    4. ' factorial' → logprob: -3.286743640899658
    5. ' unique' → logprob: -3.536743640899658
    6. ' test' → logprob: -3.661743640899658
    7. ' foo' → logprob: -3.661743640899658
    8. ' reverse' → logprob: -3.911743640899658
    9. ' find' → logprob: -4.036743640899658
    10. ' binary' → logprob: -4.161743640899658

Token 242: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.10475153475999832
    2. '_' → logprob: -2.6047515869140625
    3. '():
' → logprob: -4.1047515869140625
    4. '()' → logprob: -4.8547515869140625
    5. '_tests' → logprob: -7.6047515869140625
    6. '_test' → logprob: -8.604751586914062
    7. '(' → logprob: -8.979751586914062
    8. '(_' → logprob: -9.229751586914062
    9. '()>' → logprob: -10.354751586914062
    10. 'def' → logprob: -10.354751586914062

Token 243: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00030841029365547
    2. '    ' → logprob: -9.0003080368042
    3. '[' → logprob: -9.2503080368042
    4. '(' → logprob: -10.6253080368042
    5. '    
' → logprob: -11.0003080368042
    6. ' for' → logprob: -11.1253080368042
    7. ' ' → logprob: -12.1253080368042
    8. '  ' → logprob: -12.1253080368042
    9. '()' → logprob: -12.7503080368042
    10. ' test' → logprob: -13.0003080368042

Token 244: ' _' (ID: 1175)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2527026832103729
    2. 'print' → logprob: -2.0027027130126953
    3. ' print' → logprob: -3.3777027130126953
    4. ' xs' → logprob: -4.002702713012695
    5. 'xs' → logprob: -4.252702713012695
    6. ' test' → logprob: -4.877702713012695
    7. 'test' → logprob: -5.002702713012695
    8. ' for' → logprob: -6.127702713012695
    9. 'tests' → logprob: -6.502702713012695
    10. 'for' → logprob: -6.877702713012695

Token 245: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05367513746023178
    2. '=' → logprob: -3.1786751747131348
    3. ' ' → logprob: -4.803675174713135
    4. ' =[' → logprob: -7.428675174713135
    5. 'xs' → logprob: -7.678675174713135
    6. 'ys' → logprob: -7.928675174713135
    7. ' ys' → logprob: -8.428674697875977
    8. 's' → logprob: -8.428674697875977
    9. '=[]' → logprob: -8.928674697875977
    10. '(xs' → logprob: -9.053674697875977

Token 246: ' input' (ID: 3422)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.05872125178575516
    2. ' count' → logprob: -3.6837213039398193
    3. 'input' → logprob: -4.30872106552124
    4. 'int' → logprob: -4.93372106552124
    5. '[' → logprob: -5.05872106552124
    6. ' input' → logprob: -6.55872106552124
    7. ' [' → logprob: -6.93372106552124
    8. '[count' → logprob: -7.18372106552124
    9. '[int' → logprob: -7.30872106552124
    10. ' int' → logprob: -7.55872106552124

Token 247: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00046510808169841766
    2. '()
' → logprob: -8.500465393066406
    3. '(' → logprob: -8.750465393066406
    4. '().' → logprob: -9.750465393066406
    5. '("' → logprob: -11.125465393066406
    6. '()>' → logprob: -12.000465393066406
    7. '()

' → logprob: -12.125465393066406
    8. '('' → logprob: -12.500465393066406
    9. '("")' → logprob: -13.000465393066406
    10. '()\' → logprob: -13.125465393066406

Token 248: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 249: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47339656949043274
    2. 'ys' → logprob: -1.3483965396881104
    3. 'n' → logprob: -2.7233965396881104
    4. 's' → logprob: -3.8483965396881104
    5. 'y' → logprob: -4.2233967781066895
    6. 'xs' → logprob: -5.3483967781066895
    7. '<|end|>' → logprob: -6.0983967781066895
    8. '
' → logprob: -6.5983967781066895
    9. '#' → logprob: -6.9733967781066895
    10. 'data' → logprob: -6.9733967781066895

Token 250: ' fl' (ID: 1548)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03974217176437378
    2. 'input' → logprob: -3.2897422313690186
    3. 'int' → logprob: -7.5397419929504395
    4. 'n' → logprob: -7.7897419929504395
    5. 'pass' → logprob: -8.039742469787598
    6. ' _' → logprob: -8.664742469787598
    7. '#' → logprob: -9.789742469787598
    8. '_=' → logprob: -10.039742469787598
    9. '...' → logprob: -10.789742469787598
    10. '__' → logprob: -10.914742469787598

Token 251: 'ake' (ID: 814)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.000320330640533939
    2. 'ow' → logprob: -9.375320434570312
    3. 'ip' → logprob: -9.875320434570312
    4. 'o' → logprob: -9.875320434570312
    5. 'ash' → logprob: -10.750320434570312
    6. 'us' → logprob: -11.000320434570312
    7. 'ex' → logprob: -11.125320434570312
    8. 'ows' → logprob: -11.250320434570312
    9. 'ips' → logprob: -11.625320434570312
    10. 'aw' → logprob: -11.875320434570312

Token 252: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -8.745069499127567e-05
    2. 's' → logprob: -10.50008773803711
    3. 'eight' → logprob: -10.62508773803711
    4. 'nt' → logprob: -12.62508773803711
    5. 'he' → logprob: -13.00008773803711
    6. 'r' → logprob: -13.12508773803711
    7. 'c' → logprob: -13.12508773803711
    8. 'k' → logprob: -13.12508773803711
    9. '-' → logprob: -13.12508773803711
    10. 'ight' → logprob: -13.37508773803711

Token 253: ':' (ID: 25)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 254: ' noqa' (ID: 104995)
  Prédit: 'ignore'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ignore' → logprob: -0.22454199194908142
    2. 'no' → logprob: -2.5995419025421143
    3. 'noop' → logprob: -2.8495419025421143
    4. ' noqa' → logprob: -3.7245419025421143
    5. 'skip' → logprob: -3.8495419025421143
    6. 'disable' → logprob: -4.724542140960693
    7. 'off' → logprob: -4.974542140960693
    8. 'nol' → logprob: -6.724542140960693
    9. 'none' → logprob: -6.974542140960693
    10. 'nof' → logprob: -7.099542140960693

Token 255: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6168772578239441
    2. '<|end|>' → logprob: -0.8668772578239441
    3. '
' → logprob: -3.991877317428589
    4. '    
' → logprob: -5.24187707901001
    5. 'n' → logprob: -5.61687707901001
    6. 'def' → logprob: -6.11687707901001
    7. ' ' → logprob: -6.24187707901001
    8. 'input' → logprob: -6.49187707901001
    9. '  
' → logprob: -6.74187707901001
    10. '<|end|>' → logprob: -7.11687707901001

Token 256: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6347914934158325
    2. '<|end|>' → logprob: -1.0097914934158325
    3. 'for' → logprob: -3.384791374206543
    4. 'while' → logprob: -4.634791374206543
    5. 'n' → logprob: -4.884791374206543
    6. 'y' → logprob: -5.009791374206543
    7. '    
' → logprob: -5.134791374206543
    8. 'input' → logprob: -5.259791374206543
    9. 'ys' → logprob: -5.259791374206543
    10. '
' → logprob: -5.259791374206543

Token 257: ' s' (ID: 265)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.016501620411872864
    2. 'xs' → logprob: -4.391501426696777
    3. 'print' → logprob: -5.766501426696777
    4. '_' → logprob: -8.641501426696777
    5. '   ' → logprob: -8.766501426696777
    6. 'n' → logprob: -8.766501426696777
    7. 'for' → logprob: -9.391501426696777
    8. 'nums' → logprob: -9.891501426696777
    9. 'arr' → logprob: -10.391501426696777
    10. 'data' → logprob: -10.891501426696777

Token 258: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1534900814294815
    2. '=' → logprob: -2.5284900665283203
    3. 's' → logprob: -3.5284900665283203
    4. 'ys' → logprob: -4.52849006652832
    5. 'e' → logprob: -4.90349006652832
    6. ' ys' → logprob: -6.15349006652832
    7. 't' → logprob: -6.40349006652832
    8. '   ' → logprob: -6.40349006652832
    9. '=input' → logprob: -6.52849006652832
    10. 'xs' → logprob: -6.65349006652832

Token 259: ' [' (ID: 723)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12717346847057343
    2. ' input' → logprob: -2.25217342376709
    3. 'list' → logprob: -4.50217342376709
    4. ' list' → logprob: -6.12717342376709
    5. '[input' → logprob: -7.87717342376709
    6. '[]' → logprob: -8.50217342376709
    7. '[' → logprob: -8.50217342376709
    8. ' [' → logprob: -9.25217342376709
    9. ' []' → logprob: -10.75217342376709
    10. 'int' → logprob: -11.00217342376709

Token 260: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.700132997939363e-05
    2. '*' → logprob: -11.375017166137695
    3. ' int' → logprob: -12.875017166137695
    4. '   ' → logprob: -14.250017166137695
    5. 'input' → logprob: -14.500017166137695
    6. '[int' → logprob: -14.625017166137695
    7. '  ' → logprob: -15.375017166137695
    8. '(int' → logprob: -15.500017166137695
    9. 'i' → logprob: -15.875017166137695
    10. 'list' → logprob: -16.000017166137695

Token 261: '(i' (ID: 3649)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0657389834523201
    2. '(i' → logprob: -2.8157389163970947
    3. '(' → logprob: -5.690739154815674
    4. '(input' → logprob: -8.690738677978516
    5. '(s' → logprob: -9.440738677978516
    6. '(_)' → logprob: -10.190738677978516
    7. '()]' → logprob: -10.440738677978516
    8. '(n' → logprob: -11.190738677978516
    9. '(
' → logprob: -11.440738677978516
    10. '(e' → logprob: -11.440738677978516

Token 262: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6919278502464294
    2. 'for' → logprob: -1.0669279098510742
    3. ' for' → logprob: -2.816927909851074
    4. '()' → logprob: -2.941927909851074
    5. '(x' → logprob: -3.566927909851074
    6. 'x' → logprob: -5.566927909851074
    7. '(i' → logprob: -5.691927909851074
    8. '()]' → logprob: -6.316927909851074
    9. 'or' → logprob: -6.816927909851074
    10. ']' → logprob: -7.066927909851074

Token 263: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06489775329828262
    2. ' for' → logprob: -2.8148977756500244
    3. '()' → logprob: -6.189897537231445
    4. ')' → logprob: -7.939897537231445
    5. 'in' → logprob: -8.064897537231445
    6. '(' → logprob: -9.939897537231445
    7. ' in' → logprob: -10.314897537231445
    8. '(x' → logprob: -10.439897537231445
    9. 'or' → logprob: -10.689897537231445
    10. '_' → logprob: -10.689897537231445

Token 264: ' i' (ID: 575)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.30156612396240234
    2. 'input' → logprob: -1.4265661239624023
    3. '_' → logprob: -4.051566123962402
    4. ' i' → logprob: -6.301566123962402
    5. 'i' → logprob: -7.176566123962402
    6. '_input' → logprob: -9.176566123962402
    7. ' ' → logprob: -10.176566123962402
    8. ' in' → logprob: -10.426566123962402
    9. ' _' → logprob: -10.801566123962402
    10. 'in' → logprob: -11.426566123962402

Token 265: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16086354851722717
    2. 'in' → logprob: -1.9108635187149048
    3. '_' → logprob: -7.785863399505615
    4. ' i' → logprob: -9.535863876342773
    5. 'input' → logprob: -9.660863876342773
    6. ' ' → logprob: -10.410863876342773
    7. ' input' → logprob: -10.785863876342773
    8. 'i' → logprob: -11.035863876342773
    9. ' _' → logprob: -11.285863876342773
    10. ' ' → logprob: -13.285863876342773

Token 266: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16057930886745453
    2. ' input' → logprob: -1.9105793237686157
    3. '_' → logprob: -8.660579681396484
    4. '_.' → logprob: -8.785579681396484
    5. '_input' → logprob: -11.785579681396484
    6. '(input' → logprob: -11.785579681396484
    7. ' ' → logprob: -12.285579681396484
    8. '   ' → logprob: -13.160579681396484
    9. ' _.' → logprob: -13.285579681396484
    10. '	input' → logprob: -13.910579681396484

Token 267: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.796184723294573e-06
    2. '()' → logprob: -12.250005722045898
    3. '()]' → logprob: -13.875005722045898
    4. ' ().' → logprob: -18.1250057220459
    5. '()].' → logprob: -18.2500057220459
    6. '(' → logprob: -18.7500057220459
    7. '()
' → logprob: -21.7500057220459
    8. '()[' → logprob: -22.1250057220459
    9. '.split' → logprob: -22.3750057220459
    10. '())' → logprob: -22.8750057220459

Token 268: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.006721756421029568
    2. 'strip' → logprob: -5.0067219734191895
    3. 'rstrip' → logprob: -12.506721496582031
    4. ' split' → logprob: -12.881721496582031
    5. ' strip' → logprob: -16.25672149658203
    6. '(split' → logprob: -16.50672149658203
    7. '.split' → logprob: -18.25672149658203
    8. ' ' → logprob: -18.25672149658203
    9. '().' → logprob: -18.75672149658203
    10. 'spl' → logprob: -19.50672149658203

Token 269: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.000344640837283805
    2. '()' → logprob: -8.000344276428223
    3. '(' → logprob: -11.875344276428223
    4. '('' → logprob: -13.500344276428223
    5. '()]
' → logprob: -15.375344276428223
    6. '())' → logprob: -15.375344276428223
    7. ']' → logprob: -15.875344276428223
    8. '()],' → logprob: -17.25034523010254
    9. '()}' → logprob: -17.37534523010254
    10. ' ()' → logprob: -17.50034523010254

Token 270: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06676073372364044
    2. '<|end|>' → logprob: -3.066760778427124
    3. 's' → logprob: -4.691760540008545
    4. '    
' → logprob: -5.566760540008545
    5. '
' → logprob: -7.066760540008545
    6. ' ' → logprob: -7.316760540008545
    7. 'n' → logprob: -7.816760540008545
    8. '_' → logprob: -7.816760540008545
    9. ' s' → logprob: -7.941760540008545
    10. ' 
' → logprob: -8.066761016845703

Token 271: ' _' (ID: 1175)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.13182011246681213
    2. 'print' → logprob: -2.7568202018737793
    3. 'q' → logprob: -4.006820201873779
    4. 'y' → logprob: -4.131820201873779
    5. 'x' → logprob: -5.131820201873779
    6. 'a' → logprob: -5.256820201873779
    7. 'p' → logprob: -5.256820201873779
    8. 'k' → logprob: -5.881820201873779
    9. 'n' → logprob: -6.756820201873779
    10. '_' (adapté à ' _') → logprob: -6.881820201873779

Token 272: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014840990304947
    2. '=' → logprob: -1.7014840841293335
    3. 's' → logprob: -10.326483726501465
    4. ',' → logprob: -10.826483726501465
    5. ' ' → logprob: -11.326483726501465
    6. '  ' → logprob: -13.326483726501465
    7. ' =
' → logprob: -13.826483726501465
    8. '   ' → logprob: -14.076483726501465
    9. '<|end|>' → logprob: -14.951483726501465
    10. '=s' → logprob: -15.201483726501465

Token 273: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.027555998414754868
    2. 'int' → logprob: -3.7775559425354004
    3. ' input' → logprob: -5.6525559425354
    4. '[int' → logprob: -8.277556419372559
    5. '[input' → logprob: -8.777556419372559
    6. '[' → logprob: -9.402556419372559
    7. 'len' → logprob: -9.527556419372559
    8. 's' → logprob: -9.652556419372559
    9. ' int' → logprob: -9.777556419372559
    10. ' ' → logprob: -10.652556419372559

Token 274: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.5776860184123507e-06
    2. '()
' → logprob: -13.00000286102295
    3. '(' → logprob: -15.62500286102295
    4. '()

' → logprob: -16.500001907348633
    5. '())' → logprob: -17.250001907348633
    6. ' ()' → logprob: -17.750001907348633
    7. '()`' → logprob: -17.875001907348633
    8. '()]' → logprob: -17.875001907348633
    9. '()>' → logprob: -18.250001907348633
    10. '()\' → logprob: -18.875001907348633

Token 275: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035486530512571335
    2. 's' → logprob: -4.285486698150635
    3. 't' → logprob: -5.160486698150635
    4. ' s' → logprob: -5.285486698150635
    5. '<|end|>' → logprob: -5.785486698150635
    6. ' ' → logprob: -6.285486698150635
    7. '    
' → logprob: -6.535486698150635
    8. ' t' → logprob: -6.785486698150635
    9. '  
' → logprob: -6.910486698150635
    10. '[' → logprob: -7.785486698150635

Token 276: ' #' (ID: 1069)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1759057193994522
    2. '   ' → logprob: -2.550905704498291
    3. 's' → logprob: -2.800905704498291
    4. 'ys' → logprob: -4.675905704498291
    5. 'y' → logprob: -4.675905704498291
    6. ' ys' → logprob: -6.300905704498291
    7. ' t' → logprob: -6.925905704498291
    8. 'a' → logprob: -8.17590618133545
    9. '    
' → logprob: -8.80090618133545
    10. '#' → logprob: -9.17590618133545

Token 277: ' fl' (ID: 1548)
  Prédit: 'flake'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flake' → logprob: -0.11626262962818146
    2. 's' → logprob: -2.491262674331665
    3. ' s' → logprob: -4.616262435913086
    4. '#' → logprob: -4.866262435913086
    5. ' ' → logprob: -5.866262435913086
    6. ' noqa' → logprob: -6.616262435913086
    7. 'flakes' → logprob: -6.991262435913086
    8. 'no' → logprob: -7.366262435913086
    9. '```' → logprob: -7.491262435913086
    10. ' fl' → logprob: -7.616262435913086

Token 278: 'ake' (ID: 814)
  Prédit: 'ake'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ake' → logprob: -1.0325924449716695e-05
    2. 'ak' → logprob: -12.25001049041748
    3. 'a' → logprob: -12.62501049041748
    4. 'flake' → logprob: -14.62501049041748
    5. '8' → logprob: -14.87501049041748
    6. 'ack' → logprob: -15.00001049041748
    7. 'lake' → logprob: -15.25001049041748
    8. 'l' → logprob: -15.25001049041748
    9. '```' → logprob: -15.62501049041748
    10. 'e' → logprob: -16.375009536743164

Token 279: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -1.8624639324116288e-06
    2. '_' → logprob: -14.375001907348633
    3. '<|end|>' → logprob: -15.625001907348633
    4. '-' → logprob: -16.250001907348633
    5. 'eight' → logprob: -16.250001907348633
    6. ' ' → logprob: -16.250001907348633
    7. 'x' → logprob: -16.500001907348633
    8. 'c' → logprob: -16.625001907348633
    9. '   ' → logprob: -16.750001907348633
    10. '```' → logprob: -16.750001907348633

Token 280: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015993680572137237
    2. '=' → logprob: -6.876599311828613
    3. '   ' → logprob: -8.126599311828613
    4. ' noqa' → logprob: -9.501599311828613
    5. '<|end|>' → logprob: -10.001599311828613
    6. ' ' → logprob: -10.376599311828613
    7. '[' → logprob: -11.001599311828613
    8. '<|end|>' → logprob: -11.626599311828613
    9. '-' → logprob: -11.876599311828613
    10. '#' → logprob: -11.876599311828613

Token 281: ' noqa' (ID: 104995)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.44019052386283875
    2. ' noqa' → logprob: -1.0651905536651611
    3. 'ok' → logprob: -4.815190315246582
    4. 'NO' → logprob: -6.690190315246582
    5. 'na' → logprob: -8.190190315246582
    6. 'qa' → logprob: -8.315190315246582
    7. ' noq' → logprob: -8.815190315246582
    8. '(no' → logprob: -8.940190315246582
    9. '@No' → logprob: -9.065190315246582
    10. 'No' → logprob: -9.315190315246582

Token 282: '
' (ID: 198)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.36697056889533997
    2. 'y' → logprob: -1.4919705390930176
    3. '   ' → logprob: -3.2419705390930176
    4. 'r' → logprob: -3.9919705390930176
    5. 'ys' → logprob: -3.9919705390930176
    6. 'l' → logprob: -6.491970539093018
    7. 'a' → logprob: -6.491970539093018
    8. 's' → logprob: -7.116970539093018
    9. ' ys' → logprob: -7.366970539093018
    10. 'b' → logprob: -7.741970539093018

Token 283: '   ' (ID: 271)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.13054952025413513
    2. 'y' → logprob: -2.630549430847168
    3. 'a' → logprob: -4.255549430847168
    4. 'l' → logprob: -4.380549430847168
    5. 'r' → logprob: -4.505549430847168
    6. 'ys' → logprob: -5.005549430847168
    7. '   ' → logprob: -6.380549430847168
    8. 'b' → logprob: -7.005549430847168
    9. ' t' → logprob: -7.380549430847168
    10. 'q' → logprob: -7.755549430847168

Token 284: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.13461273908615112
    2. 'y' → logprob: -2.384612798690796
    3. 'l' → logprob: -4.509612560272217
    4. 'a' → logprob: -5.134612560272217
    5. 'ys' → logprob: -5.384612560272217
    6. 'q' → logprob: -6.009612560272217
    7. 'b' → logprob: -6.634612560272217
    8. 'p' → logprob: -6.759612560272217
    9. 'r' → logprob: -6.884612560272217
    10. 's' → logprob: -7.009612560272217

Token 285: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029757438227534294
    2. '=' → logprob: -3.529757499694824
    3. 's' → logprob: -12.154757499694824
    4. ' ' → logprob: -13.654757499694824
    5. ' =[' → logprob: -14.779757499694824
    6. '   ' → logprob: -16.779756546020508
    7. '  ' → logprob: -16.904756546020508
    8. '=[]' → logprob: -17.529756546020508
    9. ' ' → logprob: -17.654756546020508
    10. '	' → logprob: -17.779756546020508

Token 286: ' [' (ID: 723)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.31362131237983704
    2. ' [' → logprob: -1.3136212825775146
    3. '[' → logprob: -8.063621520996094
    4. '[input' → logprob: -10.438621520996094
    5. '[list' → logprob: -12.313621520996094
    6. '[Int' → logprob: -12.438621520996094
    7. '[i' → logprob: -12.813621520996094
    8. '[str' → logprob: -13.438621520996094
    9. '[ind' → logprob: -13.938621520996094
    10. '[in' → logprob: -14.688621520996094

Token 287: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: 0.0
    2. ' int' → logprob: -19.75
    3. '   ' → logprob: -20.5
    4. '[int' → logprob: -20.875
    5. '  ' → logprob: -22.625
    6. '(int' → logprob: -22.75
    7. ']int' → logprob: -23.875
    8. ' ' → logprob: -24.125
    9. '<int' → logprob: -24.625
    10. 'ints' → logprob: -24.875

Token 288: '(j' (ID: 4997)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: 0.0
    2. '(' → logprob: -18.25
    3. '(x' → logprob: -18.375
    4. ' (' → logprob: -18.375
    5. '(ii' → logprob: -19.375
    6. '(int' → logprob: -19.625
    7. '(j' → logprob: -20.5
    8. '   ' → logprob: -21.25
    9. '(k' → logprob: -21.25
    10. '(t' → logprob: -21.5

Token 289: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001787159708328545
    2. 'for' → logprob: -7.001787185668945
    3. '()' → logprob: -7.251787185668945
    4. ' for' → logprob: -8.751787185668945
    5. '   ' → logprob: -12.376787185668945
    6. ' )' → logprob: -13.126787185668945
    7. '(i' → logprob: -14.376787185668945
    8. '	for' → logprob: -15.376787185668945
    9. '  ' → logprob: -15.626787185668945
    10. ' ' → logprob: -15.626787185668945

Token 290: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2255607545375824
    2. 'for' → logprob: -1.6005607843399048
    3. '(i' → logprob: -9.600561141967773
    4. '()' → logprob: -10.600561141967773
    5. '[i' → logprob: -11.350561141967773
    6. ' in' → logprob: -11.600561141967773
    7. '  ' → logprob: -11.725561141967773
    8. '   ' → logprob: -11.850561141967773
    9. ')' → logprob: -12.100561141967773
    10. ' ' → logprob: -12.225561141967773

Token 291: ' j' (ID: 441)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4741467535495758
    2. ' input' → logprob: -0.9741467237472534
    3. '(input' → logprob: -9.599146842956543
    4. 'j' → logprob: -13.474146842956543
    5. ' ' → logprob: -15.474146842956543
    6. 'in' → logprob: -16.474145889282227
    7. ' j' → logprob: -16.599145889282227
    8. 'i' → logprob: -16.599145889282227
    9. '_input' → logprob: -17.099145889282227
    10. '   ' → logprob: -17.224145889282227

Token 292: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.32760587334632874
    2. 'in' → logprob: -1.3276058435440063
    3. 'input' → logprob: -4.577605724334717
    4. '(input' → logprob: -5.952605724334717
    5. ' input' → logprob: -7.827605724334717
    6. '()' → logprob: -8.077606201171875
    7. ' ' → logprob: -8.702606201171875
    8. '=input' → logprob: -9.202606201171875
    9. 'import' → logprob: -9.577606201171875
    10. '   ' → logprob: -10.077606201171875

Token 293: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.005233882926404476
    2. ' input' → logprob: -5.2552337646484375
    3. '(input' → logprob: -16.130233764648438
    4. ' ' → logprob: -18.130233764648438
    5. '<input' → logprob: -18.755233764648438
    6. '	input' → logprob: -19.880233764648438
    7. '_input' → logprob: -20.255233764648438
    8. '   ' → logprob: -20.505233764648438
    9. '=input' → logprob: -20.630233764648438
    10. 'output' → logprob: -20.880233764648438

Token 294: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.6240566083070007e-06
    2. '()' → logprob: -13.625001907348633
    3. ' ().' → logprob: -15.375001907348633
    4. '.' → logprob: -16.375001907348633
    5. '.split' → logprob: -16.375001907348633
    6. ' .' → logprob: -18.125001907348633
    7. '()].' → logprob: -18.250001907348633
    8. '(' → logprob: -19.375001907348633
    9. '].' → logprob: -19.625001907348633
    10. '().__' → logprob: -19.625001907348633

Token 295: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.5048530030981055e-06
    2. 'strip' → logprob: -13.750001907348633
    3. ' split' → logprob: -15.125001907348633
    4. 'plit' → logprob: -17.000001907348633
    5. '(split' → logprob: -17.375001907348633
    6. '.split' → logprob: -17.500001907348633
    7. 'spl' → logprob: -19.625001907348633
    8. 'rstrip' → logprob: -19.625001907348633
    9. ' ' → logprob: -20.375001907348633
    10. 's' → logprob: -20.625001907348633

Token 296: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.000559108448214829
    2. '()' → logprob: -7.500559329986572
    3. ']' → logprob: -12.375558853149414
    4. '())' → logprob: -14.375558853149414
    5. '()]
' → logprob: -14.625558853149414
    6. '(' → logprob: -14.750558853149414
    7. ']()' → logprob: -15.250558853149414
    8. ' ()' → logprob: -16.000558853149414
    9. '()].' → logprob: -16.750558853149414
    10. '()][' → logprob: -16.750558853149414

Token 297: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08046547323465347
    2. '()]' → logprob: -2.58046555519104
    3. ']
' → logprob: -7.205465316772461
    4. ')]' → logprob: -7.455465316772461
    5. '()]
' → logprob: -8.705465316772461
    6. '()' → logprob: -10.205465316772461
    7. ']

' → logprob: -10.830465316772461
    8. ']()' → logprob: -11.080465316772461
    9. ']
' → logprob: -12.080465316772461
    10. ')' → logprob: -12.455465316772461

Token 298: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.2842308680992573e-05
    2. '   ' → logprob: -11.125022888183594
    3. 'count' → logprob: -12.250022888183594
    4. ' print' → logprob: -13.000022888183594
    5. 'p' → logprob: -14.750022888183594
    6. 'result' → logprob: -15.125022888183594
    7. 'c' → logprob: -15.750022888183594
    8. 'pr' → logprob: -16.875022888183594
    9. '    
' → logprob: -17.375022888183594
    10. 'n' → logprob: -17.500022888183594

Token 299: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.2664456789934775e-06
    2. 'result' → logprob: -14.125000953674316
    3. 'pr' → logprob: -15.750000953674316
    4. 'p' → logprob: -16.125001907348633
    5. ' print' → logprob: -17.000001907348633
    6. 'res' → logprob: -17.000001907348633
    7. 'r' → logprob: -17.500001907348633
    8. 'c' → logprob: -18.500001907348633
    9. 'ans' → logprob: -18.625001907348633
    10. '   ' → logprob: -18.750001907348633

Token 300: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -3.531315314830863e-06
    2. '(' → logprob: -12.750003814697266
    3. 'count' → logprob: -14.500003814697266
    4. '(c' → logprob: -18.125003814697266
    5. '=count' → logprob: -18.250003814697266
    6. '(
' → logprob: -19.375003814697266
    7. '[count' → logprob: -20.125003814697266
    8. '<count' → logprob: -20.625003814697266
    9. ' count' → logprob: -20.750003814697266
    10. ',count' → logprob: -20.750003814697266

Token 301: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -2.45848218582978e-06
    2. 's' → logprob: -13.37500286102295
    3. '(' → logprob: -14.25000286102295
    4. ')' → logprob: -15.62500286102295
    5. ')(' → logprob: -17.125001907348633
    6. ' (' → logprob: -17.375001907348633
    7. '(t' → logprob: -17.375001907348633
    8. '(
' → logprob: -18.875001907348633
    9. ')s' → logprob: -19.125001907348633
    10. '```' → logprob: -21.125001907348633

Token 302: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007166040013544261
    2. ',t' → logprob: -7.250716686248779
    3. ' ,' → logprob: -12.625716209411621
    4. '(t' → logprob: -12.875716209411621
    5. 't' → logprob: -15.125716209411621
    6. '(' → logprob: -15.125716209411621
    7. ',
' → logprob: -15.375716209411621
    8. ' t' → logprob: -16.500717163085938
    9. ',s' → logprob: -19.375717163085938
    10. '(),' → logprob: -19.500717163085938

Token 303: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -9.615255839889869e-05
    2. ' t' → logprob: -9.250096321105957
    3. '	t' → logprob: -20.25009536743164
    4. ')t' → logprob: -20.37509536743164
    5. '`t' → logprob: -20.50009536743164
    6. ')' → logprob: -23.00009536743164
    7. '(t' → logprob: -23.62509536743164
    8. '   ' → logprob: -23.75009536743164
    9. '
' → logprob: -23.75009536743164
    10. ' ' → logprob: -24.25009536743164

Token 304: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03805044665932655
    2. ')' → logprob: -3.288050413131714
    3. '())' → logprob: -12.163050651550293
    4. '()))' → logprob: -12.663050651550293
    5. '))
' → logprob: -15.288050651550293
    6. '()' → logprob: -15.788050651550293
    7. ')))' → logprob: -16.163049697875977
    8. '])' → logprob: -16.288049697875977
    9. ' ))' → logprob: -17.288049697875977
    10. ')
' → logprob: -17.788049697875977

Token 305: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 306: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.03808281198143959
    2. '__' → logprob: -3.2880828380584717
    3. 'name' → logprob: -10.41308307647705
    4. '_' → logprob: -11.78808307647705
    5. '_name' → logprob: -12.78808307647705
    6. ' ' → logprob: -15.16308307647705
    7. ' ' → logprob: -15.28808307647705
    8. '___' → logprob: -15.66308307647705
    9. ' "__' → logprob: -16.413082122802734
    10. ' _' → logprob: -16.663082122802734

Token 307: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.005204232409596443
    2. ' __' → logprob: -5.505204200744629
    3. ' ==' → logprob: -7.130204200744629
    4. 'name' → logprob: -8.380204200744629
    5. '==' → logprob: -9.755204200744629
    6. '.__' → logprob: -11.380204200744629
    7. '__.' → logprob: -11.880204200744629
    8. '__.__' → logprob: -12.130204200744629
    9. '.name' → logprob: -12.755204200744629
    10. '_name' → logprob: -12.755204200744629

Token 308: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.2200749754119897e-06
    2. '__.__' → logprob: -13.500001907348633
    3. '==' → logprob: -14.625001907348633
    4. '_' → logprob: -16.125001907348633
    5. '___' → logprob: -16.250001907348633
    6. '____' → logprob: -16.875001907348633
    7. '__
' → logprob: -17.125001907348633
    8. '__.' → logprob: -17.125001907348633
    9. ' ==' → logprob: -17.750001907348633
    10. '__('' → logprob: -18.625001907348633

Token 309: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.05133257433772087
    2. '==' → logprob: -3.176332473754883
    3. ' ==' → logprob: -4.801332473754883
    4. '=="' → logprob: -9.801332473754883
    5. '_' → logprob: -12.051332473754883
    6. '=='' → logprob: -12.176332473754883
    7. '=' → logprob: -12.301332473754883
    8. '__.__' → logprob: -12.551332473754883
    9. ' __' → logprob: -13.551332473754883
    10. '___' → logprob: -13.801332473754883

Token 310: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.02977861277759075
    2. ''' → logprob: -3.5297787189483643
    3. '__' → logprob: -11.029778480529785
    4. ' "__' → logprob: -11.404778480529785
    5. ' '__' → logprob: -15.029778480529785
    6. ''"' → logprob: -16.0297794342041
    7. ' ' → logprob: -16.0297794342041
    8. '"name' → logprob: -16.2797794342041
    9. '"user' → logprob: -17.2797794342041
    10. '   ' → logprob: -17.4047794342041

Token 311: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0031444430351257324
    2. '__' → logprob: -5.878144264221191
    3. 'name' → logprob: -8.003144264221191
    4. 'built' → logprob: -12.878144264221191
    5. '_main' → logprob: -14.628144264221191
    6. '__':
' → logprob: -14.753144264221191
    7. '7' → logprob: -15.128144264221191
    8. '2' → logprob: -15.378144264221191
    9. 'builtin' → logprob: -15.878144264221191
    10. '6' → logprob: -16.253145217895508

Token 312: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.029999010264873505
    2. '__' → logprob: -3.529999017715454
    3. '__":
' → logprob: -9.029998779296875
    4. '__:' → logprob: -9.279998779296875
    5. ':' → logprob: -10.654998779296875
    6. '':' → logprob: -12.404998779296875
    7. '_' → logprob: -12.779998779296875
    8. '__.' → logprob: -14.154998779296875
    9. '==' → logprob: -14.404998779296875
    10. '':
' → logprob: -14.529998779296875

Token 313: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002721660304814577
    2. ' run' → logprob: -6.127721786499023
    3. 'run' → logprob: -8.127721786499023
    4. '    
' → logprob: -9.502721786499023
    5. ' main' → logprob: -9.627721786499023
    6. '	run' → logprob: -9.627721786499023
    7. 'main' → logprob: -11.502721786499023
    8. '	main' → logprob: -12.002721786499023
    9. '```' → logprob: -12.377721786499023
    10. '   ' → logprob: -12.877721786499023

Token 314: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' (adapté à ' run') → logprob: -4.127333340875339e-06
    2. ' run' → logprob: -12.500003814697266
    3. '   ' → logprob: -15.000003814697266
    4. '	run' → logprob: -18.750003814697266
    5. 'main' → logprob: -20.250003814697266
    6. '(run' → logprob: -21.125003814697266
    7. 'import' → logprob: -22.750003814697266
    8. '.run' → logprob: -23.000003814697266
    9. '    
' → logprob: -23.125003814697266
    10. '  ' → logprob: -23.375003814697266

Token 315: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 313
Tokens correctement prédits (1ère position, stricte): 145
Tokens correctement prédits (1ère position, avec adaptation): 153
Tokens correctement prédits (top 10): 271
Précision stricte (1ère position): 46.33%
Précision adaptée (1ère position): 48.88%
Précision (top 10): 86.58%
================================================================================
