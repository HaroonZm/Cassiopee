================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
H=int(input())+1
A=[0]+list(map(int,input().split()))
def h(i):
 l=2*i;r,g=l+1,[i,l][l<H and A[i]<A[l]]
 if r<H and A[g]<A[r]:g=r
 if g>i:A[i],A[g]=A[g],A[i];h(g)
for i in range(H//2,0,-1):h(i)
print(' '+' '.join(map(str,A[1:])))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'H' (ID: 39)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())' (ID: 3516)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05811844766139984
    2. ')' → logprob: -3.1831183433532715
    3. '()' → logprob: -4.4331183433532715
    4. '())' → logprob: -7.3081183433532715
    5. ''' → logprob: -7.6831183433532715
    6. '(
' → logprob: -7.9331183433532715
    7. '"' → logprob: -8.18311882019043
    8. '`' → logprob: -8.43311882019043
    9. '")' → logprob: -8.68311882019043
    10. '```' → logprob: -8.68311882019043

Token 4: '+' (ID: 10)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.9794157147407532
    2. '+' → logprob: -1.2294156551361084
    3. '*' → logprob: -1.8544156551361084
    4. 'if' → logprob: -2.3544156551361084
    5. '#' → logprob: -3.9794156551361084
    6. '
' → logprob: -4.3544158935546875
    7. ')' → logprob: -4.6044158935546875
    8. '>' → logprob: -4.8544158935546875
    9. ' if' → logprob: -5.1044158935546875
    10. '+
' → logprob: -5.2294158935546875

Token 5: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2007010132074356
    2. '10' → logprob: -3.5757009983062744
    3. 'H' → logprob: -3.5757009983062744
    4. '5' → logprob: -3.7007009983062744
    5. '2' → logprob: -3.8257009983062744
    6. '100' → logprob: -4.2007012367248535
    7. '20' → logprob: -4.5757012367248535
    8. ' ' → logprob: -4.9507012367248535
    9. '3' → logprob: -4.9507012367248535
    10. 'int' → logprob: -5.0757012367248535

Token 6: '
' (ID: 198)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7284452319145203
    2. '*' → logprob: -1.853445291519165
    3. '\n' → logprob: -2.478445291519165
    4. '
' → logprob: -2.728445291519165
    5. '```' → logprob: -3.228445291519165
    6. ')' → logprob: -3.228445291519165
    7. '#' → logprob: -3.603445291519165
    8. '\' → logprob: -3.978445291519165
    9. 'if' → logprob: -4.228445053100586
    10. '**' → logprob: -4.478445053100586

Token 7: 'A' (ID: 32)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7808564901351929
    2. '\n' → logprob: -1.6558564901351929
    3. '%' → logprob: -2.6558566093444824
    4. 'for' → logprob: -3.2808566093444824
    5. '```' → logprob: -3.2808566093444824
    6. 'if' → logprob: -3.6558566093444824
    7. '#' → logprob: -3.6558566093444824
    8. ' for' → logprob: -3.6558566093444824
    9. ' if' → logprob: -3.7808566093444824
    10. '*' → logprob: -3.7808566093444824

Token 8: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6606663465499878
    2. '[' → logprob: -1.4106663465499878
    3. 'rr' → logprob: -1.9106663465499878
    4. ' =' → logprob: -3.2856664657592773
    5. 'rray' → logprob: -3.5356664657592773
    6. 'r' → logprob: -5.160666465759277
    7. '=[' → logprob: -5.535666465759277
    8. '[i' → logprob: -5.785666465759277
    9. '[r' → logprob: -6.160666465759277
    10. '*' → logprob: -6.285666465759277

Token 9: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018363216891884804
    2. 'int' → logprob: -4.643362998962402
    3. 'i' → logprob: -5.268362998962402
    4. 'H' → logprob: -7.518362998962402
    5. '1' → logprob: -7.518362998962402
    6. '[' → logprob: -7.518362998962402
    7. ']' → logprob: -7.893362998962402
    8. '[]' → logprob: -8.018362998962402
    9. 'list' → logprob: -8.643362998962402
    10. 'input' → logprob: -8.768362998962402

Token 10: ']+' (ID: 15344)
  Prédit: ']*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.6248455047607422
    2. ']' → logprob: -0.8748455047607422
    3. ']*(' → logprob: -3.624845504760742
    4. ',' → logprob: -3.999845504760742
    5. ' for' → logprob: -5.999845504760742
    6. 'for' → logprob: -8.999845504760742
    7. ' ]' → logprob: -9.374845504760742
    8. ']+' → logprob: -9.749845504760742
    9. ',
' → logprob: -12.999845504760742
    10. '*' → logprob: -13.499845504760742

Token 11: 'list' (ID: 2641)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14894486963748932
    2. 'list' → logprob: -2.398944854736328
    3. '[list' → logprob: -4.023944854736328
    4. '[A' → logprob: -4.148944854736328
    5. '[input' → logprob: -5.273944854736328
    6. '[int' → logprob: -5.523944854736328
    7. '[i' → logprob: -5.648944854736328
    8. '[I' → logprob: -7.898944854736328
    9. ' [' → logprob: -8.523944854736328
    10. '[-' → logprob: -8.898944854736328

Token 12: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005439489148557186
    2. '(input' → logprob: -5.880439281463623
    3. '(range' → logprob: -7.005439281463623
    4. '<|end|>' → logprob: -7.630439281463623
    5. '(int' → logprob: -7.880439281463623
    6. '()' → logprob: -8.505439758300781
    7. '(user' → logprob: -8.755439758300781
    8. '((' → logprob: -9.380439758300781
    9. '(open' → logprob: -10.255439758300781
    10. '(
' → logprob: -10.380439758300781

Token 13: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0006203425000421703
    2. '(' → logprob: -7.500620365142822
    3. '(str' → logprob: -10.375619888305664
    4. '(input' → logprob: -11.000619888305664
    5. 'int' → logprob: -11.750619888305664
    6. '<int' → logprob: -12.250619888305664
    7. '=int' → logprob: -13.250619888305664
    8. '[int' → logprob: -14.000619888305664
    9. '(eval' → logprob: -14.000619888305664
    10. ',int' → logprob: -14.250619888305664

Token 14: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0016958918422460556
    2. '(' → logprob: -6.5016961097717285
    3. ',input' → logprob: -8.75169563293457
    4. 'input' → logprob: -11.25169563293457
    5. ')' → logprob: -11.50169563293457
    6. '(int' → logprob: -12.87669563293457
    7. '(eval' → logprob: -13.12669563293457
    8. ' (' → logprob: -13.50169563293457
    9. '=input' → logprob: -13.75169563293457
    10. '(
' → logprob: -14.12669563293457

Token 15: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.660800039768219
    2. '())' → logprob: -1.2857999801635742
    3. '()))' → logprob: -1.7857999801635742
    4. '().' → logprob: -3.660799980163574
    5. '()));' → logprob: -5.035799980163574
    6. '())))' → logprob: -5.910799980163574
    7. '()>' → logprob: -6.035799980163574
    8. '());' → logprob: -7.785799980163574
    9. '()-' → logprob: -8.035799980163574
    10. ')' → logprob: -8.285799980163574

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.7159857786027715e-05
    2. 'strip' → logprob: -10.125046730041504
    3. ' split' → logprob: -12.125046730041504
    4. 'rstrip' → logprob: -13.750046730041504
    5. '(split' → logprob: -14.750046730041504
    6. 'spl' → logprob: -16.62504768371582
    7. ')' → logprob: -17.00004768371582
    8. 's' → logprob: -19.12504768371582
    9. '.split' → logprob: -19.75004768371582
    10. 'replace' → logprob: -20.00004768371582

Token 17: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.13104476034641266
    2. '())' → logprob: -2.131044864654541
    3. '()' → logprob: -6.006044864654541
    4. '))' → logprob: -7.006044864654541
    5. '())))' → logprob: -8.256044387817383
    6. '(' → logprob: -8.381044387817383
    7. ')' → logprob: -8.631044387817383
    8. '()));' → logprob: -10.881044387817383
    9. '()))
' → logprob: -11.256044387817383
    10. '()),' → logprob: -12.006044387817383

Token 18: 'def' (ID: 1314)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.21506989002227783
    2. 'for' → logprob: -2.0900697708129883
    3. 'd' → logprob: -3.4650697708129883
    4. 'DP' → logprob: -4.715069770812988
    5. 'D' → logprob: -5.215069770812988
    6. 's' → logprob: -5.340069770812988
    7. 'c' → logprob: -5.340069770812988
    8. 'f' → logprob: -5.590069770812988
    9. 'b' → logprob: -6.715069770812988
    10. 'F' → logprob: -6.840069770812988

Token 19: ' h' (ID: 312)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.19180630147457123
    2. ' ' → logprob: -1.8168063163757324
    3. ' dfs' → logprob: -5.816806316375732
    4. ' factorial' → logprob: -6.191806316375732
    5. ' dp' → logprob: -6.316806316375732
    6. ' binary' → logprob: -7.316806316375732
    7. ' solve' → logprob: -7.441806316375732
    8. ' main' → logprob: -7.816806316375732
    9. ' s' → logprob: -7.941806316375732
    10. ' p' → logprob: -8.316805839538574

Token 20: '(i' (ID: 3649)
  Prédit: 'eight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eight' → logprob: -0.6415098309516907
    2. 'e' → logprob: -0.7665098309516907
    3. '(e' → logprob: -5.391510009765625
    4. 'ei' → logprob: -6.766510009765625
    5. 'eat' → logprob: -6.891510009765625
    6. 'eam' → logprob: -7.516510009765625
    7. 'eig' → logprob: -7.891510009765625
    8. 'eil' → logprob: -8.141510009765625
    9. 't' → logprob: -9.141510009765625
    10. 'ean' → logprob: -9.391510009765625

Token 21: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07599388062953949
    2. ')' → logprob: -2.700993776321411
    3. ',' → logprob: -5.32599401473999
    4. '_' → logprob: -7.45099401473999
    5. ' ):' → logprob: -8.325993537902832
    6. 'u' → logprob: -10.325993537902832
    7. 'e' → logprob: -10.450993537902832
    8. '(' → logprob: -10.450993537902832
    9. ' ,' → logprob: -10.575993537902832
    10. ''):' → logprob: -10.700993537902832

Token 22: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11619938164949417
    2. ' if' → logprob: -2.741199493408203
    3. ' ' → logprob: -3.616199493408203
    4. ' return' → logprob: -4.366199493408203
    5. '	return' → logprob: -6.491199493408203
    6. '    ' → logprob: -6.741199493408203
    7. '	if' → logprob: -6.991199493408203
    8. 'if' → logprob: -7.366199493408203
    9. 'return' → logprob: -7.991199493408203
    10. '  ' → logprob: -8.741199493408203

Token 23: '=' (ID: 28)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.985351026058197
    2. 'e' → logprob: -1.3603510856628418
    3. 'en' → logprob: -1.4853510856628418
    4. '=' → logprob: -3.735351085662842
    5. ' i' → logprob: -3.735351085662842
    6. '   ' → logprob: -3.985351085662842
    7. 'ist' → logprob: -4.110351085662842
    8. 'ength' → logprob: -4.860351085662842
    9. ' =' → logprob: -5.110351085662842
    10. '+=' → logprob: -5.610351085662842

Token 24: '2' (ID: 17)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4143417477607727
    2. 'i' → logprob: -1.664341688156128
    3. ' A' → logprob: -3.164341688156128
    4. '0' → logprob: -3.664341688156128
    5. '1' → logprob: -3.914341688156128
    6. ' i' → logprob: -4.164341926574707
    7. 'len' → logprob: -4.664341926574707
    8. '[]' → logprob: -5.164341926574707
    9. '[i' → logprob: -5.539341926574707
    10. 'abs' → logprob: -5.539341926574707

Token 25: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.0700455829501152
    2. '*l' → logprob: -3.1950454711914062
    3. '*' → logprob: -4.445045471191406
    4. ' *' → logprob: -4.695045471191406
    5. '**' → logprob: -5.320045471191406
    6. '*(' → logprob: -8.195045471191406
    7. ' **' → logprob: -8.320045471191406
    8. ' ' → logprob: -9.195045471191406
    9. '*h' → logprob: -9.570045471191406
    10. '0' → logprob: -9.820045471191406

Token 26: ';r' (ID: 129981)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 27: ',g' (ID: 44461)
  Prédit: 'eturn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eturn' → logprob: -0.08224228024482727
    2. 'ange' → logprob: -3.082242250442505
    3. '+' → logprob: -5.207242488861084
    4. 'e' → logprob: -5.207242488861084
    5. '<len' → logprob: -5.707242488861084
    6. '-' → logprob: -6.207242488861084
    7. '=' → logprob: -6.457242488861084
    8. 'ight' → logprob: -6.582242488861084
    9. '<' → logprob: -6.707242488861084
    10. '>' → logprob: -6.832242488861084

Token 28: '=l' (ID: 103670)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0654432475566864
    2. '=A' → logprob: -3.565443277359009
    3. '=l' → logprob: -4.31544303894043
    4. '=h' → logprob: -4.31544303894043
    5. '=i' → logprob: -5.56544303894043
    6. '=g' → logprob: -6.44044303894043
    7. '=r' → logprob: -6.69044303894043
    8. '=f' → logprob: -8.06544303894043
    9. '=a' → logprob: -8.31544303894043
    10. '=j' → logprob: -8.69044303894043

Token 29: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8079574108123779
    2. ',' → logprob: -0.8079574108123779
    3. ',l' → logprob: -3.057957410812378
    4. '-' → logprob: -3.557957410812378
    5. ',r' → logprob: -4.307957649230957
    6. '+l' → logprob: -4.807957649230957
    7. '+r' → logprob: -6.557957649230957
    8. ',g' → logprob: -6.557957649230957
    9. ',f' → logprob: -6.932957649230957
    10. ',+' → logprob: -7.057957649230957

Token 30: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006814588792622089
    2. '0' → logprob: -5.756814479827881
    3. ' ' → logprob: -6.006814479827881
    4. '2' → logprob: -6.881814479827881
    5. '-' → logprob: -9.506814956665039
    6. '+' → logprob: -11.131814956665039
    7. 'l' → logprob: -11.256814956665039
    8. 'A' → logprob: -11.881814956665039
    9. 'h' → logprob: -12.256814956665039
    10. 'r' → logprob: -12.506814956665039

Token 31: ',[' (ID: 35502)
  Prédit: ';'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ';' → logprob: -0.25042515993118286
    2. '<|end|>' → logprob: -2.500425100326538
    3. ',' → logprob: -2.750425100326538
    4. ';if' → logprob: -3.375425100326538
    5. '
' → logprob: -3.750425100326538
    6. ' ' → logprob: -5.625425338745117
    7. ';n' → logprob: -5.625425338745117
    8. ';r' → logprob: -6.500425338745117
    9. ';l' → logprob: -7.000425338745117
    10. '```' → logprob: -7.000425338745117

Token 32: 'i' (ID: 72)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6041841506958008
    2. ']' → logprob: -1.2291841506958008
    3. 'A' → logprob: -2.104184150695801
    4. 'i' → logprob: -4.354184150695801
    5. ' ]' → logprob: -5.104184150695801
    6. 'l' → logprob: -5.104184150695801
    7. '-' → logprob: -5.854184150695801
    8. '1' → logprob: -6.479184150695801
    9. '()]' → logprob: -6.479184150695801
    10. ' A' → logprob: -6.604184150695801

Token 33: ',l' (ID: 45198)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17235814034938812
    2. ',' → logprob: -2.0473580360412598
    3. ',i' → logprob: -4.79735803604126
    4. '+' → logprob: -5.79735803604126
    5. '*' → logprob: -5.92235803604126
    6. '-' → logprob: -5.92235803604126
    7. ' ]' → logprob: -6.29735803604126
    8. ']+' → logprob: -6.42235803604126
    9. ',r' → logprob: -6.54735803604126
    10. ',l' → logprob: -6.67235803604126

Token 34: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.38553252816200256
    2. ',' → logprob: -1.6355324983596802
    3. ',r' → logprob: -2.8855326175689697
    4. '+' → logprob: -3.3855326175689697
    5. ',i' → logprob: -4.385532379150391
    6. ',l' → logprob: -5.385532379150391
    7. ',g' → logprob: -5.635532379150391
    8. 'r' → logprob: -6.635532379150391
    9. ']]' → logprob: -6.635532379150391
    10. '-' → logprob: -6.635532379150391

Token 35: 'l' (ID: 75)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5151597857475281
    2. ' i' → logprob: -1.2651598453521729
    3. 'l' → logprob: -3.265159845352173
    4. 'A' → logprob: -3.890159845352173
    5. ' l' → logprob: -4.140159606933594
    6. ' A' → logprob: -4.515159606933594
    7. 'r' → logprob: -5.015159606933594
    8. '0' → logprob: -5.140159606933594
    9. '>' → logprob: -5.390159606933594
    10. '<' → logprob: -5.765159606933594

Token 36: '<H' (ID: 104212)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.9997475743293762
    2. '>' → logprob: -1.4997475147247314
    3. '<' → logprob: -1.6247475147247314
    4. '>=' → logprob: -1.7497475147247314
    5. '<i' → logprob: -4.7497477531433105
    6. '<len' → logprob: -4.7497477531433105
    7. '==' → logprob: -5.4997477531433105
    8. ' <' → logprob: -5.9997477531433105
    9. '<int' → logprob: -6.1247477531433105
    10. ' <=' → logprob: -6.3747477531433105

Token 37: ' and' (ID: 326)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02320575714111328
    2. ':]' → logprob: -4.273205757141113
    3. ']>' → logprob: -6.273205757141113
    4. ' ]' → logprob: -7.023205757141113
    5. '>]' → logprob: -7.023205757141113
    6. ' and' → logprob: -7.273205757141113
    7. '>' → logprob: -7.398205757141113
    8. '-' → logprob: -7.773205757141113
    9. ':' → logprob: -8.023205757141113
    10. ']<' → logprob: -8.273205757141113

Token 38: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.3527558147907257
    2. 'A' → logprob: -1.2277557849884033
    3. 'r' → logprob: -6.977756023406982
    4. ' r' → logprob: -7.352756023406982
    5. ' not' → logprob: -7.602756023406982
    6. ' ' → logprob: -7.727756023406982
    7. '(A' → logprob: -8.352755546569824
    8. ' (' → logprob: -8.477755546569824
    9. 'g' → logprob: -8.477755546569824
    10. ' g' → logprob: -8.727755546569824

Token 39: '[i' (ID: 1768)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.07371878623962402
    2. '[r' → logprob: -3.573718786239624
    3. '[g' → logprob: -3.573718786239624
    4. '[i' → logprob: -5.198719024658203
    5. 'l' → logprob: -5.323719024658203
    6. '[' → logprob: -6.073719024658203
    7. 'g' → logprob: -6.823719024658203
    8. 'r' → logprob: -7.573719024658203
    9. '>' → logprob: -9.198719024658203
    10. '```' → logprob: -9.823719024658203

Token 40: ']<' (ID: 80424)
  Prédit: ']>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']>=' → logprob: -0.6796691417694092
    2. ']>' → logprob: -1.0546691417694092
    3. ']' → logprob: -2.929669141769409
    4. ']<' → logprob: -3.554669141769409
    5. ']<=' → logprob: -3.554669141769409
    6. '>' → logprob: -5.054669380187988
    7. '">' → logprob: -5.429669380187988
    8. 'r' → logprob: -5.804669380187988
    9. ']==' → logprob: -5.929669380187988
    10. ' ]' → logprob: -6.367169380187988

Token 41: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.009190576151013374
    2. 'l' → logprob: -5.384190559387207
    3. ' A' → logprob: -6.134190559387207
    4. 'r' → logprob: -6.134190559387207
    5. 'g' → logprob: -8.634190559387207
    6. ' l' → logprob: -11.009190559387207
    7. ' ' → logprob: -11.384190559387207
    8. ' r' → logprob: -11.884190559387207
    9. '>' → logprob: -13.384190559387207
    10. '	A' → logprob: -13.509190559387207

Token 42: '[l' (ID: 38286)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.38614192605018616
    2. 'r' → logprob: -2.2611420154571533
    3. 'g' → logprob: -2.5111420154571533
    4. '[l' → logprob: -2.5111420154571533
    5. ']' → logprob: -3.6361420154571533
    6. '[g' → logprob: -4.511141777038574
    7. '[r' → logprob: -4.886141777038574
    8. '[' → logprob: -6.136141777038574
    9. 'i' → logprob: -6.636141777038574
    10. '[i' → logprob: -7.136141777038574

Token 43: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3268539309501648
    2. ']>' → logprob: -1.8268539905548096
    3. ']]' → logprob: -2.8268539905548096
    4. ']<' → logprob: -3.9518539905548096
    5. '],' → logprob: -5.3268537521362305
    6. '>]' → logprob: -5.4518537521362305
    7. 'and' → logprob: -5.5768537521362305
    8. 'r' → logprob: -5.7018537521362305
    9. ' and' → logprob: -5.7018537521362305
    10. '>' → logprob: -5.9518537521362305

Token 44: ' if' (ID: 538)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.35893362760543823
    2. ']>' → logprob: -2.483933687210083
    3. '<|end|>' → logprob: -2.733933687210083
    4. 'r' → logprob: -3.483933687210083
    5. ']<' → logprob: -3.608933687210083
    6. '[' → logprob: -4.358933448791504
    7. '<' → logprob: -4.608933448791504
    8. '])' → logprob: -4.608933448791504
    9. 'g' → logprob: -5.358933448791504
    10. '>' → logprob: -5.358933448791504

Token 45: ' r' (ID: 428)
  Prédit: ' g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -1.021492838859558
    2. 'g' → logprob: -1.396492838859558
    3. ' r' → logprob: -1.646492838859558
    4. ' l' → logprob: -2.5214929580688477
    5. 'r' → logprob: -2.8964929580688477
    6. 'l' → logprob: -3.6464929580688477
    7. ' A' → logprob: -4.021492958068848
    8. ' i' → logprob: -4.646492958068848
    9. 'A' → logprob: -5.021492958068848
    10. 'i' → logprob: -6.396492958068848

Token 46: '<H' (ID: 104212)
  Prédit: '<H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<H' → logprob: -0.0465853288769722
    2. ' <' → logprob: -4.171585559844971
    3. '<' → logprob: -4.296585559844971
    4. '>=' → logprob: -4.796585559844971
    5. '<=' → logprob: -5.546585559844971
    6. '<I' → logprob: -6.546585559844971
    7. '<len' → logprob: -7.046585559844971
    8. '>' → logprob: -7.171585559844971
    9. '<|end|>' → logprob: -8.296585083007812
    10. '==' → logprob: -9.046585083007812

Token 47: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4741199016571045
    2. 'and' → logprob: -0.9741199016571045
    3. ' ' → logprob: -11.224120140075684
    4. '>' → logprob: -11.849120140075684
    5. ' r' → logprob: -11.974120140075684
    6. 'r' → logprob: -12.349120140075684
    7. '[' → logprob: -12.849120140075684
    8. 'g' → logprob: -13.224120140075684
    9. ')' → logprob: -13.599120140075684
    10. '   ' → logprob: -14.349120140075684

Token 48: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4762086570262909
    2. ' A' → logprob: -0.9762086868286133
    3. 'g' → logprob: -7.476208686828613
    4. '(A' → logprob: -7.476208686828613
    5. ' (' → logprob: -8.101208686828613
    6. '[A' → logprob: -8.851208686828613
    7. ' g' → logprob: -9.101208686828613
    8. '((' → logprob: -9.226208686828613
    9. 'r' → logprob: -9.726208686828613
    10. ' ' → logprob: -9.726208686828613

Token 49: '[g' (ID: 80396)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.08843361586332321
    2. '[i' → logprob: -2.5884335041046143
    3. '[g' → logprob: -4.713433742523193
    4. 'r' → logprob: -8.338433265686035
    5. '[' → logprob: -8.963433265686035
    6. 'i' → logprob: -10.338433265686035
    7. 'g' → logprob: -10.588433265686035
    8. '[j' → logprob: -10.963433265686035
    9. '```' → logprob: -11.588433265686035
    10. ' [' → logprob: -11.900933265686035

Token 50: ']<' (ID: 80424)
  Prédit: ']<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']<' → logprob: -0.13143093883991241
    2. ']' → logprob: -3.0064308643341064
    3. '<' → logprob: -3.2564308643341064
    4. ']>' → logprob: -3.5064308643341064
    5. '<i' → logprob: -6.7564311027526855
    6. '[' → logprob: -6.7564311027526855
    7. '>' → logprob: -7.1314311027526855
    8. ' ]' → logprob: -7.5064311027526855
    9. ']<=' → logprob: -8.381430625915527
    10. '[i' → logprob: -8.381430625915527

Token 51: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0012230859138071537
    2. ' A' → logprob: -6.751223087310791
    3. 'r' → logprob: -9.876222610473633
    4. '>A' → logprob: -14.501222610473633
    5. '	A' → logprob: -14.626222610473633
    6. 'a' → logprob: -16.126222610473633
    7. ' r' → logprob: -16.751222610473633
    8. ' ' → logprob: -17.001222610473633
    9. '=A' → logprob: -17.001222610473633
    10. '<|end|>' → logprob: -17.001222610473633

Token 52: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.008662670850753784
    2. 'r' → logprob: -4.758662700653076
    3. ' r' → logprob: -10.758662223815918
    4. '[' → logprob: -11.508662223815918
    5. '[g' → logprob: -12.133662223815918
    6. '	r' → logprob: -12.633662223815918
    7. ' [' → logprob: -12.883662223815918
    8. ' ' → logprob: -14.133662223815918
    9. '[l' → logprob: -14.133662223815918
    10. '(r' → logprob: -14.383662223815918

Token 53: ']:' (ID: 12433)
  Prédit: ']:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.43497538566589355
    2. ':' → logprob: -1.6849753856658936
    3. ' and' → logprob: -2.8099753856658936
    4. '>:' → logprob: -2.8099753856658936
    5. '):' → logprob: -4.059975624084473
    6. ']' → logprob: -4.809975624084473
    7. ' :' → logprob: -5.434975624084473
    8. '>' → logprob: -5.684975624084473
    9. ':g' → logprob: -6.309975624084473
    10. ' ):' → logprob: -6.309975624084473

Token 54: 'g' (ID: 70)
  Prédit: ' g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.25795868039131165
    2. 'g' → logprob: -1.5079586505889893
    3. '	g' → logprob: -6.382958889007568
    4. ' ' → logprob: -6.507958889007568
    5. ' r' → logprob: -6.757958889007568
    6. 'r' → logprob: -6.882958889007568
    7. '<|end|>' → logprob: -8.25795841217041
    8. ' 
' → logprob: -9.25795841217041
    9. ' ' → logprob: -10.13295841217041
    10. ',g' → logprob: -10.13295841217041

Token 55: '=r' (ID: 67845)
  Prédit: '=r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=r' → logprob: -0.002585170092061162
    2. '=' → logprob: -6.752584934234619
    3. 'r' → logprob: -7.252584934234619
    4. ' =' → logprob: -7.377584934234619
    5. ' r' → logprob: -9.502585411071777
    6. '	r' → logprob: -13.377585411071777
    7. ' ' → logprob: -13.877585411071777
    8. '=
' → logprob: -14.377585411071777
    9. '[r' → logprob: -15.002585411071777
    10. '+=' → logprob: -15.002585411071777

Token 56: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5219946503639221
    2. '\n' → logprob: -2.7719945907592773
    3. ' return' → logprob: -2.8969945907592773
    4. ' if' → logprob: -3.0219945907592773
    5. ' \' → logprob: -3.0219945907592773
    6. ' g' → logprob: -3.2719945907592773
    7. ' i' → logprob: -3.5219945907592773
    8. '
' → logprob: -3.8969945907592773
    9. '<|end|>' → logprob: -4.646994590759277
    10. 'return' → logprob: -4.771994590759277

Token 58: ' g' (ID: 329)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.32450881600379944
    2. 'A' → logprob: -1.324508786201477
    3. 'g' → logprob: -4.9495086669921875
    4. ' g' → logprob: -5.5745086669921875
    5. ' ' → logprob: -8.699508666992188
    6. '   ' → logprob: -10.449508666992188
    7. 'r' → logprob: -11.074508666992188
    8. '	A' → logprob: -11.199508666992188
    9. ' not' → logprob: -11.574508666992188
    10. '    ' → logprob: -11.824508666992188

Token 59: '>' (ID: 29)
  Prédit: '<H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<H' → logprob: -0.7000893950462341
    2. ' H' → logprob: -1.325089454650879
    3. 'H' → logprob: -1.825089454650879
    4. ' <' → logprob: -3.700089454650879
    5. '<=' → logprob: -4.325089454650879
    6. '<' → logprob: -4.325089454650879
    7. ' ' → logprob: -4.450089454650879
    8. '<|end|>' → logprob: -5.450089454650879
    9. ' <=' → logprob: -5.700089454650879
    10. ')' → logprob: -7.325089454650879

Token 60: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.44067031145095825
    2. '0' → logprob: -1.1906702518463135
    3. ' i' → logprob: -3.0656702518463135
    4. ' ' → logprob: -5.440670490264893
    5. '1' → logprob: -7.440670490264893
    6. 'H' → logprob: -7.815670490264893
    7. '=' → logprob: -8.440670013427734
    8. 'l' → logprob: -9.815670013427734
    9. '=i' → logprob: -9.940670013427734
    10. ' H' → logprob: -10.315670013427734

Token 61: ':A' (ID: 112571)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.13371844589710236
    2. 'and' → logprob: -2.258718490600586
    3. ' A' → logprob: -4.258718490600586
    4. ' ' → logprob: -6.008718490600586
    5. ',' → logprob: -6.883718490600586
    6. 'A' → logprob: -7.008718490600586
    7. ',A' → logprob: -7.633718490600586
    8. ':' → logprob: -7.758718490600586
    9. '0' → logprob: -8.508718490600586
    10. ' a' → logprob: -8.633718490600586

Token 62: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.05150231346487999
    2. '[' → logprob: -3.676502227783203
    3. '[g' → logprob: -4.051502227783203
    4. '(i' → logprob: -6.176502227783203
    5. ',g' → logprob: -6.301502227783203
    6. '[
' → logprob: -7.301502227783203
    7. ',[' → logprob: -7.551502227783203
    8. ',' → logprob: -7.551502227783203
    9. ',i' → logprob: -7.551502227783203
    10. ',G' → logprob: -8.426502227783203

Token 63: '],' (ID: 2155)
  Prédit: ',A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',A' → logprob: -0.698764443397522
    2. ',' → logprob: -0.823764443397522
    3. '],' → logprob: -2.8237643241882324
    4. '>,' → logprob: -6.448764324188232
    5. '=A' → logprob: -7.573764324188232
    6. ']=' → logprob: -7.573764324188232
    7. '],[' → logprob: -7.823764324188232
    8. ']' → logprob: -8.07376480102539
    9. ',g' → logprob: -8.19876480102539
    10. ' ,' → logprob: -8.32376480102539

Token 64: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0008074867073446512
    2. ' A' → logprob: -7.125807285308838
    3. '<|end|>' → logprob: -12.875807762145996
    4. '	A' → logprob: -14.875807762145996
    5. '>A' → logprob: -17.00080680847168
    6. '=A' → logprob: -17.12580680847168
    7. ' ' → logprob: -17.87580680847168
    8. '  ' → logprob: -18.12580680847168
    9. '   ' → logprob: -18.62580680847168
    10. ',A' → logprob: -18.75080680847168

Token 65: '[g' (ID: 80396)
  Prédit: '[g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[g' → logprob: -0.00536360265687108
    2. '[' → logprob: -6.255363464355469
    3. 'g' → logprob: -6.255363464355469
    4. ',g' → logprob: -7.005363464355469
    5. '<|end|>' → logprob: -7.630363464355469
    6. '[i' → logprob: -10.505363464355469
    7. ' g' → logprob: -10.630363464355469
    8. ',' → logprob: -10.755363464355469
    9. '	g' → logprob: -11.130363464355469
    10. '```' → logprob: -12.130363464355469

Token 66: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.030147191137075424
    2. ']' → logprob: -3.530147075653076
    3. '=' → logprob: -7.905147075653076
    4. '=A' → logprob: -11.905147552490234
    5. ']+=' → logprob: -12.905147552490234
    6. '],' → logprob: -12.905147552490234
    7. ' ]' → logprob: -13.030147552490234
    8. ']={' → logprob: -13.155147552490234
    9. ']=(' → logprob: -13.280147552490234
    10. '"]=' → logprob: -13.405147552490234

Token 67: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.011051236651837826
    2. ' A' → logprob: -4.511051177978516
    3. ' ' → logprob: -13.261051177978516
    4. '	A' → logprob: -13.761051177978516
    5. '>A' → logprob: -15.386051177978516
    6. '<|end|>' → logprob: -16.011051177978516
    7. '   ' → logprob: -16.261051177978516
    8. '  ' → logprob: -16.761051177978516
    9. ',A' → logprob: -17.136051177978516
    10. '0' → logprob: -17.136051177978516

Token 68: '[g' (ID: 80396)
  Prédit: '[g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[g' → logprob: -5.037835580878891e-05
    2. 'g' → logprob: -10.50005054473877
    3. '[i' → logprob: -11.00005054473877
    4. ' g' → logprob: -13.25005054473877
    5. '[' → logprob: -13.62505054473877
    6. ' ' → logprob: -13.87505054473877
    7. '	g' → logprob: -14.75005054473877
    8. '```' → logprob: -14.87505054473877
    9. ',g' → logprob: -15.00005054473877
    10. '(g' → logprob: -15.37505054473877

Token 69: '],' (ID: 2155)
  Prédit: ',A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',A' → logprob: -0.10646726936101913
    2. ',' → logprob: -2.3564672470092773
    3. ' ,' → logprob: -5.106467247009277
    4. ' A' → logprob: -9.481467247009277
    5. 'A' → logprob: -9.481467247009277
    6. ' ' → logprob: -11.356467247009277
    7. ',i' → logprob: -11.731467247009277
    8. '],' → logprob: -12.356467247009277
    9. ',a' → logprob: -12.856467247009277
    10. '],[' → logprob: -14.481467247009277

Token 70: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0003036457928828895
    2. ' A' → logprob: -8.125303268432617
    3. '<|end|>' → logprob: -12.000303268432617
    4. ' ' → logprob: -14.000303268432617
    5. 'i' → logprob: -15.375303268432617
    6. '	A' → logprob: -16.125303268432617
    7. '  ' → logprob: -16.250303268432617
    8. '   ' → logprob: -16.875303268432617
    9. '<|end|>' → logprob: -17.125303268432617
    10. '```' → logprob: -17.500303268432617

Token 71: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00016086915275081992
    2. '[' → logprob: -9.000161170959473
    3. 'i' → logprob: -10.500161170959473
    4. ' i' → logprob: -12.500161170959473
    5. '<|end|>' → logprob: -13.000161170959473
    6. '[I' → logprob: -13.750161170959473
    7. ' [' → logprob: -14.250161170959473
    8. ' ' → logprob: -14.375161170959473
    9. '```' → logprob: -14.500161170959473
    10. '[
' → logprob: -15.500161170959473

Token 72: '];' (ID: 11464)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007682943833060563
    2. '];' → logprob: -8.375768661499023
    3. ' ]' → logprob: -8.625768661499023
    4. ']
' → logprob: -8.625768661499023
    5. '],' → logprob: -9.000768661499023
    6. ']=' → logprob: -10.875768661499023
    7. '[i' → logprob: -12.500768661499023
    8. ']+' → logprob: -12.750768661499023
    9. ' ' → logprob: -12.875768661499023
    10. '[' → logprob: -12.875768661499023

Token 73: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0076198759488761425
    2. ' h' → logprob: -4.882619857788086
    3. '	h' → logprob: -12.382619857788086
    4. ' ' → logprob: -12.632619857788086
    5. '<|end|>' → logprob: -13.507619857788086
    6. '
' → logprob: -13.757619857788086
    7. '```' → logprob: -13.757619857788086
    8. '   ' → logprob: -15.257619857788086
    9. ' 
' → logprob: -15.257619857788086
    10. '
' → logprob: -15.632619857788086

Token 74: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -2.9875325708417222e-05
    2. '(' → logprob: -10.500029563903809
    3. 'g' → logprob: -13.750029563903809
    4. '<|end|>' → logprob: -14.500029563903809
    5. ' (' → logprob: -15.500029563903809
    6. '(
' → logprob: -15.625029563903809
    7. ' g' → logprob: -16.625030517578125
    8. '(gca' → logprob: -17.125030517578125
    9. '(r' → logprob: -17.375030517578125

Token 75: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003948072553612292
    2. ' )' → logprob: -7.875394821166992
    3. '`)' → logprob: -12.500394821166992
    4. ')i' → logprob: -12.625394821166992
    5. ')
' → logprob: -13.250394821166992
    6. ')`' → logprob: -13.375394821166992
    7. 'g' → logprob: -13.875394821166992
    8. '))' → logprob: -14.125394821166992
    9. '(' → logprob: -14.500394821166992
    10. ' ' → logprob: -15.000394821166992

Token 76: 'for' (ID: 1938)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6200230121612549
    2. '<|end|>' → logprob: -1.3700230121612549
    3. ' ' → logprob: -2.620023012161255
    4. '\n' → logprob: -2.745023012161255
    5. 'r' → logprob: -3.620023012161255
    6. '#' → logprob: -4.620022773742676
    7. '
' → logprob: -4.995022773742676
    8. '}' → logprob: -5.370022773742676
    9. '```' → logprob: -5.620022773742676
    10. ' 
' → logprob: -5.745022773742676

Token 77: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03396804630756378
    2. 'i' → logprob: -3.408967971801758
    3. ' _' → logprob: -9.033967971801758
    4. '_' → logprob: -9.408967971801758
    5. ' ' → logprob: -9.533967971801758
    6. '	i' → logprob: -11.533967971801758
    7. ' H' → logprob: -11.908967971801758
    8. ' ' → logprob: -12.158967971801758
    9. '  ' → logprob: -12.533967971801758
    10. '_i' → logprob: -12.783967971801758

Token 78: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04345196485519409
    2. ' range' → logprob: -3.418452024459839
    3. 'in' → logprob: -5.16845178604126
    4. 'range' → logprob: -5.91845178604126
    5. ' ' → logprob: -6.91845178604126
    6. '<|end|>' → logprob: -8.418452262878418
    7. ' reversed' → logprob: -9.043452262878418
    8. ' i' → logprob: -11.168452262878418
    9. ' n' → logprob: -11.793452262878418
    10. '(range' → logprob: -12.418452262878418

Token 79: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5761370658874512
    2. ' range' → logprob: -0.8261370658874512
    3. ' reversed' → logprob: -9.45113754272461
    4. 'H' → logprob: -9.70113754272461
    5. ' H' → logprob: -10.82613754272461
    6. '(range' → logprob: -11.70113754272461
    7. 're' → logprob: -11.70113754272461
    8. ' ' → logprob: -11.70113754272461
    9. 'rang' → logprob: -12.32613754272461
    10. 'r' → logprob: -13.20113754272461

Token 80: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.01210117619484663
    2. '(' → logprob: -4.637101173400879
    3. ' H' → logprob: -7.262101173400879
    4. ' (' → logprob: -7.262101173400879
    5. 'H' → logprob: -7.387101173400879
    6. '((' → logprob: -8.137101173400879
    7. '(
' → logprob: -10.762101173400879
    8. '<|end|>' → logprob: -13.137101173400879
    9. '(len' → logprob: -13.762101173400879
    10. ' ' → logprob: -14.137101173400879

Token 81: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.04614877700805664
    2. '-' → logprob: -3.1711487770080566
    3. '>>' → logprob: -5.921148777008057
    4. ' -' → logprob: -8.421148300170898
    5. ' //' → logprob: -8.421148300170898
    6. ' >>' → logprob: -12.046148300170898
    7. '2' → logprob: -12.171148300170898
    8. ' ' → logprob: -12.421148300170898
    9. '```' → logprob: -12.671148300170898
    10. '1' → logprob: -13.671148300170898

Token 82: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0046210684813559055
    2. ' ' → logprob: -5.3796210289001465
    3. '  ' → logprob: -14.504621505737305
    4. '   ' → logprob: -16.504621505737305
    5. '```' → logprob: -16.629621505737305
    6. '-' → logprob: -17.254621505737305
    7. '۲' → logprob: -17.879621505737305
    8. '23' → logprob: -18.004621505737305
    9. '22' → logprob: -18.004621505737305
    10. '1' → logprob: -18.129621505737305

Token 83: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7307088375091553
    2. '-' → logprob: -1.2307088375091553
    3. ',-' → logprob: -1.8557088375091553
    4. ' -' → logprob: -2.8557088375091553
    5. ' ,' → logprob: -4.605709075927734
    6. ' ,-' → logprob: -6.605709075927734
    7. '0' → logprob: -7.355709075927734
    8. ' ' → logprob: -8.230709075927734
    9. ',i' → logprob: -9.355709075927734
    10. ',H' → logprob: -10.480709075927734

Token 84: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02062235400080681
    2. ' ' → logprob: -3.8956222534179688
    3. '-' → logprob: -9.770622253417969
    4. ' -' → logprob: -11.520622253417969
    5. '1' → logprob: -11.645622253417969
    6. '  ' → logprob: -13.020622253417969
    7. '
' → logprob: -14.145622253417969
    8. '

' → logprob: -14.770622253417969
    9. '   ' → logprob: -14.770622253417969
    10. '  
' → logprob: -15.520622253417969

Token 85: ',-' (ID: 8202)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.31249770522117615
    2. ',-' → logprob: -2.187497615814209
    3. ' -' → logprob: -2.562497615814209
    4. ',' → logprob: -2.687497615814209
    5. '0' → logprob: -5.562497615814209
    6. ' ,-' → logprob: -5.687497615814209
    7. ' ,' → logprob: -6.062497615814209
    8. ' ' → logprob: -6.687497615814209
    9. '-,' → logprob: -10.062498092651367
    10. ',i' → logprob: -10.562498092651367

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001589618914294988
    2. ' ' → logprob: -8.75015926361084
    3. ')' → logprob: -15.50015926361084
    4. '<|end|>' → logprob: -15.62515926361084
    5. '１' → logprob: -17.750158309936523
    6. '۱' → logprob: -18.375158309936523
    7. '```' → logprob: -18.500158309936523
    8. '১' → logprob: -18.750158309936523
    9. '2' → logprob: -18.750158309936523
    10. ')>' → logprob: -18.875158309936523

Token 87: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.24899418652057648
    2. '-' → logprob: -1.87399423122406
    3. ')' → logprob: -2.7489941120147705
    4. '):
' → logprob: -6.87399435043335
    5. ' ):' → logprob: -7.12399435043335
    6. '-)' → logprob: -7.87399435043335
    7. ' -' → logprob: -7.99899435043335
    8. '1' → logprob: -9.373993873596191
    9. ',' → logprob: -9.623993873596191
    10. ' )' → logprob: -9.748993873596191

Token 88: 'h' (ID: 71)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.0336543433368206
    2. 'h' → logprob: -3.4086544513702393
    3. '	h' → logprob: -11.78365421295166
    4. '<|end|>' → logprob: -14.90865421295166
    5. ' ' → logprob: -15.53365421295166
    6. ' 
' → logprob: -15.65865421295166
    7. ' ' → logprob: -16.033655166625977
    8. '   ' → logprob: -16.658655166625977
    9. '<h' → logprob: -17.408655166625977
    10. ',h' → logprob: -17.908655166625977

Token 89: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.3306015716807451e-05
    2. '(' → logprob: -11.25001335144043
    3. ' (' → logprob: -15.37501335144043
    4. '(I' → logprob: -17.62501335144043
    5. 'i' → logprob: -19.12501335144043
    6. '<|end|>' → logprob: -19.50001335144043
    7. '(ii' → logprob: -19.87501335144043
    8. ' i' → logprob: -20.25001335144043
    9. '(
' → logprob: -21.00001335144043
    10. ' ' → logprob: -21.00001335144043

Token 90: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0802738870552275e-05
    2. ')
' → logprob: -12.12501049041748
    3. ' )' → logprob: -12.75001049041748
    4. ')

' → logprob: -14.37501049041748
    5. '())' → logprob: -14.37501049041748
    6. '))' → logprob: -14.75001049041748
    7. '()' → logprob: -15.50001049041748
    8. '`)' → logprob: -16.250011444091797
    9. ')`' → logprob: -16.250011444091797
    10. '<|end|>' → logprob: -16.250011444091797

Token 91: 'print' (ID: 1598)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07235471159219742
    2. 'print' → logprob: -2.697354793548584
    3. ' for' → logprob: -6.447354793548584
    4. 'while' → logprob: -7.822354793548584
    5. 'f' → logprob: -9.447354316711426
    6. '```' → logprob: -9.572354316711426
    7. ';' → logprob: -9.697354316711426
    8. 'p' → logprob: -9.947354316711426
    9. 's' → logprob: -10.322354316711426
    10. 'r' → logprob: -10.822354316711426

Token 92: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5407167673110962
    2. '(A' → logprob: -1.0407167673110962
    3. '(*' → logprob: -2.7907166481018066
    4. '('' → logprob: -6.790716648101807
    5. '(max' → logprob: -7.665716648101807
    6. '(
' → logprob: -8.290717124938965
    7. '((' → logprob: -8.540717124938965
    8. '([' → logprob: -8.915717124938965
    9. '(a' → logprob: -8.915717124938965
    10. '(*(' → logprob: -8.915717124938965

Token 93: ' '+'' (ID: 137356)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2724563479423523
    2. ''' → logprob: -1.897456407546997
    3. ''A' → logprob: -2.897456407546997
    4. '*' → logprob: -4.522456169128418
    5. 'max' → logprob: -4.897456169128418
    6. ' '.' → logprob: -5.897456169128418
    7. '*A' → logprob: -5.897456169128418
    8. ''.' → logprob: -6.272456169128418
    9. ')' → logprob: -6.647456169128418
    10. ' *' → logprob: -6.772456169128418

Token 94: ' '.' (ID: 12662)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5152714848518372
    2. ''.' → logprob: -1.7652714252471924
    3. ' '.' → logprob: -2.0152714252471924
    4. ''\' → logprob: -2.6402714252471924
    5. 'join' → logprob: -4.8902716636657715
    6. '\n' → logprob: -5.2652716636657715
    7. '*' → logprob: -5.3902716636657715
    8. ''A' → logprob: -6.2652716636657715
    9. ''*' → logprob: -6.6402716636657715
    10. 'A' → logprob: -6.7652716636657715

Token 95: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.00014454191841650754
    2. 'j' → logprob: -9.750144958496094
    3. 'jo' → logprob: -10.250144958496094
    4. ' join' → logprob: -10.250144958496094
    5. '```' → logprob: -11.625144958496094
    6. ' ' → logprob: -13.000144958496094
    7. 'print' → logprob: -13.875144958496094
    8. '
' → logprob: -14.500144958496094
    9. '`' → logprob: -15.000144958496094
    10. '``' → logprob: -15.250144958496094

Token 96: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00021855637896806002
    2. '(str' → logprob: -8.750218391418457
    3. '(list' → logprob: -10.625218391418457
    4. '(' → logprob: -11.125218391418457
    5. 'map' → logprob: -11.125218391418457
    6. ' (' → logprob: -12.125218391418457
    7. ' map' → logprob: -14.500218391418457
    8. '([' → logprob: -16.125219345092773
    9. '   ' → logprob: -16.250219345092773
    10. ',map' → logprob: -16.500219345092773

Token 97: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.0024902839213609695
    2. 'str' → logprob: -6.002490520477295
    3. ' str' → logprob: -12.127490043640137
    4. '=str' → logprob: -12.252490043640137
    5. '(' → logprob: -13.377490043640137
    6. ' (' → logprob: -13.627490043640137
    7. '[str' → logprob: -13.752490043640137
    8. '	str' → logprob: -15.752490043640137
    9. ',str' → logprob: -15.752490043640137
    10. ')' → logprob: -16.502490997314453

Token 98: ',A' (ID: 59196)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0005709059187211096
    2. ',A' → logprob: -7.500570774078369
    3. '(' → logprob: -11.750571250915527
    4. ',' → logprob: -12.375571250915527
    5. ' (' → logprob: -12.625571250915527
    6. ',(' → logprob: -13.875571250915527
    7. ')(' → logprob: -14.750571250915527
    8. '((' → logprob: -15.250571250915527
    9. ' A' → logprob: -15.500571250915527
    10. 'A' → logprob: -15.625571250915527

Token 99: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.664371848164592e-05
    2. '))' → logprob: -11.500016212463379
    3. ')))' → logprob: -12.000016212463379
    4. ' [' → logprob: -15.500016212463379
    5. '1' → logprob: -16.125017166137695
    6. ')' → logprob: -17.375017166137695
    7. ')[' → logprob: -17.875017166137695
    8. '))[' → logprob: -18.000017166137695
    9. ' ' → logprob: -18.750017166137695
    10. '[:' → logprob: -19.000017166137695

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.250006675720215
    3. '[' → logprob: -13.875006675720215
    4. 'range' → logprob: -15.500006675720215
    5. '   ' → logprob: -16.0000057220459
    6. '0' → logprob: -16.2500057220459
    7. '
' → logprob: -16.5000057220459
    8. '```' → logprob: -16.7500057220459
    9. '(' → logprob: -17.1250057220459
    10. ')' → logprob: -17.2500057220459

Token 101: ':]' (ID: 67377)
  Prédit: ':]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.044995613396167755
    2. ':' → logprob: -3.1699955463409424
    3. ':H' → logprob: -6.4199957847595215
    4. '])))' → logprob: -8.544995307922363
    5. ' :]' → logprob: -8.919995307922363
    6. ']))' → logprob: -11.169995307922363
    7. ' :' → logprob: -12.419995307922363
    8. '[' → logprob: -12.669995307922363
    9. 'H' → logprob: -12.794995307922363
    10. '(H' → logprob: -12.919995307922363

Token 102: ')))' (ID: 15975)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3150812089443207
    2. ')))' → logprob: -1.315081238746643
    3. ')' → logprob: -6.3150811195373535
    4. '))))' → logprob: -13.065081596374512
    5. ' ))' → logprob: -13.065081596374512
    6. '))
' → logprob: -13.440081596374512
    7. ']))' → logprob: -13.940081596374512
    8. ' ' → logprob: -14.440081596374512
    9. '}))' → logprob: -14.940081596374512
    10. ')))
' → logprob: -15.065081596374512


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 100
Tokens correctement prédits (1ère position, stricte): 43
Tokens correctement prédits (1ère position, avec adaptation): 43
Tokens correctement prédits (top 10): 80
Précision stricte (1ère position): 43.00%
Précision adaptée (1ère position): 43.00%
Précision (top 10): 80.00%
================================================================================
