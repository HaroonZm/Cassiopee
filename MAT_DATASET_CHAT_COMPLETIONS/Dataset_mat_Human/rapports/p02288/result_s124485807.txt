================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
H=int(input())+1
A=[0]+list(map(int,input().split()))
def h(i):
 l=2*i;r,g=l+1,[i,l][l<H and A[i]<A[l]]
 if r<H and A[g]<A[r]:g=r
 if g>i:A[i],A[g]=A[g],A[i];h(g)
for i in range(H//2,0,-1):h(i)
print(' '+' '.join(map(str,A[1:])))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'H' (ID: 39)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())' (ID: 3516)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.063522107899189
    2. ')' → logprob: -3.0635221004486084
    3. '()' → logprob: -4.4385223388671875
    4. '())' → logprob: -7.3135223388671875
    5. ''' → logprob: -7.8135223388671875
    6. '(
' → logprob: -7.9385223388671875
    7. '"' → logprob: -8.313522338867188
    8. '`' → logprob: -8.438522338867188
    9. '")' → logprob: -8.688522338867188
    10. '```' → logprob: -8.688522338867188

Token 4: '+' (ID: 10)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.9791349172592163
    2. '+' → logprob: -1.2291349172592163
    3. '*' → logprob: -1.8541349172592163
    4. 'if' → logprob: -2.354135036468506
    5. '#' → logprob: -3.979135036468506
    6. '
' → logprob: -4.354135036468506
    7. ')' → logprob: -4.604135036468506
    8. '>' → logprob: -4.854135036468506
    9. ' if' → logprob: -5.104135036468506
    10. '+
' → logprob: -5.229135036468506

Token 5: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20145592093467712
    2. '10' → logprob: -3.57645583152771
    3. 'H' → logprob: -3.57645583152771
    4. '5' → logprob: -3.70145583152771
    5. '2' → logprob: -3.82645583152771
    6. '100' → logprob: -4.201456069946289
    7. '20' → logprob: -4.576456069946289
    8. ' ' → logprob: -4.951456069946289
    9. '3' → logprob: -4.951456069946289
    10. 'int' → logprob: -5.076456069946289

Token 6: '
' (ID: 198)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -1.0474814176559448
    2. '\n' → logprob: -1.1724814176559448
    3. '
' → logprob: -2.0474815368652344
    4. '```' → logprob: -3.1724815368652344
    5. '\' → logprob: -3.2974815368652344
    6. '*' → logprob: -3.4224815368652344
    7. ')' → logprob: -4.172481536865234
    8. '#' → logprob: -4.172481536865234
    9. ' ' → logprob: -4.922481536865234
    10. '%
' → logprob: -5.047481536865234

Token 7: 'A' (ID: 32)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7882251739501953
    2. '\n' → logprob: -1.6632251739501953
    3. '%' → logprob: -2.6632251739501953
    4. 'for' → logprob: -3.2882251739501953
    5. '```' → logprob: -3.2882251739501953
    6. '#' → logprob: -3.5382251739501953
    7. 'if' → logprob: -3.5382251739501953
    8. ' for' → logprob: -3.6632251739501953
    9. ' if' → logprob: -3.7882251739501953
    10. '*' → logprob: -3.7882251739501953

Token 8: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4530268609523773
    2. '[' → logprob: -1.3280268907546997
    3. ' =' → logprob: -2.70302677154541
    4. '[i' → logprob: -4.95302677154541
    5. '*' → logprob: -5.82802677154541
    6. '=[' → logprob: -5.95302677154541
    7. 'r' → logprob: -6.45302677154541
    8. ',' → logprob: -6.45302677154541
    9. '[:]' → logprob: -6.70302677154541
    10. '[m' → logprob: -6.82802677154541

Token 9: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018363216891884804
    2. 'int' → logprob: -4.643362998962402
    3. 'i' → logprob: -5.268362998962402
    4. 'H' → logprob: -7.518362998962402
    5. '1' → logprob: -7.518362998962402
    6. '[' → logprob: -7.518362998962402
    7. ']' → logprob: -7.893362998962402
    8. '[]' → logprob: -8.018362998962402
    9. 'list' → logprob: -8.643362998962402
    10. 'input' → logprob: -8.768362998962402

Token 10: ']+' (ID: 15344)
  Prédit: ']*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.6248455047607422
    2. ']' → logprob: -0.8748455047607422
    3. ']*(' → logprob: -3.624845504760742
    4. ',' → logprob: -3.999845504760742
    5. ' for' → logprob: -5.999845504760742
    6. 'for' → logprob: -8.999845504760742
    7. ' ]' → logprob: -9.374845504760742
    8. ']+' → logprob: -9.749845504760742
    9. ',
' → logprob: -12.999845504760742
    10. '*' → logprob: -13.499845504760742

Token 11: 'list' (ID: 2641)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14894486963748932
    2. 'list' → logprob: -2.398944854736328
    3. '[list' → logprob: -4.023944854736328
    4. '[A' → logprob: -4.148944854736328
    5. '[input' → logprob: -5.273944854736328
    6. '[int' → logprob: -5.523944854736328
    7. '[i' → logprob: -5.648944854736328
    8. '[I' → logprob: -7.898944854736328
    9. ' [' → logprob: -8.523944854736328
    10. '[-' → logprob: -8.898944854736328

Token 12: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005439489148557186
    2. '(input' → logprob: -5.880439281463623
    3. '(range' → logprob: -7.005439281463623
    4. '<|end|>' → logprob: -7.630439281463623
    5. '(int' → logprob: -7.880439281463623
    6. '()' → logprob: -8.505439758300781
    7. '(user' → logprob: -8.755439758300781
    8. '((' → logprob: -9.380439758300781
    9. '(open' → logprob: -10.255439758300781
    10. '(
' → logprob: -10.380439758300781

Token 13: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0006203425000421703
    2. '(' → logprob: -7.500620365142822
    3. '(str' → logprob: -10.375619888305664
    4. '(input' → logprob: -11.000619888305664
    5. 'int' → logprob: -11.750619888305664
    6. '<int' → logprob: -12.250619888305664
    7. '=int' → logprob: -13.250619888305664
    8. '[int' → logprob: -14.000619888305664
    9. '(eval' → logprob: -14.000619888305664
    10. ',int' → logprob: -14.250619888305664

Token 14: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00139047356788069
    2. '(' → logprob: -6.75139045715332
    3. ',input' → logprob: -8.62639045715332
    4. ')' → logprob: -11.00139045715332
    5. 'input' → logprob: -11.50139045715332
    6. ' (' → logprob: -12.87639045715332
    7. '(int' → logprob: -12.87639045715332
    8. '(eval' → logprob: -13.12639045715332
    9. '=input' → logprob: -13.37639045715332
    10. ' input' → logprob: -14.12639045715332

Token 15: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6963557600975037
    2. '()' → logprob: -1.0713558197021484
    3. '()))' → logprob: -1.9463558197021484
    4. '().' → logprob: -4.696355819702148
    5. '()));' → logprob: -5.946355819702148
    6. '())))' → logprob: -6.821355819702148
    7. '()>' → logprob: -6.821355819702148
    8. ')' → logprob: -6.946355819702148
    9. '());' → logprob: -7.571355819702148
    10. '()-' → logprob: -8.946355819702148

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.7159857786027715e-05
    2. 'strip' → logprob: -10.125046730041504
    3. ' split' → logprob: -12.125046730041504
    4. 'rstrip' → logprob: -13.750046730041504
    5. '(split' → logprob: -14.750046730041504
    6. 'spl' → logprob: -16.50004768371582
    7. ')' → logprob: -17.00004768371582
    8. 's' → logprob: -19.00004768371582
    9. '.split' → logprob: -19.75004768371582
    10. 'replace' → logprob: -20.00004768371582

Token 17: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.13104486465454102
    2. '())' → logprob: -2.131044864654541
    3. '()' → logprob: -6.006044864654541
    4. '))' → logprob: -7.006044864654541
    5. '())))' → logprob: -8.256044387817383
    6. '(' → logprob: -8.381044387817383
    7. ')' → logprob: -8.631044387817383
    8. '()));' → logprob: -10.881044387817383
    9. '()))
' → logprob: -11.256044387817383
    10. '()),' → logprob: -12.006044387817383

Token 18: 'def' (ID: 1314)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5205849409103394
    2. 'for' → logprob: -1.7705849409103394
    3. 'd' → logprob: -1.8955849409103394
    4. 'f' → logprob: -4.020585060119629
    5. 's' → logprob: -4.145585060119629
    6. 'DP' → logprob: -4.645585060119629
    7. 'D' → logprob: -4.770585060119629
    8. 'c' → logprob: -4.895585060119629
    9. 'b' → logprob: -5.395585060119629
    10. 'F' → logprob: -6.395585060119629

Token 19: ' h' (ID: 312)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.17107582092285156
    2. ' ' → logprob: -1.9210758209228516
    3. ' dfs' → logprob: -5.921075820922852
    4. ' factorial' → logprob: -6.296075820922852
    5. ' dp' → logprob: -6.421075820922852
    6. ' binary' → logprob: -7.421075820922852
    7. ' solve' → logprob: -7.546075820922852
    8. ' main' → logprob: -7.921075820922852
    9. ' s' → logprob: -8.046075820922852
    10. ' p' → logprob: -8.421075820922852

Token 20: '(i' (ID: 3649)
  Prédit: 'eight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eight' → logprob: -0.6415098309516907
    2. 'e' → logprob: -0.7665098309516907
    3. '(e' → logprob: -5.391510009765625
    4. 'ei' → logprob: -6.766510009765625
    5. 'eat' → logprob: -6.891510009765625
    6. 'eam' → logprob: -7.516510009765625
    7. 'eig' → logprob: -7.891510009765625
    8. 'eil' → logprob: -8.141510009765625
    9. 't' → logprob: -9.141510009765625
    10. 'ean' → logprob: -9.391510009765625

Token 21: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07599388062953949
    2. ')' → logprob: -2.700993776321411
    3. ',' → logprob: -5.32599401473999
    4. '_' → logprob: -7.45099401473999
    5. ' ):' → logprob: -8.325993537902832
    6. 'u' → logprob: -10.325993537902832
    7. 'e' → logprob: -10.450993537902832
    8. '(' → logprob: -10.450993537902832
    9. ' ,' → logprob: -10.575993537902832
    10. ''):' → logprob: -10.700993537902832

Token 22: ' l' (ID: 305)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.33684027194976807
    2. ' return' → logprob: -2.2118401527404785
    3. ' ' → logprob: -2.5868401527404785
    4. '   ' → logprob: -2.7118401527404785
    5. 'if' → logprob: -3.8368401527404785
    6. ' A' → logprob: -5.3368401527404785
    7. 'return' → logprob: -5.3368401527404785
    8. ' i' → logprob: -6.4618401527404785
    9. 'A' → logprob: -7.4618401527404785
    10. 'r' → logprob: -8.211840629577637

Token 23: '=' (ID: 28)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9860348701477051
    2. 'e' → logprob: -1.361034870147705
    3. 'en' → logprob: -1.486034870147705
    4. '=' → logprob: -3.736034870147705
    5. ' i' → logprob: -3.736034870147705
    6. '   ' → logprob: -3.861034870147705
    7. 'ist' → logprob: -4.236034870147705
    8. 'ength' → logprob: -4.861034870147705
    9. ' =' → logprob: -5.111034870147705
    10. '+=' → logprob: -5.611034870147705

Token 24: '2' (ID: 17)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4136589765548706
    2. 'i' → logprob: -1.6636589765548706
    3. ' A' → logprob: -3.16365909576416
    4. '0' → logprob: -3.66365909576416
    5. '1' → logprob: -3.91365909576416
    6. ' i' → logprob: -4.16365909576416
    7. 'len' → logprob: -4.66365909576416
    8. '[]' → logprob: -5.28865909576416
    9. '[i' → logprob: -5.53865909576416
    10. 'abs' → logprob: -5.53865909576416

Token 25: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.0700455829501152
    2. '*l' → logprob: -3.1950454711914062
    3. '*' → logprob: -4.445045471191406
    4. ' *' → logprob: -4.695045471191406
    5. '**' → logprob: -5.320045471191406
    6. '*(' → logprob: -8.195045471191406
    7. ' **' → logprob: -8.320045471191406
    8. ' ' → logprob: -9.195045471191406
    9. '*h' → logprob: -9.570045471191406
    10. '0' → logprob: -9.820045471191406

Token 26: ';r' (ID: 129981)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 27: ',g' (ID: 44461)
  Prédit: 'eturn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eturn' → logprob: -0.08224228024482727
    2. 'ange' → logprob: -3.082242250442505
    3. '+' → logprob: -5.207242488861084
    4. 'e' → logprob: -5.207242488861084
    5. '<len' → logprob: -5.707242488861084
    6. '-' → logprob: -6.207242488861084
    7. '=' → logprob: -6.457242488861084
    8. 'ight' → logprob: -6.582242488861084
    9. '<' → logprob: -6.707242488861084
    10. '>' → logprob: -6.832242488861084

Token 28: '=l' (ID: 103670)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06553391367197037
    2. '=A' → logprob: -3.5655338764190674
    3. '=l' → logprob: -4.3155341148376465
    4. '=h' → logprob: -4.3155341148376465
    5. '=i' → logprob: -5.5655341148376465
    6. '=g' → logprob: -6.4405341148376465
    7. '=r' → logprob: -6.6905341148376465
    8. '=f' → logprob: -7.9405341148376465
    9. '=a' → logprob: -8.315533638000488
    10. '=j' → logprob: -8.690533638000488

Token 29: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5530925393104553
    2. ',l' → logprob: -1.1780924797058105
    3. ',r' → logprob: -2.8030924797058105
    4. '+' → logprob: -4.0530924797058105
    5. ',f' → logprob: -5.0530924797058105
    6. ',g' → logprob: -5.1780924797058105
    7. '-' → logprob: -5.1780924797058105
    8. ',h' → logprob: -5.5530924797058105
    9. ',+' → logprob: -5.8030924797058105
    10. ',i' → logprob: -6.0530924797058105

Token 30: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007141928654164076
    2. '0' → logprob: -5.757142066955566
    3. ' ' → logprob: -5.882142066955566
    4. '2' → logprob: -6.882142066955566
    5. '-' → logprob: -9.507142066955566
    6. '+' → logprob: -11.132142066955566
    7. 'l' → logprob: -11.257142066955566
    8. 'A' → logprob: -11.882142066955566
    9. 'h' → logprob: -12.257142066955566
    10. 'r' → logprob: -12.507142066955566

Token 31: ',[' (ID: 35502)
  Prédit: ';'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ';' → logprob: -0.31984078884124756
    2. ',' → logprob: -1.9448407888412476
    3. '<|end|>' → logprob: -2.694840908050537
    4. ';if' → logprob: -3.694840908050537
    5. '
' → logprob: -3.819840908050537
    6. ';r' → logprob: -5.819840908050537
    7. ';n' → logprob: -6.069840908050537
    8. ' ' → logprob: -6.194840908050537
    9. '```' → logprob: -6.944840908050537
    10. ';l' → logprob: -7.069840908050537

Token 32: 'i' (ID: 72)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6041841506958008
    2. ']' → logprob: -1.2291841506958008
    3. 'A' → logprob: -2.104184150695801
    4. 'i' → logprob: -4.354184150695801
    5. ' ]' → logprob: -5.104184150695801
    6. 'l' → logprob: -5.104184150695801
    7. '-' → logprob: -5.854184150695801
    8. '1' → logprob: -6.479184150695801
    9. '()]' → logprob: -6.479184150695801
    10. ' A' → logprob: -6.604184150695801

Token 33: ',l' (ID: 45198)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17235814034938812
    2. ',' → logprob: -2.0473580360412598
    3. ',i' → logprob: -4.79735803604126
    4. '+' → logprob: -5.79735803604126
    5. '*' → logprob: -5.92235803604126
    6. '-' → logprob: -5.92235803604126
    7. ' ]' → logprob: -6.29735803604126
    8. ']+' → logprob: -6.42235803604126
    9. ',r' → logprob: -6.54735803604126
    10. ',l' → logprob: -6.67235803604126

Token 34: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.38553252816200256
    2. ',' → logprob: -1.6355324983596802
    3. ',r' → logprob: -2.8855326175689697
    4. '+' → logprob: -3.3855326175689697
    5. ',i' → logprob: -4.385532379150391
    6. ',l' → logprob: -5.385532379150391
    7. ',g' → logprob: -5.635532379150391
    8. 'r' → logprob: -6.635532379150391
    9. ']]' → logprob: -6.635532379150391
    10. '-' → logprob: -6.635532379150391

Token 35: 'l' (ID: 75)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5151919722557068
    2. ' i' → logprob: -1.2651920318603516
    3. 'l' → logprob: -3.2651920318603516
    4. 'A' → logprob: -3.8901920318603516
    5. ' l' → logprob: -4.140192031860352
    6. ' A' → logprob: -4.515192031860352
    7. 'r' → logprob: -5.015192031860352
    8. '0' → logprob: -5.140192031860352
    9. '>' → logprob: -5.390192031860352
    10. '<' → logprob: -5.765192031860352

Token 36: '<H' (ID: 104212)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -1.0285708904266357
    2. '>' → logprob: -1.4035708904266357
    3. '<' → logprob: -1.6535708904266357
    4. '>=' → logprob: -1.7785708904266357
    5. '<i' → logprob: -4.778571128845215
    6. '<len' → logprob: -4.778571128845215
    7. '==' → logprob: -5.653571128845215
    8. ' <' → logprob: -6.028571128845215
    9. '<int' → logprob: -6.153571128845215
    10. ' <=' → logprob: -6.403571128845215

Token 37: ' and' (ID: 326)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023355770856142044
    2. ':]' → logprob: -4.273355960845947
    3. ']>' → logprob: -6.273355960845947
    4. ' ]' → logprob: -6.898355960845947
    5. '>]' → logprob: -7.023355960845947
    6. ' and' → logprob: -7.273355960845947
    7. '>' → logprob: -7.398355960845947
    8. '-' → logprob: -7.773355960845947
    9. ':' → logprob: -8.023355484008789
    10. ']<' → logprob: -8.273355484008789

Token 38: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.3527558147907257
    2. 'A' → logprob: -1.2277557849884033
    3. 'r' → logprob: -6.977756023406982
    4. ' r' → logprob: -7.352756023406982
    5. ' not' → logprob: -7.602756023406982
    6. ' ' → logprob: -7.727756023406982
    7. '(A' → logprob: -8.352755546569824
    8. ' (' → logprob: -8.477755546569824
    9. 'g' → logprob: -8.477755546569824
    10. ' g' → logprob: -8.727755546569824

Token 39: '[i' (ID: 1768)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.07371878623962402
    2. '[r' → logprob: -3.573718786239624
    3. '[g' → logprob: -3.573718786239624
    4. '[i' → logprob: -5.198719024658203
    5. 'l' → logprob: -5.323719024658203
    6. '[' → logprob: -6.073719024658203
    7. 'g' → logprob: -6.823719024658203
    8. 'r' → logprob: -7.573719024658203
    9. '>' → logprob: -9.198719024658203
    10. '```' → logprob: -9.823719024658203

Token 40: ']<' (ID: 80424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.9940817952156067
    2. ']>' → logprob: -1.369081735610962
    3. ']>=' → logprob: -1.619081735610962
    4. '<' → logprob: -3.369081735610962
    5. '>=' → logprob: -3.619081735610962
    6. ']' → logprob: -3.744081735610962
    7. ']<' → logprob: -4.244081974029541
    8. ']<=' → logprob: -4.244081974029541
    9. '">' → logprob: -4.494081974029541
    10. 'r' → logprob: -4.869081974029541

Token 41: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.009190576151013374
    2. 'l' → logprob: -5.384190559387207
    3. ' A' → logprob: -6.134190559387207
    4. 'r' → logprob: -6.134190559387207
    5. 'g' → logprob: -8.634190559387207
    6. ' l' → logprob: -11.009190559387207
    7. ' ' → logprob: -11.384190559387207
    8. ' r' → logprob: -11.884190559387207
    9. '>' → logprob: -13.384190559387207
    10. '	A' → logprob: -13.509190559387207

Token 42: '[l' (ID: 38286)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3235751688480377
    2. 'r' → logprob: -2.448575258255005
    3. '[l' → logprob: -2.448575258255005
    4. 'g' → logprob: -2.823575258255005
    5. ']' → logprob: -3.948575258255005
    6. '[r' → logprob: -4.573575019836426
    7. '[g' → logprob: -4.698575019836426
    8. '[' → logprob: -6.948575019836426
    9. 'i' → logprob: -7.073575019836426
    10. '[i' → logprob: -7.323575019836426

Token 43: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.36304306983947754
    2. ']>' → logprob: -1.7380430698394775
    3. ']]' → logprob: -2.7380430698394775
    4. ']<' → logprob: -3.8630430698394775
    5. '],' → logprob: -5.238042831420898
    6. '>]' → logprob: -5.363042831420898
    7. 'and' → logprob: -5.488042831420898
    8. 'r' → logprob: -5.613042831420898
    9. ' and' → logprob: -5.613042831420898
    10. '>' → logprob: -5.863042831420898

Token 44: ' if' (ID: 538)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.35893362760543823
    2. ']>' → logprob: -2.483933687210083
    3. '<|end|>' → logprob: -2.733933687210083
    4. 'r' → logprob: -3.483933687210083
    5. ']<' → logprob: -3.608933687210083
    6. '[' → logprob: -4.358933448791504
    7. '<' → logprob: -4.608933448791504
    8. '])' → logprob: -4.608933448791504
    9. 'g' → logprob: -5.358933448791504
    10. '>' → logprob: -5.358933448791504

Token 45: ' r' (ID: 428)
  Prédit: ' g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.9433200359344482
    2. 'g' → logprob: -1.4433200359344482
    3. ' r' → logprob: -1.6933200359344482
    4. ' l' → logprob: -2.5683200359344482
    5. 'r' → logprob: -2.9433200359344482
    6. 'l' → logprob: -3.6933200359344482
    7. ' A' → logprob: -4.068320274353027
    8. ' i' → logprob: -4.693320274353027
    9. 'A' → logprob: -5.068320274353027
    10. 'i' → logprob: -6.443320274353027

Token 46: '<H' (ID: 104212)
  Prédit: '<H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<H' → logprob: -0.04723173752427101
    2. ' <' → logprob: -4.172231674194336
    3. '<' → logprob: -4.297231674194336
    4. '>=' → logprob: -4.797231674194336
    5. '<=' → logprob: -5.422231674194336
    6. '<I' → logprob: -6.547231674194336
    7. '<len' → logprob: -6.922231674194336
    8. '>' → logprob: -7.172231674194336
    9. '<|end|>' → logprob: -8.297231674194336
    10. '==' → logprob: -9.047231674194336

Token 47: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4741199016571045
    2. 'and' → logprob: -0.9741199016571045
    3. ' ' → logprob: -11.224120140075684
    4. '>' → logprob: -11.849120140075684
    5. ' r' → logprob: -11.974120140075684
    6. 'r' → logprob: -12.349120140075684
    7. '[' → logprob: -12.849120140075684
    8. 'g' → logprob: -13.224120140075684
    9. ')' → logprob: -13.599120140075684
    10. '   ' → logprob: -14.349120140075684

Token 48: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4762023091316223
    2. ' A' → logprob: -0.9762023091316223
    3. 'g' → logprob: -7.476202487945557
    4. '(A' → logprob: -7.476202487945557
    5. ' (' → logprob: -8.101202011108398
    6. '[A' → logprob: -8.851202011108398
    7. ' g' → logprob: -9.101202011108398
    8. '((' → logprob: -9.226202011108398
    9. 'r' → logprob: -9.726202011108398
    10. ' ' → logprob: -9.726202011108398

Token 49: '[g' (ID: 80396)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.08843515813350677
    2. '[i' → logprob: -2.588435173034668
    3. '[g' → logprob: -4.713435173034668
    4. 'r' → logprob: -8.338435173034668
    5. '[' → logprob: -8.963435173034668
    6. 'i' → logprob: -10.338435173034668
    7. 'g' → logprob: -10.588435173034668
    8. '[j' → logprob: -10.963435173034668
    9. '```' → logprob: -11.588435173034668
    10. ' [' → logprob: -11.838435173034668

Token 50: ']<' (ID: 80424)
  Prédit: ']<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']<' → logprob: -0.13143093883991241
    2. ']' → logprob: -3.0064308643341064
    3. '<' → logprob: -3.2564308643341064
    4. ']>' → logprob: -3.5064308643341064
    5. '<i' → logprob: -6.7564311027526855
    6. '[' → logprob: -6.7564311027526855
    7. '>' → logprob: -7.1314311027526855
    8. ' ]' → logprob: -7.5064311027526855
    9. ']<=' → logprob: -8.381430625915527
    10. '[i' → logprob: -8.381430625915527

Token 51: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0012230859138071537
    2. ' A' → logprob: -6.751223087310791
    3. 'r' → logprob: -9.876222610473633
    4. '>A' → logprob: -14.501222610473633
    5. '	A' → logprob: -14.626222610473633
    6. 'a' → logprob: -16.126222610473633
    7. ' r' → logprob: -16.751222610473633
    8. ' ' → logprob: -17.001222610473633
    9. '=A' → logprob: -17.001222610473633
    10. '<|end|>' → logprob: -17.001222610473633

Token 52: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.008662670850753784
    2. 'r' → logprob: -4.758662700653076
    3. ' r' → logprob: -10.758662223815918
    4. '[' → logprob: -11.508662223815918
    5. '[g' → logprob: -12.133662223815918
    6. '	r' → logprob: -12.633662223815918
    7. ' [' → logprob: -12.883662223815918
    8. ' ' → logprob: -14.133662223815918
    9. '[l' → logprob: -14.133662223815918
    10. '(r' → logprob: -14.383662223815918

Token 53: ']:' (ID: 12433)
  Prédit: ']:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.7926132678985596
    2. ':' → logprob: -1.1676132678985596
    3. '>:' → logprob: -2.4176132678985596
    4. ' and' → logprob: -2.5426132678985596
    5. '):' → logprob: -3.2926132678985596
    6. ']' → logprob: -4.9176130294799805
    7. 'g' → logprob: -4.9176130294799805
    8. '>' → logprob: -5.4176130294799805
    9. ':g' → logprob: -6.0426130294799805
    10. ' :' → logprob: -6.2926130294799805

Token 54: 'g' (ID: 70)
  Prédit: ' g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.25795868039131165
    2. 'g' → logprob: -1.5079586505889893
    3. '	g' → logprob: -6.382958889007568
    4. ' ' → logprob: -6.507958889007568
    5. ' r' → logprob: -6.757958889007568
    6. 'r' → logprob: -6.882958889007568
    7. '<|end|>' → logprob: -8.25795841217041
    8. ' 
' → logprob: -9.25795841217041
    9. ' ' → logprob: -10.13295841217041
    10. ',g' → logprob: -10.13295841217041

Token 55: '=r' (ID: 67845)
  Prédit: '=r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=r' → logprob: -0.002585408743470907
    2. '=' → logprob: -6.752585411071777
    3. 'r' → logprob: -7.252585411071777
    4. ' =' → logprob: -7.377585411071777
    5. ' r' → logprob: -9.502585411071777
    6. '	r' → logprob: -13.377585411071777
    7. ' ' → logprob: -13.877585411071777
    8. '=
' → logprob: -14.377585411071777
    9. '+=' → logprob: -14.877585411071777
    10. '[r' → logprob: -15.002585411071777

Token 56: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8202606439590454
    2. ' return' → logprob: -1.6952606439590454
    3. '<|end|>' → logprob: -2.445260524749756
    4. ' g' → logprob: -2.570260524749756
    5. ' 
' → logprob: -2.820260524749756
    6. ' ' → logprob: -2.820260524749756
    7. '\n' → logprob: -3.570260524749756
    8. '	return' → logprob: -3.945260524749756
    9. '
' → logprob: -4.820260524749756
    10. 'return' → logprob: -5.070260524749756

Token 57: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1562423706054688
    2. '
' → logprob: -1.7812423706054688
    3. ' return' → logprob: -1.7812423706054688
    4. '\n' → logprob: -2.7812423706054688
    5. ' if' → logprob: -2.9062423706054688
    6. ':return' → logprob: -3.0312423706054688
    7. 'return' → logprob: -3.1562423706054688
    8. '<|end|>' → logprob: -3.4062423706054688
    9. ' g' → logprob: -4.156242370605469
    10. '```' → logprob: -4.656242370605469

Token 58: ' g' (ID: 329)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.8188421726226807
    2. 'A' → logprob: -1.0688421726226807
    3. 'g' → logprob: -1.8188421726226807
    4. ' g' → logprob: -2.9438421726226807
    5. ' ' → logprob: -8.068841934204102
    6. 'r' → logprob: -8.943841934204102
    7. 'H' → logprob: -9.818841934204102
    8. '   ' → logprob: -9.943841934204102
    9. ' r' → logprob: -10.318841934204102
    10. 'a' → logprob: -10.693841934204102

Token 59: '>' (ID: 29)
  Prédit: '<H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<H' → logprob: -0.7000893950462341
    2. ' H' → logprob: -1.325089454650879
    3. 'H' → logprob: -1.825089454650879
    4. ' <' → logprob: -3.700089454650879
    5. '<=' → logprob: -4.325089454650879
    6. '<' → logprob: -4.325089454650879
    7. ' ' → logprob: -4.450089454650879
    8. '<|end|>' → logprob: -5.450089454650879
    9. ' <=' → logprob: -5.700089454650879
    10. ')' → logprob: -7.325089454650879

Token 60: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.44067031145095825
    2. '0' → logprob: -1.1906702518463135
    3. ' i' → logprob: -3.0656702518463135
    4. ' ' → logprob: -5.440670490264893
    5. '1' → logprob: -7.440670490264893
    6. 'H' → logprob: -7.815670490264893
    7. '=' → logprob: -8.440670013427734
    8. 'l' → logprob: -9.815670013427734
    9. '=i' → logprob: -9.940670013427734
    10. ' H' → logprob: -10.315670013427734

Token 61: ':A' (ID: 112571)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.13371844589710236
    2. 'and' → logprob: -2.258718490600586
    3. ' A' → logprob: -4.258718490600586
    4. ' ' → logprob: -6.008718490600586
    5. ',' → logprob: -6.883718490600586
    6. 'A' → logprob: -7.008718490600586
    7. ',A' → logprob: -7.633718490600586
    8. ':' → logprob: -7.758718490600586
    9. '0' → logprob: -8.508718490600586
    10. ' a' → logprob: -8.633718490600586

Token 62: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.05150231346487999
    2. '[' → logprob: -3.676502227783203
    3. '[g' → logprob: -4.051502227783203
    4. '(i' → logprob: -6.176502227783203
    5. ',g' → logprob: -6.301502227783203
    6. '[
' → logprob: -7.301502227783203
    7. ',[' → logprob: -7.551502227783203
    8. ',' → logprob: -7.551502227783203
    9. ',i' → logprob: -7.551502227783203
    10. ',G' → logprob: -8.426502227783203

Token 63: '],' (ID: 2155)
  Prédit: ',A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',A' → logprob: -0.698764443397522
    2. ',' → logprob: -0.823764443397522
    3. '],' → logprob: -2.8237643241882324
    4. '>,' → logprob: -6.448764324188232
    5. '=A' → logprob: -7.573764324188232
    6. ']=' → logprob: -7.573764324188232
    7. '],[' → logprob: -7.823764324188232
    8. ']' → logprob: -8.07376480102539
    9. ',g' → logprob: -8.19876480102539
    10. ' ,' → logprob: -8.32376480102539

Token 64: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0008074867073446512
    2. ' A' → logprob: -7.125807285308838
    3. '<|end|>' → logprob: -12.875807762145996
    4. '	A' → logprob: -14.875807762145996
    5. '>A' → logprob: -17.00080680847168
    6. '=A' → logprob: -17.12580680847168
    7. ' ' → logprob: -17.87580680847168
    8. '  ' → logprob: -18.12580680847168
    9. '   ' → logprob: -18.62580680847168
    10. ',A' → logprob: -18.75080680847168

Token 65: '[g' (ID: 80396)
  Prédit: '[g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[g' → logprob: -0.00536360265687108
    2. '[' → logprob: -6.255363464355469
    3. 'g' → logprob: -6.255363464355469
    4. ',g' → logprob: -7.005363464355469
    5. '<|end|>' → logprob: -7.630363464355469
    6. '[i' → logprob: -10.505363464355469
    7. ' g' → logprob: -10.630363464355469
    8. ',' → logprob: -10.755363464355469
    9. '	g' → logprob: -11.130363464355469
    10. '```' → logprob: -12.130363464355469

Token 66: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.034039948135614395
    2. ']' → logprob: -3.4090399742126465
    3. '=' → logprob: -7.9090399742126465
    4. '=A' → logprob: -12.034039497375488
    5. ']+=' → logprob: -12.909039497375488
    6. '],' → logprob: -12.909039497375488
    7. ' ]' → logprob: -13.034039497375488
    8. ']={' → logprob: -13.159039497375488
    9. ']=(' → logprob: -13.284039497375488
    10. '"]=' → logprob: -13.409039497375488

Token 67: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.011051236651837826
    2. ' A' → logprob: -4.511051177978516
    3. ' ' → logprob: -13.261051177978516
    4. '	A' → logprob: -13.761051177978516
    5. '>A' → logprob: -15.386051177978516
    6. '<|end|>' → logprob: -16.011051177978516
    7. '   ' → logprob: -16.261051177978516
    8. '  ' → logprob: -16.761051177978516
    9. ',A' → logprob: -17.136051177978516
    10. '0' → logprob: -17.136051177978516

Token 68: '[g' (ID: 80396)
  Prédit: '[g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[g' → logprob: -5.037835580878891e-05
    2. 'g' → logprob: -10.50005054473877
    3. '[i' → logprob: -11.00005054473877
    4. ' g' → logprob: -13.25005054473877
    5. '[' → logprob: -13.62505054473877
    6. ' ' → logprob: -13.87505054473877
    7. '	g' → logprob: -14.75005054473877
    8. '```' → logprob: -14.87505054473877
    9. ',g' → logprob: -15.00005054473877
    10. '(g' → logprob: -15.37505054473877

Token 69: '],' (ID: 2155)
  Prédit: ',A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',A' → logprob: -0.10646726936101913
    2. ',' → logprob: -2.3564672470092773
    3. ' ,' → logprob: -5.106467247009277
    4. ' A' → logprob: -9.481467247009277
    5. 'A' → logprob: -9.481467247009277
    6. ' ' → logprob: -11.356467247009277
    7. ',i' → logprob: -11.731467247009277
    8. '],' → logprob: -12.356467247009277
    9. ',a' → logprob: -12.856467247009277
    10. '],[' → logprob: -14.481467247009277

Token 70: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0003036457928828895
    2. ' A' → logprob: -8.125303268432617
    3. '<|end|>' → logprob: -12.000303268432617
    4. ' ' → logprob: -14.000303268432617
    5. 'i' → logprob: -15.375303268432617
    6. '	A' → logprob: -16.125303268432617
    7. '  ' → logprob: -16.250303268432617
    8. '   ' → logprob: -16.875303268432617
    9. '<|end|>' → logprob: -17.125303268432617
    10. '```' → logprob: -17.500303268432617

Token 71: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00016086915275081992
    2. '[' → logprob: -9.000161170959473
    3. 'i' → logprob: -10.500161170959473
    4. ' i' → logprob: -12.500161170959473
    5. '<|end|>' → logprob: -13.000161170959473
    6. '[I' → logprob: -13.750161170959473
    7. ' [' → logprob: -14.250161170959473
    8. ' ' → logprob: -14.375161170959473
    9. '```' → logprob: -14.500161170959473
    10. '[
' → logprob: -15.500161170959473

Token 72: '];' (ID: 11464)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007682943833060563
    2. '];' → logprob: -8.375768661499023
    3. ' ]' → logprob: -8.625768661499023
    4. ']
' → logprob: -8.625768661499023
    5. '],' → logprob: -9.000768661499023
    6. ']=' → logprob: -10.875768661499023
    7. '[i' → logprob: -12.500768661499023
    8. ']+' → logprob: -12.750768661499023
    9. ' ' → logprob: -12.875768661499023
    10. '[' → logprob: -12.875768661499023

Token 73: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0076198759488761425
    2. ' h' → logprob: -4.882619857788086
    3. '	h' → logprob: -12.382619857788086
    4. ' ' → logprob: -12.632619857788086
    5. '<|end|>' → logprob: -13.507619857788086
    6. '
' → logprob: -13.757619857788086
    7. '```' → logprob: -13.757619857788086
    8. '   ' → logprob: -15.257619857788086
    9. ' 
' → logprob: -15.257619857788086
    10. '
' → logprob: -15.632619857788086

Token 74: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -2.975612187583465e-05
    2. '(' → logprob: -10.500029563903809
    3. 'g' → logprob: -13.750029563903809
    4. '<|end|>' → logprob: -14.500029563903809
    5. '(
' → logprob: -15.625029563903809
    6. ' (' → logprob: -15.625029563903809
    7. ' g' → logprob: -16.625030517578125
    8. '(gca' → logprob: -17.125030517578125
    9. '(r' → logprob: -17.375030517578125

Token 75: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003948072553612292
    2. ' )' → logprob: -7.875394821166992
    3. '`)' → logprob: -12.500394821166992
    4. ')i' → logprob: -12.625394821166992
    5. ')
' → logprob: -13.250394821166992
    6. ')`' → logprob: -13.375394821166992
    7. 'g' → logprob: -13.875394821166992
    8. '))' → logprob: -14.125394821166992
    9. '(' → logprob: -14.500394821166992
    10. ' ' → logprob: -15.000394821166992

Token 76: 'for' (ID: 1938)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5744441151618958
    2. ' ' → logprob: -1.949444055557251
    3. '<|end|>' → logprob: -1.949444055557251
    4. '
' → logprob: -3.074444055557251
    5. '\n' → logprob: -3.574444055557251
    6. 'r' → logprob: -3.824444055557251
    7. '#' → logprob: -4.32444429397583
    8. ' 
' → logprob: -4.69944429397583
    9. 'h' → logprob: -5.32444429397583
    10. '}' → logprob: -5.57444429397583

Token 77: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03396804630756378
    2. 'i' → logprob: -3.408967971801758
    3. ' _' → logprob: -9.033967971801758
    4. '_' → logprob: -9.408967971801758
    5. ' ' → logprob: -9.533967971801758
    6. '	i' → logprob: -11.533967971801758
    7. ' H' → logprob: -11.908967971801758
    8. ' ' → logprob: -12.158967971801758
    9. '  ' → logprob: -12.533967971801758
    10. '_i' → logprob: -12.783967971801758

Token 78: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04345196485519409
    2. ' range' → logprob: -3.418452024459839
    3. 'in' → logprob: -5.16845178604126
    4. 'range' → logprob: -5.91845178604126
    5. ' ' → logprob: -6.91845178604126
    6. '<|end|>' → logprob: -8.418452262878418
    7. ' reversed' → logprob: -9.043452262878418
    8. ' i' → logprob: -11.168452262878418
    9. ' n' → logprob: -11.793452262878418
    10. '(range' → logprob: -12.418452262878418

Token 79: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3873794376850128
    2. 'range' → logprob: -1.1373794078826904
    3. 'H' → logprob: -8.13737964630127
    4. ' reversed' → logprob: -9.26237964630127
    5. ' H' → logprob: -9.26237964630127
    6. '(range' → logprob: -11.76237964630127
    7. ' ' → logprob: -12.01237964630127
    8. 're' → logprob: -12.13737964630127
    9. 'rang' → logprob: -13.01237964630127
    10. 'r' → logprob: -13.88737964630127

Token 80: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.014443900436162949
    2. '(' → logprob: -4.764443874359131
    3. ' (' → logprob: -6.139443874359131
    4. ' H' → logprob: -6.264443874359131
    5. 'H' → logprob: -6.514443874359131
    6. '((' → logprob: -8.389444351196289
    7. '(
' → logprob: -10.389444351196289
    8. '<|end|>' → logprob: -12.139444351196289
    9. ' ' → logprob: -13.139444351196289
    10. '(len' → logprob: -13.389444351196289

Token 81: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.037768084555864334
    2. '-' → logprob: -3.4127681255340576
    3. '>>' → logprob: -5.6627678871154785
    4. ' //' → logprob: -7.9127678871154785
    5. ' -' → logprob: -8.287768363952637
    6. ' >>' → logprob: -11.537768363952637
    7. '2' → logprob: -12.287768363952637
    8. ' ' → logprob: -12.662768363952637
    9. '```' → logprob: -12.912768363952637
    10. '1' → logprob: -14.037768363952637

Token 82: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0021860685665160418
    2. ' ' → logprob: -6.127186298370361
    3. '  ' → logprob: -14.377185821533203
    4. '```' → logprob: -16.377185821533203
    5. '   ' → logprob: -16.627185821533203
    6. '-' → logprob: -16.627185821533203
    7. ' -' → logprob: -17.002185821533203
    8. '1' → logprob: -17.127185821533203
    9. '	' → logprob: -18.127185821533203
    10. '23' → logprob: -18.252185821533203

Token 83: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8108134269714355
    2. ',' → logprob: -1.1858134269714355
    3. ',-' → logprob: -1.8108134269714355
    4. ' -' → logprob: -2.5608134269714355
    5. ' ,' → logprob: -4.9358134269714355
    6. ' ,-' → logprob: -6.6858134269714355
    7. '0' → logprob: -7.9358134269714355
    8. ' ' → logprob: -8.185813903808594
    9. ',i' → logprob: -9.935813903808594
    10. '  ' → logprob: -10.685813903808594

Token 84: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001562596415169537
    2. ' ' → logprob: -6.751562595367432
    3. '-' → logprob: -7.876562595367432
    4. ' -' → logprob: -11.50156307220459
    5. '1' → logprob: -13.37656307220459
    6. '  ' → logprob: -14.25156307220459
    7. '   ' → logprob: -15.37656307220459
    8. '

' → logprob: -16.751562118530273
    9. '```' → logprob: -16.751562118530273
    10. '  
' → logprob: -16.876562118530273

Token 85: ',-' (ID: 8202)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.23490619659423828
    2. ' -' → logprob: -2.3599061965942383
    3. ',-' → logprob: -2.6099061965942383
    4. ',' → logprob: -3.3599061965942383
    5. ' ,-' → logprob: -6.109906196594238
    6. ' ,' → logprob: -6.234906196594238
    7. '0' → logprob: -6.484906196594238
    8. ' ' → logprob: -7.109906196594238
    9. '  ' → logprob: -10.734906196594238
    10. '-,' → logprob: -10.859906196594238

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001589618914294988
    2. ' ' → logprob: -8.75015926361084
    3. ')' → logprob: -15.50015926361084
    4. '<|end|>' → logprob: -15.62515926361084
    5. '１' → logprob: -17.750158309936523
    6. '۱' → logprob: -18.375158309936523
    7. '```' → logprob: -18.500158309936523
    8. '১' → logprob: -18.750158309936523
    9. '2' → logprob: -18.750158309936523
    10. ')>' → logprob: -18.875158309936523

Token 87: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16022787988185883
    2. '-' → logprob: -2.4102277755737305
    3. ')' → logprob: -2.9102277755737305
    4. '):
' → logprob: -6.5352277755737305
    5. ' ):' → logprob: -6.6602277755737305
    6. ' -' → logprob: -7.9102277755737305
    7. ',' → logprob: -8.53522777557373
    8. '-)' → logprob: -9.03522777557373
    9. ' )' → logprob: -9.53522777557373
    10. ')>' → logprob: -9.66022777557373

Token 88: 'h' (ID: 71)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.0336543433368206
    2. 'h' → logprob: -3.4086544513702393
    3. '	h' → logprob: -11.78365421295166
    4. '<|end|>' → logprob: -14.90865421295166
    5. ' ' → logprob: -15.53365421295166
    6. ' 
' → logprob: -15.65865421295166
    7. ' ' → logprob: -16.033655166625977
    8. '   ' → logprob: -16.658655166625977
    9. '<h' → logprob: -17.408655166625977
    10. ',h' → logprob: -17.908655166625977

Token 89: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.3306015716807451e-05
    2. '(' → logprob: -11.25001335144043
    3. ' (' → logprob: -15.37501335144043
    4. '(I' → logprob: -17.62501335144043
    5. 'i' → logprob: -19.12501335144043
    6. '<|end|>' → logprob: -19.50001335144043
    7. '(ii' → logprob: -19.87501335144043
    8. ' i' → logprob: -20.25001335144043
    9. '(
' → logprob: -21.00001335144043
    10. ' ' → logprob: -21.00001335144043

Token 90: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.65707261255011e-06
    2. ')
' → logprob: -12.375008583068848
    3. ' )' → logprob: -12.875008583068848
    4. '))' → logprob: -14.375008583068848
    5. ')**' → logprob: -15.500008583068848
    6. '`)' → logprob: -15.500008583068848
    7. ')`' → logprob: -15.875008583068848
    8. ')

' → logprob: -15.875008583068848
    9. '<|end|>' → logprob: -16.125009536743164
    10. ')#' → logprob: -16.250009536743164

Token 91: 'print' (ID: 1598)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33400392532348633
    2. 'print' → logprob: -1.3340039253234863
    3. ' for' → logprob: -4.084003925323486
    4. ' print' → logprob: -7.084003925323486
    5. '```' → logprob: -7.084003925323486
    6. '\n' → logprob: -7.459003925323486
    7. 's' → logprob: -8.334003448486328
    8. 'while' → logprob: -8.584003448486328
    9. '
' → logprob: -8.709003448486328
    10. ';' → logprob: -8.959003448486328

Token 92: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6743117570877075
    2. '(A' → logprob: -0.7993117570877075
    3. '(*' → logprob: -3.299311637878418
    4. '('' → logprob: -6.424311637878418
    5. '(max' → logprob: -7.299311637878418
    6. '((' → logprob: -8.299311637878418
    7. '(
' → logprob: -8.424311637878418
    8. '()' → logprob: -8.674311637878418
    9. '(a' → logprob: -8.674311637878418
    10. '(sorted' → logprob: -8.674311637878418

Token 93: ' '+'' (ID: 137356)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.20182493329048157
    2. ''' → logprob: -1.9518249034881592
    3. ''A' → logprob: -4.076825141906738
    4. ' '.' → logprob: -4.326825141906738
    5. ''.' → logprob: -5.951825141906738
    6. ' ' → logprob: -6.076825141906738
    7. 'max' → logprob: -6.201825141906738
    8. '*' → logprob: -7.201825141906738
    9. ''\' → logprob: -7.451825141906738
    10. 'a' → logprob: -7.451825141906738

Token 94: ' '.' (ID: 12662)
  Prédit: ' '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '.' → logprob: -0.6716282367706299
    2. ''' → logprob: -1.1716282367706299
    3. ''.' → logprob: -2.04662823677063
    4. ''\' → logprob: -3.67162823677063
    5. 'join' → logprob: -4.921627998352051
    6. '\n' → logprob: -5.296627998352051
    7. '*' → logprob: -5.671627998352051
    8. ' ' → logprob: -6.171627998352051
    9. '\' → logprob: -6.796627998352051
    10. '.' → logprob: -7.046627998352051

Token 95: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.00016957100888248533
    2. 'j' → logprob: -9.75016975402832
    3. ' join' → logprob: -9.75016975402832
    4. 'jo' → logprob: -10.00016975402832
    5. '```' → logprob: -12.87516975402832
    6. ' ' → logprob: -13.50016975402832
    7. 'print' → logprob: -13.87516975402832
    8. ''' → logprob: -15.25016975402832
    9. 'format' → logprob: -15.37516975402832
    10. 'strip' → logprob: -15.50016975402832

Token 96: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00028731857310049236
    2. '(str' → logprob: -8.500287055969238
    3. '(list' → logprob: -10.500287055969238
    4. '(' → logprob: -10.750287055969238
    5. 'map' → logprob: -11.000287055969238
    6. ' (' → logprob: -11.000287055969238
    7. ' map' → logprob: -14.125287055969238
    8. '   ' → logprob: -15.375287055969238
    9. '([' → logprob: -16.000288009643555
    10. ',map' → logprob: -16.125288009643555

Token 97: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.0005697138840332627
    2. 'str' → logprob: -7.500569820404053
    3. '(' → logprob: -12.000569343566895
    4. ' str' → logprob: -12.500569343566895
    5. '=str' → logprob: -12.750569343566895
    6. ' (' → logprob: -13.000569343566895
    7. '[str' → logprob: -13.625569343566895
    8. '	str' → logprob: -16.25057029724121
    9. '(
' → logprob: -16.37557029724121
    10. ',str' → logprob: -16.37557029724121

Token 98: ',A' (ID: 59196)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.009997246786952019
    2. ',A' → logprob: -4.634997367858887
    3. '(' → logprob: -9.134997367858887
    4. ',' → logprob: -9.509997367858887
    5. ' (' → logprob: -10.759997367858887
    6. ',(' → logprob: -10.884997367858887
    7. ' ,' → logprob: -11.509997367858887
    8. '(
' → logprob: -12.509997367858887
    9. '((' → logprob: -13.759997367858887
    10. '([' → logprob: -13.884997367858887

Token 99: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.127333340875339e-06
    2. '))' → logprob: -13.000003814697266
    3. ')))' → logprob: -13.375003814697266
    4. '1' → logprob: -16.375003814697266
    5. ' [' → logprob: -16.625003814697266
    6. ')' → logprob: -18.000003814697266
    7. ')[' → logprob: -18.125003814697266
    8. '))[' → logprob: -18.750003814697266
    9. ' ' → logprob: -19.250003814697266
    10. '[
' → logprob: -19.750003814697266

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.491498531133402e-06
    2. ' ' → logprob: -11.750009536743164
    3. 'range' → logprob: -13.875009536743164
    4. '[' → logprob: -15.750009536743164
    5. '   ' → logprob: -16.000009536743164
    6. '
' → logprob: -16.000009536743164
    7. '```' → logprob: -16.875009536743164
    8. '0' → logprob: -16.875009536743164
    9. ' range' → logprob: -17.375009536743164
    10. '(' → logprob: -17.500009536743164

Token 101: ':]' (ID: 67377)
  Prédit: ':]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.1651454120874405
    2. ':' → logprob: -1.9151453971862793
    3. ':H' → logprob: -5.415145397186279
    4. '])))' → logprob: -8.415145874023438
    5. ' :]' → logprob: -8.915145874023438
    6. ']))' → logprob: -10.040145874023438
    7. ' :' → logprob: -10.915145874023438
    8. 'H' → logprob: -11.790145874023438
    9. '(H' → logprob: -11.915145874023438
    10. '[' → logprob: -12.665145874023438

Token 102: ')))' (ID: 15975)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3150812089443207
    2. ')))' → logprob: -1.315081238746643
    3. ')' → logprob: -6.3150811195373535
    4. '))))' → logprob: -13.065081596374512
    5. ' ))' → logprob: -13.065081596374512
    6. '))
' → logprob: -13.440081596374512
    7. ']))' → logprob: -13.940081596374512
    8. ' ' → logprob: -14.440081596374512
    9. '}))' → logprob: -14.940081596374512
    10. ')))
' → logprob: -15.065081596374512


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 100
Tokens correctement prédits (1ère position, stricte): 44
Tokens correctement prédits (1ère position, avec adaptation): 44
Tokens correctement prédits (top 10): 81
Précision stricte (1ère position): 44.00%
Précision adaptée (1ère position): 44.00%
Précision (top 10): 81.00%
================================================================================
