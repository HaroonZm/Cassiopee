================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def maxHeapify(A, i):
    l = 2 * i
    r = 2 * i  + 1

    if l <= H and A[l] > A[i]:
        largest = l
    else:
        largest = i

    if r <= H and A[r] > A[largest]:
        largest = r

    if largest != i:
        A[i], A[largest] = A[largest], A[i]
        maxHeapify(A, largest)

def buildMaxHeap(A):
    for i in range(H//2, 0, -1):
        maxHeapify(A, i)

H = int(input())
A = [0] + list(map(int,input().split()))
buildMaxHeap(A)
A.pop(0)
print(" " + " ".join([str(num) for num in A]))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' max' (ID: 2999)
  → Token d'amorce (pas de prédiction)

Token 2: 'Heap' (ID: 39287)
  → Token d'amorce (pas de prédiction)

Token 3: 'ify' (ID: 1985)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -8.125210297293961e-05
    2. '(
' → logprob: -11.000081062316895
    3. '```' → logprob: -11.000081062316895
    4. ':' → logprob: -11.750081062316895
    5. '(:' → logprob: -11.750081062316895
    6. ')' → logprob: -11.875081062316895
    7. ' (' → logprob: -12.250081062316895
    8. '():' → logprob: -12.375081062316895
    9. '_' → logprob: -13.250081062316895
    10. '((' → logprob: -13.375081062316895

Token 4: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00016754455282352865
    2. '(heap' → logprob: -9.750167846679688
    3. '(node' → logprob: -11.000167846679688
    4. '(tree' → logprob: -11.000167846679688
    5. '(root' → logprob: -11.125167846679688
    6. '```' → logprob: -11.375167846679688
    7. '(parent' → logprob: -11.625167846679688
    8. ' (' → logprob: -11.875167846679688
    9. '(self' → logprob: -12.250167846679688
    10. ':' → logprob: -12.375167846679688

Token 5: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.305140882730484
    2. '[' → logprob: -1.4301408529281616
    3. '[A' → logprob: -4.305140972137451
    4. ',A' → logprob: -5.555140972137451
    5. '):' → logprob: -5.805140972137451
    6. ')' → logprob: -6.055140972137451
    7. '[
' → logprob: -8.180140495300293
    8. '```' → logprob: -9.055140495300293
    9. '(A' → logprob: -9.555140495300293
    10. '[i' → logprob: -9.555140495300293

Token 6: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.09245924651622772
    2. 'i' → logprob: -3.092459201812744
    3. ' n' → logprob: -3.217459201812744
    4. 'n' → logprob: -6.967459201812744
    5. ' heap' → logprob: -7.342459201812744
    6. ' A' → logprob: -7.592459201812744
    7. ' index' → logprob: -8.342459678649902
    8. ' ' → logprob: -8.717459678649902
    9. '```' → logprob: -9.967459678649902
    10. 'A' → logprob: -9.967459678649902

Token 7: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2265320122241974
    2. ',' → logprob: -1.601531982421875
    3. ')' → logprob: -6.976531982421875
    4. ':' → logprob: -9.351531982421875
    5. '   ' → logprob: -10.726531982421875
    6. ''):' → logprob: -11.476531982421875
    7. ' ):' → logprob: -11.601531982421875
    8. '):
' → logprob: -11.601531982421875
    9. '```' → logprob: -11.726531982421875
    10. ',b' → logprob: -11.851531982421875

Token 8: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11735625565052032
    2. ':' → logprob: -2.242356300354004
    3. '```' → logprob: -5.992356300354004
    4. '():' → logprob: -6.992356300354004
    5. '):' → logprob: -8.492356300354004
    6. '       ' → logprob: -8.992356300354004
    7. ':\' → logprob: -9.367356300354004
    8. ' :' → logprob: -9.367356300354004
    9. '    
' → logprob: -9.617356300354004
    10. '\' → logprob: -9.617356300354004

Token 9: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04027143493294716
    2. ':' → logprob: -3.540271520614624
    3. '```' → logprob: -5.540271282196045
    4. ' :' → logprob: -6.290271282196045
    5. '    ' → logprob: -6.790271282196045
    6. ''' → logprob: -7.290271282196045
    7. ' ' → logprob: -7.415271282196045
    8. '(' → logprob: -7.790271282196045
    9. ' if' → logprob: -7.915271282196045
    10. '       ' → logprob: -8.290271759033203

Token 10: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5874312520027161
    2. ' =' → logprob: -0.8374312520027161
    3. 'f' → logprob: -4.83743143081665
    4. ',' → logprob: -6.96243143081665
    5. 'eft' → logprob: -7.08743143081665
    6. '[' → logprob: -7.21243143081665
    7. 'ef' → logprob: -8.587430953979492
    8. 'e' → logprob: -8.712430953979492
    9. '   ' → logprob: -8.712430953979492
    10. ' ' → logprob: -9.337430953979492

Token 11: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2519691288471222
    2. ' ' → logprob: -1.5019690990447998
    3. '1' → logprob: -11.126969337463379
    4. 'i' → logprob: -11.501969337463379
    5. ' i' → logprob: -11.876969337463379
    6. '   ' → logprob: -13.126969337463379
    7. ' A' → logprob: -13.751969337463379
    8. ' ' → logprob: -13.876969337463379
    9. '`' → logprob: -14.501969337463379
    10. '  ' → logprob: -14.626969337463379

Token 12: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009211080614477396
    2. ' ' → logprob: -7.000921249389648
    3. 'i' → logprob: -11.875921249389648
    4. '1' → logprob: -14.000921249389648
    5. '`' → logprob: -14.375921249389648
    6. '(' → logprob: -14.625921249389648
    7. 'A' → logprob: -15.500921249389648
    8. '   ' → logprob: -16.12592124938965
    9. '```' → logprob: -16.62592124938965
    10. ' i' → logprob: -16.87592124938965

Token 13: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.9060994982719421
    2. '*i' → logprob: -0.9060994982719421
    3. '*' → logprob: -1.656099557876587
    4. '*l' → logprob: -7.781099319458008
    5. ' ' → logprob: -8.156099319458008
    6. 'i' → logprob: -8.656099319458008
    7. '*(' → logprob: -11.031099319458008
    8. '*j' → logprob: -11.656099319458008
    9. ' ' → logprob: -11.781099319458008
    10. ' i' → logprob: -12.406099319458008

Token 14: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07890928536653519
    2. ' i' → logprob: -2.578909397125244
    3. ' ' → logprob: -10.953908920288086
    4. '	i' → logprob: -13.578908920288086
    5. ' ' → logprob: -14.703908920288086
    6. '   ' → logprob: -16.203908920288086
    7. '  ' → logprob: -16.328908920288086
    8. '```' → logprob: -16.703908920288086
    9. '_i' → logprob: -16.953908920288086
    10. '`' → logprob: -18.203908920288086

Token 15: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7184144854545593
    2. ' +' → logprob: -1.093414545059204
    3. ' ' → logprob: -1.843414545059204
    4. '<|end|>' → logprob: -4.343414306640625
    5. '    ' → logprob: -6.093414306640625
    6. '```' → logprob: -6.593414306640625
    7. '  ' → logprob: -6.718414306640625
    8. '     ' → logprob: -8.218414306640625
    9. '<|end|>' → logprob: -8.468414306640625
    10. '   ' → logprob: -8.718414306640625

Token 16: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1609946489334106
    2. ' +' → logprob: -1.2859946489334106
    3. '<|end|>' → logprob: -1.6609946489334106
    4. ' ' → logprob: -1.9109946489334106
    5. '   ' → logprob: -3.660994529724121
    6. '    ' → logprob: -3.785994529724121
    7. '  ' → logprob: -4.410994529724121
    8. '```' → logprob: -5.535994529724121
    9. ')' → logprob: -6.035994529724121
    10. '<|end|>' → logprob: -6.160994529724121

Token 17: ' r' (ID: 428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9828062653541565
    2. '+' → logprob: -1.4828062057495117
    3. '<|end|>' → logprob: -1.4828062057495117
    4. ' +' → logprob: -2.7328062057495117
    5. '```' → logprob: -2.9828062057495117
    6. '    ' → logprob: -4.482806205749512
    7. '  ' → logprob: -4.607806205749512
    8. '   ' → logprob: -5.107806205749512
    9. ',' → logprob: -5.357806205749512
    10. 'def' → logprob: -5.357806205749512

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00020568605395965278
    2. '=' → logprob: -8.500205993652344
    3. ' ' → logprob: -13.125205993652344
    4. ')' → logprob: -16.625205993652344
    5. '   ' → logprob: -17.500205993652344
    6. '```' → logprob: -17.750205993652344
    7. '  ' → logprob: -18.000205993652344
    8. ' =
' → logprob: -18.125205993652344
    9. '    ' → logprob: -18.375205993652344
    10. ' ==' → logprob: -18.500205993652344

Token 19: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16038599610328674
    2. '2' → logprob: -1.9103859663009644
    3. '    ' → logprob: -9.660386085510254
    4. '   ' → logprob: -9.910386085510254
    5. ' (' → logprob: -11.160386085510254
    6. '3' → logprob: -12.160386085510254
    7. '`' → logprob: -12.160386085510254
    8. '"' → logprob: -12.660386085510254
    9. '  ' → logprob: -12.660386085510254
    10. ''' → logprob: -13.160386085510254

Token 20: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004638741724193096
    2. ' ' → logprob: -5.379638671875
    3. '(' → logprob: -11.129638671875
    4. '   ' → logprob: -13.254638671875
    5. ' (' → logprob: -13.504638671875
    6. '  ' → logprob: -14.879638671875
    7. 'i' → logprob: -15.629638671875
    8. '    ' → logprob: -15.754638671875
    9. 'l' → logprob: -17.004638671875
    10. '`' → logprob: -17.129638671875

Token 21: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5793430209159851
    2. '*' → logprob: -0.8293430209159851
    3. ' ' → logprob: -6.079342842102051
    4. '*i' → logprob: -7.454342842102051
    5. '   ' → logprob: -8.32934284210205
    6. 'i' → logprob: -9.45434284210205
    7. ' ' → logprob: -9.57934284210205
    8. '    ' → logprob: -10.45434284210205
    9. '```' → logprob: -10.70434284210205
    10. '1' → logprob: -10.82934284210205

Token 22: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00219557574018836
    2. ' i' → logprob: -6.127195358276367
    3. ' ' → logprob: -12.002195358276367
    4. '*i' → logprob: -13.377195358276367
    5. '   ' → logprob: -13.752195358276367
    6. '```' → logprob: -14.627195358276367
    7. '  ' → logprob: -15.252195358276367
    8. '+' → logprob: -15.377195358276367
    9. '`' → logprob: -15.502195358276367
    10. '_i' → logprob: -15.877195358276367

Token 23: ' ' (ID: 220)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4741095006465912
    2. ' +' → logprob: -0.9741095304489136
    3. ' plus' → logprob: -11.474109649658203
    4. '+r' → logprob: -12.349109649658203
    5. '```' → logprob: -12.599109649658203
    6. ' ' → logprob: -12.599109649658203
    7. '   ' → logprob: -12.849109649658203
    8. '1' → logprob: -13.224109649658203
    9. 'plus' → logprob: -13.599109649658203
    10. '  ' → logprob: -14.099109649658203

Token 24: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3484496474266052
    2. ' +' → logprob: -1.22344970703125
    3. ' plus' → logprob: -13.47344970703125
    4. ' ' → logprob: -14.09844970703125
    5. '   ' → logprob: -14.34844970703125
    6. '1' → logprob: -14.84844970703125
    7. '```' → logprob: -14.84844970703125
    8. '+r' → logprob: -14.97344970703125
    9. '+
' → logprob: -15.47344970703125
    10. ' +
' → logprob: -15.59844970703125

Token 25: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07889066636562347
    2. ' ' → logprob: -2.578890562057495
    3. '  ' → logprob: -14.828890800476074
    4. '+' → logprob: -15.578890800476074
    5. '   ' → logprob: -15.703890800476074
    6. '2' → logprob: -16.453889846801758
    7. '```' → logprob: -17.578889846801758
    8. ' ' → logprob: -17.828889846801758
    9. '<|end|>' → logprob: -18.391389846801758
    10. ' +' → logprob: -18.516389846801758

Token 26: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '   ' → logprob: -17.50020408630371
    4. '  ' → logprob: -17.62520408630371
    5. '2' → logprob: -17.87520408630371
    6. '+' → logprob: -18.12520408630371
    7. '```' → logprob: -18.62520408630371
    8. '۱' → logprob: -20.06270408630371
    9. '１' → logprob: -20.37520408630371
    10. ' ' → logprob: -20.75020408630371

Token 27: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4717874825000763
    2. 'n' → logprob: -1.471787452697754
    3. 'if' → logprob: -2.346787452697754
    4. ' if' → logprob: -4.096787452697754
    5. '<|end|>' → logprob: -4.846787452697754
    6. '
' → logprob: -5.471787452697754
    7. '  ' → logprob: -5.596787452697754
    8. '    
' → logprob: -5.596787452697754
    9. ' ' → logprob: -5.721787452697754
    10. '```' → logprob: -6.096787452697754

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10131508857011795
    2. 'if' → logprob: -2.8513150215148926
    3. ' if' → logprob: -3.9763150215148926
    4. 'n' → logprob: -4.851315021514893
    5. 'largest' → logprob: -5.851315021514893
    6. '    
' → logprob: -5.976315021514893
    7. 's' → logprob: -6.476315021514893
    8. '
' → logprob: -7.101315021514893
    9. '  ' → logprob: -7.101315021514893
    10. ',' → logprob: -7.226315021514893

Token 29: ' if' (ID: 538)
  Prédit: 'largest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'largest' → logprob: -0.5784550309181213
    2. '   ' → logprob: -1.5784549713134766
    3. 'if' (adapté à ' if') → logprob: -1.9534549713134766
    4. 'n' → logprob: -2.9534549713134766
    5. ' if' → logprob: -3.8284549713134766
    6. 's' → logprob: -4.453454971313477
    7. 'heap' → logprob: -7.453454971313477
    8. '=' → logprob: -7.578454971313477
    9. 'size' → logprob: -7.703454971313477
    10. ',' → logprob: -7.828454971313477

Token 30: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.005499599035829306
    2. 'l' → logprob: -5.255499362945557
    3. ' A' → logprob: -9.255499839782715
    4. ' r' → logprob: -9.630499839782715
    5. '	l' → logprob: -10.255499839782715
    6. ' ' → logprob: -10.630499839782715
    7. 'A' → logprob: -11.130499839782715
    8. 'r' → logprob: -11.630499839782715
    9. ' len' → logprob: -12.255499839782715
    10. '  ' → logprob: -12.630499839782715

Token 31: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3682105243206024
    2. ' <' → logprob: -1.2432105541229248
    3. '<' → logprob: -4.493210315704346
    4. '<=' → logprob: -5.118210315704346
    5. '<|end|>' → logprob: -6.743210315704346
    6. ' ' → logprob: -7.368210315704346
    7. ' >=' → logprob: -7.993210315704346
    8. '  ' → logprob: -9.618210792541504
    9. ' >' → logprob: -9.868210792541504
    10. '   ' → logprob: -9.993210792541504

Token 32: ' H' (ID: 487)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.3489653468132019
    2. 'len' → logprob: -1.2239654064178467
    3. ' ' → logprob: -8.598965644836426
    4. '(len' → logprob: -9.098965644836426
    5. '<|end|>' → logprob: -9.348965644836426
    6. '	len' → logprob: -9.598965644836426
    7. ' A' → logprob: -10.973965644836426
    8. 'A' → logprob: -10.973965644836426
    9. '<len' → logprob: -11.598965644836426
    10. '=len' → logprob: -11.848965644836426

Token 33: ' and' (ID: 326)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.05082316696643829
    2. '_' → logprob: -4.550823211669922
    3. '   ' → logprob: -4.550823211669922
    4. '_size' → logprob: -4.675823211669922
    5. 'and' → logprob: -5.675823211669922
    6. 'size' → logprob: -5.800823211669922
    7. '  ' → logprob: -5.800823211669922
    8. 'length' → logprob: -6.800823211669922
    9. '[' → logprob: -6.925823211669922
    10. 'i' → logprob: -7.050823211669922

Token 34: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.006050851196050644
    2. 'A' → logprob: -5.131051063537598
    3. ' ' → logprob: -9.131051063537598
    4. '   ' → logprob: -12.506051063537598
    5. '	A' → logprob: -12.881051063537598
    6. '    ' → logprob: -13.506051063537598
    7. '<|end|>' → logprob: -13.506051063537598
    8. '  ' → logprob: -13.756051063537598
    9. '(A' → logprob: -14.131051063537598
    10. ' ' → logprob: -14.631051063537598

Token 35: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.2119465172290802
    2. '[' → logprob: -1.7119464874267578
    3. '[i' → logprob: -4.586946487426758
    4. '[max' → logprob: -9.836946487426758
    5. '[r' → logprob: -9.961946487426758
    6. '[j' → logprob: -10.336946487426758
    7. '[int' → logprob: -10.586946487426758
    8. '[left' → logprob: -10.961946487426758
    9. '[len' → logprob: -11.086946487426758
    10. '[n' → logprob: -11.211946487426758

Token 36: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009913649410009384
    2. ']>' → logprob: -7.500991344451904
    3. ' ]' → logprob: -8.500991821289062
    4. '>' → logprob: -9.125991821289062
    5. '']' → logprob: -9.875991821289062
    6. ' >' → logprob: -10.500991821289062
    7. '[' → logprob: -10.625991821289062
    8. '   ' → logprob: -12.250991821289062
    9. '"]' → logprob: -12.625991821289062
    10. ']>=' → logprob: -13.000991821289062

Token 37: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2268265038728714
    2. '>' → logprob: -1.601826548576355
    3. ' <' → logprob: -7.6018266677856445
    4. '[' → logprob: -7.7268266677856445
    5. ' ' → logprob: -8.351826667785645
    6. '<' → logprob: -9.226826667785645
    7. '   ' → logprob: -10.976826667785645
    8. '```' → logprob: -11.226826667785645
    9. '">' → logprob: -11.351826667785645
    10. ' and' → logprob: -11.476826667785645

Token 38: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.05492979288101196
    2. ' A' → logprob: -2.929929733276367
    3. '	A' → logprob: -10.929929733276367
    4. '   ' → logprob: -11.304929733276367
    5. ' ' → logprob: -11.429929733276367
    6. '<|end|>' → logprob: -13.054929733276367
    7. '>A' → logprob: -13.679929733276367
    8. '  ' → logprob: -14.429929733276367
    9. '_A' → logprob: -14.554929733276367
    10. '[' → logprob: -15.054929733276367

Token 39: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.007661870680749416
    2. '[' → logprob: -4.882661819458008
    3. '[I' → logprob: -10.257661819458008
    4. '[l' → logprob: -11.757661819458008
    5. '[index' → logprob: -13.257661819458008
    6. '[r' → logprob: -13.382661819458008
    7. '[j' → logprob: -13.507661819458008
    8. '[int' → logprob: -13.632661819458008
    9. '[A' → logprob: -14.007661819458008
    10. '[a' → logprob: -14.132661819458008

Token 40: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.004828937817364931
    2. ']' → logprob: -6.254828929901123
    3. '):' → logprob: -6.379828929901123
    4. ':' → logprob: -7.254828929901123
    5. ' ]' → logprob: -8.004829406738281
    6. ' ):' → logprob: -10.254829406738281
    7. ']:
' → logprob: -10.629829406738281
    8. '   ' → logprob: -10.879829406738281
    9. '']:' → logprob: -10.879829406738281
    10. '"]:' → logprob: -11.379829406738281

Token 41: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03411702811717987
    2. ' :' → logprob: -4.784117221832275
    3. '<|end|>' → logprob: -4.784117221832275
    4. '   ' → logprob: -5.159117221832275
    5. '       ' → logprob: -5.284117221832275
    6. ' and' → logprob: -6.659117221832275
    7. '):' → logprob: -7.159117221832275
    8. ',' → logprob: -7.534117221832275
    9. 'largest' → logprob: -8.159116744995117
    10. 'and' → logprob: -8.409116744995117

Token 42: ' largest' (ID: 10574)
  Prédit: 'largest'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'largest' (adapté à ' largest') → logprob: -0.11127931624650955
    2. '    ' → logprob: -2.861279249191284
    3. '   ' → logprob: -3.861279249191284
    4. '       ' → logprob: -4.361279487609863
    5. ' largest' → logprob: -5.236279487609863
    6. 'max' → logprob: -6.736279487609863
    7. '>' → logprob: -6.736279487609863
    8. '<|end|>' → logprob: -6.986279487609863
    9. ' ' → logprob: -7.361279487609863
    10. '```' → logprob: -7.361279487609863

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0009502872708253562
    2. '=' → logprob: -7.000950336456299
    3. ' ' → logprob: -10.37594985961914
    4. '<|end|>' → logprob: -11.87594985961914
    5. ' =
' → logprob: -15.25094985961914
    6. '<|end|>' → logprob: -16.37594985961914
    7. '_' → logprob: -16.62594985961914
    8. ',' → logprob: -16.62594985961914
    9. '    ' → logprob: -16.87594985961914
    10. ' =)' → logprob: -17.50094985961914

Token 44: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00025287605240009725
    2. ' l' → logprob: -8.375252723693848
    3. '	l' → logprob: -11.000252723693848
    4. '   ' → logprob: -12.125252723693848
    5. '    ' → logprob: -15.750252723693848
    6. ' ' → logprob: -17.375253677368164
    7. '```' → logprob: -18.500253677368164
    8. '_l' → logprob: -18.625253677368164
    9. '       ' → logprob: -18.750253677368164
    10. '$l' → logprob: -18.875253677368164

Token 45: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.07740872353315353
    2. '   ' → logprob: -2.952408790588379
    3. ' else' → logprob: -3.827408790588379
    4. '	else' → logprob: -8.202408790588379
    5. '
' → logprob: -9.577408790588379
    6. 'elif' → logprob: -9.952408790588379
    7. '<|end|>' → logprob: -10.077408790588379
    8. '```' → logprob: -10.827408790588379
    9. '_else' → logprob: -11.327408790588379
    10. '    
' → logprob: -11.577408790588379

Token 46: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.20531515777111053
    2. '   ' → logprob: -2.080315113067627
    3. ' else' → logprob: -2.830315113067627
    4. '<|end|>' → logprob: -7.330315113067627
    5. '	else' → logprob: -7.705315113067627
    6. 'elif' → logprob: -8.330315589904785
    7. '
' → logprob: -8.455315589904785
    8. '    
' → logprob: -9.580315589904785
    9. '_else' → logprob: -10.955315589904785
    10. '```' → logprob: -10.955315589904785

Token 47: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0203557126224041
    2. ' else' → logprob: -4.520355701446533
    3. '   ' → logprob: -4.770355701446533
    4. 'elif' → logprob: -7.270355701446533
    5. '	else' → logprob: -9.645356178283691
    6. '<|end|>' → logprob: -11.895356178283691
    7. ' elif' → logprob: -12.270356178283691
    8. '_else' → logprob: -12.520356178283691
    9. '```' → logprob: -12.520356178283691
    10. ' ' → logprob: -13.020356178283691

Token 48: ':
' (ID: 734)
  Prédit: ' largest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' largest' → logprob: -0.23851683735847473
    2. 'largest' → logprob: -1.6135168075561523
    3. '       ' → logprob: -4.863516807556152
    4. '   ' → logprob: -5.988516807556152
    5. ':' → logprob: -7.113516807556152
    6. ' ' → logprob: -7.613516807556152
    7. 'Largest' → logprob: -7.988516807556152
    8. ':
' → logprob: -8.738516807556152
    9. ' 
' → logprob: -8.738516807556152
    10. '<|end|>' → logprob: -8.738516807556152

Token 49: '       ' (ID: 309)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6939247250556946
    2. ' i' → logprob: -0.6939247250556946
    3. '   ' → logprob: -7.568924903869629
    4. '	i' → logprob: -8.693924903869629
    5. '    ' → logprob: -9.943924903869629
    6. '       ' → logprob: -10.568924903869629
    7. ' ' → logprob: -11.568924903869629
    8. '  ' → logprob: -12.318924903869629
    9. '     ' → logprob: -13.568924903869629
    10. ',i' → logprob: -13.943924903869629

Token 50: ' largest' (ID: 10574)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1832488477230072
    2. ' i' → logprob: -1.8082488775253296
    3. 'largest' (adapté à ' largest') → logprob: -5.808248996734619
    4. ' largest' → logprob: -8.558248519897461
    5. '       ' → logprob: -9.058248519897461
    6. '   ' → logprob: -9.433248519897461
    7. '    ' → logprob: -10.308248519897461
    8. '	i' → logprob: -10.308248519897461
    9. '_i' → logprob: -11.308248519897461
    10. '[i' → logprob: -11.808248519897461

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033686961978673935
    2. '=' → logprob: -3.408686876296997
    3. ' ' → logprob: -10.283686637878418
    4. '<|end|>' → logprob: -12.283686637878418
    5. ')' → logprob: -14.283686637878418
    6. '=i' → logprob: -15.158686637878418
    7. ' =
' → logprob: -15.408686637878418
    8. '    ' → logprob: -15.533686637878418
    9. '   ' → logprob: -15.533686637878418
    10. '	' → logprob: -15.783686637878418

Token 52: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004080420359969139
    2. ' i' → logprob: -5.504080295562744
    3. '	i' → logprob: -13.754080772399902
    4. '   ' → logprob: -14.254080772399902
    5. ' ' → logprob: -15.629080772399902
    6. '    ' → logprob: -16.004079818725586
    7. '<|end|>' → logprob: -17.879079818725586
    8. '  ' → logprob: -18.129079818725586
    9. '_i' → logprob: -19.129079818725586
    10. '     ' → logprob: -19.379079818725586

Token 53: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3466828763484955
    2. '
' → logprob: -1.4716829061508179
    3. 'r' → logprob: -3.3466827869415283
    4. '```' → logprob: -4.596683025360107
    5. '    
' → logprob: -5.096683025360107
    6. '<|end|>' → logprob: -5.596683025360107
    7. 'if' → logprob: -5.971683025360107
    8. '  
' → logprob: -6.471683025360107
    9. ' 
' → logprob: -6.846683025360107
    10. '\n' → logprob: -7.096683025360107

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1601361781358719
    2. '
' → logprob: -2.2851362228393555
    3. 'r' → logprob: -4.2851362228393555
    4. '    
' → logprob: -4.5351362228393555
    5. '```' → logprob: -5.0351362228393555
    6. '<|end|>' → logprob: -5.2851362228393555
    7. '\n' → logprob: -5.9101362228393555
    8. '  
' → logprob: -6.0351362228393555
    9. 'if' → logprob: -6.5351362228393555
    10. ' 
' → logprob: -6.7851362228393555

Token 55: ' if' (ID: 538)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5388493537902832
    2. 'if' (adapté à ' if') → logprob: -1.4138493537902832
    3. '   ' → logprob: -1.7888493537902832
    4. ' if' → logprob: -5.413849353790283
    5. '```' → logprob: -6.913849353790283
    6. '    
' → logprob: -8.163848876953125
    7. ' ' → logprob: -8.663848876953125
    8. ' r' → logprob: -8.913848876953125
    9. '    ' → logprob: -10.413848876953125
    10. '  ' → logprob: -10.413848876953125

Token 56: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.04859020933508873
    2. 'r' → logprob: -3.0485901832580566
    3. ' ' → logprob: -13.673590660095215
    4. '    ' → logprob: -14.423590660095215
    5. ' ' → logprob: -14.548590660095215
    6. '	r' → logprob: -15.548590660095215
    7. '   ' → logprob: -15.923590660095215
    8. '(r' → logprob: -16.4235897064209
    9. '_r' → logprob: -16.5485897064209
    10. '```' → logprob: -17.3610897064209

Token 57: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.001328572048805654
    2. '<=' → logprob: -6.626328468322754
    3. ' ' → logprob: -13.251328468322754
    4. ' <' → logprob: -15.001328468322754
    5. ' ≤' → logprob: -15.376328468322754
    6. ')<=' → logprob: -16.62632942199707
    7. '```' → logprob: -17.00132942199707
    8. ' <=",' → logprob: -17.00132942199707
    9. '<|end|>' → logprob: -17.12632942199707
    10. ' ' → logprob: -17.37632942199707

Token 58: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.17976662516593933
    2. ' H' → logprob: -1.8047666549682617
    3. ' ' → logprob: -10.929766654968262
    4. '   ' → logprob: -13.054766654968262
    5. '  ' → logprob: -14.179766654968262
    6. ' ' → logprob: -14.429766654968262
    7. '	H' → logprob: -14.804766654968262
    8. '    ' → logprob: -16.992265701293945
    9. '```' → logprob: -17.117265701293945
    10. '_H' → logprob: -17.429765701293945

Token 59: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.003180094063282013
    2. 'and' → logprob: -5.753180027008057
    3. '   ' → logprob: -13.503180503845215
    4. ' ' → logprob: -14.128180503845215
    5. '    ' → logprob: -16.0031795501709
    6. '	and' → logprob: -17.0031795501709
    7. '  ' → logprob: -17.2531795501709
    8. ' и' → logprob: -17.3781795501709
    9. '```' → logprob: -17.8781795501709
    10. '<|end|>' → logprob: -18.1281795501709

Token 60: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.005950364284217358
    2. 'A' → logprob: -5.130950450897217
    3. ' ' → logprob: -11.005949974060059
    4. ' ' → logprob: -12.505949974060059
    5. '	A' → logprob: -14.505949974060059
    6. '   ' → logprob: -15.130949974060059
    7. '  ' → logprob: -15.630949974060059
    8. '```' → logprob: -16.255950927734375
    9. '<|end|>' → logprob: -16.380950927734375
    10. '    ' → logprob: -16.630950927734375

Token 61: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0009140860638581216
    2. '[' → logprob: -7.000914096832275
    3. ' [' → logprob: -13.625913619995117
    4. '[l' → logprob: -14.250913619995117
    5. 'r' → logprob: -15.125913619995117
    6. '[
' → logprob: -15.750913619995117
    7. '```' → logprob: -16.625913619995117
    8. ' r' → logprob: -17.125913619995117
    9. '[i' → logprob: -17.250913619995117
    10. ' ' → logprob: -17.500913619995117

Token 62: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004651318769901991
    2. ']>' → logprob: -6.3796515464782715
    3. ' ]' → logprob: -6.3796515464782715
    4. '>' → logprob: -6.8796515464782715
    5. ' >' → logprob: -8.629651069641113
    6. ' ' → logprob: -10.254651069641113
    7. ')' → logprob: -13.254651069641113
    8. '   ' → logprob: -13.379651069641113
    9. '']' → logprob: -14.379651069641113
    10. '>]' → logprob: -14.754651069641113

Token 63: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5760391354560852
    2. ' >' → logprob: -0.8260391354560852
    3. ' ' → logprob: -9.82603931427002
    4. '[' → logprob: -10.45103931427002
    5. ']' → logprob: -12.07603931427002
    6. ']>' → logprob: -12.70103931427002
    7. '   ' → logprob: -13.20103931427002
    8. '<|end|>' → logprob: -13.95103931427002
    9. '  ' → logprob: -14.07603931427002
    10. ')' → logprob: -14.20103931427002

Token 64: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.8071505427360535
    2. 'A' → logprob: -0.9321505427360535
    3. 'largest' → logprob: -2.1821506023406982
    4. ' largest' → logprob: -3.0571506023406982
    5. ' ' → logprob: -8.182150840759277
    6. 'Largest' → logprob: -10.682150840759277
    7. '	A' → logprob: -10.807150840759277
    8. '  ' → logprob: -11.432150840759277
    9. '<|end|>' → logprob: -12.432150840759277
    10. ' ' → logprob: -13.057150840759277

Token 65: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03395594656467438
    2. '[i' → logprob: -3.4089560508728027
    3. '[l' → logprob: -8.158955574035645
    4. 'largest' → logprob: -10.908955574035645
    5. '[
' → logprob: -13.533955574035645
    6. '[r' → logprob: -13.908955574035645
    7. 'i' → logprob: -14.283955574035645
    8. '[index' → logprob: -14.533955574035645
    9. '```' → logprob: -15.158955574035645
    10. '[left' → logprob: -15.908955574035645

Token 66: 'largest' (ID: 191832)
  Prédit: 'largest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'largest' → logprob: -0.0708097442984581
    2. 'i' → logprob: -2.695809841156006
    3. ' largest' → logprob: -7.195809841156006
    4. ' i' → logprob: -9.570809364318848
    5. 'l' → logprob: -10.945809364318848
    6. ' ' → logprob: -11.695809364318848
    7. '[' → logprob: -12.195809364318848
    8. 'Largest' → logprob: -12.320809364318848
    9. '  ' → logprob: -12.445809364318848
    10. '[i' → logprob: -12.445809364318848

Token 67: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0003087678924202919
    2. ']:
' → logprob: -8.375308990478516
    3. ':' → logprob: -10.250308990478516
    4. ']' → logprob: -10.625308990478516
    5. '):' → logprob: -11.375308990478516
    6. ']:
' → logprob: -13.000308990478516
    7. '>:' → logprob: -13.000308990478516
    8. '"]:' → logprob: -14.125308990478516
    9. '}:' → logprob: -14.375308990478516
    10. '']:' → logprob: -14.625308990478516

Token 68: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013363128527998924
    2. '       ' → logprob: -7.126336097717285
    3. ':
' → logprob: -7.876336097717285
    4. ' :' → logprob: -10.001336097717285
    5. '   ' → logprob: -10.001336097717285
    6. '):' → logprob: -10.251336097717285
    7. '>:' → logprob: -11.376336097717285
    8. '<|end|>' → logprob: -12.876336097717285
    9. '>' → logprob: -13.126336097717285
    10. 'largest' → logprob: -13.626336097717285

Token 69: ' largest' (ID: 10574)
  Prédit: 'largest'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'largest' (adapté à ' largest') → logprob: -0.5743750929832458
    2. 'r' → logprob: -1.0743751525878906
    3. ' largest' → logprob: -2.8243751525878906
    4. ' r' → logprob: -3.3243751525878906
    5. '   ' → logprob: -9.94937515258789
    6. '       ' → logprob: -11.07437515258789
    7. '	r' → logprob: -11.32437515258789
    8. 'Largest' → logprob: -12.44937515258789
    9. ' ' → logprob: -12.94937515258789
    10. '<|end|>' → logprob: -13.07437515258789

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687199354171753
    2. '=' → logprob: -1.1368720531463623
    3. ' ' → logprob: -14.761872291564941
    4. ' =
' → logprob: -15.761872291564941
    5. '   ' → logprob: -16.136871337890625
    6. '<|end|>' → logprob: -16.136871337890625
    7. ']' → logprob: -16.886871337890625
    8. ')' → logprob: -17.011871337890625
    9. '    ' → logprob: -17.136871337890625
    10. ' +=' → logprob: -17.261871337890625

Token 71: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0011703446507453918
    2. ' r' → logprob: -6.7511701583862305
    3. '<|end|>' → logprob: -16.501171112060547
    4. '	r' → logprob: -18.001171112060547
    5. ' ' → logprob: -19.626171112060547
    6. '_r' → logprob: -20.126171112060547
    7. '   ' → logprob: -20.251171112060547
    8. '<|end|>' → logprob: -21.376171112060547
    9. '$r' → logprob: -21.751171112060547
    10. '  ' → logprob: -23.001171112060547

Token 72: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1599225401878357
    2. '
' → logprob: -2.4099225997924805
    3. '<|end|>' → logprob: -3.7849225997924805
    4. '    
' → logprob: -4.1599225997924805
    5. '\n' → logprob: -4.4099225997924805
    6. '```' → logprob: -5.9099225997924805
    7. '  
' → logprob: -6.1599225997924805
    8. '\' → logprob: -7.0349225997924805
    9. ':' → logprob: -8.15992259979248
    10. '   
' → logprob: -8.15992259979248

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010184773243963718
    2. '
' → logprob: -5.5101847648620605
    3. '    
' → logprob: -5.6351847648620605
    4. '  
' → logprob: -7.1351847648620605
    5. '<|end|>' → logprob: -7.2601847648620605
    6. '```' → logprob: -7.8851847648620605
    7. '\n' → logprob: -8.635185241699219
    8. '  ' → logprob: -8.885185241699219
    9. '   
' → logprob: -9.510185241699219
    10. 'if' → logprob: -10.135185241699219

Token 74: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5530287027359009
    2. '   ' → logprob: -0.9280287027359009
    3. 'A' → logprob: -4.303028583526611
    4. ' if' → logprob: -4.553028583526611
    5. '```' → logprob: -5.928028583526611
    6. 'i' → logprob: -6.678028583526611
    7. '    
' → logprob: -7.553028583526611
    8. '
' → logprob: -8.17802906036377
    9. '  ' → logprob: -9.17802906036377
    10. '       ' → logprob: -9.55302906036377

Token 75: ' largest' (ID: 10574)
  Prédit: ' largest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' largest' → logprob: -0.018237270414829254
    2. 'largest' → logprob: -4.018237113952637
    3. ' A' → logprob: -9.768237113952637
    4. 'Largest' → logprob: -11.143237113952637
    5. 'A' → logprob: -11.893237113952637
    6. ' l' → logprob: -12.268237113952637
    7. '   ' → logprob: -13.393237113952637
    8. ' ' → logprob: -14.018237113952637
    9. ' larg' → logprob: -14.768237113952637
    10. '  ' → logprob: -15.143237113952637

Token 76: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.01819712109863758
    2. '!=' → logprob: -4.018197059631348
    3. ' ' → logprob: -10.768197059631348
    4. '   ' → logprob: -11.018197059631348
    5. '```' → logprob: -13.143197059631348
    6. '  ' → logprob: -13.268197059631348
    7. ' !==' → logprob: -14.018197059631348
    8. ')!=' → logprob: -14.268197059631348
    9. ']!=' → logprob: -14.393197059631348
    10. '    ' → logprob: -14.393197059631348

Token 77: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.47444871068000793
    2. ' i' → logprob: -0.9744486808776855
    3. '	i' → logprob: -8.599449157714844
    4. '   ' → logprob: -8.724449157714844
    5. ' ' → logprob: -11.474449157714844
    6. '    ' → logprob: -11.974449157714844
    7. '  ' → logprob: -12.349449157714844
    8. '```' → logprob: -13.849449157714844
    9. '_i' → logprob: -14.724449157714844
    10. ''i' → logprob: -14.974449157714844

Token 78: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007523320964537561
    2. ':
' → logprob: -7.2507524490356445
    3. '):' → logprob: -10.500752449035645
    4. '   ' → logprob: -12.000752449035645
    5. ':**' → logprob: -12.750752449035645
    6. ' :' → logprob: -13.250752449035645
    7. '):
' → logprob: -14.125752449035645
    8. ',' → logprob: -14.250752449035645
    9. ':\' → logprob: -14.375752449035645
    10. ':def' → logprob: -15.125752449035645

Token 79: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36714765429496765
    2. '\n' → logprob: -1.74214768409729
    3. '       ' → logprob: -2.11714768409729
    4. '   ' → logprob: -5.242147445678711
    5. '    
' → logprob: -6.617147445678711
    6. '\' → logprob: -6.742147445678711
    7. '```' → logprob: -6.867147445678711
    8. '        
' → logprob: -7.242147445678711
    9. '<|end|>' → logprob: -7.367147445678711
    10. ':' → logprob: -8.367147445678711

Token 80: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.567572295665741
    2. 'A' (adapté à ' A') → logprob: -0.942572295665741
    3. '   ' → logprob: -3.9425723552703857
    4. '       ' → logprob: -4.317572116851807
    5. '\n' → logprob: -5.692572116851807
    6. '(A' → logprob: -6.067572116851807
    7. '
' → logprob: -6.567572116851807
    8. '\' → logprob: -7.067572116851807
    9. '    
' → logprob: -7.317572116851807
    10. '```' → logprob: -7.692572116851807

Token 81: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.003615631954744458
    2. '[' → logprob: -5.628615856170654
    3. ',' → logprob: -11.503615379333496
    4. ',i' → logprob: -13.128615379333496
    5. '[l' → logprob: -14.253615379333496
    6. '[I' → logprob: -14.253615379333496
    7. '[int' → logprob: -14.503615379333496
    8. '[index' → logprob: -15.128615379333496
    9. '```' → logprob: -15.378615379333496
    10. 'i' → logprob: -15.503615379333496

Token 82: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.02333609201014042
    2. ']' → logprob: -3.773336172103882
    3. ',' → logprob: -9.648336410522461
    4. ' ],' → logprob: -10.773336410522461
    5. '],
' → logprob: -12.648336410522461
    6. '],[' → logprob: -14.523336410522461
    7. ' ]' → logprob: -14.773336410522461
    8. '"],' → logprob: -15.398336410522461
    9. ''],' → logprob: -16.02333641052246
    10. '>,' → logprob: -16.14833641052246

Token 83: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.018150413408875465
    2. ' A' → logprob: -4.018150329589844
    3. '	A' → logprob: -15.268150329589844
    4. '   ' → logprob: -15.768150329589844
    5. '<|end|>' → logprob: -16.143150329589844
    6. ' ' → logprob: -17.018150329589844
    7. '  ' → logprob: -17.018150329589844
    8. '>A' → logprob: -18.393150329589844
    9. '       ' → logprob: -19.518150329589844
    10. '    ' → logprob: -19.893150329589844

Token 84: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.38699668645858765
    2. '[l' → logprob: -1.1369967460632324
    3. '[i' → logprob: -9.636996269226074
    4. '[
' → logprob: -11.011996269226074
    5. 'largest' → logprob: -11.136996269226074
    6. '[L' → logprob: -12.386996269226074
    7. '[r' → logprob: -12.761996269226074
    8. ']' → logprob: -12.886996269226074
    9. '       ' → logprob: -13.261996269226074
    10. ',l' → logprob: -13.511996269226074

Token 85: 'largest' (ID: 191832)
  Prédit: 'largest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'largest' → logprob: -0.0004411591507960111
    2. ' largest' → logprob: -8.750441551208496
    3. '<|end|>' → logprob: -9.375441551208496
    4. 'argest' → logprob: -9.375441551208496
    5. 'Largest' → logprob: -10.750441551208496
    6. '[' → logprob: -11.000441551208496
    7. '-largest' → logprob: -11.000441551208496
    8. 'l' → logprob: -11.250441551208496
    9. 'x' → logprob: -11.375441551208496
    10. 's' → logprob: -11.375441551208496

Token 86: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.6166903151315637e-05
    2. ' ]' → logprob: -11.125016212463379
    3. ']=' → logprob: -14.000016212463379
    4. ')' → logprob: -15.750016212463379
    5. '<|end|>' → logprob: -16.125015258789062
    6. '],' → logprob: -16.625015258789062
    7. '   ' → logprob: -17.000015258789062
    8. '}' → logprob: -17.000015258789062
    9. '=' → logprob: -17.000015258789062
    10. ' ' → logprob: -17.750015258789062

Token 87: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47408607602119446
    2. ' =' → logprob: -0.9740860462188721
    3. '<|end|>' → logprob: -12.099085807800293
    4. ',' → logprob: -13.724085807800293
    5. ' ' → logprob: -14.099085807800293
    6. ' =
' → logprob: -14.474085807800293
    7. '=
' → logprob: -15.224085807800293
    8. ' =)' → logprob: -15.349085807800293
    9. '=

' → logprob: -15.974085807800293
    10. '.=' → logprob: -16.22408676147461

Token 88: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.07889363914728165
    2. 'A' → logprob: -2.5788936614990234
    3. ' ' → logprob: -12.703893661499023
    4. '	A' → logprob: -14.703893661499023
    5. ' ' → logprob: -15.203893661499023
    6. '<|end|>' → logprob: -15.953893661499023
    7. '  ' → logprob: -16.578893661499023
    8. ' 
' → logprob: -17.453893661499023
    9. '>A' → logprob: -17.703893661499023
    10. '    ' → logprob: -17.703893661499023

Token 89: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.7689099018462e-05
    2. ',' → logprob: -9.50008773803711
    3. '[l' → logprob: -12.50008773803711
    4. '[i' → logprob: -13.00008773803711
    5. '<|end|>' → logprob: -13.00008773803711
    6. 'largest' → logprob: -13.75008773803711
    7. '```' → logprob: -14.50008773803711
    8. '[size' → logprob: -14.75008773803711
    9. ',l' → logprob: -15.00008773803711
    10. ' ' → logprob: -15.12508773803711

Token 90: 'largest' (ID: 191832)
  Prédit: 'largest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'largest' → logprob: -0.00013786651834379882
    2. 'i' → logprob: -9.750138282775879
    3. ' largest' → logprob: -9.750138282775879
    4. '<|end|>' → logprob: -12.250138282775879
    5. 'larg' → logprob: -12.500138282775879
    6. ']' → logprob: -12.750138282775879
    7. '-largest' → logprob: -12.750138282775879
    8. 'large' → logprob: -13.000138282775879
    9. 'l' → logprob: -13.375138282775879
    10. 'argest' → logprob: -13.750138282775879

Token 91: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6205491423606873
    2. '],' → logprob: -1.120549201965332
    3. ']' → logprob: -1.995549201965332
    4. ' ,' → logprob: -9.120549201965332
    5. ' ],' → logprob: -9.495549201965332
    6. ',A' → logprob: -10.370549201965332
    7. ' ' → logprob: -10.370549201965332
    8. ' ]' → logprob: -11.495549201965332
    9. 'A' → logprob: -11.870549201965332
    10. '```' → logprob: -11.995549201965332

Token 92: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.387046217918396
    2. ' A' → logprob: -1.137046217918396
    3. '<|end|>' → logprob: -8.887045860290527
    4. 'i' → logprob: -10.887045860290527
    5. ' ' → logprob: -11.137045860290527
    6. '	A' → logprob: -13.012045860290527
    7. ' i' → logprob: -14.387045860290527
    8. ' ' → logprob: -14.887045860290527
    9. '<|end|>' → logprob: -15.637045860290527
    10. '```' → logprob: -16.137046813964844

Token 93: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004670153430197388
    2. '[' → logprob: -7.750466823577881
    3. '```' → logprob: -10.500467300415039
    4. '[
' → logprob: -12.250467300415039
    5. 'i' → logprob: -13.500467300415039
    6. '<|end|>' → logprob: -14.000467300415039
    7. '[I' → logprob: -14.625467300415039
    8. '[A' → logprob: -15.125467300415039
    9. ' [' → logprob: -15.125467300415039
    10. ',i' → logprob: -15.875467300415039

Token 94: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014716439181938767
    2. ')
' → logprob: -9.000146865844727
    3. ']' → logprob: -11.000146865844727
    4. '<|end|>' → logprob: -12.875146865844727
    5. '}' → logprob: -13.125146865844727
    6. ' )' → logprob: -14.000146865844727
    7. '   ' → logprob: -14.625146865844727
    8. ')

' → logprob: -15.125146865844727
    9. ')
' → logprob: -15.625146865844727
    10. '）' → logprob: -15.625146865844727

Token 95: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.61361825466156
    2. '       ' → logprob: -1.61361825466156
    3. '
' → logprob: -1.73861825466156
    4. '    
' → logprob: -1.86361825466156
    5. '\n' → logprob: -2.7386183738708496
    6. '        
' → logprob: -3.1136183738708496
    7. ' 
' → logprob: -3.4886183738708496
    8. 'max' → logprob: -3.6136183738708496
    9. '(max' → logprob: -3.7386183738708496
    10. '  
' → logprob: -4.23861837387085

Token 96: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.0011364045785740018
    2. ' max' → logprob: -6.876136302947998
    3. '       ' → logprob: -9.751136779785156
    4. '
' → logprob: -10.376136779785156
    5. '   ' → logprob: -11.376136779785156
    6. '        
' → logprob: -14.126136779785156
    7. '	max' → logprob: -14.251136779785156
    8. ' ' → logprob: -14.626136779785156
    9. '(max' → logprob: -15.376136779785156
    10. '    
' → logprob: -15.876136779785156

Token 97: 'Heap' (ID: 39287)
  Prédit: 'Heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Heap' → logprob: -3.173704271830502e-06
    2. 'He' → logprob: -13.75000286102295
    3. '_heap' → logprob: -13.87500286102295
    4. ' Heap' → logprob: -14.87500286102295
    5. 'heap' → logprob: -15.00000286102295
    6. 'H' → logprob: -15.87500286102295
    7. 'Heat' → logprob: -16.500003814697266
    8. ' heap' → logprob: -16.500003814697266
    9. '.heap' → logprob: -17.125003814697266
    10. 'Heal' → logprob: -18.375003814697266

Token 98: 'ify' (ID: 1985)
  Prédit: 'ify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -3.690834273584187e-05
    2. '```' → logprob: -10.50003719329834
    3. 'lify' → logprob: -12.75003719329834
    4. 'ifye' → logprob: -13.62503719329834
    5. 'ize' → logprob: -13.75003719329834
    6. ' ' → logprob: -13.75003719329834
    7. '   ' → logprob: -13.87503719329834
    8. 'if' → logprob: -14.75003719329834
    9. 'iffy' → logprob: -15.12503719329834
    10. 'IFY' → logprob: -15.50003719329834

Token 99: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.07890675216913223
    2. '(' → logprob: -2.578906774520874
    3. '(
' → logprob: -11.328907012939453
    4. ' (' → logprob: -12.953907012939453
    5. '(H' → logprob: -13.703907012939453
    6. '((' → logprob: -14.578907012939453
    7. '(B' → logprob: -15.203907012939453
    8. ''(' → logprob: -15.953907012939453
    9. '`' → logprob: -16.203907012939453
    10. '(i' → logprob: -16.203907012939453

Token 100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01321364939212799
    2. ',l' → logprob: -5.013213634490967
    3. '(' → logprob: -5.763213634490967
    4. '(l' → logprob: -6.013213634490967
    5. 'largest' → logprob: -7.513213634490967
    6. ' ,' → logprob: -9.013214111328125
    7. ')' → logprob: -9.263214111328125
    8. 'Largest' → logprob: -9.388214111328125
    9. ' largest' → logprob: -11.513214111328125
    10. '	l' → logprob: -12.138214111328125

Token 101: ' largest' (ID: 10574)
  Prédit: 'largest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'largest' → logprob: -0.01416398212313652
    2. ' largest' → logprob: -4.264163970947266
    3. 'Largest' → logprob: -15.639163970947266
    4. '   ' → logprob: -15.889163970947266
    5. '  ' → logprob: -16.514163970947266
    6. '-largest' → logprob: -16.639163970947266
    7. 'argest' → logprob: -17.014163970947266
    8. ' ' → logprob: -17.764163970947266
    9. 'large' → logprob: -18.514163970947266
    10. ')' → logprob: -18.764163970947266

Token 102: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ')
' → logprob: -13.500001907348633
    3. ' )' → logprob: -15.125001907348633
    4. '   ' → logprob: -19.250001907348633
    5. ')

' → logprob: -19.625001907348633
    6. ')#' → logprob: -19.625001907348633
    7. ')`' → logprob: -19.750001907348633
    8. '),' → logprob: -20.000001907348633
    9. ' ' → logprob: -20.500001907348633
    10. ')return' → logprob: -20.875001907348633

Token 103: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: ' build' (ID: 3024)
  Prédit: ' build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' build' → logprob: -0.7747396230697632
    2. ' heap' → logprob: -1.2747396230697632
    3. ' heaps' → logprob: -1.3997396230697632
    4. ' extract' → logprob: -4.774739742279053
    5. ' max' → logprob: -7.024739742279053
    6. ' he' → logprob: -7.149739742279053
    7. ' insert' → logprob: -7.399739742279053
    8. ' He' → logprob: -7.774739742279053
    9. ' ' → logprob: -7.899739742279053
    10. ' sort' → logprob: -8.399739265441895

Token 105: 'Max' (ID: 6499)
  Prédit: 'Max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Max' → logprob: -0.11897533386945724
    2. 'Heap' → logprob: -2.3689754009246826
    3. '_max' → logprob: -4.3689751625061035
    4. '_heap' → logprob: -6.1189751625061035
    5. 'max' → logprob: -6.3689751625061035
    6. '_Max' → logprob: -7.2439751625061035
    7. '(Max' → logprob: -7.9939751625061035
    8. '	Max' → logprob: -8.243975639343262
    9. ' max' → logprob: -8.368975639343262
    10. '(max' → logprob: -9.618975639343262

Token 106: 'Heap' (ID: 39287)
  Prédit: 'Heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Heap' → logprob: -6.813969957875088e-05
    2. 'heap' → logprob: -9.875067710876465
    3. '```' → logprob: -11.875067710876465
    4. 'He' → logprob: -12.625067710876465
    5. '_heap' → logprob: -12.875067710876465
    6. '-' → logprob: -12.875067710876465
    7. '

' → logprob: -15.000067710876465
    8. ' heap' → logprob: -15.750067710876465
    9. ' Heap' → logprob: -15.875067710876465
    10. '   ' → logprob: -15.875067710876465

Token 107: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.008626867085695267
    2. '(' → logprob: -4.758626937866211
    3. '(a' → logprob: -12.508626937866211
    4. '(I' → logprob: -13.383626937866211
    5. ' (' → logprob: -13.633626937866211
    6. '()' → logprob: -13.758626937866211
    7. '(
' → logprob: -13.883626937866211
    8. '(S' → logprob: -14.633626937866211
    9. '\(' → logprob: -14.758626937866211
    10. '(H' → logprob: -15.133626937866211

Token 108: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11293923109769821
    2. ',' → logprob: -2.2379391193389893
    3. '):
' → logprob: -9.86293888092041
    4. ',A' → logprob: -10.48793888092041
    5. ' ):' → logprob: -11.11293888092041
    6. ')' → logprob: -11.11293888092041
    7. '   ' → logprob: -12.86293888092041
    8. ' ,' → logprob: -13.86293888092041
    9. ' ' → logprob: -13.98793888092041
    10. '):
' → logprob: -15.23793888092041

Token 109: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26582303643226624
    2. ' H' → logprob: -1.5158230066299438
    3. 'H' → logprob: -4.515822887420654
    4. '
' → logprob: -6.265822887420654
    5. ' ' → logprob: -8.515823364257812
    6. ' global' → logprob: -8.640823364257812
    7. '  ' → logprob: -8.765823364257812
    8. '    
' → logprob: -9.015823364257812
    9. ' 
' → logprob: -9.515823364257812
    10. '<|end|>' → logprob: -9.765823364257812

Token 110: ' for' (ID: 395)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.04909732937812805
    2. 'global' → logprob: -3.1740972995758057
    3. ' global' → logprob: -5.424097537994385
    4. ' H' → logprob: -6.924097537994385
    5. '   ' → logprob: -7.674097537994385
    6. ' ' → logprob: -8.799097061157227
    7. '
' → logprob: -10.549097061157227
    8. '  ' → logprob: -10.924097061157227
    9. 'Global' → logprob: -11.674097061157227
    10. '```' → logprob: -12.924097061157227

Token 111: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0006454797694459558
    2. 'i' → logprob: -7.875645637512207
    3. ' ' → logprob: -8.375645637512207
    4. ' H' → logprob: -11.125645637512207
    5. '	i' → logprob: -11.250645637512207
    6. '  ' → logprob: -12.125645637512207
    7. '   ' → logprob: -14.125645637512207
    8. ' ' → logprob: -14.875645637512207
    9. '<|end|>' → logprob: -15.000645637512207
    10. 'H' → logprob: -15.375645637512207

Token 112: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014824745245277882
    2. 'in' → logprob: -4.514824867248535
    3. ' ' → logprob: -5.639824867248535
    4. ' =' → logprob: -9.639824867248535
    5. '  ' → logprob: -10.264824867248535
    6. '<|end|>' → logprob: -10.264824867248535
    7. 'range' → logprob: -10.514824867248535
    8. ' range' → logprob: -11.264824867248535
    9. '=' → logprob: -11.389824867248535
    10. '	in' → logprob: -11.639824867248535

Token 113: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5333048105239868
    2. ' range' → logprob: -0.9083048105239868
    3. 'len' → logprob: -5.158304691314697
    4. ' len' → logprob: -5.658304691314697
    5. ' ' → logprob: -7.908304691314697
    6. '(range' → logprob: -8.533305168151855
    7. '(len' → logprob: -8.783305168151855
    8. '  ' → logprob: -10.158305168151855
    9. '   ' → logprob: -10.408305168151855
    10. ' (' → logprob: -10.908305168151855

Token 114: '(H' (ID: 20904)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.1283218264579773
    2. '(' → logprob: -2.128321886062622
    3. '((' → logprob: -6.628321647644043
    4. ' (' → logprob: -10.503321647644043
    5. '(int' → logprob: -11.003321647644043
    6. '(
' → logprob: -11.503321647644043
    7. ' len' → logprob: -12.378321647644043
    8. '(n' → logprob: -13.003321647644043
    9. 'len' → logprob: -13.003321647644043
    10. '<|end|>' → logprob: -13.253321647644043

Token 115: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.048601455986499786
    2. ' //' → logprob: -3.0486013889312744
    3. ',' → logprob: -11.298601150512695
    4. ' ' → logprob: -14.423601150512695
    5. '   ' → logprob: -14.423601150512695
    6. '  ' → logprob: -15.798601150512695
    7. '#' → logprob: -15.923601150512695
    8. '/' → logprob: -16.048601150512695
    9. '    ' → logprob: -16.548601150512695
    10. '2' → logprob: -17.173601150512695

Token 116: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015104549238458276
    2. ' ' → logprob: -6.5015106201171875
    3. '//' → logprob: -11.876510620117188
    4. '<|end|>' → logprob: -15.251510620117188
    5. '   ' → logprob: -15.501510620117188
    6. ' //' → logprob: -15.751510620117188
    7. '/' → logprob: -15.876510620117188
    8. '```' → logprob: -16.251510620117188
    9. '  ' → logprob: -16.626510620117188
    10. '
' → logprob: -16.751510620117188

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003179855877533555
    2. ' ,' → logprob: -5.753180027008057
    3. ',
' → logprob: -14.628179550170898
    4. '  ' → logprob: -14.753179550170898
    5. ' ' → logprob: -15.253179550170898
    6. '‌,' → logprob: -15.503179550170898
    7. ',int' → logprob: -15.628179550170898
    8. ',None' → logprob: -15.878179550170898
    9. ',H' → logprob: -16.2531795501709
    10. '   ' → logprob: -16.3781795501709

Token 118: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3485777676105499
    2. ' ' → logprob: -1.2235777378082275
    3. '1' → logprob: -9.848577499389648
    4. ' -' → logprob: -10.223577499389648
    5. '   ' → logprob: -11.223577499389648
    6. '-' → logprob: -11.348577499389648
    7. '  ' → logprob: -11.723577499389648
    8. '    ' → logprob: -12.348577499389648
    9. '	' → logprob: -13.223577499389648
    10. '<|end|>' → logprob: -13.348577499389648

Token 119: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008061290718615055
    2. ' ' → logprob: -5.508061408996582
    3. '-' → logprob: -5.633061408996582
    4. ' -' → logprob: -7.883061408996582
    5. '1' → logprob: -11.508061408996582
    6. '  ' → logprob: -12.383061408996582
    7. '   ' → logprob: -12.758061408996582
    8. '    ' → logprob: -14.133061408996582
    9. '```' → logprob: -14.133061408996582
    10. '	' → logprob: -14.758061408996582

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012489878572523594
    2. ' ,' → logprob: -4.5124897956848145
    3. '-' → logprob: -7.3874897956848145
    4. ' -' → logprob: -7.5124897956848145
    5. ',-' → logprob: -8.762490272521973
    6. ' ,-' → logprob: -9.637490272521973
    7. ' ' → logprob: -10.512490272521973
    8. '   ' → logprob: -11.012490272521973
    9. '  ' → logprob: -12.762490272521973
    10. '    ' → logprob: -13.137490272521973

Token 121: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2814699411392212
    2. ' -' → logprob: -1.4064699411392212
    3. '   ' → logprob: -8.53147029876709
    4. '  ' → logprob: -9.65647029876709
    5. ' ' → logprob: -10.65647029876709
    6. '<|end|>' → logprob: -11.28147029876709
    7. '	' → logprob: -11.53147029876709
    8. '    ' → logprob: -12.28147029876709
    9. ',-' → logprob: -13.15647029876709
    10. ')' → logprob: -13.15647029876709

Token 122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.692145012086257e-05
    2. ' ' → logprob: -10.000046730041504
    3. ')' → logprob: -13.875046730041504
    4. '  ' → logprob: -15.875046730041504
    5. '   ' → logprob: -16.12504768371582
    6. ' -' → logprob: -16.75004768371582
    7. '<|end|>' → logprob: -17.12504768371582
    8. '-' → logprob: -17.75004768371582
    9. '```' → logprob: -17.87504768371582
    10. '１' → logprob: -18.37504768371582

Token 123: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04927857220172882
    2. '):
' → logprob: -4.049278736114502
    3. ')' → logprob: -4.299278736114502
    4. '-' → logprob: -4.674278736114502
    5. ',' → logprob: -5.549278736114502
    6. ' ):' → logprob: -5.799278736114502
    7. ':' → logprob: -8.049278259277344
    8. ' -' → logprob: -8.799278259277344
    9. ' )' → logprob: -9.299278259277344
    10. '   ' → logprob: -9.424278259277344

Token 124: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1072909832000732
    2. '       ' → logprob: -1.1072909832000732
    3. '<|end|>' → logprob: -1.4822909832000732
    4. ' ' → logprob: -2.6072909832000732
    5. ')' → logprob: -3.8572909832000732
    6. '    ' → logprob: -5.607291221618652
    7. ':' → logprob: -5.732291221618652
    8. '  ' → logprob: -6.107291221618652
    9. ' A' → logprob: -6.357291221618652
    10. '    
' → logprob: -6.982291221618652

Token 125: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.07889826595783234
    2. ' max' → logprob: -2.5788981914520264
    3. '   ' → logprob: -12.578898429870605
    4. '
' → logprob: -13.203898429870605
    5. '       ' → logprob: -13.953898429870605
    6. '	max' → logprob: -13.953898429870605
    7. ' ' → logprob: -15.078898429870605
    8. ' 
' → logprob: -15.203898429870605
    9. '    ' → logprob: -15.328898429870605
    10. '(max' → logprob: -15.703898429870605

Token 126: 'Heap' (ID: 39287)
  Prédit: 'Heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Heap' → logprob: -2.816093228830141e-06
    2. 'He' → logprob: -12.87500286102295
    3. 'heap' → logprob: -16.125001907348633
    4. 'H' → logprob: -16.625001907348633
    5. ' Heap' → logprob: -17.250001907348633
    6. 'Heat' → logprob: -17.625001907348633
    7. '_heap' → logprob: -17.750001907348633
    8. 'Heal' → logprob: -19.125001907348633
    9. '```' → logprob: -19.375001907348633
    10. '.heap' → logprob: -19.750001907348633

Token 127: 'ify' (ID: 1985)
  Prédit: 'ify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -3.309382373117842e-05
    2. 'ize' → logprob: -11.625033378601074
    3. 'fy' → logprob: -11.750033378601074
    4. '```' → logprob: -12.375033378601074
    5. '   ' → logprob: -12.500033378601074
    6. 'ifye' → logprob: -13.125033378601074
    7. 'if' → logprob: -13.250033378601074
    8. 'lify' → logprob: -13.500033378601074
    9. ' ' → logprob: -14.375033378601074
    10. 'Heap' → logprob: -14.500033378601074

Token 128: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.003606959478929639
    2. '(' → logprob: -5.628606796264648
    3. '(
' → logprob: -12.128606796264648
    4. ' (' → logprob: -14.878606796264648
    5. '<|end|>' → logprob: -14.878606796264648
    6. '(

' → logprob: -15.128606796264648
    7. '(H' → logprob: -16.00360679626465
    8. ')' → logprob: -16.37860679626465
    9. '(E' → logprob: -17.00360679626465
    10. '(None' → logprob: -17.00360679626465

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01851569674909115
    2. ',A' → logprob: -4.393515586853027
    3. '(A' → logprob: -5.268515586853027
    4. ')' → logprob: -7.768515586853027
    5. '(' → logprob: -8.018515586853027
    6. ' ,' → logprob: -10.518515586853027
    7. 'A' → logprob: -10.518515586853027
    8. ',
' → logprob: -10.768515586853027
    9. ' A' → logprob: -13.518515586853027
    10. '   ' → logprob: -13.518515586853027

Token 130: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00020449401927180588
    2. ' i' → logprob: -8.500204086303711
    3. ')i' → logprob: -14.500204086303711
    4. ')' → logprob: -15.125204086303711
    5. '   ' → logprob: -16.37520408630371
    6. '	i' → logprob: -16.50020408630371
    7. '<|end|>' → logprob: -17.00020408630371
    8. '
' → logprob: -18.50020408630371
    9. ' ' → logprob: -18.75020408630371
    10. '  ' → logprob: -19.62520408630371

Token 131: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9743012671824545e-05
    2. ')
' → logprob: -10.875020027160645
    3. ' )' → logprob: -14.500020027160645
    4. ')

' → logprob: -16.750019073486328
    5. '   ' → logprob: -16.750019073486328
    6. ')#' → logprob: -17.625019073486328
    7. ')return' → logprob: -18.125019073486328
    8. ')`' → logprob: -18.125019073486328
    9. '),' → logprob: -18.750019073486328
    10. '#' → logprob: -18.875019073486328

Token 132: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.023053867742419243
    2. '#' → logprob: -4.3980536460876465
    3. 'def' → logprob: -4.6480536460876465
    4. 'A' → logprob: -8.148054122924805
    5. '
' → logprob: -8.398054122924805
    6. '```' → logprob: -8.398054122924805
    7. '<|end|>' → logprob: -9.148054122924805
    8. '  
' → logprob: -11.773054122924805
    9. ' ' → logprob: -11.898054122924805
    10. 'n' → logprob: -11.898054122924805

Token 133: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04300741106271744
    2. '=' → logprob: -3.1680073738098145
    3. ' ' → logprob: -13.043007850646973
    4. ',' → logprob: -13.043007850646973
    5. ' =
' → logprob: -13.793007850646973
    6. ' =)' → logprob: -14.043007850646973
    7. '<|end|>' → logprob: -14.543007850646973
    8. '=int' → logprob: -15.043007850646973
    9. ')' → logprob: -15.293007850646973
    10. '=len' → logprob: -15.293007850646973

Token 134: ' int' (ID: 677)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.11224239319562912
    2. ' len' → logprob: -2.3622424602508545
    3. '10' → logprob: -4.487242221832275
    4. ' ' → logprob: -7.737242221832275
    5. '9' → logprob: -8.987242698669434
    6. 'int' → logprob: -9.612242698669434
    7. ' int' → logprob: -10.612242698669434
    8. '8' → logprob: -10.862242698669434
    9. '7' → logprob: -10.987242698669434
    10. '6' → logprob: -12.112242698669434

Token 135: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.25222721695899963
    2. '(' → logprob: -1.5022271871566772
    3. 'input' → logprob: -8.877226829528809
    4. '()' → logprob: -9.252226829528809
    5. '(
' → logprob: -10.377226829528809
    6. '(len' → logprob: -11.002226829528809
    7. '('' → logprob: -12.002226829528809
    8. ' (' → logprob: -13.502226829528809
    9. '("' → logprob: -13.627226829528809
    10. '(eval' → logprob: -13.877226829528809

Token 136: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20726686716079712
    2. '())' → logprob: -1.7072668075561523
    3. '(' → logprob: -5.332266807556152
    4. '("' → logprob: -7.707266807556152
    5. '("("' → logprob: -8.832266807556152
    6. '()>' → logprob: -9.457266807556152
    7. '("")' → logprob: -9.957266807556152
    8. '().' → logprob: -10.207266807556152
    9. ')' → logprob: -10.457266807556152
    10. '('' → logprob: -10.582266807556152

Token 137: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.012519658543169498
    2. ' A' → logprob: -4.387519836425781
    3. '
' → logprob: -13.012519836425781
    4. 'arr' → logprob: -13.637519836425781
    5. 'a' → logprob: -13.762519836425781
    6. '	A' → logprob: -13.887519836425781
    7. '```' → logprob: -13.887519836425781
    8. ' 
' → logprob: -14.137519836425781
    9. ' ' → logprob: -14.637519836425781
    10. 'data' → logprob: -15.262519836425781

Token 138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5505455136299133
    2. '=' → logprob: -1.0505454540252686
    3. '()' → logprob: -3.4255454540252686
    4. '(' → logprob: -3.5505454540252686
    5. '[' → logprob: -4.925545692443848
    6. '[:]' → logprob: -6.300545692443848
    7. '[]' → logprob: -6.425545692443848
    8. '=[]' → logprob: -7.925545692443848
    9. '=[' → logprob: -8.050545692443848
    10. '.append' → logprob: -8.175545692443848

Token 139: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08973517268896103
    2. ' [' → logprob: -2.464735269546509
    3. '[list' → logprob: -7.96473503112793
    4. '['' → logprob: -8.46473503112793
    5. ' list' → logprob: -9.83973503112793
    6. '[input' → logprob: -10.21473503112793
    7. '["' → logprob: -10.33973503112793
    8. '[]' → logprob: -10.71473503112793
    9. '[int' → logprob: -10.71473503112793
    10. '[List' → logprob: -10.83973503112793

Token 140: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0023323555942624807
    2. 'None' → logprob: -6.3773322105407715
    3. ' ' → logprob: -7.5023322105407715
    4. ' None' → logprob: -10.00233268737793
    5. '-' → logprob: -10.75233268737793
    6. 'int' → logprob: -11.75233268737793
    7. ']' → logprob: -13.87733268737793
    8. ' -' → logprob: -14.37733268737793
    9. '_' → logprob: -14.50233268737793
    10. ')' → logprob: -14.62733268737793

Token 141: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002442477736622095
    2. ',' → logprob: -6.377442359924316
    3. ' ]' → logprob: -7.502442359924316
    4. ']+' → logprob: -8.627442359924316
    5. ']int' → logprob: -12.502442359924316
    6. ')' → logprob: -13.627442359924316
    7. ']*' → logprob: -13.752442359924316
    8. ']*(' → logprob: -14.627442359924316
    9. '<|end|>' → logprob: -14.627442359924316
    10. ']+=' → logprob: -14.752442359924316

Token 142: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 143: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.024035781621932983
    2. '[list' → logprob: -3.774035692214966
    3. ' list' → logprob: -7.274035930633545
    4. '[' → logprob: -9.274035453796387
    5. '[List' → logprob: -14.024035453796387
    6. '[int' → logprob: -14.274035453796387
    7. '[input' → logprob: -14.274035453796387
    8. ' [' → logprob: -15.149035453796387
    9. '(list' → logprob: -16.149036407470703
    10. '=list' → logprob: -17.024036407470703

Token 144: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.5832111835479736
    2. '(' → logprob: -0.8332111835479736
    3. '(input' → logprob: -5.5832109451293945
    4. '(int' → logprob: -5.7082109451293945
    5. '()' → logprob: -9.708210945129395
    6. '(
' → logprob: -10.208210945129395
    7. '(eval' → logprob: -10.708210945129395
    8. '(range' → logprob: -10.958210945129395
    9. '<|end|>' → logprob: -12.083210945129395
    10. 'map' → logprob: -12.333210945129395

Token 145: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0004272123333066702
    2. '(' → logprob: -8.00042724609375
    3. '<int' → logprob: -10.00042724609375
    4. 'int' → logprob: -10.37542724609375
    5. '(input' → logprob: -12.62542724609375
    6. ',int' → logprob: -12.87542724609375
    7. ']int' → logprob: -12.87542724609375
    8. '[int' → logprob: -13.37542724609375
    9. '(
' → logprob: -13.37542724609375
    10. '<|end|>' → logprob: -13.50042724609375

Token 146: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0021880913991481066
    2. '(' → logprob: -6.377188205718994
    3. ',input' → logprob: -7.752188205718994
    4. 'input' → logprob: -10.502187728881836
    5. ' (' → logprob: -10.752187728881836
    6. ' input' → logprob: -12.752187728881836
    7. ' ' → logprob: -13.627187728881836
    8. ',' → logprob: -13.752187728881836
    9. '(
' → logprob: -14.627187728881836
    10. '=input' → logprob: -15.127187728881836

Token 147: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.673547563375905e-05
    2. '()' → logprob: -9.375086784362793
    3. ' ().' → logprob: -13.875086784362793
    4. '()
' → logprob: -15.000086784362793
    5. '(' → logprob: -15.125086784362793
    6. '())' → logprob: -15.875086784362793
    7. ')' → logprob: -16.750085830688477
    8. '()))' → logprob: -16.875085830688477
    9. '()?.' → logprob: -17.750085830688477
    10. '()[' → logprob: -17.875085830688477

Token 148: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002812391903717071
    2. 'strip' → logprob: -8.25028133392334
    3. ' split' → logprob: -11.12528133392334
    4. '(split' → logprob: -12.62528133392334
    5. 'rstrip' → logprob: -13.37528133392334
    6. 'spl' → logprob: -15.62528133392334
    7. '.split' → logprob: -17.250280380249023
    8. '().' → logprob: -17.750280380249023
    9. 's' → logprob: -18.000280380249023
    10. ' ' → logprob: -18.125280380249023

Token 149: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.008637258782982826
    2. '())' → logprob: -5.258637428283691
    3. '()' → logprob: -5.758637428283691
    4. '(' → logprob: -9.008637428283691
    5. '))' → logprob: -9.383637428283691
    6. '()))
' → logprob: -10.633637428283691
    7. '()));' → logprob: -12.258637428283691
    8. '())))' → logprob: -12.633637428283691
    9. ')' → logprob: -14.133637428283691
    10. '()))

' → logprob: -14.258637428283691

Token 150: 'build' (ID: 9242)
  Prédit: 'build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.013579792343080044
    2. '
' → logprob: -4.388579845428467
    3. 'print' → logprob: -7.013579845428467
    4. '<|end|>' → logprob: -9.763579368591309
    5. '```' → logprob: -9.888579368591309
    6. 'b' → logprob: -11.263579368591309
    7. '(build' → logprob: -11.513579368591309
    8. ' build' → logprob: -12.138579368591309
    9. '    
' → logprob: -12.263579368591309
    10. '
' → logprob: -12.263579368591309

Token 151: 'Max' (ID: 6499)
  Prédit: 'Max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Max' → logprob: -1.2664456789934775e-06
    2. 'M' → logprob: -13.875000953674316
    3. 'max' → logprob: -15.375000953674316
    4. 'Maximum' → logprob: -17.250001907348633
    5. '	Max' → logprob: -18.375001907348633
    6. '(Max' → logprob: -18.500001907348633
    7. '_max' → logprob: -19.125001907348633
    8. 'Ma' → logprob: -19.500001907348633
    9. 'Mass' → logprob: -20.500001907348633
    10. 'MAX' → logprob: -20.750001907348633

Token 152: 'Heap' (ID: 39287)
  Prédit: 'Heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Heap' → logprob: -2.339278580620885e-06
    2. 'He' → logprob: -13.250001907348633
    3. 'heap' → logprob: -15.250001907348633
    4. 'H' → logprob: -15.250001907348633
    5. ' Heap' → logprob: -17.250001907348633
    6. '_heap' → logprob: -18.250001907348633
    7. 'Max' → logprob: -18.375001907348633
    8. 'Heat' → logprob: -18.875001907348633
    9. '```' → logprob: -19.625001907348633
    10. 'Ho' → logprob: -19.750001907348633

Token 153: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.005237906239926815
    2. '(' → logprob: -5.255238056182861
    3. ' (' → logprob: -12.880237579345703
    4. '(
' → logprob: -14.380237579345703
    5. '(H' → logprob: -14.505237579345703
    6. '((' → logprob: -15.755237579345703
    7. '(

' → logprob: -16.630237579345703
    8. '()' → logprob: -16.755237579345703
    9. ')' → logprob: -17.130237579345703
    10. '```' → logprob: -17.255237579345703

Token 154: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. ' )' → logprob: -13.75000286102295
    3. '(' → logprob: -14.50000286102295
    4. '()' → logprob: -14.87500286102295
    5. '())' → logprob: -14.87500286102295
    6. ')
' → logprob: -15.62500286102295
    7. '))' → logprob: -16.250001907348633
    8. ')`' → logprob: -16.500001907348633
    9. ')**' → logprob: -17.625001907348633
    10. '(A' → logprob: -18.375001907348633

Token 155: 'A' (ID: 32)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005996932275593281
    2. 'for' → logprob: -5.1309967041015625
    3. '
' → logprob: -10.755996704101562
    4. '<|end|>' → logprob: -10.880996704101562
    5. '```' → logprob: -12.005996704101562
    6. ' for' → logprob: -12.255996704101562
    7. '[' → logprob: -12.380996704101562
    8. '#print' → logprob: -12.380996704101562
    9. ' print' → logprob: -13.505996704101562
    10. 'pr' → logprob: -13.755996704101562

Token 156: '.pop' (ID: 15746)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 157: '(' (ID: 7)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02325270138680935
    2. '(' → logprob: -3.7732527256011963
    3. '()
' → logprob: -12.898252487182617
    4. '()(' → logprob: -13.273252487182617
    5. '().' → logprob: -14.398252487182617
    6. ' ()' → logprob: -14.648252487182617
    7. '()`' → logprob: -14.898252487182617
    8. '()

' → logprob: -15.523252487182617
    9. '();' → logprob: -15.523252487182617
    10. '(-' → logprob: -15.523252487182617

Token 158: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02060880698263645
    2. ')' → logprob: -3.895608901977539
    3. '))' → logprob: -10.395608901977539
    4. '-' → logprob: -10.520608901977539
    5. ' ' → logprob: -11.770608901977539
    6. ' )' → logprob: -14.395608901977539
    7. ')
' → logprob: -14.520608901977539
    8. '
' → logprob: -16.39560890197754
    9. ')")' → logprob: -16.52060890197754
    10. ')-' → logprob: -16.77060890197754

Token 159: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014164687134325504
    2. ')
' → logprob: -4.264164924621582
    3. ')
' → logprob: -14.514164924621582
    4. ')

' → logprob: -15.014164924621582
    5. ' )' → logprob: -15.639164924621582
    6. '),' → logprob: -16.764163970947266
    7. 'print' → logprob: -16.889163970947266
    8. ')#' → logprob: -17.264163970947266
    9. '))' → logprob: -17.639163970947266
    10. ']' → logprob: -17.889163970947266

Token 160: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002675537718459964
    2. '
' → logprob: -6.377675533294678
    3. '<|end|>' → logprob: -7.502675533294678
    4. 'for' → logprob: -8.252676010131836
    5. ' print' → logprob: -9.627676010131836
    6. '#print' → logprob: -11.002676010131836
    7. '[' → logprob: -11.002676010131836
    8. '\n' → logprob: -11.627676010131836
    9. ' for' → logprob: -11.752676010131836
    10. ')' → logprob: -11.877676010131836

Token 161: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6953792572021484
    2. '(A' → logprob: -0.6953792572021484
    3. '('' → logprob: -6.320379257202148
    4. '("("' → logprob: -7.945379257202148
    5. '(max' → logprob: -10.320379257202148
    6. '((' → logprob: -11.195379257202148
    7. '(a' → logprob: -12.070379257202148
    8. '(*' → logprob: -12.070379257202148
    9. '()' → logprob: -12.195379257202148
    10. '("' → logprob: -12.820379257202148

Token 162: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03272673487663269
    2. 'max' → logprob: -3.907726764678955
    3. '*' → logprob: -5.282726764678955
    4. '"' → logprob: -5.782726764678955
    5. ''A' → logprob: -6.282726764678955
    6. ' '' → logprob: -7.157726764678955
    7. ' max' → logprob: -7.782726764678955
    8. 'A' → logprob: -8.032726287841797
    9. '[max' → logprob: -8.782726287841797
    10. ' ' → logprob: -9.657726287841797

Token 163: ' +' (ID: 659)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01267574355006218
    2. '.join' → logprob: -4.387675762176514
    3. ')' → logprob: -9.512675285339355
    4. '*' → logprob: -9.887675285339355
    5. '"' → logprob: -11.512675285339355
    6. ').' → logprob: -12.012675285339355
    7. 'join' → logprob: -12.137675285339355
    8. '".' → logprob: -12.262675285339355
    9. '.j' → logprob: -12.512675285339355
    10. ' .' → logprob: -12.637675285339355

Token 164: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.16458596289157867
    2. ''' → logprob: -1.9145859479904175
    3. 'str' → logprob: -5.539586067199707
    4. '"A' → logprob: -8.914586067199707
    5. ' "' → logprob: -9.039586067199707
    6. ''A' → logprob: -9.164586067199707
    7. ' '' → logprob: -10.664586067199707
    8. ''s' → logprob: -10.789586067199707
    9. 'max' → logprob: -12.539586067199707
    10. ''a' → logprob: -12.789586067199707

Token 165: ' ".' (ID: 11730)
  Prédit: '".'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '".' → logprob: -0.6608193516731262
    2. '"' → logprob: -1.0358192920684814
    3. ''' → logprob: -2.7858192920684814
    4. ' ".' → logprob: -2.9108192920684814
    5. '.' → logprob: -5.2858195304870605
    6. '.join' → logprob: -5.6608195304870605
    7. 'join' → logprob: -5.7858195304870605
    8. 'str' → logprob: -8.910819053649902
    9. ''s' → logprob: -9.035819053649902
    10. '1' → logprob: -9.035819053649902

Token 166: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -6.749814019713085e-06
    2. 'jo' → logprob: -12.375006675720215
    3. 'j' → logprob: -13.125006675720215
    4. ' join' → logprob: -15.000006675720215
    5. 'print' → logprob: -17.00000762939453
    6. '```' → logprob: -17.37500762939453
    7. '.' → logprob: -18.50000762939453
    8. '.join' → logprob: -18.50000762939453
    9. 'joins' → logprob: -18.87500762939453
    10. 'js' → logprob: -19.37500762939453

Token 167: '([' (ID: 5194)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.018165862187743187
    2. '(str' → logprob: -4.0181660652160645
    3. 'map' → logprob: -11.643165588378906
    4. '(list' → logprob: -12.268165588378906
    5. '(' → logprob: -13.143165588378906
    6. '([' → logprob: -15.018165588378906
    7. 'str' → logprob: -15.393165588378906
    8. ' map' → logprob: -17.643165588378906
    9. 'A' → logprob: -18.393165588378906
    10. '[str' → logprob: -18.893165588378906

Token 168: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -4.763666947837919e-05
    2. 'map' → logprob: -10.00004768371582
    3. ' str' → logprob: -13.25004768371582
    4. '(str' → logprob: -14.87504768371582
    5. '   ' → logprob: -16.50004768371582
    6. '	str' → logprob: -19.37504768371582
    7. '```' → logprob: -19.50004768371582
    8. '[str' → logprob: -20.00004768371582
    9. ' ' → logprob: -20.62504768371582
    10. '  ' → logprob: -21.12504768371582

Token 169: '(num' (ID: 15828)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.014531196095049381
    2. '(a' → logprob: -4.764531135559082
    3. '(i' → logprob: -5.514531135559082
    4. '(num' → logprob: -6.389531135559082
    5. '(' → logprob: -9.264531135559082
    6. '(elem' → logprob: -10.389531135559082
    7. '(A' → logprob: -10.639531135559082
    8. '(e' → logprob: -11.264531135559082
    9. '(n' → logprob: -12.014531135559082
    10. '(item' → logprob: -12.514531135559082

Token 170: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024454783648252487
    2. '(n' → logprob: -5.024454593658447
    3. '(a' → logprob: -5.274454593658447
    4. '(i' → logprob: -5.524454593658447
    5. '(x' → logprob: -5.649454593658447
    6. '(A' → logprob: -6.149454593658447
    7. '(' → logprob: -6.524454593658447
    8. '(num' → logprob: -7.149454593658447
    9. '   ' → logprob: -8.899455070495605
    10. 'for' → logprob: -9.024455070495605

Token 171: ' for' (ID: 395)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.3318200707435608
    2. 'for' → logprob: -2.456820011138916
    3. '(a' → logprob: -2.956820011138916
    4. ' for' → logprob: -3.081820011138916
    5. '(num' → logprob: -3.081820011138916
    6. ')' → logprob: -3.206820011138916
    7. '(x' → logprob: -5.206820011138916
    8. '(n' → logprob: -6.581820011138916
    9. '(' → logprob: -6.706820011138916
    10. '(i' → logprob: -6.831820011138916

Token 172: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.4701361656188965
    2. ' num' → logprob: -1.4701361656188965
    3. 'A' → logprob: -2.4701361656188965
    4. ' A' → logprob: -2.8451361656188965
    5. ' in' → logprob: -6.0951361656188965
    6. '(num' → logprob: -9.595136642456055
    7. 'in' → logprob: -9.845136642456055
    8. ' ' → logprob: -9.845136642456055
    9. ',num' → logprob: -10.970136642456055
    10. '<num' → logprob: -10.970136642456055

Token 173: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.32582196593284607
    2. ' in' → logprob: -1.5758219957351685
    3. 'A' → logprob: -2.950821876525879
    4. '(A' → logprob: -4.575821876525879
    5. ' A' → logprob: -4.825821876525879
    6. ')' → logprob: -8.200821876525879
    7. '(' → logprob: -8.575821876525879
    8. ']' → logprob: -9.700821876525879
    9. '_' → logprob: -11.450821876525879
    10. ' ' → logprob: -11.450821876525879

Token 174: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.004078401252627373
    2. ' A' → logprob: -5.504078388214111
    3. '(A' → logprob: -18.879077911376953
    4. '	A' → logprob: -19.754077911376953
    5. ' ' → logprob: -20.254077911376953
    6. '_A' → logprob: -21.129077911376953
    7. ',A' → logprob: -21.254077911376953
    8. ')' → logprob: -21.754077911376953
    9. 'a' → logprob: -22.004077911376953
    10. '
' → logprob: -22.129077911376953

Token 175: ']))' (ID: 20259)
  Prédit: ']))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.04876302182674408
    2. '])' → logprob: -3.0487630367279053
    3. ')])' → logprob: -9.423763275146484
    4. '))' → logprob: -10.173763275146484
    5. ']' → logprob: -10.548763275146484
    6. ')' → logprob: -10.673763275146484
    7. ')]' → logprob: -12.173763275146484
    8. ']))
' → logprob: -14.298763275146484
    9. '])))' → logprob: -14.548763275146484
    10. ')))' → logprob: -14.673763275146484


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 173
Tokens correctement prédits (1ère position, stricte): 86
Tokens correctement prédits (1ère position, avec adaptation): 92
Tokens correctement prédits (top 10): 153
Précision stricte (1ère position): 49.71%
Précision adaptée (1ère position): 53.18%
Précision (top 10): 88.44%
================================================================================
