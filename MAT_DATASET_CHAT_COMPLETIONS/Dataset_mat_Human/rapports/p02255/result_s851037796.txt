================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def insertsort(A, N):
    print " ".join(A)
    A = map(int,A)
    for i in range(1,N):
        v = A[i]
        j = i - 1
        while j >= 0 and A[j] > v:
            A[j+1] = A[j]
            j -= 1
        A[j+1] = v
        out_A = map(str,A)
        print " ".join(out_A)
    return A

n =  int(raw_input())
array = raw_input().split()
insertsort(array, n)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' inserts' (ID: 87900)
  → Token d'amorce (pas de prédiction)

Token 2: 'ort' (ID: 390)
  → Token d'amorce (pas de prédiction)

Token 3: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005190743831917644
    2. '_' → logprob: -8.250518798828125
    3. ' (' → logprob: -9.250518798828125
    4. '(:' → logprob: -9.750518798828125
    5. ':' → logprob: -10.875518798828125
    6. '```' → logprob: -11.000518798828125
    7. '(a' → logprob: -11.250518798828125
    8. '():' → logprob: -11.750518798828125
    9. '(space' → logprob: -11.750518798828125
    10. '(_' → logprob: -11.875518798828125

Token 4: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.716289758682251
    2. '[' → logprob: -0.966289758682251
    3. ')' → logprob: -2.091289758682251
    4. ',' → logprob: -5.341289520263672
    5. ':' → logprob: -6.466289520263672
    6. '[]):' → logprob: -8.216289520263672
    7. '[
' → logprob: -9.341289520263672
    8. '):
' → logprob: -9.466289520263672
    9. '```' → logprob: -9.591289520263672
    10. '[int' → logprob: -9.716289520263672

Token 5: ' N' (ID: 478)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4330914616584778
    2. '):' → logprob: -2.058091402053833
    3. ',' → logprob: -2.558091402053833
    4. 'n' → logprob: -2.933091402053833
    5. 'i' → logprob: -3.683091402053833
    6. '[' → logprob: -4.183091640472412
    7. 'a' → logprob: -4.308091640472412
    8. ' )' → logprob: -4.933091640472412
    9. 'A' → logprob: -5.308091640472412
    10. ' ' → logprob: -5.683091640472412

Token 6: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.027173807844519615
    2. ')' → logprob: -3.6521737575531006
    3. ':' → logprob: -7.15217399597168
    4. '```' → logprob: -10.65217399597168
    5. '):
' → logprob: -10.77717399597168
    6. ',' → logprob: -10.90217399597168
    7. '[' → logprob: -11.40217399597168
    8. ''):' → logprob: -12.52717399597168
    9. '   ' → logprob: -13.40217399597168
    10. ')：' → logprob: -13.52717399597168

Token 7: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.046755529940128326
    2. '   ' → logprob: -3.42175555229187
    3. '```' → logprob: -5.046755313873291
    4. ':
' → logprob: -5.796755313873291
    5. '\' → logprob: -7.171755313873291
    6. '    ' → logprob: -7.671755313873291
    7. ':\' → logprob: -7.921755313873291
    8. '\n' → logprob: -7.921755313873291
    9. '    
' → logprob: -8.04675579071045
    10. '
' → logprob: -8.17175579071045

Token 8: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022291114553809166
    2. ' for' → logprob: -5.02229118347168
    3. ' ' → logprob: -5.64729118347168
    4. '    ' → logprob: -5.77229118347168
    5. '```' → logprob: -5.89729118347168
    6. 'i' → logprob: -7.02229118347168
    7. ' if' → logprob: -7.14729118347168
    8. '    
' → logprob: -7.14729118347168
    9. ':' → logprob: -7.27229118347168
    10. 'for' → logprob: -7.64729118347168

Token 9: ' "' (ID: 392)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00043710620957426727
    2. '('' → logprob: -8.500436782836914
    3. '()' → logprob: -9.375436782836914
    4. '(
' → logprob: -10.125436782836914
    5. '(A' → logprob: -10.250436782836914
    6. '("("' → logprob: -11.000436782836914
    7. ' (' → logprob: -11.375436782836914
    8. '("' → logprob: -11.750436782836914
    9. 's' → logprob: -12.125436782836914
    10. '("")' → logprob: -12.250436782836914

Token 10: ' ".' (ID: 11730)
  Prédit: 'Enter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Enter' → logprob: -1.4794902801513672
    2. 'Sorting' → logprob: -1.7294902801513672
    3. 'In' → logprob: -1.8544902801513672
    4. '"' → logprob: -1.8544902801513672
    5. 'Sorted' → logprob: -2.104490280151367
    6. 'Insertion' → logprob: -2.979490280151367
    7. 'Starting' → logprob: -3.479490280151367
    8. 'Insert' → logprob: -3.979490280151367
    9. 'in' → logprob: -4.354490280151367
    10. '(' → logprob: -4.354490280151367

Token 11: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.23521484434604645
    2. 'print' → logprob: -1.6102148294448853
    3. 'write' → logprob: -5.485214710235596
    4. '.' → logprob: -6.360214710235596
    5. 'put' → logprob: -6.485214710235596
    6. 'format' → logprob: -7.235214710235596
    7. ')' → logprob: -7.735214710235596
    8. 'split' → logprob: -8.235215187072754
    9. 'printf' → logprob: -8.610215187072754
    10. 'replace' → logprob: -9.235215187072754

Token 12: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12250562012195587
    2. '([' → logprob: -2.7475056648254395
    3. '(["' → logprob: -3.8725056648254395
    4. '(['' → logprob: -4.7475056648254395
    5. '('' → logprob: -4.8725056648254395
    6. '(A' → logprob: -4.9975056648254395
    7. '("("' → logprob: -5.9975056648254395
    8. '((' → logprob: -6.1225056648254395
    9. '("' → logprob: -6.8725056648254395
    10. '(`' → logprob: -8.497505187988281

Token 13: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0029391907155513763
    2. '))' → logprob: -6.252939224243164
    3. '[' → logprob: -7.002939224243164
    4. ')))' → logprob: -9.627939224243164
    5. '   ' → logprob: -11.627939224243164
    6. ')])' → logprob: -12.252939224243164
    7. '),' → logprob: -12.877939224243164
    8. ' )' → logprob: -13.252939224243164
    9. ']' → logprob: -13.252939224243164
    10. '])' → logprob: -13.377939224243164

Token 14: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03307129070162773
    2. '[' → logprob: -4.033071517944336
    3. '(' → logprob: -5.033071517944336
    4. '   ' → logprob: -6.533071517944336
    5. '<|end|>' → logprob: -6.908071517944336
    6. '\n' → logprob: -7.033071517944336
    7. ')
' → logprob: -7.533071517944336
    8. '\' → logprob: -7.533071517944336
    9. 'def' → logprob: -7.658071517944336
    10. '()' → logprob: -7.658071517944336

Token 15: ' A' (ID: 355)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.385523796081543
    2. ')' → logprob: -1.510523796081543
    3. ' for' → logprob: -1.635523796081543
    4. '   ' → logprob: -2.010523796081543
    5. 'for' → logprob: -2.385523796081543
    6. '\n' → logprob: -2.760523796081543
    7. '    
' → logprob: -4.260523796081543
    8. ' 
' → logprob: -5.135523796081543
    9. '  
' → logprob: -5.760523796081543
    10. ')
' → logprob: -6.135523796081543

Token 16: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.010288843885064125
    2. '[:]' → logprob: -5.260288715362549
    3. '<|end|>' → logprob: -6.635288715362549
    4. '[]' → logprob: -7.260288715362549
    5. '[i' → logprob: -8.010289192199707
    6. '.' → logprob: -8.135289192199707
    7. '.sort' → logprob: -8.260289192199707
    8. 'def' → logprob: -8.385289192199707
    9. ')' → logprob: -8.510289192199707
    10. '[next' → logprob: -8.760289192199707

Token 17: ' map' (ID: 4014)
  Prédit: ' sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -1.0714850425720215
    2. ' A' → logprob: -1.1964850425720215
    3. '[' → logprob: -1.8214850425720215
    4. ' [' → logprob: -2.4464850425720215
    5. 'sorted' → logprob: -3.4464850425720215
    6. 'A' → logprob: -3.8214850425720215
    7. ' []' → logprob: -4.1964850425720215
    8. ' list' → logprob: -4.4464850425720215
    9. '[]' → logprob: -4.5714850425720215
    10. ' ' → logprob: -5.4464850425720215

Token 18: '(int' (ID: 2742)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.3246089220046997
    2. '(' → logprob: -1.3246089220046997
    3. '(int' → logprob: -4.69960880279541
    4. '(str' → logprob: -6.44960880279541
    5. '(
' → logprob: -8.32460880279541
    6. '(list' → logprob: -8.57460880279541
    7. '<|end|>' → logprob: -9.44960880279541
    8. '(None' → logprob: -11.07460880279541
    9. '(

' → logprob: -11.32460880279541
    10. 'list' → logprob: -11.32460880279541

Token 19: ',A' (ID: 59196)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18770861625671387
    2. ')' → logprob: -1.9377086162567139
    3. '(A' → logprob: -4.562708854675293
    4. '(' → logprob: -4.812708854675293
    5. ',A' → logprob: -5.437708854675293
    6. '<|end|>' → logprob: -5.937708854675293
    7. '),' → logprob: -7.812708854675293
    8. '<|end|>' → logprob: -8.312708854675293
    9. ')(' → logprob: -8.687708854675293
    10. '...' → logprob: -9.187708854675293

Token 20: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022272850037552416
    2. '[' → logprob: -9.500223159790039
    3. '))' → logprob: -9.875223159790039
    4. '),' → logprob: -10.875223159790039
    5. '   ' → logprob: -11.125223159790039
    6. ')])' → logprob: -11.500223159790039
    7. ')))' → logprob: -11.625223159790039
    8. ')`' → logprob: -11.750223159790039
    9. ')}}' → logprob: -12.250223159790039
    10. ' )' → logprob: -12.625223159790039

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1948833018541336
    2. '
' → logprob: -2.694883346557617
    3. ' for' → logprob: -3.694883346557617
    4. ')' → logprob: -4.069883346557617
    5. '[' → logprob: -4.444883346557617
    6. '    
' → logprob: -4.569883346557617
    7. 'def' → logprob: -4.944883346557617
    8. '\n' → logprob: -5.069883346557617
    9. '	for' → logprob: -5.194883346557617
    10. '<|end|>' → logprob: -5.444883346557617

Token 22: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.6017045974731445
    2. '
' → logprob: -1.8517045974731445
    3. ' for' → logprob: -1.8517045974731445
    4. '\n' → logprob: -2.2267045974731445
    5. ')' → logprob: -2.6017045974731445
    6. 'for' (adapté à ' for') → logprob: -2.6017045974731445
    7. '<|end|>' → logprob: -3.1017045974731445
    8. '    
' → logprob: -3.6017045974731445
    9. '\' → logprob: -3.6017045974731445
    10. '  
' → logprob: -4.1017045974731445

Token 23: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04202798381447792
    2. 'i' → logprob: -3.9170279502868652
    3. ' ' → logprob: -3.9170279502868652
    4. '  ' → logprob: -6.792027950286865
    5. ' range' → logprob: -10.292028427124023
    6. ' x' → logprob: -10.292028427124023
    7. ' in' → logprob: -10.792028427124023
    8. '	i' → logprob: -11.042028427124023
    9. ')' → logprob: -11.292028427124023
    10. '"' → logprob: -11.292028427124023

Token 24: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008007489144802094
    2. 'in' → logprob: -4.883007526397705
    3. ' ' → logprob: -8.258007049560547
    4. '  ' → logprob: -9.258007049560547
    5. '	in' → logprob: -10.883007049560547
    6. '   ' → logprob: -11.133007049560547
    7. '+' → logprob: -12.633007049560547
    8. '    ' → logprob: -13.383007049560547
    9. ',' → logprob: -13.383007049560547
    10. '=' → logprob: -13.508007049560547

Token 25: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0562073178589344
    2. 'range' → logprob: -2.9312074184417725
    3. ' xrange' → logprob: -7.056207180023193
    4. ' ' → logprob: -7.806207180023193
    5. '	range' → logprob: -11.056207656860352
    6. '   ' → logprob: -11.306207656860352
    7. '  ' → logprob: -11.431207656860352
    8. '(range' → logprob: -11.931207656860352
    9. '[' → logprob: -12.806207656860352
    10. ')' → logprob: -13.431207656860352

Token 26: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.226628895296017e-06
    2. ' (' → logprob: -12.250007629394531
    3. '(i' → logprob: -14.125007629394531
    4. '(N' → logprob: -14.375007629394531
    5. '(
' → logprob: -14.625007629394531
    6. '(len' → logprob: -14.875007629394531
    7. '(

' → logprob: -16.75000762939453
    8. '1' → logprob: -17.12500762939453
    9. '   ' → logprob: -17.50000762939453
    10. ' ' → logprob: -17.75000762939453

Token 27: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007628110470250249
    2. ' ' → logprob: -7.375762939453125
    3. '   ' → logprob: -9.000762939453125
    4. 'N' → logprob: -12.250762939453125
    5. 'i' → logprob: -12.875762939453125
    6. '(' → logprob: -13.500762939453125
    7. '0' → logprob: -13.875762939453125
    8. '2' → logprob: -14.125762939453125
    9. '  ' → logprob: -14.375762939453125
    10. '    ' → logprob: -14.625762939453125

Token 28: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04191230237483978
    2. ' ,' → logprob: -3.291912317276001
    3. ',len' → logprob: -6.791912078857422
    4. ' ' → logprob: -6.916912078857422
    5. '):' → logprob: -7.166912078857422
    6. ')' → logprob: -8.041912078857422
    7. ' ):' → logprob: -8.666912078857422
    8. ',N' → logprob: -9.291912078857422
    9. ' )' → logprob: -9.416912078857422
    10. ':' → logprob: -9.541912078857422

Token 29: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015894850948825479
    2. ')' → logprob: -7.251589298248291
    3. ' ):' → logprob: -8.00158977508545
    4. ':' → logprob: -8.25158977508545
    5. '):
' → logprob: -8.25158977508545
    6. '   ' → logprob: -11.50158977508545
    7. ',' → logprob: -12.00158977508545
    8. ' ' → logprob: -13.75158977508545
    9. ' )' → logprob: -13.75158977508545
    10. '+' → logprob: -14.62658977508545

Token 30: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39019402861595154
    2. '    ' → logprob: -2.0151939392089844
    3. ':' → logprob: -2.3901939392089844
    4. ' ' → logprob: -3.2651939392089844
    5. '   ' → logprob: -3.7651939392089844
    6. '     
' → logprob: -4.265193939208984
    7. ' 
' → logprob: -4.890193939208984
    8. '        
' → logprob: -5.765193939208984
    9. '<|end|>' → logprob: -5.765193939208984
    10. '        ' → logprob: -6.265193939208984

Token 31: ' v' (ID: 323)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.07003435492515564
    2. 'key' → logprob: -2.8200342655181885
    3. '       ' → logprob: -5.445034503936768
    4. '   ' → logprob: -6.445034503936768
    5. ' j' → logprob: -6.820034503936768
    6. 'j' → logprob: -7.195034503936768
    7. '    ' → logprob: -8.32003402709961
    8. '  ' → logprob: -11.69503402709961
    9. ' ' → logprob: -11.82003402709961
    10. ' for' → logprob: -12.07003402709961

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02769584394991398
    2. '=' → logprob: -3.652695894241333
    3. '=A' → logprob: -6.777695655822754
    4. 'alue' → logprob: -9.277695655822754
    5. 'al' → logprob: -10.277695655822754
    6. '=int' → logprob: -10.527695655822754
    7. ' ' → logprob: -10.652695655822754
    8. 'ALUE' → logprob: -10.902695655822754
    9. '=i' → logprob: -11.777695655822754
    10. '    ' → logprob: -11.902695655822754

Token 33: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.47412362694740295
    2. 'A' → logprob: -0.9741235971450806
    3. '    ' → logprob: -11.34912395477295
    4. ' ' → logprob: -11.34912395477295
    5. 'int' → logprob: -11.34912395477295
    6. ' int' → logprob: -12.34912395477295
    7. '	A' → logprob: -12.72412395477295
    8. '   ' → logprob: -12.97412395477295
    9. '  ' → logprob: -15.22412395477295
    10. 'a' → logprob: -15.22412395477295

Token 34: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006345203728415072
    2. '[' → logprob: -7.375634670257568
    3. '[v' → logprob: -12.25063419342041
    4. 'i' → logprob: -14.25063419342041
    5. '[j' → logprob: -14.50063419342041
    6. '[int' → logprob: -14.75063419342041
    7. '[
' → logprob: -15.12563419342041
    8. '[I' → logprob: -15.37563419342041
    9. '[s' → logprob: -15.37563419342041
    10. ' [' → logprob: -15.62563419342041

Token 35: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012873590923845768
    2. ')
' → logprob: -5.137873649597168
    3. ']' → logprob: -5.637873649597168
    4. ' )' → logprob: -5.887873649597168
    5. '       ' → logprob: -8.012873649597168
    6. '   ' → logprob: -9.512873649597168
    7. ' ]' → logprob: -9.762873649597168
    8. ' )
' → logprob: -10.012873649597168
    9. '）' → logprob: -11.012873649597168
    10. ']
' → logprob: -11.387873649597168

Token 36: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.1698024421930313
    2. 'j' (adapté à ' j') → logprob: -1.9198024272918701
    3. '    ' → logprob: -4.794802665710449
    4. ' ' → logprob: -7.544802665710449
    5. '        ' → logprob: -8.29480266571045
    6. '  ' → logprob: -9.29480266571045
    7. '     
' → logprob: -9.41980266571045
    8. '       ' → logprob: -9.54480266571045
    9. '   ' → logprob: -9.91980266571045
    10. '"' → logprob: -10.79480266571045

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023363808169960976
    2. '=' → logprob: -3.7733638286590576
    3. '=i' → logprob: -9.773364067077637
    4. ' ' → logprob: -10.148364067077637
    5. '<|end|>' → logprob: -11.648364067077637
    6. '    ' → logprob: -12.273364067077637
    7. '=j' → logprob: -12.898364067077637
    8. '=int' → logprob: -13.398364067077637
    9. '<|end|>' → logprob: -14.148364067077637
    10. '   ' → logprob: -14.273364067077637

Token 39: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2519362270832062
    2. ' i' → logprob: -1.5019361972808838
    3. '	i' → logprob: -12.376935958862305
    4. ' ' → logprob: -13.126935958862305
    5. '   ' → logprob: -15.001935958862305
    6. '<|end|>' → logprob: -15.626935958862305
    7. '    ' → logprob: -15.876935958862305
    8. '(i' → logprob: -16.251935958862305
    9. '  ' → logprob: -16.626935958862305
    10. 'I' → logprob: -17.876935958862305

Token 40: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.47426798939704895
    2. ' -' → logprob: -0.9742679595947266
    3. ' ' → logprob: -8.849267959594727
    4. '<|end|>' → logprob: -10.224267959594727
    5. '–' → logprob: -13.349267959594727
    6. '       ' → logprob: -13.599267959594727
    7. ' ' → logprob: -13.599267959594727
    8. '   ' → logprob: -13.724267959594727
    9. '<|end|>' → logprob: -13.724267959594727
    10. '  ' → logprob: -13.974267959594727

Token 41: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003023345780093223
    2. ' ' → logprob: -8.1253023147583
    3. '<|end|>' → logprob: -12.0003023147583
    4. '<|end|>' → logprob: -16.375303268432617
    5. '```' → logprob: -17.250303268432617
    6. '   ' → logprob: -18.250303268432617
    7. '0' → logprob: -18.500303268432617
    8. '...' → logprob: -18.687803268432617
    9. '۱' → logprob: -18.750303268432617
    10. '    ' → logprob: -18.750303268432617

Token 42: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. '<|end|>' → logprob: -17.12501335144043
    4. '```' → logprob: -17.50001335144043
    5. '   ' → logprob: -18.12501335144043
    6. '۱' → logprob: -19.50001335144043
    7. '  ' → logprob: -19.68751335144043
    8. '0' → logprob: -19.68751335144043
    9. '...' → logprob: -20.06251335144043
    10. '१' → logprob: -20.25001335144043

Token 43: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.2181030511856079
    2. '<|end|>' → logprob: -2.2181029319763184
    3. 'while' (adapté à ' while') → logprob: -2.5931029319763184
    4. '	while' → logprob: -5.218102931976318
    5. '       ' → logprob: -6.343102931976318
    6. '<|end|>' → logprob: -6.718102931976318
    7. ' ' → logprob: -6.968102931976318
    8. '
' → logprob: -7.593102931976318
    9. '    ' → logprob: -7.843102931976318
    10. ':' → logprob: -8.218103408813477

Token 46: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.5233114361763
    2. 'j' → logprob: -0.8983114361763
    3. ' ' → logprob: -9.773311614990234
    4. 'A' → logprob: -10.648311614990234
    5. ' A' → logprob: -10.898311614990234
    6. ' (' → logprob: -10.898311614990234
    7. '(j' → logprob: -11.023311614990234
    8. '(' → logprob: -11.023311614990234
    9. '   ' → logprob: -11.148311614990234
    10. '	j' → logprob: -11.773311614990234

Token 47: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.31332844495773315
    2. ' >=' → logprob: -1.313328504562378
    3. '>' → logprob: -10.188328742980957
    4. ' ' → logprob: -10.938328742980957
    5. ']>=' → logprob: -12.438328742980957
    6. ')>=' → logprob: -12.563328742980957
    7. ' >' → logprob: -13.063328742980957
    8. '[' → logprob: -14.063328742980957
    9. '≥' → logprob: -15.938328742980957
    10. '">' → logprob: -16.56332778930664

Token 48: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04859543219208717
    2. ' ' → logprob: -3.048595428466797
    3. '   ' → logprob: -12.861095428466797
    4. ' ' → logprob: -13.923595428466797
    5. '  ' → logprob: -14.111095428466797
    6. '1' → logprob: -14.423595428466797
    7. ' and' → logprob: -14.923595428466797
    8. '    ' → logprob: -14.986095428466797
    9. 'and' → logprob: -14.986095428466797
    10. '```' → logprob: -15.173595428466797

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005539863486774266
    2. ' ' → logprob: -7.500554084777832
    3. '1' → logprob: -15.313054084777832
    4. '   ' → logprob: -15.438054084777832
    5. '۰' → logprob: -15.813054084777832
    6. '  ' → logprob: -16.125553131103516
    7. '    ' → logprob: -17.188053131103516
    8. ' ' → logprob: -17.313053131103516
    9. '00' → logprob: -17.750553131103516
    10. '٠' → logprob: -17.875553131103516

Token 50: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.004652742296457291
    2. 'and' → logprob: -5.379652976989746
    3. ' ' → logprob: -10.879652976989746
    4. '        ' → logprob: -11.879652976989746
    5. '    ' → logprob: -12.504652976989746
    6. '       ' → logprob: -13.754652976989746
    7. '   ' → logprob: -14.754652976989746
    8. '      ' → logprob: -15.504652976989746
    9. '  ' → logprob: -15.754652976989746
    10. '<|end|>' → logprob: -15.754652976989746

Token 51: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.02685599774122238
    2. 'A' → logprob: -3.651855945587158
    3. ' v' → logprob: -7.901855945587158
    4. 'v' → logprob: -9.401856422424316
    5. ' ' → logprob: -9.526856422424316
    6. '    ' → logprob: -11.776856422424316
    7. ' ' → logprob: -11.901856422424316
    8. '	A' → logprob: -11.901856422424316
    9. '   ' → logprob: -13.026856422424316
    10. '>A' → logprob: -13.276856422424316

Token 52: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0015100972959771752
    2. '[' → logprob: -6.501510143280029
    3. '```' → logprob: -13.251509666442871
    4. ' [' → logprob: -13.376509666442871
    5. '[i' → logprob: -14.376509666442871
    6. '>[' → logprob: -14.501509666442871
    7. '   ' → logprob: -14.501509666442871
    8. '[js' → logprob: -14.501509666442871
    9. '\[' → logprob: -14.626509666442871
    10. '[...]' → logprob: -15.251509666442871

Token 53: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.07892481982707977
    2. ' >' → logprob: -2.5789248943328857
    3. ' ' → logprob: -10.703925132751465
    4. '>

' → logprob: -12.703925132751465
    5. '<|end|>' → logprob: -13.453925132751465
    6. '">' → logprob: -13.703925132751465
    7. ')' → logprob: -13.828925132751465
    8. '[' → logprob: -14.078925132751465
    9. '```' → logprob: -14.078925132751465
    10. ' >

' → logprob: -14.578925132751465

Token 54: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.10022144019603729
    2. ' >' → logprob: -2.3502213954925537
    3. ' ' → logprob: -11.600221633911133
    4. '>

' → logprob: -13.225221633911133
    5. '">' → logprob: -14.600221633911133
    6. '<|end|>' → logprob: -14.850221633911133
    7. ' >

' → logprob: -14.975221633911133
    8. '[' → logprob: -15.350221633911133
    9. '>end' → logprob: -15.350221633911133
    10. '```' → logprob: -15.475221633911133

Token 55: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4740819036960602
    2. ' v' → logprob: -0.9740818738937378
    3. '	v' → logprob: -12.474081993103027
    4. ' ' → logprob: -14.849081993103027
    5. ' ' → logprob: -14.974081993103027
    6. '    ' → logprob: -15.724081993103027
    7. '<v' → logprob: -16.59908103942871
    8. '   ' → logprob: -16.97408103942871
    9. ')v' → logprob: -17.09908103942871
    10. '=v' → logprob: -17.72408103942871

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002941686660051346
    2. ':
' → logprob: -5.877941608428955
    3. ' :' → logprob: -9.502942085266113
    4. '   ' → logprob: -10.877942085266113
    5. '):' → logprob: -11.252942085266113
    6. '):
' → logprob: -11.752942085266113
    7. '       ' → logprob: -12.002942085266113
    8. ' :
' → logprob: -12.377942085266113
    9. ':j' → logprob: -12.877942085266113
    10. ')' → logprob: -13.377942085266113

Token 57: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49999383091926575
    2. '           ' → logprob: -1.8749938011169434
    3. '
' → logprob: -2.6249938011169434
    4. ':' → logprob: -2.7499938011169434
    5. ':
' → logprob: -3.3749938011169434
    6. ' 
' → logprob: -4.749993801116943
    7. '<|end|>' → logprob: -4.874993801116943
    8. '   ' → logprob: -4.999993801116943
    9. ' ' → logprob: -5.124993801116943
    10. '        
' → logprob: -5.624993801116943

Token 58: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.6718530654907227
    2. ' A' → logprob: -0.7968530654907227
    3. '           ' → logprob: -3.4218530654907227
    4. '            ' → logprob: -6.671853065490723
    5. ' 
' → logprob: -6.671853065490723
    6. '               ' → logprob: -6.796853065490723
    7. ' ' → logprob: -7.046853065490723
    8. '            
' → logprob: -7.546853065490723
    9. '   ' → logprob: -8.671853065490723
    10. '
' → logprob: -8.796853065490723

Token 59: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00594017468392849
    2. '[' → logprob: -5.130939960479736
    3. ' [' → logprob: -12.380940437316895
    4. '1' → logprob: -12.755940437316895
    5. '[i' → logprob: -12.880940437316895
    6. '[js' → logprob: -14.880940437316895
    7. ']' → logprob: -15.005940437316895
    8. 'j' → logprob: -15.630940437316895
    9. '   ' → logprob: -15.630940437316895
    10. ' ' → logprob: -16.130939483642578

Token 60: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0018623570213094354
    2. ' +' → logprob: -6.376862525939941
    3. ']' → logprob: -9.876862525939941
    4. '1' → logprob: -10.001862525939941
    5. '=' → logprob: -10.126862525939941
    6. '>' → logprob: -11.751862525939941
    7. '+]' → logprob: -12.376862525939941
    8. '+j' → logprob: -12.501862525939941
    9. ' ' → logprob: -12.501862525939941
    10. ' ]' → logprob: -13.251862525939941

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.975612187583465e-05
    2. ' ' → logprob: -10.500029563903809
    3. ']' → logprob: -14.625029563903809
    4. '<|end|>' → logprob: -15.000029563903809
    5. '```' → logprob: -15.187529563903809
    6. '   ' → logprob: -15.187529563903809
    7. '  ' → logprob: -15.750029563903809
    8. ')' → logprob: -16.187530517578125
    9. '-' → logprob: -16.500030517578125
    10. '0' → logprob: -17.062530517578125

Token 62: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03616166114807129
    2. '=' → logprob: -3.6611616611480713
    3. ' =' → logprob: -5.036161422729492
    4. ']=' → logprob: -6.161161422729492
    5. ' ]' → logprob: -6.911161422729492
    6. ')' → logprob: -8.786161422729492
    7. '>' → logprob: -10.286161422729492
    8. ' ' → logprob: -12.286161422729492
    9. ',' → logprob: -12.911161422729492
    10. '    ' → logprob: -13.161161422729492

Token 63: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740808606147766
    2. ' =' → logprob: -0.9740808606147766
    3. '=A' → logprob: -12.599081039428711
    4. ' ' → logprob: -16.22408103942871
    5. '>' → logprob: -16.47408103942871
    6. '<|end|>' → logprob: -16.84908103942871
    7. ',' → logprob: -16.97408103942871
    8. '=

' → logprob: -17.22408103942871
    9. '＝' → logprob: -17.22408103942871
    10. ')' → logprob: -17.34908103942871

Token 64: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0052398028783500195
    2. ' A' → logprob: -5.255239963531494
    3. '	A' → logprob: -13.005239486694336
    4. '   ' → logprob: -13.630239486694336
    5. '>A' → logprob: -14.130239486694336
    6. '<|end|>' → logprob: -14.255239486694336
    7. ' ' → logprob: -14.630239486694336
    8. '           ' → logprob: -15.505239486694336
    9. '    ' → logprob: -16.380239486694336
    10. '       ' → logprob: -16.380239486694336

Token 65: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -9.448370838072151e-05
    2. '[' → logprob: -9.375094413757324
    3. 'j' → logprob: -13.250094413757324
    4. '   ' → logprob: -13.375094413757324
    5. '```' → logprob: -13.625094413757324
    6. ' ' → logprob: -13.875094413757324
    7. '<|end|>' → logprob: -14.500094413757324
    8. '[js' → logprob: -14.750094413757324
    9. '\[' → logprob: -14.750094413757324
    10. '[
' → logprob: -15.125094413757324

Token 66: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07975839823484421
    2. '           ' → logprob: -2.829758405685425
    3. ')
' → logprob: -4.079758167266846
    4. ']' → logprob: -7.704758167266846
    5. '<|end|>' → logprob: -9.454758644104004
    6. ' )' → logprob: -9.954758644104004
    7. '       ' → logprob: -10.079758644104004
    8. '```' → logprob: -10.829758644104004
    9. ' )
' → logprob: -11.454758644104004
    10. '               ' → logprob: -11.579758644104004

Token 67: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9535853862762451
    2. ' ' → logprob: -1.0785853862762451
    3. ' j' → logprob: -1.9535853862762451
    4. 'j' → logprob: -3.703585386276245
    5. '            ' → logprob: -3.703585386276245
    6. '<|end|>' → logprob: -4.078585624694824
    7. ' 
' → logprob: -4.453585624694824
    8. '[j' → logprob: -4.578585624694824
    9. '    ' → logprob: -4.703585624694824
    10. '   ' → logprob: -5.203585624694824

Token 68: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.4345858693122864
    2. ' j' → logprob: -1.0595858097076416
    3. '	j' → logprob: -5.809586048126221
    4. '           ' → logprob: -6.059586048126221
    5. '    ' → logprob: -9.059585571289062
    6. ' ' → logprob: -9.309585571289062
    7. '            ' → logprob: -9.309585571289062
    8. '   ' → logprob: -9.559585571289062
    9. '		' → logprob: -10.184585571289062
    10. '       ' → logprob: -10.809585571289062

Token 69: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.06001073122024536
    2. '-' → logprob: -3.4350106716156006
    3. ' -' → logprob: -4.18501091003418
    4. '-=' → logprob: -4.93501091003418
    5. ' =' → logprob: -6.06001091003418
    6. '=' → logprob: -6.81001091003418
    7. ' ' → logprob: -8.93501091003418
    8. '<|end|>' → logprob: -10.93501091003418
    9. '    ' → logprob: -12.56001091003418
    10. '```' → logprob: -12.68501091003418

Token 70: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028085599187761545
    2. ' ' → logprob: -5.877808570861816
    3. '   ' → logprob: -12.877808570861816
    4. '    ' → logprob: -15.127808570861816
    5. '<|end|>' → logprob: -15.502808570861816
    6. '           ' → logprob: -15.627808570861816
    7. '       ' → logprob: -15.877808570861816
    8. '  ' → logprob: -16.2528076171875
    9. '	' → logprob: -16.5028076171875
    10. ' ' → logprob: -17.1278076171875

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.463036435074173e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -15.875024795532227
    4. '<|end|>' → logprob: -17.625024795532227
    5. '  ' → logprob: -17.750024795532227
    6. '```' → logprob: -18.000024795532227
    7. '       ' → logprob: -18.375024795532227
    8. '    ' → logprob: -18.812524795532227
    9. '           ' → logprob: -19.062524795532227
    10. '۱' → logprob: -19.625024795532227

Token 72: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18545487523078918
    2. ' A' → logprob: -2.685454845428467
    3. ' 
' → logprob: -3.560454845428467
    4. '<|end|>' → logprob: -3.935454845428467
    5. ')' → logprob: -4.185454845428467
    6. ' )' → logprob: -4.310454845428467
    7. '    ' → logprob: -5.560454845428467
    8. '[' → logprob: -5.685454845428467
    9. '   ' → logprob: -5.810454845428467
    10. ' ]' → logprob: -6.060454845428467

Token 73: '       ' (ID: 309)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.3756349980831146
    2. ' 
' → logprob: -2.0006349086761475
    3. '       ' → logprob: -2.8756349086761475
    4. ' ' → logprob: -3.2506349086761475
    5. 'A' → logprob: -4.000635147094727
    6. '   ' → logprob: -4.375635147094727
    7. '```' → logprob: -4.750635147094727
    8. '
' → logprob: -4.875635147094727
    9. '<|end|>' → logprob: -5.000635147094727
    10. '           ' → logprob: -5.000635147094727

Token 74: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.056773439049720764
    2. 'A' (adapté à ' A') → logprob: -2.9317734241485596
    3. ' ' → logprob: -6.806773662567139
    4. ' 
' → logprob: -8.18177318572998
    5. '   ' → logprob: -8.68177318572998
    6. '       ' → logprob: -9.55677318572998
    7. ')' → logprob: -10.18177318572998
    8. '    ' → logprob: -10.55677318572998
    9. '  
' → logprob: -10.55677318572998
    10. '    
' → logprob: -10.68177318572998

Token 75: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.002811059355735779
    2. '[' → logprob: -5.877810955047607
    3. '[js' → logprob: -12.502811431884766
    4. '[i' → logprob: -14.627811431884766
    5. '```' → logprob: -15.002811431884766
    6. '<|end|>' → logprob: -15.252811431884766
    7. '[++' → logprob: -15.502811431884766
    8. '[
' → logprob: -15.627811431884766
    9. '+' → logprob: -15.752811431884766
    10. '[J' → logprob: -16.252811431884766

Token 76: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.931863051955588e-05
    2. ' +' → logprob: -9.750059127807617
    3. '+]' → logprob: -14.375059127807617
    4. ']+' → logprob: -15.875059127807617
    5. '＋' → logprob: -15.875059127807617
    6. '+
' → logprob: -16.750059127807617
    7. '+j' → logprob: -17.000059127807617
    8. '+"]' → logprob: -17.750059127807617
    9. '+</' → logprob: -17.750059127807617
    10. '<|end|>' → logprob: -18.000059127807617

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.3358446166384965e-05
    2. '+' → logprob: -10.125053405761719
    3. ' ' → logprob: -11.375053405761719
    4. '<|end|>' → logprob: -14.000053405761719
    5. ' +' → logprob: -14.750053405761719
    6. '```' → logprob: -15.500053405761719
    7. ')' → logprob: -16.00005340576172
    8. '`' → logprob: -16.37505340576172
    9. '[' → logprob: -16.75005340576172
    10. '2' → logprob: -17.50005340576172

Token 78: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012149104848504066
    2. '=' → logprob: -4.762149333953857
    3. ']=' → logprob: -5.762149333953857
    4. ' ]' → logprob: -8.1371488571167
    5. ' =' → logprob: -9.3871488571167
    6. ')' → logprob: -12.1371488571167
    7. '<|end|>' → logprob: -14.3871488571167
    8. ']+=' → logprob: -15.5121488571167
    9. ')=' → logprob: -15.6371488571167
    10. ']
' → logprob: -15.8871488571167

Token 79: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602250337600708
    2. ' =' → logprob: -1.9102250337600708
    3. ' =
' → logprob: -14.910224914550781
    4. '=

' → logprob: -15.535224914550781
    5. '=
' → logprob: -16.41022491455078
    6. '＝' → logprob: -16.66022491455078
    7. '<|end|>' → logprob: -17.03522491455078
    8. ' ' → logprob: -17.28522491455078
    9. ' =)' → logprob: -17.28522491455078
    10. '```' → logprob: -17.66022491455078

Token 80: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00861468818038702
    2. ' v' → logprob: -4.758614540100098
    3. '	v' → logprob: -15.758614540100098
    4. ' ' → logprob: -19.258615493774414
    5. ' ' → logprob: -19.633615493774414
    6. '$v' → logprob: -20.508615493774414
    7. 'vj' → logprob: -20.758615493774414
    8. '<v' → logprob: -20.883615493774414
    9. '_v' → logprob: -21.133615493774414
    10. '<|end|>' → logprob: -21.258615493774414

Token 81: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.230104461312294
    2. ' ' → logprob: -2.855104446411133
    3. '<|end|>' → logprob: -2.980104446411133
    4. '\n' → logprob: -3.105104446411133
    5. ' 
' → logprob: -4.105104446411133
    6. '    
' → logprob: -4.605104446411133
    7. '    ' → logprob: -5.105104446411133
    8. '\' → logprob: -5.605104446411133
    9. '       ' → logprob: -5.730104446411133
    10. '  
' → logprob: -6.105104446411133

Token 83: ' out' (ID: 842)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.32657307386398315
    2. '   ' → logprob: -1.326573133468628
    3. ' print' → logprob: -4.826572895050049
    4. '       ' → logprob: -5.951572895050049
    5. '    
' → logprob: -6.826572895050049
    6. '	print' → logprob: -7.076572895050049
    7. '    ' → logprob: -8.951573371887207
    8. '        
' → logprob: -9.076573371887207
    9. '```' → logprob: -9.076573371887207
    10. '
' → logprob: -9.701573371887207

Token 84: '_A' (ID: 6829)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.1390225738286972
    2. 'p' → logprob: -2.3890225887298584
    3. 'pu' → logprob: -4.014022350311279
    4. 'puts' → logprob: -4.389022350311279
    5. '=' → logprob: -6.389022350311279
    6. ' =' → logprob: -6.639022350311279
    7. '_put' → logprob: -7.139022350311279
    8. '.put' → logprob: -7.139022350311279
    9. '   ' → logprob: -7.764022350311279
    10. ' ' → logprob: -7.889022350311279

Token 85: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4251316785812378
    2. '[' → logprob: -1.5501316785812378
    3. ' =' → logprob: -2.3001317977905273
    4. '[:]' → logprob: -3.6751317977905273
    5. ')' → logprob: -6.050131797790527
    6. '(' → logprob: -6.425131797790527
    7. '[]' → logprob: -6.925131797790527
    8. '[:' → logprob: -7.050131797790527
    9. '.' → logprob: -7.550131797790527
    10. '=[]' → logprob: -8.300131797790527

Token 86: ' map' (ID: 4014)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.543610155582428
    2. 'map' → logprob: -2.043610095977783
    3. '"' → logprob: -2.168610095977783
    4. 'A' → logprob: -2.293610095977783
    5. 'list' → logprob: -3.418610095977783
    6. '[A' → logprob: -4.543610095977783
    7. ''' → logprob: -5.168610095977783
    8. ' [' → logprob: -5.293610095977783
    9. '[str' → logprob: -5.293610095977783
    10. '[list' → logprob: -5.418610095977783

Token 87: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.6396386027336121
    2. '(int' → logprob: -1.0146386623382568
    3. '(lambda' → logprob: -2.639638662338257
    4. '(' → logprob: -3.264638662338257
    5. 'str' → logprob: -8.139638900756836
    6. 'int' → logprob: -11.139638900756836
    7. ' (' → logprob: -11.139638900756836
    8. '[int' → logprob: -11.264638900756836
    9. '(print' → logprob: -11.639638900756836
    10. ' str' → logprob: -11.764638900756836

Token 88: ',A' (ID: 59196)
  Prédit: ',A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',A' → logprob: -0.09244001656770706
    2. ',' → logprob: -2.467440128326416
    3. '(A' → logprob: -5.717440128326416
    4. ' ,' → logprob: -9.842439651489258
    5. ',(' → logprob: -10.092439651489258
    6. '(' → logprob: -10.342439651489258
    7. ',[' → logprob: -10.467439651489258
    8. ')' → logprob: -11.467439651489258
    9. 'A' → logprob: -12.217439651489258
    10. ',List' → logprob: -12.217439651489258

Token 89: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001958251930773258
    2. ')
' → logprob: -6.25195837020874
    3. '       ' → logprob: -10.626957893371582
    4. '   ' → logprob: -13.126957893371582
    5. ')
' → logprob: -13.626957893371582
    6. ' )' → logprob: -14.376957893371582
    7. ')

' → logprob: -15.001957893371582
    8. '[' → logprob: -15.501957893371582
    9. ']' → logprob: -15.626957893371582
    10. '           ' → logprob: -15.626957893371582

Token 90: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6965636014938354
    2. '   ' → logprob: -1.3215636014938354
    3. '<|end|>' → logprob: -2.446563720703125
    4. '
' → logprob: -2.946563720703125
    5. '    
' → logprob: -3.446563720703125
    6. '        
' → logprob: -3.821563720703125
    7. '[' → logprob: -5.196563720703125
    8. '  
' → logprob: -5.321563720703125
    9. 'print' → logprob: -5.446563720703125
    10. '<|end|>' → logprob: -5.696563720703125

Token 91: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.5218295454978943
    2. '   ' → logprob: -1.396829605102539
    3. '       ' → logprob: -2.021829605102539
    4. ' print' → logprob: -4.896829605102539
    5. '    
' → logprob: -5.646829605102539
    6. ')' → logprob: -5.771829605102539
    7. '"' → logprob: -6.396829605102539
    8. '        
' → logprob: -6.396829605102539
    9. '	print' → logprob: -6.521829605102539
    10. '    ' → logprob: -6.521829605102539

Token 92: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0060862768441438675
    2. ' "' → logprob: -5.381086349487305
    3. ''' → logprob: -7.131086349487305
    4. '(' → logprob: -7.756086349487305
    5. '("' → logprob: -8.506086349487305
    6. ' '' → logprob: -11.881086349487305
    7. '('' → logprob: -11.881086349487305
    8. ' ' → logprob: -12.131086349487305
    9. 'out' → logprob: -12.381086349487305
    10. '`' → logprob: -12.631086349487305

Token 93: ' ".' (ID: 11730)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.08541938662528992
    2. ' "' → logprob: -3.2104194164276123
    3. ' ".' → logprob: -3.3354194164276123
    4. '".' → logprob: -5.460419178009033
    5. ''' → logprob: -7.335419178009033
    6. '.' → logprob: -7.585419178009033
    7. ' .' → logprob: -8.835419654846191
    8. ' ' → logprob: -9.335419654846191
    9. ' ").' → logprob: -9.960419654846191
    10. 'out' → logprob: -10.460419654846191

Token 94: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -3.869639476761222e-05
    2. '.' → logprob: -11.000039100646973
    3. '.join' → logprob: -11.375039100646973
    4. '".' → logprob: -12.250039100646973
    5. 'jo' → logprob: -12.625039100646973
    6. 'j' → logprob: -14.375039100646973
    7. 'print' → logprob: -15.125039100646973
    8. ''.' → logprob: -15.250039100646973
    9. '(join' → logprob: -15.500039100646973
    10. ' join' → logprob: -15.750039100646973

Token 95: '(out' (ID: 20090)
  Prédit: '(out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(out' → logprob: -0.00043221889063715935
    2. '(' → logprob: -7.750432014465332
    3. 'out' → logprob: -14.000432014465332
    4. ' (' → logprob: -14.750432014465332
    5. '(
' → logprob: -16.75043296813965
    6. ' out' → logprob: -17.50043296813965
    7. '(open' → logprob: -17.62543296813965
    8. ',out' → logprob: -17.62543296813965
    9. '(outfile' → logprob: -17.62543296813965
    10. '```' → logprob: -18.00043296813965

Token 96: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -3.650518920039758e-06
    2. 'A' → logprob: -12.875003814697266
    3. ')' → logprob: -14.500003814697266
    4. '_' → logprob: -15.875003814697266
    5. '(A' → logprob: -15.875003814697266
    6. ')_' → logprob: -16.500003814697266
    7. '(_' → logprob: -17.125003814697266
    8. '```' → logprob: -17.250003814697266
    9. '(' → logprob: -17.875003814697266
    10. '_)' → logprob: -17.875003814697266

Token 97: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ')
' → logprob: -13.750001907348633
    3. '   ' → logprob: -14.625001907348633
    4. '       ' → logprob: -16.000001907348633
    5. ' )' → logprob: -16.000001907348633
    6. '))' → logprob: -16.875001907348633
    7. '")' → logprob: -17.375001907348633
    8. ')}' → logprob: -18.375001907348633
    9. '),' → logprob: -18.750001907348633
    10. '<|end|>' → logprob: -18.750001907348633

Token 98: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 100: ' A' (ID: 355)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 101: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: 'n' (ID: 77)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32282257080078125
    2. ' ' → logprob: -1.9478225708007812
    3. '=' → logprob: -2.5728225708007812
    4. '<|end|>' → logprob: -2.9478225708007812
    5. ')' → logprob: -6.697822570800781
    6. ',' → logprob: -7.322822570800781
    7. '_' → logprob: -7.322822570800781
    8. '<|end|>' → logprob: -7.697822570800781
    9. '[' → logprob: -8.072822570800781
    10. '=int' → logprob: -8.072822570800781

Token 104: ' ' (ID: 220)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.16095192730426788
    2. 'int' → logprob: -1.9109519720077515
    3. ' input' → logprob: -7.660952091217041
    4. 'input' → logprob: -8.785951614379883
    5. '10' → logprob: -10.035951614379883
    6. ' ' → logprob: -10.285951614379883
    7. '5' → logprob: -11.910951614379883
    8. ' len' → logprob: -12.785951614379883
    9. '[int' → logprob: -12.910951614379883
    10. 'raw' → logprob: -12.910951614379883

Token 105: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0009914840338751674
    2. 'input' → logprob: -7.500991344451904
    3. ' int' → logprob: -7.750991344451904
    4. 'raw' → logprob: -12.625991821289062
    5. '10' → logprob: -13.125991821289062
    6. '5' → logprob: -13.625991821289062
    7. ' input' → logprob: -14.500991821289062
    8. '3' → logprob: -15.000991821289062
    9. '[int' → logprob: -15.250991821289062
    10. 'len' → logprob: -16.000991821289062

Token 106: '(raw' (ID: 46707)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.25225502252578735
    2. '(' → logprob: -1.5022549629211426
    3. '(raw' → logprob: -8.7522554397583
    4. ' (' → logprob: -9.3772554397583
    5. 'input' → logprob: -9.6272554397583
    6. '('' → logprob: -12.0022554397583
    7. '(
' → logprob: -12.5022554397583
    8. 'raw' → logprob: -13.0022554397583
    9. '("' → logprob: -13.2522554397583
    10. '(int' → logprob: -14.3772554397583

Token 107: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.002065564738586545
    2. '_' → logprob: -6.627065658569336
    3. '(' → logprob: -7.877065658569336
    4. 'input' → logprob: -8.127065658569336
    5. ' input' → logprob: -10.752065658569336
    6. '_in' → logprob: -11.627065658569336
    7. '(input' → logprob: -11.877065658569336
    8. '("_' → logprob: -12.252065658569336
    9. ')' → logprob: -12.877065658569336
    10. ' _' → logprob: -12.877065658569336

Token 108: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0761830061674118
    2. '()' → logprob: -2.7011830806732178
    3. '(' → logprob: -5.451182842254639
    4. '('' → logprob: -7.076182842254639
    5. ')' → logprob: -7.576182842254639
    6. '("("' → logprob: -8.326183319091797
    7. '("' → logprob: -9.451183319091797
    8. '()>' → logprob: -9.951183319091797
    9. '();)' → logprob: -9.951183319091797
    10. '(">' → logprob: -10.701183319091797

Token 109: 'array' (ID: 3361)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.08445391803979874
    2. ' A' → logprob: -2.584453821182251
    3. '<|end|>' → logprob: -6.08445405960083
    4. 's' → logprob: -6.70945405960083
    5. 'a' → logprob: -7.08445405960083
    6. 'n' → logprob: -8.209453582763672
    7. ' 
' → logprob: -8.709453582763672
    8. '
' → logprob: -8.709453582763672
    9. '  
' → logprob: -8.834453582763672
    10. 'arr' → logprob: -9.709453582763672

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34368696808815
    2. '(' → logprob: -1.8436869382858276
    3. '=' → logprob: -2.093687057495117
    4. 's' → logprob: -5.343687057495117
    5. '[' → logprob: -6.343687057495117
    6. '_' → logprob: -6.593687057495117
    7. '()' → logprob: -8.093687057495117
    8. '[:]' → logprob: -8.218687057495117
    9. '   ' → logprob: -8.718687057495117
    10. '  ' → logprob: -9.593687057495117

Token 111: ' raw' (ID: 11428)
  Prédit: ' raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raw' → logprob: -0.2812601327896118
    2. 'raw' → logprob: -1.4062601327896118
    3. ' ' → logprob: -10.53126049041748
    4. '	raw' → logprob: -10.65626049041748
    5. ' [' → logprob: -11.03126049041748
    6. ' list' → logprob: -11.53126049041748
    7. '(raw' → logprob: -11.78126049041748
    8. '[' → logprob: -11.90626049041748
    9. ' map' → logprob: -12.53126049041748
    10. '[]' → logprob: -12.53126049041748

Token 112: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -4.906711546937004e-05
    2. '_' → logprob: -11.000048637390137
    3. 'input' → logprob: -11.500048637390137
    4. '()' → logprob: -11.750048637390137
    5. '_inputs' → logprob: -12.375048637390137
    6. ' _' → logprob: -13.375048637390137
    7. '_array' → logprob: -13.500048637390137
    8. 'Input' → logprob: -13.625048637390137
    9. '_line' → logprob: -14.000048637390137
    10. '_in' → logprob: -14.000048637390137

Token 113: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10426650941371918
    2. '(' → logprob: -2.354266405105591
    3. '("("' → logprob: -5.97926664352417
    4. '().' → logprob: -7.35426664352417
    5. '('' → logprob: -8.104266166687012
    6. '("")' → logprob: -8.604266166687012
    7. '()>' → logprob: -9.854266166687012
    8. '())' → logprob: -9.979266166687012
    9. '```' → logprob: -9.979266166687012
    10. ')' → logprob: -10.104266166687012

Token 114: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0067836930975317955
    2. 'strip' → logprob: -5.006783485412598
    3. 'rstrip' → logprob: -10.131783485412598
    4. ' split' → logprob: -10.756783485412598
    5. '(split' → logprob: -12.006783485412598
    6. 'spl' → logprob: -14.006783485412598
    7. ' strip' → logprob: -16.006784439086914
    8. 's' → logprob: -16.506784439086914
    9. '.split' → logprob: -17.256784439086914
    10. 'replace' → logprob: -18.006784439086914

Token 115: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.018457308411598206
    2. '(' → logprob: -4.018457412719727
    3. '()
' → logprob: -8.393457412719727
    4. '(
' → logprob: -11.268457412719727
    5. '<|end|>' → logprob: -11.268457412719727
    6. ' ()' → logprob: -11.518457412719727
    7. '()\' → logprob: -11.893457412719727
    8. '()

' → logprob: -12.018457412719727
    9. '```' → logprob: -12.518457412719727
    10. '();' → logprob: -12.643457412719727

Token 116: 'in' (ID: 258)
  Prédit: 'in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.06484692543745041
    2. 'A' → logprob: -2.939846992492676
    3. 'array' → logprob: -5.314846992492676
    4. 'sorted' → logprob: -6.439846992492676
    5. 'n' → logprob: -7.439846992492676
    6. 'for' → logprob: -7.814846992492676
    7. 's' → logprob: -7.939846992492676
    8. 'arr' → logprob: -7.939846992492676
    9. 'result' → logprob: -8.064846992492676
    10. 'insert' → logprob: -8.064846992492676

Token 117: 'serts' (ID: 67621)
  Prédit: 'serts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'serts' → logprob: -0.014109907671809196
    2. 's' → logprob: -4.389110088348389
    3. 'sert' → logprob: -6.514110088348389
    4. 'ser' → logprob: -10.38910961151123
    5. '```' → logprob: -10.88910961151123
    6. 'puts' → logprob: -10.88910961151123
    7. 'erts' → logprob: -11.26410961151123
    8. 'se' → logprob: -11.76410961151123
    9. '[' → logprob: -12.01410961151123
    10. 'sertion' → logprob: -12.13910961151123

Token 118: 'ort' (ID: 390)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.001210591522976756
    2. 'ort' → logprob: -7.376210689544678
    3. 's' → logprob: -7.501210689544678
    4. '_sort' → logprob: -11.12621021270752
    5. 'so' → logprob: -11.25121021270752
    6. 'Sort' → logprob: -14.37621021270752
    7. 'o' → logprob: -14.37621021270752
    8. 'sert' → logprob: -14.50121021270752
    9. ' sort' → logprob: -14.62621021270752
    10. '	sort' → logprob: -15.00121021270752

Token 119: '(array' (ID: 13176)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6932357549667358
    2. '(array' → logprob: -0.6932357549667358
    3. '(arr' → logprob: -10.693235397338867
    4. '(
' → logprob: -10.818235397338867
    5. '(Array' → logprob: -10.943235397338867
    6. '(A' → logprob: -11.818235397338867
    7. ' (' → logprob: -11.943235397338867
    8. '((' → logprob: -12.818235397338867
    9. '(Arrays' → logprob: -13.193235397338867
    10. '(n' → logprob: -13.443235397338867

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25211548805236816
    2. ',n' → logprob: -1.5021154880523682
    3. ')' → logprob: -9.252115249633789
    4. '(n' → logprob: -10.127115249633789
    5. ' ,' → logprob: -10.502115249633789
    6. ',N' → logprob: -12.002115249633789
    7. ')n' → logprob: -12.002115249633789
    8. ',
' → logprob: -12.502115249633789
    9. 'n' → logprob: -13.627115249633789
    10. '[n' → logprob: -14.502115249633789

Token 121: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.048590321093797684
    2. ' n' → logprob: -3.0485904216766357
    3. ')n' → logprob: -13.173590660095215
    4. '	n' → logprob: -14.298590660095215
    5. ')' → logprob: -15.548590660095215
    6. ' ' → logprob: -16.6735897064209
    7. ' 
' → logprob: -17.4235897064209
    8. ' ' → logprob: -17.9235897064209
    9. '_n' → logprob: -18.1735897064209
    10. 'len' → logprob: -18.2985897064209

Token 122: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. ' )' → logprob: -13.12500286102295
    3. ')
' → logprob: -15.12500286102295
    4. '[' → logprob: -17.000001907348633
    5. '))' → logprob: -17.125001907348633
    6. '')' → logprob: -17.625001907348633
    7. ')

' → logprob: -18.375001907348633
    8. ')`' → logprob: -18.625001907348633
    9. '(' → logprob: -19.375001907348633
    10. ')#' → logprob: -19.500001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 120
Tokens correctement prédits (1ère position, stricte): 49
Tokens correctement prédits (1ère position, avec adaptation): 52
Tokens correctement prédits (top 10): 92
Précision stricte (1ère position): 40.83%
Précision adaptée (1ère position): 43.33%
Précision (top 10): 76.67%
================================================================================
