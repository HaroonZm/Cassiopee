================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def insertionSort(A):
    print " ".join(map(str, A))
    for i in range(1, len(A)):
        temp = A[i]
        j = i-1
        while j >= 0 and A[j] > temp:
            A[j+1] = A[j]
            j -= 1
        A[j+1] = temp
        print " ".join(map(str, A))

N = int(raw_input())
A = map(int, raw_input().split())

insertionSort(A)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' insertion' (ID: 68881)
  → Token d'amorce (pas de prédiction)

Token 2: 'Sort' (ID: 11602)
  → Token d'amorce (pas de prédiction)

Token 3: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00028052396373823285
    2. '_' → logprob: -8.750280380249023
    3. '```' → logprob: -10.125280380249023
    4. ' (' → logprob: -10.625280380249023
    5. '(:' → logprob: -11.000280380249023
    6. ':' → logprob: -11.500280380249023
    7. '():' → logprob: -12.375280380249023
    8. '(_:' → logprob: -12.500280380249023
    9. '(
' → logprob: -13.125280380249023
    10. '(_' → logprob: -13.125280380249023

Token 4: '):
' (ID: 1883)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11801737546920776
    2. '):' → logprob: -2.4930174350738525
    3. ')' → logprob: -3.6180174350738525
    4. ',' → logprob: -7.493017196655273
    5. '[]):' → logprob: -8.118017196655273
    6. '[
' → logprob: -8.618017196655273
    7. ':' → logprob: -9.118017196655273
    8. '<|end|>' → logprob: -9.368017196655273
    9. '[A' → logprob: -9.493017196655273
    10. '[i' → logprob: -9.743017196655273

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010485987178981304
    2. '   ' → logprob: -5.385486125946045
    3. '```' → logprob: -5.885486125946045
    4. ':
' → logprob: -6.760486125946045
    5. '    
' → logprob: -8.010485649108887
    6. '():' → logprob: -8.135485649108887
    7. '  
' → logprob: -8.385485649108887
    8. '":' → logprob: -8.760485649108887
    9. '':' → logprob: -9.010485649108887
    10. '' → logprob: -9.635485649108887

Token 6: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32356613874435425
    2. 'n' → logprob: -2.073566198348999
    3. '```' → logprob: -2.573566198348999
    4. ' for' → logprob: -3.948566198348999
    5. '\n' → logprob: -4.19856595993042
    6. '
' → logprob: -4.69856595993042
    7. 'for' → logprob: -5.07356595993042
    8. ' n' → logprob: -5.32356595993042
    9. '    
' → logprob: -5.57356595993042
    10. 'i' → logprob: -5.69856595993042

Token 7: ' "' (ID: 392)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010599602246657014
    2. '(A' → logprob: -7.6260600090026855
    3. '('' → logprob: -8.376059532165527
    4. '()' → logprob: -8.751059532165527
    5. '("' → logprob: -9.501059532165527
    6. '("("' → logprob: -10.251059532165527
    7. ' (' → logprob: -10.876059532165527
    8. '("")' → logprob: -11.251059532165527
    9. '(
' → logprob: -11.251059532165527
    10. '(`' → logprob: -12.376059532165527

Token 8: ' ".' (ID: 11730)
  Prédit: 'Sorting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Sorting' → logprob: -0.9855016469955444
    2. 'Enter' → logprob: -1.7355016469955444
    3. 'In' → logprob: -2.110501766204834
    4. 'Starting' → logprob: -2.485501766204834
    5. '"' → logprob: -2.735501766204834
    6. 'Sorted' → logprob: -2.860501766204834
    7. '(' → logprob: -3.235501766204834
    8. 'Insertion' → logprob: -3.735501766204834
    9. 'Insert' → logprob: -4.860501766204834
    10. 'Initial' → logprob: -5.110501766204834

Token 9: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.3094918429851532
    2. 'print' → logprob: -2.1844918727874756
    3. 'write' → logprob: -3.0594918727874756
    4. 'split' → logprob: -3.1844918727874756
    5. 'put' → logprob: -3.4344918727874756
    6. ')' → logprob: -3.9344918727874756
    7. 'sort' → logprob: -5.4344916343688965
    8. '(' → logprob: -6.3094916343688965
    9. 'replace' → logprob: -7.0594916343688965
    10. 'format' → logprob: -7.4344916343688965

Token 10: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2859441339969635
    2. '(A' → logprob: -1.9109441041946411
    3. '(["' → logprob: -3.1609442234039307
    4. '([' → logprob: -3.5359442234039307
    5. '(['' → logprob: -4.035943984985352
    6. '('' → logprob: -4.910943984985352
    7. '("("' → logprob: -6.910943984985352
    8. '("' → logprob: -7.035943984985352
    9. '((' → logprob: -7.160943984985352
    10. '(str' → logprob: -8.285943984985352

Token 11: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.006203819531947374
    2. 'str' → logprob: -5.131203651428223
    3. '(' → logprob: -9.006203651428223
    4. '(lambda' → logprob: -9.506203651428223
    5. ' str' → logprob: -10.381203651428223
    6. '(int' → logprob: -10.631203651428223
    7. '(list' → logprob: -12.256203651428223
    8. '=str' → logprob: -12.256203651428223
    9. 'list' → logprob: -12.381203651428223
    10. '(len' → logprob: -12.631203651428223

Token 12: ',' (ID: 11)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0030452122446149588
    2. ',' → logprob: -6.253045082092285
    3. '(' → logprob: -7.128045082092285
    4. ',A' → logprob: -8.378045082092285
    5. ')' → logprob: -9.753045082092285
    6. '),' → logprob: -11.128045082092285
    7. '<|end|>' → logprob: -13.128045082092285
    8. '(
' → logprob: -13.753045082092285
    9. ' ,' → logprob: -13.878045082092285
    10. '(a' → logprob: -14.003045082092285

Token 13: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5759512186050415
    2. ' A' → logprob: -0.8259512186050415
    3. '(A' → logprob: -12.45095157623291
    4. '[A' → logprob: -12.95095157623291
    5. '	A' → logprob: -12.95095157623291
    6. ',A' → logprob: -13.70095157623291
    7. ' sorted' → logprob: -15.20095157623291
    8. '<A' → logprob: -15.20095157623291
    9. 'sorted' → logprob: -15.20095157623291
    10. '>A' → logprob: -15.32595157623291

Token 14: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.015341748483479023
    2. ')))' → logprob: -4.390341758728027
    3. ')' → logprob: -5.890341758728027
    4. ' ))' → logprob: -10.640341758728027
    5. '[' → logprob: -10.890341758728027
    6. '   ' → logprob: -11.765341758728027
    7. '))))' → logprob: -12.640341758728027
    8. ' ' → logprob: -13.265341758728027
    9. ']))' → logprob: -13.265341758728027
    10. '))
' → logprob: -14.390341758728027

Token 15: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9397018551826477
    2. '   ' → logprob: -1.439701795578003
    3. 'for' → logprob: -1.939701795578003
    4. ' for' → logprob: -2.064701795578003
    5. '<|end|>' → logprob: -3.064701795578003
    6. '    
' → logprob: -3.814701795578003
    7. '```' → logprob: -4.689702033996582
    8. '\n' → logprob: -5.689702033996582
    9. 'n' → logprob: -5.814702033996582
    10. 'def' → logprob: -5.814702033996582

Token 16: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4214429259300232
    2. ' for' → logprob: -1.421442985534668
    3. '   ' → logprob: -2.421442985534668
    4. '```' → logprob: -5.046442985534668
    5. '
' → logprob: -6.046442985534668
    6. '    
' → logprob: -6.546442985534668
    7. 'n' → logprob: -7.421442985534668
    8. '\n' → logprob: -7.921442985534668
    9. '	for' → logprob: -8.046442985534668
    10. ')' → logprob: -8.171442985534668

Token 17: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04593167454004288
    2. ' ' → logprob: -3.170931577682495
    3. 'i' → logprob: -6.420931816101074
    4. '  ' → logprob: -6.670931816101074
    5. '   ' → logprob: -11.795931816101074
    6. ' in' → logprob: -12.170931816101074
    7. ' range' → logprob: -12.170931816101074
    8. '	i' → logprob: -12.420931816101074
    9. '    ' → logprob: -12.670931816101074
    10. ' ' → logprob: -13.545931816101074

Token 18: ' in' (ID: 306)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2127529382705688
    2. ' in' → logprob: -1.8377529382705688
    3. '   ' → logprob: -2.0877528190612793
    4. ' i' → logprob: -2.2127528190612793
    5. '    ' → logprob: -2.5877528190612793
    6. '[' → logprob: -2.7127528190612793
    7. '<|end|>' → logprob: -2.8377528190612793
    8. '=' → logprob: -3.5877528190612793
    9. ' =' → logprob: -3.7127528190612793
    10. '  ' → logprob: -3.8377528190612793

Token 19: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.003835471346974373
    2. 'range' → logprob: -6.003835678100586
    3. ' ' → logprob: -6.628835678100586
    4. ' xrange' → logprob: -10.503835678100586
    5. '  ' → logprob: -11.878835678100586
    6. '	range' → logprob: -13.378835678100586
    7. '   ' → logprob: -14.253835678100586
    8. ' in' → logprob: -15.378835678100586
    9. '1' → logprob: -15.503835678100586
    10. '    ' → logprob: -16.753835678100586

Token 20: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001446611131541431
    2. ' (' → logprob: -9.000144958496094
    3. '(len' → logprob: -10.875144958496094
    4. '(i' → logprob: -13.250144958496094
    5. '(
' → logprob: -15.375144958496094
    6. '   ' → logprob: -15.875144958496094
    7. ' ' → logprob: -16.875144958496094
    8. '1' → logprob: -17.500144958496094
    9. '(

' → logprob: -17.625144958496094
    10. '```' → logprob: -17.625144958496094

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.921253225300461e-05
    2. ' ' → logprob: -10.000069618225098
    3. '   ' → logprob: -10.875069618225098
    4. 'i' → logprob: -12.875069618225098
    5. 'len' → logprob: -13.875069618225098
    6. '       ' → logprob: -15.500069618225098
    7. '(' → logprob: -15.625069618225098
    8. '0' → logprob: -15.750069618225098
    9. '```' → logprob: -15.812569618225098
    10. ' i' → logprob: -16.18756866455078

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003412490012124181
    2. ' ,' → logprob: -5.75341272354126
    3. ',len' → logprob: -9.128412246704102
    4. ')' → logprob: -9.878412246704102
    5. '):' → logprob: -10.378412246704102
    6. ',A' → logprob: -11.003412246704102
    7. ' ' → logprob: -12.003412246704102
    8. ',length' → logprob: -12.753412246704102
    9. ',n' → logprob: -12.878412246704102
    10. ',i' → logprob: -12.878412246704102

Token 23: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.16028667986392975
    2. 'len' → logprob: -1.9102866649627686
    3. '(len' → logprob: -10.285286903381348
    4. ' n' → logprob: -11.410286903381348
    5. ',len' → logprob: -12.035286903381348
    6. '   ' → logprob: -12.910286903381348
    7. '	len' → logprob: -13.160286903381348
    8. ')' → logprob: -13.535286903381348
    9. '<len' → logprob: -13.535286903381348
    10. ' ' → logprob: -13.535286903381348

Token 24: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.03804286941885948
    2. '(' → logprob: -3.2880427837371826
    3. ')' → logprob: -14.663043022155762
    4. '(I' → logprob: -15.038043022155762
    5. '(S' → logprob: -15.913043022155762
    6. '(
' → logprob: -16.288042068481445
    7. '(

' → logprob: -16.413042068481445
    8. '(a' → logprob: -16.788042068481445
    9. '(B' → logprob: -16.788042068481445
    10. '\(' → logprob: -17.038042068481445

Token 25: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.03574903681874275
    2. '):' → logprob: -3.4107489585876465
    3. '))' → logprob: -6.4107489585876465
    4. ')' → logprob: -8.410749435424805
    5. ')):
' → logprob: -9.035749435424805
    6. ':' → logprob: -9.410749435424805
    7. '   ' → logprob: -11.660749435424805
    8. ')))' → logprob: -12.160749435424805
    9. ')):
' → logprob: -12.410749435424805
    10. ' ' → logprob: -12.660749435424805

Token 26: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4746592044830322
    2. ':' → logprob: -1.5996592044830322
    3. '    ' → logprob: -2.0996592044830322
    4. '   ' → logprob: -3.2246592044830322
    5. '     
' → logprob: -5.474658966064453
    6. ' :' → logprob: -6.099658966064453
    7. '):' → logprob: -6.224658966064453
    8. '     ' → logprob: -6.474658966064453
    9. '        
' → logprob: -6.724658966064453
    10. ' ' → logprob: -7.599658966064453

Token 27: ' temp' (ID: 5484)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.13841353356838226
    2. 'key' → logprob: -2.138413429260254
    3. '       ' → logprob: -5.138413429260254
    4. '    ' → logprob: -5.888413429260254
    5. '   ' → logprob: -6.888413429260254
    6. 'j' → logprob: -7.138413429260254
    7. ' j' → logprob: -7.138413429260254
    8. '        ' → logprob: -10.138413429260254
    9. '        
' → logprob: -10.763413429260254
    10. '	key' → logprob: -10.763413429260254

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02831646054983139
    2. '=' → logprob: -3.6533164978027344
    3. ' ' → logprob: -6.278316497802734
    4. '    ' → logprob: -10.153316497802734
    5. ')' → logprob: -10.278316497802734
    6. '  ' → logprob: -11.028316497802734
    7. '        ' → logprob: -11.653316497802734
    8. '   ' → logprob: -12.028316497802734
    9. '[' → logprob: -12.403316497802734
    10. '     ' → logprob: -12.403316497802734

Token 29: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.38689881563186646
    2. 'A' → logprob: -1.1368987560272217
    3. '	A' → logprob: -11.2618989944458
    4. ' ' → logprob: -11.5118989944458
    5. '    ' → logprob: -12.5118989944458
    6. '   ' → logprob: -14.3868989944458
    7. '>A' → logprob: -15.7618989944458
    8. ' ' → logprob: -16.386898040771484
    9. '  ' → logprob: -16.511898040771484
    10. '(A' → logprob: -16.636898040771484

Token 30: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004903609515167773
    2. '[' → logprob: -7.625490188598633
    3. 'i' → logprob: -14.125490188598633
    4. '[I' → logprob: -14.625490188598633
    5. ' [' → logprob: -14.750490188598633
    6. '   ' → logprob: -15.625490188598633
    7. '```' → logprob: -15.625490188598633
    8. '[j' → logprob: -16.125490188598633
    9. '[
' → logprob: -16.500490188598633
    10. '\[' → logprob: -16.750490188598633

Token 31: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017363476799800992
    2. ' )' → logprob: -6.501736164093018
    3. ')
' → logprob: -9.001736640930176
    4. '       ' → logprob: -9.626736640930176
    5. '   ' → logprob: -11.001736640930176
    6. '])' → logprob: -12.001736640930176
    7. ' ' → logprob: -12.751736640930176
    8. '))' → logprob: -12.751736640930176
    9. '    ' → logprob: -13.001736640930176
    10. ']' → logprob: -13.126736640930176

Token 32: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0136919021606445
    2. '<|end|>' → logprob: -1.5136919021606445
    3. '
' → logprob: -1.7636919021606445
    4. '        
' → logprob: -2.3886919021606445
    5. ' 
' → logprob: -2.8886919021606445
    6. '    
' → logprob: -4.1386919021606445
    7. ' ' → logprob: -4.3886919021606445
    8. '  
' → logprob: -4.5136919021606445
    9. '       
' → logprob: -4.7636919021606445
    10. '     
' → logprob: -4.7636919021606445

Token 33: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.17855620384216309
    2. ' j' → logprob: -1.928556203842163
    3. '       ' → logprob: -4.178556442260742
    4. '    ' → logprob: -6.678556442260742
    5. '        ' → logprob: -6.803556442260742
    6. ' ' → logprob: -8.803556442260742
    7. '   ' → logprob: -8.803556442260742
    8. '     ' → logprob: -10.303556442260742
    9. '      ' → logprob: -10.553556442260742
    10. '        
' → logprob: -11.053556442260742

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005948706530034542
    2. '=' → logprob: -5.130948543548584
    3. ' ' → logprob: -11.380949020385742
    4. '    ' → logprob: -12.755949020385742
    5. '=i' → logprob: -13.630949020385742
    6. '<|end|>' → logprob: -13.880949020385742
    7. ' =
' → logprob: -14.380949020385742
    8. ' -=' → logprob: -14.630949020385742
    9. ' ='' → logprob: -14.880949020385742
    10. '  ' → logprob: -15.505949020385742

Token 35: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31326642632484436
    2. ' i' → logprob: -1.313266396522522
    3. '	i' → logprob: -12.93826675415039
    4. ' ' → logprob: -13.18826675415039
    5. '(i' → logprob: -16.18826675415039
    6. '<|end|>' → logprob: -16.31326675415039
    7. '    ' → logprob: -17.18826675415039
    8. 'I' → logprob: -17.56326675415039
    9. '0' → logprob: -17.68826675415039
    10. '   ' → logprob: -18.18826675415039

Token 36: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6955704689025879
    2. ' -' → logprob: -0.6955704689025879
    3. '<|end|>' → logprob: -6.320570468902588
    4. '   ' → logprob: -8.44556999206543
    5. ' ' → logprob: -9.32056999206543
    6. '       ' → logprob: -9.44556999206543
    7. '<|end|>' → logprob: -9.44556999206543
    8. '    ' → logprob: -10.07056999206543
    9. '  ' → logprob: -10.82056999206543
    10. '        ' → logprob: -11.07056999206543

Token 37: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010950337309623137
    2. ' ' → logprob: -9.125109672546387
    3. '0' → logprob: -15.375109672546387
    4. '<|end|>' → logprob: -15.750109672546387
    5. '```' → logprob: -17.75010871887207
    6. '   ' → logprob: -18.00010871887207
    7. '    ' → logprob: -18.56260871887207
    8. '2' → logprob: -19.50010871887207
    9. '<|end|>' → logprob: -19.50010871887207
    10. '  ' → logprob: -19.81260871887207

Token 38: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: ' while' (ID: 2049)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.12928473949432373
    2. 'j' → logprob: -2.1292848587036133
    3. ' A' → logprob: -6.754284858703613
    4. ' (' → logprob: -8.004284858703613
    5. ' ' → logprob: -8.129284858703613
    6. '(' → logprob: -8.379284858703613
    7. 'A' → logprob: -8.504284858703613
    8. '<|end|>' → logprob: -10.004284858703613
    9. '(j' → logprob: -10.129284858703613
    10. '	j' → logprob: -11.504284858703613

Token 42: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.10023804754018784
    2. ' >=' → logprob: -2.350238084793091
    3. '>' → logprob: -11.100237846374512
    4. ')>=' → logprob: -12.100237846374512
    5. ']>=' → logprob: -12.350237846374512
    6. ' ' → logprob: -12.350237846374512
    7. '[' → logprob: -14.975237846374512
    8. ' >' → logprob: -14.975237846374512
    9. '+' → logprob: -15.475237846374512
    10. ')' → logprob: -15.475237846374512

Token 43: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10021023452281952
    2. ' ' → logprob: -2.350210189819336
    3. '1' → logprob: -13.912710189819336
    4. ' ' → logprob: -14.475210189819336
    5. '  ' → logprob: -14.662710189819336
    6. '   ' → logprob: -14.912710189819336
    7. '<|end|>' → logprob: -15.350210189819336
    8. '```' → logprob: -15.725210189819336
    9. '۰' → logprob: -15.787710189819336
    10. '>' → logprob: -15.975210189819336

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015024791937321424
    2. ' ' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.501502990722656
    4. '۰' → logprob: -16.876502990722656
    5. '  ' → logprob: -17.001502990722656
    6. '1' → logprob: -17.376502990722656
    7. '    ' → logprob: -18.126502990722656
    8. '```' → logprob: -18.564002990722656
    9. ' ' → logprob: -19.314002990722656
    10. '٠' → logprob: -19.439002990722656

Token 45: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.018153922632336617
    2. 'and' → logprob: -4.018154144287109
    3. ' ' → logprob: -13.26815414428711
    4. '        ' → logprob: -13.89315414428711
    5. '    ' → logprob: -13.89315414428711
    6. '	and' → logprob: -16.26815414428711
    7. '       ' → logprob: -16.51815414428711
    8. '   ' → logprob: -16.89315414428711
    9. '<|end|>' → logprob: -16.89315414428711
    10. '```' → logprob: -17.14315414428711

Token 46: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.28132176399230957
    2. 'A' → logprob: -1.4063217639923096
    3. 'temp' → logprob: -9.53132152557373
    4. ' temp' → logprob: -9.53132152557373
    5. '	A' → logprob: -11.65632152557373
    6. ' ' → logprob: -12.03132152557373
    7. '    ' → logprob: -12.15632152557373
    8. '   ' → logprob: -12.40632152557373
    9. ' ' → logprob: -13.65632152557373
    10. '  ' → logprob: -15.03132152557373

Token 47: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0006279678200371563
    2. '[' → logprob: -7.3756279945373535
    3. ' [' → logprob: -14.500627517700195
    4. '[
' → logprob: -14.750627517700195
    5. '[i' → logprob: -15.125627517700195
    6. '```' → logprob: -15.875627517700195
    7. '   ' → logprob: -17.000627517700195
    8. '[js' → logprob: -17.625627517700195
    9. '[...]' → logprob: -17.625627517700195
    10. 'j' → logprob: -17.875627517700195

Token 48: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2519485354423523
    2. ' >' → logprob: -1.501948595046997
    3. ' ' → logprob: -11.126948356628418
    4. '```' → logprob: -13.751948356628418
    5. '[' → logprob: -14.251948356628418
    6. '">' → logprob: -14.751948356628418
    7. ')' → logprob: -15.126948356628418
    8. ' >

' → logprob: -15.251948356628418
    9. '>

' → logprob: -15.501948356628418
    10. '1' → logprob: -15.751948356628418

Token 49: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.11283092200756073
    2. ' >' → logprob: -2.237830877304077
    3. ' ' → logprob: -12.237831115722656
    4. '[' → logprob: -14.237831115722656
    5. '">' → logprob: -14.362831115722656
    6. '>

' → logprob: -14.487831115722656
    7. '```' → logprob: -14.987831115722656
    8. '1' → logprob: -15.237831115722656
    9. ' >

' → logprob: -15.862831115722656
    10. '>end' → logprob: -16.237831115722656

Token 50: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.01105878408998251
    2. 'temp' → logprob: -4.511058807373047
    3. ' ' → logprob: -12.136058807373047
    4. '	temp' → logprob: -13.011058807373047
    5. ' ' → logprob: -13.511058807373047
    6. '(temp' → logprob: -14.386058807373047
    7. ' tmp' → logprob: -15.011058807373047
    8. ' tem' → logprob: -15.511058807373047
    9. '$temp' → logprob: -15.886058807373047
    10. '    ' → logprob: -16.386058807373047

Token 51: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004123753868043423
    2. ':
' → logprob: -5.504123687744141
    3. '):' → logprob: -10.87912368774414
    4. '):
' → logprob: -11.37912368774414
    5. ' :' → logprob: -11.75412368774414
    6. ':j' → logprob: -14.00412368774414
    7. '   ' → logprob: -14.00412368774414
    8. ')' → logprob: -14.00412368774414
    9. ' :
' → logprob: -14.12912368774414
    10. ':
' → logprob: -14.12912368774414

Token 52: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9793181419372559
    2. '
' → logprob: -1.6043181419372559
    3. '       ' → logprob: -1.8543181419372559
    4. ':
' → logprob: -1.8543181419372559
    5. '):
' → logprob: -3.604318141937256
    6. '           ' → logprob: -3.729318141937256
    7. '```' → logprob: -4.729318141937256
    8. ' 
' → logprob: -4.979318141937256
    9. ' :
' → logprob: -5.229318141937256
    10. '<|end|>' → logprob: -5.479318141937256

Token 53: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.3615427613258362
    2. ' A' → logprob: -1.7365427017211914
    3. '           ' → logprob: -2.1115427017211914
    4. '       ' → logprob: -6.611542701721191
    5. '            ' → logprob: -7.111542701721191
    6. '   ' → logprob: -7.611542701721191
    7. '            
' → logprob: -7.611542701721191
    8. ' 
' → logprob: -7.736542701721191
    9. '```' → logprob: -7.861542701721191
    10. '               ' → logprob: -7.861542701721191

Token 54: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.03365699201822281
    2. '[' → logprob: -3.4086570739746094
    3. ' [' → logprob: -12.28365707397461
    4. '[i' → logprob: -13.53365707397461
    5. ' ' → logprob: -13.90865707397461
    6. 'j' → logprob: -14.03365707397461
    7. '[js' → logprob: -14.28365707397461
    8. '1' → logprob: -14.40865707397461
    9. '```' → logprob: -14.40865707397461
    10. '\[' → logprob: -14.78365707397461

Token 55: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0022939443588256836
    2. ' +' → logprob: -6.127294063568115
    3. ']' → logprob: -9.502293586730957
    4. '1' → logprob: -10.627293586730957
    5. '>' → logprob: -12.752293586730957
    6. '+j' → logprob: -13.002293586730957
    7. ' ]' → logprob: -13.627293586730957
    8. '[' → logprob: -13.877293586730957
    9. '+]' → logprob: -14.002293586730957
    10. '=' → logprob: -14.252293586730957

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0921942703134846e-05
    2. ' ' → logprob: -11.62501049041748
    3. ']' → logprob: -14.25001049041748
    4. '```' → logprob: -15.00001049041748
    5. '+' → logprob: -15.37501049041748
    6. ')' → logprob: -15.93751049041748
    7. '   ' → logprob: -16.062511444091797
    8. '<|end|>' → logprob: -16.312511444091797
    9. '=' → logprob: -16.937511444091797
    10. '`' → logprob: -17.125011444091797

Token 57: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16311106085777283
    2. '=' → logprob: -2.0381109714508057
    3. ' =' → logprob: -4.163111209869385
    4. ' ]' → logprob: -5.913111209869385
    5. ']=' → logprob: -6.288111209869385
    6. ')' → logprob: -9.413110733032227
    7. '    ' → logprob: -11.538110733032227
    8. ' ' → logprob: -12.163110733032227
    9. '>' → logprob: -13.038110733032227
    10. '   ' → logprob: -13.163110733032227

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132653534412384
    2. '=' → logprob: -1.313265323638916
    3. '<|end|>' → logprob: -12.813265800476074
    4. '=A' → logprob: -14.938265800476074
    5. ' =
' → logprob: -15.813265800476074
    6. ' =)' → logprob: -16.063264846801758
    7. '=

' → logprob: -16.688264846801758
    8. '＝' → logprob: -16.938264846801758
    9. ' ' → logprob: -17.438264846801758
    10. ')' → logprob: -17.563264846801758

Token 59: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.018150413408875465
    2. ' A' → logprob: -4.018150329589844
    3. '	A' → logprob: -14.643150329589844
    4. '<|end|>' → logprob: -16.518150329589844
    5. '>A' → logprob: -16.893150329589844
    6. '   ' → logprob: -17.518150329589844
    7. ' ' → logprob: -17.518150329589844
    8. '_A' → logprob: -18.893150329589844
    9. '```' → logprob: -19.768150329589844
    10. '<|end|>' → logprob: -20.393150329589844

Token 60: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.7146746763028204e-05
    2. '[' → logprob: -10.25003719329834
    3. 'j' → logprob: -14.50003719329834
    4. '[js' → logprob: -14.62503719329834
    5. '```' → logprob: -14.75003719329834
    6. '\[' → logprob: -16.250036239624023
    7. '[
' → logprob: -16.375036239624023
    8. '<|end|>' → logprob: -16.875036239624023
    9. '   ' → logprob: -17.125036239624023
    10. '[user' → logprob: -17.125036239624023

Token 61: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2890034019947052
    2. ')
' → logprob: -1.6640033721923828
    3. '           ' → logprob: -2.789003372192383
    4. ')
' → logprob: -9.789003372192383
    5. ']' → logprob: -11.039003372192383
    6. '<|end|>' → logprob: -11.539003372192383
    7. '               ' → logprob: -11.789003372192383
    8. '       ' → logprob: -12.039003372192383
    9. ' )
' → logprob: -12.164003372192383
    10. ' )' → logprob: -12.539003372192383

Token 62: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01762770488858223
    2. '            
' → logprob: -5.267627716064453
    3. '
' → logprob: -5.392627716064453
    4. ' 
' → logprob: -6.017627716064453
    5. 'j' → logprob: -6.267627716064453
    6. '<|end|>' → logprob: -6.642627716064453
    7. '[j' → logprob: -7.767627716064453
    8. ' j' → logprob: -7.892627716064453
    9. '  
' → logprob: -8.142627716064453
    10. '    
' → logprob: -8.392627716064453

Token 63: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.6647813320159912
    2. '           ' → logprob: -1.1647813320159912
    3. ' j' → logprob: -1.7897813320159912
    4. '	j' → logprob: -5.28978157043457
    5. '            ' → logprob: -8.16478157043457
    6. ' ' → logprob: -8.53978157043457
    7. '   ' → logprob: -8.66478157043457
    8. '		' → logprob: -8.66478157043457
    9. '            
' → logprob: -8.91478157043457
    10. '<|end|>' → logprob: -9.16478157043457

Token 64: ' -=' (ID: 12583)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4652053117752075
    2. ' -' → logprob: -1.3402053117752075
    3. ' -=' → logprob: -2.215205192565918
    4. '-=' → logprob: -7.465205192565918
    5. ' ' → logprob: -7.840205192565918
    6. '<|end|>' → logprob: -10.590205192565918
    7. '=' → logprob: -10.965205192565918
    8. '```' → logprob: -11.465205192565918
    9. '   ' → logprob: -11.590205192565918
    10. '    ' → logprob: -11.715205192565918

Token 65: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006274910410866141
    2. ' ' → logprob: -7.375627517700195
    3. '   ' → logprob: -14.250627517700195
    4. '    ' → logprob: -16.875627517700195
    5. '<|end|>' → logprob: -17.000627517700195
    6. '	' → logprob: -17.125627517700195
    7. '```' → logprob: -17.500627517700195
    8. '           ' → logprob: -17.625627517700195
    9. '  ' → logprob: -17.750627517700195
    10. '       ' → logprob: -17.875627517700195

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -18.500003814697266
    4. '<|end|>' → logprob: -19.250003814697266
    5. '```' → logprob: -19.500003814697266
    6. '  ' → logprob: -20.500003814697266
    7. '۱' → logprob: -21.000003814697266
    8. '       ' → logprob: -21.125003814697266
    9. '    ' → logprob: -21.750003814697266
    10. '１' → logprob: -21.875003814697266

Token 67: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.8762352466583252
    2. ' A' → logprob: -1.3762352466583252
    3. '
' → logprob: -2.001235246658325
    4. '   ' → logprob: -2.376235246658325
    5. '```' → logprob: -3.751235246658325
    6. '    
' → logprob: -3.876235246658325
    7. '  
' → logprob: -4.126235008239746
    8. 'A' → logprob: -4.376235008239746
    9. '       ' → logprob: -4.751235008239746
    10. '<|end|>' → logprob: -4.876235008239746

Token 68: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.77298903465271
    2. ' 
' → logprob: -1.02298903465271
    3. ' A' → logprob: -2.14798903465271
    4. '   ' → logprob: -3.89798903465271
    5. '```' → logprob: -4.147989273071289
    6. 'A' → logprob: -4.772989273071289
    7. '    
' → logprob: -4.897989273071289
    8. '  
' → logprob: -5.522989273071289
    9. '<|end|>' → logprob: -6.647989273071289
    10. '\n' → logprob: -6.772989273071289

Token 69: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.2035975307226181
    2. ' A' → logprob: -1.7035975456237793
    3. '   ' → logprob: -6.953597545623779
    4. '       ' → logprob: -7.828597545623779
    5. ' ' → logprob: -8.328597068786621
    6. ')' → logprob: -8.328597068786621
    7. '```' → logprob: -9.203597068786621
    8. '    ' → logprob: -9.703597068786621
    9. '<|end|>' → logprob: -10.328597068786621
    10. '	A' → logprob: -10.328597068786621

Token 70: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -9.491498531133402e-06
    2. '[' → logprob: -11.625009536743164
    3. '[js' → logprob: -15.375009536743164
    4. '[q' → logprob: -16.500009536743164
    5. ' [' → logprob: -16.625009536743164
    6. '[i' → logprob: -17.500009536743164
    7. '\[' → logprob: -17.625009536743164
    8. 'j' → logprob: -17.750009536743164
    9. '[int' → logprob: -18.250009536743164
    10. '   ' → logprob: -18.500009536743164

Token 71: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.034592388459714e-06
    2. ' +' → logprob: -12.250005722045898
    3. '+]' → logprob: -14.375005722045898
    4. '+j' → logprob: -14.625005722045898
    5. ']+' → logprob: -15.750005722045898
    6. ']' → logprob: -17.0000057220459
    7. '+"]' → logprob: -18.0000057220459
    8. '+
' → logprob: -18.2500057220459
    9. '＋' → logprob: -18.5000057220459
    10. '+k' → logprob: -18.7500057220459

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00044401636114344
    2. '+' → logprob: -7.750443935394287
    3. ' ' → logprob: -11.750444412231445
    4. '<|end|>' → logprob: -13.125444412231445
    5. ' +' → logprob: -13.875444412231445
    6. '```' → logprob: -14.250444412231445
    7. '`' → logprob: -14.875444412231445
    8. '   ' → logprob: -15.500444412231445
    9. '>' → logprob: -15.500444412231445
    10. '[' → logprob: -15.500444412231445

Token 73: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.031020134687423706
    2. '=' → logprob: -3.531020164489746
    3. ' =' → logprob: -7.406020164489746
    4. ']=' → logprob: -7.406020164489746
    5. ' ]' → logprob: -10.156020164489746
    6. ')' → logprob: -11.281020164489746
    7. '<|end|>' → logprob: -14.031020164489746
    8. '>' → logprob: -15.031020164489746
    9. '```' → logprob: -15.281020164489746
    10. '[' → logprob: -16.15601921081543

Token 74: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014141082763672
    2. ' =' → logprob: -1.7014141082763672
    3. '=

' → logprob: -14.951414108276367
    4. ' =
' → logprob: -15.451414108276367
    5. '<|end|>' → logprob: -15.951414108276367
    6. '=
' → logprob: -16.951414108276367
    7. '＝' → logprob: -16.951414108276367
    8. ' =
' → logprob: -17.326414108276367
    9. '[' → logprob: -17.451414108276367
    10. ' =)' → logprob: -17.701414108276367

Token 75: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.12692999839782715
    2. ' temp' → logprob: -2.126929998397827
    3. 'tmp' → logprob: -14.501930236816406
    4. 'tem' → logprob: -14.626930236816406
    5. '	temp' → logprob: -14.751930236816406
    6. '(temp' → logprob: -15.626930236816406
    7. '$temp' → logprob: -15.626930236816406
    8. ' ' → logprob: -16.501930236816406
    9. 't' → logprob: -16.501930236816406
    10. '[temp' → logprob: -16.876930236816406

Token 76: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.478807657957077
    2. '       ' → logprob: -1.6038076877593994
    3. '<|end|>' → logprob: -3.2288076877593994
    4. '    
' → logprob: -3.3538076877593994
    5. '        
' → logprob: -3.4788076877593994
    6. '   ' → logprob: -3.4788076877593994
    7. '\n' → logprob: -3.6038076877593994
    8. '  
' → logprob: -4.97880744934082
    9. ' 
' → logprob: -5.72880744934082
    10. '\' → logprob: -6.97880744934082

Token 77: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15820127725601196
    2. '   ' → logprob: -2.408201217651367
    3. '    
' → logprob: -3.908201217651367
    4. '        
' → logprob: -4.033201217651367
    5. '<|end|>' → logprob: -5.158201217651367
    6. '
' → logprob: -5.283201217651367
    7. '  
' → logprob: -5.908201217651367
    8. '\n' → logprob: -6.283201217651367
    9. ' 
' → logprob: -7.033201217651367
    10. '    ' → logprob: -7.658201217651367

Token 78: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.005594444926828146
    2. '   ' → logprob: -6.005594253540039
    3. '       ' → logprob: -6.255594253540039
    4. ' print' → logprob: -7.130594253540039
    5. '    
' → logprob: -9.380594253540039
    6. '        
' → logprob: -9.380594253540039
    7. '
' → logprob: -9.380594253540039
    8. '	print' → logprob: -9.380594253540039
    9. '  
' → logprob: -11.005594253540039
    10. '```' → logprob: -11.505594253540039

Token 79: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0007283978629857302
    2. ' "' → logprob: -7.875728607177734
    3. '(' → logprob: -8.625728607177734
    4. '("' → logprob: -9.250728607177734
    5. '"A' → logprob: -9.750728607177734
    6. 'A' → logprob: -11.875728607177734
    7. ''' → logprob: -12.250728607177734
    8. ' ' → logprob: -13.875728607177734
    9. '```' → logprob: -15.000728607177734
    10. '(A' → logprob: -15.250728607177734

Token 80: ' ".' (ID: 11730)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00016146517009474337
    2. ' "' → logprob: -8.750161170959473
    3. ''' → logprob: -13.000161170959473
    4. ' ' → logprob: -15.750161170959473
    5. ')' → logprob: -16.12516212463379
    6. '".' → logprob: -16.62516212463379
    7. '"A' → logprob: -16.75016212463379
    8. ' ".' → logprob: -16.75016212463379
    9. '```' → logprob: -17.12516212463379
    10. '"log' → logprob: -17.25016212463379

Token 81: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -2.696889623621246e-06
    2. '.join' → logprob: -13.50000286102295
    3. 'print' → logprob: -14.75000286102295
    4. '".' → logprob: -15.25000286102295
    5. '(join' → logprob: -15.75000286102295
    6. '```' → logprob: -16.000001907348633
    7. '.' → logprob: -16.125001907348633
    8. ' join' → logprob: -16.625001907348633
    9. ''.' → logprob: -17.500001907348633
    10. '"' → logprob: -18.000001907348633

Token 82: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47472646832466125
    2. '(map' → logprob: -0.9747264385223389
    3. '(m' → logprob: -8.474726676940918
    4. ' (' → logprob: -9.099726676940918
    5. '(join' → logprob: -10.099726676940918
    6. '(
' → logprob: -10.099726676940918
    7. '(range' → logprob: -10.474726676940918
    8. '("("' → logprob: -10.724726676940918
    9. '(list' → logprob: -10.849726676940918
    10. '((' → logprob: -11.224726676940918

Token 83: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.5762830972671509
    2. '(' → logprob: -0.8262830972671509
    3. '(
' → logprob: -8.57628345489502
    4. '(s' → logprob: -9.70128345489502
    5. 'str' → logprob: -10.57628345489502
    6. '<|end|>' → logprob: -10.70128345489502
    7. ' (' → logprob: -11.95128345489502
    8. '(

' → logprob: -12.32628345489502
    9. '(sr' → logprob: -12.57628345489502
    10. ')' → logprob: -12.57628345489502

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5145208835601807
    2. '(A' → logprob: -1.0145208835601807
    3. '(' → logprob: -3.3895208835601807
    4. ',A' → logprob: -5.139520645141602
    5. ' ,' → logprob: -10.764520645141602
    6. ',
' → logprob: -11.514520645141602
    7. ')' → logprob: -12.139520645141602
    8. 'A' → logprob: -12.264520645141602
    9. ' (' → logprob: -12.639520645141602
    10. '(
' → logprob: -13.139520645141602

Token 85: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.20143750309944153
    2. 'A' → logprob: -1.7014374732971191
    3. '(A' → logprob: -10.826437950134277
    4. ' ' → logprob: -13.451437950134277
    5. ')' → logprob: -13.951437950134277
    6. '	A' → logprob: -14.076437950134277
    7. '(' → logprob: -14.201437950134277
    8. ' (' → logprob: -15.451437950134277
    9. '[A' → logprob: -15.701437950134277
    10. ' ' → logprob: -16.70143699645996

Token 86: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.575976550579071
    2. ')' → logprob: -0.825976550579071
    3. '))
' → logprob: -10.450976371765137
    4. ')
' → logprob: -12.575976371765137
    5. ')))' → logprob: -12.575976371765137
    6. '   ' → logprob: -15.575976371765137
    7. ')}' → logprob: -15.950976371765137
    8. '),' → logprob: -16.075977325439453
    9. '       ' → logprob: -16.075977325439453
    10. ' )' → logprob: -16.200977325439453

Token 87: 'N' (ID: 45)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3485139310359955
    2. ')' → logprob: -1.7235139608383179
    3. '#' → logprob: -3.0985138416290283
    4. '<|end|>' → logprob: -3.3485138416290283
    5. ':' → logprob: -3.5985138416290283
    6. '(
' → logprob: -5.598514080047607
    7. '```' → logprob: -6.723514080047607
    8. ' ' → logprob: -6.973514080047607
    9. '[' → logprob: -7.473514080047607
    10. '\' → logprob: -7.973514080047607

Token 88: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14624938368797302
    2. ')' → logprob: -3.146249294281006
    3. 'if' → logprob: -3.896249294281006
    4. '#' → logprob: -4.146249294281006
    5. ' =' → logprob: -4.396249294281006
    6. ']' → logprob: -4.646249294281006
    7. '[' → logprob: -5.271249294281006
    8. 'o' → logprob: -5.646249294281006
    9. '>' → logprob: -5.771249294281006
    10. '[]' → logprob: -5.771249294281006

Token 89: ' int' (ID: 677)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.06417311728000641
    2. '[' → logprob: -2.8141732215881348
    3. '[int' → logprob: -6.814173221588135
    4. ' []' → logprob: -7.064173221588135
    5. ' list' → logprob: -9.814172744750977
    6. 'list' → logprob: -10.064172744750977
    7. '[input' → logprob: -10.189172744750977
    8. ' ' → logprob: -10.439172744750977
    9. '[]' → logprob: -10.564172744750977
    10. 'input' → logprob: -11.189172744750977

Token 90: '(raw' (ID: 46707)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.033746667206287384
    2. '(input' → logprob: -3.4087467193603516
    3. '()' → logprob: -9.783746719360352
    4. 'input' → logprob: -11.033746719360352
    5. '(int' → logprob: -11.408746719360352
    6. '(
' → logprob: -12.658746719360352
    7. ' (' → logprob: -12.908746719360352
    8. '('' → logprob: -13.158746719360352
    9. '(raw' → logprob: -13.283746719360352
    10. '(`' → logprob: -13.783746719360352

Token 91: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0001097417771234177
    2. '_' → logprob: -9.500109672546387
    3. 'input' → logprob: -10.375109672546387
    4. 'Input' → logprob: -13.375109672546387
    5. '(' → logprob: -13.875109672546387
    6. ' input' → logprob: -14.875109672546387
    7. '_in' → logprob: -15.125109672546387
    8. '_Input' → logprob: -16.250110626220703
    9. '('_' → logprob: -16.625110626220703
    10. '()' → logprob: -16.625110626220703

Token 92: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2541217505931854
    2. '()' → logprob: -1.7541217803955078
    3. '(' → logprob: -3.629121780395508
    4. '('' → logprob: -4.754121780395508
    5. ')' → logprob: -5.004121780395508
    6. '("("' → logprob: -5.004121780395508
    7. '("' → logprob: -7.504121780395508
    8. '()>' → logprob: -7.629121780395508
    9. '(""))' → logprob: -7.629121780395508
    10. '();)' → logprob: -8.379121780395508

Token 93: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.08368474990129471
    2. ' A' → logprob: -2.7086846828460693
    3. '<|end|>' → logprob: -5.083684921264648
    4. 'a' → logprob: -6.708684921264648
    5. ' ' → logprob: -6.833684921264648
    6. ')' → logprob: -6.833684921264648
    7. '(' → logprob: -6.958684921264648
    8. '[' → logprob: -7.083684921264648
    9. '  ' → logprob: -8.333684921264648
    10. '"' → logprob: -8.458684921264648

Token 94: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3140384256839752
    2. ' =' → logprob: -1.3140383958816528
    3. '[' → logprob: -7.814038276672363
    4. '.' → logprob: -8.564038276672363
    5. '=[]' → logprob: -10.189038276672363
    6. '[:]' → logprob: -10.189038276672363
    7. '<|end|>' → logprob: -10.314038276672363
    8. '(' → logprob: -10.439038276672363
    9. ')' → logprob: -12.314038276672363
    10. 's' → logprob: -12.314038276672363

Token 95: ' map' (ID: 4014)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5333539843559265
    2. 'map' → logprob: -1.5333540439605713
    3. '[' → logprob: -2.4083540439605713
    4. ' list' → logprob: -2.6583540439605713
    5. ' map' → logprob: -3.7833540439605713
    6. '[list' → logprob: -4.783353805541992
    7. 'raw' → logprob: -6.033353805541992
    8. ' [' → logprob: -6.033353805541992
    9. '[]' → logprob: -6.658353805541992
    10. ' []' → logprob: -9.533353805541992

Token 96: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0025364249013364315
    2. '(' → logprob: -6.127536296844482
    3. '(lambda' → logprob: -8.00253677368164
    4. 'int' → logprob: -11.75253677368164
    5. '(raw' → logprob: -13.00253677368164
    6. '<int' → logprob: -13.25253677368164
    7. ' (' → logprob: -13.37753677368164
    8. '[int' → logprob: -14.12753677368164
    9. '(
' → logprob: -14.50253677368164
    10. '(f' → logprob: -15.12753677368164

Token 97: ',' (ID: 11)
  Prédit: '(raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(raw' → logprob: -0.6404806971549988
    2. ',' → logprob: -0.7654806971549988
    3. 'raw' → logprob: -5.3904805183410645
    4. '(' → logprob: -6.3904805183410645
    5. ' ,' → logprob: -7.3904805183410645
    6. ' raw' → logprob: -8.265480995178223
    7. ',(' → logprob: -8.515480995178223
    8. ' (' → logprob: -8.765480995178223
    9. '	raw' → logprob: -8.890480995178223
    10. ',input' → logprob: -9.765480995178223

Token 98: ' raw' (ID: 11428)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raw' → logprob: -0.3135862648487091
    2. ' raw' → logprob: -1.3135862350463867
    3. '(raw' → logprob: -8.188586235046387
    4. '	raw' → logprob: -10.188586235046387
    5. ')' → logprob: -12.688586235046387
    6. ' ' → logprob: -12.938586235046387
    7. '_raw' → logprob: -13.313586235046387
    8. '.raw' → logprob: -13.938586235046387
    9. '/raw' → logprob: -14.438586235046387
    10. '  ' → logprob: -16.313587188720703

Token 99: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.00018280261429026723
    2. 'input' → logprob: -8.62518310546875
    3. '_' → logprob: -13.12518310546875
    4. '_inputs' → logprob: -14.50018310546875
    5. 'Input' → logprob: -15.37518310546875
    6. '_user' → logprob: -16.00018310546875
    7. '```' → logprob: -16.62518310546875
    8. '_output' → logprob: -16.75018310546875
    9. '_INPUT' → logprob: -17.12518310546875
    10. '_in' → logprob: -17.12518310546875

Token 100: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00033760786755010486
    2. '()' → logprob: -8.000337600708008
    3. '())' → logprob: -13.875337600708008
    4. ' ().' → logprob: -14.125337600708008
    5. '(' → logprob: -15.875337600708008
    6. ')' → logprob: -16.125337600708008
    7. '()).' → logprob: -16.250337600708008
    8. '()
' → logprob: -17.750337600708008
    9. '.' → logprob: -18.000337600708008
    10. '.split' → logprob: -18.250337600708008

Token 101: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0181842390447855
    2. 'strip' → logprob: -4.018184185028076
    3. 'rstrip' → logprob: -10.393184661865234
    4. ' split' → logprob: -12.893184661865234
    5. ')' → logprob: -14.393184661865234
    6. '(split' → logprob: -15.143184661865234
    7. ' strip' → logprob: -16.018184661865234
    8. 's' → logprob: -16.893184661865234
    9. 'spl' → logprob: -17.518184661865234
    10. ' ' → logprob: -17.768184661865234

Token 102: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.003995646256953478
    2. '()' → logprob: -6.003995418548584
    3. '()))' → logprob: -6.753995418548584
    4. ')' → logprob: -8.003995895385742
    5. '(' → logprob: -11.878995895385742
    6. '))' → logprob: -12.003995895385742
    7. ' ())' → logprob: -13.253995895385742
    8. '())
' → logprob: -13.378995895385742
    9. '(),' → logprob: -13.628995895385742
    10. '()]' → logprob: -16.128995895385742

Token 103: 'in' (ID: 258)
  Prédit: 'in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -2.4987974029500037e-05
    2. '
' → logprob: -12.250024795532227
    3. 'A' → logprob: -12.375024795532227
    4. '<|end|>' → logprob: -12.625024795532227
    5. ' insertion' → logprob: -12.625024795532227
    6. 'Insertion' → logprob: -12.750024795532227
    7. '  
' → logprob: -13.375024795532227
    8. '    
' → logprob: -13.625024795532227
    9. ' 
' → logprob: -14.125024795532227
    10. 'def' → logprob: -14.500024795532227

Token 104: 'sertion' (ID: 21747)
  Prédit: 'sertion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sertion' → logprob: -0.00046832661610096693
    2. 'sert' → logprob: -8.000468254089355
    3. 's' → logprob: -9.000468254089355
    4. 'sort' → logprob: -12.625468254089355
    5. 'ser' → logprob: -12.750468254089355
    6. 'ersion' → logprob: -13.250468254089355
    7. 'se' → logprob: -15.250468254089355
    8. '```' → logprob: -15.500468254089355
    9. 'ert' → logprob: -15.625468254089355
    10. 'er' → logprob: -15.875468254089355

Token 105: 'Sort' (ID: 11602)
  Prédit: 'Sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sort' → logprob: -1.981667537620524e-06
    2. 'Sor' → logprob: -14.000001907348633
    3. 'sort' → logprob: -14.875001907348633
    4. 'S' → logprob: -15.000001907348633
    5. '_sort' → logprob: -16.000001907348633
    6. 'Sorter' → logprob: -16.125001907348633
    7. 'Sorting' → logprob: -16.500001907348633
    8. 'So' → logprob: -16.875001907348633
    9. 'Sorted' → logprob: -17.750001907348633
    10. 'SORT' → logprob: -17.750001907348633

Token 106: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.12695130705833435
    2. '(' → logprob: -2.126951217651367
    3. '(
' → logprob: -11.251951217651367
    4. '(N' → logprob: -13.001951217651367
    5. '((' → logprob: -13.126951217651367
    6. '(

' → logprob: -13.876951217651367
    7. '<|end|>' → logprob: -13.876951217651367
    8. '```' → logprob: -14.251951217651367
    9. ' (' → logprob: -14.376951217651367
    10. '("("' → logprob: -14.376951217651367

Token 107: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. '))' → logprob: -14.375000953674316
    3. ' )' → logprob: -14.625000953674316
    4. ')
' → logprob: -16.500001907348633
    5. ')`' → logprob: -16.750001907348633
    6. ')}' → logprob: -17.375001907348633
    7. '())' → logprob: -17.500001907348633
    8. ')**' → logprob: -17.750001907348633
    9. '()' → logprob: -18.750001907348633
    10. ')#' → logprob: -19.125001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 105
Tokens correctement prédits (1ère position, stricte): 52
Tokens correctement prédits (1ère position, avec adaptation): 58
Tokens correctement prédits (top 10): 86
Précision stricte (1ère position): 49.52%
Précision adaptée (1ère position): 55.24%
Précision (top 10): 81.90%
================================================================================
