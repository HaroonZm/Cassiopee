================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from collections import deque
readline = sys.stdin.readline

def parorder(Edge, p):
    N = len(Edge)
    par = [0]*N
    par[p] = -1
    stack = [p]
    order = []
    visited = set([p])
    ast = stack.append
    apo = order.append
    while stack:
        vn = stack.pop()
        apo(vn)
        for vf in Edge[vn]:
            if vf in visited:
                continue
            visited.add(vf)
            par[vf] = vn
            ast(vf)
    return par, order

def getcld(p):
    res = [[] for _ in range(len(p))]
    for i, v in enumerate(p[1:], 1):
        res[v].append(i)
    return res

def bfs(s):
    Q = deque(s)
    used = set(s)
    dist = [0]*N
    while Q:
        vn = Q.pop()
        for vf in Edge[vn]:
            if vf not in used:
                used.add(vf)
                dist[vf] = 1 + dist[vn]
                Q.appendleft(vf)
    return dist

N = int(readline())
Edge = [[] for _ in range(N)]
for _ in range(N-1):
    a, b = map(int, readline().split())
    a -= 1
    b -= 1
    Edge[a].append(b)
    Edge[b].append(a)

dist0 = bfs([0])
st = dist0.index(max(dist0))
dists = bfs([st])
en = dists.index(max(dists))
diste = bfs([en])
D = dists[en]
path = [i for i in range(N) if dists[i] + diste[i] == D]
distp = bfs(path)

table = [1]*(N+5)
mini = 0
for i in range(N):
    if distp[i] == 0:
        continue
    fi = dists[i]
    if 2*distp[i] == fi:
        mini = max(mini, fi-1)
    else:
        mini = max(mini, fi)
    fi = diste[i]
    if 2*distp[i] == fi:
        mini = max(mini, fi-1)
    else:
        mini = max(mini, fi)

for i in range(mini+1):
    table[i] = 0
table[1] = 1
table[2] = 1
for i in range(D+1, N+1):
    table[i] = 1

print(''.join(map(str, table[1:N+1])))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.006869417615234852
    2. 'os' → logprob: -5.756869316101074
    3. ' math' → logprob: -6.881869316101074
    4. ' collections' → logprob: -7.256869316101074
    5. ' pathlib' → logprob: -7.756869316101074
    6. ' typing' → logprob: -8.131869316101074
    7. ' ' → logprob: -8.256869316101074
    8. ' datetime' → logprob: -9.006869316101074
    9. 'collections' → logprob: -9.131869316101074
    10. ' Py' → logprob: -9.256869316101074

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.6514273285865784
    2. 'import' → logprob: -0.7764273285865784
    3. '.' → logprob: -4.026427268981934
    4. '```' → logprob: -7.901427268981934
    5. ' ' → logprob: -8.526427268981934
    6. '.import' → logprob: -9.651427268981934
    7. '_' → logprob: -10.026427268981934
    8. '<|end|>' → logprob: -10.276427268981934
    9. '	import' → logprob: -10.401427268981934
    10. '_import' → logprob: -11.026427268981934

Token 6: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.07916120439767838
    2. ' deque' → logprob: -2.7041611671447754
    3. ' abc' → logprob: -4.829161167144775
    4. 'deque' → logprob: -7.204161167144775
    5. ' Counter' → logprob: -8.454161643981934
    6. ' named' → logprob: -9.329161643981934
    7. ' import' → logprob: -9.954161643981934
    8. ' counter' → logprob: -10.329161643981934
    9. ' collections' → logprob: -11.079161643981934
    10. ' default' → logprob: -11.329161643981934

Token 7: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8029761910438538
    2. '

' → logprob: -1.052976131439209
    3. '
' → logprob: -2.302976131439209
    4. '```' → logprob: -3.427976131439209
    5. 'import' → logprob: -3.552976131439209
    6. '\' → logprob: -3.677976131439209
    7. '<|end|>' → logprob: -4.802976131439209
    8. '<|end|>' → logprob: -6.177976131439209
    9. 'newline' → logprob: -6.427976131439209
    10. '' → logprob: -7.052976131439209

Token 8: 'read' (ID: 1293)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -1.0054776668548584
    2. '
' → logprob: -1.8804776668548584
    3. '\n' → logprob: -2.0054776668548584
    4. '```' → logprob: -2.2554776668548584
    5. 'import' → logprob: -2.3804776668548584
    6. '\' → logprob: -2.6304776668548584
    7. ',' → logprob: -3.2554776668548584
    8. '.' → logprob: -5.1304779052734375
    9. '`' → logprob: -5.2554779052734375
    10. '' → logprob: -5.2554779052734375

Token 9: 'line' (ID: 1137)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15774953365325928
    2. 'line' → logprob: -2.157749652862549
    3. '_line' → logprob: -3.907749652862549
    4. '()' → logprob: -5.782749652862549
    5. 'ing' → logprob: -5.907749652862549
    6. 'er' → logprob: -6.407749652862549
    7. '_' → logprob: -6.532749652862549
    8. '(
' → logprob: -8.90774917602539
    9. '_input' → logprob: -8.90774917602539
    10. ' (' → logprob: -9.15774917602539

Token 10: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006497674621641636
    2. '('' → logprob: -8.750649452209473
    3. '(
' → logprob: -9.000649452209473
    4. '()' → logprob: -9.125649452209473
    5. ' (' → logprob: -9.125649452209473
    6. '=' → logprob: -10.500649452209473
    7. ''' → logprob: -10.625649452209473
    8. '.' → logprob: -11.000649452209473
    9. '(

' → logprob: -11.250649452209473
    10. '```' → logprob: -11.250649452209473

Token 11: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.16022920608520508
    2. ' sys' → logprob: -1.910229206085205
    3. 'input' → logprob: -12.785228729248047
    4. '=sys' → logprob: -14.035228729248047
    5. '	sys' → logprob: -14.160228729248047
    6. 'lambda' → logprob: -15.285228729248047
    7. ' input' → logprob: -15.660228729248047
    8. '(sys' → logprob: -15.660228729248047
    9. 'stdin' → logprob: -16.160228729248047
    10. ' lambda' → logprob: -16.910228729248047

Token 12: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3381005525588989
    2. '.stdin' → logprob: -1.338100552558899
    3. '.readline' → logprob: -4.213100433349609
    4. '.stdout' → logprob: -4.838100433349609
    5. '.argv' → logprob: -7.213100433349609
    6. ' .' → logprob: -7.463100433349609
    7. '.version' → logprob: -9.46310043334961
    8. '.next' → logprob: -9.58810043334961
    9. '.import' → logprob: -9.58810043334961
    10. '.std' → logprob: -10.08810043334961

Token 13: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00019781860464718193
    2. '.' → logprob: -8.875197410583496
    3. '.read' → logprob: -10.125197410583496
    4. '.buffer' → logprob: -11.875197410583496
    5. 'read' → logprob: -12.125197410583496
    6. '<|end|>' → logprob: -13.250197410583496
    7. '.readlines' → logprob: -13.375197410583496
    8. '```' → logprob: -13.500197410583496
    9. 'buffer' → logprob: -14.875197410583496
    10. '<|end|>' → logprob: -16.000198364257812

Token 14: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.41838449239730835
    2. '()' → logprob: -1.4183845520019531
    3. '(
' → logprob: -3.668384552001953
    4. '
' → logprob: -4.418384552001953
    5. '\n' → logprob: -4.418384552001953
    6. '\' → logprob: -4.418384552001953
    7. 'def' → logprob: -4.918384552001953
    8. 'for' → logprob: -5.293384552001953
    9. '()

' → logprob: -5.668384552001953
    10. '

' → logprob: -5.793384552001953

Token 15: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11264370381832123
    2. 'def' → logprob: -2.9876437187194824
    3. 'd' → logprob: -3.8626437187194824
    4. 'q' → logprob: -4.112643718719482
    5. 'N' → logprob: -4.362643718719482
    6. 'queue' → logprob: -5.737643718719482
    7. 'Q' → logprob: -7.737643718719482
    8. '\' → logprob: -7.862643718719482
    9. 'deque' → logprob: -8.487643241882324
    10. 's' → logprob: -8.612643241882324

Token 16: ' par' (ID: 686)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4079592227935791
    2. ' bfs' → logprob: -1.532959222793579
    3. ' main' → logprob: -2.282959222793579
    4. ' BFS' → logprob: -5.407958984375
    5. ' solve' → logprob: -5.782958984375
    6. ' process' → logprob: -5.907958984375
    7. ' solution' → logprob: -6.657958984375
    8. ' breadth' → logprob: -7.032958984375
    9. ' space' → logprob: -7.407958984375
    10. ' dfs' → logprob: -7.657958984375

Token 17: 'order' (ID: 2143)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.06711393594741821
    2. 'ent' → logprob: -3.0671138763427734
    3. 'ser' → logprob: -5.192113876342773
    4. 'am' → logprob: -5.317113876342773
    5. 't' → logprob: -5.692113876342773
    6. 'en' → logprob: -5.942113876342773
    7. 'ty' → logprob: -6.942113876342773
    8. 'set' → logprob: -7.942113876342773
    9. 'e' → logprob: -8.817113876342773
    10. 'a' → logprob: -9.567113876342773

Token 18: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00231607211753726
    2. '_' → logprob: -7.252315998077393
    3. '(_' → logprob: -7.502315998077393
    4. '(_:' → logprob: -8.50231647491455
    5. '(:' → logprob: -8.50231647491455
    6. 's' → logprob: -8.87731647491455
    7. '():' → logprob: -9.37731647491455
    8. ' (' → logprob: -10.00231647491455
    9. '('' → logprob: -10.00231647491455
    10. '(a' → logprob: -10.25231647491455

Token 19: 'Edge' (ID: 16577)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0577759742736816
    2. 'root' → logprob: -1.6827759742736816
    3. 'n' → logprob: -1.8077759742736816
    4. 'node' → logprob: -2.4327759742736816
    5. 's' → logprob: -3.4327759742736816
    6. 'queue' → logprob: -3.6827759742736816
    7. 'nodes' → logprob: -3.8077759742736816
    8. '):' → logprob: -3.9327759742736816
    9. 'lst' → logprob: -4.057775974273682
    10. 'tree' → logprob: -4.432775974273682

Token 20: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.006724960170686245
    2. '):' → logprob: -5.131724834442139
    3. ',' → logprob: -7.256724834442139
    4. ')' → logprob: -10.506725311279297
    5. '_list' → logprob: -11.131725311279297
    6. 'list' → logprob: -12.006725311279297
    7. '):
' → logprob: -12.006725311279297
    8. 't' → logprob: -12.131725311279297
    9. 'r' → logprob: -12.256725311279297
    10. 'd' → logprob: -12.506725311279297

Token 21: ' p' (ID: 275)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.2337945699691772
    2. ' N' → logprob: -1.8587945699691772
    3. ' V' → logprob: -2.358794689178467
    4. 'n' → logprob: -2.358794689178467
    5. ' start' → logprob: -2.483794689178467
    6. 'start' → logprob: -3.233794689178467
    7. 'N' → logprob: -3.233794689178467
    8. ' root' → logprob: -3.358794689178467
    9. ' node' → logprob: -3.858794689178467
    10. 'V' → logprob: -4.233794689178467

Token 22: '):
' (ID: 1883)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.010737460106611252
    2. '):' → logprob: -5.010737419128418
    3. 'r' → logprob: -6.510737419128418
    4. 'ath' → logprob: -7.135737419128418
    5. 'os' → logprob: -7.385737419128418
    6. 'rev' → logprob: -8.635737419128418
    7. ')' → logprob: -9.135737419128418
    8. 'ars' → logprob: -9.135737419128418
    9. 'oint' → logprob: -9.635737419128418
    10. 'v' → logprob: -9.885737419128418

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21407471597194672
    2. ':' → logprob: -1.714074730873108
    3. ' ' → logprob: -5.089074611663818
    4. ' :' → logprob: -5.714074611663818
    5. '  ' → logprob: -7.089074611663818
    6. 'n' → logprob: -7.839074611663818
    7. '):' → logprob: -7.839074611663818
    8. '    ' → logprob: -8.214075088500977
    9. ',' → logprob: -8.589075088500977
    10. 'd' → logprob: -8.839075088500977

Token 24: ' N' (ID: 478)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5346595048904419
    2. '   ' → logprob: -2.0346593856811523
    3. ' q' → logprob: -2.0346593856811523
    4. 'n' → logprob: -3.2846593856811523
    5. ' queue' → logprob: -3.9096593856811523
    6. ' visited' → logprob: -4.159659385681152
    7. ' stack' → logprob: -4.284659385681152
    8. 'q' → logprob: -4.659659385681152
    9. ' if' → logprob: -4.909659385681152
    10. ' d' → logprob: -5.159659385681152

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0044658430851995945
    2. ',' → logprob: -6.1294660568237305
    3. '=' → logprob: -6.3794660568237305
    4. ' ' → logprob: -8.37946605682373
    5. ' ,' → logprob: -8.37946605682373
    6. '   ' → logprob: -10.00446605682373
    7. '=int' → logprob: -10.25446605682373
    8. ')' → logprob: -11.75446605682373
    9. '    ' → logprob: -11.87946605682373
    10. '.' → logprob: -11.87946605682373

Token 26: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.05766630172729492
    2. 'len' → logprob: -2.932666301727295
    3. ' p' → logprob: -5.932666301727295
    4. 'p' → logprob: -9.432666778564453
    5. '(len' → logprob: -11.557666778564453
    6. '[len' → logprob: -11.682666778564453
    7. ' max' → logprob: -11.807666778564453
    8. ' int' → logprob: -12.682666778564453
    9. '=len' → logprob: -12.807666778564453
    10. '[]' → logprob: -12.932666778564453

Token 27: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6932849884033203
    2. '(p' → logprob: -0.6932849884033203
    3. '(E' → logprob: -9.44328498840332
    4. 'p' → logprob: -10.44328498840332
    5. '(P' → logprob: -11.94328498840332
    6. '(Node' → logprob: -12.56828498840332
    7. ' (' → logprob: -12.69328498840332
    8. ' p' → logprob: -12.94328498840332
    9. '(Point' → logprob: -13.31828498840332
    10. '(Vertex' → logprob: -13.81828498840332

Token 28: 'Edge' (ID: 16577)
  Prédit: 'Edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.39039069414138794
    2. 'p' → logprob: -1.1403906345367432
    3. ' Edge' → logprob: -5.890390872955322
    4. '(' → logprob: -7.890390872955322
    5. ' p' → logprob: -8.140390396118164
    6. ')' → logprob: -10.515390396118164
    7. '(p' → logprob: -11.140390396118164
    8. ')p' → logprob: -11.265390396118164
    9. '<Edge' → logprob: -11.765390396118164
    10. '.Edge' → logprob: -12.140390396118164

Token 29: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016632776241749525
    2. ')
' → logprob: -7.0016632080078125
    3. '[' → logprob: -8.001663208007812
    4. '   ' → logprob: -8.626663208007812
    5. ' )' → logprob: -8.876663208007812
    6. '[p' → logprob: -10.501663208007812
    7. ' ' → logprob: -10.751663208007812
    8. ')p' → logprob: -10.751663208007812
    9. ')
' → logprob: -11.501663208007812
    10. ')

' → logprob: -13.501663208007812

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7376243472099304
    2. '
' → logprob: -0.8626243472099304
    3. '    
' → logprob: -2.612624406814575
    4. 'dp' → logprob: -5.487624168395996
    5. ')' → logprob: -5.612624168395996
    6. ' 
' → logprob: -6.112624168395996
    7. '   
' → logprob: -6.362624168395996
    8. ' p' → logprob: -6.987624168395996
    9. '  
' → logprob: -6.987624168395996
    10. ' dp' → logprob: -6.987624168395996

Token 31: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -2.0922768115997314
    2. ' dp' → logprob: -2.2172768115997314
    3. '   ' → logprob: -2.3422768115997314
    4. 'dp' → logprob: -2.5922768115997314
    5. ' dist' → logprob: -2.7172768115997314
    6. 'dist' → logprob: -2.7172768115997314
    7. ' q' → logprob: -2.8422768115997314
    8. ' visited' → logprob: -3.3422768115997314
    9. 'q' → logprob: -3.3422768115997314
    10. ' parent' → logprob: -3.5922768115997314

Token 32: ' =' (ID: 314)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.34409859776496887
    2. ' =' → logprob: -1.7190985679626465
    3. '=' → logprob: -2.5940985679626465
    4. 'ents' → logprob: -3.7190985679626465
    5. '=[]' → logprob: -5.2190985679626465
    6. '=[' → logprob: -5.8440985679626465
    7. 'nt' → logprob: -7.2190985679626465
    8. 't' → logprob: -7.4690985679626465
    9. 'order' → logprob: -7.4690985679626465
    10. 's' → logprob: -7.8440985679626465

Token 33: ' [' (ID: 723)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.2102023810148239
    2. ' [-' → logprob: -2.33520245552063
    3. '[' → logprob: -3.08520245552063
    4. ' [' → logprob: -3.08520245552063
    5. '[p' → logprob: -7.085202217102051
    6. '[N' → logprob: -7.710202217102051
    7. ' ' → logprob: -11.21020221710205
    8. '[n' → logprob: -11.21020221710205
    9. 'p' → logprob: -11.58520221710205
    10. ' p' → logprob: -12.08520221710205

Token 34: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002007983857765794
    2. ' -' → logprob: -6.252007961273193
    3. '-p' → logprob: -10.252008438110352
    4. '-i' → logprob: -11.002008438110352
    5. 'None' → logprob: -11.002008438110352
    6. '0' → logprob: -12.752008438110352
    7. '-n' → logprob: -13.002008438110352
    8. 'i' → logprob: -13.627008438110352
    9. '-N' → logprob: -13.627008438110352
    10. ' None' → logprob: -14.627008438110352

Token 35: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009972340427339077
    2. ']*' → logprob: -4.75997257232666
    3. ']*(' → logprob: -6.88497257232666
    4. ' ]' → logprob: -8.38497257232666
    5. ' for' → logprob: -9.25997257232666
    6. ')' → logprob: -12.38497257232666
    7. 'for' → logprob: -12.63497257232666
    8. ',' → logprob: -14.00997257232666
    9. ']+' → logprob: -14.63497257232666
    10. '])' → logprob: -15.25997257232666

Token 36: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.811348480870947e-05
    2. '(N' → logprob: -10.00004768371582
    3. ' N' → logprob: -13.25004768371582
    4. '(' → logprob: -14.00004768371582
    5. ' (' → logprob: -17.62504768371582
    6. '	N' → logprob: -18.12504768371582
    7. 'Ｎ' → logprob: -19.25004768371582
    8. ' ' → logprob: -19.37504768371582
    9. '_N' → logprob: -19.62504768371582
    10. 'n' → logprob: -19.75004768371582

Token 37: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0010482928482815623
    2. '
' → logprob: -7.3760480880737305
    3. '   ' → logprob: -8.37604808807373
    4. '    
' → logprob: -9.87604808807373
    5. '<|end|>' → logprob: -9.87604808807373
    6. '  
' → logprob: -11.25104808807373
    7. '\n' → logprob: -11.25104808807373
    8. ' 
' → logprob: -11.37604808807373
    9. '' → logprob: -11.62604808807373
    10. '

' → logprob: -11.87604808807373

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.143759086728096
    2. ' queue' → logprob: -3.01875901222229
    3. ' q' → logprob: -3.76875901222229
    4. ' stack' → logprob: -4.768759250640869
    5. ' visited' → logprob: -4.893759250640869
    6. 'q' → logprob: -4.893759250640869
    7. 'queue' → logprob: -5.143759250640869
    8. ' p' → logprob: -5.393759250640869
    9. 'd' → logprob: -5.643759250640869
    10. 'visited' → logprob: -5.643759250640869

Token 39: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5171383619308472
    2. 'q' → logprob: -1.7671383619308472
    3. 'depth' → logprob: -2.3921384811401367
    4. 'visited' → logprob: -2.6421384811401367
    5. ' que' → logprob: -2.7671384811401367
    6. ' q' → logprob: -2.8921384811401367
    7. 'd' → logprob: -3.1421384811401367
    8. 'dist' → logprob: -3.3921384811401367
    9. 'queue' → logprob: -3.7671384811401367
    10. ' visited' → logprob: -3.8921384811401367

Token 40: '[p' (ID: 23234)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18105606734752655
    2. ' =' → logprob: -2.056056022644043
    3. '=' → logprob: -3.931056022644043
    4. ',' → logprob: -4.806056022644043
    5. '[:]' → logprob: -5.556056022644043
    6. ']' → logprob: -7.181056022644043
    7. 'for' → logprob: -7.181056022644043
    8. '[]' → logprob: -7.431056022644043
    9. 'def' → logprob: -7.556056022644043
    10. '[i' → logprob: -7.681056022644043

Token 41: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005605389014817774
    2. ']=' → logprob: -7.625560760498047
    3. ')' → logprob: -10.500560760498047
    4. ' ]' → logprob: -11.125560760498047
    5. '])' → logprob: -12.000560760498047
    6. ']
' → logprob: -12.250560760498047
    7. '[' → logprob: -12.875560760498047
    8. ']=-' → logprob: -13.000560760498047
    9. ']==' → logprob: -13.000560760498047
    10. ')]' → logprob: -13.250560760498047

Token 42: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4308343231678009
    2. ' =' → logprob: -1.0558342933654785
    3. ',' → logprob: -6.8058342933654785
    4. ']' → logprob: -7.1808342933654785
    5. '[' → logprob: -10.305834770202637
    6. ']=' → logprob: -10.430834770202637
    7. ')' → logprob: -10.680834770202637
    8. ' ' → logprob: -10.805834770202637
    9. '=int' → logprob: -10.930834770202637
    10. 's' → logprob: -11.305834770202637

Token 43: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10822812467813492
    2. 'p' → logprob: -2.4832282066345215
    3. '-p' → logprob: -3.9832282066345215
    4. ' -' → logprob: -7.7332282066345215
    5. ' p' → logprob: -10.983227729797363
    6. '0' → logprob: -11.733227729797363
    7. '1' → logprob: -12.358227729797363
    8. '-par' → logprob: -12.983227729797363
    9. '-parent' → logprob: -13.858227729797363
    10. '<p' → logprob: -14.108227729797363

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.250000953674316
    3. '１' → logprob: -16.062501907348633
    4. '2' → logprob: -16.187501907348633
    5. '<|end|>' → logprob: -16.312501907348633
    6. '11' → logprob: -16.437501907348633
    7. '<|end|>' → logprob: -17.187501907348633
    8. '۱' → logprob: -17.375001907348633
    9. '১' → logprob: -17.562501907348633
    10. 'p' → logprob: -18.125001907348633

Token 45: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.001118903630413115
    2. ' 
' → logprob: -7.376119136810303
    3. '  
' → logprob: -9.001118659973145
    4. '
' → logprob: -9.126118659973145
    5. '\n' → logprob: -9.376118659973145
    6. '    
' → logprob: -10.001118659973145
    7. '   ' → logprob: -10.001118659973145
    8. '<|end|>' → logprob: -10.626118659973145
    9. '' → logprob: -11.251118659973145
    10. ' for' → logprob: -11.501118659973145

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005586737301200628
    2. '
' → logprob: -5.505586624145508
    3. ' queue' → logprob: -6.755586624145508
    4. 'queue' → logprob: -9.130586624145508
    5. '    
' → logprob: -9.380586624145508
    6. '	queue' → logprob: -10.005586624145508
    7. '  ' → logprob: -10.630586624145508
    8. ' deque' → logprob: -10.880586624145508
    9. ' for' → logprob: -11.755586624145508
    10. '    ' → logprob: -11.880586624145508

Token 47: ' stack' (ID: 10825)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7253532409667969
    2. 'q' → logprob: -1.1003532409667969
    3. ' queue' → logprob: -2.600353240966797
    4. 'queue' → logprob: -3.100353240966797
    5. ' q' → logprob: -3.600353240966797
    6. ' que' → logprob: -4.350353240966797
    7. 'd' → logprob: -4.850353240966797
    8. 'dq' → logprob: -4.850353240966797
    9. 'que' → logprob: -5.600353240966797
    10. ' dq' → logprob: -6.475353240966797

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -6.0629870858974755e-05
    2. '=' → logprob: -9.87506103515625
    3. '=[]' → logprob: -12.00006103515625
    4. ' =[' → logprob: -13.62506103515625
    5. '    ' → logprob: -14.62506103515625
    6. ' ' → logprob: -15.00006103515625
    7. ',' → logprob: -15.37506103515625
    8. '[]' → logprob: -15.50006103515625
    9. '[' → logprob: -15.62506103515625
    10. '.append' → logprob: -16.00006103515625

Token 49: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0508332252502441
    2. '[p' → logprob: -1.0508332252502441
    3. ' [' → logprob: -1.3008332252502441
    4. 'deque' → logprob: -3.675833225250244
    5. ' deque' → logprob: -5.925833225250244
    6. '[(' → logprob: -8.175832748413086
    7. ' [(' → logprob: -10.675832748413086
    8. '[q' → logprob: -10.800832748413086
    9. '[d' → logprob: -10.800832748413086
    10. '[]' → logprob: -11.300832748413086

Token 50: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0005445729475468397
    2. '(p' → logprob: -7.625544548034668
    3. ' p' → logprob: -10.250544548034668
    4. '(' → logprob: -11.375544548034668
    5. ' (' → logprob: -11.625544548034668
    6. '   ' → logprob: -14.750544548034668
    7. '[p' → logprob: -16.125545501708984
    8. '0' → logprob: -16.500545501708984
    9. ' ' → logprob: -17.250545501708984
    10. '<p' → logprob: -17.500545501708984

Token 51: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002091615227982402
    2. ']
' → logprob: -6.252091407775879
    3. ' ]' → logprob: -9.002091407775879
    4. '   ' → logprob: -10.752091407775879
    5. ')' → logprob: -11.502091407775879
    6. ']
' → logprob: -12.252091407775879
    7. ' ]
' → logprob: -13.877091407775879
    8. ']

' → logprob: -14.002091407775879
    9. ')]' → logprob: -14.127091407775879
    10. ' ' → logprob: -15.877091407775879

Token 52: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02667621523141861
    2. ' while' → logprob: -4.401676177978516
    3. '   ' → logprob: -5.151676177978516
    4. '    
' → logprob: -6.026676177978516
    5. 'while' → logprob: -6.151676177978516
    6. '\n' → logprob: -6.276676177978516
    7. ' 
' → logprob: -7.526676177978516
    8. '	while' → logprob: -7.526676177978516
    9. '  
' → logprob: -8.026676177978516
    10. '<|end|>' → logprob: -9.401676177978516

Token 53: ' order' (ID: 2569)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3929700553417206
    2. ' while' → logprob: -1.142970085144043
    3. '   ' → logprob: -5.142970085144043
    4. '	while' → logprob: -9.142970085144043
    5. '```' → logprob: -9.392970085144043
    6. 'While' → logprob: -10.892970085144043
    7. '    
' → logprob: -11.642970085144043
    8. '
' → logprob: -11.767970085144043
    9. ' While' → logprob: -13.142970085144043
    10. ' ' → logprob: -13.142970085144043

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0013298832345753908
    2. '=' → logprob: -6.6263298988342285
    3. '=[]' → logprob: -13.25132942199707
    4. '.append' → logprob: -14.12632942199707
    5. ' ' → logprob: -15.00132942199707
    6. '.' → logprob: -15.00132942199707
    7. ',' → logprob: -15.50132942199707
    8. ' =[' → logprob: -15.75132942199707
    9. '[:]' → logprob: -16.25132942199707
    10. ' =)' → logprob: -16.25132942199707

Token 55: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0027415158692747355
    2. ' []' → logprob: -6.00274133682251
    3. '[' → logprob: -8.252741813659668
    4. 'deque' → logprob: -12.502741813659668
    5. '[p' → logprob: -14.377741813659668
    6. '[]
' → logprob: -15.127741813659668
    7. '[]}' → logprob: -15.502741813659668
    8. '[]>' → logprob: -15.627741813659668
    9. ' [' → logprob: -16.25274085998535
    10. '[]

' → logprob: -16.37774085998535

Token 56: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38374823331832886
    2. '   ' → logprob: -2.0087482929229736
    3. ' while' → logprob: -2.3837482929229736
    4. 'while' → logprob: -3.1337482929229736
    5. '	while' → logprob: -3.3837482929229736
    6. '    
' → logprob: -5.0087480545043945
    7. '\n' → logprob: -5.7587480545043945
    8. '  
' → logprob: -6.7587480545043945
    9. '	
' → logprob: -7.0087480545043945
    10. ' 
' → logprob: -7.3837480545043945

Token 57: ' visited' (ID: 18416)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5765784978866577
    2. ' while' → logprob: -0.8265784978866577
    3. '   ' → logprob: -7.576578617095947
    4. '	while' → logprob: -9.076578140258789
    5. 'While' → logprob: -11.826578140258789
    6. '```' → logprob: -12.951578140258789
    7. ' While' → logprob: -13.826578140258789
    8. ' ' → logprob: -14.451578140258789
    9. '  ' → logprob: -15.201578140258789
    10. '    
' → logprob: -15.451578140258789

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0036079094279557467
    2. '=' → logprob: -5.628607749938965
    3. '[' → logprob: -12.253607749938965
    4. '=set' → logprob: -13.253607749938965
    5. ' =[' → logprob: -14.753607749938965
    6. ' ' → logprob: -14.878607749938965
    7. ')' → logprob: -16.12860870361328
    8. '=[]' → logprob: -16.50360870361328
    9. '<|end|>' → logprob: -16.50360870361328
    10. ']' → logprob: -16.62860870361328

Token 59: ' set' (ID: 920)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6234145164489746
    2. ' [' → logprob: -0.8734145164489746
    3. ' set' → logprob: -3.3734145164489746
    4. 'set' → logprob: -4.623414516448975
    5. '{' → logprob: -6.373414516448975
    6. ' {' → logprob: -7.498414516448975
    7. ' ' → logprob: -11.498414993286133
    8. '=set' → logprob: -13.623414993286133
    9. '   ' → logprob: -13.748414993286133
    10. '(set' → logprob: -13.998414993286133

Token 60: '([' (ID: 5194)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007498844061046839
    2. '(' → logprob: -5.757498741149902
    3. '()\' → logprob: -6.007498741149902
    4. '()
' → logprob: -6.382498741149902
    5. '()

' → logprob: -9.882498741149902
    6. '(stack' → logprob: -10.632498741149902
    7. ' ()' → logprob: -11.007498741149902
    8. '()
' → logprob: -11.132498741149902
    9. '(\' → logprob: -11.507498741149902
    10. '   ' → logprob: -12.132498741149902

Token 61: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00012678056373260915
    2. ' p' → logprob: -9.000126838684082
    3. '   ' → logprob: -12.750126838684082
    4. '0' → logprob: -16.500125885009766
    5. '(p' → logprob: -16.875125885009766
    6. ' ' → logprob: -17.000125885009766
    7. '  ' → logprob: -17.000125885009766
    8. ')p' → logprob: -17.250125885009766
    9. '	p' → logprob: -17.375125885009766
    10. 'stack' → logprob: -17.500125885009766

Token 62: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00010402000043541193
    2. '])
' → logprob: -10.000103950500488
    3. ')' → logprob: -10.125103950500488
    4. ' ])' → logprob: -11.125103950500488
    5. ')])' → logprob: -13.625103950500488
    6. '])
' → logprob: -15.125103950500488
    7. '   ' → logprob: -15.250103950500488
    8. '])]' → logprob: -15.250103950500488
    9. ']))' → logprob: -15.375103950500488
    10. '])

' → logprob: -15.375103950500488

Token 63: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03206072375178337
    2. ' while' → logprob: -4.532060623168945
    3. '	while' → logprob: -5.157060623168945
    4. '   ' → logprob: -5.407060623168945
    5. 'while' → logprob: -5.657060623168945
    6. '    
' → logprob: -5.907060623168945
    7. '  
' → logprob: -6.907060623168945
    8. ' 
' → logprob: -7.157060623168945
    9. '	
' → logprob: -7.407060623168945
    10. '\n' → logprob: -7.532060623168945

Token 64: ' ast' (ID: 12004)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.5316243171691895
    2. 'while' → logprob: -1.0316243171691895
    3. '   ' → logprob: -3.1566243171691895
    4. '	while' → logprob: -4.9066243171691895
    5. '```' → logprob: -6.1566243171691895
    6. '
' → logprob: -6.2816243171691895
    7. '    
' → logprob: -7.1566243171691895
    8. '\n' → logprob: -7.9066243171691895
    9. 'While' → logprob: -8.531623840332031
    10. '<|end|>' → logprob: -8.531623840332031

Token 65: ' =' (ID: 314)
  Prédit: 'ack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ack' → logprob: -0.08154678344726562
    2. 'er' → logprob: -2.5815467834472656
    3. 'r' → logprob: -6.706546783447266
    4. 'ar' → logprob: -7.331546783447266
    5. 'ck' → logprob: -7.831546783447266
    6. 'k' → logprob: -8.331546783447266
    7. 'ask' → logprob: -10.581546783447266
    8. 'ak' → logprob: -11.206546783447266
    9. ' =' → logprob: -11.706546783447266
    10. 'ek' → logprob: -11.956546783447266

Token 66: ' stack' (ID: 10825)
  Prédit: 'ack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ack' → logprob: -0.13016530871391296
    2. 'ck' → logprob: -3.1301653385162354
    3. ' stack' → logprob: -3.3801653385162354
    4. 'stack' → logprob: -3.3801653385162354
    5. 'deque' → logprob: -5.255165100097656
    6. '[]' → logprob: -6.380165100097656
    7. ' []' → logprob: -7.255165100097656
    8. ' deque' → logprob: -7.630165100097656
    9. 'acks' → logprob: -8.130165100097656
    10. 'acking' → logprob: -8.505165100097656

Token 67: '.append' (ID: 3709)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.023620450869202614
    2. '.' → logprob: -5.27362060546875
    3. '.append' → logprob: -5.39862060546875
    4. ' =' → logprob: -5.52362060546875
    5. '[-' → logprob: -5.64862060546875
    6. '=' → logprob: -6.02362060546875
    7. '[:]' → logprob: -6.52362060546875
    8. '[' → logprob: -7.52362060546875
    9. 'pop' → logprob: -7.89862060546875
    10. '[::-' → logprob: -8.02362060546875

Token 68: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4988254904747009
    2. '(stack' → logprob: -0.9988254904747009
    3. '(p' → logprob: -4.498825550079346
    4. '((' → logprob: -5.248825550079346
    5. '(None' → logprob: -6.123825550079346
    6. '(ast' → logprob: -6.248825550079346
    7. '('' → logprob: -7.373825550079346
    8. '<|end|>' → logprob: -8.123825073242188
    9. '(paren' → logprob: -8.248825073242188
    10. '(Stack' → logprob: -8.248825073242188

Token 69: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7729999423027039
    2. 'def' → logprob: -2.1480000019073486
    3. '(' → logprob: -2.2730000019073486
    4. 'while' → logprob: -2.7730000019073486
    5. ')' → logprob: -3.2730000019073486
    6. '   ' → logprob: -3.2730000019073486
    7. '(stack' → logprob: -3.6480000019073486
    8. '(
' → logprob: -3.7730000019073486
    9. ' while' → logprob: -4.3979997634887695
    10. '    
' → logprob: -4.3979997634887695

Token 70: ' apo' (ID: 34892)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.4456122815608978
    2. 'while' → logprob: -1.0706123113632202
    3. '   ' → logprob: -4.82061243057251
    4. 'pop' → logprob: -5.19561243057251
    5. ' pop' → logprob: -6.57061243057251
    6. '    
' → logprob: -7.94561243057251
    7. '	while' → logprob: -8.070611953735352
    8. 'for' → logprob: -9.070611953735352
    9. ' 
' → logprob: -9.195611953735352
    10. '(' → logprob: -9.195611953735352

Token 71: ' =' (ID: 314)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.4153549020411447e-05
    2. 'per' → logprob: -11.75002384185791
    3. 'pend' → logprob: -12.25002384185791
    4. 'ps' → logprob: -12.37502384185791
    5. 'pper' → logprob: -12.75002384185791
    6. 'pping' → logprob: -14.25002384185791
    7. 'pp' → logprob: -14.75002384185791
    8. 'pl' → logprob: -15.25002384185791
    9. 'plist' → logprob: -15.25002384185791
    10. 'play' → logprob: -15.37502384185791

Token 72: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.05746147409081459
    2. ' order' → logprob: -3.0574615001678467
    3. 'pop' → logprob: -5.057461261749268
    4. 'par' → logprob: -6.557461261749268
    5. 'stack' → logprob: -7.432461261749268
    6. 'p' → logprob: -7.932461261749268
    7. ' stack' → logprob: -10.807461738586426
    8. ' p' → logprob: -11.057461738586426
    9. 'append' → logprob: -11.307461738586426
    10. 'queue' → logprob: -11.682461738586426

Token 73: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001167960581369698
    2. '.' → logprob: -7.3761677742004395
    3. 'append' → logprob: -7.6261677742004395
    4. '.extend' → logprob: -10.751168251037598
    5. ' .' → logprob: -10.876168251037598
    6. 'appen' → logprob: -12.626168251037598
    7. '.app' → logprob: -12.751168251037598
    8. '_append' → logprob: -13.001168251037598
    9. 'pp' → logprob: -13.751168251037598
    10. '	append' → logprob: -13.876168251037598

Token 74: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2999264895915985
    2. '
' → logprob: -1.424926519393921
    3. '    
' → logprob: -4.174926280975342
    4. ' while' → logprob: -6.799926280975342
    5. 'while' → logprob: -7.049926280975342
    6. ' 
' → logprob: -8.5499267578125
    7. ',' → logprob: -8.6749267578125
    8. '<|end|>' → logprob: -8.6749267578125
    9. '```' → logprob: -9.0499267578125
    10. '<|end|>' → logprob: -9.5499267578125

Token 75: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8538684248924255
    2. 'while' → logprob: -1.2288684844970703
    3. ' while' → logprob: -1.7288684844970703
    4. '
' → logprob: -2.3538684844970703
    5. '    
' → logprob: -5.22886848449707
    6. '	while' → logprob: -6.22886848449707
    7. '```' → logprob: -7.22886848449707
    8. 'While' → logprob: -7.97886848449707
    9. ' 
' → logprob: -8.35386848449707
    10. '  
' → logprob: -8.60386848449707

Token 76: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.15659217536449432
    2. ' while' → logprob: -2.2815921306610107
    3. '   ' → logprob: -3.1565921306610107
    4. '	while' → logprob: -8.53159236907959
    5. 'While' → logprob: -10.28159236907959
    6. '```' → logprob: -11.40659236907959
    7. '
' → logprob: -12.78159236907959
    8. '    
' → logprob: -13.03159236907959
    9. ' ' → logprob: -13.15659236907959
    10. ' While' → logprob: -13.65659236907959

Token 77: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.02056676335632801
    2. 'stack' → logprob: -3.895566701889038
    3. '(stack' → logprob: -10.895566940307617
    4. '	stack' → logprob: -12.270566940307617
    5. ' len' → logprob: -14.145566940307617
    6. ' ' → logprob: -15.020566940307617
    7. ' ast' → logprob: -15.645566940307617
    8. 'st' → logprob: -16.020566940307617
    9. ' stk' → logprob: -16.395566940307617
    10. 'len' → logprob: -16.520566940307617

Token 78: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004702107049524784
    2. '):' → logprob: -5.379702091217041
    3. ':
' → logprob: -10.6297025680542
    4. '>:' → logprob: -10.7547025680542
    5. ' :' → logprob: -11.2547025680542
    6. ' and' → logprob: -12.1297025680542
    7. '():' → logprob: -12.5047025680542
    8. '):
' → logprob: -12.5047025680542
    9. ':**' → logprob: -12.6297025680542
    10. ']:' → logprob: -13.0047025680542

Token 79: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9712221622467041
    2. ' v' → logprob: -1.096222162246704
    3. 'v' → logprob: -1.346222162246704
    4. '   ' → logprob: -3.971222162246704
    5. ' u' → logprob: -6.596221923828125
    6. 'u' → logprob: -6.596221923828125
    7. '    ' → logprob: -6.596221923828125
    8. 'n' → logprob: -6.721221923828125
    9. ' x' → logprob: -7.096221923828125
    10. ' n' → logprob: -8.346221923828125

Token 80: ' vn' (ID: 88772)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.04953442141413689
    2. ' v' → logprob: -3.299534320831299
    3. 'u' → logprob: -5.174534320831299
    4. '   ' → logprob: -5.424534320831299
    5. ' u' → logprob: -7.549534320831299
    6. 'c' → logprob: -8.049534797668457
    7. 'x' → logprob: -8.424534797668457
    8. 'n' → logprob: -9.174534797668457
    9. 'node' → logprob: -9.674534797668457
    10. 't' → logprob: -10.424534797668457

Token 81: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5269709825515747
    2. ' =' → logprob: -0.9019709825515747
    3. 'ode' → logprob: -5.651970863342285
    4. 'ow' → logprob: -8.776970863342285
    5. '   ' → logprob: -9.651970863342285
    6. 't' → logprob: -10.151970863342285
    7. 'ame' → logprob: -11.026970863342285
    8. 'um' → logprob: -11.651970863342285
    9. 'ext' → logprob: -11.651970863342285
    10. ' ' → logprob: -12.276970863342285

Token 82: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.10021239519119263
    2. ' stack' → logprob: -2.350212335586548
    3. '	stack' → logprob: -12.350212097167969
    4. ' ' → logprob: -14.600212097167969
    5. '(stack' → logprob: -14.850212097167969
    6. 'st' → logprob: -15.100212097167969
    7. 'Stack' → logprob: -16.47521209716797
    8. '_stack' → logprob: -16.47521209716797
    9. '.stack' → logprob: -16.60021209716797
    10. 'sta' → logprob: -17.22521209716797

Token 83: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -2.570319702499546e-05
    2. 'pop' → logprob: -11.250025749206543
    3. '[-' → logprob: -11.750025749206543
    4. '.' → logprob: -12.250025749206543
    5. '   ' → logprob: -18.500024795532227
    6. ' .' → logprob: -18.875024795532227
    7. ' pop' → logprob: -20.625024795532227
    8. '	pop' → logprob: -20.875024795532227
    9. '-pop' → logprob: -21.125024795532227
    10. '.p' → logprob: -21.375024795532227

Token 84: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16028179228305817
    2. '()
' → logprob: -1.910281777381897
    3. '()
' → logprob: -10.160282135009766
    4. '()

' → logprob: -11.910282135009766
    5. '()\' → logprob: -12.535282135009766
    6. ')' → logprob: -12.785282135009766
    7. '       ' → logprob: -13.535282135009766
    8. '()`' → logprob: -13.660282135009766
    9. ' ()' → logprob: -13.910282135009766
    10. '(' → logprob: -14.160282135009766

Token 85: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02534095197916031
    2. '
' → logprob: -4.025341033935547
    3. ' apo' → logprob: -6.025341033935547
    4. 'apo' → logprob: -6.150341033935547
    5. '   ' → logprob: -6.775341033935547
    6. '        
' → logprob: -7.525341033935547
    7. '<|end|>' → logprob: -8.650341033935547
    8. '	' → logprob: -8.900341033935547
    9. '<|end|>' → logprob: -8.900341033935547
    10. ',' → logprob: -9.150341033935547

Token 86: ' apo' (ID: 34892)
  Prédit: 'apo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apo' (adapté à ' apo') → logprob: -0.7063811421394348
    2. ' apo' → logprob: -0.7063811421394348
    3. '   ' → logprob: -4.456381320953369
    4. '       ' → logprob: -7.956381320953369
    5. ' for' → logprob: -8.581380844116211
    6. ' apos' → logprob: -8.706380844116211
    7. '    ' → logprob: -8.831380844116211
    8. ' ' → logprob: -8.956380844116211
    9. ' Apo' → logprob: -9.331380844116211
    10. ' ipo' → logprob: -9.456380844116211

Token 87: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -4.4849443838757e-06
    2. '(' → logprob: -12.375004768371582
    3. '(n' → logprob: -16.125003814697266
    4. '((' → logprob: -18.125003814697266
    5. 'vn' → logprob: -18.625003814697266
    6. ' (' → logprob: -19.375003814697266
    7. '(len' → logprob: -20.375003814697266
    8. '(s' → logprob: -21.125003814697266
    9. '(V' → logprob: -21.625003814697266
    10. '(
' → logprob: -21.625003814697266

Token 88: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.45848218582978e-06
    2. ')' → logprob: -14.37500286102295
    3. ')n' → logprob: -15.00000286102295
    4. 'н' → logprob: -15.50000286102295
    5. 'nable' → logprob: -15.93750286102295
    6. 'alue' → logprob: -16.187501907348633
    7. 'vn' → logprob: -16.375001907348633
    8. '<n' → logprob: -16.750001907348633
    9. 'ariable' → logprob: -16.750001907348633
    10. '[n' → logprob: -16.750001907348633

Token 89: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0299261212348938
    2. ')' → logprob: -3.529926061630249
    3. ')
' → logprob: -8.654926300048828
    4. ')

' → logprob: -14.154926300048828
    5. ' )
' → logprob: -15.029926300048828
    6. ')`
' → logprob: -15.529926300048828
    7. ')\' → logprob: -16.154926300048828
    8. '   ' → logprob: -16.904926300048828
    9. '       ' → logprob: -17.029926300048828
    10. ')
/' → logprob: -17.904926300048828

Token 90: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9117497801780701
    2. 'for' → logprob: -0.9117497801780701
    3. '       ' → logprob: -2.036749839782715
    4. '   ' → logprob: -2.786749839782715
    5. ' ast' → logprob: -5.661749839782715
    6. '	for' → logprob: -7.411749839782715
    7. 'ast' → logprob: -9.411749839782715
    8. '<|end|>' → logprob: -10.661749839782715
    9. '        
' → logprob: -10.911749839782715
    10. ' ' → logprob: -11.411749839782715

Token 91: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04313495755195618
    2. ' for' → logprob: -3.293134927749634
    3. '   ' → logprob: -5.293135166168213
    4. ' ast' → logprob: -10.293134689331055
    5. '	for' → logprob: -11.668134689331055
    6. 'ast' → logprob: -11.793134689331055
    7. '
' → logprob: -13.168134689331055
    8. '       ' → logprob: -13.543134689331055
    9. '    ' → logprob: -14.543134689331055
    10. ' ' → logprob: -15.043134689331055

Token 92: ' vf' (ID: 128487)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nx' → logprob: -1.0644198656082153
    2. 'w' → logprob: -1.3144198656082153
    3. 'nv' → logprob: -1.8144198656082153
    4. 'n' → logprob: -2.814419746398926
    5. 'u' → logprob: -3.189419746398926
    6. 'e' → logprob: -3.439419746398926
    7. 'to' → logprob: -3.939419746398926
    8. ' w' → logprob: -4.314419746398926
    9. 'nn' → logprob: -4.439419746398926
    10. ' nxt' → logprob: -4.564419746398926

Token 93: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12732629477977753
    2. 'in' → logprob: -2.127326250076294
    3. 'n' → logprob: -8.752326011657715
    4. ' ' → logprob: -9.377326011657715
    5. '   ' → logprob: -10.127326011657715
    6. ',' → logprob: -10.252326011657715
    7. 'a' → logprob: -11.127326011657715
    8. '	in' → logprob: -11.377326011657715
    9. '  ' → logprob: -11.502326011657715
    10. 'i' → logprob: -12.127326011657715

Token 94: ' Edge' (ID: 16396)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.6330589056015015
    2. ' Edge' → logprob: -0.7580589056015015
    3. '   ' → logprob: -8.133058547973633
    4. '<Edge' → logprob: -9.758058547973633
    5. ' ' → logprob: -10.133058547973633
    6. '.Edge' → logprob: -11.633058547973633
    7. '[' → logprob: -12.008058547973633
    8. ' edge' → logprob: -12.008058547973633
    9. ' reversed' → logprob: -12.008058547973633
    10. ' sorted' → logprob: -12.258058547973633

Token 95: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -8.220573363360018e-05
    2. '   ' → logprob: -10.000082015991211
    3. '[' → logprob: -10.375082015991211
    4. ' [' → logprob: -13.250082015991211
    5. '       ' → logprob: -13.625082015991211
    6. '][' → logprob: -14.875082015991211
    7. '```' → logprob: -15.125082015991211
    8. '[[' → logprob: -15.375082015991211
    9. '[n' → logprob: -15.500082015991211
    10. '\[' → logprob: -15.500082015991211

Token 96: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.2842308680992573e-05
    2. '[n' → logprob: -11.125022888183594
    3. 'N' → logprob: -13.125022888183594
    4. 'vn' → logprob: -14.000022888183594
    5. ']' → logprob: -14.500022888183594
    6. '[' → logprob: -14.750022888183594
    7. '<n' → logprob: -14.875022888183594
    8. 'н' → logprob: -15.000022888183594
    9. '	n' → logprob: -15.250022888183594
    10. 'p' → logprob: -15.250022888183594

Token 97: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.6956609487533569
    2. ']:
' → logprob: -0.6956609487533569
    3. ']' → logprob: -6.4456610679626465
    4. ']:
' → logprob: -7.0706610679626465
    5. ' ]' → logprob: -10.195660591125488
    6. ']:

' → logprob: -10.945660591125488
    7. ']>' → logprob: -11.945660591125488
    8. ']:


' → logprob: -12.695660591125488
    9. ':' → logprob: -13.445660591125488
    10. '[' → logprob: -13.695660591125488

Token 98: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0022135386243462563
    2. ' if' → logprob: -6.752213478088379
    3. '	       ' → logprob: -7.502213478088379
    4. '<|end|>' → logprob: -8.127213478088379
    5. '            
' → logprob: -10.377213478088379
    6. 'if' → logprob: -10.627213478088379
    7. '        ' → logprob: -10.752213478088379
    8. '               ' → logprob: -11.002213478088379
    9. '<|end|>' → logprob: -11.252213478088379
    10. '          ' → logprob: -11.252213478088379

Token 99: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14832696318626404
    2. '               ' → logprob: -2.023326873779297
    3. 'if' (adapté à ' if') → logprob: -5.398326873779297
    4. '            ' → logprob: -7.773326873779297
    5. '                ' → logprob: -8.273326873779297
    6. '<|end|>' → logprob: -9.273326873779297
    7. '    ' → logprob: -9.648326873779297
    8. ' ' → logprob: -9.648326873779297
    9. '                
' → logprob: -10.273326873779297
    10. '           ' → logprob: -10.398326873779297

Token 100: ' vf' (ID: 128487)
  Prédit: ' vf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vf' → logprob: -0.25194504857063293
    2. 'vf' → logprob: -1.5019450187683105
    3. 'not' → logprob: -11.751945495605469
    4. ' not' → logprob: -12.376945495605469
    5. 'v' → logprob: -13.501945495605469
    6. '   ' → logprob: -14.376945495605469
    7. ' ' → logprob: -15.251945495605469
    8. '(v' → logprob: -15.376945495605469
    9. ' v' → logprob: -15.501945495605469
    10. ' Vf' → logprob: -15.876945495605469

Token 101: ' in' (ID: 306)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.00861669983714819
    2. 'not' → logprob: -4.758616924285889
    3. ')' → logprob: -13.38361644744873
    4. ' in' → logprob: -15.38361644744873
    5. ':not' → logprob: -15.75861644744873
    6. '	not' → logprob: -15.88361644744873
    7. ' ' → logprob: -16.133617401123047
    8. ' )' → logprob: -16.883617401123047
    9. '
' → logprob: -17.383617401123047
    10. '<|end|>' → logprob: -17.508617401123047

Token 102: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.16023264825344086
    2. 'visited' → logprob: -1.910232663154602
    3. ' ' → logprob: -12.285232543945312
    4. '   ' → logprob: -13.035232543945312
    5. '
' → logprob: -14.535232543945312
    6. '  ' → logprob: -14.785232543945312
    7. 'Visited' → logprob: -15.535232543945312
    8. ' not' → logprob: -16.285232543945312
    9. 'not' → logprob: -16.410232543945312
    10. 'visi' → logprob: -16.535232543945312

Token 103: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10191092640161514
    2. '               ' → logprob: -2.7269108295440674
    3. ':
' → logprob: -3.4769108295440674
    4. ' or' → logprob: -8.851910591125488
    5. ' :' → logprob: -9.226910591125488
    6. ' continue' → logprob: -9.601910591125488
    7. 'continue' → logprob: -9.726910591125488
    8. '           ' → logprob: -9.851910591125488
    9. '	           ' → logprob: -10.976910591125488
    10. ':return' → logprob: -11.226910591125488

Token 104: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01180774811655283
    2. ' continue' → logprob: -4.636807918548584
    3. 'continue' → logprob: -6.886807918548584
    4. ':' → logprob: -7.136807918548584
    5. ':
' → logprob: -9.011807441711426
    6. '	continue' → logprob: -10.636807441711426
    7. '           ' → logprob: -11.011807441711426
    8. ',' → logprob: -11.261807441711426
    9. '_continue' → logprob: -11.761807441711426
    10. '	           ' → logprob: -11.886807441711426

Token 105: ' continue' (ID: 4901)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6958214640617371
    2. ' continue' → logprob: -0.8208214640617371
    3. 'continue' (adapté à ' continue') → logprob: -3.070821523666382
    4. '               ' → logprob: -4.320821285247803
    5. '	continue' → logprob: -6.945821285247803
    6. '           ' → logprob: -8.695821762084961
    7. '                       ' → logprob: -9.320821762084961
    8. '   ' → logprob: -9.445821762084961
    9. '_continue' → logprob: -9.445821762084961
    10. ' ' → logprob: -9.695821762084961

Token 106: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0021990251261740923
    2. '            
' → logprob: -6.752199172973633
    3. '
' → logprob: -7.502199172973633
    4. ' 
' → logprob: -8.127199172973633
    5. '<|end|>' → logprob: -9.377199172973633
    6. '  
' → logprob: -10.752199172973633
    7. '    
' → logprob: -11.377199172973633
    8. '		' → logprob: -11.627199172973633
    9. '```' → logprob: -12.252199172973633
    10. '<|end|>' → logprob: -12.252199172973633

Token 107: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008787082624621689
    2. '            
' → logprob: -7.375878810882568
    3. '
' → logprob: -9.12587833404541
    4. ' 
' → logprob: -9.50087833404541
    5. '<|end|>' → logprob: -11.00087833404541
    6. '  
' → logprob: -11.87587833404541
    7. '    
' → logprob: -11.87587833404541
    8. '          ' → logprob: -12.12587833404541
    9. '           
' → logprob: -12.37587833404541
    10. '```' → logprob: -12.87587833404541

Token 108: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.08069269359111786
    2. 'visited' (adapté à ' visited') → logprob: -3.205692768096924
    3. '           ' → logprob: -3.330692768096924
    4. '   ' → logprob: -7.080692768096924
    5. ' ast' → logprob: -8.955692291259766
    6. 'Visited' → logprob: -9.705692291259766
    7. '       ' → logprob: -10.330692291259766
    8. ' par' → logprob: -10.705692291259766
    9. '    ' → logprob: -11.080692291259766
    10. ' visit' → logprob: -11.080692291259766

Token 109: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0008142740116454661
    2. '.' → logprob: -7.125814437866211
    3. ' .' → logprob: -11.625814437866211
    4. 'add' → logprob: -14.500814437866211
    5. '.Add' → logprob: -16.37581443786621
    6. '           ' → logprob: -16.50081443786621
    7. ')add' → logprob: -16.50081443786621
    8. ' add' → logprob: -17.12581443786621
    9. '   ' → logprob: -17.37581443786621
    10. '	add' → logprob: -18.37581443786621

Token 110: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -3.15441757265944e-05
    2. '(' → logprob: -10.375031471252441
    3. '(f' → logprob: -16.500032424926758
    4. '(
' → logprob: -16.500032424926758
    5. '(

' → logprob: -17.875032424926758
    6. ' (' → logprob: -18.750032424926758
    7. '((' → logprob: -18.875032424926758
    8. '(s' → logprob: -20.250032424926758
    9. '(n' → logprob: -20.250032424926758
    10. '(V' → logprob: -20.500032424926758

Token 111: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.000875135709065944
    2. 'vf' → logprob: -7.125874996185303
    3. ' vf' → logprob: -9.750875473022461
    4. '(v' → logprob: -12.125875473022461
    5. '(f' → logprob: -13.500875473022461
    6. 'fv' → logprob: -13.625875473022461
    7. '   ' → logprob: -14.500875473022461
    8. ')' → logprob: -14.500875473022461
    9. '           ' → logprob: -14.875875473022461
    10. 'ф' → logprob: -15.000875473022461

Token 112: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6943054795265198
    2. ')' → logprob: -0.9443054795265198
    3. '           ' → logprob: -2.194305419921875
    4. ')
' → logprob: -8.819305419921875
    5. '               ' → logprob: -11.444305419921875
    6. ' )
' → logprob: -11.944305419921875
    7. '       ' → logprob: -12.069305419921875
    8. ')v' → logprob: -12.694305419921875
    9. ' )' → logprob: -12.819305419921875
    10. ',' → logprob: -12.819305419921875

Token 113: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012096378486603498
    2. ' par' → logprob: -7.501209735870361
    3. 'stack' → logprob: -8.001209259033203
    4. ' stack' → logprob: -8.626209259033203
    5. 'par' → logprob: -9.251209259033203
    6. ' ast' → logprob: -10.626209259033203
    7. '       ' → logprob: -11.876209259033203
    8. '   ' → logprob: -12.126209259033203
    9. '          ' → logprob: -13.001209259033203
    10. '               ' → logprob: -13.876209259033203

Token 114: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' (adapté à ' par') → logprob: -0.20372824370861053
    2. 'stack' → logprob: -1.703728199005127
    3. ' stack' → logprob: -7.078728199005127
    4. ' par' → logprob: -7.203728199005127
    5. '           ' → logprob: -7.453728199005127
    6. 'ast' → logprob: -9.453728675842285
    7. '   ' → logprob: -10.578728675842285
    8. '               ' → logprob: -11.578728675842285
    9. '       ' → logprob: -12.078728675842285
    10. 'parent' → logprob: -12.078728675842285

Token 115: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -6.869017852295656e-06
    2. '[' → logprob: -12.625006675720215
    3. '```' → logprob: -13.375006675720215
    4. 'vf' → logprob: -14.000006675720215
    5. '[df' → logprob: -15.375006675720215
    6. '	v' → logprob: -15.375006675720215
    7. ' [' → logprob: -15.625006675720215
    8. '   ' → logprob: -16.00000762939453
    9. '[val' → logprob: -17.00000762939453
    10. ')[' → logprob: -17.12500762939453

Token 116: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.021729037165641785
    2. 'n' → logprob: -3.896728992462158
    3. '[f' → logprob: -7.146728992462158
    4. ']' → logprob: -9.021729469299316
    5. '[v' → logprob: -9.396729469299316
    6. '[n' → logprob: -9.521729469299316
    7. '].' → logprob: -10.521729469299316
    8. 'm' → logprob: -10.771729469299316
    9. '[' → logprob: -11.146729469299316
    10. '.append' → logprob: -11.396729469299316

Token 117: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0027834810316562653
    2. ']=' → logprob: -6.127783298492432
    3. ' ]' → logprob: -8.25278377532959
    4. '=' → logprob: -8.50278377532959
    5. ')' → logprob: -9.50278377532959
    6. ' =' → logprob: -9.75278377532959
    7. ')=' → logprob: -13.87778377532959
    8. '=v' → logprob: -15.00278377532959
    9. ']
' → logprob: -15.25278377532959
    10. ' )' → logprob: -15.25278377532959

Token 118: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760067105293274
    2. ' =' → logprob: -0.8260067105293274
    3. '=v' → logprob: -9.701006889343262
    4. ' =
' → logprob: -13.201006889343262
    5. '=n' → logprob: -13.326006889343262
    6. ')' → logprob: -13.826006889343262
    7. ' ' → logprob: -14.576006889343262
    8. '=
' → logprob: -14.951006889343262
    9. '[' → logprob: -15.701006889343262
    10. '＝' → logprob: -15.951006889343262

Token 119: ' vn' (ID: 88772)
  Prédit: 'vn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vn' → logprob: -0.0031777136027812958
    2. ' vn' → logprob: -5.753177642822266
    3. '
' → logprob: -18.628177642822266
    4. 'nv' → logprob: -18.753177642822266
    5. '.vn' → logprob: -18.753177642822266
    6. 'v' → logprob: -18.753177642822266
    7. 'n' → logprob: -19.253177642822266
    8. '   ' → logprob: -19.378177642822266
    9. 'xn' → logprob: -20.003177642822266
    10. 'wn' → logprob: -20.378177642822266

Token 120: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00017290872347075492
    2. 'stack' → logprob: -9.25017261505127
    3. '
' → logprob: -10.25017261505127
    4. ' stack' → logprob: -11.75017261505127
    5. '            
' → logprob: -12.12517261505127
    6. '		' → logprob: -12.25017261505127
    7. ',' → logprob: -12.37517261505127
    8. '       ' → logprob: -12.75017261505127
    9. '   ' → logprob: -12.87517261505127
    10. '<|end|>' → logprob: -12.87517261505127

Token 121: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009502872708253562
    2. 'stack' → logprob: -7.000950336456299
    3. ' stack' → logprob: -10.62594985961914
    4. '	stack' → logprob: -12.75094985961914
    5. '		' → logprob: -12.87594985961914
    6. '   ' → logprob: -12.87594985961914
    7. '          ' → logprob: -13.37594985961914
    8. '       ' → logprob: -14.12594985961914
    9. ' ast' → logprob: -14.37594985961914
    10. '               ' → logprob: -14.75094985961914

Token 122: ' ast' (ID: 12004)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.0018913877429440618
    2. ' stack' → logprob: -6.626891613006592
    3. ' ast' → logprob: -8.126891136169434
    4. 'ast' (adapté à ' ast') → logprob: -8.376891136169434
    5. '	stack' → logprob: -10.751891136169434
    6. '           ' → logprob: -11.251891136169434
    7. '   ' → logprob: -12.501891136169434
    8. '       ' → logprob: -15.251891136169434
    9. 'st' → logprob: -15.376891136169434
    10. '_stack' → logprob: -15.626891136169434

Token 123: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.5928495486150496e-05
    2. '(f' → logprob: -11.250016212463379
    3. '(' → logprob: -12.875016212463379
    4. '((' → logprob: -16.500015258789062
    5. '(stack' → logprob: -17.125015258789062
    6. '(
' → logprob: -17.375015258789062
    7. ' (' → logprob: -18.750015258789062
    8. '(de' → logprob: -18.875015258789062
    9. '(n' → logprob: -19.000015258789062
    10. '(V' → logprob: -19.750015258789062

Token 124: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.6240566083070007e-06
    2. 'ф' → logprob: -14.625001907348633
    3. ' f' → logprob: -14.875001907348633
    4. '	f' → logprob: -15.750001907348633
    5. '
' → logprob: -16.000001907348633
    6. ''f' → logprob: -16.312501907348633
    7. ')' → logprob: -16.562501907348633
    8. '```' → logprob: -17.062501907348633
    9. '

' → logprob: -17.250001907348633
    10. '   ' → logprob: -17.625001907348633

Token 125: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005532711511477828
    2. ')
' → logprob: -7.625553131103516
    3. ')return' → logprob: -10.000553131103516
    4. ' )' → logprob: -11.500553131103516
    5. '<|end|>' → logprob: -12.875553131103516
    6. '   ' → logprob: -13.125553131103516
    7. '<|end|>' → logprob: -13.875553131103516
    8. '
' → logprob: -14.500553131103516
    9. ')

' → logprob: -14.625553131103516
    10. '```' → logprob: -15.000553131103516

Token 126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6171794533729553
    2. '<|end|>' → logprob: -1.1171793937683105
    3. '
' → logprob: -2.4921793937683105
    4. ')' → logprob: -3.4921793937683105
    5. '\n' → logprob: -4.7421793937683105
    6. '<|end|>' → logprob: -5.9921793937683105
    7. 'return' → logprob: -6.6171793937683105
    8. '#' → logprob: -6.7421793937683105
    9. ' return' → logprob: -6.8671793937683105
    10. '    
' → logprob: -6.9921793937683105

Token 127: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026614466682076454
    2. 'return' (adapté à ' return') → logprob: -3.7766144275665283
    3. ' return' → logprob: -6.401614665985107
    4. '<|end|>' → logprob: -7.276614665985107
    5. '
' → logprob: -7.776614665985107
    6. ')' → logprob: -8.27661418914795
    7. '       ' → logprob: -9.52661418914795
    8. '	return' → logprob: -9.65161418914795
    9. '    
' → logprob: -10.02661418914795
    10. ' ' → logprob: -10.77661418914795

Token 128: ' par' (ID: 686)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.3382135331630707
    2. 'par' → logprob: -1.338213562965393
    3. ' order' → logprob: -3.8382134437561035
    4. ' par' → logprob: -6.5882134437561035
    5. '(par' → logprob: -7.0882134437561035
    6. '(order' → logprob: -7.0882134437561035
    7. 'paren' → logprob: -10.463213920593262
    8. ' (' → logprob: -11.088213920593262
    9. 'parent' → logprob: -11.963213920593262
    10. '(' → logprob: -12.088213920593262

Token 129: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23738239705562592
    2. '<|end|>' → logprob: -1.737382411956787
    3. ',' → logprob: -3.487382411956787
    4. '[' → logprob: -6.737382411956787
    5. 'newline' → logprob: -7.612382411956787
    6. '\n' → logprob: -7.612382411956787
    7. '

' → logprob: -7.862382411956787
    8. ',
' → logprob: -8.112381935119629
    9. '```' → logprob: -8.112381935119629
    10. '<|end|>' → logprob: -8.237381935119629

Token 130: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.02630285546183586
    2. ' order' → logprob: -3.6513028144836426
    3. 'stack' → logprob: -14.5263032913208
    4. 'orde' → logprob: -14.6513032913208
    5. 'tuple' → logprob: -15.1513032913208
    6. '[' → logprob: -15.2763032913208
    7. ' ' → logprob: -15.6513032913208
    8. 'len' → logprob: -15.6513032913208
    9. '[]' → logprob: -15.9013032913208
    10. 'par' → logprob: -16.026302337646484

Token 131: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.487181156873703
    2. '<|end|>' → logprob: -1.1121811866760254
    3. 'def' → logprob: -3.4871811866760254
    4. '[' → logprob: -4.487181186676025
    5. '#' → logprob: -5.112181186676025
    6. ',' → logprob: -5.862181186676025
    7. '<|end|>' → logprob: -6.737181186676025
    8. '

' → logprob: -6.987181186676025
    9. '[
' → logprob: -7.612181186676025
    10. '\n' → logprob: -7.737181186676025

Token 132: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27342355251312256
    2. '
' → logprob: -1.8984235525131226
    3. '<|end|>' → logprob: -3.023423671722412
    4. '[' → logprob: -4.648423671722412
    5. '#' → logprob: -4.648423671722412
    6. '(' → logprob: -5.023423671722412
    7. '(
' → logprob: -5.273423671722412
    8. 'deque' → logprob: -6.773423671722412
    9. ')' → logprob: -7.148423671722412
    10. '\n' → logprob: -7.398423671722412

Token 133: ' get' (ID: 717)
  Prédit: ' bfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.5848721861839294
    2. 'b' → logprob: -1.7098722457885742
    3. ' main' → logprob: -2.209872245788574
    4. ' solve' → logprob: -3.584872245788574
    5. 'main' → logprob: -3.709872245788574
    6. 'solve' → logprob: -4.334872245788574
    7. ' par' → logprob: -4.709872245788574
    8. ' dfs' → logprob: -4.709872245788574
    9. ' top' → logprob: -4.959872245788574
    10. 'dfs' → logprob: -5.209872245788574

Token 134: 'cl' (ID: 565)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_path' → logprob: -2.6807861328125
    2. '_par' → logprob: -2.6807861328125
    3. '_sub' → logprob: -2.8057861328125
    4. '_depth' → logprob: -2.9307861328125
    5. '_parent' → logprob: -2.9307861328125
    6. '_dist' → logprob: -2.9307861328125
    7. 'dist' → logprob: -3.1807861328125
    8. '_distance' → logprob: -3.3057861328125
    9. '_edge' → logprob: -3.5557861328125
    10. '_max' → logprob: -3.5557861328125

Token 135: 'd' (ID: 67)
  Prédit: 'ose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ose' → logprob: -0.5729413628578186
    2. 'osed' → logprob: -0.9479413628578186
    3. 'os' → logprob: -4.697941303253174
    4. 'osest' → logprob: -4.697941303253174
    5. 'osure' → logprob: -4.822941303253174
    6. 'usters' → logprob: -5.322941303253174
    7. 'ass' → logprob: -5.947941303253174
    8. 'o' → logprob: -5.947941303253174
    9. 'oses' → logprob: -6.197941303253174
    10. 'uster' → logprob: -6.572941303253174

Token 136: '(p' (ID: 2407)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0036759674549102783
    2. '(Node' → logprob: -6.503675937652588
    3. 'ist' → logprob: -7.628675937652588
    4. 'd' → logprob: -8.253676414489746
    5. '(E' → logprob: -8.503676414489746
    6. '(Tree' → logprob: -8.878676414489746
    7. '(N' → logprob: -9.003676414489746
    8. '(nodes' → logprob: -9.003676414489746
    9. '(V' → logprob: -9.253676414489746
    10. 'def' → logprob: -9.503676414489746

Token 137: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2633621394634247
    2. '):' → logprob: -1.513362169265747
    3. '):
' → logprob: -4.888361930847168
    4. ')' → logprob: -6.763361930847168
    5. ',p' → logprob: -7.138361930847168
    6. ',v' → logprob: -7.513361930847168
    7. 'ar' → logprob: -8.513361930847168
    8. ',parent' → logprob: -8.763361930847168
    9. ',n' → logprob: -9.013361930847168
    10. ' ,' → logprob: -9.263361930847168

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002440693322569132
    2. '	cl' → logprob: -6.502440929412842
    3. '    ' → logprob: -8.752440452575684
    4. 'cl' → logprob: -9.127440452575684
    5. '    
' → logprob: -9.377440452575684
    6. ' return' → logprob: -9.377440452575684
    7. ' cl' → logprob: -9.502440452575684
    8. '   ' → logprob: -9.627440452575684
    9. '	return' → logprob: -10.002440452575684
    10. '<|end|>' → logprob: -10.252440452575684

Token 139: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5262706875801086
    2. ' cl' → logprob: -1.4012706279754639
    3. ' res' → logprob: -2.901270627975464
    4. 'cl' → logprob: -3.151270627975464
    5. ' children' → logprob: -4.026270866394043
    6. ' ans' → logprob: -4.776270866394043
    7. ' ast' → logprob: -5.026270866394043
    8. ' ret' → logprob: -5.651270866394043
    9. ' stack' → logprob: -5.651270866394043
    10. ' return' → logprob: -5.901270866394043

Token 140: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6958894729614258
    2. ' =' → logprob: -0.6958894729614258
    3. '=[]' → logprob: -6.320889472961426
    4. ',' → logprob: -7.820889472961426
    5. '   ' → logprob: -9.195889472961426
    6. '[' → logprob: -9.320889472961426
    7. '=[]
' → logprob: -9.445889472961426
    8. '.append' → logprob: -9.570889472961426
    9. '(p' → logprob: -10.195889472961426
    10. '[]' → logprob: -10.320889472961426

Token 141: ' [[]' (ID: 182908)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.011275111697614193
    2. '[' → logprob: -4.761275291442871
    3. '[]
' → logprob: -6.136275291442871
    4. 'deque' → logprob: -8.011275291442871
    5. '[p' → logprob: -9.511275291442871
    6. ' []' → logprob: -10.011275291442871
    7. 'set' → logprob: -10.636275291442871
    8. '[]

' → logprob: -12.511275291442871
    9. '{}' → logprob: -12.636275291442871
    10. '[]}' → logprob: -13.386275291442871

Token 142: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16682246327400208
    2. ' for' → logprob: -1.9168224334716797
    3. ']' → logprob: -5.91682243347168
    4. '
' → logprob: -6.29182243347168
    5. '(p' → logprob: -7.54182243347168
    6. 'p' → logprob: -8.04182243347168
    7. ')' → logprob: -8.16682243347168
    8. ']
' → logprob: -8.29182243347168
    9. ',' → logprob: -8.66682243347168
    10. ')
' → logprob: -9.16682243347168

Token 143: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0028122442308813334
    2. ' _' → logprob: -7.252812385559082
    3. ' range' → logprob: -7.627812385559082
    4. '_p' → logprob: -7.877812385559082
    5. '_range' → logprob: -7.877812385559082
    6. 'range' → logprob: -8.002812385559082
    7. ' in' → logprob: -8.877812385559082
    8. '_in' → logprob: -9.002812385559082
    9. 'in' → logprob: -9.127812385559082
    10. '(_' → logprob: -9.877812385559082

Token 144: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.047584064304828644
    2. ' range' → logprob: -3.297584056854248
    3. 'p' → logprob: -5.047584056854248
    4. 'par' → logprob: -6.422584056854248
    5. '(range' → logprob: -8.297584533691406
    6. 'res' → logprob: -8.422584533691406
    7. 'in' → logprob: -8.547584533691406
    8. '(p' → logprob: -8.547584533691406
    9. ' in' → logprob: -9.172584533691406
    10. 'Edge' → logprob: -9.172584533691406

Token 145: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02610311657190323
    2. ' range' → logprob: -3.7761030197143555
    3. 'par' → logprob: -6.4011030197143555
    4. 'p' → logprob: -7.5261030197143555
    5. '(range' → logprob: -8.151103019714355
    6. 'Edge' → logprob: -8.276103019714355
    7. 'Range' → logprob: -10.026103019714355
    8. '(' → logprob: -11.151103019714355
    9. ' par' → logprob: -11.526103019714355
    10. '(p' → logprob: -11.901103019714355

Token 146: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.4719373285770416
    2. '(p' → logprob: -1.0969372987747192
    3. '(N' → logprob: -4.09693717956543
    4. '(par' → logprob: -4.34693717956543
    5. '(' → logprob: -5.09693717956543
    6. '(range' → logprob: -5.47193717956543
    7. 'len' → logprob: -6.84693717956543
    8. 'range' → logprob: -7.34693717956543
    9. ' (' → logprob: -8.59693717956543
    10. 'p' → logprob: -8.84693717956543

Token 147: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.5344780087471008
    2. '(par' → logprob: -1.409477949142456
    3. '(' → logprob: -1.784477949142456
    4. 'par' → logprob: -6.659478187561035
    5. 'p' → logprob: -7.534478187561035
    6. 'Edge' → logprob: -11.784478187561035
    7. '(pr' → logprob: -11.784478187561035
    8. '(parent' → logprob: -12.159478187561035
    9. ' par' → logprob: -12.284478187561035
    10. ')' → logprob: -12.784478187561035

Token 148: '))]
' (ID: 53695)
  Prédit: '))]
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))]
' → logprob: -0.720130205154419
    2. ')]' → logprob: -1.220130205154419
    3. '))' → logprob: -2.220130205154419
    4. ')]
' → logprob: -2.220130205154419
    5. ')])' → logprob: -7.72012996673584
    6. ')' → logprob: -8.72012996673584
    7. ' )' → logprob: -9.47012996673584
    8. 'p' → logprob: -9.97012996673584
    9. ')])
' → logprob: -10.09512996673584
    10. '])]' → logprob: -10.47012996673584

Token 149: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10147256404161453
    2. '   ' → logprob: -2.3514726161956787
    3. '    
' → logprob: -7.4764723777771
    4. ' for' → logprob: -7.9764723777771
    5. '	
' → logprob: -9.101472854614258
    6. '	for' → logprob: -9.101472854614258
    7. 'for' → logprob: -9.976472854614258
    8. '
' → logprob: -10.226472854614258
    9. ' 
' → logprob: -11.101472854614258
    10. '  
' → logprob: -11.601472854614258

Token 150: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.02395268715918064
    2. ' for' → logprob: -3.7739527225494385
    3. '   ' → logprob: -7.273952484130859
    4. '	for' → logprob: -11.77395248413086
    5. '
' → logprob: -12.14895248413086
    6. '    
' → logprob: -15.02395248413086
    7. ' ' → logprob: -16.14895248413086
    8. '```' → logprob: -17.02395248413086
    9. ' 
' → logprob: -17.52395248413086
    10. '\n' → logprob: -17.89895248413086

Token 151: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.010490349493920803
    2. ' i' → logprob: -4.635490417480469
    3. 'v' → logprob: -7.885490417480469
    4. 'child' → logprob: -8.760490417480469
    5. 'c' → logprob: -9.010490417480469
    6. 'ch' → logprob: -11.010490417480469
    7. 'idx' → logprob: -11.135490417480469
    8. ' child' → logprob: -11.260490417480469
    9. '(i' → logprob: -11.885490417480469
    10. 'x' → logprob: -12.260490417480469

Token 152: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.35403549671173096
    2. 'in' → logprob: -1.229035496711731
    3. ',' → logprob: -5.229035377502441
    4. ' ,' → logprob: -9.104035377502441
    5. '(' → logprob: -10.479035377502441
    6. ' ' → logprob: -10.604035377502441
    7. ',p' → logprob: -11.229035377502441
    8. ',in' → logprob: -11.979035377502441
    9. '(p' → logprob: -12.479035377502441
    10. ',n' → logprob: -12.729035377502441

Token 153: ' v' (ID: 323)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.29978668689727783
    2. 'par' → logprob: -1.6747866868972778
    3. 'pi' → logprob: -3.4247865676879883
    4. 'pr' → logprob: -4.299786567687988
    5. ' par' → logprob: -5.049786567687988
    6. 'x' → logprob: -5.174786567687988
    7. 'v' → logprob: -5.549786567687988
    8. 'parent' → logprob: -5.924786567687988
    9. 'pa' → logprob: -5.924786567687988
    10. 'pv' → logprob: -6.299786567687988

Token 154: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47412145137786865
    2. 'in' → logprob: -0.9741214513778687
    3. ' ' → logprob: -11.47412109375
    4. ',' → logprob: -11.72412109375
    5. '(p' → logprob: -11.84912109375
    6. '   ' → logprob: -12.22412109375
    7. 'n' → logprob: -12.59912109375
    8. '	in' → logprob: -13.34912109375
    9. ')' → logprob: -13.97412109375
    10. '  ' → logprob: -13.97412109375

Token 155: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.023245826363563538
    2. ' enumerate' → logprob: -3.7732458114624023
    3. 'enum' → logprob: -16.27324676513672
    4. '(en' → logprob: -16.27324676513672
    5. 'range' → logprob: -16.89824676513672
    6. '```' → logprob: -17.14824676513672
    7. 'en' → logprob: -17.27324676513672
    8. '(' → logprob: -18.14824676513672
    9. 'p' → logprob: -18.52324676513672
    10. '
' → logprob: -19.27324676513672

Token 156: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00010914575977949426
    2. '(par' → logprob: -9.37510871887207
    3. ' (' → logprob: -11.37510871887207
    4. '(' → logprob: -11.75010871887207
    5. '(range' → logprob: -13.37510871887207
    6. 'p' → logprob: -13.50010871887207
    7. 'range' → logprob: -13.75010871887207
    8. 'par' → logprob: -14.87510871887207
    9. '((' → logprob: -15.37510871887207
    10. 'enumer' → logprob: -16.00010871887207

Token 157: '[' (ID: 58)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.01615835912525654
    2. '):' → logprob: -4.141158580780029
    3. '):
' → logprob: -9.391158103942871
    4. '():
' → logprob: -10.891158103942871
    5. ' ):
' → logprob: -11.766158103942871
    6. '()):
' → logprob: -11.766158103942871
    7. '):

' → logprob: -13.391158103942871
    8. '(' → logprob: -13.516158103942871
    9. ')' → logprob: -13.891158103942871
    10. '   ' → logprob: -14.266158103942871

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3342592120170593
    2. '):
' → logprob: -1.459259271621704
    3. ']):
' → logprob: -3.959259271621704
    4. '(' → logprob: -4.459259033203125
    5. '):' → logprob: -4.584259033203125
    6. ']):' → logprob: -5.084259033203125
    7. '()):
' → logprob: -6.334259033203125
    8. ')' → logprob: -7.709259033203125
    9. '   ' → logprob: -7.709259033203125
    10. ')):
' → logprob: -8.584259033203125

Token 159: ':],' (ID: 117284)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007880822755396366
    2. ':],' → logprob: -5.132880687713623
    3. ']):' → logprob: -6.382880687713623
    4. ':]' → logprob: -8.632881164550781
    5. ']):
' → logprob: -10.132881164550781
    6. '],' → logprob: -11.007881164550781
    7. ']:' → logprob: -11.507881164550781
    8. '):' → logprob: -12.382881164550781
    9. ':].' → logprob: -13.132881164550781
    10. ':])
' → logprob: -13.382881164550781

Token 160: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2692488729953766
    2. 'start' → logprob: -2.1442489624023438
    3. ' ' → logprob: -2.3942489624023438
    4. ' start' → logprob: -4.769248962402344
    5. 'lambda' → logprob: -4.894248962402344
    6. ')' → logprob: -5.269248962402344
    7. '):' → logprob: -6.519248962402344
    8. '):
' → logprob: -6.519248962402344
    9. '2' → logprob: -6.894248962402344
    10. ' lambda' → logprob: -7.644248962402344

Token 161: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -12.12501049041748
    3. 'start' → logprob: -12.25001049041748
    4. '   ' → logprob: -16.750009536743164
    5. '2' → logprob: -17.875009536743164
    6. 'i' → logprob: -18.000009536743164
    7. ' start' → logprob: -18.000009536743164
    8. '0' → logprob: -18.875009536743164
    9. '```' → logprob: -20.750009536743164
    10. '  ' → logprob: -21.000009536743164

Token 162: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.002498013898730278
    2. '):' → logprob: -6.002498149871826
    3. '):
' → logprob: -11.002497673034668
    4. '   ' → logprob: -12.877497673034668
    5. ' ):
' → logprob: -13.252497673034668
    6. ':' → logprob: -14.252497673034668
    7. '):

' → logprob: -15.127497673034668
    8. ':
' → logprob: -15.252497673034668
    9. '():
' → logprob: -16.877498626708984
    10. ' ' → logprob: -17.377498626708984

Token 163: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05499511957168579
    2. ' res' → logprob: -3.054995059967041
    3. 'res' → logprob: -5.429995059967041
    4. '   ' → logprob: -6.679995059967041
    5. ' if' → logprob: -7.804995059967041
    6. '<|end|>' → logprob: -9.0549955368042
    7. '```' → logprob: -9.4299955368042
    8. '        
' → logprob: -10.1799955368042
    9. ')' → logprob: -10.8049955368042
    10. '	res' → logprob: -11.3049955368042

Token 164: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.0040793512016534805
    2. ' res' → logprob: -5.504079341888428
    3. '	res' → logprob: -14.754079818725586
    4. '       ' → logprob: -15.129079818725586
    5. '   ' → logprob: -15.504079818725586
    6. '
' → logprob: -16.754079818725586
    7. 'if' → logprob: -16.879079818725586
    8. '           ' → logprob: -18.254079818725586
    9. '(res' → logprob: -18.879079818725586
    10. '_res' → logprob: -19.004079818725586

Token 165: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.127333340875339e-06
    2. '[' → logprob: -13.250003814697266
    3. '[p' → logprob: -13.375003814697266
    4. 'v' → logprob: -15.250003814697266
    5. 'res' → logprob: -15.875003814697266
    6. '[i' → logprob: -16.375003814697266
    7. '[val' → logprob: -17.250003814697266
    8. '
' → logprob: -17.375003814697266
    9. '[u' → logprob: -17.500003814697266
    10. '[int' → logprob: -17.625003814697266

Token 166: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.007026745937764645
    2. '.append' → logprob: -5.132026672363281
    3. ').' → logprob: -6.882026672363281
    4. '.' → logprob: -10.007026672363281
    5. 'append' → logprob: -11.882026672363281
    6. '}.' → logprob: -12.257026672363281
    7. '.app' → logprob: -12.507026672363281
    8. ']' → logprob: -12.507026672363281
    9. ' ].' → logprob: -12.757026672363281
    10. ' .' → logprob: -13.882026672363281

Token 167: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. '.append' → logprob: -15.875
    3. ' append' → logprob: -16.25
    4. 'appen' → logprob: -17.875
    5. 'app' → logprob: -18.5
    6. '	append' → logprob: -20.125
    7. 'appe' → logprob: -22.875
    8. '_append' → logprob: -23.125
    9. 'ap' → logprob: -23.25
    10. 'Append' → logprob: -24.125

Token 168: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.318681188422488e-05
    2. 'i' → logprob: -11.25001335144043
    3. ' i' → logprob: -16.37501335144043
    4. '(' → logprob: -17.50001335144043
    5. ' (' → logprob: -20.50001335144043
    6. '(
' → logprob: -20.87501335144043
    7. ',i' → logprob: -21.87501335144043
    8. '	i' → logprob: -23.50001335144043
    9. '[i' → logprob: -23.75001335144043
    10. ')i' → logprob: -24.25001335144043

Token 169: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015060516307130456
    2. ')
' → logprob: -6.5015058517456055
    3. '   ' → logprob: -13.126505851745605
    4. ')return' → logprob: -13.751505851745605
    5. ' )' → logprob: -15.001505851745605
    6. ')
' → logprob: -16.126506805419922
    7. ')

' → logprob: -16.376506805419922
    8. '))' → logprob: -17.876506805419922
    9. ')`' → logprob: -17.876506805419922
    10. '`)' → logprob: -18.251506805419922

Token 170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10408572852611542
    2. 'return' → logprob: -2.354085683822632
    3. '
' → logprob: -5.979085922241211
    4. ' return' → logprob: -6.729085922241211
    5. '	return' → logprob: -8.979085922241211
    6. '    
' → logprob: -11.604085922241211
    7. ':return' → logprob: -12.604085922241211
    8. ' ' → logprob: -13.979085922241211
    9. '  
' → logprob: -14.104085922241211
    10. '       ' → logprob: -14.104085922241211

Token 171: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.010678734630346298
    2. '   ' → logprob: -5.260678768157959
    3. ' return' → logprob: -5.260678768157959
    4. '
' → logprob: -8.8856782913208
    5. '	return' → logprob: -9.2606782913208
    6. '    
' → logprob: -13.6356782913208
    7. 'eturn' → logprob: -13.8856782913208
    8. ' ' → logprob: -14.0106782913208
    9. ':return' → logprob: -14.0106782913208
    10. '```' → logprob: -15.0106782913208

Token 172: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0067154900170862675
    2. ' res' → logprob: -5.006715297698975
    3. '(res' → logprob: -16.381715774536133
    4. '	res' → logprob: -20.881715774536133
    5. '$res' → logprob: -21.756715774536133
    6. '[' → logprob: -22.131715774536133
    7. ',res' → logprob: -22.756715774536133
    8. '_res' → logprob: -22.756715774536133
    9. ' ' → logprob: -23.756715774536133
    10. 's' → logprob: -24.256715774536133

Token 173: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9401588439941406
    2. '<|end|>' → logprob: -1.0651588439941406
    3. '
' → logprob: -1.5651588439941406
    4. '

' → logprob: -2.9401588439941406
    5. '<|end|>' → logprob: -6.690158843994141
    6. '```' → logprob: -7.565158843994141
    7. ' def' → logprob: -8.44015884399414
    8. '[' → logprob: -8.44015884399414
    9. '\n' → logprob: -8.94015884399414
    10. '(
' → logprob: -9.19015884399414

Token 174: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0004125575942452997
    2. '
' → logprob: -9.000412940979004
    3. '#' → logprob: -9.750412940979004
    4. 'class' → logprob: -9.875412940979004
    5. '<|end|>' → logprob: -10.000412940979004
    6. 'deque' → logprob: -10.500412940979004
    7. 'de' → logprob: -11.375412940979004
    8. 'ndef' → logprob: -11.500412940979004
    9. '[' → logprob: -11.750412940979004
    10. '(' → logprob: -11.750412940979004

Token 175: ' bfs' (ID: 147571)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5860360860824585
    2. 'main' → logprob: -1.5860360860824585
    3. ' solve' → logprob: -2.836036205291748
    4. ' bfs' → logprob: -2.961036205291748
    5. 'b' → logprob: -3.586036205291748
    6. 'solve' → logprob: -3.836036205291748
    7. ' par' → logprob: -4.211036205291748
    8. 'dfs' → logprob: -4.336036205291748
    9. ' dfs' → logprob: -4.461036205291748
    10. 'par' → logprob: -4.961036205291748

Token 176: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7969818115234375
    2. '(q' → logprob: -1.6719818115234375
    3. '(queue' → logprob: -1.6719818115234375
    4. '(s' → logprob: -2.5469818115234375
    5. '(start' → logprob: -2.9219818115234375
    6. '(root' → logprob: -3.5469818115234375
    7. '(graph' → logprob: -5.6719818115234375
    8. '(v' → logprob: -6.4219818115234375
    9. '(node' → logprob: -6.4219818115234375
    10. '(p' → logprob: -7.0469818115234375

Token 177: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.49378398060798645
    2. '):' → logprob: -1.618783950805664
    3. ',' → logprob: -2.243783950805664
    4. '(s' → logprob: -2.743783950805664
    5. '(start' → logprob: -4.493783950805664
    6. '):
' → logprob: -5.868783950805664
    7. ')' → logprob: -6.118783950805664
    8. '):

' → logprob: -6.243783950805664
    9. ' ):
' → logprob: -7.743783950805664
    10. ',start' → logprob: -7.743783950805664

Token 178: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04042486473917961
    2. ' queue' → logprob: -3.4154248237609863
    3. ' q' → logprob: -5.290424823760986
    4. '
' → logprob: -7.790424823760986
    5. '(queue' → logprob: -8.290425300598145
    6. '	queue' → logprob: -8.290425300598145
    7. 'q' → logprob: -8.415425300598145
    8. 'queue' → logprob: -9.290425300598145
    9. ' Q' → logprob: -9.415425300598145
    10. '    
' → logprob: -9.665425300598145

Token 179: ' Q' (ID: 1486)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1800599843263626
    2. 'q' → logprob: -2.3050599098205566
    3. 'queue' → logprob: -3.6800599098205566
    4. ' queue' → logprob: -4.055059909820557
    5. ' q' → logprob: -4.180059909820557
    6. 'que' → logprob: -6.180059909820557
    7. 'dist' → logprob: -6.430059909820557
    8. ' que' → logprob: -6.805059909820557
    9. 'dq' → logprob: -7.305059909820557
    10. ' dist' → logprob: -7.805059909820557

Token 180: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.57594233751297
    2. '=' → logprob: -0.82594233751297
    3. ' ' → logprob: -13.575942039489746
    4. '=[]' → logprob: -14.200942039489746
    5. '＝' → logprob: -15.825942039489746
    6. ',' → logprob: -16.075942993164062
    7. '=q' → logprob: -16.200942993164062
    8. ' ' → logprob: -16.575942993164062
    9. '  ' → logprob: -16.825942993164062
    10. '   ' → logprob: -16.825942993164062

Token 181: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0015023599844425917
    2. ' deque' → logprob: -6.501502513885498
    3. 'collections' → logprob: -17.876502990722656
    4. 'de' → logprob: -18.501502990722656
    5. 'Deque' → logprob: -18.501502990722656
    6. '[' → logprob: -19.501502990722656
    7. ' ' → logprob: -20.626502990722656
    8. '(de' → logprob: -20.876502990722656
    9. '	de' → logprob: -21.251502990722656
    10. '   ' → logprob: -21.251502990722656

Token 182: '(s' (ID: 1858)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([' → logprob: -0.26856669783592224
    2. '([(' → logprob: -1.5185667276382446
    3. '()
' → logprob: -4.268566608428955
    4. '()' → logprob: -6.018566608428955
    5. '[(' → logprob: -9.893567085266113
    6. '(' → logprob: -11.893567085266113
    7. '()

' → logprob: -12.893567085266113
    8. '((' → logprob: -13.018567085266113
    9. '([
' → logprob: -13.893567085266113
    10. '()
' → logprob: -14.768567085266113

Token 183: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.13388703338569e-06
    2. ' )' → logprob: -12.000009536743164
    3. '))' → logprob: -14.250009536743164
    4. ')
' → logprob: -14.250009536743164
    5. '())' → logprob: -14.500009536743164
    6. '[])' → logprob: -14.875009536743164
    7. ')`' → logprob: -15.875009536743164
    8. '）' → logprob: -16.000009536743164
    9. ')s' → logprob: -16.375009536743164
    10. ')is' → logprob: -17.125009536743164

Token 184: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28273722529411316
    2. '   ' → logprob: -1.5327372550964355
    3. ':' → logprob: -4.9077372550964355
    4. '[:]' → logprob: -5.5327372550964355
    5. '  ' → logprob: -5.6577372550964355
    6. '()' → logprob: -5.9077372550964355
    7. ',' → logprob: -5.9077372550964355
    8. ' ' → logprob: -6.4077372550964355
    9. '    ' → logprob: -6.4077372550964355
    10. '.append' → logprob: -7.2827372550964355

Token 185: ' used' (ID: 2061)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.37834134697914124
    2. ' dist' → logprob: -2.0033414363861084
    3. ' distances' → logprob: -3.0033414363861084
    4. 'depth' → logprob: -3.5033414363861084
    5. '   ' → logprob: -3.6283414363861084
    6. 'distance' → logprob: -4.128341197967529
    7. 'res' → logprob: -4.253341197967529
    8. 'visited' → logprob: -4.253341197967529
    9. ' res' → logprob: -4.878341197967529
    10. ' visited' → logprob: -5.003341197967529

Token 186: ' =' (ID: 314)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.17914576828479767
    2. ' =' → logprob: -2.4291458129882812
    3. '.' → logprob: -3.0541458129882812
    4. '=' → logprob: -4.054145812988281
    5. '.append' → logprob: -5.429145812988281
    6. ' .' → logprob: -5.804145812988281
    7. ' ' → logprob: -7.304145812988281
    8. '   ' → logprob: -7.304145812988281
    9. '.update' → logprob: -7.304145812988281
    10. '[' → logprob: -7.554145812988281

Token 187: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.06771916151046753
    2. '{' → logprob: -2.8177192211151123
    3. ' set' → logprob: -5.692718982696533
    4. '[' → logprob: -6.567718982696533
    5. '{s' → logprob: -7.317718982696533
    6. ' {' → logprob: -8.817719459533691
    7. '[s' → logprob: -9.067719459533691
    8. '(set' → logprob: -11.067719459533691
    9. ' [' → logprob: -11.192719459533691
    10. '=set' → logprob: -13.317719459533691

Token 188: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.11337973922491074
    2. '(Q' → logprob: -2.238379716873169
    3. '(' → logprob: -7.613379955291748
    4. '()' → logprob: -10.36337947845459
    5. '((' → logprob: -11.73837947845459
    6. '(list' → logprob: -11.86337947845459
    7. '([' → logprob: -11.98837947845459
    8. 's' → logprob: -13.11337947845459
    9. '(q' → logprob: -13.86337947845459
    10. ' (' → logprob: -14.11337947845459

Token 189: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001511408481746912
    2. ')
' → logprob: -6.501511573791504
    3. ' )' → logprob: -12.376511573791504
    4. '   ' → logprob: -12.501511573791504
    5. ')
' → logprob: -14.501511573791504
    6. '))' → logprob: -15.251511573791504
    7. ')

' → logprob: -15.501511573791504
    8. '())' → logprob: -17.126510620117188
    9. ')}' → logprob: -17.501510620117188
    10. ' ' → logprob: -17.501510620117188

Token 190: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7932083010673523
    2. '   ' → logprob: -0.7932083010673523
    3. '<|end|>' → logprob: -3.418208360671997
    4. '    
' → logprob: -3.543208360671997
    5. ')' → logprob: -3.793208360671997
    6. '  
' → logprob: -6.168208122253418
    7. 'while' → logprob: -6.668208122253418
    8. ')
' → logprob: -6.918208122253418
    9. ' 
' → logprob: -7.168208122253418
    10. ',' → logprob: -7.293208122253418

Token 191: ' dist' (ID: 3601)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.29996198415756226
    2. '   ' → logprob: -2.174962043762207
    3. ' while' → logprob: -2.174962043762207
    4. 'res' → logprob: -4.424962043762207
    5. '
' → logprob: -4.924962043762207
    6. '    
' → logprob: -5.299962043762207
    7. ' ' → logprob: -6.549962043762207
    8. 'depth' → logprob: -6.924962043762207
    9. 'result' → logprob: -7.049962043762207
    10. '	while' → logprob: -7.799962043762207

Token 192: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.313544899225235
    2. '=' → logprob: -1.3135448694229126
    3. ',' → logprob: -8.813545227050781
    4. '[' → logprob: -9.313545227050781
    5. ' ' → logprob: -10.313545227050781
    6. 's' → logprob: -11.813545227050781
    7. '={}' → logprob: -14.313545227050781
    8. '  ' → logprob: -14.438545227050781
    9. ')' → logprob: -14.813545227050781
    10. '[s' → logprob: -15.188545227050781

Token 193: ' [' (ID: 723)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.009619028307497501
    2. '[-' → logprob: -5.259619235992432
    3. '[' → logprob: -6.134619235992432
    4. ' {' → logprob: -7.009619235992432
    5. '{-' → logprob: -7.009619235992432
    6. '{}' → logprob: -8.259618759155273
    7. '{}
' → logprob: -10.009618759155273
    8. '{s' → logprob: -10.509618759155273
    9. 'default' → logprob: -10.634618759155273
    10. ' [' → logprob: -11.134618759155273

Token 194: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0030498430132865906
    2. '-inf' → logprob: -6.628049850463867
    3. '-f' → logprob: -6.878049850463867
    4. 'float' → logprob: -8.003049850463867
    5. '10' → logprob: -8.878049850463867
    6. ' -' → logprob: -9.003049850463867
    7. '0' → logprob: -10.128049850463867
    8. '-int' → logprob: -10.378049850463867
    9. '-n' → logprob: -12.753049850463867
    10. ' ' → logprob: -12.753049850463867

Token 195: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.2547571063041687
    2. ']' → logprob: -1.5047571659088135
    3. ']*(' → logprob: -6.004756927490234
    4. ' for' → logprob: -9.129756927490234
    5. 'for' → logprob: -9.254756927490234
    6. ' if' → logprob: -9.629756927490234
    7. 'if' → logprob: -9.754756927490234
    8. ']+' → logprob: -11.004756927490234
    9. ' ]' → logprob: -11.504756927490234
    10. '   ' → logprob: -14.379756927490234

Token 196: 'N' (ID: 45)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.005288661457598209
    2. '(len' → logprob: -5.255288600921631
    3. '100' → logprob: -10.380289077758789
    4. ' len' → logprob: -11.380289077758789
    5. '(' → logprob: -11.505289077758789
    6. 'N' → logprob: -14.130289077758789
    7. '(N' → logprob: -14.630289077758789
    8. '200' → logprob: -15.755289077758789
    9. '[len' → logprob: -16.00528907775879
    10. ' (' → logprob: -16.38028907775879

Token 197: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06610517203807831
    2. '<|end|>' → logprob: -2.8161051273345947
    3. '   ' → logprob: -6.316105365753174
    4. '<|end|>' → logprob: -6.941105365753174
    5. '    
' → logprob: -8.191104888916016
    6. ' 
' → logprob: -8.566104888916016
    7. ')' → logprob: -8.941104888916016
    8. '  
' → logprob: -9.066104888916016
    9. ' for' → logprob: -9.066104888916016
    10. 'for' → logprob: -9.441104888916016

Token 198: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0280907042324543
    2. '<|end|>' → logprob: -3.903090715408325
    3. '   ' → logprob: -5.653090476989746
    4. 'while' → logprob: -6.778090476989746
    5. ' while' → logprob: -7.153090476989746
    6. '    
' → logprob: -7.653090476989746
    7. '  
' → logprob: -8.028090476989746
    8. '	while' → logprob: -8.028090476989746
    9. '<|end|>' → logprob: -8.653090476989746
    10. '```' → logprob: -8.778090476989746

Token 199: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.29046159982681274
    2. ' while' → logprob: -1.665461540222168
    3. '   ' → logprob: -2.915461540222168
    4. 'dist' → logprob: -6.165461540222168
    5. '    
' → logprob: -6.290461540222168
    6. '	while' → logprob: -6.665461540222168
    7. 'for' → logprob: -6.790461540222168
    8. '
' → logprob: -7.040461540222168
    9. ' ' → logprob: -8.040461540222168
    10. '  ' → logprob: -8.165461540222168

Token 200: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0015041481237858534
    2. ' Q' → logprob: -6.501503944396973
    3. 'len' → logprob: -13.376503944396973
    4. '	Q' → logprob: -15.876503944396973
    5. ' len' → logprob: -16.25150489807129
    6. ' not' → logprob: -16.87650489807129
    7. ' ' → logprob: -17.87650489807129
    8. '(Q' → logprob: -18.12650489807129
    9. 'not' → logprob: -18.62650489807129
    10. ' ' → logprob: -18.62650489807129

Token 201: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06780438870191574
    2. ':
' → logprob: -2.8178043365478516
    3. '):' → logprob: -6.442804336547852
    4. 'opleft' → logprob: -7.192804336547852
    5. '.p' → logprob: -7.317804336547852
    6. '.append' → logprob: -7.442804336547852
    7. 'not' → logprob: -7.567804336547852
    8. '):
' → logprob: -7.817804336547852
    9. '```' → logprob: -8.067804336547852
    10. 'deque' → logprob: -9.317804336547852

Token 202: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010375719284638762
    2. ',' → logprob: -8.37603759765625
    3. 'v' → logprob: -8.87603759765625
    4. 'n' → logprob: -9.12603759765625
    5. '<|end|>' → logprob: -9.12603759765625
    6. ',v' → logprob: -9.37603759765625
    7. ' v' → logprob: -9.62603759765625
    8. '```' → logprob: -9.75103759765625
    9. '   ' → logprob: -9.87603759765625
    10. '        
' → logprob: -10.25103759765625

Token 203: ' vn' (ID: 88772)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.016408046707510948
    2. ' v' → logprob: -4.2664079666137695
    3. 'vn' (adapté à ' vn') → logprob: -7.1414079666137695
    4. 'q' → logprob: -7.2664079666137695
    5. 'u' → logprob: -7.6414079666137695
    6. 'x' → logprob: -9.26640796661377
    7. 'vq' → logprob: -10.39140796661377
    8. '   ' → logprob: -10.51640796661377
    9. 'n' → logprob: -10.64140796661377
    10. ' u' → logprob: -10.76640796661377

Token 204: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407805919647217
    2. ' =' → logprob: -0.9740780591964722
    3. ' ' → logprob: -15.099078178405762
    4. '＝' → logprob: -15.599078178405762
    5. '=q' → logprob: -15.849078178405762
    6. '   ' → logprob: -16.099077224731445
    7. '	' → logprob: -16.974077224731445
    8. ')' → logprob: -17.474077224731445
    9. '=
' → logprob: -17.974077224731445
    10. '=v' → logprob: -18.099077224731445

Token 205: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0019286326132714748
    2. ' Q' → logprob: -6.251928806304932
    3. '	Q' → logprob: -18.001928329467773
    4. '<Q' → logprob: -18.626928329467773
    5. '(Q' → logprob: -19.376928329467773
    6. ',Q' → logprob: -20.501928329467773
    7. 'deque' → logprob: -21.376928329467773
    8. '.Q' → logprob: -21.626928329467773
    9. '_Q' → logprob: -22.126928329467773
    10. 'de' → logprob: -22.126928329467773

Token 206: '.pop' (ID: 15746)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -5.919942486798391e-05
    2. '.' → logprob: -9.750059127807617
    3. '.pop' → logprob: -14.000059127807617
    4. 'p' → logprob: -17.250059127807617
    5. ' .' → logprob: -17.500059127807617
    6. '   ' → logprob: -18.375059127807617
    7. '.
' → logprob: -19.875059127807617
    8. '```' → logprob: -20.000059127807617
    9. '].' → logprob: -20.500059127807617
    10. '>.' → logprob: -20.750059127807617

Token 207: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006227265694178641
    2. '()
' → logprob: -7.625622749328613
    3. 'left' → logprob: -9.000622749328613
    4. '(' → logprob: -12.125622749328613
    5. '()

' → logprob: -13.125622749328613
    6. 'opleft' → logprob: -13.750622749328613
    7. ' ()' → logprob: -14.125622749328613
    8. '()]' → logprob: -14.500622749328613
    9. '()
' → logprob: -15.125622749328613
    10. '()\' → logprob: -15.375622749328613

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5518223643302917
    2. '
' → logprob: -1.3018224239349365
    3. '        
' → logprob: -3.4268224239349365
    4. ' for' → logprob: -3.6768224239349365
    5. '<|end|>' → logprob: -3.8018224239349365
    6. '   ' → logprob: -4.051822185516357
    7. ' if' → logprob: -4.176822185516357
    8. '    
' → logprob: -4.426822185516357
    9. ' 
' → logprob: -4.551822185516357
    10. '  
' → logprob: -5.676822185516357

Token 209: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.18752145767211914
    2. ' for' → logprob: -1.8125214576721191
    3. '   ' → logprob: -4.937521457672119
    4. 'v' → logprob: -8.687520980834961
    5. 'Q' → logprob: -9.437520980834961
    6. ' ast' → logprob: -9.562520980834961
    7. 'if' → logprob: -9.812520980834961
    8. '       ' → logprob: -10.062520980834961
    9. '	for' → logprob: -10.562520980834961
    10. 'ast' → logprob: -11.187520980834961

Token 210: ' vf' (ID: 128487)
  Prédit: 'nv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nv' → logprob: -0.7495914697647095
    2. 'v' → logprob: -2.12459135055542
    3. 'nx' → logprob: -2.24959135055542
    4. 'vf' → logprob: -2.37459135055542
    5. 'n' → logprob: -2.99959135055542
    6. 'w' → logprob: -3.49959135055542
    7. ' vf' → logprob: -3.62459135055542
    8. 'vv' → logprob: -3.74959135055542
    9. 'to' → logprob: -4.24959135055542
    10. 'vx' → logprob: -4.24959135055542

Token 211: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007630296517163515
    2. 'in' → logprob: -4.882630348205566
    3. ' ' → logprob: -10.757630348205566
    4. ' ' → logprob: -13.882630348205566
    5. '	in' → logprob: -14.882630348205566
    6. 's' → logprob: -15.007630348205566
    7. 'n' → logprob: -15.382630348205566
    8. '  ' → logprob: -15.507630348205566
    9. '<|end|>' → logprob: -15.882630348205566
    10. 'v' → logprob: -16.00762939453125

Token 212: ' Edge' (ID: 16396)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.0008332127472385764
    2. ' Edge' → logprob: -7.125833034515381
    3. 'list' → logprob: -12.000833511352539
    4. 'deque' → logprob: -12.000833511352539
    5. '<Edge' → logprob: -12.125833511352539
    6. 're' → logprob: -12.125833511352539
    7. ' reversed' → logprob: -13.125833511352539
    8. 'Edges' → logprob: -14.125833511352539
    9. '.Edge' → logprob: -14.500833511352539
    10. 'Graph' → logprob: -14.875833511352539

Token 213: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.3544423381972592e-05
    2. '   ' → logprob: -12.00001335144043
    3. 's' → logprob: -13.50001335144043
    4. 'vn' → logprob: -13.75001335144043
    5. '[' → logprob: -14.37501335144043
    6. 'Q' → logprob: -14.87501335144043
    7. '(v' → logprob: -15.00001335144043
    8. '[node' → logprob: -15.12501335144043
    9. '[n' → logprob: -15.37501335144043
    10. '

' → logprob: -15.37501335144043

Token 214: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0005389740690588951
    2. 'vn' → logprob: -8.50053882598877
    3. '[n' → logprob: -8.50053882598877
    4. '[v' → logprob: -9.75053882598877
    5. '[' → logprob: -10.12553882598877
    6. ']' → logprob: -11.50053882598877
    7. 'pn' → logprob: -13.00053882598877
    8. '```' → logprob: -13.25053882598877
    9. 'qn' → logprob: -13.37553882598877
    10. 'f' → logprob: -13.37553882598877

Token 215: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47617942094802856
    2. ']:' → logprob: -1.1011793613433838
    3. ']:
' → logprob: -3.601179361343384
    4. ':
' → logprob: -4.101179599761963
    5. '):' → logprob: -6.476179599761963
    6. '):
' → logprob: -7.726179599761963
    7. '>:' → logprob: -9.101179122924805
    8. ']' → logprob: -9.351179122924805
    9. '}:' → logprob: -9.601179122924805
    10. '   ' → logprob: -9.601179122924805

Token 216: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.061381854116916656
    2. ' if' → logprob: -3.5613818168640137
    3. '<|end|>' → logprob: -4.436381816864014
    4. ':' → logprob: -4.561381816864014
    5. '       ' → logprob: -5.936381816864014
    6. '<|end|>' → logprob: -6.311381816864014
    7. ',' → logprob: -6.686381816864014
    8. '   ' → logprob: -7.061381816864014
    9. ':
' → logprob: -7.436381816864014
    10. '	       ' → logprob: -7.936381816864014

Token 217: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.004843526985496283
    2. '           ' → logprob: -6.004843711853027
    3. 'if' (adapté à ' if') → logprob: -7.254843711853027
    4. '               ' → logprob: -7.379843711853027
    5. '   ' → logprob: -7.879843711853027
    6. '<|end|>' → logprob: -8.629843711853027
    7. '    ' → logprob: -9.004843711853027
    8. ' ' → logprob: -9.004843711853027
    9. '       ' → logprob: -9.879843711853027
    10. '	if' → logprob: -10.504843711853027

Token 218: ' vf' (ID: 128487)
  Prédit: 'vf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vf' → logprob: -0.20145104825496674
    2. ' vf' → logprob: -1.701451063156128
    3. 'not' → logprob: -10.826451301574707
    4. ' not' → logprob: -11.201451301574707
    5. ' ' → logprob: -13.576451301574707
    6. '   ' → logprob: -14.326451301574707
    7. '
' → logprob: -14.451451301574707
    8. 'v' → logprob: -14.451451301574707
    9. 'f' → logprob: -15.576451301574707
    10. ' Vf' → logprob: -16.20145034790039

Token 219: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.11575406044721603
    2. 'not' → logprob: -2.2407541275024414
    3. ' in' → logprob: -6.115754127502441
    4. 'in' → logprob: -7.240754127502441
    5. ' ' → logprob: -13.865754127502441
    6. '	not' → logprob: -13.865754127502441
    7. ')' → logprob: -15.490754127502441
    8. ' no' → logprob: -15.865754127502441
    9. 'n' → logprob: -15.865754127502441
    10. ' ' → logprob: -16.115753173828125

Token 220: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08462414890527725
    2. 'in' → logprob: -2.9596240520477295
    3. 'used' → logprob: -3.9596240520477295
    4. ' used' → logprob: -4.584624290466309
    5. '   ' → logprob: -11.084624290466309
    6. '_used' → logprob: -12.334624290466309
    7. ' ' → logprob: -12.834624290466309
    8. '.used' → logprob: -13.459624290466309
    9. '  ' → logprob: -14.209624290466309
    10. '    ' → logprob: -14.709624290466309

Token 221: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.014163628220558167
    2. ' used' → logprob: -4.264163494110107
    3. 'visited' → logprob: -16.014163970947266
    4. '.used' → logprob: -17.264163970947266
    5. '_used' → logprob: -18.639163970947266
    6. ' ' → logprob: -18.764163970947266
    7. '
' → logprob: -18.889163970947266
    8. 'use' → logprob: -19.139163970947266
    9. 'Used' → logprob: -19.514163970947266
    10. '   ' → logprob: -20.139163970947266

Token 222: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.014508874155580997
    2. ':' → logprob: -4.2645087242126465
    3. '):
' → logprob: -8.389509201049805
    4. '           ' → logprob: -10.264509201049805
    5. ' :
' → logprob: -10.389509201049805
    6. '               ' → logprob: -10.514509201049805
    7. ' and' → logprob: -12.139509201049805
    8. ':
' → logprob: -12.139509201049805
    9. '():
' → logprob: -12.764509201049805
    10. ':

' → logprob: -13.014509201049805

Token 223: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04073106870055199
    2. ':
' → logprob: -3.6657309532165527
    3. ' used' → logprob: -4.915730953216553
    4. ':' → logprob: -5.540730953216553
    5. '           ' → logprob: -6.040730953216553
    6. '):
' → logprob: -9.040731430053711
    7. '       ' → logprob: -9.040731430053711
    8. '              ' → logprob: -9.540731430053711
    9. ',' → logprob: -9.665731430053711
    10. ' :
' → logprob: -9.665731430053711

Token 224: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.09617709368467331
    2. ' Q' → logprob: -2.471177101135254
    3. '               ' → logprob: -5.346177101135254
    4. 'used' (adapté à ' used') → logprob: -7.096177101135254
    5. 'Q' → logprob: -7.596177101135254
    6. '                ' → logprob: -8.096177101135254
    7. '                   ' → logprob: -8.721177101135254
    8. ' 
' → logprob: -8.971177101135254
    9. ' dist' → logprob: -9.221177101135254
    10. '
' → logprob: -9.596177101135254

Token 225: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.000275040598353371
    2. '.' → logprob: -8.250274658203125
    3. ' .' → logprob: -11.250274658203125
    4. 'add' → logprob: -14.250274658203125
    5. '   ' → logprob: -17.250274658203125
    6. '           ' → logprob: -18.375274658203125
    7. ')add' → logprob: -18.625274658203125
    8. ' add' → logprob: -18.750274658203125
    9. ':add' → logprob: -18.875274658203125
    10. '.append' → logprob: -19.375274658203125

Token 226: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0009331366163678467
    2. '(' → logprob: -7.0009331703186035
    3. '(f' → logprob: -10.750932693481445
    4. '(
' → logprob: -16.500932693481445
    5. '((' → logprob: -17.125932693481445
    6. ' (' → logprob: -17.625932693481445
    7. ' vf' → logprob: -17.750932693481445
    8. '(k' → logprob: -17.875932693481445
    9. '(

' → logprob: -18.125932693481445
    10. '(vo' → logprob: -18.125932693481445

Token 227: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.03913811966776848
    2. 'vf' → logprob: -3.289138078689575
    3. '(v' → logprob: -7.164138317108154
    4. ' vf' → logprob: -8.164137840270996
    5. '(f' → logprob: -10.664137840270996
    6. '(' → logprob: -12.914137840270996
    7. 'v' → logprob: -12.914137840270996
    8. ')' → logprob: -13.539137840270996
    9. '{' → logprob: -13.664137840270996
    10. 'nf' → logprob: -13.789137840270996

Token 228: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44826290011405945
    2. ')
' → logprob: -1.0732629299163818
    3. '               ' → logprob: -3.948262929916382
    4. ')
' → logprob: -9.698263168334961
    5. '           ' → logprob: -11.948263168334961
    6. '                   ' → logprob: -12.573263168334961
    7. '),' → logprob: -12.948263168334961
    8. '):
' → logprob: -13.698263168334961
    9. ')

' → logprob: -13.948263168334961
    10. '<|end|>' → logprob: -13.948263168334961

Token 229: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004648696631193161
    2. '
' → logprob: -8.87546443939209
    3. 'Q' → logprob: -9.50046443939209
    4. '                
' → logprob: -9.62546443939209
    5. ' Q' → logprob: -10.25046443939209
    6. '<|end|>' → logprob: -10.62546443939209
    7. ')' → logprob: -10.75046443939209
    8. '              ' → logprob: -11.00046443939209
    9. '```' → logprob: -11.25046443939209
    10. '                ' → logprob: -11.25046443939209

Token 230: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.10473307222127914
    2. 'Q' → logprob: -2.9797329902648926
    3. ' dist' → logprob: -3.1047329902648926
    4. ' Q' → logprob: -5.604732990264893
    5. '   ' → logprob: -9.47973346710205
    6. 'Dist' → logprob: -11.97973346710205
    7. '               ' → logprob: -12.22973346710205
    8. '```' → logprob: -12.35473346710205
    9. '       ' → logprob: -12.60473346710205
    10. '           ' → logprob: -12.72973346710205

Token 231: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.452426608419046e-05
    2. '[' → logprob: -10.37503433227539
    3. ' [' → logprob: -13.62503433227539
    4. '               ' → logprob: -15.00003433227539
    5. '```' → logprob: -15.00003433227539
    6. '[
' → logprob: -15.25003433227539
    7. '
' → logprob: -15.87503433227539
    8. '                   ' → logprob: -15.87503433227539
    9. 'vf' → logprob: -16.00003433227539
    10. ',v' → logprob: -16.87503433227539

Token 232: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -8.97155623533763e-05
    2. '[f' → logprob: -9.375089645385742
    3. '[' → logprob: -13.625089645385742
    4. '[v' → logprob: -13.875089645385742
    5. '+' → logprob: -14.125089645385742
    6. 'n' → logprob: -15.125089645385742
    7. ']' → logprob: -15.250089645385742
    8. 'ф' → logprob: -15.250089645385742
    9. ',f' → logprob: -15.500089645385742
    10. 'fv' → logprob: -16.125089645385742

Token 233: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40474072098731995
    2. ']' → logprob: -1.4047406911849976
    3. ' =' → logprob: -2.529740810394287
    4. ')' → logprob: -4.904740810394287
    5. ']=' → logprob: -8.279740333557129
    6. ' ]' → logprob: -10.279740333557129
    7. ')=' → logprob: -11.404740333557129
    8. ' )' → logprob: -11.529740333557129
    9. '[' → logprob: -12.154740333557129
    10. ' ' → logprob: -12.279740333557129

Token 234: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740781784057617
    2. ' =' → logprob: -0.9740781784057617
    3. '+=' → logprob: -14.224078178405762
    4. ' +=' → logprob: -15.474078178405762
    5. '[' → logprob: -16.849079132080078
    6. ' ' → logprob: -16.849079132080078
    7. ')' → logprob: -16.974079132080078
    8. '=
' → logprob: -17.599079132080078
    9. '＝' → logprob: -17.724079132080078
    10. '   ' → logprob: -18.474079132080078

Token 235: ' ' (ID: 220)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.023246407508850098
    2. ' dist' → logprob: -3.7732462882995605
    3. '	dist' → logprob: -14.648246765136719
    4. '   ' → logprob: -15.148246765136719
    5. '(dist' → logprob: -15.898246765136719
    6. 'd' → logprob: -17.27324676513672
    7. ' ' → logprob: -17.39824676513672
    8. '
' → logprob: -18.14824676513672
    9. '.dist' → logprob: -18.64824676513672
    10. '_dist' → logprob: -18.64824676513672

Token 236: '1' (ID: 16)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -4.584861744660884e-05
    2. ' dist' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.375045776367188
    4. '	dist' → logprob: -15.750045776367188
    5. 'd' → logprob: -17.500045776367188
    6. '(dist' → logprob: -18.250045776367188
    7. '
' → logprob: -19.000045776367188
    8. ' ' → logprob: -19.000045776367188
    9. '  ' → logprob: -20.000045776367188
    10. '.dist' → logprob: -20.000045776367188

Token 237: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3260960280895233
    2. ' +' → logprob: -1.3260960578918457
    3. '
' → logprob: -4.576096057891846
    4. '+
' → logprob: -6.576096057891846
    5. 'Q' → logprob: -7.701096057891846
    6. '               ' → logprob: -8.701095581054688
    7. ' +
' → logprob: -9.201095581054688
    8. '<|end|>' → logprob: -9.201095581054688
    9. ' Q' → logprob: -10.076095581054688
    10. '                ' → logprob: -10.201095581054688

Token 238: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0015023599844425917
    2. ' dist' → logprob: -6.501502513885498
    3. '	dist' → logprob: -17.376502990722656
    4. '   ' → logprob: -18.626502990722656
    5. ' ' → logprob: -18.751502990722656
    6. '
' → logprob: -18.751502990722656
    7. '(dist' → logprob: -19.376502990722656
    8. 'distance' → logprob: -20.501502990722656
    9. 'd' → logprob: -20.626502990722656
    10. '.dist' → logprob: -20.751502990722656

Token 239: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.935296834039036e-06
    2. 'vn' → logprob: -14.00000286102295
    3. '[' → logprob: -14.25000286102295
    4. '   ' → logprob: -14.50000286102295
    5. '[
' → logprob: -15.12500286102295
    6. '[node' → logprob: -16.125003814697266
    7. '(v' → logprob: -16.125003814697266
    8. '```' → logprob: -16.625003814697266
    9. ' [' → logprob: -17.125003814697266
    10. ',v' → logprob: -17.250003814697266

Token 240: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.511406809295295e-06
    2. 'nf' → logprob: -13.750006675720215
    3. 'vn' → logprob: -14.000006675720215
    4. '[n' → logprob: -14.500006675720215
    5. 'nn' → logprob: -14.625006675720215
    6. '<|end|>' → logprob: -14.625006675720215
    7. 's' → logprob: -14.875006675720215
    8. '<n' → logprob: -14.875006675720215
    9. ')n' → logprob: -15.125006675720215
    10. '_n' → logprob: -15.250006675720215

Token 241: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4351425766944885
    2. ']
' → logprob: -1.9351425170898438
    3. '               ' → logprob: -2.1851425170898438
    4. ')' → logprob: -2.6851425170898438
    5. ')
' → logprob: -3.6851425170898438
    6. '           ' → logprob: -7.685142517089844
    7. ']
' → logprob: -7.810142517089844
    8. '                   ' → logprob: -7.810142517089844
    9. '])' → logprob: -8.435142517089844
    10. '<|end|>' → logprob: -8.435142517089844

Token 242: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.886803359724581e-05
    2. ',Q' → logprob: -10.875079154968262
    3. 'Q' → logprob: -11.125079154968262
    4. ',' → logprob: -11.500079154968262
    5. '			' → logprob: -11.875079154968262
    6. '              ' → logprob: -12.000079154968262
    7. '           ' → logprob: -12.250079154968262
    8. ' Q' → logprob: -12.500079154968262
    9. '                   ' → logprob: -12.500079154968262
    10. '                
' → logprob: -13.250079154968262

Token 243: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' (adapté à ' Q') → logprob: -6.749814019713085e-06
    2. ' Q' → logprob: -12.250006675720215
    3. 'deque' → logprob: -13.625006675720215
    4. 'append' → logprob: -14.375006675720215
    5. '```' → logprob: -16.75000762939453
    6. '
' → logprob: -17.25000762939453
    7. '   ' → logprob: -17.75000762939453
    8. '	Q' → logprob: -18.25000762939453
    9. 'q' → logprob: -18.37500762939453
    10. '.append' → logprob: -18.75000762939453

Token 244: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008773046545684338
    2. 'append' → logprob: -4.758772850036621
    3. '.' → logprob: -9.008772850036621
    4. '.p' → logprob: -10.383772850036621
    5. '```' → logprob: -13.008772850036621
    6. 'p' → logprob: -14.383772850036621
    7. ' append' → logprob: -14.508772850036621
    8. '_append' → logprob: -14.508772850036621
    9. '.extend' → logprob: -15.258772850036621
    10. '	append' → logprob: -15.508772850036621

Token 245: 'left' (ID: 4530)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0839504823088646
    2. 'left' → logprob: -2.8339505195617676
    3. '(f' → logprob: -3.8339505195617676
    4. 'vf' → logprob: -9.20895004272461
    5. '(' → logprob: -11.20895004272461
    6. 'Left' → logprob: -13.08395004272461
    7. 'f' → logprob: -14.20895004272461
    8. 'lef' → logprob: -14.33395004272461
    9. ' vf' → logprob: -14.45895004272461
    10. 'v' → logprob: -14.45895004272461

Token 246: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.001179512357339263
    2. '(f' → logprob: -6.7511796951293945
    3. '(' → logprob: -11.626179695129395
    4. 'vf' → logprob: -16.001178741455078
    5. '((' → logprob: -16.751178741455078
    6. ' (' → logprob: -17.001178741455078
    7. ' vf' → logprob: -17.501178741455078
    8. '(
' → logprob: -17.876178741455078
    9. 'v' → logprob: -19.001178741455078
    10. '(V' → logprob: -19.251178741455078

Token 247: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.5048530030981055e-06
    2. 'ф' → logprob: -14.500001907348633
    3. 'vf' → logprob: -15.250001907348633
    4. '_f' → logprob: -15.875001907348633
    5. ')' → logprob: -16.125001907348633
    6. ' f' → logprob: -16.875001907348633
    7. 'fv' → logprob: -17.000001907348633
    8. '(f' → logprob: -17.125001907348633
    9. '```' → logprob: -17.250001907348633
    10. ''f' → logprob: -17.250001907348633

Token 248: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.56102097814437e-05
    2. ')
' → logprob: -10.125045776367188
    3. '<|end|>' → logprob: -12.625045776367188
    4. ')return' → logprob: -14.125045776367188
    5. '<|end|>' → logprob: -14.875045776367188
    6. ' )' → logprob: -15.000045776367188
    7. ')}}' → logprob: -15.875045776367188
    8. '```' → logprob: -16.250045776367188
    9. '       ' → logprob: -16.375045776367188
    10. '   ' → logprob: -16.875045776367188

Token 249: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 250: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004747079685330391
    2. 'return' (adapté à ' return') → logprob: -5.629746913909912
    3. ' return' → logprob: -7.629746913909912
    4. '<|end|>' → logprob: -8.00474739074707
    5. ')' → logprob: -9.25474739074707
    6. 'dist' → logprob: -9.75474739074707
    7. '	return' → logprob: -9.75474739074707
    8. '
' → logprob: -10.75474739074707
    9. ' ' → logprob: -10.87974739074707
    10. 'b' → logprob: -11.37974739074707

Token 251: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0006268949946388602
    2. ' dist' → logprob: -7.375627040863037
    3. '(dist' → logprob: -15.625626564025879
    4. '[' → logprob: -15.875626564025879
    5. 'max' → logprob: -16.500627517700195
    6. '	dist' → logprob: -17.375627517700195
    7. ' ' → logprob: -18.375627517700195
    8. '_dist' → logprob: -18.750627517700195
    9. '   ' → logprob: -19.125627517700195
    10. ' [' → logprob: -19.500627517700195

Token 252: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 253: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14360526204109192
    2. 'N' → logprob: -2.7686052322387695
    3. 'p' → logprob: -4.0186052322387695
    4. 'dist' → logprob: -4.1436052322387695
    5. '#' → logprob: -4.6436052322387695
    6. ')' → logprob: -5.6436052322387695
    7. 'for' → logprob: -5.7686052322387695
    8. 's' → logprob: -5.8936052322387695
    9. 'd' → logprob: -5.8936052322387695
    10. '(' → logprob: -6.3936052322387695

Token 254: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27012720704078674
    2. ',' → logprob: -1.7701271772384644
    3. '=' → logprob: -2.770127296447754
    4. ' ,' → logprob: -5.770127296447754
    5. ' ' → logprob: -7.520127296447754
    6. '<|end|>' → logprob: -11.020127296447754
    7. ',N' → logprob: -11.020127296447754
    8. '=int' → logprob: -11.895127296447754
    9. ')' → logprob: -12.145127296447754
    10. ' =)' → logprob: -12.395127296447754

Token 255: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2021617591381073
    2. ' int' → logprob: -1.7021617889404297
    3. '0' → logprob: -7.57716178894043
    4. ' ' → logprob: -8.70216178894043
    5. '10' → logprob: -10.45216178894043
    6. '5' → logprob: -11.32716178894043
    7. '(int' → logprob: -12.20216178894043
    8. '=int' → logprob: -12.32716178894043
    9. '<int' → logprob: -12.45216178894043
    10. '[int' → logprob: -12.57716178894043

Token 256: '(read' (ID: 45738)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.022800229489803314
    2. '()' → logprob: -4.272800445556641
    3. '(' → logprob: -4.897800445556641
    4. '(sys' → logprob: -7.147800445556641
    5. 'input' → logprob: -8.64780044555664
    6. '(read' → logprob: -8.77280044555664
    7. '('' → logprob: -11.77280044555664
    8. ' (' → logprob: -12.77280044555664
    9. ' ()' → logprob: -12.77280044555664
    10. '(
' → logprob: -13.77280044555664

Token 257: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00013393278641160578
    2. '())' → logprob: -9.375133514404297
    3. '()' → logprob: -10.750133514404297
    4. 'ine' → logprob: -11.125133514404297
    5. 'input' → logprob: -12.000133514404297
    6. '().' → logprob: -12.500133514404297
    7. 'lines' → logprob: -14.000133514404297
    8. 'lin' → logprob: -14.125133514404297
    9. 'Line' → logprob: -15.250133514404297
    10. '()
' → logprob: -16.000133514404297

Token 258: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0031153298914432526
    2. '().' → logprob: -6.253115177154541
    3. '()' → logprob: -6.753115177154541
    4. '())
' → logprob: -11.2531156539917
    5. ' ())' → logprob: -12.5031156539917
    6. '())

' → logprob: -14.2531156539917
    7. ')' → logprob: -14.5031156539917
    8. '(' → logprob: -14.5031156539917
    9. '()
' → logprob: -15.1281156539917
    10. '();)' → logprob: -16.378114700317383

Token 259: 'Edge' (ID: 16577)
  Prédit: 'Edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -7.028536492725834e-05
    2. ' Edge' → logprob: -10.875070571899414
    3. 'Edges' → logprob: -11.000070571899414
    4. 'M' → logprob: -11.625070571899414
    5. 'E' → logprob: -11.750070571899414
    6. 's' → logprob: -12.875070571899414
    7. 'p' → logprob: -13.125070571899414
    8. 'm' → logprob: -13.250070571899414
    9. '.Edge' → logprob: -13.625070571899414
    10. 'S' → logprob: -13.625070571899414

Token 260: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014157623052597
    2. '=' → logprob: -1.701415777206421
    3. '=[]' → logprob: -13.201416015625
    4. ' ' → logprob: -15.451416015625
    5. ' =[' → logprob: -15.701416015625
    6. '=[' → logprob: -16.076416015625
    7. '＝' → logprob: -16.951416015625
    8. ',' → logprob: -17.326416015625
    9. '=[]
' → logprob: -17.451416015625
    10. '[:]' → logprob: -18.076416015625

Token 261: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001502598519437015
    2. ' [[]' → logprob: -6.501502513885498
    3. '[]' → logprob: -16.751502990722656
    4. ' [' → logprob: -16.876502990722656
    5. '[[' → logprob: -17.376502990722656
    6. '[
' → logprob: -17.626502990722656
    7. '[len' → logprob: -18.626502990722656
    8. '[n' → logprob: -18.876502990722656
    9. '[N' → logprob: -19.001502990722656
    10. '[List' → logprob: -19.251502990722656

Token 262: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07904819399118423
    2. ' for' → logprob: -2.5790481567382812
    3. ')' → logprob: -9.829048156738281
    4. '(N' → logprob: -9.954048156738281
    5. 'N' → logprob: -10.579048156738281
    6. '
' → logprob: -10.829048156738281
    7. '	for' → logprob: -12.579048156738281
    8. ']' → logprob: -12.829048156738281
    9. ' ' → logprob: -13.454048156738281
    10. '()' → logprob: -13.579048156738281

Token 263: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0951605960726738
    2. '_' → logprob: -3.095160484313965
    3. 'range' → logprob: -3.095160484313965
    4. ' in' → logprob: -8.845160484313965
    5. '(range' → logprob: -9.970160484313965
    6. 'in' → logprob: -10.720160484313965
    7. '_range' → logprob: -11.595160484313965
    8. ' _' → logprob: -11.595160484313965
    9. 'i' → logprob: -12.470160484313965
    10. ' i' → logprob: -13.720160484313965

Token 264: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0025014597922563553
    2. ' range' → logprob: -6.002501487731934
    3. 'in' → logprob: -10.627501487731934
    4. ' in' → logprob: -13.627501487731934
    5. '(range' → logprob: -15.127501487731934
    6. 'N' → logprob: -17.627500534057617
    7. '	range' → logprob: -18.002500534057617
    8. '_range' → logprob: -18.627500534057617
    9. ' ' → logprob: -19.127500534057617
    10. 'n' → logprob: -19.752500534057617

Token 265: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004078401252627373
    2. ' range' → logprob: -5.504078388214111
    3. '(range' → logprob: -18.129077911376953
    4. ' ' → logprob: -20.379077911376953
    5. '	range' → logprob: -20.754077911376953
    6. '
' → logprob: -21.629077911376953
    7. '   ' → logprob: -22.004077911376953
    8. 'rang' → logprob: -22.504077911376953
    9. '  ' → logprob: -22.629077911376953
    10. 'r' → logprob: -22.879077911376953

Token 266: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5759754180908203
    2. '(N' → logprob: -0.8259754180908203
    3. ' N' → logprob: -10.32597541809082
    4. ' (' → logprob: -13.82597541809082
    5. '(' → logprob: -14.20097541809082
    6. '	N' → logprob: -14.70097541809082
    7. 'range' → logprob: -14.70097541809082
    8. '
' → logprob: -15.20097541809082
    9. ')' → logprob: -16.45097541809082
    10. '   ' → logprob: -16.57597541809082

Token 267: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.5760940909385681
    2. ')]
' → logprob: -0.8260940909385681
    3. ')]
' → logprob: -8.951093673706055
    4. ')]

' → logprob: -10.951093673706055
    5. ')' → logprob: -12.326093673706055
    6. ']' → logprob: -13.951093673706055
    7. ' )' → logprob: -14.201093673706055
    8. ')
' → logprob: -14.326093673706055
    9. ']
' → logprob: -14.451093673706055
    10. '])' → logprob: -16.576093673706055

Token 268: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002614550176076591
    2. ' for' → logprob: -8.250261306762695
    3. 'n' → logprob: -15.875261306762695
    4. '	for' → logprob: -18.000261306762695
    5. '
' → logprob: -18.750261306762695
    6. 'i' → logprob: -18.875261306762695
    7. '<|end|>' → logprob: -19.125261306762695
    8. 'f' → logprob: -19.250261306762695
    9. 'For' → logprob: -19.250261306762695
    10. 'r' → logprob: -19.375261306762695

Token 269: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0020732907578349113
    2. ' _' → logprob: -6.252073287963867
    3. '_i' → logprob: -9.502073287963867
    4. ' i' → logprob: -9.627073287963867
    5. 'i' → logprob: -12.502073287963867
    6. '_=' → logprob: -15.627073287963867
    7. '__' → logprob: -17.002073287963867
    8. ' ' → logprob: -17.502073287963867
    9. ' range' → logprob: -17.752073287963867
    10. '_range' → logprob: -18.127073287963867

Token 270: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06268429756164551
    2. 'in' → logprob: -2.8126842975616455
    3. 'range' → logprob: -7.312684059143066
    4. ' ' → logprob: -10.937684059143066
    5. ' range' → logprob: -11.187684059143066
    6. 'input' → logprob: -11.312684059143066
    7. 's' → logprob: -13.437684059143066
    8. 'import' → logprob: -13.687684059143066
    9. 'inp' → logprob: -14.312684059143066
    10. 'n' → logprob: -14.937684059143066

Token 271: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008615161292254925
    2. ' range' → logprob: -4.758615016937256
    3. 'r' → logprob: -15.508615493774414
    4. ' ' → logprob: -16.133615493774414
    5. 'map' → logprob: -16.258615493774414
    6. 'rang' → logprob: -16.758615493774414
    7. 'sys' → logprob: -16.883615493774414
    8. '(range' → logprob: -17.508615493774414
    9. '	range' → logprob: -17.508615493774414
    10. 'ra' → logprob: -18.258615493774414

Token 272: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00012606535165105015
    2. 'N' → logprob: -9.750125885009766
    3. '(' → logprob: -10.250125885009766
    4. ' (' → logprob: -10.500125885009766
    5. ' N' → logprob: -12.875125885009766
    6. '(
' → logprob: -13.500125885009766
    7. '(int' → logprob: -14.250125885009766
    8. '(n' → logprob: -16.375125885009766
    9. '(range' → logprob: -17.750125885009766
    10. 'range' → logprob: -18.000125885009766

Token 273: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3868848979473114
    2. '-' → logprob: -1.1368849277496338
    3. '):
' → logprob: -11.636884689331055
    4. '):' → logprob: -13.136884689331055
    5. '1' → logprob: -14.011884689331055
    6. ')' → logprob: -14.511884689331055
    7. ' ' → logprob: -14.511884689331055
    8. 'N' → logprob: -14.886884689331055
    9. '  ' → logprob: -15.761884689331055
    10. ' ' → logprob: -16.136884689331055

Token 274: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. ')' → logprob: -16.62501335144043
    4. '0' → logprob: -17.87501335144043
    5. '2' → logprob: -18.12501335144043
    6. '```' → logprob: -18.12501335144043
    7. '
' → logprob: -19.00001335144043
    8. 'import' → logprob: -19.12501335144043
    9. '<|end|>' → logprob: -19.12501335144043
    10. 'from' → logprob: -19.50001335144043

Token 275: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.02673541195690632
    2. '):' → logprob: -3.651735305786133
    3. ':' → logprob: -8.901735305786133
    4. ' ):
' → logprob: -9.151735305786133
    5. '):
' → logprob: -9.526735305786133
    6. ':
' → logprob: -9.526735305786133
    7. ',' → logprob: -10.526735305786133
    8. ')' → logprob: -11.901735305786133
    9. ' ):' → logprob: -11.901735305786133
    10. '():
' → logprob: -12.776735305786133

Token 276: '   ' (ID: 271)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.8046016097068787
    2. 'a' → logprob: -0.9296016097068787
    3. ' u' → logprob: -1.9296016693115234
    4. ' a' → logprob: -4.429601669311523
    5. '   ' → logprob: -7.554601669311523
    6. 'v' → logprob: -8.679601669311523
    7. 'A' → logprob: -9.304601669311523
    8. '	u' → logprob: -10.554601669311523
    9. 'x' → logprob: -10.679601669311523
    10. ' v' → logprob: -11.054601669311523

Token 277: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.06248687207698822
    2. 'u' → logprob: -2.8124868869781494
    3. ' a' → logprob: -8.43748664855957
    4. 'x' → logprob: -9.06248664855957
    5. ' u' → logprob: -9.18748664855957
    6. 'v' → logprob: -9.68748664855957
    7. 'A' → logprob: -11.68748664855957
    8. 'f' → logprob: -11.93748664855957
    9. '   ' → logprob: -12.93748664855957
    10. 's' → logprob: -13.06248664855957

Token 278: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11028318107128143
    2. ',b' → logprob: -2.485283136367798
    3. ' ,' → logprob: -3.860283136367798
    4. ',v' → logprob: -10.610282897949219
    5. ',a' → logprob: -11.610282897949219
    6. 'b' → logprob: -11.985282897949219
    7. '_,' → logprob: -12.860282897949219
    8. ',B' → logprob: -13.235282897949219
    9. ',_' → logprob: -13.485282897949219
    10. ',input' → logprob: -13.860282897949219

Token 279: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.061967797577381134
    2. ' b' → logprob: -2.8119678497314453
    3. ' ' → logprob: -15.936967849731445
    4. '=' → logprob: -18.936967849731445
    5. ',b' → logprob: -19.061967849731445
    6. '	b' → logprob: -19.936967849731445
    7. '_b' → logprob: -20.311967849731445
    8. ' =' → logprob: -20.311967849731445
    9. '*b' → logprob: -20.311967849731445
    10. '_' → logprob: -20.311967849731445

Token 280: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693145871162415
    2. ' =' → logprob: -2.1269314289093018
    3. '=int' → logprob: -13.751931190490723
    4. '=line' → logprob: -13.751931190490723
    5. 'a' → logprob: -15.126931190490723
    6. '=input' → logprob: -15.251931190490723
    7. '＝' → logprob: -15.626931190490723
    8. '=a' → logprob: -15.876931190490723
    9. ' ' → logprob: -16.25193214416504
    10. '=sys' → logprob: -16.62693214416504

Token 281: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.1269291490316391
    2. ' map' → logprob: -2.1269290447235107
    3. 'list' → logprob: -14.75192928314209
    4. '(map' → logprob: -15.00192928314209
    5. '[' → logprob: -15.87692928314209
    6. '	map' → logprob: -16.126928329467773
    7. '.map' → logprob: -17.126928329467773
    8. 'm' → logprob: -17.126928329467773
    9. ' ' → logprob: -17.751928329467773
    10. ' list' → logprob: -17.751928329467773

Token 282: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -1.9623810658231378e-05
    2. 'int' → logprob: -11.750020027160645
    3. '=int' → logprob: -12.750020027160645
    4. '(lambda' → logprob: -12.750020027160645
    5. '(' → logprob: -13.125020027160645
    6. '<int' → logprob: -14.000020027160645
    7. ',int' → logprob: -14.125020027160645
    8. '[int' → logprob: -14.500020027160645
    9. '(map' → logprob: -14.750020027160645
    10. '(str' → logprob: -14.750020027160645

Token 283: ',' (ID: 11)
  Prédit: '(read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.028193626552820206
    2. ',' → logprob: -3.653193712234497
    3. 'read' → logprob: -7.153193473815918
    4. '.readline' → logprob: -7.778193473815918
    5. '(),' → logprob: -7.778193473815918
    6. ',input' → logprob: -9.028193473815918
    7. ' readline' → logprob: -9.778193473815918
    8. '(' → logprob: -11.153193473815918
    9. '(input' → logprob: -11.403193473815918
    10. ')' → logprob: -11.403193473815918

Token 284: ' readline' (ID: 179561)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0003364158037584275
    2. ' readline' → logprob: -8.000336647033691
    3. 'readonly' → logprob: -14.250336647033691
    4. '.readline' → logprob: -15.375336647033691
    5. ' read' → logprob: -16.625335693359375
    6. '(read' → logprob: -17.000335693359375
    7. ')' → logprob: -17.500335693359375
    8. ' ' → logprob: -17.625335693359375
    9. 'README' → logprob: -19.250335693359375
    10. 'sys' → logprob: -19.250335693359375

Token 285: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.320199877838604e-07
    2. '()' → logprob: -14.75
    3. ' ().' → logprob: -19.0
    4. '(' → logprob: -20.5
    5. '()
' → logprob: -20.75
    6. '())' → logprob: -21.25
    7. '.split' → logprob: -21.625
    8. '.readline' → logprob: -21.75
    9. '()[' → logprob: -22.125
    10. '.strip' → logprob: -22.5

Token 286: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.005267434287816286
    2. 'strip' → logprob: -5.25526762008667
    3. 'rstrip' → logprob: -10.380267143249512
    4. ' split' → logprob: -13.755267143249512
    5. '().' → logprob: -14.005267143249512
    6. 'read' → logprob: -14.880267143249512
    7. '(split' → logprob: -15.630267143249512
    8. '.split' → logprob: -16.505268096923828
    9. ' strip' → logprob: -17.005268096923828
    10. ')' → logprob: -17.005268096923828

Token 287: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06983982771635056
    2. ')' → logprob: -2.8198397159576416
    3. '())
' → logprob: -5.069839954376221
    4. '()' → logprob: -6.569839954376221
    5. ')
' → logprob: -9.069839477539062
    6. '()
' → logprob: -10.819839477539062
    7. '(' → logprob: -11.194839477539062
    8. '())
' → logprob: -13.194839477539062
    9. '(),' → logprob: -13.694839477539062
    10. ' ())' → logprob: -14.444839477539062

Token 288: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041363105177879333
    2. 'a' → logprob: -3.666363000869751
    3. '<|end|>' → logprob: -4.54136323928833
    4. '    
' → logprob: -6.54136323928833
    5. '
' → logprob: -7.29136323928833
    6. ' a' → logprob: -7.66636323928833
    7. ' 
' → logprob: -8.041362762451172
    8. '  ' → logprob: -8.166362762451172
    9. ' Edge' → logprob: -8.166362762451172
    10. ')' → logprob: -8.791362762451172

Token 289: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.1781771183013916
    2. 'Edge' → logprob: -1.9281771183013916
    3. ' a' → logprob: -4.5531768798828125
    4. ' Edge' → logprob: -4.9281768798828125
    5. '   ' → logprob: -12.053176879882812
    6. ' edge' → logprob: -13.178176879882812
    7. '_edge' → logprob: -13.178176879882812
    8. ' 
' → logprob: -13.178176879882812
    9. '.Edge' → logprob: -13.303176879882812
    10. 'edge' → logprob: -13.678176879882812

Token 290: ' -=' (ID: 12583)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5731416940689087
    2. ' -=' → logprob: -0.9481416940689087
    3. '-=' → logprob: -3.073141574859619
    4. ' -' → logprob: -6.448141574859619
    5. '   ' → logprob: -7.573141574859619
    6. 'a' → logprob: -8.573142051696777
    7. ' ' → logprob: -8.948142051696777
    8. ',' → logprob: -10.198142051696777
    9. '  ' → logprob: -10.948142051696777
    10. '=' → logprob: -12.073142051696777

Token 291: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.56102097814437e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -16.250045776367188
    4. '<|end|>' → logprob: -17.625045776367188
    5. '```' → logprob: -18.125045776367188
    6. '１' → logprob: -18.625045776367188
    7. '  ' → logprob: -19.687545776367188
    8. '
' → logprob: -20.187545776367188
    9. '۱' → logprob: -20.312545776367188
    10. '2' → logprob: -20.625045776367188

Token 292: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -18.500001907348633
    4. '<|end|>' → logprob: -18.875001907348633
    5. '   ' → logprob: -19.000001907348633
    6. '１' → logprob: -19.125001907348633
    7. 'a' → logprob: -19.875001907348633
    8. 'import' → logprob: -20.375001907348633
    9. '2' → logprob: -20.625001907348633
    10. '0' → logprob: -20.750001907348633

Token 293: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48484811186790466
    2. 'b' → logprob: -0.984848141670227
    3. '
' → logprob: -4.9848480224609375
    4. ' b' → logprob: -5.6098480224609375
    5. ',b' → logprob: -9.234848022460938
    6. ' 
' → logprob: -10.734848022460938
    7. '	b' → logprob: -10.984848022460938
    8. '    
' → logprob: -11.359848022460938
    9. '
' → logprob: -11.359848022460938
    10. ',' → logprob: -11.484848022460938

Token 294: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01849312335252762
    2. 'b' → logprob: -4.018493175506592
    3. ' b' → logprob: -8.018492698669434
    4. ',' → logprob: -12.018492698669434
    5. ',b' → logprob: -12.518492698669434
    6. '	b' → logprob: -12.643492698669434
    7. '
' → logprob: -15.018492698669434
    8. '```' → logprob: -15.643492698669434
    9. '    
' → logprob: -15.893492698669434
    10. ' ' → logprob: -16.14349365234375

Token 295: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.0007099286303855479
    2. ' b' → logprob: -7.2507100105285645
    3. '   ' → logprob: -18.875709533691406
    4. '	b' → logprob: -21.375709533691406
    5. '_b' → logprob: -23.375709533691406
    6. 'B' → logprob: -24.625709533691406
    7. '.b' → logprob: -24.750709533691406
    8. ',b' → logprob: -25.125709533691406
    9. '*b' → logprob: -25.125709533691406
    10. '#' → logprob: -25.500709533691406

Token 296: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.1696794182062149
    2. '-=' → logprob: -1.9196794033050537
    3. '-' → logprob: -4.669679641723633
    4. ' -' → logprob: -10.794679641723633
    5. '   ' → logprob: -12.294679641723633
    6. ' ' → logprob: -12.544679641723633
    7. '=' → logprob: -12.919679641723633
    8. '[' → logprob: -13.169679641723633
    9. '.' → logprob: -15.044679641723633
    10. '```' → logprob: -15.169679641723633

Token 297: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.054882392287254333
    2. ' ' → logprob: -2.929882287979126
    3. '   ' → logprob: -16.804882049560547
    4. '```' → logprob: -18.804882049560547
    5. ' ' → logprob: -18.992382049560547
    6. '2' → logprob: -19.679882049560547
    7. '  ' → logprob: -19.742382049560547
    8. '
' → logprob: -19.867382049560547
    9. '0' → logprob: -19.929882049560547
    10. '１' → logprob: -19.992382049560547

Token 298: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '```' → logprob: -20.125017166137695
    4. '۱' → logprob: -20.312517166137695
    5. '   ' → logprob: -20.437517166137695
    6. '１' → logprob: -20.625017166137695
    7. '2' → logprob: -20.812517166137695
    8. '0' → logprob: -21.750017166137695
    9. '১' → logprob: -21.812517166137695
    10. '-' → logprob: -22.062517166137695

Token 299: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07231977581977844
    2. 'Edge' → logprob: -2.822319746017456
    3. ' Edge' → logprob: -4.697319984436035
    4. '
' → logprob: -6.822319984436035
    5. '<Edge' → logprob: -10.072319984436035
    6. '    
' → logprob: -10.947319984436035
    7. '.Edge' → logprob: -11.322319984436035
    8. '<|end|>' → logprob: -12.572319984436035
    9. ' 
' → logprob: -12.947319984436035
    10. '```' → logprob: -13.072319984436035

Token 300: '   ' (ID: 271)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.6802921295166016
    2. '   ' → logprob: -1.1802921295166016
    3. ' Edge' → logprob: -1.6802921295166016
    4. '.Edge' → logprob: -12.055292129516602
    5. '<Edge' → logprob: -12.180292129516602
    6. '
' → logprob: -12.555292129516602
    7. '```' → logprob: -12.805292129516602
    8. ' ' → logprob: -13.555292129516602
    9. '_edge' → logprob: -13.805292129516602
    10. '  ' → logprob: -14.180292129516602

Token 301: ' Edge' (ID: 16396)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' (adapté à ' Edge') → logprob: -7.941850526549388e-06
    2. ' Edge' → logprob: -11.750007629394531
    3. '   ' → logprob: -20.25000762939453
    4. '.Edge' → logprob: -21.12500762939453
    5. '_edge' → logprob: -21.37500762939453
    6. '<Edge' → logprob: -21.75000762939453
    7. '
' → logprob: -22.87500762939453
    8. '```' → logprob: -23.62500762939453
    9. 'EDGE' → logprob: -23.62500762939453
    10. 'edge' → logprob: -25.25000762939453

Token 302: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -3.128163257315464e-07
    2. 'a' → logprob: -15.375
    3. '[' → logprob: -18.625
    4. '[b' → logprob: -19.375
    5. '[A' → logprob: -19.875
    6. ' [' → logprob: -20.75
    7. '[u' → logprob: -22.0
    8. '   ' → logprob: -22.125
    9. '```' → logprob: -22.375
    10. '	a' → logprob: -22.625

Token 303: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0007310202927328646
    2. '.append' → logprob: -7.250730991363525
    3. ').' → logprob: -11.250731468200684
    4. '.' → logprob: -12.000731468200684
    5. ' ].' → logprob: -14.000731468200684
    6. ']' → logprob: -14.500731468200684
    7. '.app' → logprob: -15.375731468200684
    8. ' .' → logprob: -15.875731468200684
    9. '}.' → logprob: -16.125730514526367
    10. '​.' → logprob: -16.500730514526367

Token 304: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: 0.0
    2. '.append' → logprob: -17.75
    3. ' append' → logprob: -17.75
    4. 'app' → logprob: -18.25
    5. 'appen' → logprob: -20.5
    6. '	append' → logprob: -22.0
    7. 'add' → logprob: -22.875
    8. '_append' → logprob: -23.5
    9. 'Append' → logprob: -24.25
    10. ' ' → logprob: -25.375

Token 305: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.00020354038861114532
    2. 'b' → logprob: -8.500203132629395
    3. ' b' → logprob: -18.62520408630371
    4. '(' → logprob: -18.62520408630371
    5. '(
' → logprob: -19.62520408630371
    6. '	b' → logprob: -19.87520408630371
    7. ' (' → logprob: -22.62520408630371
    8. '(B' → logprob: -23.50020408630371
    9. ')b' → logprob: -24.00020408630371
    10. ',b' → logprob: -24.25020408630371

Token 306: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07910601794719696
    2. ')
' → logprob: -2.579106092453003
    3. '   ' → logprob: -8.454106330871582
    4. ')
' → logprob: -13.579106330871582
    5. ' )' → logprob: -14.079106330871582
    6. '),' → logprob: -15.204106330871582
    7. ' )
' → logprob: -15.204106330871582
    8. ')

' → logprob: -15.954106330871582
    9. '<|end|>' → logprob: -16.079105377197266
    10. '[' → logprob: -16.579105377197266

Token 307: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018417751416563988
    2. 'Edge' → logprob: -6.5018415451049805
    3. ' Edge' → logprob: -8.00184154510498
    4. '<Edge' → logprob: -12.87684154510498
    5. '```' → logprob: -14.25184154510498
    6. '.Edge' → logprob: -14.25184154510498
    7. '       ' → logprob: -15.62684154510498
    8. ' ' → logprob: -16.001842498779297
    9. '_edge' → logprob: -16.876842498779297
    10. '  ' → logprob: -17.001842498779297

Token 308: ' Edge' (ID: 16396)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' (adapté à ' Edge') → logprob: -0.07954759150743484
    2. ' Edge' → logprob: -2.579547643661499
    3. '   ' → logprob: -7.32954740524292
    4. '<Edge' → logprob: -14.329547882080078
    5. '.Edge' → logprob: -14.454547882080078
    6. ' ' → logprob: -16.079547882080078
    7. '  ' → logprob: -16.204547882080078
    8. '_edge' → logprob: -16.204547882080078
    9. 'EDGE' → logprob: -16.829547882080078
    10. '```' → logprob: -16.954547882080078

Token 309: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -2.45848218582978e-06
    2. '[a' → logprob: -13.00000286102295
    3. 'b' → logprob: -17.125001907348633
    4. '[' → logprob: -17.625001907348633
    5. ' [' → logprob: -21.625001907348633
    6. '```' → logprob: -21.750001907348633
    7. '[s' → logprob: -21.875001907348633
    8. '[B' → logprob: -22.500001907348633
    9. '	b' → logprob: -22.500001907348633
    10. '[
' → logprob: -22.750001907348633

Token 310: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.17432567477226257
    2. '.append' → logprob: -1.924325704574585
    3. ').' → logprob: -4.299325466156006
    4. '.' → logprob: -8.424325942993164
    5. ' .' → logprob: -8.799325942993164
    6. '.app' → logprob: -10.799325942993164
    7. '}.' → logprob: -11.924325942993164
    8. '>.' → logprob: -12.424325942993164
    9. '[].' → logprob: -12.549325942993164
    10. ' ].' → logprob: -12.674325942993164

Token 311: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.9361264946837764e-07
    2. '.append' → logprob: -17.0
    3. 'appen' → logprob: -17.125
    4. ' append' → logprob: -17.25
    5. '	append' → logprob: -19.5
    6. 'app' → logprob: -22.125
    7. 'add' → logprob: -23.0
    8. '_append' → logprob: -23.625
    9. 'Append' → logprob: -24.0
    10. 'prepend' → logprob: -24.25

Token 312: '(a' (ID: 6271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1275027096271515
    2. '(a' → logprob: -2.127502679824829
    3. ' a' → logprob: -7.502502918243408
    4. ' (' → logprob: -10.75250244140625
    5. ')a' → logprob: -14.50250244140625
    6. '(
' → logprob: -15.12750244140625
    7. ')' → logprob: -15.37750244140625
    8. '	a' → logprob: -15.50250244140625
    9. '(' → logprob: -15.75250244140625
    10. ',a' → logprob: -17.37750244140625

Token 313: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.1928003813372925e-05
    2. ')
' → logprob: -9.875051498413086
    3. ' )' → logprob: -15.250051498413086
    4. ')

' → logprob: -16.875051498413086
    5. '<|end|>' → logprob: -17.250051498413086
    6. ')}' → logprob: -18.375051498413086
    7. '),' → logprob: -18.375051498413086
    8. ')
' → logprob: -18.500051498413086
    9. '))' → logprob: -18.625051498413086
    10. ')#' → logprob: -18.750051498413086

Token 314: 'dist' (ID: 24126)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.7577651143074036
    2. 'p' → logprob: -1.5077650547027588
    3. 'dist' → logprob: -1.5077650547027588
    4. 'd' → logprob: -3.382765054702759
    5. 'diam' → logprob: -4.632765293121338
    6. 's' → logprob: -5.132765293121338
    7. 'root' → logprob: -5.382765293121338
    8. 'dp' → logprob: -5.632765293121338
    9. 'start' → logprob: -5.757765293121338
    10. 'res' → logprob: -5.882765293121338

Token 315: '0' (ID: 15)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22055666148662567
    2. '=' → logprob: -1.720556616783142
    3. 's' → logprob: -4.845556735992432
    4. '=[' → logprob: -5.470556735992432
    5. '1' → logprob: -5.720556735992432
    6. '0' → logprob: -6.970556735992432
    7. ',' → logprob: -7.845556735992432
    8. '(' → logprob: -8.095556259155273
    9. ' =[' → logprob: -8.095556259155273
    10. '_from' → logprob: -8.220556259155273

Token 316: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04317159950733185
    2. '=' → logprob: -3.1681716442108154
    3. ',' → logprob: -9.168171882629395
    4. '0' → logprob: -10.543171882629395
    5. 's' → logprob: -11.793171882629395
    6. '=[' → logprob: -11.918171882629395
    7. ' =[' → logprob: -11.918171882629395
    8. '[' → logprob: -12.043171882629395
    9. '_' → logprob: -12.168171882629395
    10. '1' → logprob: -12.418171882629395

Token 317: ' bfs' (ID: 147571)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.006252623163163662
    2. ' bfs' → logprob: -5.131252765655518
    3. '[' → logprob: -8.50625228881836
    4. '[b' → logprob: -9.13125228881836
    5. ' [' → logprob: -13.00625228881836
    6. '(' → logprob: -13.25625228881836
    7. '(b' → logprob: -13.25625228881836
    8. '{' → logprob: -13.38125228881836
    9. '[-' → logprob: -13.63125228881836
    10. 'bf' → logprob: -14.25625228881836

Token 318: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.0001454955490771681
    2. '({' → logprob: -9.12514591217041
    3. '(' → logprob: -10.75014591217041
    4. '[' → logprob: -11.25014591217041
    5. '((' → logprob: -13.87514591217041
    6. ' ([' → logprob: -14.12514591217041
    7. '(([' → logprob: -15.37514591217041
    8. '{' → logprob: -16.125144958496094
    9. '(s' → logprob: -16.500144958496094
    10. '0' → logprob: -16.625144958496094

Token 319: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.372294698550832e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -16.250009536743164
    4. '(' → logprob: -16.375009536743164
    5. '۰' → logprob: -16.625009536743164
    6. '  ' → logprob: -18.250009536743164
    7. '０' → logprob: -18.375009536743164
    8. '
' → logprob: -18.437509536743164
    9. '[' → logprob: -18.687509536743164
    10. '])' → logprob: -18.812509536743164

Token 320: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -5.7530574849806726e-05
    2. '])
' → logprob: -10.000057220458984
    3. ' ])' → logprob: -11.375057220458984
    4. ')' → logprob: -16.000057220458984
    5. '])

' → logprob: -16.000057220458984
    6. ']);' → logprob: -16.500057220458984
    7. '])
' → logprob: -16.625057220458984
    8. ']' → logprob: -16.750057220458984
    9. ',' → logprob: -17.250057220458984
    10. '()' → logprob: -17.250057220458984

Token 321: 'st' (ID: 302)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0826713815331459
    2. 'v' → logprob: -3.9576714038848877
    3. 'max' → logprob: -4.082671165466309
    4. 'f' → logprob: -4.582671165466309
    5. 'd' → logprob: -4.832671165466309
    6. 'u' → logprob: -5.082671165466309
    7. 'fur' → logprob: -5.707671165466309
    8. 'far' → logprob: -5.957671165466309
    9. 'x' → logprob: -6.207671165466309
    10. 'idx' → logprob: -6.207671165466309

Token 322: ' =' (ID: 314)
  Prédit: 'ack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ack' → logprob: -0.39751601219177246
    2. ' =' → logprob: -1.3975160121917725
    3. 'art' → logprob: -3.1475160121917725
    4. 'dist' → logprob: -4.022516250610352
    5. '=' → logprob: -4.897516250610352
    6. 'r' → logprob: -5.772516250610352
    7. 'ep' → logprob: -6.147516250610352
    8. 'k' → logprob: -6.772516250610352
    9. 'acks' → logprob: -6.897516250610352
    10. 'ate' → logprob: -6.897516250610352

Token 323: ' dist' (ID: 3601)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2964966297149658
    2. '[max' → logprob: -1.4214966297149658
    3. '[' → logprob: -1.9214966297149658
    4. '{' → logprob: -1.9214966297149658
    5. 'max' → logprob: -2.546496629714966
    6. 'dist' → logprob: -3.421496629714966
    7. 'set' → logprob: -3.796496629714966
    8. '[min' → logprob: -4.296496391296387
    9. 'deque' → logprob: -4.296496391296387
    10. '[]' → logprob: -4.921496391296387

Token 324: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7491250875755213e-05
    2. '(' → logprob: -11.000027656555176
    3. '([' → logprob: -12.375027656555176
    4. '[' → logprob: -12.875027656555176
    5. '01' → logprob: -14.000027656555176
    6. ' =' → logprob: -14.375027656555176
    7. '1' → logprob: -14.875027656555176
    8. '02' → logprob: -15.000027656555176
    9. 'dist' → logprob: -15.750027656555176
    10. '012' → logprob: -15.875027656555176

Token 325: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.0007295898394659162
    2. '.copy' → logprob: -8.00072956085205
    3. '.argmax' → logprob: -9.12572956085205
    4. '.' → logprob: -9.25072956085205
    5. '[:]' → logprob: -9.37572956085205
    6. '[:' → logprob: -10.50072956085205
    7. '[' → logprob: -10.75072956085205
    8. '.count' → logprob: -11.37572956085205
    9. '.r' → logprob: -11.62572956085205
    10. '.arg' → logprob: -11.75072956085205

Token 326: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.0007200572872534394
    2. 'max' → logprob: -7.500720024108887
    3. '(dist' → logprob: -8.750720024108887
    4. '(' → logprob: -11.750720024108887
    5. 'dist' → logprob: -14.375720024108887
    6. ' max' → logprob: -15.500720024108887
    7. '=max' → logprob: -17.625720977783203
    8. '[max' → logprob: -17.875720977783203
    9. ',max' → logprob: -18.375720977783203
    10. ' (' → logprob: -18.750720977783203

Token 327: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -9.615255839889869e-05
    2. 'dist' → logprob: -9.250096321105957
    3. '_dist' → logprob: -17.25009536743164
    4. '(' → logprob: -18.12509536743164
    5. '	dist' → logprob: -18.12509536743164
    6. ' dist' → logprob: -18.25009536743164
    7. 'Dist' → logprob: -18.62509536743164
    8. '.dist' → logprob: -19.62509536743164
    9. ')' → logprob: -20.75009536743164
    10. '(
' → logprob: -21.12509536743164

Token 328: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013567219488322735
    2. 'dist' → logprob: -5.0135674476623535
    3. 'ist' → logprob: -5.3885674476623535
    4. '(dist' → logprob: -6.1385674476623535
    5. ' dist' → logprob: -9.263566970825195
    6. '_dist' → logprob: -13.513566970825195
    7. 'istance' → logprob: -13.513566970825195
    8. '))' → logprob: -13.888566970825195
    9. ')' → logprob: -13.888566970825195
    10. 'st' → logprob: -14.513566970825195

Token 329: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0033855263609439135
    2. '()))' → logprob: -6.128385543823242
    3. '))
' → logprob: -6.878385543823242
    4. ')' → logprob: -9.128385543823242
    5. '(dist' → logprob: -10.753385543823242
    6. '()))
' → logprob: -11.128385543823242
    7. 'dist' → logprob: -11.753385543823242
    8. '())' → logprob: -12.253385543823242
    9. '))

' → logprob: -12.503385543823242
    10. ' ))' → logprob: -12.753385543823242

Token 330: 'd' (ID: 67)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -3.531315314830863e-06
    2. 'd' → logprob: -13.000003814697266
    3. 'distance' → logprob: -15.375003814697266
    4. ' dist' → logprob: -15.625003814697266
    5. 'dis' → logprob: -15.875003814697266
    6. 'ed' → logprob: -16.000003814697266
    7. 'st' → logprob: -16.375003814697266
    8. 'di' → logprob: -16.500003814697266
    9. 'dst' → logprob: -16.750003814697266
    10. 'done' → logprob: -17.000003814697266

Token 331: 'ists' (ID: 2549)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -3.249780638725497e-05
    2. 'st' → logprob: -10.625032424926758
    3. 'i' → logprob: -13.125032424926758
    4. 'is' → logprob: -13.125032424926758
    5. 'ists' → logprob: -13.375032424926758
    6. '1' → logprob: -14.000032424926758
    7. 'dist' → logprob: -14.625032424926758
    8. '2' → logprob: -15.875032424926758
    9. 'istance' → logprob: -15.875032424926758
    10. 'ef' → logprob: -16.000032424926758

Token 332: ' =' (ID: 314)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01443214900791645
    2. ' =' → logprob: -4.389431953430176
    3. 't' → logprob: -6.514431953430176
    4. '=' → logprob: -7.889431953430176
    5. 'to' → logprob: -10.514431953430176
    6. '0' → logprob: -11.514431953430176
    7. 'st' → logprob: -12.139431953430176
    8. '2' → logprob: -12.514431953430176
    9. 'a' → logprob: -12.514431953430176
    10. 'from' → logprob: -12.889431953430176

Token 333: ' bfs' (ID: 147571)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00593033991754055
    2. ' bfs' → logprob: -5.130930423736572
    3. '(b' → logprob: -14.505929946899414
    4. '[b' → logprob: -14.880929946899414
    5. ' b' → logprob: -15.005929946899414
    6. '   ' → logprob: -15.755929946899414
    7. ' ' → logprob: -16.630929946899414
    8. 'bf' → logprob: -16.755929946899414
    9. '	b' → logprob: -16.880929946899414
    10. 'bs' → logprob: -17.380929946899414

Token 334: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -3.309382373117842e-05
    2. '[' → logprob: -10.375033378601074
    3. '(st' → logprob: -13.250033378601074
    4. '(' → logprob: -17.750032424926758
    5. ' ([' → logprob: -17.750032424926758
    6. '   ' → logprob: -19.125032424926758
    7. '-st' → logprob: -19.625032424926758
    8. '=[' → logprob: -20.125032424926758
    9. '(([' → logprob: -20.125032424926758
    10. '[s' → logprob: -20.250032424926758

Token 335: 'st' (ID: 302)
  Prédit: 'st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -8.2994620242971e-06
    2. ' st' → logprob: -12.250008583068848
    3. '(st' → logprob: -12.625008583068848
    4. '
' → logprob: -15.750008583068848
    5. '   ' → logprob: -16.87500762939453
    6. '	st' → logprob: -17.75000762939453
    7. '[' → logprob: -19.62500762939453
    8. ' ' → logprob: -20.00000762939453
    9. 's' → logprob: -20.12500762939453
    10. '  ' → logprob: -21.75000762939453

Token 336: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0789133608341217
    2. '])
' → logprob: -2.578913450241089
    3. '])
' → logprob: -10.953913688659668
    4. '()' → logprob: -12.828913688659668
    5. '])

' → logprob: -13.578913688659668
    6. '()])
' → logprob: -13.828913688659668
    7. ' ])' → logprob: -14.578913688659668
    8. '])[' → logprob: -15.703913688659668
    9. ' ])
' → logprob: -15.828913688659668
    10. ')' → logprob: -16.82891273498535

Token 337: 'en' (ID: 262)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.062061235308647156
    2. 'en' → logprob: -3.562061309814453
    3. 'print' → logprob: -4.937061309814453
    4. 'goal' → logprob: -5.062061309814453
    5. 't' → logprob: -5.187061309814453
    6. 'et' → logprob: -5.312061309814453
    7. 'end' → logprob: -5.812061309814453
    8. 'ans' → logprob: -6.437061309814453
    9. 'res' → logprob: -7.062061309814453
    10. 'fin' → logprob: -7.937061309814453

Token 338: ' =' (ID: 314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0012303499970585108
    2. 't' → logprob: -7.001230239868164
    3. ' =' → logprob: -8.251230239868164
    4. '=' → logprob: -9.876230239868164
    5. '=d' → logprob: -12.626230239868164
    6. 'dt' → logprob: -13.876230239868164
    7. 'dist' → logprob: -14.751230239868164
    8. '```' → logprob: -14.751230239868164
    9. 'dst' → logprob: -14.876230239868164
    10. ' d' → logprob: -15.626230239868164

Token 339: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.01170265395194292
    2. ' d' → logprob: -4.511702537536621
    3. 'dist' → logprob: -7.386702537536621
    4. ' dist' → logprob: -10.261702537536621
    5. '   ' → logprob: -16.136703491210938
    6. ' ' → logprob: -16.261703491210938
    7. '  ' → logprob: -16.886703491210938
    8. '	d' → logprob: -17.886703491210938
    9. 'max' → logprob: -18.261703491210938
    10. '
' → logprob: -18.636703491210938

Token 340: 'ists' (ID: 2549)
  Prédit: 'ists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ists' → logprob: -0.001155697274953127
    2. 'sts' → logprob: -6.876155853271484
    3. 'ist' → logprob: -9.251155853271484
    4. 's' → logprob: -11.376155853271484
    5. '   ' → logprob: -12.876155853271484
    6. 'st' → logprob: -13.501155853271484
    7. 'i' → logprob: -13.751155853271484
    8. '[' → logprob: -13.876155853271484
    9. '`' → logprob: -14.001155853271484
    10. 'e' → logprob: -14.126155853271484

Token 341: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -3.643152740551159e-05
    2. '.' → logprob: -10.500036239624023
    3. ' .' → logprob: -12.125036239624023
    4. '.argmax' → logprob: -13.375036239624023
    5. 'index' → logprob: -14.500036239624023
    6. '.
' → logprob: -14.750036239624023
    7. '.idx' → logprob: -15.375036239624023
    8. '1' → logprob: -16.000036239624023
    9. 'd' → logprob: -16.125036239624023
    10. ' ' → logprob: -16.125036239624023

Token 342: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -1.0921942703134846e-05
    2. 'max' → logprob: -11.50001049041748
    3. '(' → logprob: -14.25001049041748
    4. ' max' → logprob: -17.875011444091797
    5. '=max' → logprob: -18.500011444091797
    6. '[max' → logprob: -19.000011444091797
    7. '(d' → logprob: -19.500011444091797
    8. ' (' → logprob: -19.500011444091797
    9. '(
' → logprob: -20.000011444091797
    10. '	max' → logprob: -21.750011444091797

Token 343: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.1994775377388578e-05
    2. 'd' → logprob: -11.500012397766113
    3. '(dist' → logprob: -13.250012397766113
    4. '(' → logprob: -17.250011444091797
    5. '[d' → logprob: -17.375011444091797
    6. ')d' → logprob: -17.625011444091797
    7. ' d' → logprob: -18.375011444091797
    8. ')' → logprob: -19.000011444091797
    9. ' (' → logprob: -19.000011444091797
    10. 'dist' → logprob: -19.125011444091797

Token 344: 'ists' (ID: 2549)
  Prédit: 'ists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ists' → logprob: -0.0021709592547267675
    2. 'ist' → logprob: -6.502171039581299
    3. 'd' → logprob: -7.752171039581299
    4. ' d' → logprob: -8.62717056274414
    5. 's' → logprob: -10.87717056274414
    6. ')' → logprob: -11.87717056274414
    7. '(d' → logprob: -12.00217056274414
    8. '[' → logprob: -12.37717056274414
    9. 'sts' → logprob: -12.37717056274414
    10. 't' → logprob: -12.87717056274414

Token 345: '))
' (ID: 2210)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.31991732120513916
    2. ')' → logprob: -1.3199173212051392
    3. ')
' → logprob: -5.69491720199585
    4. '])
' → logprob: -6.06991720199585
    5. '))' → logprob: -7.56991720199585
    6. ')])' → logprob: -8.569917678833008
    7. ')]' → logprob: -8.694917678833008
    8. '()' → logprob: -10.319917678833008
    9. '())' → logprob: -11.194917678833008
    10. ']' → logprob: -12.194917678833008

Token 346: 'dis' (ID: 4220)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.8331663012504578
    2. 'print' → logprob: -1.0831663608551025
    3. 'dist' → logprob: -2.4581663608551025
    4. 'p' → logprob: -2.8331663608551025
    5. 'diam' → logprob: -3.7081663608551025
    6. 'path' → logprob: -3.8331663608551025
    7. 'd' → logprob: -4.458166122436523
    8. 'cl' → logprob: -5.083166122436523
    9. 'length' → logprob: -5.958166122436523
    10. 'depth' → logprob: -5.958166122436523

Token 347: 'te' (ID: 411)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00012725738633889705
    2. 'ts' → logprob: -9.250126838684082
    3. '=' → logprob: -11.500126838684082
    4. 'tant' → logprob: -11.875126838684082
    5. 'tan' → logprob: -12.625126838684082
    6. ' =' → logprob: -13.375126838684082
    7. '0' → logprob: -13.375126838684082
    8. 'tas' → logprob: -14.125126838684082
    9. '2' → logprob: -14.375126838684082
    10. 'T' → logprob: -14.500126838684082

Token 348: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11450101435184479
    2. ' =' → logprob: -2.9895009994506836
    3. 's' → logprob: -3.6145009994506836
    4. '=' → logprob: -4.114500999450684
    5. 'd' → logprob: -4.989500999450684
    6. 'r' → logprob: -6.239500999450684
    7. '0' → logprob: -6.364500999450684
    8. 'nd' → logprob: -6.364500999450684
    9. 'ns' → logprob: -6.989500999450684
    10. 'nds' → logprob: -8.114500999450684

Token 349: ' bfs' (ID: 147571)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6329734921455383
    2. ' d' → logprob: -0.7579734921455383
    3. '[d' → logprob: -9.007973670959473
    4. 'b' → logprob: -9.632973670959473
    5. ' bfs' → logprob: -10.007973670959473
    6. ' ' → logprob: -10.382973670959473
    7. ' [' → logprob: -10.382973670959473
    8. '   ' → logprob: -11.007973670959473
    9. 'max' → logprob: -11.007973670959473
    10. ' max' → logprob: -11.007973670959473

Token 350: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -2.935296834039036e-06
    2. '[' → logprob: -13.12500286102295
    3. '(en' → logprob: -14.12500286102295
    4. ' ([' → logprob: -17.375003814697266
    5. '   ' → logprob: -17.750003814697266
    6. '[end' → logprob: -17.750003814697266
    7. '(' → logprob: -18.000003814697266
    8. '
' → logprob: -18.125003814697266
    9. '[len' → logprob: -18.250003814697266
    10. '[n' → logprob: -18.250003814697266

Token 351: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.00010235115041723475
    2. '[' → logprob: -9.250102043151855
    3. '(en' → logprob: -12.250102043151855
    4. ' en' → logprob: -13.750102043151855
    5. '	en' → logprob: -16.000102996826172
    6. ''en' → logprob: -16.375102996826172
    7. ',en' → logprob: -16.625102996826172
    8. '   ' → logprob: -17.500102996826172
    9. '=en' → logprob: -17.750102996826172
    10. '
' → logprob: -18.000102996826172

Token 352: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.016955649480223656
    2. '()' → logprob: -4.141955852508545
    3. '])
' → logprob: -7.641955852508545
    4. ')' → logprob: -7.891955852508545
    5. '())' → logprob: -10.641955375671387
    6. '()])
' → logprob: -11.266955375671387
    7. '])[' → logprob: -11.891955375671387
    8. ')])' → logprob: -12.391955375671387
    9. ' ])' → logprob: -12.391955375671387
    10. '[' → logprob: -12.516955375671387

Token 353: 'D' (ID: 35)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.069693684577942
    2. 'par' → logprob: -1.569693684577942
    3. 'print' → logprob: -2.8196935653686523
    4. 'for' → logprob: -2.9446935653686523
    5. 'res' → logprob: -3.0696935653686523
    6. 'dist' → logprob: -3.0696935653686523
    7. 'dp' → logprob: -3.0696935653686523
    8. 'ans' → logprob: -3.3196935653686523
    9. 'cl' → logprob: -3.8196935653686523
    10. 'max' → logprob: -3.9446935653686523

Token 354: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06093623489141464
    2. '=' → logprob: -2.935936212539673
    3. 'ist' → logprob: -5.310936450958252
    4. ' ' → logprob: -7.810936450958252
    5. 'is' → logprob: -8.435935974121094
    6. 'istance' → logprob: -8.810935974121094
    7. '=max' → logprob: -10.185935974121094
    8. 'IST' → logprob: -10.310935974121094
    9. 'iameter' → logprob: -10.310935974121094
    10. 'ef' → logprob: -10.685935974121094

Token 355: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.010764937847852707
    2. ' d' → logprob: -5.510765075683594
    3. 'dis' → logprob: -5.510765075683594
    4. 'max' → logprob: -6.135765075683594
    5. ' max' → logprob: -8.510765075683594
    6. ' dis' → logprob: -9.135765075683594
    7. 'len' → logprob: -9.885765075683594
    8. ' ' → logprob: -11.260765075683594
    9. '[]
' → logprob: -11.260765075683594
    10. '[d' → logprob: -11.385765075683594

Token 356: 'ists' (ID: 2549)
  Prédit: 'ists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ists' → logprob: -0.0021945175249129534
    2. 'ist' → logprob: -6.377194404602051
    3. '[' → logprob: -8.12719440460205
    4. '=' → logprob: -10.87719440460205
    5. 'i' → logprob: -11.00219440460205
    6. '   ' → logprob: -11.12719440460205
    7. '[i' → logprob: -11.25219440460205
    8. '(' → logprob: -11.37719440460205
    9. '{' → logprob: -11.37719440460205
    10. 'is' → logprob: -11.50219440460205

Token 357: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.012163706123828888
    2. 'en' → logprob: -4.8871636390686035
    3. '[:]' → logprob: -6.6371636390686035
    4. '<|end|>' → logprob: -6.6371636390686035
    5. 'def' → logprob: -7.6371636390686035
    6. '
' → logprob: -7.7621636390686035
    7. '[e' → logprob: -8.262164115905762
    8. '[end' → logprob: -8.262164115905762
    9. '.copy' → logprob: -9.012164115905762
    10. '[:' → logprob: -9.012164115905762

Token 358: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -5.438573680294212e-06
    2. ' en' → logprob: -12.500005722045898
    3. ']' → logprob: -13.750005722045898
    4. 'st' → logprob: -14.500005722045898
    5. 'e' → logprob: -16.2500057220459
    6. '(en' → logprob: -16.7500057220459
    7. '-en' → logprob: -17.8750057220459
    8. 'EN' → logprob: -18.6250057220459
    9. '_en' → logprob: -19.3750057220459
    10. '	en' → logprob: -20.3750057220459

Token 359: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008571469807066023
    2. ']
' → logprob: -7.750857353210449
    3. ' ]' → logprob: -7.875857353210449
    4. ')' → logprob: -10.37585735321045
    5. ']+' → logprob: -11.75085735321045
    6. '])' → logprob: -12.50085735321045
    7. ']

' → logprob: -14.37585735321045
    8. ')]' → logprob: -14.75085735321045
    9. '+' → logprob: -15.12585735321045
    10. '```' → logprob: -15.12585735321045

Token 360: 'path' (ID: 4189)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.578698456287384
    2. 'dp' → logprob: -1.8286983966827393
    3. 'p' → logprob: -1.9536983966827393
    4. 'cl' → logprob: -3.0786983966827393
    5. 'ans' → logprob: -4.078698635101318
    6. 'res' → logprob: -4.703698635101318
    7. 'q' → logprob: -5.078698635101318
    8. 'def' → logprob: -5.203698635101318
    9. 'answer' → logprob: -5.328698635101318
    10. 'dist' → logprob: -5.578698635101318

Token 361: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0069595081731677055
    2. '=' → logprob: -5.006959438323975
    3. ',' → logprob: -8.381959915161133
    4. '_' → logprob: -12.256959915161133
    5. '=[]' → logprob: -12.631959915161133
    6. ' ' → logprob: -13.131959915161133
    7. ' ,' → logprob: -13.381959915161133
    8. 's' → logprob: -13.756959915161133
    9. '_idx' → logprob: -13.881959915161133
    10. ' =[' → logprob: -15.131959915161133

Token 362: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.033702295273542404
    2. '[d' → logprob: -4.283702373504639
    3. '[]
' → logprob: -4.533702373504639
    4. '[p' → logprob: -5.658702373504639
    5. '[get' → logprob: -6.158702373504639
    6. '[]' → logprob: -6.658702373504639
    7. '[b' → logprob: -7.283702373504639
    8. '[e' → logprob: -8.40870189666748
    9. '[end' → logprob: -8.78370189666748
    10. 'par' → logprob: -9.03370189666748

Token 363: 'i' (ID: 72)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -1.580929347255733e-05
    2. ' en' → logprob: -11.375016212463379
    3. 'st' → logprob: -12.875016212463379
    4. 'end' → logprob: -14.000016212463379
    5. '0' → logprob: -15.000016212463379
    6. '(en' → logprob: -16.000015258789062
    7. ']' → logprob: -16.625015258789062
    8. 'e' → logprob: -16.750015258789062
    9. '	en' → logprob: -16.750015258789062
    10. 'D' → logprob: -17.000015258789062

Token 364: ' for' (ID: 395)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.0069055212661623955
    2. ' en' → logprob: -5.256905555725098
    3. '=en' → logprob: -6.756905555725098
    4. ']' → logprob: -8.381905555725098
    5. ']
' → logprob: -8.881905555725098
    6. ',en' → logprob: -9.506905555725098
    7. '(en' → logprob: -10.256905555725098
    8. '=' → logprob: -11.631905555725098
    9. 'e' → logprob: -12.006905555725098
    10. '
' → logprob: -12.131905555725098

Token 365: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0036167046055197716
    2. ' i' → logprob: -6.128616809844971
    3. 'range' → logprob: -6.753616809844971
    4. ' range' → logprob: -9.378616333007812
    5. 'in' → logprob: -9.628616333007812
    6. ' in' → logprob: -9.878616333007812
    7. ',' → logprob: -9.878616333007812
    8. ',i' → logprob: -12.503616333007812
    9. '(i' → logprob: -12.628616333007812
    10. '_,' → logprob: -14.003616333007812

Token 366: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39327558875083923
    2. 'in' → logprob: -1.2682756185531616
    3. ' in' → logprob: -3.143275499343872
    4. 'range' → logprob: -7.643275737762451
    5. ',d' → logprob: -9.393275260925293
    6. ' ,' → logprob: -10.393275260925293
    7. ',e' → logprob: -10.518275260925293
    8. ',in' → logprob: -11.143275260925293
    9. ',p' → logprob: -11.643275260925293
    10. 'd' → logprob: -12.018275260925293

Token 367: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003225606167688966
    2. ' range' → logprob: -6.128225803375244
    3. 'par' → logprob: -7.253225803375244
    4. 'd' → logprob: -9.253225326538086
    5. 'b' → logprob: -9.378225326538086
    6. 're' → logprob: -9.628225326538086
    7. 'get' → logprob: -10.003225326538086
    8. '(range' → logprob: -10.753225326538086
    9. ' par' → logprob: -12.503225326538086
    10. '
' → logprob: -12.753225326538086

Token 368: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.04333976283669472
    2. '(en' → logprob: -3.668339729309082
    3. '(st' → logprob: -4.168339729309082
    4. 'N' → logprob: -7.043339729309082
    5. '(len' → logprob: -8.418339729309082
    6. 'en' → logprob: -8.918339729309082
    7. '(' → logprob: -9.668339729309082
    8. '(D' → logprob: -10.043339729309082
    9. 'st' → logprob: -10.043339729309082
    10. '(n' → logprob: -11.168339729309082

Token 369: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023747002705931664
    2. ')]' → logprob: -6.502374649047852
    3. ' if' → logprob: -7.752374649047852
    4. 'if' → logprob: -8.502374649047852
    5. ' )' → logprob: -8.752374649047852
    6. ')]
' → logprob: -10.127374649047852
    7. ')
' → logprob: -10.752374649047852
    8. ']' → logprob: -11.752374649047852
    9. ')][' → logprob: -12.002374649047852
    10. '
' → logprob: -12.877374649047852

Token 370: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4751441180706024
    2. 'if' → logprob: -0.9751441478729248
    3. ']' → logprob: -6.850143909454346
    4. ' ' → logprob: -12.725144386291504
    5. '   ' → logprob: -13.475144386291504
    6. '
' → logprob: -13.975144386291504
    7. ']
' → logprob: -14.225144386291504
    8. ' ]' → logprob: -14.225144386291504
    9. '  ' → logprob: -15.600144386291504
    10. 'for' → logprob: -16.475143432617188

Token 371: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0413079634308815
    2. 'dist' → logprob: -3.9163079261779785
    3. 'max' → logprob: -4.1663079261779785
    4. ' d' → logprob: -6.2913079261779785
    5. '(d' → logprob: -6.9163079261779785
    6. ' max' → logprob: -7.5413079261779785
    7. 'dis' → logprob: -7.9163079261779785
    8. 'abs' → logprob: -8.041308403015137
    9. '(max' → logprob: -8.291308403015137
    10. ' dist' → logprob: -8.541308403015137

Token 372: 'ists' (ID: 2549)
  Prédit: 'ists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ists' → logprob: -0.0017758574103936553
    2. 'd' → logprob: -7.376775741577148
    3. 'ist' → logprob: -8.126775741577148
    4. 'is' → logprob: -8.376775741577148
    5. 'dist' → logprob: -8.751775741577148
    6. 'abs' → logprob: -9.376775741577148
    7. 'i' → logprob: -10.001775741577148
    8. 'max' → logprob: -10.001775741577148
    9. '[d' → logprob: -10.001775741577148
    10. 'e' → logprob: -10.501775741577148

Token 373: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.309382373117842e-05
    2. '[' → logprob: -10.625033378601074
    3. 'i' → logprob: -13.375033378601074
    4. ' [' → logprob: -13.625033378601074
    5. '[
' → logprob: -13.750033378601074
    6. ' +' → logprob: -13.750033378601074
    7. '
' → logprob: -13.875033378601074
    8. '+' → logprob: -14.500033378601074
    9. '+i' → logprob: -15.000033378601074
    10. '[d' → logprob: -15.125033378601074

Token 374: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004793941974639893
    2. ' +' → logprob: -5.379794120788574
    3. '+d' → logprob: -9.129794120788574
    4. '+i' → logprob: -10.004794120788574
    5. '+D' → logprob: -11.879794120788574
    6. '[i' → logprob: -12.504794120788574
    7. '==' → logprob: -12.629794120788574
    8. '+
' → logprob: -13.504794120788574
    9. '!=' → logprob: -14.004794120788574
    10. '[' → logprob: -14.129794120788574

Token 375: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006648990092799067
    2. ' +' → logprob: -7.500664710998535
    3. '+d' → logprob: -9.500664710998535
    4. '+D' → logprob: -10.625664710998535
    5. '==' → logprob: -12.500664710998535
    6. '+i' → logprob: -12.875664710998535
    7. '+
' → logprob: -12.875664710998535
    8. '>=' → logprob: -13.375664710998535
    9. '>' → logprob: -14.750664710998535
    10. '!=' → logprob: -14.875664710998535

Token 376: ' dis' (ID: 829)
  Prédit: 'dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dis' → logprob: -0.00043591417488642037
    2. ' dis' → logprob: -7.750435829162598
    3. 'dist' → logprob: -13.000435829162598
    4. 'd' → logprob: -13.375435829162598
    5. ' ' → logprob: -14.000435829162598
    6. '   ' → logprob: -15.375435829162598
    7. '	dis' → logprob: -15.750435829162598
    8. 'di' → logprob: -16.250436782836914
    9. 'Dis' → logprob: -17.250436782836914
    10. '  ' → logprob: -17.375436782836914

Token 377: 'te' (ID: 411)
  Prédit: 'te'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -4.3464544432936236e-05
    2. 'e' → logprob: -10.625043869018555
    3. 't' → logprob: -11.750043869018555
    4. 'i' → logprob: -12.500043869018555
    5. ' te' → logprob: -13.375043869018555
    6. '[i' → logprob: -13.500043869018555
    7. 'tee' → logprob: -13.875043869018555
    8. '[' → logprob: -14.125043869018555
    9. 'те' → logprob: -14.750043869018555
    10. 'tie' → logprob: -14.875043869018555

Token 378: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0008706060471013188
    2. '==' → logprob: -7.125870704650879
    3. ' ==' → logprob: -10.250870704650879
    4. '[' → logprob: -10.625870704650879
    5. ']==' → logprob: -12.250870704650879
    6. ' [' → logprob: -14.500870704650879
    7. ')==' → logprob: -14.875870704650879
    8. ']' → logprob: -15.125870704650879
    9. '```' → logprob: -15.625870704650879
    10. '(i' → logprob: -16.000869750976562

Token 379: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.011232078075408936
    2. ' ==' → logprob: -4.511231899261475
    3. ']==' → logprob: -9.261232376098633
    4. '=' → logprob: -9.511232376098633
    5. '==
' → logprob: -11.261232376098633
    6. ']' → logprob: -13.636232376098633
    7. '===' → logprob: -14.511232376098633
    8. ')==' → logprob: -14.636232376098633
    9. ')' → logprob: -16.761232376098633
    10. ' ' → logprob: -16.761232376098633

Token 380: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.011064093559980392
    2. ' ==' → logprob: -4.511064052581787
    3. '==
' → logprob: -11.386064529418945
    4. ']==' → logprob: -12.636064529418945
    5. '=' → logprob: -13.511064529418945
    6. ')==' → logprob: -15.511064529418945
    7. '===' → logprob: -16.636064529418945
    8. '()==' → logprob: -17.511064529418945
    9. '```' → logprob: -18.011064529418945
    10. ' ' → logprob: -18.386064529418945

Token 381: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.005234002135694027
    2. ' D' → logprob: -5.2552337646484375
    3. '	D' → logprob: -16.255233764648438
    4. ' ' → logprob: -16.255233764648438
    5. '   ' → logprob: -18.505233764648438
    6. '  ' → logprob: -19.255233764648438
    7. ' ' → logprob: -19.380233764648438
    8. '>D' → logprob: -19.755233764648438
    9. '_D' → logprob: -20.630233764648438
    10. '
' → logprob: -20.630233764648438

Token 382: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001757696009008214
    2. ' ]' → logprob: -9.250175476074219
    3. ' and' → logprob: -9.500175476074219
    4. ']
' → logprob: -13.000175476074219
    5. 'and' → logprob: -13.375175476074219
    6. ')]' → logprob: -14.625175476074219
    7. ')' → logprob: -15.625175476074219
    8. ']

' → logprob: -16.50017547607422
    9. '()]' → logprob: -16.50017547607422
    10. '])' → logprob: -17.25017547607422

Token 383: 'dist' (ID: 24126)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.32278966903686523
    2. 'p' → logprob: -1.4477896690368652
    3. 'path' → logprob: -3.8227896690368652
    4. ']' → logprob: -5.322789669036865
    5. 'for' → logprob: -5.822789669036865
    6. ',' → logprob: -6.072789669036865
    7. 'def' → logprob: -6.822789669036865
    8. ')' → logprob: -6.822789669036865
    9. '
' → logprob: -7.447789669036865
    10. 'd' → logprob: -7.447789669036865

Token 384: 'p' (ID: 79)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9376809000968933
    2. 'path' → logprob: -0.9376809000968933
    3. 's' → logprob: -1.937680959701538
    4. '_path' → logprob: -3.687680959701538
    5. 'from' → logprob: -4.062680721282959
    6. 'p' → logprob: -5.312680721282959
    7. 'on' → logprob: -5.812680721282959
    8. 'e' → logprob: -5.937680721282959
    9. ' =' → logprob: -5.937680721282959
    10. '=' → logprob: -5.937680721282959

Token 385: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021873662248253822
    2. '=' → logprob: -4.021873474121094
    3. 'h' → logprob: -5.771873474121094
    4. '=[' → logprob: -7.771873474121094
    5. 's' → logprob: -9.521873474121094
    6. 'o' → logprob: -10.271873474121094
    7. '=[]' → logprob: -11.146873474121094
    8. ',' → logprob: -11.896873474121094
    9. '_path' → logprob: -11.896873474121094
    10. '=[]
' → logprob: -12.021873474121094

Token 386: ' bfs' (ID: 147571)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.3541182577610016
    2. '[' → logprob: -1.4791182279586792
    3. 'b' → logprob: -3.6041183471679688
    4. '[-' → logprob: -3.8541183471679688
    5. '[d' → logprob: -4.479118347167969
    6. '{' → logprob: -5.729118347167969
    7. '[min' → logprob: -6.604118347167969
    8. ' [' → logprob: -6.729118347167969
    9. 'par' → logprob: -6.729118347167969
    10. 'dist' → logprob: -7.604118347167969

Token 387: '(path' (ID: 10993)
  Prédit: '(path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(path' → logprob: -4.9424725148128346e-05
    2. '([' → logprob: -10.375049591064453
    3. '(list' → logprob: -11.500049591064453
    4. '(set' → logprob: -12.375049591064453
    5. 'path' → logprob: -13.875049591064453
    6. '((' → logprob: -14.250049591064453
    7. '(tuple' → logprob: -14.375049591064453
    8. '(' → logprob: -14.625049591064453
    9. '(st' → logprob: -14.875049591064453
    10. ' (' → logprob: -15.500049591064453

Token 388: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0893869549036026
    2. '())' → logprob: -2.7143869400024414
    3. '()' → logprob: -3.9643869400024414
    4. '(' → logprob: -8.964386940002441
    5. '([' → logprob: -9.839386940002441
    6. ')
' → logprob: -10.214386940002441
    7. '(p' → logprob: -11.339386940002441
    8. '())
' → logprob: -11.464386940002441
    9. '([]' → logprob: -11.589386940002441
    10. ' )' → logprob: -12.089386940002441

Token 389: 'table' (ID: 4202)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0757337808609009
    2. 'p' → logprob: -1.8257337808609009
    3. 'par' → logprob: -1.8257337808609009
    4. ')' → logprob: -2.4507336616516113
    5. 'max' → logprob: -2.5757336616516113
    6. '<|end|>' → logprob: -3.0757336616516113
    7. '[' → logprob: -3.3257336616516113
    8. 'print' → logprob: -3.9507336616516113
    9. 'dp' → logprob: -4.325733661651611
    10. 'd' → logprob: -4.575733661651611

Token 390: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021591372787952423
    2. '=' → logprob: -3.8965914249420166
    3. '[' → logprob: -7.3965911865234375
    4. '=[]' → logprob: -9.271591186523438
    5. 's' → logprob: -10.021591186523438
    6. '=[' → logprob: -10.146591186523438
    7. '[]' → logprob: -10.271591186523438
    8. '=[[' → logprob: -10.896591186523438
    9. ']' → logprob: -11.021591186523438
    10. ' ' → logprob: -11.146591186523438

Token 391: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2177131474018097
    2. '[[' → logprob: -1.7177131175994873
    3. '{}' → logprob: -5.217713356018066
    4. '[-' → logprob: -5.717713356018066
    5. '[len' → logprob: -6.092713356018066
    6. '[]' → logprob: -6.217713356018066
    7. '{' → logprob: -6.967713356018066
    8. '[max' → logprob: -7.717713356018066
    9. '[min' → logprob: -7.842713356018066
    10. '[path' → logprob: -8.592713356018066

Token 392: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6541253924369812
    2. '0' → logprob: -1.029125452041626
    3. '[]' → logprob: -3.154125452041626
    4. '[-' → logprob: -3.654125452041626
    5. '-' → logprob: -4.779125213623047
    6. '[D' → logprob: -4.779125213623047
    7. '[N' → logprob: -4.779125213623047
    8. '{}' → logprob: -5.654125213623047
    9. 'False' → logprob: -5.779125213623047
    10. '(' → logprob: -6.029125213623047

Token 393: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05458704009652138
    2. ']*' → logprob: -3.3045871257781982
    3. ']*(' → logprob: -4.429586887359619
    4. '<<' → logprob: -6.554586887359619
    5. 'for' → logprob: -7.179586887359619
    6. ' for' → logprob: -7.554586887359619
    7. ']<<' → logprob: -7.679586887359619
    8. ']+' → logprob: -8.054587364196777
    9. '0' → logprob: -8.179587364196777
    10. 'e' → logprob: -8.929587364196777

Token 394: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.05380065366625786
    2. 'D' → logprob: -3.053800582885742
    3. 'len' → logprob: -5.303800582885742
    4. 'max' → logprob: -9.178800582885742
    5. '(N' → logprob: -9.678800582885742
    6. ' N' → logprob: -11.178800582885742
    7. '(D' → logprob: -11.428800582885742
    8. '(' → logprob: -11.553800582885742
    9. '(len' → logprob: -12.553800582885742
    10. '10' → logprob: -12.678800582885742

Token 395: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03442827984690666
    2. '+' → logprob: -3.409428358078003
    3. ')
' → logprob: -7.784428119659424
    4. ' )' → logprob: -8.909428596496582
    5. '0' → logprob: -10.034428596496582
    6. ']' → logprob: -10.284428596496582
    7. ' +' → logprob: -10.284428596496582
    8. '+)' → logprob: -10.784428596496582
    9. '))' → logprob: -11.034428596496582
    10. ')]' → logprob: -11.159428596496582

Token 396: '5' (ID: 20)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0035961484536528587
    2. '2' → logprob: -7.003596305847168
    3. '(N' → logprob: -7.253596305847168
    4. 'N' → logprob: -7.378596305847168
    5. 'len' → logprob: -7.378596305847168
    6. '(len' → logprob: -8.003596305847168
    7. '(' → logprob: -8.753596305847168
    8. 'D' → logprob: -9.253596305847168
    9. '(D' → logprob: -9.878596305847168
    10. '10' → logprob: -10.253596305847168

Token 397: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.028536492725834e-05
    2. ')
' → logprob: -9.625070571899414
    3. '0' → logprob: -13.500070571899414
    4. ')
' → logprob: -14.000070571899414
    5. ' )' → logprob: -14.375070571899414
    6. ')

' → logprob: -15.125070571899414
    7. '))' → logprob: -15.500070571899414
    8. '6' → logprob: -15.625070571899414
    9. ')`' → logprob: -16.000070571899414
    10. '7' → logprob: -16.250070571899414

Token 398: 'mini' (ID: 42752)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007445912342518568
    2. 'mod' → logprob: -7.625744819641113
    3. 'MOD' → logprob: -9.000744819641113
    4. ' for' → logprob: -9.500744819641113
    5. 'i' → logprob: -10.625744819641113
    6. 'm' → logprob: -11.500744819641113
    7. 'def' → logprob: -11.625744819641113
    8. 'import' → logprob: -12.500744819641113
    9. 'table' → logprob: -12.750744819641113
    10. 'M' → logprob: -12.875744819641113

Token 399: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.698405921459198
    2. 'mum' → logprob: -1.1984059810638428
    3. '=' → logprob: -1.8234059810638428
    4. 'm' → logprob: -3.6984059810638428
    5. '=[' → logprob: -5.073405742645264
    6. 'mal' → logprob: -5.823405742645264
    7. 'table' → logprob: -6.073405742645264
    8. '[' → logprob: -6.823405742645264
    9. '_table' → logprob: -7.948405742645264
    10. 'val' → logprob: -8.573406219482422

Token 400: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2791304290294647
    2. 'float' → logprob: -2.029130458831787
    3. '1' → logprob: -3.404130458831787
    4. 'N' → logprob: -3.654130458831787
    5. '0' → logprob: -3.904130458831787
    6. 'table' → logprob: -4.404130458831787
    7. '[' → logprob: -5.154130458831787
    8. 'int' → logprob: -5.404130458831787
    9. 'min' → logprob: -5.779130458831787
    10. '-' → logprob: -6.154130458831787

Token 401: '0' (ID: 15)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.7720603942871094
    2. 'float' → logprob: -1.5220603942871094
    3. '[' → logprob: -2.0220603942871094
    4. '1' → logprob: -2.6470603942871094
    5. 'N' → logprob: -3.1470603942871094
    6. '0' → logprob: -4.022060394287109
    7. 'D' → logprob: -4.147060394287109
    8. 'int' → logprob: -4.522060394287109
    9. '[N' → logprob: -5.022060394287109
    10. 'table' → logprob: -5.272060394287109

Token 402: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03910968825221062
    2. ' for' → logprob: -3.289109706878662
    3. '
' → logprob: -7.539109706878662
    4. 'i' → logprob: -9.289109230041504
    5. 'range' → logprob: -9.664109230041504
    6. ')' → logprob: -9.664109230041504
    7. '1' → logprob: -9.914109230041504
    8. 'while' → logprob: -9.914109230041504
    9. 'd' → logprob: -10.539109230041504
    10. 'import' → logprob: -11.289109230041504

Token 403: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.017685674130916595
    2. ' for' → logprob: -4.517685890197754
    3. 'i' → logprob: -5.142685890197754
    4. 'while' → logprob: -8.142685890197754
    5. 'r' → logprob: -9.267685890197754
    6. ' i' → logprob: -9.892685890197754
    7. 'd' → logprob: -10.017685890197754
    8. 'range' → logprob: -10.267685890197754
    9. 'import' → logprob: -10.392685890197754
    10. '1' → logprob: -10.517685890197754

Token 404: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31560859084129333
    2. ' i' → logprob: -1.3156086206436157
    3. 'd' → logprob: -7.065608501434326
    4. ' d' → logprob: -7.690608501434326
    5. 'x' → logprob: -8.065608978271484
    6. 'v' → logprob: -8.815608978271484
    7. 'k' → logprob: -9.190608978271484
    8. ' x' → logprob: -9.315608978271484
    9. ' v' → logprob: -9.565608978271484
    10. '_i' → logprob: -9.690608978271484

Token 405: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6428151726722717
    2. 'in' → logprob: -0.7678151726722717
    3. ',' → logprob: -4.642815113067627
    4. ' ' → logprob: -7.892815113067627
    5. ' ,' → logprob: -9.767815589904785
    6. ')' → logprob: -10.392815589904785
    7. '(' → logprob: -10.517815589904785
    8. ',in' → logprob: -11.892815589904785
    9. 'range' → logprob: -12.017815589904785
    10. '  ' → logprob: -12.267815589904785

Token 406: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03837607055902481
    2. ' range' → logprob: -3.2883760929107666
    3. 'path' → logprob: -8.038375854492188
    4. ' path' → logprob: -12.663375854492188
    5. 're' → logprob: -12.913375854492188
    6. '(range' → logprob: -13.788375854492188
    7. 'r' → logprob: -13.788375854492188
    8. ' ' → logprob: -14.038375854492188
    9. 'table' → logprob: -14.163375854492188
    10. 'len' → logprob: -14.663375854492188

Token 407: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15557458996772766
    2. '(D' → logprob: -2.4055745601654053
    3. '(N' → logprob: -3.4055745601654053
    4. '(len' → logprob: -4.155574798583984
    5. '(path' → logprob: -6.030574798583984
    6. '(min' → logprob: -6.280574798583984
    7. '(dist' → logprob: -8.405574798583984
    8. 'path' → logprob: -9.655574798583984
    9. 'N' → logprob: -9.780574798583984
    10. 'len' → logprob: -10.030574798583984

Token 408: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.690647542476654
    2. '):
' → logprob: -1.3156476020812988
    3. '):' → logprob: -1.8156476020812988
    4. '-' → logprob: -2.815647602081299
    5. ',' → logprob: -5.940647602081299
    6. ' +' → logprob: -6.315647602081299
    7. ' -' → logprob: -6.565647602081299
    8. '   ' → logprob: -7.565647602081299
    9. ')' → logprob: -7.565647602081299
    10. '1' → logprob: -8.06564712524414

Token 409: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029432112351059914
    2. 'if' → logprob: -3.9044320583343506
    3. ' if' → logprob: -4.77943229675293
    4. 'table' → logprob: -8.77943229675293
    5. 'for' → logprob: -9.02943229675293
    6. '	if' → logprob: -9.77943229675293
    7. ' ' → logprob: -10.40443229675293
    8. ' table' → logprob: -10.65443229675293
    9. ' for' → logprob: -10.90443229675293
    10. 'd' → logprob: -12.02943229675293

Token 410: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3977980315685272
    2. '   ' → logprob: -1.1477980613708496
    3. 'table' → logprob: -5.27279806137085
    4. 'mini' → logprob: -6.64779806137085
    5. ' if' → logprob: -6.77279806137085
    6. 'x' → logprob: -6.89779806137085
    7. 'val' → logprob: -7.64779806137085
    8. 'for' → logprob: -7.77279806137085
    9. 'dist' → logprob: -7.77279806137085
    10. 'v' → logprob: -8.147797584533691

Token 411: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.11883783340454102
    2. ' dist' → logprob: -2.618837833404541
    3. 'd' → logprob: -3.868837833404541
    4. 'path' → logprob: -4.618837833404541
    5. ' path' → logprob: -6.243837833404541
    6. 'D' → logprob: -6.493837833404541
    7. 'table' → logprob: -6.743837833404541
    8. ' d' → logprob: -7.118837833404541
    9. 'i' → logprob: -7.368837833404541
    10. '   ' → logprob: -7.743837833404541

Token 412: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.007498724386096001
    2. 's' → logprob: -5.257498741149902
    3. '[i' → logprob: -6.632498741149902
    4. 'i' → logprob: -7.632498741149902
    5. 'd' → logprob: -7.882498741149902
    6. '0' → logprob: -10.132498741149902
    7. '[p' → logprob: -11.257498741149902
    8. '
' → logprob: -12.007498741149902
    9. '```' → logprob: -12.632498741149902
    10. ' ' → logprob: -13.007498741149902

Token 413: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0011849920265376568
    2. '[' → logprob: -7.251184940338135
    3. '[path' → logprob: -8.001185417175293
    4. ' [' → logprob: -9.126185417175293
    5. 'i' → logprob: -11.501185417175293
    6. '[p' → logprob: -11.876185417175293
    7. '(i' → logprob: -13.501185417175293
    8. '[pos' → logprob: -13.626185417175293
    9. ']' → logprob: -13.751185417175293
    10. '[s' → logprob: -13.876185417175293

Token 414: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.19182558357715607
    2. ']>' → logprob: -1.9418256282806396
    3. '>' → logprob: -4.0668253898620605
    4. ']>=' → logprob: -4.9418253898620605
    5. ' >' → logprob: -6.1918253898620605
    6. ']<' → logprob: -6.5668253898620605
    7. ' ]' → logprob: -6.6918253898620605
    8. '<' → logprob: -7.0668253898620605
    9. '[' → logprob: -8.066825866699219
    10. ']==' → logprob: -8.191825866699219

Token 415: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1913985162973404
    2. ' >' → logprob: -2.1913986206054688
    3. '<' → logprob: -2.9413986206054688
    4. ' <' → logprob: -4.941398620605469
    5. '>=' → logprob: -7.066398620605469
    6. '<=' → logprob: -7.316398620605469
    7. ' ' → logprob: -8.066398620605469
    8. '==' → logprob: -8.441398620605469
    9. ' >=' → logprob: -9.066398620605469
    10. ' <=' → logprob: -9.191398620605469

Token 416: ' ' (ID: 220)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.31059277057647705
    2. '0' → logprob: -1.685592770576477
    3. 'mini' → logprob: -2.6855926513671875
    4. ' D' → logprob: -5.6855926513671875
    5. 'max' → logprob: -6.1855926513671875
    6. ' ' → logprob: -6.3105926513671875
    7. 'i' → logprob: -6.4355926513671875
    8. '1' → logprob: -6.8105926513671875
    9. 'min' → logprob: -7.0605926513671875
    10. 'dist' → logprob: -7.4355926513671875

Token 417: '0' (ID: 15)
  Prédit: 'mini'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mini' → logprob: -0.8948376774787903
    2. 'D' → logprob: -1.1448376178741455
    3. '0' → logprob: -1.3948376178741455
    4. 'i' → logprob: -5.269837856292725
    5. 'min' → logprob: -5.394837856292725
    6. 'max' → logprob: -5.519837856292725
    7. 'dist' → logprob: -5.769837856292725
    8. '1' → logprob: -6.269837856292725
    9. 'N' → logprob: -6.769837856292725
    10. ' ' → logprob: -7.019837856292725

Token 418: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.3081071376800537
    2. ':
' → logprob: -1.9331071376800537
    3. ':' → logprob: -2.5581071376800537
    4. ' and' → logprob: -3.8081071376800537
    5. '   ' → logprob: -4.058107376098633
    6. '       ' → logprob: -6.808107376098633
    7. 'or' → logprob: -6.808107376098633
    8. ' ' → logprob: -7.058107376098633
    9. 'and' → logprob: -8.433107376098633
    10. '  ' → logprob: -9.558107376098633

Token 419: '       ' (ID: 309)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9685863852500916
    2. '       ' → logprob: -1.2185864448547363
    3. '   ' → logprob: -1.4685864448547363
    4. ' or' → logprob: -2.9685864448547363
    5. ':' → logprob: -3.8435864448547363
    6. ' and' → logprob: -3.9685864448547363
    7. ' ' → logprob: -7.843586444854736
    8. ' :
' → logprob: -7.968586444854736
    9. 'and' → logprob: -8.093585968017578
    10. '
' → logprob: -8.343585968017578

Token 420: ' continue' (ID: 4901)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.5245891809463501
    2. 'mini' → logprob: -1.64958918094635
    3. '   ' → logprob: -2.1495890617370605
    4. ' table' → logprob: -3.2745890617370605
    5. 'continue' (adapté à ' continue') → logprob: -3.6495890617370605
    6. ' mini' → logprob: -3.7745890617370605
    7. ' continue' → logprob: -5.5245890617370605
    8. 'if' → logprob: -5.8995890617370605
    9. ' ' → logprob: -6.7745890617370605
    10. 'for' → logprob: -7.0245890617370605

Token 421: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06172597035765648
    2. '
' → logprob: -2.9367258548736572
    3. '    
' → logprob: -5.186726093292236
    4. ' for' → logprob: -8.061725616455078
    5. ' if' → logprob: -8.561725616455078
    6. ',' → logprob: -8.811725616455078
    7. 'for' → logprob: -9.436725616455078
    8. 'if' → logprob: -9.811725616455078
    9. '       ' → logprob: -9.811725616455078
    10. '        
' → logprob: -9.811725616455078

Token 422: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020611651707440615
    2. ' for' → logprob: -7.002061367034912
    3. ' if' → logprob: -7.627061367034912
    4. 'if' → logprob: -8.627060890197754
    5. 'for' → logprob: -8.877060890197754
    6. '
' → logprob: -9.377060890197754
    7. ' mini' → logprob: -9.377060890197754
    8. ' table' → logprob: -9.877060890197754
    9. 'mini' → logprob: -10.252060890197754
    10. '       ' → logprob: -10.877060890197754

Token 423: ' fi' (ID: 6134)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7135769128799438
    2. '   ' → logprob: -1.5885769128799438
    3. 'for' → logprob: -1.5885769128799438
    4. 'table' → logprob: -2.8385767936706543
    5. 'mini' → logprob: -3.3385767936706543
    6. ' if' → logprob: -6.213576793670654
    7. ' for' → logprob: -6.463576793670654
    8. 'val' → logprob: -7.713576793670654
    9. '```' → logprob: -7.713576793670654
    10. 'min' → logprob: -7.963576793670654

Token 424: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.642405092716217
    2. ' =' → logprob: -1.6424050331115723
    3. 'for' → logprob: -2.3924050331115723
    4. 'x' → logprob: -2.8924050331115723
    5. '=' → logprob: -3.3924050331115723
    6. 'or' → logprob: -3.5174050331115723
    7. 'rst' → logprob: -3.5174050331115723
    8. 'g' → logprob: -4.142405033111572
    9. '   ' → logprob: -4.892405033111572
    10. 'r' → logprob: -5.142405033111572

Token 425: ' d' (ID: 272)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.48833727836608887
    2. ' dist' → logprob: -1.2383372783660889
    3. 'min' → logprob: -3.488337278366089
    4. 'max' → logprob: -3.988337278366089
    5. 'table' → logprob: -4.613337516784668
    6. ' min' → logprob: -5.113337516784668
    7. 'i' → logprob: -5.238337516784668
    8. '1' → logprob: -5.488337516784668
    9. 'd' → logprob: -5.613337516784668
    10. ' max' → logprob: -5.863337516784668

Token 426: 'ists' (ID: 2549)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.07654713839292526
    2. 'st' → logprob: -2.701547145843506
    3. 'i' → logprob: -6.201547145843506
    4. 'xp' → logprob: -6.951547145843506
    5. '   ' → logprob: -7.451547145843506
    6. ' ' → logprob: -7.951547145843506
    7. '[i' → logprob: -8.201546669006348
    8. 'ists' → logprob: -8.201546669006348
    9. '=' → logprob: -8.326546669006348
    10. 'dist' → logprob: -8.451546669006348

Token 427: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.7146746763028204e-05
    2. '[' → logprob: -10.87503719329834
    3. 'i' → logprob: -11.50003719329834
    4. '   ' → logprob: -13.25003719329834
    5. ' [' → logprob: -13.87503719329834
    6. '(i' → logprob: -14.25003719329834
    7. '+i' → logprob: -14.75003719329834
    8. '[s' → logprob: -15.00003719329834
    9. 'index' → logprob: -15.25003719329834
    10. '```' → logprob: -15.37503719329834

Token 428: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03150619938969612
    2. ']-' → logprob: -4.531506061553955
    3. ']+' → logprob: -4.781506061553955
    4. '-' → logprob: -5.156506061553955
    5. ']
' → logprob: -5.406506061553955
    6. ' -' → logprob: -7.531506061553955
    7. '   ' → logprob: -7.906506061553955
    8. '+' → logprob: -8.406506538391113
    9. 'fi' → logprob: -9.656506538391113
    10. ')' → logprob: -9.781506538391113

Token 429: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3845163583755493
    2. 'if' → logprob: -1.6345163583755493
    3. 'mi' → logprob: -2.6345162391662598
    4. ' if' → logprob: -3.6345162391662598
    5. 'fi' → logprob: -4.88451623916626
    6. '+' → logprob: -5.13451623916626
    7. 'se' → logprob: -6.00951623916626
    8. '    
' → logprob: -6.50951623916626
    9. 'for' → logprob: -6.63451623916626
    10. 'ni' → logprob: -7.13451623916626

Token 430: ' if' (ID: 538)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.4371258318424225
    2. 'if' (adapté à ' if') → logprob: -1.9371258020401
    3. 'mi' → logprob: -2.8121259212493896
    4. 'la' → logprob: -3.0621259212493896
    5. 'fo' → logprob: -3.6871259212493896
    6. 'for' → logprob: -4.3121256828308105
    7. 'ti' → logprob: -4.5621256828308105
    8. 'li' → logprob: -4.8121256828308105
    9. 'di' → logprob: -4.8121256828308105
    10. 'fi' → logprob: -5.3121256828308105

Token 431: ' ' (ID: 220)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fi' → logprob: -0.2349751889705658
    2. 'dist' → logprob: -1.7349752187728882
    3. 'mini' → logprob: -3.9849750995635986
    4. ' dist' → logprob: -5.234975337982178
    5. '(fi' → logprob: -6.234975337982178
    6. 'd' → logprob: -6.484975337982178
    7. 'min' → logprob: -6.484975337982178
    8. ' fi' → logprob: -6.734975337982178
    9. 'dis' → logprob: -6.984975337982178
    10. '(dist' → logprob: -7.484975337982178

Token 432: '2' (ID: 17)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fi' → logprob: -0.35569989681243896
    2. 'dist' → logprob: -1.355699896812439
    3. 'mini' → logprob: -3.8557000160217285
    4. ' dist' → logprob: -4.8557000160217285
    5. '(fi' → logprob: -5.9807000160217285
    6. 'd' → logprob: -6.1057000160217285
    7. 'dis' → logprob: -6.4807000160217285
    8. ' fi' → logprob: -6.4807000160217285
    9. 'min' → logprob: -6.4807000160217285
    10. '(dist' → logprob: -7.1057000160217285

Token 433: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.14270563423633575
    2. ' *' → logprob: -2.0177056789398193
    3. '*(' → logprob: -11.017705917358398
    4. '**' → logprob: -12.767705917358398
    5. '*ft' → logprob: -12.892705917358398
    6. ' ' → logprob: -13.267705917358398
    7. ' <=' → logprob: -13.517705917358398
    8. '   ' → logprob: -13.517705917358398
    9. '*i' → logprob: -14.142705917358398
    10. '*f' → logprob: -14.642705917358398

Token 434: 'dist' (ID: 24126)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fi' → logprob: -0.0068329451605677605
    2. 'dist' → logprob: -5.881833076477051
    3. ' fi' → logprob: -6.006833076477051
    4. '(fi' → logprob: -6.881833076477051
    5. ' dist' → logprob: -7.881833076477051
    6. 'min' → logprob: -9.38183307647705
    7. '(dist' → logprob: -11.50683307647705
    8. '(' → logprob: -11.75683307647705
    9. ' min' → logprob: -11.75683307647705
    10. 'max' → logprob: -11.75683307647705

Token 435: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.4656579120783135e-05
    2. '[i' → logprob: -10.125044822692871
    3. 'pi' → logprob: -13.875044822692871
    4. '[' → logprob: -13.875044822692871
    5. '[p' → logprob: -14.250044822692871
    6. 'fi' → logprob: -14.500044822692871
    7. '```' → logprob: -15.125044822692871
    8. 'i' → logprob: -15.375044822692871
    9. '   ' → logprob: -15.375044822692871
    10. '(i' → logprob: -15.625044822692871

Token 436: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.064297824399546e-05
    2. '[' → logprob: -9.625070571899414
    3. ' [' → logprob: -13.125070571899414
    4. 'i' → logprob: -13.250070571899414
    5. ' ' → logprob: -15.500070571899414
    6. '```' → logprob: -15.625070571899414
    7. '[I' → logprob: -15.750070571899414
    8. '   ' → logprob: -16.125070571899414
    9. '>' → logprob: -17.500070571899414
    10. '(i' → logprob: -17.625070571899414

Token 437: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -1.2558327913284302
    2. ' >' → logprob: -1.6308327913284302
    3. ' <=' → logprob: -1.8808327913284302
    4. '<' → logprob: -2.2558326721191406
    5. '>' → logprob: -2.6308326721191406
    6. '-' → logprob: -2.6308326721191406
    7. '<=' → logprob: -2.7558326721191406
    8. ' -' → logprob: -4.380832672119141
    9. ' >=' → logprob: -4.505832672119141
    10. '+' → logprob: -4.630832672119141

Token 438: ' ==' (ID: 951)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6039024591445923
    2. ' <' → logprob: -0.9789024591445923
    3. '>' → logprob: -3.9789023399353027
    4. ' <=' → logprob: -4.103902339935303
    5. ' >' → logprob: -4.228902339935303
    6. '<=' → logprob: -4.228902339935303
    7. '>=' → logprob: -5.228902339935303
    8. ' >=' → logprob: -5.728902339935303
    9. ' ' → logprob: -6.103902339935303
    10. '+' → logprob: -7.603902339935303

Token 439: ' fi' (ID: 6134)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.027183204889297485
    2. ' D' → logprob: -4.5271830558776855
    3. 'd' → logprob: -5.0271830558776855
    4. 'dist' → logprob: -5.1521830558776855
    5. 'fi' → logprob: -6.4021830558776855
    6. ' dist' → logprob: -6.7771830558776855
    7. ' ' → logprob: -8.277183532714844
    8. 'dis' → logprob: -8.902183532714844
    9. ' d' → logprob: -9.027183532714844
    10. '2' → logprob: -9.152183532714844

Token 440: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.008611149154603481
    2. ' <' → logprob: -6.00861120223999
    3. 'and' → logprob: -6.13361120223999
    4. ' ' → logprob: -6.63361120223999
    5. '   ' → logprob: -6.75861120223999
    6. '    ' → logprob: -7.88361120223999
    7. ' -' → logprob: -8.383610725402832
    8. '+' → logprob: -8.508610725402832
    9. ' +' → logprob: -8.883610725402832
    10. '-' → logprob: -9.008610725402832

Token 441: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005954395048320293
    2. ' and' → logprob: -5.755954265594482
    3. '   ' → logprob: -7.005954265594482
    4. ' if' → logprob: -7.380954265594482
    5. ':' → logprob: -7.630954265594482
    6. ':
' → logprob: -8.38095474243164
    7. '           ' → logprob: -9.00595474243164
    8. 'if' → logprob: -9.00595474243164
    9. 'and' → logprob: -9.63095474243164
    10. ',' → logprob: -9.75595474243164

Token 442: ' mini' (ID: 15065)
  Prédit: 'mini'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mini' (adapté à ' mini') → logprob: -0.25897884368896484
    2. 'if' → logprob: -2.508978843688965
    3. 'table' → logprob: -3.258978843688965
    4. '       ' → logprob: -3.258978843688965
    5. '   ' → logprob: -3.383978843688965
    6. 'fi' → logprob: -4.258978843688965
    7. ' mini' → logprob: -4.383978843688965
    8. ' if' → logprob: -5.633978843688965
    9. '           ' → logprob: -5.883978843688965
    10. ' table' → logprob: -6.633978843688965

Token 443: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1607440710067749
    2. '=' → logprob: -1.910744071006775
    3. '+=' → logprob: -8.035743713378906
    4. ' +=' → logprob: -8.910743713378906
    5. '=max' → logprob: -10.285743713378906
    6. '=min' → logprob: -11.410743713378906
    7. '   ' → logprob: -12.535743713378906
    8. 'max' → logprob: -13.160743713378906
    9. ' ' → logprob: -13.285743713378906
    10. 's' → logprob: -13.660743713378906

Token 444: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.17491202056407928
    2. ' max' → logprob: -2.1749119758605957
    3. 'fi' → logprob: -3.1749119758605957
    4. 'i' → logprob: -5.924911975860596
    5. ' fi' → logprob: -6.799911975860596
    6. 'min' → logprob: -7.549911975860596
    7. ' i' → logprob: -7.924911975860596
    8. 'dist' → logprob: -8.924912452697754
    9. ' dist' → logprob: -9.549912452697754
    10. '2' → logprob: -10.174912452697754

Token 445: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.00028040475444868207
    2. 'mini' → logprob: -8.625280380249023
    3. '(' → logprob: -9.375280380249023
    4. '(i' → logprob: -12.125280380249023
    5. '(fi' → logprob: -12.375280380249023
    6. '(
' → logprob: -13.125280380249023
    7. '(mi' → logprob: -13.625280380249023
    8. 'min' → logprob: -13.875280380249023
    9. '(m' → logprob: -14.500280380249023
    10. '
' → logprob: -14.875280380249023

Token 446: 'i' (ID: 72)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.021359765902161598
    2. 'mini' → logprob: -3.89635968208313
    3. ')' → logprob: -8.14635944366455
    4. 'min' → logprob: -8.89635944366455
    5. '(' → logprob: -9.14635944366455
    6. '(m' → logprob: -9.52135944366455
    7. '(mi' → logprob: -10.02135944366455
    8. '```' → logprob: -10.89635944366455
    9. ' mini' → logprob: -11.02135944366455
    10. ' ' → logprob: -11.45885944366455

Token 447: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008041187189519405
    2. '(fi' → logprob: -5.7580413818359375
    3. '(min' → logprob: -6.0080413818359375
    4. ' ,' → logprob: -6.5080413818359375
    5. '(' → logprob: -7.3830413818359375
    6. ',min' → logprob: -9.508041381835938
    7. ',max' → logprob: -10.383041381835938
    8. ',i' → logprob: -10.758041381835938
    9. ' ' → logprob: -11.008041381835938
    10. ' (' → logprob: -11.133041381835938

Token 448: ' fi' (ID: 6134)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fi' → logprob: -0.14325399696826935
    2. 'dist' → logprob: -2.518254041671753
    3. 'd' → logprob: -4.268253803253174
    4. 'D' → logprob: -4.268253803253174
    5. ' dist' → logprob: -4.768253803253174
    6. '2' → logprob: -5.268253803253174
    7. ' fi' → logprob: -5.643253803253174
    8. 'table' → logprob: -6.393253803253174
    9. 'i' → logprob: -6.393253803253174
    10. '(fi' → logprob: -7.018253803253174

Token 449: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6308237910270691
    2. '+' → logprob: -0.8808237910270691
    3. ' +' → logprob: -3.255823850631714
    4. ' )' → logprob: -4.380823612213135
    5. ')
' → logprob: -6.380823612213135
    6. '   ' → logprob: -8.380824089050293
    7. ')+' → logprob: -9.130824089050293
    8. ' )
' → logprob: -9.130824089050293
    9. '-' → logprob: -9.630824089050293
    10. '+)' → logprob: -10.005824089050293

Token 450: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009992250707000494
    2. '2' → logprob: -7.750999450683594
    3. ' ' → logprob: -7.750999450683594
    4. 'dist' → logprob: -9.500999450683594
    5. 'D' → logprob: -10.500999450683594
    6. 'dis' → logprob: -12.125999450683594
    7. 'table' → logprob: -12.250999450683594
    8. ' dist' → logprob: -12.375999450683594
    9. 'd' → logprob: -12.625999450683594
    10. ' D' → logprob: -12.875999450683594

Token 451: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012151175178587437
    2. ')
' → logprob: -6.751214981079102
    3. '   ' → logprob: -10.876214981079102
    4. ' )' → logprob: -11.126214981079102
    5. '+' → logprob: -12.126214981079102
    6. '       ' → logprob: -13.126214981079102
    7. '<|end|>' → logprob: -14.001214981079102
    8. ')#' → logprob: -14.751214981079102
    9. '))' → logprob: -15.251214981079102
    10. ')+' → logprob: -15.626214981079102

Token 452: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9007329940795898
    2. '<|end|>' → logprob: -0.9007329940795898
    3. ' ' → logprob: -2.65073299407959
    4. 'elif' → logprob: -3.15073299407959
    5. ']' → logprob: -3.65073299407959
    6. '.' → logprob: -4.90073299407959
    7. '[' → logprob: -5.02573299407959
    8. '_' → logprob: -5.15073299407959
    9. ' elif' → logprob: -5.27573299407959
    10. '```' → logprob: -5.65073299407959

Token 453: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.6152712106704712
    2. '<|end|>' → logprob: -1.6152712106704712
    3. ' elif' → logprob: -2.2402710914611816
    4. 'else' (adapté à ' else') → logprob: -2.9902710914611816
    5. ' else' → logprob: -3.3652710914611816
    6. ' ' → logprob: -3.4902710914611816
    7. ')' → logprob: -4.365271091461182
    8. '.' → logprob: -4.740271091461182
    9. '   ' → logprob: -5.240271091461182
    10. ']' → logprob: -6.365271091461182

Token 454: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17680872976779938
    2. ':' → logprob: -2.5518088340759277
    3. 'if' → logprob: -3.1768088340759277
    4. ' if' → logprob: -3.1768088340759277
    5. ':
' → logprob: -7.801808834075928
    6. '   ' → logprob: -9.17680835723877
    7. ' :' → logprob: -10.30180835723877
    8. ',' → logprob: -10.67680835723877
    9. '      ' → logprob: -10.80180835723877
    10. '```' → logprob: -10.80180835723877

Token 455: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02423233352601528
    2. 'mini' → logprob: -3.7742323875427246
    3. 'if' → logprob: -7.149232387542725
    4. ' if' → logprob: -9.149231910705566
    5. ' mini' → logprob: -10.149231910705566
    6. '```' → logprob: -10.774231910705566
    7. '   ' → logprob: -11.274231910705566
    8. '           ' → logprob: -11.774231910705566
    9. 'min' → logprob: -12.774231910705566
    10. 'mi' → logprob: -13.149231910705566

Token 456: ' mini' (ID: 15065)
  Prédit: 'mini'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mini' (adapté à ' mini') → logprob: -0.004511769395321608
    2. ' mini' → logprob: -6.129511833190918
    3. '       ' → logprob: -6.379511833190918
    4. '           ' → logprob: -7.754511833190918
    5. '   ' → logprob: -9.379511833190918
    6. 'if' → logprob: -9.879511833190918
    7. 'min' → logprob: -11.129511833190918
    8. 'mi' → logprob: -11.379511833190918
    9. '  ' → logprob: -12.004511833190918
    10. ' ' → logprob: -12.254511833190918

Token 457: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014172375202179
    2. '=' → logprob: -1.7014172077178955
    3. ' +=' → logprob: -14.076416969299316
    4. '   ' → logprob: -14.076416969299316
    5. '=max' → logprob: -14.076416969299316
    6. '+=' → logprob: -14.201416969299316
    7. 'max' → logprob: -15.201416969299316
    8. ',' → logprob: -15.326416969299316
    9. ' ' → logprob: -15.576416969299316
    10. '>' → logprob: -16.201417922973633

Token 458: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.38687241077423096
    2. ' max' → logprob: -1.136872410774231
    3. ' ' → logprob: -14.886872291564941
    4. 'min' → logprob: -14.886872291564941
    5. '2' → logprob: -15.511872291564941
    6. '	max' → logprob: -15.636872291564941
    7. ' min' → logprob: -16.511873245239258
    8. '(max' → logprob: -16.511873245239258
    9. ' maxi' → logprob: -16.636873245239258
    10. '0' → logprob: -17.511873245239258

Token 459: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -3.7697225252486533e-06
    2. '(' → logprob: -12.750003814697266
    3. '(max' → logprob: -14.625003814697266
    4. 'mini' → logprob: -15.625003814697266
    5. '(
' → logprob: -16.625003814697266
    6. '```' → logprob: -16.750003814697266
    7. ' (' → logprob: -17.000003814697266
    8. '(mi' → logprob: -17.625003814697266
    9. 'min' → logprob: -18.250003814697266
    10. '
' → logprob: -18.250003814697266

Token 460: 'i' (ID: 72)
  Prédit: 'mini'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mini' → logprob: -0.001919002621434629
    2. 'mi' → logprob: -7.001918792724609
    3. '(min' → logprob: -7.376918792724609
    4. 'i' → logprob: -8.62691879272461
    5. ' mini' → logprob: -8.75191879272461
    6. 'min' → logprob: -10.50191879272461
    7. ',' → logprob: -12.37691879272461
    8. '(mi' → logprob: -12.75191879272461
    9. ')' → logprob: -13.50191879272461
    10. 'a' → logprob: -13.87691879272461

Token 461: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034535606391727924
    2. ' ,' → logprob: -8.625345230102539
    3. ',min' → logprob: -8.875345230102539
    4. ',max' → logprob: -11.250345230102539
    5. '(min' → logprob: -12.250345230102539
    6. ',i' → logprob: -13.250345230102539
    7. ',
' → logprob: -13.500345230102539
    8. ',m' → logprob: -13.500345230102539
    9. '(' → logprob: -14.000345230102539
    10. '(fi' → logprob: -14.500345230102539

Token 462: ' fi' (ID: 6134)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fi' → logprob: -0.05980673432350159
    2. ' fi' → logprob: -3.4348068237304688
    3. '2' → logprob: -4.184806823730469
    4. ' dist' → logprob: -5.809806823730469
    5. ' ' → logprob: -6.059806823730469
    6. 'dist' → logprob: -6.559806823730469
    7. '(fi' → logprob: -6.809806823730469
    8. '(' → logprob: -7.184806823730469
    9. 'max' → logprob: -7.559806823730469
    10. ' (' → logprob: -7.559806823730469

Token 463: ')
' (ID: 446)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5116227269172668
    2. ')' → logprob: -1.136622667312622
    3. ' -' → logprob: -2.761622667312622
    4. ',' → logprob: -4.636622905731201
    5. ' )' → logprob: -5.636622905731201
    6. '   ' → logprob: -6.761622905731201
    7. '+' → logprob: -7.011622905731201
    8. '-)' → logprob: -7.886622905731201
    9. ')
' → logprob: -8.261622428894043
    10. ' ,' → logprob: -8.886622428894043

Token 464: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5903992652893066
    2. ')' → logprob: -1.5903992652893066
    3. '<|end|>' → logprob: -1.7153992652893066
    4. 'for' → logprob: -3.7153992652893066
    5. '#' → logprob: -4.465399265289307
    6. 'if' → logprob: -4.715399265289307
    7. 'max' → logprob: -5.715399265289307
    8. ']' → logprob: -5.840399265289307
    9. '```' → logprob: -5.840399265289307
    10. ' for' → logprob: -6.090399265289307

Token 465: ' fi' (ID: 6134)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004334102850407362
    2. 'if' → logprob: -6.379333972930908
    3. 'for' → logprob: -6.379333972930908
    4. ')' → logprob: -7.754333972930908
    5. '<|end|>' → logprob: -8.629334449768066
    6. ' print' → logprob: -9.754334449768066
    7. ']' → logprob: -10.129334449768066
    8. ' for' → logprob: -10.254334449768066
    9. '```' → logprob: -10.379334449768066
    10. '#' → logprob: -10.504334449768066

Token 466: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5827504396438599
    2. '=' → logprob: -1.4577504396438599
    3. '+=' → logprob: -2.4577503204345703
    4. ' =' → logprob: -2.7077503204345703
    5. '+' → logprob: -3.0827503204345703
    6. ' ' → logprob: -5.58275032043457
    7. ' +' → logprob: -6.45775032043457
    8. '<|end|>' → logprob: -6.83275032043457
    9. ' -=' → logprob: -7.08275032043457
    10. '[' → logprob: -7.45775032043457

Token 467: ' dis' (ID: 829)
  Prédit: 'dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dis' → logprob: -0.050839487463235855
    2. ' dis' → logprob: -3.925839424133301
    3. 'd' → logprob: -4.175839424133301
    4. 'dist' → logprob: -4.300839424133301
    5. ' dist' → logprob: -7.425839424133301
    6. 'max' → logprob: -9.6758394241333
    7. ' d' → logprob: -9.9258394241333
    8. '2' → logprob: -10.1133394241333
    9. ' ' → logprob: -10.1758394241333
    10. 'D' → logprob: -10.3008394241333

Token 468: 'te' (ID: 411)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.49054569005966187
    2. 'te' → logprob: -0.9905456900596619
    3. 'ts' → logprob: -4.365545749664307
    4. '[i' → logprob: -5.865545749664307
    5. 'st' → logprob: -7.615545749664307
    6. 's' → logprob: -8.990545272827148
    7. 'i' → logprob: -10.490545272827148
    8. 'tei' → logprob: -10.740545272827148
    9. 'sts' → logprob: -10.865545272827148
    10. 'e' → logprob: -11.115545272827148

Token 469: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.5
    3. 'i' → logprob: -17.0
    4. ' [' → logprob: -17.5
    5. '[I' → logprob: -17.75
    6. '\[' → logprob: -18.0
    7. '   ' → logprob: -18.125
    8. '```' → logprob: -19.125
    9. '(i' → logprob: -21.0
    10. '[
' → logprob: -21.125

Token 470: ']
' (ID: 1592)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28289392590522766
    2. ')
' → logprob: -1.6578938961029053
    3. ')' → logprob: -2.9078938961029053
    4. '
' → logprob: -6.782894134521484
    5. 'if' → logprob: -10.907894134521484
    6. 'fi' → logprob: -11.157894134521484
    7. ' )
' → logprob: -11.157894134521484
    8. '  ' → logprob: -11.282894134521484
    9. ']
' → logprob: -11.532894134521484
    10. '       ' → logprob: -11.657894134521484

Token 471: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028856907039880753
    2. ' if' → logprob: -3.6538569927215576
    3. 'if' → logprob: -6.6538567543029785
    4. '<|end|>' → logprob: -8.028857231140137
    5. '```' → logprob: -8.153857231140137
    6. ')' → logprob: -8.278857231140137
    7. '
' → logprob: -8.403857231140137
    8. ' for' → logprob: -9.653857231140137
    9. ',' → logprob: -10.153857231140137
    10. 'for' → logprob: -11.153857231140137

Token 472: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.009916398674249649
    2. '   ' → logprob: -4.634916305541992
    3. ' if' → logprob: -8.884916305541992
    4. 'fi' → logprob: -11.259916305541992
    5. '```' → logprob: -12.259916305541992
    6. 'mini' → logprob: -13.884916305541992
    7. 'for' → logprob: -14.259916305541992
    8. '  ' → logprob: -14.509916305541992
    9. ' ' → logprob: -14.634916305541992
    10. 'elif' → logprob: -15.134916305541992

Token 473: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.42875126004219055
    2. ' ' → logprob: -1.0537512302398682
    3. '   ' → logprob: -10.178750991821289
    4. ' dist' → logprob: -12.803750991821289
    5. '(' → logprob: -13.053750991821289
    6. 'dist' → logprob: -13.178750991821289
    7. '  ' → logprob: -13.928750991821289
    8. '    ' → logprob: -13.991250991821289
    9. ' (' → logprob: -14.678750991821289
    10. '1' → logprob: -14.741250991821289

Token 474: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009146820520982146
    2. ' ' → logprob: -7.000914573669434
    3. 'dist' → logprob: -13.625914573669434
    4. '   ' → logprob: -13.875914573669434
    5. '(' → logprob: -15.250914573669434
    6. '  ' → logprob: -15.625914573669434
    7. ' dist' → logprob: -16.12591552734375
    8. 'fi' → logprob: -16.25091552734375
    9. '    ' → logprob: -17.06341552734375
    10. '```' → logprob: -17.12591552734375

Token 475: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -5.512236498361744e-07
    2. ' *' → logprob: -14.625000953674316
    3. '**' → logprob: -18.625
    4. '*d' → logprob: -20.25
    5. '*(' → logprob: -20.875
    6. '*object' → logprob: -21.0
    7. '*[' → logprob: -21.25
    8. '```' → logprob: -21.375
    9. '*out' → logprob: -21.375
    10. '   ' → logprob: -21.625

Token 476: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -3.531315314830863e-06
    2. ' dist' → logprob: -12.750003814697266
    3. '(dist' → logprob: -14.750003814697266
    4. 'dis' → logprob: -15.375003814697266
    5. '	dist' → logprob: -17.500003814697266
    6. '   ' → logprob: -18.125003814697266
    7. '```' → logprob: -18.500003814697266
    8. '.dist' → logprob: -19.375003814697266
    9. 'd' → logprob: -19.750003814697266
    10. '_dist' → logprob: -19.875003814697266

Token 477: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.4617256056226324e-05
    2. 'pi' → logprob: -11.875014305114746
    3. '[i' → logprob: -11.875014305114746
    4. 'п' → logprob: -15.875014305114746
    5. '_p' → logprob: -16.250015258789062
    6. 'dist' → logprob: -16.250015258789062
    7. '[' → logprob: -16.375015258789062
    8. 'pl' → logprob: -17.250015258789062
    9. 'ip' → logprob: -17.500015258789062
    10. 'i' → logprob: -17.500015258789062

Token 478: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -14.000001907348633
    3. 'i' → logprob: -14.125001907348633
    4. ' [' → logprob: -15.000001907348633
    5. '   ' → logprob: -15.750001907348633
    6. '```' → logprob: -16.375001907348633
    7. '(i' → logprob: -17.625001907348633
    8. '[
' → logprob: -18.000001907348633
    9. '[I' → logprob: -18.250001907348633
    10. '{i' → logprob: -19.125001907348633

Token 479: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.9483107924461365
    2. '<' → logprob: -1.1983108520507812
    3. ' ==' → logprob: -2.1983108520507812
    4. ' >' → logprob: -2.4483108520507812
    5. '==' → logprob: -2.9483108520507812
    6. '>' → logprob: -3.4483108520507812
    7. ' !=' → logprob: -4.198310852050781
    8. '!=' → logprob: -5.323310852050781
    9. ' <=' → logprob: -5.448310852050781
    10. '<=' → logprob: -6.198310852050781

Token 480: ' ==' (ID: 951)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.12420976161956787
    2. '>' → logprob: -2.9992098808288574
    3. ' <' → logprob: -3.1242098808288574
    4. '!=' → logprob: -4.749209880828857
    5. ' >' → logprob: -4.874209880828857
    6. '==' → logprob: -5.374209880828857
    7. ' !=' → logprob: -6.874209880828857
    8. '<=' → logprob: -7.999209880828857
    9. ' ==' → logprob: -8.1242094039917
    10. '+' → logprob: -8.7492094039917

Token 481: ' fi' (ID: 6134)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fi' → logprob: -0.0024904031306505203
    2. ' fi' → logprob: -6.002490520477295
    3. '(fi' → logprob: -11.377490043640137
    4. '	fi' → logprob: -13.752490043640137
    5. '   ' → logprob: -13.877490043640137
    6. ' ' → logprob: -14.752490043640137
    7. ' (' → logprob: -15.627490043640137
    8. 'fo' → logprob: -16.002490997314453
    9. '(' → logprob: -16.127490997314453
    10. '
' → logprob: -16.502490997314453

Token 482: ':
' (ID: 734)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4454604983329773
    2. ':' → logprob: -1.320460557937622
    3. ':
' → logprob: -3.570460557937622
    4. ' ==' → logprob: -3.945460557937622
    5. '       ' → logprob: -4.195460319519043
    6. '>' → logprob: -4.695460319519043
    7. '!=' → logprob: -4.695460319519043
    8. '   ' → logprob: -5.070460319519043
    9. '<' → logprob: -6.195460319519043
    10. '>=' → logprob: -6.445460319519043

Token 483: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004959598300047219
    2. '   ' → logprob: -7.750495910644531
    3. 'mini' → logprob: -10.000495910644531
    4. ' mini' → logprob: -12.000495910644531
    5. ':' → logprob: -12.500495910644531
    6. '      ' → logprob: -12.625495910644531
    7. '           ' → logprob: -13.000495910644531
    8. 'max' → logprob: -14.000495910644531
    9. '     ' → logprob: -14.250495910644531
    10. '```' → logprob: -14.250495910644531

Token 484: ' mini' (ID: 15065)
  Prédit: 'mini'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mini' (adapté à ' mini') → logprob: -0.0005311102140694857
    2. '       ' → logprob: -7.875531196594238
    3. '   ' → logprob: -9.375531196594238
    4. ' mini' → logprob: -9.750531196594238
    5. 'min' → logprob: -12.375531196594238
    6. '           ' → logprob: -13.250531196594238
    7. 'minimal' → logprob: -14.250531196594238
    8. 'mi' → logprob: -14.625531196594238
    9. '      ' → logprob: -15.375531196594238
    10. '  ' → logprob: -15.750531196594238

Token 485: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020763427019119
    2. '=' → logprob: -2.350207567214966
    3. '   ' → logprob: -14.350207328796387
    4. '=max' → logprob: -15.350207328796387
    5. ' +=' → logprob: -15.975207328796387
    6. ' ' → logprob: -16.225208282470703
    7. '+=' → logprob: -16.975208282470703
    8. 'max' → logprob: -17.850208282470703
    9. '    ' → logprob: -18.475208282470703
    10. '  ' → logprob: -18.600208282470703

Token 486: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.005233882926404476
    2. ' max' → logprob: -5.2552337646484375
    3. '(max' → logprob: -16.755233764648438
    4. ' ' → logprob: -18.130233764648438
    5. '   ' → logprob: -18.130233764648438
    6. 'min' → logprob: -19.005233764648438
    7. '
' → logprob: -19.255233764648438
    8. '	max' → logprob: -19.505233764648438
    9. '[max' → logprob: -19.505233764648438
    10. '>' → logprob: -19.630233764648438

Token 487: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -6.749814019713085e-06
    2. '(max' → logprob: -12.125006675720215
    3. 'mini' → logprob: -14.125006675720215
    4. '(' → logprob: -14.750006675720215
    5. '(
' → logprob: -16.12500762939453
    6. '```' → logprob: -17.25000762939453
    7. 'min' → logprob: -17.87500762939453
    8. ' (' → logprob: -18.12500762939453
    9. '(mi' → logprob: -18.12500762939453
    10. '
' → logprob: -19.25000762939453

Token 488: 'i' (ID: 72)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.2256072759628296
    2. 'mini' → logprob: -1.6006072759628296
    3. ' mini' → logprob: -9.600606918334961
    4. 'min' → logprob: -9.850606918334961
    5. '(' → logprob: -10.975606918334961
    6. '```' → logprob: -11.100606918334961
    7. ')' → logprob: -11.475606918334961
    8. '(mi' → logprob: -11.475606918334961
    9. '(max' → logprob: -12.600606918334961
    10. 'mi' → logprob: -12.850606918334961

Token 489: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012976066500414163
    2. '(min' → logprob: -9.625129699707031
    3. '(' → logprob: -10.375129699707031
    4. ' ,' → logprob: -10.625129699707031
    5. ',min' → logprob: -12.625129699707031
    6. '+' → logprob: -13.000129699707031
    7. ',
' → logprob: -14.375129699707031
    8. '+,' → logprob: -14.625129699707031
    9. '
' → logprob: -14.750129699707031
    10. '(mi' → logprob: -15.375129699707031

Token 490: ' fi' (ID: 6134)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fi' → logprob: -0.005947286728769541
    2. ' fi' → logprob: -5.130947113037109
    3. '(fi' → logprob: -11.13094711303711
    4. '	fi' → logprob: -12.88094711303711
    5. 'f' → logprob: -14.75594711303711
    6. '   ' → logprob: -15.50594711303711
    7. ' ' → logprob: -15.63094711303711
    8. '2' → logprob: -15.75594711303711
    9. 'fo' → logprob: -16.38094711303711
    10. '1' → logprob: -16.50594711303711

Token 491: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0031786637846380472
    2. ' -' → logprob: -5.753178596496582
    3. ')' → logprob: -14.003178596496582
    4. ')-' → logprob: -16.5031795501709
    5. ' ' → logprob: -17.3781795501709
    6. '   ' → logprob: -17.3781795501709
    7. ' )' → logprob: -18.2531795501709
    8. '()-' → logprob: -18.2531795501709
    9. '
' → logprob: -18.3781795501709
    10. '-
' → logprob: -19.5031795501709

Token 492: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.304016228066757e-05
    2. '-' → logprob: -9.750082969665527
    3. ' ' → logprob: -10.750082969665527
    4. '0' → logprob: -13.875082969665527
    5. 'mini' → logprob: -14.125082969665527
    6. '   ' → logprob: -14.250082969665527
    7. 'min' → logprob: -16.125083923339844
    8. ' -' → logprob: -16.250083923339844
    9. 'fi' → logprob: -16.250083923339844
    10. 'i' → logprob: -16.375083923339844

Token 493: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014343667775392532
    2. ')
' → logprob: -4.264343738555908
    3. '   ' → logprob: -8.63934326171875
    4. ' )' → logprob: -13.13934326171875
    5. ')
' → logprob: -15.13934326171875
    6. ')\
' → logprob: -15.76434326171875
    7. ')

' → logprob: -16.26434326171875
    8. ' )
' → logprob: -16.38934326171875
    9. '  ' → logprob: -16.38934326171875
    10. ')`' → logprob: -16.51434326171875

Token 494: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.7888184528565034e-05
    2. 'else' → logprob: -11.0000581741333
    3. 'mini' → logprob: -11.2500581741333
    4. 'for' → logprob: -12.5000581741333
    5. '       ' → logprob: -12.6250581741333
    6. 'print' → logprob: -13.0000581741333
    7. 'min' → logprob: -13.0000581741333
    8. '  ' → logprob: -13.1250581741333
    9. 'max' → logprob: -13.2500581741333
    10. ' else' → logprob: -13.3750581741333

Token 495: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.35207444429397583
    2. '   ' → logprob: -1.352074384689331
    3. 'mini' → logprob: -3.852074384689331
    4. ' else' → logprob: -4.35207462310791
    5. '  ' → logprob: -6.97707462310791
    6. 'max' → logprob: -7.22707462310791
    7. ' ' → logprob: -7.35207462310791
    8. ')' → logprob: -7.35207462310791
    9. '.' → logprob: -7.97707462310791
    10. ' mini' → logprob: -8.22707462310791

Token 496: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12525080144405365
    2. ':' → logprob: -2.500250816345215
    3. ':
' → logprob: -3.375250816345215
    4. '   ' → logprob: -6.625250816345215
    5. ' mini' → logprob: -10.375250816345215
    6. '):
' → logprob: -10.625250816345215
    7. 'mini' → logprob: -11.125250816345215
    8. '```' → logprob: -11.375250816345215
    9. '     ' → logprob: -11.500250816345215
    10. '      ' → logprob: -11.500250816345215

Token 497: '       ' (ID: 309)
  Prédit: 'mini'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mini' → logprob: -0.45162177085876465
    2. '       ' → logprob: -1.4516217708587646
    3. 'max' → logprob: -2.4516217708587646
    4. ' mini' → logprob: -3.2016217708587646
    5. '   ' → logprob: -6.951622009277344
    6. 'min' → logprob: -7.701622009277344
    7. ' maxi' → logprob: -7.701622009277344
    8. ' max' → logprob: -8.451622009277344
    9. '```' → logprob: -9.326622009277344
    10. '     ' → logprob: -9.451622009277344

Token 498: ' mini' (ID: 15065)
  Prédit: 'mini'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mini' (adapté à ' mini') → logprob: -0.0002619318547658622
    2. ' mini' → logprob: -8.250262260437012
    3. '   ' → logprob: -14.625262260437012
    4. '       ' → logprob: -16.000261306762695
    5. 'min' → logprob: -17.125261306762695
    6. '  ' → logprob: -17.750261306762695
    7. '    ' → logprob: -18.125261306762695
    8. 'max' → logprob: -18.250261306762695
    9. 'minimal' → logprob: -18.500261306762695
    10. ' ' → logprob: -18.750261306762695

Token 499: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07890795916318893
    2. ' =' → logprob: -2.5789079666137695
    3. '=max' → logprob: -11.07890796661377
    4. '=
' → logprob: -13.32890796661377
    5. '   ' → logprob: -14.57890796661377
    6. '+=' → logprob: -15.45390796661377
    7. ' =
' → logprob: -16.078907012939453
    8. 'max' → logprob: -16.703907012939453
    9. ')' → logprob: -16.703907012939453
    10. '=min' → logprob: -16.828907012939453

Token 500: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0031777136027812958
    2. ' max' → logprob: -5.753177642822266
    3. '(max' → logprob: -19.003177642822266
    4. 'min' → logprob: -20.128177642822266
    5. ' ' → logprob: -20.628177642822266
    6. '=max' → logprob: -21.003177642822266
    7. '[max' → logprob: -21.003177642822266
    8. '   ' → logprob: -22.003177642822266
    9. ',max' → logprob: -22.128177642822266
    10. '_max' → logprob: -22.253177642822266

Token 501: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -1.3544423381972592e-05
    2. 'mini' → logprob: -11.87501335144043
    3. '(max' → logprob: -12.12501335144043
    4. '(mi' → logprob: -14.37501335144043
    5. ' mini' → logprob: -15.75001335144043
    6. '(' → logprob: -15.75001335144043
    7. '(
' → logprob: -17.00001335144043
    8. '```' → logprob: -17.12501335144043
    9. ' (' → logprob: -17.87501335144043
    10. ' ' → logprob: -18.12501335144043

Token 502: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4916342794895172
    2. 'mini' → logprob: -0.9916342496871948
    3. '(min' → logprob: -4.116634368896484
    4. '(i' → logprob: -7.491634368896484
    5. 'mi' → logprob: -8.366634368896484
    6. '(mi' → logprob: -8.741634368896484
    7. ' mini' → logprob: -9.741634368896484
    8. 'p' → logprob: -10.866634368896484
    9. '[i' → logprob: -11.616634368896484
    10. '-' → logprob: -12.116634368896484

Token 503: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07087815552949905
    2. '(min' → logprob: -2.695878267288208
    3. '(' → logprob: -7.195878028869629
    4. ',min' → logprob: -8.945878028869629
    5. ' ,' → logprob: -10.195878028869629
    6. '   ' → logprob: -12.195878028869629
    7. '```' → logprob: -12.570878028869629
    8. '(max' → logprob: -12.570878028869629
    9. '(mi' → logprob: -12.695878028869629
    10. ')' → logprob: -13.570878028869629

Token 504: ' fi' (ID: 6134)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fi' → logprob: -0.0020145252346992493
    2. ' fi' → logprob: -6.252014636993408
    3. 'mini' → logprob: -9.50201416015625
    4. '(fi' → logprob: -12.37701416015625
    5. ' mini' → logprob: -13.00201416015625
    6. '	fi' → logprob: -13.12701416015625
    7. 'mi' → logprob: -13.75201416015625
    8. ' ' → logprob: -14.37701416015625
    9. '   ' → logprob: -14.62701416015625
    10. '0' → logprob: -15.37701416015625

Token 505: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007322404999285936
    2. '[i' → logprob: -5.007322311401367
    3. ')
' → logprob: -8.257322311401367
    4. '   ' → logprob: -8.632322311401367
    5. ' )' → logprob: -9.007322311401367
    6. ')i' → logprob: -11.382322311401367
    7. '+' → logprob: -12.507322311401367
    8. '(i' → logprob: -12.632322311401367
    9. ')+' → logprob: -12.757322311401367
    10. '])' → logprob: -12.757322311401367

Token 506: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0024085890036076307
    2. '```' → logprob: -7.002408504486084
    3. ' for' → logprob: -7.127408504486084
    4. 'i' → logprob: -8.377408981323242
    5. 'fi' → logprob: -8.627408981323242
    6. ')' → logprob: -9.002408981323242
    7. 'max' → logprob: -9.377408981323242
    8. 'range' → logprob: -11.127408981323242
    9. '
' → logprob: -11.877408981323242
    10. ']' → logprob: -11.877408981323242

Token 507: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4776492714881897
    2. ' i' → logprob: -0.9776492714881897
    3. 'x' → logprob: -6.727649211883545
    4. '_' → logprob: -7.602649211883545
    5. 'd' → logprob: -7.602649211883545
    6. ' x' → logprob: -7.727649211883545
    7. ' d' → logprob: -8.227649688720703
    8. 'k' → logprob: -8.602649688720703
    9. '_i' → logprob: -9.352649688720703
    10. ' k' → logprob: -9.602649688720703

Token 508: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.055264636874198914
    2. 'in' → logprob: -2.930264711380005
    3. ' ' → logprob: -8.805264472961426
    4. ',' → logprob: -8.930264472961426
    5. '   ' → logprob: -9.805264472961426
    6. 'range' → logprob: -11.055264472961426
    7. ' range' → logprob: -11.055264472961426
    8. '_' → logprob: -12.680264472961426
    9. '  ' → logprob: -12.805264472961426
    10. '(' → logprob: -13.430264472961426

Token 509: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003223464358597994
    2. ' range' → logprob: -5.753223419189453
    3. 'table' → logprob: -10.753223419189453
    4. 'path' → logprob: -11.253223419189453
    5. 'dist' → logprob: -13.003223419189453
    6. ' ' → logprob: -13.128223419189453
    7. 'r' → logprob: -13.378223419189453
    8. 're' → logprob: -13.503223419189453
    9. '   ' → logprob: -14.003223419189453
    10. '(range' → logprob: -14.003223419189453

Token 510: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.13220161199569702
    2. '(' → logprob: -3.007201671600342
    3. '(D' → logprob: -3.257201671600342
    4. '(N' → logprob: -3.382201671600342
    5. '(len' → logprob: -7.507201671600342
    6. '(m' → logprob: -7.757201671600342
    7. 'mini' → logprob: -7.757201671600342
    8. ' mini' → logprob: -8.632201194763184
    9. ' (' → logprob: -9.507201194763184
    10. '(max' → logprob: -9.757201194763184

Token 511: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.429896944202483e-05
    2. '(i' → logprob: -10.500043869018555
    3. 'I' → logprob: -11.875043869018555
    4. ' i' → logprob: -13.000043869018555
    5. '
' → logprob: -13.125043869018555
    6. '(' → logprob: -13.125043869018555
    7. '(min' → logprob: -13.250043869018555
    8. '[i' → logprob: -15.250043869018555
    9. '(N' → logprob: -15.500043869018555
    10. 'ii' → logprob: -15.750043869018555

Token 512: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10495354235172272
    2. ',' → logprob: -2.4799535274505615
    3. ' +' → logprob: -4.229953765869141
    4. ',min' → logprob: -7.229953765869141
    5. ' ,' → logprob: -8.22995376586914
    6. '   ' → logprob: -9.10495376586914
    7. ',N' → logprob: -9.72995376586914
    8. '-' → logprob: -9.72995376586914
    9. ',len' → logprob: -10.72995376586914
    10. ',D' → logprob: -10.97995376586914

Token 513: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019847829826176167
    2. '2' → logprob: -6.251984596252441
    3. ' ' → logprob: -10.001984596252441
    4. '5' → logprob: -12.501984596252441
    5. '3' → logprob: -13.001984596252441
    6. '10' → logprob: -13.376984596252441
    7. '   ' → logprob: -13.501984596252441
    8. '6' → logprob: -14.501984596252441
    9. '4' → logprob: -15.376984596252441
    10. '0' → logprob: -15.501984596252441

Token 514: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025906695052981377
    2. ',N' → logprob: -4.400906562805176
    3. ' ,' → logprob: -4.900906562805176
    4. '):' → logprob: -5.400906562805176
    5. '):
' → logprob: -7.025906562805176
    6. ',len' → logprob: -8.025906562805176
    7. '   ' → logprob: -9.900906562805176
    8. ',min' → logprob: -10.775906562805176
    9. ' ):' → logprob: -11.025906562805176
    10. '+' → logprob: -11.150906562805176

Token 515: '   ' (ID: 271)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.6181188225746155
    2. '   ' → logprob: -0.8681188225746155
    3. 'print' → logprob: -3.3681187629699707
    4. ' table' → logprob: -5.118118762969971
    5. '	table' → logprob: -7.868118762969971
    6. ' print' → logprob: -8.618119239807129
    7. '```' → logprob: -8.743119239807129
    8. ')table' → logprob: -9.743119239807129
    9. 'if' → logprob: -10.368119239807129
    10. 'for' → logprob: -11.743119239807129

Token 516: ' table' (ID: 3293)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' (adapté à ' table') → logprob: -0.03385994955897331
    2. 'print' → logprob: -3.408859968185425
    3. 'if' → logprob: -8.783860206604004
    4. '   ' → logprob: -10.658860206604004
    5. 'for' → logprob: -11.283860206604004
    6. ' table' → logprob: -11.908860206604004
    7. '
' → logprob: -12.283860206604004
    8. '```' → logprob: -12.908860206604004
    9. ')table' → logprob: -14.033860206604004
    10. 'sys' → logprob: -14.283860206604004

Token 517: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.011077644303441048
    2. '=' → logprob: -4.886077880859375
    3. '[' → logprob: -6.011077880859375
    4. ' =' → logprob: -7.136077880859375
    5. ' [' → logprob: -9.761077880859375
    6. '=i' → logprob: -10.261077880859375
    7. '[
' → logprob: -10.261077880859375
    8. ' ' → logprob: -11.011077880859375
    9. ']=' → logprob: -11.511077880859375
    10. 'i' → logprob: -11.761077880859375

Token 518: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09060028195381165
    2. ']=' → logprob: -2.4656002521514893
    3. '=' → logprob: -6.590600490570068
    4. ']+=' → logprob: -8.84060001373291
    5. ' ]' → logprob: -8.96560001373291
    6. ' =' → logprob: -11.46560001373291
    7. ']=(' → logprob: -13.84060001373291
    8. ']==' → logprob: -14.96560001373291
    9. ']='' → logprob: -15.59060001373291
    10. ']
' → logprob: -15.71560001373291

Token 519: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018928589299321175
    2. ' =' → logprob: -4.018928527832031
    3. '+=' → logprob: -7.268928527832031
    4. ' +=' → logprob: -10.518928527832031
    5. '*=' → logprob: -10.518928527832031
    6. '=i' → logprob: -11.768928527832031
    7. '=int' → logprob: -12.268928527832031
    8. '=
' → logprob: -12.393928527832031
    9. '=max' → logprob: -13.143928527832031
    10. '=True' → logprob: -14.268928527832031

Token 520: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.758233904838562
    2. 'D' → logprob: -1.008233904838562
    3. '1' → logprob: -2.5082340240478516
    4. '2' → logprob: -3.1332340240478516
    5. 'i' → logprob: -4.258234024047852
    6. '-' → logprob: -4.883234024047852
    7. 'N' → logprob: -4.883234024047852
    8. 'max' → logprob: -5.133234024047852
    9. '3' → logprob: -6.008234024047852
    10. 'min' → logprob: -6.633234024047852

Token 521: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4934046268463135
    2. 'D' → logprob: -1.7434046268463135
    3. '1' → logprob: -2.2434046268463135
    4. '2' → logprob: -3.2434046268463135
    5. 'i' → logprob: -3.3684046268463135
    6. 'N' → logprob: -4.368404388427734
    7. '-' → logprob: -4.993404388427734
    8. 'max' → logprob: -5.118404388427734
    9. '3' → logprob: -5.868404388427734
    10. 'min' → logprob: -6.368404388427734

Token 522: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.634952187538147
    2. '<|end|>' → logprob: -1.509952187538147
    3. ')' → logprob: -2.6349520683288574
    4. 'print' → logprob: -3.5099520683288574
    5. ' for' → logprob: -3.6349520683288574
    6. 'i' → logprob: -3.7599520683288574
    7. '0' → logprob: -3.8849520683288574
    8. '
' → logprob: -3.8849520683288574
    9. ' ' → logprob: -4.384952068328857
    10. 'if' → logprob: -4.509952068328857

Token 523: 'table' (ID: 4202)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02823824994266033
    2. 'print' → logprob: -4.653238296508789
    3. 'i' → logprob: -5.528238296508789
    4. '<|end|>' → logprob: -5.903238296508789
    5. ' for' → logprob: -6.028238296508789
    6. '0' → logprob: -6.028238296508789
    7. ')' → logprob: -6.153238296508789
    8. ']' → logprob: -6.528238296508789
    9. '```' → logprob: -6.653238296508789
    10. '[' → logprob: -7.778238296508789

Token 524: '[' (ID: 58)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 525: '1' (ID: 16)
  Prédit: 'mini'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mini' → logprob: -0.018884019926190376
    2. 'min' → logprob: -4.018884181976318
    3. 'mi' → logprob: -8.14388370513916
    4. ' mini' → logprob: -8.51888370513916
    5. 'i' → logprob: -9.51888370513916
    6. 'N' → logprob: -9.64388370513916
    7. 'D' → logprob: -9.89388370513916
    8. '0' → logprob: -10.39388370513916
    9. 'max' → logprob: -12.01888370513916
    10. '(min' → logprob: -12.64388370513916

Token 526: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006208192789927125
    2. ' ]' → logprob: -7.5006208419799805
    3. ']=' → logprob: -10.37562084197998
    4. ']+=' → logprob: -10.50062084197998
    5. ':]' → logprob: -12.37562084197998
    6. ':' → logprob: -14.25062084197998
    7. '()]' → logprob: -14.25062084197998
    8. '1' → logprob: -14.75062084197998
    9. ']==' → logprob: -14.87562084197998
    10. '[' → logprob: -14.87562084197998

Token 527: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 528: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22609899938106537
    2. '1' → logprob: -1.6010990142822266
    3. 'min' → logprob: -7.976099014282227
    4. '2' → logprob: -8.351099014282227
    5. ' ' → logprob: -10.226099014282227
    6. '-' → logprob: -11.226099014282227
    7. 'N' → logprob: -11.351099014282227
    8. 'max' → logprob: -11.476099014282227
    9. 'inf' → logprob: -12.288599014282227
    10. '<|end|>' → logprob: -12.788599014282227

Token 529: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20189478993415833
    2. '1' → logprob: -1.701894760131836
    3. 'min' → logprob: -7.951894760131836
    4. '2' → logprob: -9.451894760131836
    5. ' ' → logprob: -11.201894760131836
    6. '-' → logprob: -11.826894760131836
    7. 'max' → logprob: -12.076894760131836
    8. 'inf' → logprob: -12.701894760131836
    9. '3' → logprob: -13.326894760131836
    10. '<|end|>' → logprob: -13.326894760131836

Token 530: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 531: 'table' (ID: 4202)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.021110953763127327
    2. 'i' → logprob: -4.771111011505127
    3. '<|end|>' → logprob: -5.646111011505127
    4. ' for' → logprob: -6.396111011505127
    5. 'f' → logprob: -6.521111011505127
    6. '0' → logprob: -6.771111011505127
    7. '#' → logprob: -6.896111011505127
    8. 'n' → logprob: -7.271111011505127
    9. ')' → logprob: -8.021110534667969
    10. 'max' → logprob: -8.021110534667969

Token 532: '[' (ID: 58)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 533: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.029127642512321472
    2. '0' → logprob: -3.779127597808838
    3. '1' → logprob: -5.654127597808838
    4. 'min' → logprob: -6.779127597808838
    5. 'mini' → logprob: -7.154127597808838
    6. '3' → logprob: -9.279128074645996
    7. ' ' → logprob: -9.654128074645996
    8. '(min' → logprob: -9.779128074645996
    9. 'max' → logprob: -10.029128074645996
    10. '(' → logprob: -10.154128074645996

Token 534: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.019019825384020805
    2. ']=' → logprob: -4.269019603729248
    3. ' ]' → logprob: -6.144019603729248
    4. '=' → logprob: -6.519019603729248
    5. ' =' → logprob: -7.144019603729248
    6. ']+=' → logprob: -7.894019603729248
    7. ':]' → logprob: -11.019020080566406
    8. ' ' → logprob: -12.269020080566406
    9. '   ' → logprob: -12.519020080566406
    10. ')' → logprob: -12.644020080566406

Token 535: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12714217603206635
    2. ' =' → logprob: -2.1271421909332275
    3. '+=' → logprob: -9.752141952514648
    4. ' +=' → logprob: -10.252141952514648
    5. ' ' → logprob: -10.502141952514648
    6. '*=' → logprob: -10.502141952514648
    7. ' <<=' → logprob: -10.752141952514648
    8. ' *=' → logprob: -11.252141952514648
    9. ' |=' → logprob: -11.502141952514648
    10. ' ^=' → logprob: -12.627141952514648

Token 536: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3229036331176758
    2. '2' → logprob: -1.5729036331176758
    3. '0' → logprob: -2.697903633117676
    4. '3' → logprob: -6.947903633117676
    5. '4' → logprob: -8.947903633117676
    6. 'min' → logprob: -11.010403633117676
    7. '!' → logprob: -11.260403633117676
    8. ' ' → logprob: -11.697903633117676
    9. '```' → logprob: -11.822903633117676
    10. 'max' → logprob: -12.322903633117676

Token 537: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4516112804412842
    2. '2' → logprob: -1.3266112804412842
    3. '0' → logprob: -2.326611280441284
    4. '3' → logprob: -8.076611518859863
    5. '4' → logprob: -10.139111518859863
    6. '```' → logprob: -11.639111518859863
    7. 'min' → logprob: -12.014111518859863
    8. '!' → logprob: -12.201611518859863
    9. ' ' → logprob: -13.326611518859863
    10. '-' → logprob: -13.451611518859863

Token 538: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0014245217898860574
    2. 'i' → logprob: -7.251424312591553
    3. ' for' → logprob: -7.376424312591553
    4. 'if' → logprob: -10.251424789428711
    5. ')' → logprob: -10.626424789428711
    6. 'from' → logprob: -11.626424789428711
    7. '.' → logprob: -12.876424789428711
    8. '=' → logprob: -13.001424789428711
    9. 'def' → logprob: -13.251424789428711
    10. '#' → logprob: -13.251424789428711

Token 539: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013890095055103302
    2. ' for' → logprob: -5.013890266418457
    3. 'i' → logprob: -5.263890266418457
    4. 'f' → logprob: -7.138890266418457
    5. ')' → logprob: -8.013890266418457
    6. 'if' → logprob: -8.138890266418457
    7. '[' → logprob: -8.763890266418457
    8. ',' → logprob: -9.263890266418457
    9. '.' → logprob: -9.763890266418457
    10. '0' → logprob: -10.263890266418457

Token 540: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.25290563702583313
    2. 'i' → logprob: -1.5029056072235107
    3. ' _' → logprob: -8.62790584564209
    4. ' d' → logprob: -8.62790584564209
    5. 'd' → logprob: -8.87790584564209
    6. '_' → logprob: -8.87790584564209
    7. 'x' → logprob: -9.62790584564209
    8. '_i' → logprob: -9.62790584564209
    9. 'k' → logprob: -10.25290584564209
    10. ' x' → logprob: -10.37790584564209

Token 541: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01263313740491867
    2. 'in' → logprob: -4.387633323669434
    3. ' ' → logprob: -9.637633323669434
    4. ' i' → logprob: -11.012633323669434
    5. ',' → logprob: -11.262633323669434
    6. '   ' → logprob: -11.387633323669434
    7. '[' → logprob: -12.387633323669434
    8. '	in' → logprob: -12.387633323669434
    9. ' =' → logprob: -13.137633323669434
    10. '  ' → logprob: -13.262633323669434

Token 542: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12692873179912567
    2. 'range' → logprob: -2.1269288063049316
    3. ' ' → logprob: -14.876928329467773
    4. '(range' → logprob: -15.251928329467773
    5. '	range' → logprob: -16.751928329467773
    6. '_range' → logprob: -19.376928329467773
    7. '  ' → logprob: -19.501928329467773
    8. '_' → logprob: -19.876928329467773
    9. '   ' → logprob: -20.126928329467773
    10. ' in' → logprob: -20.126928329467773

Token 543: '(D' (ID: 9908)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5810257792472839
    2. '(' → logprob: -0.8310257792472839
    3. ' ' → logprob: -5.33102560043335
    4. '(min' → logprob: -8.706026077270508
    5. ' (' → logprob: -10.456026077270508
    6. '(
' → logprob: -11.206026077270508
    7. '2' → logprob: -11.581026077270508
    8. '   ' → logprob: -11.956026077270508
    9. 'min' → logprob: -12.581026077270508
    10. 'mini' → logprob: -13.206026077270508

Token 544: '+' (ID: 10)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.2294737994670868
    2. ',' → logprob: -2.104473829269409
    3. '+' → logprob: -2.729473829269409
    4. '-' → logprob: -4.85447359085083
    5. '2' → logprob: -4.97947359085083
    6. ' +' → logprob: -7.10447359085083
    7. ' -' → logprob: -7.72947359085083
    8. ',
' → logprob: -7.72947359085083
    9. '):
' → logprob: -7.85447359085083
    10. ' ' → logprob: -7.97947359085083

Token 545: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1616150289773941
    2. '3' → logprob: -1.911615014076233
    3. '2' → logprob: -7.161614894866943
    4. ' ' → logprob: -7.536614894866943
    5. '5' → logprob: -10.286615371704102
    6. '4' → logprob: -10.911615371704102
    7. '-' → logprob: -11.161615371704102
    8. '   ' → logprob: -12.286615371704102
    9. '6' → logprob: -13.286615371704102
    10. '  ' → logprob: -13.724115371704102

Token 546: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2631901800632477
    2. '):' → logprob: -2.013190269470215
    3. ',' → logprob: -2.388190269470215
    4. '3' → logprob: -5.763190269470215
    5. '   ' → logprob: -7.388190269470215
    6. '):
' → logprob: -7.888190269470215
    7. ':' → logprob: -8.013190269470215
    8. ' ' → logprob: -8.263190269470215
    9. ' ,' → logprob: -8.388190269470215
    10. '2' → logprob: -8.513190269470215

Token 547: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0009666071855463088
    2. 'len' → logprob: -7.375966548919678
    3. ' N' → logprob: -8.000967025756836
    4. ' len' → logprob: -13.000967025756836
    5. '   ' → logprob: -13.250967025756836
    6. 'min' → logprob: -14.750967025756836
    7. '  ' → logprob: -15.250967025756836
    8. ' ' → logprob: -15.750967025756836
    9. ')' → logprob: -16.750967025756836
    10. '    ' → logprob: -17.000967025756836

Token 548: '+' (ID: 10)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.014799494296312332
    2. '):' → logprob: -4.38979959487915
    3. '+' → logprob: -6.13979959487915
    4. '-' → logprob: -9.389799118041992
    5. '):
' → logprob: -10.264799118041992
    6. '[' → logprob: -13.014799118041992
    7. ' -' → logprob: -13.514799118041992
    8. ' +' → logprob: -13.514799118041992
    9. ':
' → logprob: -13.639799118041992
    10. '():
' → logprob: -13.889799118041992

Token 549: '1' (ID: 16)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.008872301317751408
    2. '1' → logprob: -4.7588725090026855
    3. '3' → logprob: -9.258872032165527
    4. ' ' → logprob: -9.383872032165527
    5. '4' → logprob: -10.008872032165527
    6. '2' → logprob: -11.133872032165527
    7. '6' → logprob: -11.508872032165527
    8. '   ' → logprob: -12.508872032165527
    9. '```' → logprob: -13.383872032165527
    10. '0' → logprob: -13.883872032165527

Token 550: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.02336042933166027
    2. '):' → logprob: -3.77336049079895
    3. ':' → logprob: -9.898360252380371
    4. '):
' → logprob: -10.148360252380371
    5. ':
' → logprob: -10.773360252380371
    6. '   ' → logprob: -13.773360252380371
    7. ']:
' → logprob: -14.023360252380371
    8. ')' → logprob: -14.148360252380371
    9. ' ):
' → logprob: -14.273360252380371
    10. '):

' → logprob: -14.398360252380371

Token 551: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04364929348230362
    2. 'table' → logprob: -3.293649196624756
    3. ' table' → logprob: -5.293649196624756
    4. '	table' → logprob: -7.668649196624756
    5. ')table' → logprob: -10.793649673461914
    6. '```' → logprob: -10.918649673461914
    7. '       ' → logprob: -11.043649673461914
    8. ' for' → logprob: -11.543649673461914
    9. 'for' → logprob: -11.668649673461914
    10. ' ' → logprob: -12.168649673461914

Token 552: ' table' (ID: 3293)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' (adapté à ' table') → logprob: -0.0599198043346405
    2. '   ' → logprob: -3.059919834136963
    3. ' table' → logprob: -4.559919834136963
    4. 'break' → logprob: -7.309919834136963
    5. ' break' → logprob: -9.684919357299805
    6. '	table' → logprob: -10.434919357299805
    7. '```' → logprob: -10.559919357299805
    8. ' ' → logprob: -12.809919357299805
    9. '       ' → logprob: -12.934919357299805
    10. '  ' → logprob: -12.934919357299805

Token 553: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00010044389637187123
    2. '=' → logprob: -9.625100135803223
    3. '[' → logprob: -10.375100135803223
    4. '[
' → logprob: -13.250100135803223
    5. ' =' → logprob: -14.375100135803223
    6. ' [' → logprob: -15.375100135803223
    7. '\[' → logprob: -16.00010108947754
    8. '   ' → logprob: -16.50010108947754
    9. '```' → logprob: -16.62510108947754
    10. '[int' → logprob: -17.00010108947754

Token 554: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005962691269814968
    2. ']=' → logprob: -5.13096284866333
    3. '=' → logprob: -10.380962371826172
    4. ']+=' → logprob: -13.130962371826172
    5. ' ]' → logprob: -14.255962371826172
    6. ' =' → logprob: -15.505962371826172
    7. ']=(' → logprob: -16.130962371826172
    8. ']==' → logprob: -16.755962371826172
    9. ']=-' → logprob: -16.880962371826172
    10. '[' → logprob: -17.255962371826172

Token 555: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -4.036524842376821e-05
    2. ' =' → logprob: -10.125040054321289
    3. '+=' → logprob: -15.875040054321289
    4. '=
' → logprob: -17.12504005432129
    5. '=True' → logprob: -17.75004005432129
    6. '=sys' → logprob: -17.87504005432129
    7. '*=' → logprob: -18.00004005432129
    8. '>' → logprob: -18.25004005432129
    9. '=int' → logprob: -18.37504005432129
    10. '>=' → logprob: -18.62504005432129

Token 556: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6627790331840515
    2. '0' → logprob: -0.9127790331840515
    3. '2' → logprob: -3.5377790927886963
    4. 'i' → logprob: -3.6627790927886963
    5. 'table' → logprob: -3.7877790927886963
    6. 'float' → logprob: -6.412778854370117
    7. ' ' → logprob: -7.287778854370117
    8. '-' → logprob: -7.287778854370117
    9. '3' → logprob: -7.412778854370117
    10. 'min' → logprob: -7.787778854370117

Token 557: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3559628427028656
    2. '0' → logprob: -1.855962872505188
    3. 'table' → logprob: -2.8559627532958984
    4. '2' → logprob: -2.9809627532958984
    5. 'i' → logprob: -3.6059627532958984
    6. '-' → logprob: -5.730962753295898
    7. 'float' → logprob: -6.980962753295898
    8. 'N' → logprob: -7.105962753295898
    9. 'min' → logprob: -7.105962753295898
    10. 'D' → logprob: -7.855962753295898

Token 558: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.483388751745224
    2. ')' → logprob: -1.7333887815475464
    3. '<|end|>' → logprob: -2.233388662338257
    4. ' for' → logprob: -2.608388662338257
    5. '
' → logprob: -4.608388900756836
    6. 'print' → logprob: -4.983388900756836
    7. 'if' → logprob: -6.858388900756836
    8. 'i' → logprob: -6.983388900756836
    9. 'while' → logprob: -7.108388900756836
    10. ']' → logprob: -7.233388900756836

Token 559: 'print' (ID: 1598)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002021782100200653
    2. 'i' → logprob: -6.752021789550781
    3. ' for' → logprob: -8.127021789550781
    4. ')' → logprob: -8.502021789550781
    5. '[' → logprob: -9.002021789550781
    6. '```' → logprob: -10.002021789550781
    7. '(' → logprob: -10.377021789550781
    8. ']' → logprob: -10.752021789550781
    9. 'f' → logprob: -10.877021789550781
    10. '+' → logprob: -11.002021789550781

Token 560: '('' (ID: 706)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.08395092189311981
    2. '(' → logprob: -3.083950996398926
    3. '(table' → logprob: -4.208950996398926
    4. '('' → logprob: -4.583950996398926
    5. '(sum' → logprob: -5.583950996398926
    6. '(*' → logprob: -6.208950996398926
    7. '(max' → logprob: -6.708950996398926
    8. 'min' → logprob: -7.333950996398926
    9. '()' → logprob: -7.333950996398926
    10. 'table' → logprob: -7.458950996398926

Token 561: ''.' (ID: 6120)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.559943675994873
    2. ''.' → logprob: -1.309943675994873
    3. '')' → logprob: -2.684943675994873
    4. ''' → logprob: -3.309943675994873
    5. '1' → logprob: -4.184943675994873
    6. 'min' → logprob: -4.434943675994873
    7. ' '.' → logprob: -4.684943675994873
    8. 'table' → logprob: -5.684943675994873
    9. ' ')' → logprob: -5.934943675994873
    10. '"' → logprob: -6.309943675994873

Token 562: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -6.704273118884885e-07
    2. 'j' → logprob: -15.500000953674316
    3. '''.' → logprob: -16.25
    4. ' join' → logprob: -16.5
    5. 'print' → logprob: -16.625
    6. '(join' → logprob: -16.75
    7. 'jo' → logprob: -17.0
    8. ''.' → logprob: -17.125
    9. '.join' → logprob: -18.125
    10. '```' → logprob: -18.375

Token 563: '(map' (ID: 16946)
  Prédit: '(table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(table' → logprob: -0.06128353625535965
    2. 'table' → logprob: -3.061283588409424
    3. '(map' → logprob: -5.311283588409424
    4. '(str' → logprob: -5.561283588409424
    5. 'map' → logprob: -5.811283588409424
    6. '(chr' → logprob: -7.686283588409424
    7. 'str' → logprob: -8.311283111572266
    8. 'chr' → logprob: -8.936283111572266
    9. ')table' → logprob: -13.186283111572266
    10. '([' → logprob: -13.561283111572266

Token 564: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.000912774819880724
    2. 'str' → logprob: -7.000912666320801
    3. '(chr' → logprob: -14.2509126663208
    4. '(' → logprob: -15.0009126663208
    5. '[str' → logprob: -16.125913619995117
    6. '(lambda' → logprob: -16.375913619995117
    7. ' str' → logprob: -16.750913619995117
    8. '=str' → logprob: -17.500913619995117
    9. '	str' → logprob: -18.125913619995117
    10. ',str' → logprob: -18.500913619995117

Token 565: ',' (ID: 11)
  Prédit: '(table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(table' → logprob: -5.633853652398102e-05
    2. ')table' → logprob: -10.125056266784668
    3. 'table' → logprob: -11.125056266784668
    4. ' (' → logprob: -13.750056266784668
    5. ' table' → logprob: -16.125057220458984
    6. ',' → logprob: -16.125057220458984
    7. '<table' → logprob: -16.375057220458984
    8. '	table' → logprob: -17.500057220458984
    9. ')(' → logprob: -17.625057220458984
    10. ')' → logprob: -17.750057220458984

Token 566: ' table' (ID: 3293)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -1.0206720617134124e-05
    2. ' table' → logprob: -11.50001049041748
    3. '(table' → logprob: -18.125009536743164
    4. ')table' → logprob: -19.250009536743164
    5. '   ' → logprob: -19.875009536743164
    6. '	table' → logprob: -20.625009536743164
    7. '[' → logprob: -21.625009536743164
    8. '<table' → logprob: -22.000009536743164
    9. '$table' → logprob: -23.250009536743164
    10. ' ' → logprob: -23.500009536743164

Token 567: '[' (ID: 58)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.08306202292442322
    2. '))' → logprob: -3.083061933517456
    3. '[:' → logprob: -3.583061933517456
    4. '[' → logprob: -5.208062171936035
    5. '[:-' → logprob: -7.458062171936035
    6. ' ' → logprob: -10.833062171936035
    7. '[:]' → logprob: -11.333062171936035
    8. ')' → logprob: -12.208062171936035
    9. ')))
' → logprob: -13.208062171936035
    10. ']))' → logprob: -13.208062171936035

Token 568: '1' (ID: 16)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.7115505933761597
    2. ')))' → logprob: -0.8365505933761597
    3. '0' → logprob: -2.961550712585449
    4. ':' → logprob: -4.961550712585449
    5. '))' → logprob: -5.211550712585449
    6. '1' → logprob: -5.461550712585449
    7. '[' → logprob: -6.211550712585449
    8. '[:-' → logprob: -6.211550712585449
    9. ':N' → logprob: -6.461550712585449
    10. '(' → logprob: -7.211550712585449

Token 569: ':N' (ID: 84011)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12461933493614197
    2. ':]' → logprob: -2.374619245529175
    3. ':D' → logprob: -3.874619245529175
    4. ':N' → logprob: -5.749619483947754
    5. ':(' → logprob: -8.999619483947754
    6. ':-' → logprob: -10.624619483947754
    7. ']))' → logprob: -11.999619483947754
    8. ':i' → logprob: -12.249619483947754
    9. ' :' → logprob: -12.999619483947754
    10. ':)' → logprob: -13.249619483947754

Token 570: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00011284107313258573
    2. ']))' → logprob: -9.250112533569336
    3. '1' → logprob: -11.500112533569336
    4. ' +' → logprob: -12.375112533569336
    5. ']+' → logprob: -13.625112533569336
    6. ']' → logprob: -14.000112533569336
    7. '+]' → logprob: -16.375112533569336
    8. '])))' → logprob: -16.875112533569336
    9. '```' → logprob: -17.125112533569336
    10. '_plus' → logprob: -17.500112533569336

Token 571: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.822646693966817e-06
    2. '+' → logprob: -12.250007629394531
    3. '```' → logprob: -13.125007629394531
    4. ']))' → logprob: -14.750007629394531
    5. ' ' → logprob: -15.125007629394531
    6. ']))
' → logprob: -15.500007629394531
    7. '``' → logprob: -17.25000762939453
    8. '])' → logprob: -17.37500762939453
    9. '   ' → logprob: -17.62500762939453
    10. '
' → logprob: -17.87500762939453

Token 572: '])))' (ID: 196150)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -4.870950215263292e-05
    2. '))' → logprob: -10.250048637390137
    3. ')' → logprob: -11.375048637390137
    4. '))))' → logprob: -13.625048637390137
    5. ')))
' → logprob: -15.625048637390137
    6. '())))' → logprob: -15.625048637390137
    7. ')));' → logprob: -15.750048637390137
    8. ']))' → logprob: -17.750049591064453
    9. ' ' → logprob: -18.250049591064453
    10. '')))' → logprob: -18.750049591064453


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 570
Tokens correctement prédits (1ère position, stricte): 226
Tokens correctement prédits (1ère position, avec adaptation): 251
Tokens correctement prédits (top 10): 485
Précision stricte (1ère position): 39.65%
Précision adaptée (1ère position): 44.04%
Précision (top 10): 85.09%
================================================================================
