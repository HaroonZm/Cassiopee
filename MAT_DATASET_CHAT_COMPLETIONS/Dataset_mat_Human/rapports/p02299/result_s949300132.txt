================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
g = []
for i in range(n):
    g.append([int(i) for i in input().split()])
q = int(input())
EPS = 0.001
def dot(a, b):
    return sum([i * j for i,j in zip(a, b)])
def sub(a, b):
    return [a[0] - b[0],a[1] - b[1]]
def cross(a, b):
    return  a[0] * b[1] - a[1] * b[0]
def contains(g, p):
    x = False
    for i in range(n):
        a = sub(g[i], p)
        b = sub(g[(i+1)%n], p)
        if abs(cross(a, b)) < EPS and dot(a, b) < EPS: 
            return 1
        if a[1] > b[1]:
            a,b=b,a
        if a[1] < EPS and EPS < b[1] and cross(a,b) > EPS:
            x = not x
    return 2 if x else 0
for i in range(q):
    x,y = map(int, input().split())
    print(contains(g, [x,y]))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00042768914136104286
    2. ''' → logprob: -8.62542724609375
    3. '('' → logprob: -9.37542724609375
    4. '(n' → logprob: -9.87542724609375
    5. '```' → logprob: -10.37542724609375
    6. '`' → logprob: -10.75042724609375
    7. '("("' → logprob: -11.12542724609375
    8. '(
' → logprob: -11.12542724609375
    9. ')' → logprob: -11.75042724609375
    10. '()' → logprob: -12.25042724609375

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11869344860315323
    2. ')' → logprob: -2.2436933517456055
    3. '()' → logprob: -5.3686933517456055
    4. '())' → logprob: -7.4936933517456055
    5. '(
' → logprob: -8.243693351745605
    6. '```' → logprob: -9.993693351745605
    7. '(

' → logprob: -10.368693351745605
    8. '('' → logprob: -10.493693351745605
    9. ''' → logprob: -10.618693351745605
    10. '(n' → logprob: -10.868693351745605

Token 5: 'g' (ID: 70)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7040315866470337
    2. 'if' → logprob: -1.4540315866470337
    3. 'for' → logprob: -2.329031467437744
    4. 's' → logprob: -2.454031467437744
    5. 'f' → logprob: -4.329031467437744
    6. ' ' → logprob: -4.454031467437744
    7. 'x' → logprob: -4.829031467437744
    8. ')' → logprob: -4.954031467437744
    9. 'a' → logprob: -4.954031467437744
    10. ''' → logprob: -5.079031467437744

Token 6: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07813894748687744
    2. 'raph' → logprob: -3.203138828277588
    3. ' =' → logprob: -3.578138828277588
    4. '=' → logprob: -5.703138828277588
    5. 'a' → logprob: -7.328138828277588
    6. '=r' → logprob: -7.953138828277588
    7. '.' → logprob: -8.203139305114746
    8. 'ra' → logprob: -8.203139305114746
    9. 'i' → logprob: -8.578139305114746
    10. '.r' → logprob: -8.703139305114746

Token 7: ' []
' (ID: 8911)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {}' → logprob: -1.3364568948745728
    2. ' ' → logprob: -1.9614568948745728
    3. ' []' → logprob: -2.086456775665283
    4. ' n' → logprob: -2.461456775665283
    5. 'input' → logprob: -2.836456775665283
    6. ' [' → logprob: -2.961456775665283
    7. '{}' → logprob: -3.086456775665283
    8. ' input' → logprob: -3.211456775665283
    9. '[]' → logprob: -3.211456775665283
    10. 'n' → logprob: -3.586456775665283

Token 8: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.028084559366106987
    2. ' for' → logprob: -3.6530845165252686
    3. '[' → logprob: -6.653084754943848
    4. ' ' → logprob: -8.403084754943848
    5. '```' → logprob: -9.403084754943848
    6. ')' → logprob: -9.403084754943848
    7. ''' → logprob: -10.903084754943848
    8. '`' → logprob: -11.153084754943848
    9. '_' → logprob: -11.153084754943848
    10. '
' → logprob: -11.653084754943848

Token 9: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47798246145248413
    2. ' i' → logprob: -0.9779824614524841
    3. '  ' → logprob: -6.227982521057129
    4. 'i' → logprob: -7.227982521057129
    5. ' _' → logprob: -7.727982521057129
    6. ' ‌' → logprob: -7.852982521057129
    7. '_' → logprob: -8.227982521057129
    8. ' )' → logprob: -10.602982521057129
    9. ' I' → logprob: -10.727982521057129
    10. ' ' → logprob: -12.102982521057129

Token 10: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2483232021331787
    2. 'in' → logprob: -2.2483232021331787
    3. ' ' → logprob: -2.6233232021331787
    4. 'n' → logprob: -3.3733232021331787
    5. ' n' → logprob: -5.248323440551758
    6. '  ' → logprob: -6.373323440551758
    7. '   ' → logprob: -9.123323440551758
    8. 'range' → logprob: -9.248323440551758
    9. '	in' → logprob: -10.248323440551758
    10. ' i' → logprob: -10.373323440551758

Token 11: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03806651011109352
    2. 'range' → logprob: -3.2880666255950928
    3. ' ' → logprob: -10.663066864013672
    4. '	range' → logprob: -13.788066864013672
    5. '(range' → logprob: -15.913066864013672
    6. '_range' → logprob: -16.163066864013672
    7. '```' → logprob: -16.163066864013672
    8. ')' → logprob: -16.413066864013672
    9. ' xrange' → logprob: -16.663066864013672
    10. 'Range' → logprob: -17.288066864013672

Token 12: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08001682162284851
    2. '(n' → logprob: -2.580016851425171
    3. ' (' → logprob: -6.830016613006592
    4. '(len' → logprob: -10.33001708984375
    5. '(range' → logprob: -12.20501708984375
    6. ' ' → logprob: -12.95501708984375
    7. '(i' → logprob: -13.70501708984375
    8. '(space' → logprob: -14.08001708984375
    9. '(
' → logprob: -14.58001708984375
    10. ')' → logprob: -14.58001708984375

Token 13: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5232828259468079
    2. ')' → logprob: -0.8982828259468079
    3. ' )' → logprob: -10.023283004760742
    4. ' ):' → logprob: -10.273283004760742
    5. '+' → logprob: -10.398283004760742
    6. ':' → logprob: -10.648283004760742
    7. '):
' → logprob: -11.648283004760742
    8. ' range' → logprob: -13.273283004760742
    9. 'range' → logprob: -13.523283004760742
    10. '))' → logprob: -13.523283004760742

Token 14: '   ' (ID: 271)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.7913993000984192
    2. ' g' → logprob: -0.7913993000984192
    3. ' ' → logprob: -3.2913992404937744
    4. '   ' → logprob: -3.5413992404937744
    5. 'g' → logprob: -3.9163992404937744
    6. '     
' → logprob: -5.9163994789123535
    7. ' []' → logprob: -6.0413994789123535
    8. '```' → logprob: -7.5413994789123535
    9. ' input' → logprob: -7.9163994789123535
    10. ' ,' → logprob: -8.291399002075195

Token 15: ' g' (ID: 329)
  Prédit: ' g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.7310189008712769
    2. '   ' → logprob: -1.1060189008712769
    3. 'g' (adapté à ' g') → logprob: -2.1060190200805664
    4. ' line' → logprob: -3.3560190200805664
    5. '    ' → logprob: -4.356019020080566
    6. ' ' → logprob: -5.356019020080566
    7. ' lines' → logprob: -6.106019020080566
    8. ' s' → logprob: -6.231019020080566
    9. 'line' → logprob: -6.731019020080566
    10. 's' → logprob: -6.856019020080566

Token 16: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.4742131531238556
    2. '.' → logprob: -0.9742131233215332
    3. '.app' → logprob: -10.099213600158691
    4. '[' → logprob: -10.474213600158691
    5. '.ap' → logprob: -10.599213600158691
    6. ' .' → logprob: -10.974213600158691
    7. '[i' → logprob: -11.599213600158691
    8. '.i' → logprob: -12.849213600158691
    9. 'append' → logprob: -12.974213600158691
    10. '.a' → logprob: -13.349213600158691

Token 17: '([' (ID: 5194)
  Prédit: '(list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.07922717183828354
    2. '([]' → logprob: -3.0792272090911865
    3. '(' → logprob: -3.7042272090911865
    4. '([' → logprob: -5.704226970672607
    5. '(int' → logprob: -6.704226970672607
    6. 'list' → logprob: -7.204226970672607
    7. '(input' → logprob: -9.079227447509766
    8. '([])
' → logprob: -10.079227447509766
    9. '[]' → logprob: -10.954227447509766
    10. '   ' → logprob: -11.454227447509766

Token 18: 'int' (ID: 491)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09938295930624008
    2. 'int' → logprob: -2.5993828773498535
    3. 'False' → logprob: -3.9743828773498535
    4. 'list' → logprob: -7.4743828773498535
    5. ' int' → logprob: -8.474383354187012
    6. '   ' → logprob: -8.724383354187012
    7. ' ' → logprob: -8.849383354187012
    8. ' False' → logprob: -9.349383354187012
    9. '[int' → logprob: -9.474383354187012
    10. ']' → logprob: -9.974383354187012

Token 19: '(i' (ID: 3649)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.15064917504787445
    2. '(x' → logprob: -2.400649070739746
    3. '(' → logprob: -3.025649070739746
    4. '()' → logprob: -7.900649070739746
    5. '(i' → logprob: -8.650649070739746
    6. 'input' → logprob: -10.400649070739746
    7. '(a' → logprob: -11.150649070739746
    8. ')' → logprob: -11.150649070739746
    9. '(
' → logprob: -11.400649070739746
    10. '()]' → logprob: -11.400649070739746

Token 20: ')' (ID: 8)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.34581345319747925
    2. '())' → logprob: -2.095813512802124
    3. ')' → logprob: -2.845813512802124
    4. '(x' → logprob: -2.845813512802124
    5. 'input' → logprob: -3.470813512802124
    6. ')]' → logprob: -4.595813274383545
    7. ')])' → logprob: -5.220813274383545
    8. '(' → logprob: -5.845813274383545
    9. '()' → logprob: -6.470813274383545
    10. '()]' → logprob: -6.970813274383545

Token 21: ' for' (ID: 395)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -1.199321985244751
    2. ')' → logprob: -1.324321985244751
    3. '])' → logprob: -1.824321985244751
    4. ')]' → logprob: -2.574321985244751
    5. 'for' → logprob: -2.824321985244751
    6. 'input' → logprob: -3.074321985244751
    7. ']' → logprob: -3.199321985244751
    8. '(' → logprob: -4.199321746826172
    9. ' for' → logprob: -4.449321746826172
    10. '(input' → logprob: -4.574321746826172

Token 22: ' i' (ID: 575)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.0381968691945076
    2. 'input' → logprob: -3.2881968021392822
    3. ' range' → logprob: -8.913196563720703
    4. 'range' → logprob: -11.413196563720703
    5. ' ' → logprob: -12.413196563720703
    6. '(input' → logprob: -13.163196563720703
    7. ' in' → logprob: -13.663196563720703
    8. '=input' → logprob: -15.038196563720703
    9. '	input' → logprob: -15.038196563720703
    10. ' raw' → logprob: -15.288196563720703

Token 23: ' in' (ID: 306)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6969418525695801
    2. '(' → logprob: -1.57194185256958
    3. 'input' → logprob: -1.82194185256958
    4. ' input' → logprob: -2.19694185256958
    5. ' in' → logprob: -4.07194185256958
    6. ' (' → logprob: -6.69694185256958
    7. 'in' → logprob: -6.94694185256958
    8. '=input' → logprob: -7.32194185256958
    9. ' ' → logprob: -7.57194185256958
    10. ',input' → logprob: -8.821941375732422

Token 24: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.008656530641019344
    2. ' input' → logprob: -4.7586565017700195
    3. 'range' → logprob: -10.13365650177002
    4. '(input' → logprob: -13.63365650177002
    5. ' range' → logprob: -14.13365650177002
    6. 'list' → logprob: -15.13365650177002
    7. '(' → logprob: -16.008657455444336
    8. ' ' → logprob: -17.258657455444336
    9. '<input' → logprob: -17.758657455444336
    10. '   ' → logprob: -18.258657455444336

Token 25: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.011154872365295887
    2. '()' → logprob: -4.511154651641846
    3. '()]' → logprob: -9.386155128479004
    4. '())' → logprob: -10.886155128479004
    5. '(' → logprob: -13.886155128479004
    6. 'split' → logprob: -14.011155128479004
    7. '()].' → logprob: -14.011155128479004
    8. '()
' → logprob: -14.136155128479004
    9. '()

' → logprob: -15.886155128479004
    10. ' ().' → logprob: -16.011154174804688

Token 26: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015310514718294144
    2. 'strip' → logprob: -6.50153112411499
    3. 'rstrip' → logprob: -10.501530647277832
    4. ' split' → logprob: -13.876530647277832
    5. 'spl' → logprob: -15.501530647277832
    6. '(split' → logprob: -16.62653160095215
    7. 'sp' → logprob: -19.25153160095215
    8. 's' → logprob: -19.25153160095215
    9. ' strip' → logprob: -19.50153160095215
    10. 'replace' → logprob: -19.50153160095215

Token 27: '()])
' (ID: 141457)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00901432242244482
    2. '()]' → logprob: -4.759014129638672
    3. '())' → logprob: -8.384014129638672
    4. '(' → logprob: -9.384014129638672
    5. '])' → logprob: -10.009014129638672
    6. '()])
' → logprob: -10.384014129638672
    7. ')])' → logprob: -12.134014129638672
    8. '()],' → logprob: -13.634014129638672
    9. '('' → logprob: -13.884014129638672
    10. '()][' → logprob: -14.134014129638672

Token 28: 'q' (ID: 80)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.40184009075164795
    2. ')' → logprob: -2.9018402099609375
    3. 'm' → logprob: -2.9018402099609375
    4. 'd' → logprob: -3.4018402099609375
    5. 'n' → logprob: -4.0268402099609375
    6. ' for' → logprob: -4.0268402099609375
    7. '\n' → logprob: -4.0268402099609375
    8. 'f' → logprob: -4.4018402099609375
    9. 'max' → logprob: -4.6518402099609375
    10. 't' → logprob: -4.7768402099609375

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2818339765071869
    2. '=' → logprob: -1.6568340063095093
    3. 'u' → logprob: -2.9068338871002197
    4. '.' → logprob: -10.03183364868164
    5. '_' → logprob: -10.53183364868164
    6. ' ' → logprob: -10.78183364868164
    7. '   ' → logprob: -10.78183364868164
    8. 'uer' → logprob: -10.90683364868164
    9. 'ue' → logprob: -10.90683364868164
    10. '  ' → logprob: -11.15683364868164

Token 30: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00523837935179472
    2. ' int' → logprob: -5.2552385330200195
    3. '[int' → logprob: -12.50523853302002
    4. '[]' → logprob: -15.00523853302002
    5. '(int' → logprob: -15.13023853302002
    6. '0' → logprob: -16.130237579345703
    7. '=int' → logprob: -16.255237579345703
    8. ' []' → logprob: -16.880237579345703
    9. '	int' → logprob: -17.255237579345703
    10. 'in' → logprob: -17.255237579345703

Token 31: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3900807499885559
    2. '(input' → logprob: -1.1400806903839111
    3. '()' → logprob: -5.76508092880249
    4. 'input' → logprob: -11.140080451965332
    5. ' (' → logprob: -11.265080451965332
    6. '(
' → logprob: -11.765080451965332
    7. '("("' → logprob: -12.140080451965332
    8. '('' → logprob: -12.390080451965332
    9. '(in' → logprob: -13.015080451965332
    10. '(int' → logprob: -13.140080451965332

Token 32: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8693969249725342
    2. ')' → logprob: -1.1193969249725342
    3. '())' → logprob: -1.3693969249725342
    4. '`)' → logprob: -11.369397163391113
    5. '()
' → logprob: -11.494397163391113
    6. '())
' → logprob: -11.494397163391113
    7. '(' → logprob: -11.994397163391113
    8. ' )' → logprob: -12.244397163391113
    9. '))' → logprob: -12.994397163391113
    10. '])' → logprob: -13.119397163391113

Token 33: 'EPS' (ID: 82793)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007818726007826626
    2. '
' → logprob: -8.125782012939453
    3. ' for' → logprob: -8.625782012939453
    4. '\n' → logprob: -9.625782012939453
    5. 'n' → logprob: -9.875782012939453
    6. 'r' → logprob: -10.000782012939453
    7. '```' → logprob: -10.125782012939453
    8. 'f' → logprob: -10.500782012939453
    9. 'q' → logprob: -10.875782012939453
    10. '\' → logprob: -11.125782012939453

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048199839890003204
    2. '=' → logprob: -3.1731998920440674
    3. '_' → logprob: -5.423199653625488
    4. ')' → logprob: -8.423199653625488
    5. ' _' → logprob: -8.923199653625488
    6. ' ' → logprob: -8.923199653625488
    7. ' =)' → logprob: -9.423199653625488
    8. ',' → logprob: -9.673199653625488
    9. ' )' → logprob: -10.673199653625488
    10. ' ==' → logprob: -10.798199653625488

Token 35: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11347988247871399
    2. '1' → logprob: -2.2384798526763916
    3. '10' → logprob: -7.363480091094971
    4. '0' → logprob: -10.738479614257812
    5. ' ' → logprob: -13.863479614257812
    6. '>' → logprob: -15.738479614257812
    7. '(' → logprob: -16.363479614257812
    8. '3' → logprob: -16.363479614257812
    9. '100' → logprob: -16.613479614257812
    10. '`' → logprob: -16.738479614257812

Token 36: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18356670439243317
    2. ' ' → logprob: -1.808566689491272
    3. '10' → logprob: -5.683566570281982
    4. '0' → logprob: -7.808566570281982
    5. '3' → logprob: -13.05856704711914
    6. '2' → logprob: -13.93356704711914
    7. '9' → logprob: -14.05856704711914
    8. '(' → logprob: -14.30856704711914
    9. '`' → logprob: -14.55856704711914
    10. ' ' → logprob: -15.05856704711914

Token 37: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -2.546478935983032e-05
    2. ' .' → logprob: -11.250025749206543
    3. '1' → logprob: -12.375025749206543
    4. '<|end|>' → logprob: -13.000025749206543
    5. '0' → logprob: -13.250025749206543
    6. ' ' → logprob: -14.375025749206543
    7. '.\' → logprob: -14.375025749206543
    8. '46' → logprob: -14.375025749206543
    9. '.
' → logprob: -14.500025749206543
    10. '.​' → logprob: -15.375025749206543

Token 38: '001' (ID: 7659)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.33650392293930054
    2. '000' → logprob: -1.3365039825439453
    3. '1' → logprob: -4.336503982543945
    4. '3' → logprob: -5.211503982543945
    5. '00' → logprob: -6.336503982543945
    6. '5' → logprob: -6.336503982543945
    7. '001' → logprob: -7.586503982543945
    8. '6' → logprob: -9.461503982543945
    9. '2' → logprob: -9.586503982543945
    10. '01' → logprob: -9.836503982543945

Token 39: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13153547048568726
    2. 'for' → logprob: -2.881535530090332
    3. '\n' → logprob: -3.381535530090332
    4. '<|end|>' → logprob: -4.756535530090332
    5. '\' → logprob: -5.006535530090332
    6. '' → logprob: -5.131535530090332
    7. ' for' → logprob: -5.506535530090332
    8. ' 
' → logprob: -5.881535530090332
    9. '
' → logprob: -6.006535530090332
    10. '```' → logprob: -6.631535530090332

Token 40: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.029602590948343277
    2. '
' → logprob: -3.654602527618408
    3. '\n' → logprob: -6.029602527618408
    4. ' for' → logprob: -7.654602527618408
    5. '\' → logprob: -8.904603004455566
    6. '```' → logprob: -9.279603004455566
    7. '' → logprob: -9.904603004455566
    8. '<|end|>' → logprob: -10.529603004455566
    9. ' 
' → logprob: -11.279603004455566
    10. '
' → logprob: -11.279603004455566

Token 41: ' dot' (ID: 16579)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.9621515274047852
    2. ' find' → logprob: -1.7121515274047852
    3. ' solve' → logprob: -2.337151527404785
    4. ' check' → logprob: -2.462151527404785
    5. ' bfs' → logprob: -2.712151527404785
    6. ' binary' → logprob: -2.712151527404785
    7. ' is' → logprob: -3.212151527404785
    8. ' distance' → logprob: -4.087151527404785
    9. ' calculate' → logprob: -4.462151527404785
    10. ' compare' → logprob: -5.087151527404785

Token 42: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002740089315921068
    2. ' (' → logprob: -6.252739906311035
    3. '_' → logprob: -8.252739906311035
    4. '_product' → logprob: -8.377739906311035
    5. '(a' → logprob: -8.377739906311035
    6. ' ' → logprob: -11.377739906311035
    7. '(x' → logprob: -11.502739906311035
    8. '('' → logprob: -12.252739906311035
    9. '(g' → logprob: -12.252739906311035
    10. '(product' → logprob: -12.252739906311035

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032509120646864176
    2. ',a' → logprob: -5.878251075744629
    3. ' ,' → logprob: -8.003251075744629
    4. ',b' → logprob: -10.128251075744629
    5. '<|end|>' → logprob: -11.503251075744629
    6. ')' → logprob: -11.628251075744629
    7. ',p' → logprob: -11.753251075744629
    8. 'a' → logprob: -12.128251075744629
    9. ',n' → logprob: -12.128251075744629
    10. '(a' → logprob: -12.253251075744629

Token 44: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6327214241027832
    2. ' b' → logprob: -0.7577214241027832
    3. ',' → logprob: -9.507720947265625
    4. ')' → logprob: -10.882720947265625
    5. ',b' → logprob: -11.632720947265625
    6. ' ' → logprob: -11.757720947265625
    7. ' ,' → logprob: -12.632720947265625
    8. '	b' → logprob: -13.132720947265625
    9. ' )' → logprob: -13.257720947265625
    10. '    ' → logprob: -13.382720947265625

Token 45: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001247016480192542
    2. ')' → logprob: -6.876246929168701
    3. ' ):' → logprob: -9.50124740600586
    4. ',' → logprob: -9.50124740600586
    5. '):
' → logprob: -10.00124740600586
    6. '   ' → logprob: -12.25124740600586
    7. '[]):' → logprob: -12.75124740600586
    8. ']:' → logprob: -13.00124740600586
    9. '):
' → logprob: -13.37624740600586
    10. ']):' → logprob: -13.75124740600586

Token 46: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6887617111206055
    2. '(a' → logprob: -0.9387617111206055
    3. 'a' → logprob: -3.6887617111206055
    4. ':' → logprob: -4.1887617111206055
    5. 'return' → logprob: -4.1887617111206055
    6. '   ' → logprob: -4.3137617111206055
    7. '[' → logprob: -4.4387617111206055
    8. ' return' → logprob: -4.6887617111206055
    9. '[a' → logprob: -4.9387617111206055
    10. '):' → logprob: -5.8137617111206055

Token 47: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5150888562202454
    2. 'return' (adapté à ' return') → logprob: -1.0150887966156006
    3. 'a' → logprob: -4.01508903503418
    4. '   ' → logprob: -4.14008903503418
    5. ' sum' → logprob: -6.39008903503418
    6. 'sum' → logprob: -6.64008903503418
    7. '0' → logprob: -6.76508903503418
    8. ' a' → logprob: -6.89008903503418
    9. ' ' → logprob: -8.01508903503418
    10. 'r' → logprob: -8.39008903503418

Token 48: ' sum' (ID: 4215)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3755418658256531
    2. 'a' → logprob: -1.2505419254302979
    3. ' sum' → logprob: -3.750541925430298
    4. 'sum' → logprob: -5.750541687011719
    5. ' ' → logprob: -11.250541687011719
    6. '(a' → logprob: -11.375541687011719
    7. ' (' → logprob: -12.250541687011719
    8. '   ' → logprob: -12.375541687011719
    9. '(sum' → logprob: -12.375541687011719
    10. ' int' → logprob: -13.000541687011719

Token 49: '([' (ID: 5194)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.46051645278930664
    2. '(' → logprob: -1.3355164527893066
    3. '([' → logprob: -2.8355164527893066
    4. '(x' → logprob: -3.0855164527893066
    5. '(i' → logprob: -7.210516452789307
    6. '(ai' → logprob: -7.585516452789307
    7. 'a' → logprob: -9.085515975952148
    8. '[a' → logprob: -9.710515975952148
    9. ' (' → logprob: -10.210515975952148
    10. ' a' → logprob: -10.335515975952148

Token 50: 'i' (ID: 72)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3110738694667816
    2. 'x' → logprob: -1.561073899269104
    3. 'ai' → logprob: -3.8110737800598145
    4. ' a' → logprob: -3.9360737800598145
    5. ' x' → logprob: -4.4360737800598145
    6. ' ai' → logprob: -5.9360737800598145
    7. '   ' → logprob: -7.3110737800598145
    8. 'i' → logprob: -8.561074256896973
    9. ' ' → logprob: -8.686074256896973
    10. '(x' → logprob: -9.311074256896973

Token 51: ' *' (ID: 425)
  Prédit: '*a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*a' → logprob: -0.3329916298389435
    2. 'a' → logprob: -1.457991600036621
    3. '*' → logprob: -3.207991600036621
    4. ' *' → logprob: -4.957991600036621
    5. '*j' → logprob: -6.582991600036621
    6. '*b' → logprob: -8.207991600036621
    7. '1' → logprob: -8.207991600036621
    8. '*x' → logprob: -8.207991600036621
    9. ' a' → logprob: -8.582991600036621
    10. '*k' → logprob: -8.957991600036621

Token 52: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.014173848554491997
    2. ' j' → logprob: -4.264173984527588
    3. ' ' → logprob: -12.26417350769043
    4. '  ' → logprob: -13.13917350769043
    5. '	j' → logprob: -13.26417350769043
    6. '   ' → logprob: -14.13917350769043
    7. 'b' → logprob: -14.13917350769043
    8. '    ' → logprob: -15.51417350769043
    9. '_j' → logprob: -16.38917350769043
    10. '*j' → logprob: -16.88917350769043

Token 53: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.048676732927560806
    2. 'for' → logprob: -3.0486767292022705
    3. ' ' → logprob: -9.798676490783691
    4. '	for' → logprob: -10.673676490783691
    5. '  ' → logprob: -12.298676490783691
    6. '<|end|>' → logprob: -13.048676490783691
    7. '   ' → logprob: -13.298676490783691
    8. ')' → logprob: -13.923676490783691
    9. ' in' → logprob: -14.423676490783691
    10. '    ' → logprob: -15.298676490783691

Token 54: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.005095476284623146
    2. 'i' → logprob: -5.380095481872559
    3. ' a' → logprob: -8.130095481872559
    4. ' zip' → logprob: -9.880095481872559
    5. 'a' → logprob: -10.005095481872559
    6. ' ' → logprob: -10.380095481872559
    7. '	i' → logprob: -11.005095481872559
    8. ' (' → logprob: -11.005095481872559
    9. '(i' → logprob: -11.755095481872559
    10. ',' → logprob: -13.005095481872559

Token 55: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036353501491248608
    2. ' ,' → logprob: -6.753635406494141
    3. ',b' → logprob: -6.753635406494141
    4. ',j' → logprob: -7.003635406494141
    5. ',i' → logprob: -8.62863540649414
    6. ' in' → logprob: -9.37863540649414
    7. ',a' → logprob: -9.50363540649414
    8. 'a' → logprob: -12.00363540649414
    9. ',d' → logprob: -12.50363540649414
    10. 'i' → logprob: -12.62863540649414

Token 56: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02058054879307747
    2. 'in' → logprob: -3.895580530166626
    3. '<|end|>' → logprob: -10.645580291748047
    4. ',' → logprob: -12.145580291748047
    5. ' ' → logprob: -12.395580291748047
    6. '<|end|>' → logprob: -13.520580291748047
    7. 'a' → logprob: -14.145580291748047
    8. ')' → logprob: -14.708080291748047
    9. ']' → logprob: -14.708080291748047
    10. 's' → logprob: -15.583080291748047

Token 57: ' zip' (ID: 16216)
  Prédit: ' zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zip' → logprob: -0.001521526137366891
    2. 'zip' → logprob: -6.501521587371826
    3. '(zip' → logprob: -10.876521110534668
    4. '.zip' → logprob: -15.501521110534668
    5. ' ' → logprob: -16.876522064208984
    6. '_zip' → logprob: -19.001522064208984
    7. ' z' → logprob: -19.376522064208984
    8. '  ' → logprob: -19.876522064208984
    9. '   ' → logprob: -20.001522064208984
    10. ')' → logprob: -20.001522064208984

Token 58: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0001410850090906024
    2. '(' → logprob: -8.875141143798828
    3. ' (' → logprob: -14.625141143798828
    4. 'a' → logprob: -14.875141143798828
    5. '<|end|>' → logprob: -15.250141143798828
    6. '(
' → logprob: -17.125141143798828
    7. '(b' → logprob: -17.375141143798828
    8. '(n' → logprob: -17.500141143798828
    9. '(A' → logprob: -17.500141143798828
    10. '(ai' → logprob: -17.875141143798828

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2357388734817505
    2. ',b' → logprob: -1.6107388734817505
    3. ' ,' → logprob: -4.610738754272461
    4. ' b' → logprob: -8.610738754272461
    5. 'b' → logprob: -8.860738754272461
    6. ' ' → logprob: -13.735738754272461
    7. ')' → logprob: -13.860738754272461
    8. ',
' → logprob: -14.485738754272461
    9. ' )' → logprob: -14.735738754272461
    10. ')]' → logprob: -15.735738754272461

Token 60: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.6326155662536621
    2. 'b' → logprob: -0.7576155662536621
    3. '    ' → logprob: -12.25761604309082
    4. ' ' → logprob: -12.63261604309082
    5. ')b' → logprob: -12.63261604309082
    6. ')' → logprob: -13.82011604309082
    7. '   ' → logprob: -13.88261604309082
    8. '	b' → logprob: -14.50761604309082
    9. '  ' → logprob: -15.07011604309082
    10. ',b' → logprob: -15.19511604309082

Token 61: ')])
' (ID: 66560)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.0009588662651367486
    2. ')' → logprob: -7.1259589195251465
    3. ')]' → logprob: -8.875958442687988
    4. ')])
' → logprob: -11.750958442687988
    5. '])' → logprob: -12.750958442687988
    6. ')])

' → logprob: -12.875958442687988
    7. '   ' → logprob: -15.375958442687988
    8. '])]' → logprob: -15.500958442687988
    9. '))' → logprob: -15.625958442687988
    10. ')],' → logprob: -15.625958442687988

Token 62: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1547340750694275
    2. '
' → logprob: -2.0297341346740723
    3. ')' → logprob: -5.904734134674072
    4. '    
' → logprob: -6.279734134674072
    5. ' 
' → logprob: -6.654734134674072
    6. ')
' → logprob: -6.904734134674072
    7. '<|end|>' → logprob: -7.529734134674072
    8. '\' → logprob: -7.779734134674072
    9. '  
' → logprob: -7.779734134674072
    10. '\n' → logprob: -7.904734134674072

Token 63: ' sub' (ID: 1543)
  Prédit: ' cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cross' → logprob: -0.052723947912454605
    2. ' norm' → logprob: -3.5527238845825195
    3. ' length' → logprob: -4.9277238845825195
    4. ' vector' → logprob: -5.9277238845825195
    5. ' distance' → logprob: -6.0527238845825195
    6. ' sub' → logprob: -6.3027238845825195
    7. ' normalize' → logprob: -6.4277238845825195
    8. ' main' → logprob: -7.1777238845825195
    9. ' subtract' → logprob: -7.3027238845825195
    10. 'norm' → logprob: -7.4277238845825195

Token 64: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.010001848451793194
    2. '(' → logprob: -4.6350016593933105
    3. '<|end|>' → logprob: -8.510002136230469
    4. 'stract' → logprob: -11.885002136230469
    5. 'a' → logprob: -12.010002136230469
    6. '<|end|>' → logprob: -12.135002136230469
    7. '(
' → logprob: -12.260002136230469
    8. '(A' → logprob: -12.385002136230469
    9. '((' → logprob: -12.760002136230469
    10. ' (' → logprob: -13.010002136230469

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012963043991476297
    2. ',a' → logprob: -6.751296520233154
    3. ' ,' → logprob: -9.501296043395996
    4. '(a' → logprob: -10.251296043395996
    5. ',b' → logprob: -11.626296043395996
    6. '<|end|>' → logprob: -13.501296043395996
    7. 'a' → logprob: -13.626296043395996
    8. '(' → logprob: -13.876296043395996
    9. ',

' → logprob: -14.626296043395996
    10. ',A' → logprob: -15.001296043395996

Token 66: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.47408756613731384
    2. 'b' → logprob: -0.9740875959396362
    3. ' ' → logprob: -12.849087715148926
    4. ',b' → logprob: -13.099087715148926
    5. 'a' → logprob: -13.224087715148926
    6. ' a' → logprob: -13.474087715148926
    7. ',' → logprob: -14.349087715148926
    8. '<|end|>' → logprob: -14.849087715148926
    9. '	b' → logprob: -15.099087715148926
    10. '    ' → logprob: -15.224087715148926

Token 67: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -3.91732100979425e-05
    2. '):
' → logprob: -10.625039100646973
    3. ')' → logprob: -11.250039100646973
    4. ']:' → logprob: -14.750039100646973
    5. ' ):' → logprob: -15.125039100646973
    6. '):
' → logprob: -15.625039100646973
    7. '):

' → logprob: -15.750039100646973
    8. ':' → logprob: -16.00004005432129
    9. ']):' → logprob: -16.00004005432129
    10. ')):' → logprob: -16.25004005432129

Token 68: '   ' (ID: 271)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.11914390325546265
    2. '[' → logprob: -2.6191439628601074
    3. ' [' → logprob: -3.3691439628601074
    4. '[i' → logprob: -5.744143962860107
    5. '   ' → logprob: -7.119143962860107
    6. '[
' → logprob: -7.869143962860107
    7. ' return' → logprob: -8.86914348602295
    8. '[n' → logprob: -10.11914348602295
    9. 'a' → logprob: -10.24414348602295
    10. '[array' → logprob: -10.49414348602295

Token 69: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31583407521247864
    2. '[a' → logprob: -1.3158340454101562
    3. ' [' → logprob: -6.190834045410156
    4. '[
' → logprob: -7.940834045410156
    5. '[i' → logprob: -9.565834045410156
    6. 'a' → logprob: -10.065834045410156
    7. '['' → logprob: -11.315834045410156
    8. 'return' (adapté à ' return') → logprob: -11.690834045410156
    9. '[:]' → logprob: -12.565834045410156
    10. '[]' → logprob: -12.940834045410156

Token 70: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6391146183013916
    2. '[a' → logprob: -1.1391146183013916
    3. '[' → logprob: -1.8891146183013916
    4. '[i' → logprob: -7.0141143798828125
    5. '[j' → logprob: -11.889114379882812
    6. '[n' → logprob: -11.889114379882812
    7. '[list' → logprob: -12.264114379882812
    8. '[len' → logprob: -13.264114379882812
    9. '[m' → logprob: -13.514114379882812
    10. 'a' → logprob: -13.639114379882812

Token 71: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6202946305274963
    2. 'i' → logprob: -1.3702945709228516
    3. 'x' → logprob: -1.6202945709228516
    4. 'ai' → logprob: -5.120294570922852
    5. ' a' → logprob: -6.245294570922852
    6. ' i' → logprob: -6.495294570922852
    7. ' x' → logprob: -7.120294570922852
    8. ' ai' → logprob: -9.495294570922852
    9. 'u' → logprob: -11.495294570922852
    10. '   ' → logprob: -11.870294570922852

Token 72: '[' (ID: 58)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0012776151997968554
    2. 'i' → logprob: -6.751277446746826
    3. '_i' → logprob: -9.876277923583984
    4. '[' → logprob: -10.501277923583984
    5. '[j' → logprob: -10.876277923583984
    6. '-' → logprob: -12.126277923583984
    7. '[idx' → logprob: -13.876277923583984
    8. '[x' → logprob: -14.001277923583984
    9. '[index' → logprob: -14.251277923583984
    10. '[k' → logprob: -14.251277923583984

Token 73: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00029601677670143545
    2. 'k' → logprob: -8.500295639038086
    3. 'x' → logprob: -9.875295639038086
    4. '0' → logprob: -10.500295639038086
    5. '_i' → logprob: -11.875295639038086
    6. '[i' → logprob: -12.375295639038086
    7. 'idx' → logprob: -14.000295639038086
    8. ' i' → logprob: -14.625295639038086
    9. 'j' → logprob: -14.875295639038086
    10. 'd' → logprob: -14.875295639038086

Token 74: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.016465267166495323
    2. ' -' → logprob: -4.641465187072754
    3. '[' → logprob: -5.391465187072754
    4. ']' → logprob: -6.766465187072754
    5. '[i' → logprob: -7.516465187072754
    6. ']-' → logprob: -7.891465187072754
    7. '-i' → logprob: -11.141465187072754
    8. 'i' → logprob: -11.266465187072754
    9. ' ' → logprob: -11.516465187072754
    10. '0' → logprob: -12.891465187072754

Token 75: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.012514598667621613
    2. ' -' → logprob: -4.387514591217041
    3. '-i' → logprob: -13.0125150680542
    4. '-b' → logprob: -13.1375150680542
    5. '[' → logprob: -15.5125150680542
    6. ' ' → logprob: -15.6375150680542
    7. '−' → logprob: -17.137514114379883
    8. ' ' → logprob: -17.387514114379883
    9. '-x' → logprob: -17.637514114379883
    10. '-a' → logprob: -18.012514114379883

Token 76: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06196768581867218
    2. ' b' → logprob: -2.811967611312866
    3. '	b' → logprob: -16.811967849731445
    4. '   ' → logprob: -17.186967849731445
    5. ' ' → logprob: -17.436967849731445
    6. ')b' → logprob: -19.061967849731445
    7. '  ' → logprob: -19.186967849731445
    8. ' б' → logprob: -20.436967849731445
    9. '    ' → logprob: -21.436967849731445
    10. '>b' → logprob: -21.561967849731445

Token 77: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '0' → logprob: -16.75
    3. '[i' → logprob: -17.5
    4. ']' → logprob: -18.75
    5. '1' → logprob: -19.75
    6. ' [' → logprob: -20.0
    7. '[index' → logprob: -20.375
    8. '```' → logprob: -20.375
    9. '[x' → logprob: -20.5
    10. '(' → logprob: -20.5

Token 78: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.750004768371582
    3. '[' → logprob: -13.750004768371582
    4. '1' → logprob: -14.625004768371582
    5. ']' → logprob: -15.875004768371582
    6. '۰' → logprob: -17.1250057220459
    7. '])' → logprob: -17.3750057220459
    8. '   ' → logprob: -17.8750057220459
    9. ')' → logprob: -18.0000057220459
    10. 'i' → logprob: -18.0000057220459

Token 79: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6950464248657227
    2. ']' → logprob: -0.6950464248657227
    3. ')]' → logprob: -7.195046424865723
    4. '],' → logprob: -8.070046424865723
    5. '])' → logprob: -8.445046424865723
    6. ' ]' → logprob: -8.570046424865723
    7. ' ,' → logprob: -9.320046424865723
    8. ')' → logprob: -9.445046424865723
    9. ']]' → logprob: -9.945046424865723
    10. '   ' → logprob: -10.070046424865723

Token 80: 'a' (ID: 64)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.25193077325820923
    2. 'a' → logprob: -1.5019307136535645
    3. ' ' → logprob: -13.751931190490723
    4. '	a' → logprob: -14.876931190490723
    5. ' ' → logprob: -15.251931190490723
    6. '    ' → logprob: -17.376930236816406
    7. ' b' → logprob: -17.501930236816406
    8. 'b' → logprob: -17.751930236816406
    9. ' g' → logprob: -18.376930236816406
    10. '   ' → logprob: -18.501930236816406

Token 81: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.981667537620524e-06
    2. '1' → logprob: -14.000001907348633
    3. '[
' → logprob: -14.375001907348633
    4. ' [' → logprob: -16.250001907348633
    5. ' ' → logprob: -16.375001907348633
    6. '0' → logprob: -16.375001907348633
    7. '<|end|>' → logprob: -16.750001907348633
    8. ']' → logprob: -17.500001907348633
    9. '```' → logprob: -18.500001907348633
    10. '][' → logprob: -18.625001907348633

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0018058452988043427
    2. '0' → logprob: -6.376805782318115
    3. '[' → logprob: -9.376806259155273
    4. ' ' → logprob: -11.251806259155273
    5. ']' → logprob: -12.626806259155273
    6. '<|end|>' → logprob: -14.251806259155273
    7. '   ' → logprob: -14.876806259155273
    8. '-' → logprob: -14.876806259155273
    9. '  ' → logprob: -15.001806259155273
    10. ')' → logprob: -15.376806259155273

Token 83: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04165586456656456
    2. '-' → logprob: -3.4166557788848877
    3. ']' → logprob: -5.041656017303467
    4. '[' → logprob: -7.291656017303467
    5. ' ' → logprob: -7.416656017303467
    6. ' ]' → logprob: -8.916655540466309
    7. '<|end|>' → logprob: -10.041655540466309
    8. ')' → logprob: -10.166655540466309
    9. ']-' → logprob: -12.916655540466309
    10. '<|end|>' → logprob: -13.416655540466309

Token 84: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.008783325552940369
    2. '-' → logprob: -4.758783340454102
    3. '[' → logprob: -9.633783340454102
    4. ' ' → logprob: -9.883783340454102
    5. '<|end|>' → logprob: -10.383783340454102
    6. ']' → logprob: -11.383783340454102
    7. ')' → logprob: -12.758783340454102
    8. ' ]' → logprob: -13.383783340454102
    9. ' -
' → logprob: -13.508783340454102
    10. '<|end|>' → logprob: -13.883783340454102

Token 85: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.3868715465068817
    2. 'b' → logprob: -1.136871576309204
    3. ' ' → logprob: -14.636871337890625
    4. '	b' → logprob: -17.386871337890625
    5. ')b' → logprob: -18.511871337890625
    6. '<|end|>' → logprob: -19.261871337890625
    7. '>b' → logprob: -19.636871337890625
    8. ' б' → logprob: -20.511871337890625
    9. ' a' → logprob: -20.886871337890625
    10. '  ' → logprob: -21.136871337890625

Token 86: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009039574069902301
    2. '1' → logprob: -7.500904083251953
    3. ']' → logprob: -8.250904083251953
    4. '0' → logprob: -10.375904083251953
    5. '[
' → logprob: -10.625904083251953
    6. '][' → logprob: -11.000904083251953
    7. ' [' → logprob: -11.500904083251953
    8. ' ' → logprob: -12.875904083251953
    9. '```' → logprob: -14.000904083251953
    10. '<|end|>' → logprob: -14.125904083251953

Token 87: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003951648832298815
    2. '0' → logprob: -8.000394821166992
    3. '[' → logprob: -10.375394821166992
    4. ' ' → logprob: -10.625394821166992
    5. '])' → logprob: -13.000394821166992
    6. ']' → logprob: -13.500394821166992
    7. '   ' → logprob: -15.875394821166992
    8. ']])' → logprob: -16.250394821166992
    9. '-' → logprob: -17.000394821166992
    10. '```' → logprob: -17.062894821166992

Token 88: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00045902872807346284
    2. ')]' → logprob: -8.000458717346191
    3. ' ]' → logprob: -9.500458717346191
    4. '])' → logprob: -10.125458717346191
    5. '}]' → logprob: -13.000458717346191
    6. ']}' → logprob: -13.500458717346191
    7. ']]' → logprob: -13.750458717346191
    8. '`]' → logprob: -14.125458717346191
    9. '])]' → logprob: -14.375458717346191
    10. '']' → logprob: -14.375458717346191

Token 89: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0011031834874302149
    2. '
' → logprob: -7.251103401184082
    3. 'd' → logprob: -8.251103401184082
    4. '```' → logprob: -10.251103401184082
    5. '  
' → logprob: -10.501103401184082
    6. ' 
' → logprob: -11.001103401184082
    7. '#' → logprob: -11.501103401184082
    8. '    
' → logprob: -11.751103401184082
    9. ' def' → logprob: -12.376103401184082
    10. ')' → logprob: -12.626103401184082

Token 90: ' cross' (ID: 8088)
  Prédit: ' cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cross' → logprob: -0.09340041875839233
    2. ' orientation' → logprob: -3.968400478363037
    3. ' length' → logprob: -4.093400478363037
    4. ' dist' → logprob: -4.218400478363037
    5. 'cross' → logprob: -4.718400478363037
    6. ' on' → logprob: -5.093400478363037
    7. ' is' → logprob: -5.218400478363037
    8. ' norm' → logprob: -5.968400478363037
    9. ' line' → logprob: -6.093400478363037
    10. ' cc' → logprob: -6.593400478363037

Token 91: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.07903607934713364
    2. '(' → logprob: -2.579035997390747
    3. '_' → logprob: -9.579035758972168
    4. '<|end|>' → logprob: -10.454035758972168
    5. '(A' → logprob: -10.579035758972168
    6. ' (' → logprob: -11.454035758972168
    7. '((' → logprob: -12.829035758972168
    8. '(
' → logprob: -13.204035758972168
    9. '<|end|>' → logprob: -13.204035758972168
    10. '(_' → logprob: -14.329035758972168

Token 92: ',' (ID: 11)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.006809157319366932
    2. ',' → logprob: -5.631809234619141
    3. '(' → logprob: -5.881809234619141
    4. '<|end|>' → logprob: -8.00680923461914
    5. ')' → logprob: -10.00680923461914
    6. ' (' → logprob: -11.50680923461914
    7. 'a' → logprob: -12.13180923461914
    8. '<|end|>' → logprob: -12.25680923461914
    9. '(A' → logprob: -12.38180923461914
    10. '[' → logprob: -13.38180923461914

Token 93: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5246652364730835
    2. ' b' → logprob: -0.8996652364730835
    3. 'a' → logprob: -7.524665355682373
    4. ' a' → logprob: -7.649665355682373
    5. '<|end|>' → logprob: -7.774665355682373
    6. ' ' → logprob: -9.274664878845215
    7. ' ' → logprob: -12.899664878845215
    8. ')' → logprob: -12.899664878845215
    9. '(a' → logprob: -13.774664878845215
    10. '(b' → logprob: -13.774664878845215

Token 94: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -5.1928003813372925e-05
    2. '):
' → logprob: -10.125051498413086
    3. ')' → logprob: -11.750051498413086
    4. ']:' → logprob: -13.625051498413086
    5. '(a' → logprob: -14.250051498413086
    6. ' ):' → logprob: -14.375051498413086
    7. '[' → logprob: -15.125051498413086
    8. ',' → logprob: -15.125051498413086
    9. '):

' → logprob: -15.125051498413086
    10. ':' → logprob: -15.500051498413086

Token 95: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5262227058410645
    2. ' a' → logprob: -0.9012227058410645
    3. '   ' → logprob: -6.0262227058410645
    4. ' return' → logprob: -7.6512227058410645
    5. '(a' → logprob: -9.526222229003906
    6. 'return' → logprob: -9.776222229003906
    7. ' =' → logprob: -11.276222229003906
    8. '	a' → logprob: -11.276222229003906
    9. '[a' → logprob: -11.526222229003906
    10. ' (' → logprob: -12.026222229003906

Token 96: ' return' (ID: 622)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5761238932609558
    2. ' a' → logprob: -0.8261238932609558
    3. '[a' → logprob: -9.95112419128418
    4. '   ' → logprob: -10.57612419128418
    5. ' return' → logprob: -10.57612419128418
    6. '[' → logprob: -10.70112419128418
    7. ' [' → logprob: -10.82612419128418
    8. 'return' (adapté à ' return') → logprob: -10.95112419128418
    9. '[
' → logprob: -11.45112419128418
    10. '0' → logprob: -12.45112419128418

Token 97: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6931503415107727
    2. ' a' → logprob: -0.6931503415107727
    3. '	a' → logprob: -13.693150520324707
    4. '(a' → logprob: -14.193150520324707
    5. '   ' → logprob: -14.318150520324707
    6. ' (' → logprob: -14.568150520324707
    7. ' ' → logprob: -16.69314956665039
    8. '[a' → logprob: -16.81814956665039
    9. '  ' → logprob: -17.69314956665039
    10. '0' → logprob: -17.69314956665039

Token 98: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.0484450437361374e-05
    2. ' a' → logprob: -10.125040054321289
    3. '   ' → logprob: -15.750040054321289
    4. '(a' → logprob: -16.37504005432129
    5. '[a' → logprob: -16.62504005432129
    6. '	a' → logprob: -17.87504005432129
    7. '0' → logprob: -18.87504005432129
    8. ' ' → logprob: -19.75004005432129
    9. '[' → logprob: -19.75004005432129
    10. '  ' → logprob: -20.37504005432129

Token 99: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.088346359931165e-07
    2. '0' → logprob: -14.375000953674316
    3. '[
' → logprob: -15.750000953674316
    4. '1' → logprob: -16.875
    5. 'a' → logprob: -17.125
    6. ' [' → logprob: -17.625
    7. 'x' → logprob: -18.125
    8. '
' → logprob: -18.5
    9. '```' → logprob: -19.5
    10. '#' → logprob: -19.8125

Token 100: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7432603272027336e-06
    2. '1' → logprob: -13.625001907348633
    3. '[' → logprob: -14.750001907348633
    4. ' ' → logprob: -16.750001907348633
    5. '۰' → logprob: -17.062501907348633
    6. '```' → logprob: -17.625001907348633
    7. 'a' → logprob: -17.750001907348633
    8. '０' → logprob: -18.687501907348633
    9. '
' → logprob: -18.687501907348633
    10. '   ' → logprob: -19.062501907348633

Token 101: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.38718461990356445
    2. '*' → logprob: -1.1371846199035645
    3. '*b' → logprob: -8.137184143066406
    4. '**' → logprob: -12.137184143066406
    5. ' ' → logprob: -12.637184143066406
    6. ' ' → logprob: -13.012184143066406
    7. ']*' → logprob: -13.012184143066406
    8. ')*' → logprob: -13.512184143066406
    9. ' **' → logprob: -13.637184143066406
    10. '*y' → logprob: -13.887184143066406

Token 102: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.06251811236143112
    2. '*b' → logprob: -2.8125181198120117
    3. ' *' → logprob: -8.187518119812012
    4. '*j' → logprob: -8.937518119812012
    5. '**' → logprob: -9.187518119812012
    6. '*q' → logprob: -11.437518119812012
    7. '*y' → logprob: -11.937518119812012
    8. '*a' → logprob: -12.562518119812012
    9. '*g' → logprob: -12.562518119812012
    10. '*v' → logprob: -12.687518119812012

Token 103: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.0206720617134124e-05
    2. ' b' → logprob: -11.50001049041748
    3. ' ' → logprob: -19.500009536743164
    4. '   ' → logprob: -19.750009536743164
    5. '  ' → logprob: -19.875009536743164
    6. '	b' → logprob: -20.375009536743164
    7. ')b' → logprob: -21.000009536743164
    8. '*b' → logprob: -22.500009536743164
    9. '>b' → logprob: -23.250009536743164
    10. '    ' → logprob: -23.750009536743164

Token 104: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1279553291387856e-05
    2. '1' → logprob: -11.500011444091797
    3. ' [' → logprob: -13.875011444091797
    4. '```' → logprob: -16.125011444091797
    5. '[
' → logprob: -17.500011444091797
    6. ''[' → logprob: -19.250011444091797
    7. '`' → logprob: -19.500011444091797
    8. ' ' → logprob: -19.750011444091797
    9. '.' → logprob: -20.000011444091797
    10. '\[' → logprob: -20.000011444091797

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '[' → logprob: -17.75
    4. '```' → logprob: -18.625
    5. ']' → logprob: -19.125
    6. '
' → logprob: -19.75
    7. '0' → logprob: -19.75
    8. '   ' → logprob: -20.25
    9. '

' → logprob: -20.5625
    10. '  ' → logprob: -21.0

Token 106: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05490710586309433
    2. '-' → logprob: -2.9299070835113525
    3. ' ' → logprob: -10.679906845092773
    4. '  ' → logprob: -14.179906845092773
    5. ' ' → logprob: -14.554906845092773
    6. '   ' → logprob: -15.179906845092773
    7. '-a' → logprob: -16.429906845092773
    8. '```' → logprob: -16.679906845092773
    9. ' -
' → logprob: -17.179906845092773
    10. ')' → logprob: -17.179906845092773

Token 107: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4740842282772064
    2. '-' → logprob: -0.9740842580795288
    3. ' ' → logprob: -12.09908390045166
    4. '  ' → logprob: -14.09908390045166
    5. ' ' → logprob: -14.84908390045166
    6. '   ' → logprob: -15.97408390045166
    7. '```' → logprob: -16.349084854125977
    8. '-a' → logprob: -16.599084854125977
    9. ' -
' → logprob: -17.099084854125977
    10. '−' → logprob: -17.099084854125977

Token 108: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2519453763961792
    2. ' a' → logprob: -1.5019453763961792
    3. 'b' → logprob: -11.626945495605469
    4. ' b' → logprob: -12.251945495605469
    5. '	a' → logprob: -13.126945495605469
    6. ' ' → logprob: -14.376945495605469
    7. '<|end|>' → logprob: -17.75194549560547
    8. '(a' → logprob: -18.62694549560547
    9. '#a' → logprob: -19.25194549560547
    10. '  ' → logprob: -19.25194549560547

Token 109: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. '0' → logprob: -15.000000953674316
    3. '[
' → logprob: -15.625000953674316
    4. '1' → logprob: -16.125001907348633
    5. ' [' → logprob: -16.125001907348633
    6. ' ' → logprob: -16.625001907348633
    7. '.' → logprob: -17.000001907348633
    8. ''[' → logprob: -17.250001907348633
    9. '```' → logprob: -17.500001907348633
    10. 'b' → logprob: -18.500001907348633

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02672543004155159
    2. '0' → logprob: -3.6517255306243896
    3. '[' → logprob: -8.026725769042969
    4. ' ' → logprob: -9.901725769042969
    5. '<|end|>' → logprob: -10.401725769042969
    6. 'b' → logprob: -12.151725769042969
    7. '<|end|>' → logprob: -12.526725769042969
    8. '```' → logprob: -12.776725769042969
    9. '(' → logprob: -13.151725769042969
    10. ']' → logprob: -14.151725769042969

Token 111: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2092946469783783
    2. ' *' → logprob: -2.084294557571411
    3. ']' → logprob: -3.084294557571411
    4. '<|end|>' → logprob: -4.70929479598999
    5. '[' → logprob: -4.95929479598999
    6. '}' → logprob: -6.83429479598999
    7. ']*' → logprob: -7.20929479598999
    8. '*[' → logprob: -8.459294319152832
    9. ')' → logprob: -8.834294319152832
    10. ' ' → logprob: -9.334294319152832

Token 112: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6352792978286743
    2. ' *' → logprob: -0.7602792978286743
    3. ' ' → logprob: -6.635279178619385
    4. 'b' → logprob: -7.385279178619385
    5. '[' → logprob: -8.010279655456543
    6. '*b' → logprob: -8.010279655456543
    7. ' b' → logprob: -10.510279655456543
    8. '0' → logprob: -10.760279655456543
    9. '*[' → logprob: -11.510279655456543
    10. '`' → logprob: -12.010279655456543

Token 113: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0067154900170862675
    2. ' b' → logprob: -5.006715297698975
    3. ' ' → logprob: -16.131715774536133
    4. '	b' → logprob: -18.631715774536133
    5. ')b' → logprob: -19.256715774536133
    6. '  ' → logprob: -20.631715774536133
    7. '*b' → logprob: -21.631715774536133
    8. ' б' → logprob: -22.006715774536133
    9. '   ' → logprob: -22.381715774536133
    10. 'a' → logprob: -22.381715774536133

Token 114: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00043555660522542894
    2. '0' → logprob: -7.7504353523254395
    3. '][' → logprob: -13.500435829162598
    4. '[
' → logprob: -13.500435829162598
    5. ']' → logprob: -14.625435829162598
    6. ' [' → logprob: -14.625435829162598
    7. '```' → logprob: -14.750435829162598
    8. '\[' → logprob: -15.500435829162598
    9. '1' → logprob: -15.750435829162598
    10. ' ' → logprob: -16.12543487548828

Token 115: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.500003814697266
    3. '[' → logprob: -16.000003814697266
    4. '1' → logprob: -17.125003814697266
    5. '   ' → logprob: -17.500003814697266
    6. '۰' → logprob: -17.750003814697266
    7. ']' → logprob: -18.062503814697266
    8. '<|end|>' → logprob: -18.687503814697266
    9. '```' → logprob: -19.187503814697266
    10. '  ' → logprob: -19.312503814697266

Token 116: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006572735728695989
    2. ']' → logprob: -7.625657081604004
    3. '<|end|>' → logprob: -9.125657081604004
    4. '}' → logprob: -10.375657081604004
    5. '])' → logprob: -11.375657081604004
    6. '<|end|>' → logprob: -12.750657081604004
    7. '   ' → logprob: -13.375657081604004
    8. '))' → logprob: -13.375657081604004
    9. ')}' → logprob: -13.375657081604004
    10. ')]' → logprob: -13.625657081604004

Token 117: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0011571277864277363
    2. '
' → logprob: -7.001157283782959
    3. 'for' → logprob: -9.0011568069458
    4. '\' → logprob: -10.7511568069458
    5. '  
' → logprob: -10.7511568069458
    6. '```' → logprob: -10.8761568069458
    7. 'p' → logprob: -11.7511568069458
    8. '    
' → logprob: -11.8761568069458
    9. ' 
' → logprob: -11.8761568069458
    10. '#' → logprob: -12.0011568069458

Token 118: ' contains' (ID: 8895)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.2935473918914795
    2. ' orientation' → logprob: -1.4185473918914795
    3. ' is' → logprob: -1.7935473918914795
    4. ' point' → logprob: -2.2935473918914795
    5. ' area' → logprob: -3.1685473918914795
    6. ' cc' → logprob: -3.4185473918914795
    7. ' inside' → logprob: -3.6685473918914795
    8. ' check' → logprob: -3.7935473918914795
    9. ' line' → logprob: -4.043547630310059
    10. ' intersect' → logprob: -4.918547630310059

Token 119: '(g' (ID: 7791)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.5862880349159241
    2. '(' → logprob: -1.4612879753112793
    3. '(point' → logprob: -2.0862879753112793
    4. '(a' → logprob: -2.7112879753112793
    5. '(g' → logprob: -5.586287975311279
    6. '(points' → logprob: -5.836287975311279
    7. '(line' → logprob: -5.836287975311279
    8. '(poly' → logprob: -5.836287975311279
    9. '(P' → logprob: -6.211287975311279
    10. '_point' → logprob: -6.336287975311279

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005070687271654606
    2. ',g' → logprob: -5.380070686340332
    3. ',p' → logprob: -8.505070686340332
    4. ' ,' → logprob: -8.630070686340332
    5. '[' → logprob: -11.505070686340332
    6. ',a' → logprob: -11.755070686340332
    7. 'g' → logprob: -11.755070686340332
    8. ')' → logprob: -12.005070686340332
    9. ',P' → logprob: -12.255070686340332
    10. ',s' → logprob: -12.755070686340332

Token 121: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.06342813372612
    2. ' p' → logprob: -2.8134281635284424
    3. 'point' → logprob: -6.938427925109863
    4. ' point' → logprob: -8.313427925109863
    5. 'x' → logprob: -9.313427925109863
    6. 'pt' → logprob: -9.438427925109863
    7. 'i' → logprob: -11.313427925109863
    8. ' pt' → logprob: -11.438427925109863
    9. 'a' → logprob: -11.688427925109863
    10. 'P' → logprob: -11.688427925109863

Token 122: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07022663205862045
    2. ',' → logprob: -2.6952266693115234
    3. ')' → logprob: -8.820226669311523
    4. ',p' → logprob: -9.695226669311523
    5. '):
' → logprob: -9.945226669311523
    6. ' ):' → logprob: -11.070226669311523
    7. ':' → logprob: -12.695226669311523
    8. ']:' → logprob: -12.945226669311523
    9. '[]):' → logprob: -13.195226669311523
    10. ' ,' → logprob: -13.195226669311523

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001720996224321425
    2. ':' → logprob: -7.626720905303955
    3. ' for' → logprob: -7.751720905303955
    4. '    
' → logprob: -8.376721382141113
    5. '<|end|>' → logprob: -8.501721382141113
    6. ',' → logprob: -8.501721382141113
    7. '
' → logprob: -11.126721382141113
    8. ' return' → logprob: -11.376721382141113
    9. '    ' → logprob: -11.564221382141113
    10. '  ' → logprob: -11.626721382141113

Token 124: ' x' (ID: 1215)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5350610613822937
    2. ' l' → logprob: -1.2850611209869385
    3. 'n' → logprob: -3.2850611209869385
    4. ' n' → logprob: -4.035060882568359
    5. 'for' → logprob: -4.035060882568359
    6. ' for' → logprob: -4.285060882568359
    7. 'left' → logprob: -5.035060882568359
    8. ' left' → logprob: -5.035060882568359
    9. '   ' → logprob: -5.285060882568359
    10. ' prev' → logprob: -5.410060882568359

Token 125: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030128218233585358
    2. '=' → logprob: -4.155128002166748
    3. ' =' → logprob: -4.530128002166748
    4. ',y' → logprob: -6.155128002166748
    5. ',p' → logprob: -7.530128002166748
    6. ')' → logprob: -8.405128479003906
    7. '=len' → logprob: -9.780128479003906
    8. '=p' → logprob: -10.030128479003906
    9. ',g' → logprob: -10.655128479003906
    10. '<|end|>' → logprob: -10.905128479003906

Token 126: ' False' (ID: 7983)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.05045192316174507
    2. ' p' → logprob: -3.0504519939422607
    3. '0' → logprob: -6.550451755523682
    4. ' ' → logprob: -8.80045223236084
    5. '[' → logprob: -8.92545223236084
    6. ' [' → logprob: -9.92545223236084
    7. '[p' → logprob: -9.92545223236084
    8. '[]' → logprob: -11.05045223236084
    9. 'len' → logprob: -11.42545223236084
    10. '  ' → logprob: -12.30045223236084

Token 127: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 128: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010665638372302055
    2. ' for' → logprob: -5.260665416717529
    3. ' ' → logprob: -6.260665416717529
    4. '<|end|>' → logprob: -6.260665416717529
    5. '    
' → logprob: -7.510665416717529
    6. '    ' → logprob: -8.385665893554688
    7. ',' → logprob: -8.385665893554688
    8. '  ' → logprob: -8.760665893554688
    9. ' 
' → logprob: -9.135665893554688
    10. 'for' → logprob: -9.635665893554688

Token 129: ' for' (ID: 395)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5670327544212341
    2. 'for' (adapté à ' for') → logprob: -1.692032814025879
    3. '   ' → logprob: -2.192032814025879
    4. ' j' → logprob: -2.692032814025879
    5. 'n' → logprob: -3.817032814025879
    6. ' for' → logprob: -4.192032814025879
    7. 'y' → logprob: -4.192032814025879
    8. 'px' → logprob: -5.442032814025879
    9. 'l' → logprob: -5.692032814025879
    10. 'jx' → logprob: -6.192032814025879

Token 130: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10054361820220947
    2. ' i' → logprob: -2.35054349899292
    3. ' ' → logprob: -8.975543975830078
    4. 'j' → logprob: -8.975543975830078
    5. 'range' → logprob: -10.600543975830078
    6. '[i' → logprob: -11.100543975830078
    7. ' j' → logprob: -11.100543975830078
    8. '	i' → logprob: -11.600543975830078
    9. ' range' → logprob: -12.100543975830078
    10. '  ' → logprob: -12.725543975830078

Token 131: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04918256402015686
    2. 'in' → logprob: -3.299182653427124
    3. ',' → logprob: -4.549182415008545
    4. ' ' → logprob: -8.049182891845703
    5. ' ,' → logprob: -8.799182891845703
    6. '  ' → logprob: -11.549182891845703
    7. '_,' → logprob: -11.674182891845703
    8. 'n' → logprob: -13.174182891845703
    9. '	in' → logprob: -13.174182891845703
    10. '0' → logprob: -13.549182891845703

Token 132: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12693093717098236
    2. ' range' → logprob: -2.1269309520721436
    3. ' ' → logprob: -13.251931190490723
    4. '(range' → logprob: -14.626931190490723
    5. '  ' → logprob: -15.501931190490723
    6. '   ' → logprob: -15.876931190490723
    7. ' xrange' → logprob: -16.251930236816406
    8. 'g' → logprob: -16.501930236816406
    9. '	range' → logprob: -16.501930236816406
    10. '[' → logprob: -17.501930236816406

Token 133: '(n' (ID: 2406)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.004345617722719908
    2. 'len' → logprob: -6.254345417022705
    3. '(n' → logprob: -6.379345417022705
    4. ' len' → logprob: -7.754345417022705
    5. '(' → logprob: -8.254345893859863
    6. 'n' → logprob: -11.129345893859863
    7. ' (' → logprob: -12.004345893859863
    8. ' n' → logprob: -12.379345893859863
    9. '1' → logprob: -13.129345893859863
    10. ' ' → logprob: -14.379345893859863

Token 134: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.030061816796660423
    2. '):
' → logprob: -3.530061721801758
    3. '-' → logprob: -8.905061721801758
    4. ')' → logprob: -9.405061721801758
    5. ' ):' → logprob: -9.530061721801758
    6. ' -' → logprob: -12.155061721801758
    7. '):
' → logprob: -12.905061721801758
    8. ' ' → logprob: -13.030061721801758
    9. '   ' → logprob: -13.405061721801758
    10. ' ):
' → logprob: -13.405061721801758

Token 135: '       ' (ID: 309)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.0439089871942997
    2. '   ' → logprob: -4.043909072875977
    3. '       ' → logprob: -4.293909072875977
    4. 'j' → logprob: -4.918909072875977
    5. '    ' → logprob: -5.793909072875977
    6. ' ' → logprob: -8.418909072875977
    7. '<|end|>' → logprob: -8.418909072875977
    8. ',' → logprob: -8.793909072875977
    9. '	j' → logprob: -8.918909072875977
    10. ' next' → logprob: -8.918909072875977

Token 136: ' a' (ID: 261)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.002477200934663415
    2. ' j' → logprob: -6.502477169036865
    3. '   ' → logprob: -7.502477169036865
    4. 'a' (adapté à ' a') → logprob: -8.127477645874023
    5. 'jx' → logprob: -10.002477645874023
    6. 'jp' → logprob: -11.127477645874023
    7. 'next' → logprob: -11.377477645874023
    8. '	j' → logprob: -11.502477645874023
    9. 'p' → logprob: -11.502477645874023
    10. ' nxt' → logprob: -11.877477645874023

Token 137: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.152369424700737
    2. '=' → logprob: -2.027369499206543
    3. ',' → logprob: -4.652369499206543
    4. '=g' → logprob: -10.777369499206543
    5. '=a' → logprob: -11.152369499206543
    6. ' ' → logprob: -11.277369499206543
    7. '=i' → logprob: -11.527369499206543
    8. '=
' → logprob: -12.152369499206543
    9. 'a' → logprob: -12.152369499206543
    10. '<|end|>' → logprob: -12.402369499206543

Token 138: ' sub' (ID: 1543)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.04863050952553749
    2. ' g' → logprob: -3.048630475997925
    3. 'sub' → logprob: -10.173630714416504
    4. ' sub' → logprob: -13.173630714416504
    5. ' ' → logprob: -13.548630714416504
    6. '[' → logprob: -13.923630714416504
    7. '   ' → logprob: -15.048630714416504
    8. '	g' → logprob: -15.423630714416504
    9. '[g' → logprob: -15.798630714416504
    10. '(g' → logprob: -16.548629760742188

Token 139: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -4.417976379045285e-05
    2. '<|end|>' → logprob: -10.750043869018555
    3. '(' → logprob: -11.375043869018555
    4. '(p' → logprob: -12.250043869018555
    5. 'g' → logprob: -12.250043869018555
    6. '(
' → logprob: -14.750043869018555
    7. '[g' → logprob: -14.875043869018555
    8. ')' → logprob: -15.750043869018555
    9. ' g' → logprob: -15.875043869018555
    10. ' (' → logprob: -15.875043869018555

Token 140: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004872823599725962
    2. '[g' → logprob: -5.754872798919678
    3. '[(' → logprob: -6.629872798919678
    4. '[' → logprob: -8.004873275756836
    5. '[n' → logprob: -10.504873275756836
    6. '[m' → logprob: -12.879873275756836
    7. '[a' → logprob: -13.254873275756836
    8. '[j' → logprob: -13.754873275756836
    9. 'g' → logprob: -13.754873275756836
    10. ' [' → logprob: -13.879873275756836

Token 141: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0004889304982498288
    2. '],[' → logprob: -8.000489234924316
    3. '],
' → logprob: -9.625489234924316
    4. '-' → logprob: -10.750489234924316
    5. ']' → logprob: -10.875489234924316
    6. ' ],' → logprob: -11.000489234924316
    7. '%n' → logprob: -11.125489234924316
    8. ' ' → logprob: -12.875489234924316
    9. '((' → logprob: -13.000489234924316
    10. '[(' → logprob: -13.375489234924316

Token 142: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.09008502215147018
    2. ' p' → logprob: -2.590085029602051
    3. 'g' → logprob: -4.590085029602051
    4. ' g' → logprob: -6.965085029602051
    5. '   ' → logprob: -10.84008502960205
    6. ' ' → logprob: -12.46508502960205
    7. '<p' → logprob: -13.34008502960205
    8. '       ' → logprob: -13.40258502960205
    9. '(p' → logprob: -13.46508502960205
    10. '	p' → logprob: -13.46508502960205

Token 143: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1603267937898636
    2. ')
' → logprob: -1.9103268384933472
    3. ')
' → logprob: -9.785326957702637
    4. ')

' → logprob: -10.660326957702637
    5. ' )' → logprob: -11.660326957702637
    6. ' )
' → logprob: -12.160326957702637
    7. ')i' → logprob: -13.660326957702637
    8. '0' → logprob: -14.035326957702637
    9. ')b' → logprob: -14.035326957702637
    10. ');' → logprob: -14.160326957702637

Token 144: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05835922807455063
    2. 'b' → logprob: -3.433359146118164
    3. '   ' → logprob: -4.683359146118164
    4. ' b' → logprob: -5.183359146118164
    5. '<|end|>' → logprob: -5.433359146118164
    6. ' ' → logprob: -6.683359146118164
    7. ',' → logprob: -6.808359146118164
    8. '  ' → logprob: -8.058359146118164
    9. '    ' → logprob: -8.183359146118164
    10. 'x' → logprob: -8.433359146118164

Token 145: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.005513111595064402
    2. ' b' → logprob: -5.5055131912231445
    3. '   ' → logprob: -6.7555131912231445
    4. 'a' → logprob: -8.880513191223145
    5. ' ' → logprob: -10.005513191223145
    6. '       ' → logprob: -11.005513191223145
    7. '  ' → logprob: -11.130513191223145
    8. '<|end|>' → logprob: -11.880513191223145
    9. '	b' → logprob: -12.005513191223145
    10. '0' → logprob: -12.505513191223145

Token 146: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192928314208984
    2. ' =' → logprob: -1.5019292831420898
    3. '=sub' → logprob: -16.501930236816406
    4. '=
' → logprob: -17.376930236816406
    5. ' ' → logprob: -17.376930236816406
    6. ')' → logprob: -18.001930236816406
    7. ' =
' → logprob: -18.626930236816406
    8. '=

' → logprob: -18.876930236816406
    9. '＝' → logprob: -19.376930236816406
    10. '=}' → logprob: -19.501930236816406

Token 147: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.12706848978996277
    2. ' sub' → logprob: -2.127068519592285
    3. '[sub' → logprob: -9.877068519592285
    4. ' ' → logprob: -10.002068519592285
    5. '   ' → logprob: -11.127068519592285
    6. '	sub' → logprob: -11.627068519592285
    7. '=sub' → logprob: -12.252068519592285
    8. '(sub' → logprob: -12.502068519592285
    9. '[' → logprob: -12.752068519592285
    10. '  ' → logprob: -13.127068519592285

Token 148: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -3.292907877039397e-06
    2. ' (' → logprob: -13.37500286102295
    3. 'g' → logprob: -13.87500286102295
    4. '(' → logprob: -14.75000286102295
    5. '[g' → logprob: -15.87500286102295
    6. ' g' → logprob: -16.125003814697266
    7. '(
' → logprob: -17.000003814697266
    8. '((' → logprob: -17.375003814697266
    9. ')' → logprob: -18.500003814697266
    10. '   ' → logprob: -18.625003814697266

Token 149: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0006656142068095505
    2. '[((' → logprob: -7.750665664672852
    3. '[i' → logprob: -9.125665664672852
    4. '[g' → logprob: -9.750665664672852
    5. '[' → logprob: -9.750665664672852
    6. ' [(' → logprob: -12.750665664672852
    7. '[
' → logprob: -13.000665664672852
    8. 'g' → logprob: -13.500665664672852
    9. '[n' → logprob: -14.250665664672852
    10. ' ' → logprob: -14.625665664672852

Token 150: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1430366337299347
    2. '(i' → logprob: -2.0180366039276123
    3. ' i' → logprob: -8.268036842346191
    4. ' (' → logprob: -9.518036842346191
    5. '   ' → logprob: -11.268036842346191
    6. '{i' → logprob: -11.768036842346191
    7. '[i' → logprob: -12.893036842346191
    8. '(' → logprob: -13.518036842346191
    9. ' ' → logprob: -13.643036842346191
    10. '```' → logprob: -13.768036842346191

Token 151: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6944177150726318
    2. '1' → logprob: -0.6944177150726318
    3. ' +' → logprob: -7.194417953491211
    4. ' ' → logprob: -8.319417953491211
    5. '-' → logprob: -8.694417953491211
    6. '   ' → logprob: -9.319417953491211
    7. ' -' → logprob: -12.569417953491211
    8. '(' → logprob: -12.944417953491211
    9. '```' → logprob: -12.944417953491211
    10. '0' → logprob: -13.194417953491211

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. 'n' → logprob: -16.375001907348633
    4. '   ' → logprob: -16.625001907348633
    5. '```' → logprob: -17.875001907348633
    6. 'i' → logprob: -18.375001907348633
    7. '0' → logprob: -19.375001907348633
    8. '(' → logprob: -19.375001907348633
    9. '
' → logprob: -19.625001907348633
    10. ')' → logprob: -20.062501907348633

Token 153: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31413280963897705
    2. ')%' → logprob: -1.314132809638977
    3. '%n' → logprob: -7.3141326904296875
    4. ')n' → logprob: -9.064132690429688
    5. ')
' → logprob: -10.189132690429688
    6. ' )' → logprob: -10.314132690429688
    7. '%' → logprob: -12.564132690429688
    8. ']%' → logprob: -13.064132690429688
    9. ')

' → logprob: -13.189132690429688
    10. ')]' → logprob: -13.439132690429688

Token 154: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.9981420336989686e-05
    2. ' n' → logprob: -10.875020027160645
    3. '   ' → logprob: -15.000020027160645
    4. '(n' → logprob: -15.375020027160645
    5. ']' → logprob: -15.750020027160645
    6. ' ' → logprob: -16.750019073486328
    7. ')n' → logprob: -16.750019073486328
    8. 'g' → logprob: -16.875019073486328
    9. ')' → logprob: -17.000019073486328
    10. '	n' → logprob: -17.750019073486328

Token 155: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -2.1008713702030946e-06
    2. ']' → logprob: -13.500001907348633
    3. ' ],' → logprob: -14.625001907348633
    4. '),' → logprob: -16.500001907348633
    5. '],
' → logprob: -17.000001907348633
    6. 'def' → logprob: -18.125001907348633
    7. '])' → logprob: -18.375001907348633
    8. '```' → logprob: -18.375001907348633
    9. '   ' → logprob: -18.750001907348633
    10. '],

' → logprob: -18.875001907348633

Token 156: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.31328487396240234
    2. ' p' → logprob: -1.3132848739624023
    3. ' ' → logprob: -12.188284873962402
    4. 'g' → logprob: -12.188284873962402
    5. 'a' → logprob: -12.813284873962402
    6. '	p' → logprob: -13.188284873962402
    7. ')' → logprob: -13.313284873962402
    8. ' ' → logprob: -13.563284873962402
    9. ' g' → logprob: -13.750784873962402
    10. ' a' → logprob: -14.250784873962402

Token 157: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6932740211486816
    2. ')
' → logprob: -0.6932740211486816
    3. ')
' → logprob: -9.068273544311523
    4. ')

' → logprob: -12.318273544311523
    5. ' )
' → logprob: -12.818273544311523
    6. ' )' → logprob: -13.318273544311523
    7. '       ' → logprob: -13.943273544311523
    8. ')return' → logprob: -14.318273544311523
    9. '   ' → logprob: -14.943273544311523
    10. ')`
' → logprob: -15.443273544311523

Token 158: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013804391026496887
    2. '   ' → logprob: -4.8888044357299805
    3. '
' → logprob: -5.7638044357299805
    4. '<|end|>' → logprob: -6.1388044357299805
    5. ' if' → logprob: -7.5138044357299805
    6. ' ' → logprob: -9.01380443572998
    7. 'if' → logprob: -10.01380443572998
    8. ',' → logprob: -10.38880443572998
    9. '```' → logprob: -10.88880443572998
    10. '  
' → logprob: -11.01380443572998

Token 159: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.279953271150589
    2. 'c' → logprob: -1.5299532413482666
    3. ' if' → logprob: -3.9049532413482666
    4. '       ' → logprob: -6.154953479766846
    5. ' c' → logprob: -6.779953479766846
    6. 'z' → logprob: -7.029953479766846
    7. 'cross' → logprob: -7.029953479766846
    8. '   ' → logprob: -7.279953479766846
    9. 'x' → logprob: -7.904953479766846
    10. 's' → logprob: -8.029953002929688

Token 160: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.7671626210212708
    2. '(abs' → logprob: -1.267162561416626
    3. ' abs' → logprob: -1.517162561416626
    4. ' cross' → logprob: -5.017162799835205
    5. '(a' → logprob: -5.142162799835205
    6. ' (' → logprob: -5.267162799835205
    7. 'cross' → logprob: -5.267162799835205
    8. 'a' → logprob: -5.517162799835205
    9. '((' → logprob: -5.517162799835205
    10. ' a' → logprob: -7.142162799835205

Token 161: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00012773419439326972
    2. '(' → logprob: -9.000127792358398
    3. '(a' → logprob: -13.125127792358398
    4. '((' → logprob: -13.250127792358398
    5. '(
' → logprob: -15.625127792358398
    6. '(dot' → logprob: -16.5001277923584
    7. '(int' → logprob: -16.7501277923584
    8. '(C' → logprob: -17.0001277923584
    9. ' (' → logprob: -17.2501277923584
    10. '(float' → logprob: -17.6251277923584

Token 162: 'ross' (ID: 2838)
  Prédit: 'ross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ross' → logprob: -2.339278580620885e-06
    2. 'oss' → logprob: -14.125001907348633
    3. 'cross' → logprob: -14.125001907348633
    4. ' ross' → logprob: -14.625001907348633
    5. 'r' → logprob: -16.500001907348633
    6. 'ros' → logprob: -16.750001907348633
    7. '#' → logprob: -16.875001907348633
    8. '[' → logprob: -17.000001907348633
    9. 'rossover' → logprob: -17.750001907348633
    10. '   ' → logprob: -18.000001907348633

Token 163: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -5.796184723294573e-06
    2. 'a' → logprob: -12.250005722045898
    3. '(' → logprob: -14.125005722045898
    4. ')' → logprob: -16.2500057220459
    5. '[a' → logprob: -17.7500057220459
    6. '(
' → logprob: -18.2500057220459
    7. ')a' → logprob: -18.3750057220459
    8. ')(' → logprob: -18.3750057220459
    9. ' (' → logprob: -18.5000057220459
    10. 'b' → logprob: -19.1250057220459

Token 164: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31412273645401
    2. ',b' → logprob: -1.3141226768493652
    3. ' ,' → logprob: -7.189122676849365
    4. 'b' → logprob: -10.314123153686523
    5. '(b' → logprob: -10.439123153686523
    6. ',a' → logprob: -11.314123153686523
    7. '(' → logprob: -11.814123153686523
    8. ')' → logprob: -12.064123153686523
    9. ' b' → logprob: -12.064123153686523
    10. ',g' → logprob: -12.439123153686523

Token 165: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004079112783074379
    2. ' b' → logprob: -5.504079341888428
    3. ' ' → logprob: -14.37907886505127
    4. ')b' → logprob: -17.129079818725586
    5. '(b' → logprob: -17.504079818725586
    6. '   ' → logprob: -17.504079818725586
    7. ')' → logprob: -17.504079818725586
    8. '	b' → logprob: -17.879079818725586
    9. '<|end|>' → logprob: -18.254079818725586
    10. '  ' → logprob: -18.754079818725586

Token 166: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003092154860496521
    2. '))' → logprob: -6.253092288970947
    3. ')<' → logprob: -7.003092288970947
    4. ')<=' → logprob: -8.878091812133789
    5. ' )' → logprob: -9.878091812133789
    6. ')>' → logprob: -11.253091812133789
    7. '0' → logprob: -11.253091812133789
    8. '())' → logprob: -11.503091812133789
    9. ')==' → logprob: -11.628091812133789
    10. '])' → logprob: -12.753091812133789

Token 167: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5700399875640869
    2. ' <' → logprob: -1.070039987564087
    3. ' <=' → logprob: -2.945039987564087
    4. '<=' → logprob: -3.320039987564087
    5. '<E' → logprob: -5.945039749145508
    6. ' ' → logprob: -9.695039749145508
    7. '==' → logprob: -11.695039749145508
    8. '>' → logprob: -11.820039749145508
    9. '<Vector' → logprob: -12.195039749145508
    10. '   ' → logprob: -12.445039749145508

Token 168: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.003178901970386505
    2. ' EPS' → logprob: -5.75317907333374
    3. 'EP' → logprob: -14.628178596496582
    4. 'ES' → logprob: -14.753178596496582
    5. ' ' → logprob: -15.753178596496582
    6. '=' → logprob: -16.2531795501709
    7. 'ESP' → logprob: -16.3781795501709
    8. '1' → logprob: -17.8781795501709
    9. 'EOS' → logprob: -17.8781795501709
    10. '0' → logprob: -18.1281795501709

Token 169: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10077041387557983
    2. 'and' → logprob: -2.3507704734802246
    3. ' ' → logprob: -8.225769996643066
    4. ':' → logprob: -8.350769996643066
    5. ' or' → logprob: -10.475769996643066
    6. '<|end|>' → logprob: -11.100769996643066
    7. '   ' → logprob: -12.225769996643066
    8. ' :' → logprob: -12.600769996643066
    9. '	and' → logprob: -12.600769996643066
    10. '  ' → logprob: -14.350769996643066

Token 170: ' dot' (ID: 16579)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.21171791851520538
    2. ' min' → logprob: -1.836717963218689
    3. '(min' → logprob: -3.5867178440093994
    4. 'dot' → logprob: -6.0867180824279785
    5. ' dot' → logprob: -7.0867180824279785
    6. '(dot' → logprob: -8.08671760559082
    7. '0' → logprob: -9.33671760559082
    8. ' (' → logprob: -9.33671760559082
    9. ' ' → logprob: -10.33671760559082
    10. '(a' → logprob: -10.46171760559082

Token 171: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -5.967624019831419e-05
    2. '(sub' → logprob: -10.500060081481934
    3. '(' → logprob: -10.875060081481934
    4. '(b' → logprob: -12.000060081481934
    5. 'a' → logprob: -12.625060081481934
    6. 'sub' → logprob: -13.125060081481934
    7. '(c' → logprob: -14.750060081481934
    8. ' (' → logprob: -14.875060081481934
    9. '(dot' → logprob: -15.125060081481934
    10. '(ab' → logprob: -15.250060081481934

Token 172: ',' (ID: 11)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.014966266229748726
    2. ' b' → logprob: -4.3899664878845215
    3. '	b' → logprob: -6.6399664878845215
    4. '(b' → logprob: -7.3899664878845215
    5. ',b' → logprob: -7.7649664878845215
    6. ')b' → logprob: -10.389966011047363
    7. '[b' → logprob: -10.764966011047363
    8. ',' → logprob: -10.889966011047363
    9. '   ' → logprob: -11.639966011047363
    10. '>b' → logprob: -11.889966011047363

Token 173: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00034702493576332927
    2. ' b' → logprob: -8.000347137451172
    3. 'a' → logprob: -11.750347137451172
    4. '[b' → logprob: -13.375347137451172
    5. '	b' → logprob: -13.750347137451172
    6. '(b' → logprob: -14.750347137451172
    7. ')b' → logprob: -15.625347137451172
    8. '   ' → logprob: -16.125347137451172
    9. ')' → logprob: -16.250347137451172
    10. '[' → logprob: -16.375347137451172

Token 174: ')' (ID: 8)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.18972986936569214
    2. ' <=' → logprob: -2.064729928970337
    3. ')<=' → logprob: -3.564729928970337
    4. ')' → logprob: -4.064729690551758
    5. ']<=' → logprob: -8.064729690551758
    6. '0' → logprob: -9.314729690551758
    7. '1' → logprob: -11.439729690551758
    8. ' ' → logprob: -11.564729690551758
    9. '()' → logprob: -11.814729690551758
    10. '```' → logprob: -11.814729690551758

Token 175: ' <' (ID: 464)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.1602439284324646
    2. ' <=' → logprob: -1.9102439880371094
    3. '>=' → logprob: -11.66024398803711
    4. ')<=' → logprob: -11.78524398803711
    5. ' ' → logprob: -13.91024398803711
    6. ']<=' → logprob: -14.03524398803711
    7. ' >=' → logprob: -14.53524398803711
    8. '0' → logprob: -14.53524398803711
    9. '<' → logprob: -14.53524398803711
    10. '≤' → logprob: -16.66024398803711

Token 176: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.27984848618507385
    2. '=' → logprob: -1.7798484563827515
    3. ' EPS' → logprob: -2.904848575592041
    4. '0' → logprob: -4.029848575592041
    5. ' ' → logprob: -6.279848575592041
    6. '1' → logprob: -7.279848575592041
    7. '-E' → logprob: -9.029848098754883
    8. 'eps' → logprob: -9.904848098754883
    9. ' =' → logprob: -9.904848098754883
    10. '   ' → logprob: -10.404848098754883

Token 177: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05912302806973457
    2. ' and' → logprob: -3.5591230392456055
    3. ' :' → logprob: -4.3091230392456055
    4. ' >=' → logprob: -5.3091230392456055
    5. '>=' → logprob: -5.4341230392456055
    6. '0' → logprob: -6.6841230392456055
    7. '<=' → logprob: -7.0591230392456055
    8. ' ' → logprob: -7.1841230392456055
    9. ' <=' → logprob: -7.1841230392456055
    10. ':return' → logprob: -7.5591230392456055

Token 178: ' 
' (ID: 793)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.48648521304130554
    2. '           ' → logprob: -1.361485242843628
    3. 'return' → logprob: -2.736485242843628
    4. '       ' → logprob: -2.861485242843628
    5. '   ' → logprob: -5.861485004425049
    6. '
' → logprob: -6.361485004425049
    7. '               ' → logprob: -6.861485004425049
    8. '	return' → logprob: -7.486485004425049
    9. '0' → logprob: -8.486485481262207
    10. ' ' → logprob: -8.736485481262207

Token 179: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37737950682640076
    2. '       ' → logprob: -1.3773795366287231
    3. ' return' → logprob: -3.6273794174194336
    4. ' x' → logprob: -3.7523794174194336
    5. 'return' → logprob: -4.877379417419434
    6. 'x' → logprob: -5.877379417419434
    7. '               ' → logprob: -7.627379417419434
    8. '   ' → logprob: -7.627379417419434
    9. '          ' → logprob: -8.877379417419434
    10. '        ' → logprob: -9.127379417419434

Token 180: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.029761601239442825
    2. ' return' → logprob: -3.529761552810669
    3. 'x' → logprob: -12.77976131439209
    4. '           ' → logprob: -13.02976131439209
    5. '   ' → logprob: -13.15476131439209
    6. '               ' → logprob: -13.40476131439209
    7. '
' → logprob: -13.65476131439209
    8. ' x' → logprob: -14.65476131439209
    9. '	return' → logprob: -15.27976131439209
    10. '       ' → logprob: -15.52976131439209

Token 181: ' ' (ID: 220)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00018244501552544534
    2. ' True' → logprob: -8.625182151794434
    3. 'False' → logprob: -13.750182151794434
    4. '1' → logprob: -13.875182151794434
    5. '   ' → logprob: -15.000182151794434
    6. '0' → logprob: -15.250182151794434
    7. '"' → logprob: -15.750182151794434
    8. ' ' → logprob: -16.75018310546875
    9. '(True' → logprob: -17.00018310546875
    10. '  ' → logprob: -17.50018310546875

Token 182: '1' (ID: 16)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -4.60414821645827e-06
    2. 'False' → logprob: -13.000004768371582
    3. ' True' → logprob: -13.125004768371582
    4. '0' → logprob: -15.625004768371582
    5. '1' → logprob: -16.375003814697266
    6. 'not' → logprob: -17.500003814697266
    7. '   ' → logprob: -17.750003814697266
    8. 'x' → logprob: -18.375003814697266
    9. ' ' → logprob: -18.375003814697266
    10. '(True' → logprob: -18.500003814697266

Token 183: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46182653307914734
    2. '
' → logprob: -1.0868265628814697
    3. '   ' → logprob: -3.8368265628814697
    4. '0' → logprob: -5.211826324462891
    5. ' 
' → logprob: -6.961826324462891
    6. '        
' → logprob: -7.086826324462891
    7. '  
' → logprob: -7.711826324462891
    8. ' ' → logprob: -7.711826324462891
    9. '    
' → logprob: -8.08682632446289
    10. ',
' → logprob: -8.21182632446289

Token 184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20090563595294952
    2. '   ' → logprob: -1.825905680656433
    3. ' x' → logprob: -5.325905799865723
    4. '0' → logprob: -5.575905799865723
    5. ' ' → logprob: -6.200905799865723
    6. 'x' → logprob: -6.450905799865723
    7. '
' → logprob: -6.450905799865723
    8. '    ' → logprob: -6.450905799865723
    9. '           ' → logprob: -7.450905799865723
    10. ' 
' → logprob: -7.450905799865723

Token 185: ' if' (ID: 538)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8653687834739685
    2. '   ' → logprob: -1.4903688430786133
    3. 'if' (adapté à ' if') → logprob: -1.4903688430786133
    4. ' if' → logprob: -2.6153688430786133
    5. ' x' → logprob: -3.4903688430786133
    6. '       ' → logprob: -3.7403688430786133
    7. ' ' → logprob: -7.490368843078613
    8. 'for' → logprob: -8.615368843078613
    9. '           ' → logprob: -8.990368843078613
    10. ' for' → logprob: -9.365368843078613

Token 186: ' a' (ID: 261)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.6593288779258728
    2. ' (' → logprob: -1.2843289375305176
    3. ' ((' → logprob: -2.1593289375305176
    4. '(((' → logprob: -2.9093289375305176
    5. '(' → logprob: -4.409328937530518
    6. '(abs' → logprob: -4.659328937530518
    7. ' (((' → logprob: -5.909328937530518
    8. '(c' → logprob: -6.034328937530518
    9. '(a' → logprob: -6.284328937530518
    10. '(g' → logprob: -6.409328937530518

Token 187: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00010890735575230792
    2. 'y' → logprob: -9.62510871887207
    3. '.' → logprob: -11.00010871887207
    4. '.y' → logprob: -11.00010871887207
    5. '=' → logprob: -13.25010871887207
    6. ' [' → logprob: -13.87510871887207
    7. '
' → logprob: -14.37510871887207
    8. '=[' → logprob: -14.50010871887207
    9. 'a' → logprob: -14.62510871887207
    10. '0' → logprob: -14.87510871887207

Token 188: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06198382377624512
    2. '[' → logprob: -2.811983823776245
    3. '
' → logprob: -11.436984062194824
    4. '```' → logprob: -13.561984062194824
    5. 'y' → logprob: -13.936984062194824
    6. ' [' → logprob: -14.436984062194824
    7. '

' → logprob: -15.311984062194824
    8. '   ' → logprob: -15.311984062194824
    9. '(' → logprob: -15.561984062194824
    10. '
' → logprob: -15.686984062194824

Token 189: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0442584753036499
    2. ' >' → logprob: -3.1692585945129395
    3. '>a' → logprob: -7.9192585945129395
    4. '>b' → logprob: -8.169258117675781
    5. 'a' → logprob: -8.544258117675781
    6. '<' → logprob: -8.544258117675781
    7. '>=' → logprob: -9.419258117675781
    8. '*' → logprob: -10.419258117675781
    9. '0' → logprob: -10.669258117675781
    10. '<=' → logprob: -10.919258117675781

Token 190: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.013560752384364605
    2. ' >' → logprob: -4.513560771942139
    3. '<' → logprob: -6.638560771942139
    4. '*' → logprob: -7.763560771942139
    5. '<=' → logprob: -8.63856029510498
    6. 'a' → logprob: -8.63856029510498
    7. '>=' → logprob: -9.26356029510498
    8. '>a' → logprob: -9.26356029510498
    9. '>*' → logprob: -9.51356029510498
    10. '0' → logprob: -10.38856029510498

Token 191: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0020390336867421865
    2. 'p' → logprob: -6.627038955688477
    3. '0' → logprob: -7.377038955688477
    4. ' b' → logprob: -9.377038955688477
    5. '=' → logprob: -14.002038955688477
    6. '!=' → logprob: -14.377038955688477
    7. ' p' → logprob: -15.127038955688477
    8. ' ' → logprob: -15.377038955688477
    9. '	b' → logprob: -15.502038955688477
    10. '>b' → logprob: -15.877038955688477

Token 192: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.668304245569743e-05
    2. '1' → logprob: -10.000046730041504
    3. 'y' → logprob: -14.250046730041504
    4. '```' → logprob: -15.000046730041504
    5. ' [' → logprob: -16.500045776367188
    6. '[
' → logprob: -17.875045776367188
    7. '``' → logprob: -17.875045776367188
    8. '#' → logprob: -18.000045776367188
    9. 'a' → logprob: -18.125045776367188
    10. ' ' → logprob: -18.125045776367188

Token 193: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.375000953674316
    3. '[' → logprob: -14.750000953674316
    4. 'y' → logprob: -17.875001907348633
    5. '```' → logprob: -18.375001907348633
    6. '0' → logprob: -19.250001907348633
    7. '   ' → logprob: -19.750001907348633
    8. ']' → logprob: -19.875001907348633
    9. '１' → logprob: -19.875001907348633
    10. ' y' → logprob: -20.500001907348633

Token 194: ']:
' (ID: 22152)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9014321565628052
    2. '!=' → logprob: -1.0264321565628052
    3. ')!=' → logprob: -1.5264321565628052
    4. ' !=' → logprob: -4.526432037353516
    5. ']!=' → logprob: -5.526432037353516
    6. '!' → logprob: -7.026432037353516
    7. '!==' → logprob: -7.651432037353516
    8. ':' → logprob: -7.651432037353516
    9. '!=(' → logprob: -7.901432037353516
    10. ']' → logprob: -8.276432037353516

Token 195: '           ' (ID: 352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.28761282563209534
    2. ' if' → logprob: -2.0376129150390625
    3. '<|end|>' → logprob: -2.6626129150390625
    4. ')' → logprob: -4.7876129150390625
    5. '   ' → logprob: -4.9126129150390625
    6. '       ' → logprob: -4.9126129150390625
    7. 'a' → logprob: -5.0376129150390625
    8. ',' → logprob: -5.5376129150390625
    9. ' and' → logprob: -5.7876129150390625
    10. ' (' → logprob: -6.1626129150390625

Token 196: ' a' (ID: 261)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21987172961235046
    2. ' if' → logprob: -1.9698717594146729
    3. 'a' (adapté à ' a') → logprob: -3.469871759414673
    4. 'x' → logprob: -3.719871759414673
    5. ' a' → logprob: -6.969871520996094
    6. ' x' → logprob: -7.469871520996094
    7. 'continue' → logprob: -7.469871520996094
    8. '   ' → logprob: -8.844871520996094
    9. ' continue' → logprob: -8.969871520996094
    10. '(x' → logprob: -9.844871520996094

Token 197: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07885915786027908
    2. ',a' → logprob: -2.7038590908050537
    3. ',b' → logprob: -4.953859329223633
    4. '[' → logprob: -7.328859329223633
    5. ' ,' → logprob: -7.828859329223633
    6. ',y' → logprob: -8.578859329223633
    7. 'a' → logprob: -8.703859329223633
    8. '=' → logprob: -9.328859329223633
    9. ' a' → logprob: -9.703859329223633
    10. ',x' → logprob: -9.703859329223633

Token 198: '=b' (ID: 49769)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0021832152269780636
    2. ',' → logprob: -6.877183437347412
    3. ' =' → logprob: -6.877183437347412
    4. 'b' → logprob: -9.502182960510254
    5. '=b' → logprob: -10.627182960510254
    6. ',b' → logprob: -11.127182960510254
    7. '[' → logprob: -13.002182960510254
    8. '=
' → logprob: -13.752182960510254
    9. ' ,' → logprob: -15.002182960510254
    10. ' b' → logprob: -15.127182960510254

Token 199: ',a' (ID: 26776)
  Prédit: ',b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.43751826882362366
    2. ',a' → logprob: -1.4375182390213013
    3. ',' → logprob: -2.437518358230591
    4. '<|end|>' → logprob: -4.562518119812012
    5. 'a' → logprob: -4.687518119812012
    6. 'b' → logprob: -5.312518119812012
    7. '[' → logprob: -5.687518119812012
    8. '=' → logprob: -7.562518119812012
    9. ' a' → logprob: -8.062518119812012
    10. '[a' → logprob: -8.312518119812012

Token 200: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 201: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.47938764095306396
    2. ' if' → logprob: -1.104387640953064
    3. '       ' → logprob: -3.8543877601623535
    4. '   ' → logprob: -3.9793877601623535
    5. '<|end|>' → logprob: -4.8543877601623535
    6. '
' → logprob: -8.104387283325195
    7. '```' → logprob: -8.229387283325195
    8. ' ' → logprob: -8.229387283325195
    9. 'x' → logprob: -8.729387283325195
    10. '[' → logprob: -9.229387283325195

Token 202: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0031678599771112204
    2. ' if' → logprob: -5.878167629241943
    3. '   ' → logprob: -8.128168106079102
    4. '       ' → logprob: -9.753168106079102
    5. '           ' → logprob: -13.003168106079102
    6. ' ' → logprob: -13.378168106079102
    7. 'y' → logprob: -13.628168106079102
    8. '```' → logprob: -14.128168106079102
    9. 'x' → logprob: -14.378168106079102
    10. '  ' → logprob: -14.628168106079102

Token 203: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.22027216851711273
    2. ' a' → logprob: -2.2202720642089844
    3. 'p' → logprob: -3.2202720642089844
    4. '(a' → logprob: -3.8452720642089844
    5. ' p' → logprob: -4.470272064208984
    6. '(p' → logprob: -4.720272064208984
    7. ' (' → logprob: -4.970272064208984
    8. '(' → logprob: -8.470272064208984
    9. '((' → logprob: -8.470272064208984
    10. ' ' → logprob: -10.845272064208984

Token 204: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.696889623621246e-06
    2. '1' → logprob: -13.62500286102295
    3. 'y' → logprob: -14.75000286102295
    4. '```' → logprob: -15.62500286102295
    5. ' [' → logprob: -16.187501907348633
    6. '0' → logprob: -16.437501907348633
    7. '
' → logprob: -16.812501907348633
    8. '[
' → logprob: -16.875001907348633
    9. 'and' → logprob: -16.937501907348633
    10. 'p' → logprob: -17.062501907348633

Token 205: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013398852897807956
    2. '[' → logprob: -6.626339912414551
    3. '
' → logprob: -11.75133991241455
    4. '0' → logprob: -12.62633991241455
    5. 'y' → logprob: -14.25133991241455
    6. ' ' → logprob: -14.62633991241455
    7. '```' → logprob: -14.62633991241455
    8. '...' → logprob: -16.063838958740234
    9. '   ' → logprob: -16.188838958740234
    10. '-' → logprob: -16.188838958740234

Token 206: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2069862335920334
    2. '<=' → logprob: -1.9569861888885498
    3. ' <=' → logprob: -3.20698618888855
    4. '<' → logprob: -6.456986427307129
    5. 'p' → logprob: -6.831986427307129
    6. ' ' → logprob: -6.956986427307129
    7. ' <' → logprob: -7.331986427307129
    8. '<p' → logprob: -7.581986427307129
    9. ' p' → logprob: -9.456986427307129
    10. '0' → logprob: -9.456986427307129

Token 207: ' <' (ID: 464)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.043879784643650055
    2. ' <=' → logprob: -3.168879747390747
    3. '<' → logprob: -7.543879985809326
    4. '<p' → logprob: -8.543879508972168
    5. ' <' → logprob: -9.668879508972168
    6. 'p' → logprob: -10.043879508972168
    7. '[' → logprob: -10.793879508972168
    8. ' p' → logprob: -11.293879508972168
    9. ')<=' → logprob: -12.793879508972168
    10. '0' → logprob: -13.168879508972168

Token 208: ' EPS' (ID: 66979)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0007187459850683808
    2. ' p' → logprob: -7.250718593597412
    3. '<=' → logprob: -12.37571907043457
    4. '=' → logprob: -12.50071907043457
    5. '<p' → logprob: -14.75071907043457
    6. '[' → logprob: -15.50071907043457
    7. '=p' → logprob: -16.12571907043457
    8. ' <=' → logprob: -16.87571907043457
    9. ' ' → logprob: -17.12571907043457
    10. '<' → logprob: -17.37571907043457

Token 209: ' and' (ID: 326)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.05385848879814148
    2. 'and' → logprob: -3.053858518600464
    3. ' and' → logprob: -5.428858280181885
    4. ' <=' → logprob: -7.053858280181885
    5. '≤' → logprob: -12.678858757019043
    6. '<' → logprob: -14.803858757019043
    7. 'p' → logprob: -14.928858757019043
    8. ')<=' → logprob: -15.303858757019043
    9. '&&' → logprob: -15.928858757019043
    10. '&' → logprob: -15.928858757019043

Token 210: ' EPS' (ID: 66979)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7005645632743835
    2. 'p' → logprob: -0.7005645632743835
    3. ' b' → logprob: -5.575564384460449
    4. ' p' → logprob: -5.700564384460449
    5. '<=' → logprob: -8.82556438446045
    6. 'EPS' → logprob: -10.20056438446045
    7. 'a' → logprob: -10.82556438446045
    8. '<' → logprob: -11.45056438446045
    9. ' EPS' → logprob: -11.70056438446045
    10. '<p' → logprob: -12.07556438446045

Token 211: ' <' (ID: 464)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.011675910092890263
    2. '<' → logprob: -4.886675834655762
    3. ' <=' → logprob: -6.511675834655762
    4. 'and' → logprob: -6.761675834655762
    5. ' and' → logprob: -7.011675834655762
    6. '<|end|>' → logprob: -8.011675834655762
    7. 'b' → logprob: -10.261675834655762
    8. ' <' → logprob: -10.386675834655762
    9. '>=' → logprob: -10.386675834655762
    10. '<b' → logprob: -11.011675834655762

Token 212: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0011722482740879059
    2. ' b' → logprob: -6.751172065734863
    3. 'p' → logprob: -13.751172065734863
    4. '   ' → logprob: -14.876172065734863
    5. ' ' → logprob: -15.126172065734863
    6. '	b' → logprob: -16.62617301940918
    7. '=' → logprob: -16.75117301940918
    8. '  ' → logprob: -17.00117301940918
    9. '<=' → logprob: -17.75117301940918
    10. '
' → logprob: -18.00117301940918

Token 213: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00103995599783957
    2. '1' → logprob: -6.876039981842041
    3. 'y' → logprob: -13.376039505004883
    4. '```' → logprob: -13.751039505004883
    5. ' [' → logprob: -13.876039505004883
    6. '.' → logprob: -14.376039505004883
    7. '...' → logprob: -14.501039505004883
    8. '0' → logprob: -15.001039505004883
    9. '   ' → logprob: -15.626039505004883
    10. '[
' → logprob: -15.813539505004883

Token 214: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010755611583590508
    2. '[' → logprob: -6.876075744628906
    3. ' ' → logprob: -10.251075744628906
    4. '0' → logprob: -12.126075744628906
    5. 'y' → logprob: -13.751075744628906
    6. 'p' → logprob: -15.876075744628906
    7. '
' → logprob: -15.938575744628906
    8. '```' → logprob: -16.063575744628906
    9. ' [' → logprob: -16.126075744628906
    10. '[
' → logprob: -17.001075744628906

Token 215: ']' (ID: 60)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10541925579309464
    2. 'and' → logprob: -2.980419158935547
    3. ' and' → logprob: -3.230419158935547
    4. ':
' → logprob: -5.605419158935547
    5. '<=' → logprob: -6.230419158935547
    6. '):' → logprob: -6.605419158935547
    7. '<|end|>' → logprob: -6.605419158935547
    8. ' :' → logprob: -7.730419158935547
    9. '       ' → logprob: -8.480419158935547
    10. ')' → logprob: -8.855419158935547

Token 216: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8389875888824463
    2. ' and' → logprob: -0.9639875888824463
    3. 'and' → logprob: -1.7139875888824463
    4. '<=' → logprob: -5.463987350463867
    5. ' <=' → logprob: -7.588987350463867
    6. ':
' → logprob: -7.713987350463867
    7. '<|end|>' → logprob: -7.963987350463867
    8. '       ' → logprob: -8.338987350463867
    9. ' :' → logprob: -8.588987350463867
    10. '):' → logprob: -9.213987350463867

Token 217: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.030683839693665504
    2. ' cross' → logprob: -3.530683755874634
    3. '(c' → logprob: -7.155683994293213
    4. 'c' → logprob: -9.155683517456055
    5. '   ' → logprob: -11.155683517456055
    6. '           ' → logprob: -11.655683517456055
    7. '	c' → logprob: -12.030683517456055
    8. 'a' → logprob: -13.280683517456055
    9. 'abs' → logprob: -13.405683517456055
    10. '       ' → logprob: -13.405683517456055

Token 218: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -5.080963092041202e-06
    2. '(sub' → logprob: -13.375004768371582
    3. '(' → logprob: -13.500004768371582
    4. ' (' → logprob: -13.500004768371582
    5. 'a' → logprob: -14.750004768371582
    6. '(
' → logprob: -15.250004768371582
    7. ' a' → logprob: -17.3750057220459
    8. 'sub' → logprob: -17.5000057220459
    9. '(b' → logprob: -17.5000057220459
    10. '(ab' → logprob: -18.2500057220459

Token 219: ',b' (ID: 17568)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.9395443201065063
    2. '(a' → logprob: -0.9395443201065063
    3. 'b' → logprob: -1.5645443201065063
    4. 'a' → logprob: -4.939544200897217
    5. ',b' → logprob: -7.314544200897217
    6. ' b' → logprob: -7.314544200897217
    7. ',' → logprob: -8.564544677734375
    8. '(' → logprob: -9.439544677734375
    9. ')' → logprob: -9.564544677734375
    10. '   ' → logprob: -9.689544677734375

Token 220: ')' (ID: 8)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.030880527570843697
    2. ' >' → logprob: -4.280880451202393
    3. '()>' → logprob: -4.905880451202393
    4. ')>' → logprob: -5.155880451202393
    5. '0' → logprob: -7.280880451202393
    6. ')' → logprob: -7.530880451202393
    7. '>a' → logprob: -7.655880451202393
    8. ']>' → logprob: -7.780880451202393
    9. '(' → logprob: -8.15588092803955
    10. '">' → logprob: -8.40588092803955

Token 221: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0756644755601883
    2. ' >' → logprob: -2.825664520263672
    3. '()>' → logprob: -4.325664520263672
    4. '(' → logprob: -8.825664520263672
    5. ')>' → logprob: -9.200664520263672
    6. '()' → logprob: -10.575664520263672
    7. '(">' → logprob: -10.575664520263672
    8. '">' → logprob: -10.950664520263672
    9. '0' → logprob: -11.200664520263672
    10. ']>' → logprob: -11.325664520263672

Token 222: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.04476265609264374
    2. '0' → logprob: -3.41976261138916
    3. ' EPS' → logprob: -4.54476261138916
    4. ' ' → logprob: -8.16976261138916
    5. '-E' → logprob: -9.29476261138916
    6. '   ' → logprob: -11.29476261138916
    7. '-' → logprob: -11.66976261138916
    8. 'ES' → logprob: -11.91976261138916
    9. 'EOS' → logprob: -12.29476261138916
    10. 'EP' → logprob: -12.54476261138916

Token 223: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21606972813606262
    2. ' x' → logprob: -2.3410696983337402
    3. ':
' → logprob: -3.2160696983337402
    4. 'x' → logprob: -3.3410696983337402
    5. '!=' → logprob: -4.46606969833374
    6. ' !=' → logprob: -5.71606969833374
    7. ' :' → logprob: -6.09106969833374
    8. '       ' → logprob: -6.71606969833374
    9. '           ' → logprob: -7.59106969833374
    10. ':x' → logprob: -7.84106969833374

Token 224: '           ' (ID: 352)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.06395954638719559
    2. 'x' → logprob: -3.3139595985412598
    3. '           ' → logprob: -4.06395959854126
    4. '       ' → logprob: -5.43895959854126
    5. '               ' → logprob: -5.93895959854126
    6. ':' → logprob: -7.56395959854126
    7. '   ' → logprob: -7.93895959854126
    8. '                   ' → logprob: -9.188959121704102
    9. ' ' → logprob: -9.438959121704102
    10. '	x' → logprob: -9.563959121704102

Token 225: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0009117019944824278
    2. ' x' → logprob: -7.000911712646484
    3. '   ' → logprob: -15.625911712646484
    4. '           ' → logprob: -17.375911712646484
    5. '       ' → logprob: -18.000911712646484
    6. '	x' → logprob: -18.750911712646484
    7. '
' → logprob: -20.000911712646484
    8. '               ' → logprob: -21.250911712646484
    9. '                   ' → logprob: -21.375911712646484
    10. ' ' → logprob: -21.375911712646484

Token 226: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0003951648832298815
    2. '^' → logprob: -8.750394821166992
    3. ' =' → logprob: -8.875394821166992
    4. ' ^=' → logprob: -9.875394821166992
    5. 'not' → logprob: -10.750394821166992
    6. '=!' → logprob: -11.125394821166992
    7. '!=' → logprob: -12.500394821166992
    8. ' not' → logprob: -13.125394821166992
    9. '   ' → logprob: -14.000394821166992
    10. '=x' → logprob: -14.500394821166992

Token 227: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.06209899112582207
    2. ' not' → logprob: -2.812098979949951
    3. '!' → logprob: -9.81209945678711
    4. '   ' → logprob: -9.93709945678711
    5. '(not' → logprob: -11.06209945678711
    6. '
' → logprob: -12.68709945678711
    7. 'True' → logprob: -13.06209945678711
    8. '       ' → logprob: -13.18709945678711
    9. '    ' → logprob: -14.06209945678711
    10. ' ' → logprob: -14.43709945678711

Token 228: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0009114635176956654
    2. ' x' → logprob: -7.000911235809326
    3. '(x' → logprob: -18.375911712646484
    4. '	x' → logprob: -19.875911712646484
    5. ' ' → logprob: -21.750911712646484
    6. ')x' → logprob: -22.750911712646484
    7. '<|end|>' → logprob: -23.000911712646484
    8. '"x' → logprob: -23.375911712646484
    9. '<x' → logprob: -23.500911712646484
    10. ' ' → logprob: -23.625911712646484

Token 229: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010920487344264984
    2. '
' → logprob: -5.010920524597168
    3. ' return' → logprob: -6.135920524597168
    4. 'return' → logprob: -6.510920524597168
    5. '       ' → logprob: -8.760920524597168
    6. ',
' → logprob: -9.260920524597168
    7. ',' → logprob: -9.260920524597168
    8. '    
' → logprob: -9.635920524597168
    9. '	return' → logprob: -10.385920524597168
    10. ' ' → logprob: -10.885920524597168

Token 230: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013096120208501816
    2. ' return' → logprob: -4.388096332550049
    3. 'return' → logprob: -8.01309585571289
    4. '	return' → logprob: -9.26309585571289
    5. '       ' → logprob: -9.88809585571289
    6. '
' → logprob: -10.13809585571289
    7. ',' → logprob: -10.26309585571289
    8. ')' → logprob: -11.38809585571289
    9. '    
' → logprob: -12.63809585571289
    10. ',
' → logprob: -12.76309585571289

Token 231: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6978930234909058
    2. '   ' → logprob: -0.9478930234909058
    3. 'return' (adapté à ' return') → logprob: -2.1978931427001953
    4. ' ' → logprob: -6.572893142700195
    5. '	return' → logprob: -7.447893142700195
    6. '
' → logprob: -7.822893142700195
    7. '    
' → logprob: -8.197893142700195
    8. ')' → logprob: -8.197893142700195
    9. ' 
' → logprob: -8.822893142700195
    10. '       ' → logprob: -8.947893142700195

Token 232: ' ' (ID: 220)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3132616877555847
    2. ' x' → logprob: -1.3132617473602295
    3. 'int' → logprob: -18.563261032104492
    4. '	x' → logprob: -19.188261032104492
    5. ' ' → logprob: -19.438261032104492
    6. ' ' → logprob: -20.313261032104492
    7. 'False' → logprob: -20.813261032104492
    8. '(x' → logprob: -21.188261032104492
    9. 'space' → logprob: -21.563261032104492
    10. '```' → logprob: -22.063261032104492

Token 233: '2' (ID: 17)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.988221684878226e-06
    2. ' x' → logprob: -11.875006675720215
    3. 'int' → logprob: -18.75000762939453
    4. 'not' → logprob: -22.12500762939453
    5. '1' → logprob: -22.87500762939453
    6. '(x' → logprob: -23.37500762939453
    7. '```' → logprob: -24.12500762939453
    8. '	x' → logprob: -24.25000762939453
    9. '0' → logprob: -24.50000762939453
    10. '   ' → logprob: -24.62500762939453

Token 234: ' if' (ID: 538)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.055026937276124954
    2. 'x' → logprob: -2.9300270080566406
    3. ' if' → logprob: -10.05502700805664
    4. '   ' → logprob: -10.80502700805664
    5. 'return' → logprob: -10.80502700805664
    6. 'if' → logprob: -10.80502700805664
    7. ' ' → logprob: -11.30502700805664
    8. ' return' → logprob: -11.80502700805664
    9. '[x' → logprob: -12.18002700805664
    10. '	x' → logprob: -12.68002700805664

Token 235: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0788937583565712
    2. 'x' → logprob: -2.5788936614990234
    3. ' ' → logprob: -13.453893661499023
    4. '(x' → logprob: -13.578893661499023
    5. ' not' → logprob: -14.328893661499023
    6. ' ' → logprob: -15.078893661499023
    7. '	x' → logprob: -15.203893661499023
    8. 'not' → logprob: -17.328893661499023
    9. '[x' → logprob: -17.328893661499023
    10. '   ' → logprob: -18.703893661499023

Token 236: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.048592932522296906
    2. 'else' → logprob: -3.048593044281006
    3. ' ' → logprob: -12.798592567443848
    4. '	else' → logprob: -13.048592567443848
    5. '==' → logprob: -15.298592567443848
    6. '
' → logprob: -15.673592567443848
    7. '   ' → logprob: -16.423593521118164
    8. '<|end|>' → logprob: -17.173593521118164
    9. '    ' → logprob: -17.798593521118164
    10. '  ' → logprob: -17.798593521118164

Token 237: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010792528046295047
    2. ' ' → logprob: -6.876079082489014
    3. '3' → logprob: -10.001079559326172
    4. '1' → logprob: -13.876079559326172
    5. '  ' → logprob: -16.626079559326172
    6. '   ' → logprob: -17.501079559326172
    7. '```' → logprob: -18.376079559326172
    8. 'False' → logprob: -18.563579559326172
    9. '\
' → logprob: -18.563579559326172
    10. '  
' → logprob: -18.751079559326172

Token 238: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.236549335066229e-05
    2. ' ' → logprob: -11.125021934509277
    3. '3' → logprob: -11.875021934509277
    4. '1' → logprob: -14.500021934509277
    5. '   ' → logprob: -17.375022888183594
    6. '```' → logprob: -18.125022888183594
    7. '  ' → logprob: -18.500022888183594
    8. 'False' → logprob: -18.937522888183594
    9. '۰' → logprob: -19.562522888183594
    10. '-' → logprob: -19.625022888183594

Token 239: '
' (ID: 198)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.502234160900116
    2. 'for' → logprob: -1.0022342205047607
    3. '<|end|>' → logprob: -4.877233982086182
    4. 'n' → logprob: -5.002233982086182
    5. ' for' → logprob: -5.127233982086182
    6. '
' → logprob: -6.127233982086182
    7. 'point' → logprob: -7.127233982086182
    8. '#' → logprob: -7.252233982086182
    9. '  
' → logprob: -7.627233982086182
    10. ')' → logprob: -7.752233982086182

Token 240: 'for' (ID: 1938)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.18166998028755188
    2. 'for' → logprob: -1.8066699504852295
    3. ' for' → logprob: -6.806670188903809
    4. 'r' → logprob: -8.056670188903809
    5. 't' → logprob: -9.056670188903809
    6. 'x' → logprob: -9.181670188903809
    7. 'point' → logprob: -9.556670188903809
    8. ' p' → logprob: -9.806670188903809
    9. 'while' → logprob: -10.181670188903809
    10. 'm' → logprob: -10.806670188903809

Token 241: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0039247567765414715
    2. '_' → logprob: -5.62892484664917
    3. ' i' → logprob: -8.253924369812012
    4. ' ' → logprob: -9.753924369812012
    5. ' j' → logprob: -13.003924369812012
    6. '_i' → logprob: -13.253924369812012
    7. 'i' → logprob: -13.753924369812012
    8. ' t' → logprob: -14.503924369812012
    9. ' __' → logprob: -15.503924369812012
    10. ' x' → logprob: -15.753924369812012

Token 242: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007850894704461098
    2. 'in' → logprob: -4.8828511238098145
    3. ' ' → logprob: -8.507850646972656
    4. 'range' → logprob: -11.132850646972656
    5. '_' → logprob: -11.382850646972656
    6. ' _' → logprob: -12.007850646972656
    7. ' range' → logprob: -12.007850646972656
    8. '  ' → logprob: -13.382850646972656
    9. '   ' → logprob: -13.757850646972656
    10. 'n' → logprob: -13.882850646972656

Token 243: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029751529917120934
    2. ' range' → logprob: -3.5297515392303467
    3. ' ' → logprob: -14.654751777648926
    4. 'in' → logprob: -15.529751777648926
    5. ' in' → logprob: -15.779751777648926
    6. '(range' → logprob: -16.15475082397461
    7. 'r' → logprob: -17.15475082397461
    8. '  ' → logprob: -17.27975082397461
    9. 'q' → logprob: -17.52975082397461
    10. '	range' → logprob: -17.65475082397461

Token 244: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.0005871102912351489
    2. 'q' → logprob: -7.500586986541748
    3. '(' → logprob: -10.500587463378906
    4. ' (' → logprob: -12.000587463378906
    5. ' q' → logprob: -14.750587463378906
    6. '(int' → logprob: -16.375587463378906
    7. '	q' → logprob: -18.375587463378906
    8. '(n' → logprob: -18.500587463378906
    9. '(range' → logprob: -18.625587463378906
    10. '()' → logprob: -18.625587463378906

Token 245: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003251150716096163
    2. '):
' → logprob: -5.878251075744629
    3. ' ):' → logprob: -8.003251075744629
    4. ':' → logprob: -9.503251075744629
    5. ')' → logprob: -10.753251075744629
    6. '():' → logprob: -11.628251075744629
    7. '):
' → logprob: -13.378251075744629
    8. ' :' → logprob: -13.503251075744629
    9. '   ' → logprob: -14.253251075744629
    10. '=' → logprob: -14.503251075744629

Token 246: '   ' (ID: 271)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.22300268709659576
    2. '   ' → logprob: -1.7230026721954346
    3. 'p' → logprob: -3.8480026721954346
    4. '	p' → logprob: -11.098002433776855
    5. ' point' → logprob: -11.973002433776855
    6. ' ' → logprob: -12.223002433776855
    7. '  ' → logprob: -13.348002433776855
    8. ' x' → logprob: -13.723002433776855
    9. '    ' → logprob: -13.848002433776855
    10. ' pt' → logprob: -13.848002433776855

Token 247: ' x' (ID: 1215)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.05284370854496956
    2. ' p' → logprob: -3.0528438091278076
    3. '   ' → logprob: -5.5528435707092285
    4. 'x' (adapté à ' x') → logprob: -8.677844047546387
    5. 'px' → logprob: -9.552844047546387
    6. ' point' → logprob: -10.302844047546387
    7. 'point' → logprob: -10.427844047546387
    8. '	p' → logprob: -11.052844047546387
    9. 'pt' → logprob: -11.302844047546387
    10. 'a' → logprob: -12.052844047546387

Token 248: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20472685992717743
    2. ',y' → logprob: -1.8297268152236938
    3. ',p' → logprob: -4.704726696014404
    4. 'y' → logprob: -5.079726696014404
    5. 'p' → logprob: -5.204726696014404
    6. '=' → logprob: -5.829726696014404
    7. ' =' → logprob: -7.579726696014404
    8. ' ,' → logprob: -8.704727172851562
    9. '_,' → logprob: -8.954727172851562
    10. ',input' → logprob: -11.079727172851562

Token 249: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17987987399101257
    2. ' =' → logprob: -1.804879903793335
    3. '=int' → logprob: -10.179880142211914
    4. ',' → logprob: -10.179880142211914
    5. '   ' → logprob: -10.679880142211914
    6. '=input' → logprob: -10.804880142211914
    7. ' ' → logprob: -11.429880142211914
    8. '    ' → logprob: -13.554880142211914
    9. '	' → logprob: -13.804880142211914
    10. '  ' → logprob: -13.929880142211914

Token 250: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.3916802406311035
    2. 'map' → logprob: -1.1416802406311035
    3. '[' → logprob: -5.6416802406311035
    4. ' [' → logprob: -6.7666802406311035
    5. '   ' → logprob: -10.141679763793945
    6. '[int' → logprob: -10.391679763793945
    7. ' list' → logprob: -11.641679763793945
    8. 'list' → logprob: -12.141679763793945
    9. 'int' → logprob: -12.266679763793945
    10. ' ' → logprob: -12.391679763793945

Token 251: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -7.481510692741722e-05
    2. 'int' → logprob: -10.00007438659668
    3. '(' → logprob: -10.50007438659668
    4. '[int' → logprob: -14.12507438659668
    5. '<int' → logprob: -14.87507438659668
    6. '(input' → logprob: -15.00007438659668
    7. '=int' → logprob: -15.75007438659668
    8. ' int' → logprob: -16.87507438659668
    9. '(lambda' → logprob: -16.87507438659668
    10. ',int' → logprob: -17.37507438659668

Token 252: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.07233241945505142
    2. '(input' → logprob: -3.0723323822021484
    3. ',' → logprob: -3.8223323822021484
    4. 'input' → logprob: -6.822332382202148
    5. ' input' → logprob: -8.447332382202148
    6. '=input' → logprob: -8.572332382202148
    7. '(),' → logprob: -10.197332382202148
    8. ' ,' → logprob: -10.947332382202148
    9. '[input' → logprob: -11.947332382202148
    10. ')' → logprob: -11.947332382202148

Token 253: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0007099286303855479
    2. ' input' → logprob: -7.2507100105285645
    3. '(input' → logprob: -19.000709533691406
    4. '   ' → logprob: -19.375709533691406
    5. ',input' → logprob: -21.250709533691406
    6. '=input' → logprob: -21.375709533691406
    7. '	input' → logprob: -21.625709533691406
    8. ' ' → logprob: -21.750709533691406
    9. '[input' → logprob: -21.750709533691406
    10. '<input' → logprob: -22.375709533691406

Token 254: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.9623810658231378e-05
    2. '()' → logprob: -10.875020027160645
    3. ' ().' → logprob: -14.500020027160645
    4. '(' → logprob: -17.875019073486328
    5. '()
' → logprob: -18.250019073486328
    6. '   ' → logprob: -19.125019073486328
    7. '.' → logprob: -19.500019073486328
    8. ')' → logprob: -20.250019073486328
    9. ' ' → logprob: -20.750019073486328
    10. ' ()' → logprob: -21.250019073486328

Token 255: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.664371848164592e-05
    2. 'strip' → logprob: -11.125016212463379
    3. ' split' → logprob: -13.875016212463379
    4. '(split' → logprob: -14.250016212463379
    5. 'spl' → logprob: -16.500017166137695
    6. ')' → logprob: -16.500017166137695
    7. 'rstrip' → logprob: -16.625017166137695
    8. 'plit' → logprob: -17.375017166137695
    9. '().' → logprob: -18.375017166137695
    10. '.split' → logprob: -18.500017166137695

Token 256: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0012289194855839014
    2. '()' → logprob: -6.7512288093566895
    3. ')' → logprob: -10.001229286193848
    4. '())
' → logprob: -11.501229286193848
    5. '().' → logprob: -13.626229286193848
    6. '(' → logprob: -14.251229286193848
    7. ' ())' → logprob: -14.251229286193848
    8. '()))' → logprob: -15.126229286193848
    9. '();)' → logprob: -16.00122833251953
    10. '())

' → logprob: -16.37622833251953

Token 257: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7485550045967102
    2. '
' → logprob: -1.2485549449920654
    3. '<|end|>' → logprob: -1.7485549449920654
    4. '    
' → logprob: -4.1235551834106445
    5. 'p' → logprob: -4.2485551834106445
    6. ' p' → logprob: -4.6235551834106445
    7. ')' → logprob: -4.7485551834106445
    8. '  
' → logprob: -5.4985551834106445
    9. '<|end|>' → logprob: -5.6235551834106445
    10. '(p' → logprob: -5.8735551834106445

Token 258: ' print' (ID: 2123)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.001003384590149
    2. 'print' (adapté à ' print') → logprob: -1.376003384590149
    3. ' p' → logprob: -1.751003384590149
    4. ' print' → logprob: -2.2510032653808594
    5. 'r' → logprob: -2.8760032653808594
    6. ' r' → logprob: -3.6260032653808594
    7. '   ' → logprob: -4.501003265380859
    8. 'res' → logprob: -6.001003265380859
    9. ' res' → logprob: -6.501003265380859
    10. 'result' → logprob: -6.876003265380859

Token 259: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00034952821442857385
    2. '(cont' → logprob: -8.125349998474121
    3. '('' → logprob: -10.625349998474121
    4. '("' → logprob: -10.875349998474121
    5. '((' → logprob: -12.375349998474121
    6. 'contains' → logprob: -12.875349998474121
    7. ' (' → logprob: -13.750349998474121
    8. '(contents' → logprob: -14.250349998474121
    9. ' contains' → logprob: -15.000349998474121
    10. '(("' → logprob: -15.250349998474121

Token 260: 'contains' (ID: 21841)
  Prédit: 'contains'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'contains' → logprob: -0.00439035939052701
    2. ' contains' → logprob: -5.504390239715576
    3. '"' → logprob: -8.629390716552734
    4. '["' → logprob: -9.254390716552734
    5. '   ' → logprob: -11.504390716552734
    6. ''' → logprob: -11.504390716552734
    7. '['' → logprob: -11.754390716552734
    8. ' ' → logprob: -12.504390716552734
    9. 'contain' → logprob: -13.254390716552734
    10. '1' → logprob: -14.629390716552734

Token 261: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -5.200166469876422e-06
    2. '(' → logprob: -12.250004768371582
    3. ')' → logprob: -15.625004768371582
    4. '(
' → logprob: -16.0000057220459
    5. ' (' → logprob: -18.0000057220459
    6. ')(' → logprob: -18.3750057220459
    7. ',g' → logprob: -19.3750057220459
    8. '(n' → logprob: -19.5000057220459
    9. '```' → logprob: -19.5000057220459
    10. 'g' → logprob: -19.6250057220459

Token 262: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006196353584527969
    2. ',[' → logprob: -5.25619649887085
    3. ',(' → logprob: -7.63119649887085
    4. ',g' → logprob: -8.131196022033691
    5. ' ,' → logprob: -9.256196022033691
    6. '([' → logprob: -10.631196022033691
    7. ' ,[' → logprob: -11.006196022033691
    8. '(' → logprob: -11.631196022033691
    9. ',n' → logprob: -11.756196022033691
    10. '[(' → logprob: -12.006196022033691

Token 263: ' [' (ID: 723)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0025448701344430447
    2. ' [' → logprob: -6.25254487991333
    3. '[' → logprob: -8.002544403076172
    4. '[y' → logprob: -8.502544403076172
    5. '(x' → logprob: -9.752544403076172
    6. '[p' → logprob: -11.252544403076172
    7. '[i' → logprob: -12.502544403076172
    8. '([' → logprob: -13.752544403076172
    9. '[int' → logprob: -14.252544403076172
    10. '[a' → logprob: -14.752544403076172

Token 264: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2664456789934775e-06
    2. ' x' → logprob: -13.625000953674316
    3. '   ' → logprob: -20.375001907348633
    4. '(x' → logprob: -20.500001907348633
    5. ' ' → logprob: -20.750001907348633
    6. '	x' → logprob: -20.875001907348633
    7. '
' → logprob: -22.125001907348633
    8. '"x' → logprob: -22.750001907348633
    9. ')x' → logprob: -22.750001907348633
    10. '  ' → logprob: -23.125001907348633

Token 265: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2023765742778778
    2. ',y' → logprob: -1.7023766040802002
    3. ' ,' → logprob: -6.952376365661621
    4. ',
' → logprob: -12.202376365661621
    5. '   ' → logprob: -14.827376365661621
    6. ',Y' → logprob: -14.952376365661621
    7. 'y' → logprob: -15.577376365661621
    8. ',x' → logprob: -15.952376365661621
    9. ',g' → logprob: -16.202377319335938
    10. ',user' → logprob: -16.452377319335938

Token 266: ']))' (ID: 20259)
  Prédit: ']))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.0052912733517587185
    2. '])' → logprob: -5.25529146194458
    3. ']))
' → logprob: -11.005290985107422
    4. '))' → logprob: -11.005290985107422
    5. ']' → logprob: -11.630290985107422
    6. '])))' → logprob: -11.880290985107422
    7. ')])' → logprob: -12.505290985107422
    8. ')))' → logprob: -12.880290985107422
    9. ')]' → logprob: -13.880290985107422
    10. ')' → logprob: -14.755290985107422


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 264
Tokens correctement prédits (1ère position, stricte): 101
Tokens correctement prédits (1ère position, avec adaptation): 106
Tokens correctement prédits (top 10): 236
Précision stricte (1ère position): 38.26%
Précision adaptée (1ère position): 40.15%
Précision (top 10): 89.39%
================================================================================
