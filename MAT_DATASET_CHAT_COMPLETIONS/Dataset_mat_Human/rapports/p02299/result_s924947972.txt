================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
"""
http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=CGL_3_C&lang=jp

"""
import sys
from math import sqrt, atan2, acos, sin, cos
from sys import stdin
input = stdin.readline

class Point(object):
    epsilon = 1e-10

    def __init__(self, x=0.0, y=0.0):
        if isinstance(x, tuple):
            self.x = x[0]
            self.y = x[1]
        else:
            self.x = x
            self.y = y

    # ????????????
    def __add__(self, other):
        return Point(self.x + other.x, self.y + other.y)

    def __sub__(self, other):
        return Point(self.x - other.x, self.y - other.y)

    def __mul__(self, other):
        return Point(other * self.x, other * self.y)

    def __truediv__(self, other):
        return Point(self.x / other, self.y / other)

    def __lt__(self, other):
        if self.x == other.x:
            return self.y < other.y
        else:
            return self.x < other.x

    def __eq__(self, other):
        from math import fabs
        if fabs(self.x - other.x) < Point.epsilon and fabs(self.y - other.y) < Point.epsilon:
            return True
        else:
            return False

    def norm(self):
        return self.x * self.x + self.y * self.y

    def __abs__(self):
        return sqrt(self.norm())

    def ccw(self, p0, p1):
        # ??????2???(p0, p1)?????????????????????????????????????????¢????????????
        a = Vector(p1 - p0)
        b = Vector(self - p0)
        if Vector.cross(a, b) > Point.epsilon:
            return 1 # 'COUNTER_CLOCKWISE'
        elif Vector.cross(a, b) < -Point.epsilon:
            return -1 # 'CLOCKWISE'
        elif Vector.dot(a, b) < -Point.epsilon:
            return 2 # 'ONLINE_BACK'
        elif a.norm() < b.norm():
            return -2 # 'ONLINE_FRONT'
        else:
            return 0 # 'ON_SEGMENT'

    def project(self, s):
        # ??????(Point)????????????s??????????????????????????????????????§?¨?(?°???±)????±???????
        base = Vector(s.p2 - s.p1)
        a = Vector(self - s.p1)
        r = Vector.dot(a, base)
        r /= base.norm()
        return s.p1 + base * r

    def reflect(self, s):
        # ??????s???????§°?????¨?????????????????¨???????§°??????????????§?¨?(????°?)????±???????
        proj = self.project(s)
        return self + (proj - self)*2

    def distance(self, s):
        # ????????¨??????s????????¢????¨??????????
        if Vector.dot(s.p2-s.p1, self-s.p1) < 0.0:
            return abs(self - s.p1)
        if Vector.dot(s.p1-s.p2, self-s.p2) < 0.0:
            return abs(self - s.p2)
        return abs(Vector.cross(s.p2-s.p1, self-s.p1) / abs(s.p2-s.p1))

class Vector(Point):
    def __init__(self, x=0.0, y=0.0):
        if isinstance(x, tuple):
            self.x = x[0]
            self.y = x[1]
        elif isinstance(x, Point):
            self.x = x.x
            self.y = x.y
        else:
            self.x = x
            self.y = y

    # ????????????
    def __add__(self, other):
        return Vector(self.x + other.x, self.y + other.y)

    def __sub__(self, other):
        return Vector(self.x - other.x, self.y - other.y)

    def __mul__(self, other):
        return Vector(other * self.x, other * self.y)

    def __truediv__(self, other):
        return Vector(self.x / other, self.y / other)

    @classmethod
    def dot(cls, a, b):
        return a.x * b.x + a.y * b.y

    @classmethod
    def cross(cls, a, b):
        return a.x * b.y - a.y * b.x

    @classmethod
    def is_orthogonal(cls, a, b):
        return Vector.dot(a, b) == 0.0

    @classmethod
    def is_parallel(cls, a, b):
        return Vector.cross(a, b) == 0.0

class Segment(object):
    def __init__(self, p1=Point(), p2=Point()):
        if isinstance(p1, Point):
            self.p1 = p1
            self.p2 = p2
        elif isinstance(p1, tuple):
            self.p1 = Point(p1[0], p1[1])
            self.p2 = Point(p2[0], p2[1])

    def intersect(self, s):
        # ????????¨??????????????????????????????????????????????????????
        ans1 = s.p1.ccw(self.p1, self.p2) * s.p2.ccw(self.p1, self.p2)
        ans2 = self.p1.ccw(s.p1, s.p2) * self.p2.ccw(s.p1, s.p2)
        return ans1 <= 0 and ans2 <= 0

    def cross_point(self, s):
        # ????????¨??????????????????????????????????????§?¨?????±???????
        base = s.p2 - s.p1
        d1 = abs(Vector.cross(base, self.p1-s.p1))
        d2 = abs(Vector.cross(base, self.p2-s.p1))
        t = d1 / (d1 + d2)
        return self.p1 + (self.p2 - self.p1) * t

    def distance(self, s):
        # ????????¨?????????????????????????????¢????±???????
        if self.intersect(s):
            return 0.0
        d1 = s.p1.distance(self)
        d2 = s.p2.distance(self)
        d3 = self.p1.distance(s)
        d4 = self.p2.distance(s)
        return min(d1, d2, d3, d4)

    @classmethod
    def is_orthogonal(cls, s1, s2):
        a = Vector(s1.p2 - s1.p1)
        b = Vector(s2.p2 - s2.p1)
        return Vector.is_orthogonal(a, b)

    @classmethod
    def is_parallel(cls, s1, s2):
        a = Vector(s1.p2 - s1.p1)
        b = Vector(s2.p2 - s2.p1)
        return Vector.is_parallel(a, b)

class Line(Segment):
    pass

class Cirle(object):
    def __init__(self, x, y=Point(), r=1.0):
        if isinstance(x, Point):
            self.c = x
            self.r = y
        elif isinstance(x, tuple):
            self.c = Point(x[0], x[1])
            self.r = r

    def cross_points(self, s):
        if isinstance(s, Segment):
            pr = self.c.project(s)
            e = (s.p2 - s.p1) / abs(s.p2 - s.p1)
            base = sqrt(self.r * self.r - (pr - self.c).norm())
            return pr + e * base, pr - e * base
        elif isinstance(s, Cirle):
            c2 = s
            d = abs(self.c - c2.c)
            a = acos((self.r * self.r + d * d - c2.r * c2.r) / (2 * self.r * d))
            t = atan2(c2.c.y - self.c.y, c2.c.x - self.c.x)
            temp1 = Point(cos(t+a)*self.r, sin(t+a)*self.r)
            temp2 = Point(cos(t-a)*self.r, sin(t-a)*self.r)
            return self.c + temp1, self.c + temp2

def contains(polygon, p):
    n = len(polygon)
    x = False
    for i in range(n):
        a = polygon[i] - p
        b = polygon[(i+1)%n] - p
        if abs(Vector.cross(a, b)) < Point.epsilon and Vector.dot(a, b) < Point.epsilon:
            return 1
        if a.y > b.y:
            temp = a
            a = b
            b = temp
        if a.y < Point.epsilon and Point.epsilon < b.y and Vector.cross(a, b) > Point.epsilon:
            x = not x
    return 2 if x else 0

def main(args):
    n = int(input())
    polygon = []
    for _ in range(n):
        x, y = map(int, input().split())
        polygon.append(Point(x, y))
    q = int(input())
    for _ in range(q):
        x, y = map(int, input().split())
        result = contains(polygon, Point(x, y))
        print(result)

if __name__ == '__main__':
    main(sys.argv[1:])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '"""
' (ID: 15611)
  → Token d'amorce (pas de prédiction)

Token 1: 'http' (ID: 2903)
  → Token d'amorce (pas de prédiction)

Token 2: '://' (ID: 1684)
  → Token d'amorce (pas de prédiction)

Token 3: 'judge' (ID: 163735)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.6301098465919495
    2. '/' → logprob: -0.8801098465919495
    3. 's' → logprob: -3.8801097869873047
    4. 'www' → logprob: -4.255109786987305
    5. '//' → logprob: -4.630109786987305
    6. '://' → logprob: -6.130109786987305
    7. 'e' → logprob: -6.505109786987305
    8. '#' → logprob: -6.755109786987305
    9. 'g' → logprob: -6.880109786987305
    10. '"""' → logprob: -7.630109786987305

Token 4: '.u' (ID: 22262)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.13174644112586975
    2. ' .' → logprob: -3.006746530532837
    3. '://' → logprob: -4.381746292114258
    4. '.y' → logprob: -5.631746292114258
    5. '.c' → logprob: -5.756746292114258
    6. '```' → logprob: -5.756746292114258
    7. '.sourceforge' → logprob: -5.756746292114258
    8. '.cpp' → logprob: -5.881746292114258
    9. '.i' → logprob: -5.881746292114258
    10. '.cs' → logprob: -6.131746292114258

Token 5: '-a' (ID: 8575)
  Prédit: 'so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'so' → logprob: -0.6081448197364807
    2. 's' → logprob: -1.233144760131836
    3. 'sg' → logprob: -4.358144760131836
    4. 'poj' → logprob: -4.358144760131836
    5. 'r' → logprob: -4.483144760131836
    6. 'ral' → logprob: -4.608144760131836
    7. 'tf' → logprob: -4.608144760131836
    8. 't' → logprob: -4.858144760131836
    9. 'tc' → logprob: -4.858144760131836
    10. 'rl' → logprob: -4.858144760131836

Token 6: 'izu' (ID: 75080)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.048466648906469345
    2. 'ac' → logprob: -3.423466682434082
    3. 'cc' → logprob: -5.048466682434082
    4. 'cs' → logprob: -5.173466682434082
    5. 'cz' → logprob: -6.423466682434082
    6. 'cu' → logprob: -8.048466682434082
    7. 'cy' → logprob: -8.548466682434082
    8. 'cj' → logprob: -9.548466682434082
    9. '.ac' → logprob: -9.798466682434082
    10. 'ic' → logprob: -10.048466682434082

Token 7: '.ac' (ID: 25905)
  Prédit: '.ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ac' → logprob: -0.04374092072248459
    2. '.' → logprob: -3.66874098777771
    3. '.u' → logprob: -5.168740749359131
    4. '.org' → logprob: -5.668740749359131
    5. '.c' → logprob: -6.418740749359131
    6. '.jp' → logprob: -6.543740749359131
    7. '.edu' → logprob: -6.543740749359131
    8. 'ac' → logprob: -6.543740749359131
    9. 'online' → logprob: -7.918740749359131
    10. '.o' → logprob: -8.543741226196289

Token 8: '.jp' (ID: 39524)
  Prédit: 'jp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jp' → logprob: -0.024539582431316376
    2. 'm' → logprob: -4.149539470672607
    3. 'mj' → logprob: -5.524539470672607
    4. 'mx' → logprob: -6.649539470672607
    5. '.jp' → logprob: -7.024539470672607
    6. ' jp' → logprob: -7.774539470672607
    7. 'js' → logprob: -7.899539470672607
    8. 'mz' → logprob: -8.024539947509766
    9. 'ml' → logprob: -8.149539947509766
    10. 'jm' → logprob: -8.524539947509766

Token 9: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -1.3544423381972592e-05
    2. '"""' → logprob: -11.87501335144043
    3. '```' → logprob: -13.12501335144043
    4. ':' → logprob: -13.50001335144043
    5. ' /' → logprob: -14.50001335144043
    6. '/...' → logprob: -14.75001335144043
    7. '<|end|>' → logprob: -15.00001335144043
    8. '/">' → logprob: -15.00001335144043
    9. '"/' → logprob: -15.12501335144043
    10. '/
' → logprob: -15.62501335144043

Token 10: 'online' (ID: 34978)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.07290055602788925
    2. '"""' → logprob: -2.8229005336761475
    3. 'problem' → logprob: -6.197900772094727
    4. 'pro' → logprob: -6.447900772094727
    5. '""' → logprob: -6.697900772094727
    6. '#!/' → logprob: -7.072900772094727
    7. '/problems' → logprob: -7.447900772094727
    8. 'http' → logprob: -7.697900772094727
    9. '<|end|>' → logprob: -8.072900772094727
    10. ' """' → logprob: -8.197900772094727

Token 11: 'judge' (ID: 163735)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.0009947025682777166
    2. '.' → logprob: -7.625994682312012
    3. '-' → logprob: -8.250994682312012
    4. '/j' → logprob: -10.000994682312012
    5. 'system' → logprob: -10.500994682312012
    6. '_' → logprob: -10.500994682312012
    7. '```' → logprob: -10.625994682312012
    8. 'judge' → logprob: -10.750994682312012
    9. 'http' → logprob: -11.125994682312012
    10. '_j' → logprob: -12.375994682312012

Token 12: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -2.7372048862162046e-05
    2. '```' → logprob: -12.000027656555176
    3. '"""' → logprob: -12.375027656555176
    4. '.' → logprob: -12.625027656555176
    5. '"/' → logprob: -12.875027656555176
    6. '#!/' → logprob: -13.750027656555176
    7. '/">' → logprob: -13.750027656555176
    8. ':' → logprob: -13.875027656555176
    9. '#' → logprob: -14.000027656555176
    10. '_' → logprob: -14.375027656555176

Token 13: 'description' (ID: 9186)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.20423345267772675
    2. '"""' → logprob: -2.829233407974243
    3. 'pro' → logprob: -3.204233407974243
    4. 'problem' → logprob: -3.579233407974243
    5. 'Problems' → logprob: -4.079233646392822
    6. '%' → logprob: -4.954233646392822
    7. 'http' → logprob: -5.329233646392822
    8. 'services' → logprob: -5.454233646392822
    9. 'solutions' → logprob: -5.954233646392822
    10. '#!/' → logprob: -6.329233646392822

Token 14: '.jsp' (ID: 45294)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.01913023181259632
    2. '.' → logprob: -4.519130229949951
    3. '.html' → logprob: -5.144130229949951
    4. '_' → logprob: -8.26913070678711
    5. 's' → logprob: -8.51913070678711
    6. '?' → logprob: -8.51913070678711
    7. '.php' → logprob: -8.51913070678711
    8. 'html' → logprob: -8.89413070678711
    9. '#' → logprob: -8.89413070678711
    10. '.jsp' → logprob: -9.01913070678711

Token 15: '?id' (ID: 41628)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.1852380633354187
    2. '#' → logprob: -1.9352381229400635
    3. '?' → logprob: -4.060237884521484
    4. '">' → logprob: -6.060237884521484
    5. '_' → logprob: -7.310237884521484
    6. '<|end|>' → logprob: -7.435237884521484
    7. '"' → logprob: -7.560237884521484
    8. '#!/' → logprob: -7.685237884521484
    9. '.' → logprob: -8.060237884521484
    10. ')' → logprob: -8.310237884521484

Token 16: '=C' (ID: 93363)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.010612438432872295
    2. '=C' → logprob: -5.260612487792969
    3. '=A' → logprob: -6.385612487792969
    4. '=http' → logprob: -6.885612487792969
    5. '=D' → logprob: -7.760612487792969
    6. '=P' → logprob: -7.885612487792969
    7. '=%' → logprob: -8.010612487792969
    8. '=B' → logprob: -8.510612487792969
    9. '=i' → logprob: -9.010612487792969
    10. '=e' → logprob: -9.010612487792969

Token 17: 'GL' (ID: 7833)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.4890369772911072
    2. '++' → logprob: -1.989037036895752
    3. '_' → logprob: -2.489037036895752
    4. '#' → logprob: -3.114037036895752
    5. '+' → logprob: -3.489037036895752
    6. '-' → logprob: -4.114037036895752
    7. 'C' → logprob: -4.239037036895752
    8. 'B' → logprob: -4.614037036895752
    9. '"""' → logprob: -5.114037036895752
    10. 'S' → logprob: -5.239037036895752

Token 18: '_' (ID: 62)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.7874966263771057
    2. '#include' → logprob: -1.412496566772461
    3. '_' → logprob: -2.412496566772461
    4. '#' → logprob: -2.662496566772461
    5. 'import' → logprob: -2.912496566772461
    6. '.' → logprob: -3.787496566772461
    7. ':' → logprob: -4.037496566772461
    8. 's' → logprob: -5.037496566772461
    9. '"""' → logprob: -5.162496566772461
    10. '-' → logprob: -5.162496566772461

Token 19: '3' (ID: 18)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.2051618099212646
    2. 'B' → logprob: -1.5801618099212646
    3. 'C' → logprob: -1.8301618099212646
    4. 'D' → logprob: -2.3301618099212646
    5. 'P' → logprob: -3.3301618099212646
    6. 'S' → logprob: -3.4551618099212646
    7. 'E' → logprob: -3.5801618099212646
    8. '001' → logprob: -3.5801618099212646
    9. 'G' → logprob: -3.8301618099212646
    10. '002' → logprob: -4.205162048339844

Token 20: '_C' (ID: 1720)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.09954343736171722
    2. '_' → logprob: -2.724543333053589
    3. '.' → logprob: -5.099543571472168
    4. '#' → logprob: -5.224543571472168
    5. '"""' → logprob: -5.474543571472168
    6. 'A' → logprob: -6.349543571472168
    7. '-' → logprob: -6.349543571472168
    8. 'C' → logprob: -7.099543571472168
    9. '```' → logprob: -7.224543571472168
    10. ':' → logprob: -7.349543571472168

Token 21: '&' (ID: 5)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.9639090299606323
    2. 'd' → logprob: -2.213909149169922
    3. 'i' → logprob: -2.338909149169922
    4. '#' → logprob: -2.463909149169922
    5. ':' → logprob: -2.588909149169922
    6. '#include' → logprob: -2.838909149169922
    7. 'n' → logprob: -2.838909149169922
    8. ')' → logprob: -2.963909149169922
    9. 'def' → logprob: -3.213909149169922
    10. '/' → logprob: -3.213909149169922

Token 22: 'lang' (ID: 7585)
  Prédit: 'lang'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lang' → logprob: -0.042457323521375656
    2. 'language' → logprob: -3.292457342147827
    3. 'locale' → logprob: -6.917457103729248
    4. 'state' → logprob: -7.167457103729248
    5. 'mode' → logprob: -8.292457580566406
    6. ' lang' → logprob: -8.417457580566406
    7. 'fragment' → logprob: -8.417457580566406
    8. 'top' → logprob: -8.542457580566406
    9. 'action' → logprob: -8.542457580566406
    10. 'LANG' → logprob: -8.792457580566406

Token 23: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0654187947511673
    2. '=en' → logprob: -2.9404187202453613
    3. '=C' → logprob: -5.565418720245361
    4. '#' → logprob: -5.690418720245361
    5. '=c' → logprob: -6.690418720245361
    6. '=p' → logprob: -7.815418720245361
    7. '=j' → logprob: -8.19041919708252
    8. '++' → logprob: -8.44041919708252
    9. '=_' → logprob: -8.44041919708252
    10. '=%' → logprob: -9.44041919708252

Token 24: 'jp' (ID: 72936)
  Prédit: 'cpp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cpp' → logprob: -1.1873780488967896
    2. 'python' → logprob: -1.4373780488967896
    3. 'en' → logprob: -1.8123780488967896
    4. 'ja' → logprob: -2.1873779296875
    5. 'py' → logprob: -2.4373779296875
    6. 'C' → logprob: -3.3123779296875
    7. 'jp' → logprob: -3.6873779296875
    8. 'java' → logprob: -3.9373779296875
    9. 'Python' → logprob: -5.4373779296875
    10. 'c' → logprob: -6.0623779296875

Token 25: '

' (ID: 279)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -1.0699373483657837
    2. '#include' → logprob: -1.3199373483657837
    3. 'import' → logprob: -1.8199373483657837
    4. '#' → logprob: -2.319937229156494
    5. '\n' → logprob: -3.944937229156494
    6. 'def' → logprob: -4.444937229156494
    7. '```' → logprob: -4.444937229156494
    8. '
' → logprob: -4.944937229156494
    9. ':' → logprob: -5.069937229156494
    10. '"""' → logprob: -5.069937229156494

Token 26: '"""
' (ID: 15611)
  Prédit: '#include'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#include' → logprob: -0.7760903239250183
    2. 'import' → logprob: -1.776090383529663
    3. '#' → logprob: -1.901090383529663
    4. 'd' → logprob: -2.776090383529663
    5. 'n' → logprob: -3.276090383529663
    6. 'a' → logprob: -3.276090383529663
    7. '```' → logprob: -4.401090145111084
    8. 'A' → logprob: -4.651090145111084
    9. 'def' → logprob: -4.651090145111084
    10. 'i' → logprob: -4.651090145111084

Token 27: 'import' (ID: 561)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2304593324661255
    2. 'import' → logprob: -1.2304593324661255
    3. 'n' → logprob: -2.105459213256836
    4. '#include' → logprob: -2.730459213256836
    5. 'd' → logprob: -2.855459213256836
    6. 'a' → logprob: -3.230459213256836
    7. 'from' → logprob: -3.605459213256836
    8. '.' → logprob: -3.730459213256836
    9. 'i' → logprob: -3.980459213256836
    10. '```' → logprob: -4.605459213256836

Token 28: ' sys' (ID: 12228)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.47630539536476135
    2. ' sys' → logprob: -0.976305365562439
    3. ' ' → logprob: -7.1013054847717285
    4. ' numpy' → logprob: -7.1013054847717285
    5. ' itertools' → logprob: -7.7263054847717285
    6. ' collections' → logprob: -10.60130500793457
    7. ' sym' → logprob: -10.85130500793457
    8. 'math' → logprob: -11.10130500793457
    9. ' matplotlib' → logprob: -11.22630500793457
    10. ' s' → logprob: -11.22630500793457

Token 29: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.09109383076429367
    2. '
' → logprob: -3.0910937786102295
    3. '```' → logprob: -4.341094017028809
    4. '\n' → logprob: -4.841094017028809
    5. 'from' → logprob: -5.466094017028809
    6. ',' → logprob: -6.091094017028809
    7. 'def' → logprob: -6.341094017028809
    8. 'input' → logprob: -6.466094017028809
    9. 'data' → logprob: -6.466094017028809
    10. 'for' → logprob: -6.466094017028809

Token 30: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.05975384637713432
    2. 'input' → logprob: -3.684753894805908
    3. 'def' → logprob: -3.684753894805908
    4. 'from' → logprob: -5.184753894805908
    5. 'data' → logprob: -7.184753894805908
    6. 'sys' → logprob: -8.05975341796875
    7. '```' → logprob: -8.55975341796875
    8. 'class' → logprob: -8.55975341796875
    9. '
' → logprob: -8.93475341796875
    10. ' import' → logprob: -9.05975341796875

Token 31: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.0017054134514182806
    2. 'math' → logprob: -6.501705646514893
    3. ' collections' → logprob: -8.751705169677734
    4. ' itertools' → logprob: -10.501705169677734
    5. ' typing' → logprob: -11.251705169677734
    6. 'cmath' → logprob: -13.126705169677734
    7. ' fractions' → logprob: -14.001705169677734
    8. 'collections' → logprob: -14.501705169677734
    9. ' sys' → logprob: -14.751705169677734
    10. '_math' → logprob: -15.251705169677734

Token 32: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.011160185560584068
    2. 'import' → logprob: -4.511160373687744
    3. ' ' → logprob: -9.511159896850586
    4. '	import' → logprob: -11.011159896850586
    5. ' sqrt' → logprob: -12.511159896850586
    6. ' math' → logprob: -12.636159896850586
    7. ' importar' → logprob: -12.761159896850586
    8. '<|end|>' → logprob: -12.886159896850586
    9. ' importe' → logprob: -13.511159896850586
    10. '_import' → logprob: -13.636159896850586

Token 33: ' sqrt' (ID: 44237)
  Prédit: ' sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sqrt' → logprob: -0.6838029623031616
    2. 'sqrt' → logprob: -0.9338029623031616
    3. 'atan' → logprob: -2.433803081512451
    4. ' hypot' → logprob: -4.808803081512451
    5. '.sqrt' → logprob: -6.058803081512451
    6. 'import' → logprob: -6.933803081512451
    7. ' acos' → logprob: -7.558803081512451
    8. 'dist' → logprob: -7.808803081512451
    9. 'cos' → logprob: -8.058802604675293
    10. 'sin' → logprob: -8.183802604675293

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4476090371608734
    2. 'import' → logprob: -2.1976089477539062
    3. 'def' → logprob: -2.3226089477539062
    4. '
' → logprob: -2.8226089477539062
    5. 'from' → logprob: -3.3226089477539062
    6. '

' → logprob: -4.072608947753906
    7. '```' → logprob: -4.572608947753906
    8. 'class' → logprob: -5.072608947753906
    9. '\' → logprob: -5.447608947753906
    10. '<|end|>' → logprob: -5.697608947753906

Token 35: ' atan' (ID: 70327)
  Prédit: 'atan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atan' → logprob: -0.09046155959367752
    2. ' hypot' → logprob: -3.715461492538452
    3. 'acos' → logprob: -3.840461492538452
    4. ' acos' → logprob: -4.215461730957031
    5. 'hyp' → logprob: -4.965461730957031
    6. 'fabs' → logprob: -5.215461730957031
    7. 'cos' → logprob: -5.215461730957031
    8. 'is' → logprob: -6.340461730957031
    9. 'pi' → logprob: -6.465461730957031
    10. 'pow' → logprob: -6.590461730957031

Token 36: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. '２' → logprob: -14.500000953674316
    3. '22' → logprob: -16.875
    4. ' ' → logprob: -16.875
    5. '۲' → logprob: -17.875
    6. '₂' → logprob: -18.125
    7. '

' → logprob: -18.625
    8. '٢' → logprob: -19.125
    9. '```' → logprob: -19.375
    10. '27' → logprob: -19.5

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07882997393608093
    2. '
' → logprob: -3.2038300037384033
    3. 'import' → logprob: -4.328829765319824
    4. '

' → logprob: -4.453829765319824
    5. 'from' → logprob: -5.453829765319824
    6. ',
' → logprob: -5.828829765319824
    7. '(' → logprob: -7.078829765319824
    8. '```' → logprob: -7.578829765319824
    9. '<|end|>' → logprob: -7.703829765319824
    10. 'def' → logprob: -7.953829765319824

Token 38: ' acos' (ID: 185572)
  Prédit: 'pi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pi' → logprob: -0.6150990724563599
    2. 'cos' → logprob: -1.3650990724563599
    3. 'acos' → logprob: -2.4900989532470703
    4. 'degrees' → logprob: -3.6150989532470703
    5. ' acos' → logprob: -3.7400989532470703
    6. ' hypot' → logprob: -3.7400989532470703
    7. ' pi' → logprob: -4.24009895324707
    8. 'atan' → logprob: -4.49009895324707
    9. 'sin' → logprob: -5.11509895324707
    10. 'hyp' → logprob: -5.36509895324707

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020645709708333015
    2. 'from' → logprob: -5.145645618438721
    3. 'import' → logprob: -5.395645618438721
    4. ',
' → logprob: -5.520645618438721
    5. '
' → logprob: -5.645645618438721
    6. 'def' → logprob: -7.645645618438721
    7. '

' → logprob: -7.895645618438721
    8. '(' → logprob: -7.895645618438721
    9. '<|end|>' → logprob: -7.895645618438721
    10. ' ,' → logprob: -8.770646095275879

Token 40: ' sin' (ID: 2187)
  Prédit: 'pi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pi' → logprob: -0.5665257573127747
    2. 'sin' → logprob: -1.4415256977081299
    3. 'cos' → logprob: -1.9415256977081299
    4. 'atan' → logprob: -4.441525936126709
    5. ' pi' → logprob: -4.441525936126709
    6. ' cos' → logprob: -5.066525936126709
    7. 'asin' → logprob: -5.191525936126709
    8. 'degrees' → logprob: -5.441525936126709
    9. ' sin' → logprob: -5.691525936126709
    10. ' hypot' → logprob: -6.066525936126709

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006663294625468552
    2. '<|end|>' → logprob: -8.375666618347168
    3. 'from' → logprob: -8.750666618347168
    4. ' ,' → logprob: -9.250666618347168
    5. 'import' → logprob: -9.625666618347168
    6. ',
' → logprob: -9.750666618347168
    7. '(' → logprob: -11.250666618347168
    8. '<|end|>' → logprob: -11.375666618347168
    9. ' ' → logprob: -12.375666618347168
    10. 'def' → logprob: -12.375666618347168

Token 42: ' cos' (ID: 8974)
  Prédit: 'cos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cos' → logprob: -0.10025132447481155
    2. ' cos' → logprob: -2.3502514362335205
    3. 'pi' → logprob: -10.600251197814941
    4. '1' → logprob: -12.350251197814941
    5. '0' → logprob: -12.725251197814941
    6. '<|end|>' → logprob: -12.850251197814941
    7. 'atan' → logprob: -13.225251197814941
    8. ' pi' → logprob: -13.600251197814941
    9. 'os' → logprob: -13.725251197814941
    10. '_cos' → logprob: -14.100251197814941

Token 43: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021569907665252686
    2. 'from' → logprob: -4.146569728851318
    3. 'import' → logprob: -6.146569728851318
    4. '<|end|>' → logprob: -6.271569728851318
    5. ',
' → logprob: -7.271569728851318
    6. ' ,' → logprob: -8.396570205688477
    7. '
' → logprob: -8.771570205688477
    8. '<|end|>' → logprob: -9.271570205688477
    9. '```' → logprob: -9.396570205688477
    10. ' from' → logprob: -10.021570205688477

Token 44: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4574614465236664
    2. ',' → logprob: -1.4574614763259888
    3. 'import' → logprob: -2.082461357116699
    4. 'class' → logprob: -5.082461357116699
    5. ',
' → logprob: -6.582461357116699
    6. ' from' → logprob: -7.207461357116699
    7. 'def' → logprob: -7.707461357116699
    8. '```' → logprob: -8.0824613571167
    9. '
' → logprob: -8.8324613571167
    10. ' class' → logprob: -9.8324613571167

Token 45: ' sys' (ID: 12228)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -1.060603380203247
    2. ' typing' → logprob: -1.060603380203247
    3. ' fractions' → logprob: -2.310603380203247
    4. 'collections' → logprob: -2.560603380203247
    5. ' math' → logprob: -2.810603380203247
    6. 'math' → logprob: -4.185603141784668
    7. 'typing' → logprob: -4.310603141784668
    8. 'cmath' → logprob: -4.310603141784668
    9. 'fra' → logprob: -4.685603141784668
    10. ' itertools' → logprob: -4.685603141784668

Token 46: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.01206949446350336
    2. 'import' → logprob: -4.7620697021484375
    3. ' ' → logprob: -6.1370697021484375
    4. '<|end|>' → logprob: -6.7620697021484375
    5. '<|end|>' → logprob: -9.637069702148438
    6. '	import' → logprob: -9.887069702148438
    7. '.' → logprob: -12.387069702148438
    8. ' ' → logprob: -12.887069702148438
    9. '```' → logprob: -13.012069702148438
    10. ' imports' → logprob: -14.012069702148438

Token 47: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.010312446393072605
    2. 'stdout' → logprob: -5.635312557220459
    3. ' stdin' → logprob: -5.760312557220459
    4. 'argv' → logprob: -6.260312557220459
    5. 'set' → logprob: -7.385312557220459
    6. 'import' → logprob: -8.0103120803833
    7. 'exit' → logprob: -8.2603120803833
    8. 'max' → logprob: -8.7603120803833
    9. 'stderr' → logprob: -8.7603120803833
    10. 'stdlib' → logprob: -10.3853120803833

Token 48: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6058422327041626
    2. 'class' → logprob: -1.2308422327041626
    3. '```' → logprob: -3.355842113494873
    4. 'from' → logprob: -3.480842113494873
    5. ',' → logprob: -3.605842113494873
    6. '

' → logprob: -3.855842113494873
    7. '
' → logprob: -4.230842113494873
    8. 'def' → logprob: -4.355842113494873
    9. '\n' → logprob: -5.230842113494873
    10. '\' → logprob: -5.855842113494873

Token 49: 'input' (ID: 2586)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.47521549463272095
    2. 'import' → logprob: -1.1002154350280762
    3. '```' → logprob: -3.850215435028076
    4. 'def' → logprob: -5.100215435028076
    5. 'from' → logprob: -5.100215435028076
    6. '``' → logprob: -6.100215435028076
    7. ' class' → logprob: -6.100215435028076
    8. '

' → logprob: -6.600215435028076
    9. '
' → logprob: -6.850215435028076
    10. ',' → logprob: -6.850215435028076

Token 50: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.496664822101593
    2. '=' → logprob: -1.2466647624969482
    3. '.readline' → logprob: -2.7466647624969482
    4. '()' → logprob: -3.8716647624969482
    5. ' =' → logprob: -4.871665000915527
    6. '(' → logprob: -5.371665000915527
    7. '<|end|>' → logprob: -6.121665000915527
    8. '<|end|>' → logprob: -6.246665000915527
    9. ')' → logprob: -7.371665000915527
    10. '().' → logprob: -7.871665000915527

Token 51: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.008480182848870754
    2. ' stdin' → logprob: -5.008480072021484
    3. 'sys' → logprob: -6.383480072021484
    4. '(stdin' → logprob: -10.133480072021484
    5. 'input' → logprob: -11.133480072021484
    6. ' sys' → logprob: -11.508480072021484
    7. '.stdin' → logprob: -11.758480072021484
    8. 'std' → logprob: -14.008480072021484
    9. 'stdout' → logprob: -15.383480072021484
    10. '=sys' → logprob: -15.508480072021484

Token 52: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0003254527400713414
    2. '.' → logprob: -8.125325202941895
    3. '.read' → logprob: -10.500325202941895
    4. '.readlines' → logprob: -13.625325202941895
    5. '.buffer' → logprob: -14.875325202941895
    6. '.__' → logprob: -16.00032615661621
    7. ' readline' → logprob: -16.87532615661621
    8. 'read' → logprob: -17.12532615661621
    9. ' .' → logprob: -18.37532615661621
    10. '.Read' → logprob: -18.75032615661621

Token 53: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.21475738286972046
    2. '
' → logprob: -1.9647574424743652
    3. 'def' → logprob: -3.2147574424743652
    4. ' class' → logprob: -5.464757442474365
    5. '

' → logprob: -6.214757442474365
    6. '
' → logprob: -6.339757442474365
    7. '\' → logprob: -6.714757442474365
    8. '\n' → logprob: -7.089757442474365
    9. '```' → logprob: -7.089757442474365
    10. ' 
' → logprob: -7.964757442474365

Token 54: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0026328498497605324
    2. ' class' → logprob: -6.3776326179504395
    3. 'def' → logprob: -7.2526326179504395
    4. 'EPS' → logprob: -9.377633094787598
    5. 'PI' → logprob: -10.127633094787598
    6. '
' → logprob: -10.627633094787598
    7. 'N' → logprob: -10.627633094787598
    8. 'import' → logprob: -11.627633094787598
    9. 'from' → logprob: -11.877633094787598
    10. 'n' → logprob: -12.252633094787598

Token 55: ' Point' (ID: 9971)
  Prédit: ' Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.003849955275654793
    2. ' Vector' → logprob: -5.878849983215332
    3. ' Vec' → logprob: -7.503849983215332
    4. 'Point' → logprob: -7.753849983215332
    5. ' Polygon' → logprob: -11.003849983215332
    6. 'Vector' → logprob: -11.128849983215332
    7. '_Point' → logprob: -11.128849983215332
    8. '	Point' → logprob: -11.628849983215332
    9. ' Geometry' → logprob: -12.378849983215332
    10. '_Vector' → logprob: -14.253849983215332

Token 56: '(object' (ID: 9750)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005147866904735565
    2. '():' → logprob: -8.12551498413086
    3. '):' → logprob: -9.25051498413086
    4. ':
' → logprob: -9.87551498413086
    5. ' :' → logprob: -10.25051498413086
    6. '(' → logprob: -10.87551498413086
    7. '(object' → logprob: -11.87551498413086
    8. ':**' → logprob: -12.87551498413086
    9. '>:' → logprob: -13.12551498413086
    10. '<|end|>' → logprob: -13.37551498413086

Token 57: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -9.615255839889869e-05
    2. '):
' → logprob: -10.125096321105957
    3. ')' → logprob: -10.250096321105957
    4. ':' → logprob: -10.875096321105957
    5. ' ):' → logprob: -13.875096321105957
    6. ',' → logprob: -15.500096321105957
    7. '<|end|>' → logprob: -15.875096321105957
    8. '():' → logprob: -16.00009536743164
    9. '):
' → logprob: -16.62509536743164
    10. '):

' → logprob: -16.75009536743164

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010292736813426018
    2. ' def' → logprob: -5.5102925300598145
    3. '<|end|>' → logprob: -5.6352925300598145
    4. '    
' → logprob: -7.0102925300598145
    5. '    ' → logprob: -7.1352925300598145
    6. 'def' → logprob: -8.010293006896973
    7. '	def' → logprob: -8.385293006896973
    8. '<|end|>' → logprob: -8.635293006896973
    9. ' ' → logprob: -10.260293006896973
    10. ' 
' → logprob: -10.635293006896973

Token 59: ' epsilon' (ID: 73311)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.055053457617759705
    2. 'def' → logprob: -3.555053472518921
    3. '   ' → logprob: -4.055053234100342
    4. ' __' → logprob: -4.930053234100342
    5. '    ' → logprob: -8.6800537109375
    6. '    
' → logprob: -9.3050537109375
    7. '__' → logprob: -9.5550537109375
    8. '	def' → logprob: -10.0550537109375
    9. ' ' → logprob: -10.1800537109375
    10. ' x' → logprob: -12.9300537109375

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014327093958854675
    2. '=' → logprob: -4.264327049255371
    3. ' ' → logprob: -8.764327049255371
    4. '   ' → logprob: -12.764327049255371
    5. '  ' → logprob: -13.264327049255371
    6. '_' → logprob: -14.514327049255371
    7. '    ' → logprob: -14.639327049255371
    8. '<|end|>' → logprob: -14.639327049255371
    9. ' =)' → logprob: -14.764327049255371
    10. ',' → logprob: -15.389327049255371

Token 61: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011072111316025257
    2. ' ' → logprob: -4.511072158813477
    3. '10' → logprob: -10.761072158813477
    4. '(' → logprob: -12.886072158813477
    5. ' (' → logprob: -15.386072158813477
    6. '0' → logprob: -16.261072158813477
    7. '2' → logprob: -16.386072158813477
    8. '  ' → logprob: -16.761072158813477
    9. '   ' → logprob: -17.261072158813477
    10. '１' → logprob: -17.261072158813477

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025975380558520555
    2. '10' → logprob: -6.002597332000732
    3. ' ' → logprob: -9.37759780883789
    4. '(' → logprob: -10.37759780883789
    5. '0' → logprob: -12.12759780883789
    6. '2' → logprob: -15.50259780883789
    7. '   ' → logprob: -16.37759780883789
    8. ' (' → logprob: -16.37759780883789
    9. '3' → logprob: -16.50259780883789
    10. '  ' → logprob: -16.62759780883789

Token 63: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0014884350821375847
    2. '0' → logprob: -6.626488208770752
    3. '-' → logprob: -8.87648868560791
    4. '.' → logprob: -11.37648868560791
    5. 'E' → logprob: -12.62648868560791
    6. '```' → logprob: -12.75148868560791
    7. '.e' → logprob: -13.87648868560791
    8. '1' → logprob: -14.37648868560791
    9. '2' → logprob: -14.62648868560791
    10. '<<' → logprob: -15.00148868560791

Token 64: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00011951648048125207
    2. '9' → logprob: -9.62511920928955
    3. '09' → logprob: -10.75011920928955
    4. '06' → logprob: -11.87511920928955
    5. '7' → logprob: -12.00011920928955
    6. '10' → logprob: -12.00011920928955
    7. '```' → logprob: -13.25011920928955
    8. '07' → logprob: -13.50011920928955
    9. ' -' → logprob: -13.62511920928955
    10. '6' → logprob: -14.00011920928955

Token 65: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.20376907289028168
    2. '9' → logprob: -2.3287689685821533
    3. '8' → logprob: -2.4537689685821533
    4. '08' → logprob: -7.953769207000732
    5. '7' → logprob: -8.328768730163574
    6. '09' → logprob: -8.453768730163574
    7. '12' → logprob: -8.953768730163574
    8. '15' → logprob: -11.328768730163574
    9. '11' → logprob: -11.953768730163574
    10. '14' → logprob: -12.328768730163574

Token 66: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7740347981452942
    2. ':' → logprob: -0.8990347981452942
    3. '   ' → logprob: -2.7740347385406494
    4. '    
' → logprob: -3.7740347385406494
    5. '<|end|>' → logprob: -4.0240349769592285
    6. ' 
' → logprob: -5.0240349769592285
    7. '```' → logprob: -5.6490349769592285
    8. ':
' → logprob: -6.1490349769592285
    9. ' def' → logprob: -6.2740349769592285
    10. '    ' → logprob: -6.6490349769592285

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22103413939476013
    2. ' def' → logprob: -1.8460341691970825
    3. ':' → logprob: -4.221034049987793
    4. '    
' → logprob: -4.221034049987793
    5. 'def' → logprob: -4.971034049987793
    6. '    ' → logprob: -6.846034049987793
    7. ' ' → logprob: -6.971034049987793
    8. ' 
' → logprob: -7.596034049987793
    9. '
' → logprob: -7.971034049987793
    10. '	def' → logprob: -8.221034049987793

Token 68: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.6004095077514648
    2. ' def' → logprob: -0.8504095077514648
    3. '   ' → logprob: -3.725409507751465
    4. '    
' → logprob: -10.225409507751465
    5. '	def' → logprob: -10.725409507751465
    6. '    ' → logprob: -12.600409507751465
    7. ' ' → logprob: -12.975409507751465
    8. ' 
' → logprob: -12.975409507751465
    9. '```' → logprob: -14.350409507751465
    10. 'class' → logprob: -14.600409507751465

Token 69: ' __' (ID: 2516)
  Prédit: ' init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' init' → logprob: -0.050675299018621445
    2. ' __' → logprob: -3.550675392150879
    3. 'init' → logprob: -4.050675392150879
    4. '_init' → logprob: -6.300675392150879
    5. ' def' → logprob: -6.925675392150879
    6. ' _' → logprob: -7.925675392150879
    7. '__' → logprob: -9.675675392150879
    8. ' ' → logprob: -10.925675392150879
    9. '_' → logprob: -11.175675392150879
    10. ' in' → logprob: -12.550675392150879

Token 70: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00043567578541114926
    2. 'eq' → logprob: -7.750435829162598
    3. 'lt' → logprob: -12.250435829162598
    4. 'sub' → logprob: -15.875435829162598
    5. 'abs' → logprob: -16.25043487548828
    6. 'new' → logprob: -17.25043487548828
    7. ' init' → logprob: -17.50043487548828
    8. 'def' → logprob: -17.87543487548828
    9. '_init' → logprob: -18.12543487548828
    10. 'call' → logprob: -18.50043487548828

Token 71: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.011174794286489487
    2. '__' → logprob: -4.51117467880249
    3. '__(
' → logprob: -10.011175155639648
    4. '__(*' → logprob: -10.636175155639648
    5. '__('' → logprob: -10.761175155639648
    6. '__((' → logprob: -10.886175155639648
    7. '(self' → logprob: -12.011175155639648
    8. '__("' → logprob: -12.511175155639648
    9. '(' → logprob: -12.636175155639648
    10. '_(' → logprob: -13.386175155639648

Token 72: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.165027217415627e-05
    2. ' self' → logprob: -10.750021934509277
    3. '(self' → logprob: -17.12502098083496
    4. '	self' → logprob: -17.12502098083496
    5. ',' → logprob: -18.37502098083496
    6. '   ' → logprob: -18.50002098083496
    7. 's' → logprob: -19.12502098083496
    8. ',self' → logprob: -19.12502098083496
    9. ' ' → logprob: -20.25002098083496
    10. '       ' → logprob: -20.50002098083496

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015698691830039024
    2. 'self' → logprob: -4.8906989097595215
    3. ' ,' → logprob: -5.1406989097595215
    4. '(self' → logprob: -6.5156989097595215
    5. ',self' → logprob: -7.3906989097595215
    6. ' self' → logprob: -9.640698432922363
    7. '_,' → logprob: -10.640698432922363
    8. '__,' → logprob: -12.640698432922363
    9. '_self' → logprob: -12.640698432922363
    10. '	self' → logprob: -12.890698432922363

Token 74: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6963593363761902
    2. 'self' → logprob: -0.6963593363761902
    3. ' self' → logprob: -6.321359157562256
    4. ' x' → logprob: -6.571359157562256
    5. '   ' → logprob: -12.446359634399414
    6. ' ' → logprob: -12.571359634399414
    7. '(self' → logprob: -14.071359634399414
    8. '	self' → logprob: -14.446359634399414
    9. '  ' → logprob: -14.821359634399414
    10. '	x' → logprob: -15.321359634399414

Token 75: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017148085171356797
    2. '=' → logprob: -7.126714706420898
    3. '):' → logprob: -7.251714706420898
    4. ' ,' → logprob: -8.751714706420898
    5. ':' → logprob: -11.001714706420898
    6. '=None' → logprob: -11.376714706420898
    7. ',x' → logprob: -11.751714706420898
    8. '<|end|>' → logprob: -13.126714706420898
    9. ' ):' → logprob: -14.001714706420898
    10. '<|end|>' → logprob: -14.251714706420898

Token 76: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012368128227535635
    2. ' ' → logprob: -9.000123977661133
    3. ')' → logprob: -16.250123977661133
    4. 'None' → logprob: -16.500123977661133
    5. '=' → logprob: -17.375123977661133
    6. '０' → logprob: -18.000123977661133
    7. '   ' → logprob: -18.125123977661133
    8. 'float' → logprob: -18.375123977661133
    9. '  ' → logprob: -18.750123977661133
    10. '۰' → logprob: -18.875123977661133

Token 77: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04349750280380249
    2. '.' → logprob: -3.1684975624084473
    3. ' ,' → logprob: -8.418497085571289
    4. '<|end|>' → logprob: -9.418497085571289
    5. '<|end|>' → logprob: -9.543497085571289
    6. '):' → logprob: -10.293497085571289
    7. ')' → logprob: -10.793497085571289
    8. ',float' → logprob: -11.168497085571289
    9. '.,' → logprob: -11.418497085571289
    10. ',int' → logprob: -11.543497085571289

Token 78: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. 'float' → logprob: -18.0
    3. ' ' → logprob: -18.25
    4. '00' → logprob: -19.75
    5. 'double' → logprob: -19.875
    6. '5' → logprob: -20.5
    7. 'None' → logprob: -21.125
    8. 'x' → logprob: -21.125
    9. '  ' → logprob: -21.25
    10. '０' → logprob: -21.375

Token 79: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010625827126204967
    2. ' ,' → logprob: -6.876062393188477
    3. ',x' → logprob: -11.126062393188477
    4. '):' → logprob: -12.501062393188477
    5. ')' → logprob: -12.501062393188477
    6. ',y' → logprob: -13.251062393188477
    7. ',float' → logprob: -13.751062393188477
    8. ',p' → logprob: -14.001062393188477
    9. ',
' → logprob: -14.376062393188477
    10. '<|end|>' → logprob: -14.626062393188477

Token 80: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4740792512893677
    2. ' y' → logprob: -0.9740792512893677
    3. ' ' → logprob: -13.474079132080078
    4. '	y' → logprob: -14.349079132080078
    5. ' ' → logprob: -17.099079132080078
    6. '<|end|>' → logprob: -17.099079132080078
    7. ',y' → logprob: -17.349079132080078
    8. '    ' → logprob: -17.474079132080078
    9. ')y' → logprob: -17.974079132080078
    10. '0' → logprob: -18.599079132080078

Token 81: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012114722281694412
    2. ')' → logprob: -4.637114524841309
    3. ')=' → logprob: -6.262114524841309
    4. '):' → logprob: -8.137114524841309
    5. '=None' → logprob: -9.387114524841309
    6. '<|end|>' → logprob: -10.762114524841309
    7. ',' → logprob: -11.262114524841309
    8. '=}' → logprob: -11.637114524841309
    9. '<|end|>' → logprob: -11.762114524841309
    10. '=float' → logprob: -12.387114524841309

Token 82: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003805064770858735
    2. ' ' → logprob: -7.875380516052246
    3. ')' → logprob: -15.125380516052246
    4. '  ' → logprob: -17.25037956237793
    5. ' )' → logprob: -18.50037956237793
    6. '<|end|>' → logprob: -18.62537956237793
    7. '   ' → logprob: -18.75037956237793
    8. '۰' → logprob: -19.00037956237793
    9. ',' → logprob: -19.25037956237793
    10. '<|end|>' → logprob: -19.25037956237793

Token 83: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -2.8206473871250637e-05
    2. ')' → logprob: -10.500028610229492
    3. '.)' → logprob: -14.500028610229492
    4. ',' → logprob: -17.625028610229492
    5. '):' → logprob: -17.625028610229492
    6. ' ' → logprob: -17.750028610229492
    7. '.

' → logprob: -17.875028610229492
    8. ' .' → logprob: -17.875028610229492
    9. '=' → logprob: -18.000028610229492
    10. '<|end|>' → logprob: -18.000028610229492

Token 84: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.375000953674316
    3. '5' → logprob: -15.875000953674316
    4. '1' → logprob: -16.625
    5. ')' → logprob: -16.625
    6. '6' → logprob: -17.75
    7. '<|end|>' → logprob: -18.625
    8. '9' → logprob: -19.25
    9. '  ' → logprob: -19.25
    10. '```' → logprob: -19.625

Token 85: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007674653083086014
    2. ')' → logprob: -4.882674694061279
    3. '):
' → logprob: -10.132674217224121
    4. ' ):' → logprob: -10.632674217224121
    5. ',' → logprob: -13.132674217224121
    6. ' ' → logprob: -14.382674217224121
    7. ')：' → logprob: -14.882674217224121
    8. '   ' → logprob: -15.007674217224121
    9. ':' → logprob: -15.132674217224121
    10. ' )' → logprob: -15.257674217224121

Token 86: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013208000920712948
    2. 'x' → logprob: -4.888207912445068
    3. 'self' → logprob: -6.013207912445068
    4. ' ' → logprob: -7.263207912445068
    5. '	' → logprob: -7.638207912445068
    6. '   ' → logprob: -7.638207912445068
    7. ' self' → logprob: -7.888207912445068
    8. ')' → logprob: -8.138208389282227
    9. 's' → logprob: -8.388208389282227
    10. '<|end|>' → logprob: -9.263208389282227

Token 87: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.044541265815496445
    2. ' self' → logprob: -3.294541358947754
    3. '       ' → logprob: -5.044541358947754
    4. '   ' → logprob: -11.044541358947754
    5. ' ' → logprob: -11.544541358947754
    6. '	self' → logprob: -12.169541358947754
    7. 'x' → logprob: -13.419541358947754
    8. 's' → logprob: -14.544541358947754
    9. '        ' → logprob: -15.294541358947754
    10. '     ' → logprob: -15.544541358947754

Token 88: ' isinstance' (ID: 25889)
  Prédit: ' isinstance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.20310182869434357
    2. 'abs' → logprob: -2.203101873397827
    3. ' abs' → logprob: -3.078101873397827
    4. 'is' → logprob: -4.453101634979248
    5. 'type' → logprob: -4.703101634979248
    6. ' type' → logprob: -5.828101634979248
    7. 'x' → logprob: -6.578101634979248
    8. ' x' → logprob: -6.828101634979248
    9. ' not' → logprob: -7.703101634979248
    10. 'float' → logprob: -8.578102111816406

Token 89: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.700132997939363e-05
    2. 'x' → logprob: -11.375017166137695
    3. '(' → logprob: -12.125017166137695
    4. ' x' → logprob: -18.125017166137695
    5. ' (' → logprob: -18.375017166137695
    6. '(y' → logprob: -18.500017166137695
    7. '(point' → logprob: -18.875017166137695
    8. ' ' → logprob: -19.500017166137695
    9. '(float' → logprob: -19.500017166137695
    10. '((' → logprob: -20.375017166137695

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005779353086836636
    2. ' ,' → logprob: -7.750577926635742
    3. ',float' → logprob: -9.250577926635742
    4. ',int' → logprob: -10.750577926635742
    5. ',(' → logprob: -11.125577926635742
    6. '(' → logprob: -12.250577926635742
    7. ',str' → logprob: -12.500577926635742
    8. ',list' → logprob: -12.750577926635742
    9. ')' → logprob: -13.750577926635742
    10. ',double' → logprob: -14.000577926635742

Token 91: ' tuple' (ID: 31311)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.021674320101737976
    2. 'float' → logprob: -4.271674156188965
    3. 'int' → logprob: -5.146674156188965
    4. 'list' → logprob: -6.771674156188965
    5. ' Point' → logprob: -8.146674156188965
    6. 'tuple' → logprob: -9.396674156188965
    7. '(Point' → logprob: -9.521674156188965
    8. '	Point' → logprob: -11.021674156188965
    9. 'point' → logprob: -11.521674156188965
    10. ' float' → logprob: -11.521674156188965

Token 92: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4774644374847412
    2. ')' → logprob: -0.9774644374847412
    3. '):
' → logprob: -5.72746467590332
    4. ' or' → logprob: -10.22746467590332
    5. ' ):' → logprob: -10.35246467590332
    6. '   ' → logprob: -11.22746467590332
    7. '):

' → logprob: -11.60246467590332
    8. ' )' → logprob: -12.35246467590332
    9. '):
' → logprob: -12.35246467590332
    10. ',' → logprob: -12.60246467590332

Token 93: '           ' (ID: 352)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.9293631911277771
    2. 'x' → logprob: -1.8043632507324219
    3. '       ' → logprob: -1.8043632507324219
    4. ' self' → logprob: -2.054363250732422
    5. '           ' → logprob: -2.179363250732422
    6. 'self' → logprob: -4.054363250732422
    7. '        ' → logprob: -5.304363250732422
    8. ',' → logprob: -5.679363250732422
    9. ' (' → logprob: -5.929363250732422
    10. ' ' → logprob: -6.554363250732422

Token 94: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5828170776367188
    2. 'self' (adapté à ' self') → logprob: -0.8328170776367188
    3. '(self' → logprob: -5.457817077636719
    4. 'x' → logprob: -6.957817077636719
    5. ' (' → logprob: -7.332817077636719
    6. ' x' → logprob: -7.582817077636719
    7. '       ' → logprob: -7.707817077636719
    8. '(' → logprob: -11.707817077636719
    9. '(x' → logprob: -11.707817077636719
    10. '	self' → logprob: -12.332817077636719

Token 95: '.x' (ID: 3700)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.657149612903595
    2. '.x' → logprob: -0.782149612903595
    3. 'x' → logprob: -4.032149791717529
    4. ' =' → logprob: -5.657149791717529
    5. ' .' → logprob: -6.532149791717529
    6. ' x' → logprob: -7.907149791717529
    7. ',' → logprob: -7.907149791717529
    8. ' ' → logprob: -8.157149314880371
    9. '<|end|>' → logprob: -8.657149314880371
    10. '=' → logprob: -9.532149314880371

Token 96: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7014285922050476
    2. ' =' → logprob: -0.7014285922050476
    3. ' ,' → logprob: -5.326428413391113
    4. '=' → logprob: -5.701428413391113
    5. ',x' → logprob: -11.076428413391113
    6. ' ' → logprob: -11.076428413391113
    7. ',self' → logprob: -13.076428413391113
    8. '<|end|>' → logprob: -13.201428413391113
    9. '=x' → logprob: -13.326428413391113
    10. ',y' → logprob: -13.826428413391113

Token 97: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3868717551231384
    2. 'x' → logprob: -1.1368718147277832
    3. '	x' → logprob: -14.136871337890625
    4. 'float' → logprob: -17.136871337890625
    5. ')x' → logprob: -17.261871337890625
    6. '(x' → logprob: -18.011871337890625
    7. ' float' → logprob: -18.636871337890625
    8. '<|end|>' → logprob: -18.636871337890625
    9. '0' → logprob: -18.761871337890625
    10. '{x' → logprob: -19.761871337890625

Token 98: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000241801084484905
    2. '0' → logprob: -9.125242233276367
    3. ' [' → logprob: -9.500242233276367
    4. '.' → logprob: -10.250242233276367
    5. ' ' → logprob: -11.375242233276367
    6. ')' → logprob: -12.750242233276367
    7. ',' → logprob: -13.250242233276367
    8. '(' → logprob: -14.250242233276367
    9. ' )' → logprob: -14.375242233276367
    10. '[x' → logprob: -14.375242233276367

Token 99: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -19.000001907348633
    4. '1' → logprob: -19.187501907348633
    5. '０' → logprob: -19.437501907348633
    6. '۰' → logprob: -19.562501907348633
    7. '00' → logprob: -19.625001907348633
    8. '[' → logprob: -19.812501907348633
    9. '<|end|>' → logprob: -20.000001907348633
    10. ']' → logprob: -20.312501907348633

Token 100: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04841633513569832
    2. ']' → logprob: -3.6734163761138916
    3. '<|end|>' → logprob: -3.9234163761138916
    4. '<|end|>' → logprob: -6.9234161376953125
    5. ' )' → logprob: -7.4234161376953125
    6. '}' → logprob: -9.173416137695312
    7. ' ' → logprob: -9.173416137695312
    8. '       ' → logprob: -9.423416137695312
    9. ' ]' → logprob: -9.798416137695312
    10. '   ' → logprob: -10.548416137695312

Token 101: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.6374516487121582
    2. ' self' → logprob: -0.7624516487121582
    3. '           ' → logprob: -5.887451648712158
    4. ' ' → logprob: -6.637451648712158
    5. 'y' → logprob: -8.012451171875
    6. ' y' → logprob: -9.387451171875
    7. '        ' → logprob: -9.637451171875
    8. 'x' → logprob: -9.762451171875
    9. '       ' → logprob: -9.762451171875
    10. '            ' → logprob: -9.762451171875

Token 103: '.y' (ID: 4486)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.025745108723640442
    2. '.y' → logprob: -3.775745153427124
    3. '.x' → logprob: -6.275744915008545
    4. '[' → logprob: -7.525744915008545
    5. 'y' → logprob: -10.275745391845703
    6. ' .' → logprob: -10.775745391845703
    7. 'x' → logprob: -12.150745391845703
    8. ' ' → logprob: -12.150745391845703
    9. '.py' → logprob: -13.525745391845703
    10. '<|end|>' → logprob: -13.650745391845703

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004079470410943031
    2. '=' → logprob: -5.504079341888428
    3. ' ' → logprob: -14.254079818725586
    4. '<|end|>' → logprob: -15.379079818725586
    5. ',' → logprob: -17.004079818725586
    6. ')' → logprob: -18.379079818725586
    7. '=x' → logprob: -18.629079818725586
    8. ' x' → logprob: -18.879079818725586
    9. ' ' → logprob: -19.004079818725586
    10. '<|end|>' → logprob: -19.129079818725586

Token 105: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06196824833750725
    2. ' x' → logprob: -2.8119683265686035
    3. '(x' → logprob: -14.561967849731445
    4. '	x' → logprob: -17.061967849731445
    5. ')x' → logprob: -18.061967849731445
    6. '0' → logprob: -18.936967849731445
    7. '<|end|>' → logprob: -18.936967849731445
    8. ' ' → logprob: -20.061967849731445
    9. '{x' → logprob: -20.811967849731445
    10. 't' → logprob: -20.811967849731445

Token 106: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1472419600977446e-06
    2. '1' → logprob: -13.750000953674316
    3. '[
' → logprob: -17.500001907348633
    4. ' [' → logprob: -18.125001907348633
    5. '][' → logprob: -18.250001907348633
    6. '.' → logprob: -18.875001907348633
    7. ']' → logprob: -19.750001907348633
    8. '```' → logprob: -21.125001907348633
    9. '(' → logprob: -21.375001907348633
    10. ' ' → logprob: -21.625001907348633

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. '１' → logprob: -17.000001907348633
    4. '[' → logprob: -17.687501907348633
    5. '   ' → logprob: -17.750001907348633
    6. '0' → logprob: -18.000001907348633
    7. '  ' → logprob: -18.500001907348633
    8. '<|end|>' → logprob: -18.750001907348633
    9. '<|end|>' → logprob: -18.937501907348633
    10. ']' → logprob: -19.000001907348633

Token 108: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1428767740726471
    2. '<|end|>' → logprob: -2.2678768634796143
    3. '       ' → logprob: -3.7678768634796143
    4. '<|end|>' → logprob: -5.767876625061035
    5. '}' → logprob: -6.892876625061035
    6. ']' → logprob: -6.892876625061035
    7. '
' → logprob: -7.142876625061035
    8. ' ' → logprob: -9.017876625061035
    9. '   ' → logprob: -9.267876625061035
    10. '           ' → logprob: -9.642876625061035

Token 109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011256840080022812
    2. ' else' → logprob: -5.386256694793701
    3. '<|end|>' → logprob: -5.886256694793701
    4. 'else' → logprob: -6.386256694793701
    5. '
' → logprob: -7.011256694793701
    6. '   ' → logprob: -7.761256694793701
    7. ')' → logprob: -9.13625717163086
    8. ' ' → logprob: -9.38625717163086
    9. '     ' → logprob: -9.63625717163086
    10. ' 
' → logprob: -9.63625717163086

Token 110: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.8351067304611206
    2. ' else' → logprob: -0.9601067304611206
    3. '       ' → logprob: -1.7101067304611206
    4. 'elif' → logprob: -6.83510684967041
    5. '   ' → logprob: -7.46010684967041
    6. '	else' → logprob: -7.83510684967041
    7. '<|end|>' → logprob: -9.46010684967041
    8. '     ' → logprob: -9.58510684967041
    9. ' elif' → logprob: -9.83510684967041
    10. ')' → logprob: -10.33510684967041

Token 111: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011109127663075924
    2. '       ' → logprob: -5.261109352111816
    3. ':
' → logprob: -5.386109352111816
    4. '           ' → logprob: -7.136109352111816
    5. ' :' → logprob: -9.011109352111816
    6. '   ' → logprob: -9.261109352111816
    7. '<|end|>' → logprob: -9.636109352111816
    8. ',' → logprob: -9.886109352111816
    9. '<|end|>' → logprob: -10.386109352111816
    10. '        ' → logprob: -11.136109352111816

Token 112: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7193058133125305
    2. ' self' → logprob: -1.0943057537078857
    3. 'self' → logprob: -1.8443057537078857
    4. '           ' → logprob: -4.094305992126465
    5. '   ' → logprob: -6.719305992126465
    6. ' ' → logprob: -6.844305992126465
    7. '	self' → logprob: -7.469305992126465
    8. '     ' → logprob: -9.594305992126465
    9. '	       ' → logprob: -9.719305992126465
    10. ' ' → logprob: -9.719305992126465

Token 113: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.018182484433054924
    2. ' self' → logprob: -4.018182277679443
    3. '       ' → logprob: -10.518182754516602
    4. '   ' → logprob: -12.893182754516602
    5. '	self' → logprob: -13.268182754516602
    6. '           ' → logprob: -14.143182754516602
    7. ' ' → logprob: -15.768182754516602
    8. '        ' → logprob: -16.1431827545166
    9. '    ' → logprob: -16.3931827545166
    10. '
' → logprob: -16.3931827545166

Token 114: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.47447866201400757
    2. '.' → logprob: -0.9744786620140076
    3. ' .' → logprob: -8.224478721618652
    4. 'x' → logprob: -8.974478721618652
    5. ' ' → logprob: -12.349478721618652
    6. '._' → logprob: -14.974478721618652
    7. '.
' → logprob: -15.099478721618652
    8. '.​' → logprob: -15.224478721618652
    9. ' x' → logprob: -15.224478721618652
    10. '.space' → logprob: -15.349478721618652

Token 115: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193527340888977
    2. '=' → logprob: -1.5019352436065674
    3. ' ' → logprob: -12.876935005187988
    4. ',' → logprob: -13.501935005187988
    5. '=x' → logprob: -13.501935005187988
    6. ')' → logprob: -14.376935005187988
    7. '<|end|>' → logprob: -16.626935958862305
    8. ' ' → logprob: -16.876935958862305
    9. ' x' → logprob: -17.126935958862305
    10. 'x' → logprob: -17.251935958862305

Token 116: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.38687121868133545
    2. ' x' → logprob: -1.1368712186813354
    3. '	x' → logprob: -15.636871337890625
    4. ')x' → logprob: -19.761871337890625
    5. 'float' → logprob: -20.261871337890625
    6. ' float' → logprob: -20.511871337890625
    7. ' ' → logprob: -20.636871337890625
    8. '0' → logprob: -21.136871337890625
    9. '(x' → logprob: -21.261871337890625
    10. '"x' → logprob: -22.011871337890625

Token 117: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 118: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9895709156990051
    2. '<|end|>' → logprob: -0.9895709156990051
    3. '           ' → logprob: -1.4895708560943604
    4. '<|end|>' → logprob: -4.1145710945129395
    5. '
' → logprob: -5.2395710945129395
    6. '   ' → logprob: -5.8645710945129395
    7. ' ' → logprob: -6.7395710945129395
    8. ' 
' → logprob: -7.1145710945129395
    9. '  
' → logprob: -7.3645710945129395
    10. '        ' → logprob: -7.3645710945129395

Token 119: ' self' (ID: 1051)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4740881323814392
    2. ' y' → logprob: -0.9740881323814392
    3. 'self' (adapté à ' self') → logprob: -11.849087715148926
    4. ' self' → logprob: -12.599087715148926
    5. '	y' → logprob: -14.349087715148926
    6. ' ' → logprob: -17.474088668823242
    7. ',y' → logprob: -17.974088668823242
    8. ' ' → logprob: -17.974088668823242
    9. '           ' → logprob: -18.099088668823242
    10. ')y' → logprob: -18.224088668823242

Token 120: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.3869739770889282
    2. '.' → logprob: -1.1369739770889282
    3. 'y' → logprob: -9.261974334716797
    4. ' .' → logprob: -12.011974334716797
    5. '.x' → logprob: -14.011974334716797
    6. ' y' → logprob: -15.011974334716797
    7. '.ylabel' → logprob: -15.261974334716797
    8. '.py' → logprob: -15.511974334716797
    9. '	y' → logprob: -16.011974334716797
    10. '.user' → logprob: -17.261974334716797

Token 121: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6989244818687439
    2. ' =' → logprob: -0.6989244818687439
    3. '<|end|>' → logprob: -5.198924541473389
    4. '<|end|>' → logprob: -9.07392406463623
    5. ')' → logprob: -9.69892406463623
    6. ' ' → logprob: -9.94892406463623
    7. '.' → logprob: -12.82392406463623
    8. ',' → logprob: -13.07392406463623
    9. ' =)' → logprob: -13.07392406463623
    10. ' ' → logprob: -13.57392406463623

Token 122: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.006715370807796717
    2. ' y' → logprob: -5.006715297698975
    3. '	y' → logprob: -17.756715774536133
    4. ' ' → logprob: -19.381715774536133
    5. ')y' → logprob: -20.256715774536133
    6. ' ' → logprob: -20.631715774536133
    7. '   ' → logprob: -21.006715774536133
    8. 'x' → logprob: -21.381715774536133
    9. '0' → logprob: -21.381715774536133
    10. 'yj' → logprob: -21.881715774536133

Token 123: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6661989688873291
    2. '<|end|>' → logprob: -1.666198968887329
    3. '
' → logprob: -1.791198968887329
    4. '    
' → logprob: -2.916198968887329
    5. ' ' → logprob: -4.04119873046875
    6. ' 
' → logprob: -4.16619873046875
    7. ',' → logprob: -4.54119873046875
    8. '  
' → logprob: -5.04119873046875
    9. '\n' → logprob: -5.04119873046875
    10. ')' → logprob: -5.41619873046875

Token 125: ' #' (ID: 1069)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.9163176417350769
    2. 'def' → logprob: -1.1663177013397217
    3. '   ' → logprob: -1.7913177013397217
    4. ' ' → logprob: -3.1663177013397217
    5. '    
' → logprob: -3.4163177013397217
    6. ' 
' → logprob: -3.7913177013397217
    7. '  
' → logprob: -4.916317462921143
    8. '    ' → logprob: -5.666317462921143
    9. '   
' → logprob: -5.791317462921143
    10. ')' → logprob: -6.416317462921143

Token 126: ' ?' (ID: 1423)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06603319197893143
    2. ' def' → logprob: -3.191033124923706
    3. '(' → logprob: -5.066033363342285
    4. '@property' → logprob: -5.441033363342285
    5. '+' → logprob: -5.566033363342285
    6. ' ' → logprob: -6.191033363342285
    7. '   ' → logprob: -7.191033363342285
    8. '-' → logprob: -7.191033363342285
    9. 'classmethod' → logprob: -7.566033363342285
    10. ' (' → logprob: -7.691033363342285

Token 127: '????????' (ID: 85218)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6342841386795044
    2. 'def' → logprob: -1.6342841386795044
    3. ' ' → logprob: -2.384284019470215
    4. '-' → logprob: -3.384284019470215
    5. '=' → logprob: -3.384284019470215
    6. '(' → logprob: -4.009284019470215
    7. ' =' → logprob: -4.134284019470215
    8. '@' → logprob: -4.134284019470215
    9. '   ' → logprob: -4.759284019470215
    10. '+' → logprob: -5.009284019470215

Token 128: '???
' (ID: 136325)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.44245246052742004
    2. 'def' → logprob: -1.5674524307250977
    3. '   ' → logprob: -1.9424524307250977
    4. '    
' → logprob: -5.942452430725098
    5. '	def' → logprob: -7.317452430725098
    6. ' 
' → logprob: -7.942452430725098
    7. '    ' → logprob: -8.442452430725098
    8. '#' → logprob: -8.692452430725098
    9. ' ' → logprob: -8.692452430725098
    10. ':' → logprob: -8.817452430725098

Token 129: '   ' (ID: 271)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5775396227836609
    2. 'def' → logprob: -1.0775396823883057
    3. '   ' → logprob: -2.3275396823883057
    4. '    
' → logprob: -8.202539443969727
    5. '	def' → logprob: -8.577539443969727
    6. '    ' → logprob: -9.577539443969727
    7. ' 
' → logprob: -10.077539443969727
    8. 'd' → logprob: -10.452539443969727
    9. ' ' → logprob: -10.952539443969727
    10. '#' → logprob: -11.077539443969727

Token 130: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.027464609593153
    2. ' def' → logprob: -3.6524646282196045
    3. '   ' → logprob: -6.777464389801025
    4. '	def' → logprob: -11.652464866638184
    5. 'd' → logprob: -12.527464866638184
    6. '    
' → logprob: -13.152464866638184
    7. '    ' → logprob: -13.152464866638184
    8. ' ' → logprob: -13.527464866638184
    9. '@property' → logprob: -13.527464866638184
    10. '@' → logprob: -13.777464866638184

Token 131: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.7050713896751404
    2. '__' → logprob: -1.2050714492797852
    3. 'eq' → logprob: -2.830071449279785
    4. ' def' → logprob: -3.705071449279785
    5. 'distance' → logprob: -3.955071449279785
    6. ' eq' → logprob: -3.955071449279785
    7. ' distance' → logprob: -4.080071449279785
    8. ' norm' → logprob: -4.455071449279785
    9. 'def' → logprob: -4.455071449279785
    10. ' add' → logprob: -4.705071449279785

Token 132: 'add' (ID: 964)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.46905285120010376
    2. 'sub' → logprob: -1.469052791595459
    3. 'add' → logprob: -1.969052791595459
    4. 'lt' → logprob: -5.844052791595459
    5. 'mul' → logprob: -7.469052791595459
    6. 'repr' → logprob: -7.594052791595459
    7. 'neg' → logprob: -7.969052791595459
    8. 'abs' → logprob: -9.094053268432617
    9. 'getitem' → logprob: -9.594053268432617
    10. 'init' → logprob: -10.344053268432617

Token 133: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6255640983581543
    2. '(self' → logprob: -1.3755640983581543
    3. '__(' → logprob: -1.6255640983581543
    4. ' (' → logprob: -4.500564098358154
    5. '__' → logprob: -6.500564098358154
    6. '_' → logprob: -6.625564098358154
    7. '_(' → logprob: -7.625564098358154
    8. '<|end|>' → logprob: -8.125564575195312
    9. 'self' → logprob: -8.375564575195312
    10. ' ' → logprob: -8.375564575195312

Token 134: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003927808138541877
    2. ' self' → logprob: -7.875392913818359
    3. 'other' → logprob: -11.37539291381836
    4. '(self' → logprob: -14.25039291381836
    5. '	self' → logprob: -15.75039291381836
    6. 'o' → logprob: -16.12539291381836
    7. 's' → logprob: -16.25039291381836
    8. ',' → logprob: -17.00039291381836
    9. ' ' → logprob: -17.50039291381836
    10. 'se' → logprob: -17.62539291381836

Token 135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07018429040908813
    2. ' ,' → logprob: -2.6951842308044434
    3. ',self' → logprob: -9.195184707641602
    4. 'self' → logprob: -9.820184707641602
    5. ')' → logprob: -10.070184707641602
    6. ' ' → logprob: -10.195184707641602
    7. ' self' → logprob: -12.445184707641602
    8. '<|end|>' → logprob: -13.195184707641602
    9. ',s' → logprob: -13.445184707641602
    10. ' )' → logprob: -13.570184707641602

Token 136: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.3906365633010864
    2. ' other' → logprob: -1.1406365633010864
    3. 'self' → logprob: -6.015636444091797
    4. ' self' → logprob: -7.140636444091797
    5. 'p' → logprob: -9.015636444091797
    6. 'point' → logprob: -9.140636444091797
    7. 'o' → logprob: -9.640636444091797
    8. ' p' → logprob: -9.765636444091797
    9. ' o' → logprob: -9.765636444091797
    10. ' ' → logprob: -10.390636444091797

Token 137: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0001266613689949736
    2. ')' → logprob: -9.625126838684082
    3. '):
' → logprob: -10.000126838684082
    4. ' ):' → logprob: -11.500126838684082
    5. ':' → logprob: -12.500126838684082
    6. '):
' → logprob: -14.375126838684082
    7. ',' → logprob: -14.875126838684082
    8. '):

' → logprob: -16.625125885009766
    9. '<|end|>' → logprob: -17.000125885009766
    10. '   ' → logprob: -17.125125885009766

Token 138: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9688757658004761
    2. '    ' → logprob: -1.218875765800476
    3. ' return' → logprob: -1.968875765800476
    4. '<|end|>' → logprob: -2.7188758850097656
    5. ' ' → logprob: -3.0938758850097656
    6. '   ' → logprob: -3.8438758850097656
    7. '(Point' → logprob: -4.843875885009766
    8. 'return' → logprob: -5.093875885009766
    9. '        ' → logprob: -5.218875885009766
    10. ' 
' → logprob: -5.343875885009766

Token 139: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20364859700202942
    2. 'Point' → logprob: -1.703648567199707
    3. ' return' → logprob: -6.703648567199707
    4. '       ' → logprob: -6.953648567199707
    5. ' Point' → logprob: -10.328648567199707
    6. 'Return' → logprob: -11.328648567199707
    7. '   ' → logprob: -12.328648567199707
    8. 'self' → logprob: -13.828648567199707
    9. '        
' → logprob: -15.828648567199707
    10. '	return' → logprob: -15.828648567199707

Token 140: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0011717714369297028
    2. ' Point' → logprob: -6.751171588897705
    3. 'self' → logprob: -14.501172065734863
    4. '	Point' → logprob: -14.501172065734863
    5. '   ' → logprob: -14.626172065734863
    6. ' ' → logprob: -16.751171112060547
    7. '(Point' → logprob: -17.001171112060547
    8. '  ' → logprob: -17.376171112060547
    9. '_Point' → logprob: -18.001171112060547
    10. 'type' → logprob: -18.626171112060547

Token 141: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006736916024237871
    2. '(' → logprob: -5.006736755371094
    3. 'self' → logprob: -11.756736755371094
    4. '(s' → logprob: -12.006736755371094
    5. '((' → logprob: -12.006736755371094
    6. '(
' → logprob: -13.756736755371094
    7. '(this' → logprob: -15.881736755371094
    8. '(x' → logprob: -16.131736755371094
    9. ' (' → logprob: -16.631736755371094
    10. '([' → logprob: -16.631736755371094

Token 142: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0021914218086749315
    2. '.' → logprob: -6.127191543579102
    3. ' .' → logprob: -12.752191543579102
    4. 'x' → logprob: -12.877191543579102
    5. ').' → logprob: -14.377191543579102
    6. ' ' → logprob: -16.5021915435791
    7. ',' → logprob: -17.7521915435791
    8. 'self' → logprob: -18.2521915435791
    9. '.s' → logprob: -18.3771915435791
    10. '._' → logprob: -18.7521915435791

Token 143: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.47408080101013184
    2. '+' → logprob: -0.9740808010101318
    3. '+self' → logprob: -12.974081039428711
    4. '+,' → logprob: -14.724081039428711
    5. ',' → logprob: -15.099081039428711
    6. '+y' → logprob: -15.599081039428711
    7. '＋' → logprob: -15.849081039428711
    8. ' ' → logprob: -15.974081039428711
    9. '+x' → logprob: -16.47408103942871
    10. ' ,' → logprob: -16.59908103942871

Token 144: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.061968810856342316
    2. ' other' → logprob: -2.8119688034057617
    3. '(other' → logprob: -14.061968803405762
    4. 'Other' → logprob: -16.186969757080078
    5. '_other' → logprob: -16.311969757080078
    6. '.other' → logprob: -16.311969757080078
    7. 'othe' → logprob: -17.686969757080078
    8. ' ' → logprob: -18.311969757080078
    9. 'others' → logprob: -18.311969757080078
    10. 'OTHER' → logprob: -18.686969757080078

Token 145: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.03811722248792648
    2. '.' → logprob: -3.2881171703338623
    3. 'x' → logprob: -9.788117408752441
    4. ' .' → logprob: -10.913117408752441
    5. ').' → logprob: -14.288117408752441
    6. ' ' → logprob: -15.163117408752441
    7. '[' → logprob: -15.788117408752441
    8. '.
' → logprob: -16.163116455078125
    9. ' x' → logprob: -16.288116455078125
    10. ',' → logprob: -17.163116455078125

Token 146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011415231710998341
    2. ' ,' → logprob: -9.625114440917969
    3. ')' → logprob: -10.000114440917969
    4. ',
' → logprob: -13.125114440917969
    5. '<|end|>' → logprob: -15.625114440917969
    6. ' )' → logprob: -16.00011444091797
    7. ',)' → logprob: -16.37511444091797
    8. ',

' → logprob: -16.75011444091797
    9. ',self' → logprob: -17.37511444091797
    10. '‌,' → logprob: -17.62511444091797

Token 147: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.1306772530078888
    2. 'self' → logprob: -2.1306772232055664
    3. ' other' → logprob: -5.630677223205566
    4. 'other' → logprob: -8.880677223205566
    5. ' ' → logprob: -11.130677223205566
    6. ' ' → logprob: -14.005677223205566
    7. '	self' → logprob: -14.880677223205566
    8. '(self' → logprob: -15.380677223205566
    9. '0' → logprob: -16.005678176879883
    10. '_self' → logprob: -16.255678176879883

Token 148: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0011810619616881013
    2. '.' → logprob: -6.751181125640869
    3. 'y' → logprob: -11.501180648803711
    4. ' .' → logprob: -14.376180648803711
    5. '.x' → logprob: -16.50118064880371
    6. ' y' → logprob: -17.00118064880371
    7. ' ' → logprob: -18.12618064880371
    8. '.py' → logprob: -18.37618064880371
    9. '	y' → logprob: -18.62618064880371
    10. ',' → logprob: -18.75118064880371

Token 149: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.048589076846838
    2. '+' → logprob: -3.048588991165161
    3. '+y' → logprob: -13.673588752746582
    4. ')' → logprob: -14.798588752746582
    5. '+)' → logprob: -16.6735897064209
    6. ' ' → logprob: -17.0485897064209
    7. ' +
' → logprob: -17.6735897064209
    8. '+self' → logprob: -17.7985897064209
    9. '<|end|>' → logprob: -17.9235897064209
    10. '+x' → logprob: -18.5485897064209

Token 150: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.01105206273496151
    2. ' other' → logprob: -4.511052131652832
    3. '(other' → logprob: -13.136052131652832
    4. 'self' → logprob: -13.261052131652832
    5. 'othe' → logprob: -15.886052131652832
    6. ' ' → logprob: -16.511051177978516
    7. '.other' → logprob: -16.761051177978516
    8. 'Other' → logprob: -17.136051177978516
    9. 'others' → logprob: -17.386051177978516
    10. '0' → logprob: -17.511051177978516

Token 151: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.04497066140174866
    2. '+' → logprob: -3.294970750808716
    3. ')' → logprob: -5.419970512390137
    4. '+y' → logprob: -6.794970512390137
    5. '.' → logprob: -7.169970512390137
    6. ' +' → logprob: -8.169970512390137
    7. 'y' → logprob: -8.294970512390137
    8. '+)' → logprob: -10.294970512390137
    9. '.x' → logprob: -12.044970512390137
    10. ')+' → logprob: -12.669970512390137

Token 152: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -15.625
    3. ' )' → logprob: -16.0
    4. ')return' → logprob: -18.0
    5. '   ' → logprob: -18.75
    6. ')

' → logprob: -19.125
    7. '<|end|>' → logprob: -19.375
    8. '),' → logprob: -19.5
    9. ')#' → logprob: -19.75
    10. ' ' → logprob: -19.875

Token 153: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 154: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 155: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.028704363852739334
    2. '__' → logprob: -3.6537044048309326
    3. 'sub' → logprob: -6.6537041664123535
    4. ' ' → logprob: -7.2787041664123535
    5. '_sub' → logprob: -8.778704643249512
    6. ' sub' → logprob: -9.903704643249512
    7. ' -' → logprob: -10.028704643249512
    8. '-' → logprob: -10.028704643249512
    9. ' _' → logprob: -10.778704643249512
    10. ' def' → logprob: -10.903704643249512

Token 156: 'sub' (ID: 3834)
  Prédit: 'sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -2.522638169466518e-05
    2. '-' → logprob: -10.625024795532227
    3. 'mul' → logprob: -14.250024795532227
    4. '-
' → logprob: -17.125024795532227
    5. 'eq' → logprob: -17.500024795532227
    6. ' sub' → logprob: -17.500024795532227
    7. 'repr' → logprob: -17.625024795532227
    8. 'su' → logprob: -17.625024795532227
    9. '
' → logprob: -17.750024795532227
    10. 'neg' → logprob: -18.250024795532227

Token 157: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.12724840641021729
    2. '__' → logprob: -2.1272482872009277
    3. '__((' → logprob: -8.627248764038086
    4. '__('' → logprob: -9.127248764038086
    5. '__(
' → logprob: -11.002248764038086
    6. '__("' → logprob: -12.127248764038086
    7. '__(*' → logprob: -12.502248764038086
    8. '(' → logprob: -12.752248764038086
    9. '__.__' → logprob: -12.877248764038086
    10. '__[' → logprob: -14.627248764038086

Token 158: 'self' (ID: 1156)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.10048151761293411
    2. 'self' → logprob: -2.3504815101623535
    3. ' other' → logprob: -9.225481986999512
    4. '(other' → logprob: -9.225481986999512
    5. '<|end|>' → logprob: -9.850481986999512
    6. '(self' → logprob: -11.475481986999512
    7. 'Other' → logprob: -11.975481986999512
    8. '_other' → logprob: -12.850481986999512
    9. '(' → logprob: -12.975481986999512
    10. ' self' → logprob: -13.350481986999512

Token 159: ',' (ID: 11)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.35825487971305847
    2. '(' → logprob: -1.2332549095153809
    3. '(other' → logprob: -4.983254909515381
    4. ',' → logprob: -6.733254909515381
    5. '(self' → logprob: -7.233254909515381
    6. '__' → logprob: -7.733254909515381
    7. '__((' → logprob: -8.733254432678223
    8. ' (' → logprob: -8.733254432678223
    9. '__(
' → logprob: -9.733254432678223
    10. 'other' → logprob: -10.483254432678223

Token 160: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.005257356911897659
    2. ' other' → logprob: -5.2552571296691895
    3. 'self' → logprob: -10.755257606506348
    4. '(other' → logprob: -13.755257606506348
    5. 'Other' → logprob: -13.755257606506348
    6. '_other' → logprob: -16.38025665283203
    7. '<|end|>' → logprob: -16.38025665283203
    8. '.other' → logprob: -17.63025665283203
    9. ' self' → logprob: -18.63025665283203
    10. 'OTHER' → logprob: -19.38025665283203

Token 161: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004251962061971426
    2. '):
' → logprob: -5.504251956939697
    3. ')' → logprob: -9.504252433776855
    4. ':' → logprob: -10.504252433776855
    5. ',' → logprob: -10.629252433776855
    6. '<|end|>' → logprob: -11.504252433776855
    7. 'self' → logprob: -11.629252433776855
    8. '):
' → logprob: -11.879252433776855
    9. ' ):' → logprob: -12.254252433776855
    10. '(' → logprob: -12.379252433776855

Token 162: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05048954486846924
    2. ' return' → logprob: -3.4254894256591797
    3. '<|end|>' → logprob: -4.80048942565918
    4. '   ' → logprob: -5.67548942565918
    5. '(Point' → logprob: -6.92548942565918
    6. ' ' → logprob: -7.42548942565918
    7. '(' → logprob: -7.55048942565918
    8. 'return' → logprob: -7.55048942565918
    9. '    ' → logprob: -7.67548942565918
    10. ' Point' → logprob: -7.80048942565918

Token 163: ' return' (ID: 622)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.002519180765375495
    2. ' Point' → logprob: -6.002519130706787
    3. 'return' (adapté à ' return') → logprob: -10.252519607543945
    4. ' return' → logprob: -11.752519607543945
    5. '       ' → logprob: -15.502519607543945
    6. 'Return' → logprob: -17.252519607543945
    7. '	Point' → logprob: -17.752519607543945
    8. 'Points' → logprob: -18.502519607543945
    9. '(Point' → logprob: -18.752519607543945
    10. '.Point' → logprob: -18.752519607543945

Token 164: ' Point' (ID: 9971)
  Prédit: ' Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.31326597929000854
    2. 'Point' → logprob: -1.3132660388946533
    3. '(Point' → logprob: -12.813265800476074
    4. '	Point' → logprob: -13.813265800476074
    5. '.Point' → logprob: -15.438265800476074
    6. '_Point' → logprob: -15.563265800476074
    7. '<Point' → logprob: -17.06326675415039
    8. ' ' → logprob: -17.93826675415039
    9. '_point' → logprob: -18.56326675415039
    10. ' point' → logprob: -20.06326675415039

Token 165: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -12.500003814697266
    3. 'self' → logprob: -16.875003814697266
    4. ' (' → logprob: -18.625003814697266
    5. '(this' → logprob: -19.625003814697266
    6. '(Self' → logprob: -19.625003814697266
    7. '(
' → logprob: -19.875003814697266
    8. '(s' → logprob: -21.000003814697266
    9. ' self' → logprob: -21.125003814697266
    10. '((' → logprob: -21.250003814697266

Token 166: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -6.277553620748222e-05
    2. '.' → logprob: -9.750062942504883
    3. 'x' → logprob: -12.375062942504883
    4. ' .' → logprob: -16.125062942504883
    5. ').' → logprob: -18.625062942504883
    6. ')' → logprob: -19.500062942504883
    7. 'self' → logprob: -19.875062942504883
    8. '[' → logprob: -20.250062942504883
    9. ' x' → logprob: -20.500062942504883
    10. '._' → logprob: -20.500062942504883

Token 167: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0021904718596488237
    2. '-' → logprob: -6.127190589904785
    3. ' ' → logprob: -13.002190589904785
    4. '<|end|>' → logprob: -13.127190589904785
    5. ' –' → logprob: -15.002190589904785
    6. ' -
' → logprob: -15.252190589904785
    7. ' −' → logprob: -16.12718963623047
    8. ' ' → logprob: -16.12718963623047
    9. '-self' → logprob: -16.50218963623047
    10. ')' → logprob: -16.62718963623047

Token 168: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.008615988306701183
    2. ' other' → logprob: -4.758615970611572
    3. '<|end|>' → logprob: -14.13361644744873
    4. '(other' → logprob: -14.75861644744873
    5. 'Other' → logprob: -15.63361644744873
    6. '_other' → logprob: -16.258615493774414
    7. '.other' → logprob: -16.883615493774414
    8. 'self' → logprob: -18.383615493774414
    9. ' ' → logprob: -19.383615493774414
    10. 'OTHER' → logprob: -19.758615493774414

Token 169: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0003392767102923244
    2. '.' → logprob: -8.00033950805664
    3. 'x' → logprob: -12.50033950805664
    4. ' .' → logprob: -16.37533950805664
    5. '[' → logprob: -18.37533950805664
    6. '.y' → logprob: -20.50033950805664
    7. '.
' → logprob: -20.75033950805664
    8. ')' → logprob: -21.00033950805664
    9. '(' → logprob: -21.12533950805664
    10. '```' → logprob: -21.25033950805664

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016945181414484978
    2. ' ,' → logprob: -9.25016975402832
    3. ')' → logprob: -10.37516975402832
    4. '.' → logprob: -10.75016975402832
    5. '.x' → logprob: -11.00016975402832
    6. '),' → logprob: -12.87516975402832
    7. ',x' → logprob: -15.00016975402832
    8. ' ' → logprob: -15.25016975402832
    9. 'x' → logprob: -15.50016975402832
    10. '[' → logprob: -16.00016975402832

Token 171: ' self' (ID: 1051)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.10020849853754044
    2. ' other' → logprob: -2.3502085208892822
    3. '(other' → logprob: -13.475208282470703
    4. 'Other' → logprob: -15.100208282470703
    5. '.other' → logprob: -16.600208282470703
    6. 'self' → logprob: -17.100208282470703
    7. '_other' → logprob: -17.475208282470703
    8. ' ' → logprob: -18.725208282470703
    9. '<|end|>' → logprob: -19.100208282470703
    10. 'othe' → logprob: -19.975208282470703

Token 172: '.y' (ID: 4486)
  Prédit: '.x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.009194711223244667
    2. '.y' → logprob: -4.759194850921631
    3. '.' → logprob: -7.509194850921631
    4. 'x' → logprob: -10.509194374084473
    5. 'y' → logprob: -13.134194374084473
    6. ' .' → logprob: -13.509194374084473
    7. '[' → logprob: -13.884194374084473
    8. 's' → logprob: -16.38419532775879
    9. ')' → logprob: -16.50919532775879
    10. ').' → logprob: -16.88419532775879

Token 173: ' -' (ID: 533)
  Prédit: '.y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.020797735080122948
    2. '.' → logprob: -4.0207977294921875
    3. '.x' → logprob: -6.1457977294921875
    4. '-' → logprob: -8.020797729492188
    5. ' -' → logprob: -10.020797729492188
    6. '.other' → logprob: -10.020797729492188
    7. 'y' → logprob: -10.270797729492188
    8. ')' → logprob: -10.770797729492188
    9. ' .' → logprob: -11.520797729492188
    10. '[' → logprob: -11.520797729492188

Token 174: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0019295861711725593
    2. ' other' → logprob: -6.251929759979248
    3. '(other' → logprob: -14.00192928314209
    4. '.other' → logprob: -16.626930236816406
    5. '0' → logprob: -17.001930236816406
    6. 'Other' → logprob: -17.126930236816406
    7. '_other' → logprob: -18.376930236816406
    8. 'othe' → logprob: -18.501930236816406
    9. ' ' → logprob: -18.876930236816406
    10. ')' → logprob: -19.126930236816406

Token 175: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0023274829145520926
    2. 'y' → logprob: -6.1273274421691895
    3. '.' → logprob: -9.627327919006348
    4. '.x' → logprob: -10.252327919006348
    5. ')' → logprob: -10.627327919006348
    6. '-' → logprob: -11.377327919006348
    7. '[' → logprob: -13.377327919006348
    8. '<|end|>' → logprob: -13.752327919006348
    9. '<|end|>' → logprob: -14.377327919006348
    10. ',' → logprob: -15.252327919006348

Token 176: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005328982952050865
    2. '<|end|>' → logprob: -7.625533103942871
    3. '       ' → logprob: -10.625533103942871
    4. '   ' → logprob: -11.500533103942871
    5. '<|end|>' → logprob: -12.625533103942871
    6. '()' → logprob: -13.375533103942871
    7. ')
' → logprob: -13.500533103942871
    8. ')return' → logprob: -13.750533103942871
    9. ' )' → logprob: -14.500533103942871
    10. ' ' → logprob: -14.750533103942871

Token 177: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010679395636543632
    2. '    
' → logprob: -7.501068115234375
    3. 'def' → logprob: -8.126068115234375
    4. ')' → logprob: -9.501068115234375
    5. '<|end|>' → logprob: -10.251068115234375
    6. '	def' → logprob: -10.501068115234375
    7. '   
' → logprob: -11.126068115234375
    8. ' def' → logprob: -11.126068115234375
    9. '[' → logprob: -12.001068115234375
    10. '(' → logprob: -12.001068115234375

Token 178: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.1077837347984314
    2. '   ' → logprob: -2.607783794403076
    3. ')' → logprob: -3.607783794403076
    4. ' def' → logprob: -7.857783794403076
    5. '(' → logprob: -7.982783794403076
    6. '*' → logprob: -8.482783317565918
    7. ' ' → logprob: -9.107783317565918
    8. '    
' → logprob: -9.607783317565918
    9. '  ' → logprob: -9.732783317565918
    10. '.' → logprob: -9.732783317565918

Token 179: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.043257564306259155
    2. '__' → logprob: -3.918257474899292
    3. 'mul' → logprob: -4.168257713317871
    4. ' mul' → logprob: -5.293257713317871
    5. '_mul' → logprob: -7.168257713317871
    6. ' def' → logprob: -7.668257713317871
    7. 'def' → logprob: -8.543257713317871
    8. ' ' → logprob: -8.668257713317871
    9. 'abs' → logprob: -9.668257713317871
    10. '```' → logprob: -10.168257713317871

Token 180: 'mul' (ID: 44857)
  Prédit: 'mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.004418013151735067
    2. 'eq' → logprob: -5.504417896270752
    3. 'tr' → logprob: -8.12941837310791
    4. 'neg' → logprob: -11.00441837310791
    5. 'repr' → logprob: -11.50441837310791
    6. 'abs' → logprob: -11.50441837310791
    7. 'rm' → logprob: -12.75441837310791
    8. 'mult' → logprob: -13.00441837310791
    9. 'lt' → logprob: -14.00441837310791
    10. 'flo' → logprob: -15.00441837310791

Token 181: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.03105168417096138
    2. '(self' → logprob: -3.5310516357421875
    3. '(' → logprob: -6.9060516357421875
    4. '__(*' → logprob: -8.906051635742188
    5. '__' → logprob: -9.156051635742188
    6. '__((' → logprob: -10.906051635742188
    7. '__(
' → logprob: -10.906051635742188
    8. ' (' → logprob: -11.656051635742188
    9. '*(' → logprob: -12.156051635742188
    10. '__('' → logprob: -13.031051635742188

Token 182: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00010676169040380046
    2. ' self' → logprob: -9.250106811523438
    3. '(self' → logprob: -11.625106811523438
    4. '
' → logprob: -14.125106811523438
    5. '   ' → logprob: -14.500106811523438
    6. ' ' → logprob: -15.625106811523438
    7. ',' → logprob: -16.000106811523438
    8. 'other' → logprob: -17.250106811523438
    9. '	self' → logprob: -17.500106811523438
    10. '```' → logprob: -17.500106811523438

Token 183: ',' (ID: 11)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.19289161264896393
    2. ',' → logprob: -2.1928915977478027
    3. '(self' → logprob: -2.8178915977478027
    4. 'self' → logprob: -6.192891597747803
    5. '(' → logprob: -6.942891597747803
    6. '__,' → logprob: -7.817891597747803
    7. '__' → logprob: -8.192892074584961
    8. ' (' → logprob: -8.192892074584961
    9. ',self' → logprob: -10.317892074584961
    10. '__(*' → logprob: -10.942892074584961

Token 184: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.2321024090051651
    2. 'self' → logprob: -1.857102394104004
    3. ' other' → logprob: -3.732102394104004
    4. 'scalar' → logprob: -4.357102394104004
    5. 'k' → logprob: -4.982102394104004
    6. ' self' → logprob: -5.482102394104004
    7. ' scalar' → logprob: -6.732102394104004
    8. 'value' → logprob: -6.732102394104004
    9. ' k' → logprob: -7.732102394104004
    10. ' ' → logprob: -8.732102394104004

Token 185: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004445550963282585
    2. 'self' → logprob: -6.379445552825928
    3. '):' → logprob: -6.504445552825928
    4. '):
' → logprob: -7.754445552825928
    5. ' (' → logprob: -8.12944507598877
    6. '(' → logprob: -8.25444507598877
    7. ',' → logprob: -8.75444507598877
    8. ')' → logprob: -10.12944507598877
    9. ' self' → logprob: -10.50444507598877
    10. '):

' → logprob: -11.75444507598877

Token 186: '       ' (ID: 309)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.21591363847255707
    2. ' Point' → logprob: -2.3409135341644287
    3. '       ' → logprob: -2.4659135341644287
    4. 'self' → logprob: -5.840913772583008
    5. '   ' → logprob: -5.965913772583008
    6. ' self' → logprob: -6.215913772583008
    7. 'return' → logprob: -6.715913772583008
    8. '    ' → logprob: -7.090913772583008
    9. ' if' → logprob: -7.090913772583008
    10. ' return' → logprob: -7.465913772583008

Token 187: ' return' (ID: 622)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.004486731719225645
    2. ' Point' → logprob: -6.379486560821533
    3. 'self' → logprob: -6.629486560821533
    4. 'return' (adapté à ' return') → logprob: -7.004486560821533
    5. 'if' → logprob: -8.379487037658691
    6. '       ' → logprob: -8.629487037658691
    7. '   ' → logprob: -9.004487037658691
    8. ' self' → logprob: -12.004487037658691
    9. '	Point' → logprob: -12.879487037658691
    10. ' return' → logprob: -12.879487037658691

Token 188: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -6.313314952421933e-05
    2. ' Point' → logprob: -10.250062942504883
    3. 'self' → logprob: -10.500062942504883
    4. '	Point' → logprob: -16.875062942504883
    5. '   ' → logprob: -17.250062942504883
    6. '(Point' → logprob: -17.625062942504883
    7. '_point' → logprob: -18.500062942504883
    8. 'point' → logprob: -19.000062942504883
    9. '_Point' → logprob: -19.000062942504883
    10. ' self' → logprob: -19.625062942504883

Token 189: '(other' (ID: 32550)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.3306015716807451e-05
    2. '(' → logprob: -11.25001335144043
    3. 'self' → logprob: -15.50001335144043
    4. '((' → logprob: -17.12501335144043
    5. '(s' → logprob: -17.50001335144043
    6. '(
' → logprob: -17.50001335144043
    7. '(this' → logprob: -19.37501335144043
    8. ' (' → logprob: -19.62501335144043
    9. '[self' → logprob: -19.62501335144043
    10. '(x' → logprob: -20.62501335144043

Token 190: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0013230959884822369
    2. '*' → logprob: -6.876323223114014
    3. '*self' → logprob: -8.501322746276855
    4. '.' → logprob: -10.751322746276855
    5. 'self' → logprob: -10.876322746276855
    6. ' ' → logprob: -11.251322746276855
    7. ' self' → logprob: -11.376322746276855
    8. ' .' → logprob: -11.376322746276855
    9. '.x' → logprob: -12.001322746276855
    10. '(self' → logprob: -13.126322746276855

Token 191: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0889468863606453
    2. ' self' → logprob: -2.46394681930542
    3. ' ' → logprob: -12.338947296142578
    4. '(self' → logprob: -13.963947296142578
    5. '   ' → logprob: -14.338947296142578
    6. '	self' → logprob: -14.463947296142578
    7. '  ' → logprob: -14.963947296142578
    8. '[self' → logprob: -15.713947296142578
    9. '
' → logprob: -15.963947296142578
    10. 's' → logprob: -16.463947296142578

Token 192: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00037681119283661246
    2. 'x' → logprob: -8.12537670135498
    3. '.' → logprob: -9.62537670135498
    4. 'self' → logprob: -11.25037670135498
    5. ' .' → logprob: -13.37537670135498
    6. ' self' → logprob: -16.250377655029297
    7. ' x' → logprob: -16.750377655029297
    8. ')' → logprob: -17.750377655029297
    9. 'Point' → logprob: -17.875377655029297
    10. 's' → logprob: -18.375377655029297

Token 193: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008227337966673076
    2. ' ,' → logprob: -7.1258225440979
    3. ',self' → logprob: -11.250823020935059
    4. ')' → logprob: -12.875823020935059
    5. 'self' → logprob: -13.000823020935059
    6. ',
' → logprob: -15.000823020935059
    7. '.' → logprob: -17.125822067260742
    8. '(),' → logprob: -17.375822067260742
    9. ' self' → logprob: -17.625822067260742
    10. '),' → logprob: -17.750822067260742

Token 194: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.05567333847284317
    2. ' other' → logprob: -2.930673360824585
    3. 'self' → logprob: -7.180673122406006
    4. ' self' → logprob: -10.680673599243164
    5. '   ' → logprob: -12.680673599243164
    6. ' ' → logprob: -13.180673599243164
    7. '(other' → logprob: -14.680673599243164
    8. '       ' → logprob: -15.055673599243164
    9. 'Other' → logprob: -15.055673599243164
    10. '  ' → logprob: -15.930673599243164

Token 195: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3710922598838806
    2. ')' → logprob: -1.4960923194885254
    3. 'self' → logprob: -2.8710923194885254
    4. ' self' → logprob: -4.121092319488525
    5. '<|end|>' → logprob: -5.746092319488525
    6. '.' → logprob: -5.996092319488525
    7. ' ,' → logprob: -6.371092319488525
    8. '.x' → logprob: -6.746092319488525
    9. ' ' → logprob: -6.871092319488525
    10. '.self' → logprob: -7.496092319488525

Token 196: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.160296231508255
    2. ' self' → logprob: -1.9102962017059326
    3. ' other' → logprob: -10.410296440124512
    4. 'other' → logprob: -10.410296440124512
    5. 'y' → logprob: -11.910296440124512
    6. ' ' → logprob: -12.910296440124512
    7. ' y' → logprob: -13.285296440124512
    8. '(self' → logprob: -15.410296440124512
    9. '.self' → logprob: -15.410296440124512
    10. '	self' → logprob: -15.785296440124512

Token 197: '.y' (ID: 4486)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0007158888038247824
    2. '.y' → logprob: -7.250715732574463
    3. ' y' → logprob: -12.125716209411621
    4. 'x' → logprob: -15.375716209411621
    5. '.' → logprob: -15.625716209411621
    6. '	y' → logprob: -15.875716209411621
    7. 'Y' → logprob: -16.875715255737305
    8. '_y' → logprob: -17.125715255737305
    9. 'self' → logprob: -17.875715255737305
    10. ' ' → logprob: -19.625715255737305

Token 198: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ' )' → logprob: -13.875001907348633
    3. ')
' → logprob: -15.500001907348633
    4. '   ' → logprob: -16.250001907348633
    5. ')return' → logprob: -16.500001907348633
    6. '<|end|>' → logprob: -16.875001907348633
    7. '       ' → logprob: -17.625001907348633
    8. ')

' → logprob: -17.875001907348633
    9. ' ' → logprob: -18.250001907348633
    10. '),' → logprob: -18.500001907348633

Token 199: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10129127651453018
    2. '<|end|>' → logprob: -2.7262911796569824
    3. ' ' → logprob: -4.226291179656982
    4. ')' → logprob: -4.351291179656982
    5. '  ' → logprob: -6.851291179656982
    6. '<|end|>' → logprob: -7.476291179656982
    7. 'def' → logprob: -7.726291179656982
    8. ' def' → logprob: -8.10129165649414
    9. ',' → logprob: -8.22629165649414
    10. '*' → logprob: -8.97629165649414

Token 200: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8573827147483826
    2. 'def' (adapté à ' def') → logprob: -0.8573827147483826
    3. ')' → logprob: -2.3573827743530273
    4. ' ' → logprob: -3.6073827743530273
    5. '(' → logprob: -4.607382774353027
    6. ' def' → logprob: -4.857382774353027
    7. '.' → logprob: -5.357382774353027
    8. '__' → logprob: -6.107382774353027
    9. '<|end|>' → logprob: -6.857382774353027
    10. ' (' → logprob: -6.982382774353027

Token 201: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.13716143369674683
    2. '__' → logprob: -2.2621614933013916
    3. ' def' → logprob: -4.1371612548828125
    4. ' ' → logprob: -5.2621612548828125
    5. 'def' → logprob: -6.6371612548828125
    6. ' /' → logprob: -7.7621612548828125
    7. ' (' → logprob: -7.8871612548828125
    8. '(' → logprob: -8.637161254882812
    9. ' _' → logprob: -8.762161254882812
    10. '/__' → logprob: -9.637161254882812

Token 202: 'tr' (ID: 371)
  Prédit: 'tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.6933183670043945
    2. 'rm' → logprob: -0.6933183670043945
    3. 'eq' → logprob: -9.193318367004395
    4. 'mul' → logprob: -10.318318367004395
    5. 'repr' → logprob: -10.568318367004395
    6. 'flo' → logprob: -12.443318367004395
    7. 'abs' → logprob: -13.068318367004395
    8. 'imul' → logprob: -13.318318367004395
    9. 'tru' → logprob: -14.443318367004395
    10. 'str' → logprob: -14.443318367004395

Token 203: 'ued' (ID: 5829)
  Prédit: 'ued'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ued' → logprob: -0.005447077564895153
    2. '__' → logprob: -6.130446910858154
    3. 'ue' → logprob: -6.380446910858154
    4. '/' → logprob: -6.630446910858154
    5. 'u' → logprob: -8.630447387695312
    6. 'ues' → logprob: -10.630447387695312
    7. 'uet' → logprob: -11.630447387695312
    8. 'uem' → logprob: -12.505447387695312
    9. '```' → logprob: -12.505447387695312
    10. '/__' → logprob: -12.755447387695312

Token 204: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.20739516615867615
    2. 'div' → logprob: -1.7073951959609985
    3. 'v' → logprob: -5.582395076751709
    4. '/' → logprob: -6.957395076751709
    5. '__' → logprob: -7.457395076751709
    6. '_div' → logprob: -8.082395553588867
    7. 'ued' → logprob: -9.332395553588867
    8. '__/' → logprob: -9.832395553588867
    9. '/div' → logprob: -9.832395553588867
    10. '/(' → logprob: -10.207395553588867

Token 205: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.15696680545806885
    2. '(self' → logprob: -2.1569666862487793
    3. '(' → logprob: -3.5319666862487793
    4. '__' → logprob: -8.281967163085938
    5. '__(
' → logprob: -10.031967163085938
    6. '_(' → logprob: -10.406967163085938
    7. ' (' → logprob: -12.281967163085938
    8. 'self' → logprob: -12.531967163085938
    9. '__((' → logprob: -12.656967163085938
    10. '_' → logprob: -13.656967163085938

Token 206: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.2664456789934775e-06
    2. ' self' → logprob: -13.625000953674316
    3. 'other' → logprob: -17.000001907348633
    4. '(self' → logprob: -18.375001907348633
    5. '
' → logprob: -19.250001907348633
    6. '   ' → logprob: -19.875001907348633
    7. '	self' → logprob: -20.750001907348633
    8. 's' → logprob: -21.625001907348633
    9. 'def' → logprob: -21.750001907348633
    10. ' ' → logprob: -22.125001907348633

Token 207: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1146620586514473
    2. '(' → logprob: -2.4896621704101562
    3. ' (' → logprob: -4.239662170410156
    4. 'self' → logprob: -5.364662170410156
    5. '(self' → logprob: -5.614662170410156
    6. ')' → logprob: -7.239662170410156
    7. ' ,' → logprob: -7.364662170410156
    8. ' ' → logprob: -7.614662170410156
    9. ' self' → logprob: -8.114662170410156
    10. '(other' → logprob: -8.489662170410156

Token 208: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.2166632115840912
    2. ' other' → logprob: -2.216663122177124
    3. 'self' → logprob: -2.466663122177124
    4. ' self' → logprob: -6.966663360595703
    5. 'Other' → logprob: -11.091663360595703
    6. '_other' → logprob: -14.341663360595703
    7. '(self' → logprob: -15.216663360595703
    8. '(other' → logprob: -16.216663360595703
    9. ' ' → logprob: -16.341663360595703
    10. ' Other' → logprob: -16.966663360595703

Token 209: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0031471773982048035
    2. '):
' → logprob: -5.878147125244141
    3. ' ):' → logprob: -8.37814712524414
    4. ')' → logprob: -9.87814712524414
    5. ':' → logprob: -10.12814712524414
    6. ',' → logprob: -12.12814712524414
    7. '(' → logprob: -12.25314712524414
    8. ' :' → logprob: -12.87814712524414
    9. '):

' → logprob: -12.87814712524414
    10. '):
' → logprob: -12.87814712524414

Token 210: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46302908658981323
    2. ' Point' → logprob: -1.713029146194458
    3. ' return' → logprob: -2.338029146194458
    4. 'Point' → logprob: -2.463029146194458
    5. 'return' → logprob: -4.838028907775879
    6. '   ' → logprob: -7.463028907775879
    7. ' point' → logprob: -10.588028907775879
    8. '	Point' → logprob: -10.838028907775879
    9. '      ' → logprob: -11.213028907775879
    10. ' ' → logprob: -11.213028907775879

Token 211: ' return' (ID: 622)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.00019662656995933503
    2. 'return' (adapté à ' return') → logprob: -8.75019645690918
    3. ' Point' → logprob: -10.25019645690918
    4. '       ' → logprob: -13.50019645690918
    5. '   ' → logprob: -13.87519645690918
    6. '	Point' → logprob: -15.87519645690918
    7. ' return' → logprob: -16.25019645690918
    8. 'self' → logprob: -17.25019645690918
    9. 'point' → logprob: -17.75019645690918
    10. 'Points' → logprob: -18.25019645690918

Token 212: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0015384310390800238
    2. ' Point' → logprob: -6.501538276672363
    3. 'self' → logprob: -10.251538276672363
    4. '	Point' → logprob: -15.001538276672363
    5. ' self' → logprob: -15.501538276672363
    6. '(Point' → logprob: -15.626538276672363
    7. '   ' → logprob: -17.00153923034668
    8. 'Points' → logprob: -17.50153923034668
    9. ' ' → logprob: -17.62653923034668
    10. '.Point' → logprob: -17.87653923034668

Token 213: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.41866585687967e-06
    2. '(' → logprob: -11.750008583068848
    3. 'self' → logprob: -14.875008583068848
    4. '(s' → logprob: -16.62500762939453
    5. '(other' → logprob: -16.87500762939453
    6. '(
' → logprob: -18.87500762939453
    7. '((' → logprob: -18.87500762939453
    8. ' (' → logprob: -19.62500762939453
    9. '(float' → logprob: -20.25000762939453
    10. '[self' → logprob: -20.87500762939453

Token 214: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00043639098294079304
    2. '.' → logprob: -7.750436305999756
    3. 'x' → logprob: -12.375436782836914
    4. ' .' → logprob: -13.750436782836914
    5. '._' → logprob: -16.125436782836914
    6. ' /' → logprob: -16.750436782836914
    7. ' ' → logprob: -16.750436782836914
    8. ')' → logprob: -17.375436782836914
    9. '/' → logprob: -17.500436782836914
    10. '1' → logprob: -17.875436782836914

Token 215: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.2519298195838928
    2. ' /' → logprob: -1.501929759979248
    3. ' ' → logprob: -14.626930236816406
    4. ' ' → logprob: -15.876930236816406
    5. '/
' → logprob: -16.501930236816406
    6. ')' → logprob: -17.626930236816406
    7. '/usr' → logprob: -17.751930236816406
    8. ',' → logprob: -18.126930236816406
    9. '/
/' → logprob: -18.251930236816406
    10. '/
' → logprob: -18.376930236816406

Token 216: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0031777136027812958
    2. ' other' → logprob: -5.753177642822266
    3. '(other' → logprob: -19.003177642822266
    4. ' ' → logprob: -20.253177642822266
    5. '_other' → logprob: -20.753177642822266
    6. 'Other' → logprob: -20.878177642822266
    7. '.other' → logprob: -22.003177642822266
    8. '   ' → logprob: -22.503177642822266
    9. 'others' → logprob: -22.878177642822266
    10. 'float' → logprob: -23.253177642822266

Token 217: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021319588995538652
    2. ' ,' → logprob: -8.500213623046875
    3. ')' → logprob: -11.625213623046875
    4. ' ' → logprob: -15.000213623046875
    5. ',
' → logprob: -15.750213623046875
    6. '<|end|>' → logprob: -16.500213623046875
    7. '),' → logprob: -16.625213623046875
    8. ',float' → logprob: -17.125213623046875
    9. ' )' → logprob: -18.375213623046875
    10. '.' → logprob: -18.750213623046875

Token 218: ' self' (ID: 1051)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0067167943343520164
    2. ' other' → logprob: -5.006716728210449
    3. 'self' → logprob: -13.50671672821045
    4. '(other' → logprob: -17.756717681884766
    5. 'Other' → logprob: -18.256717681884766
    6. 'othe' → logprob: -18.381717681884766
    7. ' ' → logprob: -18.506717681884766
    8. '   ' → logprob: -18.631717681884766
    9. ' self' → logprob: -18.756717681884766
    10. '.other' → logprob: -19.381717681884766

Token 219: '.y' (ID: 4486)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8830546140670776
    2. 'y' → logprob: -1.7580546140670776
    3. ',' → logprob: -1.8830546140670776
    4. '.y' → logprob: -2.258054733276367
    5. ' y' → logprob: -3.008054733276367
    6. 'x' → logprob: -3.133054733276367
    7. '.' → logprob: -3.383054733276367
    8. '.x' → logprob: -3.883054733276367
    9. ' ' → logprob: -6.008054733276367
    10. '<|end|>' → logprob: -6.383054733276367

Token 220: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.2519317865371704
    2. '/' → logprob: -1.5019317865371704
    3. ')' → logprob: -13.001932144165039
    4. ' ' → logprob: -15.751932144165039
    5. ' ' → logprob: -16.62693214416504
    6. '/usr' → logprob: -17.00193214416504
    7. '/public' → logprob: -17.62693214416504
    8. '/div' → logprob: -17.75193214416504
    9. '/code' → logprob: -17.87693214416504
    10. '<|end|>' → logprob: -18.25193214416504

Token 221: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0001584850688232109
    2. ' other' → logprob: -8.750158309936523
    3. '(other' → logprob: -19.375158309936523
    4. 'Other' → logprob: -21.125158309936523
    5. '.other' → logprob: -21.875158309936523
    6. ' ' → logprob: -22.000158309936523
    7. '_other' → logprob: -22.000158309936523
    8. 'others' → logprob: -22.500158309936523
    9. 'othe' → logprob: -23.375158309936523
    10. '   ' → logprob: -24.000158309936523

Token 222: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')
' → logprob: -14.875000953674316
    3. '<|end|>' → logprob: -15.625000953674316
    4. ' )' → logprob: -17.375
    5. '),' → logprob: -18.0
    6. ')

' → logprob: -18.75
    7. ')return' → logprob: -18.875
    8. '}' → logprob: -19.25
    9. ')}' → logprob: -19.25
    10. ')#' → logprob: -19.375

Token 223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005133562372066081
    2. '    
' → logprob: -8.625513076782227
    3. 'def' → logprob: -8.625513076782227
    4. ' def' → logprob: -9.875513076782227
    5. '
' → logprob: -10.250513076782227
    6. '	def' → logprob: -10.500513076782227
    7. '@property' → logprob: -11.250513076782227
    8. '<|end|>' → logprob: -12.250513076782227
    9. ')' → logprob: -12.500513076782227
    10. '```' → logprob: -12.500513076782227

Token 224: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5867740511894226
    2. '   ' → logprob: -0.8367740511894226
    3. ')' → logprob: -4.961773872375488
    4. ' def' → logprob: -5.711773872375488
    5. '@property' → logprob: -8.461773872375488
    6. '	def' → logprob: -8.961773872375488
    7. '.' → logprob: -10.461773872375488
    8. '    
' → logprob: -10.586773872375488
    9. ' ' → logprob: -10.711773872375488
    10. '       ' → logprob: -11.586773872375488

Token 225: ' __' (ID: 2516)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.045066948980093
    2. 'dot' → logprob: -4.045066833496094
    3. 'norm' → logprob: -4.670066833496094
    4. 'eq' → logprob: -4.920066833496094
    5. 'length' → logprob: -5.420066833496094
    6. ' abs' → logprob: -6.670066833496094
    7. '__' → logprob: -7.045066833496094
    8. 'len' → logprob: -7.170066833496094
    9. ' dot' → logprob: -7.420066833496094
    10. 'def' → logprob: -7.670066833496094

Token 226: 'lt' (ID: 3199)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.0058944267220795155
    2. 'neg' → logprob: -6.130894660949707
    3. 'repr' → logprob: -6.380894660949707
    4. 'lt' → logprob: -6.880894660949707
    5. 'abs' → logprob: -7.005894660949707
    6. 'flo' → logprob: -10.255894660949707
    7. 'mul' → logprob: -11.130894660949707
    8. 'pow' → logprob: -11.380894660949707
    9. 'rm' → logprob: -12.005894660949707
    10. 'str' → logprob: -12.505894660949707

Token 227: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00038419815246015787
    2. '__' → logprob: -7.875384330749512
    3. '(' → logprob: -13.625384330749512
    4. '__((' → logprob: -13.875384330749512
    5. '(self' → logprob: -14.000384330749512
    6. '__(
' → logprob: -14.375384330749512
    7. '__('' → logprob: -15.000384330749512
    8. '_(' → logprob: -15.875384330749512
    9. '__(*' → logprob: -16.250383377075195
    10. '__("' → logprob: -17.250383377075195

Token 228: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.5577775128767826e-06
    2. ' self' → logprob: -12.125005722045898
    3. 'other' → logprob: -15.875005722045898
    4. 's' → logprob: -18.3750057220459
    5. '(self' → logprob: -19.0000057220459
    6. '
' → logprob: -19.1250057220459
    7. '	self' → logprob: -19.5000057220459
    8. ' ' → logprob: -19.7500057220459
    9. 'Point' → logprob: -19.8750057220459
    10. '   ' → logprob: -19.8750057220459

Token 229: ',' (ID: 11)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.4667850136756897
    2. '__,' → logprob: -1.216784954071045
    3. ',' → logprob: -2.591784954071045
    4. '__' → logprob: -6.591784954071045
    5. 'self' → logprob: -7.841784954071045
    6. '__((' → logprob: -10.341785430908203
    7. '__,
' → logprob: -10.591785430908203
    8. '__(*' → logprob: -10.966785430908203
    9. '(self' → logprob: -11.091785430908203
    10. '__(
' → logprob: -11.216785430908203

Token 230: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.05073411017656326
    2. ' other' → logprob: -3.050734043121338
    3. 'self' → logprob: -6.175734043121338
    4. ' self' → logprob: -9.675734519958496
    5. ' ' → logprob: -13.800734519958496
    6. 'Other' → logprob: -14.050734519958496
    7. '   ' → logprob: -15.925734519958496
    8. '(other' → logprob: -15.925734519958496
    9. 'Point' → logprob: -16.30073356628418
    10. 'oth' → logprob: -16.67573356628418

Token 231: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06211624667048454
    2. '):
' → logprob: -2.8121161460876465
    3. '):
' → logprob: -9.437116622924805
    4. ')' → logprob: -10.437116622924805
    5. ' ):' → logprob: -10.437116622924805
    6. '):

' → logprob: -12.312116622924805
    7. ':' → logprob: -13.062116622924805
    8. ' ):
' → logprob: -13.187116622924805
    9. '   ' → logprob: -14.562116622924805
    10. 'self' → logprob: -15.062116622924805

Token 232: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05732528120279312
    2. 'self' → logprob: -3.3073253631591797
    3. ' self' → logprob: -4.05732536315918
    4. '(self' → logprob: -7.05732536315918
    5. '   ' → logprob: -8.05732536315918
    6. '        ' → logprob: -8.93232536315918
    7. 'True' → logprob: -9.05732536315918
    8. '    ' → logprob: -9.68232536315918
    9. '0' → logprob: -9.93232536315918
    10. ' ' → logprob: -9.93232536315918

Token 233: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10695403069257736
    2. 'if' (adapté à ' if') → logprob: -2.3569540977478027
    3. ' return' → logprob: -5.106954097747803
    4. '       ' → logprob: -8.231953620910645
    5. ' if' → logprob: -8.356953620910645
    6. '   ' → logprob: -8.981953620910645
    7. '	return' → logprob: -10.981953620910645
    8. 'self' → logprob: -11.481953620910645
    9. '(self' → logprob: -12.231953620910645
    10. ' (' → logprob: -12.481953620910645

Token 234: ' self' (ID: 1051)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.13188184797763824
    2. 'self' → logprob: -2.2568819522857666
    3. ' abs' → logprob: -4.2568817138671875
    4. '(abs' → logprob: -6.0068817138671875
    5. ' self' → logprob: -6.3818817138671875
    6. '(self' → logprob: -7.7568817138671875
    7. 'fabs' → logprob: -9.131881713867188
    8. '   ' → logprob: -12.506881713867188
    9. ' fabs' → logprob: -12.631881713867188
    10. '(' → logprob: -13.006881713867188

Token 235: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0009983942145481706
    2. '.y' → logprob: -7.000998497009277
    3. '.' → logprob: -9.375998497009277
    4. ' .' → logprob: -13.500998497009277
    5. 'x' → logprob: -15.375998497009277
    6. '.e' → logprob: -15.625998497009277
    7. '   ' → logprob: -16.12599754333496
    8. '.s' → logprob: -17.12599754333496
    9. '.abs' → logprob: -18.25099754333496
    10. '<x' → logprob: -18.37599754333496

Token 236: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.023076005280017853
    2. ' !=' → logprob: -4.273076057434082
    3. '<' → logprob: -5.523076057434082
    4. '!' → logprob: -5.648076057434082
    5. '+' → logprob: -7.648076057434082
    6. '==' → logprob: -8.273076057434082
    7. ' ' → logprob: -8.273076057434082
    8. '   ' → logprob: -9.773076057434082
    9. '!=(' → logprob: -9.773076057434082
    10. ' <' → logprob: -9.898076057434082

Token 237: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.014164448715746403
    2. ' other' → logprob: -4.264164447784424
    3. ' ' → logprob: -14.889164924621582
    4. '(other' → logprob: -15.139164924621582
    5. '0' → logprob: -16.264163970947266
    6. 'othe' → logprob: -16.514163970947266
    7. '.other' → logprob: -16.639163970947266
    8. '   ' → logprob: -17.139163970947266
    9. 'Other' → logprob: -18.014163970947266
    10. '  ' → logprob: -18.139163970947266

Token 238: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.020664390176534653
    2. '.' → logprob: -3.8956644535064697
    3. ' and' → logprob: -9.52066421508789
    4. 'x' → logprob: -10.52066421508789
    5. ':' → logprob: -12.64566421508789
    6. '.point' → logprob: -12.64566421508789
    7. ' ' → logprob: -12.77066421508789
    8. 'and' → logprob: -12.77066421508789
    9. '<|end|>' → logprob: -13.02066421508789
    10. '.e' → logprob: -13.39566421508789

Token 239: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2209053933620453
    2. ':
' → logprob: -2.220905303955078
    3. ' and' → logprob: -2.595905303955078
    4. 'and' → logprob: -4.595905303955078
    5. ':return' → logprob: -5.470905303955078
    6. ' :' → logprob: -7.595905303955078
    7. ' :
' → logprob: -9.345905303955078
    8. '       ' → logprob: -9.970905303955078
    9. '<|end|>' → logprob: -9.970905303955078
    10. ':
' → logprob: -10.220905303955078

Token 240: '           ' (ID: 352)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3839162588119507
    2. 'return' → logprob: -1.2589162588119507
    3. '       ' → logprob: -4.38391637802124
    4. ' self' → logprob: -4.63391637802124
    5. 'self' → logprob: -5.13391637802124
    6. '           ' → logprob: -5.25891637802124
    7. ' ' → logprob: -7.50891637802124
    8. '   ' → logprob: -8.258915901184082
    9. '
' → logprob: -8.258915901184082
    10. '	return' → logprob: -8.883915901184082

Token 241: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2526068687438965
    2. ' return' → logprob: -1.5026068687438965
    3. '           ' → logprob: -7.3776068687438965
    4. '
' → logprob: -10.502607345581055
    5. '	return' → logprob: -11.627607345581055
    6. '       ' → logprob: -11.877607345581055
    7. '   ' → logprob: -12.627607345581055
    8. 'self' → logprob: -12.877607345581055
    9. '{return' → logprob: -14.252607345581055
    10. ':return' → logprob: -14.377607345581055

Token 242: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00020532844064291567
    2. ' self' → logprob: -8.500205039978027
    3. '   ' → logprob: -13.250205039978027
    4. ' ' → logprob: -16.875205993652344
    5. '  ' → logprob: -17.750205993652344
    6. '	self' → logprob: -18.500205993652344
    7. '    ' → logprob: -18.875205993652344
    8. '       ' → logprob: -19.125205993652344
    9. '(self' → logprob: -19.375205993652344
    10. '     ' → logprob: -20.000205993652344

Token 243: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -6.182190554682165e-05
    2. '.' → logprob: -9.750061988830566
    3. 'y' → logprob: -13.125061988830566
    4. '.x' → logprob: -14.125061988830566
    5. '.s' → logprob: -14.375061988830566
    6. ' .' → logprob: -15.750061988830566
    7. '.v' → logprob: -18.12506103515625
    8. '.t' → logprob: -18.62506103515625
    9. '.user' → logprob: -19.25006103515625
    10. '<|end|>' → logprob: -19.25006103515625

Token 244: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2519422471523285
    2. ' <' → logprob: -1.5019422769546509
    3. ' ' → logprob: -11.37694263458252
    4. ' ' → logprob: -15.12694263458252
    5. '<com' → logprob: -15.12694263458252
    6. '<|end|>' → logprob: -15.37694263458252
    7. '()<' → logprob: -15.87694263458252
    8. '<class' → logprob: -16.126941680908203
    9. '<int' → logprob: -16.626941680908203
    10. '&lt' → logprob: -16.876941680908203

Token 245: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.029750604182481766
    2. ' other' → logprob: -3.5297505855560303
    3. '(other' → logprob: -16.40475082397461
    4. '.other' → logprob: -18.15475082397461
    5. 'othe' → logprob: -18.27975082397461
    6. '_other' → logprob: -19.65475082397461
    7. 'Other' → logprob: -19.65475082397461
    8. ' ' → logprob: -20.65475082397461
    9. 'self' → logprob: -21.65475082397461
    10. 'oth' → logprob: -21.65475082397461

Token 246: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -2.3915141355246305e-05
    2. '.' → logprob: -11.25002384185791
    3. 'y' → logprob: -11.50002384185791
    4. '.x' → logprob: -14.37502384185791
    5. ' .' → logprob: -16.125024795532227
    6. '.py' → logprob: -19.250024795532227
    7. ' y' → logprob: -20.875024795532227
    8. ')' → logprob: -21.500024795532227
    9. '	y' → logprob: -21.500024795532227
    10. 'Y' → logprob: -21.875024795532227

Token 247: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01111278124153614
    2. '<|end|>' → logprob: -4.886112689971924
    3. 'else' → logprob: -7.136112689971924
    4. '
' → logprob: -7.261112689971924
    5. 'return' → logprob: -7.761112689971924
    6. '        ' → logprob: -8.386113166809082
    7. ' else' → logprob: -8.511113166809082
    8. '   ' → logprob: -8.761113166809082
    9. ' or' → logprob: -9.011113166809082
    10. '.' → logprob: -9.136113166809082

Token 248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0080031119287014
    2. '<|end|>' → logprob: -5.383003234863281
    3. '
' → logprob: -6.508003234863281
    4. '<' → logprob: -7.258003234863281
    5. '	' → logprob: -8.258003234863281
    6. '   ' → logprob: -8.633003234863281
    7. 'return' → logprob: -9.008003234863281
    8. ' <' → logprob: -9.133003234863281
    9. '      ' → logprob: -9.883003234863281
    10. ' and' → logprob: -10.008003234863281

Token 249: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7590729594230652
    2. 'return' → logprob: -0.7590729594230652
    3. ' return' → logprob: -2.75907301902771
    4. 'else' (adapté à ' else') → logprob: -8.384073257446289
    5. '	return' → logprob: -9.509073257446289
    6. ' else' → logprob: -9.509073257446289
    7. '   ' → logprob: -10.009073257446289
    8. '	' → logprob: -12.009073257446289
    9. ':return' → logprob: -12.009073257446289
    10. '           ' → logprob: -12.759073257446289

Token 250: ':
' (ID: 734)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8040702939033508
    2. ' return' → logprob: -1.179070234298706
    3. ':' → logprob: -2.054070234298706
    4. '           ' → logprob: -2.929070234298706
    5. '       ' → logprob: -3.304070234298706
    6. ':return' → logprob: -4.304070472717285
    7. ':
' → logprob: -4.429070472717285
    8. ' :' → logprob: -7.679070472717285
    9. '{return' → logprob: -9.304070472717285
    10. ',' → logprob: -9.554070472717285

Token 251: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08701879531145096
    2. 'self' → logprob: -2.5870187282562256
    3. ' return' → logprob: -5.087018966674805
    4. '       ' → logprob: -6.837018966674805
    5. ' self' → logprob: -7.087018966674805
    6. '           ' → logprob: -11.587018966674805
    7. '   ' → logprob: -14.587018966674805
    8. '	return' → logprob: -15.087018966674805
    9. '(self' → logprob: -15.587018966674805
    10. ' ' → logprob: -16.337018966674805

Token 252: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.023245712742209435
    2. ' return' → logprob: -3.7732458114624023
    3. '       ' → logprob: -16.148244857788086
    4. '           ' → logprob: -16.148244857788086
    5. '	return' → logprob: -18.023244857788086
    6. 'self' → logprob: -19.148244857788086
    7. ':return' → logprob: -19.273244857788086
    8. '{return' → logprob: -20.523244857788086
    9. '   ' → logprob: -21.023244857788086
    10. ' ' → logprob: -21.398244857788086

Token 253: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001234428636962548
    2. ' self' → logprob: -9.000123023986816
    3. '(self' → logprob: -19.375123977661133
    4. 'Self' → logprob: -20.250123977661133
    5. '	self' → logprob: -21.250123977661133
    6. '   ' → logprob: -21.625123977661133
    7. ' ' → logprob: -22.375123977661133
    8. 's' → logprob: -22.375123977661133
    9. '[self' → logprob: -23.250123977661133
    10. '0' → logprob: -24.000123977661133

Token 254: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -3.1424973713001236e-05
    2. '.' → logprob: -10.375031471252441
    3. 'x' → logprob: -15.625031471252441
    4. '<x' → logprob: -19.375030517578125
    5. ' .' → logprob: -19.500030517578125
    6. '.s' → logprob: -19.625030517578125
    7. '.y' → logprob: -20.625030517578125
    8. '._' → logprob: -21.000030517578125
    9. 'self' → logprob: -21.500030517578125
    10. '<' → logprob: -22.750030517578125

Token 255: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2519291639328003
    2. '<' → logprob: -1.5019291639328003
    3. ' ' → logprob: -16.126928329467773
    4. '＜' → logprob: -18.501928329467773
    5. '<class' → logprob: -18.626928329467773
    6. ' <
' → logprob: -19.501928329467773
    7. ' ' → logprob: -19.751928329467773
    8. '<int' → logprob: -19.751928329467773
    9. '()<' → logprob: -20.001928329467773
    10. '<std' → logprob: -20.126928329467773

Token 256: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.07889000326395035
    2. ' other' → logprob: -2.578890085220337
    3. '(other' → logprob: -16.078889846801758
    4. 'Other' → logprob: -16.703889846801758
    5. 'othe' → logprob: -17.328889846801758
    6. '.other' → logprob: -18.078889846801758
    7. 'oth' → logprob: -18.453889846801758
    8. '_other' → logprob: -19.703889846801758
    9. ' oth' → logprob: -19.703889846801758
    10. 'self' → logprob: -20.203889846801758

Token 257: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.001335359294898808
    2. 'x' → logprob: -6.626335144042969
    3. '.' → logprob: -11.626335144042969
    4. ' x' → logprob: -15.126335144042969
    5. '<|end|>' → logprob: -16.87633514404297
    6. '<x' → logprob: -17.12633514404297
    7. ' .' → logprob: -17.62633514404297
    8. '{x' → logprob: -17.62633514404297
    9. '_x' → logprob: -17.75133514404297
    10. '[' → logprob: -17.75133514404297

Token 258: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 259: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6865062117576599
    2. '<|end|>' → logprob: -0.8115062117576599
    3. ')' → logprob: -3.0615062713623047
    4. '
' → logprob: -6.936506271362305
    5. '#' → logprob: -7.061506271362305
    6. ' ' → logprob: -7.186506271362305
    7. '(' → logprob: -7.561506271362305
    8. '    ' → logprob: -7.811506271362305
    9. ',' → logprob: -7.811506271362305
    10. '<|end|>' → logprob: -7.936506271362305

Token 260: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06724000722169876
    2. 'def' (adapté à ' def') → logprob: -2.817239999771118
    3. ')' → logprob: -5.442240238189697
    4. '#' → logprob: -8.067239761352539
    5. ' def' → logprob: -8.192239761352539
    6. '.' → logprob: -9.067239761352539
    7. '<|end|>' → logprob: -9.567239761352539
    8. '	def' → logprob: -9.692239761352539
    9. '    
' → logprob: -10.442239761352539
    10. '    ' → logprob: -12.192239761352539

Token 261: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.13674573600292206
    2. 'norm' → logprob: -3.0117456912994385
    3. 'dot' → logprob: -3.6367456912994385
    4. 'abs' → logprob: -3.6367456912994385
    5. ' __' → logprob: -4.136745929718018
    6. 'dist' → logprob: -6.136745929718018
    7. 'length' → logprob: -6.136745929718018
    8. 'equals' → logprob: -6.386745929718018
    9. 'eq' → logprob: -6.511745929718018
    10. 'distance' → logprob: -7.011745929718018

Token 262: 'eq' (ID: 21725)
  Prédit: 'eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.0007151735480874777
    2. 'repr' → logprob: -7.250715255737305
    3. 'le' → logprob: -12.750715255737305
    4. 'abs' → logprob: -13.750715255737305
    5. 'str' → logprob: -13.875715255737305
    6. 'neg' → logprob: -15.625715255737305
    7. 'hash' → logprob: -16.000715255737305
    8. 'ne' → logprob: -18.125715255737305
    9. 'gt' → logprob: -18.250715255737305
    10. 'rep' → logprob: -18.375715255737305

Token 263: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0009178895270451903
    2. '__' → logprob: -7.000917911529541
    3. '__((' → logprob: -12.125917434692383
    4. '__('' → logprob: -14.500917434692383
    5. '__(
' → logprob: -15.250917434692383
    6. '__(*' → logprob: -15.250917434692383
    7. '__("' → logprob: -16.875917434692383
    8. '(' → logprob: -18.000917434692383
    9. '__.__' → logprob: -19.000917434692383
    10. '__[' → logprob: -19.500917434692383

Token 264: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0031815171241760254
    2. 'other' → logprob: -5.753181457519531
    3. ' self' → logprob: -12.503181457519531
    4. ' other' → logprob: -15.628181457519531
    5. '(self' → logprob: -17.12818145751953
    6. 'Other' → logprob: -18.50318145751953
    7. ')' → logprob: -19.37818145751953
    8. '	self' → logprob: -19.87818145751953
    9. '_other' → logprob: -21.12818145751953
    10. '   ' → logprob: -21.75318145751953

Token 265: ',' (ID: 11)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0024999137967824936
    2. '__' → logprob: -6.002500057220459
    3. '__((' → logprob: -11.3774995803833
    4. '__(*' → logprob: -11.7524995803833
    5. '__('' → logprob: -13.3774995803833
    6. '(' → logprob: -13.3774995803833
    7. '__(
' → logprob: -13.7524995803833
    8. '__,' → logprob: -14.8774995803833
    9. '__("' → logprob: -15.8774995803833
    10. '__)' → logprob: -16.752500534057617

Token 266: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.12692926824092865
    2. ' other' → logprob: -2.12692928314209
    3. '(other' → logprob: -14.12692928314209
    4. 'Other' → logprob: -15.37692928314209
    5. 'self' → logprob: -16.501928329467773
    6. ' ' → logprob: -16.501928329467773
    7. '_other' → logprob: -17.376928329467773
    8. 'oth' → logprob: -17.376928329467773
    9. 'othe' → logprob: -18.376928329467773
    10. '.other' → logprob: -18.626928329467773

Token 267: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003005631035193801
    2. '):
' → logprob: -5.878005504608154
    3. ')' → logprob: -8.628005981445312
    4. ' ):' → logprob: -11.128005981445312
    5. '):

' → logprob: -13.003005981445312
    6. '):
' → logprob: -13.378005981445312
    7. ',' → logprob: -13.628005981445312
    8. ':' → logprob: -14.253005981445312
    9. '   ' → logprob: -14.753005981445312
    10. '       ' → logprob: -15.128005981445312

Token 268: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11656121164560318
    2. 'self' → logprob: -3.6165611743927
    3. 'abs' → logprob: -3.6165611743927
    4. ' self' → logprob: -3.7415611743927
    5. ' abs' → logprob: -3.8665611743927
    6. '(self' → logprob: -4.741561412811279
    7. '(abs' → logprob: -6.366561412811279
    8. ' return' → logprob: -7.866561412811279
    9. 'return' → logprob: -8.241560935974121
    10. ' (' → logprob: -8.366560935974121

Token 269: ' from' (ID: 591)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0010474584996700287
    2. 'return' → logprob: -7.251047611236572
    3. ' abs' → logprob: -8.126047134399414
    4. '(abs' → logprob: -10.501047134399414
    5. '   ' → logprob: -11.751047134399414
    6. 'is' → logprob: -13.001047134399414
    7. ' return' → logprob: -13.126047134399414
    8. '       ' → logprob: -13.751047134399414
    9. '
' → logprob: -15.251047134399414
    10. 'self' → logprob: -15.626047134399414

Token 270: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.0007385154603980482
    2. ' math' → logprob: -7.250738620758057
    3. 'cmath' → logprob: -10.625738143920898
    4. '__' → logprob: -13.125738143920898
    5. 'operator' → logprob: -13.500738143920898
    6. 'numbers' → logprob: -15.000738143920898
    7. 'decimal' → logprob: -15.125738143920898
    8. 'abs' → logprob: -15.750738143920898
    9. 'collections' → logprob: -17.0007381439209
    10. ' ' → logprob: -17.0007381439209

Token 271: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.038695525377988815
    2. 'import' → logprob: -3.2886955738067627
    3. '	import' → logprob: -7.538695335388184
    4. 'fabs' → logprob: -10.038695335388184
    5. '<|end|>' → logprob: -10.663695335388184
    6. ' fabs' → logprob: -11.288695335388184
    7. '.isnan' → logprob: -11.413695335388184
    8. '.abs' → logprob: -12.288695335388184
    9. ' importar' → logprob: -12.413695335388184
    10. ' impor' → logprob: -12.538695335388184

Token 272: ' fabs' (ID: 110501)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.2519461214542389
    2. 'fabs' → logprob: -1.5019460916519165
    3. ' fabs' → logprob: -11.626946449279785
    4. 'f' → logprob: -12.501946449279785
    5. ' is' → logprob: -12.876946449279785
    6. 'abs' → logprob: -14.751946449279785
    7. '.is' → logprob: -14.751946449279785
    8. '
' → logprob: -15.751946449279785
    9. '	is' → logprob: -15.751946449279785
    10. 'sqrt' → logprob: -15.751946449279785

Token 273: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007341938093304634
    2. '
' → logprob: -5.0073418617248535
    3. '(' → logprob: -8.132342338562012
    4. '(f' → logprob: -9.132342338562012
    5. '        
' → logprob: -10.132342338562012
    6. 'return' → logprob: -10.382342338562012
    7. '<|end|>' → logprob: -10.507342338562012
    8. ',' → logprob: -10.757342338562012
    9. '<|end|>' → logprob: -10.757342338562012
    10. '	' → logprob: -11.007342338562012

Token 274: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005785312969237566
    2. ' return' → logprob: -8.000578880310059
    3. 'return' → logprob: -8.375578880310059
    4. 'fabs' → logprob: -12.875578880310059
    5. '=' → logprob: -13.375578880310059
    6. '   ' → logprob: -13.750578880310059
    7. '           ' → logprob: -13.875578880310059
    8. '(f' → logprob: -14.125578880310059
    9. 'import' → logprob: -14.125578880310059
    10. '	return' → logprob: -14.375578880310059

Token 275: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.004883262328803539
    2. '       ' → logprob: -5.379883289337158
    3. ' return' → logprob: -8.7548828125
    4. 'if' (adapté à ' if') → logprob: -9.2548828125
    5. '	return' → logprob: -12.5048828125
    6. '   ' → logprob: -12.7548828125
    7. 'def' → logprob: -13.0048828125
    8. 'fabs' → logprob: -15.0048828125
    9. 'abs' → logprob: -15.1298828125
    10. '
' → logprob: -16.3798828125

Token 276: ' fabs' (ID: 110501)
  Prédit: 'fabs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fabs' → logprob: -0.639438807964325
    2. ' fabs' → logprob: -0.764438807964325
    3. 'abs' → logprob: -5.264438629150391
    4. ' abs' → logprob: -6.639438629150391
    5. '(abs' → logprob: -9.01443862915039
    6. '(f' → logprob: -9.76443862915039
    7. 'f' → logprob: -9.88943862915039
    8. ' self' → logprob: -10.13943862915039
    9. 'self' → logprob: -10.38943862915039
    10. '   ' → logprob: -11.26443862915039

Token 277: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.250000953674316
    3. '((' → logprob: -16.125
    4. 'self' → logprob: -16.5
    5. '=self' → logprob: -17.0
    6. '(other' → logprob: -17.75
    7. '(this' → logprob: -17.75
    8. ' (' → logprob: -18.125
    9. '(Self' → logprob: -19.25
    10. '(s' → logprob: -19.375

Token 278: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -3.214019307051785e-05
    2. '.' → logprob: -10.875032424926758
    3. 'self' → logprob: -11.750032424926758
    4. '(self' → logprob: -13.500032424926758
    5. '(x' → logprob: -14.125032424926758
    6. ' .' → logprob: -14.500032424926758
    7. ').' → logprob: -14.875032424926758
    8. 'x' → logprob: -14.875032424926758
    9. '(' → logprob: -15.125032424926758
    10. ')' → logprob: -15.250032424926758

Token 279: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.251956045627594
    2. ' -' → logprob: -1.5019559860229492
    3. '-other' → logprob: -11.37695598602295
    4. '-self' → logprob: -11.75195598602295
    5. '()' → logprob: -13.25195598602295
    6. ' ' → logprob: -13.50195598602295
    7. 'self' → logprob: -13.75195598602295
    8. ')' → logprob: -14.25195598602295
    9. '()-' → logprob: -14.37695598602295
    10. '   ' → logprob: -14.37695598602295

Token 280: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.07889077812433243
    2. ' other' → logprob: -2.578890800476074
    3. '(other' → logprob: -14.703890800476074
    4. 'Other' → logprob: -15.453890800476074
    5. 'self' → logprob: -16.078889846801758
    6. '.other' → logprob: -16.453889846801758
    7. ' ' → logprob: -16.828889846801758
    8. '   ' → logprob: -17.703889846801758
    9. '_other' → logprob: -17.703889846801758
    10. '0' → logprob: -18.453889846801758

Token 281: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00027063372544944286
    2. '.' → logprob: -8.50027084350586
    3. 'x' → logprob: -9.62527084350586
    4. '[' → logprob: -15.00027084350586
    5. ' .' → logprob: -15.12527084350586
    6. ' x' → logprob: -16.12527084350586
    7. ')' → logprob: -16.50027084350586
    8. ' ' → logprob: -16.87527084350586
    9. ').' → logprob: -16.87527084350586
    10. '0' → logprob: -17.25027084350586

Token 282: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013131031300872564
    2. ')<' → logprob: -9.125131607055664
    3. ')<=' → logprob: -11.125131607055664
    4. ' )' → logprob: -12.250131607055664
    5. ')>' → logprob: -13.750131607055664
    6. '<' → logprob: -14.250131607055664
    7. '）' → logprob: -15.000131607055664
    8. ')>=' → logprob: -15.125131607055664
    9. '   ' → logprob: -15.500131607055664
    10. '>' → logprob: -17.250131607055664

Token 283: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.020766451954841614
    2. ' <' → logprob: -3.895766496658325
    3. '<=' → logprob: -8.895766258239746
    4. ')' → logprob: -10.020766258239746
    5. ' <=' → logprob: -10.645766258239746
    6. ' ' → logprob: -12.520766258239746
    7. '>' → logprob: -12.895766258239746
    8. ')<' → logprob: -13.645766258239746
    9. '<class' → logprob: -14.020766258239746
    10. '<float' → logprob: -14.145766258239746

Token 284: ' Point' (ID: 9971)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1282893270254135
    2. 'Point' → logprob: -2.128289222717285
    3. ' self' → logprob: -6.878289222717285
    4. ' Point' → logprob: -8.128289222717285
    5. '1' → logprob: -10.378289222717285
    6. '	Point' → logprob: -13.878289222717285
    7. 'Self' → logprob: -14.253289222717285
    8. '0' → logprob: -14.753289222717285
    9. '   ' → logprob: -14.878289222717285
    10. '
' → logprob: -15.003289222717285

Token 285: '.e' (ID: 2560)
  Prédit: '.e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.e' → logprob: -0.00043639098294079304
    2. '.' → logprob: -7.750436305999756
    3. 'epsilon' → logprob: -12.125436782836914
    4. ' .' → logprob: -14.875436782836914
    5. ' epsilon' → logprob: -17.125436782836914
    6. 'E' → logprob: -18.500436782836914
    7. 'e' → logprob: -19.625436782836914
    8. '.E' → logprob: -20.125436782836914
    9. '.ep' → logprob: -20.250436782836914
    10. '   ' → logprob: -20.500436782836914

Token 286: 'psilon' (ID: 71499)
  Prédit: 'psilon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'psilon' → logprob: -4.143808109802194e-05
    2. 'epsilon' → logprob: -10.125041007995605
    3. 'ps' → logprob: -14.750041007995605
    4. 'psi' → logprob: -15.250041007995605
    5. '-' → logprob: -15.750041007995605
    6. 'p' → logprob: -15.750041007995605
    7. '1' → logprob: -16.125041961669922
    8. ' epsilon' → logprob: -16.500041961669922
    9. '10' → logprob: -17.125041961669922
    10. '```' → logprob: -17.250041961669922

Token 287: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.009757624007761478
    2. 'and' → logprob: -4.6347575187683105
    3. '       ' → logprob: -14.509757995605469
    4. ' ' → logprob: -14.759757995605469
    5. '	and' → logprob: -15.134757995605469
    6. '        ' → logprob: -15.759757995605469
    7. '           ' → logprob: -16.00975799560547
    8. '   ' → logprob: -17.50975799560547
    9. 'そして' → logprob: -17.50975799560547
    10. '    ' → logprob: -17.50975799560547

Token 288: ' fabs' (ID: 110501)
  Prédit: ' fabs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fabs' → logprob: -0.6932232975959778
    2. 'fabs' → logprob: -0.6932232975959778
    3. 'abs' → logprob: -9.693222999572754
    4. ' abs' → logprob: -11.568222999572754
    5. 'fab' → logprob: -13.318222999572754
    6. ' fab' → logprob: -13.818222999572754
    7. '       ' → logprob: -14.568222999572754
    8. 'f' → logprob: -15.068222999572754
    9. '        ' → logprob: -15.193222999572754
    10. '	f' → logprob: -15.318222999572754

Token 289: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -15.125000953674316
    3. 'self' → logprob: -15.750000953674316
    4. ' (' → logprob: -17.375
    5. '[self' → logprob: -19.875
    6. '   ' → logprob: -20.0
    7. '(
' → logprob: -20.5
    8. '((' → logprob: -20.625
    9. ' self' → logprob: -20.625
    10. ' ' → logprob: -20.75

Token 290: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -4.453737710718997e-05
    2. 'y' → logprob: -10.375044822692871
    3. '.' → logprob: -11.375044822692871
    4. '.x' → logprob: -13.625044822692871
    5. '.py' → logprob: -15.125044822692871
    6. '<|end|>' → logprob: -16.375043869018555
    7. ' y' → logprob: -17.000043869018555
    8. '.user' → logprob: -17.000043869018555
    9. ' .' → logprob: -17.000043869018555
    10. 'self' → logprob: -17.750043869018555

Token 291: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.008627813309431076
    2. '-' → logprob: -4.758627891540527
    3. '<|end|>' → logprob: -11.508627891540527
    4. '<|end|>' → logprob: -13.883627891540527
    5. '(' → logprob: -14.258627891540527
    6. ' ' → logprob: -14.508627891540527
    7. ' –' → logprob: -15.383627891540527
    8. '   ' → logprob: -15.758627891540527
    9. 'self' → logprob: -16.38362693786621
    10. '(other' → logprob: -16.50862693786621

Token 292: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.10020796209573746
    2. ' other' → logprob: -2.350208044052124
    3. '(other' → logprob: -13.600208282470703
    4. 'Other' → logprob: -16.850208282470703
    5. '.other' → logprob: -17.850208282470703
    6. '_other' → logprob: -17.975208282470703
    7. 'OTHER' → logprob: -20.475208282470703
    8. '<|end|>' → logprob: -20.725208282470703
    9. '-other' → logprob: -20.975208282470703
    10. ' ' → logprob: -21.850208282470703

Token 293: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0022558800410479307
    2. 'y' → logprob: -6.127255916595459
    3. '-y' → logprob: -10.1272554397583
    4. '.x' → logprob: -11.1272554397583
    5. '.' → logprob: -11.5022554397583
    6. '-' → logprob: -12.7522554397583
    7. ' y' → logprob: -14.0022554397583
    8. '```' → logprob: -14.7522554397583
    9. ' -' → logprob: -15.0022554397583
    10. 'x' → logprob: -15.1272554397583

Token 294: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.618001053633634e-05
    2. ')<' → logprob: -10.625025749206543
    3. ' )' → logprob: -13.375025749206543
    4. '<' → logprob: -16.62502670288086
    5. '   ' → logprob: -17.50002670288086
    6. '）' → logprob: -17.50002670288086
    7. '[' → logprob: -18.37502670288086
    8. ')
' → logprob: -18.50002670288086
    9. '")' → logprob: -18.62502670288086
    10. ' <' → logprob: -18.75002670288086

Token 295: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5762096643447876
    2. '<' → logprob: -0.8262096643447876
    3. ')' → logprob: -8.576210021972656
    4. ')<' → logprob: -9.951210021972656
    5. '()<' → logprob: -11.201210021972656
    6. '<Point' → logprob: -11.701210021972656
    7. ' ' → logprob: -12.451210021972656
    8. '<|end|>' → logprob: -13.326210021972656
    9. '()' → logprob: -13.576210021972656
    10. '[' → logprob: -14.326210021972656

Token 296: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -4.5491004129871726e-05
    2. ' Point' → logprob: -10.000045776367188
    3. '	Point' → logprob: -17.250045776367188
    4. '_Point' → logprob: -18.375045776367188
    5. '(Point' → logprob: -18.625045776367188
    6. 'point' → logprob: -19.000045776367188
    7. '<Point' → logprob: -19.375045776367188
    8. '_point' → logprob: -19.500045776367188
    9. 'Points' → logprob: -20.625045776367188
    10. '.Point' → logprob: -21.125045776367188

Token 297: '.e' (ID: 2560)
  Prédit: '.e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.e' → logprob: -0.00031174797913990915
    2. '.' → logprob: -8.125311851501465
    3. 'epsilon' → logprob: -11.125311851501465
    4. 'e' → logprob: -14.750311851501465
    5. ' .' → logprob: -14.875311851501465
    6. '.eclipse' → logprob: -17.00031089782715
    7. '.euler' → logprob: -17.00031089782715
    8. 'psilon' → logprob: -17.00031089782715
    9. ' epsilon' → logprob: -17.50031089782715
    10. '.ep' → logprob: -17.87531089782715

Token 298: 'psilon' (ID: 71499)
  Prédit: 'psilon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'psilon' → logprob: -0.010395976714789867
    2. '10' → logprob: -5.0103960037231445
    3. '-' → logprob: -5.6353960037231445
    4. '6' → logprob: -10.510396003723145
    5. 'epsilon' → logprob: -10.510396003723145
    6. 'psi' → logprob: -10.635396003723145
    7. '+' → logprob: -11.385396003723145
    8. '9' → logprob: -12.260396003723145
    9. 'p' → logprob: -13.260396003723145
    10. 'ps' → logprob: -13.260396003723145

Token 299: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12823176383972168
    2. ':
' → logprob: -2.2532317638397217
    3. '       ' → logprob: -4.378232002258301
    4. ':return' → logprob: -6.253232002258301
    5. '):
' → logprob: -8.2532320022583
    6. '<|end|>' → logprob: -8.7532320022583
    7. '           ' → logprob: -9.1282320022583
    8. ' :' → logprob: -9.3782320022583
    9. '):' → logprob: -9.8782320022583
    10. ' :
' → logprob: -10.1282320022583

Token 300: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.994086627149954e-05
    2. '       ' → logprob: -9.875080108642578
    3. 'return' → logprob: -10.875080108642578
    4. ' return' → logprob: -12.250080108642578
    5. '		' → logprob: -13.375080108642578
    6. '               ' → logprob: -13.875080108642578
    7. ':return' → logprob: -14.375080108642578
    8. '	       ' → logprob: -15.000080108642578
    9. ':
' → logprob: -15.625080108642578
    10. '   ' → logprob: -15.625080108642578

Token 301: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03325510397553444
    2. ' return' → logprob: -3.533255100250244
    3. '           ' → logprob: -5.783255100250244
    4. '       ' → logprob: -7.783255100250244
    5. '   ' → logprob: -13.408255577087402
    6. '	return' → logprob: -13.658255577087402
    7. '               ' → logprob: -14.533255577087402
    8. ':return' → logprob: -17.533254623413086
    9. '{return' → logprob: -18.783254623413086
    10. ' ' → logprob: -19.283254623413086

Token 302: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0001234428636962548
    2. ' True' → logprob: -9.000123023986816
    3. '   ' → logprob: -19.875123977661133
    4. '(True' → logprob: -20.000123977661133
    5. 'true' → logprob: -21.625123977661133
    6. '=True' → logprob: -23.500123977661133
    7. 'Tr' → logprob: -23.625123977661133
    8. '       ' → logprob: -24.625123977661133
    9. '
' → logprob: -24.750123977661133
    10. '1' → logprob: -24.875123977661133

Token 303: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001596771035110578
    2. 'return' → logprob: -8.87515926361084
    3. ' return' → logprob: -11.87515926361084
    4. '
' → logprob: -11.87515926361084
    5. '	' → logprob: -12.62515926361084
    6. '   ' → logprob: -13.25015926361084
    7. '           ' → logprob: -15.50015926361084
    8. '	return' → logprob: -16.000160217285156
    9. '<|end|>' → logprob: -16.125160217285156
    10. 'else' → logprob: -16.625160217285156

Token 304: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001875671005109325
    2. 'return' → logprob: -8.875187873840332
    3. '	' → logprob: -10.125187873840332
    4. ' return' → logprob: -12.625187873840332
    5. '   ' → logprob: -13.250187873840332
    6. '	return' → logprob: -14.000187873840332
    7. '<|end|>' → logprob: -14.375187873840332
    8. '	   ' → logprob: -15.375187873840332
    9. '           ' → logprob: -15.375187873840332
    10. '
' → logprob: -16.375186920166016

Token 305: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001342850853689015
    2. 'return' → logprob: -6.8763427734375
    3. ' return' → logprob: -8.6263427734375
    4. '   ' → logprob: -9.0013427734375
    5. '	' → logprob: -12.6263427734375
    6. 'else' (adapté à ' else') → logprob: -13.3763427734375
    7. '	return' → logprob: -13.7513427734375
    8. '	   ' → logprob: -14.1263427734375
    9. '           ' → logprob: -14.6263427734375
    10. ' else' → logprob: -15.7513427734375

Token 306: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011720098555088043
    2. ':' → logprob: -7.751172065734863
    3. ':
' → logprob: -7.751172065734863
    4. 'return' → logprob: -9.251172065734863
    5. '       ' → logprob: -9.376172065734863
    6. ' return' → logprob: -9.376172065734863
    7. ':return' → logprob: -10.376172065734863
    8. '               ' → logprob: -12.251172065734863
    9. '		' → logprob: -13.001172065734863
    10. '	       ' → logprob: -13.251172065734863

Token 307: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0030252449214458466
    2. '       ' → logprob: -6.878025054931641
    3. ' return' → logprob: -6.878025054931641
    4. 'return' → logprob: -7.128025054931641
    5. 'False' → logprob: -8.87802505493164
    6. ' False' → logprob: -11.37802505493164
    7. '   ' → logprob: -12.75302505493164
    8. '               ' → logprob: -12.87802505493164
    9. '	return' → logprob: -14.12802505493164
    10. '	       ' → logprob: -14.75302505493164

Token 308: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2528282403945923
    2. ' return' → logprob: -1.5028282403945923
    3. '           ' → logprob: -7.127828121185303
    4. '       ' → logprob: -9.377828598022461
    5. '	return' → logprob: -12.127828598022461
    6. '               ' → logprob: -12.752828598022461
    7. '   ' → logprob: -13.502828598022461
    8. 'False' → logprob: -13.627828598022461
    9. ':return' → logprob: -14.377828598022461
    10. '{return' → logprob: -16.50282859802246

Token 309: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0001584850688232109
    2. ' False' → logprob: -8.750158309936523
    3. '(False' → logprob: -19.875158309936523
    4. '=False' → logprob: -22.375158309936523
    5. '   ' → logprob: -23.250158309936523
    6. '_false' → logprob: -24.625158309936523
    7. 'false' → logprob: -24.875158309936523
    8. '.False' → logprob: -26.625158309936523
    9. 'Falsy' → logprob: -27.875158309936523
    10. 'F' → logprob: -28.125158309936523

Token 310: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 311: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011938151903450489
    2. '<|end|>' → logprob: -5.886938095092773
    3. 'def' → logprob: -6.011938095092773
    4. '
' → logprob: -6.011938095092773
    5. '@property' → logprob: -6.386938095092773
    6. '    
' → logprob: -6.511938095092773
    7. ' def' → logprob: -8.386938095092773
    8. '```' → logprob: -8.886938095092773
    9. '<|end|>' → logprob: -8.886938095092773
    10. ')' → logprob: -9.136938095092773

Token 312: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.018341444432735443
    2. '   ' → logprob: -4.018341541290283
    3. ' def' → logprob: -9.143341064453125
    4. '@property' → logprob: -9.518341064453125
    5. '	def' → logprob: -12.893341064453125
    6. '#' → logprob: -13.018341064453125
    7. ')' → logprob: -13.143341064453125
    8. '    
' → logprob: -13.643341064453125
    9. '.' → logprob: -14.018341064453125
    10. '@' → logprob: -14.643341064453125

Token 313: ' norm' (ID: 7882)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.2718304991722107
    2. 'norm' → logprob: -1.5218305587768555
    3. ' norm' → logprob: -4.5218305587768555
    4. 'dot' → logprob: -5.3968305587768555
    5. ' abs' → logprob: -6.3968305587768555
    6. 'dist' → logprob: -7.2718305587768555
    7. '__' → logprob: -7.5218305587768555
    8. 'length' → logprob: -7.7718305587768555
    9. 'len' → logprob: -8.271830558776855
    10. 'distance' → logprob: -8.271830558776855

Token 314: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.870950215263292e-05
    2. '(' → logprob: -10.250048637390137
    3. '(s' → logprob: -11.750048637390137
    4. 'self' → logprob: -13.125048637390137
    5. '()' → logprob: -13.875048637390137
    6. ' (' → logprob: -14.375048637390137
    7. 's' → logprob: -15.375048637390137
    8. '2' → logprob: -15.375048637390137
    9. 'sq' → logprob: -15.375048637390137
    10. '()(' → logprob: -15.500048637390137

Token 315: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002692032721824944
    2. 'self' → logprob: -8.375268936157227
    3. '(' → logprob: -11.375268936157227
    4. ')(' → logprob: -11.750268936157227
    5. ')' → logprob: -12.125268936157227
    6. 's' → logprob: -12.625268936157227
    7. '):
' → logprob: -13.375268936157227
    8. '(s' → logprob: -13.375268936157227
    9. ' (' → logprob: -13.500268936157227
    10. '   ' → logprob: -13.750268936157227

Token 316: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10827092826366425
    2. 'return' → logprob: -2.3582708835601807
    3. '	' → logprob: -5.23327112197876
    4. ' return' → logprob: -6.48327112197876
    5. '   ' → logprob: -7.35827112197876
    6. '	return' → logprob: -7.85827112197876
    7. 'self' → logprob: -8.983270645141602
    8. ' ' → logprob: -12.108270645141602
    9. '(self' → logprob: -12.983270645141602
    10. ' self' → logprob: -13.233270645141602

Token 317: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0012392755597829819
    2. ' return' → logprob: -6.75123929977417
    3. '   ' → logprob: -10.001238822937012
    4. '       ' → logprob: -10.751238822937012
    5. 'self' → logprob: -13.501238822937012
    6. '	return' → logprob: -14.001238822937012
    7. ' ' → logprob: -17.751239776611328
    8. '```' → logprob: -19.251239776611328
    9. '	' → logprob: -19.626239776611328
    10. '  ' → logprob: -19.626239776611328

Token 318: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.24179228907451e-05
    2. ' self' → logprob: -9.750061988830566
    3. 'sqrt' → logprob: -12.750061988830566
    4. '(self' → logprob: -13.750061988830566
    5. 'math' → logprob: -16.375062942504883
    6. '	self' → logprob: -19.250062942504883
    7. ' sqrt' → logprob: -19.750062942504883
    8. '(' → logprob: -19.750062942504883
    9. '   ' → logprob: -20.250062942504883
    10. ' (' → logprob: -20.375062942504883

Token 319: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0009489760850556195
    2. 'self' → logprob: -7.375948905944824
    3. 'x' → logprob: -8.625948905944824
    4. '.' → logprob: -9.250948905944824
    5. '.s' → logprob: -10.500948905944824
    6. ' .' → logprob: -11.750948905944824
    7. 'def' → logprob: -12.250948905944824
    8. 's' → logprob: -12.500948905944824
    9. ' self' → logprob: -14.000948905944824
    10. 'import' → logprob: -14.750948905944824

Token 320: ' *' (ID: 425)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.05224694311618805
    2. '*self' → logprob: -3.5522470474243164
    3. ' *' → logprob: -4.052247047424316
    4. '*' → logprob: -5.802247047424316
    5. ' **' → logprob: -6.302247047424316
    6. ' ' → logprob: -12.302247047424316
    7. '*x' → logprob: -13.552247047424316
    8. '2' → logprob: -13.677247047424316
    9. 'self' → logprob: -13.677247047424316
    10. '***' → logprob: -15.052247047424316

Token 321: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00015085970517247915
    2. ' self' → logprob: -9.250150680541992
    3. '2' → logprob: -9.875150680541992
    4. '
' → logprob: -13.125150680541992
    5. '<|end|>' → logprob: -14.625150680541992
    6. '	self' → logprob: -15.625150680541992
    7. '*self' → logprob: -15.625150680541992
    8. ' ' → logprob: -16.500150680541992
    9. '1' → logprob: -16.750150680541992
    10. '=self' → logprob: -17.000150680541992

Token 322: '.x' (ID: 3700)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06325336545705795
    2. '.x' → logprob: -2.938253402709961
    3. 'self' → logprob: -4.938253402709961
    4. '2' → logprob: -7.313253402709961
    5. '<|end|>' → logprob: -9.063253402709961
    6. ' x' → logprob: -9.188253402709961
    7. '<|end|>' → logprob: -10.313253402709961
    8. '	x' → logprob: -10.438253402709961
    9. ' ' → logprob: -10.563253402709961
    10. '1' → logprob: -10.688253402709961

Token 323: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12755391001701355
    2. ' +' → logprob: -2.127553939819336
    3. '+self' → logprob: -7.377553939819336
    4. '＋' → logprob: -16.127553939819336
    5. '+y' → logprob: -16.127553939819336
    6. 'self' → logprob: -16.377553939819336
    7. '+
' → logprob: -16.627553939819336
    8. '   ' → logprob: -16.752553939819336
    9. '+\' → logprob: -18.002553939819336
    10. '()+' → logprob: -18.002553939819336

Token 324: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00033558503491804004
    2. ' self' → logprob: -8.000335693359375
    3. '
' → logprob: -17.750335693359375
    4. '   ' → logprob: -17.750335693359375
    5. '	self' → logprob: -17.875335693359375
    6. '       ' → logprob: -18.125335693359375
    7. '(self' → logprob: -18.500335693359375
    8. ' ' → logprob: -18.750335693359375
    9. '  ' → logprob: -19.500335693359375
    10. '[self' → logprob: -21.500335693359375

Token 325: '.y' (ID: 4486)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003320426447317004
    2. '.y' → logprob: -6.378320217132568
    3. 'y' → logprob: -6.503320217132568
    4. ' self' → logprob: -9.628320693969727
    5. '.self' → logprob: -10.253320693969727
    6. '   ' → logprob: -11.503320693969727
    7. '.' → logprob: -13.003320693969727
    8. '       ' → logprob: -13.503320693969727
    9. '	self' → logprob: -14.378320693969727
    10. '(self' → logprob: -14.378320693969727

Token 326: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3197537064552307
    2. '*' → logprob: -1.319753646850586
    3. '*self' → logprob: -5.069753646850586
    4. '*y' → logprob: -8.944753646850586
    5. ' ' → logprob: -10.694753646850586
    6. '   ' → logprob: -11.444753646850586
    7. 'self' → logprob: -11.694753646850586
    8. ' ' → logprob: -12.694753646850586
    9. '*object' → logprob: -12.819753646850586
    10. ' self' → logprob: -12.819753646850586

Token 327: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.659005157416686e-05
    2. ' self' → logprob: -9.625066757202148
    3. '(self' → logprob: -15.875066757202148
    4. 'other' → logprob: -16.12506675720215
    5. '0' → logprob: -16.37506675720215
    6. '	self' → logprob: -16.50006675720215
    7. 'y' → logprob: -16.62506675720215
    8. '2' → logprob: -17.37506675720215
    9. '       ' → logprob: -17.87506675720215
    10. '[self' → logprob: -18.12506675720215

Token 328: '.y' (ID: 4486)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0047392453998327255
    2. '2' → logprob: -6.004739284515381
    3. '.y' → logprob: -6.254739284515381
    4. '1' → logprob: -8.254738807678223
    5. 'self' → logprob: -9.629738807678223
    6. '*y' → logprob: -12.504738807678223
    7. '	y' → logprob: -12.879738807678223
    8. ' y' → logprob: -12.879738807678223
    9. '
' → logprob: -14.254738807678223
    10. '_y' → logprob: -14.379738807678223

Token 329: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02275676839053631
    2. '    
' → logprob: -4.772756576538086
    3. '
' → logprob: -4.897756576538086
    4. '<|end|>' → logprob: -5.522756576538086
    5. 'def' → logprob: -6.147756576538086
    6. '```' → logprob: -8.897756576538086
    7. '<|end|>' → logprob: -9.397756576538086
    8. ' def' → logprob: -9.522756576538086
    9. ' 
' → logprob: -10.147756576538086
    10. '  
' → logprob: -10.147756576538086

Token 330: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004287215415388346
    2. '<|end|>' → logprob: -7.004287242889404
    3. '    
' → logprob: -7.129287242889404
    4. '
' → logprob: -7.379287242889404
    5. ' def' → logprob: -7.379287242889404
    6. 'def' → logprob: -7.379287242889404
    7. '```' → logprob: -8.129286766052246
    8. '<|end|>' → logprob: -8.754286766052246
    9. ' ' → logprob: -9.504286766052246
    10. '	def' → logprob: -10.129286766052246

Token 331: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0026221470907330513
    2. '   ' → logprob: -6.127622127532959
    3. ' def' → logprob: -7.752622127532959
    4. '	def' → logprob: -11.877622604370117
    5. '    
' → logprob: -15.627622604370117
    6. '```' → logprob: -16.502622604370117
    7. ')' → logprob: -17.002622604370117
    8. ' ' → logprob: -17.377622604370117
    9. '  ' → logprob: -17.377622604370117
    10. '#' → logprob: -17.752622604370117

Token 332: ' __' (ID: 2516)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.00020056030189152807
    2. 'norm' → logprob: -8.750200271606445
    3. ' abs' → logprob: -11.000200271606445
    4. 'absolute' → logprob: -11.125200271606445
    5. 'len' → logprob: -12.125200271606445
    6. 'length' → logprob: -13.250200271606445
    7. 'dot' → logprob: -14.000200271606445
    8. 'm' → logprob: -14.000200271606445
    9. 'arg' → logprob: -14.375200271606445
    10. 'dist' → logprob: -15.375200271606445

Token 333: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.02661214768886566
    2. 'repr' → logprob: -3.7766120433807373
    3. 'neg' → logprob: -6.526612281799316
    4. 'str' → logprob: -6.776612281799316
    5. 'pow' → logprob: -7.276612281799316
    6. 'float' → logprob: -10.151612281799316
    7. 'pos' → logprob: -11.401612281799316
    8. 'flo' → logprob: -11.776612281799316
    9. 'mul' → logprob: -13.026612281799316
    10. 'hash' → logprob: -13.526612281799316

Token 334: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0019513490842655301
    2. '__' → logprob: -6.251951217651367
    3. '__(
' → logprob: -11.126951217651367
    4. '__((' → logprob: -12.501951217651367
    5. '(self' → logprob: -13.126951217651367
    6. '__('' → logprob: -13.251951217651367
    7. '(' → logprob: -15.876951217651367
    8. '__(*' → logprob: -15.876951217651367
    9. '_(' → logprob: -16.001951217651367
    10. '__("' → logprob: -16.376951217651367

Token 335: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.173704271830502e-06
    2. ')' → logprob: -12.87500286102295
    3. ' self' → logprob: -15.12500286102295
    4. '):
' → logprob: -16.000003814697266
    5. '   ' → logprob: -16.250003814697266
    6. '(self' → logprob: -16.875003814697266
    7. ')
' → logprob: -18.125003814697266
    8. 's' → logprob: -18.375003814697266
    9. '
' → logprob: -18.625003814697266
    10. ' ' → logprob: -18.750003814697266

Token 336: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5057327747344971
    2. 'self' → logprob: -1.255732774734497
    3. '):' → logprob: -2.255732774734497
    4. ')' → logprob: -5.755732536315918
    5. '(self' → logprob: -5.755732536315918
    6. ',' → logprob: -8.005732536315918
    7. ')(' → logprob: -8.505732536315918
    8. '):

' → logprob: -8.630732536315918
    9. '):
' → logprob: -9.130732536315918
    10. '	self' → logprob: -10.130732536315918

Token 337: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03295687586069107
    2. 'return' → logprob: -4.157957077026367
    3. ' return' → logprob: -4.532957077026367
    4. '   ' → logprob: -5.157957077026367
    5. 'sqrt' → logprob: -8.782957077026367
    6. '	return' → logprob: -9.782957077026367
    7. ' sqrt' → logprob: -10.157957077026367
    8. ' ' → logprob: -11.532957077026367
    9. '()' → logprob: -12.282957077026367
    10. '```' → logprob: -12.782957077026367

Token 338: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02516728825867176
    2. ' return' → logprob: -3.775167226791382
    3. 'sqrt' → logprob: -6.400167465209961
    4. ' sqrt' → logprob: -8.525167465209961
    5. '       ' → logprob: -10.025167465209961
    6. '   ' → logprob: -12.025167465209961
    7. '	return' → logprob: -12.400167465209961
    8. ' ' → logprob: -12.775167465209961
    9. '```' → logprob: -13.650167465209961
    10. ' ' → logprob: -14.775167465209961

Token 339: ' sqrt' (ID: 44237)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.0019318510312587023
    2. ' sqrt' → logprob: -6.251931667327881
    3. 'self' → logprob: -13.376932144165039
    4. '(s' → logprob: -13.751932144165039
    5. '.sqrt' → logprob: -15.376932144165039
    6. 's' → logprob: -16.00193214416504
    7. '   ' → logprob: -16.62693214416504
    8. 'float' → logprob: -17.12693214416504
    9. '√' → logprob: -17.37693214416504
    10. ' ' → logprob: -18.12693214416504

Token 340: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.925185440806672e-05
    2. '(' → logprob: -9.250099182128906
    3. 'self' → logprob: -12.750099182128906
    4. '((' → logprob: -16.125099182128906
    5. '(s' → logprob: -17.375099182128906
    6. '(
' → logprob: -18.375099182128906
    7. '(abs' → logprob: -18.875099182128906
    8. ' (' → logprob: -19.125099182128906
    9. ' self' → logprob: -21.000099182128906
    10. '(sel' → logprob: -21.625099182128906

Token 341: '.norm' (ID: 73834)
  Prédit: '.norm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.norm' → logprob: -0.7798091173171997
    2. '.' → logprob: -1.2798091173171997
    3. '.x' → logprob: -1.7798091173171997
    4. '(self' → logprob: -2.77980899810791
    5. 'self' → logprob: -3.77980899810791
    6. '.self' → logprob: -5.40480899810791
    7. ' .' → logprob: -6.27980899810791
    8. 'norm' → logprob: -6.90480899810791
    9. '.s' → logprob: -7.02980899810791
    10. '(' → logprob: -7.77980899810791

Token 342: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0006218921043910086
    2. '()' → logprob: -7.500621795654297
    3. ')' → logprob: -9.875621795654297
    4. ' ())' → logprob: -11.500621795654297
    5. '())
' → logprob: -12.250621795654297
    6. '(' → logprob: -13.125621795654297
    7. '())

' → logprob: -15.750621795654297
    8. '();)' → logprob: -15.875621795654297
    9. 'self' → logprob: -16.250621795654297
    10. '()))' → logprob: -16.375621795654297

Token 343: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16359804570674896
    2. '<|end|>' → logprob: -2.66359806060791
    3. ')' → logprob: -3.16359806060791
    4. 'def' → logprob: -4.41359806060791
    5. '
' → logprob: -4.78859806060791
    6. '<|end|>' → logprob: -5.16359806060791
    7. '    
' → logprob: -6.03859806060791
    8. '@property' → logprob: -6.53859806060791
    9. '```' → logprob: -6.53859806060791
    10. '(' → logprob: -6.66359806060791

Token 344: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.01383424736559391
    2. '   ' → logprob: -4.388834476470947
    3. ' def' → logprob: -6.638834476470947
    4. '@property' → logprob: -11.888833999633789
    5. '	def' → logprob: -12.638833999633789
    6. '#' → logprob: -13.513833999633789
    7. ')' → logprob: -13.638833999633789
    8. '    
' → logprob: -14.013833999633789
    9. '@' → logprob: -14.513833999633789
    10. '```' → logprob: -15.013833999633789

Token 345: ' cc' (ID: 22988)
  Prédit: 'arg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arg' → logprob: -1.007380485534668
    2. 'dot' → logprob: -1.757380485534668
    3. 'angle' → logprob: -2.007380485534668
    4. 'rot' → logprob: -2.132380485534668
    5. 'polar' → logprob: -2.757380485534668
    6. 'norm' → logprob: -3.382380485534668
    7. 'unit' → logprob: -4.007380485534668
    8. 'con' → logprob: -4.007380485534668
    9. 'phase' → logprob: -4.007380485534668
    10. ' polar' → logprob: -4.132380485534668

Token 346: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.5332478142227046e-05
    2. 'def' → logprob: -11.625015258789062
    3. 'd' → logprob: -13.250015258789062
    4. '```' → logprob: -13.500015258789062
    5. 'ｗ' → logprob: -13.625015258789062
    6. '``' → logprob: -14.750015258789062
    7. '__' → logprob: -15.250015258789062
    8. '
' → logprob: -15.625015258789062
    9. 'wise' → logprob: -16.125015258789062
    10. '_w' → logprob: -16.375015258789062

Token 347: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.782141569303349e-05
    2. '(' → logprob: -9.25009822845459
    3. '(s' → logprob: -13.87509822845459
    4. ' (' → logprob: -15.12509822845459
    5. '(a' → logprob: -16.500097274780273
    6. '   ' → logprob: -16.750097274780273
    7. 'self' → logprob: -16.875097274780273
    8. '(
' → logprob: -16.875097274780273
    9. '(sel' → logprob: -17.000097274780273
    10. '__(' → logprob: -17.250097274780273

Token 348: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008632888086140156
    2. '(self' → logprob: -5.508632659912109
    3. 'self' → logprob: -5.508632659912109
    4. ',self' → logprob: -8.13363265991211
    5. ')(' → logprob: -9.00863265991211
    6. '(' → logprob: -10.88363265991211
    7. ' ,' → logprob: -11.38363265991211
    8. ' self' → logprob: -11.75863265991211
    9. ' ' → logprob: -12.13363265991211
    10. ' (' → logprob: -12.25863265991211

Token 349: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2754824757575989
    2. 'self' → logprob: -1.525482416152954
    3. 'other' → logprob: -3.775482416152954
    4. 'a' → logprob: -8.650482177734375
    5. ' p' → logprob: -9.900482177734375
    6. ' other' → logprob: -10.275482177734375
    7. 'r' → logprob: -10.650482177734375
    8. ' self' → logprob: -10.650482177734375
    9. '(self' → logprob: -11.025482177734375
    10. 'b' → logprob: -11.525482177734375

Token 350: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07549680024385452
    2. ',' → logprob: -2.8254969120025635
    3. '):
' → logprob: -5.075496673583984
    4. 'r' → logprob: -5.450496673583984
    5. 'p' → logprob: -6.825496673583984
    6. 'a' → logprob: -7.950496673583984
    7. '1' → logprob: -8.075496673583984
    8. 'o' → logprob: -8.325496673583984
    9. '):' → logprob: -8.575496673583984
    10. 'self' → logprob: -8.700496673583984

Token 351: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021271906734909862
    2. ',p' → logprob: -9.125212669372559
    3. 'self' → logprob: -9.875212669372559
    4. ',self' → logprob: -10.625212669372559
    5. ' ,' → logprob: -11.250212669372559
    6. 'p' → logprob: -12.000212669372559
    7. '   ' → logprob: -12.500212669372559
    8. ',
' → logprob: -13.375212669372559
    9. '       ' → logprob: -14.375212669372559
    10. 'oint' → logprob: -14.875212669372559

Token 352: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.07108480483293533
    2. ' p' → logprob: -2.69608473777771
    3. 'self' → logprob: -7.321084976196289
    4. '   ' → logprob: -8.196084976196289
    5. ' ' → logprob: -8.821084976196289
    6. ' self' → logprob: -10.821084976196289
    7. '  ' → logprob: -11.071084976196289
    8. '       ' → logprob: -11.821084976196289
    9. '    ' → logprob: -11.946084976196289
    10. 'Point' → logprob: -13.321084976196289

Token 353: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005220117513090372
    2. '):
' → logprob: -6.00521993637085
    3. '2' → logprob: -6.63021993637085
    4. 'oints' → logprob: -7.63021993637085
    5. 'oint' → logprob: -8.255220413208008
    6. '0' → logprob: -8.255220413208008
    7. '):' → logprob: -8.630220413208008
    8. ')' → logprob: -9.630220413208008
    9. 'p' → logprob: -11.130220413208008
    10. '   ' → logprob: -11.380220413208008

Token 354: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.25234466791152954
    2. '):' → logprob: -1.5023446083068848
    3. '   ' → logprob: -8.627345085144043
    4. '):
' → logprob: -9.127345085144043
    5. '       ' → logprob: -9.627345085144043
    6. ')' → logprob: -11.002345085144043
    7. ' ):
' → logprob: -11.002345085144043
    8. '):

' → logprob: -11.127345085144043
    9. ' ):' → logprob: -12.127345085144043
    10. ',' → logprob: -12.752345085144043

Token 355: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.684157026233152e-05
    2. '   ' → logprob: -10.750077247619629
    3. 'x' → logprob: -11.000077247619629
    4. 'v' → logprob: -11.625077247619629
    5. 'd' → logprob: -11.750077247619629
    6. 'dx' → logprob: -11.875077247619629
    7. 't' → logprob: -12.500077247619629
    8. 'a' → logprob: -12.625077247619629
    9. '	' → logprob: -13.250077247619629
    10. 'p' → logprob: -13.625077247619629

Token 356: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.448492169380188
    2. '(x' → logprob: -1.448492169380188
    3. 'cross' → logprob: -3.6984920501708984
    4. '(a' → logprob: -3.9484920501708984
    5. 'a' → logprob: -4.198492050170898
    6. 'dx' → logprob: -4.198492050170898
    7. '(p' → logprob: -4.573492050170898
    8. 'ret' → logprob: -4.948492050170898
    9. '(px' → logprob: -4.948492050170898
    10. '(ax' → logprob: -5.198492050170898

Token 357: ' ?????' (ID: 149222)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.672962486743927
    2. '(x' → logprob: -0.922962486743927
    3. '(p' → logprob: -3.1729624271392822
    4. 'cross' → logprob: -4.922962665557861
    5. 'def' → logprob: -5.047962665557861
    6. '       ' → logprob: -5.047962665557861
    7. '(px' → logprob: -5.172962665557861
    8. 'det' → logprob: -5.547962665557861
    9. 'ret' → logprob: -5.547962665557861
    10. '   ' → logprob: -5.922962665557861

Token 358: '?' (ID: 30)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016166917979717255
    2. 'return' → logprob: -4.266166687011719
    3. ' return' → logprob: -6.516166687011719
    4. 'x' → logprob: -9.391166687011719
    5. 'det' → logprob: -9.516166687011719
    6. 'dx' → logprob: -9.766166687011719
    7. 'd' → logprob: -9.891166687011719
    8. 'a' → logprob: -10.266166687011719
    9. 'z' → logprob: -10.391166687011719
    10. '(x' → logprob: -10.391166687011719

Token 359: '2' (ID: 17)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09268159419298172
    2. 'return' → logprob: -2.467681646347046
    3. ' return' → logprob: -6.342681407928467
    4. 'dx' → logprob: -7.592681407928467
    5. 'x' → logprob: -7.967681407928467
    6. 'a' → logprob: -8.342681884765625
    7. 'ret' → logprob: -8.717681884765625
    8. 'det' → logprob: -8.717681884765625
    9. '(x' → logprob: -9.092681884765625
    10. 'd' → logprob: -9.342681884765625

Token 360: '???' (ID: 33110)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1170942783355713
    2. 'return' → logprob: -1.6170942783355713
    3. '   ' → logprob: -1.9920942783355713
    4. ' *' → logprob: -2.4920942783355713
    5. 'def' → logprob: -2.8670942783355713
    6. '*' → logprob: -3.4920942783355713
    7. '
' → logprob: -3.7420942783355713
    8. ' return' → logprob: -3.7420942783355713
    9. 'area' → logprob: -3.9920942783355713
    10. '*(' → logprob: -4.492094039916992

Token 361: '(' (ID: 7)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0068160155788064
    2. 'return' → logprob: -5.3818159103393555
    3. 'd' → logprob: -7.1318159103393555
    4. ' return' → logprob: -7.6318159103393555
    5. 'x' → logprob: -8.756815910339355
    6. '   ' → logprob: -9.256815910339355
    7. 'def' → logprob: -9.381815910339355
    8. 'v' → logprob: -9.506815910339355
    9. ',' → logprob: -9.631815910339355
    10. 'a' → logprob: -9.881815910339355

Token 362: 'p' (ID: 79)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4549174904823303
    2. ' return' → logprob: -2.5799174308776855
    3. '       ' → logprob: -2.7049174308776855
    4. ')
' → logprob: -2.9549174308776855
    5. 'return' → logprob: -3.0799174308776855
    6. '(self' → logprob: -3.4549174308776855
    7. ')' → logprob: -3.7049174308776855
    8. '(p' → logprob: -4.4549174308776855
    9. '(' → logprob: -4.5799174308776855
    10. 'self' → logprob: -5.2049174308776855

Token 363: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.28074631094932556
    2. 'x' → logprob: -1.905746340751648
    3. 'return' → logprob: -3.5307462215423584
    4. '.x' → logprob: -3.7807462215423584
    5. '       ' → logprob: -4.0307464599609375
    6. '   ' → logprob: -4.7807464599609375
    7. ')' → logprob: -5.1557464599609375
    8. 'oint' → logprob: -6.7807464599609375
    9. ' return' → logprob: -6.7807464599609375
    10. '(' → logprob: -7.0307464599609375

Token 364: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15323004126548767
    2. ')' → logprob: -3.0282299518585205
    3. 'p' → logprob: -3.1532299518585205
    4. '-' → logprob: -3.4032299518585205
    5. 'x' → logprob: -5.5282301902771
    6. ' -' → logprob: -6.1532301902771
    7. '),' → logprob: -6.4032301902771
    8. ' ,' → logprob: -7.0282301902771
    9. 'self' → logprob: -7.0282301902771
    10. '-vector' → logprob: -7.0282301902771

Token 365: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.05079496279358864
    2. 'self' → logprob: -3.050795078277588
    3. ' p' → logprob: -6.675795078277588
    4. ' self' → logprob: -7.425795078277588
    5. '       ' → logprob: -8.67579460144043
    6. '   ' → logprob: -9.42579460144043
    7. ')' → logprob: -10.30079460144043
    8. '(self' → logprob: -11.55079460144043
    9. ' ' → logprob: -11.92579460144043
    10. '
' → logprob: -12.17579460144043

Token 366: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7505671977996826
    2. '1' → logprob: -1.1255671977996826
    3. 'self' → logprob: -2.0005671977996826
    4. ')' → logprob: -3.6255671977996826
    5. '0' → logprob: -3.7505671977996826
    6. 'p' → logprob: -5.625567436218262
    7. 'oint' → logprob: -5.750567436218262
    8. '
' → logprob: -5.750567436218262
    9. ',self' → logprob: -6.125567436218262
    10. ')
' → logprob: -7.125567436218262

Token 367: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7075568437576294
    2. '):' → logprob: -1.3325568437576294
    3. ')' → logprob: -1.8325568437576294
    4. '):
' → logprob: -2.70755672454834
    5. ')
' → logprob: -4.58255672454834
    6. '       ' → logprob: -6.20755672454834
    7. '   ' → logprob: -7.08255672454834
    8. 'def' → logprob: -7.95755672454834
    9. ' ,' → logprob: -8.08255672454834
    10. 'return' → logprob: -8.33255672454834

Token 368: '????????' (ID: 85218)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007527362555265427
    2. ',' → logprob: -5.5075273513793945
    3. 'd' → logprob: -6.3825273513793945
    4. '   ' → logprob: -7.7575273513793945
    5. '
' → logprob: -9.007527351379395
    6. ' =' → logprob: -9.132527351379395
    7. ')' → logprob: -9.132527351379395
    8. 'def' → logprob: -9.132527351379395
    9. ':' → logprob: -9.257527351379395
    10. 'x' → logprob: -9.382527351379395

Token 369: '????????' (ID: 85218)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017643984407186508
    2. '   ' → logprob: -4.767643928527832
    3. 'return' → logprob: -5.767643928527832
    4. ',' → logprob: -6.392643928527832
    5. '
' → logprob: -7.142643928527832
    6. 'd' → logprob: -7.517643928527832
    7. 'x' → logprob: -7.767643928527832
    8. '        
' → logprob: -8.142643928527832
    9. ' return' → logprob: -8.392643928527832
    10. ':
' → logprob: -8.517643928527832

Token 370: '????????' (ID: 85218)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05090225487947464
    2. '
' → logprob: -4.675902366638184
    3. '):
' → logprob: -4.925902366638184
    4. ',' → logprob: -5.050902366638184
    5. ')
' → logprob: -5.425902366638184
    6. 'return' → logprob: -5.550902366638184
    7. ')' → logprob: -5.550902366638184
    8. ':
' → logprob: -5.800902366638184
    9. ' return' → logprob: -6.050902366638184
    10. '):' → logprob: -6.800902366638184

Token 371: '????????' (ID: 85218)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08153008669614792
    2. '   ' → logprob: -3.5815300941467285
    3. '):
' → logprob: -4.3315300941467285
    4. ':
' → logprob: -4.5815300941467285
    5. ',' → logprob: -4.8315300941467285
    6. '
' → logprob: -5.2065300941467285
    7. ':' → logprob: -5.4565300941467285
    8. '):' → logprob: -6.5815300941467285
    9. '(' → logprob: -7.0815300941467285
    10. '        
' → logprob: -7.3315300941467285

Token 372: '????????' (ID: 85218)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00861197616904974
    2. 'return' → logprob: -6.133612155914307
    3. '   ' → logprob: -6.258612155914307
    4. ',' → logprob: -7.008612155914307
    5. 'd' → logprob: -7.008612155914307
    6. 'x' → logprob: -7.758612155914307
    7. ' return' → logprob: -8.008611679077148
    8. '
' → logprob: -8.008611679077148
    9. '#' → logprob: -8.633611679077148
    10. '```' → logprob: -8.883611679077148

Token 373: '?' (ID: 30)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014562796801328659
    2. 'return' → logprob: -5.264562606811523
    3. 'd' → logprob: -6.389562606811523
    4. 'dx' → logprob: -6.889562606811523
    5. ' return' → logprob: -7.264562606811523
    6. '(' → logprob: -7.264562606811523
    7. 'v' → logprob: -7.389562606811523
    8. ',' → logprob: -7.639562606811523
    9. 'x' → logprob: -7.764562606811523
    10. 'p' → logprob: -7.764562606811523

Token 374: '¢' (ID: 61242)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04663550853729248
    2. 'return' → logprob: -4.171635627746582
    3. ' return' → logprob: -4.796635627746582
    4. ',' → logprob: -4.921635627746582
    5. '
' → logprob: -5.796635627746582
    6. '   ' → logprob: -6.546635627746582
    7. ':' → logprob: -6.671635627746582
    8. 'd' → logprob: -7.046635627746582
    9. ':
' → logprob: -7.046635627746582
    10. '        ' → logprob: -7.171635627746582

Token 375: '????????' (ID: 85218)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.041637569665908813
    2. ',' → logprob: -4.291637420654297
    3. '   ' → logprob: -4.541637420654297
    4. 'return' → logprob: -5.916637420654297
    5. 'd' → logprob: -6.541637420654297
    6. ')' → logprob: -6.916637420654297
    7. '(' → logprob: -6.916637420654297
    8. 'dx' → logprob: -7.041637420654297
    9. ' return' → logprob: -7.166637420654297
    10. '
' → logprob: -7.291637420654297

Token 376: '???' (ID: 33110)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033550601452589035
    2. ',' → logprob: -5.15855073928833
    3. '   ' → logprob: -5.15855073928833
    4. 'd' → logprob: -5.78355073928833
    5. 'x' → logprob: -5.90855073928833
    6. 'return' → logprob: -6.03355073928833
    7. '(' → logprob: -6.78355073928833
    8. '
' → logprob: -6.90855073928833
    9. '#' → logprob: -7.03355073928833
    10. 'dx' → logprob: -7.03355073928833

Token 377: '?
' (ID: 3901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013888328336179256
    2. ',' → logprob: -6.013888359069824
    3. 'return' → logprob: -6.263888359069824
    4. '
' → logprob: -6.638888359069824
    5. ':
' → logprob: -7.138888359069824
    6. 'd' → logprob: -7.138888359069824
    7. '"""
' → logprob: -7.138888359069824
    8. 'dx' → logprob: -7.638888359069824
    9. 'x' → logprob: -7.763888359069824
    10. '#' → logprob: -7.763888359069824

Token 378: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07472407072782516
    2. 'return' → logprob: -3.199723958969116
    3. 'dx' → logprob: -4.949724197387695
    4. 'v' → logprob: -5.074724197387695
    5. 'x' → logprob: -5.199724197387695
    6. 'a' → logprob: -5.574724197387695
    7. 'd' → logprob: -5.949724197387695
    8. 'z' → logprob: -6.699724197387695
    9. ' return' → logprob: -7.074724197387695
    10. 'det' → logprob: -7.324724197387695

Token 379: ' a' (ID: 261)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7654992341995239
    2. 'a' (adapté à ' a') → logprob: -1.265499234199524
    3. 'dx' → logprob: -1.890499234199524
    4. 'cross' → logprob: -3.6404991149902344
    5. 'v' → logprob: -4.390499114990234
    6. 'ax' → logprob: -4.765499114990234
    7. 'd' → logprob: -4.890499114990234
    8. 'det' → logprob: -5.015499114990234
    9. 'x' → logprob: -5.140499114990234
    10. 'tmp' → logprob: -5.265499114990234

Token 380: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2015625387430191
    2. '=' → logprob: -1.701562523841858
    3. '=(' → logprob: -9.326562881469727
    4. 'b' → logprob: -11.576562881469727
    5. ' ' → logprob: -11.701562881469727
    6. '=self' → logprob: -11.701562881469727
    7. '=b' → logprob: -11.826562881469727
    8. '   ' → logprob: -12.076562881469727
    9. 'x' → logprob: -12.576562881469727
    10. 's' → logprob: -13.076562881469727

Token 381: ' Vector' (ID: 8764)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.12887749075889587
    2. '(p' → logprob: -2.1288774013519287
    3. 'self' → logprob: -6.628877639770508
    4. ' (' → logprob: -7.878877639770508
    5. '(self' → logprob: -9.003877639770508
    6. ' p' → logprob: -9.378877639770508
    7. 'Point' → logprob: -10.878877639770508
    8. '(' → logprob: -12.253877639770508
    9. ' self' → logprob: -12.378877639770508
    10. '   ' → logprob: -12.628877639770508

Token 382: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0711279958486557
    2. '(self' → logprob: -2.6961278915405273
    3. 'self' → logprob: -6.821127891540527
    4. 'p' → logprob: -9.821127891540527
    5. '(' → logprob: -10.946127891540527
    6. 'from' → logprob: -11.696127891540527
    7. 'def' → logprob: -12.071127891540527
    8. '.from' → logprob: -12.946127891540527
    9. ' self' → logprob: -13.071127891540527
    10. '(
' → logprob: -13.196127891540527

Token 383: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028827376663684845
    2. 'oint' → logprob: -5.877882957458496
    3. '1' → logprob: -9.877882957458496
    4. 'oints' → logprob: -11.002882957458496
    5. 't' → logprob: -12.252882957458496
    6. 'self' → logprob: -12.877882957458496
    7. 'oin' → logprob: -13.752882957458496
    8. 'ointe' → logprob: -15.002882957458496
    9. '   ' → logprob: -16.12788200378418
    10. ')' → logprob: -16.12788200378418

Token 384: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6160233020782471
    2. ' -' → logprob: -0.8660233020782471
    3. '.x' → logprob: -3.366023302078247
    4. ')' → logprob: -5.866023063659668
    5. 'x' → logprob: -7.616023063659668
    6. '-point' → logprob: -8.116023063659668
    7. '-self' → logprob: -8.116023063659668
    8. '-x' → logprob: -8.241023063659668
    9. ' ' → logprob: -9.241023063659668
    10. '-vector' → logprob: -9.741023063659668

Token 385: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0039264182560145855
    2. 'self' → logprob: -6.2539262771606445
    3. ' p' → logprob: -6.2539262771606445
    4. ' self' → logprob: -10.503926277160645
    5. ' ' → logprob: -11.003926277160645
    6. '   ' → logprob: -11.253926277160645
    7. '	p' → logprob: -12.128926277160645
    8. '  ' → logprob: -12.691426277160645
    9. '    ' → logprob: -13.941426277160645
    10. ')' → logprob: -14.066426277160645

Token 386: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010807292710524052
    2. 'oint' → logprob: -9.500107765197754
    3. 'o' → logprob: -11.375107765197754
    4. 'self' → logprob: -12.000107765197754
    5. 'p' → logprob: -12.125107765197754
    6. 'oints' → logprob: -12.625107765197754
    7. '1' → logprob: -13.000107765197754
    8. ')' → logprob: -14.250107765197754
    9. '   ' → logprob: -14.250107765197754
    10. 'oin' → logprob: -14.500107765197754

Token 387: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0285749435424805
    2. ')
' → logprob: -1.0285749435424805
    3. ')' → logprob: -1.6535749435424805
    4. ').' → logprob: -2.4035749435424805
    5. 'self' → logprob: -6.4035749435424805
    6. ' ,' → logprob: -7.4035749435424805
    7. ' )
' → logprob: -8.27857494354248
    8. 'x' → logprob: -9.02857494354248
    9. '),' → logprob: -9.27857494354248
    10. ' )' → logprob: -9.77857494354248

Token 388: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06896734237670898
    2. 'v' → logprob: -3.693967342376709
    3. 'b' → logprob: -3.818967342376709
    4. ' v' → logprob: -4.818967342376709
    5. ' b' → logprob: -5.818967342376709
    6. 'dx' → logprob: -6.693967342376709
    7. ')' → logprob: -6.818967342376709
    8. '<|end|>' → logprob: -6.943967342376709
    9. ' dx' → logprob: -7.068967342376709
    10. 'd' → logprob: -7.068967342376709

Token 389: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.09732646495103836
    2. 'v' → logprob: -2.4723265171051025
    3. ' b' → logprob: -5.597326278686523
    4. '       ' → logprob: -6.472326278686523
    5. 'p' → logprob: -6.722326278686523
    6. ' v' → logprob: -7.472326278686523
    7. '   ' → logprob: -7.847326278686523
    8. 'o' → logprob: -8.847326278686523
    9. 't' → logprob: -8.972326278686523
    10. 'Vector' → logprob: -9.097326278686523

Token 390: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6326171159744263
    2. ' =' → logprob: -0.7576171159744263
    3. ')' → logprob: -11.382616996765137
    4. '(' → logprob: -14.132616996765137
    5. '=
' → logprob: -14.257616996765137
    6. ' ' → logprob: -14.257616996765137
    7. 'Vector' → logprob: -14.632616996765137
    8. ',' → logprob: -14.757616996765137
    9. 'a' → logprob: -14.757616996765137
    10. '.' → logprob: -15.007616996765137

Token 391: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -1.4974866644479334e-05
    2. ' Vector' → logprob: -11.250015258789062
    3. '   ' → logprob: -13.875015258789062
    4. 'Point' → logprob: -14.500015258789062
    5. '	Vector' → logprob: -15.000015258789062
    6. 'self' → logprob: -16.875015258789062
    7. '       ' → logprob: -16.875015258789062
    8. 'vector' → logprob: -17.500015258789062
    9. '  ' → logprob: -17.875015258789062
    10. ' ' → logprob: -18.500015258789062

Token 392: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004321168176829815
    2. 'self' → logprob: -5.629321098327637
    3. '(p' → logprob: -7.379321098327637
    4. '(Point' → logprob: -10.004321098327637
    5. '(Vector' → logprob: -10.629321098327637
    6. 'Vector' → logprob: -11.879321098327637
    7. 'p' → logprob: -12.004321098327637
    8. '(' → logprob: -12.504321098327637
    9. ' self' → logprob: -12.629321098327637
    10. '(s' → logprob: -12.629321098327637

Token 393: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02667272835969925
    2. '-' → logprob: -3.651672840118408
    3. '(p' → logprob: -8.27667236328125
    4. '(' → logprob: -9.65167236328125
    5. 'p' → logprob: -10.52667236328125
    6. ' (' → logprob: -11.15167236328125
    7. '-p' → logprob: -12.15167236328125
    8. ' ' → logprob: -13.27667236328125
    9. ' p' → logprob: -13.77667236328125
    10. ')' → logprob: -14.27667236328125

Token 394: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00017958412354346365
    2. ' p' → logprob: -8.625179290771484
    3. '<p' → logprob: -17.500179290771484
    4. '	p' → logprob: -18.875179290771484
    5. ' ' → logprob: -19.125179290771484
    6. '   ' → logprob: -19.250179290771484
    7. '       ' → logprob: -19.625179290771484
    8. '           ' → logprob: -19.750179290771484
    9. ')' → logprob: -20.125179290771484
    10. ')p' → logprob: -20.250179290771484

Token 395: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. 'o' → logprob: -13.375001907348633
    3. 'p' → logprob: -14.750001907348633
    4. ' ' → logprob: -16.000001907348633
    5. '1' → logprob: -16.375001907348633
    6. '۰' → logprob: -17.375001907348633
    7. 'oint' → logprob: -18.125001907348633
    8. ' p' → logprob: -18.875001907348633
    9. '０' → logprob: -18.875001907348633
    10. ')' → logprob: -19.125001907348633

Token 396: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007755680475383997
    2. ')
' → logprob: -4.882755756378174
    3. '       ' → logprob: -8.882755279541016
    4. ')return' → logprob: -13.132755279541016
    5. ')
' → logprob: -13.132755279541016
    6. '<|end|>' → logprob: -13.132755279541016
    7. ' )' → logprob: -13.632755279541016
    8. ')

' → logprob: -14.132755279541016
    9. ')**' → logprob: -14.882755279541016
    10. '   ' → logprob: -14.882755279541016

Token 397: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014036978245712817
    2. 'return' → logprob: -9.625140190124512
    3. ' return' → logprob: -10.750140190124512
    4. '        
' → logprob: -12.000140190124512
    5. '<|end|>' → logprob: -12.250140190124512
    6. '```' → logprob: -12.250140190124512
    7. '        ' → logprob: -12.250140190124512
    8. ')' → logprob: -12.375140190124512
    9. '
' → logprob: -12.375140190124512
    10. '	' → logprob: -12.375140190124512

Token 398: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26035284996032715
    2. 'return' → logprob: -1.5103528499603271
    3. 't' → logprob: -6.385353088378906
    4. 'd' → logprob: -6.510353088378906
    5. ' return' → logprob: -6.635353088378906
    6. 'det' → logprob: -6.635353088378906
    7. 'c' → logprob: -6.885353088378906
    8. 'cross' → logprob: -7.260353088378906
    9. 'def' → logprob: -8.260353088378906
    10. 'z' → logprob: -8.885353088378906

Token 399: ' Vector' (ID: 8764)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13304339349269867
    2. ' a' → logprob: -2.6330432891845703
    3. 'abs' → logprob: -3.3830432891845703
    4. ' abs' → logprob: -4.25804328918457
    5. '(a' → logprob: -6.00804328918457
    6. 'Vector' → logprob: -7.75804328918457
    7. ' Vector' → logprob: -8.00804328918457
    8. 'cross' → logprob: -8.13304328918457
    9. ' cross' → logprob: -8.25804328918457
    10. ' (' → logprob: -8.38304328918457

Token 400: '.cross' (ID: 108957)
  Prédit: '.cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cross' → logprob: -0.5963743329048157
    2. '(a' → logprob: -0.8463743329048157
    3. '.a' → logprob: -4.09637451171875
    4. 'a' → logprob: -7.09637451171875
    5. '.dot' → logprob: -7.59637451171875
    6. '.product' → logprob: -7.72137451171875
    7. '.Cross' → logprob: -8.09637451171875
    8. 'cross' → logprob: -8.22137451171875
    9. '.cc' → logprob: -8.59637451171875
    10. '.b' → logprob: -9.09637451171875

Token 401: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0009567205561324954
    2. '(b' → logprob: -7.0009565353393555
    3. '(' → logprob: -10.500956535339355
    4. 'a' → logprob: -11.375956535339355
    5. '(self' → logprob: -13.000956535339355
    6. 'b' → logprob: -13.750956535339355
    7. ' (' → logprob: -13.750956535339355
    8. '(
' → logprob: -14.250956535339355
    9. ')(' → logprob: -15.625956535339355
    10. 'product' → logprob: -15.875956535339355

Token 402: ',' (ID: 11)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.01716425083577633
    2. ',' → logprob: -4.39216423034668
    3. ',b' → logprob: -5.64216423034668
    4. '(a' → logprob: -6.89216423034668
    5. '.b' → logprob: -10.26716423034668
    6. '(Vector' → logprob: -11.39216423034668
    7. ')' → logprob: -11.64216423034668
    8. 'b' → logprob: -11.76716423034668
    9. '(' → logprob: -12.76716423034668
    10. '.' → logprob: -13.01716423034668

Token 403: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.020623289048671722
    2. 'a' → logprob: -3.895623207092285
    3. 'Vector' → logprob: -9.645623207092285
    4. ' b' → logprob: -11.270623207092285
    5. ' a' → logprob: -14.270623207092285
    6. 'vector' → logprob: -14.770623207092285
    7. ')' → logprob: -14.770623207092285
    8. ' Vector' → logprob: -15.020623207092285
    9. ')b' → logprob: -15.145623207092285
    10. '   ' → logprob: -15.520623207092285

Token 404: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006095996126532555
    2. ')>' → logprob: -5.381095886230469
    3. ')<' → logprob: -7.506095886230469
    4. '())' → logprob: -7.631095886230469
    5. '>' → logprob: -8.756095886230469
    6. ' )' → logprob: -9.256095886230469
    7. '()' → logprob: -10.006095886230469
    8. ')==' → logprob: -10.256095886230469
    9. '()>' → logprob: -10.381095886230469
    10. ' >' → logprob: -10.881095886230469

Token 405: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6477576494216919
    2. ' >' → logprob: -0.7727576494216919
    3. '()>' → logprob: -4.397757530212402
    4. '()' → logprob: -6.022757530212402
    5. ' ' → logprob: -8.147757530212402
    6. '1' → logprob: -12.147757530212402
    7. '   ' → logprob: -12.272757530212402
    8. '  ' → logprob: -12.647757530212402
    9. ')>' → logprob: -12.897757530212402
    10. '>()' → logprob: -12.897757530212402

Token 406: ' Point' (ID: 9971)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5767897963523865
    2. '0' → logprob: -0.8267897963523865
    3. '1' → logprob: -7.076789855957031
    4. ' Point' → logprob: -12.701789855957031
    5. '   ' → logprob: -14.326789855957031
    6. 'Point' → logprob: -14.451789855957031
    7. '  ' → logprob: -14.826789855957031
    8. ' +' → logprob: -15.201789855957031
    9. '+' → logprob: -15.576789855957031
    10. '	' → logprob: -16.45178985595703

Token 407: '.e' (ID: 2560)
  Prédit: '.e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.e' → logprob: -0.00033903829171322286
    2. '.' → logprob: -8.50033950805664
    3. 'epsilon' → logprob: -9.00033950805664
    4. ' epsilon' → logprob: -12.25033950805664
    5. '(e' → logprob: -13.50033950805664
    6. 'e' → logprob: -13.50033950805664
    7. ' ' → logprob: -13.87533950805664
    8. '   ' → logprob: -13.87533950805664
    9. '0' → logprob: -14.12533950805664
    10. ' .' → logprob: -14.37533950805664

Token 408: 'psilon' (ID: 71499)
  Prédit: 'psilon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'psilon' → logprob: -0.00019376569252926856
    2. '-' → logprob: -8.62519359588623
    3. 'epsilon' → logprob: -11.87519359588623
    4. '10' → logprob: -12.75019359588623
    5. 'psi' → logprob: -13.12519359588623
    6. 'ps' → logprob: -13.50019359588623
    7. '+' → logprob: -14.87519359588623
    8. '0' → logprob: -15.12519359588623
    9. '6' → logprob: -16.000194549560547
    10. 'p' → logprob: -16.250194549560547

Token 409: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6042853593826294
    2. ':' → logprob: -0.8542853593826294
    3. '):
' → logprob: -4.10428524017334
    4. ':return' → logprob: -5.10428524017334
    5. '):' → logprob: -6.47928524017334
    6. '       ' → logprob: -6.60428524017334
    7. ' :
' → logprob: -7.10428524017334
    8. ' :' → logprob: -7.47928524017334
    9. ')' → logprob: -8.60428524017334
    10. '   ' → logprob: -8.60428524017334

Token 410: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04643797129392624
    2. '1' → logprob: -3.421437978744507
    3. ' return' → logprob: -5.046437740325928
    4. ' ' → logprob: -5.921437740325928
    5. '2' → logprob: -6.171437740325928
    6. 'return' → logprob: -6.671437740325928
    7. '3' → logprob: -8.671438217163086
    8. '0' → logprob: -11.296438217163086
    9. '		' → logprob: -11.546438217163086
    10. '   ' → logprob: -11.671438217163086

Token 411: ' return' (ID: 622)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.017784174531698227
    2. ' ' → logprob: -4.517784118652344
    3. ' return' → logprob: -5.767784118652344
    4. 'return' (adapté à ' return') → logprob: -5.892784118652344
    5. '           ' → logprob: -7.142784118652344
    6. '+' → logprob: -11.517784118652344
    7. '               ' → logprob: -11.767784118652344
    8. ' +' → logprob: -12.142784118652344
    9. '   ' → logprob: -12.392784118652344
    10. '            ' → logprob: -12.517784118652344

Token 412: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036086246836930513
    2. ' ' → logprob: -5.753608703613281
    3. ' +' → logprob: -8.253608703613281
    4. '+' → logprob: -8.753608703613281
    5. '   ' → logprob: -11.878608703613281
    6. '  ' → logprob: -12.753608703613281
    7. 'counter' → logprob: -13.628608703613281
    8. ' counter' → logprob: -14.878608703613281
    9. '    ' → logprob: -15.003608703613281
    10. '１' → logprob: -15.628608703613281

Token 413: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031836593989282846
    2. '+' → logprob: -5.878183841705322
    3. ' ' → logprob: -8.378183364868164
    4. ' +' → logprob: -8.878183364868164
    5. 'COUN' → logprob: -12.003183364868164
    6. 'counter' → logprob: -13.753183364868164
    7. '   ' → logprob: -14.628183364868164
    8. 'Counter' → logprob: -15.003183364868164
    9. '2' → logprob: -15.003183364868164
    10. '"' → logprob: -15.128183364868164

Token 414: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 415: ' '' (ID: 461)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006666112691164017
    2. ' ' → logprob: -5.25666618347168
    3. '+' → logprob: -6.88166618347168
    4. ' +' → logprob: -8.88166618347168
    5. ' counter' → logprob: -9.00666618347168
    6. 'counter' → logprob: -9.13166618347168
    7. ' antic' → logprob: -11.50666618347168
    8. 'Counter' → logprob: -11.63166618347168
    9. '１' → logprob: -12.63166618347168
    10. 'antic' → logprob: -13.38166618347168

Token 416: 'COUN' (ID: 107888)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1054336354136467
    2. 'counter' → logprob: -3.355433702468872
    3. ' counter' → logprob: -3.605433702468872
    4. ' ' → logprob: -4.480433464050293
    5. '+' → logprob: -5.230433464050293
    6. 'Counter' → logprob: -5.355433464050293
    7. 'left' → logprob: -5.355433464050293
    8. ''' → logprob: -6.230433464050293
    9. 'CC' → logprob: -6.480433464050293
    10. '
' → logprob: -7.355433464050293

Token 417: 'TER' (ID: 6147)
  Prédit: 'TER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TER' → logprob: -0.0010106575209647417
    2. 'TE' → logprob: -8.12601089477539
    3. 'T' → logprob: -8.37601089477539
    4. '```' → logprob: -8.37601089477539
    5. 'ER' → logprob: -9.50101089477539
    6. 'ter' → logprob: -9.87601089477539
    7. 'CLOCK' → logprob: -10.50101089477539
    8. '')' → logprob: -11.25101089477539
    9. '``' → logprob: -11.87601089477539
    10. 'TERS' → logprob: -12.00101089477539

Token 418: '_CLOCK' (ID: 102378)
  Prédit: 'CLOCK'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CLOCK' → logprob: -0.008156483061611652
    2. '_CLOCK' → logprob: -5.0081562995910645
    3. 'clock' → logprob: -6.8831562995910645
    4. ' CLOCK' → logprob: -8.633156776428223
    5. 'CW' → logprob: -9.633156776428223
    6. '_clock' → logprob: -9.633156776428223
    7. ' clockwise' → logprob: -9.883156776428223
    8. '-clock' → logprob: -11.008156776428223
    9. 'C' → logprob: -11.508156776428223
    10. 'CLK' → logprob: -11.883156776428223

Token 419: 'WISE' (ID: 38559)
  Prédit: 'WISE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WISE' → logprob: -0.020798668265342712
    2. 'CLOCK' → logprob: -4.020798683166504
    3. '_CLOCK' → logprob: -6.270798683166504
    4. '```' → logprob: -7.645798683166504
    5. 'wise' → logprob: -8.770798683166504
    6. 'W' → logprob: -10.395798683166504
    7. '_W' → logprob: -10.645798683166504
    8. 'Wise' → logprob: -11.270798683166504
    9. ')' → logprob: -11.270798683166504
    10. '')' → logprob: -11.770798683166504

Token 420: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.007163585163652897
    2. ''
' → logprob: -5.0071635246276855
    3. '')' → logprob: -8.382164001464844
    4. ')' → logprob: -9.132164001464844
    5. '<|end|>' → logprob: -10.007164001464844
    6. '"' → logprob: -11.132164001464844
    7. '\n' → logprob: -11.882164001464844
    8. ' '' → logprob: -12.007164001464844
    9. ')'' → logprob: -12.132164001464844
    10. '   ' → logprob: -12.632164001464844

Token 421: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 422: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3909517526626587
    2. 'elif' (adapté à ' elif') → logprob: -1.6409517526626587
    3. ' if' → logprob: -2.765951633453369
    4. ' elif' → logprob: -3.140951633453369
    5. 'if' → logprob: -5.015951633453369
    6. ' ' → logprob: -5.265951633453369
    7. '   ' → logprob: -5.390951633453369
    8. '<|end|>' → logprob: -5.515951633453369
    9. '  ' → logprob: -7.765951633453369
    10. ')' → logprob: -7.765951633453369

Token 423: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.576029896736145
    2. ' Vector' → logprob: -0.826029896736145
    3. ' abs' → logprob: -9.951029777526855
    4. '	Vector' → logprob: -10.576029777526855
    5. '   ' → logprob: -12.451029777526855
    6. ' ' → logprob: -12.576029777526855
    7. 'abs' → logprob: -12.826029777526855
    8. '(Vector' → logprob: -13.076029777526855
    9. '<Vector' → logprob: -13.701029777526855
    10. '_Vector' → logprob: -13.951029777526855

Token 424: '.cross' (ID: 108957)
  Prédit: '.cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cross' → logprob: -9.901345038088039e-05
    2. 'cross' → logprob: -9.250099182128906
    3. ' cross' → logprob: -13.625099182128906
    4. '.' → logprob: -14.250099182128906
    5. '.Cross' → logprob: -14.750099182128906
    6. '.dot' → logprob: -15.375099182128906
    7. 'Cross' → logprob: -15.500099182128906
    8. '_cross' → logprob: -16.500099182128906
    9. ' .' → logprob: -17.375099182128906
    10. '
' → logprob: -17.750099182128906

Token 425: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.8889261304575484e-06
    2. 'a' → logprob: -13.250003814697266
    3. '(b' → logprob: -13.375003814697266
    4. '(' → logprob: -14.875003814697266
    5. ' (' → logprob: -16.000003814697266
    6. 'b' → logprob: -18.375003814697266
    7. '(
' → logprob: -19.000003814697266
    8. '   ' → logprob: -20.000003814697266
    9. ' a' → logprob: -20.250003814697266
    10. '<a' → logprob: -20.250003814697266

Token 426: ',' (ID: 11)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.09643682092428207
    2. '(a' → logprob: -2.8464367389678955
    3. '(' → logprob: -3.5964367389678955
    4. ',' → logprob: -5.096436977386475
    5. ' (' → logprob: -8.221436500549316
    6. ')' → logprob: -10.471436500549316
    7. ')(' → logprob: -11.346436500549316
    8. '(c' → logprob: -12.221436500549316
    9. ' b' → logprob: -12.346436500549316
    10. ',b' → logprob: -12.471436500549316

Token 427: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01815052703022957
    2. ' b' → logprob: -4.018150329589844
    3. '(b' → logprob: -15.018150329589844
    4. ')b' → logprob: -16.268150329589844
    5. '	b' → logprob: -16.268150329589844
    6. ' ' → logprob: -16.893150329589844
    7. 'a' → logprob: -17.643150329589844
    8. '_b' → logprob: -17.768150329589844
    9. '<|end|>' → logprob: -17.768150329589844
    10. 'Vector' → logprob: -18.268150329589844

Token 428: ')' (ID: 8)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.45847010612487793
    2. '<' → logprob: -1.333470106124878
    3. ')' → logprob: -2.333470106124878
    4. ')<' → logprob: -5.208470344543457
    5. '()' → logprob: -7.083470344543457
    6. '()<' → logprob: -7.208470344543457
    7. ' )' → logprob: -9.708470344543457
    8. ' ' → logprob: -10.583470344543457
    9. '       ' → logprob: -11.083470344543457
    10. ',' → logprob: -11.208470344543457

Token 429: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4753634035587311
    2. '<' → logprob: -0.9753633737564087
    3. '<Point' → logprob: -6.725363254547119
    4. '<Vector' → logprob: -10.225363731384277
    5. '()<' → logprob: -10.975363731384277
    6. ')<' → logprob: -11.600363731384277
    7. ' ' → logprob: -11.850363731384277
    8. '<-' → logprob: -13.100363731384277
    9. '<p' → logprob: -13.350363731384277
    10. ')' → logprob: -13.725363731384277

Token 430: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20574815571308136
    2. ' -' → logprob: -1.705748200416565
    3. '-P' → logprob: -5.705748081207275
    4. '-point' → logprob: -6.955748081207275
    5. ' Point' → logprob: -10.955748558044434
    6. '_Point' → logprob: -11.705748558044434
    7. 'Point' → logprob: -11.955748558044434
    8. '	Point' → logprob: -13.330748558044434
    9. '-Class' → logprob: -13.455748558044434
    10. '-Code' → logprob: -13.705748558044434

Token 431: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.029750952497124672
    2. ' Point' → logprob: -3.5297510623931885
    3. '	Point' → logprob: -15.02975082397461
    4. '_Point' → logprob: -16.90475082397461
    5. '1' → logprob: -17.40475082397461
    6. '   ' → logprob: -17.90475082397461
    7. '(Point' → logprob: -18.27975082397461
    8. '0' → logprob: -18.77975082397461
    9. '_point' → logprob: -18.77975082397461
    10. ' ' → logprob: -19.02975082397461

Token 432: '.e' (ID: 2560)
  Prédit: '.e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.e' → logprob: -0.038046542555093765
    2. '.' → logprob: -3.2880465984344482
    3. ' .' → logprob: -13.163046836853027
    4. 'epsilon' → logprob: -13.163046836853027
    5. '.ep' → logprob: -14.538046836853027
    6. 'psilon' → logprob: -15.663046836853027
    7. '.е' → logprob: -16.28804588317871
    8. '.s' → logprob: -16.28804588317871
    9. 'e' → logprob: -16.66304588317871
    10. '.euler' → logprob: -16.78804588317871

Token 433: 'psilon' (ID: 71499)
  Prédit: 'psilon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'psilon' → logprob: -0.002827223390340805
    2. '-' → logprob: -6.252827167510986
    3. '10' → logprob: -7.752827167510986
    4. 'epsilon' → logprob: -7.877827167510986
    5. 'psi' → logprob: -10.127827644348145
    6. 'p' → logprob: -10.377827644348145
    7. 'ps' → logprob: -12.127827644348145
    8. '+' → logprob: -12.502827644348145
    9. '0' → logprob: -13.502827644348145
    10. 'x' → logprob: -13.877827644348145

Token 434: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.037325698882341385
    2. ':
' → logprob: -3.787325620651245
    3. '):' → logprob: -5.037325859069824
    4. '):
' → logprob: -5.787325859069824
    5. '<|end|>' → logprob: -5.787325859069824
    6. ')' → logprob: -7.537325859069824
    7. '       ' → logprob: -7.662325859069824
    8. ',' → logprob: -9.412325859069824
    9. '<|end|>' → logprob: -9.662325859069824
    10. ' :' → logprob: -9.662325859069824

Token 435: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5259727835655212
    2. '0' → logprob: -1.525972843170166
    3. ' ' → logprob: -2.525972843170166
    4. ' return' → logprob: -2.900972843170166
    5. '1' → logprob: -3.525972843170166
    6. '       ' → logprob: -4.400972843170166
    7. '2' → logprob: -4.900972843170166
    8. 'return' → logprob: -5.275972843170166
    9. '	       ' → logprob: -7.650972843170166
    10. '               ' → logprob: -7.775972843170166

Token 436: ' return' (ID: 622)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.029059212654829025
    2. ' -' → logprob: -3.6540591716766357
    3. 'return' (adapté à ' return') → logprob: -6.279059410095215
    4. ' return' → logprob: -7.154059410095215
    5. '2' → logprob: -9.904059410095215
    6. '           ' → logprob: -11.529059410095215
    7. '0' → logprob: -11.779059410095215
    8. '       ' → logprob: -11.779059410095215
    9. ' ' → logprob: -12.154059410095215
    10. '1' → logprob: -12.404059410095215

Token 437: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.014168208464980125
    2. ' -' → logprob: -4.2641682624816895
    3. ' ' → logprob: -12.639167785644531
    4. '2' → logprob: -14.014167785644531
    5. '1' → logprob: -15.514167785644531
    6. '
' → logprob: -15.639167785644531
    7. '   ' → logprob: -16.38916778564453
    8. '	' → logprob: -16.76416778564453
    9. '  ' → logprob: -17.01416778564453
    10. '−' → logprob: -17.13916778564453

Token 438: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. 'Point' → logprob: -17.75000762939453
    4. '2' → logprob: -18.75000762939453
    5. '   ' → logprob: -19.00000762939453
    6. '0' → logprob: -19.50000762939453
    7. '  ' → logprob: -20.50000762939453
    8. '１' → logprob: -20.50000762939453
    9. ' Point' → logprob: -21.43750762939453
    10. '-' → logprob: -21.43750762939453

Token 439: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11749893426895142
    2. '<|end|>' → logprob: -2.3674988746643066
    3. ' return' → logprob: -5.742498874664307
    4. ')' → logprob: -5.742498874664307
    5. '   ' → logprob: -5.992498874664307
    6. ' #' → logprob: -6.117498874664307
    7. ' ' → logprob: -6.242498874664307
    8. '#' → logprob: -6.992498874664307
    9. ' (' → logprob: -7.367498874664307
    10. '        ' → logprob: -7.742498874664307

Token 440: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04896509274840355
    2. ' '' → logprob: -3.1739649772644043
    3. ''C' → logprob: -5.173964977264404
    4. ' ' → logprob: -8.923965454101562
    5. ''H' → logprob: -9.798965454101562
    6. '   ' → logprob: -10.673965454101562
    7. '"' → logprob: -10.798965454101562
    8. ''S' → logprob: -11.423965454101562
    9. '1' → logprob: -11.548965454101562
    10. ''T' → logprob: -12.048965454101562

Token 441: 'CLOCK' (ID: 181115)
  Prédit: 'CLOCK'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CLOCK' → logprob: -0.0010749688372015953
    2. ''' → logprob: -7.00107479095459
    3. ' CLOCK' → logprob: -9.12607479095459
    4. 'Clock' → logprob: -10.50107479095459
    5. 'COL' → logprob: -11.50107479095459
    6. '_CLOCK' → logprob: -12.12607479095459
    7. 'clock' → logprob: -12.62607479095459
    8. 'CW' → logprob: -12.75107479095459
    9. '`' → logprob: -13.50107479095459
    10. 'C' → logprob: -13.62607479095459

Token 442: 'WISE' (ID: 38559)
  Prédit: '_CLOCK'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_CLOCK' → logprob: -0.01434342935681343
    2. '_COUNTER' → logprob: -4.26434326171875
    3. '_' → logprob: -10.13934326171875
    4. '_clock' → logprob: -11.13934326171875
    5. 'CLOCK' → logprob: -11.38934326171875
    6. '_TIME' → logprob: -11.88934326171875
    7. '_UN' → logprob: -11.88934326171875
    8. '_ROT' → logprob: -12.13934326171875
    9. '_DIRECTION' → logprob: -12.26434326171875
    10. '_MINUS' → logprob: -12.38934326171875

Token 443: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.005277753341943026
    2. ''
' → logprob: -5.255277633666992
    3. '')' → logprob: -11.130277633666992
    4. '<|end|>' → logprob: -11.755277633666992
    5. '"' → logprob: -12.255277633666992
    6. '```' → logprob: -12.380277633666992
    7. ')' → logprob: -12.505277633666992
    8. '       ' → logprob: -12.505277633666992
    9. ''
' → logprob: -13.880277633666992
    10. ''''' → logprob: -14.130277633666992

Token 444: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.516994297504425
    2. '0' → logprob: -1.1419942378997803
    3. ' ' → logprob: -3.2669942378997803
    4. '   ' → logprob: -4.016994476318359
    5. '```' → logprob: -4.766994476318359
    6. ' return' → logprob: -5.141994476318359
    7. '<|end|>' → logprob: -5.266994476318359
    8. ')' → logprob: -6.141994476318359
    9. 'return' → logprob: -6.391994476318359
    10. 'elif' → logprob: -7.016994476318359

Token 445: ' elif' (ID: 9497)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3382609188556671
    2. 'else' → logprob: -1.3382608890533447
    3. 'elif' (adapté à ' elif') → logprob: -4.213261127471924
    4. ' else' → logprob: -4.838261127471924
    5. ' ' → logprob: -6.963261127471924
    6. '       ' → logprob: -7.338261127471924
    7. ' elif' → logprob: -8.588260650634766
    8. 'return' → logprob: -9.588260650634766
    9. '	' → logprob: -10.463260650634766
    10. '   ' → logprob: -10.588260650634766

Token 446: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.01990298181772232
    2. ' Vector' → logprob: -4.144903182983398
    3. 'abs' → logprob: -5.644903182983398
    4. ' abs' → logprob: -8.644903182983398
    5. '(Vector' → logprob: -10.019903182983398
    6. 'dot' → logprob: -10.769903182983398
    7. 'fabs' → logprob: -11.019903182983398
    8. ' ' → logprob: -11.519903182983398
    9. 'Dot' → logprob: -11.644903182983398
    10. '	Vector' → logprob: -11.769903182983398

Token 447: '.dot' (ID: 52692)
  Prédit: '.cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cross' → logprob: -0.005500895902514458
    2. 'cross' → logprob: -5.505500793457031
    3. '.dot' → logprob: -6.630500793457031
    4. 'dot' → logprob: -9.755500793457031
    5. ' cross' → logprob: -11.755500793457031
    6. '.cos' → logprob: -12.505500793457031
    7. 'Cross' → logprob: -12.630500793457031
    8. '.scalar' → logprob: -12.755500793457031
    9. '.Cross' → logprob: -13.005500793457031
    10. '.is' → logprob: -13.130500793457031

Token 448: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.8624639324116288e-06
    2. '(b' → logprob: -13.625001907348633
    3. 'a' → logprob: -15.500001907348633
    4. '(Vector' → logprob: -15.500001907348633
    5. '(' → logprob: -16.500001907348633
    6. ' (' → logprob: -16.750001907348633
    7. '(
' → logprob: -17.750001907348633
    8. '   ' → logprob: -18.625001907348633
    9. '(self' → logprob: -18.750001907348633
    10. 'Vector' → logprob: -18.750001907348633

Token 449: ',' (ID: 11)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.10897085070610046
    2. ',' → logprob: -2.358970880508423
    3. '(' → logprob: -5.483970642089844
    4. '(a' → logprob: -5.983970642089844
    5. ' (' → logprob: -7.108970642089844
    6. ')' → logprob: -7.483970642089844
    7. ',b' → logprob: -7.983970642089844
    8. ' b' → logprob: -8.983970642089844
    9. ')(' → logprob: -9.108970642089844
    10. 'b' → logprob: -10.108970642089844

Token 450: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0010251892963424325
    2. 'a' → logprob: -7.001025199890137
    3. ' b' → logprob: -9.126025199890137
    4. 'Vector' → logprob: -12.501025199890137
    5. ' a' → logprob: -14.626025199890137
    6. '(b' → logprob: -15.126025199890137
    7. '(a' → logprob: -16.00102424621582
    8. '   ' → logprob: -16.12602424621582
    9. ' ' → logprob: -16.25102424621582
    10. '	b' → logprob: -16.50102424621582

Token 451: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005724519141949713
    2. ')<' → logprob: -8.250572204589844
    3. ')==' → logprob: -9.000572204589844
    4. ')<=' → logprob: -10.000572204589844
    5. '(a' → logprob: -10.625572204589844
    6. '==' → logprob: -10.625572204589844
    7. ',' → logprob: -11.375572204589844
    8. '<=' → logprob: -11.500572204589844
    9. '<' → logprob: -11.500572204589844
    10. ' )' → logprob: -11.750572204589844

Token 452: ' <' (ID: 464)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -1.46715247631073
    2. ' <' → logprob: -1.59215247631073
    3. ' <=' → logprob: -1.59215247631073
    4. '<' → logprob: -2.0921525955200195
    5. '()<' → logprob: -2.0921525955200195
    6. '==' → logprob: -3.0921525955200195
    7. ' ==' → logprob: -4.0921525955200195
    8. ')' → logprob: -4.7171525955200195
    9. '(' → logprob: -4.7171525955200195
    10. '>=' → logprob: -4.8421525955200195

Token 453: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001732663222355768
    2. '-P' → logprob: -9.750173568725586
    3. '-Length' → logprob: -10.750173568725586
    4. ' -' → logprob: -10.875173568725586
    5. '-Type' → logprob: -11.125173568725586
    6. '-point' → logprob: -11.125173568725586
    7. '-Line' → logprob: -11.875173568725586
    8. '-Time' → logprob: -12.000173568725586
    9. '-Date' → logprob: -12.000173568725586
    10. '-Part' → logprob: -12.125173568725586

Token 454: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -3.6312321753939614e-05
    2. ' Point' → logprob: -10.250036239624023
    3. '	Point' → logprob: -14.875036239624023
    4. 'Vector' → logprob: -15.375036239624023
    5. '0' → logprob: -16.250036239624023
    6. '_Point' → logprob: -16.375036239624023
    7. '(Point' → logprob: -17.250036239624023
    8. '.Point' → logprob: -17.500036239624023
    9. 'point' → logprob: -18.375036239624023
    10. '<Point' → logprob: -18.625036239624023

Token 455: '.e' (ID: 2560)
  Prédit: '.e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.e' → logprob: -0.011511418968439102
    2. '.Point' → logprob: -4.761511325836182
    3. '.' → logprob: -6.386511325836182
    4. 'Point' → logprob: -6.761511325836182
    5. '.point' → logprob: -11.13651180267334
    6. 'epsilon' → logprob: -11.13651180267334
    7. '<Point' → logprob: -12.76151180267334
    8. '[' → logprob: -12.76151180267334
    9. '	Point' → logprob: -12.76151180267334
    10. '(Point' → logprob: -12.88651180267334

Token 456: 'psilon' (ID: 71499)
  Prédit: 'psilon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'psilon' → logprob: -0.08067663758993149
    2. '10' → logprob: -2.955676555633545
    3. '1' → logprob: -4.580676555633545
    4. '0' → logprob: -4.955676555633545
    5. '-' → logprob: -5.205676555633545
    6. '5' → logprob: -6.705676555633545
    7. 'epsilon' → logprob: -7.955676555633545
    8. '2' → logprob: -8.330677032470703
    9. '05' → logprob: -8.330677032470703
    10. 'psi' → logprob: -8.705677032470703

Token 457: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2615158259868622
    2. ':' → logprob: -1.5115158557891846
    3. '       ' → logprob: -5.2615156173706055
    4. '           ' → logprob: -6.3865156173706055
    5. '):
' → logprob: -6.8865156173706055
    6. '():
' → logprob: -7.5115156173706055
    7. '<|end|>' → logprob: -7.6365156173706055
    8. ':return' → logprob: -8.761515617370605
    9. ' :
' → logprob: -9.261515617370605
    10. ',' → logprob: -9.386515617370605

Token 458: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22486354410648346
    2. '           ' → logprob: -1.8498635292053223
    3. '0' → logprob: -3.5998635292053223
    4. '1' → logprob: -4.474863529205322
    5. ' ' → logprob: -5.724863529205322
    6. '2' → logprob: -7.724863529205322
    7. '   ' → logprob: -8.09986400604248
    8. ' return' → logprob: -8.22486400604248
    9. 'return' → logprob: -8.59986400604248
    10. '	       ' → logprob: -8.84986400604248

Token 459: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.41331425309181213
    2. '           ' → logprob: -1.7883142232894897
    3. ' return' → logprob: -2.4133143424987793
    4. '-' → logprob: -3.1633143424987793
    5. '2' → logprob: -3.5383143424987793
    6. ' -' → logprob: -5.038314342498779
    7. '       ' → logprob: -6.538314342498779
    8. ' ' → logprob: -7.038314342498779
    9. '          ' → logprob: -7.788314342498779
    10. '1' → logprob: -7.913314342498779

Token 460: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.010113608092069626
    2. '1' → logprob: -4.760113716125488
    3. ' ' → logprob: -6.510113716125488
    4. '   ' → logprob: -12.260113716125488
    5. '  ' → logprob: -12.885113716125488
    6. '0' → logprob: -14.135113716125488
    7. '    ' → logprob: -14.760113716125488
    8. '
' → logprob: -15.385113716125488
    9. '-' → logprob: -15.510113716125488
    10. '       ' → logprob: -16.010112762451172

Token 461: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000556843588128686
    2. '1' → logprob: -7.875556945800781
    3. ' ' → logprob: -8.875556945800781
    4. '-' → logprob: -10.250556945800781
    5. '   ' → logprob: -14.375556945800781
    6. '
' → logprob: -15.375556945800781
    7. ' -' → logprob: -15.375556945800781
    8. '  ' → logprob: -15.500556945800781
    9. '0' → logprob: -15.750556945800781
    10. '=' → logprob: -16.37555694580078

Token 462: ' #' (ID: 1069)
  Prédit: ' #'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' #' → logprob: -0.015465124510228634
    2. '#' → logprob: -4.515465259552002
    3. '<|end|>' → logprob: -5.640465259552002
    4. '       ' → logprob: -7.890465259552002
    5. ' ' → logprob: -8.640464782714844
    6. ' return' → logprob: -9.515464782714844
    7. '   ' → logprob: -9.890464782714844
    8. '<|end|>' → logprob: -10.015464782714844
    9. '﻿#' → logprob: -10.640464782714844
    10. ')' → logprob: -10.765464782714844

Token 463: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.017350200563669205
    2. ' '' → logprob: -4.517350196838379
    3. '2' → logprob: -5.517350196838379
    4. ' ' → logprob: -6.767350196838379
    5. '1' → logprob: -7.267350196838379
    6. ''H' → logprob: -9.017350196838379
    7. ''C' → logprob: -9.267350196838379
    8. '"' → logprob: -9.892350196838379
    9. '3' → logprob: -10.142350196838379
    10. '-' → logprob: -11.017350196838379

Token 464: 'ONLINE' (ID: 193356)
  Prédit: 'ONLINE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ONLINE' → logprob: -0.010221228934824467
    2. 'BACK' → logprob: -4.760221004486084
    3. 'online' → logprob: -7.635221004486084
    4. 'ON' → logprob: -7.760221004486084
    5. ' ONLINE' → logprob: -8.135221481323242
    6. '_BACK' → logprob: -9.635221481323242
    7. 'Online' → logprob: -9.635221481323242
    8. '_ON' → logprob: -10.135221481323242
    9. ''' → logprob: -10.135221481323242
    10. 'BE' → logprob: -10.385221481323242

Token 465: '_BACK' (ID: 48735)
  Prédit: 'BACK'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BACK' → logprob: -0.03854011371731758
    2. '_BACK' → logprob: -3.2885401248931885
    3. '_FRONT' → logprob: -8.78853988647461
    4. 'ONLINE' → logprob: -9.03853988647461
    5. 'back' → logprob: -9.78853988647461
    6. 'FR' → logprob: -10.03853988647461
    7. ' BACK' → logprob: -10.41353988647461
    8. 'COUN' → logprob: -10.78853988647461
    9. '_B' → logprob: -11.28853988647461
    10. '_back' → logprob: -11.41353988647461

Token 466: ''
' (ID: 2207)
  Prédit: 'WARD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WARD' → logprob: -0.10815314203500748
    2. ''' → logprob: -2.3581531047821045
    3. '')' → logprob: -5.233153343200684
    4. 'WORD' → logprob: -6.858153343200684
    5. 'ward' → logprob: -6.983153343200684
    6. ')' → logprob: -8.358153343200684
    7. 'WAR' → logprob: -8.983153343200684
    8. ''
' → logprob: -9.483153343200684
    9. 'Ward' → logprob: -9.733153343200684
    10. 'VECTOR' → logprob: -10.983153343200684

Token 467: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005916827358305454
    2. '   ' → logprob: -5.255916595458984
    3. 'elif' → logprob: -8.005916595458984
    4. '<|end|>' → logprob: -9.130916595458984
    5. 'return' → logprob: -9.880916595458984
    6. ' elif' → logprob: -9.880916595458984
    7. ' return' → logprob: -10.505916595458984
    8. '```' → logprob: -10.755916595458984
    9. ')' → logprob: -10.880916595458984
    10. '           ' → logprob: -11.005916595458984

Token 468: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.868905246257782
    2. '       ' → logprob: -0.993905246257782
    3. '   ' → logprob: -2.1189053058624268
    4. ' elif' → logprob: -2.6189053058624268
    5. '0' → logprob: -4.743905067443848
    6. ' ' → logprob: -5.243905067443848
    7. '	elif' → logprob: -6.618905067443848
    8. '1' → logprob: -7.368905067443848
    9. '  ' → logprob: -7.868905067443848
    10. ',' → logprob: -8.118905067443848

Token 469: ' a' (ID: 261)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.0417393296957016
    2. 'abs' → logprob: -3.7917392253875732
    3. ' Vector' → logprob: -4.291739463806152
    4. ' abs' → logprob: -5.416739463806152
    5. 'Point' → logprob: -9.041739463806152
    6. 'fabs' → logprob: -11.041739463806152
    7. '   ' → logprob: -11.166739463806152
    8. '	Vector' → logprob: -11.416739463806152
    9. '(Vector' → logprob: -11.416739463806152
    10. ' ' → logprob: -11.916739463806152

Token 470: '.norm' (ID: 73834)
  Prédit: '.norm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.norm' → logprob: -0.9038606286048889
    2. 'norm' → logprob: -1.1538605690002441
    3. '.dot' → logprob: -1.7788605690002441
    4. 'dot' → logprob: -3.028860569000244
    5. '_norm' → logprob: -4.278860569000244
    6. ' =' → logprob: -4.528860569000244
    7. '=' → logprob: -4.653860569000244
    8. '_dot' → logprob: -4.778860569000244
    9. 'def' → logprob: -5.653860569000244
    10. 'Norm' → logprob: -6.528860569000244

Token 471: '()' (ID: 416)
  Prédit: '()<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()<' → logprob: -1.296897292137146
    2. '()' → logprob: -1.421897292137146
    3. '(b' → logprob: -1.546897292137146
    4. '(Vector' → logprob: -2.0468974113464355
    5. '()>' → logprob: -2.5468974113464355
    6. '()==' → logprob: -3.1718974113464355
    7. '(self' → logprob: -5.4218974113464355
    8. '(a' → logprob: -5.5468974113464355
    9. '(' → logprob: -5.7968974113464355
    10. '==' → logprob: -6.2968974113464355

Token 472: ' <' (ID: 464)
  Prédit: '()>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()>' → logprob: -0.9568147659301758
    2. '()<' → logprob: -1.2068147659301758
    3. '>' → logprob: -2.081814765930176
    4. '()' → logprob: -2.956814765930176
    5. '<Vector' → logprob: -3.331814765930176
    6. ' >' → logprob: -3.456814765930176
    7. ' <' → logprob: -3.956814765930176
    8. '<' → logprob: -4.331814765930176
    9. '==' → logprob: -4.331814765930176
    10. '()==' → logprob: -4.581814765930176

Token 473: ' b' (ID: 287)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.43733301758766174
    2. 'Point' → logprob: -1.5623329877853394
    3. 'b' → logprob: -1.9373329877853394
    4. 'abs' → logprob: -8.687333106994629
    5. ' Point' → logprob: -8.937333106994629
    6. ' Vector' → logprob: -9.062333106994629
    7. ' b' → logprob: -10.312333106994629
    8. '   ' → logprob: -11.187333106994629
    9. '1' → logprob: -11.437333106994629
    10. '(Point' → logprob: -11.437333106994629

Token 474: '.norm' (ID: 73834)
  Prédit: '.norm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.norm' → logprob: -0.006757409777492285
    2. 'norm' → logprob: -5.0067572593688965
    3. '(norm' → logprob: -11.131757736206055
    4. '.' → logprob: -11.506757736206055
    5. '.e' → logprob: -11.756757736206055
    6. 'e' → logprob: -13.131757736206055
    7. 'Norm' → logprob: -13.256757736206055
    8. '<' → logprob: -14.006757736206055
    9. 'epsilon' → logprob: -14.256757736206055
    10. ' norm' → logprob: -14.756757736206055

Token 475: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.13828878104686737
    2. '()<' → logprob: -2.513288736343384
    3. '()+' → logprob: -3.888288736343384
    4. '<Point' → logprob: -4.013288974761963
    5. '(Point' → logprob: -5.638288974761963
    6. '()-' → logprob: -6.638288974761963
    7. '():' → logprob: -7.263288974761963
    8. '.Point' → logprob: -7.638288974761963
    9. '+' → logprob: -7.638288974761963
    10. '   ' → logprob: -7.763288974761963

Token 476: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05120345205068588
    2. '           ' → logprob: -3.051203489303589
    3. '2' → logprob: -7.17620325088501
    4. ' return' → logprob: -7.30120325088501
    5. 'return' → logprob: -7.42620325088501
    6. ' ' → logprob: -9.176203727722168
    7. '   ' → logprob: -9.176203727722168
    8. ':return' → logprob: -9.551203727722168
    9. '1' → logprob: -9.926203727722168
    10. '0' → logprob: -10.051203727722168

Token 477: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5452836751937866
    2. '       ' → logprob: -1.2952836751937866
    3. ' return' → logprob: -2.670283794403076
    4. '3' → logprob: -2.920283794403076
    5. '           ' → logprob: -4.795283794403076
    6. '1' → logprob: -4.920283794403076
    7. '0' → logprob: -5.920283794403076
    8. '   ' → logprob: -6.420283794403076
    9. '2' → logprob: -6.670283794403076
    10. ' ' → logprob: -6.920283794403076

Token 478: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2052503079175949
    2. '3' → logprob: -1.9552502632141113
    3. '2' → logprob: -3.8302502632141113
    4. '0' → logprob: -4.205250263214111
    5. '1' → logprob: -5.330250263214111
    6. '-' → logprob: -6.580250263214111
    7. ' -' → logprob: -6.830250263214111
    8. 'Point' → logprob: -9.83025074005127
    9. ' Point' → logprob: -10.58025074005127
    10. '4' → logprob: -12.33025074005127

Token 479: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5928495486150496e-05
    2. '1' → logprob: -12.125016212463379
    3. ' ' → logprob: -12.750016212463379
    4. '２' → logprob: -12.875016212463379
    5. '
' → logprob: -13.250016212463379
    6. '3' → logprob: -14.250016212463379
    7. '   ' → logprob: -14.437516212463379
    8. '

' → logprob: -15.312516212463379
    9. '-' → logprob: -15.437516212463379
    10. '	' → logprob: -15.687516212463379

Token 480: ' #' (ID: 1069)
  Prédit: ' #'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' #' → logprob: -0.07130229473114014
    2. '#' → logprob: -2.6963024139404297
    3. '       ' → logprob: -6.82130241394043
    4. ' ' → logprob: -9.19630241394043
    5. '   ' → logprob: -9.82130241394043
    6. '﻿#' → logprob: -10.69630241394043
    7. '<|end|>' → logprob: -10.94630241394043
    8. '           ' → logprob: -10.94630241394043
    9. '  ' → logprob: -11.94630241394043
    10. '        ' → logprob: -12.07130241394043

Token 481: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.06365276873111725
    2. ' '' → logprob: -2.813652753829956
    3. ' ' → logprob: -7.063652992248535
    4. '2' → logprob: -8.063652992248535
    5. '1' → logprob: -8.688652992248535
    6. '   ' → logprob: -8.813652992248535
    7. '3' → logprob: -10.188652992248535
    8. '  ' → logprob: -10.688652992248535
    9. ''on' → logprob: -10.938652992248535
    10. '"' → logprob: -11.063652992248535

Token 482: 'ONLINE' (ID: 193356)
  Prédit: 'ONLINE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ONLINE' → logprob: -0.08690023422241211
    2. 'ON' → logprob: -2.586900234222412
    3. ''' → logprob: -5.086900234222412
    4. ' ONLINE' → logprob: -6.836900234222412
    5. '.ON' → logprob: -9.08690071105957
    6. ' ON' → logprob: -9.21190071105957
    7. '1' → logprob: -9.46190071105957
    8. '	ON' → logprob: -9.58690071105957
    9. 'ONTO' → logprob: -9.71190071105957
    10. 'Point' → logprob: -9.96190071105957

Token 483: '_FRONT' (ID: 130295)
  Prédit: 'FR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'FR' → logprob: -0.3157743513584137
    2. '_FRONT' → logprob: -1.5657743215560913
    3. 'BACK' → logprob: -3.065774440765381
    4. '_BACK' → logprob: -4.315774440765381
    5. '_FORWARD' → logprob: -6.440774440765381
    6. ' FRONT' → logprob: -9.565773963928223
    7. 'FOR' → logprob: -9.690773963928223
    8. '_FR' → logprob: -9.815773963928223
    9. '_front' → logprob: -10.440773963928223
    10. 'Front' → logprob: -10.690773963928223

Token 484: ''
' (ID: 2207)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002481246367096901
    2. '<|end|>' → logprob: -6.377481460571289
    3. ')' → logprob: -8.377481460571289
    4. ''
' → logprob: -8.752481460571289
    5. '
' → logprob: -9.377481460571289
    6. ''' → logprob: -9.877481460571289
    7. '')' → logprob: -10.002481460571289
    8. '   ' → logprob: -10.002481460571289
    9. '<|end|>' → logprob: -10.002481460571289
    10. '```' → logprob: -10.502481460571289

Token 485: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009947025682777166
    2. ' else' → logprob: -7.625994682312012
    3. 'else' → logprob: -8.250994682312012
    4. 'return' → logprob: -9.750994682312012
    5. '	' → logprob: -10.000994682312012
    6. ' return' → logprob: -10.375994682312012
    7. '```' → logprob: -10.500994682312012
    8. '           ' → logprob: -11.125994682312012
    9. ',' → logprob: -11.250994682312012
    10. '   ' → logprob: -12.000994682312012

Token 486: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3800657093524933
    2. ' else' → logprob: -1.380065679550171
    3. 'else' (adapté à ' else') → logprob: -2.755065679550171
    4. '   ' → logprob: -7.25506591796875
    5. ' ' → logprob: -9.38006591796875
    6. 'return' → logprob: -9.75506591796875
    7. ' return' → logprob: -10.13006591796875
    8. '	else' → logprob: -10.25506591796875
    9. ' elif' → logprob: -10.88006591796875
    10. '           ' → logprob: -10.88006591796875

Token 487: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7566398978233337
    2. ':' → logprob: -1.1316399574279785
    3. '           ' → logprob: -1.6316399574279785
    4. '       ' → logprob: -4.5066399574279785
    5. ':return' → logprob: -7.1316399574279785
    6. '0' → logprob: -8.63163948059082
    7. '	       ' → logprob: -8.75663948059082
    8. ',' → logprob: -9.13163948059082
    9. ' return' → logprob: -9.63163948059082
    10. ' :' → logprob: -9.75663948059082

Token 488: '           ' (ID: 352)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03595123812556267
    2. ' ' → logprob: -3.5359511375427246
    3. '       ' → logprob: -5.160951137542725
    4. 'return' → logprob: -8.285951614379883
    5. '           ' → logprob: -9.535951614379883
    6. ' return' → logprob: -9.660951614379883
    7. '   ' → logprob: -9.910951614379883
    8. '        ' → logprob: -12.535951614379883
    9. '    ' → logprob: -13.660951614379883
    10. '     ' → logprob: -14.160951614379883

Token 489: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010370723903179169
    2. 'return' (adapté à ' return') → logprob: -5.01037073135376
    3. ' ' → logprob: -5.76037073135376
    4. ' return' → logprob: -7.63537073135376
    5. '   ' → logprob: -11.385370254516602
    6. '           ' → logprob: -13.260370254516602
    7. '       ' → logprob: -13.510370254516602
    8. '    ' → logprob: -15.010370254516602
    9. '  ' → logprob: -15.260370254516602
    10. '1' → logprob: -15.385370254516602

Token 490: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '۰' → logprob: -19.250123977661133
    4. '00' → logprob: -19.625123977661133
    5. '０' → logprob: -19.875123977661133
    6. '  ' → logprob: -20.750123977661133
    7. '000' → logprob: -21.125123977661133
    8. '   ' → logprob: -21.250123977661133
    9. '1' → logprob: -21.375123977661133
    10. '01' → logprob: -22.000123977661133

Token 491: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '０' → logprob: -18.375
    4. '۰' → logprob: -20.375
    5. '   ' → logprob: -21.375
    6. 'zero' → logprob: -22.125
    7. '00' → logprob: -22.25
    8. 'o' → logprob: -22.75
    9. 'O' → logprob: -22.875
    10. '000' → logprob: -22.875

Token 492: ' #' (ID: 1069)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.1311875581741333
    2. '#' → logprob: -1.7561875581741333
    3. '(Point' → logprob: -1.8811875581741333
    4. '(self' → logprob: -2.0061874389648438
    5. '(' → logprob: -2.2561874389648438
    6. ' #' → logprob: -3.3811874389648438
    7. '<|end|>' → logprob: -3.3811874389648438
    8. '       ' → logprob: -3.8811874389648438
    9. '(Vector' → logprob: -5.006187438964844
    10. ',' → logprob: -6.256187438964844

Token 493: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.001922802533954382
    2. ' '' → logprob: -6.501922607421875
    3. '0' → logprob: -9.376922607421875
    4. ''on' → logprob: -9.501922607421875
    5. '   ' → logprob: -9.751922607421875
    6. '"' → logprob: -10.001922607421875
    7. ' ' → logprob: -10.126922607421875
    8. '_ON' → logprob: -10.126922607421875
    9. '`' → logprob: -10.876922607421875
    10. ' ON' → logprob: -11.626922607421875

Token 494: 'ON' (ID: 975)
  Prédit: 'ON'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ON' → logprob: -0.0431397445499897
    2. '_ON' → logprob: -4.168139934539795
    3. ''' → logprob: -4.793139934539795
    4. ' ON' → logprob: -5.043139934539795
    5. 'ONTO' → logprob: -5.918139934539795
    6. 'ONLINE' → logprob: -6.043139934539795
    7. 'On' → logprob: -6.293139934539795
    8. '`' → logprob: -7.168139934539795
    9. '_on' → logprob: -7.168139934539795
    10. ''on' → logprob: -7.168139934539795

Token 495: '_SEG' (ID: 135738)
  Prédit: '_LINE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_LINE' → logprob: -0.6554185152053833
    2. '_SEG' → logprob: -1.2804185152053833
    3. '_POINT' → logprob: -2.5304183959960938
    4. 'LINE' → logprob: -2.5304183959960938
    5. 'POINT' → logprob: -3.7804183959960938
    6. 'segment' → logprob: -5.030418395996094
    7. '_segment' → logprob: -5.280418395996094
    8. 'SEG' → logprob: -5.780418395996094
    9. '_line' → logprob: -6.530418395996094
    10. ''' → logprob: -7.030418395996094

Token 496: 'MENT' (ID: 9640)
  Prédit: 'MENT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MENT' → logprob: -0.004604811314493418
    2. 'ment' → logprob: -5.879604816436768
    3. 'メント' → logprob: -6.629604816436768
    4. 'EMENT' → logprob: -8.50460433959961
    5. 'мент' → logprob: -9.12960433959961
    6. '```' → logprob: -9.75460433959961
    7. 'ement' → logprob: -10.50460433959961
    8. '   ' → logprob: -11.00460433959961
    9. '_segment' → logprob: -12.00460433959961
    10. 'MENTS' → logprob: -12.00460433959961

Token 497: ''

' (ID: 7497)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01126167457550764
    2. '<|end|>' → logprob: -4.886261463165283
    3. '```' → logprob: -6.886261463165283
    4. '   ' → logprob: -7.511261463165283
    5. '")' → logprob: -7.511261463165283
    6. '"""' → logprob: -7.511261463165283
    7. '')' → logprob: -7.761261463165283
    8. '"' → logprob: -8.761261940002441
    9. '       ' → logprob: -8.886261940002441
    10. '<|end|>' → logprob: -9.761261940002441

Token 498: '   ' (ID: 271)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00437529431656003
    2. '
' → logprob: -5.629375457763672
    3. '   ' → logprob: -8.254375457763672
    4. ')' → logprob: -8.254375457763672
    5. '<|end|>' → logprob: -8.754375457763672
    6. ' class' → logprob: -10.629375457763672
    7. ')
' → logprob: -11.379375457763672
    8. '       ' → logprob: -12.004375457763672
    9. '(' → logprob: -12.004375457763672
    10. 'def' → logprob: -12.129375457763672

Token 499: ' def' (ID: 1056)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.003436134662479162
    2. '
' → logprob: -6.128436088562012
    3. '   ' → logprob: -7.628436088562012
    4. 'def' (adapté à ' def') → logprob: -9.003436088562012
    5. ')' → logprob: -9.128436088562012
    6. ':' → logprob: -9.503436088562012
    7. ' class' → logprob: -9.753436088562012
    8. '(
' → logprob: -9.878436088562012
    9. 'Vector' → logprob: -9.878436088562012
    10. '(' → logprob: -10.003436088562012

Token 500: ' project' (ID: 2993)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -1.3486909866333008
    2. 'rotate' → logprob: -1.4736909866333008
    3. 'rot' → logprob: -1.5986909866333008
    4. 'to' → logprob: -2.848690986633301
    5. 'as' → logprob: -3.223690986633301
    6. '__' → logprob: -3.348690986633301
    7. ' rotate' → logprob: -3.598690986633301
    8. 'dist' → logprob: -3.973690986633301
    9. 'tuple' → logprob: -4.098690986633301
    10. 'angle' → logprob: -4.223690986633301

Token 501: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002695608709473163
    2. 'onto' → logprob: -9.500269889831543
    3. '(' → logprob: -10.000269889831543
    4. 'self' → logprob: -10.125269889831543
    5. '(Point' → logprob: -10.625269889831543
    6. ' (' → logprob: -10.875269889831543
    7. '   ' → logprob: -11.250269889831543
    8. 'def' → logprob: -11.500269889831543
    9. '<|end|>' → logprob: -12.125269889831543
    10. '<|end|>' → logprob: -12.125269889831543

Token 502: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024032754823565483
    2. '(self' → logprob: -3.7740328311920166
    3. 'self' → logprob: -8.274032592773438
    4. ',self' → logprob: -8.274032592773438
    5. ' ,' → logprob: -9.649032592773438
    6. '   ' → logprob: -9.774032592773438
    7. ',p' → logprob: -10.149032592773438
    8. ')(' → logprob: -10.649032592773438
    9. ' (' → logprob: -10.774032592773438
    10. '       ' → logprob: -11.524032592773438

Token 503: ' s' (ID: 265)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.02134903147816658
    2. 'self' → logprob: -3.8963489532470703
    3. 'line' → logprob: -8.02134895324707
    4. 'other' → logprob: -8.39634895324707
    5. 'seg' → logprob: -9.52134895324707
    6. 'segment' → logprob: -9.64634895324707
    7. ' p' → logprob: -10.64634895324707
    8. 'l' → logprob: -10.89634895324707
    9. 'a' → logprob: -11.02134895324707
    10. 'onto' → logprob: -11.14634895324707

Token 504: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3933967053890228
    2. 'elf' → logprob: -1.1433967351913452
    3. 'self' → logprob: -6.018396854400635
    4. '(self' → logprob: -6.643396854400635
    5. 'egment' → logprob: -7.393396854400635
    6. '   ' → logprob: -7.893396854400635
    7. 't' → logprob: -8.018396377563477
    8. ')' → logprob: -8.018396377563477
    9. '):
' → logprob: -8.268396377563477
    10. ',self' → logprob: -8.393396377563477

Token 505: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021759546361863613
    2. 'return' → logprob: -6.502175807952881
    3. '"""' → logprob: -8.252176284790039
    4. 't' → logprob: -9.127176284790039
    5. 'a' → logprob: -9.377176284790039
    6. 'b' → logprob: -9.627176284790039
    7. 'v' → logprob: -10.752176284790039
    8. '   ' → logprob: -10.752176284790039
    9. '"""
' → logprob: -10.877176284790039
    10. '#' → logprob: -10.877176284790039

Token 506: ' #' (ID: 1069)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0944102555513382
    2. 'base' → logprob: -2.7194101810455322
    3. 'return' → logprob: -4.094410419464111
    4. '"""' → logprob: -5.969410419464111
    5. '   ' → logprob: -6.344410419464111
    6. 'vec' → logprob: -6.969410419464111
    7. '#' (adapté à ' #') → logprob: -7.719410419464111
    8. 't' → logprob: -7.844410419464111
    9. 'b' → logprob: -8.469409942626953
    10. '"""
' → logprob: -8.594409942626953

Token 507: ' ?????' (ID: 149222)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0317392349243164
    2. 'Vector' → logprob: -2.0317392349243164
    3. '   ' → logprob: -2.1567392349243164
    4. 'return' → logprob: -2.1567392349243164
    5. '"""' → logprob: -2.5317392349243164
    6. '#' → logprob: -3.4067392349243164
    7. '"""
' → logprob: -3.5317392349243164
    8. 'base' → logprob: -3.6567392349243164
    9. '       ' → logprob: -3.6567392349243164
    10. '"' → logprob: -4.281739234924316

Token 508: '?(' (ID: 34172)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9003397226333618
    2. 'self' → logprob: -1.1503397226333618
    3. 'return' → logprob: -1.9003397226333618
    4. '       ' → logprob: -2.4003396034240723
    5. 'Point' → logprob: -3.6503396034240723
    6. '(self' → logprob: -5.525339603424072
    7. '(s' → logprob: -5.900339603424072
    8. 'point' → logprob: -6.775339603424072
    9. 'def' → logprob: -7.275339603424072
    10. '
' → logprob: -7.650339603424072

Token 509: 'Point' (ID: 4219)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2363758236169815
    2. 'self' → logprob: -1.6113758087158203
    3. '(self' → logprob: -5.36137580871582
    4. '(s' → logprob: -6.48637580871582
    5. 'Point' → logprob: -6.61137580871582
    6. '(Point' → logprob: -6.98637580871582
    7. ')' → logprob: -7.23637580871582
    8. '(' → logprob: -7.36137580871582
    9. ' self' → logprob: -8.23637580871582
    10. '   ' → logprob: -8.61137580871582

Token 510: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8810939788818359
    2. ',' → logprob: -1.381093978881836
    3. 'def' → logprob: -2.381093978881836
    4. '   ' → logprob: -2.506093978881836
    5. ')
' → logprob: -2.756093978881836
    6. '):
' → logprob: -3.381093978881836
    7. ' -' → logprob: -4.631093978881836
    8. '       ' → logprob: -5.006093978881836
    9. 's' → logprob: -5.131093978881836
    10. '(' → logprob: -5.256093978881836

Token 511: '????????' (ID: 85218)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3239656686782837
    2. 'return' → logprob: -2.198965549468994
    3. '   ' → logprob: -2.198965549468994
    4. ',' → logprob: -4.073965549468994
    5. 'p' → logprob: -4.073965549468994
    6. 'd' → logprob: -5.073965549468994
    7. '=' → logprob: -6.073965549468994
    8. ' =' → logprob: -6.573965549468994
    9. 'vec' → logprob: -7.198965549468994
    10. 'r' → logprob: -7.323965549468994

Token 512: '????' (ID: 25883)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6599419713020325
    2. '       ' → logprob: -0.9099419713020325
    3. 's' → logprob: -3.0349419116973877
    4. ' return' → logprob: -4.784942150115967
    5. '   ' → logprob: -4.909942150115967
    6. '(s' → logprob: -5.034942150115967
    7. 'Vector' → logprob: -5.284942150115967
    8. ' s' → logprob: -6.784942150115967
    9. ' (' → logprob: -6.909942150115967
    10. '
' → logprob: -8.034941673278809

Token 513: 's' (ID: 82)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3713668882846832
    2. 'return' → logprob: -1.7463668584823608
    3. 's' → logprob: -2.8713669776916504
    4. 't' → logprob: -3.8713669776916504
    5. '   ' → logprob: -3.8713669776916504
    6. 'p' → logprob: -4.37136697769165
    7. 'd' → logprob: -5.37136697769165
    8. 'Vector' → logprob: -5.37136697769165
    9. ' return' → logprob: -5.87136697769165
    10. ' s' → logprob: -6.12136697769165

Token 514: '????????' (ID: 85218)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5891194343566895
    2. 'def' → logprob: -1.7141194343566895
    3. 'return' → logprob: -1.8391194343566895
    4. '       ' → logprob: -1.9641194343566895
    5. ',' → logprob: -2.2141194343566895
    6. ' =' → logprob: -2.9641194343566895
    7. '=' → logprob: -3.5891194343566895
    8. ' return' → logprob: -4.2141194343566895
    9. ':' → logprob: -4.3391194343566895
    10. '(' → logprob: -4.8391194343566895

Token 515: '????????' (ID: 85218)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35332322120666504
    2. 'return' → logprob: -1.228323221206665
    3. 'd' → logprob: -6.353322982788086
    4. '   ' → logprob: -6.978322982788086
    5. 'diff' → logprob: -7.728322982788086
    6. ' return' → logprob: -7.853322982788086
    7. 't' → logprob: -8.228322982788086
    8. 'vec' → logprob: -8.603322982788086
    9. 'p' → logprob: -8.978322982788086
    10. 'vector' → logprob: -9.103322982788086

Token 516: '????????' (ID: 85218)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3904673457145691
    2. '       ' → logprob: -1.2654674053192139
    3. '   ' → logprob: -4.015467166900635
    4. 'd' → logprob: -4.765467166900635
    5. 't' → logprob: -4.765467166900635
    6. ' return' → logprob: -6.015467166900635
    7. 'dot' → logprob: -6.765467166900635
    8. 'vec' → logprob: -7.515467166900635
    9. 'v' → logprob: -8.515467643737793
    10. 's' → logprob: -8.640467643737793

Token 517: '????????' (ID: 85218)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3729173541069031
    2. 't' → logprob: -2.122917413711548
    3. 'return' → logprob: -2.497917413711548
    4. '   ' → logprob: -2.497917413711548
    5. 'r' → logprob: -5.122917175292969
    6. 'd' → logprob: -5.497917175292969
    7. 'vec' → logprob: -5.747917175292969
    8. 'p' → logprob: -6.122917175292969
    9. 'dot' → logprob: -6.122917175292969
    10. ' return' → logprob: -6.372917175292969

Token 518: '????' (ID: 25883)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03443506360054016
    2. 'return' → logprob: -4.284435272216797
    3. '   ' → logprob: -4.784435272216797
    4. 'd' → logprob: -5.659435272216797
    5. 't' → logprob: -6.034435272216797
    6. 'dot' → logprob: -6.409435272216797
    7. 'p' → logprob: -7.034435272216797
    8. 'dp' → logprob: -7.909435272216797
    9. ',' → logprob: -8.034435272216797
    10. 'diff' → logprob: -8.159435272216797

Token 519: '??' (ID: 6961)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6491509079933167
    2. 't' → logprob: -1.3991508483886719
    3. 'return' → logprob: -2.649150848388672
    4. 'b' → logprob: -2.649150848388672
    5. 'vec' → logprob: -3.899150848388672
    6. 'r' → logprob: -4.399150848388672
    7. '   ' → logprob: -4.524150848388672
    8. 'a' → logprob: -4.774150848388672
    9. 'd' → logprob: -4.899150848388672
    10. 'p' → logprob: -5.274150848388672

Token 520: '§' (ID: 18596)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7820909023284912
    2. 'return' → logprob: -1.2820909023284912
    3. '       ' → logprob: -2.157090902328491
    4. 'd' → logprob: -3.032090902328491
    5. '   ' → logprob: -3.407090902328491
    6. 'b' → logprob: -4.28209114074707
    7. 'dot' → logprob: -4.28209114074707
    8. 'r' → logprob: -4.65709114074707
    9. ' t' → logprob: -5.15709114074707
    10. 'dp' → logprob: -5.65709114074707

Token 521: '?' (ID: 30)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9020530581474304
    2. '       ' → logprob: -1.1520531177520752
    3. '   ' → logprob: -2.277053117752075
    4. 't' → logprob: -2.527053117752075
    5. 'd' → logprob: -3.152053117752075
    6. ' return' → logprob: -3.652053117752075
    7. ' t' → logprob: -4.902052879333496
    8. 'a' → logprob: -5.652052879333496
    9. 'b' → logprob: -5.902052879333496
    10. 'r' → logprob: -6.277052879333496

Token 522: '¨' (ID: 64259)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5095027089118958
    2. 't' → logprob: -1.259502649307251
    3. '   ' → logprob: -3.634502649307251
    4. 'd' → logprob: -3.634502649307251
    5. '       ' → logprob: -4.00950288772583
    6. 'r' → logprob: -4.75950288772583
    7. 'v' → logprob: -4.88450288772583
    8. 'a' → logprob: -5.25950288772583
    9. 'b' → logprob: -5.38450288772583
    10. 'vec' → logprob: -5.88450288772583

Token 523: '?(' (ID: 34172)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.2844716310501099
    2. '       ' → logprob: -1.6594716310501099
    3. 'b' → logprob: -2.0344715118408203
    4. 'r' → logprob: -2.6594715118408203
    5. 'return' → logprob: -2.6594715118408203
    6. 'base' → logprob: -2.7844715118408203
    7. '   ' → logprob: -2.9094715118408203
    8. 'a' → logprob: -3.0344715118408203
    9. 'd' → logprob: -3.7844715118408203
    10. 'dp' → logprob: -3.7844715118408203

Token 524: '?' (ID: 30)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3044960498809814
    2. 's' → logprob: -1.8044960498809814
    3. 'def' → logprob: -2.1794960498809814
    4. 'Vector' → logprob: -2.4294960498809814
    5. 'self' → logprob: -2.5544960498809814
    6. ' (' → logprob: -2.8044960498809814
    7. '   ' → logprob: -3.1794960498809814
    8. '(s' → logprob: -3.6794960498809814
    9. 'abs' → logprob: -3.8044960498809814
    10. ' s' → logprob: -3.8044960498809814

Token 525: '°' (ID: 6793)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0573437213897705
    2. '       ' → logprob: -1.9323437213897705
    3. '   ' → logprob: -2.1823437213897705
    4. ')' → logprob: -2.1823437213897705
    5. 'self' → logprob: -2.4323437213897705
    6. ' s' → logprob: -3.1823437213897705
    7. ')
' → logprob: -3.6823437213897705
    8. 'def' → logprob: -3.8073437213897705
    9. 'Vector' → logprob: -3.9323437213897705
    10. ' self' → logprob: -4.307343482971191

Token 526: '???' (ID: 33110)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9771955609321594
    2. 'Vector' → logprob: -2.1021955013275146
    3. ')
' → logprob: -2.3521955013275146
    4. 's' → logprob: -2.3521955013275146
    5. 'self' → logprob: -2.3521955013275146
    6. '       ' → logprob: -2.9771955013275146
    7. '   ' → logprob: -3.3521955013275146
    8. ' s' → logprob: -4.227195739746094
    9. ' Vector' → logprob: -4.602195739746094
    10. 'a' → logprob: -4.602195739746094

Token 527: '±' (ID: 32438)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.144171953201294
    2. 's' → logprob: -2.019171953201294
    3. '   ' → logprob: -2.519171953201294
    4. ' s' → logprob: -2.644171953201294
    5. 'p' → logprob: -3.019171953201294
    6. ')
' → logprob: -3.144171953201294
    7. 'a' → logprob: -3.269171953201294
    8. '       ' → logprob: -3.519171953201294
    9. ',' → logprob: -3.644171953201294
    10. ' line' → logprob: -3.769171953201294

Token 528: ')' (ID: 8)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7802620530128479
    2. 'self' → logprob: -1.4052619934082031
    3. ' s' → logprob: -2.530261993408203
    4. ')' → logprob: -3.530261993408203
    5. ' self' → logprob: -3.905261993408203
    6. 'def' → logprob: -4.030261993408203
    7. ')
' → logprob: -4.155261993408203
    8. '       ' → logprob: -4.280261993408203
    9. '   ' → logprob: -4.280261993408203
    10. '(s' → logprob: -4.405261993408203

Token 529: '????' (ID: 25883)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012893718667328358
    2. 'return' → logprob: -5.8878936767578125
    3. ',' → logprob: -6.3878936767578125
    4. 'a' → logprob: -6.6378936767578125
    5. 'p' → logprob: -6.8878936767578125
    6. 't' → logprob: -7.0128936767578125
    7. '
' → logprob: -7.2628936767578125
    8. 'b' → logprob: -7.3878936767578125
    9. 'd' → logprob: -7.5128936767578125
    10. '#' → logprob: -7.8878936767578125

Token 530: '±' (ID: 32438)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2665780186653137
    2. 's' → logprob: -2.016577959060669
    3. 'return' → logprob: -3.516577959060669
    4. '(s' → logprob: -3.891577959060669
    5. 'def' → logprob: -4.141578197479248
    6. 'self' → logprob: -4.266578197479248
    7. 'Vector' → logprob: -5.391578197479248
    8. ' return' → logprob: -6.141578197479248
    9. 'Point' → logprob: -6.141578197479248
    10. '   ' → logprob: -6.266578197479248

Token 531: '????' (ID: 25883)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13563695549964905
    2. 'return' → logprob: -3.260637044906616
    3. '   ' → logprob: -3.885637044906616
    4. 't' → logprob: -4.260636806488037
    5. 'p' → logprob: -4.760636806488037
    6. 'd' → logprob: -4.885636806488037
    7. 'dot' → logprob: -5.385636806488037
    8. 'Vector' → logprob: -5.635636806488037
    9. 's' → logprob: -5.885636806488037
    10. ':' → logprob: -6.010636806488037

Token 532: '???
' (ID: 136325)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4958497881889343
    2. 't' → logprob: -1.870849847793579
    3. 'a' → logprob: -2.370849847793579
    4. 'p' → logprob: -2.870849847793579
    5. 'b' → logprob: -3.745849847793579
    6. 'return' → logprob: -4.245849609375
    7. '   ' → logprob: -4.370849609375
    8. 's' → logprob: -4.620849609375
    9. 'r' → logprob: -5.370849609375
    10. 'd' → logprob: -5.620849609375

Token 533: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6424826979637146
    2. 't' → logprob: -1.0174827575683594
    3. 'r' → logprob: -3.2674827575683594
    4. '   ' → logprob: -3.3924827575683594
    5. 'return' → logprob: -3.7674827575683594
    6. ' t' → logprob: -5.517482757568359
    7. 'b' → logprob: -5.892482757568359
    8. 'a' → logprob: -6.017482757568359
    9. 'p' → logprob: -6.267482757568359
    10. 'v' → logprob: -6.392482757568359

Token 534: ' base' (ID: 3611)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1840033382177353
    2. 'base' (adapté à ' base') → logprob: -1.8090033531188965
    3. 'return' → logprob: -6.5590033531188965
    4. '   ' → logprob: -7.0590033531188965
    5. 'b' → logprob: -7.4340033531188965
    6. 's' → logprob: -7.6840033531188965
    7. ' r' → logprob: -8.559002876281738
    8. ' base' → logprob: -8.809002876281738
    9. 'Base' → logprob: -8.934002876281738
    10. 't' → logprob: -9.809002876281738

Token 535: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4744798541069031
    2. '=' → logprob: -0.9744798541069031
    3. '=s' → logprob: -8.724479675292969
    4. '   ' → logprob: -8.974479675292969
    5. 'v' → logprob: -9.849479675292969
    6. '_vec' → logprob: -11.474479675292969
    7. '_vector' → logprob: -11.724479675292969
    8. ' ' → logprob: -12.099479675292969
    9. '＝' → logprob: -12.224479675292969
    10. 's' → logprob: -12.224479675292969

Token 536: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.030834058299660683
    2. 's' → logprob: -3.6558339595794678
    3. 'Point' → logprob: -5.405834197998047
    4. ' Vector' → logprob: -10.405834197998047
    5. '(Vector' → logprob: -14.405834197998047
    6. 'self' → logprob: -14.655834197998047
    7. ' s' → logprob: -14.655834197998047
    8. 'vector' → logprob: -15.030834197998047
    9. 'Vec' → logprob: -15.405834197998047
    10. ' Point' → logprob: -15.405834197998047

Token 537: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0022008095402270555
    2. 's' → logprob: -6.127200603485107
    3. '(self' → logprob: -11.752201080322266
    4. '(Point' → logprob: -12.377201080322266
    5. '(' → logprob: -13.002201080322266
    6. '((' → logprob: -14.627201080322266
    7. '(P' → logprob: -15.502201080322266
    8. '(p' → logprob: -15.752201080322266
    9. 'Point' → logprob: -16.002201080322266
    10. 'from' → logprob: -16.252201080322266

Token 538: '.p' (ID: 1201)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.988403856754303
    2. ')
' → logprob: -1.7384037971496582
    3. ' -' → logprob: -1.9884037971496582
    4. 'self' → logprob: -2.488403797149658
    5. ')' → logprob: -2.613403797149658
    6. '-self' → logprob: -2.613403797149658
    7. 's' → logprob: -3.488403797149658
    8. '(self' → logprob: -4.488403797149658
    9. '-start' → logprob: -5.488403797149658
    10. '-s' → logprob: -5.488403797149658

Token 539: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.37571799755096436
    2. '1' → logprob: -1.5007179975509644
    3. 'a' → logprob: -2.500718116760254
    4. 's' → logprob: -5.500718116760254
    5. '[' → logprob: -7.125718116760254
    6. 'p' → logprob: -7.250718116760254
    7. 'oints' → logprob: -7.625718116760254
    8. ')' → logprob: -7.750718116760254
    9. 'b' → logprob: -7.750718116760254
    10. '(' → logprob: -8.750718116760254

Token 540: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5744630694389343
    2. ' -' → logprob: -0.9494630694389343
    3. 'p' → logprob: -3.449463129043579
    4. '-p' → logprob: -4.949462890625
    5. '.p' → logprob: -5.199462890625
    6. ' p' → logprob: -5.824462890625
    7. 's' → logprob: -6.949462890625
    8. '1' → logprob: -7.699462890625
    9. ')' → logprob: -7.824462890625
    10. '.s' → logprob: -8.074462890625

Token 541: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0006328551680780947
    2. 'self' → logprob: -7.6256327629089355
    3. ' s' → logprob: -8.875633239746094
    4. 'Point' → logprob: -12.875633239746094
    5. '   ' → logprob: -14.125633239746094
    6. ' self' → logprob: -14.625633239746094
    7. '	s' → logprob: -15.500633239746094
    8. ' ' → logprob: -15.500633239746094
    9. '
' → logprob: -16.000633239746094
    10. '(s' → logprob: -16.000633239746094

Token 542: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.20143458247184753
    2. 'p' → logprob: -1.70143461227417
    3. '.' → logprob: -11.076434135437012
    4. 's' → logprob: -12.826434135437012
    5. ' p' → logprob: -13.576434135437012
    6. '.s' → logprob: -14.326434135437012
    7. '<p' → logprob: -14.576434135437012
    8. '	p' → logprob: -16.076435089111328
    9. '
' → logprob: -16.201435089111328
    10. '1' → logprob: -16.451435089111328

Token 543: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.056567076593637466
    2. 'p' → logprob: -2.9315671920776367
    3. '.p' → logprob: -6.806567192077637
    4. 'oint' → logprob: -7.806567192077637
    5. ' p' → logprob: -9.681567192077637
    6. 's' → logprob: -10.306567192077637
    7. 'oints' → logprob: -10.431567192077637
    8. '0' → logprob: -11.056567192077637
    9. '2' → logprob: -12.181567192077637
    10. '   ' → logprob: -12.681567192077637

Token 544: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.127027228474617
    2. ')' → logprob: -2.1270272731781006
    3. ').' → logprob: -10.12702751159668
    4. ')
' → logprob: -10.62702751159668
    5. '       ' → logprob: -11.00202751159668
    6. '())
' → logprob: -11.37702751159668
    7. ')

' → logprob: -13.12702751159668
    8. ' )
' → logprob: -13.25202751159668
    9. '   ' → logprob: -13.37702751159668
    10. '())' → logprob: -14.87702751159668

Token 545: '       ' (ID: 309)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.161648690700531
    2. '       ' → logprob: -2.036648750305176
    3. ' t' → logprob: -4.911648750305176
    4. 'proj' → logprob: -5.911648750305176
    5. 'dot' → logprob: -5.911648750305176
    6. 'dp' → logprob: -6.161648750305176
    7. 'r' → logprob: -7.036648750305176
    8. '   ' → logprob: -7.161648750305176
    9. 'd' → logprob: -7.286648750305176
    10. 'pro' → logprob: -7.911648750305176

Token 546: ' a' (ID: 261)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0036146817728877068
    2. 't' → logprob: -7.503614902496338
    3. 'proj' → logprob: -7.628614902496338
    4. 'vec' → logprob: -7.753614902496338
    5. 'dp' → logprob: -7.878614902496338
    6. 'hyp' → logprob: -8.12861442565918
    7. 'pro' → logprob: -8.37861442565918
    8. 'tmp' → logprob: -8.75361442565918
    9. 'dot' → logprob: -8.75361442565918
    10. 'to' → logprob: -9.12861442565918

Token 547: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07061515003442764
    2. '=' → logprob: -2.69561505317688
    3. 'b' → logprob: -7.570615291595459
    4. 'bs' → logprob: -9.5706148147583
    5. '=b' → logprob: -9.8206148147583
    6. '   ' → logprob: -11.0706148147583
    7. '=(' → logprob: -12.3206148147583
    8. '＝' → logprob: -12.9456148147583
    9. 'l' → logprob: -13.0706148147583
    10. '_=' → logprob: -13.3206148147583

Token 548: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -2.8921695047756657e-05
    2. 'self' → logprob: -10.875028610229492
    3. ' Vector' → logprob: -11.750028610229492
    4. 'Point' → logprob: -13.375028610229492
    5. 'base' → logprob: -15.250028610229492
    6. '   ' → logprob: -16.000028610229492
    7. '	Vector' → logprob: -17.000028610229492
    8. '(Vector' → logprob: -17.125028610229492
    9. 's' → logprob: -17.250028610229492
    10. 'Base' → logprob: -17.875028610229492

Token 549: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005561320576816797
    2. 'self' → logprob: -7.625555992126465
    3. '(s' → logprob: -9.750555992126465
    4. '(' → logprob: -12.000555992126465
    5. '(Point' → logprob: -13.125555992126465
    6. '(Vector' → logprob: -14.625555992126465
    7. '((' → logprob: -14.750555992126465
    8. 's' → logprob: -15.250555992126465
    9. '(p' → logprob: -16.12555694580078
    10. '[self' → logprob: -16.12555694580078

Token 550: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.47476521134376526
    2. '-' → logprob: -0.9747651815414429
    3. '-p' → logprob: -8.099764823913574
    4. 'p' → logprob: -8.599764823913574
    5. ' ' → logprob: -9.974764823913574
    6. '-point' → logprob: -10.099764823913574
    7. '-
' → logprob: -10.474764823913574
    8. ')' → logprob: -10.849764823913574
    9. ' p' → logprob: -11.099764823913574
    10. ' -
' → logprob: -11.224764823913574

Token 551: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0007257753168232739
    2. ' s' → logprob: -7.375725746154785
    3. 'Point' → logprob: -9.250725746154785
    4. ' Point' → logprob: -13.000725746154785
    5. '	s' → logprob: -15.750725746154785
    6. ' ' → logprob: -15.750725746154785
    7. '   ' → logprob: -16.0007266998291
    8. 'point' → logprob: -16.5007266998291
    9. 'p' → logprob: -16.5007266998291
    10. '
' → logprob: -16.7507266998291

Token 552: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.02976854331791401
    2. 'p' → logprob: -3.529768466949463
    3. '.' → logprob: -11.154768943786621
    4. ' p' → logprob: -14.029768943786621
    5. '   ' → logprob: -14.529768943786621
    6. '<p' → logprob: -14.529768943786621
    7. '1' → logprob: -14.779768943786621
    8. ' .' → logprob: -14.779768943786621
    9. '	p' → logprob: -15.654768943786621
    10. '```' → logprob: -15.904768943786621

Token 553: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. 'oint' → logprob: -16.125
    3. 'p' → logprob: -17.75
    4. '2' → logprob: -18.0
    5. '   ' → logprob: -19.875
    6. '```' → logprob: -20.25
    7. 'oints' → logprob: -20.5
    8. ' ' → logprob: -20.75
    9. '0' → logprob: -20.875
    10. 'oin' → logprob: -21.5

Token 554: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20234639942646027
    2. ')' → logprob: -1.7023464441299438
    3. '       ' → logprob: -7.202346324920654
    4. ').' → logprob: -9.077346801757812
    5. ')
' → logprob: -9.952346801757812
    6. '   ' → logprob: -11.077346801757812
    7. ')

' → logprob: -13.577346801757812
    8. '）
' → logprob: -13.827346801757812
    9. 'dot' → logprob: -13.827346801757812
    10. 't' → logprob: -13.952346801757812

Token 555: '       ' (ID: 309)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.22999374568462372
    2. '       ' → logprob: -1.6049937009811401
    3. 'dot' → logprob: -5.97999382019043
    4. 'd' → logprob: -6.72999382019043
    5. 'b' → logprob: -8.35499382019043
    6. 'dp' → logprob: -8.72999382019043
    7. 'return' → logprob: -9.35499382019043
    8. ' t' → logprob: -9.35499382019043
    9. '   ' → logprob: -9.47999382019043
    10. 'r' → logprob: -10.10499382019043

Token 556: ' r' (ID: 428)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.07220101356506348
    2. 'r' (adapté à ' r') → logprob: -2.6972010135650635
    3. '   ' → logprob: -6.572200775146484
    4. 'd' → logprob: -8.322200775146484
    5. 'proj' → logprob: -8.822200775146484
    6. '       ' → logprob: -9.322200775146484
    7. 'return' → logprob: -9.572200775146484
    8. 'dot' → logprob: -9.572200775146484
    9. 'dp' → logprob: -9.822200775146484
    10. 'pro' → logprob: -10.322200775146484

Token 557: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007422168273478746
    2. 'eturn' → logprob: -5.382421970367432
    3. ' =' → logprob: -5.882421970367432
    4. 'a' → logprob: -12.75742244720459
    5. '=
' → logprob: -13.38242244720459
    6. '=a' → logprob: -13.50742244720459
    7. '   ' → logprob: -13.63242244720459
    8. 'return' → logprob: -14.13242244720459
    9. ' ' → logprob: -15.25742244720459
    10. 'e' → logprob: -15.38242244720459

Token 558: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.00023560250701848418
    2. ' Vector' → logprob: -9.125235557556152
    3. 'base' → logprob: -9.750235557556152
    4. '(Vector' → logprob: -9.750235557556152
    5. 'Base' → logprob: -12.250235557556152
    6. '	Vector' → logprob: -12.875235557556152
    7. 'Point' → logprob: -14.625235557556152
    8. 'float' → logprob: -14.625235557556152
    9. '(base' → logprob: -14.625235557556152
    10. 'a' → logprob: -15.125235557556152

Token 559: '.dot' (ID: 52692)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.0797535628080368
    2. 'base' → logprob: -3.2047536373138428
    3. '.dot' → logprob: -4.079753398895264
    4. 'a' → logprob: -4.079753398895264
    5. '(base' → logprob: -6.579753398895264
    6. '.base' → logprob: -7.954753398895264
    7. '(a' → logprob: -8.079753875732422
    8. 'Vector' → logprob: -9.079753875732422
    9. 'Dot' → logprob: -11.079753875732422
    10. '.a' → logprob: -11.204753875732422

Token 560: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00032867121626622975
    2. 'a' → logprob: -8.50032901763916
    3. '(base' → logprob: -9.00032901763916
    4. '(' → logprob: -13.50032901763916
    5. 'base' → logprob: -15.50032901763916
    6. '(Vector' → logprob: -15.75032901763916
    7. 'Vector' → logprob: -16.375328063964844
    8. '(
' → logprob: -17.625328063964844
    9. '	a' → logprob: -19.750328063964844
    10. '(b' → logprob: -19.750328063964844

Token 561: ',' (ID: 11)
  Prédit: '(base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -0.00025526012177579105
    2. ',' → logprob: -8.625255584716797
    3. 'base' → logprob: -9.750255584716797
    4. '(a' → logprob: -11.750255584716797
    5. ' base' → logprob: -12.000255584716797
    6. '/base' → logprob: -13.375255584716797
    7. ',b' → logprob: -15.000255584716797
    8. ' (' → logprob: -15.000255584716797
    9. 'a' → logprob: -15.250255584716797
    10. '(b' → logprob: -15.375255584716797

Token 562: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0003365350130479783
    2. ' base' → logprob: -8.000336647033691
    3. 'a' → logprob: -13.875336647033691
    4. '(base' → logprob: -17.000335693359375
    5. '   ' → logprob: -17.250335693359375
    6. ' ' → logprob: -17.375335693359375
    7. '
' → logprob: -18.125335693359375
    8. '	base' → logprob: -18.500335693359375
    9. 'b' → logprob: -18.750335693359375
    10. 'Vector' → logprob: -19.500335693359375

Token 563: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002213180996477604
    2. '(base' → logprob: -6.252213001251221
    3. '   ' → logprob: -9.752213478088379
    4. ',' → logprob: -9.752213478088379
    5. ')/' → logprob: -9.752213478088379
    6. '/base' → logprob: -10.252213478088379
    7. ')
' → logprob: -10.877213478088379
    8. ' /' → logprob: -11.127213478088379
    9. '/' → logprob: -12.127213478088379
    10. '``' → logprob: -12.252213478088379

Token 564: '       ' (ID: 309)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.004910669755190611
    2. '/' → logprob: -5.754910469055176
    3. '()' → logprob: -6.504910469055176
    4. '()/' → logprob: -8.629910469055176
    5. ' /
' → logprob: -11.004910469055176
    6. '       ' → logprob: -11.379910469055176
    7. 'def' → logprob: -11.629910469055176
    8. ')' → logprob: -11.629910469055176
    9. 'Vector' → logprob: -13.879910469055176
    10. 'r' → logprob: -14.004910469055176

Token 565: ' r' (ID: 428)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.0188135989010334
    2. '/' → logprob: -4.143813610076904
    3. '()' → logprob: -7.018813610076904
    4. 'r' (adapté à ' r') → logprob: -7.643813610076904
    5. '       ' → logprob: -8.143813133239746
    6. ')' → logprob: -8.518813133239746
    7. 'def' → logprob: -8.518813133239746
    8. 'Vector' → logprob: -8.518813133239746
    9. '()/' → logprob: -8.643813133239746
    10. '/base' → logprob: -8.893813133239746

Token 566: ' /=' (ID: 37808)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.06751783192157745
    2. ' /' → logprob: -2.9425177574157715
    3. '/=' → logprob: -5.1925177574157715
    4. '=' → logprob: -5.5675177574157715
    5. ' /=' → logprob: -5.9425177574157715
    6. ' =' → logprob: -8.44251823425293
    7. '/
' → logprob: -9.19251823425293
    8. '       ' → logprob: -9.44251823425293
    9. '()/' → logprob: -10.81751823425293
    10. '/base' → logprob: -10.94251823425293

Token 567: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.00027063372544944286
    2. ' base' → logprob: -8.25027084350586
    3. 'Vector' → logprob: -11.75027084350586
    4. '(base' → logprob: -13.75027084350586
    5. 'Base' → logprob: -15.62527084350586
    6. 'float' → logprob: -16.12527084350586
    7. '	base' → logprob: -16.12527084350586
    8. 'abs' → logprob: -17.50027084350586
    9. '   ' → logprob: -17.87527084350586
    10. ' ' → logprob: -18.37527084350586

Token 568: '.norm' (ID: 73834)
  Prédit: '.norm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.norm' → logprob: -1.2664456789934775e-06
    2. '.' → logprob: -14.375000953674316
    3. ' .' → logprob: -15.125000953674316
    4. '.len' → logprob: -16.500001907348633
    5. 'norm' → logprob: -16.875001907348633
    6. '
' → logprob: -17.250001907348633
    7. '.abs' → logprob: -17.250001907348633
    8. '.dot' → logprob: -17.625001907348633
    9. '.length' → logprob: -18.000001907348633
    10. ').' → logprob: -18.000001907348633

Token 569: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16074863076210022
    2. '()
' → logprob: -1.9107486009597778
    3. '       ' → logprob: -8.035748481750488
    4. 'return' → logprob: -9.285748481750488
    5. '()

' → logprob: -10.410748481750488
    6. '())' → logprob: -10.785748481750488
    7. '();' → logprob: -11.410748481750488
    8. 'def' → logprob: -11.910748481750488
    9. '(),' → logprob: -11.910748481750488
    10. '()\' → logprob: -12.035748481750488

Token 570: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019272200763225555
    2. '
' → logprob: -4.019272327423096
    3. 'return' → logprob: -7.144272327423096
    4. 'base' → logprob: -9.144271850585938
    5. '   ' → logprob: -9.644271850585938
    6. ' return' → logprob: -9.894271850585938
    7. '        
' → logprob: -10.394271850585938
    8. ' base' → logprob: -11.519271850585938
    9. ' ' → logprob: -12.019271850585938
    10. '	' → logprob: -12.144271850585938

Token 571: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5921608209609985
    2. '       ' → logprob: -0.9671608209609985
    3. ' return' → logprob: -2.717160701751709
    4. 'r' → logprob: -8.967161178588867
    5. '	return' → logprob: -9.092161178588867
    6. ' =' → logprob: -9.592161178588867
    7. ' r' → logprob: -9.842161178588867
    8. 'result' → logprob: -9.967161178588867
    9. 'base' → logprob: -10.092161178588867
    10. '	' → logprob: -10.592161178588867

Token 572: ' s' (ID: 265)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.004188448190689087
    2. 's' → logprob: -5.504188537597656
    3. ' Point' → logprob: -9.129188537597656
    4. '	Point' → logprob: -15.129188537597656
    5. '(Point' → logprob: -15.254188537597656
    6. ' s' → logprob: -15.254188537597656
    7. 'point' → logprob: -15.379188537597656
    8. 'Vector' → logprob: -15.879188537597656
    9. '   ' → logprob: -16.379188537597656
    10. '_point' → logprob: -16.629188537597656

Token 573: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0012176171876490116
    2. 'p' → logprob: -7.376217842102051
    3. 'Point' → logprob: -7.501217842102051
    4. '.Point' → logprob: -10.62621784210205
    5. ' Point' → logprob: -11.87621784210205
    6. '.' → logprob: -13.00121784210205
    7. ' .' → logprob: -14.00121784210205
    8. '(Point' → logprob: -14.25121784210205
    9. '   ' → logprob: -14.62621784210205
    10. '.point' → logprob: -14.75121784210205

Token 574: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.9875325708417222e-05
    2. 'Point' → logprob: -10.875029563903809
    3. 'oint' → logprob: -12.750029563903809
    4. 'oints' → logprob: -13.000029563903809
    5. 'p' → logprob: -13.500029563903809
    6. '(Point' → logprob: -14.000029563903809
    7. '2' → logprob: -14.125029563903809
    8. ' Point' → logprob: -14.625029563903809
    9. '.Point' → logprob: -14.750029563903809
    10. '_point' → logprob: -14.875029563903809

Token 575: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20142094790935516
    2. ' +' → logprob: -1.7014209032058716
    3. '＋' → logprob: -13.076420783996582
    4. '+r' → logprob: -13.076420783996582
    5. 'Vector' → logprob: -14.326420783996582
    6. '```' → logprob: -15.201420783996582
    7. '   ' → logprob: -15.576420783996582
    8. ' plus' → logprob: -15.701420783996582
    9. ' Vector' → logprob: -15.701420783996582
    10. '+(' → logprob: -15.701420783996582

Token 576: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0004493805463425815
    2. ' base' → logprob: -7.750449180603027
    3. 'Point' → logprob: -11.125449180603027
    4. '(base' → logprob: -13.125449180603027
    5. 'Vector' → logprob: -13.500449180603027
    6. '(' → logprob: -16.000450134277344
    7. ' Point' → logprob: -16.250450134277344
    8. '	base' → logprob: -16.375450134277344
    9. 'b' → logprob: -16.750450134277344
    10. 'Base' → logprob: -17.000450134277344

Token 577: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.002797868102788925
    2. '*r' → logprob: -6.502798080444336
    3. ' *' → logprob: -6.752798080444336
    4. '*object' → logprob: -9.877798080444336
    5. '*(' → logprob: -10.127798080444336
    6. '**' → logprob: -11.877798080444336
    7. ' ' → logprob: -12.377798080444336
    8. '__' → logprob: -12.377798080444336
    9. '*p' → logprob: -12.627798080444336
    10. '```' → logprob: -12.752798080444336

Token 578: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07927221059799194
    2. '(r' → logprob: -2.5792722702026367
    3. '(' → logprob: -8.329272270202637
    4. ' (' → logprob: -9.329272270202637
    5. ' r' → logprob: -9.954272270202637
    6. '(float' → logprob: -13.454272270202637
    7. '(
' → logprob: -13.704272270202637
    8. '	r' → logprob: -15.204272270202637
    9. '((' → logprob: -15.204272270202637
    10. '(Point' → logprob: -15.329272270202637

Token 579: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 580: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 581: ' def' (ID: 1056)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.01726091466844082
    2. '   ' → logprob: -4.642261028289795
    3. 'from' → logprob: -6.267261028289795
    4. ')' → logprob: -6.267261028289795
    5. 'def' (adapté à ' def') → logprob: -6.892261028289795
    6. ' class' → logprob: -7.017261028289795
    7. '(' → logprob: -8.392260551452637
    8. '       ' → logprob: -8.517260551452637
    9. '
' → logprob: -8.642260551452637
    10. '*' → logprob: -9.017260551452637

Token 582: ' reflect' (ID: 12140)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -0.23811030387878418
    2. 'rot' → logprob: -1.6131103038787842
    3. 'distance' → logprob: -4.988110542297363
    4. 'reflect' → logprob: -6.738110542297363
    5. ' rotate' → logprob: -6.988110542297363
    6. 'dist' → logprob: -7.363110542297363
    7. 'rotation' → logprob: -7.738110542297363
    8. 'abs' → logprob: -7.738110542297363
    9. 'project' → logprob: -7.988110542297363
    10. 're' → logprob: -8.363110542297363

Token 583: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003716854262165725
    2. ' (' → logprob: -8.000371932983398
    3. '   ' → logprob: -11.125371932983398
    4. 'self' → logprob: -12.125371932983398
    5. '       ' → logprob: -12.375371932983398
    6. '(' → logprob: -12.625371932983398
    7. '(s' → logprob: -12.750371932983398
    8. ' self' → logprob: -13.000371932983398
    9. ' ' → logprob: -13.500371932983398
    10. ',' → logprob: -13.750371932983398

Token 584: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004035776015371084
    2. ',' → logprob: -5.629035949707031
    3. '(s' → logprob: -8.629035949707031
    4. 'self' → logprob: -8.754035949707031
    5. ',self' → logprob: -10.129035949707031
    6. '   ' → logprob: -11.004035949707031
    7. ' (' → logprob: -11.254035949707031
    8. '       ' → logprob: -11.379035949707031
    9. ')' → logprob: -12.004035949707031
    10. ' self' → logprob: -12.379035949707031

Token 585: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12875624001026154
    2. 'self' → logprob: -2.128756284713745
    3. 'line' → logprob: -6.753756046295166
    4. ' s' → logprob: -8.128756523132324
    5. 'l' → logprob: -8.253756523132324
    6. ' self' → logprob: -9.628756523132324
    7. '   ' → logprob: -11.753756523132324
    8. 'segment' → logprob: -11.878756523132324
    9. '(self' → logprob: -12.003756523132324
    10. 'p' → logprob: -12.753756523132324

Token 586: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.033871475607156754
    2. '):' → logprob: -3.4088714122772217
    3. '):
' → logprob: -9.1588716506958
    4. '       ' → logprob: -10.1588716506958
    5. ' ):
' → logprob: -10.2838716506958
    6. '   ' → logprob: -10.7838716506958
    7. '):

' → logprob: -11.4088716506958
    8. ')' → logprob: -11.6588716506958
    9. ' ):' → logprob: -12.5338716506958
    10. ',' → logprob: -14.0338716506958

Token 587: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00334037933498621
    2. 'self' → logprob: -6.378340244293213
    3. '(self' → logprob: -6.878340244293213
    4. '(' → logprob: -7.753340244293213
    5. ' self' → logprob: -9.253340721130371
    6. '   ' → logprob: -10.753340721130371
    7. '      ' → logprob: -11.503340721130371
    8. 's' → logprob: -11.878340721130371
    9. ' (' → logprob: -12.003340721130371
    10. '[' → logprob: -12.503340721130371

Token 588: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.263288289308548
    2. '#' (adapté à ' #') → logprob: -1.8882882595062256
    3. 'return' → logprob: -2.6382882595062256
    4. 'r' → logprob: -5.888288497924805
    5. '   ' → logprob: -6.013288497924805
    6. 'p' → logprob: -6.138288497924805
    7. 'self' → logprob: -7.638288497924805
    8. 'base' → logprob: -8.763288497924805
    9. ' return' → logprob: -9.013288497924805
    10. ' ' → logprob: -9.638288497924805

Token 589: ' ?????' (ID: 149222)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.47198405861854553
    2. 'return' → logprob: -2.2219841480255127
    3. ' self' → logprob: -2.3469841480255127
    4. '       ' → logprob: -2.4719841480255127
    5. '#' → logprob: -3.2219841480255127
    6. ' return' → logprob: -4.096983909606934
    7. 'base' → logprob: -4.596983909606934
    8. 'p' → logprob: -5.096983909606934
    9. ' base' → logprob: -5.721983909606934
    10. ' ' → logprob: -6.096983909606934

Token 590: '?' (ID: 30)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8209020495414734
    2. '(self' → logprob: -0.9459020495414734
    3. '(s' → logprob: -2.695902109146118
    4. ' (' → logprob: -2.945902109146118
    5. '   ' → logprob: -4.695901870727539
    6. 'def' → logprob: -4.945901870727539
    7. 'self' → logprob: -5.195901870727539
    8. ' self' → logprob: -5.445901870727539
    9. '(' → logprob: -5.445901870727539
    10. '(p' → logprob: -5.695901870727539

Token 591: 's' (ID: 82)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.7757211327552795
    2. 'def' → logprob: -1.9007210731506348
    3. '       ' → logprob: -2.0257210731506348
    4. 'self' → logprob: -2.4007210731506348
    5. '(self' → logprob: -2.4007210731506348
    6. 's' → logprob: -3.6507210731506348
    7. '   ' → logprob: -4.150721073150635
    8. 'return' → logprob: -4.525721073150635
    9. '
' → logprob: -5.525721073150635
    10. 'Point' → logprob: -5.650721073150635

Token 592: '????' (ID: 25883)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5883995890617371
    2. 'def' → logprob: -2.463399648666382
    3. '.p' → logprob: -2.588399648666382
    4. ',' → logprob: -2.838399648666382
    5. 'return' → logprob: -3.213399648666382
    6. '   ' → logprob: -3.213399648666382
    7. ')' → logprob: -3.463399648666382
    8. '):
' → logprob: -4.213399410247803
    9. ' return' → logprob: -4.463399410247803
    10. ' =' → logprob: -4.463399410247803

Token 593: '???' (ID: 33110)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7467679381370544
    2. 'return' → logprob: -0.8717679381370544
    3. 'def' → logprob: -2.746767997741699
    4. 'self' → logprob: -3.621767997741699
    5. '(self' → logprob: -5.371767997741699
    6. ' return' → logprob: -5.746767997741699
    7. 'p' → logprob: -6.246767997741699
    8. '   ' → logprob: -6.371767997741699
    9. '(' → logprob: -6.746767997741699
    10. ' def' → logprob: -7.371767997741699

Token 594: '§' (ID: 18596)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31886807084083557
    2. 'p' → logprob: -1.8188680410385132
    3. 'return' → logprob: -3.0688681602478027
    4. '   ' → logprob: -3.1938681602478027
    5. 'self' → logprob: -5.568868160247803
    6. ' return' → logprob: -5.818868160247803
    7. ' p' → logprob: -6.068868160247803
    8. '.p' → logprob: -6.693868160247803
    9. '#' → logprob: -6.818868160247803
    10. ' ' → logprob: -6.943868160247803

Token 595: '°' (ID: 6793)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6926276087760925
    2. 'p' → logprob: -1.3176276683807373
    3. '(p' → logprob: -2.6926276683807373
    4. '.p' → logprob: -3.3176276683807373
    5. ' p' → logprob: -3.8176276683807373
    6. '(' → logprob: -4.067627429962158
    7. '   ' → logprob: -4.067627429962158
    8. 's' → logprob: -4.317627429962158
    9. '        ' → logprob: -5.567627429962158
    10. '
' → logprob: -5.692627429962158

Token 596: '????' (ID: 25883)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.862379252910614
    2. '       ' → logprob: -2.112379312515259
    3. ' (' → logprob: -2.862379312515259
    4. '(' → logprob: -3.112379312515259
    5. '(self' → logprob: -3.112379312515259
    6. '.p' → logprob: -3.237379312515259
    7. 's' → logprob: -3.487379312515259
    8. '(s' → logprob: -3.612379312515259
    9. ')' → logprob: -3.737379312515259
    10. 'return' → logprob: -3.737379312515259

Token 597: '?' (ID: 30)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11267469078302383
    2. 'return' → logprob: -2.7376747131347656
    3. ' return' → logprob: -3.6126747131347656
    4. '   ' → logprob: -5.237674713134766
    5. 'p' → logprob: -6.237674713134766
    6. '(' → logprob: -6.612674713134766
    7. 'self' → logprob: -7.112674713134766
    8. '#' → logprob: -7.612674713134766
    9. '(p' → logprob: -7.612674713134766
    10. ' p' → logprob: -7.737674713134766

Token 598: '¨' (ID: 64259)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7636715173721313
    2. 'self' → logprob: -1.7636715173721313
    3. 'return' → logprob: -2.263671398162842
    4. '(' → logprob: -2.763671398162842
    5. '(self' → logprob: -2.888671398162842
    6. 's' → logprob: -3.763671398162842
    7. '(s' → logprob: -4.013671398162842
    8. '2' → logprob: -4.013671398162842
    9. 'def' → logprob: -4.263671398162842
    10. '*' → logprob: -4.513671398162842

Token 599: '????????' (ID: 85218)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.3567521572113037
    2. '(' → logprob: -1.4817521572113037
    3. '       ' → logprob: -2.2317521572113037
    4. ' (' → logprob: -2.6067521572113037
    5. 's' → logprob: -3.2317521572113037
    6. '   ' → logprob: -3.4817521572113037
    7. 'return' → logprob: -3.6067521572113037
    8. '(self' → logprob: -3.7317521572113037
    9. '(s' → logprob: -4.231752395629883
    10. '(Point' → logprob: -4.356752395629883

Token 600: '????????' (ID: 85218)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5678679943084717
    2. '       ' → logprob: -1.4428679943084717
    3. 'return' → logprob: -2.1928679943084717
    4. ' self' → logprob: -2.9428679943084717
    5. ' return' → logprob: -4.442868232727051
    6. '   ' → logprob: -5.442868232727051
    7. ' ' → logprob: -5.817868232727051
    8. '           ' → logprob: -5.942868232727051
    9. 's' → logprob: -6.067868232727051
    10. '
' → logprob: -6.317868232727051

Token 601: '?' (ID: 30)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23177087306976318
    2. 'return' → logprob: -2.4817709922790527
    3. ' return' → logprob: -3.2317709922790527
    4. ' =' → logprob: -3.8567709922790527
    5. '   ' → logprob: -4.481770992279053
    6. '2' → logprob: -4.731770992279053
    7. '=' → logprob: -4.731770992279053
    8. '
' → logprob: -4.981770992279053
    9. 'p' → logprob: -5.481770992279053
    10. ' ' → logprob: -5.606770992279053

Token 602: '¨' (ID: 64259)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6642978191375732
    2. 'self' → logprob: -1.6642978191375732
    3. '2' → logprob: -2.9142978191375732
    4. 'return' → logprob: -3.0392978191375732
    5. '
' → logprob: -3.2892978191375732
    6. ' self' → logprob: -3.4142978191375732
    7. ' return' → logprob: -3.6642978191375732
    8. 's' → logprob: -3.7892978191375732
    9. '(self' → logprob: -3.7892978191375732
    10. '(' → logprob: -4.664298057556152

Token 603: '????' (ID: 25883)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32395660877227783
    2. 'p' → logprob: -2.3239564895629883
    3. '
' → logprob: -3.5739564895629883
    4. '   ' → logprob: -3.8239564895629883
    5. '=' → logprob: -3.9489564895629883
    6. '(p' → logprob: -4.198956489562988
    7. ' p' → logprob: -4.198956489562988
    8. ' =' → logprob: -4.448956489562988
    9. '(' → logprob: -4.573956489562988
    10. '#' → logprob: -4.823956489562988

Token 604: '???' (ID: 33110)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5641009211540222
    2. 'return' → logprob: -1.189100980758667
    3. 'p' → logprob: -2.689100980758667
    4. ' return' → logprob: -3.314100980758667
    5. '   ' → logprob: -4.439100742340088
    6. ' p' → logprob: -5.939100742340088
    7. 'def' → logprob: -6.439100742340088
    8. 'self' → logprob: -6.939100742340088
    9. '=' → logprob: -7.689100742340088
    10. ' =' → logprob: -7.814100742340088

Token 605: '§' (ID: 18596)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043647464364767075
    2. 'return' → logprob: -4.668647289276123
    3. '   ' → logprob: -5.293647289276123
    4. '
' → logprob: -5.668647289276123
    5. ' return' → logprob: -5.668647289276123
    6. 's' → logprob: -5.918647289276123
    7. 'self' → logprob: -5.918647289276123
    8. 'def' → logprob: -6.043647289276123
    9. '2' → logprob: -6.168647289276123
    10. ' =' → logprob: -6.543647289276123

Token 606: '°' (ID: 6793)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.p' → logprob: -1.486358642578125
    2. '(p' → logprob: -1.611358642578125
    3. '       ' → logprob: -1.861358642578125
    4. '   ' → logprob: -2.736358642578125
    5. ' =' → logprob: -2.736358642578125
    6. '
' → logprob: -3.236358642578125
    7. '=' → logprob: -3.361358642578125
    8. ' p' → logprob: -3.611358642578125
    9. ' *' → logprob: -3.986358642578125
    10. ',' → logprob: -3.986358642578125

Token 607: '????????' (ID: 85218)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0749527215957642
    2. '(s' → logprob: -1.4499527215957642
    3. '(self' → logprob: -2.3249526023864746
    4. '(' → logprob: -2.5749526023864746
    5. ' *' → logprob: -3.3249526023864746
    6. 's' → logprob: -3.4499526023864746
    7. '*' → logprob: -3.5749526023864746
    8. '(p' → logprob: -3.9499526023864746
    9. ',' → logprob: -4.199952602386475
    10. 'return' → logprob: -4.324952602386475

Token 608: '????' (ID: 25883)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07116173952817917
    2. 's' → logprob: -4.07116174697876
    3. '(s' → logprob: -4.19616174697876
    4. 'self' → logprob: -5.07116174697876
    5. 'return' → logprob: -5.19616174697876
    6. '
' → logprob: -5.19616174697876
    7. '(self' → logprob: -5.57116174697876
    8. '(' → logprob: -6.07116174697876
    9. '*' → logprob: -6.32116174697876
    10. 'Point' → logprob: -6.82116174697876

Token 609: '??' (ID: 6961)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.0772839784622192
    2. 's' → logprob: -1.9522839784622192
    3. '(self' → logprob: -2.2022838592529297
    4. 'self' → logprob: -2.2022838592529297
    5. '(' → logprob: -2.3272838592529297
    6. '       ' → logprob: -2.4522838592529297
    7. '*' → logprob: -3.3272838592529297
    8. 'return' → logprob: -4.07728385925293
    9. '2' → logprob: -4.20228385925293
    10. 'def' → logprob: -4.57728385925293

Token 610: '§' (ID: 18596)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.3738446235656738
    2. 's' → logprob: -1.8738446235656738
    3. '(' → logprob: -1.9988446235656738
    4. ' *' → logprob: -2.623844623565674
    5. '*' → logprob: -2.748844623565674
    6. '       ' → logprob: -2.873844623565674
    7. ' self' → logprob: -2.998844623565674
    8. 'return' → logprob: -3.373844623565674
    9. ' return' → logprob: -3.873844623565674
    10. ' def' → logprob: -4.123844623565674

Token 611: '?' (ID: 30)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.057436488568782806
    2. '   ' → logprob: -3.432436466217041
    3. '(p' → logprob: -4.932436466217041
    4. 's' → logprob: -5.932436466217041
    5. ' =' → logprob: -6.182436466217041
    6. 'def' → logprob: -6.432436466217041
    7. '=' → logprob: -6.557436466217041
    8. '	' → logprob: -6.682436466217041
    9. 'return' → logprob: -7.182436466217041
    10. '        ' → logprob: -7.182436466217041

Token 612: '¨' (ID: 64259)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.041939377784729
    2. '       ' → logprob: -1.291939377784729
    3. '(p' → logprob: -1.291939377784729
    4. 's' → logprob: -3.6669392585754395
    5. '(
' → logprob: -4.4169392585754395
    6. '(' → logprob: -4.4169392585754395
    7. '   ' → logprob: -4.4169392585754395
    8. ' (' → logprob: -5.0419392585754395
    9. 'return' → logprob: -5.2919392585754395
    10. 'p' → logprob: -5.4169392585754395

Token 613: '?(' (ID: 34172)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2582100033760071
    2. '(s' → logprob: -2.1332099437713623
    3. '(self' → logprob: -2.8832099437713623
    4. 'self' → logprob: -3.8832099437713623
    5. 's' → logprob: -5.133210182189941
    6. 'def' → logprob: -5.258210182189941
    7. 'return' → logprob: -5.258210182189941
    8. '(' → logprob: -5.258210182189941
    9. '   ' → logprob: -5.508210182189941
    10. ' =' → logprob: -5.883210182189941

Token 614: '????' (ID: 25883)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6758805513381958
    2. ' s' → logprob: -1.1758805513381958
    3. 'self' → logprob: -2.8008804321289062
    4. ' self' → logprob: -3.5508804321289062
    5. '       ' → logprob: -3.5508804321289062
    6. 'return' → logprob: -4.300880432128906
    7. ')' → logprob: -4.300880432128906
    8. ' return' → logprob: -4.675880432128906
    9. ' def' → logprob: -4.925880432128906
    10. '2' → logprob: -5.800880432128906

Token 615: '°' (ID: 6793)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8616185188293457
    2. ')' → logprob: -1.2366185188293457
    3. '(' → logprob: -3.1116185188293457
    4. 'p' → logprob: -3.3616185188293457
    5. 's' → logprob: -3.4866185188293457
    6. ')
' → logprob: -4.111618518829346
    7. ' ' → logprob: -4.236618518829346
    8. '*' → logprob: -4.361618518829346
    9. '(p' → logprob: -4.486618518829346
    10. ' *' → logprob: -4.611618518829346

Token 616: '?)' (ID: 16918)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9706994295120239
    2. ')' → logprob: -1.470699429512024
    3. '(s' → logprob: -2.3456993103027344
    4. 's' → logprob: -2.4706993103027344
    5. '(' → logprob: -3.5956993103027344
    6. '*' → logprob: -3.5956993103027344
    7. '(p' → logprob: -4.095699310302734
    8. '#' → logprob: -4.095699310302734
    9. 'def' → logprob: -4.345699310302734
    10. '=' → logprob: -4.345699310302734

Token 617: '????' (ID: 25883)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02624979242682457
    2. 'return' → logprob: -4.651249885559082
    3. '*' → logprob: -4.776249885559082
    4. '   ' → logprob: -6.151249885559082
    5. '()' → logprob: -6.651249885559082
    6. '(' → logprob: -6.651249885559082
    7. 'self' → logprob: -7.151249885559082
    8. '           ' → logprob: -7.651249885559082
    9. ')' → logprob: -8.276249885559082
    10. ' return' → logprob: -8.276249885559082

Token 618: '±' (ID: 32438)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06714092195034027
    2. 'self' → logprob: -3.567140817642212
    3. 'return' → logprob: -4.567141056060791
    4. '           ' → logprob: -5.192141056060791
    5. '2' → logprob: -5.317141056060791
    6. '   ' → logprob: -6.192141056060791
    7. '(' → logprob: -6.317141056060791
    8. ' ' → logprob: -6.442141056060791
    9. ' self' → logprob: -6.442141056060791
    10. 's' → logprob: -6.567141056060791

Token 619: '????' (ID: 25883)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41657060384750366
    2. '(s' → logprob: -1.9165706634521484
    3. '(self' → logprob: -3.2915706634521484
    4. '(' → logprob: -3.5415706634521484
    5. 'self' → logprob: -3.7915706634521484
    6. 's' → logprob: -3.9165706634521484
    7. ')' → logprob: -4.291570663452148
    8. 'return' → logprob: -4.416570663452148
    9. ' =' → logprob: -4.541570663452148
    10. ' self' → logprob: -4.666570663452148

Token 620: '???
' (ID: 136325)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10195904970169067
    2. '(' → logprob: -3.726958990097046
    3. 'return' → logprob: -3.726958990097046
    4. '(self' → logprob: -4.851959228515625
    5. 'self' → logprob: -4.976959228515625
    6. ' return' → logprob: -5.351959228515625
    7. '()' → logprob: -5.601959228515625
    8. ')' → logprob: -5.726959228515625
    9. 'def' → logprob: -5.726959228515625
    10. '           ' → logprob: -6.226959228515625

Token 621: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01133604533970356
    2. 'self' → logprob: -4.761335849761963
    3. '
' → logprob: -7.136335849761963
    4. '(self' → logprob: -7.136335849761963
    5. '   ' → logprob: -7.511335849761963
    6. ' self' → logprob: -8.261336326599121
    7. 'return' → logprob: -9.011336326599121
    8. '(' → logprob: -10.261336326599121
    9. '        
' → logprob: -10.261336326599121
    10. 'def' → logprob: -10.511336326599121

Token 622: ' proj' (ID: 16022)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.23881645500659943
    2. 'r' → logprob: -2.488816499710083
    3. 'proj' (adapté à ' proj') → logprob: -2.738816499710083
    4. 'p' → logprob: -2.863816499710083
    5. 'base' → logprob: -6.363816261291504
    6. 'projection' → logprob: -6.738816261291504
    7. 'pr' → logprob: -6.988816261291504
    8. 'project' → logprob: -7.363816261291504
    9. '   ' → logprob: -7.613816261291504
    10. 'a' → logprob: -7.613816261291504

Token 623: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5077146291732788
    2. '=' → logprob: -1.5077146291732788
    3. 'ect' → logprob: -2.0077147483825684
    4. '=s' → logprob: -4.257714748382568
    5. 'ected' → logprob: -4.507714748382568
    6. 'ection' → logprob: -4.632714748382568
    7. '(s' → logprob: -5.882714748382568
    8. '_point' → logprob: -6.632714748382568
    9. '=self' → logprob: -6.882714748382568
    10. '   ' → logprob: -7.382714748382568

Token 624: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00272058742120862
    2. ' self' → logprob: -6.002720355987549
    3. '(self' → logprob: -8.377720832824707
    4. 's' → logprob: -11.752720832824707
    5. '       ' → logprob: -12.377720832824707
    6. 'Point' → logprob: -13.877720832824707
    7. '	self' → logprob: -13.877720832824707
    8. '   ' → logprob: -14.627720832824707
    9. ' ' → logprob: -15.377720832824707
    10. ' Point' → logprob: -16.50271987915039

Token 625: '.project' (ID: 24908)
  Prédit: '.project'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.project' → logprob: -0.0027847886085510254
    2. '.s' → logprob: -6.752784729003906
    3. '.' → logprob: -7.127784729003906
    4. '.reflect' → logprob: -8.127784729003906
    5. '(s' → logprob: -8.502784729003906
    6. ' .' → logprob: -9.002784729003906
    7. '.pro' → logprob: -9.752784729003906
    8. ').' → logprob: -10.377784729003906
    9. '.point' → logprob: -10.877784729003906
    10. 'project' → logprob: -10.877784729003906

Token 626: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.9266199160483666e-05
    2. 's' → logprob: -10.875019073486328
    3. '(' → logprob: -15.125019073486328
    4. ' s' → logprob: -18.000019073486328
    5. ' (' → logprob: -18.000019073486328
    6. '(
' → logprob: -18.875019073486328
    7. '[s' → logprob: -21.375019073486328
    8. '	s' → logprob: -21.750019073486328
    9. ')s' → logprob: -21.750019073486328
    10. ')' → logprob: -21.875019073486328

Token 627: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16039523482322693
    2. ')' → logprob: -1.9103952646255493
    3. ')
' → logprob: -8.910395622253418
    4. ')*' → logprob: -11.535395622253418
    5. 's' → logprob: -11.660395622253418
    6. ' )
' → logprob: -12.285395622253418
    7. ')s' → logprob: -12.410395622253418
    8. ')

' → logprob: -12.785395622253418
    9. '(s' → logprob: -13.910395622253418
    10. ' s' → logprob: -13.910395622253418

Token 628: '       ' (ID: 309)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10183126479387283
    2. ' *' → logprob: -2.3518311977386475
    3. 'return' → logprob: -6.851831436157227
    4. ' return' → logprob: -8.976831436157227
    5. '(' → logprob: -9.476831436157227
    6. '   ' → logprob: -9.851831436157227
    7. ' +' → logprob: -10.226831436157227
    8. ' =' → logprob: -10.226831436157227
    9. ')' → logprob: -10.476831436157227
    10. '	' → logprob: -10.601831436157227

Token 629: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -2.9160102712921798e-05
    2. ' return' → logprob: -10.500029563903809
    3. '       ' → logprob: -13.875029563903809
    4. '	return' → logprob: -15.125029563903809
    5. '   ' → logprob: -15.375029563903809
    6. 'vec' → logprob: -16.750028610229492
    7. 'ret' → logprob: -17.125028610229492
    8. 'r' → logprob: -18.125028610229492
    9. 'vector' → logprob: -18.375028610229492
    10. '        
' → logprob: -18.500028610229492

Token 630: ' self' (ID: 1051)
  Prédit: 'proj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'proj' → logprob: -5.598092684522271e-05
    2. 'Point' → logprob: -10.000056266784668
    3. ' proj' → logprob: -11.500056266784668
    4. 'pro' → logprob: -15.750056266784668
    5. 'project' → logprob: -16.12505531311035
    6. 'prof' → logprob: -17.00005531311035
    7. ' Point' → logprob: -17.25005531311035
    8. 'projection' → logprob: -17.37505531311035
    9. '(' → logprob: -17.75005531311035
    10. '2' → logprob: -18.00005531311035

Token 631: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.9334365725517273
    2. ' +' → logprob: -1.183436632156372
    3. ' *' → logprob: -1.308436632156372
    4. '+' → logprob: -3.558436632156372
    5. '.reflect' → logprob: -6.558436393737793
    6. 'reflect' → logprob: -8.183436393737793
    7. ' ' → logprob: -10.058436393737793
    8. 'Reflect' → logprob: -10.433436393737793
    9. '+(' → logprob: -11.058436393737793
    10. '__' → logprob: -11.433436393737793

Token 632: ' (' (ID: 350)
  Prédit: '(pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pro' → logprob: -0.000619388825725764
    2. ' (' → logprob: -7.625619411468506
    3. '(project' → logprob: -9.125618934631348
    4. 'proj' → logprob: -11.125618934631348
    5. '(Point' → logprob: -12.500618934631348
    6. '(' → logprob: -14.125618934631348
    7. 'Point' → logprob: -14.500618934631348
    8. '(prod' → logprob: -14.875618934631348
    9. '(p' → logprob: -15.125618934631348
    10. ' proj' → logprob: -15.250618934631348

Token 633: 'proj' (ID: 75737)
  Prédit: 'proj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'proj' → logprob: -0.07915877550840378
    2. '(pro' → logprob: -2.5791587829589844
    3. ' proj' → logprob: -9.079158782958984
    4. 'Point' → logprob: -9.579158782958984
    5. 'pro' → logprob: -10.454158782958984
    6. ' (' → logprob: -10.704158782958984
    7. '(project' → logprob: -11.204158782958984
    8. 'project' → logprob: -11.454158782958984
    9. '(Point' → logprob: -13.079158782958984
    10. 'prof' → logprob: -13.329158782958984

Token 634: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2519364058971405
    2. '-' → logprob: -1.501936435699463
    3. '*' → logprob: -12.001935958862305
    4. ' *' → logprob: -14.501935958862305
    5. '-ref' → logprob: -15.126935958862305
    6. '-project' → logprob: -15.751935958862305
    7. ' ' → logprob: -17.001935958862305
    8. '-pro' → logprob: -17.126935958862305
    9. '−' → logprob: -17.501935958862305
    10. '	' → logprob: -18.001935958862305

Token 635: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00022642381372861564
    2. '(self' → logprob: -8.750226020812988
    3. ' self' → logprob: -9.625226020812988
    4. '(' → logprob: -13.750226020812988
    5. ' (' → logprob: -14.625226020812988
    6. 'proj' → logprob: -15.000226020812988
    7. 's' → logprob: -17.250226974487305
    8. 'sel' → logprob: -17.750226974487305
    9. '	self' → logprob: -18.000226974487305
    10. ' ' → logprob: -18.875226974487305

Token 636: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012513887137174606
    2. ')*' → logprob: -4.387514114379883
    3. '）' → logprob: -13.012514114379883
    4. ' )' → logprob: -13.762514114379883
    5. ')*(' → logprob: -14.637514114379883
    6. '*' → logprob: -14.887514114379883
    7. '*)' → logprob: -16.012514114379883
    8. ')<<' → logprob: -17.137514114379883
    9. ' ' → logprob: -17.387514114379883
    10. '   ' → logprob: -17.637514114379883

Token 637: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.75
    3. 'Point' → logprob: -16.5
    4. '２' → logprob: -17.875
    5. '(' → logprob: -20.0
    6. '   ' → logprob: -20.25
    7. '۲' → logprob: -21.25
    8. '"' → logprob: -21.75
    9. '1' → logprob: -21.75
    10. '  ' → logprob: -21.875

Token 638: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 639: '   ' (ID: 271)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00099958258215338
    2. '
' → logprob: -7.000999450683594
    3. ' class' → logprob: -10.000999450683594
    4. 'import' → logprob: -12.125999450683594
    5. ')' → logprob: -12.250999450683594
    6. 'Point' → logprob: -12.250999450683594
    7. '   ' → logprob: -13.000999450683594
    8. '

' → logprob: -13.000999450683594
    9. '#' → logprob: -13.000999450683594
    10. 's' → logprob: -13.125999450683594

Token 640: ' def' (ID: 1056)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0037184846587479115
    2. '
' → logprob: -5.628718376159668
    3. ' class' → logprob: -10.503718376159668
    4. 'from' → logprob: -10.753718376159668
    5. 'import' → logprob: -11.753718376159668
    6. '

' → logprob: -11.753718376159668
    7. '    
' → logprob: -11.878718376159668
    8. 'Point' → logprob: -12.003718376159668
    9. 'Vector' → logprob: -12.253718376159668
    10. ')
' → logprob: -12.503718376159668

Token 641: ' distance' (ID: 9324)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -1.292108416557312
    2. 'repr' → logprob: -1.542108416557312
    3. ' rotate' → logprob: -2.1671085357666016
    4. 'rot' → logprob: -2.1671085357666016
    5. 'str' → logprob: -2.7921085357666016
    6. 'distance' → logprob: -3.2921085357666016
    7. ' as' → logprob: -3.6671085357666016
    8. 'as' → logprob: -3.7921085357666016
    9. ' __' → logprob: -4.042108535766602
    10. '__' → logprob: -4.167108535766602

Token 642: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0007947356207296252
    2. '(' → logprob: -7.875794887542725
    3. '(s' → logprob: -8.375794410705566
    4. '_to' → logprob: -9.125794410705566
    5. ' (' → logprob: -10.625794410705566
    6. '_point' → logprob: -11.625794410705566
    7. '   ' → logprob: -11.875794410705566
    8. '(point' → logprob: -12.000794410705566
    9. 'self' → logprob: -12.375794410705566
    10. 's' → logprob: -12.625794410705566

Token 643: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001666134805418551
    2. ',self' → logprob: -7.251666069030762
    3. ',s' → logprob: -8.126666069030762
    4. 'self' → logprob: -8.251666069030762
    5. '(self' → logprob: -8.501666069030762
    6. '   ' → logprob: -9.376666069030762
    7. ' ,' → logprob: -10.251666069030762
    8. '       ' → logprob: -10.751666069030762
    9. 's' → logprob: -11.126666069030762
    10. ',p' → logprob: -11.251666069030762

Token 644: ' s' (ID: 265)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.22553525865077972
    2. 'other' → logprob: -1.725535273551941
    3. ' p' → logprob: -4.1005353927612305
    4. ' other' → logprob: -4.9755353927612305
    5. ' ' → logprob: -8.47553539276123
    6. 'self' → logprob: -9.10053539276123
    7. '   ' → logprob: -11.22553539276123
    8. 'point' → logprob: -11.35053539276123
    9. 's' → logprob: -12.47553539276123
    10. '	p' → logprob: -12.60053539276123

Token 645: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6376035213470459
    2. '):' → logprob: -0.7626035213470459
    3. '):
' → logprob: -5.762603759765625
    4. ',' → logprob: -6.387603759765625
    5. ')' → logprob: -10.387603759765625
    6. 's' → logprob: -10.762603759765625
    7. '):

' → logprob: -10.762603759765625
    8. '   ' → logprob: -11.012603759765625
    9. 'self' → logprob: -11.387603759765625
    10. '_point' → logprob: -11.637603759765625

Token 646: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0069123911671340466
    2. 'if' → logprob: -5.2569122314453125
    3. 'return' → logprob: -6.5069122314453125
    4. ' if' → logprob: -9.256912231445312
    5. '   ' → logprob: -9.631912231445312
    6. ' return' → logprob: -11.131912231445312
    7. '      ' → logprob: -12.756912231445312
    8. '#' → logprob: -12.881912231445312
    9. 'def' → logprob: -13.881912231445312
    10. '     ' → logprob: -14.756912231445312

Token 647: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4571065306663513
    2. '       ' → logprob: -1.207106590270996
    3. 'if' → logprob: -2.707106590270996
    4. '   ' → logprob: -7.082106590270996
    5. 'def' → logprob: -9.082106590270996
    6. ' return' → logprob: -10.082106590270996
    7. '"""' → logprob: -10.457106590270996
    8. 'proj' → logprob: -10.457106590270996
    9. '#' (adapté à ' #') → logprob: -10.582106590270996
    10. ' if' → logprob: -12.582106590270996

Token 648: ' ?????' (ID: 149222)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011050177738070488
    2. '   ' → logprob: -5.636050224304199
    3. ' def' → logprob: -6.136050224304199
    4. '       ' → logprob: -6.386050224304199
    5. 'self' → logprob: -6.386050224304199
    6. 'Point' → logprob: -7.511050224304199
    7. 'None' → logprob: -7.761050224304199
    8. '"""
' → logprob: -8.7610502243042
    9. '#' → logprob: -8.8860502243042
    10. '
' → logprob: -9.1360502243042

Token 649: '???' (ID: 33110)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3349462151527405
    2. 'def' → logprob: -2.7099461555480957
    3. 'self' → logprob: -2.7099461555480957
    4. '(self' → logprob: -2.7099461555480957
    5. '   ' → logprob: -3.2099461555480957
    6. 'return' → logprob: -4.334946155548096
    7. 'elf' → logprob: -4.834946155548096
    8. ' self' → logprob: -5.459946155548096
    9. 'from' → logprob: -5.834946155548096
    10. 'if' → logprob: -6.084946155548096

Token 650: '¨' (ID: 64259)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3054647743701935
    2. 'self' → logprob: -2.055464744567871
    3. 'return' → logprob: -2.680464744567871
    4. '       ' → logprob: -3.305464744567871
    5. '   ' → logprob: -4.805464744567871
    6. '(self' → logprob: -5.305464744567871
    7. ' def' → logprob: -5.680464744567871
    8. 's' → logprob: -5.805464744567871
    9. 'distance' → logprob: -6.055464744567871
    10. 'project' → logprob: -6.305464744567871

Token 651: '????' (ID: 25883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.34594520926475525
    2. 'self' → logprob: -2.595945119857788
    3. '(' → logprob: -3.470945119857788
    4. '.distance' → logprob: -3.595945119857788
    5. '       ' → logprob: -3.720945119857788
    6. '=' → logprob: -3.845945119857788
    7. 'def' → logprob: -3.970945119857788
    8. '   ' → logprob: -4.220945358276367
    9. 'distance' → logprob: -4.470945358276367
    10. ')' → logprob: -4.595945358276367

Token 652: '??' (ID: 6961)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8374044895172119
    2. '       ' → logprob: -1.462404489517212
    3. 'self' → logprob: -2.212404489517212
    4. '   ' → logprob: -2.712404489517212
    5. 'return' → logprob: -3.712404489517212
    6. 'distance' → logprob: -3.962404489517212
    7. '(self' → logprob: -3.962404489517212
    8. '(' → logprob: -4.087404251098633
    9. 'if' → logprob: -4.712404251098633
    10. 's' → logprob: -4.837404251098633

Token 653: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6373944282531738
    2. ' s' → logprob: -1.6373944282531738
    3. 'def' → logprob: -2.262394428253174
    4. 'Point' → logprob: -3.137394428253174
    5. 'self' → logprob: -3.137394428253174
    6. '   ' → logprob: -4.012394428253174
    7. '       ' → logprob: -4.637394428253174
    8. 'distance' → logprob: -4.887394428253174
    9. '
' → logprob: -5.137394428253174
    10. 'project' → logprob: -5.262394428253174

Token 654: '????????' (ID: 85218)
  Prédit: '.distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.distance' → logprob: -0.8173230290412903
    2. '.project' → logprob: -1.4423229694366455
    3. 'def' → logprob: -2.0673229694366455
    4. '.' → logprob: -2.8173229694366455
    5. 'distance' → logprob: -3.1923229694366455
    6. '.point' → logprob: -4.192323207855225
    7. 'project' → logprob: -4.317323207855225
    8. ' ' → logprob: -4.567323207855225
    9. '   ' → logprob: -5.067323207855225
    10. '.p' → logprob: -5.317323207855225

Token 655: '¢' (ID: 61242)
  Prédit: '.project'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.project' → logprob: -1.420703649520874
    2. '       ' → logprob: -1.670703649520874
    3. 'project' → logprob: -1.670703649520874
    4. 'def' → logprob: -2.170703649520874
    5. 'distance' → logprob: -2.670703649520874
    6. 'return' → logprob: -2.920703649520874
    7. '   ' → logprob: -3.545703649520874
    8. '.distance' → logprob: -3.545703649520874
    9. '
' → logprob: -3.920703649520874
    10. ' def' → logprob: -3.920703649520874

Token 656: '????' (ID: 25883)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25416186451911926
    2. 'distance' → logprob: -2.629161834716797
    3. ' return' → logprob: -2.754161834716797
    4. 'return' → logprob: -3.254161834716797
    5. '.distance' → logprob: -4.004161834716797
    6. ' distance' → logprob: -4.379161834716797
    7. 'project' → logprob: -5.629161834716797
    8. '.project' → logprob: -5.629161834716797
    9. 'def' → logprob: -5.754161834716797
    10. ' def' → logprob: -6.254161834716797

Token 657: '¨' (ID: 64259)
  Prédit: '.distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.distance' → logprob: -0.10546474158763885
    2. 'distance' → logprob: -3.2304646968841553
    3. '.' → logprob: -3.7304646968841553
    4. '.abs' → logprob: -4.730464935302734
    5. 'def' → logprob: -5.355464935302734
    6. '
' → logprob: -5.855464935302734
    7. '.project' → logprob: -5.980464935302734
    8. ')' → logprob: -6.105464935302734
    9. '(self' → logprob: -6.480464935302734
    10. '.point' → logprob: -6.605464935302734

Token 658: '????????' (ID: 85218)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.5168006420135498
    2. 's' → logprob: -1.7668006420135498
    3. '       ' → logprob: -2.51680064201355
    4. ')' → logprob: -2.76680064201355
    5. '   ' → logprob: -2.89180064201355
    6. 'self' → logprob: -3.26680064201355
    7. '(s' → logprob: -3.26680064201355
    8. '
' → logprob: -3.39180064201355
    9. '.distance' → logprob: -3.39180064201355
    10. ' s' → logprob: -3.89180064201355

Token 659: '??
' (ID: 108055)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11727601289749146
    2. 'self' → logprob: -3.4922759532928467
    3. 'def' → logprob: -3.8672759532928467
    4. '(self' → logprob: -4.742276191711426
    5. '   ' → logprob: -4.992276191711426
    6. 's' → logprob: -5.242276191711426
    7. 'distance' → logprob: -5.242276191711426
    8. 'return' → logprob: -5.367276191711426
    9. ')' → logprob: -5.492276191711426
    10. '):
' → logprob: -5.992276191711426

Token 660: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10438035428524017
    2. 'return' → logprob: -2.7293803691864014
    3. ' return' → logprob: -3.4793803691864014
    4. ' if' → logprob: -6.479380130767822
    5. '(' → logprob: -7.604380130767822
    6. 'if' → logprob: -7.979380130767822
    7. 'def' → logprob: -8.85438060760498
    8. '   ' → logprob: -9.10438060760498
    9. 'self' → logprob: -9.35438060760498
    10. ' =' → logprob: -9.85438060760498

Token 661: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3203684389591217
    2. 'if' (adapté à ' if') → logprob: -1.3203684091567993
    3. 'proj' → logprob: -5.44536828994751
    4. '   ' → logprob: -6.94536828994751
    5. 'p' → logprob: -7.57036828994751
    6. 'r' → logprob: -7.69536828994751
    7. ' return' → logprob: -8.445368766784668
    8. '#' → logprob: -9.195368766784668
    9. '"""' → logprob: -9.570368766784668
    10. '       ' → logprob: -9.820368766784668

Token 662: ' Vector' (ID: 8764)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.051679376512765884
    2. 'type' → logprob: -3.1766793727874756
    3. ' isinstance' → logprob: -5.051679611206055
    4. 's' → logprob: -6.676679611206055
    5. 'self' → logprob: -7.301679611206055
    6. '   ' → logprob: -8.426679611206055
    7. '  ' → logprob: -10.301679611206055
    8. '(is' → logprob: -10.801679611206055
    9. 'not' → logprob: -11.676679611206055
    10. '    ' → logprob: -12.051679611206055

Token 663: '.dot' (ID: 52692)
  Prédit: '.cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cross' → logprob: -0.030862608924508095
    2. '.cc' → logprob: -4.155862808227539
    3. '.dot' → logprob: -4.530862808227539
    4. '.is' → logprob: -5.780862808227539
    5. '.col' → logprob: -8.155862808227539
    6. 'cross' → logprob: -8.405862808227539
    7. 'cc' → logprob: -8.905862808227539
    8. '.__' → logprob: -9.780862808227539
    9. 'dot' → logprob: -10.655862808227539
    10. '.distance' → logprob: -10.905862808227539

Token 664: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.40638649463653564
    2. '(self' → logprob: -1.1563864946365356
    3. '(Vector' → logprob: -4.031386375427246
    4. '((' → logprob: -7.031386375427246
    5. 'self' → logprob: -7.656386375427246
    6. '(Point' → logprob: -8.906386375427246
    7. '(a' → logprob: -10.281386375427246
    8. '(' → logprob: -10.906386375427246
    9. 's' → logprob: -11.031386375427246
    10. 'Vector' → logprob: -11.656386375427246

Token 665: '.p' (ID: 1201)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.27141645550727844
    2. 'Vector' → logprob: -1.521416425704956
    3. 'Point' → logprob: -4.896416664123535
    4. '(Vector' → logprob: -5.021416664123535
    5. 'self' → logprob: -5.771416664123535
    6. '(s' → logprob: -6.646416664123535
    7. ' Vector' → logprob: -8.271416664123535
    8. 'p' → logprob: -9.146416664123535
    9. ' s' → logprob: -9.521416664123535
    10. '(Point' → logprob: -9.646416664123535

Token 666: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09437847882509232
    2. '2' → logprob: -2.4693784713745117
    3. 'p' → logprob: -5.219378471374512
    4. '.p' → logprob: -11.719378471374512
    5. ' p' → logprob: -13.594378471374512
    6. 'oint' → logprob: -13.719378471374512
    7. '   ' → logprob: -14.844378471374512
    8. 's' → logprob: -15.219378471374512
    9. 'oints' → logprob: -15.344378471374512
    10. '
' → logprob: -15.469378471374512

Token 667: '-s' (ID: 2011)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004082909319549799
    2. ' -' → logprob: -5.504082679748535
    3. 's' → logprob: -12.504082679748535
    4. '-
' → logprob: -15.504082679748535
    5. '-p' → logprob: -16.00408363342285
    6. '–' → logprob: -16.25408363342285
    7. '-self' → logprob: -16.50408363342285
    8. ' ' → logprob: -16.62908363342285
    9. '-s' → logprob: -16.75408363342285
    10. '-point' → logprob: -17.00408363342285

Token 668: '.p' (ID: 1201)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5267913341522217
    2. 's' → logprob: -1.6517913341522217
    3. '.s' → logprob: -1.6517913341522217
    4. 'p' → logprob: -3.9017913341522217
    5. 'oint' → logprob: -6.401791572570801
    6. 'oints' → logprob: -6.526791572570801
    7. '.p' → logprob: -6.776791572570801
    8. ' s' → logprob: -7.276791572570801
    9. 'self' → logprob: -8.0267915725708
    10. '   ' → logprob: -8.6517915725708

Token 669: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0016872010892257094
    2. 'oint' → logprob: -6.501687049865723
    3. 'p' → logprob: -9.126687049865723
    4. 'oints' → logprob: -9.751687049865723
    5. 's' → logprob: -11.376687049865723
    6. 'oin' → logprob: -13.501687049865723
    7. 't' → logprob: -13.751687049865723
    8. 'r' → logprob: -13.876687049865723
    9. 'self' → logprob: -13.876687049865723
    10. '   ' → logprob: -14.376687049865723

Token 670: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015407454338856041
    2. ',s' → logprob: -9.125154495239258
    3. ' ,' → logprob: -10.375154495239258
    4. ',self' → logprob: -11.750154495239258
    5. ',
' → logprob: -13.000154495239258
    6. 's' → logprob: -14.125154495239258
    7. ',p' → logprob: -14.125154495239258
    8. '   ' → logprob: -14.250154495239258
    9. 'self' → logprob: -14.500154495239258
    10. ',a' → logprob: -15.125154495239258

Token 671: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00040898515726439655
    2. 's' → logprob: -8.875409126281738
    3. '(self' → logprob: -9.000409126281738
    4. ' self' → logprob: -9.000409126281738
    5. 'Point' → logprob: -11.375409126281738
    6. 'Vector' → logprob: -12.375409126281738
    7. ' ' → logprob: -12.875409126281738
    8. '   ' → logprob: -13.375409126281738
    9. '	self' → logprob: -13.375409126281738
    10. '  ' → logprob: -15.125409126281738

Token 672: '-s' (ID: 2011)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3350691795349121
    2. '-s' → logprob: -1.835069179534912
    3. ' -' → logprob: -2.085069179534912
    4. '-p' → logprob: -7.710069179534912
    5. '-self' → logprob: -8.58506965637207
    6. '-v' → logprob: -9.33506965637207
    7. '-point' → logprob: -10.46006965637207
    8. 's' → logprob: -10.83506965637207
    9. '-position' → logprob: -11.58506965637207
    10. '-vector' → logprob: -11.96006965637207

Token 673: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.00022237090161070228
    2. 'p' → logprob: -9.250222206115723
    3. '.s' → logprob: -9.250222206115723
    4. 's' → logprob: -11.875222206115723
    5. ')' → logprob: -12.375222206115723
    6. '.' → logprob: -12.500222206115723
    7. '<p' → logprob: -12.750222206115723
    8. '1' → logprob: -12.875222206115723
    9. '(p' → logprob: -13.625222206115723
    10. '.x' → logprob: -13.750222206115723

Token 674: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.370294846012257e-05
    2. 'p' → logprob: -10.125043869018555
    3. 's' → logprob: -13.250043869018555
    4. ' p' → logprob: -14.500043869018555
    5. '.p' → logprob: -15.750043869018555
    6. 'oint' → logprob: -15.875043869018555
    7. 'oints' → logprob: -16.250043869018555
    8. '```' → logprob: -16.312543869018555
    9. '   ' → logprob: -16.500043869018555
    10. '１' → logprob: -16.562543869018555

Token 675: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013047587708570063
    2. ')<' → logprob: -9.000130653381348
    3. '   ' → logprob: -13.000130653381348
    4. ')<=' → logprob: -13.250130653381348
    5. ' )' → logprob: -13.750130653381348
    6. '）' → logprob: -14.750130653381348
    7. '       ' → logprob: -15.000130653381348
    8. ')
' → logprob: -15.125130653381348
    9. ')==' → logprob: -15.250130653381348
    10. '<' → logprob: -16.00012969970703

Token 676: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.1269489973783493
    2. ' <' → logprob: -2.1269490718841553
    3. '<=' → logprob: -11.251949310302734
    4. '()<' → logprob: -12.501949310302734
    5. '   ' → logprob: -13.626949310302734
    6. ' ' → logprob: -13.751949310302734
    7. ' <=' → logprob: -13.751949310302734
    8. '＜' → logprob: -15.876949310302734
    9. '       ' → logprob: -16.001949310302734
    10. '<Vector' → logprob: -16.251949310302734

Token 677: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009403997100889683
    2. 'Point' → logprob: -4.759404182434082
    3. ' ' → logprob: -7.384404182434082
    4. ' Point' → logprob: -9.009404182434082
    5. '-' → logprob: -10.759404182434082
    6. '-point' → logprob: -11.259404182434082
    7. '	Point' → logprob: -12.384404182434082
    8. '   ' → logprob: -13.009404182434082
    9. ' -' → logprob: -13.134404182434082
    10. 'Vector' → logprob: -13.384404182434082

Token 678: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0057575455866754055
    2. 'Point' → logprob: -5.2557573318481445
    3. '-point' → logprob: -8.255757331848145
    4. '-' → logprob: -8.880757331848145
    5. ' ' → logprob: -9.505757331848145
    6. 'Vector' → logprob: -10.755757331848145
    7. ' Point' → logprob: -10.880757331848145
    8. '-P' → logprob: -12.130757331848145
    9. ' -' → logprob: -13.505757331848145
    10. '	Point' → logprob: -13.630757331848145

Token 679: '.' (ID: 13)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6148029565811157
    2. '       ' → logprob: -1.6148029565811157
    3. ':
' → logprob: -2.114802837371826
    4. ' or' → logprob: -2.239802837371826
    5. '<|end|>' → logprob: -4.864802837371826
    6. ':return' → logprob: -4.989802837371826
    7. '        ' → logprob: -5.864802837371826
    8. ')' → logprob: -5.864802837371826
    9. '   ' → logprob: -5.864802837371826
    10. '):
' → logprob: -6.114802837371826

Token 680: '0' (ID: 15)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.7507173418998718
    2. '0' → logprob: -1.3757174015045166
    3. ' Point' → logprob: -1.3757174015045166
    4. ' ' → logprob: -3.8757174015045166
    5. '   ' → logprob: -7.6257171630859375
    6. '       ' → logprob: -8.375717163085938
    7. '	Point' → logprob: -8.750717163085938
    8. '1' → logprob: -9.250717163085938
    9. '<Point' → logprob: -9.250717163085938
    10. '.Point' → logprob: -9.375717163085938

Token 681: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.0610518641769886
    2. ':' → logprob: -3.311051845550537
    3. '       ' → logprob: -4.311051845550537
    4. ' or' → logprob: -4.811051845550537
    5. '   ' → logprob: -8.186052322387695
    6. '           ' → logprob: -8.186052322387695
    7. ':return' → logprob: -8.436052322387695
    8. ':
' → logprob: -8.811052322387695
    9. '):
' → logprob: -9.311052322387695
    10. ' :
' → logprob: -9.561052322387695

Token 682: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005268265027552843
    2. '           ' → logprob: -5.630268096923828
    3. ' return' → logprob: -6.880268096923828
    4. '   ' → logprob: -8.505268096923828
    5. 'return' → logprob: -8.505268096923828
    6. ' or' → logprob: -9.130268096923828
    7. '        ' → logprob: -10.255268096923828
    8. '      ' → logprob: -11.005268096923828
    9. '0' → logprob: -11.255268096923828
    10. '
' → logprob: -11.255268096923828

Token 683: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08070335537195206
    2. 'abs' → logprob: -2.5807032585144043
    3. 'sqrt' → logprob: -7.080703258514404
    4. ' return' → logprob: -7.705703258514404
    5. '       ' → logprob: -7.955703258514404
    6. ' abs' → logprob: -9.330703735351562
    7. '(abs' → logprob: -10.330703735351562
    8. '           ' → logprob: -10.705703735351562
    9. '   ' → logprob: -11.955703735351562
    10. 'fabs' → logprob: -12.205703735351562

Token 684: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0033173307310789824
    2. 'sqrt' → logprob: -5.753317356109619
    3. '(abs' → logprob: -9.128316879272461
    4. ' abs' → logprob: -10.503316879272461
    5. 'fabs' → logprob: -13.503316879272461
    6. 'math' → logprob: -14.003316879272461
    7. ' sqrt' → logprob: -14.753316879272461
    8. '(' → logprob: -15.503316879272461
    9. 'Vector' → logprob: -15.628316879272461
    10. 'self' → logprob: -16.00331687927246

Token 685: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.018180612474679947
    2. 'self' → logprob: -4.018180847167969
    3. ' self' → logprob: -11.268180847167969
    4. '(' → logprob: -11.518180847167969
    5. '(s' → logprob: -11.893180847167969
    6. '       ' → logprob: -14.768180847167969
    7. '(
' → logprob: -15.143180847167969
    8. ' (' → logprob: -15.768180847167969
    9. 's' → logprob: -15.768180847167969
    10. '	self' → logprob: -15.768180847167969

Token 686: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6954821348190308
    2. ' -' → logprob: -0.6954821348190308
    3. '-s' → logprob: -6.07048225402832
    4. ' ' → logprob: -11.57048225402832
    5. 's' → logprob: -11.69548225402832
    6. '-p' → logprob: -12.82048225402832
    7. '-
' → logprob: -14.69548225402832
    8. '-self' → logprob: -15.69548225402832
    9. ' ' → logprob: -15.94548225402832
    10. ' -
' → logprob: -15.94548225402832

Token 687: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0008134396048262715
    2. ' s' → logprob: -7.1258134841918945
    3. 'Point' → logprob: -12.000813484191895
    4. '   ' → logprob: -14.000813484191895
    5. '       ' → logprob: -14.750813484191895
    6. '(s' → logprob: -15.250813484191895
    7. '	s' → logprob: -15.500813484191895
    8. 'p' → logprob: -15.500813484191895
    9. ' Point' → logprob: -15.500813484191895
    10. ' ' → logprob: -15.625813484191895

Token 688: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0015128388768061996
    2. 'p' → logprob: -6.5015130043029785
    3. '.' → logprob: -12.12651252746582
    4. '1' → logprob: -12.75151252746582
    5. '<p' → logprob: -14.12651252746582
    6. '[' → logprob: -14.75151252746582
    7. ' p' → logprob: -15.12651252746582
    8. ' .' → logprob: -15.25151252746582
    9. '0' → logprob: -16.25151252746582
    10. 's' → logprob: -16.25151252746582

Token 689: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.632542913896032e-05
    2. 'oint' → logprob: -10.000046730041504
    3. 'oints' → logprob: -14.125046730041504
    4. 'oin' → logprob: -16.750045776367188
    5. 'p' → logprob: -17.625045776367188
    6. 't' → logprob: -18.000045776367188
    7. 'nt' → logprob: -18.375045776367188
    8. 'oi' → logprob: -18.375045776367188
    9. '１' → logprob: -18.375045776367188
    10. 'unction' → logprob: -19.500045776367188

Token 690: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0221682321280241
    2. ')
' → logprob: -4.397168159484863
    3. '       ' → logprob: -4.647168159484863
    4. ')
' → logprob: -11.147168159484863
    5. ' )' → logprob: -12.647168159484863
    6. '   ' → logprob: -13.272168159484863
    7. '	' → logprob: -13.647168159484863
    8. ')

' → logprob: -14.022168159484863
    9. ')return' → logprob: -14.147168159484863
    10. ' )
' → logprob: -15.397168159484863

Token 691: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00027254095766693354
    2. '
' → logprob: -9.500272750854492
    3. 'if' → logprob: -9.625272750854492
    4. ' if' → logprob: -9.875272750854492
    5. ')' → logprob: -10.375272750854492
    6. '   ' → logprob: -11.250272750854492
    7. 'return' → logprob: -11.625272750854492
    8. '           ' → logprob: -12.000272750854492
    9. ')
' → logprob: -12.375272750854492
    10. '	' → logprob: -12.625272750854492

Token 692: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3549886643886566
    2. 'if' (adapté à ' if') → logprob: -1.229988694190979
    3. ' if' → logprob: -5.2299885749816895
    4. 'elif' → logprob: -6.9799885749816895
    5. '   ' → logprob: -8.979989051818848
    6. '
' → logprob: -9.479989051818848
    7. ' elif' → logprob: -11.979989051818848
    8. 'from' → logprob: -12.229989051818848
    9. ')' → logprob: -12.354989051818848
    10. '           ' → logprob: -12.479989051818848

Token 693: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.00043126524542458355
    2. ' Vector' → logprob: -7.750431060791016
    3. '   ' → logprob: -15.375431060791016
    4. '	Vector' → logprob: -15.375431060791016
    5. '(Vector' → logprob: -16.500431060791016
    6. '  ' → logprob: -16.875431060791016
    7. '<Vector' → logprob: -17.375431060791016
    8. ' ' → logprob: -17.500431060791016
    9. '       ' → logprob: -18.875431060791016
    10. '_Vector' → logprob: -19.000431060791016

Token 694: '.dot' (ID: 52692)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.12695321440696716
    2. '.dot' → logprob: -2.126953125
    3. ' dot' → logprob: -11.501953125
    4. '_dot' → logprob: -12.126953125
    5. '(dot' → logprob: -12.251953125
    6. '```' → logprob: -13.251953125
    7. '-dot' → logprob: -14.126953125
    8. 'cross' → logprob: -14.251953125
    9. 'DOT' → logprob: -14.376953125
    10. 'dots' → logprob: -14.751953125

Token 695: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -4.084206375409849e-05
    2. 's' → logprob: -10.750041007995605
    3. '(self' → logprob: -10.875041007995605
    4. '(Vector' → logprob: -15.750041007995605
    5. 'self' → logprob: -16.37504005432129
    6. 'Vector' → logprob: -16.50004005432129
    7. '((' → logprob: -18.25004005432129
    8. ' (' → logprob: -18.50004005432129
    9. '(' → logprob: -18.50004005432129
    10. '(Point' → logprob: -18.62504005432129

Token 696: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -3.8889261304575484e-06
    2. '.' → logprob: -13.250003814697266
    3. 'p' → logprob: -13.500003814697266
    4. '.s' → logprob: -15.375003814697266
    5. ' .' → logprob: -15.500003814697266
    6. 'self' → logprob: -16.625003814697266
    7. '(p' → logprob: -16.875003814697266
    8. '<p' → logprob: -17.125003814697266
    9. '
' → logprob: -17.375003814697266
    10. '   ' → logprob: -18.375003814697266

Token 697: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002087853499688208
    2. 'oint' → logprob: -9.125208854675293
    3. '1' → logprob: -9.750208854675293
    4. 'oints' → logprob: -10.250208854675293
    5. 'self' → logprob: -12.875208854675293
    6. 't' → logprob: -14.250208854675293
    7. '   ' → logprob: -14.375208854675293
    8. ' ' → logprob: -14.625208854675293
    9. 'p' → logprob: -14.875208854675293
    10. '(self' → logprob: -15.937708854675293

Token 698: '-s' (ID: 2011)
  Prédit: '-s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-s' → logprob: -0.37234750390052795
    2. '-p' → logprob: -1.2473474740982056
    3. 'p' → logprob: -4.497347354888916
    4. '.p' → logprob: -5.247347354888916
    5. '.s' → logprob: -5.372347354888916
    6. 's' → logprob: -6.872347354888916
    7. ' -' → logprob: -6.997347354888916
    8. '-' → logprob: -8.122347831726074
    9. '-self' → logprob: -9.497347831726074
    10. ' ' → logprob: -9.872347831726074

Token 699: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.03502953425049782
    2. 'p' → logprob: -3.535029649734497
    3. '.s' → logprob: -5.535029411315918
    4. 's' → logprob: -6.660029411315918
    5. 'self' → logprob: -11.035029411315918
    6. ' p' → logprob: -11.535029411315918
    7. '.' → logprob: -12.660029411315918
    8. ' s' → logprob: -13.535029411315918
    9. ' .' → logprob: -13.785029411315918
    10. '(p' → logprob: -13.910029411315918

Token 700: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0031262633856385946
    2. 'p' → logprob: -6.00312614440918
    3. 'self' → logprob: -8.12812614440918
    4. '0' → logprob: -9.12812614440918
    5. '1' → logprob: -9.25312614440918
    6. '.p' → logprob: -9.50312614440918
    7. 's' → logprob: -10.37812614440918
    8. '```' → logprob: -11.62812614440918
    9. ' ' → logprob: -11.75312614440918
    10. 'oints' → logprob: -12.00312614440918

Token 701: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009446957265026867
    2. ',s' → logprob: -7.1259446144104
    3. 's' → logprob: -9.625945091247559
    4. ',self' → logprob: -10.500945091247559
    5. 'self' → logprob: -11.500945091247559
    6. ',p' → logprob: -11.500945091247559
    7. '(s' → logprob: -11.500945091247559
    8. ' s' → logprob: -11.750945091247559
    9. ' ,' → logprob: -12.250945091247559
    10. '(self' → logprob: -13.750945091247559

Token 702: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.25194716453552246
    2. ' self' → logprob: -1.5019471645355225
    3. '(self' → logprob: -11.376947402954102
    4. '	self' → logprob: -13.001947402954102
    5. 's' → logprob: -13.376947402954102
    6. '[self' → logprob: -14.251947402954102
    7. 'Self' → logprob: -14.376947402954102
    8. ' s' → logprob: -15.126947402954102
    9. '=self' → logprob: -15.126947402954102
    10. ' ' → logprob: -15.501947402954102

Token 703: '-s' (ID: 2011)
  Prédit: '-s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-s' → logprob: -7.505351095460355e-05
    2. 's' → logprob: -9.875075340270996
    3. '-p' → logprob: -10.750075340270996
    4. ' -' → logprob: -13.625075340270996
    5. ' s' → logprob: -14.625075340270996
    6. '-' → logprob: -16.00007438659668
    7. '.s' → logprob: -16.25007438659668
    8. '	s' → logprob: -16.75007438659668
    9. '+s' → logprob: -17.37507438659668
    10. '```' → logprob: -17.62507438659668

Token 704: '.p' (ID: 1201)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.04308928921818733
    2. '.p' → logprob: -3.1680893898010254
    3. 's' → logprob: -10.168088912963867
    4. '[' → logprob: -11.293088912963867
    5. '	p' → logprob: -11.793088912963867
    6. '<p' → logprob: -12.043088912963867
    7. ' p' → logprob: -12.043088912963867
    8. '```' → logprob: -12.293088912963867
    9. '1' → logprob: -12.668088912963867
    10. '_p' → logprob: -12.918088912963867

Token 705: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002740906202234328
    2. 'p' → logprob: -8.250273704528809
    3. 's' → logprob: -12.625273704528809
    4. '.p' → logprob: -13.625273704528809
    5. '２' → logprob: -13.812773704528809
    6. '```' → logprob: -14.062773704528809
    7. ' ' → logprob: -14.187773704528809
    8. '   ' → logprob: -15.000273704528809
    9. '[' → logprob: -15.000273704528809
    10. '۲' → logprob: -15.062773704528809

Token 706: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00034261439577676356
    2. ')<' → logprob: -8.00034236907959
    3. '   ' → logprob: -12.75034236907959
    4. ' )' → logprob: -13.00034236907959
    5. '<' → logprob: -14.00034236907959
    6. '）' → logprob: -15.37534236907959
    7. ')
' → logprob: -16.000343322753906
    8. ' <' → logprob: -16.125343322753906
    9. '    ' → logprob: -16.250343322753906
    10. ' ' → logprob: -16.625343322753906

Token 707: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.25205427408218384
    2. '<' → logprob: -1.502054214477539
    3. ')<' → logprob: -9.127054214477539
    4. '()<' → logprob: -12.002054214477539
    5. '<|end|>' → logprob: -12.127054214477539
    6. ')' → logprob: -12.752054214477539
    7. '<p' → logprob: -15.127054214477539
    8. '<span' → logprob: -15.252054214477539
    9. '<class' → logprob: -15.502054214477539
    10. ']<' → logprob: -15.502054214477539

Token 708: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004620472434908152
    2. ' ' → logprob: -5.379620552062988
    3. '=' → logprob: -16.254619598388672
    4. '1' → logprob: -16.754619598388672
    5. '   ' → logprob: -17.129619598388672
    6. 'Point' → logprob: -17.254619598388672
    7. ' ' → logprob: -18.379619598388672
    8. '۰' → logprob: -18.567119598388672
    9. ' Point' → logprob: -18.817119598388672
    10. '  ' → logprob: -19.004619598388672

Token 709: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004885728703811765
    2. ' ' → logprob: -7.625488758087158
    3. '=' → logprob: -15.75048828125
    4. '   ' → logprob: -16.56298828125
    5. '1' → logprob: -16.75048828125
    6. 'Point' → logprob: -16.81298828125
    7. '-' → logprob: -16.93798828125
    8. '۰' → logprob: -17.31298828125
    9. '.' → logprob: -18.18798828125
    10. ' -' → logprob: -18.37548828125

Token 710: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.009570024907588959
    2. '0' → logprob: -4.759570121765137
    3. ':' → logprob: -7.259570121765137
    4. ':
' → logprob: -9.384570121765137
    5. '):
' → logprob: -9.884570121765137
    6. ')' → logprob: -10.134570121765137
    7. '):' → logprob: -10.884570121765137
    8. ' ' → logprob: -11.009570121765137
    9. '       ' → logprob: -11.134570121765137
    10. '[' → logprob: -12.009570121765137

Token 711: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.171581091824919e-05
    2. ' ' → logprob: -9.62507152557373
    3. '   ' → logprob: -12.62507152557373
    4. '1' → logprob: -14.00007152557373
    5. '       ' → logprob: -14.50007152557373
    6. 'float' → logprob: -15.00007152557373
    7. '```' → logprob: -15.12507152557373
    8. '2' → logprob: -15.37507152557373
    9. '  ' → logprob: -17.250072479248047
    10. '    ' → logprob: -17.375072479248047

Token 712: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.12192708998918533
    2. ':' → logprob: -2.37192702293396
    3. '       ' → logprob: -3.87192702293396
    4. ':return' → logprob: -8.121927261352539
    5. '):
' → logprob: -8.871927261352539
    6. '           ' → logprob: -9.496927261352539
    7. '   ' → logprob: -9.871927261352539
    8. ' :
' → logprob: -10.496927261352539
    9. ':
' → logprob: -10.621927261352539
    10. ':

' → logprob: -11.371927261352539

Token 713: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14322435855865479
    2. '       ' → logprob: -2.0182242393493652
    3. 'return' → logprob: -8.268224716186523
    4. ' return' → logprob: -8.393224716186523
    5. '   ' → logprob: -9.768224716186523
    6. '               ' → logprob: -12.768224716186523
    7. '	return' → logprob: -13.518224716186523
    8. '```' → logprob: -14.018224716186523
    9. '	       ' → logprob: -14.393224716186523
    10. '          ' → logprob: -14.393224716186523

Token 714: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10003087669610977
    2. ' return' → logprob: -2.8500308990478516
    3. '       ' → logprob: -3.3500308990478516
    4. '           ' → logprob: -6.100030899047852
    5. '0' → logprob: -11.725030899047852
    6. '	return' → logprob: -11.850030899047852
    7. '   ' → logprob: -13.350030899047852
    8. '
' → logprob: -13.975030899047852
    9. '{return' → logprob: -13.975030899047852
    10. ' ' → logprob: -14.475030899047852

Token 715: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.029750604182481766
    2. ' abs' → logprob: -3.5297505855560303
    3. '(abs' → logprob: -16.15475082397461
    4. '       ' → logprob: -16.90475082397461
    5. '.abs' → logprob: -18.90475082397461
    6. '   ' → logprob: -20.65475082397461
    7. 'Abs' → logprob: -20.65475082397461
    8. '
' → logprob: -21.27975082397461
    9. '_abs' → logprob: -21.40475082397461
    10. '           ' → logprob: -21.52975082397461

Token 716: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.56102097814437e-05
    2. 'self' → logprob: -10.000045776367188
    3. '(' → logprob: -16.875045776367188
    4. '(s' → logprob: -17.250045776367188
    5. 's' → logprob: -17.250045776367188
    6. '=self' → logprob: -19.125045776367188
    7. '[self' → logprob: -19.250045776367188
    8. '(this' → logprob: -19.250045776367188
    9. '((' → logprob: -19.625045776367188
    10. '```' → logprob: -19.625045776367188

Token 717: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07890080660581589
    2. '-' → logprob: -2.5789008140563965
    3. '-s' → logprob: -11.578900337219238
    4. ' ' → logprob: -14.078900337219238
    5. ' ' → logprob: -14.703900337219238
    6. '-p' → logprob: -15.578900337219238
    7. 's' → logprob: -16.203901290893555
    8. ' -
' → logprob: -16.703901290893555
    9. ' –' → logprob: -16.953901290893555
    10. '-point' → logprob: -17.453901290893555

Token 718: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.029750604182481766
    2. ' s' → logprob: -3.5297505855560303
    3. '(s' → logprob: -16.27975082397461
    4. '	s' → logprob: -19.02975082397461
    5. ' ' → logprob: -19.52975082397461
    6. '{s' → logprob: -19.90475082397461
    7. '`s' → logprob: -20.15475082397461
    8. ')' → logprob: -20.77975082397461
    9. '(' → logprob: -20.77975082397461
    10. '<|end|>' → logprob: -20.90475082397461

Token 719: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.00026264708139933646
    2. 'p' → logprob: -8.250262260437012
    3. 's' → logprob: -14.500262260437012
    4. '<p' → logprob: -15.250262260437012
    5. '_p' → logprob: -15.625262260437012
    6. '```' → logprob: -15.750262260437012
    7. '1' → logprob: -15.875262260437012
    8. '(p' → logprob: -16.625263214111328
    9. '.s' → logprob: -16.875263214111328
    10. '	p' → logprob: -17.000263214111328

Token 720: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017112065688706934
    2. 'p' → logprob: -9.375170707702637
    3. '2' → logprob: -9.625170707702637
    4. 's' → logprob: -11.250170707702637
    5. 'oints' → logprob: -14.250170707702637
    6. 'oint' → logprob: -14.375170707702637
    7. 'unction' → logprob: -14.562670707702637
    8. '```' → logprob: -14.625170707702637
    9. 'm' → logprob: -14.812670707702637
    10. '.p' → logprob: -15.250170707702637

Token 721: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05985771119594574
    2. ')' → logprob: -3.0598576068878174
    3. ')
' → logprob: -4.5598578453063965
    4. '
' → logprob: -7.8098578453063965
    5. '<|end|>' → logprob: -9.809857368469238
    6. '),' → logprob: -10.184857368469238
    7. ')return' → logprob: -10.434857368469238
    8. '	' → logprob: -10.684857368469238
    9. ' )' → logprob: -10.809857368469238
    10. ').' → logprob: -11.059857368469238

Token 722: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.861651490908116e-05
    2. '
' → logprob: -10.125068664550781
    3. 'return' → logprob: -11.375068664550781
    4. '   ' → logprob: -12.500068664550781
    5. ' return' → logprob: -12.500068664550781
    6. '	' → logprob: -12.875068664550781
    7. '           ' → logprob: -13.125068664550781
    8. '<|end|>' → logprob: -14.000068664550781
    9. '```' → logprob: -14.250068664550781
    10. '0' → logprob: -14.375068664550781

Token 723: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1167609691619873
    2. 'base' → logprob: -2.7417609691619873
    3. '       ' → logprob: -3.1167609691619873
    4. '#' → logprob: -7.866761207580566
    5. '   ' → logprob: -8.366761207580566
    6. 't' → logprob: -8.616761207580566
    7. 'proj' → logprob: -8.616761207580566
    8. 'import' → logprob: -9.491761207580566
    9. ' return' → logprob: -9.616761207580566
    10. 'p' → logprob: -9.866761207580566

Token 724: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -2.129266067640856e-05
    2. '(abs' → logprob: -11.500020980834961
    3. ' abs' → logprob: -12.500020980834961
    4. 'Vector' → logprob: -12.625020980834961
    5. 'self' → logprob: -13.125020980834961
    6. 's' → logprob: -13.500020980834961
    7. 'fabs' → logprob: -14.375020980834961
    8. 'Point' → logprob: -15.750020980834961
    9. 'float' → logprob: -16.87502098083496
    10. 'sqrt' → logprob: -18.25002098083496

Token 725: '(Vector' (ID: 43769)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.09022489190101624
    2. '(s' → logprob: -2.8402249813079834
    3. '((' → logprob: -4.465224742889404
    4. '(Vector' → logprob: -4.715224742889404
    5. '(Point' → logprob: -5.590224742889404
    6. 'self' → logprob: -5.715224742889404
    7. 'Point' → logprob: -9.215225219726562
    8. 's' → logprob: -9.215225219726562
    9. 'Vector' → logprob: -9.715225219726562
    10. '(
' → logprob: -10.090225219726562

Token 726: '.cross' (ID: 108957)
  Prédit: '.cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cross' → logprob: -7.588793960167095e-05
    2. 'cross' → logprob: -9.625076293945312
    3. '.point' → logprob: -12.500076293945312
    4. 'Cross' → logprob: -13.625076293945312
    5. '.Cross' → logprob: -14.000076293945312
    6. '
' → logprob: -14.375076293945312
    7. 'Point' → logprob: -14.625076293945312
    8. 'Vector' → logprob: -14.625076293945312
    9. ' cross' → logprob: -15.125076293945312
    10. '.' → logprob: -15.250076293945312

Token 727: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0012991653056815267
    2. 's' → logprob: -7.1262993812561035
    3. '(Vector' → logprob: -7.7512993812561035
    4. '(self' → logprob: -10.126298904418945
    5. 'Vector' → logprob: -11.751298904418945
    6. '((' → logprob: -12.001298904418945
    7. '(Point' → logprob: -12.501298904418945
    8. 'self' → logprob: -12.876298904418945
    9. '(' → logprob: -12.876298904418945
    10. '(
' → logprob: -15.001298904418945

Token 728: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.3688197135925293
    2. 'p' → logprob: -1.2438197135925293
    3. 'Vector' → logprob: -4.618819713592529
    4. 's' → logprob: -5.493819713592529
    5. 'Point' → logprob: -6.118819713592529
    6. '(Vector' → logprob: -6.243819713592529
    7. '(p' → logprob: -7.368819713592529
    8. '.s' → logprob: -7.493819713592529
    9. ' Vector' → logprob: -7.868819713592529
    10. '(s' → logprob: -8.243820190429688

Token 729: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010151672904612496
    2. '1' → logprob: -10.125101089477539
    3. 'oint' → logprob: -10.500101089477539
    4. 'self' → logprob: -10.750101089477539
    5. 't' → logprob: -12.875101089477539
    6. 's' → logprob: -13.000101089477539
    7. '   ' → logprob: -13.250101089477539
    8. 'oints' → logprob: -13.500101089477539
    9. ' -' → logprob: -14.125101089477539
    10. ' ' → logprob: -14.625101089477539

Token 730: '-s' (ID: 2011)
  Prédit: '-s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-s' → logprob: -0.04976752772927284
    2. '-p' → logprob: -3.79976749420166
    3. ' -' → logprob: -4.29976749420166
    4. '-' → logprob: -5.04976749420166
    5. 's' → logprob: -5.17476749420166
    6. '-point' → logprob: -7.92476749420166
    7. ' s' → logprob: -9.17476749420166
    8. '.s' → logprob: -11.17476749420166
    9. '-P' → logprob: -11.42476749420166
    10. '-
' → logprob: -11.92476749420166

Token 731: '.p' (ID: 1201)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4186370074748993
    2. 's' → logprob: -1.5436370372772217
    3. '.p' → logprob: -2.2936370372772217
    4. '1' → logprob: -4.043636798858643
    5. '.s' → logprob: -4.793636798858643
    6. ' p' → logprob: -8.2936372756958
    7. ' s' → logprob: -8.4186372756958
    8. 'point' → logprob: -8.7936372756958
    9. '.Point' → logprob: -8.7936372756958
    10. '.' → logprob: -9.2936372756958

Token 732: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.304016228066757e-05
    2. 'oint' → logprob: -10.125082969665527
    3. 's' → logprob: -10.375082969665527
    4. 'oints' → logprob: -12.500082969665527
    5. 'p' → logprob: -12.625082969665527
    6. 'self' → logprob: -14.000082969665527
    7. 't' → logprob: -14.000082969665527
    8. 'Point' → logprob: -14.500082969665527
    9. '0' → logprob: -14.625082969665527
    10. 'point' → logprob: -14.750082969665527

Token 733: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023321842309087515
    2. ' ,' → logprob: -9.00023365020752
    3. 's' → logprob: -9.37523365020752
    4. ',s' → logprob: -11.00023365020752
    5. ',
' → logprob: -12.62523365020752
    6. ' -' → logprob: -13.12523365020752
    7. ' s' → logprob: -13.87523365020752
    8. ',self' → logprob: -14.12523365020752
    9. 'self' → logprob: -14.87523365020752
    10. '-' → logprob: -15.37523365020752

Token 734: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1129777655005455
    2. ' self' → logprob: -2.2379777431488037
    3. 's' → logprob: -9.237977981567383
    4. ' s' → logprob: -10.612977981567383
    5. '(self' → logprob: -10.737977981567383
    6. '	self' → logprob: -11.987977981567383
    7. 'Vector' → logprob: -13.237977981567383
    8. 'Point' → logprob: -13.862977981567383
    9. ' (' → logprob: -14.362977981567383
    10. '   ' → logprob: -14.487977981567383

Token 735: '-s' (ID: 2011)
  Prédit: '-s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-s' → logprob: -0.08238358795642853
    2. ' -' → logprob: -2.582383632659912
    3. '-self' → logprob: -5.957383632659912
    4. '-' → logprob: -7.082383632659912
    5. '-p' → logprob: -10.082383155822754
    6. 's' → logprob: -11.332383155822754
    7. ' s' → logprob: -12.707383155822754
    8. ' self' → logprob: -13.457383155822754
    9. '	s' → logprob: -13.832383155822754
    10. ' ' → logprob: -14.082383155822754

Token 736: '.p' (ID: 1201)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0019157878123223782
    2. '.p' → logprob: -6.75191593170166
    3. '1' → logprob: -7.62691593170166
    4. ' p' → logprob: -8.50191593170166
    5. '-p' → logprob: -11.00191593170166
    6. ')' → logprob: -11.50191593170166
    7. 's' → logprob: -11.50191593170166
    8. 'self' → logprob: -12.62691593170166
    9. 'point' → logprob: -12.87691593170166
    10. ')p' → logprob: -13.25191593170166

Token 737: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2723104848410003e-05
    2. 'oint' → logprob: -11.125022888183594
    3. 'self' → logprob: -13.250022888183594
    4. ')' → logprob: -13.375022888183594
    5. '0' → logprob: -13.375022888183594
    6. 'oints' → logprob: -13.875022888183594
    7. 's' → logprob: -14.500022888183594
    8. 't' → logprob: -15.375022888183594
    9. 'p' → logprob: -15.375022888183594
    10. 'i' → logprob: -15.500022888183594

Token 738: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010372024029493332
    2. ')/' → logprob: -4.760372161865234
    3. ')/(' → logprob: -6.635372161865234
    4. ' )' → logprob: -8.260372161865234
    5. '))' → logprob: -10.010372161865234
    6. ',' → logprob: -10.010372161865234
    7. '       ' → logprob: -10.260372161865234
    8. 's' → logprob: -11.260372161865234
    9. '   ' → logprob: -11.635372161865234
    10. ')
' → logprob: -11.885372161865234

Token 739: ' /' (ID: 820)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007498288759961724
    2. ')/' → logprob: -7.3757500648498535
    3. ' )' → logprob: -10.000749588012695
    4. '       ' → logprob: -10.625749588012695
    5. ')/(' → logprob: -10.750749588012695
    6. '   ' → logprob: -11.250749588012695
    7. ' /' → logprob: -11.750749588012695
    8. '/' → logprob: -12.750749588012695
    9. ')
' → logprob: -13.125749588012695
    10. '        ' → logprob: -13.875749588012695

Token 740: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.001140453852713108
    2. 'sqrt' → logprob: -7.376140594482422
    3. 'Vector' → logprob: -8.001140594482422
    4. ' abs' → logprob: -9.501140594482422
    5. '(abs' → logprob: -9.501140594482422
    6. 'Point' → logprob: -10.751140594482422
    7. '(s' → logprob: -12.751140594482422
    8. '(Vector' → logprob: -14.126140594482422
    9. 's' → logprob: -14.501140594482422
    10. '(' → logprob: -14.626140594482422

Token 741: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -2.641841820150148e-05
    2. 's' → logprob: -11.12502670288086
    3. '(Vector' → logprob: -12.00002670288086
    4. '(' → logprob: -13.00002670288086
    5. 'Vector' → logprob: -13.12502670288086
    6. '(Point' → logprob: -14.75002670288086
    7. ' (' → logprob: -15.12502670288086
    8. '(
' → logprob: -15.25002670288086
    9. '(self' → logprob: -15.62502670288086
    10. '
' → logprob: -17.37502670288086

Token 742: '.p' (ID: 1201)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01403163280338049
    2. '.p' → logprob: -5.389031410217285
    3. ')' → logprob: -5.639031410217285
    4. 's' → logprob: -6.264031410217285
    5. 'Vector' → logprob: -6.514031410217285
    6. 'self' → logprob: -7.764031410217285
    7. '(p' → logprob: -7.889031410217285
    8. ' Vector' → logprob: -8.264031410217285
    9. ' p' → logprob: -8.389031410217285
    10. '(' → logprob: -8.389031410217285

Token 743: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5419834852218628
    2. '2' → logprob: -1.4169834852218628
    3. 'p' → logprob: -2.0419836044311523
    4. ')' → logprob: -3.5419836044311523
    5. 's' → logprob: -5.166983604431152
    6. 'oint' → logprob: -5.791983604431152
    7. '))' → logprob: -5.791983604431152
    8. 'Vector' → logprob: -6.291983604431152
    9. 'Point' → logprob: -7.791983604431152
    10. ' p' → logprob: -7.916983604431152

Token 744: '-s' (ID: 2011)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.705556333065033
    2. '-s' → logprob: -0.830556333065033
    3. '-' → logprob: -3.2055563926696777
    4. '-p' → logprob: -3.7055563926696777
    5. ' -' → logprob: -5.455556392669678
    6. 'p' → logprob: -7.580556392669678
    7. '-point' → logprob: -8.33055591583252
    8. ' ' → logprob: -9.08055591583252
    9. ' s' → logprob: -10.08055591583252
    10. '   ' → logprob: -10.83055591583252

Token 745: '.p' (ID: 1201)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010021083056926727
    2. 'p' → logprob: -4.635021209716797
    3. 's' → logprob: -8.260021209716797
    4. ' p' → logprob: -12.885021209716797
    5. ' ' → logprob: -14.135021209716797
    6. ' s' → logprob: -14.260021209716797
    7. 'Point' → logprob: -14.510021209716797
    8. '１' → logprob: -15.260021209716797
    9. '   ' → logprob: -16.072521209716797
    10. 'r' → logprob: -16.072521209716797

Token 746: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. 'p' → logprob: -15.375
    3. 's' → logprob: -16.75
    4. '   ' → logprob: -17.125
    5. '１' → logprob: -17.125
    6. '0' → logprob: -17.875
    7. 'oint' → logprob: -18.125
    8. ' ' → logprob: -18.5
    9. 'oints' → logprob: -18.5
    10. ')' → logprob: -18.625

Token 747: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003598952607717365
    2. '))' → logprob: -8.250359535217285
    3. ')
' → logprob: -9.375359535217285
    4. '())' → logprob: -12.500359535217285
    5. ' )' → logprob: -13.000359535217285
    6. ')))' → logprob: -13.375359535217285
    7. '       ' → logprob: -13.625359535217285
    8. '   ' → logprob: -13.750359535217285
    9. ')

' → logprob: -13.875359535217285
    10. ')*' → logprob: -14.750359535217285

Token 748: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0014126161113381386
    2. '
' → logprob: -6.751412391662598
    3. 'import' → logprob: -9.501412391662598
    4. '   ' → logprob: -9.501412391662598
    5. ' class' → logprob: -10.626412391662598
    6. 'from' → logprob: -10.876412391662598
    7. '#' → logprob: -11.501412391662598
    8. '<|end|>' → logprob: -12.001412391662598
    9. '<|end|>' → logprob: -12.251412391662598
    10. ')' → logprob: -12.626412391662598

Token 749: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.0006324975984171033
    2. ' Vector' → logprob: -7.500632286071777
    3. 'Segment' → logprob: -9.875632286071777
    4. 'Line' → logprob: -10.500632286071777
    5. 'Point' → logprob: -14.875632286071777
    6. 'vector' → logprob: -16.750633239746094
    7. '_Vector' → logprob: -17.375633239746094
    8. '	Vector' → logprob: -17.750633239746094
    9. ' Segment' → logprob: -18.375633239746094
    10. ' Line' → logprob: -18.625633239746094

Token 750: '(Point' (ID: 72072)
  Prédit: '(Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Point' → logprob: -9.448370838072151e-05
    2. '(object' → logprob: -9.375094413757324
    3. '(point' → logprob: -12.375094413757324
    4. '(P' → logprob: -13.500094413757324
    5. '(list' → logprob: -13.875094413757324
    6. '(Vector' → logprob: -14.125094413757324
    7. '(tuple' → logprob: -14.250094413757324
    8. '(' → logprob: -14.375094413757324
    9. 'Point' → logprob: -14.625094413757324
    10. '(points' → logprob: -15.625094413757324

Token 751: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004797138273715973
    2. '):
' → logprob: -5.379796981811523
    3. ')' → logprob: -8.754796981811523
    4. '):

' → logprob: -12.004796981811523
    5. '<|end|>' → logprob: -12.129796981811523
    6. '):
' → logprob: -12.379796981811523
    7. '(Point' → logprob: -13.754796981811523
    8. '(Vector' → logprob: -15.129796981811523
    9. '   ' → logprob: -15.254796981811523
    10. ':' → logprob: -15.379796981811523

Token 752: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0039049265906214714
    2. 'pass' → logprob: -6.253904819488525
    3. 'def' → logprob: -6.503904819488525
    4. ' pass' → logprob: -8.003905296325684
    5. '<|end|>' → logprob: -9.003905296325684
    6. ' def' → logprob: -12.003905296325684
    7. '	pass' → logprob: -13.128905296325684
    8. ')' → logprob: -13.253905296325684
    9. '...' → logprob: -13.503905296325684
    10. ' ' → logprob: -13.628905296325684

Token 753: ' def' (ID: 1056)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.13232505321502686
    2. ' pass' → logprob: -2.6323251724243164
    3. 'def' (adapté à ' def') → logprob: -3.5073251724243164
    4. '   ' → logprob: -4.007325172424316
    5. '@' → logprob: -5.757325172424316
    6. ' @' → logprob: -8.507325172424316
    7. ' def' → logprob: -8.632325172424316
    8. '	pass' → logprob: -9.007325172424316
    9. '<|end|>' → logprob: -9.757325172424316
    10. '@property' → logprob: -10.007325172424316

Token 754: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4938095211982727
    2. 'cross' → logprob: -1.368809461593628
    3. 'dot' → logprob: -2.493809461593628
    4. ' __' → logprob: -3.118809461593628
    5. ' cross' → logprob: -5.118809700012207
    6. 'norm' → logprob: -6.993809700012207
    7. ' dot' → logprob: -7.743809700012207
    8. 'normalize' → logprob: -7.993809700012207
    9. 'length' → logprob: -8.493809700012207
    10. 'x' → logprob: -9.118809700012207

Token 755: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0005533903022296727
    2. 'mul' → logprob: -7.500553607940674
    3. 'new' → logprob: -15.625553131103516
    4. ' init' → logprob: -16.375553131103516
    5. 'imul' → logprob: -16.875553131103516
    6. 'neg' → logprob: -17.000553131103516
    7. 'pow' → logprob: -17.500553131103516
    8. 'add' → logprob: -18.000553131103516
    9. 'call' → logprob: -18.375553131103516
    10. 'sub' → logprob: -19.125553131103516

Token 756: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005616117268800735
    2. '(' → logprob: -7.625561714172363
    3. '(s' → logprob: -10.625561714172363
    4. ' (' → logprob: -10.750561714172363
    5. '__(' → logprob: -10.875561714172363
    6. 'self' → logprob: -12.125561714172363
    7. '   ' → logprob: -13.750561714172363
    8. '(Self' → logprob: -14.750561714172363
    9. '(*' → logprob: -15.375561714172363
    10. '(
' → logprob: -15.375561714172363

Token 757: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.531315314830863e-06
    2. ' self' → logprob: -12.875003814697266
    3. 'x' → logprob: -14.500003814697266
    4. '   ' → logprob: -15.625003814697266
    5. ',' → logprob: -15.875003814697266
    6. '0' → logprob: -16.250003814697266
    7. '(self' → logprob: -16.375003814697266
    8. 's' → logprob: -17.000003814697266
    9. ',self' → logprob: -17.500003814697266
    10. '__' → logprob: -18.750003814697266

Token 758: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001544321421533823
    2. '(' → logprob: -9.125154495239258
    3. ' (' → logprob: -10.875154495239258
    4. 'self' → logprob: -11.000154495239258
    5. '(s' → logprob: -11.750154495239258
    6. ',' → logprob: -14.500154495239258
    7. '   ' → logprob: -14.625154495239258
    8. '(*' → logprob: -14.875154495239258
    9. '       ' → logprob: -15.500154495239258
    10. ' self' → logprob: -16.375154495239258

Token 759: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.43464717268943787
    2. 'self' → logprob: -1.0596472024917603
    3. '*' → logprob: -6.184647083282471
    4. 'p' → logprob: -6.559647083282471
    5. ' x' → logprob: -7.184647083282471
    6. 'point' → logprob: -7.309647083282471
    7. 'v' → logprob: -7.934647083282471
    8. ' self' → logprob: -8.309647560119629
    9. 'xy' → logprob: -9.059647560119629
    10. 'other' → logprob: -9.184647560119629

Token 760: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5410662889480591
    2. '=None' → logprob: -1.166066288948059
    3. '):
' → logprob: -2.9160661697387695
    4. '):' → logprob: -3.1660661697387695
    5. ',' → logprob: -4.6660661697387695
    6. '=x' → logprob: -8.54106616973877
    7. 'x' → logprob: -8.91606616973877
    8. ' =' → logprob: -9.79106616973877
    9. '_or' → logprob: -10.16606616973877
    10. ')' → logprob: -10.79106616973877

Token 761: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.8889261304575484e-06
    2. 'x' → logprob: -13.000003814697266
    3. ' ' → logprob: -13.625003814697266
    4. ')' → logprob: -16.000003814697266
    5. 'Point' → logprob: -16.625003814697266
    6. 'None' → logprob: -17.250003814697266
    7. '   ' → logprob: -17.875003814697266
    8. '=' → logprob: -18.750003814697266
    9. ' x' → logprob: -18.750003814697266
    10. '):
' → logprob: -19.125003814697266

Token 762: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00011045700375689194
    2. ',' → logprob: -9.250110626220703
    3. '0' → logprob: -11.375110626220703
    4. '):
' → logprob: -13.500110626220703
    5. '.,' → logprob: -14.000110626220703
    6. '):' → logprob: -15.375110626220703
    7. '.
' → logprob: -16.000110626220703
    8. ' ' → logprob: -17.250110626220703
    9. ' .' → logprob: -17.250110626220703
    10. ',
' → logprob: -17.375110626220703

Token 763: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. 'float' → logprob: -13.250001907348633
    3. 'Point' → logprob: -16.500001907348633
    4. ' ' → logprob: -16.750001907348633
    5. 'double' → logprob: -17.625001907348633
    6. ')' → logprob: -18.000001907348633
    7. '):
' → logprob: -18.375001907348633
    8. '00' → logprob: -19.000001907348633
    9. 'None' → logprob: -19.000001907348633
    10. '```' → logprob: -19.125001907348633

Token 764: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005451689939945936
    2. ',y' → logprob: -7.750545024871826
    3. ' ,' → logprob: -9.125545501708984
    4. '0' → logprob: -13.375545501708984
    5. ',x' → logprob: -13.500545501708984
    6. '	' → logprob: -14.875545501708984
    7. ',
' → logprob: -15.125545501708984
    8. '   ' → logprob: -15.125545501708984
    9. ',float' → logprob: -15.125545501708984
    10. 'y' → logprob: -15.375545501708984

Token 765: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0005600620643235743
    2. ' y' → logprob: -7.500560283660889
    3. '0' → logprob: -11.87555980682373
    4. '   ' → logprob: -15.62555980682373
    5. '	y' → logprob: -17.000560760498047
    6. ' ' → logprob: -18.000560760498047
    7. '    ' → logprob: -18.625560760498047
    8. '       ' → logprob: -19.125560760498047
    9. '     ' → logprob: -20.125560760498047
    10. '  ' → logprob: -21.000560760498047

Token 766: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0006492906250059605
    2. ',' → logprob: -7.625649452209473
    3. '=None' → logprob: -9.000649452209473
    4. '0' → logprob: -11.500649452209473
    5. ')=' → logprob: -12.125649452209473
    6. '=x' → logprob: -12.250649452209473
    7. '<|end|>' → logprob: -12.500649452209473
    8. ')' → logprob: -12.625649452209473
    9. '=float' → logprob: -12.625649452209473
    10. '(' → logprob: -13.125649452209473

Token 767: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -18.375001907348633
    4. 'None' → logprob: -19.375001907348633
    5. '  ' → logprob: -19.875001907348633
    6. ')' → logprob: -20.000001907348633
    7. 'x' → logprob: -20.125001907348633
    8. 'Point' → logprob: -20.625001907348633
    9. '```' → logprob: -21.125001907348633
    10. '1' → logprob: -21.375001907348633

Token 768: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.001042574760504067
    2. '0' → logprob: -6.876042366027832
    3. ')' → logprob: -11.876042366027832
    4. '=' → logprob: -13.501042366027832
    5. '):
' → logprob: -14.876042366027832
    6. ',' → logprob: -15.251042366027832
    7. ' ' → logprob: -15.626042366027832
    8. ' .' → logprob: -16.00104331970215
    9. '):' → logprob: -16.12604331970215
    10. '.Point' → logprob: -16.62604331970215

Token 769: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '```' → logprob: -16.875
    3. 'float' → logprob: -17.0
    4. ' ' → logprob: -18.875
    5. '   ' → logprob: -19.5
    6. '4' → logprob: -19.875
    7. 'None' → logprob: -20.5
    8. '1' → logprob: -20.625
    9. ')' → logprob: -20.8125
    10. 'def' → logprob: -20.9375

Token 770: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.016237059608101845
    2. '):' → logprob: -4.141237258911133
    3. ',' → logprob: -8.641237258911133
    4. '):
' → logprob: -10.891237258911133
    5. ' ):
' → logprob: -12.391237258911133
    6. ')' → logprob: -13.516237258911133
    7. '):

' → logprob: -14.141237258911133
    8. '   ' → logprob: -14.516237258911133
    9. '       ' → logprob: -15.141237258911133
    10. ' ):' → logprob: -16.141237258911133

Token 771: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007338502909988165
    2. 'x' → logprob: -5.882338523864746
    3. '	' → logprob: -6.632338523864746
    4. 'self' → logprob: -7.007338523864746
    5. '(x' → logprob: -7.507338523864746
    6. 'super' → logprob: -7.507338523864746
    7. '   ' → logprob: -8.382338523864746
    8. ' x' → logprob: -8.882338523864746
    9. '<|end|>' → logprob: -8.882338523864746
    10. '[' → logprob: -9.382338523864746

Token 772: ' if' (ID: 538)
  Prédit: 'super'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'super' → logprob: -0.17318055033683777
    2. ' super' → logprob: -2.42318058013916
    3. '       ' → logprob: -2.67318058013916
    4. 'self' → logprob: -6.92318058013916
    5. 'Point' → logprob: -8.17318058013916
    6. ' Point' → logprob: -10.67318058013916
    7. 'Vector' → logprob: -10.92318058013916
    8. ' self' → logprob: -11.17318058013916
    9. '	super' → logprob: -11.42318058013916
    10. 'if' (adapté à ' if') → logprob: -11.92318058013916

Token 773: ' isinstance' (ID: 25889)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.07946612685918808
    2. ' isinstance' → logprob: -2.5794661045074463
    3. 'type' → logprob: -8.204465866088867
    4. '   ' → logprob: -8.204465866088867
    5. '    ' → logprob: -11.954465866088867
    6. '(is' → logprob: -12.079465866088867
    7. '       ' → logprob: -12.204465866088867
    8. '  ' → logprob: -12.704465866088867
    9. ' ' → logprob: -13.204465866088867
    10. ' hasattr' → logprob: -13.454465866088867

Token 774: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.251963347196579
    2. 'x' → logprob: -1.5019633769989014
    3. ' x' → logprob: -11.12696361541748
    4. '(' → logprob: -11.37696361541748
    5. '	x' → logprob: -12.75196361541748
    6. ',x' → logprob: -13.37696361541748
    7. '   ' → logprob: -13.87696361541748
    8. 'tuple' → logprob: -14.62696361541748
    9. 'Vector' → logprob: -14.75196361541748
    10. ',' → logprob: -15.37696361541748

Token 775: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2603901015827432e-05
    2. ',(' → logprob: -11.625022888183594
    3. ' ,' → logprob: -11.750022888183594
    4. ',t' → logprob: -13.500022888183594
    5. 'tuple' → logprob: -13.500022888183594
    6. ',x' → logprob: -14.125022888183594
    7. ',list' → logprob: -14.250022888183594
    8. ',float' → logprob: -15.625022888183594
    9. ',bool' → logprob: -15.750022888183594
    10. ',int' → logprob: -16.000022888183594

Token 776: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.0030830018222332
    2. ' tuple' → logprob: -6.503083229064941
    3. 'float' → logprob: -7.503083229064941
    4. 'Point' → logprob: -7.628083229064941
    5. 'list' → logprob: -7.753083229064941
    6. 'x' → logprob: -9.503083229064941
    7. 'vector' → logprob: -11.503083229064941
    8. '(tuple' → logprob: -11.878083229064941
    9. 'point' → logprob: -12.378083229064941
    10. 'tu' → logprob: -12.628083229064941

Token 777: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.38739457726478577
    2. '):' → logprob: -1.1373945474624634
    3. ')' → logprob: -7.887394428253174
    4. '):
' → logprob: -9.012394905090332
    5. ',' → logprob: -11.512394905090332
    6. '):

' → logprob: -12.137394905090332
    7. '[' → logprob: -12.762394905090332
    8. '<|end|>' → logprob: -13.387394905090332
    9. ':' → logprob: -13.762394905090332
    10. '[]):' → logprob: -13.887394905090332

Token 778: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7036275267601013
    2. '           ' → logprob: -0.7036275267601013
    3. 'super' → logprob: -4.953627586364746
    4. '	       ' → logprob: -6.953627586364746
    5. '	' → logprob: -7.578627586364746
    6. '		' → logprob: -7.828627586364746
    7. ' super' → logprob: -8.078627586364746
    8. '	super' → logprob: -8.203627586364746
    9. '   ' → logprob: -8.328627586364746
    10. 'x' → logprob: -8.328627586364746

Token 779: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1273336410522461
    2. '       ' → logprob: -2.252333641052246
    3. 'super' → logprob: -4.502333641052246
    4. ' self' → logprob: -6.252333641052246
    5. '           ' → logprob: -7.002333641052246
    6. 'Vector' → logprob: -8.377333641052246
    7. ' super' → logprob: -9.252333641052246
    8. 'x' → logprob: -9.377333641052246
    9. 'Point' → logprob: -10.627333641052246
    10. '   ' → logprob: -10.877333641052246

Token 780: '.x' (ID: 3700)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12700055539608002
    2. '.x' → logprob: -2.127000570297241
    3. 'Vector' → logprob: -10.37700080871582
    4. ' x' → logprob: -10.87700080871582
    5. '.__' → logprob: -11.50200080871582
    6. '(x' → logprob: -12.50200080871582
    7. ').__' → logprob: -13.25200080871582
    8. '.' → logprob: -13.50200080871582
    9. '().__' → logprob: -13.87700080871582
    10. '=' → logprob: -14.00200080871582

Token 781: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13584794104099274
    2. '=' → logprob: -2.385848045349121
    3. ',' → logprob: -3.385848045349121
    4. ',x' → logprob: -7.135848045349121
    5. '<|end|>' → logprob: -8.385848045349121
    6. '=x' → logprob: -9.885848045349121
    7. ' ,' → logprob: -10.760848045349121
    8. ' ' → logprob: -10.885848045349121
    9. ' x' → logprob: -11.010848045349121
    10. 'x' → logprob: -11.260848045349121

Token 782: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.4391956685576588e-05
    2. ' x' → logprob: -10.625024795532227
    3. 'float' → logprob: -16.750024795532227
    4. '0' → logprob: -18.500024795532227
    5. '	x' → logprob: -19.000024795532227
    6. '(x' → logprob: -19.125024795532227
    7. '<|end|>' → logprob: -21.125024795532227
    8. '   ' → logprob: -21.500024795532227
    9. 'tuple' → logprob: -21.625024795532227
    10. '#' → logprob: -22.000024795532227

Token 783: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009399275877512991
    2. '.x' → logprob: -7.750939846038818
    3. '.' → logprob: -8.125940322875977
    4. 'x' → logprob: -9.250940322875977
    5. ',' → logprob: -9.625940322875977
    6. '0' → logprob: -10.375940322875977
    7. ',x' → logprob: -11.750940322875977
    8. '(' → logprob: -12.750940322875977
    9. '(x' → logprob: -13.250940322875977
    10. ' x' → logprob: -13.375940322875977

Token 784: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.000000953674316
    3. 'x' → logprob: -16.75
    4. '[' → logprob: -16.875
    5. '(' → logprob: -18.25
    6. '۰' → logprob: -19.6875
    7. '   ' → logprob: -19.9375
    8. '00' → logprob: -20.25
    9. '2' → logprob: -20.3125
    10. 'tuple' → logprob: -20.3125

Token 785: ']
' (ID: 1592)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015349778113886714
    2. '<|end|>' → logprob: -7.501534938812256
    3. ')' → logprob: -8.126535415649414
    4. ',x' → logprob: -8.501535415649414
    5. ',y' → logprob: -8.751535415649414
    6. ',
' → logprob: -9.876535415649414
    7. ' ,' → logprob: -9.876535415649414
    8. '<|end|>' → logprob: -10.001535415649414
    9. '       ' → logprob: -10.251535415649414
    10. '	' → logprob: -10.376535415649414

Token 786: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24652713537216187
    2. '		' → logprob: -2.2465271949768066
    3. 'self' → logprob: -3.3715271949768066
    4. '	' → logprob: -3.6215271949768066
    5. '       ' → logprob: -4.246527194976807
    6. ',' → logprob: -4.371527194976807
    7. '<|end|>' → logprob: -4.746527194976807
    8. '	       ' → logprob: -5.996527194976807
    9. '<|end|>' → logprob: -5.996527194976807
    10. '		   ' → logprob: -6.246527194976807

Token 787: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.029874287545681
    2. '           ' → logprob: -3.529874324798584
    3. ' self' → logprob: -9.029873847961426
    4. '(self' → logprob: -13.654873847961426
    5. '               ' → logprob: -14.404873847961426
    6. '       ' → logprob: -14.404873847961426
    7. '	self' → logprob: -14.404873847961426
    8. '          ' → logprob: -15.279873847961426
    9. '=self' → logprob: -15.779873847961426
    10. '0' → logprob: -15.779873847961426

Token 788: '.y' (ID: 4486)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023369524569716305
    2. 'y' → logprob: -8.37523365020752
    3. 'x' → logprob: -13.50023365020752
    4. ' y' → logprob: -14.25023365020752
    5. ' ' → logprob: -14.37523365020752
    6. '[' → logprob: -15.00023365020752
    7. '0' → logprob: -16.375234603881836
    8. '<|end|>' → logprob: -17.250234603881836
    9. '	y' → logprob: -18.125234603881836
    10. '```' → logprob: -18.250234603881836

Token 789: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7277428507804871
    2. '=' → logprob: -0.9777428507804871
    3. 'x' → logprob: -1.9777429103851318
    4. ' x' → logprob: -6.102742671966553
    5. '=x' → logprob: -8.602743148803711
    6. '<|end|>' → logprob: -10.977743148803711
    7. '0' → logprob: -11.477743148803711
    8. '(x' → logprob: -12.227743148803711
    9. ' ' → logprob: -12.727743148803711
    10. ',' → logprob: -13.352743148803711

Token 790: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002613358374219388
    2. ' x' → logprob: -8.250261306762695
    3. '	x' → logprob: -19.375261306762695
    4. '(x' → logprob: -22.250261306762695
    5. '<|end|>' → logprob: -22.375261306762695
    6. 'y' → logprob: -22.750261306762695
    7. '0' → logprob: -23.000261306762695
    8. ' ' → logprob: -23.750261306762695
    9. '"x' → logprob: -24.625261306762695
    10. '{x' → logprob: -24.625261306762695

Token 791: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25193750858306885
    2. '1' → logprob: -1.5019375085830688
    3. '{' → logprob: -12.251937866210938
    4. '[
' → logprob: -13.751937866210938
    5. ' ' → logprob: -14.626937866210938
    6. ',' → logprob: -14.626937866210938
    7. '=' → logprob: -15.376937866210938
    8. '(' → logprob: -15.501937866210938
    9. '<|end|>' → logprob: -15.751937866210938
    10. '
' → logprob: -15.751937866210938

Token 792: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. 'x' → logprob: -16.375
    3. '0' → logprob: -17.125
    4. ' ' → logprob: -17.375
    5. '[' → logprob: -18.5
    6. '   ' → logprob: -20.625
    7. '１' → logprob: -20.8125
    8. '```' → logprob: -21.0
    9. 'tuple' → logprob: -21.125
    10. '۱' → logprob: -21.625

Token 793: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7117133736610413
    2. '<|end|>' → logprob: -0.7117133736610413
    3. '       ' → logprob: -4.7117133140563965
    4. '<|end|>' → logprob: -5.2117133140563965
    5. ']' → logprob: -6.2117133140563965
    6. '
' → logprob: -7.7117133140563965
    7. '}' → logprob: -7.8367133140563965
    8. '	' → logprob: -8.086713790893555
    9. ')
' → logprob: -8.961713790893555
    10. ':' → logprob: -9.336713790893555

Token 794: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 795: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2752411961555481
    2. 'else' → logprob: -2.0252411365509033
    3. ' else' → logprob: -2.9002411365509033
    4. '<|end|>' → logprob: -3.5252411365509033
    5. ':' → logprob: -4.275241374969482
    6. '	' → logprob: -5.400241374969482
    7. '	else' → logprob: -5.900241374969482
    8. ':
' → logprob: -7.025241374969482
    9. '   ' → logprob: -7.150241374969482
    10. '<|end|>' → logprob: -8.275240898132324

Token 796: ' isinstance' (ID: 25889)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.07902891933917999
    2. ' isinstance' → logprob: -2.579028844833374
    3. 'type' → logprob: -9.329029083251953
    4. '(is' → logprob: -10.204029083251953
    5. '   ' → logprob: -11.704029083251953
    6. ' hasattr' → logprob: -13.704029083251953
    7. ' ' → logprob: -14.204029083251953
    8. '       ' → logprob: -14.704029083251953
    9. ' is' → logprob: -14.704029083251953
    10. '    ' → logprob: -14.704029083251953

Token 797: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0003818140830844641
    2. 'x' → logprob: -7.875381946563721
    3. '(Vector' → logprob: -15.375381469726562
    4. ' x' → logprob: -15.500381469726562
    5. '(' → logprob: -15.500381469726562
    6. '(type' → logprob: -15.750381469726562
    7. 'Vector' → logprob: -16.125381469726562
    8. '(Point' → logprob: -16.375381469726562
    9. '(y' → logprob: -16.500381469726562
    10. ' (' → logprob: -16.625381469726562

Token 798: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001831565605243668
    2. ',float' → logprob: -9.75018310546875
    3. '(Point' → logprob: -10.12518310546875
    4. ',(' → logprob: -10.75018310546875
    5. ',list' → logprob: -11.62518310546875
    6. '(' → logprob: -11.62518310546875
    7. 'Point' → logprob: -11.87518310546875
    8. ' ,' → logprob: -12.00018310546875
    9. ',Object' → logprob: -12.50018310546875
    10. ',bool' → logprob: -12.50018310546875

Token 799: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.050813425332307816
    2. 'Vector' → logprob: -3.1758134365081787
    3. 'float' → logprob: -4.9258131980896
    4. 'list' → logprob: -7.8008131980896
    5. 'int' → logprob: -9.925813674926758
    6. ' Point' → logprob: -10.800813674926758
    7. 'vector' → logprob: -11.175813674926758
    8. 'object' → logprob: -11.550813674926758
    9. '(Point' → logprob: -11.925813674926758
    10. 'point' → logprob: -12.675813674926758

Token 800: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06253916770219803
    2. ')' → logprob: -2.9375391006469727
    3. '):' → logprob: -4.937539100646973
    4. ' and' → logprob: -9.062539100646973
    5. 'and' → logprob: -9.187539100646973
    6. ',' → logprob: -9.187539100646973
    7. '):

' → logprob: -9.937539100646973
    8. '):
' → logprob: -10.562539100646973
    9. '       ' → logprob: -11.062539100646973
    10. ')
' → logprob: -11.687539100646973

Token 801: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2186465561389923
    2. ':
' → logprob: -1.96864652633667
    3. ':' → logprob: -3.09364652633667
    4. ' and' → logprob: -5.09364652633667
    5. '       ' → logprob: -5.71864652633667
    6. '):
' → logprob: -6.84364652633667
    7. '<|end|>' → logprob: -8.468647003173828
    8. '	       ' → logprob: -8.843647003173828
    9. ',' → logprob: -8.968647003173828
    10. 'self' → logprob: -9.468647003173828

Token 802: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.004705068655312061
    2. 'super' → logprob: -6.00470495223999
    3. '           ' → logprob: -6.37970495223999
    4. '       ' → logprob: -8.129705429077148
    5. ' self' → logprob: -8.379705429077148
    6. 'if' → logprob: -12.879705429077148
    7. ' super' → logprob: -13.004705429077148
    8. '   ' → logprob: -14.129705429077148
    9. '	self' → logprob: -14.504705429077148
    10. '               ' → logprob: -15.129705429077148

Token 803: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00014203863975126296
    2. 'x' → logprob: -8.875142097473145
    3. '.' → logprob: -13.375142097473145
    4. '.__' → logprob: -14.750142097473145
    5. '=' → logprob: -16.125141143798828
    6. ' .' → logprob: -17.375141143798828
    7. ' =' → logprob: -17.875141143798828
    8. 'from' → logprob: -18.875141143798828
    9. 'import' → logprob: -19.250141143798828
    10. '__' → logprob: -19.375141143798828

Token 804: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14295253157615662
    2. '=' → logprob: -2.0179524421691895
    3. '=x' → logprob: -8.267952919006348
    4. ',' → logprob: -11.392952919006348
    5. 'x' → logprob: -12.017952919006348
    6. '   ' → logprob: -13.392952919006348
    7. ' ' → logprob: -14.392952919006348
    8. ' x' → logprob: -14.767952919006348
    9. ',x' → logprob: -15.517952919006348
    10. 'import' → logprob: -16.26795196533203

Token 805: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01815146580338478
    2. ' x' → logprob: -4.01815128326416
    3. '	x' → logprob: -14.14315128326416
    4. '   ' → logprob: -14.89315128326416
    5. '(x' → logprob: -15.51815128326416
    6. ' ' → logprob: -15.76815128326416
    7. '<|end|>' → logprob: -16.393152236938477
    8. '
' → logprob: -16.893152236938477
    9. ')x' → logprob: -17.580652236938477
    10. '  ' → logprob: -17.768152236938477

Token 806: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -2.236549335066229e-05
    2. '.' → logprob: -10.750021934509277
    3. 'x' → logprob: -14.250021934509277
    4. ' .' → logprob: -16.250022888183594
    5. '[' → logprob: -17.875022888183594
    6. '   ' → logprob: -18.000022888183594
    7. '.y' → logprob: -18.500022888183594
    8. '
' → logprob: -19.000022888183594
    9. '<|end|>' → logprob: -19.250022888183594
    10. '.
' → logprob: -19.375022888183594

Token 807: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010683455504477024
    2. '       ' → logprob: -4.885683536529541
    3. '
' → logprob: -6.760683536529541
    4. '	       ' → logprob: -7.135683536529541
    5. ',' → logprob: -8.385683059692383
    6. '		' → logprob: -9.010683059692383
    7. '<|end|>' → logprob: -9.010683059692383
    8. 'self' → logprob: -9.135683059692383
    9. '<|end|>' → logprob: -9.135683059692383
    10. '               ' → logprob: -9.385683059692383

Token 808: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00041172682540491223
    2. '		' → logprob: -8.375411987304688
    3. '	       ' → logprob: -9.875411987304688
    4. 'self' → logprob: -10.750411987304688
    5. ' and' → logprob: -10.875411987304688
    6. 'and' → logprob: -11.000411987304688
    7. '		   ' → logprob: -11.125411987304688
    8. '       ' → logprob: -11.500411987304688
    9. '   ' → logprob: -11.875411987304688
    10. '               ' → logprob: -12.000411987304688

Token 809: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0014828400453552604
    2. '           ' → logprob: -6.876482963562012
    3. ' self' → logprob: -8.251482963562012
    4. '       ' → logprob: -8.626482963562012
    5. '   ' → logprob: -12.626482963562012
    6. '	self' → logprob: -13.126482963562012
    7. ' ' → logprob: -13.376482963562012
    8. '(self' → logprob: -14.501482963562012
    9. '               ' → logprob: -14.876482963562012
    10. '         ' → logprob: -15.126482963562012

Token 810: '.y' (ID: 4486)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -4.008129963040119e-06
    2. ' y' → logprob: -12.750003814697266
    3. '.y' → logprob: -13.875003814697266
    4. 'x' → logprob: -16.875003814697266
    5. '	y' → logprob: -16.875003814697266
    6. '   ' → logprob: -18.375003814697266
    7. '.' → logprob: -18.500003814697266
    8. ' ' → logprob: -20.000003814697266
    9. '_y' → logprob: -20.125003814697266
    10. ''y' → logprob: -20.375003814697266

Token 811: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18317660689353943
    2. '=' → logprob: -1.8081766366958618
    3. 'x' → logprob: -5.808176517486572
    4. ' x' → logprob: -8.43317699432373
    5. '<|end|>' → logprob: -8.93317699432373
    6. '=x' → logprob: -10.18317699432373
    7. ' ' → logprob: -11.43317699432373
    8. '<|end|>' → logprob: -11.43317699432373
    9. 's' → logprob: -13.18317699432373
    10. '(x' → logprob: -13.30817699432373

Token 812: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0001398929744027555
    2. ' x' → logprob: -8.875140190124512
    3. '   ' → logprob: -18.375139236450195
    4. '	x' → logprob: -18.500139236450195
    5. ' ' → logprob: -20.250139236450195
    6. '<|end|>' → logprob: -20.750139236450195
    7. '(x' → logprob: -21.125139236450195
    8. '  ' → logprob: -21.750139236450195
    9. ')x' → logprob: -22.000139236450195
    10. '<|end|>' → logprob: -22.250139236450195

Token 813: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.10966761410236359
    2. 'y' → logprob: -2.4846675395965576
    3. '.' → logprob: -3.9846675395965576
    4. '<|end|>' → logprob: -6.359667778015137
    5. '.x' → logprob: -10.109667778015137
    6. '<|end|>' → logprob: -10.359667778015137
    7. ' y' → logprob: -10.484667778015137
    8. '.py' → logprob: -10.609667778015137
    9. 'x' → logprob: -10.859667778015137
    10. '   ' → logprob: -11.859667778015137

Token 814: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002637130208313465
    2. 'else' → logprob: -7.252636909484863
    3. '<|end|>' → logprob: -7.252636909484863
    4. '	' → logprob: -7.377636909484863
    5. ' else' → logprob: -8.127636909484863
    6. ')' → logprob: -9.127636909484863
    7. '<|end|>' → logprob: -10.002636909484863
    8. '   ' → logprob: -10.877636909484863
    9. ':' → logprob: -11.002636909484863
    10. '           ' → logprob: -11.127636909484863

Token 815: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007331513334065676
    2. '   ' → logprob: -7.500733375549316
    3. 'else' → logprob: -9.625733375549316
    4. '	' → logprob: -10.250733375549316
    5. 'def' → logprob: -10.500733375549316
    6. ' else' → logprob: -10.750733375549316
    7. ')' → logprob: -11.250733375549316
    8. '<|end|>' → logprob: -12.375733375549316
    9. ',' → logprob: -12.750733375549316
    10. '           ' → logprob: -13.250733375549316

Token 816: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23030363023281097
    2. 'else' (adapté à ' else') → logprob: -1.7303036451339722
    3. ' else' → logprob: -3.6053035259246826
    4. '   ' → logprob: -7.105303764343262
    5. '	else' → logprob: -8.355303764343262
    6. '	' → logprob: -9.230303764343262
    7. 'def' → logprob: -9.730303764343262
    8. 'elif' → logprob: -10.730303764343262
    9. '```' → logprob: -11.230303764343262
    10. ')' → logprob: -11.480303764343262

Token 817: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5034381747245789
    2. ':' → logprob: -1.0034382343292236
    3. '       ' → logprob: -4.0034379959106445
    4. '           ' → logprob: -4.8784379959106445
    5. '   ' → logprob: -5.8784379959106445
    6. 'super' → logprob: -9.253437995910645
    7. ' super' → logprob: -10.378437995910645
    8. '	super' → logprob: -10.503437995910645
    9. '):
' → logprob: -11.253437995910645
    10. '         ' → logprob: -11.378437995910645

Token 818: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21485643088817596
    2. '       ' → logprob: -1.7148563861846924
    3. 'self' → logprob: -4.5898566246032715
    4. 'super' → logprob: -5.8398566246032715
    5. '   ' → logprob: -9.464856147766113
    6. ' super' → logprob: -9.589856147766113
    7. '		' → logprob: -9.839856147766113
    8. '	' → logprob: -10.839856147766113
    9. ' self' → logprob: -10.839856147766113
    10. '	       ' → logprob: -11.214856147766113

Token 819: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00258636218495667
    2. 'super' → logprob: -6.377586364746094
    3. '       ' → logprob: -7.627586364746094
    4. '           ' → logprob: -8.502586364746094
    5. ' self' → logprob: -8.752586364746094
    6. 'Vector' → logprob: -11.002586364746094
    7. '   ' → logprob: -11.127586364746094
    8. ' super' → logprob: -12.877586364746094
    9. '	self' → logprob: -14.002586364746094
    10. 'Point' → logprob: -14.752586364746094

Token 820: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00010151672904612496
    2. 'x' → logprob: -9.375101089477539
    3. '.' → logprob: -11.125101089477539
    4. '=' → logprob: -13.375101089477539
    5. ' .' → logprob: -15.250101089477539
    6. ' =' → logprob: -16.87510108947754
    7. 'import' → logprob: -17.12510108947754
    8. '	x' → logprob: -18.75010108947754
    9. ' ' → logprob: -19.00010108947754
    10. ':' → logprob: -19.37510108947754

Token 821: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06198382377624512
    2. ' =' → logprob: -2.811983823776245
    3. ',' → logprob: -11.311984062194824
    4. '=x' → logprob: -12.936984062194824
    5. 'x' → logprob: -13.936984062194824
    6. '=
' → logprob: -14.811984062194824
    7. ' x' → logprob: -16.186983108520508
    8. ' =
' → logprob: -16.311983108520508
    9. ')' → logprob: -16.686983108520508
    10. ' ' → logprob: -16.936983108520508

Token 822: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.943783253314905e-05
    2. 'float' → logprob: -9.750059127807617
    3. ' x' → logprob: -13.750059127807617
    4. '0' → logprob: -17.250059127807617
    5. '   ' → logprob: -18.250059127807617
    6. '	x' → logprob: -18.500059127807617
    7. ' float' → logprob: -18.750059127807617
    8. '1' → logprob: -19.250059127807617
    9. '(x' → logprob: -20.750059127807617
    10. ' ' → logprob: -21.250059127807617

Token 823: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21791315078735352
    2. '           ' → logprob: -1.7179131507873535
    3. ',' → logprob: -4.5929131507873535
    4. 'self' → logprob: -6.2179131507873535
    5. '
' → logprob: -7.2179131507873535
    6. '   ' → logprob: -7.5929131507873535
    7. '	       ' → logprob: -7.5929131507873535
    8. '	' → logprob: -7.8429131507873535
    9. ' and' → logprob: -7.8429131507873535
    10. '<|end|>' → logprob: -7.9679131507873535

Token 824: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003777505364269018
    2. '       ' → logprob: -5.753777503967285
    3. '		' → logprob: -7.753777503967285
    4. '	       ' → logprob: -9.378777503967285
    5. '	' → logprob: -10.003777503967285
    6. '		   ' → logprob: -11.378777503967285
    7. ',' → logprob: -11.628777503967285
    8. '	   ' → logprob: -11.753777503967285
    9. '   ' → logprob: -12.753777503967285
    10. 'self' → logprob: -13.253777503967285

Token 825: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -1.4259644558478612e-05
    2. ' self' → logprob: -11.750014305114746
    3. '           ' → logprob: -12.000014305114746
    4. 'y' → logprob: -16.37501335144043
    5. '       ' → logprob: -17.50001335144043
    6. '	self' → logprob: -17.62501335144043
    7. '(self' → logprob: -18.50001335144043
    8. '   ' → logprob: -18.62501335144043
    9. '               ' → logprob: -18.87501335144043
    10. '=self' → logprob: -20.50001335144043

Token 826: '.y' (ID: 4486)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0007127894787117839
    2. ' y' → logprob: -7.250712871551514
    3. '	y' → logprob: -13.000712394714355
    4. '.y' → logprob: -14.625712394714355
    5. '_y' → logprob: -16.375713348388672
    6. '   ' → logprob: -18.000713348388672
    7. ' ' → logprob: -18.125713348388672
    8. 'x' → logprob: -18.500713348388672
    9. '
' → logprob: -19.625713348388672
    10. '    ' → logprob: -19.750713348388672

Token 827: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19845128059387207
    2. '=' → logprob: -2.073451280593872
    3. ' y' → logprob: -3.073451280593872
    4. 'y' → logprob: -4.948451042175293
    5. '<|end|>' → logprob: -8.073451042175293
    6. ' ' → logprob: -8.448451042175293
    7. '	y' → logprob: -8.573451042175293
    8. '=y' → logprob: -9.698451042175293
    9. '<|end|>' → logprob: -10.073451042175293
    10. ',' → logprob: -10.698451042175293

Token 828: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -5.157039049663581e-05
    2. ' y' → logprob: -9.875051498413086
    3. '	y' → logprob: -17.875051498413086
    4. 'x' → logprob: -19.625051498413086
    5. '   ' → logprob: -19.875051498413086
    6. '<|end|>' → logprob: -20.375051498413086
    7. ' ' → logprob: -21.625051498413086
    8. '       ' → logprob: -22.000051498413086
    9. ')y' → logprob: -22.125051498413086
    10. '0' → logprob: -22.125051498413086

Token 829: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013508652336895466
    2. '
' → logprob: -4.3885087966918945
    3. '    
' → logprob: -7.6385087966918945
    4. '@' → logprob: -8.263508796691895
    5. 'def' → logprob: -8.513508796691895
    6. '        
' → logprob: -10.763508796691895
    7. '<|end|>' → logprob: -11.388508796691895
    8. '@property' → logprob: -12.513508796691895
    9. '<|end|>' → logprob: -12.513508796691895
    10. '

' → logprob: -12.763508796691895

Token 830: '   ' (ID: 271)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.008776354603469372
    2. '   ' → logprob: -4.7587761878967285
    3. 'def' → logprob: -9.258776664733887
    4. '
' → logprob: -10.008776664733887
    5. ' @' → logprob: -11.258776664733887
    6. '

' → logprob: -12.383776664733887
    7. '    
' → logprob: -13.633776664733887
    8. '@property' → logprob: -14.258776664733887
    9. '#' → logprob: -14.383776664733887
    10. '@
' → logprob: -14.508776664733887

Token 831: ' #' (ID: 1069)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.00573372095823288
    2. 'def' → logprob: -5.255733489990234
    3. '   ' → logprob: -7.630733489990234
    4. ' @' → logprob: -11.880733489990234
    5. '
' → logprob: -12.380733489990234
    6. '@
' → logprob: -14.130733489990234
    7. '@property' → logprob: -14.505733489990234
    8. ' def' → logprob: -14.630733489990234
    9. 'staticmethod' → logprob: -14.630733489990234
    10. '@return' → logprob: -15.255733489990234

Token 832: ' ?' (ID: 1423)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.00036918214755132794
    2. 'def' → logprob: -8.12536907196045
    3. 'staticmethod' → logprob: -10.00036907196045
    4. '   ' → logprob: -11.00036907196045
    5. ' @' → logprob: -11.62536907196045
    6. '
' → logprob: -14.37536907196045
    7. 'classmethod' → logprob: -14.62536907196045
    8. '@return' → logprob: -14.87536907196045
    9. '@property' → logprob: -15.50036907196045
    10. '@index' → logprob: -15.62536907196045

Token 833: '????????' (ID: 85218)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.6360146403312683
    2. 'staticmethod' → logprob: -1.636014699935913
    3. 'def' → logprob: -2.261014699935913
    4. '   ' → logprob: -2.386014699935913
    5. ' @' → logprob: -2.636014699935913
    6. 'classmethod' → logprob: -6.136014461517334
    7. '@property' → logprob: -6.386014461517334
    8. ' ' → logprob: -6.511014461517334
    9. ' def' → logprob: -6.761014461517334
    10. '    
' → logprob: -8.386014938354492

Token 834: '???
' (ID: 136325)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18602660298347473
    2. '@' → logprob: -2.1860265731811523
    3. 'def' → logprob: -3.0610265731811523
    4. ' @' → logprob: -5.936026573181152
    5. 'staticmethod' → logprob: -6.436026573181152
    6. '@property' → logprob: -7.061026573181152
    7. ')' → logprob: -7.186026573181152
    8. '    
' → logprob: -7.436026573181152
    9. 'classmethod' → logprob: -7.686026573181152
    10. ',' → logprob: -7.811026573181152

Token 835: '   ' (ID: 271)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.17001979053020477
    2. '   ' → logprob: -2.1700198650360107
    3. 'def' → logprob: -3.1700198650360107
    4. ' @' → logprob: -9.17002010345459
    5. ' def' → logprob: -10.17002010345459
    6. '    
' → logprob: -11.54502010345459
    7. '@property' → logprob: -12.17002010345459
    8. '
' → logprob: -13.04502010345459
    9. '@
' → logprob: -13.04502010345459
    10. '@return' → logprob: -13.42002010345459

Token 836: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.008141826838254929
    2. '@' → logprob: -4.883141994476318
    3. '   ' → logprob: -7.633141994476318
    4. ' def' → logprob: -10.00814151763916
    5. '@property' → logprob: -12.38314151763916
    6. '#' → logprob: -14.75814151763916
    7. '__' → logprob: -15.00814151763916
    8. ' @' → logprob: -15.25814151763916
    9. '	def' → logprob: -15.63314151763916
    10. 'staticmethod' → logprob: -15.63314151763916

Token 837: ' __' (ID: 2516)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.004276769235730171
    2. 'cross' → logprob: -5.754276752471924
    3. '__' → logprob: -7.379276752471924
    4. ' dot' → logprob: -8.379277229309082
    5. 'norm' → logprob: -8.879277229309082
    6. ' __' → logprob: -10.129277229309082
    7. 'add' → logprob: -11.004277229309082
    8. 'abs' → logprob: -11.379277229309082
    9. 'length' → logprob: -11.754277229309082
    10. 'det' → logprob: -11.879277229309082

Token 838: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.10070811957120895
    2. 'mul' → logprob: -2.3507080078125
    3. 'sub' → logprob: -7.7257080078125
    4. 'neg' → logprob: -10.4757080078125
    5. 'abs' → logprob: -11.2257080078125
    6. 'init' → logprob: -11.3507080078125
    7. 'pos' → logprob: -12.4757080078125
    8. 'lt' → logprob: -13.9757080078125
    9. 'imul' → logprob: -14.1007080078125
    10. 'repr' → logprob: -14.7257080078125

Token 839: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.007621653378009796
    2. '__' → logprob: -4.882621765136719
    3. '__((' → logprob: -12.257621765136719
    4. '__(
' → logprob: -12.507621765136719
    5. '__(*' → logprob: -13.257621765136719
    6. '(self' → logprob: -13.507621765136719
    7. '__('' → logprob: -13.507621765136719
    8. '(' → logprob: -13.632621765136719
    9. '___' → logprob: -14.507621765136719
    10. '__("' → logprob: -15.257621765136719

Token 840: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.3663626305060461e-05
    2. ' self' → logprob: -11.50001335144043
    3. 'other' → logprob: -12.62501335144043
    4. '(self' → logprob: -16.12501335144043
    5. ',self' → logprob: -19.62501335144043
    6. ' ' → logprob: -19.87501335144043
    7. '   ' → logprob: -19.87501335144043
    8. ',' → logprob: -20.00001335144043
    9. '	self' → logprob: -20.37501335144043
    10. ' other' → logprob: -20.62501335144043

Token 841: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06411541998386383
    2. '(self' → logprob: -3.064115524291992
    3. ' (' → logprob: -4.564115524291992
    4. ')(' → logprob: -6.439115524291992
    5. ' ,' → logprob: -6.814115524291992
    6. '<|end|>' → logprob: -7.689115524291992
    7. ',self' → logprob: -7.814115524291992
    8. 'self' → logprob: -7.814115524291992
    9. ')' → logprob: -7.939115524291992
    10. '(' → logprob: -8.439115524291992

Token 842: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.018223924562335014
    2. ' other' → logprob: -4.018223762512207
    3. 'self' → logprob: -9.518223762512207
    4. ' self' → logprob: -15.393223762512207
    5. 'Other' → logprob: -15.393223762512207
    6. '_other' → logprob: -16.768224716186523
    7. '(other' → logprob: -17.393224716186523
    8. ' ' → logprob: -18.518224716186523
    9. '.other' → logprob: -19.393224716186523
    10. '其他' → logprob: -21.018224716186523

Token 843: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.043340910226106644
    2. '):
' → logprob: -3.1683409214019775
    3. ')' → logprob: -8.418340682983398
    4. '):
' → logprob: -10.168340682983398
    5. '<|end|>' → logprob: -10.168340682983398
    6. ':' → logprob: -11.043340682983398
    7. ' ):' → logprob: -11.168340682983398
    8. '):

' → logprob: -12.043340682983398
    9. '<|end|>' → logprob: -13.918340682983398
    10. '   ' → logprob: -13.918340682983398

Token 844: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05535205453634262
    2. 'Point' → logprob: -3.430351972579956
    3. ' Point' → logprob: -4.305352210998535
    4. ' return' → logprob: -5.430352210998535
    5. 'return' → logprob: -6.430352210998535
    6. '(Point' → logprob: -7.305352210998535
    7. '    ' → logprob: -8.305352210998535
    8. 'Vector' → logprob: -8.305352210998535
    9. '<Point' → logprob: -8.805352210998535
    10. '        ' → logprob: -9.055352210998535

Token 845: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.003411201061680913
    2. '       ' → logprob: -5.753411293029785
    3. 'Point' → logprob: -9.378411293029785
    4. 'Vector' → logprob: -9.503411293029785
    5. ' return' → logprob: -9.628411293029785
    6. 'if' → logprob: -11.753411293029785
    7. 'result' → logprob: -15.378411293029785
    8. '```' → logprob: -16.62841033935547
    9. ':return' → logprob: -17.25341033935547
    10. ' Point' → logprob: -17.37841033935547

Token 846: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.000755427754484117
    2. ' Vector' → logprob: -7.250755310058594
    3. 'Point' → logprob: -10.000755310058594
    4. '	Vector' → logprob: -17.125755310058594
    5. '   ' → logprob: -17.625755310058594
    6. ' Point' → logprob: -17.750755310058594
    7. '       ' → logprob: -19.500755310058594
    8. ' ' → logprob: -19.500755310058594
    9. '_Vector' → logprob: -19.750755310058594
    10. 'super' → logprob: -20.125755310058594

Token 847: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00010139751975657418
    2. '(super' → logprob: -9.375101089477539
    3. 'self' → logprob: -11.750101089477539
    4. '(' → logprob: -12.750101089477539
    5. '(Vector' → logprob: -12.875101089477539
    6. 'super' → logprob: -13.375101089477539
    7. '(Point' → logprob: -13.750101089477539
    8. '((' → logprob: -15.125101089477539
    9. '(
' → logprob: -16.62510108947754
    10. 'Vector' → logprob: -16.75010108947754

Token 848: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0016005600336939096
    2. '.' → logprob: -6.501600742340088
    3. 'x' → logprob: -9.25160026550293
    4. ' .' → logprob: -13.00160026550293
    5. '._' → logprob: -18.25160026550293
    6. ' ' → logprob: -19.00160026550293
    7. ').' → logprob: -19.00160026550293
    8. ',' → logprob: -19.25160026550293
    9. '_x' → logprob: -19.50160026550293
    10. ' x' → logprob: -19.50160026550293

Token 849: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3132629096508026
    2. ' +' → logprob: -1.313262939453125
    3. '+
' → logprob: -14.688262939453125
    4. '+,' → logprob: -15.188262939453125
    5. '＋' → logprob: -15.563262939453125
    6. ',' → logprob: -15.813262939453125
    7. '+self' → logprob: -17.438262939453125
    8. ' +
' → logprob: -17.563262939453125
    9. ' ' → logprob: -17.813262939453125
    10. '()+' → logprob: -18.063262939453125

Token 850: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.023245595395565033
    2. ' other' → logprob: -3.7732455730438232
    3. 'Other' → logprob: -16.773244857788086
    4. '(other' → logprob: -16.898244857788086
    5. '_other' → logprob: -18.148244857788086
    6. '.other' → logprob: -18.398244857788086
    7. 'OTHER' → logprob: -21.523244857788086
    8. ' ' → logprob: -22.398244857788086
    9. '其他' → logprob: -22.523244857788086
    10. ' andere' → logprob: -22.773244857788086

Token 851: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.01816106028854847
    2. '.' → logprob: -4.018161296844482
    3. 'x' → logprob: -11.893160820007324
    4. ' .' → logprob: -12.393160820007324
    5. ',' → logprob: -17.51816177368164
    6. '.
' → logprob: -18.14316177368164
    7. '.xtext' → logprob: -18.14316177368164
    8. ').' → logprob: -18.39316177368164
    9. '.gridx' → logprob: -18.39316177368164
    10. '[' → logprob: -18.51816177368164

Token 852: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5929253697395325
    2. ')' → logprob: -0.9679253697395325
    3. '<|end|>' → logprob: -2.7179253101348877
    4. '<|end|>' → logprob: -6.842925548553467
    5. ' ,' → logprob: -9.217925071716309
    6. '),' → logprob: -9.842925071716309
    7. '       ' → logprob: -10.217925071716309
    8. ')return' → logprob: -11.092925071716309
    9. '```' → logprob: -11.342925071716309
    10. ' ' → logprob: -11.342925071716309

Token 853: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7005829215049744
    2. 'self' → logprob: -0.7005829215049744
    3. 'Vector' → logprob: -4.950582981109619
    4. ' other' → logprob: -9.075582504272461
    5. ' Vector' → logprob: -9.075582504272461
    6. 'other' → logprob: -9.575582504272461
    7. ' vector' → logprob: -11.450582504272461
    8. 'vector' → logprob: -11.950582504272461
    9. '<|end|>' → logprob: -11.950582504272461
    10. ' ' → logprob: -13.700582504272461

Token 854: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.06197451800107956
    2. 'y' → logprob: -2.81197452545166
    3. '.' → logprob: -12.18697452545166
    4. '.x' → logprob: -13.43697452545166
    5. ' y' → logprob: -15.93697452545166
    6. '1' → logprob: -16.936973571777344
    7. '	y' → logprob: -16.936973571777344
    8. '
' → logprob: -17.061973571777344
    9. ' .' → logprob: -17.311973571777344
    10. 'self' → logprob: -17.311973571777344

Token 855: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1002068892121315
    2. '+' → logprob: -2.3502068519592285
    3. '+y' → logprob: -16.47520637512207
    4. '＋' → logprob: -16.97520637512207
    5. '<|end|>' → logprob: -17.10020637512207
    6. ' ' → logprob: -17.35020637512207
    7. '+
' → logprob: -17.35020637512207
    8. '+self' → logprob: -17.60020637512207
    9. ' +
' → logprob: -18.10020637512207
    10. '+x' → logprob: -18.47520637512207

Token 856: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.00671584764495492
    2. ' other' → logprob: -5.006715774536133
    3. '(other' → logprob: -14.756715774536133
    4. '.other' → logprob: -16.756715774536133
    5. 'Other' → logprob: -18.256715774536133
    6. '_other' → logprob: -18.381715774536133
    7. '+' → logprob: -19.881715774536133
    8. ' ' → logprob: -20.256715774536133
    9. 'others' → logprob: -20.381715774536133
    10. '-other' → logprob: -20.756715774536133

Token 857: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.03177587315440178
    2. '+' → logprob: -3.531775951385498
    3. '+y' → logprob: -6.406775951385498
    4. ' +' → logprob: -8.28177547454834
    5. 'y' → logprob: -9.15677547454834
    6. ')' → logprob: -12.53177547454834
    7. '.' → logprob: -12.90677547454834
    8. '+.' → logprob: -13.28177547454834
    9. ' y' → logprob: -13.28177547454834
    10. '.x' → logprob: -13.65677547454834

Token 858: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. '<|end|>' → logprob: -13.875001907348633
    3. ')
' → logprob: -14.125001907348633
    4. ')

' → logprob: -16.625001907348633
    5. ')return' → logprob: -16.875001907348633
    6. '<|end|>' → logprob: -17.500001907348633
    7. '),' → logprob: -17.875001907348633
    8. ' )' → logprob: -17.875001907348633
    9. '   ' → logprob: -18.000001907348633
    10. ')}' → logprob: -18.625001907348633

Token 859: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 860: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.04836909472942352
    2. '<|end|>' → logprob: -3.7983691692352295
    3. ' def' → logprob: -4.29836893081665
    4. '   ' → logprob: -4.67336893081665
    5. ' ' → logprob: -7.17336893081665
    6. '<|end|>' → logprob: -8.048369407653809
    7. '	def' → logprob: -8.423369407653809
    8. '
' → logprob: -8.423369407653809
    9. '```' → logprob: -8.673369407653809
    10. ')' → logprob: -9.923369407653809

Token 861: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.002495633438229561
    2. ' __' → logprob: -6.002495765686035
    3. 'def' → logprob: -11.127495765686035
    4. ' ' → logprob: -12.627495765686035
    5. 'sub' → logprob: -14.627495765686035
    6. '.__' → logprob: -14.627495765686035
    7. '_sub' → logprob: -15.002495765686035
    8. ' def' → logprob: -15.752495765686035
    9. '   ' → logprob: -15.877495765686035
    10. '___' → logprob: -16.25249481201172

Token 862: 'sub' (ID: 3834)
  Prédit: 'sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -3.8889261304575484e-06
    2. 'mul' → logprob: -12.500003814697266
    3. '_sub' → logprob: -18.000003814697266
    4. 'add' → logprob: -18.500003814697266
    5. '(sub' → logprob: -18.500003814697266
    6. '	sub' → logprob: -19.250003814697266
    7. 'lt' → logprob: -19.250003814697266
    8. ' sub' → logprob: -20.375003814697266
    9. '.sub' → logprob: -20.500003814697266
    10. 'abs' → logprob: -21.125003814697266

Token 863: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0036226429510861635
    2. '(' → logprob: -6.503622531890869
    3. '(self' → logprob: -6.628622531890869
    4. '__' → logprob: -7.253622531890869
    5. '__(
' → logprob: -10.003623008728027
    6. '__((' → logprob: -10.753623008728027
    7. '<|end|>' → logprob: -12.128623008728027
    8. 'self' → logprob: -12.628623008728027
    9. ')(' → logprob: -12.753623008728027
    10. '_(' → logprob: -13.628623008728027

Token 864: 'self' (ID: 1156)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.3938067555427551
    2. 'self' → logprob: -1.1438066959381104
    3. '(other' → logprob: -5.5188069343566895
    4. ' other' → logprob: -6.2688069343566895
    5. '(self' → logprob: -7.3938069343566895
    6. 'Vector' → logprob: -8.268806457519531
    7. ' self' → logprob: -9.643806457519531
    8. 'Other' → logprob: -9.768806457519531
    9. '(' → logprob: -11.518806457519531
    10. '.other' → logprob: -14.143806457519531

Token 865: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.16758905351161957
    2. ',' → logprob: -2.292588949203491
    3. '(' → logprob: -3.042588949203491
    4. '(other' → logprob: -5.41758918762207
    5. 'self' → logprob: -7.79258918762207
    6. ')(' → logprob: -8.41758918762207
    7. ',self' → logprob: -8.54258918762207
    8. ' (' → logprob: -8.54258918762207
    9. ')' → logprob: -11.04258918762207
    10. '__(' → logprob: -11.04258918762207

Token 866: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.5759896039962769
    2. ' other' → logprob: -0.8259896039962769
    3. 'Vector' → logprob: -10.575989723205566
    4. 'self' → logprob: -11.450989723205566
    5. 'Other' → logprob: -11.450989723205566
    6. '(other' → logprob: -12.825989723205566
    7. ' Vector' → logprob: -15.075989723205566
    8. ' self' → logprob: -15.950989723205566
    9. '_other' → logprob: -16.20098876953125
    10. '.other' → logprob: -16.45098876953125

Token 867: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18553270399570465
    2. '(self' → logprob: -1.8105326890945435
    3. '(' → logprob: -6.060532569885254
    4. ')(' → logprob: -6.935532569885254
    5. 'self' → logprob: -7.185532569885254
    6. ')' → logprob: -7.810532569885254
    7. ' (' → logprob: -8.060532569885254
    8. '):
' → logprob: -8.185532569885254
    9. '<|end|>' → logprob: -8.810532569885254
    10. '       ' → logprob: -9.435532569885254

Token 868: '       ' (ID: 309)
  Prédit: ' Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Vector' → logprob: -0.7342162132263184
    2. 'Vector' → logprob: -0.9842162132263184
    3. ' return' → logprob: -2.7342162132263184
    4. '(Vector' → logprob: -2.8592162132263184
    5. '       ' → logprob: -4.734216213226318
    6. '<Vector' → logprob: -4.984216213226318
    7. '	Vector' → logprob: -5.984216213226318
    8. 'return' → logprob: -6.234216213226318
    9. '<|end|>' → logprob: -6.484216213226318
    10. '   ' → logprob: -7.359216213226318

Token 869: ' return' (ID: 622)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.3011660873889923
    2. 'return' (adapté à ' return') → logprob: -1.55116605758667
    3. ' return' → logprob: -3.05116605758667
    4. ' Vector' → logprob: -7.30116605758667
    5. '       ' → logprob: -9.676166534423828
    6. '   ' → logprob: -13.176166534423828
    7. 'Return' → logprob: -14.426166534423828
    8. '	return' → logprob: -16.176166534423828
    9. 'Vectors' → logprob: -16.301166534423828
    10. '_Vector' → logprob: -16.301166534423828

Token 870: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.0007099286303855479
    2. ' Vector' → logprob: -7.2507100105285645
    3. '	Vector' → logprob: -18.500709533691406
    4. '(Vector' → logprob: -20.000709533691406
    5. '_Vector' → logprob: -20.500709533691406
    6. ' ' → logprob: -20.500709533691406
    7. '.Vector' → logprob: -21.000709533691406
    8. '<Vector' → logprob: -21.000709533691406
    9. '_vector' → logprob: -21.875709533691406
    10. 'Vectors' → logprob: -22.625709533691406

Token 871: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0445127372804563e-05
    2. '(Vector' → logprob: -11.50001049041748
    3. 'self' → logprob: -15.87501049041748
    4. '(' → logprob: -16.500009536743164
    5. '(this' → logprob: -18.250009536743164
    6. '(s' → logprob: -18.750009536743164
    7. '(Self' → logprob: -19.750009536743164
    8. ',self' → logprob: -19.875009536743164
    9. ' self' → logprob: -20.125009536743164
    10. 'Vector' → logprob: -20.250009536743164

Token 872: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -9.491498531133402e-06
    2. 'x' → logprob: -12.125009536743164
    3. '.' → logprob: -12.500009536743164
    4. ' .' → logprob: -15.500009536743164
    5. ')' → logprob: -17.375009536743164
    6. 'Vector' → logprob: -17.500009536743164
    7. ').' → logprob: -17.625009536743164
    8. ' -' → logprob: -17.625009536743164
    9. '<|end|>' → logprob: -17.750009536743164
    10. '-' → logprob: -18.000009536743164

Token 873: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07891038805246353
    2. '-' → logprob: -2.5789103507995605
    3. '-vector' → logprob: -11.578910827636719
    4. '.' → logprob: -12.953910827636719
    5. ' ' → logprob: -13.328910827636719
    6. '.x' → logprob: -13.828910827636719
    7. '-x' → logprob: -14.078910827636719
    8. ' -
' → logprob: -14.203910827636719
    9. '-self' → logprob: -14.328910827636719
    10. '<|end|>' → logprob: -14.578910827636719

Token 874: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.3868730664253235
    2. ' other' → logprob: -1.1368730068206787
    3. 'Other' → logprob: -13.886873245239258
    4. '(other' → logprob: -14.136873245239258
    5. '.other' → logprob: -15.761873245239258
    6. '_other' → logprob: -15.886873245239258
    7. '<|end|>' → logprob: -17.761873245239258
    8. 'OTHER' → logprob: -19.886873245239258
    9. 'self' → logprob: -19.886873245239258
    10. ' ' → logprob: -20.386873245239258

Token 875: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00013846253568772227
    2. '.y' → logprob: -9.125138282775879
    3. '.' → logprob: -10.750138282775879
    4. 'other' → logprob: -12.625138282775879
    5. '.other' → logprob: -12.750138282775879
    6. ' .' → logprob: -13.500138282775879
    7. 'x' → logprob: -15.375138282775879
    8. ' other' → logprob: -15.500138282775879
    9. '(other' → logprob: -17.000139236450195
    10. 'Other' → logprob: -17.625139236450195

Token 876: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024608144303783774
    2. '<|end|>' → logprob: -9.000246047973633
    3. ' ,' → logprob: -9.750246047973633
    4. ')' → logprob: -9.875246047973633
    5. ',x' → logprob: -12.375246047973633
    6. '),' → logprob: -12.625246047973633
    7. '<|end|>' → logprob: -13.125246047973633
    8. ',y' → logprob: -13.875246047973633
    9. ' ' → logprob: -15.250246047973633
    10. ',self' → logprob: -15.500246047973633

Token 877: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.9469553232192993
    2. ' other' → logprob: -0.9469553232192993
    3. 'self' → logprob: -1.6969553232192993
    4. 'other' → logprob: -3.1969552040100098
    5. 'Other' → logprob: -11.071955680847168
    6. 'Vector' → logprob: -11.321955680847168
    7. ' Vector' → logprob: -12.821955680847168
    8. ' ' → logprob: -14.071955680847168
    9. '(other' → logprob: -15.071955680847168
    10. '(self' → logprob: -15.196955680847168

Token 878: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -4.167648876318708e-05
    2. 'y' → logprob: -10.250041961669922
    3. '.' → logprob: -12.125041961669922
    4. ' y' → logprob: -15.375041961669922
    5. 'other' → logprob: -15.500041961669922
    6. '.x' → logprob: -15.625041961669922
    7. ' .' → logprob: -16.375041961669922
    8. ',y' → logprob: -17.250041961669922
    9. '	y' → logprob: -17.500041961669922
    10. 'Vector' → logprob: -18.375041961669922

Token 879: ' -' (ID: 533)
  Prédit: '.y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.6563181281089783
    2. '-' → logprob: -1.656318187713623
    3. ' -' → logprob: -2.031318187713623
    4. '<|end|>' → logprob: -2.906318187713623
    5. '.other' → logprob: -3.531318187713623
    6. '+' → logprob: -3.906318187713623
    7. 'y' → logprob: -4.031318187713623
    8. ' ' → logprob: -4.531318187713623
    9. ' +' → logprob: -4.906318187713623
    10. '<|end|>' → logprob: -5.531318187713623

Token 880: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0005530327325686812
    2. ' other' → logprob: -7.500553131103516
    3. '(other' → logprob: -17.500553131103516
    4. 'Other' → logprob: -18.125553131103516
    5. '.other' → logprob: -19.000553131103516
    6. '_other' → logprob: -20.125553131103516
    7. 'OTHER' → logprob: -22.125553131103516
    8. '-other' → logprob: -22.375553131103516
    9. 'othe' → logprob: -22.875553131103516
    10. '其他' → logprob: -23.250553131103516

Token 881: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.00031735055381432176
    2. '.x' → logprob: -8.500317573547363
    3. '.' → logprob: -9.875317573547363
    4. '.other' → logprob: -11.000317573547363
    5. '1' → logprob: -11.125317573547363
    6. 'other' → logprob: -11.750317573547363
    7. '-' → logprob: -12.125317573547363
    8. 'y' → logprob: -12.500317573547363
    9. ' .' → logprob: -12.750317573547363
    10. ')' → logprob: -13.250317573547363

Token 882: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003971839905716479
    2. '<|end|>' → logprob: -8.000396728515625
    3. '   ' → logprob: -10.125396728515625
    4. '<|end|>' → logprob: -11.000396728515625
    5. ' ' → logprob: -13.375396728515625
    6. ')
' → logprob: -14.000396728515625
    7. ' )' → logprob: -14.125396728515625
    8. ')return' → logprob: -14.375396728515625
    9. ')

' → logprob: -15.500396728515625
    10. '),' → logprob: -15.750396728515625

Token 883: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001692911726422608
    2. 'def' → logprob: -6.501692771911621
    3. ' def' → logprob: -9.001692771911621
    4. '<|end|>' → logprob: -10.876692771911621
    5. '  ' → logprob: -11.126692771911621
    6. ' ' → logprob: -11.376692771911621
    7. '    
' → logprob: -12.001692771911621
    8. '	def' → logprob: -12.626692771911621
    9. ')' → logprob: -12.751692771911621
    10. '```' → logprob: -12.751692771911621

Token 884: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3872452676296234
    2. '   ' → logprob: -1.1372452974319458
    3. ' def' → logprob: -8.012245178222656
    4. '@' → logprob: -11.137245178222656
    5. ')' → logprob: -12.012245178222656
    6. '	def' → logprob: -12.012245178222656
    7. '@property' → logprob: -12.387245178222656
    8. '```' → logprob: -12.887245178222656
    9. ' ' → logprob: -13.387245178222656
    10. ':def' → logprob: -13.387245178222656

Token 885: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.6152952909469604
    2. '__' → logprob: -0.8652952909469604
    3. ' cross' → logprob: -3.61529541015625
    4. 'cross' → logprob: -4.49029541015625
    5. 'mul' → logprob: -8.74029541015625
    6. 'dot' → logprob: -9.11529541015625
    7. 'abs' → logprob: -9.74029541015625
    8. ' dot' → logprob: -9.99029541015625
    9. ' ' → logprob: -10.24029541015625
    10. 'def' → logprob: -10.74029541015625

Token 886: 'mul' (ID: 44857)
  Prédit: 'mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -1.8624639324116288e-06
    2. 'rm' → logprob: -13.500001907348633
    3. 'neg' → logprob: -15.125001907348633
    4. 'eq' → logprob: -16.625001907348633
    5. 'abs' → logprob: -16.750001907348633
    6. 'lt' → logprob: -17.000001907348633
    7. ' mul' → logprob: -17.500001907348633
    8. 'mult' → logprob: -18.625001907348633
    9. '```' → logprob: -18.875001907348633
    10. 'imul' → logprob: -19.250001907348633

Token 887: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.48554179072380066
    2. '(self' → logprob: -0.985541820526123
    3. '(' → logprob: -4.735541820526123
    4. '<|end|>' → logprob: -6.360541820526123
    5. '__((' → logprob: -8.360541343688965
    6. ' (' → logprob: -8.610541343688965
    7. '__(
' → logprob: -9.235541343688965
    8. '__' → logprob: -9.360541343688965
    9. 'self' → logprob: -9.360541343688965
    10. '__(*' → logprob: -10.110541343688965

Token 888: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004752367385663092
    2. ' self' → logprob: -8.25047492980957
    3. '(self' → logprob: -8.50047492980957
    4. '   ' → logprob: -12.37547492980957
    5. ' ' → logprob: -12.87547492980957
    6. '0' → logprob: -13.75047492980957
    7. 'def' → logprob: -14.62547492980957
    8. '1' → logprob: -14.87547492980957
    9. '  ' → logprob: -15.25047492980957
    10. '	self' → logprob: -15.37547492980957

Token 889: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005186913069337606
    2. '(' → logprob: -5.755187034606934
    3. 'self' → logprob: -6.505187034606934
    4. '__(' → logprob: -7.880187034606934
    5. ' (' → logprob: -9.380187034606934
    6. 's' → logprob: -11.630187034606934
    7. '_(' → logprob: -11.630187034606934
    8. '1' → logprob: -12.130187034606934
    9. '(s' → logprob: -12.380187034606934
    10. ',' → logprob: -12.880187034606934

Token 890: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.16347980499267578
    2. 'self' → logprob: -1.9134798049926758
    3. ' other' → logprob: -5.913479804992676
    4. ' self' → logprob: -7.913479804992676
    5. 'float' → logprob: -8.913479804992676
    6. 'int' → logprob: -11.038479804992676
    7. 'Other' → logprob: -11.288479804992676
    8. ' ' → logprob: -12.038479804992676
    9. 'scalar' → logprob: -12.163479804992676
    10. '   ' → logprob: -13.163479804992676

Token 891: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1515192985534668
    2. '(self' → logprob: -1.4015192985534668
    3. '(other' → logprob: -1.5265192985534668
    4. '(' → logprob: -1.9015192985534668
    5. ' (' → logprob: -3.026519298553467
    6. 'other' → logprob: -4.526519298553467
    7. 'self' → logprob: -5.651519298553467
    8. ':' → logprob: -6.776519298553467
    9. '(Vector' → logprob: -6.901519298553467
    10. ' ' → logprob: -7.026519298553467

Token 892: '       ' (ID: 309)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.018482232466340065
    2. ' Vector' → logprob: -4.893482208251953
    3. 'other' → logprob: -5.143482208251953
    4. 'self' → logprob: -5.768482208251953
    5. '(Vector' → logprob: -7.393482208251953
    6. ' other' → logprob: -7.643482208251953
    7. 'Point' → logprob: -8.268482208251953
    8. ' self' → logprob: -8.268482208251953
    9. '(other' → logprob: -9.268482208251953
    10. '(self' → logprob: -10.018482208251953

Token 893: ' return' (ID: 622)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.033256836235523224
    2. ' Vector' → logprob: -3.533256769180298
    3. 'self' → logprob: -5.783257007598877
    4. ' self' → logprob: -8.533256530761719
    5. 'other' → logprob: -8.533256530761719
    6. ' other' → logprob: -10.908256530761719
    7. '	Vector' → logprob: -12.783256530761719
    8. '(Vector' → logprob: -12.783256530761719
    9. '_Vector' → logprob: -13.533256530761719
    10. ' ' → logprob: -14.158256530761719

Token 894: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.0008176080300472677
    2. ' Vector' → logprob: -7.125817775726318
    3. 'self' → logprob: -12.00081729888916
    4. 'Point' → logprob: -12.00081729888916
    5. '	Vector' → logprob: -15.37581729888916
    6. 'other' → logprob: -15.50081729888916
    7. '(Vector' → logprob: -15.87581729888916
    8. 'float' → logprob: -16.000818252563477
    9. '   ' → logprob: -16.125818252563477
    10. ' ' → logprob: -16.875818252563477

Token 895: '(other' (ID: 32550)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5247881412506104
    2. '(other' → logprob: -1.0247881412506104
    3. '(Vector' → logprob: -3.0247881412506104
    4. '(Point' → logprob: -8.024787902832031
    5. '(' → logprob: -8.399787902832031
    6. 'self' → logprob: -9.024787902832031
    7. 'Vector' → logprob: -9.274787902832031
    8. '(
' → logprob: -9.899787902832031
    9. '(s' → logprob: -10.649787902832031
    10. 'other' → logprob: -10.899787902832031

Token 896: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.00029840084607712924
    2. '*' → logprob: -8.125298500061035
    3. '*self' → logprob: -13.125298500061035
    4. ' ' → logprob: -15.000298500061035
    5. ' self' → logprob: -18.25029754638672
    6. 'self' → logprob: -18.50029754638672
    7. ' ' → logprob: -18.75029754638672
    8. 's' → logprob: -19.62529754638672
    9. ' *
' → logprob: -19.75029754638672
    10. '(self' → logprob: -20.25029754638672

Token 897: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16022545099258423
    2. ' self' → logprob: -1.9102253913879395
    3. '(self' → logprob: -14.285225868225098
    4. ' ' → logprob: -15.285225868225098
    5. '	self' → logprob: -15.535225868225098
    6. '[self' → logprob: -17.16022491455078
    7. '   ' → logprob: -17.53522491455078
    8. 's' → logprob: -17.53522491455078
    9. 'Self' → logprob: -17.66022491455078
    10. 'x' → logprob: -17.66022491455078

Token 898: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0040818434208631516
    2. 'x' → logprob: -5.504081726074219
    3. '.' → logprob: -13.504081726074219
    4. ' x' → logprob: -13.629081726074219
    5. 'self' → logprob: -14.254081726074219
    6. '_x' → logprob: -17.37908172607422
    7. ' .' → logprob: -17.50408172607422
    8. '<|end|>' → logprob: -17.62908172607422
    9. 's' → logprob: -18.37908172607422
    10. '0' → logprob: -18.50408172607422

Token 899: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00219118339009583
    2. ' ,' → logprob: -6.127191066741943
    3. ',self' → logprob: -12.127191543579102
    4. ',
' → logprob: -15.502191543579102
    5. 'self' → logprob: -15.627191543579102
    6. ')' → logprob: -16.2521915435791
    7. ' self' → logprob: -17.2521915435791
    8. ',int' → logprob: -17.5021915435791
    9. '<|end|>' → logprob: -17.8771915435791
    10. ',s' → logprob: -19.0021915435791

Token 900: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.03804183006286621
    2. ' other' → logprob: -3.288041830062866
    3. 'self' → logprob: -15.788042068481445
    4. 'othe' → logprob: -16.038042068481445
    5. ' ' → logprob: -16.288042068481445
    6. 'Other' → logprob: -16.913042068481445
    7. '(other' → logprob: -18.038042068481445
    8. '.other' → logprob: -18.413042068481445
    9. '   ' → logprob: -18.788042068481445
    10. ' oth' → logprob: -18.913042068481445

Token 901: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10251297801733017
    2. ' *' → logprob: -2.477513074874878
    3. ' self' → logprob: -5.227512836456299
    4. ' ' → logprob: -6.102512836456299
    5. '*' → logprob: -6.227512836456299
    6. ' ,' → logprob: -6.727512836456299
    7. 'self' → logprob: -6.977512836456299
    8. ')' → logprob: -7.102512836456299
    9. '.' → logprob: -8.227513313293457
    10. '*self' → logprob: -8.477513313293457

Token 902: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007099286303855479
    2. ' self' → logprob: -7.2507100105285645
    3. 'y' → logprob: -17.625709533691406
    4. '(self' → logprob: -17.875709533691406
    5. '	self' → logprob: -18.250709533691406
    6. '[self' → logprob: -20.000709533691406
    7. ' ' → logprob: -20.000709533691406
    8. 'other' → logprob: -20.375709533691406
    9. '.self' → logprob: -20.625709533691406
    10. 'sel' → logprob: -20.750709533691406

Token 903: '.y' (ID: 4486)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.004126130603253841
    2. '.y' → logprob: -5.504126071929932
    3. ' y' → logprob: -10.00412654876709
    4. '_y' → logprob: -14.00412654876709
    5. '	y' → logprob: -14.37912654876709
    6. 'Y' → logprob: -14.87912654876709
    7. 'x' → logprob: -14.87912654876709
    8. ',y' → logprob: -16.254125595092773
    9. ')y' → logprob: -16.254125595092773
    10. 'self' → logprob: -16.379125595092773

Token 904: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0024978946894407272
    2. '<|end|>' → logprob: -6.002497673034668
    3. '<|end|>' → logprob: -10.877497673034668
    4. '   ' → logprob: -14.127497673034668
    5. ' )' → logprob: -14.127497673034668
    6. '),' → logprob: -15.002497673034668
    7. ')

' → logprob: -15.127497673034668
    8. ')
' → logprob: -15.502497673034668
    9. ')return' → logprob: -15.627497673034668
    10. '}' → logprob: -16.127498626708984

Token 905: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 906: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4171382784843445
    2. 'def' (adapté à ' def') → logprob: -1.1671383380889893
    3. ' ' → logprob: -3.9171383380889893
    4. ' def' → logprob: -4.91713809967041
    5. '  ' → logprob: -7.41713809967041
    6. '(' → logprob: -7.54213809967041
    7. ')' → logprob: -7.66713809967041
    8. '	def' → logprob: -7.79213809967041
    9. '*' → logprob: -8.79213809967041
    10. '<|end|>' → logprob: -9.29213809967041

Token 907: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06844770163297653
    2. 'def' → logprob: -3.1934475898742676
    3. ' __' → logprob: -3.9434475898742676
    4. ' def' → logprob: -5.193447589874268
    5. 'Vector' → logprob: -9.818448066711426
    6. 'tr' → logprob: -10.693448066711426
    7. '/__' → logprob: -10.693448066711426
    8. '(__' → logprob: -11.568448066711426
    9. '```' → logprob: -11.568448066711426
    10. 'div' → logprob: -11.943448066711426

Token 908: 'tr' (ID: 371)
  Prédit: 'tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.08067706972360611
    2. 'rm' → logprob: -2.580677032470703
    3. 'mul' → logprob: -6.330677032470703
    4. 'flo' → logprob: -13.330677032470703
    5. 'imul' → logprob: -13.455677032470703
    6. 'pow' → logprob: -14.455677032470703
    7. ' tr' → logprob: -15.080677032470703
    8. 'rf' → logprob: -15.330677032470703
    9. '(tr' → logprob: -15.955677032470703
    10. 'neg' → logprob: -15.955677032470703

Token 909: 'ued' (ID: 5829)
  Prédit: 'ued'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ued' → logprob: -0.00015300170343834907
    2. 'ue' → logprob: -9.750152587890625
    3. 'u' → logprob: -10.250152587890625
    4. '__' → logprob: -10.500152587890625
    5. 'ed' → logprob: -11.875152587890625
    6. '```' → logprob: -12.125152587890625
    7. '
' → logprob: -12.500152587890625
    8. 'uer' → logprob: -12.750152587890625
    9. '#' → logprob: -13.125152587890625
    10. '   ' → logprob: -13.250152587890625

Token 910: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.005381741560995579
    2. '__' → logprob: -5.8803815841674805
    3. 'v' → logprob: -7.0053815841674805
    4. 'div' → logprob: -7.2553815841674805
    5. 'vi' → logprob: -7.5053815841674805
    6. 'ivi' → logprob: -9.38038158416748
    7. '/' → logprob: -9.75538158416748
    8. 'ub' → logprob: -9.88038158416748
    9. 'def' → logprob: -10.38038158416748
    10. 'IV' → logprob: -10.75538158416748

Token 911: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0048441230319440365
    2. '(' → logprob: -5.3798441886901855
    3. '__(' → logprob: -9.129843711853027
    4. 'self' → logprob: -9.504843711853027
    5. ' (' → logprob: -11.004843711853027
    6. ')(' → logprob: -11.504843711853027
    7. '<|end|>' → logprob: -12.629843711853027
    8. ' ' → logprob: -13.629843711853027
    9. '```' → logprob: -13.754843711853027
    10. '_(' → logprob: -13.879843711853027

Token 912: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.5570885807392187e-05
    2. ' self' → logprob: -11.125015258789062
    3. '(self' → logprob: -14.500015258789062
    4. 's' → logprob: -16.875015258789062
    5. 'def' → logprob: -17.250015258789062
    6. '   ' → logprob: -17.625015258789062
    7. ' ' → logprob: -18.375015258789062
    8. '1' → logprob: -19.125015258789062
    9. '	self' → logprob: -19.375015258789062
    10. '0' → logprob: -19.625015258789062

Token 913: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.09821747988462448
    2. 'self' → logprob: -2.473217487335205
    3. ',' → logprob: -5.348217487335205
    4. ' self' → logprob: -5.723217487335205
    5. '(' → logprob: -7.348217487335205
    6. ',self' → logprob: -8.723217010498047
    7. ' (' → logprob: -8.848217010498047
    8. '   ' → logprob: -9.848217010498047
    9. '	self' → logprob: -9.973217010498047
    10. ' ' → logprob: -10.223217010498047

Token 914: ' other' (ID: 1273)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3140490651130676
    2. 'other' → logprob: -1.3140490055084229
    3. ' other' → logprob: -7.314049243927002
    4. ' self' → logprob: -9.064048767089844
    5. 'Other' → logprob: -12.189048767089844
    6. '_other' → logprob: -16.564048767089844
    7. '(self' → logprob: -17.064048767089844
    8. '2' → logprob: -17.689048767089844
    9. 's' → logprob: -18.814048767089844
    10. 'def' → logprob: -19.189048767089844

Token 915: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.09150207787752151
    2. 'self' → logprob: -3.2165021896362305
    3. ',' → logprob: -3.3415021896362305
    4. '(' → logprob: -4.7165021896362305
    5. ')(' → logprob: -6.8415021896362305
    6. ')' → logprob: -7.4665021896362305
    7. ' (' → logprob: -7.5915021896362305
    8. '   ' → logprob: -8.21650218963623
    9. ' self' → logprob: -8.46650218963623
    10. ',self' → logprob: -9.09150218963623

Token 916: '       ' (ID: 309)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.5360304117202759
    2. '       ' → logprob: -1.0360304117202759
    3. '   ' → logprob: -3.2860302925109863
    4. ' return' → logprob: -4.786030292510986
    5. ' Vector' → logprob: -5.036030292510986
    6. 'return' → logprob: -5.036030292510986
    7. '(Vector' → logprob: -7.536030292510986
    8. '	Vector' → logprob: -8.786030769348145
    9. 'def' → logprob: -9.036030769348145
    10. ' ' → logprob: -9.286030769348145

Token 917: ' return' (ID: 622)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -5.836499985889532e-05
    2. ' Vector' → logprob: -9.7500581741333
    3. '	Vector' → logprob: -20.125059127807617
    4. '_Vector' → logprob: -20.750059127807617
    5. 'return' (adapté à ' return') → logprob: -20.875059127807617
    6. 'Vectors' → logprob: -21.625059127807617
    7. '   ' → logprob: -22.000059127807617
    8. '.Vector' → logprob: -22.500059127807617
    9. 'Point' → logprob: -22.625059127807617
    10. '<Vector' → logprob: -22.750059127807617

Token 918: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.0001234428636962548
    2. ' Vector' → logprob: -9.000123023986816
    3. '	Vector' → logprob: -20.000123977661133
    4. 'Point' → logprob: -21.000123977661133
    5. 'vector' → logprob: -22.125123977661133
    6. '_Vector' → logprob: -22.750123977661133
    7. '   ' → logprob: -23.000123977661133
    8. '(Vector' → logprob: -23.000123977661133
    9. 'self' → logprob: -23.125123977661133
    10. ' ' → logprob: -23.375123977661133

Token 919: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.1517960956552997e-05
    2. '(Vector' → logprob: -11.875011444091797
    3. 'self' → logprob: -12.375011444091797
    4. '(' → logprob: -15.250011444091797
    5. 'Vector' → logprob: -17.625011444091797
    6. ' (' → logprob: -18.000011444091797
    7. '(
' → logprob: -18.375011444091797
    8. ' self' → logprob: -19.250011444091797
    9. '(s' → logprob: -19.625011444091797
    10. '(Point' → logprob: -19.625011444091797

Token 920: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.001009707571938634
    2. '.' → logprob: -7.376009941101074
    3. 'x' → logprob: -7.876009941101074
    4. ' .' → logprob: -12.876009941101074
    5. ' ' → logprob: -15.001009941101074
    6. ' x' → logprob: -16.501008987426758
    7. '._' → logprob: -16.626008987426758
    8. '1' → logprob: -16.876008987426758
    9. '[' → logprob: -17.126008987426758
    10. '/' → logprob: -17.251008987426758

Token 921: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.10020667314529419
    2. ' /' → logprob: -2.3502066135406494
    3. '/__' → logprob: -17.10020637512207
    4. ' ' → logprob: -17.97520637512207
    5. 'div' → logprob: -18.35020637512207
    6. ' ' → logprob: -18.85020637512207
    7. '/div' → logprob: -18.97520637512207
    8. '   ' → logprob: -19.47520637512207
    9. '/usr' → logprob: -19.47520637512207
    10. '/
' → logprob: -19.85020637512207

Token 922: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0004306692280806601
    2. ' other' → logprob: -7.750430583953857
    3. 'Other' → logprob: -21.750431060791016
    4. '(other' → logprob: -21.875431060791016
    5. '_other' → logprob: -23.750431060791016
    6. '.other' → logprob: -23.750431060791016
    7. 'others' → logprob: -24.500431060791016
    8. ' ' → logprob: -24.750431060791016
    9. 'self' → logprob: -25.250431060791016
    10. 'float' → logprob: -25.500431060791016

Token 923: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.796184723294573e-06
    2. ' ,' → logprob: -12.125005722045898
    3. ')' → logprob: -15.500005722045898
    4. ' ' → logprob: -19.2500057220459
    5. '2' → logprob: -19.7500057220459
    6. ',
' → logprob: -19.8750057220459
    7. '),' → logprob: -21.0000057220459
    8. '،' → logprob: -21.1250057220459
    9. '1' → logprob: -21.3750057220459
    10. '，' → logprob: -21.5000057220459

Token 924: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009114635176956654
    2. ' self' → logprob: -7.000911235809326
    3. 'other' → logprob: -20.750911712646484
    4. ' ' → logprob: -21.375911712646484
    5. '	self' → logprob: -21.750911712646484
    6. '   ' → logprob: -22.000911712646484
    7. '(self' → logprob: -23.125911712646484
    8. '  ' → logprob: -24.375911712646484
    9. ' other' → logprob: -24.500911712646484
    10. '       ' → logprob: -24.625911712646484

Token 925: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.4638044238090515
    2. 'y' → logprob: -1.2138044834136963
    3. ' y' → logprob: -2.7138044834136963
    4. '.' → logprob: -5.588804244995117
    5. ' ' → logprob: -5.963804244995117
    6. ',' → logprob: -7.713804244995117
    7. '.py' → logprob: -7.838804244995117
    8. 'Y' → logprob: -9.338804244995117
    9. ')' → logprob: -9.463804244995117
    10. '>' → logprob: -9.838804244995117

Token 926: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.6931880116462708
    2. ' /' → logprob: -0.6931880116462708
    3. ')' → logprob: -10.193187713623047
    4. ',' → logprob: -13.693187713623047
    5. ' ' → logprob: -14.318187713623047
    6. '/usr' → logprob: -14.943187713623047
    7. '[' → logprob: -15.318187713623047
    8. '*' → logprob: -15.568187713623047
    9. ' ' → logprob: -15.693187713623047
    10. '/div' → logprob: -16.568187713623047

Token 927: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -7.493430894101039e-05
    2. ' other' → logprob: -9.500075340270996
    3. '(other' → logprob: -22.87507438659668
    4. 'Other' → logprob: -23.50007438659668
    5. ' ' → logprob: -24.12507438659668
    6. '2' → logprob: -24.50007438659668
    7. '.other' → logprob: -24.75007438659668
    8. '_other' → logprob: -25.75007438659668
    9. 'others' → logprob: -26.00007438659668
    10. '   ' → logprob: -26.62507438659668

Token 928: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008128436165861785
    2. '<|end|>' → logprob: -7.125813007354736
    3. '<|end|>' → logprob: -12.625812530517578
    4. '   ' → logprob: -13.125812530517578
    5. ')
' → logprob: -13.625812530517578
    6. ')return' → logprob: -14.500812530517578
    7. ')

' → logprob: -14.500812530517578
    8. ' ' → logprob: -15.750812530517578
    9. ' )' → logprob: -16.000812530517578
    10. '```' → logprob: -16.375812530517578

Token 929: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007997421780601144
    2. 'def' → logprob: -7.750799655914307
    3. '@' → logprob: -8.000800132751465
    4. 'class' → logprob: -11.125800132751465
    5. '
' → logprob: -11.250800132751465
    6. '```' → logprob: -13.125800132751465
    7. '    
' → logprob: -13.375800132751465
    8. '@property' → logprob: -14.000800132751465
    9. ' def' → logprob: -14.625800132751465
    10. 'classmethod' → logprob: -15.625800132751465

Token 930: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8695291876792908
    2. '@' (adapté à ' @') → logprob: -1.1195292472839355
    3. 'def' → logprob: -1.3695292472839355
    4. '@property' → logprob: -9.244528770446777
    5. ' def' → logprob: -9.494528770446777
    6. ' @' → logprob: -12.119528770446777
    7. '```' → logprob: -12.369528770446777
    8. '#' → logprob: -13.119528770446777
    9. '@return' → logprob: -13.744528770446777
    10. '
' → logprob: -13.744528770446777

Token 931: 'classmethod' (ID: 64680)
  Prédit: 'staticmethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -8.2994620242971e-06
    2. 'classmethod' → logprob: -11.750008583068848
    3. 'static' → logprob: -15.000008583068848
    4. 'property' → logprob: -17.00000762939453
    5. '@' → logprob: -23.62500762939453
    6. ' static' → logprob: -23.75000762939453
    7. 'stat' → logprob: -25.00000762939453
    8. 'st' → logprob: -25.75000762939453
    9. 'Static' → logprob: -26.12500762939453
    10. '_static' → logprob: -26.62500762939453

Token 932: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002719449403230101
    2. '   ' → logprob: -8.500271797180176
    3. ' def' → logprob: -9.875271797180176
    4. '
' → logprob: -11.000271797180176
    5. '	def' → logprob: -15.875271797180176
    6. ':def' → logprob: -16.625272750854492
    7. '(def' → logprob: -17.250272750854492
    8. ' ' → logprob: -17.875272750854492
    9. '[' → logprob: -18.000272750854492
    10. '```' → logprob: -18.125272750854492

Token 933: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.692145012086257e-05
    2. '   ' → logprob: -10.000046730041504
    3. ' def' → logprob: -13.875046730041504
    4. '
' → logprob: -14.750046730041504
    5. '	def' → logprob: -17.25004768371582
    6. ':def' → logprob: -17.37504768371582
    7. '#' → logprob: -18.50004768371582
    8. '(def' → logprob: -19.37504768371582
    9. 'from' → logprob: -19.50004768371582
    10. ':' → logprob: -20.25004768371582

Token 934: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.2664456789934775e-06
    2. '   ' → logprob: -14.125000953674316
    3. '
' → logprob: -15.125000953674316
    4. 'staticmethod' → logprob: -16.250001907348633
    5. ' def' → logprob: -16.750001907348633
    6. 'from' → logprob: -18.000001907348633
    7. '	def' → logprob: -18.250001907348633
    8. ' ' → logprob: -18.375001907348633
    9. 'classmethod' → logprob: -18.375001907348633
    10. ':def' → logprob: -19.625001907348633

Token 935: ' dot' (ID: 16579)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.2617008400848135e-05
    2. 'dot' → logprob: -10.375032424926758
    3. 'staticmethod' → logprob: -14.125032424926758
    4. ' def' → logprob: -14.375032424926758
    5. '@' → logprob: -17.000032424926758
    6. '
' → logprob: -18.625032424926758
    7. '.dot' → logprob: -19.125032424926758
    8. '	def' → logprob: -19.875032424926758
    9. 'static' → logprob: -20.250032424926758
    10. '   ' → logprob: -20.250032424926758

Token 936: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.0009692259482108057
    2. 'cls' → logprob: -7.000969409942627
    3. 'def' → logprob: -10.250968933105469
    4. '(' → logprob: -11.625968933105469
    5. 'classmethod' → logprob: -12.125968933105469
    6. '(cl' → logprob: -13.000968933105469
    7. '   ' → logprob: -13.125968933105469
    8. '(clazz' → logprob: -13.250968933105469
    9. ' cls' → logprob: -14.500968933105469
    10. 'class' → logprob: -14.625968933105469

Token 937: ',' (ID: 11)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.007355071138590574
    2. ',' → logprob: -5.132355213165283
    3. '(' → logprob: -7.257355213165283
    4. '   ' → logprob: -8.382354736328125
    5. 'def' → logprob: -8.507354736328125
    6. ' (' → logprob: -9.007354736328125
    7. '(self' → logprob: -9.882354736328125
    8. ')(' → logprob: -10.382354736328125
    9. ')' → logprob: -10.507354736328125
    10. 'cls' → logprob: -11.132354736328125

Token 938: ' a' (ID: 261)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.20683027803897858
    2. 'a' → logprob: -2.4568302631378174
    3. 'v' → logprob: -2.4568302631378174
    4. 'self' → logprob: -4.3318305015563965
    5. 'cl' → logprob: -6.5818305015563965
    6. 'c' → logprob: -8.206830024719238
    7. ' cls' → logprob: -8.831830024719238
    8. 'lhs' → logprob: -9.331830024719238
    9. '(cls' → logprob: -9.956830024719238
    10. 'k' → logprob: -9.956830024719238

Token 939: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010008628305513412
    2. ',b' → logprob: -10.000100135803223
    3. ',a' → logprob: -10.375100135803223
    4. ' ,' → logprob: -10.875100135803223
    5. '(cls' → logprob: -12.875100135803223
    6. ',class' → logprob: -14.625100135803223
    7. ',c' → logprob: -15.000100135803223
    8. 'a' → logprob: -15.250100135803223
    9. ',y' → logprob: -15.625100135803223
    10. ',k' → logprob: -15.750100135803223

Token 940: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -4.584861744660884e-05
    2. ' b' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.000045776367188
    4. '  ' → logprob: -17.875045776367188
    5. ' ' → logprob: -18.125045776367188
    6. '	b' → logprob: -18.500045776367188
    7. '    ' → logprob: -19.000045776367188
    8. '       ' → logprob: -20.000045776367188
    9. ')b' → logprob: -21.375045776367188
    10. '     ' → logprob: -21.750045776367188

Token 941: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47606518864631653
    2. '):' → logprob: -0.9760651588439941
    3. '):
' → logprob: -6.601065158843994
    4. '(cls' → logprob: -7.601065158843994
    5. ' ,' → logprob: -9.601065635681152
    6. '   ' → logprob: -10.351065635681152
    7. ')' → logprob: -11.476065635681152
    8. ' ):' → logprob: -11.976065635681152
    9. 'cls' → logprob: -12.226065635681152
    10. '):
' → logprob: -12.851065635681152

Token 942: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002848152944352478
    2. 'return' → logprob: -8.375285148620605
    3. ' return' → logprob: -10.000285148620605
    4. '   ' → logprob: -11.875285148620605
    5. '      ' → logprob: -14.750285148620605
    6. '	return' → logprob: -15.375285148620605
    7. ':return' → logprob: -15.500285148620605
    8. ':' → logprob: -15.875285148620605
    9. '	' → logprob: -16.00028419494629
    10. '     ' → logprob: -16.25028419494629

Token 943: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00028290803311392665
    2. '       ' → logprob: -8.250283241271973
    3. ' return' → logprob: -11.000283241271973
    4. '   ' → logprob: -12.250283241271973
    5. '	return' → logprob: -15.500283241271973
    6. '"""' → logprob: -18.250282287597656
    7. '        ' → logprob: -20.375282287597656
    8. '    ' → logprob: -20.750282287597656
    9. ':return' → logprob: -20.875282287597656
    10. 'ret' → logprob: -21.125282287597656

Token 944: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -5.796184723294573e-06
    2. ' a' → logprob: -12.125005722045898
    3. '(a' → logprob: -15.250005722045898
    4. '	a' → logprob: -18.7500057220459
    5. '   ' → logprob: -20.3750057220459
    6. '(' → logprob: -21.6250057220459
    7. 'float' → logprob: -22.0000057220459
    8. '
' → logprob: -22.5000057220459
    9. ' (' → logprob: -23.1250057220459
    10. 'а' → logprob: -23.1250057220459

Token 945: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00020854694594163448
    2. '.' → logprob: -8.500208854675293
    3. 'x' → logprob: -12.250208854675293
    4. 'a' → logprob: -15.375208854675293
    5. ' .' → logprob: -17.125207901000977
    6. '.a' → logprob: -17.750207901000977
    7. '0' → logprob: -19.625207901000977
    8. '1' → logprob: -19.750207901000977
    9. '[' → logprob: -20.250207901000977
    10. ').' → logprob: -20.375207901000977

Token 946: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.38964611291885376
    2. ' *' → logprob: -1.139646053314209
    3. '*b' → logprob: -5.889646053314209
    4. '*a' → logprob: -12.764646530151367
    5. '*object' → logprob: -15.514646530151367
    6. ' ' → logprob: -16.514646530151367
    7. '**' → logprob: -16.639646530151367
    8. '＊' → logprob: -17.514646530151367
    9. '*x' → logprob: -17.639646530151367
    10. '*out' → logprob: -18.139646530151367

Token 947: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.306760805164231e-05
    2. ' b' → logprob: -11.25001335144043
    3. ' ' → logprob: -18.37501335144043
    4. '   ' → logprob: -18.62501335144043
    5. '	b' → logprob: -19.25001335144043
    6. '  ' → logprob: -20.25001335144043
    7. ')b' → logprob: -21.25001335144043
    8. ' б' → logprob: -22.12501335144043
    9. '<|end|>' → logprob: -22.25001335144043
    10. '
' → logprob: -22.50001335144043

Token 948: '.x' (ID: 3700)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20944033563137054
    2. '.x' → logprob: -1.7094403505325317
    3. '.' → logprob: -4.834440231323242
    4. ' x' → logprob: -11.084440231323242
    5. 'b' → logprob: -11.459440231323242
    6. '*x' → logprob: -11.834440231323242
    7. ' ' → logprob: -12.709440231323242
    8. '	x' → logprob: -13.584440231323242
    9. '.b' → logprob: -13.709440231323242
    10. '*' → logprob: -13.709440231323242

Token 949: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10021842271089554
    2. ' +' → logprob: -2.3502185344696045
    3. '+a' → logprob: -11.725218772888184
    4. '+b' → logprob: -12.725218772888184
    5. '+
' → logprob: -15.725218772888184
    6. '＋' → logprob: -15.850218772888184
    7. '+y' → logprob: -15.850218772888184
    8. '+x' → logprob: -16.600217819213867
    9. '+k' → logprob: -16.725217819213867
    10. '+self' → logprob: -17.850217819213867

Token 950: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0007099286303855479
    2. ' a' → logprob: -7.2507100105285645
    3. '	a' → logprob: -16.750709533691406
    4. '   ' → logprob: -19.375709533691406
    5. 'b' → logprob: -19.625709533691406
    6. '<|end|>' → logprob: -19.625709533691406
    7. ' ' → logprob: -20.500709533691406
    8. '  ' → logprob: -21.250709533691406
    9. '(a' → logprob: -21.625709533691406
    10. '#a' → logprob: -22.000709533691406

Token 951: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.5185975432395935
    2. 'y' → logprob: -1.0185976028442383
    3. 'b' → logprob: -3.2685976028442383
    4. '.' → logprob: -5.268597602844238
    5. '.b' → logprob: -8.643597602844238
    6. 'a' → logprob: -9.268597602844238
    7. ' y' → logprob: -10.018597602844238
    8. '	y' → logprob: -12.768597602844238
    9. ' ' → logprob: -12.893597602844238
    10. ' b' → logprob: -13.018597602844238

Token 952: ' *' (ID: 425)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.1049022451043129
    2. 'b' → logprob: -2.3549022674560547
    3. ' *' → logprob: -5.604902267456055
    4. '*' → logprob: -7.354902267456055
    5. '*b' → logprob: -8.229902267456055
    6. ' ' → logprob: -9.604902267456055
    7. ' y' → logprob: -10.854902267456055
    8. 'y' → logprob: -11.729902267456055
    9. '	b' → logprob: -13.229902267456055
    10. ' б' → logprob: -14.729902267456055

Token 953: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0004882152716163546
    2. ' b' → logprob: -7.62548828125
    3. ' ' → logprob: -16.62548828125
    4. '	b' → logprob: -17.25048828125
    5. 'y' → logprob: -18.75048828125
    6. ')b' → logprob: -19.00048828125
    7. '  ' → logprob: -19.12548828125
    8. '*b' → logprob: -19.87548828125
    9. 'a' → logprob: -20.00048828125
    10. '   ' → logprob: -20.12548828125

Token 954: '.y' (ID: 4486)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3184736967086792
    2. '.y' → logprob: -1.3184736967086792
    3. '<|end|>' → logprob: -6.068473815917969
    4. '*' → logprob: -6.568473815917969
    5. '.' → logprob: -7.068473815917969
    6. '*y' → logprob: -8.068473815917969
    7. ' y' → logprob: -8.318473815917969
    8. '.py' → logprob: -11.193473815917969
    9. '	y' → logprob: -11.568473815917969
    10. ' ' → logprob: -11.943473815917969

Token 955: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5023853182792664
    2. '<|end|>' → logprob: -1.0023853778839111
    3. '
' → logprob: -3.877385377883911
    4. '<|end|>' → logprob: -5.877385139465332
    5. '```' → logprob: -6.627385139465332
    6. ' ' → logprob: -7.002385139465332
    7. 'classmethod' → logprob: -7.752385139465332
    8. '  ' → logprob: -7.877385139465332
    9. '    
' → logprob: -8.127385139465332
    10. '

' → logprob: -8.627385139465332

Token 956: '   ' (ID: 271)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.16022992134094238
    2. '   ' → logprob: -1.9102299213409424
    3. ' @' → logprob: -12.285229682922363
    4. '@class' → logprob: -14.160229682922363
    5. '@property' → logprob: -15.660229682922363
    6. '@index' → logprob: -16.53523063659668
    7. '@return' → logprob: -16.66023063659668
    8. '    
' → logprob: -17.03523063659668
    9. ' ' → logprob: -17.16023063659668
    10. '  ' → logprob: -17.16023063659668

Token 957: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -4.5491004129871726e-05
    2. '   ' → logprob: -10.000045776367188
    3. ' @' → logprob: -17.375045776367188
    4. '@class' → logprob: -17.875045776367188
    5. '@property' → logprob: -21.750045776367188
    6. '@index' → logprob: -22.000045776367188
    7. '@
' → logprob: -22.000045776367188
    8. '@param' → logprob: -22.375045776367188
    9. ' ' → logprob: -22.750045776367188
    10. '@return' → logprob: -22.875045776367188

Token 958: 'classmethod' (ID: 64680)
  Prédit: 'classmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classmethod' → logprob: -5.848420551046729e-05
    2. 'staticmethod' → logprob: -9.7500581741333
    3. 'class' → logprob: -16.625059127807617
    4. '@' → logprob: -17.375059127807617
    5. '@class' → logprob: -21.875059127807617
    6. '<class' → logprob: -22.125059127807617
    7. 'property' → logprob: -22.375059127807617
    8. 'classname' → logprob: -22.625059127807617
    9. 'cls' → logprob: -22.875059127807617
    10. 'aclass' → logprob: -23.000059127807617

Token 959: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0026376070454716682
    2. ' def' → logprob: -6.2526373863220215
    3. '   ' → logprob: -7.2526373863220215
    4. '	def' → logprob: -14.87763786315918
    5. '
' → logprob: -16.50263786315918
    6. ' ' → logprob: -17.87763786315918
    7. ':' → logprob: -18.25263786315918
    8. ':def' → logprob: -18.50263786315918
    9. '  ' → logprob: -18.75263786315918
    10. '(def' → logprob: -19.12763786315918

Token 960: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0013418971793726087
    2. '   ' → logprob: -7.001341819763184
    3. ' def' → logprob: -7.751341819763184
    4. '	def' → logprob: -15.626341819763184
    5. '@' → logprob: -18.7513427734375
    6. '
' → logprob: -19.1263427734375
    7. ' ' → logprob: -19.2513427734375
    8. ':' → logprob: -19.3763427734375
    9. ':def' → logprob: -19.5013427734375
    10. 'Def' → logprob: -19.6263427734375

Token 961: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.282920129597187e-05
    2. 'cross' → logprob: -11.500012397766113
    3. ' def' → logprob: -12.875012397766113
    4. '   ' → logprob: -16.87501335144043
    5. '
' → logprob: -17.75001335144043
    6. '@' → logprob: -19.00001335144043
    7. '	def' → logprob: -19.87501335144043
    8. 'from' → logprob: -21.50001335144043
    9. '    
' → logprob: -22.50001335144043
    10. ' cross' → logprob: -23.12501335144043

Token 962: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -9.794061770662665e-05
    2. ' cross' → logprob: -9.25009822845459
    3. 'def' → logprob: -13.25009822845459
    4. '.cross' → logprob: -17.125097274780273
    5. '@' → logprob: -17.750097274780273
    6. '
' → logprob: -18.500097274780273
    7. '_cross' → logprob: -19.125097274780273
    8. 'dot' → logprob: -19.250097274780273
    9. 'Cross' → logprob: -19.500097274780273
    10. ' ' → logprob: -20.500097274780273

Token 963: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -8.602024900028482e-05
    2. 'cls' → logprob: -9.375085830688477
    3. ' cls' → logprob: -14.375085830688477
    4. '(clazz' → logprob: -15.250085830688477
    5. '.cls' → logprob: -16.125085830688477
    6. '(class' → logprob: -16.125085830688477
    7. 'classmethod' → logprob: -16.500085830688477
    8. '(' → logprob: -16.750085830688477
    9. '(cl' → logprob: -16.875085830688477
    10. '<class' → logprob: -17.250085830688477

Token 964: ',' (ID: 11)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.0018138210289180279
    2. ',' → logprob: -6.376813888549805
    3. '(a' → logprob: -10.126813888549805
    4. '(' → logprob: -10.376813888549805
    5. ' (' → logprob: -11.251813888549805
    6. 'cls' → logprob: -11.376813888549805
    7. '(self' → logprob: -12.001813888549805
    8. '(b' → logprob: -12.626813888549805
    9. '   ' → logprob: -13.126813888549805
    10. '(class' → logprob: -13.751813888549805

Token 965: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.016462702304124832
    2. ' a' → logprob: -4.266462802886963
    3. 'b' → logprob: -6.141462802886963
    4. ' b' → logprob: -9.266462326049805
    5. 'cls' → logprob: -10.141462326049805
    6. '<|end|>' → logprob: -12.641462326049805
    7. ' ' → logprob: -13.141462326049805
    8. ' cls' → logprob: -13.641462326049805
    9. 'A' → logprob: -14.266462326049805
    10. 'self' → logprob: -14.391462326049805

Token 966: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003764535649679601
    2. ',b' → logprob: -8.00037670135498
    3. ' ,' → logprob: -10.37537670135498
    4. '(' → logprob: -12.87537670135498
    5. ',a' → logprob: -12.87537670135498
    6. '(cls' → logprob: -13.50037670135498
    7. ',c' → logprob: -14.37537670135498
    8. 'b' → logprob: -14.87537670135498
    9. ',k' → logprob: -14.87537670135498
    10. ',
' → logprob: -15.50037670135498

Token 967: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00017958412354346365
    2. ' b' → logprob: -8.625179290771484
    3. ')b' → logprob: -17.875179290771484
    4. ' ' → logprob: -18.125179290771484
    5. 'B' → logprob: -18.125179290771484
    6. '   ' → logprob: -18.375179290771484
    7. '	b' → logprob: -18.875179290771484
    8. ')' → logprob: -19.250179290771484
    9. '_b' → logprob: -19.750179290771484
    10. 'cls' → logprob: -20.375179290771484

Token 968: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11985581368207932
    2. '):' → logprob: -2.2448558807373047
    3. '):
' → logprob: -5.369855880737305
    4. '(cls' → logprob: -6.244855880737305
    5. ' ,' → logprob: -7.994855880737305
    6. '   ' → logprob: -10.494855880737305
    7. ' ):' → logprob: -11.119855880737305
    8. '(a' → logprob: -12.494855880737305
    9. ')' → logprob: -12.494855880737305
    10. '(' → logprob: -12.494855880737305

Token 969: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006673220545053482
    2. ' return' → logprob: -5.131673336029053
    3. 'return' → logprob: -7.381673336029053
    4. '   ' → logprob: -10.381672859191895
    5. ':return' → logprob: -10.381672859191895
    6. ':' → logprob: -10.881672859191895
    7. '(' → logprob: -11.006672859191895
    8. '<|end|>' → logprob: -11.756672859191895
    9. '	return' → logprob: -12.506672859191895
    10. ' ' → logprob: -13.131672859191895

Token 970: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00045605594641529024
    2. ' return' → logprob: -7.750455856323242
    3. '       ' → logprob: -10.750455856323242
    4. '   ' → logprob: -12.625455856323242
    5. '	return' → logprob: -14.250455856323242
    6. ':return' → logprob: -18.250455856323242
    7. 'eturn' → logprob: -19.250455856323242
    8. ' ' → logprob: -19.250455856323242
    9. 'Return' → logprob: -20.375455856323242
    10. '
' → logprob: -20.750455856323242

Token 971: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.676292231422849e-05
    2. ' a' → logprob: -11.000017166137695
    3. '(a' → logprob: -19.625017166137695
    4. '   ' → logprob: -20.000017166137695
    5. '	a' → logprob: -20.000017166137695
    6. '#a' → logprob: -23.000017166137695
    7. '(' → logprob: -23.125017166137695
    8. ' ' → logprob: -23.250017166137695
    9. 'а' → logprob: -23.875017166137695
    10. '_a' → logprob: -24.500017166137695

Token 972: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -9.610702363715973e-06
    2. '.' → logprob: -11.625009536743164
    3. 'x' → logprob: -14.500009536743164
    4. ' .' → logprob: -16.375009536743164
    5. '.y' → logprob: -18.250009536743164
    6. '
' → logprob: -19.250009536743164
    7. '.
' → logprob: -19.875009536743164
    8. '[' → logprob: -20.750009536743164
    9. '._' → logprob: -21.000009536743164
    10. '0' → logprob: -21.375009536743164

Token 973: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0070488909259438515
    2. '*' → logprob: -5.007049083709717
    3. '*b' → logprob: -8.007048606872559
    4. ' ' → logprob: -15.132048606872559
    5. '*y' → logprob: -17.757049560546875
    6. ' ' → logprob: -17.757049560546875
    7. '**' → logprob: -18.132049560546875
    8. ' **' → logprob: -19.132049560546875
    9. '*object' → logprob: -19.882049560546875
    10. '＊' → logprob: -20.007049560546875

Token 974: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -5.157039049663581e-05
    2. ' b' → logprob: -9.875051498413086
    3. '	b' → logprob: -18.500051498413086
    4. '   ' → logprob: -20.250051498413086
    5. ' ' → logprob: -20.375051498413086
    6. '
' → logprob: -21.125051498413086
    7. '  ' → logprob: -21.625051498413086
    8. '*b' → logprob: -21.750051498413086
    9. ')b' → logprob: -21.750051498413086
    10. '(b' → logprob: -22.875051498413086

Token 975: '.y' (ID: 4486)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1264861673116684
    2. '*' → logprob: -2.75148606300354
    3. '*y' → logprob: -3.25148606300354
    4. ' *' → logprob: -4.501486301422119
    5. ' y' → logprob: -5.626486301422119
    6. '.y' → logprob: -6.751486301422119
    7. '.' → logprob: -8.501485824584961
    8. 'b' → logprob: -9.376485824584961
    9. '*b' → logprob: -10.376485824584961
    10. '   ' → logprob: -10.876485824584961

Token 976: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0013279760023579001
    2. '-' → logprob: -6.626327991485596
    3. ' ' → logprob: -13.376327514648438
    4. ' ' → logprob: -15.251327514648438
    5. ' -
' → logprob: -15.626327514648438
    6. '   ' → logprob: -18.876327514648438
    7. '-
' → logprob: -19.126327514648438
    8. '    ' → logprob: -19.376327514648438
    9. ' −' → logprob: -19.501327514648438
    10. '```' → logprob: -19.626327514648438

Token 977: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004085047636181116
    2. ' a' → logprob: -5.504085063934326
    3. 'b' → logprob: -12.004084587097168
    4. ' b' → logprob: -14.754084587097168
    5. '	a' → logprob: -17.379085540771484
    6. ' ' → logprob: -18.004085540771484
    7. '   ' → logprob: -19.504085540771484
    8. '<|end|>' → logprob: -19.504085540771484
    9. '(a' → logprob: -20.754085540771484
    10. '#a' → logprob: -20.879085540771484

Token 978: '.y' (ID: 4486)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0002614550176076591
    2. ' b' → logprob: -8.250261306762695
    3. '	b' → logprob: -16.625261306762695
    4. '   ' → logprob: -17.500261306762695
    5. ')b' → logprob: -17.625261306762695
    6. ' ' → logprob: -17.750261306762695
    7. '.b' → logprob: -18.125261306762695
    8. 'a' → logprob: -18.375261306762695
    9. '  ' → logprob: -18.625261306762695
    10. 'x' → logprob: -19.125261306762695

Token 979: ' *' (ID: 425)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3132626414299011
    2. ' b' → logprob: -1.313262701034546
    3. '	b' → logprob: -14.188262939453125
    4. '*b' → logprob: -16.313262939453125
    5. ' ' → logprob: -16.438262939453125
    6. '   ' → logprob: -16.938262939453125
    7. ' *' → logprob: -18.813262939453125
    8. ' б' → logprob: -18.813262939453125
    9. '*' → logprob: -18.938262939453125
    10. '  ' → logprob: -19.438262939453125

Token 980: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011047814972698689
    2. ' b' → logprob: -4.511047840118408
    3. '	b' → logprob: -17.01104736328125
    4. ' ' → logprob: -17.13604736328125
    5. '   ' → logprob: -17.63604736328125
    6. ')b' → logprob: -17.63604736328125
    7. '<|end|>' → logprob: -19.13604736328125
    8. '  ' → logprob: -19.38604736328125
    9. '*b' → logprob: -19.38604736328125
    10. '       ' → logprob: -19.63604736328125

Token 981: '.x' (ID: 3700)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.38697507977485657
    2. '.x' → logprob: -1.1369750499725342
    3. '.' → logprob: -9.261975288391113
    4. ' x' → logprob: -12.761975288391113
    5. 'b' → logprob: -13.511975288391113
    6. 's' → logprob: -13.511975288391113
    7. '0' → logprob: -14.511975288391113
    8. '	x' → logprob: -14.761975288391113
    9. 'class' → logprob: -14.761975288391113
    10. ',x' → logprob: -14.886975288391113

Token 982: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1734590232372284
    2. 'class' → logprob: -1.9234590530395508
    3. '   ' → logprob: -4.798459053039551
    4. '<|end|>' → logprob: -5.423459053039551
    5. '<|end|>' → logprob: -8.92345905303955
    6. ' class' → logprob: -9.17345905303955
    7. '
' → logprob: -9.67345905303955
    8. '    
' → logprob: -9.79845905303955
    9. ')' → logprob: -10.17345905303955
    10. '' → logprob: -11.29845905303955

Token 983: '   ' (ID: 271)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.2113979209971149e-05
    2. '   ' → logprob: -12.125012397766113
    3. '
' → logprob: -12.750012397766113
    4. ' class' → logprob: -13.250012397766113
    5. '<|end|>' → logprob: -15.125012397766113
    6. ':' → logprob: -15.375012397766113
    7. '```' → logprob: -15.500012397766113
    8. ')' → logprob: -15.625012397766113
    9. 'line' → logprob: -15.875012397766113
    10. '<class' → logprob: -16.375011444091797

Token 984: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03569129854440689
    2. ')' → logprob: -4.660691261291504
    3. 'class' → logprob: -4.660691261291504
    4. '<|end|>' → logprob: -5.035691261291504
    5. '#' → logprob: -5.285691261291504
    6. '   ' → logprob: -6.160691261291504
    7. '<|end|>' → logprob: -6.285691261291504
    8. ' def' → logprob: -8.910691261291504
    9. '```' → logprob: -9.535691261291504
    10. ']' → logprob: -10.035691261291504

Token 985: 'classmethod' (ID: 64680)
  Prédit: 'classmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classmethod' → logprob: -0.00413088034838438
    2. 'staticmethod' → logprob: -5.504130840301514
    3. 'property' → logprob: -9.879131317138672
    4. 'class' → logprob: -13.629131317138672
    5. 'classname' → logprob: -20.379131317138672
    6. ' class' → logprob: -20.754131317138672
    7. '
' → logprob: -20.879131317138672
    8. 'aclass' → logprob: -21.754131317138672
    9. 'cls' → logprob: -21.879131317138672
    10. '@' → logprob: -22.129131317138672

Token 986: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00782155990600586
    2. '
' → logprob: -5.382821559906006
    3. ' def' → logprob: -6.382821559906006
    4. '   ' → logprob: -6.507821559906006
    5. 'from' → logprob: -11.757822036743164
    6. ' ' → logprob: -13.132822036743164
    7. '	def' → logprob: -13.507822036743164
    8. '
' → logprob: -14.882822036743164
    9. 'd' → logprob: -15.007822036743164
    10. 's' → logprob: -15.007822036743164

Token 987: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03402888774871826
    2. '   ' → logprob: -3.409029006958008
    3. ' def' → logprob: -7.909029006958008
    4. '
' → logprob: -11.534029006958008
    5. '	def' → logprob: -12.409029006958008
    6. 'from' → logprob: -14.034029006958008
    7. ' ' → logprob: -14.409029006958008
    8. '#' → logprob: -16.034029006958008
    9. '@' → logprob: -16.534029006958008
    10. '  ' → logprob: -16.909029006958008

Token 988: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0005521982675418258
    2. ' def' → logprob: -7.750552177429199
    3. '   ' → logprob: -9.5005521774292
    4. 'from' → logprob: -10.6255521774292
    5. 'norm' → logprob: -11.1255521774292
    6. 'abs' → logprob: -13.1255521774292
    7. ' ' → logprob: -13.2505521774292
    8. '	def' → logprob: -14.3755521774292
    9. 'import' → logprob: -14.5005521774292
    10. '  ' → logprob: -14.7505521774292

Token 989: ' is' (ID: 382)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.16737036406993866
    2. 'norm' → logprob: -2.417370319366455
    3. 'cc' → logprob: -3.292370319366455
    4. 'angle' → logprob: -4.542370319366455
    5. 'polar' → logprob: -5.542370319366455
    6. 'from' → logprob: -5.667370319366455
    7. 'rotate' → logprob: -6.167370319366455
    8. 'cross' → logprob: -6.917370319366455
    9. 'ort' → logprob: -7.042370319366455
    10. 'unit' → logprob: -7.042370319366455

Token 990: '_' (ID: 62)
  Prédit: 'parallel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parallel' → logprob: -1.0529428720474243
    2. '_' → logprob: -1.1779428720474243
    3. '_parallel' → logprob: -1.5529428720474243
    4. 'orth' → logprob: -2.6779427528381348
    5. '_per' → logprob: -3.1779427528381348
    6. 'per' → logprob: -4.927942752838135
    7. 'Parallel' → logprob: -6.177942752838135
    8. 'counter' → logprob: -6.552942752838135
    9. '_zero' → logprob: -6.677942752838135
    10. '_counter' → logprob: -6.677942752838135

Token 991: 'orth' (ID: 2909)
  Prédit: 'orth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orth' → logprob: -0.3959697186946869
    2. 'parallel' → logprob: -1.1459697484970093
    3. 'zero' → logprob: -5.520969867706299
    4. 'counter' → logprob: -6.270969867706299
    5. 'ort' → logprob: -7.395969867706299
    6. 'per' → logprob: -7.520969867706299
    7. 'cc' → logprob: -8.02096939086914
    8. 'conv' → logprob: -8.14596939086914
    9. 'vertical' → logprob: -8.14596939086914
    10. 'left' → logprob: -9.02096939086914

Token 992: 'ogonal' (ID: 127861)
  Prédit: 'ogonal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ogonal' → logprob: -0.0002668192028068006
    2. '(cls' → logprob: -9.250267028808594
    3. '(Vector' → logprob: -9.625267028808594
    4. 'Vector' → logprob: -10.250267028808594
    5. 'og' → logprob: -10.625267028808594
    6. 'o' → logprob: -10.875267028808594
    7. '(Point' → logprob: -12.250267028808594
    8. '```' → logprob: -12.750267028808594
    9. 'agonal' → logprob: -12.875267028808594
    10. 'ogon' → logprob: -13.000267028808594

Token 993: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -13.25000286102295
    3. ' (' → logprob: -15.37500286102295
    4. 'cls' → logprob: -15.75000286102295
    5. '   ' → logprob: -16.000001907348633
    6. '(cl' → logprob: -16.000001907348633
    7. '(c' → logprob: -17.250001907348633
    8. '(clazz' → logprob: -17.250001907348633
    9. '(class' → logprob: -19.375001907348633
    10. ' cls' → logprob: -19.500001907348633

Token 994: ',' (ID: 11)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -6.813969957875088e-05
    2. '(' → logprob: -10.000067710876465
    3. ',' → logprob: -11.625067710876465
    4. ' (' → logprob: -12.125067710876465
    5. '(a' → logprob: -13.000067710876465
    6. '   ' → logprob: -13.000067710876465
    7. ')(' → logprob: -13.125067710876465
    8. '(self' → logprob: -14.375067710876465
    9. 'cls' → logprob: -14.875067710876465
    10. '(cl' → logprob: -15.000067710876465

Token 995: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05497954413294792
    2. ' a' → logprob: -2.9299795627593994
    3. 'v' → logprob: -9.55497932434082
    4. 'cls' → logprob: -11.92997932434082
    5. 'self' → logprob: -12.05497932434082
    6. '   ' → logprob: -12.67997932434082
    7. ' v' → logprob: -13.05497932434082
    8. 'vector' → logprob: -13.55497932434082
    9. 'vec' → logprob: -13.67997932434082
    10. '(a' → logprob: -13.92997932434082

Token 996: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001544321421533823
    2. ',a' → logprob: -9.500154495239258
    3. ',b' → logprob: -9.625154495239258
    4. ' ,' → logprob: -11.375154495239258
    5. 'a' → logprob: -14.000154495239258
    6. ',class' → logprob: -14.625154495239258
    7. '   ' → logprob: -15.750154495239258
    8. ',c' → logprob: -16.375154495239258
    9. ',v' → logprob: -16.625154495239258
    10. ' ' → logprob: -16.875154495239258

Token 997: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0040785204619169235
    2. ' b' → logprob: -5.504078388214111
    3. '   ' → logprob: -17.629077911376953
    4. ' ' → logprob: -18.129077911376953
    5. '	b' → logprob: -19.254077911376953
    6. 'cls' → logprob: -19.504077911376953
    7. '  ' → logprob: -20.254077911376953
    8. '       ' → logprob: -20.504077911376953
    9. ')b' → logprob: -20.629077911376953
    10. '    ' → logprob: -20.754077911376953

Token 998: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.580929347255733e-05
    2. ' ,' → logprob: -11.750016212463379
    3. '):' → logprob: -12.500016212463379
    4. '):
' → logprob: -13.125016212463379
    5. '   ' → logprob: -13.500016212463379
    6. '       ' → logprob: -15.000016212463379
    7. ',a' → logprob: -15.500016212463379
    8. '(cls' → logprob: -16.250015258789062
    9. 'cls' → logprob: -17.500015258789062
    10. 'self' → logprob: -18.750015258789062

Token 999: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4304182827472687
    2. '   ' → logprob: -1.0554182529449463
    3. '    
' → logprob: -8.305418014526367
    4. '    ' → logprob: -8.430418014526367
    5. ':' → logprob: -8.555418014526367
    6. '        
' → logprob: -8.680418014526367
    7. '(' → logprob: -9.055418014526367
    8. 'return' → logprob: -9.180418014526367
    9. ':
' → logprob: -9.180418014526367
    10. ',' → logprob: -9.305418014526367

Token 1000: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006738699972629547
    2. 'return' (adapté à ' return') → logprob: -5.006738662719727
    3. ' return' → logprob: -10.756738662719727
    4. '   ' → logprob: -13.381738662719727
    5. '	return' → logprob: -15.381738662719727
    6. '	' → logprob: -15.631738662719727
    7. '      ' → logprob: -17.381738662719727
    8. '     ' → logprob: -18.131738662719727
    9. '           ' → logprob: -18.881738662719727
    10. '    ' → logprob: -19.256738662719727

Token 1001: ' Vector' (ID: 8764)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.023447655141353607
    2. 'cls' → logprob: -3.7734477519989014
    3. ' abs' → logprob: -9.14844799041748
    4. '(abs' → logprob: -10.02344799041748
    5. 'Point' → logprob: -10.14844799041748
    6. 'Vector' → logprob: -11.64844799041748
    7. '(cls' → logprob: -13.52344799041748
    8. 'fabs' → logprob: -13.77344799041748
    9. ' cls' → logprob: -14.52344799041748
    10. 'True' → logprob: -14.77344799041748

Token 1002: '.dot' (ID: 52692)
  Prédit: '.dot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dot' → logprob: -5.9153885558771435e-06
    2. '.cross' → logprob: -12.375005722045898
    3. 'dot' → logprob: -14.375005722045898
    4. '.cls' → logprob: -14.375005722045898
    5. '(dot' → logprob: -15.500005722045898
    6. '.' → logprob: -15.750005722045898
    7. '.abs' → logprob: -16.0000057220459
    8. '.Dot' → logprob: -16.7500057220459
    9. 'Dot' → logprob: -19.0000057220459
    10. '.is' → logprob: -19.6250057220459

Token 1003: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -15.875
    3. '(
' → logprob: -18.625
    4. ' (' → logprob: -19.625
    5. '(cls' → logprob: -19.625
    6. 'a' → logprob: -20.0
    7. '(abs' → logprob: -21.25
    8. '(ab' → logprob: -21.625
    9. '()' → logprob: -22.75
    10. ')' → logprob: -22.75

Token 1004: ',' (ID: 11)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0001246348983841017
    2. ',' → logprob: -9.37512493133545
    3. '(b' → logprob: -10.75012493133545
    4. '(' → logprob: -11.50012493133545
    5. ')' → logprob: -12.00012493133545
    6. ' (' → logprob: -13.37512493133545
    7. '==' → logprob: -16.500123977661133
    8. 'a' → logprob: -16.750123977661133
    9. ',a' → logprob: -16.750123977661133
    10. '(cls' → logprob: -16.750123977661133

Token 1005: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00023059594968799502
    2. ' b' → logprob: -8.37523078918457
    3. 'a' → logprob: -18.12523078918457
    4. '	b' → logprob: -19.37523078918457
    5. '   ' → logprob: -19.75023078918457
    6. ')' → logprob: -19.87523078918457
    7. ')b' → logprob: -20.25023078918457
    8. 'Vector' → logprob: -20.50023078918457
    9. ' ' → logprob: -21.25023078918457
    10. '(b' → logprob: -21.50023078918457

Token 1006: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2798871695995331
    2. ')==' → logprob: -1.5298871994018555
    3. '(a' → logprob: -3.9048871994018555
    4. '==' → logprob: -6.1548871994018555
    5. '()==' → logprob: -6.2798871994018555
    6. ' ==' → logprob: -6.4048871994018555
    7. '()' → logprob: -6.6548871994018555
    8. ' )' → logprob: -8.529887199401855
    9. ']==' → logprob: -8.904887199401855
    10. '")==' → logprob: -9.779887199401855

Token 1007: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.029562557116150856
    2. ' ==' → logprob: -4.404562473297119
    3. '()==' → logprob: -4.529562473297119
    4. '(a' → logprob: -5.529562473297119
    5. '(abs' → logprob: -7.029562473297119
    6. ')==' → logprob: -7.904562473297119
    7. '(' → logprob: -8.154562950134277
    8. '()' → logprob: -8.279562950134277
    9. '===' → logprob: -9.404562950134277
    10. '=' → logprob: -9.529562950134277

Token 1008: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -22.750001907348633
    4. '۰' → logprob: -23.000001907348633
    5. '00' → logprob: -24.000001907348633
    6. '  ' → logprob: -24.000001907348633
    7. '(' → logprob: -24.250001907348633
    8. '０' → logprob: -24.250001907348633
    9. '    ' → logprob: -24.625001907348633
    10. '
' → logprob: -24.875001907348633

Token 1009: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. 'Vector' → logprob: -19.875
    4. '０' → logprob: -21.25
    5. '۰' → logprob: -21.625
    6. 'zero' → logprob: -22.375
    7. '(' → logprob: -23.0
    8. '00' → logprob: -23.125
    9. 'Zero' → logprob: -23.5
    10. '   ' → logprob: -23.75

Token 1010: '.' (ID: 13)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1011: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007635851390659809
    2. '<|end|>' → logprob: -4.882636070251465
    3. ' ' → logprob: -11.257636070251465
    4. '000' → logprob: -12.757636070251465
    5. '

' → logprob: -13.257636070251465
    6. '<|end|>' → logprob: -13.382636070251465
    7. '```' → logprob: -13.507636070251465
    8. '
' → logprob: -13.507636070251465
    9. '1' → logprob: -13.882636070251465
    10. 'return' → logprob: -14.132636070251465

Token 1012: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1013: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.08944896562025e-05
    2. '<|end|>' → logprob: -9.750081062316895
    3. 'def' → logprob: -11.875081062316895
    4. ' ' → logprob: -12.250081062316895
    5. '```' → logprob: -12.625081062316895
    6. '@' → logprob: -12.875081062316895
    7. '  ' → logprob: -13.125081062316895
    8. '<|end|>' → logprob: -14.125081062316895
    9. 'classmethod' → logprob: -14.875081062316895
    10. '...' → logprob: -15.125081062316895

Token 1014: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.07889485359191895
    2. '   ' → logprob: -2.578894853591919
    3. '@class' → logprob: -12.70389461517334
    4. ' @' → logprob: -13.95389461517334
    5. 'classmethod' → logprob: -13.95389461517334
    6. 'def' → logprob: -16.078895568847656
    7. '    
' → logprob: -16.953895568847656
    8. 'class' → logprob: -16.953895568847656
    9. '@
' → logprob: -17.203895568847656
    10. ' ' → logprob: -17.328895568847656

Token 1015: 'classmethod' (ID: 64680)
  Prédit: 'classmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classmethod' → logprob: -9.088346359931165e-07
    2. 'staticmethod' → logprob: -14.000000953674316
    3. 'class' → logprob: -17.0
    4. 'property' → logprob: -19.0
    5. '@' → logprob: -20.5
    6. 'aclass' → logprob: -21.75
    7. ' class' → logprob: -23.25
    8. '<class' → logprob: -23.5
    9. 'classname' → logprob: -23.75
    10. '@class' → logprob: -23.875

Token 1016: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10115888714790344
    2. 'def' → logprob: -2.351158857345581
    3. ' def' → logprob: -6.97615909576416
    4. '
' → logprob: -11.10115909576416
    5. '	def' → logprob: -13.35115909576416
    6. ' ' → logprob: -13.97615909576416
    7. '  ' → logprob: -15.22615909576416
    8. '    ' → logprob: -17.351158142089844
    9. '       ' → logprob: -17.726158142089844
    10. '(def' → logprob: -18.226158142089844

Token 1017: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07893440127372742
    2. '   ' → logprob: -2.57893443107605
    3. ' def' → logprob: -10.078934669494629
    4. '
' → logprob: -12.953934669494629
    5. '	def' → logprob: -14.953934669494629
    6. '  ' → logprob: -18.078933715820312
    7. ' ' → logprob: -18.203933715820312
    8. 'Def' → logprob: -18.703933715820312
    9. '@' → logprob: -19.453933715820312
    10. '       ' → logprob: -19.578933715820312

Token 1018: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -6.511406809295295e-06
    2. ' def' → logprob: -12.000006675720215
    3. '   ' → logprob: -15.125006675720215
    4. '
' → logprob: -18.6250057220459
    5. '	def' → logprob: -19.3750057220459
    6. 'is' → logprob: -19.5000057220459
    7. 'Def' → logprob: -21.5000057220459
    8. ' ' → logprob: -21.7500057220459
    9. 'from' → logprob: -22.1250057220459
    10. '    
' → logprob: -22.1250057220459

Token 1019: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0017406281549483538
    2. 'def' → logprob: -6.376740455627441
    3. ' is' → logprob: -10.376740455627441
    4. '   ' → logprob: -12.126740455627441
    5. ' def' → logprob: -14.626740455627441
    6. '
' → logprob: -14.876740455627441
    7. '	is' → logprob: -15.126740455627441
    8. ' ' → logprob: -15.626740455627441
    9. 'class' → logprob: -15.626740455627441
    10. '.is' → logprob: -15.751740455627441

Token 1020: '_parallel' (ID: 152364)
  Prédit: '_parallel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parallel' → logprob: -0.001311074709519744
    2. 'parallel' → logprob: -7.126311302185059
    3. '_' → logprob: -7.876311302185059
    4. '_par' → logprob: -9.251311302185059
    5. ' parallel' → logprob: -12.001311302185059
    6. '_vector' → logprob: -12.001311302185059
    7. '_per' → logprob: -12.376311302185059
    8. 'Parallel' → logprob: -13.126311302185059
    9. '_same' → logprob: -13.251311302185059
    10. '_col' → logprob: -13.251311302185059

Token 1021: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -9.253090865968261e-06
    2. '(class' → logprob: -12.250009536743164
    3. 'cls' → logprob: -12.875009536743164
    4. '(clazz' → logprob: -14.000009536743164
    5. 'classmethod' → logprob: -15.125009536743164
    6. '(Class' → logprob: -15.500009536743164
    7. '(' → logprob: -16.000009536743164
    8. ' (' → logprob: -16.125009536743164
    9. '(cl' → logprob: -16.375009536743164
    10. '<class' → logprob: -16.375009536743164

Token 1022: ',' (ID: 11)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.0007878291653469205
    2. ',' → logprob: -7.375787734985352
    3. ' (' → logprob: -9.375787734985352
    4. '(a' → logprob: -9.875787734985352
    5. '(' → logprob: -11.625787734985352
    6. '(self' → logprob: -12.000787734985352
    7. '(class' → logprob: -12.875787734985352
    8. 'cls' → logprob: -13.000787734985352
    9. ')' → logprob: -13.375787734985352
    10. ')(' → logprob: -14.000787734985352

Token 1023: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0834617167711258
    2. 'cls' → logprob: -2.5834617614746094
    3. ' a' → logprob: -5.708461761474609
    4. ' cls' → logprob: -6.708461761474609
    5. 'class' → logprob: -11.95846176147461
    6. '(cls' → logprob: -11.95846176147461
    7. 'b' → logprob: -12.08346176147461
    8. '(a' → logprob: -12.83346176147461
    9. '   ' → logprob: -14.45846176147461
    10. 'classmethod' → logprob: -14.95846176147461

Token 1024: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019817621796391904
    2. '(cls' → logprob: -8.750198364257812
    3. ',b' → logprob: -10.750198364257812
    4. ' ,' → logprob: -11.375198364257812
    5. '(' → logprob: -13.375198364257812
    6. ',a' → logprob: -13.500198364257812
    7. '(a' → logprob: -13.625198364257812
    8. '   ' → logprob: -13.750198364257812
    9. 'cls' → logprob: -14.750198364257812
    10. ')(' → logprob: -15.000198364257812

Token 1025: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.014163628220558167
    2. ' b' → logprob: -4.264163494110107
    3. 'cls' → logprob: -16.639163970947266
    4. '   ' → logprob: -17.389163970947266
    5. '	b' → logprob: -18.264163970947266
    6. ' ' → logprob: -18.514163970947266
    7. '(b' → logprob: -19.014163970947266
    8. ' cls' → logprob: -19.139163970947266
    9. ')b' → logprob: -19.764163970947266
    10. '_b' → logprob: -20.014163970947266

Token 1026: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.031742267310619354
    2. '(cls' → logprob: -3.5317423343658447
    3. '   ' → logprob: -6.906742095947266
    4. '):
' → logprob: -7.781742095947266
    5. '):' → logprob: -8.656742095947266
    6. '       ' → logprob: -8.656742095947266
    7. ')(' → logprob: -9.906742095947266
    8. ' ,' → logprob: -10.031742095947266
    9. '(a' → logprob: -10.281742095947266
    10. 'cls' → logprob: -10.531742095947266

Token 1027: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.8325677703833207e-05
    2. '   ' → logprob: -11.125028610229492
    3. 'return' → logprob: -11.750028610229492
    4. ' return' → logprob: -12.375028610229492
    5. '```' → logprob: -15.625028610229492
    6. ':' → logprob: -15.875028610229492
    7. ':return' → logprob: -16.000028610229492
    8. '	   ' → logprob: -16.125028610229492
    9. '           ' → logprob: -16.125028610229492
    10. '	' → logprob: -16.125028610229492

Token 1028: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03918912261724472
    2. '       ' → logprob: -3.289189100265503
    3. ' return' → logprob: -6.789189338684082
    4. '   ' → logprob: -11.164189338684082
    5. '	return' → logprob: -11.914189338684082
    6. ' ' → logprob: -17.039188385009766
    7. 'eturn' → logprob: -17.414188385009766
    8. '           ' → logprob: -17.539188385009766
    9. 'def' → logprob: -17.789188385009766
    10. ':return' → logprob: -18.164188385009766

Token 1029: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.1313401162624359
    2. 'abs' → logprob: -2.1313400268554688
    3. ' abs' → logprob: -6.006340026855469
    4. ' Vector' → logprob: -6.631340026855469
    5. '(abs' → logprob: -7.631340026855469
    6. 'fabs' → logprob: -9.506340026855469
    7. '(Vector' → logprob: -10.131340026855469
    8. 'True' → logprob: -11.381340026855469
    9. ' fabs' → logprob: -12.131340026855469
    10. 'False' → logprob: -13.881340026855469

Token 1030: '.cross' (ID: 108957)
  Prédit: '.cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cross' → logprob: -0.0005312294815666974
    2. '.abs' → logprob: -7.750531196594238
    3. '.dot' → logprob: -9.250531196594238
    4. 'cross' → logprob: -13.125531196594238
    5. '.Cross' → logprob: -13.625531196594238
    6. '.' → logprob: -14.875531196594238
    7. 'abs' → logprob: -15.250531196594238
    8. 'Cross' → logprob: -15.250531196594238
    9. '@' → logprob: -16.750532150268555
    10. '.is' → logprob: -16.750532150268555

Token 1031: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0008085522567853332
    2. '(cls' → logprob: -7.1258087158203125
    3. 'cls' → logprob: -12.875808715820312
    4. 'a' → logprob: -13.875808715820312
    5. '(abs' → logprob: -15.625808715820312
    6. '(' → logprob: -16.250808715820312
    7. 'class' → logprob: -16.750808715820312
    8. '(ab' → logprob: -16.750808715820312
    9. 'classmethod' → logprob: -17.375808715820312
    10. '(class' → logprob: -17.500808715820312

Token 1032: ',' (ID: 11)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.012617478147149086
    2. ',' → logprob: -5.262617588043213
    3. '(' → logprob: -5.887617588043213
    4. '(cls' → logprob: -6.012617588043213
    5. ')' → logprob: -6.637617588043213
    6. '(b' → logprob: -7.637617588043213
    7. 'cls' → logprob: -9.012617111206055
    8. ' (' → logprob: -9.387617111206055
    9. 'a' → logprob: -9.637617111206055
    10. ' a' → logprob: -11.137617111206055

Token 1033: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00017922651022672653
    2. ' b' → logprob: -8.875179290771484
    3. 'a' → logprob: -10.375179290771484
    4. '0' → logprob: -11.750179290771484
    5. 'cls' → logprob: -16.125179290771484
    6. '(b' → logprob: -16.875179290771484
    7. ')b' → logprob: -17.000179290771484
    8. 'Vector' → logprob: -17.750179290771484
    9. ' ' → logprob: -17.875179290771484
    10. ')' → logprob: -17.875179290771484

Token 1034: ')' (ID: 8)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3107127249240875
    2. '==' → logprob: -1.4357126951217651
    3. ')==' → logprob: -3.8107128143310547
    4. ')' → logprob: -5.310712814331055
    5. '(a' → logprob: -6.810712814331055
    6. '()==' → logprob: -7.435712814331055
    7. '(' → logprob: -9.060712814331055
    8. ']==' → logprob: -9.310712814331055
    9. ',' → logprob: -10.060712814331055
    10. '=' → logprob: -10.310712814331055

Token 1035: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07894278317689896
    2. ' ==' → logprob: -2.5789427757263184
    3. '()==' → logprob: -9.953943252563477
    4. ')==' → logprob: -13.328943252563477
    5. '==
' → logprob: -13.578943252563477
    6. '=' → logprob: -13.703943252563477
    7. '()' → logprob: -13.828943252563477
    8. ' ' → logprob: -15.578943252563477
    9. ']==' → logprob: -16.078943252563477
    10. '0' → logprob: -16.328943252563477

Token 1036: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -18.750015258789062
    4. '  ' → logprob: -21.875015258789062
    5. '.' → logprob: -22.000015258789062
    6. '۰' → logprob: -22.000015258789062
    7. '```' → logprob: -22.625015258789062
    8. '
' → logprob: -23.375015258789062
    9. ' ' → logprob: -23.500015258789062
    10. '０' → logprob: -23.750015258789062

Token 1037: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '   ' → logprob: -19.875
    4. '۰' → logprob: -21.75
    5. '  ' → logprob: -22.625
    6. '00' → logprob: -22.875
    7. '.' → logprob: -23.125
    8. '```' → logprob: -23.25
    9. '０' → logprob: -23.375
    10. '000' → logprob: -24.0

Token 1038: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0325924449716695e-05
    2. '<|end|>' → logprob: -11.62501049041748
    3. '<|end|>' → logprob: -14.25001049041748
    4. '0' → logprob: -14.75001049041748
    5. ')' → logprob: -16.250009536743164
    6. '#' → logprob: -17.375009536743164
    7. '   ' → logprob: -17.750009536743164
    8. ' .' → logprob: -17.750009536743164
    9. 'def' → logprob: -18.375009536743164
    10. '```' → logprob: -18.625009536743164

Token 1039: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '<|end|>' → logprob: -17.75
    3. ' ' → logprob: -18.875
    4. '```' → logprob: -19.75
    5. '  ' → logprob: -20.5
    6. '.' → logprob: -20.75
    7. '   ' → logprob: -20.75
    8. ')' → logprob: -21.0
    9. 'float' → logprob: -21.125
    10. '1' → logprob: -21.875

Token 1040: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7280794382095337
    2. '<|end|>' → logprob: -0.7280794382095337
    3. '   ' → logprob: -3.603079319000244
    4. ')' → logprob: -5.353079319000244
    5. '<|end|>' → logprob: -6.853079319000244
    6. '

' → logprob: -7.478079319000244
    7. 'class' → logprob: -8.978079795837402
    8. '```' → logprob: -8.978079795837402
    9. ')
' → logprob: -9.478079795837402
    10. 'def' → logprob: -9.603079795837402

Token 1041: 'class' (ID: 1444)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0320531129837036
    2. 'def' → logprob: -1.1570531129837036
    3. '<|end|>' → logprob: -1.7820531129837036
    4. '#' → logprob: -2.282052993774414
    5. 'class' → logprob: -3.532052993774414
    6. '<|end|>' → logprob: -4.532052993774414
    7. ')' → logprob: -4.782052993774414
    8. '
' → logprob: -4.907052993774414
    9. 'from' → logprob: -7.032052993774414
    10. '```' → logprob: -7.282052993774414

Token 1042: ' Segment' (ID: 64922)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -0.001347138429991901
    2. 'Line' → logprob: -7.001347064971924
    3. ' Segment' → logprob: -7.751347064971924
    4. 'Seg' → logprob: -13.501347541809082
    5. '_segment' → logprob: -13.876347541809082
    6. 'segment' → logprob: -14.001347541809082
    7. 'Segments' → logprob: -14.126347541809082
    8. ' segment' → logprob: -14.751347541809082
    9. 'Straight' → logprob: -14.751347541809082
    10. ' Line' → logprob: -14.876347541809082

Token 1043: '(object' (ID: 9750)
  Prédit: '(object'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(object' → logprob: -0.030178658664226532
    2. '(Point' → logprob: -3.5301785469055176
    3. ':' → logprob: -7.780178546905518
    4. ':
' → logprob: -12.405179023742676
    5. '(point' → logprob: -13.530179023742676
    6. '(obj' → logprob: -13.655179023742676
    7. '):' → logprob: -14.030179023742676
    8. '(Vector' → logprob: -14.155179023742676
    9. '(' → logprob: -14.905179023742676
    10. ' Point' → logprob: -15.155179023742676

Token 1044: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.012547207996249199
    2. '):' → logprob: -4.387547016143799
    3. '):
' → logprob: -11.512547492980957
    4. ':
' → logprob: -12.012547492980957
    5. '):

' → logprob: -12.137547492980957
    6. ':' → logprob: -12.387547492980957
    7. '   ' → logprob: -12.387547492980957
    8. ')' → logprob: -12.762547492980957
    9. ' ):
' → logprob: -12.762547492980957
    10. '(object' → logprob: -14.012547492980957

Token 1045: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07915360480546951
    2. 'def' → logprob: -2.579153537750244
    3. ' def' → logprob: -8.454154014587402
    4. '	def' → logprob: -9.954154014587402
    5. '    
' → logprob: -13.704154014587402
    6. '
' → logprob: -13.704154014587402
    7. '__' → logprob: -15.329154014587402
    8. ' ' → logprob: -15.579154014587402
    9. '   ' → logprob: -15.579154014587402
    10. '  ' → logprob: -16.204153060913086

Token 1046: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.668304245569743e-05
    2. ' def' → logprob: -10.375046730041504
    3. '__' → logprob: -11.250046730041504
    4. '   ' → logprob: -13.250046730041504
    5. 'epsilon' → logprob: -14.500046730041504
    6. '	def' → logprob: -17.000045776367188
    7. '_def' → logprob: -17.625045776367188
    8. 'class' → logprob: -18.000045776367188
    9. '
' → logprob: -18.250045776367188
    10. '#' → logprob: -18.875045776367188

Token 1047: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.008628644980490208
    2. ' __' → logprob: -4.758628845214844
    3. 'init' → logprob: -12.008628845214844
    4. '_init' → logprob: -12.508628845214844
    5. '___' → logprob: -12.758628845214844
    6. '```' → logprob: -14.633628845214844
    7. '.__' → logprob: -14.758628845214844
    8. 'def' → logprob: -15.383628845214844
    9. ' ' → logprob: -16.133628845214844
    10. '____' → logprob: -16.133628845214844

Token 1048: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.128163257315464e-07
    2. '_init' → logprob: -16.25
    3. 'def' → logprob: -16.5
    4. '__' → logprob: -18.875
    5. 'int' → logprob: -19.125
    6. 'ini' → logprob: -19.25
    7. 'inite' → logprob: -20.125
    8. '(init' → logprob: -20.625
    9. ' init' → logprob: -20.875
    10. '```' → logprob: -21.125

Token 1049: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03377651795744896
    2. '__(' → logprob: -3.4087765216827393
    3. '(' → logprob: -9.78377628326416
    4. ' (' → logprob: -9.90877628326416
    5. 'self' → logprob: -11.90877628326416
    6. '   ' → logprob: -12.15877628326416
    7. '(s' → logprob: -12.78377628326416
    8. '__' → logprob: -12.90877628326416
    9. 'def' → logprob: -12.90877628326416
    10. ' ' → logprob: -14.03377628326416

Token 1050: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.7432603272027336e-06
    2. ' self' → logprob: -13.500001907348633
    3. '(self' → logprob: -15.250001907348633
    4. '   ' → logprob: -17.250001907348633
    5. 's' → logprob: -17.375001907348633
    6. ',' → logprob: -18.500001907348633
    7. '1' → logprob: -19.125001907348633
    8. 'p' → logprob: -19.125001907348633
    9. 'elf' → logprob: -19.500001907348633
    10. '	self' → logprob: -19.750001907348633

Token 1051: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004327691625803709
    2. ',' → logprob: -5.629327774047852
    3. 'self' → logprob: -7.754327774047852
    4. ' (' → logprob: -8.379327774047852
    5. '(s' → logprob: -10.004327774047852
    6. ',self' → logprob: -11.379327774047852
    7. '(' → logprob: -11.629327774047852
    8. ' self' → logprob: -13.379327774047852
    9. '   ' → logprob: -14.254327774047852
    10. '(p' → logprob: -15.754327774047852

Token 1052: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0005826997803524137
    2. ' p' → logprob: -7.625582695007324
    3. 'self' → logprob: -9.375582695007324
    4. '   ' → logprob: -11.625582695007324
    5. ' self' → logprob: -15.000582695007324
    6. '       ' → logprob: -15.000582695007324
    7. '	p' → logprob: -16.12558364868164
    8. ' ' → logprob: -16.37558364868164
    9. '  ' → logprob: -16.87558364868164
    10. ',' → logprob: -17.25058364868164

Token 1053: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004587903094943613
    2. 'oints' → logprob: -7.875458717346191
    3. '   ' → logprob: -10.250458717346191
    4. '=' → logprob: -11.375458717346191
    5. 'def' → logprob: -12.125458717346191
    6. ' ' → logprob: -12.375458717346191
    7. 'oint' → logprob: -12.500458717346191
    8. '0' → logprob: -12.625458717346191
    9. ',' → logprob: -12.875458717346191
    10. '=None' → logprob: -13.250458717346191

Token 1054: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14301885664463043
    2. '=' → logprob: -2.143018960952759
    3. '=None' → logprob: -4.14301872253418
    4. ' =' → logprob: -10.14301872253418
    5. ' ,' → logprob: -10.26801872253418
    6. ',p' → logprob: -12.64301872253418
    7. '   ' → logprob: -12.89301872253418
    8. ',None' → logprob: -12.89301872253418
    9. '):
' → logprob: -14.26801872253418
    10. '):' → logprob: -14.51801872253418

Token 1055: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.695572018623352
    2. 'None' → logprob: -0.695572018623352
    3. '0' → logprob: -6.0705718994140625
    4. '(Point' → logprob: -10.445571899414062
    5. '=None' → logprob: -10.820571899414062
    6. ' None' → logprob: -10.945571899414062
    7. '(None' → logprob: -11.695571899414062
    8. ' Point' → logprob: -11.695571899414062
    9. ')' → logprob: -11.820571899414062
    10. '(' → logprob: -12.070571899414062

Token 1056: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.06245429068803787
    2. ',' → logprob: -2.8124542236328125
    3. ',p' → logprob: -7.6874542236328125
    4. '(' → logprob: -12.187454223632812
    5. '(),
' → logprob: -12.312454223632812
    6. 'p' → logprob: -12.437454223632812
    7. ',None' → logprob: -12.812454223632812
    8. '()' → logprob: -12.937454223632812
    9. ' ,' → logprob: -13.062454223632812
    10. ',x' → logprob: -13.812454223632812

Token 1057: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0036106400657445192
    2. ' p' → logprob: -5.628610610961914
    3. '   ' → logprob: -12.628610610961914
    4. 'None' → logprob: -13.003610610961914
    5. 'Point' → logprob: -13.753610610961914
    6. '    ' → logprob: -13.878610610961914
    7. '  ' → logprob: -14.253610610961914
    8. '     ' → logprob: -14.503610610961914
    9. '      ' → logprob: -14.753610610961914
    10. ' ' → logprob: -14.878610610961914

Token 1058: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0028128400444984436
    2. '1' → logprob: -5.87781286239624
    3. 'Point' → logprob: -13.377812385559082
    4. 'oints' → logprob: -13.377812385559082
    5. 'oint' → logprob: -13.627812385559082
    6. '0' → logprob: -13.877812385559082
    7. '(Point' → logprob: -14.252812385559082
    8. ' ' → logprob: -14.877812385559082
    9. '```' → logprob: -14.877812385559082
    10. ')' → logprob: -15.502812385559082

Token 1059: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006302857305854559
    2. '(),' → logprob: -5.381302833557129
    3. '=None' → logprob: -7.256302833557129
    4. '(Point' → logprob: -8.006302833557129
    5. '()' → logprob: -8.256302833557129
    6. 'Point' → logprob: -8.631302833557129
    7. ',' → logprob: -9.631302833557129
    8. 'p' → logprob: -10.006302833557129
    9. '=p' → logprob: -10.631302833557129
    10. '(' → logprob: -10.881302833557129

Token 1060: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -2.093505099765025e-05
    2. ' Point' → logprob: -11.750020980834961
    3. '	Point' → logprob: -12.125020980834961
    4. 'None' → logprob: -12.500020980834961
    5. 'p' → logprob: -13.375020980834961
    6. '(Point' → logprob: -14.125020980834961
    7. ')' → logprob: -14.625020980834961
    8. '<Point' → logprob: -14.750020980834961
    9. '0' → logprob: -15.125020980834961
    10. '.Point' → logprob: -15.875020980834961

Token 1061: '()):
' (ID: 83536)
  Prédit: '(),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.7323164343833923
    2. '()' → logprob: -1.232316493988037
    3. '()):
' → logprob: -1.482316493988037
    4. '())' → logprob: -8.732316017150879
    5. '):
' → logprob: -9.732316017150879
    6. '(),
' → logprob: -9.732316017150879
    7. '()
' → logprob: -10.232316017150879
    8. ',' → logprob: -10.357316017150879
    9. '(' → logprob: -10.482316017150879
    10. '):' → logprob: -10.482316017150879

Token 1062: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021509946964215487
    2. 'self' → logprob: -9.125215530395508
    3. '	' → logprob: -9.625215530395508
    4. '   ' → logprob: -11.125215530395508
    5. ' self' → logprob: -11.500215530395508
    6. '	self' → logprob: -12.125215530395508
    7. ',' → logprob: -13.000215530395508
    8. '	   ' → logprob: -13.125215530395508
    9. '	       ' → logprob: -14.000215530395508
    10. '<|end|>' → logprob: -14.125215530395508

Token 1063: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006629953859373927
    2. '       ' → logprob: -7.500662803649902
    3. ' self' → logprob: -9.125662803649902
    4. '	self' → logprob: -14.125662803649902
    5. '   ' → logprob: -16.00066375732422
    6. '(self' → logprob: -16.50066375732422
    7. '	' → logprob: -16.62566375732422
    8. 'super' → logprob: -17.12566375732422
    9. ' ' → logprob: -18.62566375732422
    10. '
' → logprob: -19.25066375732422

Token 1064: ' isinstance' (ID: 25889)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.06204812973737717
    2. ' isinstance' → logprob: -2.8120481967926025
    3. '(is' → logprob: -10.562047958374023
    4. '   ' → logprob: -10.937047958374023
    5. 'p' → logprob: -11.312047958374023
    6. ' is' → logprob: -11.562047958374023
    7. 'not' → logprob: -11.812047958374023
    8. 'type' → logprob: -12.937047958374023
    9. '       ' → logprob: -13.437047958374023
    10. ' p' → logprob: -13.562047958374023

Token 1065: '(p' (ID: 2407)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4741222560405731
    2. '(p' → logprob: -0.9741222858428955
    3. ' p' → logprob: -10.599122047424316
    4. '(' → logprob: -11.099122047424316
    5. 'x' → logprob: -12.974122047424316
    6. '(x' → logprob: -13.474122047424316
    7. '   ' → logprob: -14.474122047424316
    8. ')p' → logprob: -15.474122047424316
    9. '	p' → logprob: -15.724122047424316
    10. ',p' → logprob: -16.474123001098633

Token 1066: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00028541131177917123
    2. 'p' → logprob: -8.250285148620605
    3. '(p' → logprob: -11.875285148620605
    4. '   ' → logprob: -12.000285148620605
    5. 'tuple' → logprob: -13.500285148620605
    6. '(Point' → logprob: -13.500285148620605
    7. ' p' → logprob: -13.750285148620605
    8. 'oints' → logprob: -13.750285148620605
    9. 's' → logprob: -14.250285148620605
    10. 'Point' → logprob: -14.250285148620605

Token 1067: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011915886716451496
    2. ',p' → logprob: -9.62511920928955
    3. ',(' → logprob: -10.75011920928955
    4. ' ,' → logprob: -11.62511920928955
    5. '(tuple' → logprob: -12.12511920928955
    6. ',list' → logprob: -12.37511920928955
    7. 'tuple' → logprob: -12.50011920928955
    8. 'p' → logprob: -13.00011920928955
    9. '   ' → logprob: -13.50011920928955
    10. ',int' → logprob: -13.75011920928955

Token 1068: ' Point' (ID: 9971)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.23496201634407043
    2. 'Segment' → logprob: -1.984961986541748
    3. 'Point' → logprob: -2.734961986541748
    4. ' tuple' → logprob: -5.609961986541748
    5. 'list' → logprob: -5.984961986541748
    6. 'Vector' → logprob: -7.234961986541748
    7. ' Segment' → logprob: -9.984962463378906
    8. 'Tuple' → logprob: -10.109962463378906
    9. ' Point' → logprob: -10.359962463378906
    10. 'Line' → logprob: -10.484962463378906

Token 1069: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1271626502275467
    2. '):
' → logprob: -2.1271626949310303
    3. '):' → logprob: -8.62716293334961
    4. ' and' → logprob: -11.25216293334961
    5. '):
' → logprob: -11.62716293334961
    6. 'and' → logprob: -11.87716293334961
    7. ' )' → logprob: -12.12716293334961
    8. '       ' → logprob: -12.62716293334961
    9. ')
' → logprob: -12.75216293334961
    10. ')p' → logprob: -12.87716293334961

Token 1070: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1199038177728653
    2. ' and' → logprob: -2.244903802871704
    3. 'and' → logprob: -5.244904041290283
    4. '       ' → logprob: -7.244904041290283
    5. ':
' → logprob: -7.369904041290283
    6. 'self' → logprob: -8.494903564453125
    7. '   ' → logprob: -9.119903564453125
    8. ':' → logprob: -10.119903564453125
    9. ' self' → logprob: -10.619903564453125
    10. ',' → logprob: -11.244903564453125

Token 1071: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.008392113260924816
    2. '       ' → logprob: -5.133392333984375
    3. ' self' → logprob: -6.508392333984375
    4. '           ' → logprob: -7.008392333984375
    5. '	self' → logprob: -10.008392333984375
    6. '   ' → logprob: -11.133392333984375
    7. '(self' → logprob: -13.758392333984375
    8. '	' → logprob: -14.133392333984375
    9. 'if' → logprob: -14.133392333984375
    10. '	       ' → logprob: -14.258392333984375

Token 1072: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0005284877843223512
    2. 'p' → logprob: -8.000528335571289
    3. '.' → logprob: -8.875528335571289
    4. ' p' → logprob: -10.500528335571289
    5. ' .' → logprob: -11.750528335571289
    6. '   ' → logprob: -12.250528335571289
    7. 'def' → logprob: -12.500528335571289
    8. ':' → logprob: -13.375528335571289
    9. '=' → logprob: -14.000528335571289
    10. 's' → logprob: -14.250528335571289

Token 1073: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. 'oints' → logprob: -15.125
    3. 'oint' → logprob: -17.5
    4. 'p' → logprob: -17.875
    5. '   ' → logprob: -18.0
    6. 'def' → logprob: -18.0
    7. '１' → logprob: -18.0
    8. 'r' → logprob: -19.0
    9. '۱' → logprob: -19.0
    10. '' → logprob: -19.1875

Token 1074: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47435086965560913
    2. '=' → logprob: -0.9743508696556091
    3. '=p' → logprob: -8.224350929260254
    4. ',' → logprob: -12.474350929260254
    5. '=
' → logprob: -14.599350929260254
    6. ' =
' → logprob: -15.224350929260254
    7. ' ' → logprob: -15.224350929260254
    8. ',p' → logprob: -15.599350929260254
    9. 'p' → logprob: -15.724350929260254
    10. '   ' → logprob: -15.974350929260254

Token 1075: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.607391408877447e-05
    2. ' p' → logprob: -10.250036239624023
    3. 'Point' → logprob: -14.375036239624023
    4. 'point' → logprob: -17.000036239624023
    5. ' Point' → logprob: -20.125036239624023
    6. '	p' → logprob: -20.250036239624023
    7. '<p' → logprob: -20.500036239624023
    8. ' ' → logprob: -21.000036239624023
    9. 'points' → logprob: -21.125036239624023
    10. '   ' → logprob: -21.750036239624023

Token 1076: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04312536120414734
    2. 'oint' → logprob: -3.1681253910064697
    3. 'Point' → logprob: -9.16812515258789
    4. 'oints' → logprob: -11.29312515258789
    5. 'oin' → logprob: -12.04312515258789
    6. 'p' → logprob: -13.91812515258789
    7. 'int' → logprob: -14.41812515258789
    8. '(Point' → logprob: -14.54312515258789
    9. ' Point' → logprob: -15.54312515258789
    10. '_point' → logprob: -15.66812515258789

Token 1077: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017314812168478966
    2. '
' → logprob: -4.642314910888672
    3. 'self' → logprob: -5.642314910888672
    4. '<|end|>' → logprob: -5.892314910888672
    5. '	' → logprob: -8.517314910888672
    6. '   ' → logprob: -8.517314910888672
    7. '<|end|>' → logprob: -8.517314910888672
    8. ',' → logprob: -8.642314910888672
    9. '           ' → logprob: -8.767314910888672
    10. ' and' → logprob: -10.142314910888672

Token 1078: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026966973673552275
    2. '           ' → logprob: -6.502696514129639
    3. 'self' → logprob: -7.502696514129639
    4. '	' → logprob: -8.002696990966797
    5. '   ' → logprob: -9.002696990966797
    6. '<|end|>' → logprob: -9.627696990966797
    7. '
' → logprob: -9.752696990966797
    8. ' self' → logprob: -11.377696990966797
    9. '	       ' → logprob: -11.627696990966797
    10. ' ' → logprob: -12.002696990966797

Token 1079: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00047094907495193183
    2. ' self' → logprob: -7.875471115112305
    3. '           ' → logprob: -9.375471115112305
    4. '       ' → logprob: -12.125471115112305
    5. '   ' → logprob: -15.750471115112305
    6. '	self' → logprob: -15.750471115112305
    7. ' ' → logprob: -16.125471115112305
    8. '               ' → logprob: -16.250471115112305
    9. 's' → logprob: -17.375471115112305
    10. '         ' → logprob: -17.750471115112305

Token 1080: '.p' (ID: 1201)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.026339774951338768
    2. '.p' → logprob: -3.6513397693634033
    3. ' p' → logprob: -11.026339530944824
    4. '2' → logprob: -11.151339530944824
    5. '.' → logprob: -12.401339530944824
    6. 's' → logprob: -13.401339530944824
    7. '1' → logprob: -14.151339530944824
    8. '   ' → logprob: -14.526339530944824
    9. '	p' → logprob: -15.276339530944824
    10. '<p' → logprob: -15.401339530944824

Token 1081: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '۲' → logprob: -17.125
    4. '２' → logprob: -18.5
    5. 'p' → logprob: -19.25
    6. 'def' → logprob: -19.25
    7. '1' → logprob: -19.5
    8. '२' → logprob: -19.5625
    9. '٢' → logprob: -19.75
    10. 'ython' → logprob: -19.875

Token 1082: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31334179639816284
    2. ' =' → logprob: -1.3133418560028076
    3. 'p' → logprob: -9.938342094421387
    4. '=p' → logprob: -10.813342094421387
    5. ' p' → logprob: -11.438342094421387
    6. ' ' → logprob: -14.313342094421387
    7. 's' → logprob: -15.813342094421387
    8. '＝' → logprob: -17.18834114074707
    9. '(p' → logprob: -18.18834114074707
    10. '<|end|>' → logprob: -18.18834114074707

Token 1083: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -9.686778503237292e-05
    2. ' p' → logprob: -9.250097274780273
    3. 'Point' → logprob: -14.625097274780273
    4. 'point' → logprob: -16.750097274780273
    5. '   ' → logprob: -17.125097274780273
    6. ' ' → logprob: -17.875097274780273
    7. '	p' → logprob: -18.312597274780273
    8. '<p' → logprob: -19.000097274780273
    9. 'Segment' → logprob: -19.250097274780273
    10. 'points' → logprob: -19.562597274780273

Token 1084: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.531315314830863e-06
    2. 'oint' → logprob: -13.625003814697266
    3. 'oints' → logprob: -14.125003814697266
    4. '1' → logprob: -15.375003814697266
    5. ' ' → logprob: -15.500003814697266
    6. 'p' → logprob: -15.500003814697266
    7. 't' → logprob: -15.750003814697266
    8. '۲' → logprob: -16.062503814697266
    9. '   ' → logprob: -16.562503814697266
    10. 'Point' → logprob: -16.812503814697266

Token 1085: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1086: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1087: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.319940447807312
    2. ' else' → logprob: -2.0699405670166016
    3. 'else' → logprob: -2.0699405670166016
    4. 'elif' (adapté à ' elif') → logprob: -4.944940567016602
    5. '<|end|>' → logprob: -5.069940567016602
    6. ' elif' → logprob: -5.694940567016602
    7. '   ' → logprob: -5.819940567016602
    8. '
' → logprob: -7.569940567016602
    9. '<|end|>' → logprob: -7.944940567016602
    10. 'def' → logprob: -9.069940567016602

Token 1088: ' isinstance' (ID: 25889)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.00011725161311915144
    2. 'has' → logprob: -10.000117301940918
    3. 'len' → logprob: -10.000117301940918
    4. ' isinstance' → logprob: -11.000117301940918
    5. '(is' → logprob: -11.750117301940918
    6. 'type' → logprob: -13.750117301940918
    7. '   ' → logprob: -14.750117301940918
    8. 'p' → logprob: -15.250117301940918
    9. 'tuple' → logprob: -16.5001163482666
    10. '  ' → logprob: -18.2501163482666

Token 1089: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00046379686682485044
    2. '(tuple' → logprob: -8.375463485717773
    3. '(list' → logprob: -8.875463485717773
    4. 'p' → logprob: -9.750463485717773
    5. '(s' → logprob: -11.250463485717773
    6. 'tuple' → logprob: -11.500463485717773
    7. '(x' → logprob: -13.000463485717773
    8. '(point' → logprob: -13.125463485717773
    9. 'list' → logprob: -13.125463485717773
    10. '(points' → logprob: -13.125463485717773

Token 1090: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005964107811450958
    2. 'oint' → logprob: -5.630964279174805
    3. 'tuple' → logprob: -6.630964279174805
    4. '2' → logprob: -7.505964279174805
    5. '(Point' → logprob: -9.005964279174805
    6. '(tuple' → logprob: -9.005964279174805
    7. 'Point' → logprob: -9.130964279174805
    8. 'Tuple' → logprob: -10.005964279174805
    9. 'oints' → logprob: -10.630964279174805
    10. ' tuple' → logprob: -11.130964279174805

Token 1091: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007037336472421885
    2. '[' → logprob: -8.500703811645508
    3. '):
' → logprob: -9.125703811645508
    4. '=' → logprob: -9.375703811645508
    5. '   ' → logprob: -9.625703811645508
    6. ' ,' → logprob: -10.250703811645508
    7. ' is' → logprob: -10.500703811645508
    8. '):' → logprob: -10.750703811645508
    9. ',p' → logprob: -10.875703811645508
    10. ')' → logprob: -11.125703811645508

Token 1092: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.0038310715463012457
    2. 'list' → logprob: -5.628830909729004
    3. 'Segment' → logprob: -8.628830909729004
    4. 'Point' → logprob: -10.628830909729004
    5. ' tuple' → logprob: -10.878830909729004
    6. '(tuple' → logprob: -12.628830909729004
    7. 'int' → logprob: -13.503830909729004
    8. 'tu' → logprob: -14.003830909729004
    9. 'str' → logprob: -14.128830909729004
    10. 'Tuple' → logprob: -14.378830909729004

Token 1093: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0009796975646167994
    2. '):' → logprob: -7.125979900360107
    3. ')' → logprob: -8.75097942352295
    4. '):
' → logprob: -11.87597942352295
    5. '[' → logprob: -12.62597942352295
    6. '):

' → logprob: -13.50097942352295
    7. ',' → logprob: -13.87597942352295
    8. '   ' → logprob: -13.87597942352295
    9. '()):
' → logprob: -13.87597942352295
    10. ')):
' → logprob: -14.75097942352295

Token 1094: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.096713587641716
    2. '           ' → logprob: -2.9717135429382324
    3. ':
' → logprob: -3.7217135429382324
    4. ':' → logprob: -4.846713542938232
    5. '):
' → logprob: -4.971713542938232
    6. '   ' → logprob: -7.596713542938232
    7. '	       ' → logprob: -8.59671401977539
    8. ',' → logprob: -8.72171401977539
    9. ' self' → logprob: -8.72171401977539
    10. 'self' → logprob: -8.84671401977539

Token 1095: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0016707765171304345
    2. '       ' → logprob: -6.626670837402344
    3. ' self' → logprob: -8.251670837402344
    4. '	self' → logprob: -10.501670837402344
    5. 'p' → logprob: -11.126670837402344
    6. 'point' → logprob: -11.126670837402344
    7. 'segment' → logprob: -11.876670837402344
    8. '           ' → logprob: -12.001670837402344
    9. '(self' → logprob: -12.501670837402344
    10. 'Point' → logprob: -13.001670837402344

Token 1096: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.14743787050247192
    2. 'p' → logprob: -2.522437810897827
    3. '(p' → logprob: -3.647437810897827
    4. ' =' → logprob: -4.522438049316406
    5. '1' → logprob: -5.022438049316406
    6. '=' → logprob: -5.147438049316406
    7. ' p' → logprob: -6.272438049316406
    8. '(' → logprob: -6.772438049316406
    9. 'def' → logprob: -7.147438049316406
    10. '.__' → logprob: -7.397438049316406

Token 1097: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. 'oints' → logprob: -13.625001907348633
    3. 'r' → logprob: -15.625001907348633
    4. 'oint' → logprob: -16.000001907348633
    5. 'aram' → logprob: -16.875001907348633
    6. '0' → logprob: -17.000001907348633
    7. 'ar' → logprob: -17.625001907348633
    8. '...' → logprob: -17.687501907348633
    9. '۱' → logprob: -17.937501907348633
    10. '2' → logprob: -17.937501907348633

Token 1098: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2015221118927002
    2. '=' → logprob: -1.7015221118927002
    3. ',' → logprob: -9.326521873474121
    4. '=p' → logprob: -11.576521873474121
    5. ')' → logprob: -12.951521873474121
    6. ',p' → logprob: -12.951521873474121
    7. '<|end|>' → logprob: -13.451521873474121
    8. '=(' → logprob: -13.826521873474121
    9. ' =(' → logprob: -14.076521873474121
    10. ' ' → logprob: -15.326521873474121

Token 1099: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -4.596781946020201e-05
    2. ' Point' → logprob: -10.000045776367188
    3. 'p' → logprob: -14.625045776367188
    4. '   ' → logprob: -17.375045776367188
    5. '	Point' → logprob: -19.500045776367188
    6. 'point' → logprob: -20.375045776367188
    7. '(Point' → logprob: -21.000045776367188
    8. ' p' → logprob: -21.375045776367188
    9. ' ' → logprob: -21.500045776367188
    10. '  ' → logprob: -21.500045776367188

Token 1100: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -7.636475493200123e-05
    2. 'p' → logprob: -9.750076293945312
    3. '(' → logprob: -11.375076293945312
    4. '(*' → logprob: -13.125076293945312
    5. '(x' → logprob: -13.875076293945312
    6. '((' → logprob: -14.250076293945312
    7. '1' → logprob: -14.375076293945312
    8. '(point' → logprob: -14.500076293945312
    9. ' p' → logprob: -14.750076293945312
    10. '   ' → logprob: -15.750076293945312

Token 1101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. 'oints' → logprob: -16.375
    3. 'oint' → logprob: -16.5
    4. '0' → logprob: -17.375
    5. 'aram' → logprob: -17.75
    6. 'p' → logprob: -18.25
    7. '[' → logprob: -18.375
    8. 'osition' → logprob: -19.0625
    9. 'ar' → logprob: -19.125
    10. '2' → logprob: -19.25

Token 1102: '[' (ID: 58)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0609697625041008
    2. ')' → logprob: -3.310969829559326
    3. '[' → logprob: -3.935969829559326
    4. ',' → logprob: -6.060969829559326
    5. '1' → logprob: -7.935969829559326
    6. '   ' → logprob: -8.685969352722168
    7. '),' → logprob: -9.560969352722168
    8. '       ' → logprob: -10.310969352722168
    9. ');' → logprob: -10.435969352722168
    10. ')
' → logprob: -10.435969352722168

Token 1103: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.080963092041202e-06
    2. '])
' → logprob: -13.250004768371582
    3. '])' → logprob: -14.250004768371582
    4. ')
' → logprob: -14.375004768371582
    5. '
' → logprob: -14.625004768371582
    6. ')' → logprob: -14.625004768371582
    7. '[' → logprob: -14.750004768371582
    8. ' ' → logprob: -15.000004768371582
    9. '   ' → logprob: -15.875004768371582
    10. '1' → logprob: -17.0000057220459

Token 1104: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01827320270240307
    2. ',p' → logprob: -4.01827335357666
    3. ',
' → logprob: -10.14327335357666
    4. ' ,' → logprob: -10.64327335357666
    5. '),' → logprob: -10.76827335357666
    6. ')' → logprob: -10.89327335357666
    7. 'p' → logprob: -12.76827335357666
    8. ')p' → logprob: -13.01827335357666
    9. '‌,' → logprob: -13.26827335357666
    10. ' p' → logprob: -13.39327335357666

Token 1105: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.306760805164231e-05
    2. ' p' → logprob: -11.25001335144043
    3. '   ' → logprob: -19.75001335144043
    4. '	p' → logprob: -20.62501335144043
    5. '<p' → logprob: -21.12501335144043
    6. '    ' → logprob: -21.25001335144043
    7. ')p' → logprob: -21.37501335144043
    8. '  ' → logprob: -21.50001335144043
    9. ' ' → logprob: -21.62501335144043
    10. '
' → logprob: -22.37501335144043

Token 1106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. '0' → logprob: -14.250001907348633
    3. 'p' → logprob: -14.375001907348633
    4. ' ' → logprob: -16.750001907348633
    5. '```' → logprob: -16.875001907348633
    6. '[' → logprob: -17.562501907348633
    7. ' p' → logprob: -18.187501907348633
    8. '   ' → logprob: -18.437501907348633
    9. '১' → logprob: -18.937501907348633
    10. '.' → logprob: -19.250001907348633

Token 1107: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -13.500001907348633
    3. '0' → logprob: -16.375001907348633
    4. ' ' → logprob: -16.375001907348633
    5. '   ' → logprob: -18.375001907348633
    6. 'p' → logprob: -18.625001907348633
    7. '```' → logprob: -18.625001907348633
    8. ')' → logprob: -19.375001907348633
    9. '-' → logprob: -19.500001907348633
    10. ']' → logprob: -19.500001907348633

Token 1108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.792751032160595e-05
    2. 'p' → logprob: -9.37508773803711
    3. '0' → logprob: -13.00008773803711
    4. ' ' → logprob: -15.25008773803711
    5. ' p' → logprob: -16.25008773803711
    6. '```' → logprob: -16.62508773803711
    7. '   ' → logprob: -17.06258773803711
    8. ']' → logprob: -17.12508773803711
    9. ')p' → logprob: -17.31258773803711
    10. '
' → logprob: -17.37508773803711

Token 1109: '])
' (ID: 5169)
  Prédit: '])
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])
' → logprob: -0.13229967653751373
    2. '])' → logprob: -2.2572996616363525
    3. ')
' → logprob: -4.132299900054932
    4. ')' → logprob: -5.757299900054932
    5. ']' → logprob: -11.382299423217773
    6. '],' → logprob: -11.632299423217773
    7. '   ' → logprob: -11.757299423217773
    8. '),' → logprob: -11.757299423217773
    9. '])

' → logprob: -11.757299423217773
    10. ' )
' → logprob: -12.257299423217773

Token 1110: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11501467972993851
    2. '       ' → logprob: -2.2400147914886475
    3. '   ' → logprob: -7.115014553070068
    4. ',' → logprob: -7.740014553070068
    5. '<|end|>' → logprob: -8.365015029907227
    6. 'self' → logprob: -8.615015029907227
    7. '               ' → logprob: -8.865015029907227
    8. ' self' → logprob: -9.740015029907227
    9. '	       ' → logprob: -9.740015029907227
    10. ' ' → logprob: -9.865015029907227

Token 1111: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00022606621496379375
    2. '           ' → logprob: -8.750226020812988
    3. ' self' → logprob: -10.000226020812988
    4. '       ' → logprob: -10.750226020812988
    5. '   ' → logprob: -14.875226020812988
    6. '	self' → logprob: -15.125226020812988
    7. '               ' → logprob: -16.250226974487305
    8. '(self' → logprob: -17.875226974487305
    9. ' ' → logprob: -18.250226974487305
    10. '          ' → logprob: -18.750226974487305

Token 1112: '.p' (ID: 1201)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0010381679749116302
    2. '.p' → logprob: -6.876038074493408
    3. ' p' → logprob: -12.376038551330566
    4. '2' → logprob: -14.376038551330566
    5. '	p' → logprob: -15.626038551330566
    6. '_p' → logprob: -15.876038551330566
    7. '1' → logprob: -16.62603759765625
    8. '```' → logprob: -16.75103759765625
    9. ' ' → logprob: -16.87603759765625
    10. '   ' → logprob: -17.00103759765625

Token 1113: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. 'p' → logprob: -17.0
    3. '۲' → logprob: -17.25
    4. ' ' → logprob: -17.5
    5. '２' → logprob: -17.8125
    6. '1' → logprob: -18.25
    7. '   ' → logprob: -18.25
    8. 'def' → logprob: -18.8125
    9. 'tuple' → logprob: -18.9375
    10. '```' → logprob: -18.9375

Token 1114: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687586784362793
    2. ' =' → logprob: -1.136875867843628
    3. 'Point' → logprob: -13.886876106262207
    4. '=
' → logprob: -14.011876106262207
    5. ' ' → logprob: -14.136876106262207
    6. ')' → logprob: -15.011876106262207
    7. '=p' → logprob: -15.261876106262207
    8. ' =
' → logprob: -15.636876106262207
    9. '<|end|>' → logprob: -15.886876106262207
    10. '<Point' → logprob: -15.949376106262207

Token 1115: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -4.203409844194539e-05
    2. ' Point' → logprob: -10.125041961669922
    3. 'p' → logprob: -13.875041961669922
    4. 'Segment' → logprob: -14.125041961669922
    5. '	Point' → logprob: -16.375041961669922
    6. '(Point' → logprob: -17.125041961669922
    7. '   ' → logprob: -17.750041961669922
    8. 'point' → logprob: -18.375041961669922
    9. ' ' → logprob: -18.625041961669922
    10. '_Point' → logprob: -18.625041961669922

Token 1116: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.014189359731972218
    2. 'p' → logprob: -4.26418924331665
    3. ' p' → logprob: -11.264189720153809
    4. 'tuple' → logprob: -12.264189720153809
    5. ' (' → logprob: -12.889189720153809
    6. '(' → logprob: -13.264189720153809
    7. '   ' → logprob: -14.264189720153809
    8. 'Point' → logprob: -14.389189720153809
    9. 's' → logprob: -14.639189720153809
    10. '(tuple' → logprob: -14.764189720153809

Token 1117: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0016441189218312502
    2. '2' → logprob: -6.626644134521484
    3. '[' → logprob: -8.251644134521484
    4. ' ' → logprob: -10.751644134521484
    5. '(' → logprob: -11.376644134521484
    6. '0' → logprob: -11.876644134521484
    7. '   ' → logprob: -11.876644134521484
    8. '```' → logprob: -13.564144134521484
    9. '     ' → logprob: -13.814144134521484
    10. '
' → logprob: -13.876644134521484

Token 1118: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.034592388459714e-06
    2. ')' → logprob: -12.875005722045898
    3. '0' → logprob: -13.875005722045898
    4. '<|end|>' → logprob: -14.000005722045898
    5. '<|end|>' → logprob: -15.000005722045898
    6. '[
' → logprob: -15.125005722045898
    7. '...' → logprob: -15.375005722045898
    8. '1' → logprob: -15.625005722045898
    9. '),' → logprob: -15.875005722045898
    10. 'x' → logprob: -16.2500057220459

Token 1119: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.47495681833243e-05
    2. '[' → logprob: -10.750024795532227
    3. ' ' → logprob: -13.000024795532227
    4. '1' → logprob: -15.250024795532227
    5. '   ' → logprob: -15.250024795532227
    6. '(' → logprob: -15.750024795532227
    7. ')' → logprob: -16.375024795532227
    8. 'x' → logprob: -17.000024795532227
    9. '<|end|>' → logprob: -17.250024795532227
    10. '2' → logprob: -17.875024795532227

Token 1120: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5766493678092957
    2. '],' → logprob: -0.8266493678092957
    3. '),' → logprob: -7.451649188995361
    4. ' ,' → logprob: -9.82664966583252
    5. '1' → logprob: -11.07664966583252
    6. ' ],' → logprob: -11.45164966583252
    7. '[' → logprob: -11.57664966583252
    8. ',p' → logprob: -12.07664966583252
    9. 'p' → logprob: -12.07664966583252
    10. ']' → logprob: -12.70164966583252

Token 1121: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0006282062386162579
    2. ' p' → logprob: -7.3756279945373535
    3. '   ' → logprob: -14.375628471374512
    4. '       ' → logprob: -14.500628471374512
    5. '	p' → logprob: -16.125627517700195
    6. '     ' → logprob: -16.625627517700195
    7. '    ' → logprob: -16.625627517700195
    8. ' ' → logprob: -16.750627517700195
    9. '           ' → logprob: -16.875627517700195
    10. '      ' → logprob: -17.625627517700195

Token 1122: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -15.125000953674316
    3. ' ' → logprob: -15.250000953674316
    4. '2' → logprob: -15.625000953674316
    5. '<|end|>' → logprob: -15.625000953674316
    6. '   ' → logprob: -16.250001907348633
    7. '```' → logprob: -16.500001907348633
    8. '
' → logprob: -17.375001907348633
    9. ']' → logprob: -17.375001907348633
    10. '-' → logprob: -17.687501907348633

Token 1123: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0018131057731807232
    2. '[' → logprob: -7.001812934875488
    3. '2' → logprob: -7.751812934875488
    4. '])' → logprob: -7.751812934875488
    5. ')' → logprob: -10.751812934875488
    6. '])
' → logprob: -11.376812934875488
    7. ']' → logprob: -12.626812934875488
    8. ' ' → logprob: -14.001812934875488
    9. '```' → logprob: -14.001812934875488
    10. '   ' → logprob: -14.751812934875488

Token 1124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.375000953674316
    3. '2' → logprob: -15.875000953674316
    4. '
' → logprob: -16.5
    5. '```' → logprob: -17.0
    6. ')' → logprob: -17.125
    7. '   ' → logprob: -17.125
    8. '<|end|>' → logprob: -17.625
    9. '<|end|>' → logprob: -18.0625
    10. '0' → logprob: -18.125

Token 1125: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017636561824474484
    2. '       ' → logprob: -9.125176429748535
    3. ')
' → logprob: -9.750176429748535
    4. '<|end|>' → logprob: -13.000176429748535
    5. ')return' → logprob: -13.125176429748535
    6. ' )' → logprob: -14.125176429748535
    7. ']' → logprob: -14.500176429748535
    8. '   ' → logprob: -14.625176429748535
    9. '           ' → logprob: -15.125176429748535
    10. '):' → logprob: -15.125176429748535

Token 1126: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1127: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.01713261380791664
    2. '#' → logprob: -4.392132759094238
    3. '   ' → logprob: -5.392132759094238
    4. ' def' → logprob: -10.892132759094238
    5. '
' → logprob: -11.017132759094238
    6. 'class' → logprob: -11.642132759094238
    7. 'import' → logprob: -12.392132759094238
    8. '	def' → logprob: -12.392132759094238
    9. 'from' → logprob: -12.767132759094238
    10. '    
' → logprob: -13.892132759094238

Token 1128: ' intersect' (ID: 64353)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.3652786612510681
    2. '__' → logprob: -1.240278720855713
    3. ' __' → logprob: -4.615278720855713
    4. 'abs' → logprob: -5.865278720855713
    5. 'len' → logprob: -6.115278720855713
    6. ' length' → logprob: -7.865278720855713
    7. 'reverse' → logprob: -8.115278244018555
    8. '_length' → logprob: -8.365278244018555
    9. 'vector' → logprob: -8.865278244018555
    10. 'get' → logprob: -9.115278244018555

Token 1129: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004668761044740677
    2. '(s' → logprob: -5.879668712615967
    3. '(' → logprob: -6.504668712615967
    4. 's' → logprob: -8.504669189453125
    5. '_with' → logprob: -9.879669189453125
    6. 'with' → logprob: -10.379669189453125
    7. 'self' → logprob: -10.629669189453125
    8. '_point' → logprob: -10.754669189453125
    9. ' (' → logprob: -11.629669189453125
    10. '(
' → logprob: -12.004669189453125

Token 1130: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001577698567416519
    2. '(' → logprob: -9.750157356262207
    3. 'self' → logprob: -10.500157356262207
    4. '(s' → logprob: -10.625157356262207
    5. ')(' → logprob: -10.625157356262207
    6. ')' → logprob: -12.000157356262207
    7. 'with' → logprob: -12.125157356262207
    8. ' (' → logprob: -12.250157356262207
    9. 's' → logprob: -13.125157356262207
    10. '_with' → logprob: -14.000157356262207

Token 1131: ' s' (ID: 265)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00514706177636981
    2. 'other' → logprob: -5.3801469802856445
    3. ' self' → logprob: -8.130146980285645
    4. 's' → logprob: -8.505146980285645
    5. ' other' → logprob: -11.130146980285645
    6. '(self' → logprob: -11.380146980285645
    7. 'se' → logprob: -13.755146980285645
    8. 'seg' → logprob: -13.880146980285645
    9. '	self' → logprob: -15.130146980285645
    10. ' s' → logprob: -15.255146980285645

Token 1132: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16116724908351898
    2. '):' → logprob: -1.9111672639846802
    3. '):
' → logprob: -7.161167144775391
    4. 'self' → logprob: -9.53616714477539
    5. ')' → logprob: -10.53616714477539
    6. 'elf' → logprob: -10.91116714477539
    7. '):

' → logprob: -11.28616714477539
    8. '1' → logprob: -11.78616714477539
    9. '   ' → logprob: -11.91116714477539
    10. '       ' → logprob: -12.41116714477539

Token 1133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017028623551595956
    2. '
' → logprob: -9.375170707702637
    3. '	' → logprob: -9.875170707702637
    4. ',' → logprob: -11.250170707702637
    5. '        
' → logprob: -12.250170707702637
    6. '   ' → logprob: -12.500170707702637
    7. '(' → logprob: -12.750170707702637
    8. '	   ' → logprob: -12.875170707702637
    9. '[' → logprob: -13.125170707702637
    10. '(self' → logprob: -14.000170707702637

Token 1134: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17072364687919617
    2. 'def' → logprob: -2.4207236766815186
    3. 'd' → logprob: -2.7957236766815186
    4. 'a' → logprob: -5.9207234382629395
    5. '       ' → logprob: -6.4207234382629395
    6. 'return' → logprob: -6.9207234382629395
    7. 'cc' → logprob: -7.6707234382629395
    8. '    
' → logprob: -7.7957234382629395
    9. 'A' → logprob: -8.295723915100098
    10. 't' → logprob: -9.295723915100098

Token 1135: ' ?????' (ID: 149222)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.008498035371303558
    2. 'def' → logprob: -6.258498191833496
    3. 'o' → logprob: -6.633498191833496
    4. 'return' → logprob: -7.008498191833496
    5. 'a' → logprob: -7.133498191833496
    6. '   ' → logprob: -7.258498191833496
    7. '#' → logprob: -7.258498191833496
    8. 'cc' → logprob: -7.883498191833496
    9. 'r' → logprob: -8.008498191833496
    10. 'v' → logprob: -8.383498191833496

Token 1136: '???' (ID: 33110)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.30232688784599304
    2. '       ' → logprob: -2.4273269176483154
    3. 'a' → logprob: -2.5523269176483154
    4. 'p' → logprob: -2.6773269176483154
    5. 'def' → logprob: -5.177326679229736
    6. '   ' → logprob: -5.427326679229736
    7. 'cc' → logprob: -5.677326679229736
    8. 'return' → logprob: -6.302326679229736
    9. '#' → logprob: -6.427326679229736
    10. 'r' → logprob: -6.802326679229736

Token 1137: '¨' (ID: 64259)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.013120695948600769
    2. '   ' → logprob: -4.888120651245117
    3. ' d' → logprob: -6.388120651245117
    4. 'cc' → logprob: -6.888120651245117
    5. 'def' → logprob: -7.013120651245117
    6. 'a' → logprob: -7.138120651245117
    7. 'return' → logprob: -7.638120651245117
    8. 'dc' → logprob: -9.013120651245117
    9. 'da' → logprob: -9.138120651245117
    10. 'A' → logprob: -10.013120651245117

Token 1138: '????????' (ID: 85218)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1880282163619995
    2. 'a' → logprob: -1.9380282163619995
    3. 'def' → logprob: -4.438028335571289
    4. 'p' → logprob: -6.188028335571289
    5. '   ' → logprob: -6.188028335571289
    6. 'cc' → logprob: -6.188028335571289
    7. '#' → logprob: -6.438028335571289
    8. 'A' → logprob: -6.438028335571289
    9. 'return' → logprob: -6.438028335571289
    10. 'ab' → logprob: -7.063028335571289

Token 1139: '????????' (ID: 85218)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04401416704058647
    2. 'cc' → logprob: -3.7940142154693604
    3. 'def' → logprob: -4.669013977050781
    4. 'a' → logprob: -5.669013977050781
    5. 'dc' → logprob: -5.794013977050781
    6. '   ' → logprob: -6.794013977050781
    7. 'return' → logprob: -7.044013977050781
    8. 'c' → logprob: -7.169013977050781
    9. 'da' → logprob: -7.669013977050781
    10. 'A' → logprob: -8.419013977050781

Token 1140: '????????' (ID: 85218)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.08389612287282944
    2. '   ' → logprob: -3.0838961601257324
    3. 'def' → logprob: -4.083896160125732
    4. 'a' → logprob: -5.208896160125732
    5. 'cc' → logprob: -5.333896160125732
    6. 'dc' → logprob: -5.833896160125732
    7. 'return' → logprob: -6.958896160125732
    8. 'da' → logprob: -7.208896160125732
    9. 'A' → logprob: -7.458896160125732
    10. 'c' → logprob: -7.583896160125732

Token 1141: '????????' (ID: 85218)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.046091172844171524
    2. 'a' → logprob: -3.671091079711914
    3. '   ' → logprob: -4.296091079711914
    4. '#' → logprob: -6.796091079711914
    5. 'cc' → logprob: -6.921091079711914
    6. 'def' → logprob: -7.171091079711914
    7. 'p' → logprob: -7.421091079711914
    8. 'A' → logprob: -7.546091079711914
    9. 'v' → logprob: -8.171091079711914
    10. '       ' → logprob: -8.171091079711914

Token 1142: '????????' (ID: 85218)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.007057880517095327
    2. '   ' → logprob: -5.7570576667785645
    3. 'a' → logprob: -6.8820576667785645
    4. ' d' → logprob: -7.1320576667785645
    5. 'def' → logprob: -7.5070576667785645
    6. 'cc' → logprob: -8.007058143615723
    7. '       ' → logprob: -8.632058143615723
    8. 'p' → logprob: -8.757058143615723
    9. 'da' → logprob: -8.882058143615723
    10. 'return' → logprob: -9.132058143615723

Token 1143: '????????' (ID: 85218)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20090660452842712
    2. 'p' → logprob: -1.9509066343307495
    3. 'a' → logprob: -3.45090651512146
    4. 'if' → logprob: -6.325906753540039
    5. ' p' → logprob: -6.700906753540039
    6. 'return' → logprob: -6.825906753540039
    7. '   ' → logprob: -7.075906753540039
    8. '#' → logprob: -7.950906753540039
    9. ' a' → logprob: -7.950906753540039
    10. '(p' → logprob: -8.075906753540039

Token 1144: '????' (ID: 25883)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0874650627374649
    2. '
' → logprob: -2.7124650478363037
    3. ',' → logprob: -5.962465286254883
    4. '(' → logprob: -6.337465286254883
    5. '(p' → logprob: -6.337465286254883
    6. 'if' → logprob: -6.837465286254883
    7. 'return' → logprob: -6.837465286254883
    8. '(
' → logprob: -6.837465286254883
    9. '        
' → logprob: -7.087465286254883
    10. '
' → logprob: -7.462465286254883

Token 1145: '??
' (ID: 108055)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1321360170841217
    2. 'd' → logprob: -2.132136106491089
    3. 'a' → logprob: -5.63213586807251
    4. 't' → logprob: -7.63213586807251
    5. 'v' → logprob: -7.63213586807251
    6. ' d' → logprob: -8.507136344909668
    7. '   ' → logprob: -9.382136344909668
    8. 'p' → logprob: -9.757136344909668
    9. 'A' → logprob: -9.882136344909668
    10. 'ab' → logprob: -9.882136344909668

Token 1146: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014644917973782867
    2. 't' → logprob: -10.125146865844727
    3. 'a' → logprob: -10.375146865844727
    4. 'p' → logprob: -10.625146865844727
    5. '        
' → logprob: -11.000146865844727
    6. '
' → logprob: -11.750146865844727
    7. 'd' → logprob: -12.000146865844727
    8. '   ' → logprob: -12.375146865844727
    9. ' p' → logprob: -13.250146865844727
    10. 'v' → logprob: -13.375146865844727

Token 1147: ' ans' (ID: 3345)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.056823790073394775
    2. 'def' → logprob: -3.30682373046875
    3. '   ' → logprob: -4.93182373046875
    4. 'a' → logprob: -5.18182373046875
    5. 'return' → logprob: -6.18182373046875
    6. 'A' → logprob: -6.55682373046875
    7. 'cc' → logprob: -7.30682373046875
    8. 'v' → logprob: -8.18182373046875
    9. 'if' → logprob: -8.55682373046875
    10. '    
' → logprob: -8.55682373046875

Token 1148: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030937273055315018
    2. '=' → logprob: -3.5309371948242188
    3. '       ' → logprob: -7.155937194824219
    4. ' ' → logprob: -8.905937194824219
    5. '   ' → logprob: -8.905937194824219
    6. '1' → logprob: -10.780937194824219
    7. '=True' → logprob: -10.780937194824219
    8. '=False' → logprob: -10.780937194824219
    9. '=self' → logprob: -11.155937194824219
    10. 'def' → logprob: -11.405937194824219

Token 1149: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38715606927871704
    2. '=' → logprob: -1.1371560096740723
    3. '       ' → logprob: -9.26215648651123
    4. '=self' → logprob: -9.51215648651123
    5. '   ' → logprob: -10.38715648651123
    6. ',' → logprob: -10.88715648651123
    7. ' ' → logprob: -11.26215648651123
    8. 'self' → logprob: -11.51215648651123
    9. '=int' → logprob: -12.38715648651123
    10. '	' → logprob: -12.38715648651123

Token 1150: ' s' (ID: 265)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3852545917034149
    2. '(self' → logprob: -1.5102546215057373
    3. 'Vector' → logprob: -2.8852546215057373
    4. ' self' → logprob: -4.510254383087158
    5. ' (' → logprob: -4.760254383087158
    6. '(' → logprob: -5.260254383087158
    7. '(Point' → logprob: -5.260254383087158
    8. 'Point' → logprob: -5.385254383087158
    9. '(Vector' → logprob: -5.760254383087158
    10. '(s' → logprob: -6.635254383087158

Token 1151: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.03579412400722504
    2. '.cc' → logprob: -3.5357940196990967
    3. 'p' → logprob: -6.160794258117676
    4. '.' → logprob: -6.785794258117676
    5. 'self' → logprob: -7.285794258117676
    6. 'cc' → logprob: -8.035794258117676
    7. '.inter' → logprob: -8.035794258117676
    8. '=' → logprob: -8.160794258117676
    9. '.s' → logprob: -8.535794258117676
    10. ').' → logprob: -9.160794258117676

Token 1152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002857416868209839
    2. '2' → logprob: -5.877857208251953
    3. 'oint' → logprob: -10.502857208251953
    4. 'oints' → logprob: -10.877857208251953
    5. 'p' → logprob: -13.127857208251953
    6. 'oin' → logprob: -14.752857208251953
    7. 'r' → logprob: -14.940357208251953
    8. 'inter' → logprob: -14.940357208251953
    9. 'ointer' → logprob: -15.315357208251953
    10. 't' → logprob: -15.440357208251953

Token 1153: '.cc' (ID: 36329)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0355085134506226
    2. '-' → logprob: -2.035508632659912
    3. ' -' → logprob: -2.285508632659912
    4. '-self' → logprob: -2.410508632659912
    5. 'cc' → logprob: -2.535508632659912
    6. ')' → logprob: -3.285508632659912
    7. '-point' → logprob: -3.285508632659912
    8. '.cc' → logprob: -3.535508632659912
    9. '.' → logprob: -3.785508632659912
    10. 'p' → logprob: -3.910508632659912

Token 1154: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -4.320199877838604e-07
    2. '(self' → logprob: -14.75
    3. 'p' → logprob: -18.0
    4. 'd' → logprob: -18.125
    5. 'cw' → logprob: -18.125
    6. 'ｗ' → logprob: -19.125
    7. '
' → logprob: -19.5
    8. '(w' → logprob: -19.5
    9. 'W' → logprob: -19.625
    10. 'self' → logprob: -19.625

Token 1155: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.747814349073451e-05
    2. 'self' → logprob: -11.250017166137695
    3. '(s' → logprob: -12.625017166137695
    4. '(' → logprob: -14.250017166137695
    5. '(
' → logprob: -15.375017166137695
    6. ' (' → logprob: -15.750017166137695
    7. ' self' → logprob: -16.875017166137695
    8. '   ' → logprob: -18.625017166137695
    9. '(this' → logprob: -18.750017166137695
    10. '((' → logprob: -18.875017166137695

Token 1156: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.023862943053245544
    2. '.s' → logprob: -3.898862838745117
    3. 'p' → logprob: -6.023862838745117
    4. 'self' → logprob: -8.148862838745117
    5. 's' → logprob: -8.898862838745117
    6. '(self' → logprob: -8.898862838745117
    7. '.' → logprob: -9.273862838745117
    8. ')' → logprob: -9.398862838745117
    9. ',' → logprob: -9.523862838745117
    10. '(p' → logprob: -10.148862838745117

Token 1157: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.225939872208983e-05
    2. '2' → logprob: -11.000032424926758
    3. 'p' → logprob: -11.125032424926758
    4. ' ' → logprob: -15.500032424926758
    5. '   ' → logprob: -16.562532424926758
    6. ' p' → logprob: -16.875032424926758
    7. 't' → logprob: -17.062532424926758
    8. '１' → logprob: -17.187532424926758
    9. 'self' → logprob: -17.312532424926758
    10. 's' → logprob: -17.500032424926758

Token 1158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043376852408982813
    2. ',s' → logprob: -8.375433921813965
    3. ',self' → logprob: -9.250433921813965
    4. 's' → logprob: -10.250433921813965
    5. ' ,' → logprob: -10.375433921813965
    6. ',
' → logprob: -10.625433921813965
    7. 'self' → logprob: -11.500433921813965
    8. ' s' → logprob: -13.250433921813965
    9. ',p' → logprob: -13.875433921813965
    10. ',
' → logprob: -14.125433921813965

Token 1159: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04897020012140274
    2. 's' → logprob: -3.0489702224731445
    3. ' self' → logprob: -7.9239702224731445
    4. ' s' → logprob: -11.173970222473145
    5. '   ' → logprob: -12.673970222473145
    6. '       ' → logprob: -13.798970222473145
    7. ' ' → logprob: -14.548970222473145
    8. '	self' → logprob: -15.173970222473145
    9. '           ' → logprob: -15.298970222473145
    10. '(self' → logprob: -15.298970222473145

Token 1160: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.5233796238899231
    2. 'p' → logprob: -1.0233795642852783
    3. 's' → logprob: -3.7733795642852783
    4. '.s' → logprob: -3.7733795642852783
    5. '2' → logprob: -6.273379802703857
    6. '.' → logprob: -8.2733793258667
    7. '1' → logprob: -12.0233793258667
    8. 'self' → logprob: -12.1483793258667
    9. '
' → logprob: -13.2733793258667
    10. ' p' → logprob: -13.7733793258667

Token 1161: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0921942703134846e-05
    2. 'p' → logprob: -12.81251049041748
    3. '1' → logprob: -13.25001049041748
    4. 't' → logprob: -14.06251049041748
    5. '۲' → logprob: -14.12501049041748
    6. '
' → logprob: -14.50001049041748
    7. 'oint' → logprob: -14.62501049041748
    8. 's' → logprob: -14.68751049041748
    9. '２' → logprob: -14.81251049041748
    10. '```' → logprob: -14.93751049041748

Token 1162: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22594931721687317
    2. ')
' → logprob: -1.6009492874145508
    3. ')
' → logprob: -7.975949287414551
    4. '       ' → logprob: -9.47594928741455
    5. ')<' → logprob: -10.60094928741455
    6. ',' → logprob: -11.10094928741455
    7. ')>' → logprob: -11.35094928741455
    8. ' )' → logprob: -11.72594928741455
    9. ')*' → logprob: -11.72594928741455
    10. '   ' → logprob: -12.10094928741455

Token 1163: ' *' (ID: 425)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6109368205070496
    2. '*' → logprob: -1.2359368801116943
    3. '
' → logprob: -2.7359368801116943
    4. ' *' → logprob: -3.3609368801116943
    5. 'ans' → logprob: -3.7359368801116943
    6. 'and' → logprob: -3.8609368801116943
    7. '!=' → logprob: -4.985936641693115
    8. '==' → logprob: -5.985936641693115
    9. '   ' → logprob: -6.360936641693115
    10. ' ans' → logprob: -6.485936641693115

Token 1164: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1718345433473587
    2. 'self' → logprob: -1.9218345880508423
    3. ' s' → logprob: -4.921834468841553
    4. ' self' → logprob: -6.296834468841553
    5. '       ' → logprob: -6.421834468841553
    6. '(self' → logprob: -8.671834945678711
    7. '   ' → logprob: -8.921834945678711
    8. '           ' → logprob: -8.921834945678711
    9. '(s' → logprob: -8.921834945678711
    10. '      ' → logprob: -10.171834945678711

Token 1165: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.00010545044642640278
    2. 'p' → logprob: -9.750105857849121
    3. '.' → logprob: -10.750105857849121
    4. '   ' → logprob: -12.125105857849121
    5. ' .' → logprob: -12.500105857849121
    6. '..' → logprob: -12.750105857849121
    7. 'self' → logprob: -13.000105857849121
    8. '.s' → logprob: -13.250105857849121
    9. '       ' → logprob: -13.500105857849121
    10. '```' → logprob: -13.875105857849121

Token 1166: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.16793791949748993
    2. '1' → logprob: -1.9179378747940063
    3. 'p' → logprob: -4.917937755584717
    4. 'cc' → logprob: -8.667938232421875
    5. 'c' → logprob: -9.792938232421875
    6. '```' → logprob: -11.105438232421875
    7. '.p' → logprob: -11.167938232421875
    8. '
' → logprob: -11.417938232421875
    9. '   ' → logprob: -12.042938232421875
    10. 'oint' → logprob: -12.417938232421875

Token 1167: '.cc' (ID: 36329)
  Prédit: '.cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cc' → logprob: -5.9153885558771435e-06
    2. 'cc' → logprob: -12.125005722045898
    3. '.c' → logprob: -15.625005722045898
    4. '	cc' → logprob: -15.750005722045898
    5. '_cc' → logprob: -17.1250057220459
    6. '(cc' → logprob: -17.2500057220459
    7. '.' → logprob: -17.6250057220459
    8. ' .' → logprob: -18.5000057220459
    9. ' cc' → logprob: -18.6250057220459
    10. '.cx' → logprob: -18.6250057220459

Token 1168: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -8.7689099018462e-05
    2. 'cw' → logprob: -9.75008773803711
    3. 'p' → logprob: -11.50008773803711
    4. 'ww' → logprob: -13.00008773803711
    5. '
' → logprob: -13.06258773803711
    6. '   ' → logprob: -13.31258773803711
    7. '```' → logprob: -13.43758773803711
    8. 'v' → logprob: -14.06258773803711
    9. '       ' → logprob: -14.06258773803711
    10. 'sw' → logprob: -14.43758773803711

Token 1169: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0012692819582298398
    2. '(' → logprob: -6.751269340515137
    3. 'self' → logprob: -9.251269340515137
    4. '(s' → logprob: -13.501269340515137
    5. '(
' → logprob: -14.376269340515137
    6. ' self' → logprob: -14.751269340515137
    7. '(this' → logprob: -16.12626838684082
    8. '[self' → logprob: -16.25126838684082
    9. ' (' → logprob: -16.50126838684082
    10. '(None' → logprob: -16.75126838684082

Token 1170: '.p' (ID: 1201)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10697116702795029
    2. 'p' → logprob: -2.731971263885498
    3. '1' → logprob: -3.356971263885498
    4. 's' → logprob: -6.856971263885498
    5. ' self' → logprob: -8.48197078704834
    6. '(self' → logprob: -9.23197078704834
    7. '.' → logprob: -9.85697078704834
    8. '.p' → logprob: -10.23197078704834
    9. '   ' → logprob: -10.48197078704834
    10. '       ' → logprob: -11.48197078704834

Token 1171: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11292942613363266
    2. 'p' → logprob: -2.237929344177246
    3. '.p' → logprob: -9.612929344177246
    4. ' p' → logprob: -11.487929344177246
    5. '   ' → logprob: -11.987929344177246
    6. '2' → logprob: -12.737929344177246
    7. 's' → logprob: -12.737929344177246
    8. 'self' → logprob: -12.737929344177246
    9. ' ' → logprob: -13.487929344177246
    10. '<p' → logprob: -13.675429344177246

Token 1172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020045305136591196
    2. ',self' → logprob: -6.252004623413086
    3. ',
' → logprob: -10.752004623413086
    4. 'self' → logprob: -10.752004623413086
    5. ' ,' → logprob: -10.752004623413086
    6. ',s' → logprob: -12.252004623413086
    7. ',p' → logprob: -12.252004623413086
    8. ' self' → logprob: -14.377004623413086
    9. '(self' → logprob: -15.377004623413086
    10. ',
' → logprob: -15.627004623413086

Token 1173: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000808082812000066
    2. ' self' → logprob: -7.125808238983154
    3. 's' → logprob: -13.500807762145996
    4. '       ' → logprob: -14.250807762145996
    5. '(self' → logprob: -14.375807762145996
    6. '	self' → logprob: -14.750807762145996
    7. '   ' → logprob: -15.500807762145996
    8. '[self' → logprob: -15.875807762145996
    9. '<|end|>' → logprob: -16.125808715820312
    10. ' ' → logprob: -17.125808715820312

Token 1174: '.p' (ID: 1201)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -6.802049756515771e-05
    2. 's' → logprob: -10.750067710876465
    3. ' p' → logprob: -10.750067710876465
    4. 'self' → logprob: -11.375067710876465
    5. '.p' → logprob: -11.875067710876465
    6. '   ' → logprob: -12.500067710876465
    7. '_p' → logprob: -13.625067710876465
    8. '       ' → logprob: -14.250067710876465
    9. '...' → logprob: -15.625067710876465
    10. ')' → logprob: -15.875067710876465

Token 1175: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.26764726638793945
    2. 'p' → logprob: -1.7676472663879395
    3. 's' → logprob: -2.7676472663879395
    4. '   ' → logprob: -8.267646789550781
    5. ' p' → logprob: -8.392646789550781
    6. '.p' → logprob: -8.392646789550781
    7. 'self' → logprob: -9.267646789550781
    8. '1' → logprob: -9.642646789550781
    9. '.' → logprob: -10.392646789550781
    10. 'es' → logprob: -10.392646789550781

Token 1176: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005814198404550552
    2. ')<' → logprob: -6.005814075469971
    3. ')<=' → logprob: -6.255814075469971
    4. ')
' → logprob: -7.380814075469971
    5. '       ' → logprob: -8.380814552307129
    6. ' <=' → logprob: -8.380814552307129
    7. '   ' → logprob: -9.130814552307129
    8. '<=' → logprob: -10.005814552307129
    9. ' )' → logprob: -10.255814552307129
    10. ' <' → logprob: -11.005814552307129

Token 1177: '       ' (ID: 309)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.06704103201627731
    2. '<=' → logprob: -2.8170409202575684
    3. ' <' → logprob: -5.942040920257568
    4. '       ' → logprob: -6.692040920257568
    5. '<' → logprob: -7.442040920257568
    6. ')<=' → logprob: -8.442041397094727
    7. '<|end|>' → logprob: -9.317041397094727
    8. '   ' → logprob: -9.317041397094727
    9. '	' → logprob: -9.817041397094727
    10. ' ≤' → logprob: -9.942041397094727

Token 1178: ' ans' (ID: 3345)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.17695897817611694
    2. '<=' → logprob: -2.0519590377807617
    3. ' if' → logprob: -4.801959037780762
    4. 'if' → logprob: -5.051959037780762
    5. ' <' → logprob: -5.051959037780762
    6. '       ' → logprob: -5.551959037780762
    7. '   ' → logprob: -6.176959037780762
    8. ' ' → logprob: -6.551959037780762
    9. '<' → logprob: -6.676959037780762
    10. ' ans' → logprob: -7.051959037780762

Token 1179: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.21679720282554626
    2. '1' → logprob: -2.591797113418579
    3. '=' → logprob: -2.591797113418579
    4. ' =' → logprob: -3.341797113418579
    5. '   ' → logprob: -5.216797351837158
    6. '       ' → logprob: -5.841797351837158
    7. ' ' → logprob: -7.966797351837158
    8. '  ' → logprob: -8.466796875
    9. '	' → logprob: -8.966796875
    10. '    ' → logprob: -9.091796875

Token 1180: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141372084617615
    2. '=' → logprob: -1.7014137506484985
    3. '   ' → logprob: -15.576414108276367
    4. '       ' → logprob: -16.701414108276367
    5. '=s' → logprob: -16.701414108276367
    6. ' ' → logprob: -17.076414108276367
    7. ' s' → logprob: -17.576414108276367
    8. '＝' → logprob: -17.826414108276367
    9. '    ' → logprob: -18.201414108276367
    10. '=
' → logprob: -18.201414108276367

Token 1181: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0490376316010952
    2. ' self' → logprob: -3.0490376949310303
    3. '       ' → logprob: -8.29903793334961
    4. '   ' → logprob: -9.04903793334961
    5. '(self' → logprob: -10.04903793334961
    6. '	self' → logprob: -11.17403793334961
    7. '           ' → logprob: -11.54903793334961
    8. ' ' → logprob: -11.79903793334961
    9. '     ' → logprob: -13.42403793334961
    10. '    ' → logprob: -13.54903793334961

Token 1182: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -8.537868779967539e-06
    2. 'p' → logprob: -11.750008583068848
    3. '   ' → logprob: -15.375008583068848
    4. ' .' → logprob: -15.500008583068848
    5. '.' → logprob: -16.50000762939453
    6. 'def' → logprob: -16.75000762939453
    7. '
' → logprob: -17.00000762939453
    8. ' p' → logprob: -17.75000762939453
    9. '<p' → logprob: -18.12500762939453
    10. ' ' → logprob: -18.25000762939453

Token 1183: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '2' → logprob: -15.125000953674316
    3. '１' → logprob: -16.5
    4. 'p' → logprob: -16.875
    5. 's' → logprob: -17.125
    6. '```' → logprob: -17.125
    7. '
' → logprob: -17.8125
    8. '۱' → logprob: -18.5625
    9. '``' → logprob: -19.125
    10. '' → logprob: -19.3125

Token 1184: '.cc' (ID: 36329)
  Prédit: '.cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cc' → logprob: -1.1160349458805285e-05
    2. 'cc' → logprob: -11.500011444091797
    3. '(cc' → logprob: -15.000011444091797
    4. '.c' → logprob: -15.500011444091797
    5. ' .' → logprob: -15.875011444091797
    6. '.' → logprob: -16.000011444091797
    7. '.s' → logprob: -16.250011444091797
    8. '	cc' → logprob: -17.000011444091797
    9. ' cc' → logprob: -17.875011444091797
    10. '.cs' → logprob: -18.750011444091797

Token 1185: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.14411649107933044
    2. 'cw' → logprob: -2.0191164016723633
    3. '2' → logprob: -6.644116401672363
    4. '1' → logprob: -9.894116401672363
    5. 'p' → logprob: -10.144116401672363
    6. 'ww' → logprob: -11.769116401672363
    7. ' cw' → logprob: -11.894116401672363
    8. 'wc' → logprob: -12.019116401672363
    9. '   ' → logprob: -12.144116401672363
    10. 'cc' → logprob: -12.269116401672363

Token 1186: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -4.4849443838757e-06
    2. 's' → logprob: -13.000004768371582
    3. '(' → logprob: -13.250004768371582
    4. '(
' → logprob: -15.375004768371582
    5. ' s' → logprob: -16.375003814697266
    6. ' (' → logprob: -16.750003814697266
    7. '(self' → logprob: -18.250003814697266
    8. ',' → logprob: -19.625003814697266
    9. '   ' → logprob: -20.250003814697266
    10. '((' → logprob: -21.750003814697266

Token 1187: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.10846817493438721
    2. '.' → logprob: -2.4834680557250977
    3. 'p' → logprob: -3.9834680557250977
    4. '1' → logprob: -7.483468055725098
    5. '.s' → logprob: -10.108468055725098
    6. 's' → logprob: -10.608468055725098
    7. '<p' → logprob: -10.858468055725098
    8. ').' → logprob: -11.233468055725098
    9. ' .' → logprob: -11.358468055725098
    10. '[' → logprob: -11.608468055725098

Token 1188: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8206473871250637e-05
    2. 'p' → logprob: -10.625028610229492
    3. '.p' → logprob: -13.125028610229492
    4. '.' → logprob: -14.875028610229492
    5. ' ' → logprob: -15.000028610229492
    6. '2' → logprob: -15.375028610229492
    7. 's' → logprob: -15.375028610229492
    8. '   ' → logprob: -15.750028610229492
    9. 'oints' → logprob: -16.375028610229492
    10. ' p' → logprob: -16.437528610229492

Token 1189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008372656302526593
    2. ',s' → logprob: -7.125837326049805
    3. ' ,' → logprob: -10.375837326049805
    4. ' s' → logprob: -13.750837326049805
    5. 's' → logprob: -15.500837326049805
    6. ',
' → logprob: -16.000837326049805
    7. '   ' → logprob: -17.250837326049805
    8. '       ' → logprob: -17.625837326049805
    9. ',self' → logprob: -17.625837326049805
    10. ',p' → logprob: -17.625837326049805

Token 1190: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00024299313372466713
    2. ' s' → logprob: -8.375243186950684
    3. '       ' → logprob: -12.125243186950684
    4. '   ' → logprob: -12.625243186950684
    5. '           ' → logprob: -13.000243186950684
    6. '  ' → logprob: -15.250243186950684
    7. '     ' → logprob: -15.500243186950684
    8. 'self' → logprob: -15.750243186950684
    9. ' ' → logprob: -15.875243186950684
    10. '               ' → logprob: -15.875243186950684

Token 1191: '.p' (ID: 1201)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0006920627201907337
    2. '.p' → logprob: -7.375691890716553
    3. '2' → logprob: -9.875692367553711
    4. 's' → logprob: -11.625692367553711
    5. ' p' → logprob: -12.500692367553711
    6. '   ' → logprob: -14.875692367553711
    7. '.' → logprob: -15.000692367553711
    8. '```' → logprob: -15.375692367553711
    9. '<p' → logprob: -15.875692367553711
    10. 'self' → logprob: -16.50069236755371

Token 1192: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10023945569992065
    2. 'p' → logprob: -2.3502395153045654
    3. 's' → logprob: -10.850239753723145
    4. ' p' → logprob: -12.225239753723145
    5. '.p' → logprob: -13.350239753723145
    6. '1' → logprob: -13.850239753723145
    7. '<p' → logprob: -13.850239753723145
    8. '   ' → logprob: -13.975239753723145
    9. ' ' → logprob: -14.225239753723145
    10. '```' → logprob: -14.350239753723145

Token 1193: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013738969573751092
    2. ')*' → logprob: -9.250137329101562
    3. ',' → logprob: -10.625137329101562
    4. '   ' → logprob: -11.875137329101562
    5. ')
' → logprob: -12.375137329101562
    6. ' )' → logprob: -13.000137329101562
    7. '       ' → logprob: -13.875137329101562
    8. '()' → logprob: -14.625137329101562
    9. ' ' → logprob: -14.750137329101562
    10. '())' → logprob: -15.125137329101562

Token 1194: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.47427332401275635
    2. '*' → logprob: -0.9742733240127563
    3. '*self' → logprob: -9.349273681640625
    4. '       ' → logprob: -9.474273681640625
    5. '   ' → logprob: -10.849273681640625
    6. ' ' → logprob: -12.849273681640625
    7. '           ' → logprob: -13.224273681640625
    8. '()*' → logprob: -13.349273681640625
    9. '```' → logprob: -13.599273681640625
    10. '        ' → logprob: -13.974273681640625

Token 1195: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001172129064798355
    2. ' self' → logprob: -7.001172065734863
    3. '       ' → logprob: -8.376172065734863
    4. '(self' → logprob: -11.376172065734863
    5. '           ' → logprob: -11.751172065734863
    6. '   ' → logprob: -12.001172065734863
    7. 's' → logprob: -13.126172065734863
    8. '               ' → logprob: -14.251172065734863
    9. '	self' → logprob: -14.626172065734863
    10. '        ' → logprob: -15.126172065734863

Token 1196: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -8.2994620242971e-06
    2. 'p' → logprob: -11.750008583068848
    3. '   ' → logprob: -15.625008583068848
    4. '.' → logprob: -16.37500762939453
    5. ' .' → logprob: -17.75000762939453
    6. '2' → logprob: -18.37500762939453
    7. '.s' → logprob: -19.25000762939453
    8. '
' → logprob: -19.37500762939453
    9. '       ' → logprob: -19.50000762939453
    10. ' ' → logprob: -19.87500762939453

Token 1197: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.021038344129920006
    2. 'p' → logprob: -4.39603853225708
    3. '2' → logprob: -4.77103853225708
    4. '.p' → logprob: -11.771038055419922
    5. '
' → logprob: -12.271038055419922
    6. ' p' → logprob: -13.646038055419922
    7. '<p' → logprob: -13.771038055419922
    8. '   ' → logprob: -13.896038055419922
    9. '```' → logprob: -14.083538055419922
    10. '_p' → logprob: -14.646038055419922

Token 1198: '.cc' (ID: 36329)
  Prédit: '.cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cc' → logprob: -0.013276464305818081
    2. '(s' → logprob: -4.51327657699585
    3. 'cc' → logprob: -6.26327657699585
    4. '.s' → logprob: -8.388276100158691
    5. '(cc' → logprob: -10.013276100158691
    6. '_cc' → logprob: -10.888276100158691
    7. ' cc' → logprob: -11.513276100158691
    8. '	cc' → logprob: -12.013276100158691
    9. '```' → logprob: -13.013276100158691
    10. '@s' → logprob: -13.138276100158691

Token 1199: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -6.253713218029588e-05
    2. '1' → logprob: -10.625062942504883
    3. 'cw' → logprob: -11.125062942504883
    4. '
' → logprob: -12.125062942504883
    5. 'ｗ' → logprob: -12.375062942504883
    6. 'ww' → logprob: -12.875062942504883
    7. '       ' → logprob: -13.375062942504883
    8. '   ' → logprob: -13.500062942504883
    9. '(w' → logprob: -13.875062942504883
    10. 'p' → logprob: -14.000062942504883

Token 1200: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -3.531315314830863e-06
    2. 's' → logprob: -12.875003814697266
    3. '(' → logprob: -14.250003814697266
    4. '(
' → logprob: -16.125003814697266
    5. ' (' → logprob: -16.375003814697266
    6. '(self' → logprob: -18.000003814697266
    7. ' s' → logprob: -18.625003814697266
    8. '   ' → logprob: -19.500003814697266
    9. '       ' → logprob: -20.125003814697266
    10. 'def' → logprob: -20.375003814697266

Token 1201: '.p' (ID: 1201)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5828281044960022
    2. 's' → logprob: -0.8328281044960022
    3. '(s' → logprob: -5.707828044891357
    4. '.s' → logprob: -5.832828044891357
    5. ' s' → logprob: -8.082828521728516
    6. '.p' → logprob: -8.582828521728516
    7. '(' → logprob: -9.707828521728516
    8. '(p' → logprob: -10.082828521728516
    9. '1' → logprob: -11.832828521728516
    10. ' p' → logprob: -13.332828521728516

Token 1202: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14324107766151428
    2. 'p' → logprob: -2.0182411670684814
    3. 's' → logprob: -7.518240928649902
    4. ' p' → logprob: -12.018240928649902
    5. '.p' → logprob: -12.268240928649902
    6. '   ' → logprob: -13.018240928649902
    7. '<p' → logprob: -13.268240928649902
    8. '_p' → logprob: -13.518240928649902
    9. '```' → logprob: -13.893240928649902
    10. ' ' → logprob: -14.268240928649902

Token 1203: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007517654448747635
    2. 's' → logprob: -5.1325178146362305
    3. ',s' → logprob: -6.5075178146362305
    4. ' s' → logprob: -9.38251781463623
    5. ' ,' → logprob: -11.75751781463623
    6. '       ' → logprob: -13.00751781463623
    7. ',p' → logprob: -14.38251781463623
    8. '   ' → logprob: -15.38251781463623
    9. '_,' → logprob: -16.007516860961914
    10. ',
' → logprob: -16.132516860961914

Token 1204: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.334533878136426e-05
    2. ' s' → logprob: -10.125042915344238
    3. 'self' → logprob: -13.000042915344238
    4. '   ' → logprob: -14.375042915344238
    5. '       ' → logprob: -15.375042915344238
    6. '           ' → logprob: -16.875043869018555
    7. ' ' → logprob: -17.000043869018555
    8. 'p' → logprob: -17.500043869018555
    9. '  ' → logprob: -17.625043869018555
    10. '    ' → logprob: -17.750043869018555

Token 1205: '.p' (ID: 1201)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0002004410926019773
    2. '1' → logprob: -9.000200271606445
    3. 's' → logprob: -9.750200271606445
    4. '   ' → logprob: -12.125200271606445
    5. ' p' → logprob: -12.250200271606445
    6. '.p' → logprob: -12.875200271606445
    7. '0' → logprob: -13.625200271606445
    8. '<p' → logprob: -14.000200271606445
    9. '```' → logprob: -14.250200271606445
    10. '2' → logprob: -14.750200271606445

Token 1206: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00015288250870071352
    2. 'p' → logprob: -9.375152587890625
    3. '1' → logprob: -9.625152587890625
    4. '.p' → logprob: -14.875152587890625
    5. '<p' → logprob: -15.000152587890625
    6. '```' → logprob: -15.000152587890625
    7. ' ' → logprob: -15.812652587890625
    8. ' p' → logprob: -15.937652587890625
    9. '_p' → logprob: -16.250152587890625
    10. '   ' → logprob: -16.500152587890625

Token 1207: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01063839253038168
    2. ')
' → logprob: -5.010638236999512
    3. ')<' → logprob: -5.885638236999512
    4. '       ' → logprob: -7.260638236999512
    5. ')<=' → logprob: -8.135638236999512
    6. '<|end|>' → logprob: -9.760638236999512
    7. ' )' → logprob: -10.885638236999512
    8. ')return' → logprob: -11.510638236999512
    9. '   ' → logprob: -11.635638236999512
    10. '<=' → logprob: -12.385638236999512

Token 1208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005293169524520636
    2. '   ' → logprob: -5.630293369293213
    3. '
' → logprob: -7.255293369293213
    4. '<|end|>' → logprob: -7.755293369293213
    5. ':
' → logprob: -9.005292892456055
    6. ' return' → logprob: -9.380292892456055
    7. ' if' → logprob: -9.505292892456055
    8. '```' → logprob: -10.005292892456055
    9. ':' → logprob: -10.255292892456055
    10. '        
' → logprob: -10.755292892456055

Token 1209: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008689859881997108
    2. 'return' (adapté à ' return') → logprob: -4.758689880371094
    3. 'if' → logprob: -9.883689880371094
    4. '   ' → logprob: -11.258689880371094
    5. ' return' → logprob: -11.508689880371094
    6. '	return' → logprob: -14.258689880371094
    7. '	' → logprob: -15.258689880371094
    8. '      ' → logprob: -16.133689880371094
    9. '
' → logprob: -16.258689880371094
    10. ' if' → logprob: -16.633689880371094

Token 1210: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.016243156045675278
    2. ' ans' → logprob: -4.516242980957031
    3. '(ans' → logprob: -5.266242980957031
    4. '   ' → logprob: -11.766242980957031
    5. '	ans' → logprob: -12.391242980957031
    6. '(' → logprob: -12.516242980957031
    7. ' (' → logprob: -13.516242980957031
    8. 'True' → logprob: -14.016242980957031
    9. ' ' → logprob: -14.141242980957031
    10. '  ' → logprob: -15.391242980957031

Token 1211: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. '<=' → logprob: -13.62500286102295
    3. '   ' → logprob: -15.25000286102295
    4. '_' → logprob: -15.62500286102295
    5. ')' → logprob: -15.87500286102295
    6. ' <=' → logprob: -15.87500286102295
    7. '```' → logprob: -16.000001907348633
    8. '()' → logprob: -16.250001907348633
    9. '<' → logprob: -16.500001907348633
    10. ' ' → logprob: -16.500001907348633

Token 1212: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.014185246080160141
    2. ' <=' → logprob: -4.264185428619385
    3. ')<=' → logprob: -11.639184951782227
    4. '<' → logprob: -12.514184951782227
    5. '≤' → logprob: -12.639184951782227
    6. ']<=' → logprob: -13.139184951782227
    7. ')' → logprob: -13.764184951782227
    8. '[' → logprob: -14.139184951782227
    9. 'le' → logprob: -14.514184951782227
    10. ' ' → logprob: -15.139184951782227

Token 1213: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '   ' → logprob: -20.00020408630371
    4. '  ' → logprob: -20.12520408630371
    5. '
' → logprob: -20.37520408630371
    6. '[' → logprob: -22.62520408630371
    7. '  
' → logprob: -23.12520408630371
    8. '```' → logprob: -23.25020408630371
    9. ')' → logprob: -23.62520408630371
    10. ' ' → logprob: -23.75020408630371

Token 1214: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. 'Point' → logprob: -18.625003814697266
    4. '۰' → logprob: -21.125003814697266
    5. '1' → logprob: -21.250003814697266
    6. ' Point' → logprob: -21.500003814697266
    7. '   ' → logprob: -21.500003814697266
    8. '00' → logprob: -21.625003814697266
    9. '  ' → logprob: -22.250003814697266
    10. '<|end|>' → logprob: -22.250003814697266

Token 1215: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4834934175014496
    2. 'and' → logprob: -1.483493447303772
    3. '<|end|>' → logprob: -1.858493447303772
    4. '<|end|>' → logprob: -7.483493328094482
    5. '	and' → logprob: -10.73349380493164
    6. ' or' → logprob: -10.98349380493164
    7. ' ' → logprob: -11.73349380493164
    8. '
' → logprob: -12.23349380493164
    9. '   ' → logprob: -13.10849380493164
    10. '  ' → logprob: -13.85849380493164

Token 1216: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.10020893067121506
    2. ' ans' → logprob: -2.3502089977264404
    3. '	ans' → logprob: -13.35020923614502
    4. '(ans' → logprob: -14.35020923614502
    5. '   ' → logprob: -16.850208282470703
    6. '       ' → logprob: -17.350208282470703
    7. ' ' → logprob: -18.225208282470703
    8. '_ans' → logprob: -18.225208282470703
    9. '           ' → logprob: -18.725208282470703
    10. 'answer' → logprob: -19.225208282470703

Token 1217: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. 'ans' → logprob: -17.125
    3. '   ' → logprob: -17.625
    4. 's' → logprob: -18.625
    5. ' ' → logprob: -18.75
    6. '1' → logprob: -19.5
    7. '
' → logprob: -19.875
    8. '  ' → logprob: -20.125
    9. ' ans' → logprob: -20.875
    10. '```' → logprob: -20.875

Token 1218: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.08898625522851944
    2. ' <=' → logprob: -2.4639861583709717
    3. ')<=' → logprob: -10.46398639678955
    4. ']<=' → logprob: -12.08898639678955
    5. '<|end|>' → logprob: -12.46398639678955
    6. '≤' → logprob: -12.96398639678955
    7. ' ' → logprob: -13.58898639678955
    8. '0' → logprob: -13.83898639678955
    9. '```' → logprob: -13.96398639678955
    10. '   ' → logprob: -14.21398639678955

Token 1219: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.517272024415433e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -15.500075340270996
    4. '  ' → logprob: -18.12507438659668
    5. '۰' → logprob: -18.25007438659668
    6. '00' → logprob: -18.37507438659668
    7. '
' → logprob: -18.43757438659668
    8. '<|end|>' → logprob: -19.37507438659668
    9. '０' → logprob: -19.56257438659668
    10. '```' → logprob: -19.56257438659668

Token 1220: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -17.2500057220459
    4. 'import' → logprob: -17.5000057220459
    5. '۰' → logprob: -18.3750057220459
    6. '00' → logprob: -18.5000057220459
    7. 'Point' → logprob: -19.0000057220459
    8. '```' → logprob: -19.1250057220459
    9. '<|end|>' → logprob: -19.1250057220459
    10. '０' → logprob: -19.3750057220459

Token 1221: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1222: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08153514564037323
    2. '   ' → logprob: -2.5815351009368896
    3. '<|end|>' → logprob: -6.831535339355469
    4. 'class' → logprob: -7.581535339355469
    5. '#' → logprob: -8.081535339355469
    6. '
' → logprob: -8.331535339355469
    7. '<|end|>' → logprob: -9.206535339355469
    8. ')' → logprob: -9.206535339355469
    9. 'if' → logprob: -9.456535339355469
    10. '	def' → logprob: -9.706535339355469

Token 1223: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0006234417669475079
    2. '   ' → logprob: -7.5006232261657715
    3. '#' → logprob: -10.37562370300293
    4. ' def' → logprob: -11.50062370300293
    5. ')' → logprob: -11.62562370300293
    6. 'if' → logprob: -12.12562370300293
    7. 'class' → logprob: -12.25062370300293
    8. '
' → logprob: -13.25062370300293
    9. '    ' → logprob: -13.37562370300293
    10. 'from' → logprob: -13.75062370300293

Token 1224: ' cross' (ID: 8088)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -1.1997179985046387
    2. '__' → logprob: -1.1997179985046387
    3. 'cross' → logprob: -2.0747179985046387
    4. 'distance' → logprob: -2.8247179985046387
    5. 'is' → logprob: -3.3247179985046387
    6. 'str' → logprob: -3.3247179985046387
    7. 'contains' → logprob: -3.6997179985046387
    8. 'length' → logprob: -4.074717998504639
    9. 'point' → logprob: -4.574717998504639
    10. 'projection' → logprob: -4.574717998504639

Token 1225: '_point' (ID: 15466)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.22950385510921478
    2. 'point' → logprob: -1.979503870010376
    3. '_point' → logprob: -2.979503870010376
    4. 'self' → logprob: -6.104503631591797
    5. 'length' → logprob: -6.354503631591797
    6. '_points' → logprob: -6.479503631591797
    7. '
' → logprob: -6.604503631591797
    8. 'class' → logprob: -6.729503631591797
    9. 'points' → logprob: -6.854503631591797
    10. 'size' → logprob: -7.104503631591797

Token 1226: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.630610641877865e-06
    2. '   ' → logprob: -12.875006675720215
    3. '(' → logprob: -13.125006675720215
    4. 'self' → logprob: -14.000006675720215
    5. '(s' → logprob: -14.500006675720215
    6. ' (' → logprob: -14.500006675720215
    7. 'def' → logprob: -16.8750057220459
    8. '=self' → logprob: -16.8750057220459
    9. ' self' → logprob: -17.2500057220459
    10. '(
' → logprob: -18.0000057220459

Token 1227: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.225939872208983e-05
    2. '(s' → logprob: -10.625032424926758
    3. 'self' → logprob: -12.000032424926758
    4. '(' → logprob: -14.125032424926758
    5. 'def' → logprob: -15.000032424926758
    6. ' (' → logprob: -15.250032424926758
    7. 's' → logprob: -16.500032424926758
    8. '   ' → logprob: -16.625032424926758
    9. '(
' → logprob: -17.000032424926758
    10. ' self' → logprob: -17.250032424926758

Token 1228: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.013458795845508575
    2. 'self' → logprob: -4.638458728790283
    3. 'other' → logprob: -5.763458728790283
    4. ' s' → logprob: -7.638458728790283
    5. 'seg' → logprob: -10.388459205627441
    6. ' other' → logprob: -10.888459205627441
    7. 'segment' → logprob: -11.013459205627441
    8. ' self' → logprob: -12.388459205627441
    9. '   ' → logprob: -13.638459205627441
    10. ' ' → logprob: -14.138459205627441

Token 1229: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5948199033737183
    2. '):' → logprob: -0.9698199033737183
    3. '(self' → logprob: -2.969820022583008
    4. ',' → logprob: -4.969820022583008
    5. 'self' → logprob: -5.469820022583008
    6. '   ' → logprob: -5.594820022583008
    7. '       ' → logprob: -5.969820022583008
    8. ')' → logprob: -9.094820022583008
    9. ' self' → logprob: -9.594820022583008
    10. '):
' → logprob: -9.594820022583008

Token 1230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0280383548888494e-06
    2. '   ' → logprob: -14.875000953674316
    3. ':' → logprob: -15.375000953674316
    4. '	' → logprob: -16.500001907348633
    5. '):
' → logprob: -16.875001907348633
    6. '
' → logprob: -17.000001907348633
    7. '      ' → logprob: -17.000001907348633
    8. ' if' → logprob: -17.250001907348633
    9. '        
' → logprob: -17.250001907348633
    10. ',' → logprob: -17.375001907348633

Token 1231: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7127588987350464
    2. 't' → logprob: -1.2127588987350464
    3. 'd' → logprob: -1.8377588987350464
    4. '   ' → logprob: -4.087759017944336
    5. 'if' → logprob: -4.462759017944336
    6. 'base' → logprob: -4.587759017944336
    7. 'den' → logprob: -4.712759017944336
    8. 'r' → logprob: -5.962759017944336
    9. 'a' → logprob: -7.337759017944336
    10. 'try' → logprob: -7.587759017944336

Token 1232: ' ?????' (ID: 149222)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.4319058656692505
    2. 'd' → logprob: -1.3069058656692505
    3. '   ' → logprob: -2.681905746459961
    4. 't' → logprob: -5.556905746459961
    5. 'den' → logprob: -5.681905746459961
    6. '#' → logprob: -6.681905746459961
    7. '       ' → logprob: -6.931905746459961
    8. 'if' → logprob: -7.681905746459961
    9. 'D' → logprob: -7.806905746459961
    10. 'a' → logprob: -7.931905746459961

Token 1233: '???' (ID: 33110)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2186351716518402
    2. 'd' → logprob: -1.9686352014541626
    3. '   ' → logprob: -3.968635082244873
    4. 'if' → logprob: -4.468635082244873
    5. 'base' → logprob: -5.093635082244873
    6. 'p' → logprob: -5.468635082244873
    7. 'b' → logprob: -5.843635082244873
    8. 'vec' → logprob: -5.968635082244873
    9. '#' → logprob: -6.218635082244873
    10. 'dx' → logprob: -6.218635082244873

Token 1234: '¨' (ID: 64259)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.612089991569519
    2. 'd' → logprob: -1.362089991569519
    3. 'den' → logprob: -2.3620901107788086
    4. 'diff' → logprob: -3.3620901107788086
    5. 'p' → logprob: -3.7370901107788086
    6. '   ' → logprob: -4.112090110778809
    7. '#' → logprob: -4.987090110778809
    8. 'v' → logprob: -5.612090110778809
    9. 'dp' → logprob: -5.612090110778809
    10. 'b' → logprob: -5.737090110778809

Token 1235: '????????' (ID: 85218)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.19201913475990295
    2. '   ' → logprob: -2.44201922416687
    3. 'if' → logprob: -3.69201922416687
    4. '       ' → logprob: -3.94201922416687
    5. 'base' → logprob: -4.317018985748291
    6. 't' → logprob: -4.567018985748291
    7. 'def' → logprob: -5.317018985748291
    8. 'dx' → logprob: -5.817018985748291
    9. 'den' → logprob: -5.942018985748291
    10. 'diff' → logprob: -6.442018985748291

Token 1236: '????????' (ID: 85218)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2455928474664688
    2. '   ' → logprob: -2.2455928325653076
    3. '       ' → logprob: -2.9955928325653076
    4. 'base' → logprob: -3.1205928325653076
    5. 't' → logprob: -4.745593070983887
    6. 'den' → logprob: -5.495593070983887
    7. 'a' → logprob: -7.120593070983887
    8. 'def' → logprob: -7.120593070983887
    9. 'diff' → logprob: -7.120593070983887
    10. '#' → logprob: -7.370593070983887

Token 1237: '????????' (ID: 85218)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.132249355316162
    2. '       ' → logprob: -1.382249355316162
    3. 'self' → logprob: -2.257249355316162
    4. '(s' → logprob: -2.257249355316162
    5. 's' → logprob: -2.632249355316162
    6. '   ' → logprob: -3.007249355316162
    7. 'def' → logprob: -3.132249355316162
    8. 'Point' → logprob: -4.007249355316162
    9. '(Point' → logprob: -5.382249355316162
    10. 'abs' → logprob: -5.507249355316162

Token 1238: '????????' (ID: 85218)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7489156126976013
    2. 'p' → logprob: -1.248915672302246
    3. '   ' → logprob: -2.248915672302246
    4. '#' → logprob: -3.748915672302246
    5. 's' → logprob: -3.873915672302246
    6. ' p' → logprob: -3.873915672302246
    7. 'def' → logprob: -3.873915672302246
    8. ' s' → logprob: -4.498915672302246
    9. 'if' → logprob: -4.873915672302246
    10. '           ' → logprob: -5.873915672302246

Token 1239: '????' (ID: 25883)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7474933862686157
    2. '#' → logprob: -1.1224933862686157
    3. 'self' → logprob: -2.497493267059326
    4. 's' → logprob: -3.122493267059326
    5. '   ' → logprob: -3.747493267059326
    6. '????????' → logprob: -4.497493267059326
    7. 'def' → logprob: -4.872493267059326
    8. '
' → logprob: -5.747493267059326
    9. '        ' → logprob: -5.872493267059326
    10. '?' → logprob: -6.497493267059326

Token 1240: '??' (ID: 6961)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13236869871616364
    2. 'self' → logprob: -3.632368803024292
    3. 'Point' → logprob: -4.007368564605713
    4. '#' → logprob: -4.257368564605713
    5. ' self' → logprob: -4.757368564605713
    6. '
' → logprob: -5.007368564605713
    7. ' Point' → logprob: -5.007368564605713
    8. 's' → logprob: -5.007368564605713
    9. '   ' → logprob: -5.257368564605713
    10. '        ' → logprob: -5.257368564605713

Token 1241: '§' (ID: 18596)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.13938994705677032
    2. '   ' → logprob: -2.889389991760254
    3. 'base' → logprob: -3.389389991760254
    4. '       ' → logprob: -4.014389991760254
    5. 'diff' → logprob: -4.639389991760254
    6. 'den' → logprob: -5.639389991760254
    7. 'a' → logprob: -6.514389991760254
    8. 'l' → logprob: -6.514389991760254
    9. 't' → logprob: -6.639389991760254
    10. 'b' → logprob: -7.264389991760254

Token 1242: '?' (ID: 30)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22750376164913177
    2. 's' → logprob: -3.227503776550293
    3. 'p' → logprob: -3.352503776550293
    4. 'point' → logprob: -3.477503776550293
    5. '#' → logprob: -3.852503776550293
    6. 'Point' → logprob: -4.227503776550293
    7. '   ' → logprob: -5.102503776550293
    8. '_point' → logprob: -5.352503776550293
    9. '
' → logprob: -5.477503776550293
    10. ' s' → logprob: -5.602503776550293

Token 1243: '¨' (ID: 64259)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8655797243118286
    2. '¨' → logprob: -1.1155797243118286
    3. 'p' → logprob: -2.990579605102539
    4. 'self' → logprob: -3.240579605102539
    5. 'def' → logprob: -3.615579605102539
    6. 'Point' → logprob: -3.615579605102539
    7. '   ' → logprob: -4.240579605102539
    8. '
' → logprob: -4.490579605102539
    9. 'point' → logprob: -4.740579605102539
    10. '#' → logprob: -4.740579605102539

Token 1244: '????' (ID: 25883)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008033974096179008
    2. '
' → logprob: -5.133033752441406
    3. '#' → logprob: -7.383033752441406
    4. 'p' → logprob: -8.133033752441406
    5. 'def' → logprob: -8.633033752441406
    6. '   ' → logprob: -8.758033752441406
    7. 'd' → logprob: -8.883033752441406
    8. '(p' → logprob: -9.633033752441406
    9. '?
' → logprob: -9.758033752441406
    10. 'x' → logprob: -9.883033752441406

Token 1245: '?' (ID: 30)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.609714686870575
    2. 'base' → logprob: -1.8597147464752197
    3. '   ' → logprob: -2.2347147464752197
    4. '       ' → logprob: -2.2347147464752197
    5. 't' → logprob: -3.4847147464752197
    6. 'den' → logprob: -3.6097147464752197
    7. 'diff' → logprob: -4.484714508056641
    8. 'a' → logprob: -5.609714508056641
    9. 'dx' → logprob: -5.859714508056641
    10. 'p' → logprob: -5.984714508056641

Token 1246: '±' (ID: 32438)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0863498449325562
    2. 'd' → logprob: -1.2113498449325562
    3. 'if' → logprob: -2.2113499641418457
    4. 'p' → logprob: -2.3363499641418457
    5. '   ' → logprob: -2.5863499641418457
    6. 't' → logprob: -4.711349964141846
    7. '#' → logprob: -4.836349964141846
    8. 'v' → logprob: -5.211349964141846
    9. 'den' → logprob: -5.211349964141846
    10. 'diff' → logprob: -5.336349964141846

Token 1247: '????' (ID: 25883)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03512725979089737
    2. 'd' → logprob: -3.4101271629333496
    3. '   ' → logprob: -7.03512716293335
    4. 't' → logprob: -8.285127639770508
    5. 'base' → logprob: -8.660127639770508
    6. '
' → logprob: -10.285127639770508
    7. 'a' → logprob: -10.535127639770508
    8. 'D' → logprob: -11.035127639770508
    9. 'try' → logprob: -11.285127639770508
    10. 'p' → logprob: -11.535127639770508

Token 1248: '???
' (ID: 136325)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030432723462581635
    2. 'd' → logprob: -4.03043270111084
    3. 'dx' → logprob: -5.28043270111084
    4. 't' → logprob: -6.15543270111084
    5. 'den' → logprob: -6.65543270111084
    6. '
' → logprob: -6.78043270111084
    7. '   ' → logprob: -7.28043270111084
    8. 'diff' → logprob: -8.03043270111084
    9. 'if' → logprob: -8.53043270111084
    10. 'p' → logprob: -8.78043270111084

Token 1249: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006433980073779821
    2. 'd' → logprob: -5.756433963775635
    3. 't' → logprob: -5.756433963775635
    4. 'p' → logprob: -10.006434440612793
    5. 'r' → logprob: -11.131434440612793
    6. 'def' → logprob: -12.131434440612793
    7. ' t' → logprob: -12.381434440612793
    8. 'D' → logprob: -12.631434440612793
    9. 'den' → logprob: -12.631434440612793
    10. 'a' → logprob: -13.006434440612793

Token 1250: ' base' (ID: 3611)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5650363564491272
    2. 'base' (adapté à ' base') → logprob: -0.9400363564491272
    3. 'r' → logprob: -4.065036296844482
    4. '   ' → logprob: -4.690036296844482
    5. 'A' → logprob: -5.065036296844482
    6. 'a' → logprob: -5.815036296844482
    7. 'b' → logprob: -5.815036296844482
    8. 't' → logprob: -7.440036296844482
    9. 'den' → logprob: -7.440036296844482
    10. 'dx' → logprob: -8.31503677368164

Token 1251: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10023266077041626
    2. ' =' → logprob: -2.3502326011657715
    3. '=self' → logprob: -11.22523307800293
    4. '=(' → logprob: -12.85023307800293
    5. '＝' → logprob: -13.22523307800293
    6. 'd' → logprob: -13.47523307800293
    7. '   ' → logprob: -13.97523307800293
    8. '_vec' → logprob: -13.97523307800293
    9. '=_' → logprob: -14.35023307800293
    10. '=len' → logprob: -14.47523307800293

Token 1252: ' s' (ID: 265)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11600249260663986
    2. 'Vector' → logprob: -2.2410025596618652
    3. 's' → logprob: -6.241002559661865
    4. '(self' → logprob: -7.241002559661865
    5. ' self' → logprob: -8.491002082824707
    6. 'Segment' → logprob: -8.991002082824707
    7. 'Point' → logprob: -9.116002082824707
    8. ' Vector' → logprob: -10.616002082824707
    9. '(' → logprob: -10.866002082824707
    10. '(Vector' → logprob: -10.991002082824707

Token 1253: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0018038189737126231
    2. 'p' → logprob: -6.501803874969482
    3. 'Vector' → logprob: -8.751803398132324
    4. 'self' → logprob: -9.251803398132324
    5. 'Point' → logprob: -11.376803398132324
    6. '.__' → logprob: -11.751803398132324
    7. '
' → logprob: -12.376803398132324
    8. ' Vector' → logprob: -12.501803398132324
    9. 'Segment' → logprob: -12.626803398132324
    10. '__' → logprob: -12.876803398132324

Token 1254: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6326084136962891
    2. '2' → logprob: -0.7576084136962891
    3. 'p' → logprob: -11.632608413696289
    4. ' p' → logprob: -16.07010841369629
    5. '
' → logprob: -16.69510841369629
    6. ' ' → logprob: -16.69510841369629
    7. '```' → logprob: -17.00760841369629
    8. 's' → logprob: -17.32010841369629
    9. '   ' → logprob: -17.38260841369629
    10. '１' → logprob: -17.44510841369629

Token 1255: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07964469492435455
    2. ' -' → logprob: -2.5796446800231934
    3. '-p' → logprob: -7.329644680023193
    4. '-self' → logprob: -9.954645156860352
    5. '-s' → logprob: -10.329645156860352
    6. '-point' → logprob: -11.454645156860352
    7. '-P' → logprob: -12.579645156860352
    8. 'p' → logprob: -13.454645156860352
    9. '-
' → logprob: -14.204645156860352
    10. 's' → logprob: -14.954645156860352

Token 1256: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00016480287013109773
    2. 'self' → logprob: -9.000164985656738
    3. ' s' → logprob: -10.125164985656738
    4. '   ' → logprob: -14.250164985656738
    5. '       ' → logprob: -15.500164985656738
    6. ' self' → logprob: -15.750164985656738
    7. '	s' → logprob: -16.625164031982422
    8. '  ' → logprob: -17.000164031982422
    9. '           ' → logprob: -17.125164031982422
    10. ' ' → logprob: -17.250164031982422

Token 1257: '.p' (ID: 1201)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.003232375020161271
    2. 'p' → logprob: -6.503232479095459
    3. '.s' → logprob: -7.003232479095459
    4. ' s' → logprob: -7.253232479095459
    5. '.p' → logprob: -9.5032320022583
    6. '.' → logprob: -11.6282320022583
    7. ' p' → logprob: -12.0032320022583
    8. '   ' → logprob: -12.1282320022583
    9. '       ' → logprob: -12.3782320022583
    10. 'self' → logprob: -12.5032320022583

Token 1258: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4140441635390744e-05
    2. 'oint' → logprob: -11.250014305114746
    3. 'p' → logprob: -14.250014305114746
    4. 'oints' → logprob: -15.625014305114746
    5. 'point' → logprob: -16.25001335144043
    6. 'oin' → logprob: -16.37501335144043
    7. '2' → logprob: -17.12501335144043
    8. 'nt' → logprob: -17.75001335144043
    9. 'unction' → logprob: -18.00001335144043
    10. 's' → logprob: -18.12501335144043

Token 1259: '
' (ID: 198)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0528230182826519
    2. '       ' → logprob: -3.177823066711426
    3. '
' → logprob: -5.302823066711426
    4. 'base' → logprob: -6.302823066711426
    5. ' self' → logprob: -6.802823066711426
    6. 'p' → logprob: -7.802823066711426
    7. 's' → logprob: -7.802823066711426
    8. '   ' → logprob: -7.927823066711426
    9. 'Point' → logprob: -9.177823066711426
    10. '(self' → logprob: -9.677823066711426

Token 1260: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2425696700811386
    2. 't' → logprob: -1.6175696849822998
    3. 'r' → logprob: -5.117569446563721
    4. 'd' → logprob: -5.367569446563721
    5. 'diff' → logprob: -5.617569446563721
    6. ' t' → logprob: -6.742569446563721
    7. 'dx' → logprob: -7.617569446563721
    8. 'dp' → logprob: -7.867569446563721
    9. 'w' → logprob: -9.367569923400879
    10. 'return' → logprob: -9.492569923400879

Token 1261: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.2624947130680084
    2. 't' → logprob: -1.512494683265686
    3. 'r' → logprob: -5.5124945640563965
    4. '   ' → logprob: -6.1374945640563965
    5. 'base' → logprob: -6.8874945640563965
    6. 'here' → logprob: -7.0124945640563965
    7. 'den' → logprob: -7.8874945640563965
    8. '       ' → logprob: -8.012495040893555
    9. 'h' → logprob: -8.512495040893555
    10. 'temp' → logprob: -8.512495040893555

Token 1262: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.44684499502182007
    2. '=' → logprob: -1.0718450546264648
    3. '1' → logprob: -4.321845054626465
    4. '   ' → logprob: -6.821845054626465
    5. 'a' → logprob: -7.196845054626465
    6. 'x' → logprob: -7.196845054626465
    7. '_base' → logprob: -8.071845054626465
    8. 'base' → logprob: -8.196845054626465
    9. '=(' → logprob: -8.321845054626465
    10. 'p' → logprob: -8.446845054626465

Token 1263: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519306540489197
    2. ' =' → logprob: -1.5019307136535645
    3. '=(' → logprob: -14.251930236816406
    4. '   ' → logprob: -15.251930236816406
    5. ' =(' → logprob: -15.876930236816406
    6. ',' → logprob: -16.251930236816406
    7. ' ' → logprob: -16.251930236816406
    8. '=
' → logprob: -16.626930236816406
    9. '=((' → logprob: -16.876930236816406
    10. '＝' → logprob: -17.001930236816406

Token 1264: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.3133535385131836
    2. 'Vector' → logprob: -1.3133535385131836
    3. ' abs' → logprob: -9.563353538513184
    4. ' Vector' → logprob: -11.938353538513184
    5. '(abs' → logprob: -11.938353538513184
    6. '(Vector' → logprob: -12.563353538513184
    7. 'fabs' → logprob: -12.938353538513184
    8. 'Point' → logprob: -13.938353538513184
    9. 'Abs' → logprob: -14.063353538513184
    10. '   ' → logprob: -14.688353538513184

Token 1265: '(Vector' (ID: 43769)
  Prédit: '(Vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Vector' → logprob: -0.37470176815986633
    2. '(base' → logprob: -1.249701738357544
    3. '((' → logprob: -3.874701738357544
    4. '(self' → logprob: -5.749701976776123
    5. '(c' → logprob: -7.124701976776123
    6. 'Vector' → logprob: -7.499701976776123
    7. '(Point' → logprob: -8.124701499938965
    8. 'base' → logprob: -9.124701499938965
    9. '(' → logprob: -9.624701499938965
    10. '(Base' → logprob: -10.249701499938965

Token 1266: '.cross' (ID: 108957)
  Prédit: '.cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cross' → logprob: -0.006723540835082531
    2. 'cross' → logprob: -5.006723403930664
    3. 'Cross' → logprob: -11.881723403930664
    4. '.base' → logprob: -14.756723403930664
    5. '(self' → logprob: -15.381723403930664
    6. '(base' → logprob: -15.506723403930664
    7. ' cross' → logprob: -15.881723403930664
    8. 'Vector' → logprob: -16.381723403930664
    9. '
' → logprob: -16.506723403930664
    10. '(Vector' → logprob: -16.506723403930664

Token 1267: '(base' (ID: 25314)
  Prédit: '(base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -0.011544419452548027
    2. '(self' → logprob: -4.886544227600098
    3. '(s' → logprob: -5.886544227600098
    4. 'base' → logprob: -6.886544227600098
    5. '((' → logprob: -9.136544227600098
    6. 'self' → logprob: -11.011544227600098
    7. '(' → logprob: -12.761544227600098
    8. 's' → logprob: -13.386544227600098
    9. ' base' → logprob: -13.511544227600098
    10. '(Vector' → logprob: -14.136544227600098

Token 1268: ',' (ID: 11)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.12810425460338593
    2. '(self' → logprob: -2.1281042098999023
    3. '(base' → logprob: -6.878104209899902
    4. '((' → logprob: -8.878104209899902
    5. 'self' → logprob: -12.628104209899902
    6. '(' → logprob: -14.003104209899902
    7. '(p' → logprob: -14.003104209899902
    8. 's' → logprob: -14.253104209899902
    9. '(b' → logprob: -15.628104209899902
    10. 'base' → logprob: -16.25310516357422

Token 1269: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011200957233086228
    2. 's' → logprob: -7.751120090484619
    3. ' self' → logprob: -7.876120090484619
    4. '(self' → logprob: -8.126120567321777
    5. '   ' → logprob: -12.126120567321777
    6. '	self' → logprob: -12.626120567321777
    7. ' ' → logprob: -13.626120567321777
    8. '(s' → logprob: -14.376120567321777
    9. '     ' → logprob: -14.626120567321777
    10. '  ' → logprob: -14.626120567321777

Token 1270: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -8.518582762917504e-05
    2. 'p' → logprob: -9.37508487701416
    3. '(p' → logprob: -16.000085830688477
    4. '.' → logprob: -16.250085830688477
    5. '<p' → logprob: -16.375085830688477
    6. '.s' → logprob: -17.875085830688477
    7. '   ' → logprob: -18.625085830688477
    8. '	p' → logprob: -18.625085830688477
    9. '_p' → logprob: -19.000085830688477
    10. '
' → logprob: -19.375085830688477

Token 1271: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. '2' → logprob: -9.7500581741333
    3. 'p' → logprob: -17.125059127807617
    4. '１' → logprob: -17.375059127807617
    5. ' ' → logprob: -17.750059127807617
    6. '   ' → logprob: -18.125059127807617
    7. ' -' → logprob: -19.312559127807617
    8. '
' → logprob: -19.437559127807617
    9. '

' → logprob: -19.500059127807617
    10. '  ' → logprob: -19.875059127807617

Token 1272: '-s' (ID: 2011)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3716309666633606
    2. '-' → logprob: -1.3716309070587158
    3. '-s' → logprob: -2.871630907058716
    4. '-p' → logprob: -9.996630668640137
    5. 's' → logprob: -10.121630668640137
    6. ' ' → logprob: -13.121630668640137
    7. '-se' → logprob: -13.621630668640137
    8. '-self' → logprob: -14.246630668640137
    9. '   ' → logprob: -14.746630668640137
    10. '-sub' → logprob: -14.996630668640137

Token 1273: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.2491617351770401
    2. '1' → logprob: -1.749161720275879
    3. ' p' → logprob: -3.624161720275879
    4. 'p' → logprob: -4.374161720275879
    5. ' s' → logprob: -5.124161720275879
    6. '	p' → logprob: -8.124161720275879
    7. '(p' → logprob: -8.374161720275879
    8. '[' → logprob: -8.499161720275879
    9. 's' → logprob: -8.624161720275879
    10. '.s' → logprob: -8.624161720275879

Token 1274: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '2' → logprob: -14.125000953674316
    3. 's' → logprob: -18.375
    4. '0' → logprob: -18.75
    5. 'oint' → logprob: -18.875
    6. 'p' → logprob: -19.0
    7. '
' → logprob: -19.0625
    8. 't' → logprob: -19.3125
    9. '{' → logprob: -19.3125
    10. '   ' → logprob: -19.6875

Token 1275: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.04140312597155571
    2. ')
' → logprob: -3.79140305519104
    3. '))' → logprob: -4.666403293609619
    4. ')' → logprob: -4.791403293609619
    5. '       ' → logprob: -8.791402816772461
    6. '))
' → logprob: -10.041402816772461
    7. '),' → logprob: -10.541402816772461
    8. ')/' → logprob: -10.791402816772461
    9. '   ' → logprob: -11.166402816772461
    10. ' ))
' → logprob: -11.541402816772461

Token 1276: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00919211097061634
    2. 'd' → logprob: -4.759191989898682
    3. ' d' → logprob: -8.25919246673584
    4. ',d' → logprob: -8.50919246673584
    5. ',' → logprob: -9.38419246673584
    6. ' ' → logprob: -11.75919246673584
    7. '   ' → logprob: -11.75919246673584
    8. '	d' → logprob: -12.63419246673584
    9. '      ' → logprob: -12.75919246673584
    10. ')' → logprob: -12.88419246673584

Token 1277: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.00016241880075540394
    2. '       ' → logprob: -8.875162124633789
    3. ' d' → logprob: -11.000162124633789
    4. '   ' → logprob: -12.125162124633789
    5. '	d' → logprob: -14.875162124633789
    6. '           ' → logprob: -16.87516212463379
    7. '      ' → logprob: -17.37516212463379
    8. ' ' → logprob: -17.62516212463379
    9. '     ' → logprob: -17.62516212463379
    10. '
' → logprob: -17.87516212463379

Token 1278: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008171311928890646
    2. '1' → logprob: -7.25081729888916
    3. ' ' → logprob: -10.37581729888916
    4. ' =' → logprob: -10.50081729888916
    5. '=' → logprob: -10.75081729888916
    6. '   ' → logprob: -10.87581729888916
    7. '0' → logprob: -12.00081729888916
    8. '  ' → logprob: -14.50081729888916
    9. '       ' → logprob: -14.75081729888916
    10. '3' → logprob: -15.25081729888916

Token 1279: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141352713108063
    2. '=' → logprob: -1.7014135122299194
    3. '    ' → logprob: -16.326414108276367
    4. '   ' → logprob: -16.451414108276367
    5. ' ' → logprob: -17.076414108276367
    6. '       ' → logprob: -18.201414108276367
    7. '        ' → logprob: -18.451414108276367
    8. ' =
' → logprob: -18.576414108276367
    9. '＝' → logprob: -18.951414108276367
    10. '	' → logprob: -19.451414108276367

Token 1280: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.00014442270912695676
    2. ' abs' → logprob: -8.875144004821777
    3. '       ' → logprob: -12.875144004821777
    4. '   ' → logprob: -13.500144004821777
    5. '           ' → logprob: -15.875144004821777
    6. '     ' → logprob: -16.125144958496094
    7. '      ' → logprob: -16.250144958496094
    8. '    ' → logprob: -16.375144958496094
    9. '(abs' → logprob: -16.625144958496094
    10. ' ' → logprob: -17.125144958496094

Token 1281: '(Vector' (ID: 43769)
  Prédit: '(Vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Vector' → logprob: -4.320199877838604e-07
    2. 'Vector' → logprob: -14.75
    3. '	Vector' → logprob: -18.25
    4. ' Vector' → logprob: -18.625
    5. '<Vector' → logprob: -18.625
    6. '(' → logprob: -19.625
    7. '(Point' → logprob: -19.75
    8. '((' → logprob: -20.125
    9. '.Vector' → logprob: -20.375
    10. '(Vertex' → logprob: -21.5

Token 1282: '.cross' (ID: 108957)
  Prédit: '.cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cross' → logprob: -9.639096970204264e-05
    2. 'cross' → logprob: -9.250096321105957
    3. ' cross' → logprob: -15.750096321105957
    4. '.' → logprob: -18.000097274780273
    5. '.Cross' → logprob: -18.375097274780273
    6. 'Cross' → logprob: -18.750097274780273
    7. '_cross' → logprob: -19.875097274780273
    8. '(c' → logprob: -20.375097274780273
    9. '
' → logprob: -20.375097274780273
    10. '.c' → logprob: -21.375097274780273

Token 1283: '(base' (ID: 25314)
  Prédit: '(base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -6.2729995988775045e-06
    2. 'base' → logprob: -12.000006675720215
    3. ' base' → logprob: -17.5000057220459
    4. '   ' → logprob: -19.0000057220459
    5. '(' → logprob: -19.6250057220459
    6. '	base' → logprob: -20.1250057220459
    7. '(
' → logprob: -20.7500057220459
    8. ' (' → logprob: -20.8750057220459
    9. '/base' → logprob: -21.0000057220459
    10. '       ' → logprob: -21.6250057220459

Token 1284: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015062900492921472
    2. '(s' → logprob: -6.501506328582764
    3. '(self' → logprob: -13.126505851745605
    4. 's' → logprob: -14.001505851745605
    5. '   ' → logprob: -15.376505851745605
    6. ',s' → logprob: -15.376505851745605
    7. ' ' → logprob: -16.126506805419922
    8. ' (' → logprob: -16.376506805419922
    9. ' ,' → logprob: -16.376506805419922
    10. '(' → logprob: -16.501506805419922

Token 1285: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1604672223329544
    2. ' self' → logprob: -1.910467267036438
    3. '(self' → logprob: -8.410467147827148
    4. '       ' → logprob: -12.160467147827148
    5. ' ' → logprob: -12.285467147827148
    6. '   ' → logprob: -12.285467147827148
    7. '	self' → logprob: -12.910467147827148
    8. '           ' → logprob: -13.785467147827148
    9. '  ' → logprob: -14.910467147827148
    10. '     ' → logprob: -14.910467147827148

Token 1286: '.p' (ID: 1201)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07555472105741501
    2. '.p' → logprob: -2.825554609298706
    3. 'p' → logprob: -4.575554847717285
    4. '(self' → logprob: -6.075554847717285
    5. ' self' → logprob: -8.200554847717285
    6. '.self' → logprob: -8.200554847717285
    7. '.s' → logprob: -8.825554847717285
    8. 's' → logprob: -9.700554847717285
    9. '2' → logprob: -9.950554847717285
    10. '   ' → logprob: -11.325554847717285

Token 1287: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002067588793579489
    2. 'p' → logprob: -8.50020694732666
    3. '.p' → logprob: -13.62520694732666
    4. '1' → logprob: -14.62520694732666
    5. ' ' → logprob: -14.62520694732666
    6. 'self' → logprob: -14.75020694732666
    7. '   ' → logprob: -15.50020694732666
    8. '２' → logprob: -16.500205993652344
    9. 's' → logprob: -16.875205993652344
    10. ' p' → logprob: -17.312705993652344

Token 1288: '-s' (ID: 2011)
  Prédit: '-s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-s' → logprob: -0.001398333697579801
    2. ' -' → logprob: -6.62639856338501
    3. 's' → logprob: -9.876398086547852
    4. '-p' → logprob: -11.376398086547852
    5. '-self' → logprob: -12.251398086547852
    6. '-' → logprob: -13.251398086547852
    7. ' ' → logprob: -13.876398086547852
    8. 'self' → logprob: -14.501398086547852
    9. ' s' → logprob: -14.626398086547852
    10. ' self' → logprob: -14.876398086547852

Token 1289: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.00177942612208426
    2. 'p' → logprob: -6.626779556274414
    3. '1' → logprob: -7.751779556274414
    4. '```' → logprob: -11.876779556274414
    5. '_p' → logprob: -12.626779556274414
    6. '<p' → logprob: -12.751779556274414
    7. '-p' → logprob: -13.126779556274414
    8. ' p' → logprob: -13.501779556274414
    9. '(p' → logprob: -13.501779556274414
    10. '	p' → logprob: -13.751779556274414

Token 1290: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.100059156073257e-05
    2. 'p' → logprob: -9.875070571899414
    3. 's' → logprob: -11.375070571899414
    4. '.p' → logprob: -13.000070571899414
    5. 'oint' → logprob: -14.250070571899414
    6. '-p' → logprob: -14.562570571899414
    7. '_p' → logprob: -14.625070571899414
    8. '１' → logprob: -14.750070571899414
    9. '<p' → logprob: -14.875070571899414
    10. '_point' → logprob: -15.125070571899414

Token 1291: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.1434948593378067
    2. '))' → logprob: -2.0184948444366455
    3. '       ' → logprob: -7.268495082855225
    4. '))
' → logprob: -9.893494606018066
    5. '))/' → logprob: -10.768494606018066
    6. '))

' → logprob: -10.893494606018066
    7. 's' → logprob: -11.768494606018066
    8. '      ' → logprob: -12.018494606018066
    9. ' ))
' → logprob: -12.143494606018066
    10. '))+' → logprob: -12.768494606018066

Token 1292: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015335931675508618
    2. 'return' → logprob: -9.125153541564941
    3. ' return' → logprob: -10.500153541564941
    4. 'x' → logprob: -12.875153541564941
    5. ',' → logprob: -13.000153541564941
    6. 'd' → logprob: -13.000153541564941
    7. ')' → logprob: -13.125153541564941
    8. 't' → logprob: -13.500153541564941
    9. '        ' → logprob: -13.750153541564941
    10. '   ' → logprob: -14.250153541564941

Token 1293: ' t' (ID: 260)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6377933621406555
    2. 't' (adapté à ' t') → logprob: -0.8877933621406555
    3. 'x' → logprob: -2.8877933025360107
    4. '   ' → logprob: -5.76279354095459
    5. '       ' → logprob: -8.01279354095459
    6. 'if' → logprob: -8.13779354095459
    7. 'den' → logprob: -8.38779354095459
    8. 'try' → logprob: -10.01279354095459
    9. 'd' → logprob: -10.13779354095459
    10. 'r' → logprob: -10.26279354095459

Token 1294: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693335115909576
    2. ' =' → logprob: -2.1269333362579346
    3. '   ' → logprob: -13.126933097839355
    4. 'd' → logprob: -13.626933097839355
    5. '=d' → logprob: -13.876933097839355
    6. ' ' → logprob: -15.251933097839355
    7. '    ' → logprob: -15.626933097839355
    8. '＝' → logprob: -15.626933097839355
    9. '	' → logprob: -16.001934051513672
    10. 's' → logprob: -16.376934051513672

Token 1295: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -3.762356209335849e-05
    2. ' d' → logprob: -10.37503719329834
    3. '   ' → logprob: -13.37503719329834
    4. 'Point' → logprob: -13.37503719329834
    5. '	d' → logprob: -13.62503719329834
    6. 'float' → logprob: -13.87503719329834
    7. '1' → logprob: -14.75003719329834
    8. '(d' → logprob: -15.37503719329834
    9. 'Vector' → logprob: -15.87503719329834
    10. '
' → logprob: -16.000038146972656

Token 1296: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009757975116372108
    2. '1' → logprob: -4.634757995605469
    3. '
' → logprob: -13.134757995605469
    4. '```' → logprob: -17.38475799560547
    5. '`' → logprob: -18.50975799560547
    6. '``' → logprob: -18.50975799560547
    7. '

' → logprob: -18.75975799560547
    8. '２' → logprob: -19.75975799560547
    9. '{
' → logprob: -19.88475799560547
    10. '{' → logprob: -20.00975799560547

Token 1297: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.6315532326698303
    2. ' /' → logprob: -0.8815532326698303
    3. '/(' → logprob: -3.0065531730651855
    4. '/d' → logprob: -5.5065531730651855
    5. '/
' → logprob: -8.006553649902344
    6. '   ' → logprob: -8.631553649902344
    7. 'd' → logprob: -11.006553649902344
    8. ' /(' → logprob: -11.256553649902344
    9. '
' → logprob: -11.756553649902344
    10. ' /
' → logprob: -11.881553649902344

Token 1298: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.3544423381972592e-05
    2. ' (' → logprob: -11.50001335144043
    3. '(' → logprob: -13.37501335144043
    4. 'd' → logprob: -13.62501335144043
    5. '(abs' → logprob: -15.37501335144043
    6. '(float' → logprob: -15.75001335144043
    7. '   ' → logprob: -16.75001335144043
    8. 'float' → logprob: -17.62501335144043
    9. '((' → logprob: -17.75001335144043
    10. '
' → logprob: -18.75001335144043

Token 1299: 'd' (ID: 67)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0004676113894674927
    2. 'd' → logprob: -7.875467777252197
    3. ' (' → logprob: -9.375467300415039
    4. '(' → logprob: -13.625467300415039
    5. '   ' → logprob: -14.500467300415039
    6. ' d' → logprob: -14.500467300415039
    7. '       ' → logprob: -15.250467300415039
    8. '[d' → logprob: -16.37546730041504
    9. ' ' → logprob: -16.50046730041504
    10. '	d' → logprob: -17.75046730041504

Token 1300: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05744481831789017
    2. '2' → logprob: -3.1824448108673096
    3. '(d' → logprob: -4.307445049285889
    4. '(' → logprob: -7.307445049285889
    5. ' (' → logprob: -9.30744457244873
    6. '(t' → logprob: -10.93244457244873
    7. '(
' → logprob: -11.05744457244873
    8. '(x' → logprob: -11.43244457244873
    9. '   ' → logprob: -11.80744457244873
    10. '(e' → logprob: -11.93244457244873

Token 1301: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006179290823638439
    2. ' +' → logprob: -5.131179332733154
    3. '+d' → logprob: -9.006178855895996
    4. '(' → logprob: -9.756178855895996
    5. '+
' → logprob: -9.881178855895996
    6. '+(' → logprob: -11.631178855895996
    7. '+t' → logprob: -12.506178855895996
    8. '＋' → logprob: -13.381178855895996
    9. '+D' → logprob: -14.506178855895996
    10. 'd' → logprob: -14.631178855895996

Token 1302: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00026169343618676066
    2. ' d' → logprob: -8.250261306762695
    3. '   ' → logprob: -15.625261306762695
    4. '(d' → logprob: -16.000261306762695
    5. '	d' → logprob: -16.625261306762695
    6. '       ' → logprob: -16.750261306762695
    7. '  ' → logprob: -18.625261306762695
    8. ' ' → logprob: -18.750261306762695
    9. ')d' → logprob: -18.750261306762695
    10. '      ' → logprob: -19.500261306762695

Token 1303: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '２' → logprob: -18.0
    4. '₂' → logprob: -19.125
    5. '۲' → logprob: -19.25
    6. '   ' → logprob: -19.375
    7. '
' → logprob: -20.5
    8. 'token' → logprob: -20.5
    9. '_' → logprob: -20.625
    10. '```' → logprob: -20.875

Token 1304: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.040260326117277145
    2. '<|end|>' → logprob: -3.2902603149414062
    3. '<|end|>' → logprob: -6.415260314941406
    4. ')return' → logprob: -7.915260314941406
    5. ')>' → logprob: -10.290260314941406
    6. '       ' → logprob: -10.540260314941406
    7. ')
' → logprob: -10.540260314941406
    8. ' )' → logprob: -10.540260314941406
    9. ')t' → logprob: -10.915260314941406
    10. '
' → logprob: -11.165260314941406

Token 1305: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18723264336585999
    2. 'return' → logprob: -1.9372326135635376
    3. ' return' → logprob: -3.687232732772827
    4. '	return' → logprob: -6.812232494354248
    5. '	' → logprob: -8.062232971191406
    6. ')' → logprob: -10.437232971191406
    7. '<|end|>' → logprob: -10.437232971191406
    8. ':return' → logprob: -10.687232971191406
    9. ')return' → logprob: -10.937232971191406
    10. '```' → logprob: -11.312232971191406

Token 1306: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0017136165406554937
    2. '       ' → logprob: -6.501713752746582
    3. ' return' → logprob: -8.501713752746582
    4. '	return' → logprob: -12.126713752746582
    5. 'ret' → logprob: -13.876713752746582
    6. 'result' → logprob: -14.876713752746582
    7. 'r' → logprob: -15.251713752746582
    8. 'res' → logprob: -15.376713752746582
    9. '   ' → logprob: -15.626713752746582
    10. 'Return' → logprob: -15.626713752746582

Token 1307: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029822008684277534
    2. 'Point' → logprob: -3.5298221111297607
    3. 'Segment' → logprob: -10.02982234954834
    4. ' self' → logprob: -10.77982234954834
    5. '(self' → logprob: -12.27982234954834
    6. 'Self' → logprob: -14.27982234954834
    7. 'Vector' → logprob: -14.52982234954834
    8. ' Point' → logprob: -14.90482234954834
    9. 's' → logprob: -16.029821395874023
    10. '	self' → logprob: -16.154821395874023

Token 1308: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -4.842555426876061e-06
    2. 'p' → logprob: -12.375004768371582
    3. 'Point' → logprob: -15.750004768371582
    4. '.' → logprob: -16.3750057220459
    5. '.s' → logprob: -16.3750057220459
    6. ' .' → logprob: -17.0000057220459
    7. '__.' → logprob: -17.3750057220459
    8. '.__' → logprob: -17.7500057220459
    9. '__' → logprob: -17.8750057220459
    10. 'Segment' → logprob: -17.8750057220459

Token 1309: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. 'oint' → logprob: -15.625
    3. '2' → logprob: -16.875
    4. 'oints' → logprob: -17.375
    5. 'Point' → logprob: -18.0
    6. 'p' → logprob: -18.375
    7. '```' → logprob: -19.125
    8. '１' → logprob: -19.5625
    9. 'oin' → logprob: -19.8125
    10. '   ' → logprob: -19.875

Token 1310: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47408169507980347
    2. ' +' → logprob: -0.9740816950798035
    3. '+(' → logprob: -12.724081993103027
    4. '*' → logprob: -13.599081993103027
    5. ' ' → logprob: -15.724081993103027
    6. 's' → logprob: -16.34908103942871
    7. '＋' → logprob: -16.72408103942871
    8. ' *' → logprob: -16.72408103942871
    9. '+s' → logprob: -17.22408103942871
    10. '+
' → logprob: -17.34908103942871

Token 1311: ' (' (ID: 350)
  Prédit: '(base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -0.00031043673516251147
    2. 'base' → logprob: -8.125310897827148
    3. '(Point' → logprob: -12.000310897827148
    4. '(' → logprob: -12.375310897827148
    5. ' (' → logprob: -12.875310897827148
    6. ' base' → logprob: -14.375310897827148
    7. '(Base' → logprob: -14.875310897827148
    8. '((' → logprob: -15.625310897827148
    9. '(Vector' → logprob: -16.25031089782715
    10. 'Vector' → logprob: -17.12531089782715

Token 1312: 'self' (ID: 1156)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3453314006328583
    2. 'base' → logprob: -1.3453314304351807
    3. '(base' → logprob: -3.8453314304351807
    4. '(s' → logprob: -4.595331192016602
    5. ' (' → logprob: -10.470331192016602
    6. ' base' → logprob: -11.095331192016602
    7. '   ' → logprob: -11.345331192016602
    8. ' ' → logprob: -12.095331192016602
    9. ' s' → logprob: -12.095331192016602
    10. 'self' → logprob: -12.345331192016602

Token 1313: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -1.747814349073451e-05
    2. '-' → logprob: -11.875017166137695
    3. 'p' → logprob: -11.875017166137695
    4. ' -' → logprob: -13.875017166137695
    5. '.' → logprob: -14.000017166137695
    6. '.s' → logprob: -14.250017166137695
    7. '-p' → logprob: -14.625017166137695
    8. 's' → logprob: -15.875017166137695
    9. '```' → logprob: -15.875017166137695
    10. ' ' → logprob: -16.375017166137695

Token 1314: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. '1' → logprob: -16.125
    3. 'p' → logprob: -16.625
    4. '```' → logprob: -16.625
    5. 'self' → logprob: -17.5
    6. '.p' → logprob: -18.0
    7. '２' → logprob: -18.0625
    8. ' ' → logprob: -18.125
    9. '۲' → logprob: -18.25
    10. '₂' → logprob: -18.25

Token 1315: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2519349455833435
    2. '-' → logprob: -1.5019350051879883
    3. '-s' → logprob: -12.251935005187988
    4. ' ' → logprob: -14.751935005187988
    5. 's' → logprob: -14.876935005187988
    6. '−' → logprob: -16.501934051513672
    7. '-self' → logprob: -16.751934051513672
    8. '-p' → logprob: -16.876934051513672
    9. '	' → logprob: -17.876934051513672
    10. '   ' → logprob: -18.376934051513672

Token 1316: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00012356207298580557
    2. ' self' → logprob: -9.000123977661133
    3. '	self' → logprob: -17.000123977661133
    4. 's' → logprob: -17.125123977661133
    5. '(self' → logprob: -18.125123977661133
    6. 'Self' → logprob: -18.875123977661133
    7. '=self' → logprob: -19.250123977661133
    8. '   ' → logprob: -19.375123977661133
    9. '[self' → logprob: -19.500123977661133
    10. ' ' → logprob: -20.000123977661133

Token 1317: '.p' (ID: 1201)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00927006360143423
    2. 's' → logprob: -5.009270191192627
    3. '.p' → logprob: -6.009270191192627
    4. ' p' → logprob: -9.384269714355469
    5. '1' → logprob: -12.134269714355469
    6. 'self' → logprob: -12.884269714355469
    7. '.s' → logprob: -13.009269714355469
    8. '<p' → logprob: -15.009269714355469
    9. 't' → logprob: -15.634269714355469
    10. ' s' → logprob: -15.634269714355469

Token 1318: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '2' → logprob: -15.625
    3. 'p' → logprob: -16.0
    4. 's' → logprob: -17.0
    5. 'oint' → logprob: -18.375
    6. '１' → logprob: -18.75
    7. 'oints' → logprob: -18.75
    8. 'unction' → logprob: -19.5
    9. 'r' → logprob: -19.625
    10. '```' → logprob: -19.75

Token 1319: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028115289751440287
    2. ')*' → logprob: -5.877811431884766
    3. '*' → logprob: -12.002811431884766
    4. '*)' → logprob: -15.752811431884766
    5. ' )' → logprob: -16.127811431884766
    6. ')t' → logprob: -16.127811431884766
    7. '）' → logprob: -17.127811431884766
    8. ')
' → logprob: -17.252811431884766
    9. ' *' → logprob: -18.002811431884766
    10. '	' → logprob: -18.502811431884766

Token 1320: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.21826933324337006
    2. ' *' → logprob: -1.7182693481445312
    3. '*t' → logprob: -4.093269348144531
    4. '*object' → logprob: -11.343269348144531
    5. '*s' → logprob: -12.218269348144531
    6. '*p' → logprob: -13.093269348144531
    7. '**' → logprob: -13.468269348144531
    8. '*u' → logprob: -13.468269348144531
    9. '*q' → logprob: -13.593269348144531
    10. '*k' → logprob: -13.843269348144531

Token 1321: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0007099286303855479
    2. ' t' → logprob: -7.2507100105285645
    3. '	t' → logprob: -18.375709533691406
    4. '`t' → logprob: -19.250709533691406
    5. '(t' → logprob: -19.625709533691406
    6. ')t' → logprob: -22.625709533691406
    7. 'float' → logprob: -23.000709533691406
    8. '_t' → logprob: -23.875709533691406
    9. '<t' → logprob: -24.125709533691406
    10. '+t' → logprob: -24.125709533691406

Token 1322: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6244754791259766
    2. '<|end|>' → logprob: -0.8744754791259766
    3. '
' → logprob: -4.374475479125977
    4. 'if' → logprob: -4.374475479125977
    5. ')' → logprob: -4.624475479125977
    6. '#' → logprob: -4.999475479125977
    7. '<|end|>' → logprob: -5.999475479125977
    8. 'class' → logprob: -7.749475479125977
    9. '   ' → logprob: -7.999475479125977
    10. '```' → logprob: -7.999475479125977

Token 1323: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.028040286153554916
    2. 'if' → logprob: -3.6530401706695557
    3. '#' → logprob: -6.528040409088135
    4. '
' → logprob: -9.528039932250977
    5. 'class' → logprob: -9.778039932250977
    6. ')' → logprob: -10.153039932250977
    7. 'import' → logprob: -10.528039932250977
    8. '   ' → logprob: -11.403039932250977
    9. '```' → logprob: -11.528039932250977
    10. ' if' → logprob: -12.403039932250977

Token 1324: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.034504979848861694
    2. 'if' → logprob: -3.5345048904418945
    3. '#' → logprob: -5.9095048904418945
    4. 'class' → logprob: -6.5345048904418945
    5. 'n' → logprob: -8.909504890441895
    6. 'import' → logprob: -9.534504890441895
    7. 'epsilon' → logprob: -9.659504890441895
    8. 'input' → logprob: -9.784504890441895
    9. 'N' → logprob: -10.034504890441895
    10. 'r' → logprob: -10.284504890441895

Token 1325: ' distance' (ID: 9324)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.8128662109375
    2. 'arg' → logprob: -2.0628662109375
    3. 'get' → logprob: -2.5628662109375
    4. 'ort' → logprob: -3.0628662109375
    5. 'length' → logprob: -3.0628662109375
    6. 'distance' → logprob: -3.3128662109375
    7. 'vector' → logprob: -3.6878662109375
    8. 'point' → logprob: -3.9378662109375
    9. 'norm' → logprob: -4.0628662109375
    10. 'per' → logprob: -4.1878662109375

Token 1326: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00011749001714633778
    2. '(' → logprob: -9.250117301940918
    3. 'self' → logprob: -12.000117301940918
    4. '   ' → logprob: -12.250117301940918
    5. ' (' → logprob: -12.625117301940918
    6. '(
' → logprob: -13.125117301940918
    7. 'def' → logprob: -13.250117301940918
    8. 'from' → logprob: -13.250117301940918
    9. 's' → logprob: -15.375117301940918
    10. ' self' → logprob: -15.625117301940918

Token 1327: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.11656970530748367
    2. ',' → logprob: -2.366569757461548
    3. 'self' → logprob: -4.366569519042969
    4. '   ' → logprob: -6.991569519042969
    5. '(' → logprob: -7.241569519042969
    6. 'def' → logprob: -7.241569519042969
    7. ')' → logprob: -7.741569519042969
    8. '       ' → logprob: -8.241569519042969
    9. ' self' → logprob: -8.616569519042969
    10. ' (' → logprob: -9.241569519042969

Token 1328: ' s' (ID: 265)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.010678969323635101
    2. ' self' → logprob: -4.760678768157959
    3. 'p' → logprob: -6.260678768157959
    4. '   ' → logprob: -9.135679244995117
    5. '       ' → logprob: -10.760679244995117
    6. ' p' → logprob: -11.385679244995117
    7. 's' → logprob: -12.135679244995117
    8. 'Point' → logprob: -12.510679244995117
    9. 'point' → logprob: -13.760679244995117
    10. '(self' → logprob: -14.635679244995117

Token 1329: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.42345061898231506
    2. ',' → logprob: -1.2984505891799927
    3. 'self' → logprob: -3.1734507083892822
    4. '):
' → logprob: -3.9234507083892822
    5. '):' → logprob: -6.048450469970703
    6. '       ' → logprob: -6.173450469970703
    7. ')' → logprob: -6.298450469970703
    8. 'def' → logprob: -6.673450469970703
    9. '   ' → logprob: -7.048450469970703
    10. '(s' → logprob: -7.673450469970703

Token 1330: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01529350783675909
    2. 'if' → logprob: -4.265293598175049
    3. ' if' → logprob: -7.015293598175049
    4. '   ' → logprob: -8.39029312133789
    5. '#' → logprob: -13.14029312133789
    6. 'return' → logprob: -14.26529312133789
    7. '
' → logprob: -15.14029312133789
    8. '"""' → logprob: -15.14029312133789
    9. '	if' → logprob: -15.26529312133789
    10. '           ' → logprob: -15.39029312133789

Token 1331: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.007868047803640366
    2. '   ' → logprob: -5.507867813110352
    3. 'return' → logprob: -6.257867813110352
    4. '       ' → logprob: -6.882867813110352
    5. ' if' → logprob: -7.757867813110352
    6. 'def' → logprob: -8.132867813110352
    7. '#' (adapté à ' #') → logprob: -9.632867813110352
    8. 'p' → logprob: -10.007867813110352
    9. 'd' → logprob: -12.132867813110352
    10. ' return' → logprob: -13.882867813110352

Token 1332: ' ?????' (ID: 149222)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02546844072639942
    2. 'if' → logprob: -3.900468349456787
    3. '   ' → logprob: -5.900468349456787
    4. '       ' → logprob: -6.900468349456787
    5. 'self' → logprob: -7.275468349456787
    6. ' def' → logprob: -8.525468826293945
    7. 'distance' → logprob: -8.900468826293945
    8. '#' → logprob: -10.275468826293945
    9. 'return' → logprob: -10.275468826293945
    10. ' if' → logprob: -10.650468826293945

Token 1333: '???' (ID: 33110)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.9346472024917603
    2. 'def' → logprob: -1.0596472024917603
    3. '       ' → logprob: -1.5596472024917603
    4. 'self' → logprob: -3.1846470832824707
    5. '   ' → logprob: -6.309647083282471
    6. '#' → logprob: -6.434647083282471
    7. '(self' → logprob: -6.559647083282471
    8. 'distance' → logprob: -7.184647083282471
    9. ' def' → logprob: -7.559647083282471
    10. 'class' → logprob: -7.934647083282471

Token 1334: '¨' (ID: 64259)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4353357255458832
    2. 'self' → logprob: -1.5603357553482056
    3. 'distance' → logprob: -2.685335636138916
    4. '(self' → logprob: -3.435335636138916
    5. 'Point' → logprob: -3.685335636138916
    6. '   ' → logprob: -5.435335636138916
    7. '       ' → logprob: -5.560335636138916
    8. 's' → logprob: -6.060335636138916
    9. 'point' → logprob: -6.560335636138916
    10. '(Point' → logprob: -6.935335636138916

Token 1335: '????????' (ID: 85218)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03146161511540413
    2. '(self' → logprob: -4.281461715698242
    3. 'if' → logprob: -5.281461715698242
    4. 'distance' → logprob: -5.281461715698242
    5. '       ' → logprob: -5.656461715698242
    6. 'self' → logprob: -6.656461715698242
    7. 'from' → logprob: -7.281461715698242
    8. '   ' → logprob: -7.781461715698242
    9. '(s' → logprob: -8.531461715698242
    10. ' def' → logprob: -8.656461715698242

Token 1336: '????????' (ID: 85218)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5963191986083984
    2. 'def' → logprob: -0.8463191986083984
    3. 's' → logprob: -4.471319198608398
    4. '       ' → logprob: -5.471319198608398
    5. 'if' → logprob: -6.471319198608398
    6. '(self' → logprob: -6.971319198608398
    7. 'distance' → logprob: -7.221319198608398
    8. '   ' → logprob: -7.846319198608398
    9. '#' → logprob: -8.096319198608398
    10. ' def' → logprob: -8.846319198608398

Token 1337: '????????' (ID: 85218)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0128933191299438
    2. 'distance' → logprob: -1.2628933191299438
    3. 'self' → logprob: -1.5128933191299438
    4. '       ' → logprob: -2.2628931999206543
    5. 'if' → logprob: -4.637893199920654
    6. '(self' → logprob: -5.012893199920654
    7. 's' → logprob: -6.137893199920654
    8. '(' → logprob: -6.512893199920654
    9. '#' → logprob: -6.637893199920654
    10. 'dist' → logprob: -6.762893199920654

Token 1338: '????' (ID: 25883)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6325909495353699
    2. 'self' → logprob: -1.8825910091400146
    3. 'Point' → logprob: -2.1325910091400146
    4. ' s' → logprob: -3.5075910091400146
    5. 'point' → logprob: -3.8825910091400146
    6. ' Point' → logprob: -4.1325907707214355
    7. 'segment' → logprob: -4.2575907707214355
    8. '(s' → logprob: -4.3825907707214355
    9. '(Point' → logprob: -4.3825907707214355
    10. 'distance' → logprob: -4.6325907707214355

Token 1339: '?' (ID: 30)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26883941888809204
    2. 'self' → logprob: -2.0188393592834473
    3. 's' → logprob: -2.6438393592834473
    4. 'def' → logprob: -4.518839359283447
    5. '(self' → logprob: -5.518839359283447
    6. '   ' → logprob: -5.768839359283447
    7. '(s' → logprob: -6.143839359283447
    8. '#' → logprob: -6.643839359283447
    9. 'Point' → logprob: -6.643839359283447
    10. 'class' → logprob: -6.893839359283447

Token 1340: '¢' (ID: 61242)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5159352421760559
    2. 'def' → logprob: -1.3909351825714111
    3. 'self' → logprob: -2.890935182571411
    4. '(self' → logprob: -3.515935182571411
    5. '(s' → logprob: -3.640935182571411
    6. 's' → logprob: -4.14093542098999
    7. '   ' → logprob: -4.26593542098999
    8. 'if' → logprob: -5.01593542098999
    9. 'class' → logprob: -7.01593542098999
    10. 'distance' → logprob: -7.14093542098999

Token 1341: '????' (ID: 25883)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7123841643333435
    2. '       ' → logprob: -1.4623842239379883
    3. 'self' → logprob: -2.2123842239379883
    4. 'def' → logprob: -2.5873842239379883
    5. ' s' → logprob: -3.0873842239379883
    6. 'if' → logprob: -4.087384223937988
    7. ' self' → logprob: -5.087384223937988
    8. ' def' → logprob: -5.462384223937988
    9. ' if' → logprob: -5.962384223937988
    10. 'return' → logprob: -5.962384223937988

Token 1342: '±' (ID: 32438)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.35249611735343933
    2. 's' → logprob: -1.7274961471557617
    3. 'self' → logprob: -2.4774961471557617
    4. '#' → logprob: -3.9774961471557617
    5. 'Point' → logprob: -5.102496147155762
    6. '       ' → logprob: -5.602496147155762
    7. ' abs' → logprob: -6.602496147155762
    8. '   ' → logprob: -7.102496147155762
    9. 'distance' → logprob: -7.477496147155762
    10. '.abs' → logprob: -7.727496147155762

Token 1343: '????' (ID: 25883)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39421966671943665
    2. 's' → logprob: -1.5192196369171143
    3. 'self' → logprob: -3.1442196369171143
    4. '(s' → logprob: -3.3942196369171143
    5. 'if' → logprob: -5.019219875335693
    6. ' s' → logprob: -5.519219875335693
    7. '   ' → logprob: -5.519219875335693
    8. 'Point' → logprob: -6.019219875335693
    9. ' if' → logprob: -6.394219875335693
    10. 'distance' → logprob: -6.519219875335693

Token 1344: '???
' (ID: 136325)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4715350568294525
    2. 'self' → logprob: -1.596535086631775
    3. 's' → logprob: -1.971535086631775
    4. 'return' → logprob: -4.7215352058410645
    5. ' s' → logprob: -5.4715352058410645
    6. '(self' → logprob: -5.9715352058410645
    7. 'def' → logprob: -5.9715352058410645
    8. ' self' → logprob: -6.2215352058410645
    9. 'Point' → logprob: -6.3465352058410645
    10. '      ' → logprob: -6.4715352058410645

Token 1345: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03325292095541954
    2. '   ' → logprob: -3.5332529544830322
    3. '       ' → logprob: -5.783252716064453
    4. ' if' → logprob: -8.033252716064453
    5. 'def' → logprob: -9.658252716064453
    6. 'dist' → logprob: -11.658252716064453
    7. 'return' → logprob: -11.783252716064453
    8. 'd' → logprob: -12.658252716064453
    9. '
' → logprob: -13.033252716064453
    10. '	if' → logprob: -13.283252716064453

Token 1346: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00845843181014061
    2. '   ' → logprob: -5.633458614349365
    3. 'return' → logprob: -6.008458614349365
    4. 'd' → logprob: -6.258458614349365
    5. '       ' → logprob: -8.258458137512207
    6. 'p' → logprob: -8.883458137512207
    7. 'dist' → logprob: -10.633458137512207
    8. 'def' → logprob: -11.008458137512207
    9. ' if' → logprob: -11.258458137512207
    10. 'a' → logprob: -12.008458137512207

Token 1347: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2653757631778717
    2. 'Vector' → logprob: -2.265375852584839
    3. 'is' → logprob: -2.640375852584839
    4. 'not' → logprob: -3.515375852584839
    5. 's' → logprob: -3.765375852584839
    6. 'type' → logprob: -5.76537561416626
    7. '(self' → logprob: -7.01537561416626
    8. ' isinstance' → logprob: -8.015376091003418
    9. '(not' → logprob: -9.140376091003418
    10. '   ' → logprob: -9.140376091003418

Token 1348: '.inter' (ID: 19028)
  Prédit: '.inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inter' → logprob: -0.06125079095363617
    2. '==' → logprob: -2.936250686645508
    3. '.p' → logprob: -6.061250686645508
    4. ' ==' → logprob: -6.436250686645508
    5. '.is' → logprob: -6.686250686645508
    6. '.__' → logprob: -7.561250686645508
    7. '.' → logprob: -8.436250686645508
    8. 'inter' → logprob: -9.311250686645508
    9. '.equal' → logprob: -9.436250686645508
    10. '.equals' → logprob: -9.936250686645508

Token 1349: 'sect' (ID: 16910)
  Prédit: 'sect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sect' → logprob: -3.128163257315464e-07
    2. 'sects' → logprob: -16.375
    3. 'def' → logprob: -17.125
    4. 'ect' → logprob: -17.125
    5. 'act' → logprob: -17.125
    6. '
' → logprob: -18.0
    7. 'set' → logprob: -18.25
    8. 'cept' → logprob: -18.625
    9. 's' → logprob: -18.75
    10. ' sect' → logprob: -19.25

Token 1350: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -5.621933451038785e-05
    2. 's' → logprob: -10.250056266784668
    3. '(' → logprob: -11.500056266784668
    4. ' (' → logprob: -11.625056266784668
    5. '(self' → logprob: -14.625056266784668
    6. ' s' → logprob: -14.750056266784668
    7. '(
' → logprob: -14.875056266784668
    8. 'self' → logprob: -15.500056266784668
    9. ',' → logprob: -16.62505531311035
    10. '```' → logprob: -16.62505531311035

Token 1351: '):
' (ID: 1883)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.253704309463501
    2. '):
' → logprob: -1.503704309463501
    3. '):' → logprob: -7.378704071044922
    4. '       ' → logprob: -7.753704071044922
    5. '(self' → logprob: -8.378704071044922
    6. '()):
' → logprob: -9.128704071044922
    7. 's' → logprob: -9.378704071044922
    8. ' s' → logprob: -9.753704071044922
    9. '           ' → logprob: -9.878704071044922
    10. '():
' → logprob: -10.253704071044922

Token 1352: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2556009292602539
    2. 'return' → logprob: -1.505600929260254
    3. '           ' → logprob: -5.880600929260254
    4. ' return' → logprob: -7.630600929260254
    5. '   ' → logprob: -7.880600929260254
    6. '	return' → logprob: -12.130600929260254
    7. ' ' → logprob: -13.255600929260254
    8. '
' → logprob: -15.380600929260254
    9. '```' → logprob: -15.380600929260254
    10. ':return' → logprob: -15.380600929260254

Token 1353: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00010616567305987701
    2. '           ' → logprob: -9.250105857849121
    3. '       ' → logprob: -12.000105857849121
    4. ' return' → logprob: -12.750105857849121
    5. '   ' → logprob: -13.875105857849121
    6. '               ' → logprob: -17.625106811523438
    7. '	return' → logprob: -18.000106811523438
    8. '0' → logprob: -18.125106811523438
    9. '         ' → logprob: -18.500106811523438
    10. ' ' → logprob: -18.625106811523438

Token 1354: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -18.75
    4. '           ' → logprob: -21.375
    5. 'float' → logprob: -21.75
    6. '       ' → logprob: -22.125
    7. '1' → logprob: -22.25
    8. '  ' → logprob: -22.5
    9. '.' → logprob: -22.5
    10. '	' → logprob: -22.875

Token 1355: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -19.25
    4. 'float' → logprob: -20.25
    5. '           ' → logprob: -22.375
    6. '.' → logprob: -22.5
    7. 'Point' → logprob: -22.5
    8. '       ' → logprob: -22.875
    9. '０' → logprob: -22.875
    10. '1' → logprob: -23.0

Token 1356: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0011170001234859228
    2. '
' → logprob: -7.00111722946167
    3. '       ' → logprob: -8.501116752624512
    4. '
' → logprob: -14.001116752624512
    5. '0' → logprob: -15.376116752624512
    6. '.
' → logprob: -15.376116752624512
    7. 'return' → logprob: -15.626116752624512
    8. '        
' → logprob: -15.626116752624512
    9. '[' → logprob: -15.751116752624512
    10. '   ' → logprob: -15.751116752624512

Token 1357: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. '.' → logprob: -13.750000953674316
    3. 'return' → logprob: -15.875000953674316
    4. 'float' → logprob: -17.250001907348633
    5. '5' → logprob: -18.750001907348633
    6. '   ' → logprob: -18.875001907348633
    7. '000' → logprob: -19.000001907348633
    8. 'else' → logprob: -19.000001907348633
    9. ' ' → logprob: -19.125001907348633
    10. '```' → logprob: -19.250001907348633

Token 1358: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004927450208924711
    2. '
' → logprob: -8.375493049621582
    3. 'return' → logprob: -8.625493049621582
    4. 'd' → logprob: -10.125493049621582
    5. 'distance' → logprob: -11.125493049621582
    6. '#' → logprob: -12.000493049621582
    7. '        
' → logprob: -12.125493049621582
    8. '   ' → logprob: -12.625493049621582
    9. 't' → logprob: -12.750493049621582
    10. 'dist' → logprob: -13.375493049621582

Token 1359: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001760148094035685
    2. '
' → logprob: -6.376760005950928
    3. '        
' → logprob: -10.126760482788086
    4. 'return' → logprob: -12.251760482788086
    5. 'else' → logprob: -12.376760482788086
    6. '   ' → logprob: -13.001760482788086
    7. '    
' → logprob: -13.626760482788086
    8. '#' → logprob: -14.126760482788086
    9. '           ' → logprob: -14.251760482788086
    10. ')
' → logprob: -14.751760482788086

Token 1360: ' d' (ID: 272)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.09018241614103317
    2. 'else' → logprob: -2.965182304382324
    3. 'd' (adapté à ' d') → logprob: -3.840182304382324
    4. '       ' → logprob: -4.840182304382324
    5. '   ' → logprob: -6.465182304382324
    6. 'if' → logprob: -6.965182304382324
    7. 'dist' → logprob: -7.215182304382324
    8. 'a' → logprob: -7.340182304382324
    9. 'l' → logprob: -7.465182304382324
    10. 'res' → logprob: -7.715182304382324

Token 1361: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3909740746021271
    2. 'ef' → logprob: -1.1409740447998047
    3. '=' → logprob: -6.640974044799805
    4. '   ' → logprob: -6.890974044799805
    5. ' =' → logprob: -7.015974044799805
    6. 'ist' → logprob: -7.890974044799805
    7. 'f' → logprob: -9.140974044799805
    8. 'p' → logprob: -9.265974044799805
    9. 'def' → logprob: -9.640974044799805
    10. 'a' → logprob: -9.765974044799805

Token 1362: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38688522577285767
    2. ' =' → logprob: -1.136885166168213
    3. '       ' → logprob: -12.261885643005371
    4. '   ' → logprob: -12.511885643005371
    5. ' ' → logprob: -12.886885643005371
    6. 'return' → logprob: -13.136885643005371
    7. '=self' → logprob: -14.636885643005371
    8. ' return' → logprob: -15.636885643005371
    9. '  ' → logprob: -15.886885643005371
    10. '     ' → logprob: -16.386884689331055

Token 1363: ' s' (ID: 265)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05322356894612312
    2. 's' → logprob: -3.0532236099243164
    3. ' self' → logprob: -5.428223609924316
    4. ' s' → logprob: -8.678223609924316
    5. 'abs' → logprob: -10.053223609924316
    6. 'float' → logprob: -11.803223609924316
    7. 'min' → logprob: -12.053223609924316
    8. ' ' → logprob: -13.303223609924316
    9. 'Point' → logprob: -13.803223609924316
    10. '	self' → logprob: -13.928223609924316

Token 1364: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.006422259844839573
    2. 'p' → logprob: -5.75642204284668
    3. 'distance' → logprob: -6.00642204284668
    4. 'istance' → logprob: -7.75642204284668
    5. 'self' → logprob: -8.25642204284668
    6. '.distance' → logprob: -10.25642204284668
    7. 'return' → logprob: -11.75642204284668
    8. '=' → logprob: -12.13142204284668
    9. '=p' → logprob: -12.38142204284668
    10. '(p' → logprob: -12.50642204284668

Token 1365: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. 'distance' → logprob: -12.750003814697266
    3. '2' → logprob: -14.375003814697266
    4. 'dist' → logprob: -14.625003814697266
    5. 'oint' → logprob: -16.500003814697266
    6. '１' → logprob: -16.625003814697266
    7. 'oints' → logprob: -17.625003814697266
    8. 'Distance' → logprob: -18.250003814697266
    9. '_distance' → logprob: -18.562503814697266
    10. 'd' → logprob: -18.562503814697266

Token 1366: '.distance' (ID: 65482)
  Prédit: '.distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.distance' → logprob: -0.0022818150464445353
    2. 'distance' → logprob: -6.127281665802002
    3. '-distance' → logprob: -10.00228214263916
    4. '.' → logprob: -11.12728214263916
    5. '
' → logprob: -11.75228214263916
    6. 'self' → logprob: -12.37728214263916
    7. ' distance' → logprob: -12.37728214263916
    8. '.s' → logprob: -12.75228214263916
    9. ').' → logprob: -12.75228214263916
    10. '-self' → logprob: -12.87728214263916

Token 1367: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011145677417516708
    2. 'self' → logprob: -4.51114559173584
    3. 'Segment' → logprob: -9.38614559173584
    4. '(S' → logprob: -11.88614559173584
    5. '(' → logprob: -12.38614559173584
    6. 's' → logprob: -13.88614559173584
    7. '(s' → logprob: -14.38614559173584
    8. ' self' → logprob: -14.63614559173584
    9. 'to' → logprob: -15.26114559173584
    10. '(Point' → logprob: -15.63614559173584

Token 1368: ')
' (ID: 446)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.029839692637324333
    2. '.s' → logprob: -4.029839515686035
    3. ')' → logprob: -5.279839515686035
    4. '.' → logprob: -5.779839515686035
    5. 'p' → logprob: -6.779839515686035
    6. 'self' → logprob: -6.904839515686035
    7. ')
' → logprob: -7.779839515686035
    8. 's' → logprob: -8.154839515686035
    9. '(self' → logprob: -9.029839515686035
    10. '(p' → logprob: -9.529839515686035

Token 1369: '       ' (ID: 309)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.10052376985549927
    2. '       ' → logprob: -2.3505237102508545
    3. '   ' → logprob: -8.600523948669434
    4. ' d' → logprob: -9.100523948669434
    5. ' ' → logprob: -11.600523948669434
    6. '	' → logprob: -12.100523948669434
    7. '	d' → logprob: -12.725523948669434
    8. 's' → logprob: -14.100523948669434
    9. 'return' → logprob: -14.225523948669434
    10. '
' → logprob: -14.225523948669434

Token 1370: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.0015635426389053464
    2. '       ' → logprob: -6.501563549041748
    3. ' d' → logprob: -9.75156307220459
    4. '   ' → logprob: -13.12656307220459
    5. '	d' → logprob: -14.62656307220459
    6. ' ' → logprob: -15.00156307220459
    7. '	' → logprob: -16.251564025878906
    8. '
' → logprob: -16.876564025878906
    9. '      ' → logprob: -16.876564025878906
    10. '     ' → logprob: -17.251564025878906

Token 1371: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.576042890548706
    2. '2' → logprob: -0.826042890548706
    3. 'return' → logprob: -9.951043128967285
    4. '   ' → logprob: -10.951043128967285
    5. 'istance' → logprob: -11.076043128967285
    6. 'ist' → logprob: -12.076043128967285
    7. '       ' → logprob: -12.076043128967285
    8. 'self' → logprob: -12.451043128967285
    9. 'p' → logprob: -12.951043128967285
    10. ' ' → logprob: -13.451043128967285

Token 1372: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931670308113098
    2. ' =' → logprob: -0.6931670308113098
    3. 'd' → logprob: -11.318166732788086
    4. 's' → logprob: -12.568166732788086
    5. '       ' → logprob: -13.568166732788086
    6. '=s' → logprob: -14.068166732788086
    7. ' ' → logprob: -14.443166732788086
    8. ' s' → logprob: -14.693166732788086
    9. '   ' → logprob: -15.193166732788086
    10. 'return' → logprob: -15.818166732788086

Token 1373: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0003281944082118571
    2. ' s' → logprob: -8.500328063964844
    3. 'self' → logprob: -9.000328063964844
    4. '   ' → logprob: -14.250328063964844
    5. ' self' → logprob: -14.500328063964844
    6. '	s' → logprob: -16.625328063964844
    7. '       ' → logprob: -16.750328063964844
    8. ' ' → logprob: -17.000328063964844
    9. '  ' → logprob: -18.000328063964844
    10. '    ' → logprob: -18.375328063964844

Token 1374: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.00021903318702243268
    2. 'p' → logprob: -8.875219345092773
    3. 'self' → logprob: -9.500219345092773
    4. 's' → logprob: -13.250219345092773
    5. '.' → logprob: -14.000219345092773
    6. '.s' → logprob: -14.000219345092773
    7. '   ' → logprob: -15.375219345092773
    8. '1' → logprob: -16.250219345092773
    9. '```' → logprob: -16.500219345092773
    10. '	p' → logprob: -16.625219345092773

Token 1375: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20141683518886566
    2. '2' → logprob: -1.7014168500900269
    3. 'p' → logprob: -12.826416969299316
    4. 't' → logprob: -15.951416969299316
    5. '.p' → logprob: -16.076416015625
    6. 'oint' → logprob: -16.326416015625
    7. 'oints' → logprob: -16.326416015625
    8. 's' → logprob: -16.888916015625
    9. 'r' → logprob: -17.388916015625
    10. 'a' → logprob: -17.763916015625

Token 1376: '.distance' (ID: 65482)
  Prédit: '.distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.distance' → logprob: -0.06251050531864166
    2. 'distance' → logprob: -2.8125104904174805
    3. 'self' → logprob: -7.9375104904174805
    4. ' =' → logprob: -9.43751049041748
    5. ' distance' → logprob: -9.81251049041748
    6. '.p' → logprob: -10.56251049041748
    7. 'Distance' → logprob: -11.81251049041748
    8. '   ' → logprob: -12.68751049041748
    9. '.self' → logprob: -12.93751049041748
    10. ' self' → logprob: -13.06251049041748

Token 1377: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.857719275401905e-05
    2. 'self' → logprob: -10.250038146972656
    3. '(' → logprob: -12.750038146972656
    4. '(
' → logprob: -15.250038146972656
    5. '(s' → logprob: -17.000038146972656
    6. '[self' → logprob: -18.125038146972656
    7. ' self' → logprob: -19.375038146972656
    8. '	self' → logprob: -19.875038146972656
    9. '
' → logprob: -20.125038146972656
    10. ' (' → logprob: -20.625038146972656

Token 1378: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10583949089050293
    2. '       ' → logprob: -2.480839490890503
    3. ')' → logprob: -4.105839729309082
    4. ')
' → logprob: -8.605839729309082
    5. 'd' → logprob: -9.855839729309082
    6. 'self' → logprob: -11.355839729309082
    7. ')d' → logprob: -12.230839729309082
    8. 'def' → logprob: -12.730839729309082
    9. ')

' → logprob: -12.730839729309082
    10. '(self' → logprob: -12.980839729309082

Token 1379: '       ' (ID: 309)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.13714168965816498
    2. '       ' → logprob: -2.137141704559326
    3. ' d' → logprob: -4.887141704559326
    4. '   ' → logprob: -6.012141704559326
    5. '	d' → logprob: -9.262141227722168
    6. ' ' → logprob: -10.387141227722168
    7. '```' → logprob: -11.262141227722168
    8. 'return' → logprob: -11.387141227722168
    9. '	' → logprob: -11.762141227722168
    10. ' return' → logprob: -12.637141227722168

Token 1380: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.000508591765537858
    2. '       ' → logprob: -7.750508785247803
    3. '   ' → logprob: -10.125508308410645
    4. ' d' → logprob: -10.625508308410645
    5. 'return' → logprob: -11.375508308410645
    6. ' ' → logprob: -13.625508308410645
    7. '	d' → logprob: -15.125508308410645
    8. '  ' → logprob: -15.375508308410645
    9. '
' → logprob: -15.500508308410645
    10. '      ' → logprob: -16.87550926208496

Token 1381: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.547789674485102e-05
    2. '3' → logprob: -10.375035285949707
    3. ' ' → logprob: -13.500035285949707
    4. '   ' → logprob: -13.500035285949707
    5. 'self' → logprob: -14.750035285949707
    6. 'istance' → logprob: -15.125035285949707
    7. ' =' → logprob: -15.250035285949707
    8. '１' → logprob: -15.875035285949707
    9. 'ist' → logprob: -16.000036239624023
    10. '=' → logprob: -16.375036239624023

Token 1382: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12700390815734863
    2. ' =' → logprob: -2.1270039081573486
    3. '       ' → logprob: -9.50200366973877
    4. '   ' → logprob: -14.75200366973877
    5. 'd' → logprob: -15.25200366973877
    6. '=self' → logprob: -15.50200366973877
    7. ' ' → logprob: -15.87700366973877
    8. 'self' → logprob: -16.377004623413086
    9. '	' → logprob: -16.877004623413086
    10. '        ' → logprob: -17.127004623413086

Token 1383: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0024762547109276056
    2. ' self' → logprob: -6.002476215362549
    3. 's' → logprob: -14.877476692199707
    4. '   ' → logprob: -15.752476692199707
    5. ' ' → logprob: -16.50247573852539
    6. '	self' → logprob: -17.75247573852539
    7. '       ' → logprob: -18.50247573852539
    8. '(self' → logprob: -19.12747573852539
    9. ' s' → logprob: -19.50247573852539
    10. 'Self' → logprob: -20.12747573852539

Token 1384: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0002719449403230101
    2. 'p' → logprob: -8.250271797180176
    3. '.' → logprob: -11.750271797180176
    4. 's' → logprob: -14.500271797180176
    5. ' .' → logprob: -14.750271797180176
    6. 'self' → logprob: -14.875271797180176
    7. '   ' → logprob: -14.875271797180176
    8. '
' → logprob: -15.000271797180176
    9. 'd' → logprob: -15.500271797180176
    10. ' ' → logprob: -15.875271797180176

Token 1385: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. 'distance' → logprob: -13.250001907348633
    3. 'oint' → logprob: -16.375001907348633
    4. '１' → logprob: -17.125001907348633
    5. 'Distance' → logprob: -17.125001907348633
    6. 'p' → logprob: -17.250001907348633
    7. 'dist' → logprob: -17.562501907348633
    8. '.distance' → logprob: -17.625001907348633
    9. 'oints' → logprob: -18.250001907348633
    10. '2' → logprob: -18.375001907348633

Token 1386: '.distance' (ID: 65482)
  Prédit: '.distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.distance' → logprob: -0.005234356038272381
    2. 'distance' → logprob: -5.255234241485596
    3. 'Distance' → logprob: -15.380234718322754
    4. '(distance' → logprob: -15.505234718322754
    5. ' distance' → logprob: -16.255233764648438
    6. '.' → logprob: -17.380233764648438
    7. ' .' → logprob: -17.380233764648438
    8. 'd' → logprob: -17.630233764648438
    9. '   ' → logprob: -18.380233764648438
    10. 's' → logprob: -18.505233764648438

Token 1387: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -8.542423165636137e-05
    2. 's' → logprob: -9.375085830688477
    3. '(' → logprob: -15.125085830688477
    4. '(
' → logprob: -16.000085830688477
    5. '       ' → logprob: -17.125085830688477
    6. '   ' → logprob: -17.250085830688477
    7. ' s' → logprob: -17.375085830688477
    8. '(self' → logprob: -17.500085830688477
    9. '`s' → logprob: -18.500085830688477
    10. 'self' → logprob: -18.875085830688477

Token 1388: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07942626625299454
    2. ')
' → logprob: -2.5794262886047363
    3. '       ' → logprob: -8.454425811767578
    4. '.p' → logprob: -9.204425811767578
    5. ')p' → logprob: -9.329425811767578
    6. '   ' → logprob: -9.954425811767578
    7. ')

' → logprob: -10.204425811767578
    8. 'p' → logprob: -10.829425811767578
    9. ')
' → logprob: -11.579425811767578
    10. '3' → logprob: -12.579425811767578

Token 1389: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08905365318059921
    2. 'd' → logprob: -2.4640536308288574
    3. ' d' → logprob: -9.214054107666016
    4. '   ' → logprob: -11.964054107666016
    5. '<|end|>' → logprob: -13.464054107666016
    6. ' ' → logprob: -13.714054107666016
    7. '	d' → logprob: -14.089054107666016
    8. ',d' → logprob: -14.089054107666016
    9. '```' → logprob: -14.214054107666016
    10. ')d' → logprob: -14.589054107666016

Token 1390: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.0012564226053655148
    2. ' d' → logprob: -7.001256465911865
    3. '       ' → logprob: -8.001255989074707
    4. '   ' → logprob: -11.876255989074707
    5. '	d' → logprob: -12.876255989074707
    6. ' ' → logprob: -16.626256942749023
    7. '      ' → logprob: -17.126256942749023
    8. '     ' → logprob: -17.251256942749023
    9. '  ' → logprob: -17.626256942749023
    10. '    ' → logprob: -18.501256942749023

Token 1391: '4' (ID: 19)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.07895500212907791
    2. '4' → logprob: -2.5789549350738525
    3. '1' → logprob: -9.828954696655273
    4. '2' → logprob: -11.953954696655273
    5. '=' → logprob: -13.453954696655273
    6. '.p' → logprob: -14.078954696655273
    7. ' =' → logprob: -14.578954696655273
    8. '   ' → logprob: -14.703954696655273
    9. 'self' → logprob: -15.078954696655273
    10. '=p' → logprob: -15.328954696655273

Token 1392: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029769811779260635
    2. ' =' → logprob: -3.5297698974609375
    3. 's' → logprob: -11.529769897460938
    4. '       ' → logprob: -12.404769897460938
    5. ' s' → logprob: -12.654769897460938
    6. '=s' → logprob: -13.279769897460938
    7. '   ' → logprob: -15.029769897460938
    8. ' ' → logprob: -16.279769897460938
    9. 'p' → logprob: -17.779769897460938
    10. '           ' → logprob: -17.904769897460938

Token 1393: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011791023425757885
    2. ' self' → logprob: -4.761791229248047
    3. 's' → logprob: -5.761791229248047
    4. ' s' → logprob: -10.886791229248047
    5. '       ' → logprob: -12.011791229248047
    6. '   ' → logprob: -14.136791229248047
    7. '	self' → logprob: -15.886791229248047
    8. '(self' → logprob: -16.261791229248047
    9. ' ' → logprob: -17.011791229248047
    10. '           ' → logprob: -17.386791229248047

Token 1394: '.p' (ID: 1201)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5759726762771606
    2. '.p' → logprob: -0.8259726762771606
    3. 'self' → logprob: -11.700972557067871
    4. 's' → logprob: -11.825972557067871
    5. ' p' → logprob: -12.575972557067871
    6. '1' → logprob: -12.825972557067871
    7. '2' → logprob: -13.075972557067871
    8. '0' → logprob: -13.200972557067871
    9. '   ' → logprob: -13.200972557067871
    10. '
' → logprob: -13.950972557067871

Token 1395: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07226689159870148
    2. '1' → logprob: -2.6972668170928955
    3. 'p' → logprob: -6.072267055511475
    4. '.p' → logprob: -10.822266578674316
    5. '```' → logprob: -14.322266578674316
    6. '_p' → logprob: -14.822266578674316
    7. '<p' → logprob: -15.447266578674316
    8. '
' → logprob: -15.822266578674316
    9. '	p' → logprob: -15.822266578674316
    10. ' p' → logprob: -16.322267532348633

Token 1396: '.distance' (ID: 65482)
  Prédit: '.distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.distance' → logprob: -0.0031840058509260416
    2. 'distance' → logprob: -5.753183841705322
    3. '(distance' → logprob: -12.37818431854248
    4. ' distance' → logprob: -13.37818431854248
    5. 'Distance' → logprob: -15.37818431854248
    6. '_distance' → logprob: -16.003183364868164
    7. '.Distance' → logprob: -16.628183364868164
    8. '.' → logprob: -17.253183364868164
    9. '-distance' → logprob: -17.378183364868164
    10. '距离' → logprob: -17.878183364868164

Token 1397: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -5.848420551046729e-05
    2. 's' → logprob: -9.7500581741333
    3. '(' → logprob: -16.000059127807617
    4. '(self' → logprob: -17.875059127807617
    5. ' s' → logprob: -18.500059127807617
    6. '(
' → logprob: -18.500059127807617
    7. 'self' → logprob: -21.125059127807617
    8. '(S' → logprob: -21.250059127807617
    9. '[s' → logprob: -21.500059127807617
    10. ' (' → logprob: -21.875059127807617

Token 1398: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003207181114703417
    2. ')
' → logprob: -5.753207206726074
    3. '       ' → logprob: -11.128207206726074
    4. ')
' → logprob: -11.503207206726074
    5. ' )' → logprob: -13.753207206726074
    6. ')return' → logprob: -13.753207206726074
    7. ')s' → logprob: -14.503207206726074
    8. ')#' → logprob: -14.753207206726074
    9. ')

' → logprob: -15.128207206726074
    10. '))' → logprob: -15.378207206726074

Token 1399: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6470839381217957
    2. '   ' → logprob: -0.7720839381217957
    3. 'return' → logprob: -5.022083759307861
    4. ' return' → logprob: -5.647083759307861
    5. '	return' → logprob: -5.897083759307861
    6. '```' → logprob: -7.022083759307861
    7. ':return' → logprob: -8.89708423614502
    8. '
' → logprob: -9.27208423614502
    9. 'import' → logprob: -9.39708423614502
    10. '``' → logprob: -9.89708423614502

Token 1400: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01229065377265215
    2. '       ' → logprob: -4.5122904777526855
    3. ' return' → logprob: -6.7622904777526855
    4. '
' → logprob: -10.137290954589844
    5. '   ' → logprob: -10.137290954589844
    6. '	return' → logprob: -12.262290954589844
    7. '        
' → logprob: -15.387290954589844
    8. 'eturn' → logprob: -15.512290954589844
    9. '```' → logprob: -15.762290954589844
    10. ':return' → logprob: -16.012290954589844

Token 1401: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.023265045136213303
    2. ' min' → logprob: -3.7732651233673096
    3. '	min' → logprob: -11.02326488494873
    4. 'max' → logprob: -13.02326488494873
    5. '   ' → logprob: -13.89826488494873
    6. ' ' → logprob: -16.648265838623047
    7. '  ' → logprob: -16.773265838623047
    8. '(min' → logprob: -17.273265838623047
    9. 'minimum' → logprob: -17.648265838623047
    10. '
' → logprob: -18.148265838623047

Token 1402: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -7.600714161526412e-05
    2. '(min' → logprob: -9.500076293945312
    3. '(' → logprob: -14.500076293945312
    4. '([' → logprob: -15.125076293945312
    5. 'd' → logprob: -15.375076293945312
    6. '(
' → logprob: -16.125076293945312
    7. '((' → logprob: -17.500076293945312
    8. '(max' → logprob: -17.750076293945312
    9. 'min' → logprob: -18.000076293945312
    10. '(distance' → logprob: -19.875076293945312

Token 1403: '1' (ID: 16)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.005383399315178394
    2. 'd' → logprob: -5.630383491516113
    3. '1' → logprob: -7.005383491516113
    4. '[d' → logprob: -8.255383491516113
    5. '(' → logprob: -8.505383491516113
    6. '([' → logprob: -8.880383491516113
    7. ' d' → logprob: -9.005383491516113
    8. '(
' → logprob: -9.755383491516113
    9. '	d' → logprob: -10.255383491516113
    10. ')d' → logprob: -10.380383491516113

Token 1404: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004150580149143934
    2. ',d' → logprob: -5.754150390625
    3. ' ,' → logprob: -7.129150390625
    4. '(d' → logprob: -8.879150390625
    5. ',
' → logprob: -11.004150390625
    6. '(),' → logprob: -11.629150390625
    7. '(' → logprob: -13.004150390625
    8. '   ' → logprob: -13.379150390625
    9. 'd' → logprob: -13.754150390625
    10. '(
' → logprob: -14.754150390625

Token 1405: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0015053401002660394
    2. ' d' → logprob: -6.501505374908447
    3. 'min' → logprob: -13.626504898071289
    4. '   ' → logprob: -14.376504898071289
    5. '       ' → logprob: -14.376504898071289
    6. '	d' → logprob: -15.251504898071289
    7. ' min' → logprob: -15.501504898071289
    8. '     ' → logprob: -17.12650489807129
    9. '    ' → logprob: -17.25150489807129
    10. '  ' → logprob: -17.50150489807129

Token 1406: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.017679233103990555
    2. '4' → logprob: -4.392679214477539
    3. '3' → logprob: -5.267679214477539
    4. 'd' → logprob: -14.267679214477539
    5. '1' → logprob: -16.51767921447754
    6. '
' → logprob: -17.14267921447754
    7. '(d' → logprob: -17.14267921447754
    8. 'min' → logprob: -17.76767921447754
    9. 'max' → logprob: -19.08017921447754
    10. 'return' → logprob: -19.20517921447754

Token 1407: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029855482280254364
    2. ',d' → logprob: -5.87798547744751
    3. ' ,' → logprob: -8.752985954284668
    4. 'd' → logprob: -10.877985954284668
    5. ',
' → logprob: -13.127985954284668
    6. '       ' → logprob: -14.377985954284668
    7. '   ' → logprob: -14.502985954284668
    8. '(d' → logprob: -14.877985954284668
    9. ' d' → logprob: -15.627985954284668
    10. '(),' → logprob: -16.87798500061035

Token 1408: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.15310683415737e-05
    2. ' d' → logprob: -10.750021934509277
    3. '       ' → logprob: -19.12502098083496
    4. '   ' → logprob: -19.37502098083496
    5. '	d' → logprob: -19.37502098083496
    6. '           ' → logprob: -21.50002098083496
    7. '
' → logprob: -21.75002098083496
    8. '     ' → logprob: -21.75002098083496
    9. ' ' → logprob: -22.12502098083496
    10. 'min' → logprob: -22.12502098083496

Token 1409: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. '۳' → logprob: -17.875
    4. '4' → logprob: -18.25
    5. '３' → logprob: -18.5
    6. '```' → logprob: -18.6875
    7. ')' → logprob: -18.9375
    8. '' → logprob: -19.1875
    9. '३' → logprob: -19.1875
    10. '৩' → logprob: -19.25

Token 1410: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009231308358721435
    2. ' ,' → logprob: -7.625923156738281
    3. ',d' → logprob: -7.750923156738281
    4. 'd' → logprob: -12.375923156738281
    5. ',
' → logprob: -14.875923156738281
    6. '   ' → logprob: -16.87592315673828
    7. ' d' → logprob: -17.00092315673828
    8. ')' → logprob: -17.12592315673828
    9. ' ' → logprob: -18.00092315673828
    10. '       ' → logprob: -18.25092315673828

Token 1411: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -7.493430894101039e-05
    2. ' d' → logprob: -9.500075340270996
    3. '	d' → logprob: -17.50007438659668
    4. '   ' → logprob: -18.50007438659668
    5. '       ' → logprob: -18.62507438659668
    6. '  ' → logprob: -20.12507438659668
    7. ')d' → logprob: -20.50007438659668
    8. '     ' → logprob: -20.50007438659668
    9. ' ' → logprob: -20.75007438659668
    10. '(d' → logprob: -20.87507438659668

Token 1412: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -6.704273118884885e-07
    2. '４' → logprob: -15.625000953674316
    3. '۴' → logprob: -16.375
    4. '3' → logprob: -16.9375
    5. ' ' → logprob: -17.125
    6. '' → logprob: -17.25
    7. '```' → logprob: -17.375
    8. '४' → logprob: -17.4375
    9. '٤' → logprob: -17.4375
    10. '৪' → logprob: -17.4375

Token 1413: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004341261519584805
    2. ')
' → logprob: -8.000433921813965
    3. '       ' → logprob: -10.125433921813965
    4. '   ' → logprob: -10.375433921813965
    5. '())' → logprob: -11.375433921813965
    6. ')

' → logprob: -11.625433921813965
    7. '()' → logprob: -12.125433921813965
    8. ' )' → logprob: -14.500433921813965
    9. ')
' → logprob: -14.625433921813965
    10. ' ' → logprob: -16.37543487548828

Token 1414: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00331852282397449
    2. 'if' → logprob: -5.7533183097839355
    3. '#' → logprob: -9.253318786621094
    4. 'class' → logprob: -11.128318786621094
    5. '<|end|>' → logprob: -12.003318786621094
    6. 'import' → logprob: -12.253318786621094
    7. 'n' → logprob: -12.378318786621094
    8. ' def' → logprob: -12.503318786621094
    9. '```' → logprob: -12.878318786621094
    10. 'ndef' → logprob: -13.628318786621094

Token 1415: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012757786549627781
    2. 'if' → logprob: -4.512757778167725
    3. 'n' → logprob: -7.012757778167725
    4. '#' → logprob: -7.637757778167725
    5. 'import' → logprob: -9.137758255004883
    6. 'N' → logprob: -9.887758255004883
    7. 'class' → logprob: -10.012758255004883
    8. 'epsilon' → logprob: -10.012758255004883
    9. 'input' → logprob: -11.137758255004883
    10. '   ' → logprob: -11.262758255004883

Token 1416: 'classmethod' (ID: 64680)
  Prédit: 'staticmethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.2898985743522644
    2. 'property' → logprob: -1.5398986339569092
    3. 'classmethod' → logprob: -3.289898633956909
    4. ' property' → logprob: -16.789897918701172
    5. 'Property' → logprob: -18.289897918701172
    6. 'static' → logprob: -18.414897918701172
    7. 'abstract' → logprob: -18.539897918701172
    8. 'class' → logprob: -18.914897918701172
    9. '__' → logprob: -19.539897918701172
    10. 'abs' → logprob: -20.414897918701172

Token 1417: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0026648349594324827
    2. '   ' → logprob: -6.002665042877197
    3. ' def' → logprob: -8.627664566040039
    4. '
' → logprob: -11.627664566040039
    5. '	def' → logprob: -13.877664566040039
    6. 'from' → logprob: -16.37766456604004
    7. '@' → logprob: -18.00266456604004
    8. '#' → logprob: -18.37766456604004
    9. ' ' → logprob: -18.37766456604004
    10. '(' → logprob: -19.12766456604004

Token 1418: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.551721889991313e-05
    2. '   ' → logprob: -9.750065803527832
    3. ' def' → logprob: -11.875065803527832
    4. '	def' → logprob: -15.875065803527832
    5. 'from' → logprob: -17.250064849853516
    6. '
' → logprob: -18.875064849853516
    7. '#' → logprob: -19.125064849853516
    8. '(def' → logprob: -20.125064849853516
    9. 'class' → logprob: -21.375064849853516
    10. ' ' → logprob: -21.500064849853516

Token 1419: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -7.040457421680912e-05
    2. '
' → logprob: -9.750070571899414
    3. 'from' → logprob: -11.375070571899414
    4. ' def' → logprob: -15.125070571899414
    5. '   ' → logprob: -16.125070571899414
    6. 'staticmethod' → logprob: -17.375070571899414
    7. '    
' → logprob: -17.500070571899414
    8. ' ' → logprob: -17.875070571899414
    9. 'classmethod' → logprob: -18.750070571899414
    10. '  
' → logprob: -18.875070571899414

Token 1420: ' is' (ID: 382)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2031179815530777
    2. 'from' → logprob: -1.7031179666519165
    3. 'classmethod' → logprob: -7.703117847442627
    4. 'vertical' → logprob: -8.328118324279785
    5. 'unit' → logprob: -8.453118324279785
    6. 'staticmethod' → logprob: -8.578118324279785
    7. 'parallel' → logprob: -9.078118324279785
    8. 'factory' → logprob: -9.328118324279785
    9. 'per' → logprob: -9.703118324279785
    10. '
' → logprob: -10.078118324279785

Token 1421: '_' (ID: 62)
  Prédit: 'parallel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parallel' → logprob: -0.9097859859466553
    2. '_' → logprob: -1.9097859859466553
    3. '_parallel' → logprob: -1.9097859859466553
    4. '_inter' → logprob: -1.9097859859466553
    5. 'orth' → logprob: -2.6597859859466553
    6. 'inter' → logprob: -3.1597859859466553
    7. '_point' → logprob: -4.784786224365234
    8. 'Parallel' → logprob: -5.534786224365234
    9. 'vertical' → logprob: -6.034786224365234
    10. 'intersection' → logprob: -6.034786224365234

Token 1422: 'orth' (ID: 2909)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.4417186677455902
    2. 'parallel' → logprob: -1.6917186975479126
    3. 'orth' → logprob: -1.8167186975479126
    4. 'intersection' → logprob: -5.691718578338623
    5. 'segment' → logprob: -6.816718578338623
    6. 'counter' → logprob: -6.941718578338623
    7. 'proper' → logprob: -7.316718578338623
    8. 'vertical' → logprob: -7.691718578338623
    9. 'rectangle' → logprob: -7.691718578338623
    10. 'per' → logprob: -7.816718578338623

Token 1423: 'ogonal' (ID: 127861)
  Prédit: 'ogonal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ogonal' → logprob: -1.1756367712223437e-05
    2. 'agonal' → logprob: -11.750011444091797
    3. '```' → logprob: -13.125011444091797
    4. 'og' → logprob: -14.375011444091797
    5. 'ogona' → logprob: -15.125011444091797
    6. '   ' → logprob: -15.125011444091797
    7. 'class' → logprob: -15.625011444091797
    8. '_parallel' → logprob: -16.625011444091797
    9. '(' → logprob: -16.750011444091797
    10. 'ogo' → logprob: -17.000011444091797

Token 1424: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -3.6789137084269896e-05
    2. '(' → logprob: -10.37503719329834
    3. '   ' → logprob: -13.12503719329834
    4. '(cl' → logprob: -13.12503719329834
    5. '(self' → logprob: -15.00003719329834
    6. '(clazz' → logprob: -15.37503719329834
    7. '(
' → logprob: -15.62503719329834
    8. '(class' → logprob: -15.62503719329834
    9. '(c' → logprob: -15.87503719329834
    10. '(def' → logprob: -15.87503719329834

Token 1425: ',' (ID: 11)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.002362563507631421
    2. ',' → logprob: -6.6273627281188965
    3. '   ' → logprob: -7.1273627281188965
    4. '(' → logprob: -8.502362251281738
    5. ' (' → logprob: -12.377362251281738
    6. ')(' → logprob: -12.377362251281738
    7. '(self' → logprob: -12.502362251281738
    8. '(a' → logprob: -12.627362251281738
    9. '(def' → logprob: -12.877362251281738
    10. 'def' → logprob: -13.002362251281738

Token 1426: ' s' (ID: 265)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3444768190383911
    2. 's' → logprob: -1.4694768190383911
    3. 'self' → logprob: -3.3444766998291016
    4. 'cls' → logprob: -3.8444766998291016
    5. '   ' → logprob: -6.719476699829102
    6. 'seg' → logprob: -7.094476699829102
    7. ' s' → logprob: -7.219476699829102
    8. 'l' → logprob: -7.594476699829102
    9. ' a' → logprob: -7.594476699829102
    10. 'segment' → logprob: -8.469476699829102

Token 1427: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -6.611323624383658e-05
    2. ',s' → logprob: -10.375065803527832
    3. '   ' → logprob: -10.500065803527832
    4. '(cls' → logprob: -12.375065803527832
    5. ' ,' → logprob: -13.625065803527832
    6. '       ' → logprob: -14.000065803527832
    7. 'cls' → logprob: -15.000065803527832
    8. ',S' → logprob: -15.750065803527832
    9. 's' → logprob: -16.00006675720215
    10. ',class' → logprob: -16.25006675720215

Token 1428: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.881560041918419e-05
    2. ',s' → logprob: -10.875039100646973
    3. ' ,' → logprob: -11.375039100646973
    4. '   ' → logprob: -11.875039100646973
    5. 's' → logprob: -14.750039100646973
    6. '       ' → logprob: -15.125039100646973
    7. '(cls' → logprob: -15.875039100646973
    8. ',class' → logprob: -15.875039100646973
    9. '):
' → logprob: -16.250038146972656
    10. ' s' → logprob: -16.500038146972656

Token 1429: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.22547942399978638
    2. ' s' → logprob: -1.6004793643951416
    3. '   ' → logprob: -9.850479125976562
    4. ' ' → logprob: -11.850479125976562
    5. '  ' → logprob: -12.975479125976562
    6. '    ' → logprob: -13.475479125976562
    7. '	s' → logprob: -13.850479125976562
    8. '       ' → logprob: -14.100479125976562
    9. '):
' → logprob: -14.850479125976562
    10. '     ' → logprob: -15.350479125976562

Token 1430: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.639096970204264e-05
    2. '1' → logprob: -9.250096321105957
    3. 's' → logprob: -16.625097274780273
    4. ')' → logprob: -17.375097274780273
    5. 'ection' → logprob: -17.875097274780273
    6. 'egment' → logprob: -18.000097274780273
    7. '   ' → logprob: -18.125097274780273
    8. '₂' → logprob: -18.500097274780273
    9. ' ' → logprob: -18.625097274780273
    10. '２' → logprob: -18.750097274780273

Token 1431: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001085497424355708
    2. ',s' → logprob: -9.62510871887207
    3. '   ' → logprob: -10.37510871887207
    4. ' ,' → logprob: -12.00010871887207
    5. '):
' → logprob: -12.75010871887207
    6. '       ' → logprob: -13.75010871887207
    7. '):' → logprob: -14.75010871887207
    8. ' s' → logprob: -15.50010871887207
    9. '(cls' → logprob: -16.00010871887207
    10. 's' → logprob: -16.37510871887207

Token 1432: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011069540778407827
    2. '   ' → logprob: -9.875110626220703
    3. 'return' → logprob: -10.750110626220703
    4. ' return' → logprob: -10.875110626220703
    5. 'def' → logprob: -11.125110626220703
    6. ' def' → logprob: -13.375110626220703
    7. 'Vector' → logprob: -14.500110626220703
    8. '(' → logprob: -14.875110626220703
    9. '```' → logprob: -15.250110626220703
    10. '           ' → logprob: -15.375110626220703

Token 1433: ' a' (ID: 261)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07686875015497208
    2. '   ' → logprob: -3.076868772506714
    3. 'v' → logprob: -4.326868534088135
    4. '       ' → logprob: -4.326868534088135
    5. ' return' → logprob: -6.951868534088135
    6. 'def' → logprob: -8.701869010925293
    7. 'a' (adapté à ' a') → logprob: -8.826869010925293
    8. 'vec' → logprob: -9.326869010925293
    9. 'Vector' → logprob: -10.076869010925293
    10. 'dx' → logprob: -10.201869010925293

Token 1434: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2860346734523773
    2. '=' → logprob: -1.4110347032546997
    3. '   ' → logprob: -5.41103458404541
    4. 'return' → logprob: -8.53603458404541
    5. ',' → logprob: -10.16103458404541
    6. '=(' → logprob: -10.41103458404541
    7. '       ' → logprob: -10.66103458404541
    8. ' return' → logprob: -10.66103458404541
    9. 's' → logprob: -11.28603458404541
    10. ' ' → logprob: -11.53603458404541

Token 1435: ' Vector' (ID: 8764)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.28127577900886536
    2. 'Vector' → logprob: -1.406275749206543
    3. '(s' → logprob: -10.156275749206543
    4. ' Vector' → logprob: -10.156275749206543
    5. ' s' → logprob: -10.656275749206543
    6. '(Vector' → logprob: -11.031275749206543
    7. 'Point' → logprob: -13.531275749206543
    8. 'Vectors' → logprob: -13.781275749206543
    9. 'Vec' → logprob: -14.031275749206543
    10. 'Segment' → logprob: -14.031275749206543

Token 1436: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -9.014684110297821e-06
    2. '(' → logprob: -12.375008583068848
    3. 's' → logprob: -13.750008583068848
    4. '(cls' → logprob: -14.125008583068848
    5. '.from' → logprob: -14.375008583068848
    6. 'cls' → logprob: -14.500008583068848
    7. 'def' → logprob: -14.875008583068848
    8. '   ' → logprob: -15.125008583068848
    9. '((' → logprob: -15.250008583068848
    10. '.s' → logprob: -15.750008583068848

Token 1437: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6961588859558105
    2. 's' → logprob: -0.6961588859558105
    3. '.s' → logprob: -6.4461588859558105
    4. '(s' → logprob: -6.6961588859558105
    5. ' s' → logprob: -9.446159362792969
    6. 'p' → logprob: -9.571159362792969
    7. '{s' → logprob: -11.571159362792969
    8. '(' → logprob: -12.196159362792969
    9. '
' → logprob: -12.696159362792969
    10. 'a' → logprob: -12.821159362792969

Token 1438: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.05685723200440407
    2. 'p' → logprob: -3.3068573474884033
    3. '(s' → logprob: -4.431857109069824
    4. 's' → logprob: -5.681857109069824
    5. '.s' → logprob: -5.806857109069824
    6. 'a' → logprob: -8.806857109069824
    7. '(' → logprob: -9.806857109069824
    8. '1' → logprob: -10.306857109069824
    9. '(p' → logprob: -10.556857109069824
    10. '#' → logprob: -11.181857109069824

Token 1439: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015872348740231246
    2. '2' → logprob: -8.750158309936523
    3. '
' → logprob: -15.875158309936523
    4. 'p' → logprob: -16.750158309936523
    5. '１' → logprob: -17.312658309936523
    6. '```' → logprob: -17.750158309936523
    7. '

' → logprob: -18.312658309936523
    8. '{' → logprob: -18.437658309936523
    9. '   ' → logprob: -18.812658309936523
    10. '``' → logprob: -19.000158309936523

Token 1440: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.028692428022623062
    2. ' -' → logprob: -4.153692245483398
    3. '-s' → logprob: -4.403692245483398
    4. 's' → logprob: -8.028692245483398
    5. '-
' → logprob: -11.153692245483398
    6. '-p' → logprob: -13.403692245483398
    7. ' ' → logprob: -13.528692245483398
    8. '-
' → logprob: -14.403692245483398
    9. '-S' → logprob: -14.903692245483398
    10. 'p' → logprob: -15.278692245483398

Token 1441: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0006284446571953595
    2. ' s' → logprob: -7.375628471374512
    3. '<|end|>' → logprob: -14.000628471374512
    4. '       ' → logprob: -14.625628471374512
    5. '   ' → logprob: -15.000628471374512
    6. ' ' → logprob: -16.750627517700195
    7. '  ' → logprob: -16.750627517700195
    8. ')' → logprob: -17.500627517700195
    9. '    ' → logprob: -17.875627517700195
    10. '           ' → logprob: -18.375627517700195

Token 1442: '1' (ID: 16)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04876302182674408
    2. '1' → logprob: -3.0487630367279053
    3. ' s' → logprob: -8.673763275146484
    4. '.s' → logprob: -13.048763275146484
    5. 'p' → logprob: -14.048763275146484
    6. 'oint' → logprob: -14.673763275146484
    7. '   ' → logprob: -15.423763275146484
    8. 'oints' → logprob: -15.798763275146484
    9. 'Point' → logprob: -15.923763275146484
    10. ' ' → logprob: -15.923763275146484

Token 1443: '.p' (ID: 1201)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0808144211769104
    2. 'p' → logprob: -2.5808143615722656
    3. '.s' → logprob: -6.580814361572266
    4. '1' → logprob: -8.330814361572266
    5. '.p' → logprob: -8.455814361572266
    6. ' s' → logprob: -9.580814361572266
    7. ' p' → logprob: -11.580814361572266
    8. '   ' → logprob: -12.580814361572266
    9. '.' → logprob: -15.955814361572266
    10. '       ' → logprob: -16.080814361572266

Token 1444: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036089823115617037
    2. 'p' → logprob: -5.6286091804504395
    3. 'oint' → logprob: -13.003608703613281
    4. 'Point' → logprob: -13.003608703613281
    5. 'point' → logprob: -13.253608703613281
    6. '.p' → logprob: -14.378608703613281
    7. 'oints' → logprob: -14.628608703613281
    8. 's' → logprob: -14.878608703613281
    9. '<p' → logprob: -15.503608703613281
    10. ' p' → logprob: -15.628608703613281

Token 1445: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43614786863327026
    2. ')' → logprob: -1.686147928237915
    3. ')
' → logprob: -1.811147928237915
    4. '       ' → logprob: -6.686147689819336
    5. 's' → logprob: -6.811147689819336
    6. ')
' → logprob: -7.311147689819336
    7. '),' → logprob: -7.311147689819336
    8. ').' → logprob: -8.186147689819336
    9. 'a' → logprob: -8.436147689819336
    10. ')a' → logprob: -8.561147689819336

Token 1446: '       ' (ID: 309)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6255737543106079
    2. '   ' → logprob: -1.500573754310608
    3. '       ' → logprob: -1.625573754310608
    4. ' b' → logprob: -3.3755736351013184
    5. '	b' → logprob: -4.625573635101318
    6. '<|end|>' → logprob: -8.375574111938477
    7. ' ' → logprob: -8.500574111938477
    8. ',b' → logprob: -9.000574111938477
    9. ',' → logprob: -9.125574111938477
    10. ')' → logprob: -9.625574111938477

Token 1447: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -3.9292415749514475e-05
    2. ' b' → logprob: -10.500039100646973
    3. 'a' → logprob: -11.500039100646973
    4. '   ' → logprob: -13.375039100646973
    5. '	b' → logprob: -17.37504005432129
    6. '       ' → logprob: -17.50004005432129
    7. '    ' → logprob: -18.87504005432129
    8. '  ' → logprob: -20.00004005432129
    9. ' ' → logprob: -20.50004005432129
    10. 'return' → logprob: -21.12504005432129

Token 1448: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4287377595901489
    2. '=' → logprob: -1.053737759590149
    3. '   ' → logprob: -10.55373764038086
    4. '       ' → logprob: -12.67873764038086
    5. '	' → logprob: -13.55373764038086
    6. '(' → logprob: -13.67873764038086
    7. 'a' → logprob: -13.92873764038086
    8. ' ' → logprob: -14.05373764038086
    9. '    ' → logprob: -14.30373764038086
    10. 'b' → logprob: -14.55373764038086

Token 1449: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -7.226628895296017e-06
    2. ' Vector' → logprob: -11.875007629394531
    3. '   ' → logprob: -15.375007629394531
    4. '	Vector' → logprob: -17.25000762939453
    5. '       ' → logprob: -18.00000762939453
    6. '  ' → logprob: -19.12500762939453
    7. ' ' → logprob: -19.75000762939453
    8. '    ' → logprob: -19.87500762939453
    9. '(Vector' → logprob: -20.12500762939453
    10. 'Vectors' → logprob: -20.50000762939453

Token 1450: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.011316602118313313
    2. 'Vector' → logprob: -4.511316776275635
    3. 's' → logprob: -8.261316299438477
    4. '(Vector' → logprob: -11.511316299438477
    5. ' Vector' → logprob: -14.761316299438477
    6. 'vector' → logprob: -17.511316299438477
    7. '.Vector' → logprob: -18.386316299438477
    8. '_Vector' → logprob: -18.386316299438477
    9. 'Point' → logprob: -18.511316299438477
    10. 'Vec' → logprob: -18.636316299438477

Token 1451: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.026479804888367653
    2. 's' → logprob: -3.651479721069336
    3. 'p' → logprob: -9.026479721069336
    4. '(s' → logprob: -10.401479721069336
    5. ' s' → logprob: -11.026479721069336
    6. '.s' → logprob: -11.651479721069336
    7. '.p' → logprob: -13.151479721069336
    8. '(p' → logprob: -14.151479721069336
    9. '1' → logprob: -14.651479721069336
    10. ' ' → logprob: -15.526479721069336

Token 1452: '.p' (ID: 1201)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6996243596076965
    2. '.p' → logprob: -0.6996243596076965
    3. ' p' → logprob: -5.574624538421631
    4. 's' → logprob: -7.074624538421631
    5. '(p' → logprob: -7.449624538421631
    6. '1' → logprob: -7.949624538421631
    7. '(s' → logprob: -8.574624061584473
    8. '.s' → logprob: -8.574624061584473
    9. '2' → logprob: -8.949624061584473
    10. '
' → logprob: -9.449624061584473

Token 1453: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1797473132610321
    2. '1' → logprob: -1.8047473430633545
    3. 'p' → logprob: -13.179747581481934
    4. 't' → logprob: -15.992247581481934
    5. '
' → logprob: -16.492246627807617
    6. ' ' → logprob: -16.679746627807617
    7. '```' → logprob: -16.992246627807617
    8. 'start' → logprob: -17.117246627807617
    9. '   ' → logprob: -17.617246627807617
    10. 'm' → logprob: -17.804746627807617

Token 1454: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.01112952921539545
    2. '-' → logprob: -4.511129379272461
    3. 's' → logprob: -9.886129379272461
    4. ' s' → logprob: -11.261129379272461
    5. 'b' → logprob: -11.636129379272461
    6. '-s' → logprob: -12.761129379272461
    7. ' -
' → logprob: -13.011129379272461
    8. ' ' → logprob: -13.136129379272461
    9. 'a' → logprob: -14.511129379272461
    10. '   ' → logprob: -15.261129379272461

Token 1455: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.014168208464980125
    2. ' s' → logprob: -4.2641682624816895
    3. ' ' → logprob: -14.139167785644531
    4. '(s' → logprob: -14.451667785644531
    5. '
' → logprob: -14.701667785644531
    6. ')' → logprob: -14.701667785644531
    7. '   ' → logprob: -14.701667785644531
    8. '[' → logprob: -14.889167785644531
    9. '<|end|>' → logprob: -15.076667785644531
    10. '```' → logprob: -16.07666778564453

Token 1456: '2' (ID: 17)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004706968553364277
    2. '2' → logprob: -5.379706859588623
    3. '1' → logprob: -9.504707336425781
    4. ' s' → logprob: -11.379707336425781
    5. '_s' → logprob: -15.754707336425781
    6. 'p' → logprob: -16.25470733642578
    7. '<|end|>' → logprob: -16.37970733642578
    8. '.s' → logprob: -16.62970733642578
    9. '`s' → logprob: -16.75470733642578
    10. '<s' → logprob: -17.00470733642578

Token 1457: '.p' (ID: 1201)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0001242772996192798
    2. ' s' → logprob: -9.000123977661133
    3. '1' → logprob: -14.375123977661133
    4. 'p' → logprob: -15.750123977661133
    5. '.s' → logprob: -16.125123977661133
    6. '2' → logprob: -17.750123977661133
    7. '   ' → logprob: -18.625123977661133
    8. '{s' → logprob: -18.750123977661133
    9. '<s' → logprob: -19.500123977661133
    10. '`s' → logprob: -19.750123977661133

Token 1458: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014668923104181886
    2. 'p' → logprob: -6.751466751098633
    3. 's' → logprob: -8.126466751098633
    4. 'point' → logprob: -15.251466751098633
    5. '2' → logprob: -16.001466751098633
    6. 'classmethod' → logprob: -16.501466751098633
    7. ' p' → logprob: -16.626466751098633
    8. 'oint' → logprob: -16.751466751098633
    9. 'oints' → logprob: -16.751466751098633
    10. ' s' → logprob: -17.126466751098633

Token 1459: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.31384778022766113
    2. ')' → logprob: -1.3138477802276611
    3. '       ' → logprob: -7.688847541809082
    4. ')
' → logprob: -9.188847541809082
    5. ')return' → logprob: -10.813847541809082
    6. ' )
' → logprob: -14.188847541809082
    7. 'return' → logprob: -14.188847541809082
    8. ').' → logprob: -14.313847541809082
    9. ')

' → logprob: -14.438847541809082
    10. ')`
' → logprob: -14.938847541809082

Token 1460: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.9054008084349334e-05
    2. 'return' → logprob: -10.375039100646973
    3. ' return' → logprob: -12.125039100646973
    4. '	' → logprob: -13.750039100646973
    5. '   ' → logprob: -14.125039100646973
    6. ',' → logprob: -16.000038146972656
    7. '      ' → logprob: -16.250038146972656
    8. '	return' → logprob: -16.250038146972656
    9. '#' → logprob: -16.750038146972656
    10. '<|end|>' → logprob: -16.875038146972656

Token 1461: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4746910631656647
    2. 'return' (adapté à ' return') → logprob: -0.9746910333633423
    3. ' return' → logprob: -7.474690914154053
    4. '   ' → logprob: -10.349691390991211
    5. '	return' → logprob: -11.724691390991211
    6. '
' → logprob: -12.724691390991211
    7. '	' → logprob: -13.099691390991211
    8. 'import' → logprob: -15.099691390991211
    9. '```' → logprob: -15.099691390991211
    10. 'eturn' → logprob: -15.599691390991211

Token 1462: ' Vector' (ID: 8764)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.478397399187088
    2. 'Vector' → logprob: -0.9783973693847656
    3. ' abs' → logprob: -5.728397369384766
    4. ' Vector' → logprob: -6.978397369384766
    5. 'a' → logprob: -9.478397369384766
    6. '(Vector' → logprob: -10.603397369384766
    7. '(abs' → logprob: -10.978397369384766
    8. '   ' → logprob: -12.103397369384766
    9. 'cls' → logprob: -14.228397369384766
    10. '	Vector' → logprob: -14.478397369384766

Token 1463: '.is' (ID: 3109)
  Prédit: '.dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dot' → logprob: -5.9153885558771435e-06
    2. '.is' → logprob: -12.250005722045898
    3. '.cross' → logprob: -14.500005722045898
    4. 'dot' → logprob: -15.375005722045898
    5. '.' → logprob: -15.750005722045898
    6. '.Dot' → logprob: -17.0000057220459
    7. '(dot' → logprob: -17.8750057220459
    8. '   ' → logprob: -18.8750057220459
    9. 'Dot' → logprob: -19.3750057220459
    10. '_dot' → logprob: -19.3750057220459

Token 1464: '_' (ID: 62)
  Prédit: '_parallel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parallel' → logprob: -0.03805388882756233
    2. '_' → logprob: -3.2880539894104004
    3. '_par' → logprob: -11.663053512573242
    4. '_per' → logprob: -13.038053512573242
    5. 'parallel' → logprob: -13.788053512573242
    6. 'orth' → logprob: -15.288053512573242
    7. '_vector' → logprob: -16.913053512573242
    8. 'ort' → logprob: -17.288053512573242
    9. '```' → logprob: -17.413053512573242
    10. '_inter' → logprob: -17.538053512573242

Token 1465: 'orth' (ID: 2909)
  Prédit: 'orth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orth' → logprob: -0.018233880400657654
    2. 'parallel' → logprob: -4.018233776092529
    3. 'ort' → logprob: -10.393234252929688
    4. '_parallel' → logprob: -10.393234252929688
    5. '_' → logprob: -11.268234252929688
    6. ' orth' → logprob: -12.018234252929688
    7. 'Orth' → logprob: -13.143234252929688
    8. 'per' → logprob: -13.393234252929688
    9. 'par' → logprob: -16.268234252929688
    10. ' parallel' → logprob: -16.768234252929688

Token 1466: 'ogonal' (ID: 127861)
  Prédit: 'ogonal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ogonal' → logprob: -1.9361264946837764e-07
    2. 'agonal' → logprob: -15.875
    3. 'og' → logprob: -18.375
    4. 'ogon' → logprob: -19.0
    5. 'onal' → logprob: -19.75
    6. '```' → logprob: -20.0
    7. 'ogona' → logprob: -20.25
    8. 'o' → logprob: -20.75
    9. 'g' → logprob: -20.875
    10. 'ogo' → logprob: -20.875

Token 1467: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -4.320199877838604e-07
    2. '(cls' → logprob: -15.0
    3. '(' → logprob: -16.875
    4. 'a' → logprob: -18.5
    5. '(
' → logprob: -18.75
    6. '   ' → logprob: -19.375
    7. '((' → logprob: -19.5
    8. '(A' → logprob: -19.625
    9. ' (' → logprob: -19.75
    10. '(ab' → logprob: -19.75

Token 1468: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005233763717114925
    2. ',b' → logprob: -5.5052337646484375
    3. '(b' → logprob: -6.8802337646484375
    4. '(' → logprob: -9.755233764648438
    5. ' ,' → logprob: -10.255233764648438
    6. '(a' → logprob: -10.505233764648438
    7. ',a' → logprob: -13.005233764648438
    8. 'b' → logprob: -13.380233764648438
    9. ' b' → logprob: -14.130233764648438
    10. ',
' → logprob: -14.630233764648438

Token 1469: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0001398929744027555
    2. ' b' → logprob: -8.875140190124512
    3. '   ' → logprob: -18.625139236450195
    4. '	b' → logprob: -18.875139236450195
    5. ')b' → logprob: -19.125139236450195
    6. '       ' → logprob: -19.875139236450195
    7. '(b' → logprob: -21.375139236450195
    8. '    ' → logprob: -21.750139236450195
    9. '[b' → logprob: -21.750139236450195
    10. '           ' → logprob: -22.125139236450195

Token 1470: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005815077456645668
    2. ')
' → logprob: -7.625581741333008
    3. ')

' → logprob: -10.000581741333008
    4. '   ' → logprob: -11.000581741333008
    5. ' and' → logprob: -11.500581741333008
    6. '       ' → logprob: -11.875581741333008
    7. '<|end|>' → logprob: -12.125581741333008
    8. ' )' → logprob: -12.625581741333008
    9. '())' → logprob: -13.125581741333008
    10. 'and' → logprob: -13.500581741333008

Token 1471: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006722823018208146
    2. '
' → logprob: -7.875672340393066
    3. '@' → logprob: -8.750672340393066
    4. '<|end|>' → logprob: -9.500672340393066
    5. '    
' → logprob: -10.250672340393066
    6. '```' → logprob: -11.625672340393066
    7. 'classmethod' → logprob: -12.625672340393066
    8. ' ' → logprob: -13.000672340393066
    9. '        
' → logprob: -13.750672340393066
    10. '  ' → logprob: -13.875672340393066

Token 1472: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.0007114782347343862
    2. '   ' → logprob: -7.250711441040039
    3. '@class' → logprob: -14.125711441040039
    4. ' @' → logprob: -14.875711441040039
    5. 'classmethod' → logprob: -14.875711441040039
    6. '
' → logprob: -17.62571144104004
    7. 'def' → logprob: -18.00071144104004
    8. '    
' → logprob: -18.87571144104004
    9. '@
' → logprob: -18.87571144104004
    10. '＠' → logprob: -19.25071144104004

Token 1473: 'classmethod' (ID: 64680)
  Prédit: 'classmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classmethod' → logprob: -4.320199877838604e-07
    2. 'staticmethod' → logprob: -14.75
    3. 'class' → logprob: -18.0
    4. 'property' → logprob: -19.125
    5. '<class' → logprob: -22.75
    6. '@class' → logprob: -22.875
    7. '@' → logprob: -23.0
    8. 'aclass' → logprob: -23.5
    9. 'cls' → logprob: -24.375
    10. '"class' → logprob: -24.375

Token 1474: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47422465682029724
    2. 'def' → logprob: -0.9742246866226196
    3. ' def' → logprob: -8.974225044250488
    4. '
' → logprob: -10.974225044250488
    5. '	def' → logprob: -12.724225044250488
    6. '  ' → logprob: -15.474225044250488
    7. '@' → logprob: -15.974225044250488
    8. ' ' → logprob: -15.974225044250488
    9. '_def' → logprob: -15.974225044250488
    10. 'Def' → logprob: -16.349224090576172

Token 1475: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04905828461050987
    2. '   ' → logprob: -3.049058198928833
    3. ' def' → logprob: -7.674058437347412
    4. '	def' → logprob: -12.674057960510254
    5. '
' → logprob: -12.799057960510254
    6. '_def' → logprob: -16.54905891418457
    7. ' ' → logprob: -17.04905891418457
    8. ':def' → logprob: -17.67405891418457
    9. 'from' → logprob: -17.79905891418457
    10. '\' → logprob: -18.04905891418457

Token 1476: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -6.8497312895488e-05
    2. ' def' → logprob: -9.750068664550781
    3. '   ' → logprob: -11.500068664550781
    4. '	def' → logprob: -17.00006866455078
    5. 'Def' → logprob: -18.75006866455078
    6. ' ' → logprob: -20.37506866455078
    7. '
' → logprob: -20.50006866455078
    8. '_def' → logprob: -20.87506866455078
    9. '  ' → logprob: -21.87506866455078
    10. ':def' → logprob: -22.37506866455078

Token 1477: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.10024700313806534
    2. 'def' → logprob: -2.3502469062805176
    3. ' def' → logprob: -10.725247383117676
    4. ' is' → logprob: -11.725247383117676
    5. '   ' → logprob: -12.225247383117676
    6. '
' → logprob: -12.225247383117676
    7. ' ' → logprob: -15.475247383117676
    8. '.is' → logprob: -15.600247383117676
    9. 'has' → logprob: -17.10024642944336
    10. '  ' → logprob: -17.22524642944336

Token 1478: '_parallel' (ID: 152364)
  Prédit: '_parallel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parallel' → logprob: -0.00043496055877767503
    2. 'parallel' → logprob: -7.750434875488281
    3. ' parallel' → logprob: -12.500434875488281
    4. '_par' → logprob: -15.250434875488281
    5. 'Parallel' → logprob: -16.00043487548828
    6. 'def' → logprob: -16.87543487548828
    7. '__' → logprob: -17.62543487548828
    8. ' paralelo' → logprob: -17.62543487548828
    9. '_' → logprob: -17.87543487548828
    10. '.parallel' → logprob: -18.25043487548828

Token 1479: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -1.5332478142227046e-05
    2. 'cls' → logprob: -11.375015258789062
    3. '   ' → logprob: -12.625015258789062
    4. ' (' → logprob: -15.250015258789062
    5. ' cls' → logprob: -15.750015258789062
    6. 'class' → logprob: -17.625015258789062
    7. 'classmethod' → logprob: -17.875015258789062
    8. '(class' → logprob: -18.000015258789062
    9. '_cls' → logprob: -18.625015258789062
    10. ' ' → logprob: -19.000015258789062

Token 1480: ',' (ID: 11)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.09290681034326553
    2. ',' → logprob: -2.4679067134857178
    3. '(s' → logprob: -5.592906951904297
    4. 'cls' → logprob: -8.842906951904297
    5. '   ' → logprob: -10.592906951904297
    6. ',s' → logprob: -10.717906951904297
    7. ' (' → logprob: -10.842906951904297
    8. ' cls' → logprob: -11.342906951904297
    9. ')(' → logprob: -12.217906951904297
    10. ')' → logprob: -13.342906951904297

Token 1481: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2572653591632843
    2. 'cls' → logprob: -1.507265329360962
    3. ' s' → logprob: -5.382265567779541
    4. ' cls' → logprob: -7.257265567779541
    5. 'class' → logprob: -11.757265090942383
    6. '   ' → logprob: -12.257265090942383
    7. '(cls' → logprob: -13.257265090942383
    8. 'c' → logprob: -13.507265090942383
    9. 'classmethod' → logprob: -14.382265090942383
    10. 'cl' → logprob: -14.382265090942383

Token 1482: '1' (ID: 16)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.5021705627441406
    2. '2' → logprob: -1.3771705627441406
    3. '1' → logprob: -2.6271705627441406
    4. '(cls' → logprob: -3.1271705627441406
    5. ',' → logprob: -4.252170562744141
    6. 's' → logprob: -4.877170562744141
    7. ',s' → logprob: -6.127170562744141
    8. 'cls' → logprob: -6.627170562744141
    9. ' s' → logprob: -7.877170562744141
    10. '   ' → logprob: -8.75217056274414

Token 1483: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026455431361682713
    2. ',s' → logprob: -8.250264167785645
    3. ' ,' → logprob: -13.000264167785645
    4. 's' → logprob: -14.000264167785645
    5. ' s' → logprob: -15.750264167785645
    6. '   ' → logprob: -16.87526512145996
    7. ',class' → logprob: -17.12526512145996
    8. ',
' → logprob: -18.37526512145996
    9. ',c' → logprob: -18.37526512145996
    10. 'cls' → logprob: -18.62526512145996

Token 1484: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0005551783833652735
    2. ' s' → logprob: -7.500555038452148
    3. 'cls' → logprob: -13.375555038452148
    4. '   ' → logprob: -14.250555038452148
    5. '       ' → logprob: -18.62555503845215
    6. '	s' → logprob: -18.87555503845215
    7. '    ' → logprob: -19.50055503845215
    8. ' ' → logprob: -19.75055503845215
    9. ' cls' → logprob: -19.75055503845215
    10. '(s' → logprob: -19.87555503845215

Token 1485: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003210422000847757
    2. '1' → logprob: -8.125321388244629
    3. 's' → logprob: -10.875321388244629
    4. '   ' → logprob: -12.750321388244629
    5. 'class' → logprob: -13.250321388244629
    6. '
' → logprob: -15.500321388244629
    7. 'classmethod' → logprob: -15.500321388244629
    8. '_' → logprob: -15.750321388244629
    9. 'cls' → logprob: -15.750321388244629
    10. '       ' → logprob: -16.500320434570312

Token 1486: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004056474717799574
    2. '(cls' → logprob: -8.250405311584473
    3. ',s' → logprob: -9.000405311584473
    4. '   ' → logprob: -11.875405311584473
    5. 'cls' → logprob: -11.875405311584473
    6. ' ,' → logprob: -13.250405311584473
    7. '       ' → logprob: -13.375405311584473
    8. ')(' → logprob: -14.500405311584473
    9. '(s' → logprob: -14.750405311584473
    10. ',class' → logprob: -14.750405311584473

Token 1487: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001000059419311583
    2. ' a' → logprob: -7.000999927520752
    3. '   ' → logprob: -9.87600040435791
    4. 'a' → logprob: -10.37600040435791
    5. ' return' → logprob: -13.00100040435791
    6. '	a' → logprob: -13.50100040435791
    7. '(a' → logprob: -14.87600040435791
    8. '      ' → logprob: -15.00100040435791
    9. ' ' → logprob: -15.12600040435791
    10. '     ' → logprob: -15.37600040435791

Token 1488: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0016026983503252268
    2. '       ' → logprob: -6.501602649688721
    3. ' a' → logprob: -9.251603126525879
    4. '   ' → logprob: -12.376603126525879
    5. '	a' → logprob: -15.126603126525879
    6. 'return' → logprob: -19.501602172851562
    7. '_a' → logprob: -19.626602172851562
    8. ' ' → logprob: -19.751602172851562
    9. '      ' → logprob: -20.376602172851562
    10. '(a' → logprob: -20.751602172851562

Token 1489: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023437678813934
    2. '=' → logprob: -1.9102343320846558
    3. '   ' → logprob: -12.035234451293945
    4. 'a' → logprob: -13.535234451293945
    5. ')' → logprob: -13.910234451293945
    6. ',' → logprob: -14.410234451293945
    7. '=
' → logprob: -15.160234451293945
    8. 'def' → logprob: -15.535234451293945
    9. ' =
' → logprob: -15.535234451293945
    10. ' ' → logprob: -15.785234451293945

Token 1490: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -5.836499985889532e-05
    2. ' Vector' → logprob: -9.7500581741333
    3. '   ' → logprob: -18.000059127807617
    4. '	Vector' → logprob: -18.250059127807617
    5. 'Point' → logprob: -20.500059127807617
    6. 'Vectors' → logprob: -20.625059127807617
    7. '(Vector' → logprob: -20.750059127807617
    8. ' ' → logprob: -21.000059127807617
    9. '.Vector' → logprob: -21.250059127807617
    10. '_Vector' → logprob: -21.625059127807617

Token 1491: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -4.906711546937004e-05
    2. 's' → logprob: -10.125048637390137
    3. '(Vector' → logprob: -12.250048637390137
    4. 'Vector' → logprob: -13.250048637390137
    5. '(cls' → logprob: -13.875048637390137
    6. 'classmethod' → logprob: -14.375048637390137
    7. '.Vector' → logprob: -15.500048637390137
    8. 'cls' → logprob: -15.750048637390137
    9. 'class' → logprob: -15.750048637390137
    10. 'def' → logprob: -16.750049591064453

Token 1492: '1' (ID: 16)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.3981771767139435
    2. '1' → logprob: -1.148177146911621
    3. 's' → logprob: -4.523177146911621
    4. 'Vector' → logprob: -8.523177146911621
    5. '2' → logprob: -8.648177146911621
    6. 'a' → logprob: -12.023177146911621
    7. 'Point' → logprob: -12.523177146911621
    8. '   ' → logprob: -14.023177146911621
    9. '(' → logprob: -14.148177146911621
    10. '(Vector' → logprob: -15.023177146911621

Token 1493: '.p' (ID: 1201)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.02693409100174904
    2. '(s' → logprob: -3.6519341468811035
    3. '.p' → logprob: -7.9019341468811035
    4. 's' → logprob: -9.651933670043945
    5. ' p' → logprob: -9.651933670043945
    6. '(p' → logprob: -10.026933670043945
    7. '-p' → logprob: -10.026933670043945
    8. '#' → logprob: -11.151933670043945
    9. 'a' → logprob: -11.151933670043945
    10. '(' → logprob: -13.026933670043945

Token 1494: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006228217855095863
    2. '1' → logprob: -5.131228446960449
    3. 'p' → logprob: -8.13122844696045
    4. '```' → logprob: -13.75622844696045
    5. '   ' → logprob: -14.38122844696045
    6. ' ' → logprob: -14.81872844696045
    7. '
' → logprob: -14.88122844696045
    8. '(p' → logprob: -14.94372844696045
    9. 't' → logprob: -15.06872844696045
    10. 'def' → logprob: -16.068727493286133

Token 1495: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3134462833404541
    2. '-' → logprob: -1.313446283340454
    3. 's' → logprob: -8.813446044921875
    4. '-p' → logprob: -10.563446044921875
    5. 'p' → logprob: -12.188446044921875
    6. ' ' → logprob: -13.563446044921875
    7. ' s' → logprob: -14.063446044921875
    8. '   ' → logprob: -14.438446044921875
    9. '-s' → logprob: -14.563446044921875
    10. '-point' → logprob: -14.688446044921875

Token 1496: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0010350722586736083
    2. ' s' → logprob: -6.876035213470459
    3. '<|end|>' → logprob: -13.2510347366333
    4. '   ' → logprob: -15.3760347366333
    5. ' ' → logprob: -16.251035690307617
    6. '<|end|>' → logprob: -16.376035690307617
    7. '1' → logprob: -17.626035690307617
    8. '(s' → logprob: -18.001035690307617
    9. '`s' → logprob: -18.001035690307617
    10. '  ' → logprob: -18.126035690307617

Token 1497: '1' (ID: 16)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4742383360862732
    2. '1' → logprob: -0.9742383360862732
    3. ' s' → logprob: -8.849238395690918
    4. '.s' → logprob: -11.224238395690918
    5. '(s' → logprob: -13.599238395690918
    6. '{s' → logprob: -14.099238395690918
    7. '<s' → logprob: -14.349238395690918
    8. '_s' → logprob: -15.349238395690918
    9. '2' → logprob: -15.474238395690918
    10. 'p' → logprob: -15.474238395690918

Token 1498: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.034755781292915344
    2. 'p' → logprob: -3.9097557067871094
    3. 's' → logprob: -4.284755706787109
    4. '1' → logprob: -8.53475570678711
    5. '.s' → logprob: -9.03475570678711
    6. ' p' → logprob: -11.15975570678711
    7. '-p' → logprob: -13.65975570678711
    8. '_p' → logprob: -13.78475570678711
    9. ' s' → logprob: -13.90975570678711
    10. '   ' → logprob: -14.65975570678711

Token 1499: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.100059156073257e-05
    2. 'p' → logprob: -9.625070571899414
    3. 's' → logprob: -13.500070571899414
    4. '<|end|>' → logprob: -13.875070571899414
    5. ' ' → logprob: -14.750070571899414
    6. 'a' → logprob: -15.375070571899414
    7. '   ' → logprob: -15.375070571899414
    8. '' → logprob: -15.687570571899414
    9. 'point' → logprob: -16.250070571899414
    10. 'unction' → logprob: -16.500070571899414

Token 1500: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.062414977699518204
    2. ')' → logprob: -2.8124148845672607
    3. '       ' → logprob: -8.06241512298584
    4. ',' → logprob: -9.68741512298584
    5. ')
' → logprob: -10.06241512298584
    6. '),' → logprob: -10.93741512298584
    7. ')

' → logprob: -12.81241512298584
    8. '   ' → logprob: -13.18741512298584
    9. '           ' → logprob: -13.43741512298584
    10. '        ' → logprob: -14.31241512298584

Token 1501: '       ' (ID: 309)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.4076705276966095
    2. 'b' → logprob: -1.282670497894287
    3. '       ' → logprob: -3.032670497894287
    4. '   ' → logprob: -4.782670497894287
    5. '	b' → logprob: -7.157670497894287
    6. ' ' → logprob: -9.532670974731445
    7. '<|end|>' → logprob: -10.032670974731445
    8. '        ' → logprob: -11.282670974731445
    9. '           ' → logprob: -12.282670974731445
    10. '     ' → logprob: -12.282670974731445

Token 1502: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -4.842555426876061e-06
    2. ' b' → logprob: -12.250004768371582
    3. '       ' → logprob: -18.0000057220459
    4. '	b' → logprob: -18.5000057220459
    5. '   ' → logprob: -18.7500057220459
    6. '           ' → logprob: -23.3750057220459
    7. '    ' → logprob: -23.8750057220459
    8. '        ' → logprob: -24.3750057220459
    9. '
' → logprob: -24.5000057220459
    10. '     ' → logprob: -24.6250057220459

Token 1503: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014182209968567
    2. '=' → logprob: -1.701418161392212
    3. '   ' → logprob: -13.076417922973633
    4. ')' → logprob: -13.951417922973633
    5. '<|end|>' → logprob: -15.201417922973633
    6. '       ' → logprob: -15.326417922973633
    7. '=(' → logprob: -15.576417922973633
    8. ' ' → logprob: -15.701417922973633
    9. '[' → logprob: -15.826417922973633
    10. 'b' → logprob: -16.076417922973633

Token 1504: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -6.2729995988775045e-06
    2. ' Vector' → logprob: -12.000006675720215
    3. '   ' → logprob: -18.2500057220459
    4. '	Vector' → logprob: -18.6250057220459
    5. '       ' → logprob: -19.3750057220459
    6. '(Vector' → logprob: -20.3750057220459
    7. 'Vectors' → logprob: -20.5000057220459
    8. '<Vector' → logprob: -20.8750057220459
    9. 'b' → logprob: -21.1250057220459
    10. '_Vector' → logprob: -21.2500057220459

Token 1505: '(s' (ID: 1858)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.00011391390580683947
    2. ' Vector' → logprob: -9.125113487243652
    3. '(Vector' → logprob: -12.250113487243652
    4. '(s' → logprob: -16.75011444091797
    5. '.Vector' → logprob: -17.25011444091797
    6. 's' → logprob: -18.00011444091797
    7. '	Vector' → logprob: -18.12511444091797
    8. 'b' → logprob: -18.25011444091797
    9. '   ' → logprob: -18.37511444091797
    10. '<Vector' → logprob: -18.37511444091797

Token 1506: '2' (ID: 17)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5436845421791077
    2. '2' → logprob: -0.9186845421791077
    3. '(s' → logprob: -3.918684482574463
    4. 'Vector' → logprob: -8.418684959411621
    5. ' s' → logprob: -9.543684959411621
    6. 'Point' → logprob: -10.168684959411621
    7. '.s' → logprob: -10.793684959411621
    8. '(Vector' → logprob: -11.043684959411621
    9. '   ' → logprob: -11.043684959411621
    10. 'p' → logprob: -11.293684959411621

Token 1507: '.p' (ID: 1201)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -2.8087270038668066e-05
    2. ' (' → logprob: -11.625027656555176
    3. '#' → logprob: -12.375027656555176
    4. 'p' → logprob: -12.750027656555176
    5. 'b' → logprob: -12.875027656555176
    6. '.p' → logprob: -13.000027656555176
    7. '.s' → logprob: -13.625027656555176
    8. '(
' → logprob: -13.875027656555176
    9. 's' → logprob: -14.125027656555176
    10. ')' → logprob: -14.250027656555176

Token 1508: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00019507692195475101
    2. 'p' → logprob: -8.875195503234863
    3. 's' → logprob: -10.500195503234863
    4. '1' → logprob: -11.250195503234863
    5. 'Point' → logprob: -12.875195503234863
    6. '(s' → logprob: -13.375195503234863
    7. '
' → logprob: -13.812695503234863
    8. ' ' → logprob: -14.187695503234863
    9. 'oints' → logprob: -14.312695503234863
    10. '(' → logprob: -14.437695503234863

Token 1509: ' -' (ID: 533)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.022199716418981552
    2. ' s' → logprob: -3.8971996307373047
    3. ' -' → logprob: -6.647199630737305
    4. '-' → logprob: -8.397199630737305
    5. '(s' → logprob: -9.272199630737305
    6. 'b' → logprob: -11.022199630737305
    7. '<s' → logprob: -11.397199630737305
    8. '-s' → logprob: -12.772199630737305
    9. '	s' → logprob: -13.397199630737305
    10. '   ' → logprob: -13.522199630737305

Token 1510: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0002319071936653927
    2. ' s' → logprob: -8.375231742858887
    3. '(s' → logprob: -14.000231742858887
    4. '<|end|>' → logprob: -15.625231742858887
    5. ')s' → logprob: -17.125232696533203
    6. 'b' → logprob: -17.125232696533203
    7. ')' → logprob: -17.375232696533203
    8. '...' → logprob: -17.500232696533203
    9. '<s' → logprob: -17.500232696533203
    10. '<|end|>' → logprob: -17.500232696533203

Token 1511: '2' (ID: 17)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0005090686026960611
    2. '1' → logprob: -7.875509262084961
    3. ' s' → logprob: -9.625509262084961
    4. '2' → logprob: -9.750509262084961
    5. '(s' → logprob: -12.500509262084961
    6. '{s' → logprob: -15.625509262084961
    7. '<s' → logprob: -16.00050926208496
    8. '   ' → logprob: -16.12550926208496
    9. ''s' → logprob: -16.25050926208496
    10. '
' → logprob: -16.50050926208496

Token 1512: '.p' (ID: 1201)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.31494200229644775
    2. '1' → logprob: -1.3149420022964478
    3. 'p' → logprob: -6.689941883087158
    4. ' s' → logprob: -7.939941883087158
    5. '.s' → logprob: -9.939942359924316
    6. '.p' → logprob: -11.189942359924316
    7. 'b' → logprob: -12.064942359924316
    8. ' ' → logprob: -12.939942359924316
    9. '   ' → logprob: -13.439942359924316
    10. ' p' → logprob: -13.564942359924316

Token 1513: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0683535037969705e-05
    2. 'p' → logprob: -11.50001049041748
    3. 's' → logprob: -16.250011444091797
    4. 'point' → logprob: -16.375011444091797
    5. ' ' → logprob: -16.500011444091797
    6. '   ' → logprob: -17.000011444091797
    7. '```' → logprob: -17.125011444091797
    8. 'a' → logprob: -17.687511444091797
    9. '' → logprob: -17.812511444091797
    10. 'oint' → logprob: -17.812511444091797

Token 1514: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022000549361109734
    2. ')
' → logprob: -3.897000551223755
    3. '       ' → logprob: -6.897000312805176
    4. ')return' → logprob: -8.272000312805176
    5. '   ' → logprob: -10.147000312805176
    6. ')==' → logprob: -10.772000312805176
    7. ')a' → logprob: -10.897000312805176
    8. ',' → logprob: -10.897000312805176
    9. ')b' → logprob: -11.522000312805176
    10. ')>' → logprob: -11.647000312805176

Token 1515: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03114204667508602
    2. 'return' → logprob: -3.531141996383667
    3. ' return' → logprob: -6.656142234802246
    4. ':return' → logprob: -9.906142234802246
    5. ')return' → logprob: -10.656142234802246
    6. '{return' → logprob: -11.906142234802246
    7. '	return' → logprob: -12.406142234802246
    8. '           ' → logprob: -12.656142234802246
    9. '   ' → logprob: -13.031142234802246
    10. ')' → logprob: -13.156142234802246

Token 1516: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.25237423181533813
    2. '       ' → logprob: -1.5023741722106934
    3. ' return' → logprob: -7.752374172210693
    4. '   ' → logprob: -11.377374649047852
    5. '	return' → logprob: -12.877374649047852
    6. '           ' → logprob: -14.877374649047852
    7. ':return' → logprob: -15.127374649047852
    8. ')return' → logprob: -16.00237464904785
    9. '{return' → logprob: -16.12737464904785
    10. ' ' → logprob: -16.37737464904785

Token 1517: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.001170225441455841
    2. ' Vector' → logprob: -6.7511701583862305
    3. '	Vector' → logprob: -18.001171112060547
    4. '   ' → logprob: -18.501171112060547
    5. '       ' → logprob: -19.001171112060547
    6. 'Point' → logprob: -19.126171112060547
    7. '(Vector' → logprob: -19.251171112060547
    8. '
' → logprob: -20.251171112060547
    9. 'Segment' → logprob: -20.751171112060547
    10. ' ' → logprob: -20.876171112060547

Token 1518: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -1.6286106983898208e-05
    2. 'is' → logprob: -11.125016212463379
    3. '.cross' → logprob: -13.500016212463379
    4. '.' → logprob: -16.125017166137695
    5. '
' → logprob: -18.625017166137695
    6. 'class' → logprob: -18.875017166137695
    7. ' .' → logprob: -19.125017166137695
    8. '(is' → logprob: -19.750017166137695
    9. 'cross' → logprob: -19.750017166137695
    10. '```' → logprob: -20.125017166137695

Token 1519: '_parallel' (ID: 152364)
  Prédit: '_parallel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parallel' → logprob: -2.1008713702030946e-06
    2. 'parallel' → logprob: -13.125001907348633
    3. ' parallel' → logprob: -17.250001907348633
    4. 'Parallel' → logprob: -17.500001907348633
    5. '_par' → logprob: -17.875001907348633
    6. '_' → logprob: -19.375001907348633
    7. '.parallel' → logprob: -20.500001907348633
    8. '_cross' → logprob: -20.750001907348633
    9. '\' → logprob: -21.125001907348633
    10. 's' → logprob: -22.375001907348633

Token 1520: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: 0.0
    2. ' (' → logprob: -17.5
    3. 'a' → logprob: -20.125
    4. '(' → logprob: -21.25
    5. '(A' → logprob: -21.375
    6. '```' → logprob: -21.375
    7. ' a' → logprob: -21.5
    8. '(
' → logprob: -21.75
    9. '(b' → logprob: -22.375
    10. '(ai' → logprob: -22.5

Token 1521: ',' (ID: 11)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -9.088346359931165e-07
    2. '(b' → logprob: -14.500000953674316
    3. ' (' → logprob: -15.500000953674316
    4. ')' → logprob: -17.5
    5. '(' → logprob: -17.75
    6. 'a' → logprob: -18.25
    7. '       ' → logprob: -18.75
    8. ',' → logprob: -19.125
    9. ')(' → logprob: -19.125
    10. '   ' → logprob: -19.375

Token 1522: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0185090284794569
    2. 'b' → logprob: -4.0185089111328125
    3. ' a' → logprob: -8.018508911132812
    4. ' b' → logprob: -11.018508911132812
    5. '(a' → logprob: -11.268508911132812
    6. '	a' → logprob: -16.393508911132812
    7. ')' → logprob: -16.643508911132812
    8. '(b' → logprob: -16.643508911132812
    9. '       ' → logprob: -16.893508911132812
    10. '   ' → logprob: -17.143508911132812

Token 1523: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013071056455373764
    2. '(a' → logprob: -4.763071060180664
    3. ')a' → logprob: -6.013071060180664
    4. ')
' → logprob: -6.388071060180664
    5. 'a' → logprob: -9.013071060180664
    6. '       ' → logprob: -9.763071060180664
    7. ')(' → logprob: -10.138071060180664
    8. '(' → logprob: -10.388071060180664
    9. ' a' → logprob: -11.013071060180664
    10. ')

' → logprob: -11.888071060180664

Token 1524: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0031736718956381083
    2. 'if' → logprob: -5.878173828125
    3. 'import' → logprob: -9.128173828125
    4. '#' → logprob: -9.253173828125
    5. 'n' → logprob: -9.378173828125
    6. 'class' → logprob: -9.628173828125
    7. 'N' → logprob: -12.253173828125
    8. 'from' → logprob: -13.003173828125
    9. 'input' → logprob: -13.253173828125
    10. ' def' → logprob: -14.128173828125

Token 1525: ' Line' (ID: 11342)
  Prédit: 'Circle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Circle' → logprob: -0.35043400526046753
    2. 'Polygon' → logprob: -1.2254340648651123
    3. ' Circle' → logprob: -7.475433826446533
    4. ' Polygon' → logprob: -7.600433826446533
    5. 'Triangle' → logprob: -7.975433826446533
    6. 'Line' → logprob: -8.600434303283691
    7. 'Main' → logprob: -9.225434303283691
    8. 'circle' → logprob: -9.600434303283691
    9. 'main' → logprob: -10.100434303283691
    10. 'Circular' → logprob: -10.350434303283691

Token 1526: '(S' (ID: 6181)
  Prédit: '(object'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(object' → logprob: -0.0003554847207851708
    2. '(S' → logprob: -8.50035572052002
    3. '(Point' → logprob: -8.87535572052002
    4. 'object' → logprob: -12.00035572052002
    5. ':' → logprob: -12.62535572052002
    6. '(obj' → logprob: -13.75035572052002
    7. '(Line' → logprob: -14.12535572052002
    8. 'Segment' → logprob: -15.12535572052002
    9. '(ob' → logprob: -15.62535572052002
    10. ':
' → logprob: -16.250354766845703

Token 1527: 'egment' (ID: 132263)
  Prédit: 'egment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'egment' → logprob: -0.042470693588256836
    2. 't' → logprob: -3.292470693588257
    3. 'object' → logprob: -6.042470932006836
    4. '(object' → logprob: -6.667470932006836
    5. 'e' → logprob: -8.292470932006836
    6. 'eg' → logprob: -8.917470932006836
    7. 'tring' → logprob: -9.167470932006836
    8. 'ection' → logprob: -9.292470932006836
    9. '(Point' → logprob: -10.042470932006836
    10. '(' → logprob: -10.042470932006836

Token 1528: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020293695852160454
    2. '):
' → logprob: -4.020293712615967
    3. '(object' → logprob: -6.770293712615967
    4. '(S' → logprob: -7.645293712615967
    5. ')' → logprob: -7.895293712615967
    6. '):
' → logprob: -10.520293235778809
    7. 'object' → logprob: -10.770293235778809
    8. '(' → logprob: -10.770293235778809
    9. '(Line' → logprob: -11.020293235778809
    10. ',' → logprob: -11.395293235778809

Token 1529: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000104616025055293
    2. 'pass' → logprob: -10.000104904174805
    3. 'def' → logprob: -10.000104904174805
    4. ' pass' → logprob: -11.375104904174805
    5. '<|end|>' → logprob: -14.500104904174805
    6. ')' → logprob: -14.875104904174805
    7. '#' → logprob: -15.125104904174805
    8. '	pass' → logprob: -15.250104904174805
    9. '```' → logprob: -15.375104904174805
    10. ' def' → logprob: -15.625104904174805

Token 1530: ' pass' (ID: 1853)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20454595983028412
    2. 'pass' (adapté à ' pass') → logprob: -1.7045459747314453
    3. '   ' → logprob: -5.829545974731445
    4. '#' → logprob: -9.579545974731445
    5. ' pass' → logprob: -9.829545974731445
    6. '"""' → logprob: -10.454545974731445
    7. ' def' → logprob: -10.579545974731445
    8. '	pass' → logprob: -12.454545974731445
    9. 'Pass' → logprob: -13.329545974731445
    10. 'class' → logprob: -13.454545974731445

Token 1531: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15337873995304108
    2. 'class' → logprob: -2.65337872505188
    3. '<|end|>' → logprob: -2.65337872505188
    4. '#' → logprob: -6.778378963470459
    5. '
' → logprob: -9.7783784866333
    6. 'if' → logprob: -10.0283784866333
    7. '<|end|>' → logprob: -10.2783784866333
    8. 'from' → logprob: -11.0283784866333
    9. ')' → logprob: -11.4033784866333
    10. 'import' → logprob: -11.6533784866333

Token 1532: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01557769812643528
    2. 'if' → logprob: -4.265577793121338
    3. '#' → logprob: -7.140577793121338
    4. 'class' → logprob: -7.765577793121338
    5. '<|end|>' → logprob: -9.01557731628418
    6. 'import' → logprob: -9.89057731628418
    7. '.' → logprob: -12.64057731628418
    8. 'input' → logprob: -12.64057731628418
    9. ' if' → logprob: -13.01557731628418
    10. ' def' → logprob: -13.14057731628418

Token 1533: ' Cir' (ID: 39325)
  Prédit: 'Circle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Circle' → logprob: -0.707455575466156
    2. 'Polygon' → logprob: -0.707455575466156
    3. ' Polygon' → logprob: -4.832455635070801
    4. ' Circle' → logprob: -5.207455635070801
    5. 'Ray' → logprob: -8.0824556350708
    6. 'Polyline' → logprob: -8.2074556350708
    7. '_circle' → logprob: -9.9574556350708
    8. 'Triangle' → logprob: -10.3324556350708
    9. 'Rectangle' → logprob: -11.2074556350708
    10. 'Poly' → logprob: -11.3324556350708

Token 1534: 'le' (ID: 282)
  Prédit: 'cle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.0002988776541315019
    2. 'class' → logprob: -8.250298500061035
    3. 'clear' → logprob: -10.875298500061035
    4. 'cles' → logprob: -11.750298500061035
    5. 'circle' → logprob: -11.875298500061035
    6. 'le' → logprob: -13.750298500061035
    7. '#' → logprob: -14.375298500061035
    8. '
' → logprob: -14.750298500061035
    9. 'cl' → logprob: -15.000298500061035
    10. 'cler' → logprob: -15.625298500061035

Token 1535: '(object' (ID: 9750)
  Prédit: '(Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Point' → logprob: -0.8772879242897034
    2. 'class' → logprob: -1.3772878646850586
    3. '(object' → logprob: -1.6272878646850586
    4. '(circle' → logprob: -2.8772878646850586
    5. '(C' → logprob: -3.2522878646850586
    6. 'Circle' → logprob: -4.377287864685059
    7. '(' → logprob: -4.627287864685059
    8. 'circle' → logprob: -5.002287864685059
    9. 'cle' → logprob: -6.252287864685059
    10. ':' → logprob: -6.752287864685059

Token 1536: '):
' (ID: 1883)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.3203890323638916
    2. 'c' → logprob: -2.0703890323638916
    3. ':' → logprob: -2.5703890323638916
    4. '):' → logprob: -3.9453890323638916
    5. ')' → logprob: -4.5703887939453125
    6. 't' → logprob: -4.5703887939453125
    7. '(ct' → logprob: -4.6953887939453125
    8. 'm' → logprob: -4.9453887939453125
    9. 'a' → logprob: -5.8203887939453125
    10. 'ctomy' → logprob: -6.3203887939453125

Token 1537: '   ' (ID: 271)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -6.682846287731081e-05
    2. '   ' → logprob: -10.500066757202148
    3. ' class' → logprob: -10.500066757202148
    4. 'c' → logprob: -12.875066757202148
    5. 's' → logprob: -13.125066757202148
    6. 'ct' → logprob: -13.500066757202148
    7. 'ass' → logprob: -13.625066757202148
    8. 'ss' → logprob: -13.625066757202148
    9. '<class' → logprob: -14.000066757202148
    10. 'clas' → logprob: -14.500066757202148

Token 1538: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0016642312984913588
    2. ' def' → logprob: -7.001664161682129
    3. 'class' → logprob: -7.251664161682129
    4. '   ' → logprob: -10.251664161682129
    5. 'ss' → logprob: -12.001664161682129
    6. '	def' → logprob: -13.751664161682129
    7. 's' → logprob: -14.626664161682129
    8. ' ' → logprob: -15.751664161682129
    9. '#' → logprob: -15.876664161682129
    10. '  ' → logprob: -15.876664161682129

Token 1539: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2014375925064087
    2. '__' → logprob: -1.7014375925064087
    3. ' _' → logprob: -11.326437950134277
    4. '_init' → logprob: -12.326437950134277
    5. '_' → logprob: -12.701437950134277
    6. 'def' → logprob: -13.576437950134277
    7. 'init' → logprob: -13.701437950134277
    8. ' def' → logprob: -14.076437950134277
    9. '.__' → logprob: -14.576437950134277
    10. ' ' → logprob: -14.701437950134277

Token 1540: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'def' → logprob: -15.75
    3. '_init' → logprob: -16.75
    4. '__' → logprob: -18.0
    5. 'ini' → logprob: -19.0
    6. 'int' → logprob: -19.25
    7. 'inite' → logprob: -19.375
    8. '_' → logprob: -20.625
    9. ' init' → logprob: -20.625
    10. 'in' → logprob: -21.0

Token 1541: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0013080945936962962
    2. '(' → logprob: -7.001307964324951
    3. '__(' → logprob: -8.00130844116211
    4. 'self' → logprob: -10.50130844116211
    5. ' (' → logprob: -10.75130844116211
    6. '(s' → logprob: -12.00130844116211
    7. ')(' → logprob: -13.75130844116211
    8. '(
' → logprob: -14.37630844116211
    9. '
' → logprob: -14.50130844116211
    10. ' ' → logprob: -14.75130844116211

Token 1542: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.320199877838604e-07
    2. ' self' → logprob: -15.25
    3. '   ' → logprob: -16.5
    4. ',' → logprob: -16.875
    5. '(self' → logprob: -17.625
    6. '       ' → logprob: -17.625
    7. ')' → logprob: -20.125
    8. ' ' → logprob: -20.5
    9. '  ' → logprob: -20.75
    10. 'elf' → logprob: -21.0

Token 1543: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00191399990580976
    2. 'self' → logprob: -6.876914024353027
    3. '(self' → logprob: -7.126914024353027
    4. '(' → logprob: -10.251914024353027
    5. ' (' → logprob: -10.751914024353027
    6. '__(' → logprob: -11.751914024353027
    7. ',self' → logprob: -12.126914024353027
    8. ' self' → logprob: -12.376914024353027
    9. ' ,' → logprob: -13.626914024353027
    10. ',(' → logprob: -14.126914024353027

Token 1544: ' x' (ID: 1215)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.011533691547811031
    2. 'center' → logprob: -5.261533737182617
    3. 'o' → logprob: -5.761533737182617
    4. 'p' → logprob: -5.886533737182617
    5. 'x' → logprob: -8.136533737182617
    6. 'pos' → logprob: -11.011533737182617
    7. 'self' → logprob: -11.636533737182617
    8. 'Point' → logprob: -12.136533737182617
    9. ' c' → logprob: -12.136533737182617
    10. 'O' → logprob: -12.386533737182617

Token 1545: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04332800954580307
    2. ',' → logprob: -3.168328046798706
    3. '=None' → logprob: -8.043328285217285
    4. ' =' → logprob: -12.293328285217285
    5. ' ,' → logprob: -13.918328285217285
    6. ',y' → logprob: -14.418328285217285
    7. '0' → logprob: -15.168328285217285
    8. '=[],' → logprob: -15.793328285217285
    9. '="",' → logprob: -15.918328285217285
    10. '=
' → logprob: -15.918328285217285

Token 1546: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00023417205375153571
    2. 'r' → logprob: -8.750234603881836
    3. ' y' → logprob: -9.500234603881836
    4. 'radius' → logprob: -14.375234603881836
    5. '	y' → logprob: -15.750234603881836
    6. '   ' → logprob: -17.000234603881836
    7. ' ' → logprob: -17.375234603881836
    8. '
' → logprob: -17.875234603881836
    9. '  ' → logprob: -18.250234603881836
    10. ',y' → logprob: -18.500234603881836

Token 1547: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.5120287066092715e-05
    2. ' ,' → logprob: -10.375035285949707
    3. '=' → logprob: -13.000035285949707
    4. '=None' → logprob: -13.625035285949707
    5. '):' → logprob: -16.12503433227539
    6. '):
' → logprob: -16.50003433227539
    7. ',
' → logprob: -16.75003433227539
    8. '),' → logprob: -17.75003433227539
    9. '='',' → logprob: -18.00003433227539
    10. '_,' → logprob: -18.37503433227539

Token 1548: 'Point' (ID: 4219)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002243154216557741
    2. 'None' → logprob: -6.1272430419921875
    3. ' ' → logprob: -10.127243041992188
    4. ' None' → logprob: -11.252243041992188
    5. '1' → logprob: -13.502243041992188
    6. 'Point' → logprob: -13.627243041992188
    7. ')' → logprob: -14.002243041992188
    8. '=None' → logprob: -14.877243041992188
    9. '):
' → logprob: -15.252243041992188
    10. '   ' → logprob: -15.252243041992188

Token 1549: '(),' (ID: 2547)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2706651985645294
    2. '(),' → logprob: -1.520665168762207
    3. '()' → logprob: -5.145665168762207
    4. '()):
' → logprob: -5.270665168762207
    5. '):' → logprob: -5.645665168762207
    6. '):
' → logprob: -5.895665168762207
    7. '(' → logprob: -7.520665168762207
    8. '=None' → logprob: -7.895665168762207
    9. ' ,' → logprob: -9.020665168762207
    10. ',x' → logprob: -9.895665168762207

Token 1550: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -3.857719275401905e-05
    2. ' r' → logprob: -10.500038146972656
    3. 'radius' → logprob: -11.625038146972656
    4. '	r' → logprob: -14.625038146972656
    5. '0' → logprob: -14.875038146972656
    6. '_r' → logprob: -15.250038146972656
    7. 'float' → logprob: -15.375038146972656
    8. '_' → logprob: -15.500038146972656
    9. 'rr' → logprob: -16.500038146972656
    10. 'y' → logprob: -16.625038146972656

Token 1551: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15169361233711243
    2. 'adius' → logprob: -2.27669358253479
    3. '):
' → logprob: -3.90169358253479
    4. '=None' → logprob: -4.776693820953369
    5. 'ad' → logprob: -5.026693820953369
    6. '):' → logprob: -5.901693820953369
    7. '):
' → logprob: -10.026693344116211
    8. ':' → logprob: -10.651693344116211
    9. ')' → logprob: -11.026693344116211
    10. '):

' → logprob: -11.151693344116211

Token 1552: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000287795381154865
    2. ' ' → logprob: -9.000288009643555
    3. 'None' → logprob: -9.125288009643555
    4. 'Point' → logprob: -10.125288009643555
    5. '1' → logprob: -11.625288009643555
    6. ')' → logprob: -13.375288009643555
    7. 'float' → logprob: -13.500288009643555
    8. ' None' → logprob: -15.062788009643555
    9. '   ' → logprob: -15.125288009643555
    10. '-' → logprob: -15.250288009643555

Token 1553: '.' (ID: 13)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6469237208366394
    2. '.' → logprob: -0.7719237208366394
    3. '):' → logprob: -4.396923542022705
    4. '0' → logprob: -6.646923542022705
    5. '=' → logprob: -8.396924018859863
    6. '=None' → logprob: -9.146924018859863
    7. '):
' → logprob: -9.396924018859863
    8. '():
' → logprob: -9.771924018859863
    9. '()):
' → logprob: -10.146924018859863
    10. ':' → logprob: -10.646924018859863

Token 1554: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.60414821645827e-06
    2. ')' → logprob: -13.500004768371582
    3. '):
' → logprob: -13.625004768371582
    4. 'r' → logprob: -15.312504768371582
    5. 'float' → logprob: -15.437504768371582
    6. '```' → logprob: -15.562504768371582
    7. ')
' → logprob: -15.625004768371582
    8. '.' → logprob: -15.750004768371582
    9. 'def' → logprob: -15.875004768371582
    10. '5' → logprob: -16.062503814697266

Token 1555: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3133430778980255
    2. '):' → logprob: -1.3133430480957031
    3. '):
' → logprob: -9.813343048095703
    4. ')' → logprob: -11.438343048095703
    5. ',' → logprob: -12.188343048095703
    6. '):

' → logprob: -12.688343048095703
    7. ' ):
' → logprob: -12.688343048095703
    8. ' ):' → logprob: -13.063343048095703
    9. '   ' → logprob: -13.688343048095703
    10. '():
' → logprob: -15.063343048095703

Token 1556: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14320120215415955
    2. ':' → logprob: -2.1432011127471924
    3. '):
' → logprob: -5.6432013511657715
    4. '<|end|>' → logprob: -5.7682013511657715
    5. '   ' → logprob: -5.8932013511657715
    6. ':
' → logprob: -6.3932013511657715
    7. ')' → logprob: -6.6432013511657715
    8. '):' → logprob: -6.8932013511657715
    9. ',' → logprob: -7.0182013511657715
    10. '(x' → logprob: -8.518200874328613

Token 1557: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5924521684646606
    2. 'self' → logprob: -0.8424521684646606
    3. '       ' → logprob: -4.217452049255371
    4. ' if' → logprob: -6.842452049255371
    5. ' self' → logprob: -7.717452049255371
    6. 'super' → logprob: -9.217452049255371
    7. 'Point' → logprob: -11.217452049255371
    8. '   ' → logprob: -12.092452049255371
    9. 'x' → logprob: -12.717452049255371
    10. 'If' → logprob: -13.092452049255371

Token 1558: ' isinstance' (ID: 25889)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.002538444008678198
    2. ' isinstance' → logprob: -6.002538681030273
    3. '   ' → logprob: -9.752538681030273
    4. '(is' → logprob: -13.252538681030273
    5. 'type' → logprob: -13.752538681030273
    6. 'has' → logprob: -14.127538681030273
    7. '       ' → logprob: -14.877538681030273
    8. 'x' → logprob: -15.127538681030273
    9. '  ' → logprob: -15.627538681030273
    10. ' ' → logprob: -15.627538681030273

Token 1559: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00029744720086455345
    2. 'x' → logprob: -8.125297546386719
    3. '(self' → logprob: -14.500297546386719
    4. '(' → logprob: -14.750297546386719
    5. '(r' → logprob: -14.875297546386719
    6. '(y' → logprob: -17.00029754638672
    7. '	x' → logprob: -17.50029754638672
    8. '(Point' → logprob: -17.62529754638672
    9. ' x' → logprob: -17.87529754638672
    10. 'r' → logprob: -18.75029754638672

Token 1560: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.531315314830863e-06
    2. '(Point' → logprob: -13.250003814697266
    3. ',(' → logprob: -14.375003814697266
    4. ' ,' → logprob: -14.750003814697266
    5. '(),' → logprob: -15.375003814697266
    6. 'Point' → logprob: -15.375003814697266
    7. '(' → logprob: -16.125003814697266
    8. ',int' → logprob: -16.500003814697266
    9. 'tuple' → logprob: -17.500003814697266
    10. '(tuple' → logprob: -17.750003814697266

Token 1561: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0006987344822846353
    2. 'tuple' → logprob: -7.375698566436768
    3. 'float' → logprob: -10.000699043273926
    4. '(Point' → logprob: -11.750699043273926
    5. ' Point' → logprob: -11.875699043273926
    6. 'Circle' → logprob: -12.500699043273926
    7. 'list' → logprob: -12.750699043273926
    8. '(' → logprob: -12.875699043273926
    9. 'int' → logprob: -13.875699043273926
    10. ' tuple' → logprob: -14.750699043273926

Token 1562: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.007870413362979889
    2. '):' → logprob: -5.007870197296143
    3. ',' → logprob: -7.132870197296143
    4. ')' → logprob: -8.7578706741333
    5. '()):
' → logprob: -9.1328706741333
    6. '       ' → logprob: -10.0078706741333
    7. 'self' → logprob: -11.2578706741333
    8. '):
' → logprob: -11.3828706741333
    9. '   ' → logprob: -12.3828706741333
    10. '():
' → logprob: -12.3828706741333

Token 1563: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7291254997253418
    2. '       ' → logprob: -1.4791254997253418
    3. ':
' → logprob: -1.6041254997253418
    4. '):
' → logprob: -2.854125499725342
    5. '<|end|>' → logprob: -4.729125499725342
    6. '           ' → logprob: -5.104125499725342
    7. '):' → logprob: -5.229125499725342
    8. ',' → logprob: -5.604125499725342
    9. ')' → logprob: -6.229125499725342
    10. '<|end|>' → logprob: -6.729125499725342

Token 1564: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0027380664832890034
    2. ' self' → logprob: -6.377737998962402
    3. '       ' → logprob: -7.252737998962402
    4. '	self' → logprob: -9.002737998962402
    5. 'def' → logprob: -9.127737998962402
    6. '(self' → logprob: -10.002737998962402
    7. '
' → logprob: -11.377737998962402
    8. '   ' → logprob: -11.627737998962402
    9. 'class' → logprob: -11.752737998962402
    10. ' ' → logprob: -12.377737998962402

Token 1565: '.c' (ID: 1081)
  Prédit: '.x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.026987232267856598
    2. '.center' → logprob: -3.651987314224243
    3. 'x' → logprob: -8.526987075805664
    4. 'center' → logprob: -8.651987075805664
    5. '.c' → logprob: -8.901987075805664
    6. '.' → logprob: -9.151987075805664
    7. '.r' → logprob: -10.401987075805664
    8. '
' → logprob: -12.276987075805664
    9. 'Center' → logprob: -12.401987075805664
    10. '=' → logprob: -12.401987075805664

Token 1566: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03943554311990738
    2. '=' → logprob: -3.414435625076294
    3. 'enter' → logprob: -5.664435386657715
    4. '=x' → logprob: -6.789435386657715
    5. 'x' → logprob: -7.289435386657715
    6. '=center' → logprob: -8.789435386657715
    7. '   ' → logprob: -9.164435386657715
    8. '=c' → logprob: -10.289435386657715
    9. '=(' → logprob: -10.664435386657715
    10. '=self' → logprob: -10.664435386657715

Token 1567: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00012415809032972902
    2. ' x' → logprob: -9.000123977661133
    3. 'Point' → logprob: -14.500123977661133
    4. '	x' → logprob: -16.375123977661133
    5. '<|end|>' → logprob: -16.875123977661133
    6. '(x' → logprob: -17.250123977661133
    7. ' Point' → logprob: -18.250123977661133
    8. '   ' → logprob: -18.375123977661133
    9. ' ' → logprob: -18.375123977661133
    10. '
' → logprob: -18.750123977661133

Token 1568: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0828094333410263
    2. '           ' → logprob: -3.0828094482421875
    3. '
' → logprob: -4.0828094482421875
    4. '<|end|>' → logprob: -4.4578094482421875
    5. 'else' → logprob: -5.5828094482421875
    6. ' else' → logprob: -7.5828094482421875
    7. '<|end|>' → logprob: -7.9578094482421875
    8. '   ' → logprob: -9.082809448242188
    9. ';' → logprob: -9.332809448242188
    10. ',' → logprob: -9.707809448242188

Token 1569: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23267360031604767
    2. '           ' → logprob: -1.6076736450195312
    3. '<|end|>' → logprob: -4.982673645019531
    4. ',' → logprob: -8.732673645019531
    5. '<|end|>' → logprob: -9.607673645019531
    6. '   ' → logprob: -10.232673645019531
    7. '
' → logprob: -10.982673645019531
    8. '               ' → logprob: -11.357673645019531
    9. '	       ' → logprob: -11.357673645019531
    10. 'self' → logprob: -11.482673645019531

Token 1570: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.003948267549276352
    2. 'if' → logprob: -5.628948211669922
    3. 'r' → logprob: -8.878948211669922
    4. '       ' → logprob: -8.878948211669922
    5. '           ' → logprob: -9.753948211669922
    6. ' self' → logprob: -12.253948211669922
    7. 'y' → logprob: -13.003948211669922
    8. '   ' → logprob: -13.128948211669922
    9. '
' → logprob: -14.128948211669922
    10. '	self' → logprob: -14.753948211669922

Token 1571: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.12700717151165009
    2. 'r' → logprob: -2.127007246017456
    3. '.' → logprob: -9.502007484436035
    4. '	r' → logprob: -13.252007484436035
    5. ' r' → logprob: -13.502007484436035
    6. '.c' → logprob: -14.627007484436035
    7. '=r' → logprob: -15.752007484436035
    8. 'radius' → logprob: -16.00200653076172
    9. '_r' → logprob: -16.37700653076172
    10. '.radius' → logprob: -16.50200653076172

Token 1572: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932311058044434
    2. ' =' → logprob: -0.6932311058044434
    3. '=r' → logprob: -9.568231582641602
    4. ' ' → logprob: -11.318231582641602
    5. ' r' → logprob: -14.318231582641602
    6. 'r' → logprob: -14.443231582641602
    7. '=x' → logprob: -15.193231582641602
    8. ',' → logprob: -16.5682315826416
    9. ')' → logprob: -16.5682315826416
    10. '=c' → logprob: -17.0682315826416

Token 1573: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0001434690784662962
    2. ' y' → logprob: -8.875143051147461
    3. 'r' → logprob: -12.875143051147461
    4. '	y' → logprob: -14.250143051147461
    5. '   ' → logprob: -14.750143051147461
    6. ' ' → logprob: -17.62514305114746
    7. 'float' → logprob: -18.25014305114746
    8. 'x' → logprob: -18.75014305114746
    9. '  ' → logprob: -18.87514305114746
    10. '       ' → logprob: -18.87514305114746

Token 1574: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007417320739477873
    2. '<|end|>' → logprob: -6.00741720199585
    3. 'else' → logprob: -6.13241720199585
    4. '
' → logprob: -6.63241720199585
    5. '           ' → logprob: -7.63241720199585
    6. ' else' → logprob: -7.63241720199585
    7. '	' → logprob: -8.382417678833008
    8. 'elif' → logprob: -9.507417678833008
    9. ',' → logprob: -10.257417678833008
    10. '   ' → logprob: -10.382417678833008

Token 1575: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005067364312708378
    2. 'else' → logprob: -5.880067348480225
    3. '<|end|>' → logprob: -6.755067348480225
    4. ' else' → logprob: -7.130067348480225
    5. 'elif' → logprob: -8.755067825317383
    6. '           ' → logprob: -9.880067825317383
    7. '	' → logprob: -10.380067825317383
    8. '   ' → logprob: -11.505067825317383
    9. ' elif' → logprob: -11.880067825317383
    10. '<|end|>' → logprob: -11.880067825317383

Token 1576: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038788653910160065
    2. 'else' → logprob: -3.4137885570526123
    3. 'elif' (adapté à ' elif') → logprob: -5.663788795471191
    4. ' else' → logprob: -6.538788795471191
    5. '<|end|>' → logprob: -9.413788795471191
    6. ' elif' → logprob: -9.788788795471191
    7. '   ' → logprob: -10.038788795471191
    8. '	elif' → logprob: -11.788788795471191
    9. '      ' → logprob: -12.038788795471191
    10. '	' → logprob: -12.288788795471191

Token 1577: ' isinstance' (ID: 25889)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.002022497123107314
    2. ' isinstance' → logprob: -7.2520222663879395
    3. 'x' → logprob: -7.6270222663879395
    4. 'has' → logprob: -8.127022743225098
    5. 'r' → logprob: -8.627022743225098
    6. '(is' → logprob: -8.627022743225098
    7. 'not' → logprob: -10.002022743225098
    8. '   ' → logprob: -10.502022743225098
    9. 'type' → logprob: -10.627022743225098
    10. '       ' → logprob: -10.877022743225098

Token 1578: '(x' (ID: 4061)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2529977262020111
    2. 'float' → logprob: -1.7529977560043335
    3. '(x' → logprob: -3.377997636795044
    4. '(float' → logprob: -4.252997875213623
    5. 'Point' → logprob: -7.002997875213623
    6. 'r' → logprob: -7.877997875213623
    7. 'type' → logprob: -8.877997398376465
    8. 'int' → logprob: -9.002997398376465
    9. '(Point' → logprob: -9.627997398376465
    10. 'self' → logprob: -9.752997398376465

Token 1579: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.490809417096898e-05
    2. ',float' → logprob: -10.500055313110352
    3. 'float' → logprob: -11.000055313110352
    4. ' ,' → logprob: -12.125055313110352
    5. 'is' → logprob: -14.125055313110352
    6. '[' → logprob: -14.500055313110352
    7. ')' → logprob: -14.500055313110352
    8. '==' → logprob: -14.750055313110352
    9. '   ' → logprob: -14.875055313110352
    10. '(float' → logprob: -15.125055313110352

Token 1580: ' tuple' (ID: 31311)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.055905021727085114
    2. '(float' → logprob: -3.4309051036834717
    3. 'tuple' → logprob: -4.055904865264893
    4. 'Point' → logprob: -5.805904865264893
    5. '(tuple' → logprob: -7.430904865264893
    6. ' float' → logprob: -7.930904865264893
    7. '(Point' → logprob: -8.05590534210205
    8. '(' → logprob: -8.43090534210205
    9. ' tuple' → logprob: -9.18090534210205
    10. ' (' → logprob: -10.30590534210205

Token 1581: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0068793571554124355
    2. '):' → logprob: -5.0068793296813965
    3. ')' → logprob: -9.131879806518555
    4. '):
' → logprob: -10.381879806518555
    5. ',' → logprob: -11.131879806518555
    6. '):

' → logprob: -12.756879806518555
    7. '       ' → logprob: -13.631879806518555
    8. '   ' → logprob: -13.756879806518555
    9. '()):
' → logprob: -13.756879806518555
    10. ':' → logprob: -14.256879806518555

Token 1582: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8249390721321106
    2. ':
' → logprob: -1.0749390125274658
    3. ':' → logprob: -1.5749390125274658
    4. '):
' → logprob: -5.074939250946045
    5. '   ' → logprob: -5.699939250946045
    6. '           ' → logprob: -5.949939250946045
    7. ',' → logprob: -8.199938774108887
    8. '<|end|>' → logprob: -8.449938774108887
    9. '{
' → logprob: -9.449938774108887
    10. '{' → logprob: -9.699938774108887

Token 1583: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.000354769523255527
    2. ' self' → logprob: -8.000354766845703
    3. '       ' → logprob: -11.250354766845703
    4. '           ' → logprob: -12.375354766845703
    5. '	self' → logprob: -14.625354766845703
    6. '
' → logprob: -14.625354766845703
    7. '   ' → logprob: -14.875354766845703
    8. 'Point' → logprob: -15.000354766845703
    9. '(self' → logprob: -15.625354766845703
    10. 'super' → logprob: -16.000354766845703

Token 1584: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -0.03892463818192482
    2. 'c' → logprob: -3.4139246940612793
    3. '=' → logprob: -6.038924694061279
    4. 'x' → logprob: -7.288924694061279
    5. '_c' → logprob: -7.413924694061279
    6. 'class' → logprob: -7.913924694061279
    7. ' =' → logprob: -8.038924217224121
    8. '(c' → logprob: -9.163924217224121
    9. '
' → logprob: -9.288924217224121
    10. 'C' → logprob: -9.288924217224121

Token 1585: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6326020956039429
    2. ' =' → logprob: -0.7576020956039429
    3. 'x' → logprob: -13.757601737976074
    4. ' ' → logprob: -15.007601737976074
    5. '=(' → logprob: -15.007601737976074
    6. 'import' → logprob: -16.00760269165039
    7. '=x' → logprob: -16.00760269165039
    8. '＝' → logprob: -16.13260269165039
    9. 'Point' → logprob: -16.50760269165039
    10. '=C' → logprob: -16.57010269165039

Token 1586: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -9.674858301877975e-05
    2. ' Point' → logprob: -9.250096321105957
    3. '	Point' → logprob: -14.750096321105957
    4. '   ' → logprob: -16.000097274780273
    5. 'x' → logprob: -16.875097274780273
    6. '  ' → logprob: -18.500097274780273
    7. '(Point' → logprob: -18.625097274780273
    8. '_Point' → logprob: -18.875097274780273
    9. '.Point' → logprob: -19.000097274780273
    10. ' ' → logprob: -19.500097274780273

Token 1587: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.003608267055824399
    2. 'x' → logprob: -5.628608226776123
    3. '(' → logprob: -12.128608703613281
    4. '(*' → logprob: -13.753608703613281
    5. '(
' → logprob: -14.503608703613281
    6. ' x' → logprob: -15.003608703613281
    7. '((' → logprob: -15.003608703613281
    8. '(tuple' → logprob: -16.12860870361328
    9. '   ' → logprob: -16.25360870361328
    10. 'tuple' → logprob: -16.75360870361328

Token 1588: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003554577473551035
    2. ')' → logprob: -5.878554344177246
    3. '0' → logprob: -7.753554344177246
    4. ')
' → logprob: -8.128554344177246
    5. ' ' → logprob: -12.253554344177246
    6. '   ' → logprob: -12.253554344177246
    7. ')[' → logprob: -12.628554344177246
    8. '1' → logprob: -12.753554344177246
    9. '[
' → logprob: -13.253554344177246
    10. ',' → logprob: -13.378554344177246

Token 1589: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ')' → logprob: -15.125000953674316
    3. ' ' → logprob: -15.625000953674316
    4. '[' → logprob: -15.750000953674316
    5. '])' → logprob: -15.750000953674316
    6. '])
' → logprob: -16.250001907348633
    7. '
' → logprob: -16.750001907348633
    8. ')
' → logprob: -17.750001907348633
    9. ')]' → logprob: -18.000001907348633
    10. '   ' → logprob: -18.125001907348633

Token 1590: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006701439269818366
    2. ',x' → logprob: -7.375669956207275
    3. ' ,' → logprob: -10.500670433044434
    4. '),' → logprob: -11.875670433044434
    5. '],' → logprob: -12.500670433044434
    6. ')' → logprob: -13.500670433044434
    7. '‌,' → logprob: -14.125670433044434
    8. '<|end|>' → logprob: -14.250670433044434
    9. 'x' → logprob: -14.375670433044434
    10. ',
' → logprob: -14.375670433044434

Token 1591: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1472419600977446e-06
    2. ' x' → logprob: -13.750000953674316
    3. '	x' → logprob: -21.000001907348633
    4. '   ' → logprob: -21.750001907348633
    5. '(x' → logprob: -23.625001907348633
    6. ')x' → logprob: -24.250001907348633
    7. '"x' → logprob: -24.250001907348633
    8. '    ' → logprob: -24.625001907348633
    9. '
' → logprob: -25.000001907348633
    10. 'X' → logprob: -25.125001907348633

Token 1592: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -13.375001907348633
    3. '0' → logprob: -16.750001907348633
    4. ' ' → logprob: -17.125001907348633
    5. '   ' → logprob: -17.250001907348633
    6. '```' → logprob: -17.375001907348633
    7. '
' → logprob: -19.000001907348633
    8. '-' → logprob: -20.125001907348633
    9. 'tuple' → logprob: -20.500001907348633
    10. '{' → logprob: -20.562501907348633

Token 1593: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6286106983898208e-05
    2. 'x' → logprob: -11.250016212463379
    3. '0' → logprob: -13.125016212463379
    4. ' ' → logprob: -14.500016212463379
    5. '[' → logprob: -14.625016212463379
    6. '   ' → logprob: -16.250017166137695
    7. '１' → logprob: -17.250017166137695
    8. '```' → logprob: -17.750017166137695
    9. '
' → logprob: -18.312517166137695
    10. '۱' → logprob: -18.375017166137695

Token 1594: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10432418435811996
    2. ')
' → logprob: -2.3543241024017334
    3. '])' → logprob: -5.6043243408203125
    4. '])
' → logprob: -7.8543243408203125
    5. ']' → logprob: -11.479324340820312
    6. ')x' → logprob: -11.854324340820312
    7. ')y' → logprob: -12.979324340820312
    8. ')

' → logprob: -13.104324340820312
    9. ')]' → logprob: -13.104324340820312
    10. '),' → logprob: -13.354324340820312

Token 1595: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03042231686413288
    2. '       ' → logprob: -3.5304222106933594
    3. 'self' → logprob: -8.65542221069336
    4. '<|end|>' → logprob: -8.65542221069336
    5. '
' → logprob: -9.65542221069336
    6. '   ' → logprob: -9.78042221069336
    7. '	       ' → logprob: -10.28042221069336
    8. '               ' → logprob: -10.40542221069336
    9. 'else' → logprob: -10.40542221069336
    10. 'elif' → logprob: -10.90542221069336

Token 1596: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -6.968934758333489e-05
    2. ' self' → logprob: -9.750069618225098
    3. '           ' → logprob: -11.500069618225098
    4. '       ' → logprob: -14.250069618225098
    5. '	self' → logprob: -15.750069618225098
    6. '(self' → logprob: -16.500070571899414
    7. '   ' → logprob: -16.750070571899414
    8. '
' → logprob: -16.875070571899414
    9. 's' → logprob: -17.000070571899414
    10. '         ' → logprob: -17.250070571899414

Token 1597: '.r' (ID: 2951)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0007237526006065309
    2. '.r' → logprob: -7.250723838806152
    3. 'c' → logprob: -11.875723838806152
    4. ' r' → logprob: -12.375723838806152
    5. '	r' → logprob: -13.625723838806152
    6. '.' → logprob: -15.500723838806152
    7. '
' → logprob: -15.875723838806152
    8. 'y' → logprob: -16.000722885131836
    9. '_r' → logprob: -16.125722885131836
    10. 'radius' → logprob: -16.125722885131836

Token 1598: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048589304089546204
    2. ' =' → logprob: -3.0485892295837402
    3. '=r' → logprob: -13.798589706420898
    4. '=y' → logprob: -14.423589706420898
    5. ' ' → logprob: -15.923589706420898
    6. '=x' → logprob: -16.2985897064209
    7. '=
' → logprob: -16.9235897064209
    8. '＝' → logprob: -17.1735897064209
    9. ')' → logprob: -17.4235897064209
    10. 'r' → logprob: -17.6735897064209

Token 1599: ' r' (ID: 428)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10501955449581146
    2. 'r' → logprob: -2.3550195693969727
    3. 'float' → logprob: -5.480019569396973
    4. 'x' → logprob: -7.730019569396973
    5. ' y' → logprob: -8.730019569396973
    6. ' float' → logprob: -12.355019569396973
    7. ' r' → logprob: -12.355019569396973
    8. 'Float' → logprob: -12.480019569396973
    9. 'Point' → logprob: -12.605019569396973
    10. 't' → logprob: -12.730019569396973

Token 1600: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1601: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1602: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00272831367328763
    2. 'class' → logprob: -6.877728462219238
    3. '#' → logprob: -7.252728462219238
    4. ' def' → logprob: -8.252728462219238
    5. '<|end|>' → logprob: -8.502728462219238
    6. ' ' → logprob: -8.627728462219238
    7. ')' → logprob: -9.252728462219238
    8. '   ' → logprob: -9.377728462219238
    9. 'd' → logprob: -10.752728462219238
    10. '
' → logprob: -10.752728462219238

Token 1603: ' cross' (ID: 8088)
  Prédit: 'contains'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contains' → logprob: -0.916455090045929
    2. 'inter' → logprob: -1.0414550304412842
    3. '__' → logprob: -2.041455030441284
    4. 'intersection' → logprob: -3.541455030441284
    5. 'area' → logprob: -3.916455030441284
    6. 'get' → logprob: -4.041455268859863
    7. 'contain' → logprob: -4.166455268859863
    8. 'is' → logprob: -5.291455268859863
    9. 'circ' → logprob: -5.416455268859863
    10. 'cross' → logprob: -5.541455268859863

Token 1604: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.24378420412540436
    2. '_point' → logprob: -1.7437841892242432
    3. 'point' → logprob: -3.493784189224243
    4. 'points' → logprob: -5.118784427642822
    5. 'es' → logprob: -5.993784427642822
    6. '_count' → logprob: -6.993784427642822
    7. 'Points' → logprob: -7.618784427642822
    8. 'count' → logprob: -8.243783950805664
    9. 'Point' → logprob: -8.368783950805664
    10. 'ings' → logprob: -9.618783950805664

Token 1605: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.6405310816480778e-05
    2. '(s' → logprob: -12.000016212463379
    3. 'self' → logprob: -12.250016212463379
    4. ' (' → logprob: -12.875016212463379
    5. '(' → logprob: -13.250016212463379
    6. '   ' → logprob: -14.625016212463379
    7. 'def' → logprob: -15.500016212463379
    8. '(
' → logprob: -16.125017166137695
    9. '       ' → logprob: -16.875017166137695
    10. '(this' → logprob: -17.125017166137695

Token 1606: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.000519312743563205
    2. '(s' → logprob: -7.875519275665283
    3. '(' → logprob: -9.375519752502441
    4. ' (' → logprob: -10.250519752502441
    5. 'self' → logprob: -11.125519752502441
    6. 's' → logprob: -14.000519752502441
    7. ')(' → logprob: -14.000519752502441
    8. 'def' → logprob: -14.250519752502441
    9. ')' → logprob: -14.875519752502441
    10. ',' → logprob: -14.875519752502441

Token 1607: ' s' (ID: 265)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.12855102121829987
    2. 'line' → logprob: -2.8785510063171387
    3. 's' → logprob: -3.2535510063171387
    4. 'other' → logprob: -3.8785510063171387
    5. ' l' → logprob: -6.378551006317139
    6. 'c' → logprob: -6.753551006317139
    7. 'L' → logprob: -7.128551006317139
    8. 'self' → logprob: -8.128551483154297
    9. 'circle' → logprob: -8.253551483154297
    10. ' line' → logprob: -8.878551483154297

Token 1608: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04243070259690285
    2. '):' → logprob: -3.6674306392669678
    3. '):
' → logprob: -4.292430877685547
    4. '       ' → logprob: -6.667430877685547
    5. 'self' → logprob: -8.042430877685547
    6. ',s' → logprob: -8.167430877685547
    7. '(self' → logprob: -8.417430877685547
    8. '   ' → logprob: -8.792430877685547
    9. '):
' → logprob: -10.667430877685547
    10. ',self' → logprob: -10.917430877685547

Token 1609: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.6457742175552994e-05
    2. '#' → logprob: -10.875056266784668
    3. ':' → logprob: -11.500056266784668
    4. ',' → logprob: -12.125056266784668
    5. ')' → logprob: -12.250056266784668
    6. '        
' → logprob: -12.875056266784668
    7. '[' → logprob: -13.500056266784668
    8. ' =' → logprob: -13.500056266784668
    9. '(' → logprob: -13.625056266784668
    10. '   ' → logprob: -14.000056266784668

Token 1610: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014585700118914247
    2. 'd' → logprob: -7.126458644866943
    3. 'p' → logprob: -9.126458168029785
    4. '#' → logprob: -9.501458168029785
    5. 'res' → logprob: -9.501458168029785
    6. 'def' → logprob: -9.501458168029785
    7. 'base' → logprob: -9.751458168029785
    8. 'r' → logprob: -9.876458168029785
    9. '   ' → logprob: -10.376458168029785
    10. '
' → logprob: -10.626458168029785

Token 1611: ' isinstance' (ID: 25889)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.9489368200302124
    2. ' isinstance' → logprob: -1.9489368200302124
    3. 'self' → logprob: -2.073936939239502
    4. 's' → logprob: -2.198936939239502
    5. 'not' → logprob: -2.323936939239502
    6. 'Vector' → logprob: -2.698936939239502
    7. 'is' → logprob: -3.573936939239502
    8. ' not' → logprob: -4.448936939239502
    9. 'type' → logprob: -4.573936939239502
    10. ' abs' → logprob: -5.698936939239502

Token 1612: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0024258368648588657
    2. 's' → logprob: -6.127425670623779
    3. '(self' → logprob: -8.627426147460938
    4. '(Line' → logprob: -10.502426147460938
    5. '(C' → logprob: -11.627426147460938
    6. '(' → logprob: -12.002426147460938
    7. 'self' → logprob: -12.377426147460938
    8. '(Point' → logprob: -12.627426147460938
    9. '(c' → logprob: -13.377426147460938
    10. '(S' → logprob: -13.627426147460938

Token 1613: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.9153885558771435e-06
    2. ' ,' → logprob: -12.125005722045898
    3. ',
' → logprob: -16.2500057220459
    4. '(Line' → logprob: -16.2500057220459
    5. '   ' → logprob: -16.3750057220459
    6. '(),' → logprob: -16.8750057220459
    7. '(' → logprob: -17.1250057220459
    8. ',(' → logprob: -17.1250057220459
    9. ',C' → logprob: -17.2500057220459
    10. 'a' → logprob: -17.7500057220459

Token 1614: ' Segment' (ID: 64922)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -0.44973963499069214
    2. 'Line' → logprob: -1.199739694595337
    3. 'Point' → logprob: -3.074739694595337
    4. 'Cir' → logprob: -4.699739456176758
    5. 'Circle' → logprob: -5.574739456176758
    6. 'Seg' → logprob: -6.449739456176758
    7. 'Vector' → logprob: -9.324739456176758
    8. ' Segment' → logprob: -9.699739456176758
    9. '(Line' → logprob: -10.324739456176758
    10. ' Line' → logprob: -11.199739456176758

Token 1615: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.043855585157871246
    2. '):' → logprob: -3.293855667114258
    3. ')' → logprob: -5.168855667114258
    4. '):
' → logprob: -10.043855667114258
    5. '   ' → logprob: -11.168855667114258
    6. '       ' → logprob: -11.168855667114258
    7. '()):
' → logprob: -11.168855667114258
    8. '):

' → logprob: -12.043855667114258
    9. ' or' → logprob: -12.668855667114258
    10. ' ):
' → logprob: -12.793855667114258

Token 1616: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000536232371814549
    2. ':' → logprob: -8.25053596496582
    3. '           ' → logprob: -9.50053596496582
    4. '#' → logprob: -9.62553596496582
    5. ',' → logprob: -10.37553596496582
    6. ':
' → logprob: -10.62553596496582
    7. '):
' → logprob: -10.62553596496582
    8. ' =' → logprob: -11.37553596496582
    9. ')' → logprob: -11.87553596496582
    10. '        
' → logprob: -11.87553596496582

Token 1617: ' pr' (ID: 550)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5041163563728333
    2. '       ' → logprob: -1.8791162967681885
    3. 'c' → logprob: -2.0041162967681885
    4. 'dist' → logprob: -3.3791162967681885
    5. '#' → logprob: -4.379116535186768
    6. 'h' → logprob: -4.754116535186768
    7. 'p' → logprob: -4.879116535186768
    8. 's' → logprob: -5.004116535186768
    9. 'line' → logprob: -5.129116535186768
    10. 'proj' → logprob: -5.129116535186768

Token 1618: ' =' (ID: 314)
  Prédit: 'oj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oj' → logprob: -0.039769433438777924
    2. 'o' → logprob: -3.414769411087036
    3. ' =' → logprob: -5.914769649505615
    4. '=' → logprob: -6.039769649505615
    5. '   ' → logprob: -7.289769649505615
    6. '       ' → logprob: -8.789769172668457
    7. 'oje' → logprob: -10.289769172668457
    8. 'j' → logprob: -10.664769172668457
    9. 'obj' → logprob: -10.914769172668457
    10. 'oc' → logprob: -10.914769172668457

Token 1619: ' self' (ID: 1051)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11300289630889893
    2. 'self' → logprob: -2.2380027770996094
    3. 'Point' → logprob: -9.61300277709961
    4. ' s' → logprob: -9.73800277709961
    5. ' self' → logprob: -10.86300277709961
    6. 'Vector' → logprob: -11.11300277709961
    7. '(s' → logprob: -12.11300277709961
    8. '(self' → logprob: -12.36300277709961
    9. 'p' → logprob: -13.61300277709961
    10. 'point' → logprob: -13.61300277709961

Token 1620: '.c' (ID: 1081)
  Prédit: '.project'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.project' → logprob: -0.003450388088822365
    2. '.distance' → logprob: -6.003450393676758
    3. '.reflect' → logprob: -7.128450393676758
    4. '.center' → logprob: -9.378450393676758
    5. '.pro' → logprob: -10.503450393676758
    6. '.' → logprob: -11.253450393676758
    7. '.closest' → logprob: -11.378450393676758
    8. '._' → logprob: -12.128450393676758
    9. '.radius' → logprob: -12.253450393676758
    10. 'project' → logprob: -12.503450393676758

Token 1621: '.project' (ID: 24908)
  Prédit: '.project'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.project' → logprob: -0.0003971839905716479
    2. '.distance' → logprob: -8.125396728515625
    3. '.reflect' → logprob: -9.875396728515625
    4. '.' → logprob: -10.500396728515625
    5. '.pro' → logprob: -11.250396728515625
    6. 'project' → logprob: -12.250396728515625
    7. '.point' → logprob: -13.500396728515625
    8. '.vector' → logprob: -13.875396728515625
    9. ' .' → logprob: -14.875396728515625
    10. '.dist' → logprob: -14.875396728515625

Token 1622: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.004626291338354349
    2. 's' → logprob: -5.379626274108887
    3. '(' → logprob: -12.754626274108887
    4. '(Line' → logprob: -13.504626274108887
    5. '(S' → logprob: -14.254626274108887
    6. 'line' → logprob: -15.254626274108887
    7. 'Line' → logprob: -15.254626274108887
    8. ' s' → logprob: -15.379626274108887
    9. 'd' → logprob: -16.379627227783203
    10. 'c' → logprob: -16.754627227783203

Token 1623: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2524082064628601
    2. ')
' → logprob: -1.5024082660675049
    3. '(' → logprob: -8.502408027648926
    4. '(Line' → logprob: -9.752408027648926
    5. 's' → logprob: -10.127408027648926
    6. 'segment' → logprob: -10.627408027648926
    7. ')
' → logprob: -10.752408027648926
    8. ').' → logprob: -11.127408027648926
    9. '),' → logprob: -11.252408027648926
    10. 'Segment' → logprob: -11.377408027648926

Token 1624: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0028461257461458445
    2. '       ' → logprob: -5.8778462409973145
    3. '	       ' → logprob: -10.752845764160156
    4. ',' → logprob: -12.377845764160156
    5. '#' → logprob: -13.002845764160156
    6. 'import' → logprob: -13.502845764160156
    7. '<|end|>' → logprob: -13.752845764160156
    8. '		' → logprob: -13.877845764160156
    9. '               ' → logprob: -13.877845764160156
    10. '		   ' → logprob: -13.877845764160156

Token 1625: ' e' (ID: 319)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.24847446382045746
    2. 'if' → logprob: -2.373474359512329
    3. 'dist' → logprob: -2.748474359512329
    4. '       ' → logprob: -2.873474359512329
    5. 'dp' → logprob: -5.998474597930908
    6. 'vec' → logprob: -6.873474597930908
    7. 'dis' → logprob: -7.623474597930908
    8. 'diff' → logprob: -8.24847412109375
    9. 'dx' → logprob: -8.49847412109375
    10. 'return' → logprob: -8.74847412109375

Token 1626: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5809247493743896
    2. ' =' → logprob: -1.7059247493743896
    3. 'p' → logprob: -1.9559247493743896
    4. 'ps' → logprob: -2.2059247493743896
    5. 'psilon' → logprob: -6.705924987792969
    6. 'f' → logprob: -7.455924987792969
    7. 'rr' → logprob: -7.455924987792969
    8. '   ' → logprob: -7.580924987792969
    9. 'v' → logprob: -7.830924987792969
    10. 'xt' → logprob: -7.955924987792969

Token 1627: ' (' (ID: 350)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.24024361371994019
    2. 'Vector' → logprob: -1.615243673324585
    3. '(s' → logprob: -4.490243434906006
    4. 'Segment' → logprob: -6.865243434906006
    5. 'pr' → logprob: -7.115243434906006
    6. '(' → logprob: -7.740243434906006
    7. '(Vector' → logprob: -7.740243434906006
    8. 'Point' → logprob: -7.865243434906006
    9. '(pr' → logprob: -8.490243911743164
    10. ' Vector' → logprob: -10.240243911743164

Token 1628: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0020493860356509686
    2. 'pr' → logprob: -6.377049446105957
    3. 'self' → logprob: -8.877049446105957
    4. '(s' → logprob: -9.127049446105957
    5. 'Point' → logprob: -10.877049446105957
    6. 'Vector' → logprob: -10.877049446105957
    7. '1' → logprob: -11.002049446105957
    8. '(' → logprob: -11.127049446105957
    9. '(pr' → logprob: -11.502049446105957
    10. 'Segment' → logprob: -11.877049446105957

Token 1629: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -1.759734732331708e-05
    2. '.' → logprob: -11.750017166137695
    3. 'p' → logprob: -11.875017166137695
    4. ').' → logprob: -13.375017166137695
    5. ' .' → logprob: -14.625017166137695
    6. '
' → logprob: -15.250017166137695
    7. '   ' → logprob: -16.125017166137695
    8. '.__' → logprob: -17.250017166137695
    9. '[' → logprob: -17.625017166137695
    10. '.pp' → logprob: -18.000017166137695

Token 1630: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14268940687179565
    2. '2' → logprob: -2.0176894664764404
    3. 'p' → logprob: -11.76768970489502
    4. '   ' → logprob: -12.89268970489502
    5. 'oint' → logprob: -13.89268970489502
    6. 'oints' → logprob: -14.39268970489502
    7. 't' → logprob: -14.64268970489502
    8. 'r' → logprob: -15.26768970489502
    9. ' ' → logprob: -15.39268970489502
    10. '  ' → logprob: -15.58018970489502

Token 1631: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5771806240081787
    2. '-' → logprob: -0.8271806240081787
    3. '-s' → logprob: -6.702180862426758
    4. '-p' → logprob: -11.827180862426758
    5. 's' → logprob: -13.077180862426758
    6. ' ' → logprob: -13.452180862426758
    7. '-
' → logprob: -14.327180862426758
    8. '   ' → logprob: -15.952180862426758
    9. '-self' → logprob: -16.077180862426758
    10. ' -
' → logprob: -16.327180862426758

Token 1632: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.016037069261074066
    2. ' s' → logprob: -4.1410369873046875
    3. '<|end|>' → logprob: -13.266036987304688
    4. ' ' → logprob: -14.891036987304688
    5. 'self' → logprob: -15.891036987304688
    6. '	s' → logprob: -15.891036987304688
    7. '   ' → logprob: -16.016036987304688
    8. '  ' → logprob: -16.891036987304688
    9. '           ' → logprob: -16.891036987304688
    10. '       ' → logprob: -17.141036987304688

Token 1633: '.p' (ID: 1201)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09180260449647903
    2. '1' → logprob: -3.0918025970458984
    3. '.s' → logprob: -3.3418025970458984
    4. ' s' → logprob: -5.591802597045898
    5. 'p' → logprob: -5.841802597045898
    6. '.p' → logprob: -8.341802597045898
    7. ' p' → logprob: -11.716802597045898
    8. '   ' → logprob: -12.091802597045898
    9. '(s' → logprob: -12.216802597045898
    10. 't' → logprob: -12.216802597045898

Token 1634: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.860340752406046e-05
    2. 's' → logprob: -10.3750581741333
    3. 'p' → logprob: -10.7500581741333
    4. 'oint' → logprob: -13.3750581741333
    5. ' ' → logprob: -13.6250581741333
    6. '   ' → logprob: -13.7500581741333
    7. 'oints' → logprob: -15.1250581741333
    8. '```' → logprob: -15.1250581741333
    9. ' s' → logprob: -15.3750581741333
    10. ' p' → logprob: -15.5000581741333

Token 1635: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03466608375310898
    2. ').' → logprob: -3.659666061401367
    3. ')/' → logprob: -5.159666061401367
    4. ')
' → logprob: -6.284666061401367
    5. '   ' → logprob: -8.034666061401367
    6. ').__' → logprob: -9.034666061401367
    7. ')/(' → logprob: -9.034666061401367
    8. ')*(' → logprob: -9.534666061401367
    9. ')*' → logprob: -11.159666061401367
    10. ')s' → logprob: -11.534666061401367

Token 1636: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.4532274007797241
    2. '/' → logprob: -1.0782274007797241
    3. ')' → logprob: -4.828227519989014
    4. '   ' → logprob: -5.203227519989014
    5. 's' → logprob: -6.328227519989014
    6. '/s' → logprob: -7.328227519989014
    7. '()/' → logprob: -7.453227519989014
    8. 't' → logprob: -7.578227519989014
    9. '/(' → logprob: -7.578227519989014
    10. 'class' → logprob: -7.828227519989014

Token 1637: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0036292888689786196
    2. '(abs' → logprob: -6.878629207611084
    3. 's' → logprob: -7.003629207611084
    4. 'sqrt' → logprob: -7.128629207611084
    5. '(s' → logprob: -7.378629207611084
    6. ' abs' → logprob: -8.378629684448242
    7. 'math' → logprob: -11.878629684448242
    8. 'norm' → logprob: -12.128629684448242
    9. '(' → logprob: -12.378629684448242
    10. 'fabs' → logprob: -13.378629684448242

Token 1638: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00027015688829123974
    2. 's' → logprob: -8.250269889831543
    3. '(' → logprob: -12.500269889831543
    4. ' (' → logprob: -12.875269889831543
    5. '(
' → logprob: -13.625269889831543
    6. '((' → logprob: -14.000269889831543
    7. '   ' → logprob: -15.625269889831543
    8. ' s' → logprob: -16.87527084350586
    9. '       ' → logprob: -16.87527084350586
    10. '(self' → logprob: -17.37527084350586

Token 1639: '.p' (ID: 1201)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.02256634272634983
    2. '.p' → logprob: -4.522566318511963
    3. 'p' → logprob: -5.147566318511963
    4. '.s' → logprob: -5.647566318511963
    5. '(p' → logprob: -6.397566318511963
    6. 's' → logprob: -7.772566318511963
    7. '(' → logprob: -11.272566795349121
    8. ')' → logprob: -12.647566795349121
    9. '
' → logprob: -12.897566795349121
    10. '(
' → logprob: -13.647566795349121

Token 1640: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00043341092532500625
    2. '1' → logprob: -8.625432968139648
    3. 'p' → logprob: -9.000432968139648
    4. '.p' → logprob: -9.875432968139648
    5. '(p' → logprob: -9.875432968139648
    6. '(' → logprob: -11.625432968139648
    7. 's' → logprob: -12.625432968139648
    8. '(s' → logprob: -12.750432968139648
    9. '.s' → logprob: -13.000432968139648
    10. '   ' → logprob: -13.250432968139648

Token 1641: ' -' (ID: 533)
  Prédit: '-s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-s' → logprob: -0.018899347633123398
    2. '-' → logprob: -4.268899440765381
    3. 's' → logprob: -5.518899440765381
    4. ' -' → logprob: -7.268899440765381
    5. '-
' → logprob: -12.393898963928223
    6. ' ' → logprob: -12.393898963928223
    7. '-p' → logprob: -13.268898963928223
    8. ' s' → logprob: -13.518898963928223
    9. '-с' → logprob: -13.893898963928223
    10. '_s' → logprob: -14.143898963928223

Token 1642: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.868328920158092e-05
    2. ' s' → logprob: -10.500028610229492
    3. 'p' → logprob: -14.000028610229492
    4. '1' → logprob: -17.125028610229492
    5. ' ' → logprob: -17.125028610229492
    6. 'self' → logprob: -17.125028610229492
    7. '   ' → logprob: -17.750028610229492
    8. '	s' → logprob: -18.250028610229492
    9. ')' → logprob: -18.500028610229492
    10. 'sp' → logprob: -18.625028610229492

Token 1643: '.p' (ID: 1201)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.014277982525527477
    2. '1' → logprob: -4.264277935028076
    3. ' s' → logprob: -9.514278411865234
    4. 'p' → logprob: -10.264278411865234
    5. '.s' → logprob: -13.389278411865234
    6. '   ' → logprob: -14.389278411865234
    7. '{s' → logprob: -14.764278411865234
    8. '<s' → logprob: -14.826778411865234
    9. '	s' → logprob: -14.889278411865234
    10. ' ' → logprob: -15.076778411865234

Token 1644: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.0339031834737398e-05
    2. 'p' → logprob: -10.875020027160645
    3. ' ' → logprob: -15.250020027160645
    4. '   ' → logprob: -15.500020027160645
    5. ')' → logprob: -16.50002098083496
    6. 's' → logprob: -16.68752098083496
    7. 'm' → logprob: -17.18752098083496
    8. ' p' → logprob: -17.18752098083496
    9. '.p' → logprob: -17.31252098083496
    10. '```' → logprob: -17.31252098083496

Token 1645: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6495416760444641
    2. ')' → logprob: -0.7745416760444641
    3. '       ' → logprob: -4.524541854858398
    4. '           ' → logprob: -5.899541854858398
    5. '
' → logprob: -6.649541854858398
    6. '<|end|>' → logprob: -7.774541854858398
    7. 'def' → logprob: -8.399541854858398
    8. ')

' → logprob: -8.649541854858398
    9. ',' → logprob: -9.274541854858398
    10. '   ' → logprob: -9.524541854858398

Token 1646: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000621653685811907
    2. 'd' → logprob: -7.625621795654297
    3. 'p' → logprob: -10.500621795654297
    4. '	       ' → logprob: -10.750621795654297
    5. 't' → logprob: -10.875621795654297
    6. '		' → logprob: -11.125621795654297
    7. 'import' → logprob: -11.625621795654297
    8. '       ' → logprob: -12.250621795654297
    9. 'delta' → logprob: -12.250621795654297
    10. 'from' → logprob: -12.500621795654297

Token 1647: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' (adapté à ' base') → logprob: -0.36952003836631775
    2. 'e' → logprob: -1.4945200681686401
    3. 'dis' → logprob: -2.6195199489593506
    4. 'dt' → logprob: -5.99452018737793
    5. 'det' → logprob: -6.61952018737793
    6. 'f' → logprob: -6.86952018737793
    7. 'd' → logprob: -7.24452018737793
    8. 'bas' → logprob: -7.24452018737793
    9. 'dp' → logprob: -7.36952018737793
    10. 'len' → logprob: -7.49452018737793

Token 1648: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04922069236636162
    2. ' =' → logprob: -3.0492208003997803
    3. 'v' → logprob: -8.54922103881836
    4. '=s' → logprob: -8.79922103881836
    5. '_vec' → logprob: -9.67422103881836
    6. 'd' → logprob: -9.79922103881836
    7. '_len' → logprob: -10.54922103881836
    8. '=e' → logprob: -10.54922103881836
    9. 'dist' → logprob: -11.04922103881836
    10. '_length' → logprob: -11.29922103881836

Token 1649: ' sqrt' (ID: 44237)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.3955041468143463
    2. 's' → logprob: -1.770504117012024
    3. '(s' → logprob: -2.6455042362213135
    4. 'abs' → logprob: -2.7705042362213135
    5. 'e' → logprob: -4.395503997802734
    6. 'self' → logprob: -5.395503997802734
    7. 'pr' → logprob: -6.270503997802734
    8. 'Point' → logprob: -6.770503997802734
    9. 'Vector' → logprob: -7.395503997802734
    10. '(abs' → logprob: -7.395503997802734

Token 1650: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20482254028320312
    2. '(self' → logprob: -2.454822540283203
    3. 'max' → logprob: -2.454822540283203
    4. '(max' → logprob: -4.329822540283203
    5. ' self' → logprob: -9.329822540283203
    6. '   ' → logprob: -9.454822540283203
    7. 'abs' → logprob: -10.454822540283203
    8. ' max' → logprob: -10.829822540283203
    9. '(abs' → logprob: -10.954822540283203
    10. '	self' → logprob: -11.204822540283203

Token 1651: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -7.183501293184236e-05
    2. 'r' → logprob: -9.62507152557373
    3. '(r' → logprob: -12.37507152557373
    4. '.' → logprob: -14.00007152557373
    5. ' .' → logprob: -15.25007152557373
    6. '	r' → logprob: -15.75007152557373
    7. ' r' → logprob: -16.500072479248047
    8. '[r' → logprob: -16.750072479248047
    9. '   ' → logprob: -17.250072479248047
    10. '```' → logprob: -17.250072479248047

Token 1652: ' *' (ID: 425)
  Prédit: '*self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*self' → logprob: -0.8224914073944092
    2. ' *' → logprob: -1.0724914073944092
    3. '**' → logprob: -1.5724914073944092
    4. '*' → logprob: -5.572491645812988
    5. '2' → logprob: -5.697491645812988
    6. '*r' → logprob: -6.322491645812988
    7. ' **' → logprob: -7.197491645812988
    8. ' ' → logprob: -7.572491645812988
    9. 'self' → logprob: -7.697491645812988
    10. '*s' → logprob: -9.197491645812988

Token 1653: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008529895567335188
    2. ' self' → logprob: -7.500853061676025
    3. '2' → logprob: -8.250852584838867
    4. '(self' → logprob: -11.000852584838867
    5. '
' → logprob: -11.625852584838867
    6. ' ' → logprob: -12.875852584838867
    7. 'se' → logprob: -13.500852584838867
    8. 'r' → logprob: -13.750852584838867
    9. 's' → logprob: -13.875852584838867
    10. '**' → logprob: -14.000852584838867

Token 1654: '.r' (ID: 2951)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01835665851831436
    2. '2' → logprob: -4.018356800079346
    3. '.r' → logprob: -9.518356323242188
    4. 'self' → logprob: -9.643356323242188
    5. '
' → logprob: -10.143356323242188
    6. ' r' → logprob: -12.268356323242188
    7. '```' → logprob: -12.268356323242188
    8. '_r' → logprob: -12.643356323242188
    9. ' ' → logprob: -13.143356323242188
    10. '
' → logprob: -13.268356323242188

Token 1655: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20151382684707642
    2. ' -' → logprob: -1.7015137672424316
    3. '   ' → logprob: -9.82651424407959
    4. ' ' → logprob: -10.82651424407959
    5. '-e' → logprob: -10.95151424407959
    6. '-s' → logprob: -13.20151424407959
    7. '-p' → logprob: -13.45151424407959
    8. '	' → logprob: -13.70151424407959
    9. '  ' → logprob: -14.20151424407959
    10. '−' → logprob: -14.20151424407959

Token 1656: ' (' (ID: 350)
  Prédit: '(pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pr' → logprob: -0.7127483487129211
    2. '(self' → logprob: -1.5877482891082764
    3. '(abs' → logprob: -1.8377482891082764
    4. 'abs' → logprob: -2.9627482891082764
    5. '(s' → logprob: -3.0877482891082764
    6. 'Vector' → logprob: -4.2127485275268555
    7. '(c' → logprob: -4.7127485275268555
    8. '(Vector' → logprob: -4.7127485275268555
    9. 'pr' → logprob: -5.0877485275268555
    10. '((' → logprob: -5.5877485275268555

Token 1657: 'pr' (ID: 638)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.002529052784666419
    2. '(abs' → logprob: -6.377529144287109
    3. '(s' → logprob: -8.37752914428711
    4. 'Vector' → logprob: -8.50252914428711
    5. 'pr' → logprob: -8.75252914428711
    6. '(pr' → logprob: -9.37752914428711
    7. ' abs' → logprob: -9.75252914428711
    8. 'self' → logprob: -9.87752914428711
    9. '(self' → logprob: -11.12752914428711
    10. 'e' → logprob: -11.50252914428711

Token 1658: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3871535658836365
    2. '-' → logprob: -1.1371536254882812
    3. '-c' → logprob: -8.887153625488281
    4. ' ' → logprob: -10.137153625488281
    5. '-distance' → logprob: -10.262153625488281
    6. '.distance' → logprob: -10.637153625488281
    7. 'distance' → logprob: -10.887153625488281
    8. '-self' → logprob: -11.637153625488281
    9. '-
' → logprob: -13.137153625488281
    10. '-C' → logprob: -13.262153625488281

Token 1659: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00026407750556245446
    2. ' self' → logprob: -8.250264167785645
    3. '(self' → logprob: -13.875264167785645
    4. 'http' → logprob: -15.125264167785645
    5. '[self' → logprob: -15.125264167785645
    6. 'c' → logprob: -15.375264167785645
    7. '	self' → logprob: -15.625264167785645
    8. ' ' → logprob: -15.750264167785645
    9. '           ' → logprob: -15.875264167785645
    10. ')' → logprob: -16.250263214111328

Token 1660: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -0.00018113377154804766
    2. 'c' → logprob: -8.625181198120117
    3. ' c' → logprob: -14.125181198120117
    4. '.' → logprob: -14.875181198120117
    5. '	c' → logprob: -15.750181198120117
    6. ')c' → logprob: -16.375181198120117
    7. ' ' → logprob: -17.250181198120117
    8. ').' → logprob: -17.500181198120117
    9. ' .' → logprob: -17.750181198120117
    10. '
' → logprob: -18.000181198120117

Token 1661: ').' (ID: 741)
  Prédit: '.norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.norm' → logprob: -0.2610327899456024
    2. ').' → logprob: -1.5110328197479248
    3. 'norm' → logprob: -5.761032581329346
    4. ')' → logprob: -6.011032581329346
    5. '   ' → logprob: -6.761032581329346
    6. '.' → logprob: -6.886032581329346
    7. ' norm' → logprob: -7.261032581329346
    8. ').__' → logprob: -9.386033058166504
    9. '
' → logprob: -9.511033058166504
    10. ' .' → logprob: -9.511033058166504

Token 1662: 'norm' (ID: 30970)
  Prédit: 'norm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'norm' → logprob: -2.069664333248511e-05
    2. 'abs' → logprob: -10.875020980834961
    3. '.norm' → logprob: -14.625020980834961
    4. '(norm' → logprob: -15.000020980834961
    5. '__' → logprob: -15.125020980834961
    6. ' norm' → logprob: -15.250020980834961
    7. '
' → logprob: -15.875020980834961
    8. 'dot' → logprob: -16.37502098083496
    9. '_norm' → logprob: -16.75002098083496
    10. '   ' → logprob: -17.87502098083496

Token 1663: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.003404659451916814
    2. '())
' → logprob: -6.37840461730957
    3. '()' → logprob: -6.50340461730957
    4. ' ())' → logprob: -8.87840461730957
    5. ')' → logprob: -10.12840461730957
    6. '())
' → logprob: -12.62840461730957
    7. '()>' → logprob: -12.75340461730957
    8. '())

' → logprob: -12.87840461730957
    9. '().' → logprob: -13.00340461730957
    10. '());' → logprob: -13.12840461730957

Token 1664: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015781065449118614
    2. 'p' → logprob: -4.515780925750732
    3. 't' → logprob: -6.390780925750732
    4. 'if' → logprob: -6.765780925750732
    5. 'd' → logprob: -7.265780925750732
    6. 'f' → logprob: -8.51578140258789
    7. 'ans' → logprob: -8.89078140258789
    8. 's' → logprob: -8.89078140258789
    9. 'v' → logprob: -9.39078140258789
    10. 'e' → logprob: -9.64078140258789

Token 1665: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.9623305797576904
    2. 'p' → logprob: -1.3373305797576904
    3. 'ret' → logprob: -1.9623305797576904
    4. 'ans' → logprob: -2.0873305797576904
    5. 'res' → logprob: -2.9623305797576904
    6. 'e' → logprob: -3.8373305797576904
    7. '           ' → logprob: -4.5873308181762695
    8. '       ' → logprob: -5.9623308181762695
    9. 'result' → logprob: -6.8373308181762695
    10. 'a' → logprob: -7.5873308181762695

Token 1666: ' pr' (ID: 550)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006988515146076679
    2. '[
' → logprob: -5.131988525390625
    3. '(pr' → logprob: -8.006988525390625
    4. 'pr' → logprob: -8.381988525390625
    5. 'Point' → logprob: -8.631988525390625
    6. '[(' → logprob: -8.881988525390625
    7. '   ' → logprob: -9.756988525390625
    8. ' [' → logprob: -10.131988525390625
    9. '(Point' → logprob: -10.631988525390625
    10. '[p' → logprob: -10.881988525390625

Token 1667: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0326199010014534
    2. '-' → logprob: -4.157619953155518
    3. ' +' → logprob: -4.282619953155518
    4. '-e' → logprob: -6.282619953155518
    5. ' -' → logprob: -7.282619953155518
    6. ' ' → logprob: -10.15761947631836
    7. '   ' → logprob: -11.65761947631836
    8. '+
' → logprob: -12.03261947631836
    9. '+b' → logprob: -12.03261947631836
    10. '+-' → logprob: -12.15761947631836

Token 1668: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0009549325914122164
    2. ' e' → logprob: -7.125955104827881
    3. '(e' → logprob: -8.875954627990723
    4. '(' → logprob: -12.000954627990723
    5. ' ' → logprob: -13.375954627990723
    6. ' (' → logprob: -14.125954627990723
    7. '	e' → logprob: -14.125954627990723
    8. '   ' → logprob: -14.250954627990723
    9. '  ' → logprob: -14.750954627990723
    10. 'base' → logprob: -15.875954627990723

Token 1669: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.16030403971672058
    2. ' *' → logprob: -1.910304069519043
    3. '*(' → logprob: -10.285304069519043
    4. '*object' → logprob: -11.035304069519043
    5. '   ' → logprob: -11.285304069519043
    6. ' ' → logprob: -11.785304069519043
    7. '	' → logprob: -12.910304069519043
    8. '  ' → logprob: -13.160304069519043
    9. '*(-' → logprob: -13.285304069519043
    10. '(base' → logprob: -14.285304069519043

Token 1670: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0001544321421533823
    2. ' base' → logprob: -8.875154495239258
    3. '(base' → logprob: -12.125154495239258
    4. '-base' → logprob: -12.750154495239258
    5. '(-' → logprob: -13.250154495239258
    6. '   ' → logprob: -13.375154495239258
    7. ' ' → logprob: -13.750154495239258
    8. '-' → logprob: -14.125154495239258
    9. '  ' → logprob: -15.125154495239258
    10. 'b' → logprob: -15.750154495239258

Token 1671: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03982419893145561
    2. '       ' → logprob: -3.7898242473602295
    3. 'pr' → logprob: -4.16482400894165
    4. ' ,' → logprob: -7.91482400894165
    5. '   ' → logprob: -8.664824485778809
    6. '           ' → logprob: -9.289824485778809
    7. ',
' → logprob: -9.539824485778809
    8. '	pr' → logprob: -10.164824485778809
    9. ',p' → logprob: -10.539824485778809
    10. '	' → logprob: -10.914824485778809

Token 1672: ' pr' (ID: 550)
  Prédit: ' pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pr' → logprob: -0.3133011758327484
    2. 'pr' → logprob: -1.3133012056350708
    3. '   ' → logprob: -11.563301086425781
    4. '    ' → logprob: -11.813301086425781
    5. '	pr' → logprob: -11.813301086425781
    6. ' ' → logprob: -12.063301086425781
    7. ' ' → logprob: -12.563301086425781
    8. '(pr' → logprob: -13.438301086425781
    9. '       ' → logprob: -14.188301086425781
    10. '  ' → logprob: -14.188301086425781

Token 1673: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07891204208135605
    2. ' -' → logprob: -2.5789120197296143
    3. '+' → logprob: -11.203911781311035
    4. ' ' → logprob: -12.828911781311035
    5. '−' → logprob: -13.328911781311035
    6. '-
' → logprob: -13.703911781311035
    7. '
' → logprob: -14.578911781311035
    8. '   ' → logprob: -14.703911781311035
    9. ' +' → logprob: -14.953911781311035
    10. '-e' → logprob: -15.203911781311035

Token 1674: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.004078758880496025
    2. ' e' → logprob: -5.5040788650512695
    3. '(e' → logprob: -15.12907886505127
    4. '	e' → logprob: -17.254077911376953
    5. ' (' → logprob: -18.879077911376953
    6. '(' → logprob: -19.254077911376953
    7. '   ' → logprob: -20.254077911376953
    8. ' ' → logprob: -21.254077911376953
    9. 'ｅ' → logprob: -21.379077911376953
    10. '[' → logprob: -21.629077911376953

Token 1675: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.020557070150971413
    2. '*' → logprob: -3.895557165145874
    3. 'base' → logprob: -11.395557403564453
    4. ' base' → logprob: -12.770557403564453
    5. '(base' → logprob: -14.270557403564453
    6. ' ' → logprob: -15.395557403564453
    7. '**' → logprob: -16.770557403564453
    8. '[' → logprob: -17.395557403564453
    9. '"' → logprob: -17.520557403564453
    10. '	base' → logprob: -17.520557403564453

Token 1676: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.00015860427811276168
    2. ' base' → logprob: -8.750158309936523
    3. '(base' → logprob: -15.875158309936523
    4. '	base' → logprob: -18.875158309936523
    5. 'b' → logprob: -19.750158309936523
    6. 'bas' → logprob: -21.750158309936523
    7. 'basis' → logprob: -21.750158309936523
    8. '.base' → logprob: -22.375158309936523
    9. '_base' → logprob: -22.500158309936523
    10. 'based' → logprob: -22.500158309936523

Token 1677: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1678: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5008288025856018
    2. '<|end|>' → logprob: -1.000828742980957
    3. ')' → logprob: -4.000828742980957
    4. 'class' → logprob: -5.875828742980957
    5. ' ' → logprob: -6.625828742980957
    6. '   ' → logprob: -6.625828742980957
    7. '<|end|>' → logprob: -7.500828742980957
    8. '

' → logprob: -7.500828742980957
    9. '```' → logprob: -8.500828742980957
    10. '    
' → logprob: -8.625828742980957

Token 1679: ' elif' (ID: 9497)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1680: ' isinstance' (ID: 25889)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.012956798076629639
    2. ' isinstance' → logprob: -4.387956619262695
    3. '   ' → logprob: -8.762956619262695
    4. '(is' → logprob: -9.012956619262695
    5. 's' → logprob: -9.262956619262695
    6. 'Line' → logprob: -10.387956619262695
    7. '       ' → logprob: -11.137956619262695
    8. 'not' → logprob: -12.387956619262695
    9. 'line' → logprob: -12.512956619262695
    10. ' s' → logprob: -12.762956619262695

Token 1681: '(s' (ID: 1858)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7158512473106384
    2. '(s' → logprob: -1.2158513069152832
    3. '(Line' → logprob: -1.5908513069152832
    4. 'Line' → logprob: -4.840851306915283
    5. '(C' → logprob: -7.340851306915283
    6. '(' → logprob: -7.465851306915283
    7. ' s' → logprob: -7.715851306915283
    8. 'Segment' → logprob: -7.965851306915283
    9. '(Point' → logprob: -8.215850830078125
    10. '(S' → logprob: -8.340850830078125

Token 1682: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1875571544806007e-05
    2. '(Line' → logprob: -12.500011444091797
    3. ' ,' → logprob: -12.750011444091797
    4. '(Point' → logprob: -13.125011444091797
    5. '(' → logprob: -13.625011444091797
    6. ',
' → logprob: -14.500011444091797
    7. ')' → logprob: -14.875011444091797
    8. '   ' → logprob: -15.000011444091797
    9. ',(' → logprob: -15.875011444091797
    10. '       ' → logprob: -16.250011444091797

Token 1683: ' Cir' (ID: 39325)
  Prédit: 'Line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Line' → logprob: -0.0034367309417575598
    2. 'Point' → logprob: -6.00343656539917
    3. ' Line' → logprob: -7.37843656539917
    4. 'Vector' → logprob: -8.503437042236328
    5. 'Ray' → logprob: -9.628437042236328
    6. 'Circle' → logprob: -10.253437042236328
    7. 'Segment' → logprob: -10.753437042236328
    8. 'Cir' → logprob: -12.378437042236328
    9. ' Point' → logprob: -13.128437042236328
    10. '(Line' → logprob: -13.378437042236328

Token 1684: 'le' (ID: 282)
  Prédit: 'cle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.0019894209690392017
    2. 'le' → logprob: -7.001989364624023
    3. 'cles' → logprob: -7.626989364624023
    4. 'c' → logprob: -8.126989364624023
    5. 'class' → logprob: -9.251989364624023
    6. 'cl' → logprob: -9.501989364624023
    7. 'clear' → logprob: -10.001989364624023
    8. 'ce' → logprob: -10.626989364624023
    9. 'circle' → logprob: -11.251989364624023
    10. 'cler' → logprob: -11.376989364624023

Token 1685: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07093323022127151
    2. '):' → logprob: -2.6959333419799805
    3. ')' → logprob: -7.1959333419799805
    4. '):
' → logprob: -9.07093334197998
    5. '):

' → logprob: -9.69593334197998
    6. '(' → logprob: -10.94593334197998
    7. '()):
' → logprob: -11.69593334197998
    8. ':' → logprob: -11.82093334197998
    9. 'class' → logprob: -12.32093334197998
    10. '   ' → logprob: -12.57093334197998

Token 1686: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010154220508411527
    2. 'def' → logprob: -7.1260151863098145
    3. '<|end|>' → logprob: -9.876015663146973
    4. '   ' → logprob: -10.126015663146973
    5. ' def' → logprob: -10.126015663146973
    6. 'class' → logprob: -10.751015663146973
    7. '#' → logprob: -11.001015663146973
    8. '	def' → logprob: -12.001015663146973
    9. ',' → logprob: -12.251015663146973
    10. '	' → logprob: -12.376015663146973

Token 1687: ' c' (ID: 274)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06342601031064987
    2. '       ' → logprob: -2.9384260177612305
    3. '   ' → logprob: -5.5634260177612305
    4. ' def' → logprob: -6.1884260177612305
    5. 'd' → logprob: -6.5634260177612305
    6. 'c' (adapté à ' c') → logprob: -7.9384260177612305
    7. 'dx' → logprob: -8.18842601776123
    8. '#' → logprob: -8.93842601776123
    9. 'from' → logprob: -9.06342601776123
    10. 'import' → logprob: -9.18842601776123

Token 1688: '2' (ID: 17)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4937951862812042
    2. 'dx' → logprob: -1.6187951564788818
    3. 'd' → logprob: -2.493795156478882
    4. 'c' → logprob: -2.743795156478882
    5. '_dx' → logprob: -3.993795156478882
    6. '=' → logprob: -5.243795394897461
    7. 'dist' → logprob: -5.243795394897461
    8. ' =' → logprob: -5.993795394897461
    9. '#' → logprob: -6.243795394897461
    10. '_dist' → logprob: -6.618795394897461

Token 1689: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5800139307975769
    2. '=' → logprob: -0.8300139307975769
    3. 'c' → logprob: -6.205013751983643
    4. '2' → logprob: -7.830013751983643
    5. '       ' → logprob: -8.0800142288208
    6. '   ' → logprob: -8.0800142288208
    7. '=c' → logprob: -8.2050142288208
    8. 'x' → logprob: -9.3300142288208
    9. 'class' → logprob: -9.4550142288208
    10. '_c' → logprob: -9.4550142288208

Token 1690: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0008895447244867682
    2. 'Point' → logprob: -7.625889778137207
    3. 'self' → logprob: -8.375889778137207
    4. ' s' → logprob: -9.000889778137207
    5. 'Vector' → logprob: -10.500889778137207
    6. 'Circle' → logprob: -11.625889778137207
    7. '(s' → logprob: -13.000889778137207
    8. 'Cir' → logprob: -13.500889778137207
    9. '   ' → logprob: -13.750889778137207
    10. 'Line' → logprob: -14.500889778137207

Token 1691: '
' (ID: 198)
  Prédit: '.c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -6.420598219847307e-05
    2. 'c' → logprob: -9.7500638961792
    3. '.' → logprob: -12.8750638961792
    4. ' .' → logprob: -14.2500638961792
    5. '   ' → logprob: -14.5000638961792
    6. 'class' → logprob: -14.5000638961792
    7. '
' → logprob: -15.1250638961792
    8. '.r' → logprob: -15.5000638961792
    9. '	c' → logprob: -15.7500638961792
    10. '.__' → logprob: -15.7500638961792

Token 1692: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5643220543861389
    2. '   ' → logprob: -1.5643219947814941
    3. '           ' → logprob: -2.189321994781494
    4. 'c' → logprob: -3.314321994781494
    5. '.c' → logprob: -3.439321994781494
    6. 'class' → logprob: -4.314321994781494
    7. ' =' → logprob: -4.814321994781494
    8. 'import' → logprob: -5.439321994781494
    9. ',' → logprob: -5.939321994781494
    10. '
' → logprob: -6.189321994781494

Token 1693: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.0024378544185310602
    2. '   ' → logprob: -6.502438068389893
    3. 'dx' → logprob: -8.627437591552734
    4. 'def' → logprob: -8.877437591552734
    5. '       ' → logprob: -9.127437591552734
    6. 'c' → logprob: -9.377437591552734
    7. 'p' → logprob: -9.627437591552734
    8. 'diff' → logprob: -9.752437591552734
    9. 'dc' → logprob: -9.877437591552734
    10. 'q' → logprob: -10.252437591552734

Token 1694: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.52367103099823
    2. ' =' → logprob: -0.89867103099823
    3. 'ist' → logprob: -8.39867115020752
    4. 'x' → logprob: -8.89867115020752
    5. 'istance' → logprob: -9.14867115020752
    6. 'c' → logprob: -11.27367115020752
    7. ' ' → logprob: -11.64867115020752
    8. 'vec' → logprob: -11.64867115020752
    9. '_vec' → logprob: -11.89867115020752
    10. '2' → logprob: -12.02367115020752

Token 1695: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.22546829283237457
    2. '(self' → logprob: -2.350468397140503
    3. 'self' → logprob: -2.475468397140503
    4. '(abs' → logprob: -4.225468158721924
    5. '(c' → logprob: -6.225468158721924
    6. 'sqrt' → logprob: -6.475468158721924
    7. 'Vector' → logprob: -6.600468158721924
    8. ' abs' → logprob: -6.850468158721924
    9. '(s' → logprob: -7.100468158721924
    10. 'c' → logprob: -7.225468158721924

Token 1696: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0006681174854747951
    2. 'self' → logprob: -7.750668048858643
    3. '(c' → logprob: -8.3756685256958
    4. 'c' → logprob: -12.2506685256958
    5. '(' → logprob: -13.5006685256958
    6. '((' → logprob: -15.2506685256958
    7. '(s' → logprob: -15.3756685256958
    8. ' self' → logprob: -15.8756685256958
    9. '	self' → logprob: -15.8756685256958
    10. 's' → logprob: -16.875667572021484

Token 1697: '.c' (ID: 1081)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06462892144918442
    2. '.c' → logprob: -2.814628839492798
    3. 'self' → logprob: -5.939629077911377
    4. ' c' → logprob: -10.939628601074219
    5. '	c' → logprob: -12.689628601074219
    6. ' self' → logprob: -13.189628601074219
    7. '   ' → logprob: -14.439628601074219
    8. '(self' → logprob: -14.564628601074219
    9. ' ' → logprob: -15.564628601074219
    10. 'C' → logprob: -15.939628601074219

Token 1698: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.38762226700782776
    2. ' -' → logprob: -1.1376222372055054
    3. '-c' → logprob: -7.387622356414795
    4. '-s' → logprob: -9.012621879577637
    5. ' ' → logprob: -12.762621879577637
    6. '-
' → logprob: -13.012621879577637
    7. 's' → logprob: -13.387621879577637
    8. '-p' → logprob: -14.012621879577637
    9. '-point' → logprob: -14.512621879577637
    10. '-self' → logprob: -14.762621879577637

Token 1699: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0005530327325686812
    2. ' c' → logprob: -7.500553131103516
    3. '   ' → logprob: -16.625553131103516
    4. '	c' → logprob: -16.750553131103516
    5. ' ' → logprob: -18.875553131103516
    6. 's' → logprob: -19.500553131103516
    7. '           ' → logprob: -19.625553131103516
    8. '  ' → logprob: -19.875553131103516
    9. '    ' → logprob: -20.000553131103516
    10. '       ' → logprob: -20.250553131103516

Token 1700: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008070098701864481
    2. 'c' → logprob: -7.12580680847168
    3. ' c' → logprob: -14.00080680847168
    4. '.c' → logprob: -14.12580680847168
    5. '_c' → logprob: -15.12580680847168
    6. '   ' → logprob: -15.12580680847168
    7. ' ' → logprob: -15.12580680847168
    8. '.' → logprob: -16.87580680847168
    9. 's' → logprob: -16.87580680847168
    10. '	c' → logprob: -17.12580680847168

Token 1701: '.c' (ID: 1081)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00023452966706827283
    2. '.c' → logprob: -8.500234603881836
    3. ' c' → logprob: -11.500234603881836
    4. ')' → logprob: -11.500234603881836
    5. ')c' → logprob: -11.500234603881836
    6. '	c' → logprob: -15.000234603881836
    7. '_c' → logprob: -15.625234603881836
    8. '   ' → logprob: -16.750234603881836
    9. '.' → logprob: -17.125234603881836
    10. '  ' → logprob: -17.625234603881836

Token 1702: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6721398830413818
    2. ')' → logprob: -0.7971398830413818
    3. '())
' → logprob: -3.797139883041382
    4. '())' → logprob: -4.422140121459961
    5. '       ' → logprob: -5.672140121459961
    6. '()' → logprob: -7.672140121459961
    7. '           ' → logprob: -9.297140121459961
    8. ')
' → logprob: -9.797140121459961
    9. '(' → logprob: -9.922140121459961
    10. 'c' → logprob: -10.047140121459961

Token 1703: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011084253899753094
    2. '       ' → logprob: -4.511084079742432
    3. 'n' → logprob: -12.01108455657959
    4. 'import' → logprob: -12.13608455657959
    5. '   ' → logprob: -12.38608455657959
    6. 'from' → logprob: -12.76108455657959
    7. 'd' → logprob: -13.01108455657959
    8. '	       ' → logprob: -13.26108455657959
    9. 'a' → logprob: -13.76108455657959
    10. 'x' → logprob: -13.76108455657959

Token 1704: ' a' (ID: 261)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02681792713701725
    2. 'r' → logprob: -3.776818037033081
    3. '           ' → logprob: -6.151817798614502
    4. '       ' → logprob: -8.15181827545166
    5. '#' → logprob: -8.27681827545166
    6. 'a' (adapté à ' a') → logprob: -8.65181827545166
    7. '   ' → logprob: -9.02681827545166
    8. 'dr' → logprob: -9.02681827545166
    9. 'l' → logprob: -9.52681827545166
    10. ' if' → logprob: -9.65181827545166

Token 1705: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0431058369576931
    2. '=' → logprob: -3.1681058406829834
    3. ',' → logprob: -9.668106079101562
    4. ' ' → logprob: -11.168106079101562
    5. ' =
' → logprob: -11.168106079101562
    6. ')' → logprob: -12.293106079101562
    7. '=
' → logprob: -13.418106079101562
    8. 's' → logprob: -13.668106079101562
    9. '<|end|>' → logprob: -14.418106079101562
    10. 'b' → logprob: -14.543106079101562

Token 1706: ' acos' (ID: 185572)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4432162046432495
    2. '((' → logprob: -1.1932162046432495
    3. '(' → logprob: -3.693216323852539
    4. '(d' → logprob: -4.443216323852539
    5. '(r' → logprob: -4.818216323852539
    6. '(s' → logprob: -5.443216323852539
    7. ' (' → logprob: -6.068216323852539
    8. '(float' → logprob: -6.568216323852539
    9. '(abs' → logprob: -7.693216323852539
    10. '(c' → logprob: -7.943216323852539

Token 1707: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0052766879089176655
    2. '(' → logprob: -5.630276679992676
    3. '(max' → logprob: -7.130276679992676
    4. '(min' → logprob: -7.380276679992676
    5. '(
' → logprob: -8.505276679992676
    6. '   ' → logprob: -10.630276679992676
    7. '(d' → logprob: -11.880276679992676
    8. ' (' → logprob: -12.755276679992676
    9. ' ' → logprob: -12.755276679992676
    10. '(float' → logprob: -12.880276679992676

Token 1708: 'self' (ID: 1156)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002116238931193948
    2. '(d' → logprob: -6.8771162033081055
    3. '((' → logprob: -7.2521162033081055
    4. 'self' → logprob: -8.002116203308105
    5. '(max' → logprob: -10.752116203308105
    6. ' (' → logprob: -11.877116203308105
    7. '(' → logprob: -12.502116203308105
    8. '(s' → logprob: -12.752116203308105
    9. '(min' → logprob: -13.252116203308105
    10. 'd' → logprob: -13.502116203308105

Token 1709: '.r' (ID: 2951)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.009777337312698364
    2. '.r' → logprob: -4.634777545928955
    3. '(r' → logprob: -11.384777069091797
    4. 'self' → logprob: -12.759777069091797
    5. '_r' → logprob: -12.884777069091797
    6. ' r' → logprob: -13.884777069091797
    7. '
' → logprob: -14.009777069091797
    8. '   ' → logprob: -14.009777069091797
    9. '	r' → logprob: -14.759777069091797
    10. ' ' → logprob: -14.759777069091797

Token 1710: ' *' (ID: 425)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.03769967332482338
    2. '*' → logprob: -3.7876996994018555
    3. '*r' → logprob: -4.2876996994018555
    4. ' *' → logprob: -8.662699699401855
    5. '*s' → logprob: -9.287699699401855
    6. '*a' → logprob: -9.662699699401855
    7. ' **' → logprob: -9.787699699401855
    8. '*self' → logprob: -10.037699699401855
    9. '2' → logprob: -10.287699699401855
    10. 'r' → logprob: -10.537699699401855

Token 1711: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000943980470765382
    2. 'a' → logprob: -7.750944137573242
    3. 'r' → logprob: -8.125944137573242
    4. '2' → logprob: -9.375944137573242
    5. '(' → logprob: -10.125944137573242
    6. ' self' → logprob: -10.250944137573242
    7. 'd' → logprob: -10.500944137573242
    8. '(self' → logprob: -10.875944137573242
    9. '*self' → logprob: -12.875944137573242
    10. '   ' → logprob: -13.625944137573242

Token 1712: '.r' (ID: 2951)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -7.703443770878948e-06
    2. '.r' → logprob: -12.875007629394531
    3. '2' → logprob: -13.375007629394531
    4. ' r' → logprob: -13.625007629394531
    5. 'a' → logprob: -13.875007629394531
    6. '**' → logprob: -14.750007629394531
    7. '*r' → logprob: -14.750007629394531
    8. 'x' → logprob: -15.000007629394531
    9. 'rr' → logprob: -16.50000762939453
    10. '0' → logprob: -16.62500762939453

Token 1713: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25201183557510376
    2. ' +' → logprob: -1.502011775970459
    3. ' ' → logprob: -9.502012252807617
    4. '   ' → logprob: -12.877012252807617
    5. '＋' → logprob: -14.377012252807617
    6. '-' → logprob: -14.502012252807617
    7. ' plus' → logprob: -14.502012252807617
    8. '+
' → logprob: -14.502012252807617
    9. '+(' → logprob: -14.502012252807617
    10. '  ' → logprob: -14.877012252807617

Token 1714: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0002703953068703413
    2. ' d' → logprob: -8.25027084350586
    3. '(d' → logprob: -12.00027084350586
    4. '   ' → logprob: -13.25027084350586
    5. '	d' → logprob: -14.75027084350586
    6. ' ' → logprob: -14.87527084350586
    7. '  ' → logprob: -15.12527084350586
    8. '     ' → logprob: -16.62527084350586
    9. '    ' → logprob: -16.75027084350586
    10. 'c' → logprob: -17.37527084350586

Token 1715: ' *' (ID: 425)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.632822573184967
    2. '*' → logprob: -0.882822573184967
    3. ' *' → logprob: -3.7578225135803223
    4. ' ' → logprob: -4.507822513580322
    5. '2' → logprob: -5.007822513580322
    6. 'd' → logprob: -5.507822513580322
    7. '   ' → logprob: -5.757822513580322
    8. '[' → logprob: -6.882822513580322
    9. ' **' → logprob: -7.132822513580322
    10. '*d' → logprob: -7.132822513580322

Token 1716: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00018923594325315207
    2. ' d' → logprob: -9.000188827514648
    3. '(d' → logprob: -10.250188827514648
    4. '   ' → logprob: -12.000188827514648
    5. ' ' → logprob: -12.375188827514648
    6. '(' → logprob: -12.500188827514648
    7. '*d' → logprob: -12.500188827514648
    8. '
' → logprob: -13.125188827514648
    9. '	d' → logprob: -13.125188827514648
    10. '  ' → logprob: -13.625188827514648

Token 1717: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08925874531269073
    2. ' -' → logprob: -2.4642586708068848
    3. ' ' → logprob: -8.839259147644043
    4. '+' → logprob: -9.089259147644043
    5. ')' → logprob: -11.214259147644043
    6. '   ' → logprob: -11.589259147644043
    7. '-(' → logprob: -11.589259147644043
    8. 'd' → logprob: -12.089259147644043
    9. '```' → logprob: -12.339259147644043
    10. 's' → logprob: -12.839259147644043

Token 1718: ' c' (ID: 274)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16134116053581238
    2. ' s' → logprob: -1.9113411903381348
    3. 'c' → logprob: -7.036341190338135
    4. ' c' → logprob: -8.661340713500977
    5. '   ' → logprob: -10.536340713500977
    6. ' ' → logprob: -11.661340713500977
    7. '    ' → logprob: -11.661340713500977
    8. '  ' → logprob: -12.161340713500977
    9. '       ' → logprob: -12.661340713500977
    10. '           ' → logprob: -12.661340713500977

Token 1719: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0018715211190283298
    2. '.r' → logprob: -6.876871585845947
    3. 'r' → logprob: -7.501871585845947
    4. 's' → logprob: -8.376871109008789
    5. '.s' → logprob: -9.876871109008789
    6. '.c' → logprob: -13.751871109008789
    7. '   ' → logprob: -14.501871109008789
    8. 'c' → logprob: -14.751871109008789
    9. 'self' → logprob: -14.876871109008789
    10. '```' → logprob: -15.126871109008789

Token 1720: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.07889717072248459
    2. 'r' → logprob: -2.57889723777771
    3. '.' → logprob: -12.453897476196289
    4. '	r' → logprob: -13.328897476196289
    5. '
' → logprob: -14.703897476196289
    6. '```' → logprob: -15.078897476196289
    7. '_r' → logprob: -15.453897476196289
    8. '   ' → logprob: -15.578897476196289
    9. ' r' → logprob: -15.828897476196289
    10. ' .' → logprob: -16.20389747619629

Token 1721: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2338123917579651
    2. '**' → logprob: -2.3588123321533203
    3. ')/(' → logprob: -2.6088123321533203
    4. '*' → logprob: -3.6088123321533203
    5. '2' → logprob: -5.23381233215332
    6. ' ' → logprob: -6.35881233215332
    7. ' )' → logprob: -6.73381233215332
    8. 'r' → logprob: -6.98381233215332
    9. '0' → logprob: -7.35881233215332
    10. ')/' → logprob: -7.48381233215332

Token 1722: ' c' (ID: 274)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7975761890411377
    2. '2' → logprob: -1.1725761890411377
    3. '(s' → logprob: -2.5475761890411377
    4. '(c' → logprob: -3.2975761890411377
    5. ' (' → logprob: -3.4225761890411377
    6. 's' → logprob: -3.5475761890411377
    7. ' ' → logprob: -3.6725761890411377
    8. 'c' → logprob: -3.7975761890411377
    9. '   ' → logprob: -5.297575950622559
    10. 'd' → logprob: -6.172575950622559

Token 1723: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.14887377619743347
    2. 'r' → logprob: -2.023873805999756
    3. 'c' → logprob: -6.148873805999756
    4. '.r' → logprob: -6.273873805999756
    5. '*r' → logprob: -6.773873805999756
    6. '**' → logprob: -8.273873329162598
    7. 'self' → logprob: -8.273873329162598
    8. '   ' → logprob: -9.023873329162598
    9. '```' → logprob: -9.273873329162598
    10. '.c' → logprob: -9.773873329162598

Token 1724: '.r' (ID: 2951)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -5.676981345459353e-06
    2. '2' → logprob: -13.250005722045898
    3. ' r' → logprob: -13.500005722045898
    4. '.r' → logprob: -13.500005722045898
    5. ')' → logprob: -14.875005722045898
    6. '   ' → logprob: -15.625005722045898
    7. '**' → logprob: -15.750005722045898
    8. '*r' → logprob: -15.875005722045898
    9. 'self' → logprob: -16.8750057220459
    10. '```' → logprob: -16.8750057220459

Token 1725: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08109729737043381
    2. ' )' → logprob: -2.706097364425659
    3. ')/(' → logprob: -5.08109712600708
    4. ')/' → logprob: -5.70609712600708
    5. ' ' → logprob: -7.58109712600708
    6. ' -' → logprob: -8.331097602844238
    7. '*' → logprob: -8.706097602844238
    8. ' +' → logprob: -8.706097602844238
    9. '       ' → logprob: -9.081097602844238
    10. '   ' → logprob: -9.581097602844238

Token 1726: ' /' (ID: 820)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4768330454826355
    2. ' -' → logprob: -2.1018331050872803
    3. ' +' → logprob: -2.8518331050872803
    4. ' )' → logprob: -2.9768331050872803
    5. ' /' → logprob: -3.3518331050872803
    6. '+' → logprob: -3.3518331050872803
    7. '-' → logprob: -3.7268331050872803
    8. 'd' → logprob: -3.8518331050872803
    9. ')/(' → logprob: -4.601832866668701
    10. ' ' → logprob: -5.351832866668701

Token 1727: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001073419232852757
    2. ' (' → logprob: -6.876073360443115
    3. '   ' → logprob: -11.001073837280273
    4. ' ' → logprob: -11.626073837280273
    5. '2' → logprob: -12.251073837280273
    6. '     ' → logprob: -13.251073837280273
    7. '         ' → logprob: -13.251073837280273
    8. '        ' → logprob: -13.376073837280273
    9. '    ' → logprob: -13.501073837280273
    10. '  ' → logprob: -13.751073837280273

Token 1728: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005380318500101566
    2. '(' → logprob: -5.255380153656006
    3. ' ' → logprob: -9.005380630493164
    4. '   ' → logprob: -11.630380630493164
    5. ' (' → logprob: -12.380380630493164
    6. '           ' → logprob: -13.255380630493164
    7. '
' → logprob: -13.630380630493164
    8. '         ' → logprob: -14.255380630493164
    9. '     ' → logprob: -14.255380630493164
    10. '    ' → logprob: -14.380380630493164

Token 1729: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7255132794380188
    2. ' *' → logprob: -0.7255132794380188
    3. '*self' → logprob: -3.475513219833374
    4. '(self' → logprob: -7.725513458251953
    5. '*(' → logprob: -8.475513458251953
    6. ' ' → logprob: -9.600513458251953
    7. 'self' → logprob: -10.350513458251953
    8. '.' → logprob: -10.600513458251953
    9. '       ' → logprob: -10.725513458251953
    10. ' (' → logprob: -10.725513458251953

Token 1730: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001037214300595224
    2. ' self' → logprob: -6.876037120819092
    3. '           ' → logprob: -13.25103759765625
    4. '       ' → logprob: -14.12603759765625
    5. '   ' → logprob: -14.50103759765625
    6. ' ' → logprob: -15.25103759765625
    7. '
' → logprob: -15.37603759765625
    8. '     ' → logprob: -15.50103759765625
    9. '         ' → logprob: -15.75103759765625
    10. '(self' → logprob: -15.87603759765625

Token 1731: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.0017552643548697233
    2. 'r' → logprob: -6.376755237579346
    3. 'self' → logprob: -10.001755714416504
    4. '.' → logprob: -12.376755714416504
    5. '*r' → logprob: -13.501755714416504
    6. '
' → logprob: -13.876755714416504
    7. '*' → logprob: -15.751755714416504
    8. ' .' → logprob: -15.751755714416504
    9. '   ' → logprob: -15.876755714416504
    10. '#' → logprob: -16.126754760742188

Token 1732: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.30176010727882385
    2. '*d' → logprob: -1.4267600774765015
    3. '*self' → logprob: -4.051760196685791
    4. ' *' → logprob: -5.926760196685791
    5. ')' → logprob: -9.176759719848633
    6. '*s' → logprob: -9.426759719848633
    7. '*c' → logprob: -10.176759719848633
    8. ' ' → logprob: -10.676759719848633
    9. 'd' → logprob: -10.801759719848633
    10. '*
' → logprob: -11.176759719848633

Token 1733: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.006853073835372925
    2. 'self' → logprob: -5.006853103637695
    3. ' d' → logprob: -9.131853103637695
    4. 'c' → logprob: -10.881853103637695
    5. ' self' → logprob: -12.881853103637695
    6. '
' → logprob: -13.131853103637695
    7. ' ' → logprob: -13.381853103637695
    8. '   ' → logprob: -14.006853103637695
    9. '(d' → logprob: -14.256853103637695
    10. 'abs' → logprob: -14.381853103637695

Token 1734: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00046510808169841766
    2. ' )' → logprob: -8.000465393066406
    3. ')
' → logprob: -9.375465393066406
    4. '       ' → logprob: -10.875465393066406
    5. '))' → logprob: -10.875465393066406
    6. '   ' → logprob: -12.500465393066406
    7. ' ' → logprob: -14.250465393066406
    8. ')
' → logprob: -14.250465393066406
    9. '),' → logprob: -14.875465393066406
    10. ')`' → logprob: -14.875465393066406

Token 1735: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08469665050506592
    2. '       ' → logprob: -2.5846967697143555
    3. '<|end|>' → logprob: -5.5846967697143555
    4. ' c' → logprob: -7.2096967697143555
    5. '   ' → logprob: -8.334696769714355
    6. 'p' → logprob: -8.584696769714355
    7. ' p' → logprob: -8.959696769714355
    8. 'n' → logprob: -9.084696769714355
    9. ' n' → logprob: -9.584696769714355
    10. ',' → logprob: -9.834696769714355

Token 1736: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.008753192611038685
    2. 'p' → logprob: -4.883753299713135
    3. 'm' → logprob: -7.383753299713135
    4. 'theta' → logprob: -8.883752822875977
    5. 'b' → logprob: -9.633752822875977
    6. 'q' → logprob: -9.758752822875977
    7. 'base' → logprob: -9.758752822875977
    8. 'c' → logprob: -10.008752822875977
    9. 'd' → logprob: -10.383752822875977
    10. 'tmp' → logprob: -11.008752822875977

Token 1737: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04962778836488724
    2. '=' → logprob: -3.5496277809143066
    3. 'heta' → logprob: -4.174627780914307
    4. 'h' → logprob: -6.299627780914307
    5. '0' → logprob: -6.299627780914307
    6. '1' → logprob: -7.924627780914307
    7. 'c' → logprob: -9.549628257751465
    8. '=c' → logprob: -10.174628257751465
    9. '=(' → logprob: -10.674628257751465
    10. 'a' → logprob: -10.674628257751465

Token 1738: ' atan' (ID: 70327)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.12211185693740845
    2. 'atan' → logprob: -2.7471117973327637
    3. 'self' → logprob: -3.9971117973327637
    4. '(self' → logprob: -4.247111797332764
    5. '(c' → logprob: -5.122111797332764
    6. 'acos' → logprob: -5.497111797332764
    7. '(Vector' → logprob: -5.622111797332764
    8. '(s' → logprob: -6.372111797332764
    9. '(' → logprob: -6.747111797332764
    10. 'c' → logprob: -7.247111797332764

Token 1739: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.875000953674316
    3. '２' → logprob: -16.875
    4. '
' → logprob: -17.125
    5. '22' → logprob: -18.0
    6. '(' → logprob: -18.375
    7. '_' → logprob: -18.625
    8. '۲' → logprob: -19.25
    9. '20' → logprob: -19.375
    10. '   ' → logprob: -19.5

Token 1740: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0022280486300587654
    2. 'c' → logprob: -6.252228260040283
    3. '(s' → logprob: -8.502227783203125
    4. '((' → logprob: -10.377227783203125
    5. '(self' → logprob: -10.377227783203125
    6. '(' → logprob: -11.252227783203125
    7. 'self' → logprob: -11.377227783203125
    8. '(
' → logprob: -11.877227783203125
    9. 's' → logprob: -13.627227783203125
    10. ' c' → logprob: -15.127227783203125

Token 1741: '2' (ID: 17)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11011416465044022
    2. 'c' → logprob: -2.485114097595215
    3. '2' → logprob: -4.235114097595215
    4. '(self' → logprob: -5.610114097595215
    5. 's' → logprob: -6.235114097595215
    6. ' self' → logprob: -7.610114097595215
    7. '(c' → logprob: -8.610114097595215
    8. '(s' → logprob: -9.860114097595215
    9. '   ' → logprob: -10.860114097595215
    10. '1' → logprob: -10.860114097595215

Token 1742: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -0.001921610557474196
    2. 'c' → logprob: -6.501921653747559
    3. ' .' → logprob: -8.626921653747559
    4. '0' → logprob: -10.376921653747559
    5. '
' → logprob: -10.376921653747559
    6. '.y' → logprob: -10.376921653747559
    7. '-' → logprob: -10.501921653747559
    8. '   ' → logprob: -10.626921653747559
    9. '-.' → logprob: -11.126921653747559
    10. ' -' → logprob: -11.126921653747559

Token 1743: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.005194739904254675
    2. '-' → logprob: -5.630194664001465
    3. ' -' → logprob: -6.755194664001465
    4. ' .' → logprob: -8.880194664001465
    5. '.' → logprob: -9.005194664001465
    6. 'y' → logprob: -9.255194664001465
    7. '.c' → logprob: -11.130194664001465
    8. '-c' → logprob: -11.505194664001465
    9. '.x' → logprob: -11.630194664001465
    10. '-y' → logprob: -12.005194664001465

Token 1744: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06322907656431198
    2. ' -' → logprob: -2.8132290840148926
    3. '-self' → logprob: -6.688229084014893
    4. '-c' → logprob: -12.063228607177734
    5. '-
' → logprob: -12.438228607177734
    6. '-s' → logprob: -13.188228607177734
    7. 'self' → logprob: -13.688228607177734
    8. '-y' → logprob: -14.438228607177734
    9. '()-' → logprob: -15.063228607177734
    10. '-(' → logprob: -15.688228607177734

Token 1745: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002067588793579489
    2. ' self' → logprob: -8.50020694732666
    3. '   ' → logprob: -13.62520694732666
    4. '       ' → logprob: -14.12520694732666
    5. ' ' → logprob: -14.87520694732666
    6. '           ' → logprob: -15.50020694732666
    7. 'c' → logprob: -15.62520694732666
    8. '
' → logprob: -15.62520694732666
    9. '(self' → logprob: -15.75020694732666
    10. '  ' → logprob: -16.375205993652344

Token 1746: '.c' (ID: 1081)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.0445127372804563e-05
    2. '.c' → logprob: -11.50001049041748
    3. ' c' → logprob: -15.25001049041748
    4. '	c' → logprob: -17.000009536743164
    5. 'y' → logprob: -17.375009536743164
    6. '   ' → logprob: -17.750009536743164
    7. '
' → logprob: -17.875009536743164
    8. '_c' → logprob: -18.375009536743164
    9. 'с' → logprob: -19.250009536743164
    10. '  ' → logprob: -19.375009536743164

Token 1747: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.1272614300251007
    2. 'y' → logprob: -2.1272614002227783
    3. '.' → logprob: -8.1272611618042
    4. '.x' → logprob: -11.3772611618042
    5. 'x' → logprob: -11.7522611618042
    6. 'c' → logprob: -12.0022611618042
    7. ' y' → logprob: -12.1272611618042
    8. '@y' → logprob: -13.6272611618042
    9. ',' → logprob: -13.8772611618042
    10. ')' → logprob: -13.8772611618042

Token 1748: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00047142591211013496
    2. ',c' → logprob: -8.125471115112305
    3. ' ,' → logprob: -9.250471115112305
    4. ',
' → logprob: -10.000471115112305
    5. ',self' → logprob: -11.250471115112305
    6. 'c' → logprob: -11.250471115112305
    7. ',s' → logprob: -12.875471115112305
    8. 's' → logprob: -13.500471115112305
    9. 'self' → logprob: -13.625471115112305
    10. '   ' → logprob: -13.750471115112305

Token 1749: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.003214318538084626
    2. ' c' → logprob: -5.753214359283447
    3. '   ' → logprob: -10.628213882446289
    4. '  ' → logprob: -12.253213882446289
    5. '    ' → logprob: -12.753213882446289
    6. ' ' → logprob: -13.253213882446289
    7. '     ' → logprob: -14.628213882446289
    8. '	c' → logprob: -14.628213882446289
    9. '       ' → logprob: -14.878213882446289
    10. '      ' → logprob: -15.003213882446289

Token 1750: '2' (ID: 17)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00016384923947043717
    2. '2' → logprob: -8.875164031982422
    3. ' c' → logprob: -11.000164031982422
    4. 'self' → logprob: -12.875164031982422
    5. '   ' → logprob: -13.000164031982422
    6. '  ' → logprob: -14.875164031982422
    7. ' ' → logprob: -15.000164031982422
    8. '
' → logprob: -15.625164031982422
    9. '_c' → logprob: -15.750164031982422
    10. ')c' → logprob: -15.750164031982422

Token 1751: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -0.0800117552280426
    2. 'c' → logprob: -2.5800118446350098
    3. 'x' → logprob: -7.33001184463501
    4. '.x' → logprob: -7.70501184463501
    5. '.' → logprob: -12.205011367797852
    6. 'C' → logprob: -13.080011367797852
    7. ' c' → logprob: -13.455011367797852
    8. '   ' → logprob: -13.830011367797852
    9. '	c' → logprob: -13.830011367797852
    10. '```' → logprob: -14.455011367797852

Token 1752: '.x' (ID: 3700)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00249420665204525
    2. '.x' → logprob: -6.0024943351745605
    3. 'c' → logprob: -11.002493858337402
    4. '.c' → logprob: -13.627493858337402
    5. ' x' → logprob: -14.377493858337402
    6. '.' → logprob: -16.87749481201172
    7. ' -' → logprob: -17.00249481201172
    8. '(x' → logprob: -17.87749481201172
    9. '   ' → logprob: -18.00249481201172
    10. 'self' → logprob: -18.87749481201172

Token 1753: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12693093717098236
    2. ' -' → logprob: -2.1269309520721436
    3. 'self' → logprob: -14.626931190490723
    4. ' ' → logprob: -14.626931190490723
    5. ')' → logprob: -14.751931190490723
    6. '-self' → logprob: -15.001931190490723
    7. 'c' → logprob: -15.376931190490723
    8. 'x' → logprob: -15.626931190490723
    9. 's' → logprob: -15.751931190490723
    10. '   ' → logprob: -15.876931190490723

Token 1754: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009131324477493763
    2. ' self' → logprob: -7.000913143157959
    3. 'c' → logprob: -14.0009126663208
    4. ' ' → logprob: -15.6259126663208
    5. '   ' → logprob: -16.125913619995117
    6. '(self' → logprob: -16.250913619995117
    7. '
' → logprob: -16.250913619995117
    8. 's' → logprob: -16.750913619995117
    9. '[self' → logprob: -16.875913619995117
    10. '	self' → logprob: -17.000913619995117

Token 1755: '.c' (ID: 1081)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03819262236356735
    2. 'x' → logprob: -3.5381925106048584
    3. 'self' → logprob: -4.7881927490234375
    4. '.c' → logprob: -10.163192749023438
    5. '.x' → logprob: -10.538192749023438
    6. ' self' → logprob: -12.163192749023438
    7. '
' → logprob: -13.288192749023438
    8. '   ' → logprob: -13.538192749023438
    9. ' c' → logprob: -13.788192749023438
    10. '```' → logprob: -13.913192749023438

Token 1756: '.x' (ID: 3700)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.386887788772583
    2. '.x' → logprob: -1.136887788772583
    3. ' x' → logprob: -11.261887550354004
    4. '```' → logprob: -13.761887550354004
    5. '0' → logprob: -14.386887550354004
    6. ')' → logprob: -14.636887550354004
    7. '.' → logprob: -14.886887550354004
    8. '1' → logprob: -15.011887550354004
    9. '   ' → logprob: -15.386887550354004
    10. ')x' → logprob: -15.636887550354004

Token 1757: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031988697592169046
    2. ')
' → logprob: -6.128199100494385
    3. ')+' → logprob: -7.253199100494385
    4. ' )' → logprob: -8.128198623657227
    5. ' )
' → logprob: -12.503198623657227
    6. ')
' → logprob: -13.628198623657227
    7. '       ' → logprob: -14.128198623657227
    8. ')

' → logprob: -14.253198623657227
    9. ')t' → logprob: -14.628198623657227
    10. ')#' → logprob: -15.003198623657227

Token 1758: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06712229549884796
    2. '       ' → logprob: -2.942122220993042
    3. 'p' → logprob: -5.067122459411621
    4. '   ' → logprob: -5.567122459411621
    5. ' p' → logprob: -8.067122459411621
    6. 'return' → logprob: -8.192122459411621
    7. 'x' → logprob: -8.567122459411621
    8. 'n' → logprob: -8.692122459411621
    9. '		' → logprob: -8.692122459411621
    10. '	       ' → logprob: -8.942122459411621

Token 1759: ' temp' (ID: 5484)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2023952752351761
    2. 'return' → logprob: -1.7023953199386597
    3. 'res' → logprob: -7.952395439147949
    4. '       ' → logprob: -8.95239543914795
    5. 'r' → logprob: -9.45239543914795
    6. 'cp' → logprob: -9.57739543914795
    7. 'ret' → logprob: -9.57739543914795
    8. '   ' → logprob: -9.82739543914795
    9. 'q' → logprob: -10.20239543914795
    10. 'point' → logprob: -10.82739543914795

Token 1760: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2932550013065338
    2. ' =' → logprob: -1.4182549715042114
    3. '_c' → logprob: -5.918254852294922
    4. 'p' → logprob: -6.293254852294922
    5. '_p' → logprob: -6.293254852294922
    6. '=' → logprob: -6.418254852294922
    7. '_' → logprob: -7.043254852294922
    8. 't' → logprob: -7.168254852294922
    9. 'a' → logprob: -7.543254852294922
    10. 'c' → logprob: -7.918254852294922

Token 1761: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05490022152662277
    2. '=' → logprob: -2.9299001693725586
    3. ',' → logprob: -12.054900169372559
    4. '=t' → logprob: -12.554900169372559
    5. 't' → logprob: -13.429900169372559
    6. '1' → logprob: -13.554900169372559
    7. '=(' → logprob: -13.804900169372559
    8. ' ' → logprob: -13.929900169372559
    9. 'x' → logprob: -14.179900169372559
    10. 'a' → logprob: -14.429900169372559

Token 1762: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.3616025447845459
    2. 'self' → logprob: -1.236602544784546
    3. 't' → logprob: -4.611602783203125
    4. '[
' → logprob: -6.736602783203125
    5. 'Line' → logprob: -7.861602783203125
    6. '[' → logprob: -7.986602783203125
    7. '[self' → logprob: -8.236602783203125
    8. ' Point' → logprob: -8.361602783203125
    9. '[]
' → logprob: -8.861602783203125
    10. 'a' → logprob: -9.111602783203125

Token 1763: '(c' (ID: 2410)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04074319452047348
    2. '(c' → logprob: -4.040743350982666
    3. '(
' → logprob: -4.665743350982666
    4. '(' → logprob: -5.040743350982666
    5. '(s' → logprob: -5.165743350982666
    6. 'self' → logprob: -7.540743350982666
    7. '((' → logprob: -8.665742874145508
    8. 'cos' → logprob: -10.665742874145508
    9. '(this' → logprob: -12.915742874145508
    10. ' (' → logprob: -13.040742874145508

Token 1764: 'os' (ID: 365)
  Prédit: 'os'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.3496667146682739
    2. 'self' → logprob: -1.224666714668274
    3. '(self' → logprob: -7.849666595458984
    4. '```' → logprob: -8.099666595458984
    5. 's' → logprob: -8.974666595458984
    6. 'cos' → logprob: -9.349666595458984
    7. '  ' → logprob: -10.099666595458984
    8. '1' → logprob: -10.474666595458984
    9. ' self' → logprob: -10.474666595458984
    10. '   ' → logprob: -10.599666595458984

Token 1765: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.05524376407265663
    2. 't' → logprob: -2.930243730545044
    3. '(' → logprob: -8.305243492126465
    4. '(
' → logprob: -9.430243492126465
    5. '(self' → logprob: -11.180243492126465
    6. ' t' → logprob: -12.555243492126465
    7. 'self' → logprob: -12.555243492126465
    8. '
' → logprob: -12.805243492126465
    9. ' (' → logprob: -12.805243492126465
    10. '	t' → logprob: -12.930243492126465

Token 1766: '+a' (ID: 142749)
  Prédit: ')*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.18835659325122833
    2. ')' → logprob: -1.813356637954712
    3. 'self' → logprob: -5.813356399536133
    4. 'a' → logprob: -6.188356399536133
    5. ')a' → logprob: -7.063356399536133
    6. '*self' → logprob: -7.188356399536133
    7. '*' → logprob: -7.438356399536133
    8. '(self' → logprob: -7.938356399536133
    9. '   ' → logprob: -8.563356399536133
    10. '*a' → logprob: -8.688356399536133

Token 1767: ')*' (ID: 11043)
  Prédit: ')*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.2708790600299835
    2. ')' → logprob: -1.5208790302276611
    3. '),' → logprob: -4.02087926864624
    4. '*self' → logprob: -7.52087926864624
    5. 'self' → logprob: -9.020878791809082
    6. ')*(' → logprob: -9.645878791809082
    7. ' ' → logprob: -10.645878791809082
    8. '```' → logprob: -10.895878791809082
    9. ' )' → logprob: -11.395878791809082
    10. ',' → logprob: -11.520878791809082

Token 1768: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.539801688631997e-05
    2. ' self' → logprob: -9.750065803527832
    3. '   ' → logprob: -12.875065803527832
    4. ' ' → logprob: -13.500065803527832
    5. '  ' → logprob: -13.500065803527832
    6. 's' → logprob: -14.625065803527832
    7. '(self' → logprob: -15.000065803527832
    8. '	self' → logprob: -15.250065803527832
    9. '[self' → logprob: -16.125064849853516
    10. '       ' → logprob: -16.250064849853516

Token 1769: '.r' (ID: 2951)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -3.690834273584187e-05
    2. '.r' → logprob: -10.25003719329834
    3. '
' → logprob: -14.37503719329834
    4. ' r' → logprob: -15.75003719329834
    5. '	r' → logprob: -15.87503719329834
    6. 'x' → logprob: -16.375036239624023
    7. ' ' → logprob: -16.375036239624023
    8. '_r' → logprob: -16.375036239624023
    9. '   ' → logprob: -16.750036239624023
    10. '```' → logprob: -17.250036239624023

Token 1770: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49766311049461365
    2. '+' → logprob: -0.997663140296936
    3. ' +' → logprob: -3.8726630210876465
    4. ',s' → logprob: -6.8726630210876465
    5. 'cos' → logprob: -7.1226630210876465
    6. '+s' → logprob: -8.997663497924805
    7. '*cos' → logprob: -9.372663497924805
    8. ',
' → logprob: -9.372663497924805
    9. '+
' → logprob: -9.747663497924805
    10. '```' → logprob: -9.747663497924805

Token 1771: ' sin' (ID: 2187)
  Prédit: 'sin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sin' → logprob: -3.8889261304575484e-06
    2. ' sin' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.875003814697266
    4. '  ' → logprob: -17.000003814697266
    5. 'cos' → logprob: -18.375003814697266
    6. 'sins' → logprob: -20.125003814697266
    7. ' ' → logprob: -20.625003814697266
    8. 'sn' → logprob: -21.375003814697266
    9. '    ' → logprob: -21.500003814697266
    10. '*sin' → logprob: -21.500003814697266

Token 1772: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0005604196921922266
    2. 't' → logprob: -7.500560283660889
    3. '(' → logprob: -11.875560760498047
    4. ' (' → logprob: -15.250560760498047
    5. '	t' → logprob: -16.000560760498047
    6. '(
' → logprob: -16.500560760498047
    7. ' t' → logprob: -17.250560760498047
    8. '((' → logprob: -19.125560760498047
    9. '   ' → logprob: -19.375560760498047
    10. ')t' → logprob: -19.375560760498047

Token 1773: '+a' (ID: 142749)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0004260276327840984
    2. '(' → logprob: -8.000426292419434
    3. '(a' → logprob: -10.500426292419434
    4. ' (' → logprob: -10.750426292419434
    5. '(
' → logprob: -11.000426292419434
    6. 't' → logprob: -11.500426292419434
    7. '*(' → logprob: -11.500426292419434
    8. '(r' → logprob: -13.625426292419434
    9. 'a' → logprob: -13.750426292419434
    10. '(s' → logprob: -14.500426292419434

Token 1774: ')*' (ID: 11043)
  Prédit: ')*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.003290471388027072
    2. '*self' → logprob: -5.75329065322876
    3. ')' → logprob: -9.128290176391602
    4. '()*' → logprob: -13.128290176391602
    5. '*' → logprob: -13.878290176391602
    6. ']*' → logprob: -14.253290176391602
    7. ' ' → logprob: -16.3782901763916
    8. '```' → logprob: -16.7532901763916
    9. ' *' → logprob: -16.8782901763916
    10. 'self' → logprob: -17.0032901763916

Token 1775: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.452426608419046e-05
    2. ' self' → logprob: -10.37503433227539
    3. '*self' → logprob: -12.75003433227539
    4. '	self' → logprob: -15.75003433227539
    5. '(self' → logprob: -16.25003433227539
    6. 's' → logprob: -17.12503433227539
    7. '-self' → logprob: -17.12503433227539
    8. '
' → logprob: -17.50003433227539
    9. '[self' → logprob: -18.62503433227539
    10. '+self' → logprob: -19.12503433227539

Token 1776: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.251970499753952
    2. 'r' → logprob: -1.5019705295562744
    3. '*r' → logprob: -11.001970291137695
    4. '	r' → logprob: -11.376970291137695
    5. '.' → logprob: -12.626970291137695
    6. 'self' → logprob: -12.751970291137695
    7. '-r' → logprob: -13.376970291137695
    8. ' r' → logprob: -13.501970291137695
    9. '_r' → logprob: -13.626970291137695
    10. '
' → logprob: -14.626970291137695

Token 1777: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005830441601574421
    2. ')
' → logprob: -5.75583028793335
    3. ')+' → logprob: -6.00583028793335
    4. ' )' → logprob: -10.130830764770508
    5. '       ' → logprob: -10.255830764770508
    6. '),' → logprob: -10.255830764770508
    7. '   ' → logprob: -10.505830764770508
    8. '	' → logprob: -11.005830764770508
    9. '<|end|>' → logprob: -11.880830764770508
    10. ' +' → logprob: -12.505830764770508

Token 1778: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12047632783651352
    2. '       ' → logprob: -2.370476245880127
    3. 'temp' → logprob: -4.495476245880127
    4. '   ' → logprob: -6.120476245880127
    5. '<|end|>' → logprob: -6.870476245880127
    6. '<|end|>' → logprob: -6.870476245880127
    7. ',' → logprob: -7.245476245880127
    8. '		' → logprob: -7.370476245880127
    9. ' +' → logprob: -7.495476245880127
    10. '	' → logprob: -7.495476245880127

Token 1779: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.00038360210601240396
    2. ' temp' → logprob: -8.250383377075195
    3. '       ' → logprob: -10.125383377075195
    4. '	temp' → logprob: -10.250383377075195
    5. '           ' → logprob: -10.375383377075195
    6. 'return' → logprob: -12.125383377075195
    7. 'tmp' → logprob: -12.375383377075195
    8. 'point' → logprob: -12.875383377075195
    9. 'p' → logprob: -13.750383377075195
    10. '   ' → logprob: -14.375383377075195

Token 1780: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007178967818617821
    2. '2' → logprob: -5.632178783416748
    3. '+' → logprob: -6.757178783416748
    4. '=' → logprob: -7.132178783416748
    5. ' =' → logprob: -7.257178783416748
    6. '.' → logprob: -8.632179260253906
    7. '<|end|>' → logprob: -9.132179260253906
    8. ',' → logprob: -9.382179260253906
    9. '_' → logprob: -9.632179260253906
    10. ')' → logprob: -9.757179260253906

Token 1781: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08896160125732422
    2. '=' → logprob: -2.463961601257324
    3. ',' → logprob: -11.338961601257324
    4. '=c' → logprob: -13.088961601257324
    5. ' =
' → logprob: -13.213961601257324
    6. '=
' → logprob: -13.713961601257324
    7. 's' → logprob: -13.963961601257324
    8. '(' → logprob: -14.338961601257324
    9. ' ' → logprob: -14.338961601257324
    10. '=(' → logprob: -14.463961601257324

Token 1782: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.007621183525770903
    2. ' Point' → logprob: -4.8826212882995605
    3. '   ' → logprob: -12.007620811462402
    4. '	Point' → logprob: -12.382620811462402
    5. ' ' → logprob: -13.507620811462402
    6. '  ' → logprob: -14.257620811462402
    7. '    ' → logprob: -14.507620811462402
    8. '       ' → logprob: -14.507620811462402
    9. '(Point' → logprob: -14.632620811462402
    10. '.Point' → logprob: -15.382620811462402

Token 1783: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.018150296062231064
    2. 'cos' → logprob: -4.018150329589844
    3. ' cos' → logprob: -15.393150329589844
    4. '(' → logprob: -16.518150329589844
    5. '(
' → logprob: -17.893150329589844
    6. '((' → logprob: -18.143150329589844
    7. '_cos' → logprob: -18.143150329589844
    8. '*cos' → logprob: -18.268150329589844
    9. '.cos' → logprob: -18.768150329589844
    10. '(s' → logprob: -19.268150329589844

Token 1784: 'os' (ID: 365)
  Prédit: 'os'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.2001171112060547
    2. 'cos' → logprob: -2.2001171112060547
    3. '(t' → logprob: -2.9501171112060547
    4. 't' → logprob: -4.575117111206055
    5. '(c' → logprob: -4.950117111206055
    6. 's' → logprob: -8.575117111206055
    7. 'o' → logprob: -8.825117111206055
    8. '(s' → logprob: -9.575117111206055
    9. '(' → logprob: -9.950117111206055
    10. '(os' → logprob: -10.200117111206055

Token 1785: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.00043126524542458355
    2. 't' → logprob: -7.750431060791016
    3. '(' → logprob: -14.500431060791016
    4. '	t' → logprob: -17.750431060791016
    5. ' t' → logprob: -17.875431060791016
    6. ' (' → logprob: -19.250431060791016
    7. '((' → logprob: -20.125431060791016
    8. '(
' → logprob: -20.250431060791016
    9. '(-' → logprob: -21.625431060791016
    10. '[t' → logprob: -21.750431060791016

Token 1786: '-a' (ID: 8575)
  Prédit: '-a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-a' → logprob: -0.2815306782722473
    2. ' -' → logprob: -1.4065306186676025
    3. 'a' → logprob: -8.406530380249023
    4. '-' → logprob: -9.156530380249023
    5. '-а' → logprob: -10.656530380249023
    6. '```' → logprob: -11.656530380249023
    7. ' ' → logprob: -12.156530380249023
    8. '−' → logprob: -12.406530380249023
    9. '-A' → logprob: -12.406530380249023
    10. '
' → logprob: -14.156530380249023

Token 1787: ')*' (ID: 11043)
  Prédit: ')*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -5.9795445849886164e-05
    2. ')' → logprob: -10.250060081481934
    3. '*self' → logprob: -10.625060081481934
    4. ']*' → logprob: -17.250059127807617
    5. '*' → logprob: -18.625059127807617
    6. ')**' → logprob: -18.750059127807617
    7. '()*' → logprob: -19.500059127807617
    8. ' ' → logprob: -19.875059127807617
    9. '*)' → logprob: -20.125059127807617
    10. ')*(' → logprob: -20.250059127807617

Token 1788: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.054500666621607e-06
    2. ' self' → logprob: -12.87500286102295
    3. '*self' → logprob: -15.75000286102295
    4. '	self' → logprob: -16.250003814697266
    5. '(self' → logprob: -16.875003814697266
    6. '[self' → logprob: -16.875003814697266
    7. 't' → logprob: -17.500003814697266
    8. '[' → logprob: -18.125003814697266
    9. '-self' → logprob: -18.375003814697266
    10. '
' → logprob: -18.625003814697266

Token 1789: '.r' (ID: 2951)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.32677173614501953
    2. '.r' → logprob: -1.7017717361450195
    3. '.self' → logprob: -3.2017717361450195
    4. 'r' → logprob: -3.4517717361450195
    5. '*self' → logprob: -3.8267717361450195
    6. '*r' → logprob: -7.2017717361450195
    7. '.s' → logprob: -8.32677173614502
    8. '(self' → logprob: -8.32677173614502
    9. ' self' → logprob: -8.70177173614502
    10. '	self' → logprob: -8.82677173614502

Token 1790: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006414268864318728
    2. ',self' → logprob: -7.375641345977783
    3. '*self' → logprob: -11.375641822814941
    4. 'self' → logprob: -13.625641822814941
    5. ' ,' → logprob: -14.125641822814941
    6. '*sin' → logprob: -14.750641822814941
    7. ')' → logprob: -15.000641822814941
    8. ',s' → logprob: -15.000641822814941
    9. '*' → logprob: -15.250641822814941
    10. ',
' → logprob: -16.250640869140625

Token 1791: ' sin' (ID: 2187)
  Prédit: 'sin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sin' → logprob: -0.0007100477814674377
    2. ' sin' → logprob: -7.2507100105285645
    3. 'sins' → logprob: -17.625709533691406
    4. '*sin' → logprob: -18.000709533691406
    5. 'cos' → logprob: -18.125709533691406
    6. 's' → logprob: -18.625709533691406
    7. '-s' → logprob: -18.750709533691406
    8. '   ' → logprob: -19.000709533691406
    9. ' ' → logprob: -19.375709533691406
    10. '
' → logprob: -19.625709533691406

Token 1792: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0002646735229063779
    2. 't' → logprob: -8.250265121459961
    3. '(' → logprob: -12.750265121459961
    4. '(
' → logprob: -15.125265121459961
    5. ' (' → logprob: -16.50026512145996
    6. '	t' → logprob: -16.75026512145996
    7. ' t' → logprob: -18.12526512145996
    8. '[t' → logprob: -19.37526512145996
    9. ')t' → logprob: -20.25026512145996
    10. '   ' → logprob: -20.37526512145996

Token 1793: '-a' (ID: 8575)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.5368698239326477
    2. 't' → logprob: -0.9118698239326477
    3. '-t' → logprob: -4.411870002746582
    4. ' t' → logprob: -7.661870002746582
    5. '-a' → logprob: -8.286870002746582
    6. '*t' → logprob: -8.786870002746582
    7. '[t' → logprob: -9.036870002746582
    8. '+t' → logprob: -9.036870002746582
    9. ')t' → logprob: -9.161870002746582
    10. 'a' → logprob: -9.286870002746582

Token 1794: ')*' (ID: 11043)
  Prédit: '*self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*self' → logprob: -0.0028751306235790253
    2. ')*' → logprob: -5.877875328063965
    3. ')' → logprob: -10.752875328063965
    4. '*c' → logprob: -10.877875328063965
    5. '*t' → logprob: -11.002875328063965
    6. '*' → logprob: -12.752875328063965
    7. '*a' → logprob: -13.002875328063965
    8. '(self' → logprob: -13.377875328063965
    9. '*s' → logprob: -13.502875328063965
    10. '*this' → logprob: -13.627875328063965

Token 1795: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.107425062713446e-06
    2. ' self' → logprob: -12.125006675720215
    3. 's' → logprob: -14.500006675720215
    4. 'r' → logprob: -14.875006675720215
    5. '
' → logprob: -15.750006675720215
    6. 'se' → logprob: -15.750006675720215
    7. 'sel' → logprob: -16.37500762939453
    8. '(self' → logprob: -16.75000762939453
    9. '	self' → logprob: -16.75000762939453
    10. '*self' → logprob: -16.75000762939453

Token 1796: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.0430460050702095
    2. 'r' → logprob: -3.168045997619629
    3. '	r' → logprob: -11.168045997619629
    4. '_r' → logprob: -11.793045997619629
    5. '-r' → logprob: -11.918045997619629
    6. '
' → logprob: -13.043045997619629
    7. '.' → logprob: -13.168045997619629
    8. '```' → logprob: -13.168045997619629
    9. ''r' → logprob: -13.793045997619629
    10. ')' → logprob: -13.918045997619629

Token 1797: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38785263895988464
    2. ')
' → logprob: -1.137852668762207
    3. '       ' → logprob: -7.137852668762207
    4. ')
' → logprob: -9.012852668762207
    5. '           ' → logprob: -10.012852668762207
    6. ')

' → logprob: -12.012852668762207
    7. ')return' → logprob: -12.137852668762207
    8. '   ' → logprob: -13.262852668762207
    9. ' )
' → logprob: -14.012852668762207
    10. '):
' → logprob: -14.137852668762207

Token 1798: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.039383623749017715
    2. 'return' → logprob: -3.28938364982605
    3. ' return' → logprob: -6.914383411407471
    4. '		' → logprob: -8.289383888244629
    5. '       ' → logprob: -10.164383888244629
    6. '	return' → logprob: -10.789383888244629
    7. '	       ' → logprob: -11.414383888244629
    8. ':return' → logprob: -12.539383888244629
    9. '   ' → logprob: -13.039383888244629
    10. 'point' → logprob: -13.039383888244629

Token 1799: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.001004943042062223
    2. 'temp' → logprob: -7.251005172729492
    3. 'ret' → logprob: -9.251005172729492
    4. '           ' → logprob: -9.501005172729492
    5. 'p' → logprob: -10.126005172729492
    6. '       ' → logprob: -10.376005172729492
    7. ' return' → logprob: -11.251005172729492
    8. 'res' → logprob: -11.376005172729492
    9. 'point' → logprob: -11.626005172729492
    10. 'result' → logprob: -12.376005172729492

Token 1800: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.19745345413684845
    2. '(self' → logprob: -1.947453498840332
    3. 'Point' → logprob: -3.447453498840332
    4. '[self' → logprob: -6.322453498840332
    5. 'temp' → logprob: -7.072453498840332
    6. '(Point' → logprob: -7.072453498840332
    7. ' self' → logprob: -7.447453498840332
    8. ' (' → logprob: -8.447453498840332
    9. '(temp' → logprob: -8.697453498840332
    10. '[' → logprob: -9.197453498840332

Token 1801: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -0.9483505487442017
    2. '.Point' → logprob: -1.1983505487442017
    3. 'c' → logprob: -1.3233505487442017
    4. 'Point' → logprob: -3.198350429534912
    5. 'temp' → logprob: -6.698350429534912
    6. '(Point' → logprob: -6.823350429534912
    7. ' Point' → logprob: -8.57335090637207
    8. '+' → logprob: -8.82335090637207
    9. '<Point' → logprob: -9.19835090637207
    10. '.__' → logprob: -9.44835090637207

Token 1802: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.08894220739603043
    2. '+' → logprob: -2.463942289352417
    3. '+
' → logprob: -14.213942527770996
    4. ' +
' → logprob: -14.338942527770996
    5. '+c' → logprob: -15.463942527770996
    6. '＋' → logprob: -15.588942527770996
    7. '	' → logprob: -15.838942527770996
    8. '+x' → logprob: -15.963942527770996
    9. ' ' → logprob: -16.08894157409668
    10. ' ' → logprob: -16.21394157409668

Token 1803: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -3.5716304410016164e-05
    2. ' temp' → logprob: -10.250035285949707
    3. 'tmp' → logprob: -15.625035285949707
    4. 'Point' → logprob: -16.500036239624023
    5. 'tem' → logprob: -17.000036239624023
    6. '(temp' → logprob: -17.250036239624023
    7. '	temp' → logprob: -18.750036239624023
    8. '   ' → logprob: -19.500036239624023
    9. 't' → logprob: -19.750036239624023
    10. '
' → logprob: -20.875036239624023

Token 1804: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. '2' → logprob: -13.750001907348633
    3. 'Point' → logprob: -14.250001907348633
    4. '１' → logprob: -16.250001907348633
    5. '(Point' → logprob: -16.750001907348633
    6. 'oint' → logprob: -17.125001907348633
    7. '
' → logprob: -17.500001907348633
    8. 'point' → logprob: -17.750001907348633
    9. '_point' → logprob: -17.812501907348633
    10. '```' → logprob: -18.375001907348633

Token 1805: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016802136087790132
    2. ' ,' → logprob: -9.250167846679688
    3. ',
' → logprob: -9.750167846679688
    4. ',self' → logprob: -11.250167846679688
    5. ',\
' → logprob: -15.250167846679688
    6. ',
' → logprob: -16.125167846679688
    7. ',b' → logprob: -17.250167846679688
    8. ',s' → logprob: -17.375167846679688
    9. 'self' → logprob: -17.500167846679688
    10. ',\' → logprob: -17.625167846679688

Token 1806: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07889077812433243
    2. ' self' → logprob: -2.578890800476074
    3. ' ' → logprob: -15.078890800476074
    4. '       ' → logprob: -15.453890800476074
    5. '   ' → logprob: -15.578890800476074
    6. '	self' → logprob: -16.078889846801758
    7. '  ' → logprob: -16.453889846801758
    8. '           ' → logprob: -16.453889846801758
    9. ' ' → logprob: -17.078889846801758
    10. '    ' → logprob: -17.078889846801758

Token 1807: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -0.00013679367839358747
    2. '.' → logprob: -9.375136375427246
    3. 'c' → logprob: -10.000136375427246
    4. ' .' → logprob: -12.625136375427246
    5. '	c' → logprob: -13.250136375427246
    6. '   ' → logprob: -14.750136375427246
    7. ' ' → logprob: -15.500136375427246
    8. '_c' → logprob: -15.625136375427246
    9. '
' → logprob: -15.875136375427246
    10. '.
' → logprob: -15.875136375427246

Token 1808: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22542375326156616
    2. ' +' → logprob: -1.600423812866211
    3. '+
' → logprob: -12.350423812866211
    4. '+c' → logprob: -12.600423812866211
    5. ' ' → logprob: -14.100423812866211
    6. '-' → logprob: -14.225423812866211
    7. ' +
' → logprob: -14.600423812866211
    8. '<|end|>' → logprob: -15.350423812866211
    9. '+t' → logprob: -15.850423812866211
    10. '+C' → logprob: -16.10042381286621

Token 1809: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.0024758970830589533
    2. ' temp' → logprob: -6.002475738525391
    3. 'tmp' → logprob: -15.62747573852539
    4. '(temp' → logprob: -17.25247573852539
    5. 'tem' → logprob: -18.37747573852539
    6. '	temp' → logprob: -18.75247573852539
    7. 't' → logprob: -21.12747573852539
    8. ' ' → logprob: -21.62747573852539
    9. 'token' → logprob: -22.00247573852539
    10. '[temp' → logprob: -22.00247573852539

Token 1810: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. 'temp' → logprob: -19.625
    3. 'o' → logprob: -20.25
    4. 'p' → logprob: -20.375
    5. '２' → logprob: -20.625
    6. 'point' → logprob: -21.375
    7. 'ype' → logprob: -21.625
    8. 't' → logprob: -21.875
    9. '
' → logprob: -22.25
    10. 'def' → logprob: -22.625

Token 1811: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1812: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1813: ' contains' (ID: 8895)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.004153191577643156
    2. 'main' → logprob: -5.504153251647949
    3. ' solve' → logprob: -9.75415325164795
    4. ' ma' → logprob: -11.87915325164795
    5. 'solve' → logprob: -12.25415325164795
    6. ' mai' → logprob: -13.62915325164795
    7. '	main' → logprob: -13.62915325164795
    8. ' m' → logprob: -14.25415325164795
    9. '_main' → logprob: -14.37915325164795
    10. 'm' → logprob: -15.00415325164795

Token 1814: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.6835305094718933
    2. '_point' → logprob: -1.058530569076538
    3. '(point' → logprob: -2.933530569076538
    4. 'Point' → logprob: -3.683530569076538
    5. '(Point' → logprob: -3.683530569076538
    6. '(s' → logprob: -4.183530330657959
    7. '(circle' → logprob: -5.308530330657959
    8. '(a' → logprob: -5.558530330657959
    9. '(poly' → logprob: -5.808530330657959
    10. '(pol' → logprob: -6.058530330657959

Token 1815: 'olygon' (ID: 80431)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012257090769708157
    2. ',p' → logprob: -5.262257099151611
    3. '):' → logprob: -5.887257099151611
    4. '(p' → logprob: -6.262257099151611
    5. '(point' → logprob: -7.137257099151611
    6. '):
' → logprob: -7.512257099151611
    7. '_point' → logprob: -8.887256622314453
    8. '(Point' → logprob: -8.887256622314453
    9. ' ,' → logprob: -9.012256622314453
    10. '.Point' → logprob: -9.512256622314453

Token 1816: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007316163973882794
    2. ',p' → logprob: -8.000731468200684
    3. '):' → logprob: -8.500731468200684
    4. '):
' → logprob: -9.375731468200684
    5. ' ,' → logprob: -10.125731468200684
    6. '(points' → logprob: -10.875731468200684
    7. '   ' → logprob: -11.375731468200684
    8. '_points' → logprob: -11.625731468200684
    9. ',
' → logprob: -12.750731468200684
    10. '(p' → logprob: -12.750731468200684

Token 1817: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2334716022014618
    2. 'point' → logprob: -1.7334716320037842
    3. ' point' → logprob: -4.108471393585205
    4. ' p' → logprob: -4.733471393585205
    5. 'q' → logprob: -5.108471393585205
    6. ' q' → logprob: -8.983471870422363
    7. 'polygon' → logprob: -10.483471870422363
    8. 'Point' → logprob: -10.733471870422363
    9. 'pt' → logprob: -11.108471870422363
    10. 'a' → logprob: -11.233471870422363

Token 1818: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4854843318462372
    2. '):
' → logprob: -0.9854843616485596
    3. 'oint' → logprob: -5.1104841232299805
    4. '):' → logprob: -5.7354841232299805
    5. '   ' → logprob: -6.9854841232299805
    6. 'olygon' → logprob: -7.4854841232299805
    7. 'oints' → logprob: -7.9854841232299805
    8. '):
' → logprob: -9.61048412322998
    9. ' ,' → logprob: -10.36048412322998
    10. ',p' → logprob: -10.86048412322998

Token 1819: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03037942759692669
    2. 'def' → logprob: -3.6553795337677
    3. ' def' → logprob: -5.655379295349121
    4. ' n' → logprob: -8.030379295349121
    5. ' for' → logprob: -9.405379295349121
    6. '	def' → logprob: -9.905379295349121
    7. 'n' → logprob: -10.280379295349121
    8. '#' → logprob: -10.405379295349121
    9. '       ' → logprob: -11.655379295349121
    10. '    ' → logprob: -11.905379295349121

Token 1820: ' n' (ID: 297)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013586263172328472
    2. 'n' (adapté à ' n') → logprob: -4.638586044311523
    3. '   ' → logprob: -6.513586044311523
    4. 'inside' → logprob: -6.763586044311523
    5. '#' → logprob: -8.013586044311523
    6. 'in' → logprob: -8.013586044311523
    7. 'cnt' → logprob: -8.263586044311523
    8. '"""
' → logprob: -9.763586044311523
    9. ' def' → logprob: -9.888586044311523
    10. 'inf' → logprob: -9.888586044311523

Token 1821: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21662645041942596
    2. ' =' → logprob: -1.8416264057159424
    3. '=len' → logprob: -3.3416264057159424
    4. ')' → logprob: -7.9666266441345215
    5. ',' → logprob: -8.841626167297363
    6. '   ' → logprob: -9.966626167297363
    7. '==' → logprob: -10.341626167297363
    8. '=p' → logprob: -10.591626167297363
    9. '(len' → logprob: -10.716626167297363
    10. '>=' → logprob: -10.841626167297363

Token 1822: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -5.512236498361744e-07
    2. ' len' → logprob: -14.625000953674316
    3. '(len' → logprob: -18.125
    4. 'polygon' → logprob: -19.5
    5. '[len' → logprob: -19.75
    6. 'p' → logprob: -20.25
    7. 'int' → logprob: -21.125
    8. '	len' → logprob: -21.5
    9. '=len' → logprob: -21.5
    10. '   ' → logprob: -22.125

Token 1823: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00030721822986379266
    2. 'polygon' → logprob: -8.125307083129883
    3. '(' → logprob: -12.625307083129883
    4. '(pol' → logprob: -12.875307083129883
    5. ' polygon' → logprob: -13.125307083129883
    6. '(poly' → logprob: -13.625307083129883
    7. 'p' → logprob: -14.125307083129883
    8. '_polygon' → logprob: -14.625307083129883
    9. '(
' → logprob: -15.500307083129883
    10. ')' → logprob: -15.625307083129883

Token 1824: 'olygon' (ID: 80431)
  Prédit: 'olygon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olygon' → logprob: -0.5383657217025757
    2. '(p' → logprob: -1.0383657217025757
    3. 'polygon' → logprob: -2.7883658409118652
    4. ')' → logprob: -7.788365840911865
    5. '(poly' → logprob: -9.413365364074707
    6. ')
' → logprob: -9.538365364074707
    7. ' polygon' → logprob: -9.538365364074707
    8. '(' → logprob: -10.913365364074707
    9. '   ' → logprob: -11.413365364074707
    10. '_polygon' → logprob: -11.413365364074707

Token 1825: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04454047605395317
    2. ')
' → logprob: -3.1695404052734375
    3. '   ' → logprob: -6.5445404052734375
    4. ',' → logprob: -9.794540405273438
    5. ')p' → logprob: -11.294540405273438
    6. 'def' → logprob: -12.294540405273438
    7. '(p' → logprob: -12.419540405273438
    8. '):
' → logprob: -12.669540405273438
    9. ')>' → logprob: -12.669540405273438
    10. ' ' → logprob: -12.794540405273438

Token 1826: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22187982499599457
    2. 'for' → logprob: -2.096879720687866
    3. 'inside' → logprob: -2.971879720687866
    4. 'def' → logprob: -4.596879959106445
    5. '	for' → logprob: -5.096879959106445
    6. 'cnt' → logprob: -5.096879959106445
    7. '	cnt' → logprob: -6.471879959106445
    8. ' inside' → logprob: -8.221879959106445
    9. ' for' → logprob: -8.721879959106445
    10. 'count' → logprob: -9.596879959106445

Token 1827: ' x' (ID: 1215)
  Prédit: 'inside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inside' → logprob: -0.013020104728639126
    2. 'cnt' → logprob: -5.263020038604736
    3. 'angle' → logprob: -5.888020038604736
    4. 'c' → logprob: -6.513020038604736
    5. ' inside' → logprob: -7.138020038604736
    6. 'in' → logprob: -7.138020038604736
    7. 'count' → logprob: -7.263020038604736
    8. '   ' → logprob: -8.013020515441895
    9. 'x' (adapté à ' x') → logprob: -8.263020515441895
    10. 'res' → logprob: -9.138020515441895

Token 1828: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3637504279613495
    2. '=' → logprob: -1.2387504577636719
    3. ',' → logprob: -4.238750457763672
    4. ',y' → logprob: -8.738750457763672
    5. '=in' → logprob: -8.738750457763672
    6. '=int' → logprob: -8.863750457763672
    7. 'in' → logprob: -9.738750457763672
    8. '0' → logprob: -10.488750457763672
    9. '=sum' → logprob: -10.613750457763672
    10. 'cnt' → logprob: -10.738750457763672

Token 1829: ' False' (ID: 7983)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.003791292430832982
    2. '0' → logprob: -5.628791332244873
    3. 'len' → logprob: -9.128790855407715
    4. ' p' → logprob: -10.628790855407715
    5. 'False' → logprob: -10.753790855407715
    6. '[p' → logprob: -11.378790855407715
    7. 'y' → logprob: -11.753790855407715
    8. '[' → logprob: -12.003790855407715
    9. 'float' → logprob: -12.753790855407715
    10. ' ' → logprob: -13.253790855407715

Token 1830: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007453522179275751
    2. '
' → logprob: -5.007453441619873
    3. ',' → logprob: -8.632453918457031
    4. '<|end|>' → logprob: -9.007453918457031
    5. '    
' → logprob: -9.382453918457031
    6. 'for' → logprob: -9.632453918457031
    7. ' ' → logprob: -9.882453918457031
    8. ' for' → logprob: -10.007453918457031
    9. '       ' → logprob: -10.257453918457031
    10. '[' → logprob: -11.007453918457031

Token 1831: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02103239670395851
    2. 'j' → logprob: -3.8960323333740234
    3. ' j' → logprob: -8.021032333374023
    4. 'cnt' → logprob: -9.646032333374023
    5. 'for' → logprob: -9.896032333374023
    6. '	j' → logprob: -11.146032333374023
    7. 'i' → logprob: -11.271032333374023
    8. '    
' → logprob: -12.146032333374023
    9. 'jx' → logprob: -13.146032333374023
    10. ' ' → logprob: -13.396032333374023

Token 1832: ' for' (ID: 395)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0011237873695790768
    2. '   ' → logprob: -7.126123905181885
    3. ' j' → logprob: -8.376123428344727
    4. 'i' → logprob: -10.001123428344727
    5. 'cnt' → logprob: -10.251123428344727
    6. '	j' → logprob: -13.376123428344727
    7. 'jx' → logprob: -13.376123428344727
    8. 'inside' → logprob: -13.751123428344727
    9. 'for' (adapté à ' for') → logprob: -14.251123428344727
    10. '    
' → logprob: -14.376123428344727

Token 1833: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00284469872713089
    2. ' i' → logprob: -5.87784481048584
    3. '(i' → logprob: -10.50284481048584
    4. '   ' → logprob: -13.00284481048584
    5. 'q' → logprob: -13.25284481048584
    6. '[i' → logprob: -13.50284481048584
    7. ' ' → logprob: -13.62784481048584
    8. '0' → logprob: -13.87784481048584
    9. '	i' → logprob: -14.25284481048584
    10. 'v' → logprob: -14.50284481048584

Token 1834: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020615696907043457
    2. 'in' → logprob: -3.895615577697754
    3. ',' → logprob: -10.395615577697754
    4. ' ' → logprob: -10.895615577697754
    5. '   ' → logprob: -12.145615577697754
    6. '	in' → logprob: -12.270615577697754
    7. '  ' → logprob: -12.645615577697754
    8. 'n' → logprob: -13.395615577697754
    9. ' i' → logprob: -13.520615577697754
    10. '_' → logprob: -13.520615577697754

Token 1835: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031796174589544535
    2. ' range' → logprob: -5.753179550170898
    3. '(range' → logprob: -13.253179550170898
    4. ' ' → logprob: -16.0031795501709
    5. '   ' → logprob: -17.0031795501709
    6. '	range' → logprob: -17.6281795501709
    7. '(' → logprob: -18.0031795501709
    8. '0' → logprob: -18.2531795501709
    9. '  ' → logprob: -19.2531795501709
    10. '1' → logprob: -19.7531795501709

Token 1836: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.008065548725426197
    2. 'n' → logprob: -5.383065700531006
    3. '(' → logprob: -5.883065700531006
    4. '(len' → logprob: -7.383065700531006
    5. '1' → logprob: -10.883065223693848
    6. 'len' → logprob: -11.633065223693848
    7. '   ' → logprob: -14.133065223693848
    8. '	n' → logprob: -14.133065223693848
    9. '((' → logprob: -14.258065223693848
    10. '(-' → logprob: -14.883065223693848

Token 1837: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03506556153297424
    2. '-' → logprob: -4.160065650939941
    3. '):' → logprob: -4.660065650939941
    4. '   ' → logprob: -5.035065650939941
    5. ' -' → logprob: -6.410065650939941
    6. '):
' → logprob: -7.410065650939941
    7. '+' → logprob: -7.910065650939941
    8. ' ' → logprob: -9.035065650939941
    9. '       ' → logprob: -10.160065650939941
    10. ' ):
' → logprob: -10.160065650939941

Token 1838: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28607630729675293
    2. ' j' → logprob: -1.536076307296753
    3. 'j' → logprob: -4.036076545715332
    4. '       ' → logprob: -4.661076545715332
    5. '(p' → logprob: -6.161076545715332
    6. ' polygon' → logprob: -7.036076545715332
    7. ' (' → logprob: -7.286076545715332
    8. '(j' → logprob: -7.286076545715332
    9. ' ' → logprob: -7.786076545715332
    10. '    ' → logprob: -8.036076545715332

Token 1839: ' a' (ID: 261)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.05661417171359062
    2. '   ' → logprob: -3.0566141605377197
    3. ' j' → logprob: -5.431614398956299
    4. '(j' → logprob: -6.556614398956299
    5. '       ' → logprob: -6.806614398956299
    6. 'next' → logprob: -7.556614398956299
    7. '(p' → logprob: -8.30661392211914
    8. 'p' → logprob: -9.30661392211914
    9. '	j' → logprob: -9.68161392211914
    10. 'polygon' → logprob: -10.18161392211914

Token 1840: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04954633489251137
    2. ' =' → logprob: -3.049546241760254
    3. 'x' → logprob: -7.049546241760254
    4. ',' → logprob: -10.299546241760254
    5. 'y' → logprob: -10.674546241760254
    6. '_x' → logprob: -11.674546241760254
    7. 'p' → logprob: -11.799546241760254
    8. 'b' → logprob: -12.799546241760254
    9. '   ' → logprob: -12.924546241760254
    10. '=p' → logprob: -13.174546241760254

Token 1841: ' polygon' (ID: 65081)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -8.756989700486884e-05
    2. ' polygon' → logprob: -9.62508773803711
    3. '   ' → logprob: -12.00008773803711
    4. 'point' → logprob: -12.12508773803711
    5. 'poly' → logprob: -12.50008773803711
    6. 'p' → logprob: -13.62508773803711
    7. 'Point' → logprob: -13.62508773803711
    8. 'pol' → logprob: -13.75008773803711
    9. ' ' → logprob: -14.12508773803711
    10. 'polar' → logprob: -14.12508773803711

Token 1842: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0007612687186338007
    2. 'i' → logprob: -8.250761032104492
    3. '[' → logprob: -8.875761032104492
    4. '[
' → logprob: -9.000761032104492
    5. ' =' → logprob: -9.625761032104492
    6. '=' → logprob: -10.250761032104492
    7. '=i' → logprob: -10.750761032104492
    8. '_i' → logprob: -11.000761032104492
    9. '[(' → logprob: -11.000761032104492
    10. '[I' → logprob: -11.250761032104492

Token 1843: ']' (ID: 60)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.019225774332880974
    2. ']' → logprob: -4.144225597381592
    3. '%' → logprob: -6.519225597381592
    4. ']
' → logprob: -7.019225597381592
    5. '],' → logprob: -8.01922607421875
    6. ']%' → logprob: -9.01922607421875
    7. '       ' → logprob: -9.39422607421875
    8. '][' → logprob: -9.39422607421875
    9. '].' → logprob: -10.14422607421875
    10. '];' → logprob: -10.51922607421875

Token 1844: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7041420340538025
    2. ',' → logprob: -2.2041420936584473
    3. '=' → logprob: -2.2041420936584473
    4. '   ' → logprob: -2.4541420936584473
    5. '[' → logprob: -2.5791420936584473
    6. '
' → logprob: -3.2041420936584473
    7. ' =' → logprob: -3.9541420936584473
    8. '<|end|>' → logprob: -4.704142093658447
    9. 'p' → logprob: -5.079142093658447
    10. '#' → logprob: -5.204142093658447

Token 1845: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.15310683415737e-05
    2. ' p' → logprob: -10.750021934509277
    3. '	p' → logprob: -18.25002098083496
    4. '   ' → logprob: -19.62502098083496
    5. 'polygon' → logprob: -21.37502098083496
    6. '(p' → logprob: -22.00002098083496
    7. '<p' → logprob: -22.00002098083496
    8. '[' → logprob: -22.25002098083496
    9. ' ' → logprob: -22.62502098083496
    10. '
' → logprob: -22.75002098083496

Token 1846: '
' (ID: 198)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.2634357810020447
    2. ' polygon' → logprob: -1.5134358406066895
    3. 'Polygon' → logprob: -6.1384358406066895
    4. '1' → logprob: -6.2634358406066895
    5. '<|end|>' → logprob: -6.3884358406066895
    6. '_polygon' → logprob: -6.6384358406066895
    7. '   ' → logprob: -6.7634358406066895
    8. ' ' → logprob: -7.5134358406066895
    9. 'olygon' → logprob: -7.6384358406066895
    10. '       ' → logprob: -7.8884358406066895

Token 1847: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45600610971450806
    2. '1' → logprob: -2.0810060501098633
    3. '       ' → logprob: -2.0810060501098633
    4. ' ' → logprob: -3.3310060501098633
    5. 'polygon' → logprob: -3.9560060501098633
    6. '(' → logprob: -4.331006050109863
    7. '0' → logprob: -4.581006050109863
    8. '[' → logprob: -4.956006050109863
    9. ' polygon' → logprob: -5.206006050109863
    10. 'a' → logprob: -5.206006050109863

Token 1848: ' b' (ID: 287)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.11297052353620529
    2. ' polygon' → logprob: -2.4879705905914307
    3. 'b' (adapté à ' b') → logprob: -4.112970352172852
    4. 'a' → logprob: -5.737970352172852
    5. '   ' → logprob: -5.737970352172852
    6. ' b' → logprob: -8.612970352172852
    7. ' ' → logprob: -8.737970352172852
    8. 'poly' → logprob: -8.862970352172852
    9. '       ' → logprob: -8.987970352172852
    10. 'p' → logprob: -9.237970352172852

Token 1849: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02630726806819439
    2. ' =' → logprob: -3.6513073444366455
    3. ' polygon' → logprob: -12.776307106018066
    4. '   ' → logprob: -13.401307106018066
    5. '=p' → logprob: -13.526307106018066
    6. '=
' → logprob: -14.651307106018066
    7. 'polygon' → logprob: -14.776307106018066
    8. ' ' → logprob: -16.276308059692383
    9. 'Polygon' → logprob: -17.026308059692383
    10. 'a' → logprob: -17.276308059692383

Token 1850: ' polygon' (ID: 65081)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.002203666837885976
    2. ' polygon' → logprob: -6.127203464508057
    3. 'poly' → logprob: -11.127203941345215
    4. 'p' → logprob: -13.002203941345215
    5. 'olygon' → logprob: -13.877203941345215
    6. 'pol' → logprob: -14.752203941345215
    7. '_polygon' → logprob: -16.3772029876709
    8. '   ' → logprob: -16.3772029876709
    9. '	p' → logprob: -16.5022029876709
    10. 'Polygon' → logprob: -17.1272029876709

Token 1851: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.007807246409356594
    2. '[i' → logprob: -5.38280725479126
    3. '(i' → logprob: -5.75780725479126
    4. '((' → logprob: -11.507806777954102
    5. '[
' → logprob: -12.132806777954102
    6. '[' → logprob: -12.632806777954102
    7. '   ' → logprob: -12.882806777954102
    8. '       ' → logprob: -14.382806777954102
    9. '[next' → logprob: -14.382806777954102
    10. 'i' → logprob: -15.132806777954102

Token 1852: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6932475566864014
    2. '(i' → logprob: -0.6932475566864014
    3. ' (' → logprob: -10.06824779510498
    4. '   ' → logprob: -10.69324779510498
    5. ' i' → logprob: -10.81824779510498
    6. '{i' → logprob: -11.94324779510498
    7. '       ' → logprob: -13.06824779510498
    8. '(' → logprob: -13.69324779510498
    9. '           ' → logprob: -14.31824779510498
    10. '	i' → logprob: -14.44324779510498

Token 1853: '+' (ID: 10)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.42019474506378174
    2. 'i' → logprob: -1.1701947450637817
    3. '1' → logprob: -3.545194625854492
    4. '+' → logprob: -6.420194625854492
    5. '(' → logprob: -7.045194625854492
    6. ' (' → logprob: -7.295194625854492
    7. '   ' → logprob: -7.920194625854492
    8. '(n' → logprob: -9.170194625854492
    9. '[i' → logprob: -9.295194625854492
    10. ' i' → logprob: -10.670194625854492

Token 1854: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014860451221466064
    2. 'n' → logprob: -4.5148606300354
    3. '(n' → logprob: -5.7648606300354
    4. '(' → logprob: -7.7648606300354
    5. 'i' → logprob: -8.764860153198242
    6. '(i' → logprob: -10.139860153198242
    7. '%n' → logprob: -11.264860153198242
    8. ' (' → logprob: -11.389860153198242
    9. '
' → logprob: -11.764860153198242
    10. '   ' → logprob: -11.889860153198242

Token 1855: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39418092370033264
    2. ']' → logprob: -1.2691808938980103
    3. '%n' → logprob: -3.7691810131073
    4. ')%' → logprob: -4.394180774688721
    5. ')]' → logprob: -6.394180774688721
    6. ']%' → logprob: -6.644180774688721
    7. '%i' → logprob: -7.019180774688721
    8. '%' → logprob: -7.019180774688721
    9. '   ' → logprob: -7.144180774688721
    10. '%d' → logprob: -7.394180774688721

Token 1856: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.13388703338569e-06
    2. ' n' → logprob: -11.625009536743164
    3. '(n' → logprob: -16.000009536743164
    4. '   ' → logprob: -17.375009536743164
    5. '%n' → logprob: -18.125009536743164
    6. '	n' → logprob: -18.250009536743164
    7. ')n' → logprob: -19.250009536743164
    8. '```' → logprob: -19.625009536743164
    9. 'polygon' → logprob: -20.125009536743164
    10. ']' → logprob: -20.375009536743164

Token 1857: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00015133652777876705
    2. ']-' → logprob: -8.875151634216309
    3. ' ]' → logprob: -11.750151634216309
    4. ']
' → logprob: -13.875151634216309
    5. '-' → logprob: -14.375151634216309
    6. ')' → logprob: -14.750151634216309
    7. '()]' → logprob: -15.250151634216309
    8. ']%' → logprob: -15.250151634216309
    9. '[' → logprob: -15.750151634216309
    10. ' -' → logprob: -16.125150680541992

Token 1858: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7762487530708313
    2. '-' → logprob: -0.9012487530708313
    3. '=' → logprob: -2.6512486934661865
    4. '-p' → logprob: -3.2762486934661865
    5. '<|end|>' → logprob: -4.901248931884766
    6. '(p' → logprob: -5.401248931884766
    7. ' p' → logprob: -5.651248931884766
    8. ' =' → logprob: -6.151248931884766
    9. ')' → logprob: -7.026248931884766
    10. ',' → logprob: -7.151248931884766

Token 1859: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.7729658540920354e-05
    2. ' p' → logprob: -10.500027656555176
    3. '	p' → logprob: -15.750027656555176
    4. '   ' → logprob: -17.625028610229492
    5. '
' → logprob: -19.500028610229492
    6. '(p' → logprob: -19.750028610229492
    7. '<p' → logprob: -19.875028610229492
    8. ' ' → logprob: -20.125028610229492
    9. 'п' → logprob: -20.125028610229492
    10. '```' → logprob: -20.250028610229492

Token 1860: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02270524948835373
    2. '<|end|>' → logprob: -3.897705316543579
    3. '<|end|>' → logprob: -7.147705078125
    4. '   ' → logprob: -8.022705078125
    5. '[' → logprob: -8.772705078125
    6. ',' → logprob: -8.897705078125
    7. ':' → logprob: -9.397705078125
    8. '```' → logprob: -9.397705078125
    9. ':
' → logprob: -9.522705078125
    10. '	' → logprob: -9.647705078125

Token 1861: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002031180774793029
    2. ' if' → logprob: -7.002031326293945
    3. '   ' → logprob: -7.127031326293945
    4. '<|end|>' → logprob: -9.377031326293945
    5. 'if' → logprob: -9.502031326293945
    6. ' ' → logprob: -9.752031326293945
    7. ',' → logprob: -10.002031326293945
    8. '```' → logprob: -11.627031326293945
    9. '           ' → logprob: -11.752031326293945
    10. '[' → logprob: -11.752031326293945

Token 1862: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.004537519533187151
    2. '   ' → logprob: -5.754537582397461
    3. '       ' → logprob: -7.004537582397461
    4. ' if' → logprob: -8.004537582397461
    5. 'y' → logprob: -9.254537582397461
    6. '```' → logprob: -11.379537582397461
    7. '           ' → logprob: -13.254537582397461
    8. 'for' → logprob: -13.504537582397461
    9. '	if' → logprob: -13.629537582397461
    10. 'import' → logprob: -13.879537582397461

Token 1863: ' abs' (ID: 8443)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8601390719413757
    2. '(abs' → logprob: -1.2351391315460205
    3. 'abs' → logprob: -1.7351391315460205
    4. '(a' → logprob: -2.3601391315460205
    5. '((' → logprob: -4.860138893127441
    6. 'b' → logprob: -6.110138893127441
    7. ' abs' → logprob: -6.110138893127441
    8. '(b' → logprob: -6.985138893127441
    9. '(' → logprob: -7.360138893127441
    10. ' (' → logprob: -7.610138893127441

Token 1864: '(Vector' (ID: 43769)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0022518415935337543
    2. 'a' → logprob: -6.252251625061035
    3. '(b' → logprob: -8.377251625061035
    4. '((' → logprob: -10.002251625061035
    5. '(Vector' → logprob: -10.627251625061035
    6. 'b' → logprob: -11.127251625061035
    7. '(abs' → logprob: -12.627251625061035
    8. 'int' → logprob: -13.127251625061035
    9. '(int' → logprob: -13.877251625061035
    10. 'Vector' → logprob: -14.002251625061035

Token 1865: '.cross' (ID: 108957)
  Prédit: '.cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cross' → logprob: -0.03013666160404682
    2. 'cross' → logprob: -3.5301365852355957
    3. '(a' → logprob: -8.030137062072754
    4. 'a' → logprob: -10.655137062072754
    5. ' cross' → logprob: -11.530137062072754
    6. '```' → logprob: -11.655137062072754
    7. '.dot' → logprob: -12.405137062072754
    8. '.a' → logprob: -12.780137062072754
    9. 'Cross' → logprob: -12.780137062072754
    10. '(' → logprob: -13.280137062072754

Token 1866: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.10068924725055695
    2. 'a' → logprob: -2.350689172744751
    3. '(Vector' → logprob: -8.225688934326172
    4. 'Vector' → logprob: -8.850688934326172
    5. ' a' → logprob: -10.975688934326172
    6. ')a' → logprob: -10.975688934326172
    7. '<Vector' → logprob: -11.475688934326172
    8. '(
' → logprob: -11.725688934326172
    9. '(vector' → logprob: -12.475688934326172
    10. 'vector' → logprob: -12.850688934326172

Token 1867: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6079648733139038
    2. ',b' → logprob: -0.8579648733139038
    3. 'b' → logprob: -3.4829649925231934
    4. '(b' → logprob: -7.732964992523193
    5. ' b' → logprob: -8.232964515686035
    6. '(' → logprob: -9.732964515686035
    7. ' ,' → logprob: -11.357964515686035
    8. '   ' → logprob: -11.482964515686035
    9. '	b' → logprob: -12.232964515686035
    10. ' ' → logprob: -13.107964515686035

Token 1868: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00010616567305987701
    2. ' b' → logprob: -9.500105857849121
    3. 'a' → logprob: -10.875105857849121
    4. '   ' → logprob: -12.125105857849121
    5. 'Vector' → logprob: -12.375105857849121
    6. 'Point' → logprob: -14.250105857849121
    7. ' ' → logprob: -14.500105857849121
    8. '	b' → logprob: -14.500105857849121
    9. '  ' → logprob: -15.250105857849121
    10. '       ' → logprob: -15.875105857849121

Token 1869: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026068103034049273
    2. ')>' → logprob: -6.1276068687438965
    3. '())' → logprob: -8.877606391906738
    4. ' )' → logprob: -9.127606391906738
    5. ')<' → logprob: -9.502606391906738
    6. ')>=' → logprob: -9.627606391906738
    7. ')==' → logprob: -11.002606391906738
    8. ')<=' → logprob: -12.377606391906738
    9. '))' → logprob: -13.002606391906738
    10. '）' → logprob: -13.502606391906738

Token 1870: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5089277029037476
    2. '<' → logprob: -1.2589277029037476
    3. ' <=' → logprob: -2.508927822113037
    4. '<=' → logprob: -4.008927822113037
    5. '<|end|>' → logprob: -5.633927822113037
    6. '==' → logprob: -5.883927822113037
    7. ' ==' → logprob: -6.008927822113037
    8. ' >' → logprob: -6.633927822113037
    9. '>' → logprob: -6.883927822113037
    10. ' >=' → logprob: -7.258927822113037

Token 1871: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.009000970050692558
    2. '1' → logprob: -4.759000778198242
    3. 'Vector' → logprob: -8.259000778198242
    4. ' Point' → logprob: -9.134000778198242
    5. 'Polygon' → logprob: -11.384000778198242
    6. 'p' → logprob: -12.884000778198242
    7. '	Point' → logprob: -13.384000778198242
    8. '(Point' → logprob: -13.759000778198242
    9. 'point' → logprob: -14.384000778198242
    10. '_Point' → logprob: -14.634000778198242

Token 1872: '.e' (ID: 2560)
  Prédit: '.e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.e' → logprob: -0.0007505440153181553
    2. '.' → logprob: -7.750750541687012
    3. 'epsilon' → logprob: -8.125750541687012
    4. 'e' → logprob: -11.625750541687012
    5. '(e' → logprob: -11.750750541687012
    6. '(' → logprob: -12.375750541687012
    7. ' epsilon' → logprob: -14.125750541687012
    8. 'ε' → logprob: -14.500750541687012
    9. '.s' → logprob: -14.875750541687012
    10. '```' → logprob: -15.125750541687012

Token 1873: 'psilon' (ID: 71499)
  Prédit: 'psilon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'psilon' → logprob: -0.00018744789122138172
    2. 'epsilon' → logprob: -9.250187873840332
    3. '-' → logprob: -10.000187873840332
    4. '10' → logprob: -11.000187873840332
    5. 'ps' → logprob: -11.375187873840332
    6. 'p' → logprob: -11.625187873840332
    7. 'psi' → logprob: -12.125187873840332
    8. '1' → logprob: -14.250187873840332
    9. 'x' → logprob: -15.375187873840332
    10. 'rror' → logprob: -15.500187873840332

Token 1874: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07890719175338745
    2. 'and' → logprob: -2.5789072513580322
    3. '	and' → logprob: -11.578907012939453
    4. '<|end|>' → logprob: -12.453907012939453
    5. ' ' → logprob: -13.078907012939453
    6. '   ' → logprob: -14.578907012939453
    7. ' or' → logprob: -14.953907012939453
    8. '       ' → logprob: -15.328907012939453
    9. '           ' → logprob: -15.453907012939453
    10. '<|end|>' → logprob: -15.703907012939453

Token 1875: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.019202275201678276
    2. 'min' → logprob: -4.26920223236084
    3. '(min' → logprob: -5.89420223236084
    4. '(Vector' → logprob: -6.39420223236084
    5. '(a' → logprob: -8.39420223236084
    6. ' Vector' → logprob: -8.39420223236084
    7. 'a' → logprob: -9.26920223236084
    8. ' min' → logprob: -10.76920223236084
    9. 'Point' → logprob: -11.39420223236084
    10. '(' → logprob: -12.01920223236084

Token 1876: '.dot' (ID: 52692)
  Prédit: '.dot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dot' → logprob: -0.2018352597951889
    2. 'dot' → logprob: -1.70183527469635
    3. '_dot' → logprob: -8.076835632324219
    4. 'Dot' → logprob: -9.826835632324219
    5. '(dot' → logprob: -10.576835632324219
    6. ' dot' → logprob: -10.826835632324219
    7. '.Dot' → logprob: -12.201835632324219
    8. 'min' → logprob: -12.576835632324219
    9. 'a' → logprob: -14.076835632324219
    10. '.min' → logprob: -14.326835632324219

Token 1877: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.001506528351455927
    2. 'a' → logprob: -6.501506328582764
    3. '(Vector' → logprob: -12.626506805419922
    4. 'Vector' → logprob: -14.751506805419922
    5. '(' → logprob: -15.376506805419922
    6. '   ' → logprob: -16.626506805419922
    7. '[a' → logprob: -17.126506805419922
    8. '"""' → logprob: -17.126506805419922
    9. ' a' → logprob: -17.376506805419922
    10. '>a' → logprob: -17.876506805419922

Token 1878: ',' (ID: 11)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01841798610985279
    2. '(b' → logprob: -4.018417835235596
    3. ' b' → logprob: -8.893418312072754
    4. 'a' → logprob: -9.518418312072754
    5. '(a' → logprob: -10.018418312072754
    6. '	b' → logprob: -12.393418312072754
    7. ',b' → logprob: -13.018418312072754
    8. '   ' → logprob: -13.143418312072754
    9. '(' → logprob: -14.518418312072754
    10. '(
' → logprob: -14.518418312072754

Token 1879: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.011049113236367702
    2. 'b' → logprob: -4.511049270629883
    3. 'Vector' → logprob: -14.261049270629883
    4. ' a' → logprob: -14.636049270629883
    5. '(a' → logprob: -16.011049270629883
    6. '   ' → logprob: -16.386049270629883
    7. ' b' → logprob: -18.011049270629883
    8. '	a' → logprob: -18.011049270629883
    9. ' ' → logprob: -18.386049270629883
    10. '(Vector' → logprob: -19.011049270629883

Token 1880: ')' (ID: 8)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.07339240610599518
    2. ' <=' → logprob: -2.823392391204834
    3. '(a' → logprob: -4.698392391204834
    4. '(' → logprob: -7.698392391204834
    5. ')<=' → logprob: -7.698392391204834
    6. '   ' → logprob: -8.323392868041992
    7. '(p' → logprob: -8.698392868041992
    8. 'a' → logprob: -8.823392868041992
    9. '       ' → logprob: -8.948392868041992
    10. '           ' → logprob: -9.323392868041992

Token 1881: ' <' (ID: 464)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.00893433764576912
    2. ' <=' → logprob: -5.133934497833252
    3. '()' → logprob: -6.008934497833252
    4. '()<' → logprob: -8.133934020996094
    5. '<' → logprob: -9.133934020996094
    6. ')<=' → logprob: -9.383934020996094
    7. '(' → logprob: -10.633934020996094
    8. ']<=' → logprob: -11.633934020996094
    9. 'le' → logprob: -12.008934020996094
    10. '```' → logprob: -12.258934020996094

Token 1882: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.00262607354670763
    2. '0' → logprob: -6.002625942230225
    3. ' Point' → logprob: -8.877626419067383
    4. '=' → logprob: -11.627626419067383
    5. ' ' → logprob: -13.877626419067383
    6. '	Point' → logprob: -15.002626419067383
    7. 'point' → logprob: -15.627626419067383
    8. '_point' → logprob: -15.627626419067383
    9. '1' → logprob: -15.877626419067383
    10. '(Point' → logprob: -16.502626419067383

Token 1883: '.e' (ID: 2560)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07178082317113876
    2. 'Point' → logprob: -2.6967809200286865
    3. ' ' → logprob: -7.821780681610107
    4. ' Point' → logprob: -7.821780681610107
    5. '-' → logprob: -8.071781158447266
    6. '   ' → logprob: -8.446781158447266
    7. '-point' → logprob: -8.571781158447266
    8. '	Point' → logprob: -9.196781158447266
    9. '(Point' → logprob: -9.446781158447266
    10. '.Point' → logprob: -10.196781158447266

Token 1884: 'psilon' (ID: 71499)
  Prédit: 'psilon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'psilon' → logprob: -0.6058379411697388
    2. '0' → logprob: -0.9808379411697388
    3. '-' → logprob: -2.605837821960449
    4. 'Point' → logprob: -5.855837821960449
    5. 'ps' → logprob: -6.480837821960449
    6. '_point' → logprob: -7.980837821960449
    7. 'p' → logprob: -8.73083782196045
    8. '10' → logprob: -8.98083782196045
    9. 'epsilon' → logprob: -9.10583782196045
    10. 'psi' → logprob: -9.23083782196045

Token 1885: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7715235948562622
    2. ':
' → logprob: -1.2715235948562622
    3. ' and' → logprob: -1.6465235948562622
    4. '           ' → logprob: -3.0215234756469727
    5. '       ' → logprob: -4.521523475646973
    6. ':return' → logprob: -6.021523475646973
    7. '          ' → logprob: -7.646523475646973
    8. 'and' → logprob: -7.646523475646973
    9. ' or' → logprob: -7.771523475646973
    10. '   ' → logprob: -8.021523475646973

Token 1886: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00016885579680092633
    2. ' return' → logprob: -9.375168800354004
    3. '          ' → logprob: -10.500168800354004
    4. '		' → logprob: -10.625168800354004
    5. 'return' → logprob: -11.125168800354004
    6. '               ' → logprob: -12.000168800354004
    7. ' x' → logprob: -12.625168800354004
    8. '	       ' → logprob: -13.250168800354004
    9. '            ' → logprob: -13.500168800354004
    10. ',' → logprob: -14.125168800354004

Token 1887: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.020248478278517723
    2. ' return' → logprob: -4.2702484130859375
    3. '       ' → logprob: -5.1452484130859375
    4. '           ' → logprob: -9.395248413085938
    5. '	return' → logprob: -9.395248413085938
    6. '               ' → logprob: -10.020248413085938
    7. '   ' → logprob: -11.395248413085938
    8. '
' → logprob: -11.520248413085938
    9. '	' → logprob: -13.145248413085938
    10. ':return' → logprob: -13.270248413085938

Token 1888: ' ' (ID: 220)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -7.465036105713807e-06
    2. ' True' → logprob: -11.875007629394531
    3. '1' → logprob: -15.500007629394531
    4. 'False' → logprob: -16.37500762939453
    5. 'Tr' → logprob: -16.62500762939453
    6. '0' → logprob: -17.12500762939453
    7. '   ' → logprob: -17.50000762939453
    8. '"' → logprob: -17.87500762939453
    9. '(True' → logprob: -17.87500762939453
    10. 'not' → logprob: -19.00000762939453

Token 1889: '1' (ID: 16)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -5.5577775128767826e-06
    2. ' True' → logprob: -12.375005722045898
    3. '   ' → logprob: -14.875005722045898
    4. 'Tr' → logprob: -15.125005722045898
    5. 'False' → logprob: -15.375005722045898
    6. '1' → logprob: -15.625005722045898
    7. '0' → logprob: -16.2500057220459
    8. 'true' → logprob: -17.0000057220459
    9. '(True' → logprob: -17.1250057220459
    10. '	' → logprob: -17.8750057220459

Token 1890: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5893205404281616
    2. '<|end|>' → logprob: -0.8393205404281616
    3. '	' → logprob: -5.339320659637451
    4. '
' → logprob: -5.714320659637451
    5. '<|end|>' → logprob: -6.464320659637451
    6. '   ' → logprob: -6.964320659637451
    7. ' ' → logprob: -7.214320659637451
    8. ')' → logprob: -7.589320659637451
    9. '0' → logprob: -8.964320182800293
    10. '[' → logprob: -9.089320182800293

Token 1891: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002742112148553133
    2. '	' → logprob: -6.502742290496826
    3. '   ' → logprob: -7.002742290496826
    4. '<|end|>' → logprob: -8.502741813659668
    5. ')' → logprob: -10.252741813659668
    6. '           ' → logprob: -10.877741813659668
    7. ' ' → logprob: -11.002741813659668
    8. '      ' → logprob: -11.627741813659668
    9. '        ' → logprob: -12.127741813659668
    10. '    ' → logprob: -12.627741813659668

Token 1892: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0629139095544815
    2. 'if' (adapté à ' if') → logprob: -3.0629138946533203
    3. ' if' → logprob: -4.68791389465332
    4. '   ' → logprob: -5.43791389465332
    5. ' ' → logprob: -9.18791389465332
    6. '	' → logprob: -9.31291389465332
    7. 'for' → logprob: -9.31291389465332
    8. 'x' → logprob: -10.06291389465332
    9. 'import' → logprob: -10.06291389465332
    10. '      ' → logprob: -10.18791389465332

Token 1893: ' a' (ID: 261)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.7765655517578125
    2. '(a' → logprob: -1.1515655517578125
    3. 'a' → logprob: -1.6515655517578125
    4. '(abs' → logprob: -4.4015655517578125
    5. '(b' → logprob: -4.9015655517578125
    6. '(((' → logprob: -5.0265655517578125
    7. 'abs' → logprob: -6.5265655517578125
    8. 'b' → logprob: -6.6515655517578125
    9. ' (' → logprob: -6.6515655517578125
    10. ' ((' → logprob: -7.6515655517578125

Token 1894: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.33402499556541443
    2. 'y' → logprob: -2.4590249061584473
    3. '=' → logprob: -2.5840249061584473
    4. '.x' → logprob: -3.2090249061584473
    5. ' =' → logprob: -3.7090249061584473
    6. '.' → logprob: -4.334024906158447
    7. '_y' → logprob: -4.584024906158447
    8. 'Answer' → logprob: -5.334024906158447
    9. 'x' → logprob: -5.834024906158447
    10. '<|end|>' → logprob: -5.959024906158447

Token 1895: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5765551328659058
    2. '<' → logprob: -1.3265551328659058
    3. ' >' → logprob: -2.0765552520751953
    4. ' <' → logprob: -3.7015552520751953
    5. '<=' → logprob: -4.201555252075195
    6. ' <=' → logprob: -5.576555252075195
    7. '>=' → logprob: -6.201555252075195
    8. '*' → logprob: -6.826555252075195
    9. ' *' → logprob: -8.076555252075195
    10. ' >=' → logprob: -8.826555252075195

Token 1896: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011061026714742184
    2. ' b' → logprob: -4.511061191558838
    3. '0' → logprob: -11.38606071472168
    4. ' ' → logprob: -14.51106071472168
    5. '>b' → logprob: -14.51106071472168
    6. '	b' → logprob: -15.13606071472168
    7. '=' → logprob: -15.63606071472168
    8. '=b' → logprob: -15.76106071472168
    9. '1' → logprob: -16.76106071472168
    10. 'p' → logprob: -17.51106071472168

Token 1897: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.013950165361166
    2. 'y' → logprob: -4.388950347900391
    3. '.' → logprob: -6.638950347900391
    4. ' .' → logprob: -10.01395034790039
    5. '[' → logprob: -10.51395034790039
    6. ' ' → logprob: -11.01395034790039
    7. '0' → logprob: -11.26395034790039
    8. '```' → logprob: -11.63895034790039
    9. '.x' → logprob: -12.01395034790039
    10. '[i' → logprob: -12.76395034790039

Token 1898: ':
' (ID: 734)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.03269258514046669
    2. ' !=' → logprob: -3.6576926708221436
    3. 'and' → logprob: -6.4076924324035645
    4. '>' → logprob: -6.6576924324035645
    5. '<|end|>' → logprob: -6.9076924324035645
    6. '==' → logprob: -7.0326924324035645
    7. ' and' → logprob: -7.9076924324035645
    8. '!' → logprob: -8.407692909240723
    9. ')!=' → logprob: -8.407692909240723
    10. '!==' → logprob: -8.782692909240723

Token 1899: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11003963649272919
    2. '<|end|>' → logprob: -3.360039710998535
    3. '       ' → logprob: -4.235039710998535
    4. '[' → logprob: -4.485039710998535
    5. '        ' → logprob: -4.610039710998535
    6. ' and' → logprob: -5.360039710998535
    7. ' ' → logprob: -5.485039710998535
    8. '=' → logprob: -5.735039710998535
    9. '<|end|>' → logprob: -6.110039710998535
    10. '            ' → logprob: -6.235039710998535

Token 1900: ' temp' (ID: 5484)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5880208611488342
    2. 'a' → logprob: -1.8380208015441895
    3. 'if' → logprob: -2.0880208015441895
    4. ' x' → logprob: -2.7130208015441895
    5. ' not' → logprob: -3.7130208015441895
    6. 'not' → logprob: -3.8380208015441895
    7. ' if' → logprob: -4.8380208015441895
    8. 'True' → logprob: -5.0880208015441895
    9. '   ' → logprob: -5.4630208015441895
    10. '(x' → logprob: -5.4630208015441895

Token 1901: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.034566931426525116
    2. ' =' → logprob: -3.784566879272461
    3. ',' → logprob: -5.034566879272461
    4. '=a' → logprob: -5.534566879272461
    5. 'a' → logprob: -7.659566879272461
    6. ',a' → logprob: -9.034566879272461
    7. '=True' → logprob: -9.659566879272461
    8. '=p' → logprob: -10.159566879272461
    9. '=False' → logprob: -11.159566879272461
    10. '=b' → logprob: -11.284566879272461

Token 1902: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14683468639850616
    2. 'b' → logprob: -2.0218346118927
    3. ' a' → logprob: -5.896834850311279
    4. ' b' → logprob: -7.271834850311279
    5. 'Vector' → logprob: -7.896834850311279
    6. '(a' → logprob: -9.646834373474121
    7. 'Point' → logprob: -9.646834373474121
    8. 'polygon' → logprob: -10.646834373474121
    9. 'Polygon' → logprob: -10.896834373474121
    10. '   ' → logprob: -11.021834373474121

Token 1903: '
' (ID: 198)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.027819328010082245
    2. ',' → logprob: -3.9028193950653076
    3. ',a' → logprob: -5.2778191566467285
    4. ' a' → logprob: -6.6528191566467285
    5. 'b' → logprob: -7.4028191566467285
    6. '=a' → logprob: -9.027819633483887
    7. ',b' → logprob: -10.152819633483887
    8. '=' → logprob: -10.152819633483887
    9. '>a' → logprob: -10.902819633483887
    10. '	a' → logprob: -11.527819633483887

Token 1904: '           ' (ID: 352)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14845336973667145
    2. '           ' → logprob: -2.2734534740448
    3. '=' → logprob: -3.7734534740448
    4. ' =' → logprob: -5.523453235626221
    5. '=a' → logprob: -5.898453235626221
    6. '       ' → logprob: -6.273453235626221
    7. ' a' → logprob: -6.773453235626221
    8. ',' → logprob: -7.398453235626221
    9. '<|end|>' → logprob: -8.398453712463379
    10. ',a' → logprob: -8.398453712463379

Token 1905: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.004542388487607241
    2. 'b' → logprob: -5.754542350769043
    3. '           ' → logprob: -6.629542350769043
    4. ' a' → logprob: -10.879542350769043
    5. '   ' → logprob: -11.004542350769043
    6. '       ' → logprob: -12.129542350769043
    7. ' b' → logprob: -14.879542350769043
    8. '	a' → logprob: -14.879542350769043
    9. '<|end|>' → logprob: -15.254542350769043
    10. '          ' → logprob: -15.879542350769043

Token 1906: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34941643476486206
    2. ',' → logprob: -1.3494164943695068
    3. ',b' → logprob: -3.599416494369507
    4. '=b' → logprob: -5.724416255950928
    5. ' =' → logprob: -5.974416255950928
    6. 'b' → logprob: -6.849416255950928
    7. '=a' → logprob: -7.349416255950928
    8. ',a' → logprob: -7.724416255950928
    9. 'a' → logprob: -9.224416732788086
    10. '=
' → logprob: -10.599416732788086

Token 1907: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -9.627176768844947e-05
    2. ' b' → logprob: -9.250096321105957
    3. '   ' → logprob: -17.25009536743164
    4. '	b' → logprob: -17.37509536743164
    5. '       ' → logprob: -19.37509536743164
    6. ' ' → logprob: -19.87509536743164
    7. '    ' → logprob: -20.87509536743164
    8. ')b' → logprob: -21.00009536743164
    9. '           ' → logprob: -21.12509536743164
    10. '>b' → logprob: -21.50009536743164

Token 1908: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14129424095153809
    2. '           ' → logprob: -2.141294240951538
    3. 'b' → logprob: -4.516294479370117
    4. '
' → logprob: -7.141294479370117
    5. 'temp' → logprob: -7.141294479370117
    6. 'a' → logprob: -7.891294479370117
    7. '       ' → logprob: -8.016294479370117
    8. ' 
' → logprob: -8.391294479370117
    9. '            
' → logprob: -8.391294479370117
    10. '		' → logprob: -9.141294479370117

Token 1909: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5660344958305359
    2. 'b' → logprob: -1.1910345554351807
    3. ',' → logprob: -3.5660345554351807
    4. '
' → logprob: -3.8160345554351807
    5. 'a' → logprob: -4.191034317016602
    6. '=' → logprob: -4.316034317016602
    7. '       ' → logprob: -4.316034317016602
    8. '<|end|>' → logprob: -4.691034317016602
    9. '[' → logprob: -4.941034317016602
    10. 'temp' → logprob: -5.816034317016602

Token 1910: ' b' (ID: 287)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.0004320996522437781
    2. ' temp' → logprob: -7.750432014465332
    3. 'b' (adapté à ' b') → logprob: -13.625432014465332
    4. 'tmp' → logprob: -15.875432014465332
    5. '           ' → logprob: -16.37543296813965
    6. '	temp' → logprob: -17.50043296813965
    7. '[temp' → logprob: -17.87543296813965
    8. '_temp' → logprob: -18.87543296813965
    9. 't' → logprob: -18.87543296813965
    10. '$temp' → logprob: -18.87543296813965

Token 1911: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12332465499639511
    2. ' =' → logprob: -2.8733246326446533
    3. '<|end|>' → logprob: -3.4983246326446533
    4. '=a' → logprob: -5.498324871063232
    5. '=temp' → logprob: -5.748324871063232
    6. ',' → logprob: -5.748324871063232
    7. 'a' → logprob: -5.873324871063232
    8. '       ' → logprob: -5.873324871063232
    9. '<|end|>' → logprob: -6.123324871063232
    10. '
' → logprob: -6.248324871063232

Token 1912: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.00020354038861114532
    2. ' temp' → logprob: -8.500203132629395
    3. 'tmp' → logprob: -18.50020408630371
    4. 'Point' → logprob: -18.87520408630371
    5. '	temp' → logprob: -19.00020408630371
    6. 'Vector' → logprob: -19.37520408630371
    7. '[temp' → logprob: -20.75020408630371
    8. '(temp' → logprob: -21.00020408630371
    9. '$temp' → logprob: -21.12520408630371
    10. ' ' → logprob: -21.12520408630371

Token 1913: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006671443581581116
    2. '<|end|>' → logprob: -5.13167142868042
    3. ',' → logprob: -8.131671905517578
    4. '
' → logprob: -8.506671905517578
    5. '<|end|>' → logprob: -8.631671905517578
    6. '           ' → logprob: -10.756671905517578
    7. '   ' → logprob: -11.506671905517578
    8. '[' → logprob: -12.256671905517578
    9. '        
' → logprob: -12.631671905517578
    10. ';' → logprob: -12.881671905517578

Token 1914: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001310719089815393
    2. '   ' → logprob: -9.625130653381348
    3. '           ' → logprob: -10.750130653381348
    4. '<|end|>' → logprob: -10.875130653381348
    5. '```' → logprob: -11.875130653381348
    6. ' if' → logprob: -11.875130653381348
    7. ',' → logprob: -12.750130653381348
    8. '[' → logprob: -13.250130653381348
    9. ' ' → logprob: -14.250130653381348
    10. '
' → logprob: -14.375130653381348

Token 1915: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5780419707298279
    2. '       ' → logprob: -1.4530420303344727
    3. ' if' → logprob: -1.7030420303344727
    4. '   ' → logprob: -4.703042030334473
    5. '```' → logprob: -5.078042030334473
    6. 'for' → logprob: -5.828042030334473
    7. '           ' → logprob: -6.203042030334473
    8. ' for' → logprob: -6.703042030334473
    9. 'j' → logprob: -7.578042030334473
    10. 'x' → logprob: -8.453042030334473

Token 1916: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.010032182559370995
    2. '(a' → logprob: -4.8850321769714355
    3. ' a' → logprob: -6.3850321769714355
    4. '((' → logprob: -7.5100321769714355
    5. ' (' → logprob: -9.260032653808594
    6. '(abs' → logprob: -10.010032653808594
    7. '(p' → logprob: -11.385032653808594
    8. 'abs' → logprob: -11.635032653808594
    9. '(' → logprob: -11.885032653808594
    10. '(not' → logprob: -12.510032653808594

Token 1917: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0005437385407276452
    2. '.' → logprob: -7.625543594360352
    3. 'y' → logprob: -9.875543594360352
    4. '.x' → logprob: -12.875543594360352
    5. ' .' → logprob: -13.625543594360352
    6. '[' → logprob: -16.25054359436035
    7. ' y' → logprob: -17.00054359436035
    8. '<|end|>' → logprob: -17.12554359436035
    9. '..' → logprob: -17.25054359436035
    10. '<|end|>' → logprob: -17.37554359436035

Token 1918: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.020552631467580795
    2. '<=' → logprob: -4.270552635192871
    3. ' <' → logprob: -5.145552635192871
    4. '<p' → logprob: -7.770552635192871
    5. ' <=' → logprob: -9.645552635192871
    6. '()<' → logprob: -11.520552635192871
    7. '<a' → logprob: -11.645552635192871
    8. '0' → logprob: -11.770552635192871
    9. '<b' → logprob: -12.270552635192871
    10. '>' → logprob: -13.520552635192871

Token 1919: ' Point' (ID: 9971)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.036715809255838394
    2. '0' → logprob: -3.5367157459259033
    3. 'b' → logprob: -5.036715984344482
    4. ' p' → logprob: -7.911715984344482
    5. ' ' → logprob: -10.661715507507324
    6. '<=' → logprob: -11.286715507507324
    7. 'Vector' → logprob: -11.661715507507324
    8. 'Point' → logprob: -11.786715507507324
    9. 'y' → logprob: -11.786715507507324
    10. ' b' → logprob: -11.911715507507324

Token 1920: '.e' (ID: 2560)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.022000549361109734
    2. '0' → logprob: -4.272000312805176
    3. '.y' → logprob: -5.022000312805176
    4. ' y' → logprob: -7.147000312805176
    5. 'p' → logprob: -8.147000312805176
    6. ' ' → logprob: -10.022000312805176
    7. 'b' → logprob: -10.397000312805176
    8. '
' → logprob: -10.647000312805176
    9. '.' → logprob: -11.272000312805176
    10. '   ' → logprob: -12.147000312805176

Token 1921: 'psilon' (ID: 71499)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6415879130363464
    2. 'psilon' → logprob: -0.7665879130363464
    3. '0' → logprob: -5.766587734222412
    4. '-' → logprob: -6.516587734222412
    5. ' p' → logprob: -6.516587734222412
    6. 'epsilon' → logprob: -7.141587734222412
    7. '<p' → logprob: -7.766587734222412
    8. '```' → logprob: -8.01658821105957
    9. '10' → logprob: -8.51658821105957
    10. '   ' → logprob: -8.64158821105957

Token 1922: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.24708551168441772
    2. '<=' → logprob: -1.9970855712890625
    3. ' and' → logprob: -2.4970855712890625
    4. ' <=' → logprob: -7.2470855712890625
    5. '<' → logprob: -8.872085571289062
    6. '&&' → logprob: -11.747085571289062
    7. '       ' → logprob: -12.747085571289062
    8. '           ' → logprob: -13.497085571289062
    9. '≤' → logprob: -13.747085571289062
    10. ' <' → logprob: -13.872085571289062

Token 1923: ' Point' (ID: 9971)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00021271906734909862
    2. 'Point' → logprob: -8.875212669372559
    3. ' b' → logprob: -10.250212669372559
    4. '0' → logprob: -10.250212669372559
    5. 'p' → logprob: -13.750212669372559
    6. '   ' → logprob: -15.375212669372559
    7. ' Point' → logprob: -15.375212669372559
    8. 'temp' → logprob: -15.625212669372559
    9. '
' → logprob: -16.375213623046875
    10. '<Point' → logprob: -16.500213623046875

Token 1924: '.e' (ID: 2560)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.23465177416801453
    2. '.y' → logprob: -1.859651803970337
    3. 'epsilon' → logprob: -3.234651803970337
    4. 'e' → logprob: -4.359651565551758
    5. '.e' → logprob: -6.984651565551758
    6. '0' → logprob: -8.984651565551758
    7. 'b' → logprob: -9.859651565551758
    8. '   ' → logprob: -10.734651565551758
    9. 'ε' → logprob: -10.984651565551758
    10. '
' → logprob: -11.109651565551758

Token 1925: 'psilon' (ID: 71499)
  Prédit: 'psilon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'psilon' → logprob: -0.05908796563744545
    2. 'y' → logprob: -3.5590879917144775
    3. 'p' → logprob: -4.809087753295898
    4. '10' → logprob: -4.934087753295898
    5. '0' → logprob: -5.309087753295898
    6. '-' → logprob: -5.684087753295898
    7. '.y' → logprob: -6.684087753295898
    8. 'ps' → logprob: -7.434087753295898
    9. 'epsilon' → logprob: -7.434087753295898
    10. '1' → logprob: -7.684087753295898

Token 1926: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.9490018486976624
    2. '<=' → logprob: -1.3240017890930176
    3. 'and' → logprob: -1.4490017890930176
    4. ' and' → logprob: -2.3240017890930176
    5. '>=' → logprob: -5.199001789093018
    6. ' <' → logprob: -5.449001789093018
    7. ' <=' → logprob: -5.949001789093018
    8. '<|end|>' → logprob: -7.699001789093018
    9. '<p' → logprob: -7.949001789093018
    10. '<b' → logprob: -8.199002265930176

Token 1927: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0011711753904819489
    2. ' b' → logprob: -6.751171112060547
    3. '	b' → logprob: -15.501171112060547
    4. '   ' → logprob: -15.626171112060547
    5. '(b' → logprob: -15.626171112060547
    6. ' ' → logprob: -16.251171112060547
    7. '
' → logprob: -17.126171112060547
    8. '```' → logprob: -17.126171112060547
    9. '...' → logprob: -17.251171112060547
    10. '.b' → logprob: -17.626171112060547

Token 1928: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.00037132782745175064
    2. 'y' → logprob: -8.250370979309082
    3. '.' → logprob: -9.125370979309082
    4. ' .' → logprob: -14.500370979309082
    5. '   ' → logprob: -16.1253719329834
    6. '.py' → logprob: -16.1253719329834
    7. '.x' → logprob: -16.3753719329834
    8. '```' → logprob: -16.5003719329834
    9. '[' → logprob: -16.8753719329834
    10. '	y' → logprob: -17.2503719329834

Token 1929: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2999362051486969
    2. ':' → logprob: -2.549936294555664
    3. '           ' → logprob: -2.674936294555664
    4. 'and' → logprob: -2.924936294555664
    5. ':
' → logprob: -3.174936294555664
    6. '       ' → logprob: -4.424936294555664
    7. '<|end|>' → logprob: -5.799936294555664
    8. '):
' → logprob: -8.299936294555664
    9. '<|end|>' → logprob: -8.549936294555664
    10. '   ' → logprob: -8.674936294555664

Token 1930: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.00025680975522845984
    2. '(Vector' → logprob: -8.750256538391113
    3. ' Vector' → logprob: -9.250256538391113
    4. '	Vector' → logprob: -13.250256538391113
    5. '   ' → logprob: -15.750256538391113
    6. 'Point' → logprob: -15.875256538391113
    7. '           ' → logprob: -16.37525749206543
    8. 'Vec' → logprob: -17.00025749206543
    9. '<Vector' → logprob: -17.37525749206543
    10. '_Vector' → logprob: -17.87525749206543

Token 1931: '.cross' (ID: 108957)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.2519412040710449
    2. '.cross' → logprob: -1.501941204071045
    3. ' cross' → logprob: -11.626941680908203
    4. '
' → logprob: -13.626941680908203
    5. '_cross' → logprob: -13.626941680908203
    6. 'Cross' → logprob: -14.126941680908203
    7. '.Cross' → logprob: -17.626941680908203
    8. 'a' → logprob: -17.751941680908203
    9. 'c' → logprob: -18.126941680908203
    10. 'cc' → logprob: -18.251941680908203

Token 1932: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.011373155459296e-05
    2. 'a' → logprob: -11.000030517578125
    3. '(Vector' → logprob: -11.375030517578125
    4. 'Vector' → logprob: -13.375030517578125
    5. '(
' → logprob: -15.750030517578125
    6. ' (' → logprob: -17.750030517578125
    7. ' a' → logprob: -17.875030517578125
    8. '<Vector' → logprob: -18.125030517578125
    9. '(' → logprob: -18.875030517578125
    10. '```' → logprob: -19.000030517578125

Token 1933: ',' (ID: 11)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.07547347992658615
    2. 'a' → logprob: -2.7004735469818115
    3. ',' → logprob: -6.325473308563232
    4. 'b' → logprob: -6.450473308563232
    5. '(b' → logprob: -6.450473308563232
    6. ' a' → logprob: -7.825473308563232
    7. '(' → logprob: -9.70047378540039
    8. ',a' → logprob: -10.20047378540039
    9. ' b' → logprob: -10.45047378540039
    10. ' (' → logprob: -11.20047378540039

Token 1934: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -8.065608562901616e-05
    2. ' b' → logprob: -9.500081062316895
    3. 'a' → logprob: -12.125081062316895
    4. 'Vector' → logprob: -15.625081062316895
    5. '	b' → logprob: -16.375080108642578
    6. '   ' → logprob: -16.500080108642578
    7. ' ' → logprob: -17.125080108642578
    8. '(b' → logprob: -17.375080108642578
    9. '
' → logprob: -17.750080108642578
    10. 'Point' → logprob: -18.000080108642578

Token 1935: ')' (ID: 8)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.14776340126991272
    2. '>' → logprob: -2.14776349067688
    3. ')>' → logprob: -4.772763252258301
    4. '()>' → logprob: -4.772763252258301
    5. ')' → logprob: -6.022763252258301
    6. ' <' → logprob: -8.0227632522583
    7. ' ' → logprob: -8.7727632522583
    8. '()' → logprob: -8.7727632522583
    9. '   ' → logprob: -9.0227632522583
    10. '    ' → logprob: -9.5227632522583

Token 1936: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0042856731452047825
    2. ' >' → logprob: -5.50428581237793
    3. '()>' → logprob: -9.12928581237793
    4. '   ' → logprob: -10.00428581237793
    5. ' ' → logprob: -11.00428581237793
    6. ')>' → logprob: -11.50428581237793
    7. '<' → logprob: -11.62928581237793
    8. '       ' → logprob: -12.50428581237793
    9. '    ' → logprob: -12.62928581237793
    10. '           ' → logprob: -13.25428581237793

Token 1937: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.013743006624281406
    2. '0' → logprob: -4.513742923736572
    3. ' Point' → logprob: -6.013742923736572
    4. '	Point' → logprob: -8.88874340057373
    5. ' ' → logprob: -9.63874340057373
    6. '(Point' → logprob: -10.51374340057373
    7. '   ' → logprob: -12.51374340057373
    8. '_Point' → logprob: -12.76374340057373
    9. '<Point' → logprob: -13.26374340057373
    10. '
' → logprob: -13.38874340057373

Token 1938: '.e' (ID: 2560)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0008090290939435363
    2. '0' → logprob: -7.625809192657471
    3. ' Point' → logprob: -8.125808715820312
    4. ' ' → logprob: -11.375808715820312
    5. '	Point' → logprob: -12.125808715820312
    6. '   ' → logprob: -12.750808715820312
    7. '(Point' → logprob: -13.500808715820312
    8. 'p' → logprob: -14.000808715820312
    9. '-point' → logprob: -14.125808715820312
    10. '  ' → logprob: -14.750808715820312

Token 1939: 'psilon' (ID: 71499)
  Prédit: 'psilon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'psilon' → logprob: -0.2632054090499878
    2. '0' → logprob: -1.7632054090499878
    3. 'epsilon' → logprob: -3.2632055282592773
    4. 'Point' → logprob: -4.138205528259277
    5. '10' → logprob: -5.763205528259277
    6. '_point' → logprob: -6.263205528259277
    7. '-' → logprob: -8.888205528259277
    8. ' Point' → logprob: -9.013205528259277
    9. '.Point' → logprob: -9.263205528259277
    10. '_Point' → logprob: -9.888205528259277

Token 1940: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.0732770785689354
    2. ':' → logprob: -3.198276996612549
    3. '           ' → logprob: -3.698276996612549
    4. ' :
' → logprob: -6.323276996612549
    5. '       ' → logprob: -6.573276996612549
    6. '):
' → logprob: -7.573276996612549
    7. '<|end|>' → logprob: -8.073277473449707
    8. '():
' → logprob: -8.198277473449707
    9. ' :' → logprob: -8.948277473449707
    10. ' x' → logprob: -9.448277473449707

Token 1941: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4677172899246216
    2. '       ' → logprob: -1.7177172899246216
    3. ' x' → logprob: -1.7177172899246216
    4. 'x' → logprob: -4.467717170715332
    5. '               ' → logprob: -6.842717170715332
    6. '   ' → logprob: -7.467717170715332
    7. '	       ' → logprob: -7.592717170715332
    8. '	' → logprob: -8.092717170715332
    9. '	x' → logprob: -8.467717170715332
    10. '		' → logprob: -9.342717170715332

Token 1942: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0006601344794034958
    2. ' x' → logprob: -7.750659942626953
    3. '       ' → logprob: -8.875659942626953
    4. '           ' → logprob: -9.625659942626953
    5. '   ' → logprob: -10.750659942626953
    6. '               ' → logprob: -13.625659942626953
    7. '	x' → logprob: -14.500659942626953
    8. ' ' → logprob: -15.375659942626953
    9. '     ' → logprob: -15.625659942626953
    10. '                   ' → logprob: -16.375659942626953

Token 1943: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0002627662615850568
    2. ' =' → logprob: -8.250263214111328
    3. ' ^=' → logprob: -14.250263214111328
    4. '=!' → logprob: -15.000263214111328
    5. '^' → logprob: -15.250263214111328
    6. '=
' → logprob: -16.000263214111328
    7. '   ' → logprob: -16.625263214111328
    8. 'not' → logprob: -16.875263214111328
    9. '=True' → logprob: -17.250263214111328
    10. '.=' → logprob: -17.375263214111328

Token 1944: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.013003981672227383
    2. ' not' → logprob: -4.388003826141357
    3. '   ' → logprob: -8.013004302978516
    4. 'True' → logprob: -9.513004302978516
    5. '(not' → logprob: -10.513004302978516
    6. '!' → logprob: -10.763004302978516
    7. '       ' → logprob: -10.888004302978516
    8. '	not' → logprob: -12.263004302978516
    9. '           ' → logprob: -12.763004302978516
    10. '    ' → logprob: -13.138004302978516

Token 1945: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.842555426876061e-06
    2. ' x' → logprob: -12.250004768371582
    3. '   ' → logprob: -20.2500057220459
    4. '	x' → logprob: -20.5000057220459
    5. '(x' → logprob: -21.8750057220459
    6. ' ' → logprob: -22.8750057220459
    7. 'True' → logprob: -23.0000057220459
    8. '  ' → logprob: -23.0000057220459
    9. '       ' → logprob: -23.7500057220459
    10. '```' → logprob: -23.7500057220459

Token 1946: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5360041260719299
    2. '<|end|>' → logprob: -1.1610040664672852
    3. '       ' → logprob: -2.536004066467285
    4. '
' → logprob: -4.536004066467285
    5. '<|end|>' → logprob: -5.536004066467285
    6. ')' → logprob: -5.661004066467285
    7. ' ' → logprob: -6.661004066467285
    8. '	return' → logprob: -7.036004066467285
    9. ' return' → logprob: -7.661004066467285
    10. '	' → logprob: -8.286004066467285

Token 1947: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030914396047592163
    2. 'return' → logprob: -5.878091335296631
    3. ' return' → logprob: -9.003091812133789
    4. '	return' → logprob: -9.128091812133789
    5. '       ' → logprob: -10.628091812133789
    6. '
' → logprob: -10.753091812133789
    7. ':return' → logprob: -13.003091812133789
    8. ' ' → logprob: -13.628091812133789
    9. '<|end|>' → logprob: -13.628091812133789
    10. ',' → logprob: -13.878091812133789

Token 1948: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05640598013997078
    2. ' return' → logprob: -3.556406021118164
    3. 'return' (adapté à ' return') → logprob: -3.806406021118164
    4. '	return' → logprob: -5.806406021118164
    5. '       ' → logprob: -7.556406021118164
    6. ' ' → logprob: -8.181406021118164
    7. ':return' → logprob: -9.556406021118164
    8. '
' → logprob: -9.681406021118164
    9. '```' → logprob: -9.931406021118164
    10. '  ' → logprob: -10.931406021118164

Token 1949: ' ' (ID: 220)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011052536778151989
    2. ' x' → logprob: -4.51105260848999
    3. 'int' → logprob: -12.636052131652832
    4. '1' → logprob: -13.636052131652832
    5. ' int' → logprob: -16.26105308532715
    6. '   ' → logprob: -16.38605308532715
    7. '0' → logprob: -16.76105308532715
    8. '	x' → logprob: -17.38605308532715
    9. 'bool' → logprob: -17.88605308532715
    10. ' ' → logprob: -18.38605308532715

Token 1950: '2' (ID: 17)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.4121114822482923e-06
    2. ' x' → logprob: -12.625003814697266
    3. 'int' → logprob: -17.125003814697266
    4. '1' → logprob: -19.750003814697266
    5. 'bool' → logprob: -22.000003814697266
    6. 'True' → logprob: -22.375003814697266
    7. '	x' → logprob: -22.375003814697266
    8. '   ' → logprob: -22.500003814697266
    9. 'False' → logprob: -22.500003814697266
    10. '0' → logprob: -22.875003814697266

Token 1951: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1952: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0011708177626132965
    2. ' x' → logprob: -6.751170635223389
    3. '   ' → logprob: -15.501171112060547
    4. ' ' → logprob: -15.501171112060547
    5. '(x' → logprob: -16.376171112060547
    6. '	x' → logprob: -17.501171112060547
    7. '  ' → logprob: -18.126171112060547
    8. '    ' → logprob: -18.751171112060547
    9. 'not' → logprob: -19.126171112060547
    10. '     ' → logprob: -19.876171112060547

Token 1953: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2519465982913971
    2. ' else' → logprob: -1.5019465684890747
    3. '==' → logprob: -11.001946449279785
    4. '	else' → logprob: -15.251946449279785
    5. 'return' → logprob: -15.751946449279785
    6. '
' → logprob: -16.0019474029541
    7. ' ' → logprob: -16.0019474029541
    8. ' ==' → logprob: -16.5019474029541
    9. '!=' → logprob: -17.3769474029541
    10. 'e' → logprob: -17.6269474029541

Token 1954: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.698698704596609e-05
    2. ' ' → logprob: -9.250097274780273
    3. '   ' → logprob: -14.875097274780273
    4. '1' → logprob: -15.125097274780273
    5. 'False' → logprob: -16.250097274780273
    6. '  ' → logprob: -17.625097274780273
    7. '
' → logprob: -19.250097274780273
    8. '    ' → logprob: -19.250097274780273
    9. '3' → logprob: -19.375097274780273
    10. '	' → logprob: -19.875097274780273

Token 1955: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.991464786347933e-05
    2. ' ' → logprob: -9.750060081481934
    3. '1' → logprob: -13.500060081481934
    4. 'False' → logprob: -16.500059127807617
    5. '   ' → logprob: -17.250059127807617
    6. '3' → logprob: -18.125059127807617
    7. '  ' → logprob: -18.250059127807617
    8. '```' → logprob: -19.187559127807617
    9. '
' → logprob: -19.437559127807617
    10. '    ' → logprob: -19.750059127807617

Token 1956: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0970877408981323
    2. '<|end|>' → logprob: -1.0970877408981323
    3. 'if' → logprob: -1.3470877408981323
    4. '#' → logprob: -3.097087860107422
    5. '
' → logprob: -3.972087860107422
    6. 'n' → logprob: -5.972087860107422
    7. 'p' → logprob: -6.097087860107422
    8. '#!/' → logprob: -7.722087860107422
    9. '<|end|>' → logprob: -7.847087860107422
    10. 'for' → logprob: -7.847087860107422

Token 1957: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.29939326643943787
    2. '#' → logprob: -1.7993932962417603
    3. 'if' → logprob: -2.7993931770324707
    4. 'n' → logprob: -3.9243931770324707
    5. 'import' → logprob: -5.424393177032471
    6. 'for' → logprob: -5.674393177032471
    7. 'p' → logprob: -6.049393177032471
    8. 'class' → logprob: -7.174393177032471
    9. '<|end|>' → logprob: -7.924393177032471
    10. 'x' → logprob: -8.424393653869629

Token 1958: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0029490552842617035
    2. 'conv' → logprob: -6.002949237823486
    3. 'solve' → logprob: -8.252948760986328
    4. 'distance' → logprob: -9.377948760986328
    5. 'cc' → logprob: -10.377948760986328
    6. ' main' → logprob: -11.377948760986328
    7. 'read' → logprob: -11.627948760986328
    8. 'calc' → logprob: -11.627948760986328
    9. 'dist' → logprob: -11.752948760986328
    10. 'angle' → logprob: -12.127948760986328

Token 1959: '(args' (ID: 14885)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.000555416801944375
    2. '():
' → logprob: -7.500555515289307
    3. ' ():' → logprob: -13.125555038452148
    4. '()' → logprob: -15.375555038452148
    5. '():
' → logprob: -15.625555038452148
    6. '():

' → logprob: -17.87555503845215
    7. '(' → logprob: -18.00055503845215
    8. '(":' → logprob: -20.37555503845215
    9. '().' → logprob: -20.50055503845215
    10. '_' → logprob: -21.37555503845215

Token 1960: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.4690470695495605
    2. '():' → logprob: -1.4690470695495605
    3. '():
' → logprob: -1.7190470695495605
    4. '):' → logprob: -1.7190470695495605
    5. '()):
' → logprob: -2.0940470695495605
    6. '()' → logprob: -3.2190470695495605
    7. '(argv' → logprob: -4.9690470695495605
    8. '[]):' → logprob: -5.0940470695495605
    9. '=[]' → logprob: -6.0940470695495605
    10. '(args' → logprob: -7.4690470695495605

Token 1961: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004533131141215563
    2. 'n' → logprob: -5.879533290863037
    3. '	n' → logprob: -6.629533290863037
    4. ' n' → logprob: -8.379532814025879
    5. 'N' → logprob: -9.629532814025879
    6. '	N' → logprob: -10.379532814025879
    7. 's' → logprob: -11.504532814025879
    8. '(n' → logprob: -11.754532814025879
    9. 'data' → logprob: -11.754532814025879
    10. '\' → logprob: -11.754532814025879

Token 1962: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.18888819217681885
    2. '   ' → logprob: -2.3138880729675293
    3. 'N' → logprob: -2.8138880729675293
    4. 'q' → logprob: -4.688888072967529
    5. 'data' → logprob: -7.188888072967529
    6. 'Q' → logprob: -7.188888072967529
    7. '	n' → logprob: -7.688888072967529
    8. 'x' → logprob: -7.813888072967529
    9. 's' → logprob: -8.063888549804688
    10. 't' → logprob: -8.563888549804688

Token 1963: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22887061536312103
    2. '=' → logprob: -1.6038706302642822
    3. '=int' → logprob: -6.728870391845703
    4. ',' → logprob: -6.728870391845703
    5. '   ' → logprob: -7.103870391845703
    6. ' ' → logprob: -8.978870391845703
    7. ',n' → logprob: -10.603870391845703
    8. '    ' → logprob: -10.853870391845703
    9. '=n' → logprob: -11.228870391845703
    10. '=input' → logprob: -11.228870391845703

Token 1964: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.7610454708337784e-05
    2. ' int' → logprob: -10.500027656555176
    3. ' ' → logprob: -18.12502670288086
    4. '(int' → logprob: -18.75002670288086
    5. '[int' → logprob: -18.87502670288086
    6. '
' → logprob: -19.00002670288086
    7. '	int' → logprob: -19.25002670288086
    8. 'in' → logprob: -19.50002670288086
    9. '  ' → logprob: -19.50002670288086
    10. '   ' → logprob: -19.62502670288086

Token 1965: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.07889452576637268
    2. 'input' → logprob: -2.57889461517334
    3. '(args' → logprob: -12.57889461517334
    4. '(sys' → logprob: -14.57889461517334
    5. ' input' → logprob: -14.70389461517334
    6. '(' → logprob: -15.70389461517334
    7. 'sys' → logprob: -16.203893661499023
    8. 'args' → logprob: -16.703893661499023
    9. '(
' → logprob: -17.703893661499023
    10. '=input' → logprob: -17.703893661499023

Token 1966: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03898896276950836
    2. '().' → logprob: -3.2889890670776367
    3. '())
' → logprob: -7.038989067077637
    4. '()' → logprob: -9.663989067077637
    5. '())
' → logprob: -12.913989067077637
    6. '()
' → logprob: -13.413989067077637
    7. ' ())' → logprob: -13.663989067077637
    8. '();)' → logprob: -14.663989067077637
    9. '())

' → logprob: -15.163989067077637
    10. '(' → logprob: -15.288989067077637

Token 1967: '   ' (ID: 271)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.6825411319732666
    2. '   ' → logprob: -1.0575411319732666
    3. 'points' → logprob: -2.4325411319732666
    4. ' polygon' → logprob: -3.6825411319732666
    5. 'poly' → logprob: -4.0575408935546875
    6. 'p' → logprob: -4.8075408935546875
    7. 'pol' → logprob: -5.3075408935546875
    8. ' points' → logprob: -6.6825408935546875
    9. '_polygon' → logprob: -7.1825408935546875
    10. '	p' → logprob: -8.182540893554688

Token 1968: ' polygon' (ID: 65081)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' (adapté à ' polygon') → logprob: -0.007592671550810337
    2. 'points' → logprob: -5.132592678070068
    3. 'for' → logprob: -7.257592678070068
    4. 'poly' → logprob: -8.50759220123291
    5. 'm' → logprob: -8.63259220123291
    6. 'vertices' → logprob: -8.88259220123291
    7. 'pol' → logprob: -8.88259220123291
    8. 'p' → logprob: -9.50759220123291
    9. 'Q' → logprob: -9.75759220123291
    10. ' polygon' → logprob: -11.00759220123291

Token 1969: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20177564024925232
    2. ' =' → logprob: -1.7017756700515747
    3. '=[]' → logprob: -7.951775550842285
    4. '=[]
' → logprob: -11.951775550842285
    5. '=[' → logprob: -12.951775550842285
    6. '[' → logprob: -14.701775550842285
    7. '[]' → logprob: -15.076775550842285
    8. '＝' → logprob: -15.451775550842285
    9. ' =[' → logprob: -15.576775550842285
    10. '=[]
' → logprob: -15.826775550842285

Token 1970: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.044444236904382706
    2. '[]' → logprob: -3.7944443225860596
    3. '[list' → logprob: -4.2944440841674805
    4. '[]
' → logprob: -5.7944440841674805
    5. '[p' → logprob: -6.1694440841674805
    6. '[int' → logprob: -7.2944440841674805
    7. '[List' → logprob: -7.6694440841674805
    8. '[array' → logprob: -8.54444408416748
    9. '[class' → logprob: -8.66944408416748
    10. '[n' → logprob: -9.04444408416748

Token 1971: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03835679590702057
    2. 'for' → logprob: -3.2883567810058594
    3. ' for' → logprob: -8.28835678100586
    4. '	for' → logprob: -9.66335678100586
    5. '
' → logprob: -15.41335678100586
    6. '    
' → logprob: -17.41335678100586
    7. '<|end|>' → logprob: -17.78835678100586
    8. '   ' → logprob: -18.03835678100586
    9. '       ' → logprob: -18.28835678100586
    10. '[' → logprob: -18.66335678100586

Token 1972: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00047654795343987644
    2. '   ' → logprob: -7.750476360321045
    3. ' for' → logprob: -10.000476837158203
    4. '	for' → logprob: -14.500476837158203
    5. '
' → logprob: -19.875476837158203
    6. '    
' → logprob: -20.875476837158203
    7. '  ' → logprob: -22.625476837158203
    8. ' ' → logprob: -23.000476837158203
    9. 'while' → logprob: -23.500476837158203
    10. '_for' → logprob: -23.750476837158203

Token 1973: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0015274790348485112
    2. '_i' → logprob: -6.501527309417725
    3. 'i' → logprob: -10.626527786254883
    4. '_in' → logprob: -14.626527786254883
    5. '_
' → logprob: -15.126527786254883
    6. '_=' → logprob: -16.626527786254883
    7. '_range' → logprob: -17.126527786254883
    8. '
' → logprob: -17.376527786254883
    9. ' _' → logprob: -17.501527786254883
    10. '_n' → logprob: -18.501527786254883

Token 1974: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.20143009722232819
    2. ' in' → logprob: -1.701430082321167
    3. 'range' → logprob: -11.326430320739746
    4. ' ' → logprob: -12.826430320739746
    5. 'i' → logprob: -14.201430320739746
    6. '
' → logprob: -14.826430320739746
    7. '  ' → logprob: -14.951430320739746
    8. 'import' → logprob: -15.826430320739746
    9. '	in' → logprob: -16.07642936706543
    10. '```' → logprob: -16.45142936706543

Token 1975: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.869017852295656e-06
    2. ' range' → logprob: -12.000006675720215
    3. 'rang' → logprob: -15.250006675720215
    4. 'r' → logprob: -15.875006675720215
    5. 'ra' → logprob: -16.25000762939453
    6. 'ran' → logprob: -16.37500762939453
    7. '
' → logprob: -18.12500762939453
    8. '	range' → logprob: -18.25000762939453
    9. '[' → logprob: -18.50000762939453
    10. '(range' → logprob: -18.50000762939453

Token 1976: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5759539008140564
    2. 'n' → logprob: -0.8259539008140564
    3. '(' → logprob: -11.700953483581543
    4. ' n' → logprob: -13.200953483581543
    5. '	n' → logprob: -13.575953483581543
    6. '_n' → logprob: -13.700953483581543
    7. 'int' → logprob: -14.325953483581543
    8. '(int' → logprob: -14.700953483581543
    9. ')n' → logprob: -15.075953483581543
    10. '   ' → logprob: -15.200953483581543

Token 1977: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0027487652841955423
    2. '):' → logprob: -6.752748966217041
    3. ':
' → logprob: -6.877748966217041
    4. '   ' → logprob: -7.627748966217041
    5. ':' → logprob: -10.252748489379883
    6. '):
' → logprob: -11.252748489379883
    7. '():
' → logprob: -12.002748489379883
    8. ')' → logprob: -12.877748489379883
    9. '       ' → logprob: -14.127748489379883
    10. ',' → logprob: -14.377748489379883

Token 1978: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25722038745880127
    2. '   ' → logprob: -2.0072202682495117
    3. 'x' → logprob: -2.6322202682495117
    4. 'p' → logprob: -4.007220268249512
    5. 'points' → logprob: -6.757220268249512
    6. 'point' → logprob: -8.632220268249512
    7. ' p' → logprob: -8.757220268249512
    8. '	   ' → logprob: -9.007220268249512
    9. ' x' → logprob: -9.382220268249512
    10. '[' → logprob: -9.632220268249512

Token 1979: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.00015335931675508618
    2. 'p' → logprob: -9.625153541564941
    3. '   ' → logprob: -9.750153541564941
    4. 'a' → logprob: -10.750153541564941
    5. 'xy' → logprob: -12.750153541564941
    6. 'px' → logprob: -13.375153541564941
    7. ' x' → logprob: -13.625153541564941
    8. '	x' → logprob: -14.625153541564941
    9. 'xs' → logprob: -15.375153541564941
    10. 's' → logprob: -15.625153541564941

Token 1980: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011111720465123653
    2. ',y' → logprob: -4.511111736297607
    3. ' ,' → logprob: -9.88611125946045
    4. '_,' → logprob: -12.01111125946045
    5. 'y' → logprob: -13.01111125946045
    6. '=' → logprob: -13.63611125946045
    7. '_str' → logprob: -14.38611125946045
    8. ',x' → logprob: -15.01111125946045
    9. ',s' → logprob: -15.13611125946045
    10. 's' → logprob: -15.26111125946045

Token 1981: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0001234428636962548
    2. ' y' → logprob: -9.000123023986816
    3. '	y' → logprob: -19.000123977661133
    4. '_y' → logprob: -20.625123977661133
    5. ',y' → logprob: -20.750123977661133
    6. '=' → logprob: -21.125123977661133
    7. ' ' → logprob: -21.500123977661133
    8. 'yc' → logprob: -22.500123977661133
    9. 'yj' → logprob: -22.500123977661133
    10. 'Y' → logprob: -23.000123977661133

Token 1982: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014164687134325504
    2. ' =' → logprob: -4.264164924621582
    3. '=line' → logprob: -14.264164924621582
    4. '   ' → logprob: -15.514164924621582
    5. '=input' → logprob: -15.764164924621582
    6. '＝' → logprob: -16.264163970947266
    7. '=
' → logprob: -16.639163970947266
    8. '=int' → logprob: -16.889163970947266
    9. ' ' → logprob: -17.014163970947266
    10. '=float' → logprob: -17.639163970947266

Token 1983: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -6.392202976712724e-06
    2. ' map' → logprob: -12.000006675720215
    3. 'list' → logprob: -16.7500057220459
    4. '	map' → logprob: -17.1250057220459
    5. '(map' → logprob: -17.3750057220459
    6. '[' → logprob: -18.3750057220459
    7. '   ' → logprob: -20.5000057220459
    8. '
' → logprob: -21.0000057220459
    9. 'm' → logprob: -21.6250057220459
    10. '.map' → logprob: -22.1250057220459

Token 1984: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.26571133732795715
    2. '(float' → logprob: -1.5157113075256348
    3. 'int' → logprob: -4.765711307525635
    4. 'float' → logprob: -5.265711307525635
    5. '[int' → logprob: -12.890711784362793
    6. 'flo' → logprob: -14.265711784362793
    7. ',float' → logprob: -14.390711784362793
    8. '=float' → logprob: -14.515711784362793
    9. ' float' → logprob: -15.765711784362793
    10. '(' → logprob: -15.890711784362793

Token 1985: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.007306072395294905
    2. ',' → logprob: -5.257306098937988
    3. 'input' → logprob: -6.257306098937988
    4. '(input' → logprob: -8.882306098937988
    5. ',map' → logprob: -12.257306098937988
    6. '   ' → logprob: -13.007306098937988
    7. '[input' → logprob: -13.132306098937988
    8. ' input' → logprob: -13.132306098937988
    9. ',x' → logprob: -13.757306098937988
    10. ',int' → logprob: -14.257306098937988

Token 1986: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00012356207298580557
    2. ' input' → logprob: -9.000123977661133
    3. 'map' → logprob: -17.000123977661133
    4. 'sys' → logprob: -17.125123977661133
    5. 'Input' → logprob: -18.000123977661133
    6. '_input' → logprob: -18.375123977661133
    7. 'str' → logprob: -19.125123977661133
    8. '(input' → logprob: -19.250123977661133
    9. ',input' → logprob: -19.250123977661133
    10. 'x' → logprob: -19.625123977661133

Token 1987: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.896309739408025e-07
    2. '()' → logprob: -14.250000953674316
    3. '.split' → logprob: -17.125
    4. ' ().' → logprob: -17.5
    5. '()
' → logprob: -18.125
    6. '(' → logprob: -18.375
    7. '.strip' → logprob: -18.75
    8. 'split' → logprob: -19.0
    9. ')' → logprob: -19.75
    10. '()[' → logprob: -20.375

Token 1988: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0019402962643653154
    2. 'strip' → logprob: -6.2519402503967285
    3. 'rstrip' → logprob: -11.376940727233887
    4. ' split' → logprob: -16.12693977355957
    5. 'read' → logprob: -16.87693977355957
    6. 'spl' → logprob: -17.00193977355957
    7. 'sys' → logprob: -17.37693977355957
    8. '(split' → logprob: -18.00193977355957
    9. 'str' → logprob: -18.25193977355957
    10. '.split' → logprob: -19.37693977355957

Token 1989: '())
' (ID: 4574)
  Prédit: '())
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())
' → logprob: -0.1423453688621521
    2. '())' → logprob: -2.142345428466797
    3. ')
' → logprob: -4.767345428466797
    4. ')' → logprob: -5.017345428466797
    5. '())
' → logprob: -9.142345428466797
    6. '()))
' → logprob: -10.767345428466797
    7. '()' → logprob: -11.017345428466797
    8. '))
' → logprob: -11.392345428466797
    9. '()
' → logprob: -12.517345428466797
    10. '(' → logprob: -12.767345428466797

Token 1990: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.100059156073257e-05
    2. '   ' → logprob: -10.125070571899414
    3. '	' → logprob: -11.250070571899414
    4. '<|end|>' → logprob: -11.875070571899414
    5. '	   ' → logprob: -12.625070571899414
    6. ',' → logprob: -13.375070571899414
    7. 'polygon' → logprob: -13.625070571899414
    8. '	p' → logprob: -14.125070571899414
    9. '```' → logprob: -14.500070571899414
    10. ',p' → logprob: -14.750070571899414

Token 1991: ' polygon' (ID: 65081)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' (adapté à ' polygon') → logprob: -0.000375380739569664
    2. ' polygon' → logprob: -8.500375747680664
    3. '   ' → logprob: -9.375375747680664
    4. '       ' → logprob: -9.500375747680664
    5. 'point' → logprob: -11.500375747680664
    6. 'poly' → logprob: -14.125375747680664
    7. '	p' → logprob: -14.375375747680664
    8. 'pol' → logprob: -14.625375747680664
    9. 'p' → logprob: -15.375375747680664
    10. 'polar' → logprob: -16.875375747680664

Token 1992: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.349075556499884e-05
    2. '.' → logprob: -9.7500638961792
    3. '.ap' → logprob: -12.3750638961792
    4. '.app' → logprob: -14.1250638961792
    5. ' .' → logprob: -15.8750638961792
    6. 'append' → logprob: -18.125062942504883
    7. '.
' → logprob: -18.875062942504883
    8. ').' → logprob: -19.500062942504883
    9. '.extend' → logprob: -19.500062942504883
    10. '.p' → logprob: -19.625062942504883

Token 1993: '(Point' (ID: 72072)
  Prédit: '(Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Point' → logprob: -0.003178306156769395
    2. 'Point' → logprob: -5.753178119659424
    3. ' Point' → logprob: -14.753178596496582
    4. '	Point' → logprob: -15.753178596496582
    5. '.Point' → logprob: -20.003177642822266
    6. '(' → logprob: -20.253177642822266
    7. '<Point' → logprob: -20.503177642822266
    8. '   ' → logprob: -21.128177642822266
    9. '(P' → logprob: -21.628177642822266
    10. '_Point' → logprob: -21.628177642822266

Token 1994: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00014609156642109156
    2. 'x' → logprob: -8.87514591217041
    3. '(' → logprob: -12.50014591217041
    4. '((' → logprob: -13.62514591217041
    5. '(
' → logprob: -13.87514591217041
    6. ' (' → logprob: -15.87514591217041
    7. ')' → logprob: -16.125146865844727
    8. ')x' → logprob: -17.125146865844727
    9. '{x' → logprob: -17.250146865844727
    10. ')(' → logprob: -17.750146865844727

Token 1995: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.8590300139039755e-05
    2. ',y' → logprob: -10.125048637390137
    3. ' ,' → logprob: -12.250048637390137
    4. ',
' → logprob: -12.625048637390137
    5. ',x' → logprob: -15.250048637390137
    6. '<|end|>' → logprob: -16.12504768371582
    7. ',n' → logprob: -17.37504768371582
    8. '‌,' → logprob: -17.75004768371582
    9. ',user' → logprob: -18.12504768371582
    10. ',\
' → logprob: -18.25004768371582

Token 1996: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -7.493430894101039e-05
    2. ' y' → logprob: -9.500075340270996
    3. '	y' → logprob: -17.37507438659668
    4. ')y' → logprob: -18.62507438659668
    5. '   ' → logprob: -19.62507438659668
    6. '  ' → logprob: -21.25007438659668
    7. ' ' → logprob: -21.87507438659668
    8. '    ' → logprob: -21.87507438659668
    9. ''y' → logprob: -22.25007438659668
    10. '
' → logprob: -22.37507438659668

Token 1997: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.000652389950118959
    2. '))
' → logprob: -7.375652313232422
    3. ')' → logprob: -11.250652313232422
    4. '   ' → logprob: -11.625652313232422
    5. '       ' → logprob: -13.125652313232422
    6. ')))' → logprob: -14.000652313232422
    7. ' ))' → logprob: -14.125652313232422
    8. '));' → logprob: -16.125652313232422
    9. ' ' → logprob: -16.750652313232422
    10. '()))' → logprob: -17.000652313232422

Token 1998: '   ' (ID: 271)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5921636819839478
    2. 'q' → logprob: -1.4671636819839478
    3. '   ' → logprob: -1.5921636819839478
    4. ' m' → logprob: -5.467163562774658
    5. 'for' → logprob: -6.092163562774658
    6. ' for' → logprob: -6.217163562774658
    7. ' q' → logprob: -6.717163562774658
    8. 't' → logprob: -6.967163562774658
    9. 'while' → logprob: -7.342163562774658
    10. 'Q' → logprob: -7.592163562774658

Token 1999: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.23532646894454956
    2. 'm' → logprob: -1.6103265285491943
    3. 'while' → logprob: -5.360326290130615
    4. 'Q' → logprob: -5.485326290130615
    5. '   ' → logprob: -7.610326290130615
    6. 'for' → logprob: -9.985326766967773
    7. 'qx' → logprob: -9.985326766967773
    8. 'query' → logprob: -10.360326766967773
    9. '_q' → logprob: -10.485326766967773
    10. 'x' → logprob: -10.610326766967773

Token 2000: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519543766975403
    2. '=' → logprob: -1.5019543170928955
    3. '=int' → logprob: -10.626954078674316
    4. '   ' → logprob: -14.251954078674316
    5. ' ' → logprob: -15.376954078674316
    6. '  ' → logprob: -15.876954078674316
    7. 'n' → logprob: -17.376955032348633
    8. 'q' → logprob: -17.876955032348633
    9. '=query' → logprob: -18.251955032348633
    10. '=q' → logprob: -18.376955032348633

Token 2001: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -9.014684110297821e-06
    2. ' int' → logprob: -11.625008583068848
    3. '
' → logprob: -18.125009536743164
    4. '[int' → logprob: -18.500009536743164
    5. '   ' → logprob: -19.000009536743164
    6. '(int' → logprob: -19.875009536743164
    7. '=int' → logprob: -20.125009536743164
    8. '	int' → logprob: -20.625009536743164
    9. 'in' → logprob: -21.000009536743164
    10. ' ' → logprob: -21.250009536743164

Token 2002: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00015872348740231246
    2. 'input' → logprob: -8.750158309936523
    3. '(' → logprob: -16.250158309936523
    4. '=input' → logprob: -16.625158309936523
    5. ' input' → logprob: -17.875158309936523
    6. '()' → logprob: -18.125158309936523
    7. ',input' → logprob: -18.125158309936523
    8. '[input' → logprob: -18.750158309936523
    9. '(stdin' → logprob: -19.000158309936523
    10. '(
' → logprob: -19.125158309936523

Token 2003: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.434325635433197
    2. '())
' → logprob: -1.4343256950378418
    3. '()' → logprob: -2.184325695037842
    4. '()
' → logprob: -7.184325695037842
    5. ')' → logprob: -7.309325695037842
    6. ')
' → logprob: -10.559325218200684
    7. '())
' → logprob: -11.809325218200684
    8. '(' → logprob: -12.559325218200684
    9. ' ())' → logprob: -13.434325218200684
    10. '())

' → logprob: -13.684325218200684

Token 2004: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0041230423375964165
    2. 'for' → logprob: -5.504123210906982
    3. '	for' → logprob: -10.379122734069824
    4. ' for' → logprob: -11.254122734069824
    5. '<|end|>' → logprob: -15.254122734069824
    6. 'while' → logprob: -15.379122734069824
    7. '       ' → logprob: -17.12912368774414
    8. ' ' → logprob: -17.87912368774414
    9. '```' → logprob: -17.87912368774414
    10. '	while' → logprob: -18.00412368774414

Token 2005: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0003380846756044775
    2. '   ' → logprob: -8.000338554382324
    3. ' for' → logprob: -13.000338554382324
    4. '	for' → logprob: -14.750338554382324
    5. 'while' → logprob: -19.625337600708008
    6. 'points' → logprob: -20.375337600708008
    7. '  ' → logprob: -21.250337600708008
    8. '_for' → logprob: -21.625337600708008
    9. '
' → logprob: -22.250337600708008
    10. '       ' → logprob: -22.500337600708008

Token 2006: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.001253207796253264
    2. '_i' → logprob: -6.751253128051758
    3. ' _' → logprob: -10.001253128051758
    4. '_in' → logprob: -11.001253128051758
    5. '_query' → logprob: -12.251253128051758
    6. '_q' → logprob: -12.626253128051758
    7. '_
' → logprob: -12.876253128051758
    8. '_range' → logprob: -12.876253128051758
    9. '_line' → logprob: -13.376253128051758
    10. '_j' → logprob: -13.501253128051758

Token 2007: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10280311107635498
    2. 'in' → logprob: -2.3528032302856445
    3. '_' → logprob: -6.3528032302856445
    4. 'range' → logprob: -7.3528032302856445
    5. ' range' → logprob: -9.852803230285645
    6. ' _' → logprob: -9.977803230285645
    7. ' ' → logprob: -10.227803230285645
    8. 'q' → logprob: -10.977803230285645
    9. 'i' → logprob: -11.102803230285645
    10. 's' → logprob: -11.977803230285645

Token 2008: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.438573680294212e-06
    2. ' range' → logprob: -12.250005722045898
    3. '(range' → logprob: -14.875005722045898
    4. 'in' → logprob: -15.875005722045898
    5. '
' → logprob: -16.6250057220459
    6. 'r' → logprob: -17.2500057220459
    7. 'q' → logprob: -18.0000057220459
    8. '(' → logprob: -18.0000057220459
    9. 'ran' → logprob: -18.2500057220459
    10. 'ra' → logprob: -18.5000057220459

Token 2009: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.0002583594177849591
    2. '(' → logprob: -8.375258445739746
    3. ' (' → logprob: -10.875258445739746
    4. '(
' → logprob: -13.000258445739746
    5. '(range' → logprob: -13.250258445739746
    6. 'q' → logprob: -13.250258445739746
    7. '(n' → logprob: -13.500258445739746
    8. '   ' → logprob: -14.375258445739746
    9. '(query' → logprob: -15.000258445739746
    10. ',' → logprob: -15.500258445739746

Token 2010: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03485916554927826
    2. '):' → logprob: -3.5348591804504395
    3. '   ' → logprob: -5.6598591804504395
    4. ',' → logprob: -7.1598591804504395
    5. '():
' → logprob: -7.6598591804504395
    6. '):
' → logprob: -8.659858703613281
    7. '       ' → logprob: -9.784858703613281
    8. '()):
' → logprob: -9.909858703613281
    9. ':
' → logprob: -10.409858703613281
    10. ':' → logprob: -10.534858703613281

Token 2011: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6281857490539551
    2. '       ' → logprob: -0.8781857490539551
    3. 'x' → logprob: -3.003185749053955
    4. '	x' → logprob: -7.878185749053955
    5. ' x' → logprob: -7.878185749053955
    6. '	   ' → logprob: -9.128185272216797
    7. '    ' → logprob: -9.253185272216797
    8. '	' → logprob: -9.378185272216797
    9. ' ' → logprob: -10.253185272216797
    10. '```' → logprob: -10.378185272216797

Token 2012: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0002700377081055194
    2. '       ' → logprob: -8.500269889831543
    3. '   ' → logprob: -10.250269889831543
    4. ' x' → logprob: -10.625269889831543
    5. 'px' → logprob: -13.375269889831543
    6. '	x' → logprob: -13.375269889831543
    7. 'qx' → logprob: -13.375269889831543
    8. 'xx' → logprob: -14.250269889831543
    9. '_x' → logprob: -14.375269889831543
    10. 'xp' → logprob: -14.625269889831543

Token 2013: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7968066206085496e-05
    2. ' ,' → logprob: -10.750027656555176
    3. ',y' → logprob: -12.750027656555176
    4. '<|end|>' → logprob: -13.625027656555176
    5. ',x' → logprob: -14.500027656555176
    6. ',
' → logprob: -14.875027656555176
    7. ',q' → logprob: -15.000027656555176
    8. '_,' → logprob: -15.500027656555176
    9. '=' → logprob: -15.500027656555176
    10. '<|end|>' → logprob: -16.000028610229492

Token 2014: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.006715370807796717
    2. ' y' → logprob: -5.006715297698975
    3. ' ' → logprob: -17.381715774536133
    4. 'x' → logprob: -20.131715774536133
    5. '	y' → logprob: -20.881715774536133
    6. '<|end|>' → logprob: -21.756715774536133
    7. ',y' → logprob: -22.006715774536133
    8. '   ' → logprob: -22.381715774536133
    9. 's' → logprob: -22.381715774536133
    10. '_y' → logprob: -22.506715774536133

Token 2015: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020667314529419
    2. ' =' → logprob: -2.3502066135406494
    3. '＝' → logprob: -17.35020637512207
    4. ' ' → logprob: -18.22520637512207
    5. ',' → logprob: -18.35020637512207
    6. '=
' → logprob: -18.35020637512207
    7. '   ' → logprob: -18.72520637512207
    8. ')=' → logprob: -19.47520637512207
    9. '=int' → logprob: -20.35020637512207
    10. '=line' → logprob: -20.35020637512207

Token 2016: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.018150296062231064
    2. ' map' → logprob: -4.018150329589844
    3. '	map' → logprob: -15.018150329589844
    4. '(map' → logprob: -17.643150329589844
    5. 'm' → logprob: -18.768150329589844
    6. '       ' → logprob: -19.018150329589844
    7. '    ' → logprob: -19.518150329589844
    8. '.map' → logprob: -20.018150329589844
    9. 'ma' → logprob: -20.143150329589844
    10. '_map' → logprob: -20.143150329589844

Token 2017: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0001589618914294988
    2. 'int' → logprob: -8.75015926361084
    3. '[int' → logprob: -15.12515926361084
    4. '(' → logprob: -16.375158309936523
    5. '=int' → logprob: -16.875158309936523
    6. '(
' → logprob: -17.125158309936523
    7. '<int' → logprob: -17.750158309936523
    8. ' int' → logprob: -18.625158309936523
    9. '(Point' → logprob: -18.750158309936523
    10. ',int' → logprob: -18.875158309936523

Token 2018: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.23413614928722382
    2. ',int' → logprob: -1.6091361045837402
    3. 'int' → logprob: -5.10913610458374
    4. ',' → logprob: -6.85913610458374
    5. ',input' → logprob: -7.23413610458374
    6. '[int' → logprob: -7.73413610458374
    7. '(input' → logprob: -8.984136581420898
    8. '(' → logprob: -9.109136581420898
    9. '<int' → logprob: -9.609136581420898
    10. '=int' → logprob: -9.609136581420898

Token 2019: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00046498890151269734
    2. 'int' → logprob: -8.250465393066406
    3. ' input' → logprob: -8.500465393066406
    4. '(input' → logprob: -15.000465393066406
    5. '[input' → logprob: -17.750465393066406
    6. 'point' → logprob: -18.125465393066406
    7. '<input' → logprob: -18.375465393066406
    8. '=input' → logprob: -18.625465393066406
    9. 'x' → logprob: -19.250465393066406
    10. 'stdin' → logprob: -19.250465393066406

Token 2020: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00023596010578330606
    2. '()' → logprob: -8.500235557556152
    3. '()
' → logprob: -11.250235557556152
    4. '().
' → logprob: -11.875235557556152
    5. '())' → logprob: -12.625235557556152
    6. '(),' → logprob: -12.750235557556152
    7. '()[' → logprob: -13.250235557556152
    8. '().__' → logprob: -13.875235557556152
    9. '());' → logprob: -14.500235557556152
    10. '())
' → logprob: -15.125235557556152

Token 2021: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.0280383548888494e-06
    2. 'strip' → logprob: -14.500000953674316
    3. ' split' → logprob: -14.875000953674316
    4. ')' → logprob: -16.125001907348633
    5. 'spl' → logprob: -17.500001907348633
    6. '(split' → logprob: -17.625001907348633
    7. 'rstrip' → logprob: -18.000001907348633
    8. '.split' → logprob: -18.250001907348633
    9. '_split' → logprob: -18.875001907348633
    10. 'read' → logprob: -19.750001907348633

Token 2022: '())
' (ID: 4574)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2746386229991913
    2. '())
' → logprob: -1.6496386528015137
    3. ')' → logprob: -3.1496386528015137
    4. '()' → logprob: -6.024638652801514
    5. '())' → logprob: -6.149638652801514
    6. '       ' → logprob: -7.774638652801514
    7. '()
' → logprob: -9.149638175964355
    8. ')
' → logprob: -10.274638175964355
    9. '   ' → logprob: -10.774638175964355
    10. '())
' → logprob: -11.524638175964355

Token 2023: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0068302215076982975
    2. '	' → logprob: -5.256830215454102
    3. 'p' → logprob: -6.631830215454102
    4. '   ' → logprob: -8.881830215454102
    5. ' p' → logprob: -10.256830215454102
    6. 'point' → logprob: -10.256830215454102
    7. '	   ' → logprob: -10.881830215454102
    8. ' point' → logprob: -10.881830215454102
    9. '	p' → logprob: -11.131830215454102
    10. '	point' → logprob: -12.381830215454102

Token 2024: ' result' (ID: 1534)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.050908032804727554
    2. 'print' → logprob: -3.800908088684082
    3. 'point' → logprob: -4.925908088684082
    4. 'pt' → logprob: -5.050908088684082
    5. 'res' → logprob: -5.550908088684082
    6. ' p' → logprob: -5.675908088684082
    7. '       ' → logprob: -5.800908088684082
    8. 'result' (adapté à ' result') → logprob: -6.050908088684082
    9. 'ans' → logprob: -8.050908088684082
    10. 'pos' → logprob: -8.800908088684082

Token 2025: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03367612883448601
    2. '=' → logprob: -3.4086761474609375
    3. '_' → logprob: -11.658676147460938
    4. '	' → logprob: -12.033676147460938
    5. '<|end|>' → logprob: -12.158676147460938
    6. ' ' → logprob: -12.783676147460938
    7. ')' → logprob: -13.533676147460938
    8. '   ' → logprob: -14.158676147460938
    9. '<|end|>' → logprob: -14.158676147460938
    10. '    ' → logprob: -14.408676147460938

Token 2026: ' contains' (ID: 8895)
  Prédit: 'contains'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'contains' → logprob: -0.0005564896273426712
    2. ' contains' → logprob: -7.500556468963623
    3. 'Point' → logprob: -12.750556945800781
    4. 'contained' → logprob: -14.750556945800781
    5. 'contain' → logprob: -15.375556945800781
    6. ' Point' → logprob: -17.37555694580078
    7. 'cont' → logprob: -18.37555694580078
    8. 'Contains' → logprob: -18.62555694580078
    9. 'includes' → logprob: -18.87555694580078
    10. 'points' → logprob: -19.25055694580078

Token 2027: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0001450187264708802
    2. '(Point' → logprob: -9.000144958496094
    3. 'polygon' → logprob: -12.000144958496094
    4. 'Point' → logprob: -12.375144958496094
    5. '(' → logprob: -12.750144958496094
    6. '(point' → logprob: -13.000144958496094
    7. '(
' → logprob: -13.250144958496094
    8. 'p' → logprob: -13.875144958496094
    9. '(poly' → logprob: -14.625144958496094
    10. ' Point' → logprob: -14.875144958496094

Token 2028: 'olygon' (ID: 80431)
  Prédit: 'olygon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olygon' → logprob: -0.0017150469357147813
    2. 'polygon' → logprob: -7.001715183258057
    3. 'oint' → logprob: -7.501715183258057
    4. '(p' → logprob: -9.126714706420898
    5. 'ol' → logprob: -9.251714706420898
    6. 'oly' → logprob: -10.876714706420898
    7. 'oints' → logprob: -12.251714706420898
    8. '(Point' → logprob: -12.626714706420898
    9. 'ython' → logprob: -12.751714706420898
    10. '[' → logprob: -12.876714706420898

Token 2029: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.03521392197581e-05
    2. 'Point' → logprob: -11.375030517578125
    3. '(Point' → logprob: -11.500030517578125
    4. ' ,' → logprob: -11.875030517578125
    5. '       ' → logprob: -14.500030517578125
    6. ',
' → logprob: -14.750030517578125
    7. '   ' → logprob: -15.000030517578125
    8. ' Point' → logprob: -15.875030517578125
    9. '(),' → logprob: -16.750030517578125
    10. '           ' → logprob: -17.250030517578125

Token 2030: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -1.0206720617134124e-05
    2. ' Point' → logprob: -11.50001049041748
    3. '	Point' → logprob: -20.000009536743164
    4. '   ' → logprob: -21.250009536743164
    5. '(Point' → logprob: -22.375009536743164
    6. '_point' → logprob: -23.625009536743164
    7. '_Point' → logprob: -23.750009536743164
    8. '       ' → logprob: -25.500009536743164
    9. ' ' → logprob: -26.000009536743164
    10. '<Point' → logprob: -26.000009536743164

Token 2031: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0002632430987432599
    2. 'x' → logprob: -8.500263214111328
    3. '(' → logprob: -9.750263214111328
    4. ')' → logprob: -14.625263214111328
    5. '((' → logprob: -15.000263214111328
    6. '(
' → logprob: -15.125263214111328
    7. ' (' → logprob: -15.500263214111328
    8. '       ' → logprob: -16.625263214111328
    9. '   ' → logprob: -16.750263214111328
    10. ')x' → logprob: -17.500263214111328

Token 2032: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014764121442567557
    2. ',y' → logprob: -9.500147819519043
    3. ' ,' → logprob: -9.750147819519043
    4. ',
' → logprob: -11.375147819519043
    5. 'y' → logprob: -14.625147819519043
    6. '(' → logprob: -14.750147819519043
    7. ')' → logprob: -15.250147819519043
    8. '       ' → logprob: -15.375147819519043
    9. '),' → logprob: -15.375147819519043
    10. '<|end|>' → logprob: -15.625147819519043

Token 2033: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.001170225441455841
    2. ' y' → logprob: -6.7511701583862305
    3. '	y' → logprob: -18.376171112060547
    4. ')y' → logprob: -19.001171112060547
    5. '   ' → logprob: -19.251171112060547
    6. '    ' → logprob: -21.126171112060547
    7. ' ' → logprob: -21.751171112060547
    8. '  ' → logprob: -21.876171112060547
    9. '
' → logprob: -21.876171112060547
    10. '(y' → logprob: -22.251171112060547

Token 2034: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.06995310634374619
    2. ')
' → logprob: -3.319953203201294
    3. '))' → logprob: -4.069952964782715
    4. '       ' → logprob: -4.319952964782715
    5. ')' → logprob: -6.944952964782715
    6. '   ' → logprob: -9.944952964782715
    7. '))
' → logprob: -12.069952964782715
    8. '           ' → logprob: -12.194952964782715
    9. ' ))
' → logprob: -13.819952964782715
    10. ' ' → logprob: -13.819952964782715

Token 2035: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005274149589240551
    2. '	' → logprob: -8.250527381896973
    3. '   ' → logprob: -8.750527381896973
    4. 'print' → logprob: -9.875527381896973
    5. 'if' → logprob: -10.500527381896973
    6. ' if' → logprob: -11.250527381896973
    7. '	   ' → logprob: -11.500527381896973
    8. '	if' → logprob: -13.750527381896973
    9. ' print' → logprob: -13.875527381896973
    10. '           ' → logprob: -14.000527381896973

Token 2036: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.6118417978286743
    2. 'if' → logprob: -0.8618417978286743
    3. '       ' → logprob: -3.3618416786193848
    4. ' if' → logprob: -7.486841678619385
    5. ' print' → logprob: -10.361842155456543
    6. '   ' → logprob: -13.861842155456543
    7. '	if' → logprob: -14.986842155456543
    8. '	' → logprob: -15.111842155456543
    9. '	print' → logprob: -15.236842155456543
    10. 'import' → logprob: -17.611841201782227

Token 2037: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.2294769436120987
    2. '("' → logprob: -1.7294769287109375
    3. '(["' → logprob: -3.7294769287109375
    4. '('' → logprob: -5.9794769287109375
    5. '(['' → logprob: -7.4794769287109375
    6. '({' → logprob: -8.104476928710938
    7. 'result' → logprob: -9.354476928710938
    8. '(("' → logprob: -9.354476928710938
    9. '(' → logprob: -9.604476928710938
    10. '["' → logprob: -11.104476928710938

Token 2038: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ' )' → logprob: -14.000001907348633
    3. ')
' → logprob: -14.625001907348633
    4. '))' → logprob: -15.375001907348633
    5. ')`' → logprob: -16.125001907348633
    6. '   ' → logprob: -16.250001907348633
    7. '")' → logprob: -16.625001907348633
    8. '())' → logprob: -16.750001907348633
    9. '`)' → logprob: -16.750001907348633
    10. ')#' → logprob: -17.500001907348633

Token 2039: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0004315036640036851
    2. '
' → logprob: -8.375431060791016
    3. '```' → logprob: -9.500431060791016
    4. ' if' → logprob: -9.875431060791016
    5. '<|end|>' → logprob: -10.375431060791016
    6. '#' → logprob: -10.375431060791016
    7. 'i' → logprob: -12.750431060791016
    8. '[' → logprob: -13.875431060791016
    9. ' ' → logprob: -13.875431060791016
    10. '%' → logprob: -14.375431060791016

Token 2040: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.25239259004592896
    2. ' __' → logprob: -1.5023925304412842
    3. '_name' → logprob: -7.752392768859863
    4. 'name' → logprob: -11.252392768859863
    5. '_' → logprob: -11.252392768859863
    6. '___' → logprob: -12.002392768859863
    7. '(__' → logprob: -15.002392768859863
    8. '____' → logprob: -15.252392768859863
    9. 'Name' → logprob: -15.502392768859863
    10. '/__' → logprob: -15.627392768859863

Token 2041: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.09258324652910233
    2. 'name' → logprob: -3.342583179473877
    3. '.__' → logprob: -4.217583179473877
    4. 'if' → logprob: -4.467583179473877
    5. '.' → logprob: -4.967583179473877
    6. '_name' → logprob: -5.467583179473877
    7. ' __' → logprob: -5.717583179473877
    8. ' ==' → logprob: -5.967583179473877
    9. '.name' → logprob: -6.092583179473877
    10. '[' → logprob: -6.467583179473877

Token 2042: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.4378848391061183e-05
    2. '__.__' → logprob: -11.875014305114746
    3. '==' → logprob: -12.625014305114746
    4. '_' → logprob: -12.625014305114746
    5. '__.' → logprob: -15.250014305114746
    6. '___' → logprob: -15.250014305114746
    7. '__
' → logprob: -15.750014305114746
    8. '____' → logprob: -16.750015258789062
    9. '__('' → logprob: -17.125015258789062
    10. '__[' → logprob: -17.375015258789062

Token 2043: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.34420841932296753
    2. '==' → logprob: -1.4692084789276123
    3. ' ==' → logprob: -2.9692084789276123
    4. '=="' → logprob: -4.719208240509033
    5. '_' → logprob: -7.844208240509033
    6. '=='' → logprob: -8.469208717346191
    7. '=' → logprob: -9.469208717346191
    8. '__.__' → logprob: -9.969208717346191
    9. '.__' → logprob: -10.094208717346191
    10. '==
' → logprob: -10.969208717346191

Token 2044: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.16023863852024078
    2. ''' → logprob: -1.9102386236190796
    3. '__' → logprob: -11.285238265991211
    4. ' "__' → logprob: -13.535238265991211
    5. ' '__' → logprob: -15.785238265991211
    6. ''"' → logprob: -16.41023826599121
    7. '"name' → logprob: -16.66023826599121
    8. '"'' → logprob: -16.91023826599121
    9. '("__' → logprob: -17.41023826599121
    10. '   ' → logprob: -17.53523826599121

Token 2045: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00014334988372866064
    2. '__' → logprob: -9.375143051147461
    3. 'name' → logprob: -9.750143051147461
    4. 'm' → logprob: -16.62514305114746
    5. 'ma' → logprob: -16.87514305114746
    6. 'built' → logprob: -17.12514305114746
    7. '_main' → logprob: -17.37514305114746
    8. ''' → logprob: -17.50014305114746
    9. ' main' → logprob: -17.87514305114746
    10. '(main' → logprob: -18.37514305114746

Token 2046: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.014431674964725971
    2. '__' → logprob: -4.264431476593018
    3. '_' → logprob: -8.264431953430176
    4. '__":
' → logprob: -11.639431953430176
    5. '__:' → logprob: -13.639431953430176
    6. '':' → logprob: -14.889431953430176
    7. '_main' → logprob: -16.01443099975586
    8. '___' → logprob: -16.13943099975586
    9. '_'' → logprob: -17.38943099975586
    10. '':
' → logprob: -17.51443099975586

Token 2047: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00014025058771949261
    2. '__' → logprob: -9.750140190124512
    3. '	main' → logprob: -10.000140190124512
    4. '   ' → logprob: -10.625140190124512
    5. ' main' → logprob: -11.375140190124512
    6. '_main' → logprob: -14.500140190124512
    7. '(main' → logprob: -15.750140190124512
    8. 'm' → logprob: -17.750141143798828
    9. 'import' → logprob: -18.000141143798828
    10. '____' → logprob: -18.250141143798828

Token 2048: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -6.704273118884885e-07
    2. 'import' → logprob: -14.500000953674316
    3. ' main' → logprob: -17.0
    4. 'sys' → logprob: -17.75
    5. '	main' → logprob: -19.375
    6. '   ' → logprob: -20.375
    7. '_main' → logprob: -23.375
    8. '.main' → logprob: -23.5
    9. '(main' → logprob: -24.0
    10. 'from' → logprob: -24.75

Token 2049: '(sys' (ID: 41042)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004403651691973209
    2. '(' → logprob: -5.879403591156006
    3. '(sys' → logprob: -6.629403591156006
    4. ' ()' → logprob: -9.754404067993164
    5. '();' → logprob: -9.879404067993164
    6. '(None' → logprob: -9.879404067993164
    7. '()
' → logprob: -10.504404067993164
    8. '()<' → logprob: -11.254404067993164
    9. '().' → logprob: -11.379404067993164
    10. '("")' → logprob: -11.629404067993164

Token 2050: '.argv' (ID: 33642)
  Prédit: '.argv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.argv' → logprob: -0.0002655079588294029
    2. '.' → logprob: -8.500265121459961
    3. '.stdin' → logprob: -10.750265121459961
    4. ' .' → logprob: -11.375265121459961
    5. ')' → logprob: -11.750265121459961
    6. '.stdout' → logprob: -12.125265121459961
    7. '(argv' → logprob: -12.500265121459961
    8. 'argv' → logprob: -12.500265121459961
    9. '.args' → logprob: -13.125265121459961
    10. '.exit' → logprob: -13.375265121459961

Token 2051: '[' (ID: 58)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4791645407676697
    2. '[' → logprob: -0.9791645407676697
    3. '())' → logprob: -5.8541646003723145
    4. '[])' → logprob: -6.4791646003723145
    5. '()' → logprob: -7.3541646003723145
    6. '[]' → logprob: -11.229164123535156
    7. ' )' → logprob: -11.604164123535156
    8. '()[' → logprob: -12.729164123535156
    9. '(' → logprob: -12.854164123535156
    10. '[
' → logprob: -13.979164123535156

Token 2052: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1271454393863678
    2. '1' → logprob: -2.127145528793335
    3. '[' → logprob: -8.502145767211914
    4. ' )' → logprob: -12.502145767211914
    5. '[])' → logprob: -12.752145767211914
    6. '0' → logprob: -12.877145767211914
    7. ')>' → logprob: -13.627145767211914
    8. '2' → logprob: -14.502145767211914
    9. ')]' → logprob: -14.627145767211914
    10. '))' → logprob: -14.627145767211914

Token 2053: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013244071742519736
    2. '[' → logprob: -7.75132417678833
    3. ':]' → logprob: -8.126324653625488
    4. ':])
' → logprob: -8.501324653625488
    5. '])' → logprob: -8.751324653625488
    6. ':)' → logprob: -8.751324653625488
    7. ')' → logprob: -9.501324653625488
    8. '1' → logprob: -13.751324653625488
    9. '[])' → logprob: -14.126324653625488
    10. 'if' → logprob: -15.251324653625488

Token 2054: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002084277366520837
    2. '())' → logprob: -8.500208854675293
    3. '[])' → logprob: -13.500208854675293
    4. '))' → logprob: -13.500208854675293
    5. '])' → logprob: -14.375208854675293
    6. ' )' → logprob: -14.500208854675293
    7. '()' → logprob: -14.750208854675293
    8. ')
' → logprob: -14.875208854675293
    9. '[' → logprob: -16.125207901000977
    10. '）' → logprob: -16.250207901000977


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 2052
Tokens correctement prédits (1ère position, stricte): 808
Tokens correctement prédits (1ère position, avec adaptation): 905
Tokens correctement prédits (top 10): 1747
Précision stricte (1ère position): 39.38%
Précision adaptée (1ère position): 44.10%
Précision (top 10): 85.14%
================================================================================
