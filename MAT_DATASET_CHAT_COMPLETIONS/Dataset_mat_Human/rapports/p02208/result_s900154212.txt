================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from itertools import *
from bisect import *
from math import *
from collections import *
from heapq import *
from random import *
import sys

sys.setrecursionlimit(10 ** 6)
int1 = lambda x: int(x) - 1
p2D = lambda x: print(*x, sep="\n")
def II(): return int(sys.stdin.readline())
def MI(): return map(int, sys.stdin.readline().split())
def MI1(): return map(int1, sys.stdin.readline().split())
def MF(): return map(float, sys.stdin.readline().split())
def LI(): return list(map(int, sys.stdin.readline().split()))
def LI1(): return list(map(int1, sys.stdin.readline().split()))
def LF(): return list(map(float, sys.stdin.readline().split()))
def LLI(rows_number): return [LI() for _ in range(rows_number)]
dij = [(1, 0), (0, 1), (-1, 0), (0, -1)]

def main():
    x,y,z,n,m,s,t=MI()
    s,t=s-1,t-1+n
    itoab=[]
    to1=defaultdict(list)
    to2=defaultdict(list)
    for i in range(n):
        a,b=MI1()
        itoab.append([a,b])
        to1[a].append(i)
        to2[b].append(i)
    for i in range(n,n+m):
        b,a=MI1()
        a+=x
        itoab.append([a,b])
        to1[a].append(i)
        to2[b].append(i)
    dist=[-1]*(n+m)
    hp=[]
    heappush(hp,[0,s])
    while hp:
        d,i=heappop(hp)
        if dist[i]!=-1:continue
        dist[i]=d
        a,b=itoab[i]
        for j in to1[a]:
            if j==t:
                print(d+1)
                exit()
            if j==i:continue
            if dist[j]!=-1:continue
            heappush(hp,[d+1,j])
        for j in to2[b]:
            if j==t:
                print(d+1)
                exit()
            if j==i:continue
            if dist[j]!=-1:continue
            heappush(hp,[d+1,j])
    print(-1)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' *
' (ID: 2099)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.1646274328231812
    2. 'product' → logprob: -1.4146274328231812
    3. 'per' → logprob: -1.7896274328231812
    4. 'count' → logprob: -2.0396275520324707
    5. 'cycle' → logprob: -2.6646275520324707
    6. 'group' → logprob: -3.2896275520324707
    7. 'chain' → logprob: -3.4146275520324707
    8. 'acc' → logprob: -6.039627552032471
    9. 'is' → logprob: -6.539627552032471
    10. 'zip' → logprob: -6.914627552032471

Token 4: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.279790997505188
    2. 'per' → logprob: -1.279790997505188
    3. 'product' → logprob: -1.654790997505188
    4. 'c' → logprob: -2.4047908782958984
    5. 'com' → logprob: -2.6547908782958984
    6. 'import' → logprob: -3.2797908782958984
    7. 'count' → logprob: -4.154790878295898
    8. 'chain' → logprob: -4.904790878295898
    9. 'i' → logprob: -5.029790878295898
    10. 'p' → logprob: -5.404790878295898

Token 5: ' bis' (ID: 7204)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.6391701102256775
    2. ' math' → logprob: -1.3891701698303223
    3. ' ' → logprob: -2.7641701698303223
    4. ' operator' → logprob: -2.8891701698303223
    5. ' sys' → logprob: -2.8891701698303223
    6. ' collections' → logprob: -4.264170169830322
    7. ' os' → logprob: -4.389170169830322
    8. 'fun' → logprob: -5.639170169830322
    9. ' itertools' → logprob: -5.764170169830322
    10. ' random' → logprob: -6.014170169830322

Token 6: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -2.856408536899835e-05
    2. 'ec' → logprob: -11.125028610229492
    3. 'e' → logprob: -12.000028610229492
    4. 't' → logprob: -13.125028610229492
    5. 'ected' → logprob: -13.750028610229492
    6. 'ector' → logprob: -14.125028610229492
    7. '   ' → logprob: -14.250028610229492
    8. 'ectl' → logprob: -14.375028610229492
    9. '```' → logprob: -14.750028610229492
    10. 'm' → logprob: -15.000028610229492

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.026567567139863968
    2. 'import' → logprob: -3.6515674591064453
    3. ' ' → logprob: -8.901567459106445
    4. '_import' → logprob: -9.776567459106445
    5. '_' → logprob: -10.151567459106445
    6. '.' → logprob: -10.651567459106445
    7. ' _' → logprob: -12.651567459106445
    8. '	import' → logprob: -13.276567459106445
    9. ' im' → logprob: -13.776567459106445
    10. ' ' → logprob: -14.151567459106445

Token 8: ' *
' (ID: 2099)
  Prédit: ' ins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ins' → logprob: -0.8492715954780579
    2. ' bis' → logprob: -1.224271535873413
    3. 'ins' → logprob: -1.349271535873413
    4. ' ' → logprob: -4.724271774291992
    5. '_ins' → logprob: -5.474271774291992
    6. 'bis' → logprob: -5.849271774291992
    7. '*' → logprob: -6.474271774291992
    8. '_' → logprob: -7.724271774291992
    9. ' *' → logprob: -7.724271774291992
    10. '```' → logprob: -8.974271774291992

Token 9: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9554005265235901
    2. 'i' → logprob: -1.2054004669189453
    3. ',' → logprob: -2.7054004669189453
    4. 'c' → logprob: -2.9554004669189453
    5. '_' → logprob: -3.3304004669189453
    6. 'a' → logprob: -3.4554004669189453
    7. ' ' → logprob: -4.080400466918945
    8. '(' → logprob: -4.205400466918945
    9. '*' → logprob: -4.205400466918945
    10. '.' → logprob: -4.330400466918945

Token 10: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.2829413414001465
    2. 'math' → logprob: -2.1579413414001465
    3. 'collections' → logprob: -3.0329413414001465
    4. ' collections' → logprob: -3.1579413414001465
    5. ' heap' → logprob: -3.6579413414001465
    6. 'heap' → logprob: -4.4079413414001465
    7. ' operator' → logprob: -7.2829413414001465
    8. ' sys' → logprob: -8.407941818237305
    9. 'operator' → logprob: -8.407941818237305
    10. 'copy' → logprob: -8.782941818237305

Token 11: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.2526915967464447
    2. 'import' → logprob: -1.502691626548767
    3. '.' → logprob: -8.002691268920898
    4. ' ' → logprob: -8.002691268920898
    5. '_import' → logprob: -10.377691268920898
    6. ' im' → logprob: -11.377691268920898
    7. '<|end|>' → logprob: -11.377691268920898
    8. '	import' → logprob: -11.502691268920898
    9. ' imports' → logprob: -12.377691268920898
    10. ' Import' → logprob: -12.877691268920898

Token 12: ' *
' (ID: 2099)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06866498291492462
    2. ' sqrt' → logprob: -3.068665027618408
    3. ' ceil' → logprob: -4.943665027618408
    4. ' inf' → logprob: -6.068665027618408
    5. '*' → logprob: -6.193665027618408
    6. ' *' → logprob: -6.693665027618408
    7. 'sqrt' → logprob: -7.068665027618408
    8. ' log' → logprob: -7.068665027618408
    9. ' pi' → logprob: -7.568665027618408
    10. ' ```' → logprob: -7.568665027618408

Token 13: 'from' (ID: 2845)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.5335922241210938
    2. 'd' → logprob: -1.6585922241210938
    3. '#' → logprob: -1.7835922241210938
    4. 'a' → logprob: -2.2835922241210938
    5. 'import' → logprob: -2.9085922241210938
    6. '\n' → logprob: -2.9085922241210938
    7. '_' → logprob: -3.1585922241210938
    8. '' → logprob: -3.1585922241210938
    9. '`' → logprob: -4.033592224121094
    10. '*' → logprob: -4.158592224121094

Token 14: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.5812323689460754
    2. ' collections' → logprob: -1.4562323093414307
    3. ' sys' → logprob: -2.9562323093414307
    4. 'sys' → logprob: -3.5812323093414307
    5. ' fractions' → logprob: -3.5812323093414307
    6. 'operator' → logprob: -3.8312323093414307
    7. ' operator' → logprob: -3.9562323093414307
    8. 'random' → logprob: -4.45623254776001
    9. ' random' → logprob: -4.83123254776001
    10. '_' → logprob: -4.83123254776001

Token 15: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.6348505616188049
    2. 'import' → logprob: -0.7598505616188049
    3. '.' → logprob: -6.63485050201416
    4. ' ' → logprob: -7.63485050201416
    5. '<|end|>' → logprob: -8.13485050201416
    6. '```' → logprob: -9.88485050201416
    7. '	import' → logprob: -10.50985050201416
    8. ' defaultdict' → logprob: -11.25985050201416
    9. '_import' → logprob: -11.63485050201416
    10. '.import' → logprob: -11.75985050201416

Token 16: ' *
' (ID: 2099)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.004779230337589979
    2. ' defaultdict' → logprob: -5.50477933883667
    3. ' import' → logprob: -7.87977933883667
    4. '_' → logprob: -8.879778861999512
    5. ' abc' → logprob: -9.254778861999512
    6. ' ```' → logprob: -10.254778861999512
    7. ' _' → logprob: -10.754778861999512
    8. 'import' → logprob: -12.129778861999512
    9. '  ' → logprob: -12.379778861999512
    10. ' collections' → logprob: -12.504778861999512

Token 17: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6401615738868713
    2. 'd' → logprob: -1.0151615142822266
    3. 'def' → logprob: -3.7651615142822266
    4. ' ' → logprob: -3.7651615142822266
    5. '#' → logprob: -3.8901615142822266
    6. 'a' → logprob: -4.265161514282227
    7. 'from' → logprob: -5.140161514282227
    8. '_' → logprob: -5.515161514282227
    9. ',' → logprob: -5.890161514282227
    10. ' 
' → logprob: -6.015161514282227

Token 18: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.6030313372612
    2. ' functools' → logprob: -1.9780313968658447
    3. ' operator' → logprob: -2.2280313968658447
    4. ' typing' → logprob: -2.4780313968658447
    5. ' ' → logprob: -3.2280313968658447
    6. 'heap' → logprob: -3.9780313968658447
    7. '_' → logprob: -4.103031158447266
    8. ' sys' → logprob: -4.853031158447266
    9. 'operator' → logprob: -4.853031158447266
    10. ' queue' → logprob: -4.853031158447266

Token 19: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.45848218582978e-06
    2. 'import' → logprob: -13.87500286102295
    3. 'i' → logprob: -15.12500286102295
    4. 'queue' → logprob: -15.12500286102295
    5. 'n' → logprob: -15.75000286102295
    6. 'o' → logprob: -16.125001907348633
    7. 's' → logprob: -16.250001907348633
    8. 'a' → logprob: -16.500001907348633
    9. 'u' → logprob: -16.500001907348633
    10. ' queue' → logprob: -16.625001907348633

Token 20: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.023800896480679512
    2. 'import' → logprob: -3.773800849914551
    3. '<|end|>' → logprob: -7.898800849914551
    4. ' ' → logprob: -8.89880084991455
    5. '.' → logprob: -10.27380084991455
    6. '	import' → logprob: -12.77380084991455
    7. '_import' → logprob: -13.02380084991455
    8. '.import' → logprob: -13.52380084991455
    9. '  ' → logprob: -13.89880084991455
    10. ' Import' → logprob: -14.02380084991455

Token 21: ' *
' (ID: 2099)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05464877933263779
    2. ' import' → logprob: -3.6796488761901855
    3. ' *' → logprob: -3.6796488761901855
    4. 'import' → logprob: -6.5546488761901855
    5. '  ' → logprob: -7.4296488761901855
    6. '*' → logprob: -8.054648399353027
    7. ' ```' → logprob: -8.804648399353027
    8. '<|end|>' → logprob: -9.304648399353027
    9. ' _' → logprob: -10.179648399353027
    10. ' ' → logprob: -10.179648399353027

Token 22: 'from' (ID: 2845)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.34353622794151306
    2. '#' → logprob: -2.593536138534546
    3. '\' → logprob: -2.593536138534546
    4. '\n' → logprob: -3.593536138534546
    5. 'import' → logprob: -3.718536138534546
    6. 'a' → logprob: -3.718536138534546
    7. 'def' → logprob: -3.968536138534546
    8. '' → logprob: -4.343536376953125
    9. 'n' → logprob: -4.968536376953125
    10. 'r' → logprob: -5.093536376953125

Token 23: ' random' (ID: 7526)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.23320549726486206
    2. 'operator' → logprob: -2.233205556869507
    3. 'random' → logprob: -3.858205556869507
    4. ' random' → logprob: -3.858205556869507
    5. ' functools' → logprob: -3.858205556869507
    6. ' sys' → logprob: -4.108205318450928
    7. 'sys' → logprob: -5.358205318450928
    8. ' copy' → logprob: -5.483205318450928
    9. 'copy' → logprob: -5.858205318450928
    10. ' queue' → logprob: -6.608205318450928

Token 24: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.10775772482156754
    2. 'import' → logprob: -2.732757806777954
    3. ' ' → logprob: -3.357757806777954
    4. '<|end|>' → logprob: -6.482757568359375
    5. '.' → logprob: -7.357757568359375
    6. '  ' → logprob: -10.357757568359375
    7. '_import' → logprob: -10.857757568359375
    8. ' im' → logprob: -10.982757568359375
    9. '_' → logprob: -11.732757568359375
    10. '	import' → logprob: -11.857757568359375

Token 25: ' *
' (ID: 2099)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0017751421546563506
    2. '  ' → logprob: -6.62677526473999
    3. 'space' → logprob: -8.876774787902832
    4. ' *' → logprob: -9.376774787902832
    5. ' space' → logprob: -9.501774787902832
    6. '_' → logprob: -10.376774787902832
    7. ' _' → logprob: -10.751774787902832
    8. ' ```' → logprob: -11.126774787902832
    9. 'import' → logprob: -11.501774787902832
    10. ' '' → logprob: -11.501774787902832

Token 26: 'import' (ID: 561)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5999155044555664
    2. 'r' → logprob: -1.7249155044555664
    3. '_' → logprob: -2.8499155044555664
    4. 'a' → logprob: -2.9749155044555664
    5. '*' → logprob: -3.3499155044555664
    6. '#' → logprob: -3.4749155044555664
    7. ' ' → logprob: -3.4749155044555664
    8. 'n' → logprob: -3.7249155044555664
    9. 'import' → logprob: -4.224915504455566
    10. 'i' → logprob: -5.224915504455566

Token 27: ' sys' (ID: 12228)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5967479348182678
    2. ' sys' → logprob: -1.471747875213623
    3. ' os' → logprob: -1.721747875213623
    4. '_' → logprob: -3.721747875213623
    5. ' _' → logprob: -4.846747875213623
    6. ' re' → logprob: -5.471747875213623
    7. ' numpy' → logprob: -6.221747875213623
    8. ' math' → logprob: -7.471747875213623
    9. '  ' → logprob: -7.596747875213623
    10. ' space' → logprob: -8.471748352050781

Token 28: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6136184334754944
    2. '\n' → logprob: -1.6136183738708496
    3. '.' → logprob: -2.2386183738708496
    4. '' → logprob: -2.8636183738708496
    5. 'import' → logprob: -3.3636183738708496
    6. '\' → logprob: -3.7386183738708496
    7. 'newline' → logprob: -4.48861837387085
    8. '#' → logprob: -4.86361837387085
    9. '

' → logprob: -5.48861837387085
    10. '
' → logprob: -6.11361837387085

Token 29: 'sys' (ID: 17324)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.18085114657878876
    2. 'def' → logprob: -3.0558512210845947
    3. 'r' → logprob: -4.055850982666016
    4. 'n' → logprob: -4.055850982666016
    5. 'import' → logprob: -4.180850982666016
    6. '#' → logprob: -4.430850982666016
    7. '\n' → logprob: -4.805850982666016
    8. '
' → logprob: -5.180850982666016
    9. 'a' → logprob: -5.180850982666016
    10. '' → logprob: -5.305850982666016

Token 30: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -6.12258882028982e-05
    2. '.stdout' → logprob: -11.50006103515625
    3. '.user' → logprob: -11.62506103515625
    4. ' .' → logprob: -11.62506103515625
    5. '.stdin' → logprob: -12.62506103515625
    6. '.readline' → logprob: -12.87506103515625
    7. '.import' → logprob: -12.87506103515625
    8. '.exit' → logprob: -13.00006103515625
    9. '.`' → logprob: -13.00006103515625
    10. '.argv' → logprob: -13.12506103515625

Token 31: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.13298670947551727
    2. '_rec' → logprob: -2.7579867839813232
    3. '_limit' → logprob: -3.3829867839813232
    4. '_version' → logprob: -5.257986545562744
    5. '_int' → logprob: -5.257986545562744
    6. '_exc' → logprob: -5.882986545562744
    7. '_execution' → logprob: -6.132986545562744
    8. '_depth' → logprob: -6.757986545562744
    9. '_trace' → logprob: -6.882986545562744
    10. '_' → logprob: -7.007986545562744

Token 32: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00013321757433004677
    2. 'urs' → logprob: -9.000133514404297
    3. 'ursive' → logprob: -12.375133514404297
    4. 'ur' → logprob: -12.375133514404297
    5. 'ursor' → logprob: -14.625133514404297
    6. 'usion' → logprob: -15.000133514404297
    7. 'urst' → logprob: -15.750133514404297
    8. 'usr' → logprob: -16.000133514404297
    9. 'limit' → logprob: -16.250133514404297
    10. 'rs' → logprob: -16.875133514404297

Token 33: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.00586716691032052
    2. 'limit' → logprob: -5.255867004394531
    3. '_depth' → logprob: -7.505867004394531
    4. '_lim' → logprob: -9.755867004394531
    5. '_limits' → logprob: -11.380867004394531
    6. ' limit' → logprob: -12.755867004394531
    7. '_stack' → logprob: -13.130867004394531
    8. '_LIMIT' → logprob: -13.380867004394531
    9. '_threshold' → logprob: -13.630867004394531
    10. '_' → logprob: -13.880867004394531

Token 34: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00016587569552939385
    2. ' (' → logprob: -8.750165939331055
    3. '(
' → logprob: -12.375165939331055
    4. '(

' → logprob: -13.250165939331055
    5. '((' → logprob: -14.750165939331055
    6. ')' → logprob: -15.750165939331055
    7. '```' → logprob: -16.000165939331055
    8. '<|end|>' → logprob: -16.000165939331055
    9. '(
' → logprob: -16.625165939331055
    10. '()' → logprob: -17.000165939331055

Token 35: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.008623912930488586
    2. '100' → logprob: -4.758624076843262
    3. ' ' → logprob: -12.133624076843262
    4. '300' → logprob: -13.133624076843262
    5. '500' → logprob: -14.008624076843262
    6. '999' → logprob: -14.883624076843262
    7. '200' → logprob: -15.383624076843262
    8. '400' → logprob: -15.508624076843262
    9. '1' → logprob: -15.633624076843262
    10. '250' → logprob: -15.883624076843262

Token 36: ' **' (ID: 6240)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -1.0431931018829346
    2. '000' → logprob: -1.2931931018829346
    3. '7' → logprob: -1.5431931018829346
    4. '0' → logprob: -2.1681931018829346
    5. '00' → logprob: -3.4181931018829346
    6. '8' → logprob: -4.9181928634643555
    7. '**' → logprob: -5.4181928634643555
    8. '5' → logprob: -8.168192863464355
    9. '07' → logprob: -8.293192863464355
    10. '```' → logprob: -10.543192863464355

Token 37: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0298562403768301
    2. '9' → logprob: -3.5298562049865723
    3. '8' → logprob: -9.15485668182373
    4. '6' → logprob: -17.404855728149414
    5. '```' → logprob: -18.404855728149414
    6. ' ' → logprob: -18.904855728149414
    7. '**' → logprob: -19.279855728149414
    8. '10' → logprob: -20.029855728149414
    9. '``' → logprob: -21.404855728149414
    10. '+' → logprob: -21.404855728149414

Token 38: '6' (ID: 21)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0627254918217659
    2. '9' → logprob: -2.81272554397583
    3. '8' → logprob: -7.18772554397583
    4. '6' → logprob: -13.312725067138672
    5. '```' → logprob: -17.187725067138672
    6. '10' → logprob: -18.187725067138672
    7. '**' → logprob: -18.437725067138672
    8. ' ' → logprob: -19.187725067138672
    9. '+' → logprob: -19.687725067138672
    10. '``' → logprob: -20.312725067138672

Token 39: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -14.625000953674316
    3. ' )' → logprob: -15.000000953674316
    4. '))' → logprob: -15.250000953674316
    5. ')

' → logprob: -18.500001907348633
    6. ')
' → logprob: -18.625001907348633
    7. '),' → logprob: -18.625001907348633
    8. ')`' → logprob: -19.375001907348633
    9. ')))' → logprob: -19.750001907348633
    10. ')#' → logprob: -20.250001907348633

Token 40: 'int' (ID: 491)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5741978287696838
    2. '

' → logprob: -1.074197769165039
    3. 'n' → logprob: -3.199197769165039
    4. '\n' → logprob: -3.449197769165039
    5. '\' → logprob: -4.949197769165039
    6. '' → logprob: -5.199197769165039
    7. 'def' → logprob: -5.324197769165039
    8. '
' → logprob: -6.324197769165039
    9. '```' → logprob: -7.699197769165039
    10. '#' → logprob: -7.824197769165039

Token 41: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3172532320022583
    2. ' ' → logprob: -1.4422532320022583
    3. '32' → logprob: -1.4422532320022583
    4. '  ' → logprob: -2.8172531127929688
    5. '_' → logprob: -3.0672531127929688
    6. '64' → logprob: -3.4422531127929688
    7. '()' → logprob: -3.5672531127929688
    8. '    ' → logprob: -3.9422531127929688
    9. '   ' → logprob: -4.317253112792969
    10. ' =' → logprob: -4.567253112792969

Token 42: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5184237360954285
    2. 'put' → logprob: -1.7684237957000732
    3. '()' → logprob: -3.1434237957000732
    4. 'val' → logprob: -3.3934237957000732
    5. '_val' → logprob: -3.5184237957000732
    6. 'o' → logprob: -3.6434237957000732
    7. 'nt' → logprob: -3.7684237957000732
    8. '_' → logprob: -4.768423557281494
    9. 'def' → logprob: -4.893423557281494
    10. 'v' → logprob: -5.143423557281494

Token 43: ' lambda' (ID: 27871)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6038080453872681
    2. '(int' → logprob: -1.728808045387268
    3. '(lambda' → logprob: -1.728808045387268
    4. '(input' → logprob: -2.3538079261779785
    5. 'lambda' → logprob: -6.8538079261779785
    6. '0' → logprob: -7.4788079261779785
    7. ' (' → logprob: -7.7288079261779785
    8. 'input' → logprob: -7.9788079261779785
    9. '1' → logprob: -8.853808403015137
    10. 'int' → logprob: -9.103808403015137

Token 44: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3204367756843567
    2. ' x' → logprob: -1.320436716079712
    3. 'a' → logprob: -6.195436954498291
    4. ' a' → logprob: -6.820436954498291
    5. 's' → logprob: -6.945436954498291
    6. '_' → logprob: -7.320436954498291
    7. ' ' → logprob: -7.445436954498291
    8. ':' → logprob: -7.945436954498291
    9. ' s' → logprob: -8.195436477661133
    10. 'b' → logprob: -8.195436477661133

Token 45: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005173631943762302
    2. ':int' → logprob: -5.630173683166504
    3. ':x' → logprob: -6.505173683166504
    4. ':void' → logprob: -10.380173683166504
    5. ':list' → logprob: -11.130173683166504
    6. ' :' → logprob: -11.630173683166504
    7. ':n' → logprob: -13.005173683166504
    8. ':
' → logprob: -13.255173683166504
    9. ':return' → logprob: -13.380173683166504
    10. ':str' → logprob: -13.755173683166504

Token 46: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2389077991247177
    2. 'int' → logprob: -1.613907814025879
    3. ' x' → logprob: -4.488907814025879
    4. 'x' → logprob: -6.863907814025879
    5. '(int' → logprob: -7.738907814025879
    6. ' ' → logprob: -8.238907814025879
    7. '[int' → logprob: -9.613907814025879
    8. ' max' → logprob: -9.738907814025879
    9. ' ord' → logprob: -9.988907814025879
    10. ' (' → logprob: -9.988907814025879

Token 47: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38721102476119995
    2. '(x' → logprob: -1.1372110843658447
    3. '(input' → logprob: -9.387210845947266
    4. '32' → logprob: -9.637210845947266
    5. 'x' → logprob: -9.762210845947266
    6. '()' → logprob: -10.387210845947266
    7. '_' → logprob: -10.887210845947266
    8. 's' → logprob: -11.012210845947266
    9. ' (' → logprob: -11.637210845947266
    10. '1' → logprob: -11.762210845947266

Token 48: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006562378723174334
    2. '.strip' → logprob: -5.506562232971191
    3. ')-' → logprob: -6.506562232971191
    4. ')+' → logprob: -7.381562232971191
    5. '-' → logprob: -8.881562232971191
    6. ' )' → logprob: -9.631562232971191
    7. '())' → logprob: -9.631562232971191
    8. '(x' → logprob: -10.381562232971191
    9. '(' → logprob: -11.256562232971191
    10. '+' → logprob: -11.631562232971191

Token 49: ' -' (ID: 533)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03460412472486496
    2. ',' → logprob: -4.409604072570801
    3. 's' → logprob: -6.034604072570801
    4. '(x' → logprob: -6.159604072570801
    5. '(input' → logprob: -6.284604072570801
    6. 'input' → logprob: -6.659604072570801
    7. '(s' → logprob: -6.784604072570801
    8. '(
' → logprob: -6.784604072570801
    9. '<|end|>' → logprob: -6.784604072570801
    10. '#' → logprob: -6.784604072570801

Token 50: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004620472434908152
    2. ' ' → logprob: -5.379620552062988
    3. '0' → logprob: -15.879620552062988
    4. '<|end|>' → logprob: -16.629619598388672
    5. ' ' → logprob: -17.254619598388672
    6. '	' → logprob: -17.629619598388672
    7. '   ' → logprob: -18.379619598388672
    8. '198' → logprob: -18.504619598388672
    9. '2' → logprob: -18.504619598388672
    10. '```' → logprob: -18.567119598388672

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '0' → logprob: -18.000009536743164
    4. '<|end|>' → logprob: -19.000009536743164
    5. '2' → logprob: -19.625009536743164
    6. '  ' → logprob: -20.250009536743164
    7. '```' → logprob: -20.312509536743164
    8. 'int' → logprob: -20.625009536743164
    9. '`' → logprob: -20.812509536743164
    10. '﻿' → logprob: -20.875009536743164

Token 52: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.013746068812906742
    2. '<|end|>' → logprob: -5.38874626159668
    3. '\n' → logprob: -5.51374626159668
    4. '' → logprob: -6.76374626159668
    5. '#' → logprob: -7.13874626159668
    6. '
' → logprob: -7.63874626159668
    7. 'newline' → logprob: -7.63874626159668
    8. '\' → logprob: -7.88874626159668
    9. 'n' → logprob: -8.13874626159668
    10. 'def' → logprob: -8.38874626159668

Token 53: 'p' (ID: 79)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3893858790397644
    2. '
' → logprob: -1.7643859386444092
    3. '\' → logprob: -3.014385938644409
    4. 'def' → logprob: -3.139385938644409
    5. '\n' → logprob: -3.764385938644409
    6. 'd' → logprob: -4.13938570022583
    7. '' → logprob: -4.63938570022583
    8. 'input' → logprob: -6.26438570022583
    9. 'a' → logprob: -6.51438570022583
    10. 'r' → logprob: -6.63938570022583

Token 54: '2' (ID: 17)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0012501158053055406
    2. 'ar' → logprob: -7.876250267028809
    3. 'arse' → logprob: -8.626250267028809
    4. 'ass' → logprob: -9.001250267028809
    5. 'ath' → logprob: -9.501250267028809
    6. '=' → logprob: -9.751250267028809
    7. 'rim' → logprob: -9.876250267028809
    8. 'ow' → logprob: -10.001250267028809
    9. 'riv' → logprob: -10.251250267028809
    10. 'rin' → logprob: -10.501250267028809

Token 55: 'D' (ID: 35)
  Prédit: 'ow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ow' → logprob: -0.07922012358903885
    2. ' =' → logprob: -3.3292200565338135
    3. 'r' → logprob: -4.204220294952393
    4. '=' → logprob: -4.704220294952393
    5. 'w' → logprob: -5.329220294952393
    6. 'ower' → logprob: -5.829220294952393
    7. 'o' → logprob: -6.204220294952393
    8. '2' → logprob: -6.954220294952393
    9. 'owl' → logprob: -7.079220294952393
    10. '0' → logprob: -7.329220294952393

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26852962374687195
    2. 'oints' → logprob: -2.3935296535491943
    3. '=' → logprob: -3.2685296535491943
    4. 'r' → logprob: -3.8935296535491943
    5. '=[]' → logprob: -4.143529415130615
    6. 'ar' → logprob: -4.768529415130615
    7. '_' → logprob: -4.893529415130615
    8. '_array' → logprob: -5.143529415130615
    9. '[]' → logprob: -5.268529415130615
    10. '[' → logprob: -5.518529415130615

Token 57: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.09002119302749634
    2. ' lambda' → logprob: -2.9650211334228516
    3. '(lambda' → logprob: -3.7150211334228516
    4. '[]' → logprob: -4.840021133422852
    5. '[' → logprob: -6.590021133422852
    6. 'list' → logprob: -7.465021133422852
    7. ' []' → logprob: -9.715021133422852
    8. '=lambda' → logprob: -9.715021133422852
    9. 'print' → logprob: -10.090021133422852
    10. ' [' → logprob: -10.340021133422852

Token 58: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7255603671073914
    2. ' x' → logprob: -1.4755604267120361
    3. ' lambda' → logprob: -1.8505604267120361
    4. 'lambda' → logprob: -2.100560426712036
    5. '(lambda' → logprob: -5.475560188293457
    6. 'list' → logprob: -7.850560188293457
    7. ' ' → logprob: -7.975560188293457
    8. 'f' → logprob: -7.975560188293457
    9. ' list' → logprob: -7.975560188293457
    10. '[' → logprob: -8.600560188293457

Token 59: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0544680617749691
    2. ',' → logprob: -3.3044681549072266
    3. ' :' → logprob: -4.304468154907227
    4. ',x' → logprob: -6.679468154907227
    5. ':x' → logprob: -7.679468154907227
    6. ':[' → logprob: -8.304468154907227
    7. 'x' → logprob: -8.429468154907227
    8. '[' → logprob: -8.554468154907227
    9. ',:' → logprob: -8.929468154907227
    10. ' ,' → logprob: -9.429468154907227

Token 60: ' print' (ID: 2123)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.8251386284828186
    2. '[(' → logprob: -2.075138568878174
    3. 'list' → logprob: -2.075138568878174
    4. '(x' → logprob: -2.575138568878174
    5. '[' → logprob: -2.700138568878174
    6. ' [' → logprob: -3.075138568878174
    7. ' list' → logprob: -3.700138568878174
    8. 'print' → logprob: -3.825138568878174
    9. ' [(' → logprob: -3.825138568878174
    10. '[[' → logprob: -4.325138568878174

Token 61: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.4367987811565399
    2. '(' → logprob: -1.0617988109588623
    3. '(x' → logprob: -5.186798572540283
    4. '('' → logprob: -6.561798572540283
    5. '((' → logprob: -7.561798572540283
    6. '(tuple' → logprob: -8.936799049377441
    7. '("("' → logprob: -9.311799049377441
    8. '(*(' → logprob: -9.436799049377441
    9. '([' → logprob: -9.561799049377441
    10. '(list' → logprob: -9.686799049377441

Token 62: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.002532617887482047
    2. '['' → logprob: -7.127532482147217
    3. 'map' → logprob: -7.127532482147217
    4. '[' → logprob: -7.627532482147217
    5. '[x' → logprob: -9.002532958984375
    6. '["' → logprob: -9.127532958984375
    7. '(x' → logprob: -9.252532958984375
    8. '('' → logprob: -9.877532958984375
    9. '[*' → logprob: -11.752532958984375
    10. ' x' → logprob: -12.002532958984375

Token 63: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5767313241958618
    2. ',' → logprob: -0.8267313241958618
    3. '[' → logprob: -7.826731204986572
    4. ' ,' → logprob: -9.82673168182373
    5. '(),' → logprob: -9.95173168182373
    6. '[],' → logprob: -10.70173168182373
    7. '))' → logprob: -10.70173168182373
    8. '2' → logprob: -10.70173168182373
    9. '),' → logprob: -10.95173168182373
    10. ',x' → logprob: -11.20173168182373

Token 64: ' sep' (ID: 31529)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.00023691373644396663
    2. ' sep' → logprob: -8.500236511230469
    3. 'se' → logprob: -10.375236511230469
    4. ')' → logprob: -13.375236511230469
    5. 'end' → logprob: -15.625236511230469
    6. ' ' → logprob: -15.750236511230469
    7. 'separator' → logprob: -15.750236511230469
    8. '*' → logprob: -16.25023651123047
    9. '2' → logprob: -16.87523651123047
    10. '  ' → logprob: -17.87523651123047

Token 65: '="\' (ID: 129534)
  Prédit: '=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.5539220571517944
    2. '=' → logprob: -1.5539220571517944
    3. '='\' → logprob: -1.5539220571517944
    4. '="\' → logprob: -6.428922176361084
    5. '="' → logprob: -7.553922176361084
    6. '=\' → logprob: -9.178921699523926
    7. '=',' → logprob: -9.303921699523926
    8. ''' → logprob: -10.178921699523926
    9. '=''' → logprob: -10.178921699523926
    10. '=
' → logprob: -11.053921699523926

Token 66: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005361821502447128
    2. ' ' → logprob: -5.255362033843994
    3. ' n' → logprob: -9.505361557006836
    4. '\n' → logprob: -10.630361557006836
    5. ' \' → logprob: -11.255361557006836
    6. '
' → logprob: -12.630361557006836
    7. 's' → logprob: -12.630361557006836
    8. 'r' → logprob: -13.380361557006836
    9. ' 
' → logprob: -13.505361557006836
    10. '  ' → logprob: -13.880361557006836

Token 67: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.024050680920481682
    2. ')' → logprob: -3.774050712585449
    3. ')")' → logprob: -7.149050712585449
    4. ')"' → logprob: -11.52405071258545
    5. ' )' → logprob: -12.14905071258545
    6. '"' → logprob: -13.77405071258545
    7. ' ")' → logprob: -14.14905071258545
    8. '")
' → logprob: -14.52405071258545
    9. '}")' → logprob: -14.64905071258545
    10. '')' → logprob: -15.02405071258545

Token 68: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3403022885322571
    2. 'n' → logprob: -1.5903022289276123
    3. '\n' → logprob: -2.8403022289276123
    4. '

' → logprob: -4.215302467346191
    5. '\' → logprob: -4.965302467346191
    6. 'def' → logprob: -6.965302467346191
    7. 'input' → logprob: -6.965302467346191
    8. '' → logprob: -7.090302467346191
    9. 'd' → logprob: -7.840302467346191
    10. '
' → logprob: -7.965302467346191

Token 69: ' II' (ID: 9839)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.33735769987106323
    2. ' dfs' → logprob: -1.962357759475708
    3. ' solve' → logprob: -1.962357759475708
    4. 'solve' → logprob: -6.462357521057129
    5. ' bfs' → logprob: -6.962357521057129
    6. ' input' → logprob: -7.462357521057129
    7. ' ' → logprob: -7.962357521057129
    8. 'dfs' → logprob: -7.962357521057129
    9. 'main' → logprob: -8.212357521057129
    10. ' read' → logprob: -8.212357521057129

Token 70: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00437398673966527
    2. '()' → logprob: -5.504374027252197
    3. ' ():' → logprob: -8.254373550415039
    4. ' ()' → logprob: -10.504373550415039
    5. '():
' → logprob: -12.129373550415039
    6. '(' → logprob: -13.379373550415039
    7. '()*' → logprob: -15.379373550415039
    8. '().' → logprob: -15.629373550415039
    9. '(),' → logprob: -15.754373550415039
    10. '(input' → logprob: -16.25437355041504

Token 71: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.005234002135694027
    2. 'return' → logprob: -6.0052337646484375
    3. ' ' → logprob: -6.3802337646484375
    4. ' int' → logprob: -7.7552337646484375
    5. '   ' → logprob: -8.005233764648438
    6. '    ' → logprob: -9.005233764648438
    7. ' ' → logprob: -9.255233764648438
    8. 'int' → logprob: -9.880233764648438
    9. ' 
' → logprob: -11.755233764648438
    10. '	return' → logprob: -12.005233764648438

Token 72: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12216776609420776
    2. ' int' → logprob: -2.2471678256988525
    3. 'input' → logprob: -5.372167587280273
    4. ' input' → logprob: -6.247167587280273
    5. ' map' → logprob: -6.497167587280273
    6. 'map' → logprob: -6.747167587280273
    7. ' ' → logprob: -11.747167587280273
    8. '<int' → logprob: -12.372167587280273
    9. '	int' → logprob: -12.372167587280273
    10. '[int' → logprob: -12.372167587280273

Token 73: '(sys' (ID: 41042)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00041851779678836465
    2. '(' → logprob: -7.875418663024902
    3. '(sys' → logprob: -10.375418663024902
    4. 'input' → logprob: -12.375418663024902
    5. '()' → logprob: -14.000418663024902
    6. '(int' → logprob: -14.750418663024902
    7. '(stdin' → logprob: -15.000418663024902
    8. '((' → logprob: -15.375418663024902
    9. ' (' → logprob: -15.500418663024902
    10. '(next' → logprob: -15.750418663024902

Token 74: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -7.195421494543552e-05
    2. '(stdin' → logprob: -10.25007152557373
    3. 'stdin' → logprob: -10.87507152557373
    4. '.readline' → logprob: -11.12507152557373
    5. '.' → logprob: -13.12507152557373
    6. ' stdin' → logprob: -14.25007152557373
    7. '.argv' → logprob: -16.625072479248047
    8. '.stdout' → logprob: -17.750072479248047
    9. '().' → logprob: -18.125072479248047
    10. '.std' → logprob: -18.500072479248047

Token 75: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.1756367712223437e-05
    2. '.' → logprob: -11.625011444091797
    3. ' readline' → logprob: -13.000011444091797
    4. '.read' → logprob: -15.375011444091797
    5. '.stdin' → logprob: -15.625011444091797
    6. '().' → logprob: -17.125011444091797
    7. 'read' → logprob: -17.500011444091797
    8. ').' → logprob: -18.750011444091797
    9. ' .' → logprob: -18.875011444091797
    10. '.readlines' → logprob: -19.250011444091797

Token 76: '())
' (ID: 4574)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.6954725980758667
    2. '())' → logprob: -0.6954725980758667
    3. '()' → logprob: -6.070472717285156
    4. ' ())' → logprob: -12.195472717285156
    5. '(' → logprob: -12.820472717285156
    6. '();)' → logprob: -13.570472717285156
    7. ')' → logprob: -13.695472717285156
    8. '()]' → logprob: -14.445472717285156
    9. '())
' → logprob: -14.945472717285156
    10. '()))' → logprob: -14.945472717285156

Token 77: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.93710636976175e-05
    2. ' def' → logprob: -10.000099182128906
    3. '
' → logprob: -10.500099182128906
    4. '<|end|>' → logprob: -11.500099182128906
    5. '()' → logprob: -12.250099182128906
    6. 'ndef' → logprob: -12.875099182128906
    7. '\' → logprob: -13.000099182128906
    8. 'd' → logprob: -13.250099182128906
    9. '<|end|>' → logprob: -13.625099182128906
    10. '```' → logprob: -15.000099182128906

Token 78: ' MI' (ID: 32682)
  Prédit: 'MI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MI' → logprob: -0.4701431095600128
    2. 'LI' → logprob: -1.2201430797576904
    3. 'LS' → logprob: -3.5951430797576904
    4. ' MI' → logprob: -3.7201430797576904
    5. 'MIS' → logprob: -4.7201433181762695
    6. 'IS' → logprob: -5.2201433181762695
    7. 'M' → logprob: -5.9701433181762695
    8. 'L' → logprob: -5.9701433181762695
    9. ' LI' → logprob: -5.9701433181762695
    10. 'S' → logprob: -6.0951433181762695

Token 79: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.041857775300741196
    2. '()' → logprob: -3.4168577194213867
    3. 'N' → logprob: -5.666857719421387
    4. 'n' → logprob: -6.416857719421387
    5. 'T' → logprob: -7.541857719421387
    6. 'S' → logprob: -8.166857719421387
    7. 'D' → logprob: -8.166857719421387
    8. 'L' → logprob: -8.291857719421387
    9. 'P' → logprob: -8.416857719421387
    10. 'nit' → logprob: -8.541857719421387

Token 80: ' return' (ID: 622)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6812012195587158
    2. ' map' → logprob: -1.1812012195587158
    3. ' return' → logprob: -2.056201219558716
    4. 'list' → logprob: -3.306201219558716
    5. 'map' → logprob: -4.306200981140137
    6. 'return' → logprob: -4.806200981140137
    7. ' tuple' → logprob: -7.931200981140137
    8. ' [' → logprob: -9.056200981140137
    9. ' ' → logprob: -9.181200981140137
    10. ' lambda' → logprob: -9.306200981140137

Token 81: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.7645972967147827
    2. 'map' → logprob: -1.1395972967147827
    3. 'list' → logprob: -2.0145974159240723
    4. ' list' → logprob: -2.5145974159240723
    5. '[' → logprob: -8.764596939086914
    6. '	map' → logprob: -10.389596939086914
    7. '(map' → logprob: -10.764596939086914
    8. ' [' → logprob: -11.514596939086914
    9. 'tuple' → logprob: -11.514596939086914
    10. '[list' → logprob: -11.764596939086914

Token 82: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0004978670622222126
    2. '(' → logprob: -7.625497817993164
    3. 'int' → logprob: -11.875497817993164
    4. '<int' → logprob: -13.375497817993164
    5. '=int' → logprob: -14.500497817993164
    6. '[int' → logprob: -15.125497817993164
    7. '(lambda' → logprob: -15.375497817993164
    8. '(str' → logprob: -16.250497817993164
    9. ' (' → logprob: -16.375497817993164
    10. '	int' → logprob: -16.875497817993164

Token 83: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0012821375858038664
    2. ',' → logprob: -7.501282215118408
    3. 'sys' → logprob: -8.00128173828125
    4. ' (' → logprob: -8.25128173828125
    5. ',(' → logprob: -9.62628173828125
    6. '=sys' → logprob: -10.00128173828125
    7. ' sys' → logprob: -11.87628173828125
    8. '(' → logprob: -12.00128173828125
    9. '	sys' → logprob: -12.50128173828125
    10. ' ,' → logprob: -13.25128173828125

Token 84: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.04301300644874573
    2. ' sys' → logprob: -3.168013095855713
    3. '	sys' → logprob: -12.293012619018555
    4. '(sys' → logprob: -12.668012619018555
    5. ' ' → logprob: -13.168012619018555
    6. '=sys' → logprob: -13.293012619018555
    7. ')' → logprob: -13.668012619018555
    8. '  ' → logprob: -14.918012619018555
    9. '   ' → logprob: -15.043012619018555
    10. 'input' → logprob: -15.668012619018555

Token 85: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.10022544115781784
    2. 'stdin' → logprob: -2.3502254486083984
    3. '.' → logprob: -11.975225448608398
    4. ' stdin' → logprob: -12.225225448608398
    5. '(stdin' → logprob: -12.600225448608398
    6. '.stdout' → logprob: -13.350225448608398
    7. 'in' → logprob: -13.975225448608398
    8. '.std' → logprob: -14.475225448608398
    9. ' .' → logprob: -14.725225448608398
    10. 'std' → logprob: -15.100225448608398

Token 86: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.023740600794553757
    2. '().' → logprob: -3.773740530014038
    3. '()' → logprob: -9.023740768432617
    4. '())' → logprob: -9.148740768432617
    5. 'read' → logprob: -9.273740768432617
    6. ')' → logprob: -9.773740768432617
    7. '.readlines' → logprob: -10.648740768432617
    8. '.' → logprob: -10.648740768432617
    9. ' readline' → logprob: -10.898740768432617
    10. '.stdin' → logprob: -11.523740768432617

Token 87: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.013606253080070019
    2. '())' → logprob: -4.513606071472168
    3. '()' → logprob: -6.138606071472168
    4. '.readline' → logprob: -8.138606071472168
    5. ')' → logprob: -9.513606071472168
    6. 'line' → logprob: -11.513606071472168
    7. ' ().' → logprob: -12.013606071472168
    8. ' ())' → logprob: -12.513606071472168
    9. ' ()' → logprob: -13.263606071472168
    10. '()
' → logprob: -13.388606071472168

Token 88: 'split' (ID: 13627)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.004454805050045252
    2. 'strip' → logprob: -6.004454612731934
    3. 'rstrip' → logprob: -7.129454612731934
    4. ')' → logprob: -7.504454612731934
    5. 'split' → logprob: -8.129454612731934
    6. '.readline' → logprob: -8.254454612731934
    7. ' readline' → logprob: -9.629454612731934
    8. '))' → logprob: -14.004454612731934
    9. ' ' → logprob: -14.129454612731934
    10. '())' → logprob: -14.504454612731934

Token 89: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0643223449587822
    2. ')' → logprob: -2.9393222332000732
    3. '()' → logprob: -4.689322471618652
    4. '())
' → logprob: -8.814322471618652
    5. ' ())' → logprob: -11.189322471618652
    6. '))' → logprob: -11.564322471618652
    7. '(' → logprob: -11.939322471618652
    8. '()
' → logprob: -12.064322471618652
    9. '()))' → logprob: -12.189322471618652
    10. ')
' → logprob: -13.314322471618652

Token 90: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7024658918380737
    2. 'def' → logprob: -0.7024658918380737
    3. '\' → logprob: -4.827466011047363
    4. 'n' → logprob: -8.077466011047363
    5. 'D' → logprob: -8.577466011047363
    6. '\n' → logprob: -8.702466011047363
    7. '#' → logprob: -8.827466011047363
    8. '
' → logprob: -9.077466011047363
    9. '```' → logprob: -9.702466011047363
    10. ' 
' → logprob: -9.827466011047363

Token 91: ' MI' (ID: 32682)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.02694210596382618
    2. 'L' → logprob: -3.776942014694214
    3. 'LS' → logprob: -6.526942253112793
    4. ' LI' → logprob: -7.526942253112793
    5. 'SI' → logprob: -7.651942253112793
    6. 'LM' → logprob: -7.901942253112793
    7. 'I' → logprob: -7.901942253112793
    8. 'S' → logprob: -9.401942253112793
    9. 'MI' → logprob: -9.401942253112793
    10. 'M' → logprob: -9.526942253112793

Token 92: '1' (ID: 16)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08936459571123123
    2. '():' → logprob: -2.464364528656006
    3. '(' → logprob: -9.214365005493164
    4. '())' → logprob: -9.464365005493164
    5. '():
' → logprob: -9.714365005493164
    6. '()>' → logprob: -10.214365005493164
    7. '()*' → logprob: -10.589365005493164
    8. '()]' → logprob: -10.589365005493164
    9. '().' → logprob: -11.214365005493164
    10. ')' → logprob: -11.464365005493164

Token 93: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0005125218303874135
    2. '()' → logprob: -7.625512599945068
    3. '):' → logprob: -11.37551212310791
    4. '():
' → logprob: -11.75051212310791
    5. ' ():' → logprob: -13.37551212310791
    6. ':' → logprob: -14.12551212310791
    7. ')' → logprob: -14.37551212310791
    8. '0' → logprob: -14.50051212310791
    9. '(' → logprob: -14.75051212310791
    10. '()>' → logprob: -15.37551212310791

Token 94: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.17714233696460724
    2. ' ()' → logprob: -2.427142381668091
    3. '()' → logprob: -2.927142381668091
    4. 'return' → logprob: -4.552142143249512
    5. '():' → logprob: -5.552142143249512
    6. ' lambda' → logprob: -5.552142143249512
    7. ' ' → logprob: -6.802142143249512
    8. ' ():' → logprob: -7.427142143249512
    9. 'lambda' → logprob: -9.052142143249512
    10. ' (' → logprob: -9.052142143249512

Token 95: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.5233601331710815
    2. ' map' → logprob: -0.8983601331710815
    3. 'int' → logprob: -9.398360252380371
    4. 'm' → logprob: -10.148360252380371
    5. '(map' → logprob: -10.148360252380371
    6. ' ' → logprob: -10.648360252380371
    7. ' int' → logprob: -11.148360252380371
    8. '	map' → logprob: -11.398360252380371
    9. 'imap' → logprob: -12.148360252380371
    10. ' ma' → logprob: -12.648360252380371

Token 96: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.07263743132352829
    2. '(lambda' → logprob: -2.6976373195648193
    3. 'int' → logprob: -6.197637557983398
    4. 'lambda' → logprob: -8.072637557983398
    5. '(' → logprob: -8.072637557983398
    6. '<int' → logprob: -11.072637557983398
    7. '1' → logprob: -11.447637557983398
    8. '[int' → logprob: -12.447637557983398
    9. 's' → logprob: -13.197637557983398
    10. '(in' → logprob: -13.697637557983398

Token 97: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29355448484420776
    2. '(sys' → logprob: -1.4185545444488525
    3. '(' → logprob: -4.543554306030273
    4. '(x' → logprob: -7.168554306030273
    5. ',s' → logprob: -8.293554306030273
    6. ',(' → logprob: -8.293554306030273
    7. ' ,' → logprob: -8.668554306030273
    8. '(system' → logprob: -9.918554306030273
    9. ',x' → logprob: -10.043554306030273
    10. '=sys' → logprob: -10.043554306030273

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5246887803077698
    2. '(sys' → logprob: -0.8996887803077698
    3. ' ,' → logprob: -7.274688720703125
    4. 'sys' → logprob: -7.899688720703125
    5. ',s' → logprob: -9.274688720703125
    6. '=sys' → logprob: -9.274688720703125
    7. '(' → logprob: -9.899688720703125
    8. 's' → logprob: -9.899688720703125
    9. ')' → logprob: -10.149688720703125
    10. ',(' → logprob: -10.399688720703125

Token 99: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0004678497789427638
    2. ' sys' → logprob: -7.750467777252197
    3. '(sys' → logprob: -10.250468254089355
    4. ')' → logprob: -14.375468254089355
    5. '=sys' → logprob: -14.625468254089355
    6. '	sys' → logprob: -15.125468254089355
    7. 's' → logprob: -15.875468254089355
    8. ' ' → logprob: -16.00046730041504
    9. 'system' → logprob: -16.25046730041504
    10. '  ' → logprob: -17.50046730041504

Token 100: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.03406864032149315
    2. 'stdin' → logprob: -3.4090685844421387
    3. '(stdin' → logprob: -8.159069061279297
    4. '.readline' → logprob: -9.534069061279297
    5. '().' → logprob: -10.534069061279297
    6. 'in' → logprob: -11.284069061279297
    7. '.stdout' → logprob: -11.534069061279297
    8. '.' → logprob: -11.659069061279297
    9. ').' → logprob: -13.784069061279297
    10. ' stdin' → logprob: -13.784069061279297

Token 101: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.11706598103046417
    2. '())' → logprob: -2.367065906524658
    3. '().' → logprob: -4.117065906524658
    4. '()' → logprob: -8.367066383361816
    5. ')' → logprob: -9.117066383361816
    6. '.readlines' → logprob: -10.867066383361816
    7. 'stdin' → logprob: -11.117066383361816
    8. 'read' → logprob: -11.867066383361816
    9. ' readline' → logprob: -11.992066383361816
    10. '())
' → logprob: -12.117066383361816

Token 102: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0002922022540587932
    2. '())' → logprob: -8.37529182434082
    3. '()' → logprob: -9.75029182434082
    4. ' ().' → logprob: -13.25029182434082
    5. '.readline' → logprob: -13.87529182434082
    6. ')' → logprob: -15.00029182434082
    7. ' ())' → logprob: -16.62529182434082
    8. '()))' → logprob: -16.87529182434082
    9. ' ()' → logprob: -17.00029182434082
    10. '.' → logprob: -17.37529182434082

Token 103: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0006339243846014142
    2. 'read' → logprob: -7.875633716583252
    3. 'rstrip' → logprob: -9.00063419342041
    4. 'strip' → logprob: -9.25063419342041
    5. ' split' → logprob: -11.12563419342041
    6. ')' → logprob: -11.25063419342041
    7. 'spl' → logprob: -12.37563419342041
    8. 's' → logprob: -14.75063419342041
    9. 'rs' → logprob: -15.00063419342041
    10. '())' → logprob: -15.12563419342041

Token 104: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.26800742745399475
    2. ')' → logprob: -1.5180073976516724
    3. '()' → logprob: -4.143007278442383
    4. '())
' → logprob: -10.643007278442383
    5. '))' → logprob: -11.018007278442383
    6. ' )' → logprob: -11.893007278442383
    7. '()
' → logprob: -11.893007278442383
    8. ' ())' → logprob: -11.893007278442383
    9. '(' → logprob: -12.768007278442383
    10. ')
' → logprob: -13.018007278442383

Token 105: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.33088865876197815
    2. 'def' → logprob: -1.4558886289596558
    3. '\' → logprob: -3.2058887481689453
    4. 'n' → logprob: -5.955888748168945
    5. '\n' → logprob: -6.205888748168945
    6. '
' → logprob: -6.955888748168945
    7. 'D' → logprob: -7.830888748168945
    8. '' → logprob: -7.955888748168945
    9. '_' → logprob: -8.330888748168945
    10. 'i' → logprob: -8.580888748168945

Token 106: ' MF' (ID: 72127)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.09072352945804596
    2. 'SI' → logprob: -2.9657235145568848
    3. 'I' → logprob: -4.340723514556885
    4. ' LI' → logprob: -4.590723514556885
    5. 'S' → logprob: -5.340723514556885
    6. 'LS' → logprob: -5.465723514556885
    7. 'L' → logprob: -6.590723514556885
    8. ' SI' → logprob: -7.465723514556885
    9. ' LS' → logprob: -8.215723991394043
    10. 'IS' → logprob: -8.340723991394043

Token 107: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00014609156642109156
    2. '()' → logprob: -9.87514591217041
    3. 'loat' → logprob: -9.87514591217041
    4. '():
' → logprob: -10.50014591217041
    5. ' ():' → logprob: -11.87514591217041
    6. 'lo' → logprob: -12.50014591217041
    7. 'C' → logprob: -13.62514591217041
    8. 'LOAT' → logprob: -15.00014591217041
    9. '():
' → logprob: -15.25014591217041
    10. 'loor' → logprob: -15.50014591217041

Token 108: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6196738481521606
    2. 'lambda' → logprob: -1.2446738481521606
    3. ' lambda' → logprob: -2.369673728942871
    4. 'def' → logprob: -3.494673728942871
    5. ' return' → logprob: -3.494673728942871
    6. 'float' → logprob: -4.494673728942871
    7. ')' → logprob: -5.119673728942871
    8. '()' → logprob: -7.119673728942871
    9. '():' → logprob: -7.994673728942871
    10. ' float' → logprob: -7.994673728942871

Token 109: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.03339831158518791
    2. 'float' → logprob: -3.783398389816284
    3. ' map' → logprob: -4.658398151397705
    4. 'list' → logprob: -7.783398151397705
    5. ' float' → logprob: -9.658398628234863
    6. 'lambda' → logprob: -10.033398628234863
    7. 'm' → logprob: -11.033398628234863
    8. '   ' → logprob: -11.158398628234863
    9. 'flo' → logprob: -11.158398628234863
    10. ' ' → logprob: -11.658398628234863

Token 110: '(float' (ID: 17830)
  Prédit: '(float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(float' → logprob: -1.759734732331708e-05
    2. 'float' → logprob: -11.250017166137695
    3. '(' → logprob: -12.750017166137695
    4. '=float' → logprob: -14.375017166137695
    5. '(int' → logprob: -14.625017166137695
    6. '<float' → logprob: -14.625017166137695
    7. ',float' → logprob: -16.750017166137695
    8. ' float' → logprob: -17.375017166137695
    9. '```' → logprob: -17.500017166137695
    10. '(f' → logprob: -17.625017166137695

Token 111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034297199454158545
    2. '(sys' → logprob: -8.500343322753906
    3. ',s' → logprob: -10.500343322753906
    4. ',float' → logprob: -10.625343322753906
    5. '(),' → logprob: -10.875343322753906
    6. ')' → logprob: -11.000343322753906
    7. ',System' → logprob: -11.125343322753906
    8. '=sys' → logprob: -11.625343322753906
    9. ',int' → logprob: -11.750343322753906
    10. ' ,' → logprob: -11.875343322753906

Token 112: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.003982704598456621
    2. ' sys' → logprob: -6.0039825439453125
    3. '(sys' → logprob: -6.5039825439453125
    4. '=sys' → logprob: -12.378982543945312
    5. ')' → logprob: -12.878982543945312
    6. '	sys' → logprob: -13.628982543945312
    7. 's' → logprob: -15.503982543945312
    8. 'system' → logprob: -16.253982543945312
    9. '_sys' → logprob: -17.128982543945312
    10. '/sys' → logprob: -17.128982543945312

Token 113: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0001596771035110578
    2. 'stdin' → logprob: -8.75015926361084
    3. '(stdin' → logprob: -14.62515926361084
    4. '.readline' → logprob: -15.12515926361084
    5. '.stdout' → logprob: -15.25015926361084
    6. '.' → logprob: -15.87515926361084
    7. '.argv' → logprob: -17.250160217285156
    8. ' stdin' → logprob: -17.750160217285156
    9. '```' → logprob: -18.875160217285156
    10. '.stderr' → logprob: -19.125160217285156

Token 114: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0034338808618485928
    2. '())' → logprob: -6.378433704376221
    3. '().' → logprob: -6.503433704376221
    4. '()' → logprob: -9.128434181213379
    5. 'read' → logprob: -10.253434181213379
    6. ')' → logprob: -10.253434181213379
    7. '.readlines' → logprob: -10.878434181213379
    8. 'stdin' → logprob: -11.253434181213379
    9. ' readline' → logprob: -12.003434181213379
    10. 'line' → logprob: -12.253434181213379

Token 115: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0029077043291181326
    2. '())' → logprob: -6.002907752990723
    3. '()' → logprob: -7.752907752990723
    4. '()
' → logprob: -14.627907752990723
    5. ')' → logprob: -15.002907752990723
    6. '.readline' → logprob: -15.127907752990723
    7. ' ().' → logprob: -15.502907752990723
    8. '()[' → logprob: -15.502907752990723
    9. ' ())' → logprob: -15.502907752990723
    10. '()]' → logprob: -15.877907752990723

Token 116: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011063982965424657
    2. 'read' → logprob: -8.001106262207031
    3. 'strip' → logprob: -8.001106262207031
    4. ')' → logprob: -8.251106262207031
    5. 'rstrip' → logprob: -8.751106262207031
    6. '())' → logprob: -12.501106262207031
    7. '(split' → logprob: -12.751106262207031
    8. ' split' → logprob: -12.751106262207031
    9. 'decode' → logprob: -13.001106262207031
    10. ')>' → logprob: -13.751106262207031

Token 117: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16968996822834015
    2. '())' → logprob: -1.9196900129318237
    3. '()' → logprob: -4.669690132141113
    4. ')
' → logprob: -11.169690132141113
    5. '())
' → logprob: -11.169690132141113
    6. ' )' → logprob: -12.294690132141113
    7. '()
' → logprob: -12.669690132141113
    8. '))' → logprob: -13.044690132141113
    9. '(' → logprob: -13.044690132141113
    10. ' ())' → logprob: -13.294690132141113

Token 118: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19311392307281494
    2. 'd' → logprob: -1.818113923072815
    3. '\' → logprob: -4.443113803863525
    4. '\n' → logprob: -7.568113803863525
    5. 'n' → logprob: -8.068114280700684
    6. '
' → logprob: -8.568114280700684
    7. '```' → logprob: -9.318114280700684
    8. ''\' → logprob: -9.568114280700684
    9. ' 
' → logprob: -9.818114280700684
    10. 'ndef' → logprob: -9.943114280700684

Token 119: ' LI' (ID: 14875)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LI' → logprob: -1.0052255392074585
    2. 'LS' → logprob: -1.2552255392074585
    3. 'S' → logprob: -1.3802255392074585
    4. 'L' → logprob: -3.755225658416748
    5. 'input' → logprob: -3.755225658416748
    6. 'SI' → logprob: -3.755225658416748
    7. 'I' → logprob: -4.630225658416748
    8. 'IS' → logprob: -4.755225658416748
    9. 'SS' → logprob: -7.005225658416748
    10. ' S' → logprob: -7.130225658416748

Token 120: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.1099170446395874
    2. 'n' → logprob: -1.6099170446395874
    3. 'ST' → logprob: -1.6099170446395874
    4. 'st' → logprob: -1.6099170446395874
    5. 'N' → logprob: -3.859917163848877
    6. '()' → logprob: -3.859917163848877
    7. 'ne' → logprob: -4.359917163848877
    8. 'nst' → logprob: -5.484917163848877
    9. 'S' → logprob: -6.359917163848877
    10. ' =' → logprob: -6.484917163848877

Token 121: ' return' (ID: 622)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.31800854206085205
    2. ' list' → logprob: -2.0680084228515625
    3. 'lambda' → logprob: -2.0680084228515625
    4. 'list' → logprob: -3.9430084228515625
    5. ' return' → logprob: -10.068008422851562
    6. ' lamb' → logprob: -10.318008422851562
    7. 'return' → logprob: -10.443008422851562
    8. '(lambda' → logprob: -11.318008422851562
    9. ' lam' → logprob: -12.318008422851562
    10. 'lam' → logprob: -12.318008422851562

Token 122: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.688212614681106e-05
    2. ' list' → logprob: -11.000017166137695
    3. '[list' → logprob: -16.375017166137695
    4. 'map' → logprob: -17.250017166137695
    5. 'sys' → logprob: -17.625017166137695
    6. '[' → logprob: -18.375017166137695
    7. '(list' → logprob: -19.875017166137695
    8. '	list' → logprob: -20.375017166137695
    9. '=list' → logprob: -20.625017166137695
    10. ':list' → logprob: -21.750017166137695

Token 123: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.002977464348077774
    2. '(' → logprob: -6.00297737121582
    3. '(int' → logprob: -8.37797737121582
    4. '(sys' → logprob: -8.50297737121582
    5. 'map' → logprob: -9.87797737121582
    6. '()' → logprob: -12.50297737121582
    7. '(str' → logprob: -12.62797737121582
    8. '(m' → logprob: -13.12797737121582
    9. '(M' → logprob: -13.50297737121582
    10. '(eval' → logprob: -13.75297737121582

Token 124: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0002979240380227566
    2. 'int' → logprob: -8.125297546386719
    3. '(' → logprob: -13.875297546386719
    4. '<int' → logprob: -14.875297546386719
    5. ' int' → logprob: -15.375297546386719
    6. '[int' → logprob: -15.500297546386719
    7. ' (' → logprob: -16.00029754638672
    8. ',int' → logprob: -16.50029754638672
    9. '=int' → logprob: -16.50029754638672
    10. ':int' → logprob: -18.25029754638672

Token 125: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.14473573863506317
    2. ',' → logprob: -2.394735813140869
    3. 'sys' → logprob: -3.144735813140869
    4. ' sys' → logprob: -8.519735336303711
    5. '=sys' → logprob: -9.269735336303711
    6. '(' → logprob: -9.644735336303711
    7. '	sys' → logprob: -10.394735336303711
    8. ',int' → logprob: -10.519735336303711
    9. ')' → logprob: -11.269735336303711
    10. ',s' → logprob: -11.644735336303711

Token 126: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -1.7120533811976202e-05
    2. ' sys' → logprob: -11.000017166137695
    3. '(sys' → logprob: -15.500017166137695
    4. 'MI' → logprob: -16.125017166137695
    5. 'input' → logprob: -18.125017166137695
    6. 'system' → logprob: -18.125017166137695
    7. 'Sys' → logprob: -19.125017166137695
    8. '=sys' → logprob: -19.375017166137695
    9. '	sys' → logprob: -19.625017166137695
    10. ')' → logprob: -19.875017166137695

Token 127: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.10026048123836517
    2. 'stdin' → logprob: -2.3502604961395264
    3. '(stdin' → logprob: -10.225260734558105
    4. 'sys' → logprob: -11.850260734558105
    5. '.readline' → logprob: -11.975260734558105
    6. '=sys' → logprob: -12.975260734558105
    7. ' stdin' → logprob: -14.225260734558105
    8. '.' → logprob: -14.600260734558105
    9. '```' → logprob: -15.100260734558105
    10. 'in' → logprob: -15.850260734558105

Token 128: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.012413930147886276
    2. 'sys' → logprob: -5.13741397857666
    3. '(sys' → logprob: -5.76241397857666
    4. '=sys' → logprob: -6.26241397857666
    5. '().' → logprob: -7.26241397857666
    6. 'stdin' → logprob: -8.01241397857666
    7. '(stdin' → logprob: -8.38741397857666
    8. 'read' → logprob: -10.01241397857666
    9. '.stdin' → logprob: -10.13741397857666
    10. '.readlines' → logprob: -10.26241397857666

Token 129: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.4121114822482923e-06
    2. '()' → logprob: -13.375003814697266
    3. ' ().' → logprob: -13.875003814697266
    4. '.readline' → logprob: -14.625003814697266
    5. ')' → logprob: -15.750003814697266
    6. '.' → logprob: -16.000003814697266
    7. '()))' → logprob: -16.375003814697266
    8. '))' → logprob: -16.500003814697266
    9. '())' → logprob: -16.875003814697266
    10. ' .' → logprob: -18.750003814697266

Token 130: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005414772895164788
    2. ')' → logprob: -8.750541687011719
    3. 'read' → logprob: -8.750541687011719
    4. 'strip' → logprob: -8.875541687011719
    5. '().' → logprob: -10.250541687011719
    6. 'rstrip' → logprob: -10.250541687011719
    7. '.readline' → logprob: -12.125541687011719
    8. 'spl' → logprob: -13.000541687011719
    9. '.split' → logprob: -13.250541687011719
    10. ' split' → logprob: -13.375541687011719

Token 131: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.316916823387146
    2. '))' → logprob: -1.316916823387146
    3. '()' → logprob: -6.3169169425964355
    4. '()))
' → logprob: -6.4419169425964355
    5. '())' → logprob: -8.941916465759277
    6. '))
' → logprob: -9.566916465759277
    7. '(' → logprob: -10.816916465759277
    8. ')' → logprob: -11.316916465759277
    9. '()))

' → logprob: -12.066916465759277
    10. ' ))' → logprob: -12.941916465759277

Token 132: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.5570885807392187e-05
    2. 'D' → logprob: -12.250015258789062
    3. 'd' → logprob: -12.500015258789062
    4. '
' → logprob: -12.625015258789062
    5. '\' → logprob: -14.125015258789062
    6. ' def' → logprob: -14.500015258789062
    7. 'de' → logprob: -14.500015258789062
    8. '```' → logprob: -14.875015258789062
    9. '_' → logprob: -15.375015258789062
    10. 'ndef' → logprob: -15.500015258789062

Token 133: ' LI' (ID: 14875)
  Prédit: 'LS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LS' → logprob: -0.0898694097995758
    2. 'LI' → logprob: -3.089869499206543
    3. ' LS' → logprob: -3.339869499206543
    4. 'LF' → logprob: -6.464869499206543
    5. 'L' → logprob: -6.839869499206543
    6. 'LL' → logprob: -7.339869499206543
    7. ' LI' → logprob: -7.464869499206543
    8. ' L' → logprob: -8.339869499206543
    9. 'input' → logprob: -8.339869499206543
    10. 'SI' → logprob: -9.214869499206543

Token 134: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.4192871175473556e-05
    2. '()' → logprob: -9.875054359436035
    3. '():' → logprob: -13.125054359436035
    4. '(' → logprob: -15.625054359436035
    5. '_' → logprob: -15.875054359436035
    6. '())' → logprob: -16.50005340576172
    7. '()]' → logprob: -17.00005340576172
    8. '```' → logprob: -17.37505340576172
    9. ' ()' → logprob: -17.50005340576172
    10. 'I' → logprob: -17.62505340576172

Token 135: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0006155780283734202
    2. '()' → logprob: -7.50061559677124
    3. '=' → logprob: -10.000615119934082
    4. '):' → logprob: -11.750615119934082
    5. ' =' → logprob: -12.375615119934082
    6. '():
' → logprob: -13.125615119934082
    7. ':' → logprob: -13.875615119934082
    8. ' ():' → logprob: -13.875615119934082
    9. '(' → logprob: -14.625615119934082
    10. '()>' → logprob: -15.625615119934082

Token 136: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6068927049636841
    2. '()' → logprob: -1.356892704963684
    3. ' return' → logprob: -2.2318925857543945
    4. 'list' → logprob: -3.1068925857543945
    5. 'lambda' → logprob: -3.9818925857543945
    6. ' lambda' → logprob: -4.4818925857543945
    7. 'def' → logprob: -4.4818925857543945
    8. ' list' → logprob: -5.7318925857543945
    9. ' def' → logprob: -8.231892585754395
    10. '[]' → logprob: -9.231892585754395

Token 137: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -8.08944896562025e-05
    2. ' list' → logprob: -9.500081062316895
    3. 'lambda' → logprob: -12.125081062316895
    4. '[list' → logprob: -14.375081062316895
    5. '[' → logprob: -17.375080108642578
    6. ' lambda' → logprob: -17.875080108642578
    7. 'List' → logprob: -19.000080108642578
    8. '(list' → logprob: -19.000080108642578
    9. '	list' → logprob: -19.500080108642578
    10. 'lis' → logprob: -19.625080108642578

Token 138: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.01587587222456932
    2. '(int' → logprob: -4.265875816345215
    3. '(' → logprob: -6.640875816345215
    4. '(lambda' → logprob: -7.890875816345215
    5. 'map' → logprob: -10.640875816345215
    6. 'int' → logprob: -12.640875816345215
    7. '(list' → logprob: -13.640875816345215
    8. '(m' → logprob: -14.765875816345215
    9. '(mapping' → logprob: -15.390875816345215
    10. '(func' → logprob: -15.390875816345215

Token 139: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -3.1424973713001236e-05
    2. 'int' → logprob: -10.500031471252441
    3. '(lambda' → logprob: -13.125031471252441
    4. '(' → logprob: -13.750031471252441
    5. '[int' → logprob: -14.875031471252441
    6. '<int' → logprob: -15.500031471252441
    7. '=int' → logprob: -16.375030517578125
    8. ',int' → logprob: -17.125030517578125
    9. ']int' → logprob: -17.625030517578125
    10. ':int' → logprob: -18.250030517578125

Token 140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ')' → logprob: -15.000000953674316
    3. '_' → logprob: -15.625000953674316
    4. 'lambda' → logprob: -15.875000953674316
    5. '(lambda' → logprob: -16.25
    6. '_)' → logprob: -17.5
    7. 'int' → logprob: -18.125
    8. 's' → logprob: -18.25
    9. 'sys' → logprob: -18.875
    10. '(sys' → logprob: -20.0

Token 141: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.301394023466855e-05
    2. '(sys' → logprob: -9.750062942504883
    3. 'sys' → logprob: -12.875062942504883
    4. ',s' → logprob: -14.375062942504883
    5. '=sys' → logprob: -14.375062942504883
    6. ' ,' → logprob: -15.125062942504883
    7. ' sys' → logprob: -15.375062942504883
    8. ',map' → logprob: -16.375062942504883
    9. ',input' → logprob: -16.625062942504883
    10. '))' → logprob: -16.875062942504883

Token 142: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -3.309382373117842e-05
    2. ' sys' → logprob: -10.375033378601074
    3. '(sys' → logprob: -13.250033378601074
    4. '=sys' → logprob: -16.875032424926758
    5. '	sys' → logprob: -18.000032424926758
    6. ')' → logprob: -19.250032424926758
    7. 's' → logprob: -20.000032424926758
    8. '.sys' → logprob: -20.000032424926758
    9. 'Sys' → logprob: -20.250032424926758
    10. 'system' → logprob: -20.500032424926758

Token 143: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.009116744622588158
    2. '(stdin' → logprob: -5.7591166496276855
    3. 'stdin' → logprob: -5.8841166496276855
    4. '.readline' → logprob: -5.8841166496276855
    5. '.stdout' → logprob: -8.509117126464844
    6. '().' → logprob: -9.009117126464844
    7. '.' → logprob: -12.009117126464844
    8. '.stderr' → logprob: -12.384117126464844
    9. ').' → logprob: -12.509117126464844
    10. ' stdin' → logprob: -12.759117126464844

Token 144: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.03144093602895737
    2. '().' → logprob: -4.031440734863281
    3. '))' → logprob: -5.406440734863281
    4. '.readlines' → logprob: -6.531440734863281
    5. '.stdin' → logprob: -6.906440734863281
    6. 'stdin' → logprob: -6.906440734863281
    7. 'sys' → logprob: -7.156440734863281
    8. '()))' → logprob: -7.281440734863281
    9. '.read' → logprob: -7.531440734863281
    10. '```' → logprob: -7.656440734863281

Token 145: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0008135587559081614
    2. '()))' → logprob: -7.3758134841918945
    3. '))' → logprob: -8.625813484191895
    4. '()' → logprob: -12.750813484191895
    5. '()))
' → logprob: -13.250813484191895
    6. '()[' → logprob: -14.375813484191895
    7. '.readline' → logprob: -14.500813484191895
    8. '.' → logprob: -14.750813484191895
    9. '())' → logprob: -14.750813484191895
    10. '.split' → logprob: -14.875813484191895

Token 146: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.024604277219623e-05
    2. ')' → logprob: -10.500040054321289
    3. '))' → logprob: -12.375040054321289
    4. 'read' → logprob: -12.875040054321289
    5. '(split' → logprob: -13.125040054321289
    6. ' split' → logprob: -13.750040054321289
    7. '().' → logprob: -14.250040054321289
    8. '())' → logprob: -14.875040054321289
    9. '.split' → logprob: -15.000040054321289
    10. 'sys' → logprob: -15.250040054321289

Token 147: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.12820543348789215
    2. '()))' → logprob: -2.1282055377960205
    3. '()' → logprob: -6.753205299377441
    4. '()))
' → logprob: -10.253205299377441
    5. '))
' → logprob: -10.628205299377441
    6. ')' → logprob: -10.628205299377441
    7. '())' → logprob: -10.753205299377441
    8. ' ))' → logprob: -13.378205299377441
    9. '(' → logprob: -13.503205299377441
    10. ')))' → logprob: -14.628205299377441

Token 148: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0001830410328693688
    2. 'D' → logprob: -9.62518310546875
    3. 'd' → logprob: -10.50018310546875
    4. 'n' → logprob: -11.00018310546875
    5. '\' → logprob: -11.00018310546875
    6. 'de' → logprob: -11.50018310546875
    7. '
' → logprob: -12.00018310546875
    8. 'data' → logprob: -12.12518310546875
    9. 'ndef' → logprob: -12.37518310546875
    10. 'S' → logprob: -12.50018310546875

Token 149: ' LF' (ID: 107653)
  Prédit: 'LS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LS' → logprob: -0.06768552213907242
    2. 'LI' → logprob: -3.817685604095459
    3. 'SI' → logprob: -4.192685604095459
    4. 'S' → logprob: -4.942685604095459
    5. 'LF' → logprob: -4.942685604095459
    6. 'L' → logprob: -5.067685604095459
    7. ' LS' → logprob: -6.067685604095459
    8. 'I' → logprob: -6.317685604095459
    9. 'input' → logprob: -6.317685604095459
    10. 'LL' → logprob: -6.942685604095459

Token 150: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0001431114797014743
    2. '()' → logprob: -8.875143051147461
    3. ' ():' → logprob: -13.375143051147461
    4. '():
' → logprob: -13.625143051147461
    5. '()>' → logprob: -15.875143051147461
    6. '():
' → logprob: -17.00014305114746
    7. '():

' → logprob: -17.25014305114746
    8. '(' → logprob: -17.50014305114746
    9. '()*' → logprob: -17.50014305114746
    10. ' ()' → logprob: -17.62514305114746

Token 151: ' return' (ID: 622)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12058474868535995
    2. 'lambda' → logprob: -2.495584726333618
    3. ' lambda' → logprob: -4.245584964752197
    4. 'list' → logprob: -4.245584964752197
    5. ' ()' → logprob: -7.120584964752197
    6. 'return' → logprob: -7.620584964752197
    7. ' list' → logprob: -7.745584964752197
    8. 'def' → logprob: -8.370584487915039
    9. '():' → logprob: -8.620584487915039
    10. '=lambda' → logprob: -9.370584487915039

Token 152: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0001584850688232109
    2. ' list' → logprob: -8.750158309936523
    3. 'li' → logprob: -18.125158309936523
    4. 'List' → logprob: -20.500158309936523
    5. 'lambda' → logprob: -20.500158309936523
    6. '	list' → logprob: -20.875158309936523
    7. '[list' → logprob: -21.000158309936523
    8. '(list' → logprob: -21.125158309936523
    9. 'map' → logprob: -21.500158309936523
    10. 'float' → logprob: -21.875158309936523

Token 153: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.001623291289433837
    2. '(float' → logprob: -6.501623153686523
    3. '(' → logprob: -9.501623153686523
    4. 'map' → logprob: -10.001623153686523
    5. 'float' → logprob: -14.876623153686523
    6. '(list' → logprob: -15.876623153686523
    7. '_map' → logprob: -16.001623153686523
    8. ' map' → logprob: -16.376623153686523
    9. '<float' → logprob: -16.876623153686523
    10. '	map' → logprob: -16.876623153686523

Token 154: '(float' (ID: 17830)
  Prédit: '(float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(float' → logprob: -0.0008237993461079895
    2. 'float' → logprob: -7.125823974609375
    3. '(' → logprob: -11.625823974609375
    4. '<float' → logprob: -12.250823974609375
    5. '=float' → logprob: -12.375823974609375
    6. ',float' → logprob: -14.125823974609375
    7. ' float' → logprob: -14.625823974609375
    8. '	float' → logprob: -15.875823974609375
    9. '```' → logprob: -16.500823974609375
    10. '(f' → logprob: -17.875823974609375

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011375770904123783
    2. '(sys' → logprob: -4.636375904083252
    3. ',float' → logprob: -6.511375904083252
    4. 'sys' → logprob: -9.511375427246094
    5. '=sys' → logprob: -11.636375427246094
    6. ',map' → logprob: -11.636375427246094
    7. ' ,' → logprob: -11.761375427246094
    8. ')' → logprob: -11.886375427246094
    9. ',s' → logprob: -12.011375427246094
    10. ',int' → logprob: -12.511375427246094

Token 156: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00016110755677800626
    2. ' sys' → logprob: -8.875161170959473
    3. '(sys' → logprob: -11.250161170959473
    4. 'float' → logprob: -11.875161170959473
    5. ')' → logprob: -15.000161170959473
    6. '=sys' → logprob: -15.125161170959473
    7. '	sys' → logprob: -15.500161170959473
    8. 'system' → logprob: -15.875161170959473
    9. 's' → logprob: -15.875161170959473
    10. 'lambda' → logprob: -16.125160217285156

Token 157: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.607853353023529
    2. 'stdin' → logprob: -0.982853353023529
    3. '(stdin' → logprob: -3.107853412628174
    4. 'sys' → logprob: -4.232853412628174
    5. '(sys' → logprob: -4.232853412628174
    6. '=sys' → logprob: -5.232853412628174
    7. '.readline' → logprob: -6.482853412628174
    8. ')' → logprob: -8.857852935791016
    9. '))' → logprob: -8.857852935791016
    10. '.stdout' → logprob: -9.607852935791016

Token 158: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.008102327585220337
    2. '().' → logprob: -5.6331024169921875
    3. '(stdin' → logprob: -7.0081024169921875
    4. '.stdin' → logprob: -7.2581024169921875
    5. '())' → logprob: -7.2581024169921875
    6. '()' → logprob: -7.5081024169921875
    7. 'stdin' → logprob: -7.8831024169921875
    8. 'sys' → logprob: -8.008102416992188
    9. '(sys' → logprob: -8.008102416992188
    10. 'read' → logprob: -8.133102416992188

Token 159: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.981667537620524e-06
    2. '()' → logprob: -13.500001907348633
    3. '()))' → logprob: -15.625001907348633
    4. '))' → logprob: -16.250001907348633
    5. ' ().' → logprob: -16.375001907348633
    6. '.readline' → logprob: -16.750001907348633
    7. '()
' → logprob: -17.000001907348633
    8. '.split' → logprob: -17.250001907348633
    9. '.' → logprob: -17.500001907348633
    10. '()[' → logprob: -18.250001907348633

Token 160: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.8590300139039755e-05
    2. ')' → logprob: -10.375048637390137
    3. 'read' → logprob: -11.375048637390137
    4. 'spl' → logprob: -13.375048637390137
    5. ' split' → logprob: -13.500048637390137
    6. '(split' → logprob: -13.625048637390137
    7. '))' → logprob: -13.875048637390137
    8. 'strip' → logprob: -15.000048637390137
    9. 'x' → logprob: -16.00004768371582
    10. '.split' → logprob: -16.75004768371582

Token 161: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.21300582587718964
    2. '()))' → logprob: -1.713005781173706
    3. '()))
' → logprob: -5.463006019592285
    4. '))
' → logprob: -5.588006019592285
    5. '()' → logprob: -5.713006019592285
    6. ' ))' → logprob: -9.338006019592285
    7. ')' → logprob: -9.838006019592285
    8. '())' → logprob: -10.088006019592285
    9. '()))

' → logprob: -10.838006019592285
    10. '(' → logprob: -11.463006019592285

Token 162: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003407516749575734
    2. 'd' → logprob: -5.7534074783325195
    3. 'n' → logprob: -9.62840747833252
    4. '\' → logprob: -9.75340747833252
    5. 'de' → logprob: -9.75340747833252
    6. '
' → logprob: -11.12840747833252
    7. 'D' → logprob: -11.87840747833252
    8. '#' → logprob: -12.37840747833252
    9. 'ndef' → logprob: -12.50340747833252
    10. '\n' → logprob: -12.87840747833252

Token 163: ' L' (ID: 451)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.43934541940689087
    2. 'LS' → logprob: -2.189345359802246
    3. 'S' → logprob: -2.939345359802246
    4. ' input' → logprob: -2.939345359802246
    5. 's' → logprob: -3.939345359802246
    6. 'SI' → logprob: -3.939345359802246
    7. 'SR' → logprob: -4.189345359802246
    8. 'LI' → logprob: -4.439345359802246
    9. 'IS' → logprob: -4.439345359802246
    10. 'str' → logprob: -4.564345359802246

Token 164: 'LI' (ID: 14313)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0013184542767703533
    2. ' =' → logprob: -7.876318454742432
    3. '=[]' → logprob: -8.251317977905273
    4. 'IN' → logprob: -8.751317977905273
    5. 'ambda' → logprob: -9.126317977905273
    6. 'S' → logprob: -9.376317977905273
    7. '=' → logprob: -9.501317977905273
    8. 'strip' → logprob: -10.501317977905273
    9. 'LI' → logprob: -10.876317977905273
    10. '=[]
' → logprob: -11.001317977905273

Token 165: '(rows' (ID: 69648)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.014311348088085651
    2. '()' → logprob: -4.26431131362915
    3. '():
' → logprob: -10.139311790466309
    4. '=' → logprob: -10.139311790466309
    5. ' =' → logprob: -11.139311790466309
    6. '()>' → logprob: -11.264311790466309
    7. '1' → logprob: -12.264311790466309
    8. ' ():' → logprob: -12.264311790466309
    9. ' ()' → logprob: -12.389311790466309
    10. '=[]' → logprob: -12.639311790466309

Token 166: '_number' (ID: 11733)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003086486831307411
    2. ',' → logprob: -8.375308990478516
    3. ' ):' → logprob: -10.500308990478516
    4. ')' → logprob: -10.875308990478516
    5. '):
' → logprob: -11.625308990478516
    6. ',n' → logprob: -11.625308990478516
    7. '(n' → logprob: -12.000308990478516
    8. '():' → logprob: -13.375308990478516
    9. '=' → logprob: -13.625308990478516
    10. '[]):' → logprob: -14.250308990478516

Token 167: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000215457082958892
    2. ' ):' → logprob: -9.375215530395508
    3. ')' → logprob: -9.750215530395508
    4. '):
' → logprob: -9.750215530395508
    5. '=' → logprob: -12.375215530395508
    6. ',' → logprob: -12.875215530395508
    7. '():' → logprob: -13.125215530395508
    8. 'def' → logprob: -13.500215530395508
    9. ':' → logprob: -13.750215530395508
    10. '(n' → logprob: -14.625215530395508

Token 168: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.046954140067100525
    2. '   ' → logprob: -3.2969541549682617
    3. 'return' → logprob: -5.296954154968262
    4. '	return' → logprob: -5.671954154968262
    5. ' =' → logprob: -9.046954154968262
    6. '[' → logprob: -9.796954154968262
    7. ' [' → logprob: -10.046954154968262
    8. '[]' → logprob: -10.046954154968262
    9. '    ' → logprob: -10.171954154968262
    10. ' ' → logprob: -10.546954154968262

Token 169: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25311794877052307
    2. '[list' → logprob: -1.5031179189682007
    3. '[List' → logprob: -7.00311803817749
    4. '[int' → logprob: -9.128117561340332
    5. ' [' → logprob: -9.503117561340332
    6. '[line' → logprob: -10.128117561340332
    7. '[str' → logprob: -10.378117561340332
    8. '[input' → logprob: -12.378117561340332
    9. '[array' → logprob: -12.503117561340332
    10. '[l' → logprob: -12.628117561340332

Token 170: 'LI' (ID: 14313)
  Prédit: 'LI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.47418031096458435
    2. 'list' → logprob: -0.9741803407669067
    3. 'LL' → logprob: -9.724180221557617
    4. 'List' → logprob: -11.849180221557617
    5. ' list' → logprob: -11.849180221557617
    6. ' LI' → logprob: -11.974180221557617
    7. 'li' → logprob: -11.974180221557617
    8. '[' → logprob: -11.974180221557617
    9. 'LIST' → logprob: -12.224180221557617
    10. 'map' → logprob: -13.849180221557617

Token 171: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -8.537868779967539e-06
    2. '()]' → logprob: -11.750008583068848
    3. ' ()' → logprob: -15.000008583068848
    4. 'for' → logprob: -16.12500762939453
    5. 'sys' → logprob: -17.25000762939453
    6. '()
' → logprob: -17.37500762939453
    7. '().' → logprob: -17.62500762939453
    8. '(sys' → logprob: -17.87500762939453
    9. '（）' → logprob: -18.12500762939453
    10. '()<<' → logprob: -18.25000762939453

Token 172: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02819964848458767
    2. 'for' → logprob: -3.6531996726989746
    3. ' for' → logprob: -6.278199672698975
    4. '(' → logprob: -11.653199195861816
    5. '_' → logprob: -12.903199195861816
    6. '()]' → logprob: -12.903199195861816
    7. ' ()' → logprob: -13.153199195861816
    8. '	for' → logprob: -14.028199195861816
    9. '```' → logprob: -14.153199195861816
    10. ')' → logprob: -14.278199195861816

Token 173: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00013417120499070734
    2. ' _' → logprob: -10.000134468078613
    3. '_i' → logprob: -10.250134468078613
    4. '_range' → logprob: -10.500134468078613
    5. '_in' → logprob: -11.125134468078613
    6. '_r' → logprob: -13.375134468078613
    7. '_row' → logprob: -13.375134468078613
    8. '_rows' → logprob: -13.625134468078613
    9. 'i' → logprob: -13.750134468078613
    10. '_j' → logprob: -13.875134468078613

Token 174: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5763205289840698
    2. 'in' → logprob: -0.8263205289840698
    3. 'range' → logprob: -7.951320648193359
    4. 'i' → logprob: -11.45132064819336
    5. '_' → logprob: -11.57632064819336
    6. ' ' → logprob: -13.07632064819336
    7. '(' → logprob: -13.20132064819336
    8. '  ' → logprob: -13.70132064819336
    9. ' range' → logprob: -13.95132064819336
    10. '(range' → logprob: -14.95132064819336

Token 175: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00023250321100931615
    2. ' range' → logprob: -8.375232696533203
    3. '_' → logprob: -13.875232696533203
    4. '	range' → logprob: -14.375232696533203
    5. '(range' → logprob: -15.250232696533203
    6. '_range' → logprob: -16.625232696533203
    7. 'repeat' → logprob: -17.125232696533203
    8. '[' → logprob: -17.625232696533203
    9. 'r' → logprob: -17.625232696533203
    10. 'rang' → logprob: -17.625232696533203

Token 176: '(rows' (ID: 69648)
  Prédit: '(rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rows' → logprob: -2.6895233531831764e-05
    2. '(' → logprob: -11.00002670288086
    3. 'rows' → logprob: -11.50002670288086
    4. '	rows' → logprob: -17.37502670288086
    5. '(
' → logprob: -18.00002670288086
    6. '(lines' → logprob: -19.00002670288086
    7. ' rows' → logprob: -19.12502670288086
    8. '(row' → logprob: -19.25002670288086
    9. '(columns' → logprob: -19.37502670288086
    10. '(r' → logprob: -20.12502670288086

Token 177: '_number' (ID: 11733)
  Prédit: '(rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rows' → logprob: -0.10293086618185043
    2. '_number' → logprob: -2.352930784225464
    3. 'rows' → logprob: -6.352931022644043
    4. 'number' → logprob: -7.352931022644043
    5. '(' → logprob: -8.727931022644043
    6. '(number' → logprob: -9.102931022644043
    7. '_' → logprob: -10.352931022644043
    8. '_)' → logprob: -11.727931022644043
    9. 'Number' → logprob: -11.977931022644043
    10. '_rows' → logprob: -12.602931022644043

Token 178: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.014349423348903656
    2. ']' → logprob: -4.264349460601807
    3. '()]' → logprob: -8.764348983764648
    4. ')' → logprob: -10.639348983764648
    5. ')]
' → logprob: -13.389348983764648
    6. ']
' → logprob: -13.889348983764648
    7. '])' → logprob: -14.139348983764648
    8. ')],' → logprob: -14.639348983764648
    9. '`]' → logprob: -15.139348983764648
    10. '])]' → logprob: -15.264348983764648

Token 179: 'd' (ID: 67)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.318681188422488e-05
    2. 'ndef' → logprob: -12.75001335144043
    3. 'D' → logprob: -13.37501335144043
    4. '```' → logprob: -13.50001335144043
    5. ' def' → logprob: -14.00001335144043
    6. '\' → logprob: -14.00001335144043
    7. '#' → logprob: -14.12501335144043
    8. 'd' → logprob: -14.25001335144043
    9. '
' → logprob: -14.50001335144043
    10. 'n' → logprob: -14.50001335144043

Token 180: 'ij' (ID: 681)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.0062060728669166565
    2. 'e' → logprob: -5.631206035614014
    3. 'efs' → logprob: -6.131206035614014
    4. 'eff' → logprob: -9.381206512451172
    5. 'efa' → logprob: -9.881206512451172
    6. '=' → logprob: -9.881206512451172
    7. ' =' → logprob: -9.881206512451172
    8. 'def' → logprob: -10.131206512451172
    9. 'eft' → logprob: -10.131206512451172
    10. 'efe' → logprob: -10.256206512451172

Token 181: ' =' (ID: 314)
  Prédit: 'ijkstra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.39134758710861206
    2. 'stra' → logprob: -1.3913476467132568
    3. 'ik' → logprob: -3.891347646713257
    4. 'ek' → logprob: -4.016347408294678
    5. '```' → logprob: -4.641347408294678
    6. '()' → logprob: -5.516347408294678
    7. 'str' → logprob: -5.641347408294678
    8. 'eka' → logprob: -6.141347408294678
    9. 'jk' → logprob: -6.766347408294678
    10. 's' → logprob: -6.766347408294678

Token 182: ' [(' (ID: 43900)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.6357128620147705
    2. 'deque' → logprob: -2.0107128620147705
    3. ' defaultdict' → logprob: -2.1357128620147705
    4. '(lambda' → logprob: -2.3857128620147705
    5. '[]' → logprob: -3.3857128620147705
    6. 'default' → logprob: -3.5107128620147705
    7. 'heap' → logprob: -4.385712623596191
    8. 'def' → logprob: -4.510712623596191
    9. 'ijkstra' → logprob: -4.510712623596191
    10. 'd' → logprob: -5.385712623596191

Token 183: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7872301936149597
    2. '-' → logprob: -1.0372302532196045
    3. '1' → logprob: -1.6622302532196045
    4. '(' → logprob: -7.287230014801025
    5. '(-' → logprob: -10.037230491638184
    6. ' ' → logprob: -12.162230491638184
    7. ' -' → logprob: -12.412230491638184
    8. '−' → logprob: -12.537230491638184
    9. '2' → logprob: -13.662230491638184
    10. ')' → logprob: -13.912230491638184

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008411973714828491
    2. '0' → logprob: -4.883411884307861
    3. ' ,' → logprob: -7.133411884307861
    4. ',
' → logprob: -13.38341236114502
    5. ',-' → logprob: -13.75841236114502
    6. '1' → logprob: -13.88341236114502
    7. '),(' → logprob: -14.25841236114502
    8. ')' → logprob: -14.38341236114502
    9. '),' → logprob: -14.63341236114502
    10. ',),' → logprob: -15.07091236114502

Token 185: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002715873415581882
    2. ' ' → logprob: -8.375271797180176
    3. '-' → logprob: -10.500271797180176
    4. '1' → logprob: -11.250271797180176
    5. ' -' → logprob: -15.375271797180176
    6. '   ' → logprob: -16.50027084350586
    7. '(' → logprob: -16.81277084350586
    8. '2' → logprob: -16.93777084350586
    9. '	' → logprob: -17.00027084350586
    10. ' ' → logprob: -17.06277084350586

Token 186: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.5014188799541444e-05
    2. ' ' → logprob: -10.125044822692871
    3. '-' → logprob: -12.750044822692871
    4. '1' → logprob: -13.250044822692871
    5. ' -' → logprob: -17.375045776367188
    6. '   ' → logprob: -17.437545776367188
    7. '
' → logprob: -17.687545776367188
    8. '  ' → logprob: -17.687545776367188
    9. '2' → logprob: -17.875045776367188
    10. '۰' → logprob: -17.937545776367188

Token 187: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0579131543636322
    2. '),
' → logprob: -3.307913064956665
    3. '),(' → logprob: -3.932913064956665
    4. '),

' → logprob: -9.807912826538086
    5. ')' → logprob: -10.807912826538086
    6. '),
' → logprob: -11.682912826538086
    7. ')]' → logprob: -13.432912826538086
    8. ',' → logprob: -13.432912826538086
    9. ' ),' → logprob: -13.682912826538086
    10. ',),' → logprob: -14.932912826538086

Token 188: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04878856614232063
    2. '(-' → logprob: -3.048788547515869
    3. ' (' → logprob: -8.548789024353027
    4. '0' → logprob: -12.298789024353027
    5. ' (-' → logprob: -12.798789024353027
    6. ' ' → logprob: -16.67378807067871
    7. '-' → logprob: -17.17378807067871
    8. '[' → logprob: -18.67378807067871
    9. '   ' → logprob: -19.42378807067871
    10. '	' → logprob: -19.79878807067871

Token 189: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3132631778717041
    2. '0' → logprob: -1.313263177871704
    3. ' ' → logprob: -14.813262939453125
    4. ' -' → logprob: -14.938262939453125
    5. '1' → logprob: -15.313262939453125
    6. '−' → logprob: -15.813262939453125
    7. '(' → logprob: -16.313262939453125
    8. ')' → logprob: -16.563262939453125
    9. '```' → logprob: -17.063262939453125
    10. '-)' → logprob: -17.563262939453125

Token 190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.070975071750581e-05
    2. ' ,' → logprob: -10.875030517578125
    3. '1' → logprob: -11.500030517578125
    4. '),' → logprob: -14.250030517578125
    5. ',
' → logprob: -14.750030517578125
    6. ',-' → logprob: -14.750030517578125
    7. ',

' → logprob: -17.375030517578125
    8. ' ' → logprob: -17.500030517578125
    9. '-' → logprob: -17.562530517578125
    10. ')' → logprob: -18.000030517578125

Token 191: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07890289276838303
    2. '-' → logprob: -2.5789029598236084
    3. ' ' → logprob: -11.453903198242188
    4. ' -' → logprob: -13.078903198242188
    5. '−' → logprob: -15.953903198242188
    6. '
' → logprob: -16.891403198242188
    7. '```' → logprob: -16.891403198242188
    8. '   ' → logprob: -16.953903198242188
    9. '–' → logprob: -17.141403198242188
    10. '0' → logprob: -17.578903198242188

Token 192: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002334568416699767
    2. '-' → logprob: -8.37523365020752
    3. ' ' → logprob: -12.75023365020752
    4. '
' → logprob: -17.000232696533203
    5. ' -' → logprob: -18.000232696533203
    6. '```' → logprob: -18.125232696533203
    7. '   ' → logprob: -18.750232696533203
    8. '

' → logprob: -19.000232696533203
    9. '(' → logprob: -19.000232696533203
    10. '  ' → logprob: -19.625232696533203

Token 193: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.000668713531922549
    2. '),
' → logprob: -8.0006685256958
    3. '),(' → logprob: -8.3756685256958
    4. ')' → logprob: -9.5006685256958
    5. ')]' → logprob: -11.2506685256958
    6. '],' → logprob: -12.0006685256958
    7. ' ),' → logprob: -12.5006685256958
    8. ',' → logprob: -13.1256685256958
    9. '),

' → logprob: -13.2506685256958
    10. ')],' → logprob: -15.0006685256958

Token 194: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -3.0590548703912646e-05
    2. '(' → logprob: -11.125030517578125
    3. '-' → logprob: -11.125030517578125
    4. ' (-' → logprob: -13.750030517578125
    5. '   ' → logprob: -18.750030517578125
    6. '	' → logprob: -19.250030517578125
    7. '
' → logprob: -19.625030517578125
    8. '[-' → logprob: -19.875030517578125
    9. 'd' → logprob: -20.875030517578125
    10. '#' → logprob: -21.250030517578125

Token 195: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.2855416066013277e-05
    2. ' ' → logprob: -10.375032424926758
    3. '0' → logprob: -13.750032424926758
    4. ',' → logprob: -15.687532424926758
    5. '   ' → logprob: -16.312532424926758
    6. '
' → logprob: -16.562532424926758
    7. '```' → logprob: -16.875032424926758
    8. '  ' → logprob: -17.500032424926758
    9. '2' → logprob: -17.750032424926758
    10. '

' → logprob: -17.875032424926758

Token 196: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005283685750328004
    2. '0' → logprob: -7.750528335571289
    3. ' ,' → logprob: -9.250528335571289
    4. '<|end|>' → logprob: -14.250528335571289
    5. ' ' → logprob: -14.750528335571289
    6. '1' → logprob: -15.875528335571289
    7. ',
' → logprob: -16.12552833557129
    8. '```' → logprob: -16.25052833557129
    9. '),' → logprob: -17.12552833557129
    10. '[' → logprob: -17.12552833557129

Token 197: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14267711341381073
    2. ' ' → logprob: -2.017677068710327
    3. '<|end|>' → logprob: -13.642677307128906
    4. ' ' → logprob: -14.642677307128906
    5. '```' → logprob: -16.580177307128906
    6. '  ' → logprob: -16.767677307128906
    7. '۰' → logprob: -16.892677307128906
    8. ' 
' → logprob: -17.205177307128906
    9. ')' → logprob: -17.517677307128906
    10. ',' → logprob: -17.642677307128906

Token 198: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019291093340143561
    2. ' ' → logprob: -6.25192928314209
    3. ' ' → logprob: -15.93942928314209
    4. ',' → logprob: -16.189428329467773
    5. '```' → logprob: -16.814428329467773
    6. ')' → logprob: -17.064428329467773
    7. '1' → logprob: -17.064428329467773
    8. '۰' → logprob: -17.439428329467773
    9. '-' → logprob: -18.001928329467773
    10. '  ' → logprob: -18.001928329467773

Token 199: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.000241801084484905
    2. ')]' → logprob: -8.750242233276367
    3. ')' → logprob: -9.625242233276367
    4. '),(' → logprob: -11.750242233276367
    5. ' ),' → logprob: -12.625242233276367
    6. '),
' → logprob: -13.125242233276367
    7. '],' → logprob: -13.125242233276367
    8. ',' → logprob: -13.375242233276367
    9. '),

' → logprob: -15.625242233276367
    10. '},' → logprob: -16.125242233276367

Token 200: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14305895566940308
    2. ' (' → logprob: -2.018059015274048
    3. '0' → logprob: -7.893058776855469
    4. ' ' → logprob: -11.643058776855469
    5. ')' → logprob: -13.518058776855469
    6. ',' → logprob: -15.893058776855469
    7. ' ' → logprob: -16.76805877685547
    8. ']' → logprob: -17.45555877685547
    9. '(
' → logprob: -17.64305877685547
    10. '' → logprob: -17.76805877685547

Token 201: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018565983918961138
    2. ' ' → logprob: -8.6251859664917
    3. '-' → logprob: -13.2501859664917
    4. '```' → logprob: -13.6251859664917
    5. '(' → logprob: -14.8126859664917
    6. ' ' → logprob: -15.0001859664917
    7. '1' → logprob: -15.1251859664917
    8. '00' → logprob: -15.1251859664917
    9. ')' → logprob: -15.3126859664917
    10. '۰' → logprob: -15.7501859664917

Token 202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00042662365012802184
    2. ',-' → logprob: -8.125426292419434
    3. '-' → logprob: -9.125426292419434
    4. ' ,' → logprob: -11.000426292419434
    5. ' -' → logprob: -13.000426292419434
    6. ',
' → logprob: -13.625426292419434
    7. ' ,-' → logprob: -14.750426292419434
    8. '1' → logprob: -15.500426292419434
    9. '```' → logprob: -15.500426292419434
    10. '   ' → logprob: -15.875426292419434

Token 203: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.7697225252486533e-06
    2. '1' → logprob: -13.000003814697266
    3. ' -' → logprob: -13.500003814697266
    4. '```' → logprob: -17.750003814697266
    5. '-
' → logprob: -18.375003814697266
    6. ')' → logprob: -18.500003814697266
    7. '−' → logprob: -18.625003814697266
    8. ' ' → logprob: -19.312503814697266
    9. '‑' → logprob: -19.437503814697266
    10. ')-' → logprob: -19.500003814697266

Token 204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.869017852295656e-06
    2. ')]' → logprob: -12.500006675720215
    3. ' ' → logprob: -13.250006675720215
    4. '   ' → logprob: -14.875006675720215
    5. ')' → logprob: -15.000006675720215
    6. '```' → logprob: -15.625006675720215
    7. ')]
' → logprob: -16.12500762939453
    8. '
' → logprob: -16.62500762939453
    9. '  ' → logprob: -17.62500762939453
    10. '')]' → logprob: -18.18750762939453

Token 205: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0016941038193181157
    2. '),' → logprob: -6.876694202423096
    3. ')' → logprob: -7.376694202423096
    4. ']' → logprob: -10.876693725585938
    5. ' )' → logprob: -12.501693725585938
    6. ')]
' → logprob: -12.501693725585938
    7. ')],' → logprob: -13.501693725585938
    8. '')]' → logprob: -13.501693725585938
    9. ')}' → logprob: -13.876693725585938
    10. '))' → logprob: -14.126693725585938

Token 206: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7992121577262878
    2. 'def' → logprob: -0.7992121577262878
    3. 'd' → logprob: -2.6742122173309326
    4. 'class' → logprob: -4.0492119789123535
    5. 'N' → logprob: -5.2992119789123535
    6. '#' → logprob: -5.6742119789123535
    7. 'a' → logprob: -6.4242119789123535
    8. 'D' → logprob: -6.5492119789123535
    9. 's' → logprob: -7.2992119789123535
    10. 'x' → logprob: -7.7992119789123535

Token 207: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.11767507344484329
    2. ' solve' → logprob: -2.3676750659942627
    3. 'main' → logprob: -5.117675304412842
    4. 'solve' → logprob: -5.242675304412842
    5. ' bfs' → logprob: -5.992675304412842
    6. ' ' → logprob: -6.617675304412842
    7. ' dfs' → logprob: -6.742675304412842
    8. ' d' → logprob: -7.367675304412842
    9. 'd' → logprob: -9.867674827575684
    10. 'dfs' → logprob: -10.117674827575684

Token 208: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.4153549020411447e-05
    2. ' ():' → logprob: -11.25002384185791
    3. '()' → logprob: -12.12502384185791
    4. '(' → logprob: -12.25002384185791
    5. '():
' → logprob: -14.37502384185791
    6. '(:' → logprob: -16.250024795532227
    7. ':' → logprob: -16.625024795532227
    8. '(":' → logprob: -18.375024795532227
    9. '()(' → logprob: -18.625024795532227
    10. ' ()' → logprob: -19.625024795532227

Token 209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029835760593414307
    2. '    ' → logprob: -4.6548357009887695
    3. 'n' → logprob: -5.4048357009887695
    4. 'input' → logprob: -5.7798357009887695
    5. 'x' → logprob: -6.4048357009887695
    6. ' ' → logprob: -6.5298357009887695
    7. '<|end|>' → logprob: -6.7798357009887695
    8. 'i' → logprob: -7.1548357009887695
    9. ' input' → logprob: -7.4048357009887695
    10. 'a' → logprob: -7.4048357009887695

Token 210: ' x' (ID: 1215)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.053109172731637955
    2. 'n' → logprob: -3.3031091690063477
    3. ' ' → logprob: -4.428109169006348
    4. ' pass' → logprob: -6.678109169006348
    5. ' r' → logprob: -7.178109169006348
    6. ' data' → logprob: -8.678109169006348
    7. 'r' → logprob: -9.178109169006348
    8. ' N' → logprob: -9.303109169006348
    9. 'data' → logprob: -9.428109169006348
    10. '   ' → logprob: -9.553109169006348

Token 211: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019946565851569176
    2. ',y' → logprob: -5.019946575164795
    3. ' ,' → logprob: -5.019946575164795
    4. ' =' → logprob: -5.144946575164795
    5. '=' → logprob: -7.519946575164795
    6. 'y' → logprob: -9.769946098327637
    7. '   ' → logprob: -10.644946098327637
    8. '=int' → logprob: -10.644946098327637
    9. ',n' → logprob: -11.894946098327637
    10. '_,' → logprob: -12.144946098327637

Token 212: ',z' (ID: 54920)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3902967572212219
    2. ' =' → logprob: -1.1402966976165771
    3. ',' → logprob: -5.765296936035156
    4. '=int' → logprob: -9.140296936035156
    5. ')' → logprob: -9.515296936035156
    6. '=input' → logprob: -9.890296936035156
    7. ')=' → logprob: -11.515296936035156
    8. ' ,' → logprob: -11.890296936035156
    9. '   ' → logprob: -12.140296936035156
    10. ',x' → logprob: -12.765296936035156

Token 213: ',n' (ID: 18103)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.429181307554245
    2. ' =' → logprob: -1.0541813373565674
    3. ',' → logprob: -7.679181098937988
    4. '=int' → logprob: -11.429181098937988
    5. ')' → logprob: -12.679181098937988
    6. '=input' → logprob: -14.554181098937988
    7. ' =)' → logprob: -14.554181098937988
    8. ' ,' → logprob: -15.179181098937988
    9. ' ' → logprob: -15.429181098937988
    10. '.' → logprob: -15.679181098937988

Token 214: ',m' (ID: 26648)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5761992335319519
    2. '=' → logprob: -0.8261992335319519
    3. ',' → logprob: -8.451199531555176
    4. '   ' → logprob: -10.326199531555176
    5. '=input' → logprob: -12.201199531555176
    6. '=int' → logprob: -12.951199531555176
    7. ' ' → logprob: -13.326199531555176
    8. '    ' → logprob: -14.076199531555176
    9. ' =
' → logprob: -14.701199531555176
    10. '  ' → logprob: -14.826199531555176

Token 215: ',s' (ID: 20379)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03698708862066269
    2. ' =' → logprob: -3.411987066268921
    3. ',' → logprob: -5.7869873046875
    4. ',x' → logprob: -10.0369873046875
    5. ',k' → logprob: -10.9119873046875
    6. ',p' → logprob: -10.9119873046875
    7. ' ' → logprob: -10.9119873046875
    8. ',n' → logprob: -11.1619873046875
    9. '=input' → logprob: -11.2869873046875
    10. ',a' → logprob: -11.4119873046875

Token 216: ',t' (ID: 26927)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.44898292422294617
    2. '=' → logprob: -1.4489829540252686
    3. ',' → logprob: -2.0739829540252686
    4. '   ' → logprob: -7.1989827156066895
    5. ' ' → logprob: -8.948983192443848
    6. ' ,' → logprob: -9.698983192443848
    7. '  ' → logprob: -10.073983192443848
    8. ',s' → logprob: -10.073983192443848
    9. '    ' → logprob: -10.323983192443848
    10. '=input' → logprob: -10.573983192443848

Token 217: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7451072931289673
    2. '=' → logprob: -0.9951072931289673
    3. ',' → logprob: -1.8701072931289673
    4. '   ' → logprob: -7.245107173919678
    5. ' ,' → logprob: -7.870107173919678
    6. ' ' → logprob: -8.495107650756836
    7. '  ' → logprob: -10.245107650756836
    8. ')' → logprob: -10.620107650756836
    9. ' =
' → logprob: -10.870107650756836
    10. '    ' → logprob: -10.870107650756836

Token 218: 'MI' (ID: 15470)
  Prédit: 'MI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MI' → logprob: -0.0241206306964159
    2. ' MI' → logprob: -3.774120569229126
    3. 'II' → logprob: -7.399120807647705
    4. 'map' → logprob: -9.149120330810547
    5. ' map' → logprob: -9.399120330810547
    6. 'LI' → logprob: -10.024120330810547
    7. ' II' → logprob: -11.774120330810547
    8. ' ' → logprob: -11.774120330810547
    9. 'MF' → logprob: -12.274120330810547
    10. '0' → logprob: -13.024120330810547

Token 219: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.4894986785948277e-05
    2. '(' → logprob: -10.875044822692871
    3. ' ()' → logprob: -11.875044822692871
    4. '()
' → logprob: -12.125044822692871
    5. '();' → logprob: -12.250044822692871
    6. '(),' → logprob: -12.500044822692871
    7. ')' → logprob: -12.875044822692871
    8. ',' → logprob: -14.625044822692871
    9. '())' → logprob: -14.625044822692871
    10. '():' → logprob: -14.625044822692871

Token 220: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15359683334827423
    2. '<|end|>' → logprob: -2.028596878051758
    3. ')' → logprob: -6.403596878051758
    4. ',' → logprob: -6.778596878051758
    5. ' 
' → logprob: -6.778596878051758
    6. ':' → logprob: -6.778596878051758
    7. '\n' → logprob: -7.028596878051758
    8. '#' → logprob: -7.028596878051758
    9. '    
' → logprob: -7.028596878051758
    10. '   ' → logprob: -7.028596878051758

Token 221: ' s' (ID: 265)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.39479589462280273
    2. 'dp' → logprob: -2.2697958946228027
    3. 'dist' → logprob: -2.6447958946228027
    4. '
' → logprob: -3.0197958946228027
    5. 'g' → logprob: -3.2697958946228027
    6. ' 
' → logprob: -4.269795894622803
    7. '   ' → logprob: -4.394795894622803
    8. '    
' → logprob: -4.769795894622803
    9. ' graph' → logprob: -5.019795894622803
    10. 'd' → logprob: -5.144795894622803

Token 222: ',t' (ID: 26927)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37481823563575745
    2. ',t' → logprob: -2.1248183250427246
    3. '+=' → logprob: -2.7498183250427246
    4. '-=' → logprob: -3.4998183250427246
    5. '=' → logprob: -3.9998183250427246
    6. 't' → logprob: -4.499818325042725
    7. ' +=' → logprob: -4.624818325042725
    8. ' -=' → logprob: -4.624818325042725
    9. ' ,' → logprob: -4.749818325042725
    10. ',m' → logprob: -4.874818325042725

Token 223: '=s' (ID: 32455)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.40325096249580383
    2. '=' → logprob: -1.1532509326934814
    3. ' =' → logprob: -4.4032511711120605
    4. ',s' → logprob: -6.4032511711120605
    5. '+=' → logprob: -7.7782511711120605
    6. '+' → logprob: -7.7782511711120605
    7. ' ,' → logprob: -8.403250694274902
    8. ')' → logprob: -8.528250694274902
    9. ',m' → logprob: -8.903250694274902
    10. ' +=' → logprob: -8.903250694274902

Token 224: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06323960423469543
    2. ' -' → logprob: -2.813239574432373
    3. ',' → logprob: -7.313239574432373
    4. '+' → logprob: -8.188240051269531
    5. '%' → logprob: -9.563240051269531
    6. ' ' → logprob: -10.313240051269531
    7. '.split' → logprob: -10.688240051269531
    8. 't' → logprob: -10.688240051269531
    9. ',s' → logprob: -10.938240051269531
    10. '0' → logprob: -11.063240051269531

Token 225: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1398757123970427e-05
    2. ' ' → logprob: -11.500011444091797
    3. ',' → logprob: -14.500011444091797
    4. '<|end|>' → logprob: -14.500011444091797
    5. '2' → logprob: -17.000011444091797
    6. '[' → logprob: -17.625011444091797
    7. '.' → logprob: -17.875011444091797
    8. '0' → logprob: -18.250011444091797
    9. '<|end|>' → logprob: -18.750011444091797
    10. 'int' → logprob: -19.000011444091797

Token 226: ',t' (ID: 26927)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6538050770759583
    2. ',t' → logprob: -0.9038050770759583
    3. ',m' → logprob: -3.5288050174713135
    4. '<|end|>' → logprob: -4.153805255889893
    5. 'm' → logprob: -4.528805255889893
    6. '
' → logprob: -5.028805255889893
    7. ',n' → logprob: -5.153805255889893
    8. ';t' → logprob: -6.278805255889893
    9. ',s' → logprob: -6.528805255889893
    10. 't' → logprob: -6.528805255889893

Token 227: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0004195906512904912
    2. '<|end|>' → logprob: -8.125419616699219
    3. ' -' → logprob: -9.125419616699219
    4. '<|end|>' → logprob: -12.625419616699219
    5. '1' → logprob: -12.750419616699219
    6. '-
' → logprob: -12.875419616699219
    7. '#' → logprob: -13.375419616699219
    8. ')' → logprob: -14.000419616699219
    9. '0' → logprob: -14.250419616699219
    10. '[' → logprob: -14.625419616699219

Token 228: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. '<|end|>' → logprob: -12.750003814697266
    3. ' ' → logprob: -14.375003814697266
    4. '<|end|>' → logprob: -17.375003814697266
    5. '```' → logprob: -18.250003814697266
    6. '2' → logprob: -19.375003814697266
    7. '(' → logprob: -19.937503814697266
    8. '   ' → logprob: -20.187503814697266
    9. '=' → logprob: -20.437503814697266
    10. '0' → logprob: -20.437503814697266

Token 229: '+n' (ID: 87683)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.053073450922966
    2. '<|end|>' → logprob: -3.5530734062194824
    3. '   ' → logprob: -3.9280734062194824
    4. '    
' → logprob: -6.303073406219482
    5. 'n' → logprob: -7.803073406219482
    6. 'def' → logprob: -8.80307388305664
    7. '<|end|>' → logprob: -8.80307388305664
    8. '```' → logprob: -9.05307388305664
    9. '
' → logprob: -9.30307388305664
    10. 'newline' → logprob: -9.42807388305664

Token 230: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06226074695587158
    2. '
' → logprob: -3.937260627746582
    3. 'm' → logprob: -4.187260627746582
    4. ')' → logprob: -5.062260627746582
    5. '    
' → logprob: -5.062260627746582
    6. '<|end|>' → logprob: -5.562260627746582
    7. 'n' → logprob: -5.937260627746582
    8. '    ' → logprob: -7.562260627746582
    9. '  
' → logprob: -7.562260627746582
    10. ',' → logprob: -7.687260627746582

Token 231: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7721483111381531
    2. '<|end|>' → logprob: -0.7721483111381531
    3. '   ' → logprob: -2.772148370742798
    4. '    
' → logprob: -5.272148132324219
    5. '<|end|>' → logprob: -6.522148132324219
    6. ',' → logprob: -6.772148132324219
    7. 'n' → logprob: -7.022148132324219
    8. 'newline' → logprob: -7.272148132324219
    9. ')' → logprob: -7.522148132324219
    10. ' 
' → logprob: -7.522148132324219

Token 232: ' ito' (ID: 19533)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.23135855793952942
    2. 'g' → logprob: -1.981358528137207
    3. 'dist' → logprob: -4.231358528137207
    4. 'dp' → logprob: -4.356358528137207
    5. ' graph' → logprob: -4.731358528137207
    6. '   ' → logprob: -4.981358528137207
    7. 'adj' → logprob: -5.606358528137207
    8. '
' → logprob: -5.606358528137207
    9. 'q' → logprob: -6.106358528137207
    10. 'G' → logprob: -6.106358528137207

Token 233: 'ab' (ID: 378)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5898308753967285
    2. 'ol' → logprob: -0.9648308753967285
    3. 'ols' → logprob: -2.8398308753967285
    4. 'rl' → logprob: -5.8398308753967285
    5. 'l' → logprob: -6.0898308753967285
    6. 'rs' → logprob: -8.46483039855957
    7. 'ls' → logprob: -8.46483039855957
    8. 'p' → logprob: -9.46483039855957
    9. 'range' → logprob: -9.46483039855957
    10. ' =' → logprob: -9.83983039855957

Token 234: '=[]
' (ID: 63466)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9736872315406799
    2. '(range' → logprob: -2.098687171936035
    3. '(lambda' → logprob: -2.098687171936035
    4. '=' → logprob: -2.473687171936035
    5. ' =' → logprob: -2.473687171936035
    6. '()' → logprob: -2.598687171936035
    7. '(n' → logprob: -3.473687171936035
    8. '=lambda' → logprob: -3.473687171936035
    9. 'r' → logprob: -4.348687171936035
    10. 'range' → logprob: -4.598687171936035

Token 235: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8150822520256042
    2. 'for' → logprob: -0.8150822520256042
    3. '[]' → logprob: -3.065082311630249
    4. '[' → logprob: -3.690082311630249
    5. '<|end|>' → logprob: -4.19008207321167
    6. ' ' → logprob: -4.44008207321167
    7. '   ' → logprob: -5.44008207321167
    8. '(' → logprob: -6.06508207321167
    9. ')' → logprob: -6.31508207321167
    10. ' []' → logprob: -6.56508207321167

Token 236: ' to' (ID: 316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005977381486445665
    2. ' for' → logprob: -5.130977153778076
    3. '   ' → logprob: -10.880977630615234
    4. 'graph' → logprob: -11.255977630615234
    5. '[' → logprob: -12.380977630615234
    6. 'n' → logprob: -13.255977630615234
    7. 'edges' → logprob: -13.380977630615234
    8. '[]' → logprob: -13.380977630615234
    9. 'range' → logprob: -13.505977630615234
    10. 's' → logprob: -14.380977630615234

Token 237: '1' (ID: 16)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.061819322407245636
    2. 'b' → logprob: -3.436819314956665
    3. 'a' → logprob: -5.311819553375244
    4. '=' → logprob: -5.686819553375244
    5. 'ne' → logprob: -5.811819553375244
    6. '_ab' → logprob: -5.811819553375244
    7. '=[]' → logprob: -6.061819553375244
    8. 'p' → logprob: -6.436819553375244
    9. '=[]
' → logprob: -7.061819553375244
    10. ' =' → logprob: -7.186819553375244

Token 238: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7831355333328247
    2. 'ab' → logprob: -1.5331355333328247
    3. 'a' → logprob: -1.7831355333328247
    4. 'b' → logprob: -2.283135414123535
    5. '=[]' → logprob: -4.033135414123535
    6. '2' → logprob: -4.033135414123535
    7. ' =' → logprob: -4.408135414123535
    8. '[]' → logprob: -5.783135414123535
    9. 'c' → logprob: -6.408135414123535
    10. 'f' → logprob: -7.408135414123535

Token 239: 'default' (ID: 4211)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12479233741760254
    2. '[]' → logprob: -2.6247923374176025
    3. 'default' → logprob: -3.4997923374176025
    4. '{}' → logprob: -4.374792098999023
    5. '{' → logprob: -7.124792098999023
    6. ' [[]' → logprob: -8.374792098999023
    7. ' defaultdict' → logprob: -8.374792098999023
    8. '[int' → logprob: -8.749792098999023
    9. '[n' → logprob: -9.124792098999023
    10. '[[' → logprob: -9.624792098999023

Token 240: 'dict' (ID: 20993)
  Prédit: 'dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: 0.0
    2. 'dic' → logprob: -18.0
    3. ' dict' → logprob: -18.125
    4. 'ct' → logprob: -19.0
    5. 'ict' → logprob: -19.625
    6. 'list' → logprob: -20.375
    7. 'Dict' → logprob: -20.5
    8. 'def' → logprob: -21.25
    9. 'd' → logprob: -21.375
    10. 'dist' → logprob: -22.0

Token 241: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.08268455415964127
    2. 'list' → logprob: -2.8326845169067383
    3. '(lambda' → logprob: -4.957684516906738
    4. '(int' → logprob: -5.457684516906738
    5. 'int' → logprob: -5.832684516906738
    6. '(set' → logprob: -5.832684516906738
    7. '<int' → logprob: -5.832684516906738
    8. 'set' → logprob: -8.582684516906738
    9. 'lambda' → logprob: -9.582684516906738
    10. 'deque' → logprob: -9.707684516906738

Token 242: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000340945553034544
    2. ')
' → logprob: -8.000341415405273
    3. ' )' → logprob: -12.875341415405273
    4. ')

' → logprob: -14.250341415405273
    5. '   ' → logprob: -14.875341415405273
    6. '))' → logprob: -15.125341415405273
    7. 'def' → logprob: -15.250341415405273
    8. ')
' → logprob: -15.375341415405273
    9. ' ' → logprob: -15.875341415405273
    10. ')#' → logprob: -16.375341415405273

Token 243: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07277056574821472
    2. '<|end|>' → logprob: -3.322770595550537
    3. ' ' → logprob: -4.197770595550537
    4. '    
' → logprob: -5.322770595550537
    5. ')' → logprob: -5.447770595550537
    6. ' for' → logprob: -6.322770595550537
    7. '  ' → logprob: -6.697770595550537
    8. '    ' → logprob: -6.697770595550537
    9. '  
' → logprob: -7.072770595550537
    10. ' 
' → logprob: -7.072770595550537

Token 244: ' to' (ID: 316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00043794067460112274
    2. ' for' → logprob: -8.00043773651123
    3. '   ' → logprob: -9.50043773651123
    4. 'edges' → logprob: -11.50043773651123
    5. 'to' (adapté à ' to') → logprob: -13.25043773651123
    6. 'from' → logprob: -13.62543773651123
    7. 'edge' → logprob: -13.75043773651123
    8. 'graph' → logprob: -14.00043773651123
    9. '	for' → logprob: -14.00043773651123
    10. 'ab' → logprob: -14.25043773651123

Token 245: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7563020586967468
    2. 'ab' → logprob: -1.0063021183013916
    3. '1' → logprob: -2.0063021183013916
    4. '=' → logprob: -4.0063018798828125
    5. 'b' → logprob: -4.8813018798828125
    6. '0' → logprob: -6.5063018798828125
    7. 'a' → logprob: -7.2563018798828125
    8. ' =' → logprob: -7.5063018798828125
    9. '=[]' → logprob: -7.8813018798828125
    10. 'abc' → logprob: -8.631301879882812

Token 246: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.4153549020411447e-05
    2. ' =' → logprob: -11.12502384185791
    3. '=lambda' → logprob: -12.87502384185791
    4. 'default' → logprob: -13.00002384185791
    5. '[' → logprob: -13.12502384185791
    6. '1' → logprob: -13.75002384185791
    7. '=[]' → logprob: -14.62502384185791
    8. 'def' → logprob: -14.75002384185791
    9. '2' → logprob: -16.875024795532227
    10. 'a' → logprob: -16.875024795532227

Token 247: 'default' (ID: 4211)
  Prédit: 'default'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -7.226628895296017e-06
    2. 'list' → logprob: -12.375007629394531
    3. 'def' → logprob: -13.250007629394531
    4. '(default' → logprob: -14.500007629394531
    5. ' defaultdict' → logprob: -15.125007629394531
    6. 'set' → logprob: -15.750007629394531
    7. '[]' → logprob: -16.25000762939453
    8. '[' → logprob: -16.37500762939453
    9. ''default' → logprob: -17.50000762939453
    10. '"default' → logprob: -17.75000762939453

Token 248: 'dict' (ID: 20993)
  Prédit: 'dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -3.6312321753939614e-05
    2. 'list' → logprob: -10.250036239624023
    3. ' dict' → logprob: -14.500036239624023
    4. '(dict' → logprob: -15.500036239624023
    5. 'ict' → logprob: -16.250036239624023
    6. 'Dict' → logprob: -17.875036239624023
    7. 'dic' → logprob: -19.625036239624023
    8. '(list' → logprob: -20.375036239624023
    9. 'ct' → logprob: -20.500036239624023
    10. 'int' → logprob: -21.000036239624023

Token 249: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.103028304874897
    2. 'list' → logprob: -2.4780282974243164
    3. '(int' → logprob: -4.603028297424316
    4. 'int' → logprob: -6.353028297424316
    5. '(set' → logprob: -7.103028297424316
    6. '(lambda' → logprob: -7.103028297424316
    7. '=list' → logprob: -8.478028297424316
    8. 'set' → logprob: -9.228028297424316
    9. ')' → logprob: -9.478028297424316
    10. 'lambda' → logprob: -10.603028297424316

Token 250: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005028736195527017
    2. ')
' → logprob: -8.125502586364746
    3. '   ' → logprob: -8.500502586364746
    4. ' )' → logprob: -13.125502586364746
    5. '())' → logprob: -15.125502586364746
    6. '()' → logprob: -15.625502586364746
    7. ')

' → logprob: -15.750502586364746
    8. ' ' → logprob: -16.125503540039062
    9. ')
' → logprob: -16.125503540039062
    10. 'def' → logprob: -16.500503540039062

Token 251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11729678511619568
    2. 'for' → logprob: -3.2422966957092285
    3. '<|end|>' → logprob: -3.3672966957092285
    4. ' for' → logprob: -3.4922966957092285
    5. '
' → logprob: -5.8672966957092285
    6. '    
' → logprob: -6.1172966957092285
    7. '	for' → logprob: -7.6172966957092285
    8. '<|end|>' → logprob: -8.117297172546387
    9. '  
' → logprob: -8.367297172546387
    10. 'n' → logprob: -9.117297172546387

Token 252: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.013398670591413975
    2. '   ' → logprob: -5.01339864730835
    3. ' for' → logprob: -5.01339864730835
    4. '	for' → logprob: -11.388399124145508
    5. '    
' → logprob: -15.138399124145508
    6. '
' → logprob: -15.138399124145508
    7. ' ' → logprob: -15.763399124145508
    8. 'def' → logprob: -16.013399124145508
    9. '```' → logprob: -16.388399124145508
    10. 'n' → logprob: -16.388399124145508

Token 253: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.16057027876377106
    2. '_' → logprob: -1.9105702638626099
    3. ' i' → logprob: -8.41057014465332
    4. '_i' → logprob: -9.03557014465332
    5. 'i' → logprob: -12.78557014465332
    6. ' ' → logprob: -14.41057014465332
    7. '__' → logprob: -14.53557014465332
    8. ' __' → logprob: -15.28557014465332
    9. '_=' → logprob: -15.78557014465332
    10. ' _
' → logprob: -16.78557014465332

Token 254: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08911983668804169
    2. 'in' → logprob: -2.4641199111938477
    3. ' ' → logprob: -9.714119911193848
    4. 'n' → logprob: -9.964119911193848
    5. '_' → logprob: -10.339119911193848
    6. ',' → logprob: -11.214119911193848
    7. ' _' → logprob: -11.714119911193848
    8. ',n' → logprob: -12.589119911193848
    9. '	in' → logprob: -12.714119911193848
    10. ' n' → logprob: -12.964119911193848

Token 255: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004622611217200756
    2. ' range' → logprob: -5.379622459411621
    3. 'r' → logprob: -14.254622459411621
    4. 'ra' → logprob: -14.879622459411621
    5. 'rang' → logprob: -14.879622459411621
    6. ' ' → logprob: -15.254622459411621
    7. '   ' → logprob: -15.754622459411621
    8. 'ran' → logprob: -15.879622459411621
    9. '	range' → logprob: -15.879622459411621
    10. '(range' → logprob: -16.129623413085938

Token 256: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.026951149106025696
    2. '(m' → logprob: -3.6519510746002197
    3. '(' → logprob: -7.401951313018799
    4. '(x' → logprob: -11.02695083618164
    5. '(s' → logprob: -12.02695083618164
    6. '(t' → logprob: -12.52695083618164
    7. '(z' → logprob: -12.52695083618164
    8. ' (' → logprob: -12.90195083618164
    9. 'n' → logprob: -13.02695083618164
    10. '((' → logprob: -13.27695083618164

Token 257: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00011391390580683947
    2. '):
' → logprob: -9.375113487243652
    3. '+' → logprob: -11.250113487243652
    4. ' ):' → logprob: -11.625113487243652
    5. ')' → logprob: -12.875113487243652
    6. '   ' → logprob: -13.750113487243652
    7. '+m' → logprob: -14.000113487243652
    8. '():' → logprob: -14.125113487243652
    9. '):
' → logprob: -15.125113487243652
    10. 'n' → logprob: -15.250113487243652

Token 258: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0053076352924108505
    2. '   ' → logprob: -5.380307674407959
    3. '<|end|>' → logprob: -8.7553071975708
    4. 'tokens' → logprob: -9.2553071975708
    5. ',' → logprob: -9.7553071975708
    6. 'a' → logprob: -9.8803071975708
    7. '	   ' → logprob: -10.0053071975708
    8. ' tokens' → logprob: -10.0053071975708
    9. 'to' → logprob: -10.5053071975708
    10. ' a' → logprob: -10.7553071975708

Token 259: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.7245859503746033
    2. '   ' → logprob: -1.349586009979248
    3. ' a' → logprob: -1.849586009979248
    4. 'u' → logprob: -3.599586009979248
    5. '       ' → logprob: -3.849586009979248
    6. ' u' → logprob: -4.349586009979248
    7. 'to' → logprob: -4.724586009979248
    8. 'l' → logprob: -5.224586009979248
    9. 'v' → logprob: -5.599586009979248
    10. 'ab' → logprob: -5.724586009979248

Token 260: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.6971493363380432
    2. '=' → logprob: -0.8221493363380432
    3. ',' → logprob: -2.8221492767333984
    4. 'b' → logprob: -6.572149276733398
    5. ' =' → logprob: -7.447149276733398
    6. ',n' → logprob: -8.447149276733398
    7. ',p' → logprob: -8.572149276733398
    8. '=input' → logprob: -9.447149276733398
    9. ',s' → logprob: -9.822149276733398
    10. ',v' → logprob: -9.822149276733398

Token 261: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -7.111979357432574e-05
    2. ' =' → logprob: -10.37507152557373
    3. ',' → logprob: -10.87507152557373
    4. '=input' → logprob: -11.62507152557373
    5. ',b' → logprob: -12.62507152557373
    6. 'b' → logprob: -13.75007152557373
    7. '=int' → logprob: -13.75007152557373
    8. '=b' → logprob: -14.00007152557373
    9. '=i' → logprob: -14.12507152557373
    10. '=list' → logprob: -14.37507152557373

Token 262: 'MI' (ID: 15470)
  Prédit: 'MI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MI' → logprob: -0.003875958500429988
    2. 'LI' → logprob: -6.128875732421875
    3. 'map' → logprob: -6.878875732421875
    4. ' MI' → logprob: -7.378875732421875
    5. ' map' → logprob: -10.628875732421875
    6. 'II' → logprob: -12.128875732421875
    7. 'MF' → logprob: -13.503875732421875
    8. ' ' → logprob: -14.253875732421875
    9. 'MAP' → logprob: -14.253875732421875
    10. '_MI' → logprob: -14.503875732421875

Token 263: '1' (ID: 16)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007146967691369355
    2. '()
' → logprob: -7.2507147789001465
    3. '()
' → logprob: -13.750714302062988
    4. '();' → logprob: -14.000714302062988
    5. '()]' → logprob: -14.500714302062988
    6. ' ()' → logprob: -14.875714302062988
    7. '()

' → logprob: -15.000714302062988
    8. '(' → logprob: -15.250714302062988
    9. '()\' → logprob: -15.250714302062988
    10. '()`' → logprob: -15.375714302062988

Token 264: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00033760786755010486
    2. '()
' → logprob: -8.000337600708008
    3. '())' → logprob: -14.125337600708008
    4. '()

' → logprob: -15.000337600708008
    5. ' ()' → logprob: -15.125337600708008
    6. '(' → logprob: -15.500337600708008
    7. '();' → logprob: -15.625337600708008
    8. '()
' → logprob: -15.875337600708008
    9. '()`' → logprob: -15.875337600708008
    10. '(),' → logprob: -16.250337600708008

Token 265: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014230913948267698
    2. '   ' → logprob: -7.501422882080078
    3. ',' → logprob: -8.126422882080078
    4. 'to' → logprob: -8.251422882080078
    5. '<|end|>' → logprob: -8.376422882080078
    6. ' to' → logprob: -10.626422882080078
    7. '	' → logprob: -11.001422882080078
    8. ',to' → logprob: -11.126422882080078
    9. ')' → logprob: -12.626422882080078
    10. '<|end|>' → logprob: -12.626422882080078

Token 266: ' ito' (ID: 19533)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.7072516679763794
    2. '   ' → logprob: -0.8322516679763794
    3. '       ' → logprob: -2.95725154876709
    4. ' to' → logprob: -3.95725154876709
    5. '	to' → logprob: -8.20725154876709
    6. 'ito' (adapté à ' ito') → logprob: -9.08225154876709
    7. 'if' → logprob: -9.20725154876709
    8. ' if' → logprob: -9.58225154876709
    9. '[to' → logprob: -9.70725154876709
    10. ' ' → logprob: -9.83225154876709

Token 267: 'ab' (ID: 378)
  Prédit: 'ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -3.2020991056924686e-05
    2. 'b' → logprob: -10.500032424926758
    3. 'a' → logprob: -12.750032424926758
    4. ' ab' → logprob: -14.250032424926758
    5. 'аб' → logprob: -15.125032424926758
    6. '_ab' → logprob: -15.125032424926758
    7. '(ab' → logprob: -16.375032424926758
    8. 'ba' → logprob: -17.125032424926758
    9. '=' → logprob: -17.500032424926758
    10. '```' → logprob: -17.500032424926758

Token 268: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004151649307459593
    2. '.' → logprob: -5.504151821136475
    3. '.ap' → logprob: -10.379151344299316
    4. '.app' → logprob: -10.629151344299316
    5. ').' → logprob: -12.754151344299316
    6. '.extend' → logprob: -12.754151344299316
    7. '.setdefault' → logprob: -12.879151344299316
    8. '[' → logprob: -13.004151344299316
    9. '].' → logprob: -13.379151344299316
    10. '.Append' → logprob: -13.629151344299316

Token 269: '([' (ID: 5194)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -4.23917081207037e-05
    2. '(' → logprob: -10.125041961669922
    3. '(a' → logprob: -13.000041961669922
    4. '([' → logprob: -17.125041961669922
    5. '(((' → logprob: -17.750041961669922
    6. '(
' → logprob: -18.250041961669922
    7. '((_' → logprob: -18.625041961669922
    8. '(ab' → logprob: -18.875041961669922
    9. '(b' → logprob: -19.375041961669922
    10. ' ((' → logprob: -19.750041961669922

Token 270: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -9.066919301403686e-05
    2. 'i' → logprob: -9.500090599060059
    3. ' a' → logprob: -12.125090599060059
    4. 's' → logprob: -12.625090599060059
    5. 'b' → logprob: -12.750090599060059
    6. '[a' → logprob: -13.750090599060059
    7. 'x' → logprob: -14.250090599060059
    8. '(a' → logprob: -14.375090599060059
    9. 't' → logprob: -14.625090599060059
    10. '0' → logprob: -15.250090599060059

Token 271: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.09032084792852402
    2. ',' → logprob: -2.4653208255767822
    3. ' ,' → logprob: -7.340321063995361
    4. '-' → logprob: -7.465321063995361
    5. 'b' → logprob: -9.590320587158203
    6. '+b' → logprob: -10.965320587158203
    7. ' -' → logprob: -11.340320587158203
    8. '+' → logprob: -11.840320587158203
    9. ',n' → logprob: -11.965320587158203
    10. ',y' → logprob: -12.090320587158203

Token 272: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0023141687270253897
    2. ',' → logprob: -6.37731409072876
    3. '])
' → logprob: -8.127314567565918
    4. ')' → logprob: -9.252314567565918
    5. ' ])' → logprob: -9.252314567565918
    6. ',n' → logprob: -10.252314567565918
    7. ']' → logprob: -11.002314567565918
    8. ')])' → logprob: -11.127314567565918
    9. ']);' → logprob: -12.002314567565918
    10. ',a' → logprob: -12.252314567565918

Token 273: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08856870979070663
    2. '       ' → logprob: -2.588568687438965
    3. 'for' → logprob: -4.963568687438965
    4. ' for' → logprob: -6.838568687438965
    5. '<|end|>' → logprob: -6.838568687438965
    6. 'to' → logprob: -8.963568687438965
    7. '
' → logprob: -9.338568687438965
    8. ',' → logprob: -9.338568687438965
    9. ' to' → logprob: -9.838568687438965
    10. '	for' → logprob: -10.338568687438965

Token 274: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' (adapté à ' to') → logprob: -0.08649381250143051
    2. '   ' → logprob: -2.586493730545044
    3. '       ' → logprob: -5.461493968963623
    4. ' to' → logprob: -5.711493968963623
    5. ' ' → logprob: -11.586493492126465
    6. '	to' → logprob: -12.086493492126465
    7. '           ' → logprob: -13.586493492126465
    8. 'for' → logprob: -13.586493492126465
    9. '    ' → logprob: -14.336493492126465
    10. '  ' → logprob: -14.336493492126465

Token 275: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. '2' → logprob: -13.125001907348633
    3. '```' → logprob: -18.500001907348633
    4. '１' → logprob: -18.875001907348633
    5. 'ab' → logprob: -19.125001907348633
    6. 'a' → logprob: -19.500001907348633
    7. '12' → logprob: -20.062501907348633
    8. '``' → logprob: -20.625001907348633
    9. '
' → logprob: -20.750001907348633
    10. 'b' → logprob: -20.750001907348633

Token 276: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.5236042737960815
    2. '[b' → logprob: -0.8986042737960815
    3. '[' → logprob: -7.898604393005371
    4. 'a' → logprob: -10.273604393005371
    5. '[i' → logprob: -10.898604393005371
    6. '[to' → logprob: -11.148604393005371
    7. 'b' → logprob: -11.273604393005371
    8. ' [' → logprob: -12.273604393005371
    9. '[s' → logprob: -12.398604393005371
    10. '][' → logprob: -12.398604393005371

Token 277: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -7.159660890465602e-05
    2. '.append' → logprob: -9.62507152557373
    3. ']' → logprob: -12.75007152557373
    4. '.' → logprob: -14.00007152557373
    5. 'append' → logprob: -14.50007152557373
    6. ' ].' → logprob: -14.62507152557373
    7. ').' → logprob: -15.00007152557373
    8. '.app' → logprob: -16.000072479248047
    9. ']).' → logprob: -16.375072479248047
    10. ''].' → logprob: -16.750072479248047

Token 278: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -6.749814019713085e-06
    2. ' append' → logprob: -12.000006675720215
    3. '.append' → logprob: -14.625006675720215
    4. 'appen' → logprob: -17.50000762939453
    5. '	append' → logprob: -18.87500762939453
    6. 'app' → logprob: -19.00000762939453
    7. '_append' → logprob: -19.00000762939453
    8. 'Append' → logprob: -19.12500762939453
    9. 'add' → logprob: -21.37500762939453
    10. ' ' → logprob: -21.62500762939453

Token 279: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.20655503869056702
    2. '(b' → logprob: -1.7065550088882446
    3. '((' → logprob: -5.456554889678955
    4. 'b' → logprob: -7.456554889678955
    5. 'i' → logprob: -9.081555366516113
    6. '(t' → logprob: -9.206555366516113
    7. '(' → logprob: -10.331555366516113
    8. '(len' → logprob: -10.956555366516113
    9. '(s' → logprob: -12.206555366516113
    10. '(a' → logprob: -12.581555366516113

Token 280: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001694580540060997
    2. ')
' → logprob: -6.501694679260254
    3. ' )' → logprob: -8.626694679260254
    4. ')
' → logprob: -12.501694679260254
    5. ')b' → logprob: -12.876694679260254
    6. '   ' → logprob: -13.626694679260254
    7. ' )
' → logprob: -13.626694679260254
    8. ')a' → logprob: -14.001694679260254
    9. ' ' → logprob: -14.876694679260254
    10. '       ' → logprob: -15.126694679260254

Token 281: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.2855416066013277e-05
    2. '   ' → logprob: -10.875032424926758
    3. '<|end|>' → logprob: -11.500032424926758
    4. '	' → logprob: -14.000032424926758
    5. ' ' → logprob: -14.625032424926758
    6. ',' → logprob: -14.625032424926758
    7. '           ' → logprob: -15.000032424926758
    8. '
' → logprob: -15.125032424926758
    9. ' to' → logprob: -15.375032424926758
    10. '      ' → logprob: -15.750032424926758

Token 282: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' (adapté à ' to') → logprob: -0.005690927151590586
    2. ' to' → logprob: -5.255691051483154
    3. '   ' → logprob: -8.380690574645996
    4. '       ' → logprob: -8.630690574645996
    5. 'b' → logprob: -10.005690574645996
    6. 't' → logprob: -14.130690574645996
    7. '           ' → logprob: -14.130690574645996
    8. '	to' → logprob: -14.130690574645996
    9. ' ' → logprob: -14.755690574645996
    10. ' b' → logprob: -14.880690574645996

Token 283: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01819559559226036
    2. 'b' → logprob: -4.018195629119873
    3. ' ' → logprob: -10.643195152282715
    4. 'ab' → logprob: -11.018195152282715
    5. '1' → logprob: -12.768195152282715
    6. ' b' → logprob: -14.143195152282715
    7. '
' → logprob: -14.643195152282715
    8. '  ' → logprob: -15.393195152282715
    9. '   ' → logprob: -15.643195152282715
    10. 's' → logprob: -15.893195152282715

Token 284: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.00019495772721711546
    2. '[a' → logprob: -9.375194549560547
    3. 'b' → logprob: -10.125194549560547
    4. '[' → logprob: -10.750194549560547
    5. '(b' → logprob: -10.875194549560547
    6. '[(' → logprob: -11.000194549560547
    7. '[s' → logprob: -12.875194549560547
    8. '```' → logprob: -13.500194549560547
    9. '   ' → logprob: -13.625194549560547
    10. '[[' → logprob: -13.875194549560547

Token 285: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0001875671005109325
    2. ']' → logprob: -9.250187873840332
    3. ').' → logprob: -10.250187873840332
    4. '.append' → logprob: -10.500187873840332
    5. '])' → logprob: -11.750187873840332
    6. ' ].' → logprob: -12.125187873840332
    7. '.' → logprob: -12.375187873840332
    8. '[i' → logprob: -12.750187873840332
    9. '[' → logprob: -13.375187873840332
    10. ''].' → logprob: -13.625187873840332

Token 286: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.857719275401905e-05
    2. 'appen' → logprob: -10.500038146972656
    3. ' append' → logprob: -12.125038146972656
    4. '.append' → logprob: -12.625038146972656
    5. 'pp' → logprob: -13.875038146972656
    6. '	append' → logprob: -14.750038146972656
    7. 'app' → logprob: -15.375038146972656
    8. 'prepend' → logprob: -15.500038146972656
    9. 'add' → logprob: -15.750038146972656
    10. 'a' → logprob: -16.750038146972656

Token 287: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00044556602369993925
    2. 'i' → logprob: -7.750445365905762
    3. '(' → logprob: -11.375445365905762
    4. ' i' → logprob: -13.000445365905762
    5. '(n' → logprob: -14.625445365905762
    6. '[i' → logprob: -14.750445365905762
    7. ' (' → logprob: -16.250446319580078
    8. '<|end|>' → logprob: -17.000446319580078
    9. '(
' → logprob: -17.125446319580078
    10. ',i' → logprob: -17.625446319580078

Token 288: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.176947600673884e-05
    2. ')
' → logprob: -10.875021934509277
    3. ' )' → logprob: -13.750021934509277
    4. ')return' → logprob: -14.750021934509277
    5. '   ' → logprob: -14.875021934509277
    6. '       ' → logprob: -15.000021934509277
    7. '<|end|>' → logprob: -16.12502098083496
    8. ')n' → logprob: -16.37502098083496
    9. '))' → logprob: -16.75002098083496
    10. '),' → logprob: -16.87502098083496

Token 289: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7111555337905884
    2. '   ' → logprob: -0.9611555337905884
    3. 'for' → logprob: -2.336155414581299
    4. '<|end|>' → logprob: -4.711155414581299
    5. '    
' → logprob: -4.961155414581299
    6. ' for' → logprob: -5.461155414581299
    7. 'def' → logprob: -5.586155414581299
    8. 'n' → logprob: -6.586155414581299
    9. ' 
' → logprob: -6.836155414581299
    10. '  
' → logprob: -7.461155414581299

Token 290: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.3312678337097168
    2. '   ' → logprob: -1.4562678337097168
    3. 'dist' → logprob: -1.8312678337097168
    4. 'dp' → logprob: -1.9562678337097168
    5. 'q' → logprob: -2.831267833709717
    6. 'g' → logprob: -2.956267833709717
    7. 'graph' → logprob: -3.331267833709717
    8. 'pq' → logprob: -4.456267833709717
    9. 'f' → logprob: -4.706267833709717
    10. 'd' → logprob: -5.081267833709717

Token 291: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.061992112547159195
    2. ' _' → logprob: -3.5619921684265137
    3. 'i' → logprob: -4.436992168426514
    4. ' a' → logprob: -5.436992168426514
    5. '_' → logprob: -5.436992168426514
    6. ' u' → logprob: -5.936992168426514
    7. ' j' → logprob: -6.186992168426514
    8. ' v' → logprob: -7.186992168426514
    9. ' x' → logprob: -7.186992168426514
    10. ' c' → logprob: -7.561992168426514

Token 292: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02651810646057129
    2. 'in' → logprob: -3.6515181064605713
    3. ',' → logprob: -9.651517868041992
    4. ' ' → logprob: -9.651517868041992
    5. 'n' → logprob: -11.276517868041992
    6. '   ' → logprob: -11.276517868041992
    7. ' ,' → logprob: -11.526517868041992
    8. '    ' → logprob: -12.151517868041992
    9. ',n' → logprob: -12.151517868041992
    10. '  ' → logprob: -12.401517868041992

Token 293: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03511057049036026
    2. ' range' → logprob: -3.5351104736328125
    3. 'to' → logprob: -5.2851104736328125
    4. 'ito' → logprob: -10.160110473632812
    5. 'ran' → logprob: -10.285110473632812
    6. 'ra' → logprob: -10.410110473632812
    7. ' to' → logprob: -10.535110473632812
    8. 'r' → logprob: -10.785110473632812
    9. '(range' → logprob: -11.035110473632812
    10. 'n' → logprob: -11.285110473632812

Token 294: '(n' (ID: 2406)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.12454482167959213
    2. '(n' → logprob: -2.624544858932495
    3. 'm' → logprob: -3.999544858932495
    4. '(' → logprob: -4.249544620513916
    5. ' m' → logprob: -4.874544620513916
    6. '(s' → logprob: -6.124544620513916
    7. ' (' → logprob: -7.624544620513916
    8. 'n' → logprob: -7.624544620513916
    9. ' n' → logprob: -8.124545097351074
    10. ' ' → logprob: -8.749545097351074

Token 295: ',n' (ID: 18103)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02703050896525383
    2. '):
' → logprob: -3.6520304679870605
    3. '   ' → logprob: -8.027030944824219
    4. '+' → logprob: -8.777030944824219
    5. ')' → logprob: -9.527030944824219
    6. ' ):' → logprob: -10.027030944824219
    7. ':' → logprob: -10.277030944824219
    8. '-' → logprob: -10.402030944824219
    9. ',' → logprob: -10.527030944824219
    10. ' ' → logprob: -11.777030944824219

Token 296: '+m' (ID: 139456)
  Prédit: '+m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+m' → logprob: -0.009813111275434494
    2. '+' → logprob: -4.75981330871582
    3. ' +' → logprob: -6.75981330871582
    4. '+
' → logprob: -10.88481330871582
    5. '+n' → logprob: -11.75981330871582
    6. 'm' → logprob: -12.00981330871582
    7. '
' → logprob: -13.38481330871582
    8. '+)' → logprob: -14.50981330871582
    9. '<m' → logprob: -14.63481330871582
    10. ' ' → logprob: -15.00981330871582

Token 297: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00023011912708170712
    2. '):
' → logprob: -9.125229835510254
    3. ' ):' → logprob: -10.125229835510254
    4. '+' → logprob: -10.625229835510254
    5. ']:' → logprob: -10.875229835510254
    6. ')' → logprob: -11.000229835510254
    7. ':' → logprob: -11.750229835510254
    8. '():' → logprob: -12.375229835510254
    9. ',' → logprob: -13.125229835510254
    10. ']):' → logprob: -13.250229835510254

Token 298: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11100293695926666
    2. 'a' → logprob: -2.8610029220581055
    3. ' a' → logprob: -3.8610029220581055
    4. ',a' → logprob: -4.4860029220581055
    5. '       ' → logprob: -5.1110029220581055
    6. 'u' → logprob: -5.7360029220581055
    7. ',' → logprob: -5.7360029220581055
    8. ' u' → logprob: -6.6110029220581055
    9. ',u' → logprob: -7.8610029220581055
    10. '	a' → logprob: -8.861002922058105

Token 299: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10337890684604645
    2. 'u' → logprob: -2.603379011154175
    3. '   ' → logprob: -4.353378772735596
    4. 'c' → logprob: -5.853378772735596
    5. ' a' → logprob: -5.978378772735596
    6. 's' → logprob: -6.353378772735596
    7. 'p' → logprob: -6.728378772735596
    8. 'x' → logprob: -7.103378772735596
    9. 'to' → logprob: -7.853378772735596
    10. ' u' → logprob: -8.103379249572754

Token 300: ',a' (ID: 26776)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0496522188186646
    2. ',a' → logprob: -1.1746522188186646
    3. ',' → logprob: -1.4246522188186646
    4. 'a' → logprob: -2.549652099609375
    5. ',c' → logprob: -5.549652099609375
    6. ',i' → logprob: -6.049652099609375
    7. ' =' → logprob: -6.049652099609375
    8. '=int' → logprob: -6.299652099609375
    9. ',s' → logprob: -6.424652099609375
    10. 's' → logprob: -7.174652099609375

Token 301: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00015717383939772844
    2. ',' → logprob: -9.000157356262207
    3. ' =' → logprob: -10.375157356262207
    4. '=M' → logprob: -14.625157356262207
    5. ',_' → logprob: -14.750157356262207
    6. ',M' → logprob: -15.125157356262207
    7. 'MI' → logprob: -15.250157356262207
    8. '=int' → logprob: -15.875157356262207
    9. '=input' → logprob: -16.12515640258789
    10. ',i' → logprob: -16.25015640258789

Token 302: 'MI' (ID: 15470)
  Prédit: 'MI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MI' → logprob: -5.431207682704553e-05
    2. ' MI' → logprob: -10.375054359436035
    3. 'LI' → logprob: -10.750054359436035
    4. 'int' → logprob: -14.625054359436035
    5. ' ' → logprob: -15.375054359436035
    6. '_MI' → logprob: -15.625054359436035
    7. '   ' → logprob: -15.750054359436035
    8. 'II' → logprob: -15.875054359436035
    9. 'I' → logprob: -16.87505340576172
    10. '*' → logprob: -17.00005340576172

Token 303: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014060820103622973
    2. '()' → logprob: -8.875140190124512
    3. '())' → logprob: -15.375140190124512
    4. '<|end|>' → logprob: -15.750140190124512
    5. '()
' → logprob: -16.750141143798828
    6. '()>' → logprob: -17.000141143798828
    7. '()<' → logprob: -17.125141143798828
    8. '(' → logprob: -17.125141143798828
    9. ')' → logprob: -17.250141143798828
    10. '();' → logprob: -17.500141143798828

Token 304: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00043567578541114926
    2. '()
' → logprob: -7.750435829162598
    3. '()]' → logprob: -13.000435829162598
    4. '();' → logprob: -14.875435829162598
    5. '()[' → logprob: -15.000435829162598
    6. '()\' → logprob: -15.000435829162598
    7. '()
' → logprob: -15.125435829162598
    8. '()

' → logprob: -15.500435829162598
    9. '()<' → logprob: -15.500435829162598
    10. '())' → logprob: -15.625435829162598

Token 305: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1401296705007553
    2. '<|end|>' → logprob: -2.640129566192627
    3. 'to' → logprob: -3.015129566192627
    4. '   ' → logprob: -6.140129566192627
    5. ')' → logprob: -6.265129566192627
    6. '
' → logprob: -6.515129566192627
    7. '[to' → logprob: -6.890129566192627
    8. ' to' → logprob: -6.890129566192627
    9. '<|end|>' → logprob: -7.015129566192627
    10. '(to' → logprob: -7.390129566192627

Token 306: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.955208420753479
    2. ' to' → logprob: -1.455208420753479
    3. 'to' → logprob: -1.580208420753479
    4. '       ' → logprob: -1.955208420753479
    5. 'ito' → logprob: -3.4552083015441895
    6. ' ito' → logprob: -6.5802083015441895
    7. '	to' → logprob: -8.455208778381348
    8. '    ' → logprob: -8.830208778381348
    9. ' it' → logprob: -8.955208778381348
    10. ' ' → logprob: -8.955208778381348

Token 307: '+=' (ID: 18287)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.116438627243042
    2. ',to' → logprob: -1.241438627243042
    3. ',b' → logprob: -1.616438627243042
    4. '=' → logprob: -2.491438627243042
    5. ',a' → logprob: -3.116438627243042
    6. 'to' → logprob: -3.616438627243042
    7. ' =' → logprob: -4.616438865661621
    8. ' ,' → logprob: -5.366438865661621
    9. '1' → logprob: -5.866438865661621
    10. ',s' → logprob: -6.491438865661621

Token 308: 'x' (ID: 87)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014051496051251888
    2. ' n' → logprob: -4.76405143737793
    3. 'z' → logprob: -5.63905143737793
    4. 'x' → logprob: -6.88905143737793
    5. 'y' → logprob: -7.76405143737793
    6. 't' → logprob: -9.51405143737793
    7. '	n' → logprob: -9.51405143737793
    8. '-n' → logprob: -9.88905143737793
    9. '1' → logprob: -10.13905143737793
    10. ' z' → logprob: -10.13905143737793

Token 309: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 310: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22112587094306946
    2. '
' → logprob: -1.846125841140747
    3. '   ' → logprob: -4.096126079559326
    4. ',' → logprob: -4.721126079559326
    5. 'b' → logprob: -5.221126079559326
    6. '<|end|>' → logprob: -5.846126079559326
    7. '	' → logprob: -6.346126079559326
    8. ' ' → logprob: -7.471126079559326
    9. '
' → logprob: -7.471126079559326
    10. 'to' → logprob: -7.596126079559326

Token 311: ' ito' (ID: 19533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2861633598804474
    2. 'b' → logprob: -1.911163330078125
    3. 'to' → logprob: -2.661163330078125
    4. 'ito' (adapté à ' ito') → logprob: -4.036163330078125
    5. '       ' → logprob: -4.786163330078125
    6. 's' → logprob: -5.911163330078125
    7. ' to' → logprob: -7.536163330078125
    8. 't' → logprob: -7.661163330078125
    9. '    ' → logprob: -8.536163330078125
    10. '
' → logprob: -8.786163330078125

Token 312: 'ab' (ID: 378)
  Prédit: 'ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -6.2729995988775045e-06
    2. 'аб' → logprob: -13.000006675720215
    3. 'b' → logprob: -13.500006675720215
    4. 'a' → logprob: -14.625006675720215
    5. '```' → logprob: -15.000006675720215
    6. '_ab' → logprob: -15.125006675720215
    7. '   ' → logprob: -15.625006675720215
    8. 'ob' → logprob: -15.750006675720215
    9. '#ab' → logprob: -16.1250057220459
    10. 'abcdefghijklmnopqrstuvwxyz' → logprob: -16.1250057220459

Token 313: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.3226136767771095e-05
    2. '.' → logprob: -10.125042915344238
    3. '.app' → logprob: -13.500042915344238
    4. 'append' → logprob: -13.750042915344238
    5. '[i' → logprob: -15.875042915344238
    6. '[-' → logprob: -15.875042915344238
    7. '.ap' → logprob: -16.000043869018555
    8. ' .' → logprob: -16.125043869018555
    9. '[' → logprob: -17.125043869018555
    10. '.setdefault' → logprob: -17.250043869018555

Token 314: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -3.9650025428272784e-05
    2. '[a' → logprob: -10.250040054321289
    3. '((' → logprob: -13.500040054321289
    4. '[b' → logprob: -13.750040054321289
    5. '(' → logprob: -14.250040054321289
    6. '(a' → logprob: -14.625040054321289
    7. '[' → logprob: -15.250040054321289
    8. '(([' → logprob: -15.875040054321289
    9. '([-' → logprob: -16.50004005432129
    10. ' ([' → logprob: -16.75004005432129

Token 315: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.273621405242011e-05
    2. 'b' → logprob: -10.625032424926758
    3. ' a' → logprob: -11.875032424926758
    4. '[a' → logprob: -14.250032424926758
    5. '   ' → logprob: -15.125032424926758
    6. '	a' → logprob: -15.250032424926758
    7. '#a' → logprob: -17.125032424926758
    8. ''a' → logprob: -17.250032424926758
    9. '0' → logprob: -17.750032424926758
    10. '(a' → logprob: -18.000032424926758

Token 316: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.0052534411661326885
    2. ',' → logprob: -5.255253314971924
    3. ' ,' → logprob: -11.255253791809082
    4. ',
' → logprob: -12.630253791809082
    5. 'b' → logprob: -13.755253791809082
    6. ',y' → logprob: -14.005253791809082
    7. ',a' → logprob: -14.380253791809082
    8. ',s' → logprob: -16.130252838134766
    9. '-' → logprob: -16.380252838134766
    10. ',n' → logprob: -16.630252838134766

Token 317: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0036842823028564453
    2. '])
' → logprob: -5.753684043884277
    3. '       ' → logprob: -8.253684043884277
    4. ')' → logprob: -8.503684043884277
    5. ')])' → logprob: -10.878684043884277
    6. ')
' → logprob: -11.503684043884277
    7. ' ])' → logprob: -12.128684043884277
    8. ']' → logprob: -13.128684043884277
    9. ')]' → logprob: -13.503684043884277
    10. '   ' → logprob: -13.753684043884277

Token 318: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010862581431865692
    2. 'to' → logprob: -4.885862350463867
    3. '   ' → logprob: -5.760862350463867
    4. ' to' → logprob: -9.760862350463867
    5. 'for' → logprob: -11.260862350463867
    6. '      ' → logprob: -11.635862350463867
    7. '           ' → logprob: -11.885862350463867
    8. ')' → logprob: -12.510862350463867
    9. '     ' → logprob: -12.885862350463867
    10. ' ' → logprob: -13.385862350463867

Token 319: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' (adapté à ' to') → logprob: -0.0001514557225164026
    2. ' to' → logprob: -9.375151634216309
    3. '   ' → logprob: -9.875151634216309
    4. '       ' → logprob: -11.125151634216309
    5. '
' → logprob: -15.125151634216309
    6. '	to' → logprob: -17.375150680541992
    7. '  ' → logprob: -17.500150680541992
    8. ' ' → logprob: -17.625150680541992
    9. '           ' → logprob: -18.000150680541992
    10. 't' → logprob: -18.000150680541992

Token 320: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22541403770446777
    2. '2' → logprob: -1.6004140377044678
    3. 'to' → logprob: -14.100414276123047
    4. '0' → logprob: -15.475414276123047
    5. 'ab' → logprob: -15.975414276123047
    6. 'a' → logprob: -16.725414276123047
    7. '```' → logprob: -17.350414276123047
    8. '3' → logprob: -17.725414276123047
    9. 'o' → logprob: -17.725414276123047
    10. '
' → logprob: -17.725414276123047

Token 321: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.023261435329914093
    2. '[b' → logprob: -3.773261547088623
    3. 'a' → logprob: -11.273261070251465
    4. '[' → logprob: -13.398261070251465
    5. 'b' → logprob: -13.398261070251465
    6. ' a' → logprob: -16.89826202392578
    7. '.setdefault' → logprob: -17.64826202392578
    8. '(a' → logprob: -17.77326202392578
    9. '```' → logprob: -17.89826202392578
    10. ' [' → logprob: -17.89826202392578

Token 322: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.039295028895139694
    2. '.append' → logprob: -3.289294958114624
    3. '.' → logprob: -6.789295196533203
    4. ']' → logprob: -10.164295196533203
    5. ' .' → logprob: -10.164295196533203
    6. ' ].' → logprob: -10.664295196533203
    7. '   ' → logprob: -11.664295196533203
    8. '.app' → logprob: -12.289295196533203
    9. ').' → logprob: -12.664295196533203
    10. '.ap' → logprob: -13.289295196533203

Token 323: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.1472419600977446e-06
    2. 'pp' → logprob: -14.375000953674316
    3. '.append' → logprob: -15.250000953674316
    4. ' append' → logprob: -15.625000953674316
    5. 'appen' → logprob: -17.125001907348633
    6. 'pend' → logprob: -17.625001907348633
    7. 'Append' → logprob: -18.250001907348633
    8. '	append' → logprob: -19.125001907348633
    9. 'app' → logprob: -20.125001907348633
    10. 'push' → logprob: -20.250001907348633

Token 324: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31341707706451416
    2. '(i' → logprob: -1.3134170770645142
    3. '[i' → logprob: -9.438417434692383
    4. ' i' → logprob: -9.563417434692383
    5. '	i' → logprob: -13.188417434692383
    6. '   ' → logprob: -13.938417434692383
    7. '{i' → logprob: -14.313417434692383
    8. ')i' → logprob: -14.438417434692383
    9. ',i' → logprob: -14.938417434692383
    10. ' (' → logprob: -15.188417434692383

Token 325: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16294972598552704
    2. ')
' → logprob: -1.9129496812820435
    3. '       ' → logprob: -5.912949562072754
    4. ')
' → logprob: -11.787949562072754
    5. '   ' → logprob: -12.287949562072754
    6. '<|end|>' → logprob: -13.662949562072754
    7. ' )' → logprob: -13.912949562072754
    8. ' ' → logprob: -14.662949562072754
    9. ')

' → logprob: -14.787949562072754
    10. ' )
' → logprob: -14.912949562072754

Token 326: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00016384923947043717
    2. '   ' → logprob: -9.375164031982422
    3. '<|end|>' → logprob: -9.625164031982422
    4. ')' → logprob: -12.375164031982422
    5. ' ' → logprob: -12.625164031982422
    6. ' to' → logprob: -13.375164031982422
    7. 'to' → logprob: -13.500164031982422
    8. '
' → logprob: -14.500164031982422
    9. '<|end|>' → logprob: -14.500164031982422
    10. '      ' → logprob: -14.875164031982422

Token 327: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' (adapté à ' to') → logprob: -0.00021951000962872058
    2. ' to' → logprob: -8.500219345092773
    3. '   ' → logprob: -11.500219345092773
    4. '       ' → logprob: -12.250219345092773
    5. '
' → logprob: -14.875219345092773
    6. 't' → logprob: -15.750219345092773
    7. '(to' → logprob: -16.250219345092773
    8. '  ' → logprob: -16.500219345092773
    9. '	to' → logprob: -16.500219345092773
    10. '[to' → logprob: -16.500219345092773

Token 328: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. 'b' → logprob: -18.375
    4. '1' → logprob: -18.5
    5. '
' → logprob: -20.375
    6. 'a' → logprob: -21.0
    7. 'to' → logprob: -21.375
    8. '   ' → logprob: -21.5
    9. '```' → logprob: -21.875
    10. '[b' → logprob: -22.0

Token 329: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -3.6789137084269896e-05
    2. 'b' → logprob: -10.25003719329834
    3. '[a' → logprob: -13.62503719329834
    4. '[' → logprob: -15.75003719329834
    5. '	b' → logprob: -17.125036239624023
    6. '```' → logprob: -18.000036239624023
    7. ' [' → logprob: -18.125036239624023
    8. ' b' → logprob: -18.125036239624023
    9. 'a' → logprob: -18.500036239624023
    10. '(b' → logprob: -19.250036239624023

Token 330: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.6949713230133057
    2. '.append' → logprob: -0.6949713230133057
    3. '.' → logprob: -6.944971084594727
    4. ').' → logprob: -7.194971084594727
    5. ' .' → logprob: -9.694971084594727
    6. ' ].' → logprob: -11.069971084594727
    7. ']' → logprob: -11.444971084594727
    8. '.app' → logprob: -12.069971084594727
    9. '>.' → logprob: -12.694971084594727
    10. ''].' → logprob: -12.819971084594727

Token 331: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.8889261304575484e-06
    2. '.append' → logprob: -12.625003814697266
    3. 'appen' → logprob: -15.125003814697266
    4. ' append' → logprob: -15.250003814697266
    5. '	append' → logprob: -17.750003814697266
    6. 'Append' → logprob: -19.875003814697266
    7. 'prepend' → logprob: -20.000003814697266
    8. 'app' → logprob: -20.000003814697266
    9. '_append' → logprob: -20.125003814697266
    10. 'add' → logprob: -21.500003814697266

Token 332: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.1008713702030946e-06
    2. 'i' → logprob: -13.125001907348633
    3. '(' → logprob: -17.500001907348633
    4. '[i' → logprob: -19.000001907348633
    5. '	i' → logprob: -20.500001907348633
    6. ' (' → logprob: -21.375001907348633
    7. 'a' → logprob: -21.375001907348633
    8. ' i' → logprob: -21.375001907348633
    9. '   ' → logprob: -21.750001907348633
    10. ')' → logprob: -22.000001907348633

Token 333: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3795937522663735e-05
    2. ')
' → logprob: -10.75002384185791
    3. '<|end|>' → logprob: -14.25002384185791
    4. ')return' → logprob: -14.50002384185791
    5. ' )' → logprob: -14.87502384185791
    6. '   ' → logprob: -15.50002384185791
    7. ')n' → logprob: -16.250022888183594
    8. ')}' → logprob: -16.500022888183594
    9. '()' → logprob: -16.500022888183594
    10. '())' → logprob: -16.750022888183594

Token 334: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1311625987291336
    2. '<|end|>' → logprob: -2.881162643432617
    3. 'for' → logprob: -3.131162643432617
    4. ' for' → logprob: -4.631162643432617
    5. '
' → logprob: -5.131162643432617
    6. 'def' → logprob: -5.381162643432617
    7. '```' → logprob: -7.756162643432617
    8. '#' → logprob: -7.881162643432617
    9. ',' → logprob: -8.131162643432617
    10. ' ' → logprob: -8.506162643432617

Token 335: ' dist' (ID: 3601)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39580437541007996
    2. 'dist' (adapté à ' dist') → logprob: -1.5208044052124023
    3. 'dp' → logprob: -3.0208044052124023
    4. 'for' → logprob: -4.020804405212402
    5. 'graph' → logprob: -4.520804405212402
    6. 'g' → logprob: -4.895804405212402
    7. 'q' → logprob: -5.145804405212402
    8. 'd' → logprob: -5.395804405212402
    9. 'from' → logprob: -6.145804405212402
    10. '
' → logprob: -6.270804405212402

Token 336: '=[' (ID: 13370)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6662164926528931
    2. '=' → logprob: -1.041216492652893
    3. '=[' → logprob: -2.0412163734436035
    4. '1' → logprob: -6.9162163734436035
    5. '=[]' → logprob: -7.2912163734436035
    6. '={}' → logprob: -7.4162163734436035
    7. 's' → logprob: -7.7912163734436035
    8. ',' → logprob: -8.166216850280762
    9. ' =[' → logprob: -8.666216850280762
    10. '[' → logprob: -9.291216850280762

Token 337: '-' (ID: 12)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.08326605707406998
    2. 'float' → logprob: -2.708266019821167
    3. '10' → logprob: -4.833266258239746
    4. 'INF' → logprob: -6.583266258239746
    5. '1' → logprob: -6.708266258239746
    6. '-inf' → logprob: -7.208266258239746
    7. '-' → logprob: -7.458266258239746
    8. 'int' → logprob: -7.583266258239746
    9. '100' → logprob: -8.333266258239746
    10. '0' → logprob: -8.833266258239746

Token 338: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021332520991563797
    2. 'inf' → logprob: -6.377133369445801
    3. '10' → logprob: -8.1271333694458
    4. 'float' → logprob: -9.7521333694458
    5. '(' → logprob: -10.2521333694458
    6. '2' → logprob: -10.7521333694458
    7. 'int' → logprob: -11.7521333694458
    8. 'INF' → logprob: -12.5021333694458
    9. '100' → logprob: -12.8771333694458
    10. '999' → logprob: -13.5021333694458

Token 339: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.19678308069705963
    2. ']*' → logprob: -2.1967830657958984
    3. ']' → logprob: -2.6967830657958984
    4. ' ]' → logprob: -10.946783065795898
    5. 'for' → logprob: -11.571783065795898
    6. ' for' → logprob: -11.571783065795898
    7. ']+' → logprob: -11.571783065795898
    8. ',' → logprob: -13.321783065795898
    9. ' ' → logprob: -15.196783065795898
    10. ']*)' → logprob: -15.946783065795898

Token 340: 'n' (ID: 77)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5970236659049988
    2. 'n' → logprob: -0.8470236659049988
    3. 't' → logprob: -3.9720237255096436
    4. 's' → logprob: -7.0970234870910645
    5. '2' → logprob: -7.8470234870910645
    6. 'len' → logprob: -8.347023963928223
    7. '(n' → logprob: -8.722023963928223
    8. 'y' → logprob: -8.722023963928223
    9. 'z' → logprob: -9.097023963928223
    10. '(x' → logprob: -9.722023963928223

Token 341: '+m' (ID: 139456)
  Prédit: '+m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+m' → logprob: -0.007539675571024418
    2. '+n' → logprob: -5.382539749145508
    3. '+' → logprob: -5.882539749145508
    4. ' +' → logprob: -9.007539749145508
    5. '+x' → logprob: -13.007539749145508
    6. '+
' → logprob: -13.382539749145508
    7. '+t' → logprob: -14.882539749145508
    8. '+s' → logprob: -15.507539749145508
    9. 'm' → logprob: -15.882539749145508
    10. '+k' → logprob: -16.007539749145508

Token 342: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011090735904872417
    2. ')
' → logprob: -4.5110907554626465
    3. '+' → logprob: -11.011090278625488
    4. ')
' → logprob: -11.761090278625488
    5. ' )' → logprob: -12.386090278625488
    6. ')s' → logprob: -12.636090278625488
    7. ')t' → logprob: -13.136090278625488
    8. ')

' → logprob: -13.886090278625488
    9. '```' → logprob: -14.011090278625488
    10. '+)' → logprob: -14.011090278625488

Token 343: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.004586534574627876
    2. 'queue' → logprob: -6.254586696624756
    3. 'q' → logprob: -6.629586696624756
    4. 'from' → logprob: -7.379586696624756
    5. 'import' → logprob: -7.504586696624756
    6. 'que' → logprob: -9.879586219787598
    7. 'dq' → logprob: -10.004586219787598
    8. '   ' → logprob: -10.379586219787598
    9. '```' → logprob: -11.379586219787598
    10. 'd' → logprob: -12.129586219787598

Token 344: ' hp' (ID: 37774)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5938130021095276
    2. 'q' → logprob: -0.8438130021095276
    3. 'from' → logprob: -4.718812942504883
    4. 'dq' → logprob: -5.218812942504883
    5. 'd' → logprob: -6.968812942504883
    6. 'queue' → logprob: -7.093812942504883
    7. 'que' → logprob: -7.843812942504883
    8. 'import' → logprob: -7.968812942504883
    9. 'deque' → logprob: -8.093812942504883
    10. 'dp' → logprob: -8.468812942504883

Token 345: '=[]
' (ID: 63466)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.10102764517068863
    2. ' =' → logprob: -2.851027727127075
    3. '=' → logprob: -3.351027727127075
    4. '=[' → logprob: -5.976027488708496
    5. '=[]
' → logprob: -7.726027488708496
    6. '=[
' → logprob: -9.726027488708496
    7. '=[[' → logprob: -10.226027488708496
    8. '=[],' → logprob: -10.476027488708496
    9. '=[]
' → logprob: -10.976027488708496
    10. 'q' → logprob: -11.351027488708496

Token 346: '   ' (ID: 271)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.3881395757198334
    2. 'he' → logprob: -1.1381396055221558
    3. '   ' → logprob: -7.388139724731445
    4. ' he' → logprob: -8.013139724731445
    5. 'dist' → logprob: -9.263139724731445
    6. 'import' → logprob: -9.263139724731445
    7. ' heap' → logprob: -9.888139724731445
    8. 'push' → logprob: -10.763139724731445
    9. '```' → logprob: -10.763139724731445
    10. 'hea' → logprob: -10.888139724731445

Token 347: ' he' (ID: 501)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.12788912653923035
    2. 'he' (adapté à ' he') → logprob: -2.1278891563415527
    3. 'dist' → logprob: -7.127889156341553
    4. '   ' → logprob: -9.877888679504395
    5. 'import' → logprob: -9.877888679504395
    6. ' heap' → logprob: -10.752888679504395
    7. ' he' → logprob: -10.877888679504395
    8. 'push' → logprob: -12.252888679504395
    9. 'hea' → logprob: -12.502888679504395
    10. '```' → logprob: -12.752888679504395

Token 348: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0011735594598576427
    2. 'ap' → logprob: -6.751173496246338
    3. 'a' → logprob: -12.626173973083496
    4. '```' → logprob: -17.50117301940918
    5. 'ап' → logprob: -17.75117301940918
    6. 'aq' → logprob: -18.25117301940918
    7. 'q' → logprob: -19.12617301940918
    8. 'pp' → logprob: -19.12617301940918
    9. 'appen' → logprob: -19.25117301940918
    10. '[' → logprob: -19.75117301940918

Token 349: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -4.56102097814437e-05
    2. 'push' → logprob: -10.000045776367188
    3. '```' → logprob: -16.750045776367188
    4. 'p' → logprob: -17.750045776367188
    5. 'app' → logprob: -18.375045776367188
    6. 'op' → logprob: -18.500045776367188
    7. 'pp' → logprob: -18.500045776367188
    8. 'ut' → logprob: -18.875045776367188
    9. '[' → logprob: -19.125045776367188
    10. 'sh' → logprob: -19.625045776367188

Token 350: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.3663626305060461e-05
    2. '(' → logprob: -11.62501335144043
    3. '(heap' → logprob: -12.62501335144043
    4. '(hr' → logprob: -15.00001335144043
    5. '(dist' → logprob: -15.12501335144043
    6. '(dp' → logprob: -15.25001335144043
    7. '(ht' → logprob: -15.37501335144043
    8. '(p' → logprob: -16.37501335144043
    9. ' (' → logprob: -16.62501335144043
    10. '(py' → logprob: -16.87501335144043

Token 351: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00016420685278717428
    2. 'hp' → logprob: -9.125164031982422
    3. '(h' → logprob: -10.125164031982422
    4. '(p' → logprob: -11.625164031982422
    5. '```' → logprob: -13.625164031982422
    6. '
' → logprob: -13.875164031982422
    7. ')' → logprob: -14.250164031982422
    8. ',p' → logprob: -14.250164031982422
    9. '.hp' → logprob: -14.375164031982422
    10. ',' → logprob: -15.125164031982422

Token 352: ',[' (ID: 35502)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.4874148368835449
    2. '(' → logprob: -1.362414836883545
    3. '(h' → logprob: -2.862414836883545
    4. ',' → logprob: -3.362414836883545
    5. ',(' → logprob: -3.612414836883545
    6. '(s' → logprob: -4.737414836883545
    7. '(t' → logprob: -7.362414836883545
    8. '([' → logprob: -7.362414836883545
    9. ' ' → logprob: -8.237415313720703
    10. ' (' → logprob: -8.362415313720703

Token 353: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.500108141452074e-05
    2. '(' → logprob: -10.625035285949707
    3. ' ' → logprob: -11.625035285949707
    4. ',' → logprob: -13.750035285949707
    5. '
' → logprob: -14.875035285949707
    6. '1' → logprob: -16.25003433227539
    7. '   ' → logprob: -17.25003433227539
    8. '[' → logprob: -17.37503433227539
    9. 's' → logprob: -17.62503433227539
    10. ' (' → logprob: -17.75003433227539

Token 354: ',s' (ID: 20379)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12900711596012115
    2. ',s' → logprob: -2.12900710105896
    3. ',t' → logprob: -6.379007339477539
    4. ',i' → logprob: -8.004007339477539
    5. 's' → logprob: -11.129007339477539
    6. ' ,' → logprob: -11.629007339477539
    7. ',x' → logprob: -12.629007339477539
    8. ',int' → logprob: -13.004007339477539
    9. ']' → logprob: -13.129007339477539
    10. ',n' → logprob: -13.254007339477539

Token 355: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.003430792596191168
    2. ')' → logprob: -5.8784308433532715
    3. '])
' → logprob: -8.253430366516113
    4. ',' → logprob: -8.378430366516113
    5. ')])' → logprob: -9.378430366516113
    6. ' ])' → logprob: -11.003430366516113
    7. ']' → logprob: -11.378430366516113
    8. ')]' → logprob: -11.628430366516113
    9. '))' → logprob: -12.378430366516113
    10. ')
' → logprob: -12.628430366516113

Token 356: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.7105514407157898
    2. ')' → logprob: -0.9605514407157898
    3. 'while' → logprob: -2.9605515003204346
    4. '
' → logprob: -3.5855515003204346
    5. ' )' → logprob: -4.0855512619018555
    6. '   ' → logprob: -4.7105512619018555
    7. '<|end|>' → logprob: -4.8355512619018555
    8. ')
' → logprob: -5.3355512619018555
    9. ' 
' → logprob: -6.2105512619018555
    10. 'dist' → logprob: -6.4605512619018555

Token 357: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.008761582896113396
    2. ' while' → logprob: -5.008761405944824
    3. 'dist' → logprob: -6.508761405944824
    4. ')' → logprob: -7.508761405944824
    5. 'While' → logprob: -13.008761405944824
    6. ']' → logprob: -14.133761405944824
    7. '   ' → logprob: -15.008761405944824
    8. '	while' → logprob: -15.008761405944824
    9. ' dist' → logprob: -15.133761405944824
    10. 'def' → logprob: -15.258761405944824

Token 358: ' hp' (ID: 37774)
  Prédit: 'hp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hp' → logprob: -0.01116207055747509
    2. ' hp' → logprob: -4.511162281036377
    3. 'len' → logprob: -9.136161804199219
    4. ' len' → logprob: -12.011161804199219
    5. 'h' → logprob: -14.886161804199219
    6. ' ' → logprob: -17.01116180419922
    7. '.hp' → logprob: -17.13616180419922
    8. '(h' → logprob: -17.51116180419922
    9. '```' → logprob: -18.51116180419922
    10. 'lp' → logprob: -18.51116180419922

Token 359: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017898699268698692
    2. ':
' → logprob: -4.1428985595703125
    3. 'and' → logprob: -7.2678985595703125
    4. ' and' → logprob: -7.5178985595703125
    5. '[' → logprob: -7.8928985595703125
    6. '```' → logprob: -9.517898559570312
    7. '):' → logprob: -9.642898559570312
    8. '):
' → logprob: -10.892898559570312
    9. '>:' → logprob: -11.392898559570312
    10. '!=' → logprob: -11.642898559570312

Token 360: '       ' (ID: 309)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.13019858300685883
    2. 'c' → logprob: -2.6301984786987305
    3. '   ' → logprob: -3.5051984786987305
    4. '0' → logprob: -5.0051984786987305
    5. 'dist' → logprob: -5.1301984786987305
    6. 'cost' → logprob: -6.0051984786987305
    7. ' d' → logprob: -6.5051984786987305
    8. 'p' → logprob: -7.8801984786987305
    9. 'l' → logprob: -8.00519847869873
    10. ',' → logprob: -8.25519847869873

Token 361: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.07260195910930634
    2. 'c' → logprob: -3.0726020336151123
    3. 'dist' → logprob: -4.322601795196533
    4. 'cost' → logprob: -5.447601795196533
    5. 'cd' → logprob: -6.197601795196533
    6. 'cur' → logprob: -6.447601795196533
    7. ' d' → logprob: -7.697601795196533
    8. '0' → logprob: -7.822601795196533
    9. '   ' → logprob: -8.322602272033691
    10. 'dc' → logprob: -8.572602272033691

Token 362: ',i' (ID: 25032)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22973835468292236
    2. ',u' → logprob: -1.8547383546829224
    3. ',p' → logprob: -4.354738235473633
    4. ',c' → logprob: -4.604738235473633
    5. ',d' → logprob: -4.854738235473633
    6. ',h' → logprob: -5.729738235473633
    7. ',t' → logprob: -5.729738235473633
    8. ',v' → logprob: -6.104738235473633
    9. ',val' → logprob: -6.479738235473633
    10. ',x' → logprob: -6.729738235473633

Token 363: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005840110243298113
    2. ' =' → logprob: -7.500584125518799
    3. '=d' → logprob: -11.37558364868164
    4. 'he' → logprob: -12.00058364868164
    5. 'd' → logprob: -12.87558364868164
    6. '=h' → logprob: -13.75058364868164
    7. '=u' → logprob: -13.75058364868164
    8. ']=' → logprob: -14.00058364868164
    9. '=_' → logprob: -14.12558364868164
    10. '=q' → logprob: -14.12558364868164

Token 364: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.0004378214362077415
    2. ' he' → logprob: -7.7504377365112305
    3. 'heap' → logprob: -12.37543773651123
    4. '   ' → logprob: -13.75043773651123
    5. '.he' → logprob: -14.50043773651123
    6. '
' → logprob: -14.62543773651123
    7. '```' → logprob: -15.50043773651123
    8. 'h' → logprob: -16.500438690185547
    9. ',' → logprob: -16.625438690185547
    10. ' ' → logprob: -17.000438690185547

Token 365: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -3.2855416066013277e-05
    2. 'pp' → logprob: -10.375032424926758
    3. 'ap' → logprob: -14.250032424926758
    4. '```' → logprob: -14.625032424926758
    5. 'a' → logprob: -15.375032424926758
    6. '[' → logprob: -16.000032424926758
    7. '``' → logprob: -17.125032424926758
    8. '
' → logprob: -17.625032424926758
    9. 'q' → logprob: -18.000032424926758
    10. 'pop' → logprob: -18.250032424926758

Token 366: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -8.041768160182983e-05
    2. 'pop' → logprob: -10.250080108642578
    3. 'ush' → logprob: -10.500080108642578
    4. 'p' → logprob: -11.875080108642578
    5. 'pp' → logprob: -12.375080108642578
    6. '[' → logprob: -12.625080108642578
    7. 'app' → logprob: -14.000080108642578
    8. '```' → logprob: -14.500080108642578
    9. '(op' → logprob: -14.500080108642578
    10. 'o' → logprob: -15.000080108642578

Token 367: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.1160349458805285e-05
    2. '(' → logprob: -12.875011444091797
    3. '(
' → logprob: -13.250011444091797
    4. ' (' → logprob: -13.250011444091797
    5. '(heap' → logprob: -13.500011444091797
    6. '```' → logprob: -14.125011444091797
    7. '(hr' → logprob: -14.625011444091797
    8. '
' → logprob: -14.750011444091797
    9. '(ht' → logprob: -14.875011444091797
    10. ' hp' → logprob: -15.000011444091797

Token 368: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.0722858102526516e-05
    2. ')' → logprob: -10.500041007995605
    3. 'op' → logprob: -12.125041007995605
    4. '])' → logprob: -13.375041007995605
    5. 'q' → logprob: -13.500041007995605
    6. ')
' → logprob: -13.500041007995605
    7. ')p' → logprob: -13.625041007995605
    8. '
' → logprob: -14.000041007995605
    9. '```' → logprob: -15.250041007995605
    10. 'hp' → logprob: -15.625041007995605

Token 369: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2014302909374237
    2. ')
' → logprob: -1.701430320739746
    3. ')
' → logprob: -12.076430320739746
    4. ' )' → logprob: -13.076430320739746
    5. ' )
' → logprob: -13.201430320739746
    6. ')d' → logprob: -13.201430320739746
    7. '   ' → logprob: -13.451430320739746
    8. ')

' → logprob: -13.701430320739746
    9. ']' → logprob: -13.826430320739746
    10. '])' → logprob: -14.701430320739746

Token 370: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7337996959686279
    2. '   ' → logprob: -1.233799695968628
    3. '
' → logprob: -2.358799695968628
    4. '<|end|>' → logprob: -2.358799695968628
    5. ' if' → logprob: -3.483799695968628
    6. ')' → logprob: -5.483799934387207
    7. 'if' → logprob: -6.233799934387207
    8. '  
' → logprob: -7.233799934387207
    9. '```' → logprob: -8.108799934387207
    10. ' 
' → logprob: -8.108799934387207

Token 371: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0086397435516119
    2. ' if' → logprob: -4.758639812469482
    3. '       ' → logprob: -11.258639335632324
    4. '   ' → logprob: -11.383639335632324
    5. '	if' → logprob: -14.508639335632324
    6. ';if' → logprob: -14.883639335632324
    7. ' ' → logprob: -16.38364028930664
    8. '        
' → logprob: -17.63364028930664
    9. '    ' → logprob: -17.75864028930664
    10. '
' → logprob: -17.88364028930664

Token 372: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.001042574760504067
    2. ' dist' → logprob: -6.876042366027832
    3. 'd' → logprob: -11.626042366027832
    4. '   ' → logprob: -14.876042366027832
    5. '	dist' → logprob: -15.251042366027832
    6. '(dist' → logprob: -15.751042366027832
    7. 'not' → logprob: -17.50104331970215
    8. ' ' → logprob: -17.87604331970215
    9. 'i' → logprob: -18.00104331970215
    10. ' d' → logprob: -18.87604331970215

Token 373: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.842555426876061e-06
    2. '[' → logprob: -13.000004768371582
    3. 'i' → logprob: -13.500004768371582
    4. ' [' → logprob: -14.750004768371582
    5. '[I' → logprob: -15.375004768371582
    6. '```' → logprob: -15.500004768371582
    7. '[
' → logprob: -16.2500057220459
    8. ')[' → logprob: -17.6250057220459
    9. '
' → logprob: -17.7500057220459
    10. '[int' → logprob: -17.8750057220459

Token 374: ']!=' (ID: 85780)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7232803702354431
    2. '!=' → logprob: -1.848280429840088
    3. ']!=' → logprob: -2.223280429840088
    4. ']==' → logprob: -2.473280429840088
    5. '[' → logprob: -2.598280429840088
    6. '!=-' → logprob: -2.973280429840088
    7. ']' → logprob: -4.098280429840088
    8. '==-' → logprob: -4.223280429840088
    9. '[i' → logprob: -6.473280429840088
    10. ']>=' → logprob: -6.598280429840088

Token 375: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.9153885558771435e-06
    2. ' -' → logprob: -12.125005722045898
    3. 'd' → logprob: -15.500005722045898
    4. '-d' → logprob: -15.875005722045898
    5. '-
' → logprob: -17.1250057220459
    6. '
' → logprob: -17.6250057220459
    7. '   ' → logprob: -18.3750057220459
    8. '−' → logprob: -18.6250057220459
    9. ' ' → logprob: -18.7500057220459
    10. '```' → logprob: -19.1250057220459

Token 376: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.546478935983032e-05
    2. ' ' → logprob: -10.625025749206543
    3. ',' → logprob: -15.000025749206543
    4. '```' → logprob: -15.125025749206543
    5. '2' → logprob: -15.375025749206543
    6. '   ' → logprob: -16.437524795532227
    7. '0' → logprob: -17.062524795532227
    8. '=' → logprob: -17.437524795532227
    9. '    ' → logprob: -17.437524795532227
    10. '<|end|>' → logprob: -17.937524795532227

Token 377: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.027151644229888916
    2. ':
' → logprob: -3.652151584625244
    3. ':return' → logprob: -7.402151584625244
    4. ' or' → logprob: -8.652152061462402
    5. '       ' → logprob: -10.902152061462402
    6. ' continue' → logprob: -11.277152061462402
    7. 'continue' → logprob: -11.527152061462402
    8. '           ' → logprob: -11.902152061462402
    9. '   ' → logprob: -12.652152061462402
    10. '	continue' → logprob: -12.777152061462402

Token 378: 'continue' (ID: 19452)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.08157216012477875
    2. 'continue' → logprob: -2.5815720558166504
    3. '           ' → logprob: -6.20657205581665
    4. '       ' → logprob: -8.081572532653809
    5. '	continue' → logprob: -8.081572532653809
    6. '_continue' → logprob: -11.206572532653809
    7. ' continues' → logprob: -11.331572532653809
    8. '   ' → logprob: -11.456572532653809
    9. 'Continue' → logprob: -13.706572532653809
    10. 'contin' → logprob: -13.706572532653809

Token 379: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.35522428154945374
    2. '       ' → logprob: -1.7302242517471313
    3. '   ' → logprob: -2.480224370956421
    4. ' dist' → logprob: -3.355224370956421
    5. '<|end|>' → logprob: -6.730224132537842
    6. ' if' → logprob: -7.230224132537842
    7. '	dist' → logprob: -7.480224132537842
    8. 'if' → logprob: -8.855224609375
    9. '
' → logprob: -9.105224609375
    10. '```' → logprob: -9.105224609375

Token 380: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.135869562625885
    2. '   ' → logprob: -2.3858695030212402
    3. ' dist' → logprob: -3.6358695030212402
    4. '
' → logprob: -5.13586950302124
    5. '       ' → logprob: -6.63586950302124
    6. '	dist' → logprob: -7.26086950302124
    7. '<|end|>' → logprob: -8.385869979858398
    8. '    
' → logprob: -8.510869979858398
    9. '_dist' → logprob: -9.385869979858398
    10. '        
' → logprob: -9.885869979858398

Token 381: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.0015203376533463597
    2. ' dist' → logprob: -6.751520156860352
    3. '   ' → logprob: -8.001520156860352
    4. '       ' → logprob: -11.251520156860352
    5. '	dist' → logprob: -13.126520156860352
    6. '_dist' → logprob: -17.00152015686035
    7. '```' → logprob: -17.62652015686035
    8. '  ' → logprob: -17.62652015686035
    9. '(dist' → logprob: -17.75152015686035
    10. '.dist' → logprob: -18.12652015686035

Token 382: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.750000953674316
    3. '```' → logprob: -15.500000953674316
    4. '[I' → logprob: -16.0
    5. 'i' → logprob: -16.75
    6. ' [' → logprob: -17.875
    7. '[
' → logprob: -18.125
    8. '\[' → logprob: -18.375
    9. '=' → logprob: -18.625
    10. ')[' → logprob: -18.75

Token 383: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.16706781089305878
    2. '=' → logprob: -2.167067766189575
    3. '=d' → logprob: -3.667067766189575
    4. ']' → logprob: -4.292068004608154
    5. ')=' → logprob: -9.542067527770996
    6. '=i' → logprob: -10.542067527770996
    7. ' =' → logprob: -11.292067527770996
    8. ' ]' → logprob: -14.042067527770996
    9. '=
' → logprob: -14.417067527770996
    10. '=t' → logprob: -14.542067527770996

Token 384: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.306760805164231e-05
    2. ' d' → logprob: -11.25001335144043
    3. '
' → logprob: -18.25001335144043
    4. ')d' → logprob: -18.87501335144043
    5. '	d' → logprob: -19.00001335144043
    6. '   ' → logprob: -20.37501335144043
    7. '>d' → logprob: -21.12501335144043
    8. '*d' → logprob: -22.12501335144043
    9. '0' → logprob: -22.62501335144043
    10. '$d' → logprob: -22.75001335144043

Token 385: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012589222751557827
    2. '<|end|>' → logprob: -7.626258850097656
    3. '
' → logprob: -8.501258850097656
    4. ' if' → logprob: -9.001258850097656
    5. ' for' → logprob: -9.251258850097656
    6. 'if' → logprob: -9.251258850097656
    7. ',' → logprob: -9.501258850097656
    8. '   ' → logprob: -10.001258850097656
    9. 'for' → logprob: -10.126258850097656
    10. '	' → logprob: -10.501258850097656

Token 386: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003884894831571728
    2. 'if' → logprob: -8.500388145446777
    3. '   ' → logprob: -8.875388145446777
    4. 'for' → logprob: -10.125388145446777
    5. ' if' → logprob: -13.000388145446777
    6. ' for' → logprob: -13.750388145446777
    7. '           ' → logprob: -13.875388145446777
    8. '```' → logprob: -15.250388145446777
    9. '      ' → logprob: -15.750388145446777
    10. '        
' → logprob: -16.875389099121094

Token 387: ' a' (ID: 261)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6328973770141602
    2. 'for' → logprob: -0.7578973770141602
    3. '   ' → logprob: -9.50789737701416
    4. 'to' → logprob: -9.88289737701416
    5. 'c' → logprob: -10.75789737701416
    6. 'j' → logprob: -10.88289737701416
    7. 'w' → logprob: -11.13289737701416
    8. 'v' → logprob: -11.25789737701416
    9. 'cur' → logprob: -11.38289737701416
    10. 'idx' → logprob: -11.50789737701416

Token 388: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.23781074583530426
    2. ',' → logprob: -1.612810730934143
    3. ',to' → logprob: -4.7378106117248535
    4. '=' → logprob: -6.1128106117248535
    5. ',i' → logprob: -7.7378106117248535
    6. 'b' → logprob: -7.9878106117248535
    7. ',a' → logprob: -8.612811088562012
    8. ',d' → logprob: -9.112811088562012
    9. '=b' → logprob: -10.237811088562012
    10. ',n' → logprob: -10.612811088562012

Token 389: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.27099974633893e-05
    2. ' =' → logprob: -11.750012397766113
    3. ',' → logprob: -12.625012397766113
    4. '=i' → logprob: -14.250012397766113
    5. '=a' → logprob: -15.250012397766113
    6. '=*' → logprob: -16.37501335144043
    7. '=_' → logprob: -17.25001335144043
    8. ',a' → logprob: -17.62501335144043
    9. '=

' → logprob: -17.75001335144043
    10. ',i' → logprob: -17.87501335144043

Token 390: 'ito' (ID: 2955)
  Prédit: 'ito'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ito' → logprob: -0.00014048899174667895
    2. ' ito' → logprob: -9.500140190124512
    3. '   ' → logprob: -10.375140190124512
    4. 'to' → logprob: -11.125140190124512
    5. 'io' → logprob: -12.875140190124512
    6. 'oto' → logprob: -12.875140190124512
    7. '[' → logprob: -13.250140190124512
    8. '*' → logprob: -13.250140190124512
    9. 'itoa' → logprob: -13.625140190124512
    10. 'ita' → logprob: -14.125140190124512

Token 391: 'ab' (ID: 378)
  Prédit: 'ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -2.1888679839321412e-05
    2. 'аб' → logprob: -11.625021934509277
    3. 'a' → logprob: -12.250021934509277
    4. 'b' → logprob: -13.312521934509277
    5. 'abcd' → logprob: -14.375021934509277
    6. 'abc' → logprob: -14.500021934509277
    7. 'ob' → logprob: -14.687521934509277
    8. ' ab' → logprob: -14.812521934509277
    9. '```' → logprob: -14.875021934509277
    10. 'i' → logprob: -14.937521934509277

Token 392: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.9153885558771435e-06
    2. '[' → logprob: -12.375005722045898
    3. 'i' → logprob: -14.875005722045898
    4. '[I' → logprob: -15.125005722045898
    5. '[a' → logprob: -15.250005722045898
    6. ')[' → logprob: -15.625005722045898
    7. '```' → logprob: -15.750005722045898
    8. ' [' → logprob: -15.875005722045898
    9. '][' → logprob: -16.0000057220459
    10. '[s' → logprob: -17.2500057220459

Token 393: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014447571011260152
    2. ']
' → logprob: -7.3764448165893555
    3. '])' → logprob: -7.5014448165893555
    4. '][' → logprob: -8.376444816589355
    5. ')' → logprob: -10.751444816589355
    6. ' ]' → logprob: -12.126444816589355
    7. '[' → logprob: -12.501444816589355
    8. ')]' → logprob: -14.751444816589355
    9. ']
' → logprob: -14.751444816589355
    10. '];' → logprob: -14.751444816589355

Token 394: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11556047946214676
    2. 'for' → logprob: -2.240560531616211
    3. ' for' → logprob: -6.115560531616211
    4. 'if' → logprob: -8.115560531616211
    5. '   ' → logprob: -8.490560531616211
    6. '        
' → logprob: -12.115560531616211
    7. ',' → logprob: -12.240560531616211
    8. ' if' → logprob: -12.865560531616211
    9. '	for' → logprob: -12.990560531616211
    10. '      ' → logprob: -14.115560531616211

Token 395: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0325513631105423
    2. 'if' → logprob: -3.5325512886047363
    3. '   ' → logprob: -5.907551288604736
    4. ' for' → logprob: -9.907551765441895
    5. '#' → logprob: -11.032551765441895
    6. 'to' → logprob: -13.157551765441895
    7. ' if' → logprob: -13.282551765441895
    8. '       ' → logprob: -13.907551765441895
    9. 'u' → logprob: -14.282551765441895
    10. 'j' → logprob: -14.532551765441895

Token 396: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2872648537158966
    2. 'v' → logprob: -2.787264823913574
    3. 'ni' → logprob: -3.287264823913574
    4. 'x' → logprob: -3.412264823913574
    5. 'idx' → logprob: -3.912264823913574
    6. 'to' → logprob: -3.912264823913574
    7. 'nx' → logprob: -4.162264823913574
    8. 'u' → logprob: -4.537264823913574
    9. 'k' → logprob: -4.662264823913574
    10. 'ii' → logprob: -4.787264823913574

Token 397: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2519910931587219
    2. 'in' → logprob: -1.5019910335540771
    3. 'to' → logprob: -10.376991271972656
    4. ' ' → logprob: -11.751991271972656
    5. ',' → logprob: -12.251991271972656
    6. 'n' → logprob: -12.501991271972656
    7. '
' → logprob: -13.251991271972656
    8. '  ' → logprob: -13.251991271972656
    9. 'not' → logprob: -13.251991271972656
    10. '   ' → logprob: -13.501991271972656

Token 398: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0011760591296479106
    2. ' to' → logprob: -6.751175880432129
    3. '(to' → logprob: -12.626175880432129
    4. '[to' → logprob: -13.376175880432129
    5. '	to' → logprob: -15.126175880432129
    6. ' ' → logprob: -15.376175880432129
    7. '   ' → logprob: -16.001176834106445
    8. 'range' → logprob: -16.376176834106445
    9. '(' → logprob: -16.376176834106445
    10. '
' → logprob: -16.626176834106445

Token 399: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017134972149506211
    2. '2' → logprob: -6.376713275909424
    3. '[a' → logprob: -11.751713752746582
    4. 'a' → logprob: -13.001713752746582
    5. ' ' → logprob: -15.376713752746582
    6. 'ab' → logprob: -15.376713752746582
    7. '[b' → logprob: -15.376713752746582
    8. 'b' → logprob: -16.001712799072266
    9. '```' → logprob: -16.001712799072266
    10. '(a' → logprob: -16.939212799072266

Token 400: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.01272012572735548
    2. '[b' → logprob: -4.387720108032227
    3. 'a' → logprob: -8.512720108032227
    4. 'b' → logprob: -12.137720108032227
    5. '[' → logprob: -13.137720108032227
    6. ' [' → logprob: -13.637720108032227
    7. '(a' → logprob: -15.387720108032227
    8. ' a' → logprob: -15.762720108032227
    9. '[
' → logprob: -16.137720108032227
    10. '	a' → logprob: -16.262720108032227

Token 401: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.018415523692965508
    2. ']:
' → logprob: -4.018415451049805
    3. ']' → logprob: -9.018415451049805
    4. ']:
' → logprob: -9.268415451049805
    5. ':' → logprob: -10.268415451049805
    6. '       ' → logprob: -12.393415451049805
    7. '   ' → logprob: -12.893415451049805
    8. ']:

' → logprob: -13.268415451049805
    9. '].' → logprob: -14.018415451049805
    10. '):' → logprob: -14.143415451049805

Token 402: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6362452507019043
    2. ' if' → logprob: -1.0112452507019043
    3. 'if' → logprob: -2.2612452507019043
    4. '               ' → logprob: -6.511245250701904
    5. '
' → logprob: -8.136245727539062
    6. '<|end|>' → logprob: -8.386245727539062
    7. ',' → logprob: -8.511245727539062
    8. '   ' → logprob: -9.136245727539062
    9. '	if' → logprob: -9.636245727539062
    10. ' ' → logprob: -9.636245727539062

Token 403: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00011307948443572968
    2. 'he' → logprob: -9.250113487243652
    3. ' if' → logprob: -11.375113487243652
    4. '   ' → logprob: -12.500113487243652
    5. '       ' → logprob: -14.000113487243652
    6. '           ' → logprob: -15.125113487243652
    7. '```' → logprob: -16.125112533569336
    8. '
' → logprob: -16.375112533569336
    9. 'n' → logprob: -16.625112533569336
    10. '  ' → logprob: -17.125112533569336

Token 404: ' j' (ID: 441)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.002830673009157181
    2. ' dist' → logprob: -5.877830505371094
    3. '   ' → logprob: -11.002830505371094
    4. 'j' → logprob: -13.002830505371094
    5. '(dist' → logprob: -13.002830505371094
    6. '	dist' → logprob: -13.627830505371094
    7. 'i' → logprob: -13.877830505371094
    8. ' ' → logprob: -14.377830505371094
    9. 'not' → logprob: -14.877830505371094
    10. 'd' → logprob: -15.002830505371094

Token 405: '==' (ID: 560)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.09536433964967728
    2. '==' → logprob: -2.9703643321990967
    3. ' !=' → logprob: -4.220364570617676
    4. 'dist' → logprob: -4.595364570617676
    5. '!=-' → logprob: -4.720364570617676
    6. '==-' → logprob: -6.345364570617676
    7. ' ==' → logprob: -7.345364570617676
    8. ')' → logprob: -7.345364570617676
    9. ']!=' → logprob: -7.470364570617676
    10. '>=' → logprob: -7.720364570617676

Token 406: 't' (ID: 83)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.319370302458992e-06
    2. ' i' → logprob: -12.250005722045898
    3. '	i' → logprob: -16.1250057220459
    4. '   ' → logprob: -16.3750057220459
    5. ' ' → logprob: -16.6250057220459
    6. 's' → logprob: -16.8750057220459
    7. 'j' → logprob: -17.2500057220459
    8. '
' → logprob: -18.0000057220459
    9. 't' → logprob: -18.1250057220459
    10. '-' → logprob: -18.1250057220459

Token 407: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23297320306301117
    2. ' or' → logprob: -1.6079732179641724
    3. 'continue' → logprob: -6.232973098754883
    4. ':return' → logprob: -6.232973098754883
    5. 'or' → logprob: -6.982973098754883
    6. '           ' → logprob: -7.107973098754883
    7. ' continue' → logprob: -7.482973098754883
    8. ':
' → logprob: -7.857973098754883
    9. '):' → logprob: -8.107973098754883
    10. ' :' → logprob: -8.107973098754883

Token 408: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19254672527313232
    2. ' continue' → logprob: -2.317546844482422
    3. ' or' → logprob: -3.442546844482422
    4. '               ' → logprob: -3.817546844482422
    5. 'continue' → logprob: -3.942546844482422
    6. '           ' → logprob: -6.192546844482422
    7. ':
' → logprob: -7.817546844482422
    8. ':return' → logprob: -8.067546844482422
    9. ' and' → logprob: -9.067546844482422
    10. '	continue' → logprob: -9.067546844482422

Token 409: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0024104926269501448
    2. ' print' → logprob: -6.502410411834717
    3. '               ' → logprob: -7.377410411834717
    4. '                   ' → logprob: -8.877410888671875
    5. 'return' → logprob: -9.002410888671875
    6. '           ' → logprob: -12.127410888671875
    7. 'if' → logprob: -12.502410888671875
    8. 'break' → logprob: -12.752410888671875
    9. '                       ' → logprob: -13.627410888671875
    10. '                ' → logprob: -13.877410888671875

Token 410: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.018221350386738777
    2. 'd' → logprob: -4.643221378326416
    3. '(dist' → logprob: -4.893221378326416
    4. '(' → logprob: -7.643221378326416
    5. 'dist' → logprob: -7.768221378326416
    6. '0' → logprob: -10.893220901489258
    7. ' d' → logprob: -12.643220901489258
    8. '((' → logprob: -13.643220901489258
    9. '(
' → logprob: -13.768220901489258
    10. '(dis' → logprob: -14.393220901489258

Token 411: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.009581011720001698
    2. ')' → logprob: -4.884581089019775
    3. ')
' → logprob: -6.634581089019775
    4. ' +' → logprob: -7.884581089019775
    5. '+
' → logprob: -9.009580612182617
    6. '+)' → logprob: -10.009580612182617
    7. '+d' → logprob: -10.134580612182617
    8. '+j' → logprob: -11.009580612182617
    9. ')+' → logprob: -11.384580612182617
    10. '+x' → logprob: -11.509580612182617

Token 412: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5275964140892029
    2. 'z' → logprob: -0.9025964140892029
    3. 'dist' → logprob: -6.652596473693848
    4. 'b' → logprob: -6.777596473693848
    5. 'y' → logprob: -7.027596473693848
    6. 'x' → logprob: -8.152596473693848
    7. 'd' → logprob: -8.152596473693848
    8. '   ' → logprob: -8.902596473693848
    9. ' ' → logprob: -9.027596473693848
    10. '0' → logprob: -9.152596473693848

Token 413: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.010256627574563026
    2. ')' → logprob: -5.010256767272949
    3. '               ' → logprob: -5.760256767272949
    4. ')
' → logprob: -7.885256767272949
    5. '                   ' → logprob: -12.26025676727295
    6. ')return' → logprob: -13.26025676727295
    7. '           ' → logprob: -15.01025676727295
    8. ')`
' → logprob: -15.26025676727295
    9. '                       ' → logprob: -15.38525676727295
    10. ')

' → logprob: -15.51025676727295

Token 414: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004326622001826763
    2. ')' → logprob: -6.004326820373535
    3. '<|end|>' → logprob: -7.379326820373535
    4. '                
' → logprob: -7.504326820373535
    5. '                   ' → logprob: -8.379326820373535
    6. '           ' → logprob: -9.129326820373535
    7. '                ' → logprob: -9.754326820373535
    8. '              ' → logprob: -10.004326820373535
    9. '
' → logprob: -10.254326820373535
    10. ',' → logprob: -10.379326820373535

Token 415: ' exit' (ID: 10654)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.29116252064704895
    2. 'return' → logprob: -1.4161624908447266
    3. ' return' → logprob: -4.666162490844727
    4. '                
' → logprob: -7.916162490844727
    5. '	return' → logprob: -10.041162490844727
    6. '
' → logprob: -10.166162490844727
    7. '    
' → logprob: -10.291162490844727
    8. '                   ' → logprob: -11.291162490844727
    9. ' 
' → logprob: -11.791162490844727
    10. 'exit' (adapté à ' exit') → logprob: -12.166162490844727

Token 416: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6933732032775879
    2. '()
' → logprob: -0.6933732032775879
    3. '           ' → logprob: -9.81837272644043
    4. '()\' → logprob: -9.81837272644043
    5. '()
' → logprob: -10.06837272644043
    6. '               ' → logprob: -10.06837272644043
    7. '()

' → logprob: -11.56837272644043
    8. '(' → logprob: -11.69337272644043
    9. '       ' → logprob: -12.56837272644043
    10. '())
' → logprob: -12.56837272644043

Token 417: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0033653350546956062
    2. ' 
' → logprob: -6.503365516662598
    3. '		' → logprob: -7.128365516662598
    4. '            ' → logprob: -7.503365516662598
    5. '            
' → logprob: -8.628365516662598
    6. '
' → logprob: -9.253365516662598
    7. '               ' → logprob: -10.003365516662598
    8. ' 		' → logprob: -10.128365516662598
    9. ' ' → logprob: -11.003365516662598
    10. '<|end|>' → logprob: -11.128365516662598

Token 418: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07602746039628983
    2. '           ' → logprob: -2.9510273933410645
    3. ' if' → logprob: -3.9510273933410645
    4. '       ' → logprob: -7.3260273933410645
    5. '               ' → logprob: -7.7010273933410645
    6. 'for' → logprob: -8.826027870178223
    7. 'elif' → logprob: -9.701027870178223
    8. 'he' → logprob: -10.076027870178223
    9. 'heap' → logprob: -10.076027870178223
    10. '            
' → logprob: -10.326027870178223

Token 419: ' j' (ID: 441)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.17977559566497803
    2. ' dist' → logprob: -1.804775595664978
    3. '(dist' → logprob: -11.30477523803711
    4. '	dist' → logprob: -12.30477523803711
    5. 't' → logprob: -12.67977523803711
    6. '   ' → logprob: -12.92977523803711
    7. ' ' → logprob: -13.17977523803711
    8. 'j' → logprob: -13.55477523803711
    9. 'not' → logprob: -13.67977523803711
    10. 'd' → logprob: -13.80477523803711

Token 420: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16088566184043884
    2. ' ==' → logprob: -3.0358855724334717
    3. ']==' → logprob: -3.2858855724334717
    4. '!=' → logprob: -3.4108855724334717
    5. '==-' → logprob: -4.285885810852051
    6. ')' → logprob: -5.535885810852051
    7. ')==' → logprob: -5.910885810852051
    8. ' !=' → logprob: -6.160885810852051
    9. 'dist' → logprob: -6.410885810852051
    10. ']' → logprob: -6.910885810852051

Token 421: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.030726978555321693
    2. 't' → logprob: -3.530726909637451
    3. '-' → logprob: -7.155726909637451
    4. 's' → logprob: -8.78072738647461
    5. ' i' → logprob: -11.15572738647461
    6. 'n' → logprob: -12.03072738647461
    7. '-i' → logprob: -12.53072738647461
    8. '   ' → logprob: -12.78072738647461
    9. ' -' → logprob: -13.28072738647461
    10. 'a' → logprob: -13.40572738647461

Token 422: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23376983404159546
    2. ' or' → logprob: -1.6087698936462402
    3. ':
' → logprob: -5.73376989364624
    4. '               ' → logprob: -5.85876989364624
    5. '           ' → logprob: -7.10876989364624
    6. ':return' → logprob: -7.23376989364624
    7. 'continue' → logprob: -8.608769416809082
    8. ' continue' → logprob: -8.608769416809082
    9. ' :' → logprob: -8.733769416809082
    10. 'or' → logprob: -9.233769416809082

Token 423: 'continue' (ID: 19452)
  Prédit: 'continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6345189809799194
    2. '               ' → logprob: -0.8845189809799194
    3. ' continue' → logprob: -2.884519100189209
    4. '	continue' → logprob: -7.259519100189209
    5. '           ' → logprob: -9.00951862335205
    6. '
' → logprob: -9.63451862335205
    7. '                   ' → logprob: -9.63451862335205
    8. '   ' → logprob: -11.13451862335205
    9. '_continue' → logprob: -11.88451862335205
    10. '                       ' → logprob: -12.13451862335205

Token 424: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0025689988397061825
    2. 'if' → logprob: -6.377569198608398
    3. ' if' → logprob: -7.127569198608398
    4. '               ' → logprob: -10.377569198608398
    5. '            
' → logprob: -11.627569198608398
    6. '          ' → logprob: -12.002569198608398
    7. '       ' → logprob: -12.502569198608398
    8. ',' → logprob: -12.752569198608398
    9. '
' → logprob: -12.752569198608398
    10. 'he' → logprob: -13.627569198608398

Token 425: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20413286983966827
    2. 'if' → logprob: -1.7041329145431519
    3. ' if' → logprob: -6.204133033752441
    4. 'he' → logprob: -8.079133033752441
    5. '               ' → logprob: -8.329133033752441
    6. '```' → logprob: -10.829133033752441
    7. '
' → logprob: -11.204133033752441
    8. '            
' → logprob: -11.329133033752441
    9. '       ' → logprob: -11.579133033752441
    10. 'continue' → logprob: -11.704133033752441

Token 426: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04346008226275444
    2. 'he' → logprob: -3.1684601306915283
    3. '           ' → logprob: -8.54345989227295
    4. ' if' → logprob: -9.66845989227295
    5. '               ' → logprob: -9.66845989227295
    6. '   ' → logprob: -10.16845989227295
    7. 'heap' → logprob: -10.79345989227295
    8. ' he' → logprob: -10.91845989227295
    9. '
' → logprob: -11.54345989227295
    10. 'h' → logprob: -11.91845989227295

Token 427: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.004095735494047403
    2. ' dist' → logprob: -5.504095554351807
    3. '   ' → logprob: -11.754096031188965
    4. '(dist' → logprob: -12.379096031188965
    5. 'not' → logprob: -13.629096031188965
    6. '	dist' → logprob: -13.879096031188965
    7. ' ' → logprob: -14.004096031188965
    8. 'd' → logprob: -14.379096031188965
    9. '  ' → logprob: -15.316596031188965
    10. '0' → logprob: -15.566596031188965

Token 428: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.630610641877865e-06
    2. 'j' → logprob: -12.125006675720215
    3. '[' → logprob: -14.125006675720215
    4. '[i' → logprob: -15.375006675720215
    5. '```' → logprob: -17.1250057220459
    6. '[
' → logprob: -17.3750057220459
    7. '==' → logprob: -17.3750057220459
    8. '   ' → logprob: -17.5000057220459
    9. ' [' → logprob: -18.3750057220459
    10. '
' → logprob: -18.6250057220459

Token 429: ']!=' (ID: 85780)
  Prédit: '==-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==-' → logprob: -0.024497471749782562
    2. '==' → logprob: -4.0244975090026855
    3. ']==' → logprob: -5.1494975090026855
    4. ')==' → logprob: -8.274497032165527
    5. '!=-' → logprob: -9.024497032165527
    6. ' ==' → logprob: -9.274497032165527
    7. '==
' → logprob: -10.649497032165527
    8. '']==' → logprob: -11.024497032165527
    9. '[' → logprob: -12.149497032165527
    10. '!=' → logprob: -12.899497032165527

Token 430: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.320199877838604e-07
    2. ' -' → logprob: -15.0
    3. '   ' → logprob: -19.5
    4. '1' → logprob: -19.75
    5. '
' → logprob: -20.0
    6. '```' → logprob: -20.125
    7. ' ' → logprob: -21.0
    8. '  ' → logprob: -21.125
    9. '           ' → logprob: -21.25
    10. '0' → logprob: -21.375

Token 431: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004651437979191542
    2. '-' → logprob: -5.3796515464782715
    3. ' -' → logprob: -10.504651069641113
    4. ' ' → logprob: -12.879651069641113
    5. '```' → logprob: -14.004651069641113
    6. '<|end|>' → logprob: -16.25465202331543
    7. '
' → logprob: -17.00465202331543
    8. '   ' → logprob: -17.12965202331543
    9. '' → logprob: -17.62965202331543
    10. ')' → logprob: -18.00465202331543

Token 432: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002430832479149103
    2. 'continue' → logprob: -6.7524309158325195
    3. '               ' → logprob: -7.6274309158325195
    4. ' continue' → logprob: -7.8774309158325195
    5. '           ' → logprob: -8.75243091583252
    6. '	continue' → logprob: -9.00243091583252
    7. ':
' → logprob: -9.37743091583252
    8. '   ' → logprob: -12.00243091583252
    9. '       ' → logprob: -12.50243091583252
    10. ',' → logprob: -12.75243091583252

Token 433: 'continue' (ID: 19452)
  Prédit: 'continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.13276031613349915
    2. ' continue' → logprob: -2.1327602863311768
    3. '               ' → logprob: -5.257760524749756
    4. '	continue' → logprob: -7.507760524749756
    5. '           ' → logprob: -10.007760047912598
    6. '   ' → logprob: -11.757760047912598
    7. '       ' → logprob: -13.132760047912598
    8. '                   ' → logprob: -13.757760047912598
    9. '_continue' → logprob: -13.882760047912598
    10. 'contin' → logprob: -14.257760047912598

Token 434: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3633321523666382
    2. 'he' → logprob: -1.2383321523666382
    3. ' he' → logprob: -4.363332271575928
    4. '               ' → logprob: -6.738332271575928
    5. '            
' → logprob: -8.48833179473877
    6. '
' → logprob: -8.61333179473877
    7. '   ' → logprob: -9.36333179473877
    8. '
' → logprob: -9.61333179473877
    9. '       ' → logprob: -9.61333179473877
    10. '```' → logprob: -9.98833179473877

Token 435: '           ' (ID: 352)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.43562766909599304
    2. '           ' → logprob: -1.4356276988983154
    3. ' he' → logprob: -2.1856276988983154
    4. '               ' → logprob: -6.310627460479736
    5. '            
' → logprob: -8.060627937316895
    6. '
' → logprob: -8.685627937316895
    7. '       ' → logprob: -9.310627937316895
    8. '   ' → logprob: -9.685627937316895
    9. '```' → logprob: -9.685627937316895
    10. 'heap' → logprob: -9.685627937316895

Token 436: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' (adapté à ' he') → logprob: -3.666993507067673e-05
    2. ' he' → logprob: -10.250036239624023
    3. '           ' → logprob: -14.250036239624023
    4. '   ' → logprob: -15.000036239624023
    5. 'heap' → logprob: -16.500036239624023
    6. '  ' → logprob: -18.250036239624023
    7. '               ' → logprob: -18.375036239624023
    8. '       ' → logprob: -18.375036239624023
    9. '            
' → logprob: -18.875036239624023
    10. '
' → logprob: -19.375036239624023

Token 437: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -6.704273118884885e-07
    2. 'ap' → logprob: -14.875000953674316
    3. 'append' → logprob: -16.375
    4. 'pp' → logprob: -17.25
    5. ' app' → logprob: -17.875
    6. 'a' → logprob: -18.5
    7. '```' → logprob: -19.25
    8. 'appen' → logprob: -19.5
    9. 'appt' → logprob: -20.125
    10. '_app' → logprob: -20.25

Token 438: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -2.856408536899835e-05
    2. 'push' → logprob: -10.500028610229492
    3. 'sh' → logprob: -14.000028610229492
    4. '```' → logprob: -16.625028610229492
    5. '   ' → logprob: -17.875028610229492
    6. 'op' → logprob: -18.000028610229492
    7. 'Push' → logprob: -18.375028610229492
    8. '.push' → logprob: -18.750028610229492
    9. '_push' → logprob: -19.250028610229492
    10. '[' → logprob: -19.250028610229492

Token 439: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -7.896309739408025e-07
    2. 'h' → logprob: -15.000000953674316
    3. 'hp' → logprob: -15.250000953674316
    4. '(' → logprob: -15.875000953674316
    5. ',h' → logprob: -17.375
    6. '(
' → logprob: -18.0
    7. '```' → logprob: -18.125
    8. ' hp' → logprob: -18.375
    9. '	h' → logprob: -19.0
    10. '[h' → logprob: -19.125

Token 440: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.868328920158092e-05
    2. 'hp' → logprob: -11.000028610229492
    3. '(h' → logprob: -12.125028610229492
    4. '(p' → logprob: -13.125028610229492
    5. 's' → logprob: -14.250028610229492
    6. '
' → logprob: -14.375028610229492
    7. '```' → logprob: -15.000028610229492
    8. '   ' → logprob: -15.000028610229492
    9. 'п' → logprob: -15.250028610229492
    10. 'h' → logprob: -15.375028610229492

Token 441: ',[' (ID: 35502)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.09788438677787781
    2. '([' → logprob: -3.0978844165802
    3. '((' → logprob: -3.7228844165802
    4. '(' → logprob: -4.597884178161621
    5. '(d' → logprob: -4.722884178161621
    6. ',(' → logprob: -5.722884178161621
    7. ',' → logprob: -6.972884178161621
    8. ')' → logprob: -7.972884178161621
    9. '(dp' → logprob: -9.222884178161621
    10. '(p' → logprob: -9.472884178161621

Token 442: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -4.632542913896032e-05
    2. '1' → logprob: -10.500046730041504
    3. '(d' → logprob: -11.875046730041504
    4. ' d' → logprob: -12.500046730041504
    5. '0' → logprob: -12.875046730041504
    6. '   ' → logprob: -12.875046730041504
    7. '
' → logprob: -13.875046730041504
    8. ' ' → logprob: -14.000046730041504
    9. ')d' → logprob: -15.500046730041504
    10. '(' → logprob: -15.875046730041504

Token 443: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -8.101369894575328e-05
    2. ' +' → logprob: -9.875081062316895
    3. '1' → logprob: -10.625081062316895
    4. '+j' → logprob: -13.000081062316895
    5. '+
' → logprob: -13.625081062316895
    6. ',' → logprob: -14.125081062316895
    7. '+,' → logprob: -15.125081062316895
    8. ',j' → logprob: -15.500081062316895
    9. '
' → logprob: -15.875081062316895
    10. '()+' → logprob: -16.125080108642578

Token 444: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.843177233240567e-05
    2. ' ' → logprob: -11.375018119812012
    3. '2' → logprob: -12.375018119812012
    4. '   ' → logprob: -14.687518119812012
    5. '0' → logprob: -14.750018119812012
    6. '```' → logprob: -15.312518119812012
    7. '
' → logprob: -15.437518119812012
    8. 'd' → logprob: -16.000019073486328
    9. '(' → logprob: -16.250019073486328
    10. 'a' → logprob: -16.500019073486328

Token 445: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.16033227741718292
    2. ',' → logprob: -1.9103323221206665
    3. ' ,' → logprob: -9.535332679748535
    4. 'j' → logprob: -10.410332679748535
    5. ',
' → logprob: -13.785332679748535
    6. '   ' → logprob: -14.160332679748535
    7. '```' → logprob: -14.285332679748535
    8. ',i' → logprob: -15.035332679748535
    9. ',k' → logprob: -15.535332679748535
    10. ' j' → logprob: -15.597832679748535

Token 446: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.002478508511558175
    2. ')' → logprob: -6.50247859954834
    3. '])
' → logprob: -7.00247859954834
    4. ')
' → logprob: -10.50247859954834
    5. ')]' → logprob: -10.87747859954834
    6. ')])' → logprob: -11.50247859954834
    7. '))' → logprob: -12.37747859954834
    8. '           ' → logprob: -13.25247859954834
    9. '       ' → logprob: -13.50247859954834
    10. '])
' → logprob: -14.62747859954834

Token 447: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009450050070881844
    2. ' for' → logprob: -5.0094499588012695
    3. 'for' → logprob: -6.1344499588012695
    4. '<|end|>' → logprob: -8.25944995880127
    5. '           ' → logprob: -9.13444995880127
    6. '   ' → logprob: -9.13444995880127
    7. '
' → logprob: -10.50944995880127
    8. ',' → logprob: -10.88444995880127
    9. 'b' → logprob: -11.75944995880127
    10. '```' → logprob: -11.88444995880127

Token 448: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6675719022750854
    2. '       ' → logprob: -1.4175719022750854
    3. ' for' → logprob: -1.4175719022750854
    4. '   ' → logprob: -6.042572021484375
    5. '	for' → logprob: -10.167572021484375
    6. ' ' → logprob: -11.167572021484375
    7. '  ' → logprob: -12.167572021484375
    8. '           ' → logprob: -13.042572021484375
    9. ' to' → logprob: -13.667572021484375
    10. '      ' → logprob: -13.792572021484375

Token 449: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06210717186331749
    2. ' j' → logprob: -2.8121070861816406
    3. 'b' → logprob: -9.06210708618164
    4. ' b' → logprob: -11.06210708618164
    5. 'i' → logprob: -13.31210708618164
    6. ' ' → logprob: -13.56210708618164
    7. '_j' → logprob: -13.68710708618164
    8. '   ' → logprob: -14.06210708618164
    9. 'k' → logprob: -14.06210708618164
    10. ' i' → logprob: -14.81210708618164

Token 450: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31326720118522644
    2. 'in' → logprob: -1.3132672309875488
    3. ' ' → logprob: -12.68826675415039
    4. '	in' → logprob: -13.56326675415039
    5. 'to' → logprob: -14.56326675415039
    6. ' ' → logprob: -15.81326675415039
    7. '  ' → logprob: -16.18826675415039
    8. '_' → logprob: -16.56326675415039
    9. '_in' → logprob: -16.56326675415039
    10. ',' → logprob: -17.06326675415039

Token 451: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.25192990899086
    2. ' to' → logprob: -1.5019298791885376
    3. '[to' → logprob: -15.001930236816406
    4. '(to' → logprob: -15.251930236816406
    5. '	to' → logprob: -15.751930236816406
    6. ' ' → logprob: -17.001930236816406
    7. 't' → logprob: -18.126930236816406
    8. ',to' → logprob: -18.251930236816406
    9. '_to' → logprob: -18.376930236816406
    10. '
' → logprob: -18.501930236816406

Token 452: '2' (ID: 17)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.143082395195961
    2. '2' → logprob: -2.0180823802948
    3. ' to' → logprob: -8.018082618713379
    4. '   ' → logprob: -10.393082618713379
    5. '[to' → logprob: -10.643082618713379
    6. '1' → logprob: -11.893082618713379
    7. 'two' → logprob: -12.268082618713379
    8. 'b' → logprob: -12.393082618713379
    9. ' ' → logprob: -13.768082618713379
    10. '```' → logprob: -13.768082618713379

Token 453: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -3.4121114822482923e-06
    2. 'b' → logprob: -13.000003814697266
    3. '[' → logprob: -15.125003814697266
    4. '(b' → logprob: -15.500003814697266
    5. '```' → logprob: -15.875003814697266
    6. '[
' → logprob: -15.875003814697266
    7. '[a' → logprob: -16.125003814697266
    8. '[(' → logprob: -16.250003814697266
    9. '[[' → logprob: -17.125003814697266
    10. '[B' → logprob: -17.250003814697266

Token 454: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.051915835589170456
    2. ']:
' → logprob: -3.0519158840179443
    3. ':' → logprob: -5.801915645599365
    4. ':
' → logprob: -8.551916122436523
    5. ']' → logprob: -9.426916122436523
    6. ']:
' → logprob: -11.676916122436523
    7. '       ' → logprob: -11.801916122436523
    8. '):' → logprob: -12.801916122436523
    9. ':]' → logprob: -13.176916122436523
    10. '   ' → logprob: -13.426916122436523

Token 455: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3117818534374237
    2. ':' → logprob: -1.436781883239746
    3. '<|end|>' → logprob: -3.936781883239746
    4. ':
' → logprob: -5.186781883239746
    5. '       ' → logprob: -5.686781883239746
    6. 'if' → logprob: -7.811781883239746
    7. ' if' → logprob: -8.311781883239746
    8. '   ' → logprob: -8.436781883239746
    9. '<|end|>' → logprob: -8.436781883239746
    10. ',' → logprob: -9.061781883239746

Token 456: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01061279233545065
    2. 'if' (adapté à ' if') → logprob: -4.760612964630127
    3. ' if' → logprob: -6.385612964630127
    4. '               ' → logprob: -8.510612487792969
    5. '       ' → logprob: -9.510612487792969
    6. '          ' → logprob: -11.510612487792969
    7. '	       ' → logprob: -12.010612487792969
    8. '<|end|>' → logprob: -12.260612487792969
    9. '   ' → logprob: -12.385612487792969
    10. '
' → logprob: -12.760612487792969

Token 457: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.347765181795694e-05
    2. ' j' → logprob: -9.875053405761719
    3. '   ' → logprob: -13.625053405761719
    4. 'dist' → logprob: -15.000053405761719
    5. 'not' → logprob: -16.75005340576172
    6. 't' → logprob: -16.75005340576172
    7. '    ' → logprob: -16.87505340576172
    8. '```' → logprob: -17.12505340576172
    9. 'i' → logprob: -17.25005340576172
    10. '  ' → logprob: -17.25005340576172

Token 458: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -8.65707261255011e-06
    2. ' ==' → logprob: -12.500008583068848
    3. '==
' → logprob: -13.125008583068848
    4. '==(' → logprob: -13.500008583068848
    5. ']==' → logprob: -13.875008583068848
    6. '==-' → logprob: -15.875008583068848
    7. '()==' → logprob: -16.125009536743164
    8. '=' → logprob: -16.250009536743164
    9. ')==' → logprob: -16.500009536743164
    10. '!=' → logprob: -16.625009536743164

Token 459: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -3.531315314830863e-06
    2. ' t' → logprob: -12.625003814697266
    3. 'i' → logprob: -16.250003814697266
    4. '   ' → logprob: -17.000003814697266
    5. 's' → logprob: -17.625003814697266
    6. '	t' → logprob: -17.750003814697266
    7. '(t' → logprob: -18.000003814697266
    8. '`t' → logprob: -18.000003814697266
    9. '
' → logprob: -18.625003814697266
    10. ' ' → logprob: -18.625003814697266

Token 460: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12752169370651245
    2. ':
' → logprob: -2.1275217533111572
    3. '               ' → logprob: -7.627521514892578
    4. '           ' → logprob: -10.127521514892578
    5. '<|end|>' → logprob: -10.377521514892578
    6. '):
' → logprob: -11.752521514892578
    7. ',' → logprob: -12.127521514892578
    8. '):' → logprob: -12.502521514892578
    9. ':return' → logprob: -12.627521514892578
    10. ')' → logprob: -12.752521514892578

Token 461: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05372902750968933
    2. ':
' → logprob: -3.4287290573120117
    3. '           ' → logprob: -4.178729057312012
    4. ':' → logprob: -5.553729057312012
    5. '<|end|>' → logprob: -8.428729057312012
    6. '              ' → logprob: -9.053729057312012
    7. '       ' → logprob: -10.303729057312012
    8. '   ' → logprob: -10.428729057312012
    9. '==' → logprob: -10.428729057312012
    10. '	       ' → logprob: -10.678729057312012

Token 462: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.03443783521652222
    2. ' print' → logprob: -3.409437894821167
    3. '(print' → logprob: -7.534437656402588
    4. '<|end|>' → logprob: -9.034438133239746
    5. '.print' → logprob: -9.284438133239746
    6. '(' → logprob: -10.534438133239746
    7. '           ' → logprob: -12.284438133239746
    8. '[' → logprob: -12.534438133239746
    9. '
' → logprob: -13.284438133239746
    10. '#print' → logprob: -13.534438133239746

Token 463: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.375001907348633
    3. 'd' → logprob: -15.750001907348633
    4. ' (' → logprob: -16.375001907348633
    5. '(
' → logprob: -18.500001907348633
    6. '((' → logprob: -19.625001907348633
    7. '[d' → logprob: -19.875001907348633
    8. ',d' → logprob: -20.125001907348633
    9. ' d' → logprob: -20.375001907348633
    10. '	d' → logprob: -20.750001907348633

Token 464: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.226628895296017e-06
    2. ' +' → logprob: -11.875007629394531
    3. '<|end|>' → logprob: -16.00000762939453
    4. '+
' → logprob: -17.12500762939453
    5. ')+' → logprob: -17.75000762939453
    6. '+)' → logprob: -18.37500762939453
    7. '<|end|>' → logprob: -18.87500762939453
    8. ')' → logprob: -19.00000762939453
    9. '()+' → logprob: -19.25000762939453
    10. '+')' → logprob: -19.50000762939453

Token 465: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.500004768371582
    3. '+' → logprob: -15.750004768371582
    4. '<|end|>' → logprob: -15.750004768371582
    5. '```' → logprob: -15.750004768371582
    6. '2' → logprob: -16.625003814697266
    7. '0' → logprob: -16.875003814697266
    8. '   ' → logprob: -17.000003814697266
    9. '`' → logprob: -18.750003814697266
    10. '
' → logprob: -18.750003814697266

Token 466: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5760983824729919
    2. ')' → logprob: -0.8260983824729919
    3. '               ' → logprob: -9.201098442077637
    4. ')
' → logprob: -9.826098442077637
    5. ')return' → logprob: -13.701098442077637
    6. '           ' → logprob: -14.451098442077637
    7. ' )
' → logprob: -14.826098442077637
    8. '<|end|>' → logprob: -15.076098442077637
    9. ')

' → logprob: -15.326098442077637
    10. ' )' → logprob: -15.451098442077637

Token 467: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010627062059938908
    2. '<|end|>' → logprob: -5.010627269744873
    3. '           ' → logprob: -6.135627269744873
    4. ')' → logprob: -7.385627269744873
    5. 'exit' → logprob: -7.760627269744873
    6. '
' → logprob: -8.135626792907715
    7. '              ' → logprob: -9.385626792907715
    8. ')
' → logprob: -9.760626792907715
    9. '                
' → logprob: -10.260626792907715
    10. '                   ' → logprob: -10.260626792907715

Token 468: ' exit' (ID: 10654)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' (adapté à ' exit') → logprob: -0.0009163398644886911
    2. ' exit' → logprob: -7.000916481018066
    3. '           ' → logprob: -12.875916481018066
    4. '	exit' → logprob: -14.000916481018066
    5. '               ' → logprob: -14.625916481018066
    6. '(exit' → logprob: -14.750916481018066
    7. '       ' → logprob: -15.125916481018066
    8. '.exit' → logprob: -15.500916481018066
    9. '
' → logprob: -15.875916481018066
    10. '_exit' → logprob: -17.50091552734375

Token 469: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5759491920471191
    2. '()
' → logprob: -0.8259491920471191
    3. '(' → logprob: -12.700948715209961
    4. '()[' → logprob: -13.075948715209961
    5. '()

' → logprob: -13.200948715209961
    6. '()
' → logprob: -14.075948715209961
    7. '(
' → logprob: -14.325948715209961
    8. '(j' → logprob: -14.450948715209961
    9. '()`' → logprob: -14.950948715209961
    10. '())
' → logprob: -15.575948715209961

Token 470: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.3226136767771095e-05
    2. '               ' → logprob: -10.625042915344238
    3. '          ' → logprob: -12.125042915344238
    4. '       ' → logprob: -12.250042915344238
    5. '		' → logprob: -12.625042915344238
    6. ' ' → logprob: -13.375042915344238
    7. '   ' → logprob: -14.125042915344238
    8. '         ' → logprob: -14.125042915344238
    9. '(' → logprob: -14.375042915344238
    10. '<|end|>' → logprob: -15.250042915344238

Token 471: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.9583383202552795
    2. ' if' → logprob: -0.9583383202552795
    3. '           ' → logprob: -1.4583382606506348
    4. '               ' → logprob: -9.083338737487793
    5. '       ' → logprob: -9.333338737487793
    6. '          ' → logprob: -10.208338737487793
    7. '         ' → logprob: -10.833338737487793
    8. ' ' → logprob: -10.958338737487793
    9. '   ' → logprob: -11.208338737487793
    10. '            ' → logprob: -11.583338737487793

Token 472: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.4740789234638214
    2. 'j' → logprob: -0.974078893661499
    3. '	j' → logprob: -14.474079132080078
    4. '   ' → logprob: -14.599079132080078
    5. '<|end|>' → logprob: -15.099079132080078
    6. '$j' → logprob: -15.599079132080078
    7. '    ' → logprob: -16.349079132080078
    8. '[j' → logprob: -16.474079132080078
    9. ' ' → logprob: -16.599079132080078
    10. ' ' → logprob: -17.161579132080078

Token 473: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -6.153795766294934e-06
    2. ' ==' → logprob: -13.000005722045898
    3. '==
' → logprob: -13.125005722045898
    4. '!=' → logprob: -13.500005722045898
    5. ']==' → logprob: -15.875005722045898
    6. '=' → logprob: -16.0000057220459
    7. ')==' → logprob: -16.6250057220459
    8. '==-' → logprob: -16.8750057220459
    9. '()==' → logprob: -17.2500057220459
    10. '===' → logprob: -17.7500057220459

Token 474: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.4617256056226324e-05
    2. ' i' → logprob: -11.250014305114746
    3. '   ' → logprob: -14.125014305114746
    4. 'j' → logprob: -15.000014305114746
    5. ' ' → logprob: -15.375014305114746
    6. '  ' → logprob: -16.875015258789062
    7. ''i' → logprob: -17.000015258789062
    8. '	i' → logprob: -17.500015258789062
    9. '     ' → logprob: -17.750015258789062
    10. '           ' → logprob: -17.750015258789062

Token 475: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02888307347893715
    2. 'continue' → logprob: -4.15388298034668
    3. '           ' → logprob: -4.40388298034668
    4. ' continue' → logprob: -8.90388298034668
    5. '       ' → logprob: -9.02888298034668
    6. '               ' → logprob: -9.27888298034668
    7. ':
' → logprob: -9.40388298034668
    8. '   ' → logprob: -10.15388298034668
    9. '	continue' → logprob: -10.90388298034668
    10. 'Continue' → logprob: -11.90388298034668

Token 476: 'continue' (ID: 19452)
  Prédit: 'continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -4.008129963040119e-06
    2. ' continue' → logprob: -12.625003814697266
    3. 'contin' → logprob: -15.125003814697266
    4. '	continue' → logprob: -15.750003814697266
    5. 'continu' → logprob: -15.875003814697266
    6. '   ' → logprob: -16.250003814697266
    7. 'cont' → logprob: -18.000003814697266
    8. '       ' → logprob: -18.000003814697266
    9. '
' → logprob: -18.250003814697266
    10. '           ' → logprob: -19.250003814697266

Token 477: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005046132951974869
    2. 'if' → logprob: -5.880046367645264
    3. ' if' → logprob: -6.880046367645264
    4. '<|end|>' → logprob: -7.130046367645264
    5. '   ' → logprob: -8.380045890808105
    6. '               ' → logprob: -10.005045890808105
    7. ' ' → logprob: -10.255045890808105
    8. '       ' → logprob: -10.755045890808105
    9. '          ' → logprob: -11.255045890808105
    10. '            
' → logprob: -11.380045890808105

Token 478: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007915244204923511
    2. '   ' → logprob: -8.125791549682617
    3. 'if' → logprob: -8.500791549682617
    4. ' if' → logprob: -8.625791549682617
    5. '       ' → logprob: -10.375791549682617
    6. '<|end|>' → logprob: -10.500791549682617
    7. '               ' → logprob: -10.875791549682617
    8. '```' → logprob: -11.125791549682617
    9. '            
' → logprob: -12.250791549682617
    10. '          ' → logprob: -12.375791549682617

Token 479: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0340709462761879
    2. ' if' → logprob: -3.7840709686279297
    3. '           ' → logprob: -4.53407096862793
    4. '   ' → logprob: -11.90907096862793
    5. '<|end|>' → logprob: -12.28407096862793
    6. '       ' → logprob: -12.40907096862793
    7. ' ' → logprob: -12.53407096862793
    8. 'If' → logprob: -13.03407096862793
    9. '               ' → logprob: -13.28407096862793
    10. '          ' → logprob: -13.40907096862793

Token 480: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2519342005252838
    2. ' dist' → logprob: -1.5019341707229614
    3. '(dist' → logprob: -12.626934051513672
    4. '	dist' → logprob: -13.501934051513672
    5. '   ' → logprob: -16.001934051513672
    6. '_dist' → logprob: -16.626934051513672
    7. '.dist' → logprob: -16.626934051513672
    8. 'Dist' → logprob: -17.126934051513672
    9. ' ' → logprob: -17.251934051513672
    10. '-dist' → logprob: -17.876934051513672

Token 481: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.320199877838604e-07
    2. 'j' → logprob: -15.125
    3. '[i' → logprob: -17.0
    4. '!=' → logprob: -17.375
    5. '[' → logprob: -18.875
    6. '```' → logprob: -19.25
    7. '	j' → logprob: -20.625
    8. '[
' → logprob: -21.125
    9. '   ' → logprob: -21.375
    10. ' j' → logprob: -21.5

Token 482: ']!=' (ID: 85780)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.6357284784317017
    2. ']!=' → logprob: -0.8857284784317017
    3. '!=-' → logprob: -2.885728359222412
    4. ')!=' → logprob: -7.010728359222412
    5. ' !=' → logprob: -7.510728359222412
    6. '[' → logprob: -8.26072883605957
    7. '[j' → logprob: -8.38572883605957
    8. '()!=' → logprob: -8.63572883605957
    9. '```' → logprob: -10.13572883605957
    10. '[i' → logprob: -10.76072883605957

Token 483: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.9361264946837764e-07
    2. ' -' → logprob: -16.125
    3. '1' → logprob: -17.5
    4. '```' → logprob: -19.125
    5. ' ' → logprob: -20.125
    6. '   ' → logprob: -21.25
    7. '	' → logprob: -21.875
    8. '
' → logprob: -23.125
    9. '0' → logprob: -23.25
    10. '[-' → logprob: -23.375

Token 484: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019430378451943398
    2. '-' → logprob: -6.251943111419678
    3. ' ' → logprob: -11.75194263458252
    4. '```' → logprob: -12.37694263458252
    5. ' -' → logprob: -13.50194263458252
    6. '<|end|>' → logprob: -15.37694263458252
    7. '   ' → logprob: -15.87694263458252
    8. '  ' → logprob: -16.501943588256836
    9. '2' → logprob: -16.501943588256836
    10. '...' → logprob: -16.626943588256836

Token 485: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42645975947380066
    2. 'continue' → logprob: -1.426459789276123
    3. '           ' → logprob: -2.426459789276123
    4. '               ' → logprob: -4.676459789276123
    5. ' continue' → logprob: -5.176459789276123
    6. ':
' → logprob: -6.676459789276123
    7. '	continue' → logprob: -6.801459789276123
    8. '       ' → logprob: -8.051459312438965
    9. 'Continue' → logprob: -8.176459312438965
    10. '	       ' → logprob: -9.051459312438965

Token 486: 'continue' (ID: 19452)
  Prédit: 'continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -4.961759259458631e-06
    2. ' continue' → logprob: -12.625004768371582
    3. 'contin' → logprob: -14.500004768371582
    4. 'continu' → logprob: -14.750004768371582
    5. '   ' → logprob: -15.000004768371582
    6. '	continue' → logprob: -16.0000057220459
    7. '       ' → logprob: -16.2500057220459
    8. '0' → logprob: -17.2500057220459
    9. 'Continue' → logprob: -17.2500057220459
    10. 'cont' → logprob: -17.7500057220459

Token 487: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0297914557158947
    2. 'he' → logprob: -4.154791355133057
    3. ' he' → logprob: -4.779791355133057
    4. '               ' → logprob: -5.279791355133057
    5. '   ' → logprob: -9.779791831970215
    6. '            ' → logprob: -10.779791831970215
    7. '                   ' → logprob: -11.029791831970215
    8. '[' → logprob: -11.029791831970215
    9. '		' → logprob: -11.279791831970215
    10. '       ' → logprob: -11.529791831970215

Token 488: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00834943912923336
    2. 'he' → logprob: -5.008349418640137
    3. ' he' → logprob: -6.633349418640137
    4. '               ' → logprob: -8.258349418640137
    5. '		' → logprob: -10.758349418640137
    6. '   ' → logprob: -11.258349418640137
    7. '          ' → logprob: -11.758349418640137
    8. '            ' → logprob: -12.133349418640137
    9. '       ' → logprob: -12.883349418640137
    10. '```' → logprob: -13.133349418640137

Token 489: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' (adapté à ' he') → logprob: -0.0005978313274681568
    2. '           ' → logprob: -8.000597953796387
    3. ' he' → logprob: -8.250597953796387
    4. '               ' → logprob: -14.500597953796387
    5. '   ' → logprob: -15.625597953796387
    6. '            ' → logprob: -15.625597953796387
    7. '```' → logprob: -15.750597953796387
    8. '          ' → logprob: -16.50059700012207
    9. 'heap' → logprob: -16.75059700012207
    10. '             ' → logprob: -17.87559700012207

Token 490: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.4868770196917467e-05
    2. 'pp' → logprob: -11.250024795532227
    3. 'push' → logprob: -11.625024795532227
    4. 'ap' → logprob: -13.250024795532227
    5. 'ush' → logprob: -14.500024795532227
    6. 'p' → logprob: -14.625024795532227
    7. 'appen' → logprob: -17.750024795532227
    8. 'a' → logprob: -18.000024795532227
    9. ' app' → logprob: -18.000024795532227
    10. 'App' → logprob: -18.625024795532227

Token 491: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -3.023293538717553e-05
    2. 'push' → logprob: -10.625030517578125
    3. 'sh' → logprob: -12.250030517578125
    4. 'op' → logprob: -14.500030517578125
    5. 'p' → logprob: -15.500030517578125
    6. '   ' → logprob: -16.375030517578125
    7. 'Push' → logprob: -16.625030517578125
    8. 'u' → logprob: -16.750030517578125
    9. '```' → logprob: -17.000030517578125
    10. 'ut' → logprob: -18.000030517578125

Token 492: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: 0.0
    2. '```' → logprob: -17.5
    3. 'h' → logprob: -17.75
    4. '[h' → logprob: -18.0
    5. '(p' → logprob: -19.5
    6. '(
' → logprob: -20.125
    7. '`' → logprob: -20.625
    8. ' (' → logprob: -20.875
    9. ' ' → logprob: -20.875
    10. 's' → logprob: -20.875

Token 493: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2540819048881531
    2. '(h' → logprob: -1.5040819644927979
    3. 'hp' → logprob: -6.254081726074219
    4. 'h' → logprob: -9.004081726074219
    5. 'q' → logprob: -9.879081726074219
    6. 'f' → logprob: -11.504081726074219
    7. 's' → logprob: -11.629081726074219
    8. 'd' → logprob: -11.879081726074219
    9. 'op' → logprob: -12.129081726074219
    10. 'ip' → logprob: -12.629081726074219

Token 494: ',[' (ID: 35502)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -7.958325295476243e-05
    2. '[' → logprob: -9.750079154968262
    3. '[h' → logprob: -12.125079154968262
    4. '([' → logprob: -12.375079154968262
    5. 'hp' → logprob: -12.750079154968262
    6. ',' → logprob: -12.875079154968262
    7. ',[' → logprob: -13.500079154968262
    8. '```' → logprob: -13.625079154968262
    9. ',h' → logprob: -14.000079154968262
    10. ')' → logprob: -15.000079154968262

Token 495: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.8550976164988242e-05
    2. ' d' → logprob: -11.250018119812012
    3. '[d' → logprob: -12.375018119812012
    4. '(d' → logprob: -13.625018119812012
    5. '	d' → logprob: -16.875019073486328
    6. '
' → logprob: -17.000019073486328
    7. ')d' → logprob: -17.125019073486328
    8. '   ' → logprob: -17.250019073486328
    9. '[' → logprob: -17.375019073486328
    10. ' ' → logprob: -17.375019073486328

Token 496: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003134168218821287
    2. '1' → logprob: -8.125313758850098
    3. ' +' → logprob: -11.250313758850098
    4. ' ' → logprob: -13.500313758850098
    5. '[' → logprob: -13.750313758850098
    6. 'j' → logprob: -14.250313758850098
    7. '+j' → logprob: -14.875313758850098
    8. ' j' → logprob: -15.250313758850098
    9. '+
' → logprob: -15.375313758850098
    10. '2' → logprob: -16.00031280517578

Token 497: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.319370302458992e-06
    2. ' ' → logprob: -12.375005722045898
    3. '+' → logprob: -14.250005722045898
    4. '```' → logprob: -15.875005722045898
    5. ')' → logprob: -17.0000057220459
    6. '   ' → logprob: -17.3750057220459
    7. 'j' → logprob: -17.6250057220459
    8. '
' → logprob: -18.1250057220459
    9. ']' → logprob: -18.1250057220459
    10. '2' → logprob: -18.5000057220459

Token 498: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.0048909736797213554
    2. ',' → logprob: -5.3798909187316895
    3. '[j' → logprob: -9.129891395568848
    4. ',[' → logprob: -9.629891395568848
    5. 'j' → logprob: -10.129891395568848
    6. ' ,' → logprob: -10.379891395568848
    7. '[' → logprob: -11.754891395568848
    8. ',
' → logprob: -12.629891395568848
    9. ',i' → logprob: -12.754891395568848
    10. '```' → logprob: -13.754891395568848

Token 499: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00033784625702537596
    2. '])
' → logprob: -8.000337600708008
    3. ')' → logprob: -13.250337600708008
    4. ' ])' → logprob: -15.250337600708008
    5. ')])' → logprob: -16.250337600708008
    6. ')]' → logprob: -16.500337600708008
    7. '])
' → logprob: -16.750337600708008
    8. ']' → logprob: -17.000337600708008
    9. '])]' → logprob: -17.625337600708008
    10. ']])' → logprob: -17.750337600708008

Token 500: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2456895411014557
    2. '
' → logprob: -1.7456895112991333
    3. '<|end|>' → logprob: -3.745689630508423
    4. '   ' → logprob: -4.745689392089844
    5. 'print' → logprob: -4.745689392089844
    6. '```' → logprob: -7.120689392089844
    7. ' if' → logprob: -7.995689392089844
    8. '    
' → logprob: -8.245689392089844
    9. 'return' → logprob: -8.370689392089844
    10. '\n' → logprob: -8.995689392089844

Token 501: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.0445127372804563e-05
    2. '```' → logprob: -11.87501049041748
    3. ' print' → logprob: -13.62501049041748
    4. '
' → logprob: -14.00001049041748
    5. '   ' → logprob: -14.12501049041748
    6. '#print' → logprob: -15.00001049041748
    7. '``' → logprob: -15.75001049041748
    8. '	print' → logprob: -16.750009536743164
    9. '-print' → logprob: -17.125009536743164
    10. '<|end|>' → logprob: -17.750009536743164

Token 502: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.00015085970517247915
    2. '(' → logprob: -9.000150680541992
    3. '("' → logprob: -11.125150680541992
    4. '('' → logprob: -12.375150680541992
    5. '("-' → logprob: -12.625150680541992
    6. '-' → logprob: -13.375150680541992
    7. '   ' → logprob: -13.500150680541992
    8. '(
' → logprob: -13.750150680541992
    9. '()' → logprob: -15.000150680541992
    10. '('-' → logprob: -15.750150680541992

Token 503: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '```' → logprob: -19.375
    4. '   ' → logprob: -19.5
    5. '
' → logprob: -20.5
    6. '2' → logprob: -20.875
    7. ')' → logprob: -21.0
    8. '１' → logprob: -21.9375
    9. '``' → logprob: -21.9375
    10. '-' → logprob: -22.25

Token 504: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ')
' → logprob: -13.750001907348633
    3. '())' → logprob: -16.125001907348633
    4. ' )' → logprob: -16.625001907348633
    5. '()' → logprob: -17.125001907348633
    6. ')`' → logprob: -17.250001907348633
    7. '')' → logprob: -17.500001907348633
    8. '）' → logprob: -17.750001907348633
    9. '`)' → logprob: -18.250001907348633
    10. '))' → logprob: -18.375001907348633

Token 505: 'main' (ID: 7731)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5301279425621033
    2. 'if' → logprob: -0.9051279425621033
    3. '\n' → logprob: -5.655128002166748
    4. '<|end|>' → logprob: -5.905128002166748
    5. '```' → logprob: -8.40512752532959
    6. 'main' → logprob: -8.78012752532959
    7. '\
' → logprob: -9.40512752532959
    8. '\' → logprob: -9.78012752532959
    9. ' if' → logprob: -10.03012752532959
    10. '

' → logprob: -10.03012752532959

Token 506: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 504
Tokens correctement prédits (1ère position, stricte): 253
Tokens correctement prédits (1ère position, avec adaptation): 277
Tokens correctement prédits (top 10): 432
Précision stricte (1ère position): 50.20%
Précision adaptée (1ère position): 54.96%
Précision (top 10): 85.71%
================================================================================
