================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline

X,Y,Z,N,M,S,T=map(int,input().split())

CS=[[0,0,0]]+[list(map(int,input().split()))+[i+1]+[0] for i in range(N)]
CC=[[0,0,0]]+[list(map(int,input().split()))+[i+1]+[1] for i in range(M)]

CS_SLIST=[[] for i in range(X+1)]
CS_CLIST=[[] for i in range(Y+1)]
CC_CLIST=[[] for i in range(Y+1)]
CC_ULIST=[[] for i in range(Z+1)]

for x,y,z,_ in CS[1:]:
    CS_SLIST[x].append(z)
    CS_CLIST[y].append(z)

for x,y,z,_ in CC[1:]:
    CC_CLIST[x].append(z)
    CC_ULIST[y].append(z)

import heapq
MINCOST_CS=[1<<30]*(N+1)
MINCOST_CC=[1<<30]*(M+1)

MINCOST_CS[S]=0

Q=[[0]+CS[S]]
USES=[0]*(X+1)
USEC=[0]*(Y+1)
USEU=[0]*(Z+1)

while Q:
    #print(Q)
    cost,x,y,z,cs=heapq.heappop(Q)
    
    if cs==0:

        if USES[x]==0:
            USES[x]=1
            for to in CS_SLIST[x]:
                if MINCOST_CS[to]>cost+1:
                    MINCOST_CS[to]=cost+1
                    heapq.heappush(Q,[cost+1]+CS[to])

        if USEC[y]==0:
            USEC[y]=1

            for to in CS_CLIST[y]:
                if MINCOST_CS[to]>cost+1:
                    MINCOST_CS[to]=cost+1
                    heapq.heappush(Q,[cost+1]+CS[to])

            for to in CC_CLIST[y]:
                if MINCOST_CC[to]>cost+1:
                    MINCOST_CC[to]=cost+1
                    heapq.heappush(Q,[cost+1]+CC[to])

    else:

        if USEU[y]==0:
            USEU[y]=1
            for to in CC_ULIST[y]:
                if MINCOST_CC[to]>cost+1:
                    MINCOST_CC[to]=cost+1
                    heapq.heappush(Q,[cost+1]+CC[to])

        if USEC[x]==0:
            USEC[x]=1

            for to in CS_CLIST[x]:
                if MINCOST_CS[to]>cost+1:
                    MINCOST_CS[to]=cost+1
                    heapq.heappush(Q,[cost+1]+CS[to])

            for to in CC_CLIST[x]:
                if MINCOST_CC[to]>cost+1:
                    MINCOST_CC[to]=cost+1
                    heapq.heappush(Q,[cost+1]+CC[to])

#print(MINCOST_CS)
#print(MINCOST_CC)

if MINCOST_CC[T]==1<<30:
    print(-1)
else:
    print(MINCOST_CC[T])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29731935262680054
    2. '\n' → logprob: -1.5473194122314453
    3. '<|end|>' → logprob: -3.7973194122314453
    4. '\' → logprob: -4.922319412231445
    5. 'newline' → logprob: -5.672319412231445
    6. 'import' → logprob: -5.672319412231445
    7. '<|end|>' → logprob: -6.047319412231445
    8. '
' → logprob: -6.922319412231445
    9. '```' → logprob: -6.922319412231445
    10. '' → logprob: -7.672319412231445

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004960254766047001
    2. '.' → logprob: -5.379960060119629
    3. ' (' → logprob: -9.379960060119629
    4. '(
' → logprob: -9.504960060119629
    5. ')' → logprob: -9.879960060119629
    6. '()' → logprob: -10.129960060119629
    7. '('' → logprob: -11.129960060119629
    8. '[' → logprob: -11.129960060119629
    9. ' ' → logprob: -11.754960060119629
    10. '=' → logprob: -11.879960060119629

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.014413704164326191
    2. 'sys' → logprob: -4.264413833618164
    3. ' input' → logprob: -8.514413833618164
    4. 'input' → logprob: -10.389413833618164
    5. ' ' → logprob: -12.014413833618164
    6. '=sys' → logprob: -12.139413833618164
    7. '	sys' → logprob: -12.389413833618164
    8. '(sys' → logprob: -12.889413833618164
    9. ' system' → logprob: -14.514413833618164
    10. ' lambda' → logprob: -16.514413833618164

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0013680962147191167
    2. ' .' → logprob: -7.376368045806885
    3. '.stdin' → logprob: -7.751368045806885
    4. '.import' → logprob: -9.251368522644043
    5. '.readline' → logprob: -9.501368522644043
    6. '.
' → logprob: -10.126368522644043
    7. '.argv' → logprob: -10.376368522644043
    8. '.stdout' → logprob: -11.501368522644043
    9. '.input' → logprob: -11.501368522644043
    10. '.exit' → logprob: -12.001368522644043

Token 7: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.3585807979106903
    2. '.' → logprob: -1.2335808277130127
    3. '.read' → logprob: -4.608580589294434
    4. '.readlines' → logprob: -9.733580589294434
    5. '```' → logprob: -10.733580589294434
    6. '.Read' → logprob: -11.483580589294434
    7. 'read' → logprob: -12.358580589294434
    8. ' .' → logprob: -12.983580589294434
    9. '().' → logprob: -12.983580589294434
    10. '.write' → logprob: -13.233580589294434

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.17288635671138763
    2. '(' → logprob: -1.9228863716125488
    3. '()
' → logprob: -5.672886371612549
    4. '(
' → logprob: -6.047886371612549
    5. '\' → logprob: -6.297886371612549
    6. '\n' → logprob: -6.672886371612549
    7. '
' → logprob: -6.797886371612549
    8. '()\' → logprob: -6.922886371612549
    9. '().' → logprob: -7.172886371612549
    10. '()

' → logprob: -8.79788589477539

Token 9: 'X' (ID: 55)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18130090832710266
    2. '(' → logprob: -1.8063008785247803
    3. '().' → logprob: -6.806301116943359
    4. '()
' → logprob: -8.80630111694336
    5. '(
' → logprob: -10.05630111694336
    6. '()

' → logprob: -10.30630111694336
    7. ')' → logprob: -10.43130111694336
    8. '#' → logprob: -10.43130111694336
    9. 'def' → logprob: -10.68130111694336
    10. 'a' → logprob: -10.68130111694336

Token 10: ',Y' (ID: 71464)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20721639692783356
    2. ')' → logprob: -2.457216501235962
    3. '+' → logprob: -3.457216501235962
    4. '=' → logprob: -3.707216501235962
    5. ' =' → logprob: -4.207216262817383
    6. '(' → logprob: -4.457216262817383
    7. ' ' → logprob: -4.832216262817383
    8. '.' → logprob: -5.207216262817383
    9. 's' → logprob: -7.082216262817383
    10. '_' → logprob: -7.207216262817383

Token 11: ',Z' (ID: 132501)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12837164103984833
    2. ',' → logprob: -2.6283717155456543
    3. '=' → logprob: -3.6283717155456543
    4. '<|end|>' → logprob: -4.503371715545654
    5. ' ' → logprob: -5.003371715545654
    6. ' ,' → logprob: -5.878371715545654
    7. ')' → logprob: -7.378371715545654
    8. '<|end|>' → logprob: -9.128371238708496
    9. '=input' → logprob: -10.253371238708496
    10. ' >' → logprob: -10.378371238708496

Token 12: ',N' (ID: 49539)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3588481843471527
    2. '=' → logprob: -1.483848214149475
    3. ',' → logprob: -2.6088480949401855
    4. ')' → logprob: -8.233848571777344
    5. ' ,' → logprob: -8.733848571777344
    6. '[' → logprob: -8.858848571777344
    7. '<|end|>' → logprob: -9.233848571777344
    8. '```' → logprob: -9.733848571777344
    9. '>' → logprob: -9.983848571777344
    10. ',a' → logprob: -10.108848571777344

Token 13: ',M' (ID: 54127)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38727349042892456
    2. ' =' → logprob: -1.1372735500335693
    3. ',' → logprob: -8.012273788452148
    4. 'for' → logprob: -11.387273788452148
    5. '=[]' → logprob: -11.512273788452148
    6. '=[' → logprob: -11.637273788452148
    7. '[' → logprob: -11.887273788452148
    8. ' ' → logprob: -12.262273788452148
    9. ' ,' → logprob: -12.262273788452148
    10. ' =[' → logprob: -12.387273788452148

Token 14: ',S' (ID: 42097)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3936176598072052
    2. ' =' → logprob: -1.1436176300048828
    3. ',' → logprob: -5.018617630004883
    4. ' ' → logprob: -10.018617630004883
    5. ' ,' → logprob: -10.393617630004883
    6. '=

' → logprob: -11.893617630004883
    7. '=input' → logprob: -12.518617630004883
    8. ' =
' → logprob: -12.643617630004883
    9. '=
' → logprob: -12.768617630004883
    10. '[' → logprob: -13.018617630004883

Token 15: ',T' (ID: 44428)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4981452524662018
    2. '=' → logprob: -0.9981452226638794
    3. ',' → logprob: -3.748145341873169
    4. ' ' → logprob: -9.49814510345459
    5. ' ,' → logprob: -10.12314510345459
    6. '[' → logprob: -10.37314510345459
    7. '.' → logprob: -11.49814510345459
    8. ')' → logprob: -11.99814510345459
    9. 'space' → logprob: -12.24814510345459
    10. '=input' → logprob: -12.37314510345459

Token 16: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03039226122200489
    2. '=' → logprob: -3.9053921699523926
    3. ',' → logprob: -5.030392169952393
    4. ' ' → logprob: -5.905392169952393
    5. ' ,' → logprob: -8.15539264678955
    6. '<|end|>' → logprob: -9.40539264678955
    7. '[' → logprob: -10.03039264678955
    8. ')' → logprob: -10.65539264678955
    9. ' =[' → logprob: -11.03039264678955
    10. '  ' → logprob: -11.03039264678955

Token 17: 'map' (ID: 3726)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3022446036338806
    2. 'map' → logprob: -1.4272446632385254
    3. ' map' → logprob: -3.9272446632385254
    4. ' ' → logprob: -7.052244663238525
    5. 'input' → logprob: -9.427244186401367
    6. '[' → logprob: -9.802244186401367
    7. '(map' → logprob: -10.177244186401367
    8. 'list' → logprob: -10.177244186401367
    9. 'int' → logprob: -10.927244186401367
    10. '5' → logprob: -11.052244186401367

Token 18: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23677383363246918
    2. '(int' → logprob: -2.361773729324341
    3. '(lambda' → logprob: -2.486773729324341
    4. '<|end|>' → logprob: -3.486773729324341
    5. '(str' → logprob: -6.61177396774292
    6. '(input' → logprob: -8.111773490905762
    7. '(
' → logprob: -8.361773490905762
    8. '<|end|>' → logprob: -8.736773490905762
    9. '(eval' → logprob: -9.236773490905762
    10. '()' → logprob: -9.736773490905762

Token 19: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.3338116705417633
    2. '(input' → logprob: -1.833811640739441
    3. ',' → logprob: -2.3338117599487305
    4. 'input' → logprob: -4.2088117599487305
    5. ')' → logprob: -4.9588117599487305
    6. '(' → logprob: -5.8338117599487305
    7. '(sys' → logprob: -6.5838117599487305
    8. ' input' → logprob: -8.20881175994873
    9. ',int' → logprob: -8.33381175994873
    10. '=input' → logprob: -9.33381175994873

Token 20: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.16280335187911987
    2. '()' → logprob: -2.5378034114837646
    3. '().' → logprob: -2.7878034114837646
    4. ')' → logprob: -4.7878031730651855
    5. '()))' → logprob: -7.0378031730651855
    6. '());' → logprob: -8.787803649902344
    7. '(' → logprob: -9.537803649902344
    8. '();)' → logprob: -10.037803649902344
    9. '()),' → logprob: -10.162803649902344
    10. ' ())' → logprob: -10.287803649902344

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00542383873835206
    2. 'strip' → logprob: -5.2554240226745605
    3. 'rstrip' → logprob: -8.630423545837402
    4. ' split' → logprob: -11.630423545837402
    5. ')' → logprob: -13.505423545837402
    6. '(split' → logprob: -14.130423545837402
    7. ' strip' → logprob: -16.00542449951172
    8. '_split' → logprob: -16.25542449951172
    9. 'read' → logprob: -16.38042449951172
    10. '.split' → logprob: -16.88042449951172

Token 22: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014962633140385151
    2. '))' → logprob: -4.389962673187256
    3. '())' → logprob: -6.264962673187256
    4. '()' → logprob: -7.764962673187256
    5. '(' → logprob: -10.389962196350098
    6. '`)' → logprob: -10.889962196350098
    7. '),' → logprob: -11.014962196350098
    8. '()))' → logprob: -11.639962196350098
    9. ')))' → logprob: -11.764962196350098
    10. ')`' → logprob: -11.764962196350098

Token 23: 'CS' (ID: 9310)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.37250494956970215
    2. 'a' → logprob: -1.7475049495697021
    3. 'A' → logprob: -2.872504949569702
    4. 'result' → logprob: -3.747504949569702
    5. 'arr' → logprob: -4.747505187988281
    6. 'for' → logprob: -5.247505187988281
    7. 'ans' → logprob: -5.372505187988281
    8. 'array' → logprob: -5.747505187988281
    9. 'graph' → logprob: -5.872505187988281
    10. 'X' → logprob: -5.872505187988281

Token 24: '=[[' (ID: 112637)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.6825899481773376
    2. '=' → logprob: -1.9325900077819824
    3. ' =' → logprob: -1.9325900077819824
    4. 'S' → logprob: -3.0575900077819824
    5. ',' → logprob: -3.5575900077819824
    6. '=[]' → logprob: -3.6825900077819824
    7. '_' → logprob: -4.307590007781982
    8. '=[' → logprob: -4.432590007781982
    9. '[' → logprob: -4.682590007781982
    10. 'Vs' → logprob: -4.807590007781982

Token 25: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12433388084173203
    2. 'int' → logprob: -2.2493338584899902
    3. 'list' → logprob: -5.12433385848999
    4. '*' → logprob: -6.74933385848999
    5. ']' → logprob: -6.87433385848999
    6. ']*' → logprob: -6.99933385848999
    7. 'False' → logprob: -7.24933385848999
    8. '[]' → logprob: -7.49933385848999
    9. 'map' → logprob: -8.249334335327148
    10. 'float' → logprob: -8.374334335327148

Token 26: ',' (ID: 11)
  Prédit: ']*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.396736204624176
    2. 'for' → logprob: -1.7717361450195312
    3. ' for' → logprob: -1.8967361450195312
    4. ']' → logprob: -5.146736145019531
    5. ']*(' → logprob: -6.646736145019531
    6. '	for' → logprob: -8.646736145019531
    7. ' ' → logprob: -10.521736145019531
    8. ',' → logprob: -10.771736145019531
    9. ']+' → logprob: -10.771736145019531
    10. ']]' → logprob: -11.521736145019531

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008052303455770016
    2. ' ' → logprob: -5.133052349090576
    3. ']' → logprob: -7.633052349090576
    4. 'Y' → logprob: -7.758052349090576
    5. '1' → logprob: -8.383051872253418
    6. 'X' → logprob: -8.508051872253418
    7. 'S' → logprob: -8.758051872253418
    8. '-' → logprob: -9.133051872253418
    9. '100' → logprob: -9.633051872253418
    10. 'int' → logprob: -9.883051872253418

Token 28: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5334108471870422
    2. ',' → logprob: -1.0334107875823975
    3. ']]' → logprob: -2.9084107875823975
    4. '],' → logprob: -6.908411026000977
    5. ']]]' → logprob: -7.783411026000977
    6. '],[' → logprob: -7.908411026000977
    7. ']*' → logprob: -8.033411026000977
    8. '0' → logprob: -8.158411026000977
    9. ' ]' → logprob: -8.908411026000977
    10. ']+' → logprob: -9.158411026000977

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0018353492487221956
    2. '[]' → logprob: -7.376835346221924
    3. '1' → logprob: -8.251835823059082
    4. 'S' → logprob: -9.001835823059082
    5. ' ' → logprob: -9.126835823059082
    6. '-' → logprob: -9.126835823059082
    7. '100' → logprob: -9.876835823059082
    8. 'Y' → logprob: -10.001835823059082
    9. 'X' → logprob: -10.126835823059082
    10. 'Z' → logprob: -10.126835823059082

Token 30: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.31882864236831665
    2. '],' → logprob: -1.8188285827636719
    3. ',' → logprob: -2.693828582763672
    4. ']]' → logprob: -3.568828582763672
    5. '],[' → logprob: -4.318828582763672
    6. '0' → logprob: -7.193828582763672
    7. ' ]' → logprob: -8.818828582763672
    8. ']*' → logprob: -9.068828582763672
    9. '],
' → logprob: -9.193828582763672
    10. ' for' → logprob: -9.568828582763672

Token 31: '+[' (ID: 166077)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 32: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0007485175738111138
    2. '[list' → logprob: -8.000748634338379
    3. ' list' → logprob: -8.625748634338379
    4. '[' → logprob: -9.125748634338379
    5. 'map' → logprob: -9.750748634338379
    6. '[*' → logprob: -10.625748634338379
    7. '[]' → logprob: -11.375748634338379
    8. 'tuple' → logprob: -11.500748634338379
    9. '[int' → logprob: -12.125748634338379
    10. '0' → logprob: -12.125748634338379

Token 33: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -7.703443770878948e-06
    2. '(' → logprob: -11.875007629394531
    3. '	map' → logprob: -15.500007629394531
    4. ' map' → logprob: -15.500007629394531
    5. 'map' → logprob: -15.625007629394531
    6. '(int' → logprob: -17.25000762939453
    7. '()' → logprob: -17.75000762939453
    8. ',map' → logprob: -17.87500762939453
    9. '(
' → logprob: -19.12500762939453
    10. '```' → logprob: -19.50000762939453

Token 34: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00047607114538550377
    2. ',int' → logprob: -8.375475883483887
    3. '<int' → logprob: -9.250475883483887
    4. 'int' → logprob: -9.625475883483887
    5. '[int' → logprob: -10.000475883483887
    6. ']int' → logprob: -10.500475883483887
    7. '=int' → logprob: -11.750475883483887
    8. ' int' → logprob: -14.000475883483887
    9. ':int' → logprob: -14.625475883483887
    10. '(' → logprob: -14.750475883483887

Token 35: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.00018542143516242504
    2. ',' → logprob: -9.375185012817383
    3. '(input' → logprob: -9.375185012817383
    4. 'input' → logprob: -11.250185012817383
    5. ',int' → logprob: -14.000185012817383
    6. ' ,' → logprob: -14.500185012817383
    7. '(' → logprob: -14.625185012817383
    8. ',(' → logprob: -15.125185012817383
    9. ' input' → logprob: -15.625185012817383
    10. ',x' → logprob: -16.125185012817383

Token 36: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.60414821645827e-06
    2. '.' → logprob: -13.000004768371582
    3. ' ().' → logprob: -13.375004768371582
    4. '.split' → logprob: -15.375004768371582
    5. '.readline' → logprob: -15.375004768371582
    6. '()' → logprob: -15.500004768371582
    7. ' .' → logprob: -16.875003814697266
    8. '(' → logprob: -17.500003814697266
    9. ').' → logprob: -17.875003814697266
    10. ')' → logprob: -18.000003814697266

Token 37: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.4974866644479334e-05
    2. 'strip' → logprob: -11.625015258789062
    3. 'rstrip' → logprob: -12.250015258789062
    4. 'read' → logprob: -14.125015258789062
    5. ' split' → logprob: -15.000015258789062
    6. 'spl' → logprob: -17.375015258789062
    7. '(split' → logprob: -18.250015258789062
    8. 'plit' → logprob: -18.250015258789062
    9. '.split' → logprob: -18.375015258789062
    10. '.readline' → logprob: -19.625015258789062

Token 38: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.057563673704862595
    2. '))' → logprob: -2.9325637817382812
    3. '()' → logprob: -6.182563781738281
    4. '())' → logprob: -7.557563781738281
    5. ')' → logprob: -10.307563781738281
    6. '(' → logprob: -10.432563781738281
    7. '())))' → logprob: -11.557563781738281
    8. '()))
' → logprob: -11.932563781738281
    9. '().' → logprob: -12.807563781738281
    10. ')))' → logprob: -12.932563781738281

Token 39: '+[' (ID: 166077)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.23019936680793762
    2. '())' → logprob: -1.6051993370056152
    3. ')' → logprob: -5.480199337005615
    4. '()]' → logprob: -7.855199337005615
    5. '(' → logprob: -8.980199813842773
    6. '()))' → logprob: -10.480199813842773
    7. 'for' → logprob: -10.980199813842773
    8. '()),' → logprob: -11.730199813842773
    9. '(input' → logprob: -11.980199813842773
    10. '()[' → logprob: -12.355199813842773

Token 40: 'i' (ID: 72)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00431190337985754
    2. ' ' → logprob: -5.879312038421631
    3. 'S' → logprob: -7.754312038421631
    4. '1' → logprob: -7.754312038421631
    5. 'i' → logprob: -8.754311561584473
    6. 'int' → logprob: -9.004311561584473
    7. 'CS' → logprob: -9.879311561584473
    8. 'Z' → logprob: -10.004311561584473
    9. 'M' → logprob: -10.379311561584473
    10. '-' → logprob: -10.504311561584473

Token 41: '+' (ID: 10)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6472296118736267
    2. ']' → logprob: -0.7722296118736267
    3. 'for' → logprob: -4.3972296714782715
    4. '+' → logprob: -6.8972296714782715
    5. ' ]' → logprob: -7.0222296714782715
    6. ' ' → logprob: -9.397229194641113
    7. 'd' → logprob: -9.647229194641113
    8. '	for' → logprob: -10.022229194641113
    9. ']]' → logprob: -10.397229194641113
    10. 'n' → logprob: -10.772229194641113

Token 42: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0032105150166898966
    2. ' ' → logprob: -5.753210544586182
    3. '0' → logprob: -10.878210067749023
    4. '-' → logprob: -12.003210067749023
    5. '2' → logprob: -12.753210067749023
    6. '+' → logprob: -14.003210067749023
    7. '7' → logprob: -14.003210067749023
    8. '3' → logprob: -14.753210067749023
    9. ' ' → logprob: -14.753210067749023
    10. '10' → logprob: -15.253210067749023

Token 43: ']+' (ID: 15344)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.507101833820343
    2. ']' → logprob: -1.1321017742156982
    3. 'for' → logprob: -2.6321017742156982
    4. ' ' → logprob: -6.507102012634277
    5. ' ]' → logprob: -6.632102012634277
    6. '	for' → logprob: -8.257102012634277
    7. ')' → logprob: -8.507102012634277
    8. ']]' → logprob: -9.132102012634277
    9. '   ' → logprob: -10.757102012634277
    10. '  ' → logprob: -11.007102012634277

Token 44: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.024411384016275406
    2. ' [' → logprob: -3.89941143989563
    3. '[i' → logprob: -6.024411201477051
    4. ']' → logprob: -7.899411201477051
    5. ' for' → logprob: -8.52441120147705
    6. 'for' → logprob: -9.02441120147705
    7. '['' → logprob: -9.27441120147705
    8. '[-' → logprob: -9.27441120147705
    9. '["' → logprob: -9.27441120147705
    10. '[j' → logprob: -9.39941120147705

Token 45: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006603579502552748
    2. ' ' → logprob: -6.256603717803955
    3. '[' → logprob: -7.131603717803955
    4. '1' → logprob: -7.131603717803955
    5. 'i' → logprob: -7.381603717803955
    6. ']' → logprob: -7.381603717803955
    7. '-' → logprob: -7.631603717803955
    8. 'j' → logprob: -8.631603240966797
    9. 'False' → logprob: -8.944103240966797
    10. '[i' → logprob: -9.194103240966797

Token 46: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.304343044757843
    2. ' for' → logprob: -1.4293429851531982
    3. 'for' → logprob: -4.429343223571777
    4. ' ]' → logprob: -5.054343223571777
    5. ' ' → logprob: -6.179343223571777
    6. ']*' → logprob: -6.304343223571777
    7. ']]' → logprob: -8.304343223571777
    8. ']*(' → logprob: -8.929343223571777
    9. '	for' → logprob: -9.054343223571777
    10. ',' → logprob: -9.804343223571777

Token 47: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20303119719028473
    2. 'for' → logprob: -1.7030311822891235
    3. '	for' → logprob: -7.078031063079834
    4. ' ' → logprob: -7.203031063079834
    5. '   ' → logprob: -11.578031539916992
    6. '  ' → logprob: -11.578031539916992
    7. ']' → logprob: -13.203031539916992
    8. ' ' → logprob: -13.828031539916992
    9. ')' → logprob: -13.953031539916992
    10. '	' → logprob: -14.328031539916992

Token 48: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2277158796787262
    2. ' _' → logprob: -2.2277159690856934
    3. '_' → logprob: -2.4777159690856934
    4. 'range' → logprob: -4.602715969085693
    5. ' i' → logprob: -6.477715969085693
    6. ' ' → logprob: -8.477715492248535
    7. 'i' → logprob: -10.102715492248535
    8. '_range' → logprob: -10.352715492248535
    9. ' xrange' → logprob: -10.352715492248535
    10. '	range' → logprob: -10.602715492248535

Token 49: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001432620221748948
    2. 'in' → logprob: -6.626432418823242
    3. ' range' → logprob: -9.501432418823242
    4. 'range' → logprob: -10.501432418823242
    5. ' ' → logprob: -12.501432418823242
    6. '<|end|>' → logprob: -14.876432418823242
    7. ' xrange' → logprob: -15.501432418823242
    8. '	range' → logprob: -16.876432418823242
    9. '	in' → logprob: -17.126432418823242
    10. 's' → logprob: -18.001432418823242

Token 50: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4740775227546692
    2. 'range' → logprob: -0.9740775227546692
    3. '	range' → logprob: -14.599077224731445
    4. '(range' → logprob: -17.599077224731445
    5. ' ' → logprob: -18.224077224731445
    6. 'rang' → logprob: -18.599077224731445
    7. ' xrange' → logprob: -18.599077224731445
    8. '.range' → logprob: -19.349077224731445
    9. 'r' → logprob: -19.974077224731445
    10. '_range' → logprob: -20.099077224731445

Token 51: '(N' (ID: 10564)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.27192986011505127
    2. '(N' → logprob: -1.6469298601150513
    3. '(Y' → logprob: -4.021929740905762
    4. '(X' → logprob: -4.521929740905762
    5. '(' → logprob: -4.771929740905762
    6. '(Z' → logprob: -5.271929740905762
    7. '(S' → logprob: -5.896929740905762
    8. 'M' → logprob: -9.396929740905762
    9. '(T' → logprob: -9.771929740905762
    10. ' (' → logprob: -10.271929740905762

Token 52: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0001577698567416519
    2. ')' → logprob: -9.250157356262207
    3. ')])' → logprob: -10.375157356262207
    4. ')],' → logprob: -11.375157356262207
    5. ']' → logprob: -11.375157356262207
    6. '])]' → logprob: -13.000157356262207
    7. '])' → logprob: -13.375157356262207
    8. ')]
' → logprob: -13.750157356262207
    9. ')][' → logprob: -14.250157356262207
    10. '))' → logprob: -14.750157356262207

Token 53: 'CC' (ID: 4433)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06119024381041527
    2. '<|end|>' → logprob: -3.561190128326416
    3. ' 
' → logprob: -4.311190128326416
    4. 'for' → logprob: -5.561190128326416
    5. ' for' → logprob: -5.686190128326416
    6. ']' → logprob: -6.061190128326416
    7. ' ' → logprob: -6.311190128326416
    8. '  
' → logprob: -6.436190128326416
    9. ')' → logprob: -6.936190128326416
    10. '[' → logprob: -7.436190128326416

Token 54: '=[[' (ID: 112637)
  Prédit: '=['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.7785523533821106
    2. '=[[' → logprob: -1.4035522937774658
    3. 'S' → logprob: -1.7785522937774658
    4. '=' → logprob: -2.278552293777466
    5. '=[]' → logprob: -4.778552532196045
    6. '[' → logprob: -5.278552532196045
    7. ' =' → logprob: -6.153552532196045
    8. 's' → logprob: -6.903552532196045
    9. '=S' → logprob: -7.528552532196045
    10. ' =[' → logprob: -7.653552532196045

Token 55: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002238520188257098
    2. 'int' → logprob: -6.377238750457764
    3. 'i' → logprob: -8.502238273620605
    4. ']' → logprob: -9.377238273620605
    5. 'list' → logprob: -10.002238273620605
    6. ' ' → logprob: -10.377238273620605
    7. '1' → logprob: -10.877238273620605
    8. 'S' → logprob: -11.002238273620605
    9. '*' → logprob: -11.377238273620605
    10. 'input' → logprob: -11.502238273620605

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008528703474439681
    2. '0' → logprob: -7.125853061676025
    3. ']' → logprob: -10.875852584838867
    4. ' ,' → logprob: -11.375852584838867
    5. ']]' → logprob: -12.375852584838867
    6. ']+' → logprob: -12.875852584838867
    7. '[' → logprob: -13.688352584838867
    8. ' ' → logprob: -13.938352584838867
    9. ']*' → logprob: -14.063352584838867
    10. ',int' → logprob: -14.125852584838867

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012880703434348106
    2. ' ' → logprob: -9.625128746032715
    3. ']' → logprob: -10.375128746032715
    4. '1' → logprob: -10.875128746032715
    5. ']*' → logprob: -12.875128746032715
    6. ']]' → logprob: -13.375128746032715
    7. '[' → logprob: -13.625128746032715
    8. '2' → logprob: -13.875128746032715
    9. 'i' → logprob: -13.875128746032715
    10. ']+' → logprob: -14.000128746032715

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003206592286005616
    2. '0' → logprob: -5.753206729888916
    3. ' ,' → logprob: -11.378206253051758
    4. ']' → logprob: -11.503206253051758
    5. ']]' → logprob: -12.878206253051758
    6. ' ' → logprob: -13.128206253051758
    7. ']+' → logprob: -13.753206253051758
    8. '1' → logprob: -15.378206253051758
    9. '```' → logprob: -15.440706253051758
    10. '00' → logprob: -15.753206253051758

Token 59: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.875024795532227
    3. '1' → logprob: -12.875024795532227
    4. '[' → logprob: -14.187524795532227
    5. ']' → logprob: -14.375024795532227
    6. '<|end|>' → logprob: -15.062524795532227
    7. ']]' → logprob: -15.500024795532227
    8. ',' → logprob: -15.875024795532227
    9. '...' → logprob: -15.937524795532227
    10. '2' → logprob: -16.312524795532227

Token 60: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.610328197479248
    2. ']]' → logprob: -0.985328197479248
    3. ']+' → logprob: -2.485328197479248
    4. '0' → logprob: -9.360328674316406
    5. ',' → logprob: -10.110328674316406
    6. ' ]' → logprob: -10.860328674316406
    7. '],[' → logprob: -11.735328674316406
    8. '```' → logprob: -12.110328674316406
    9. ' for' → logprob: -12.235328674316406
    10. ']]]' → logprob: -12.610328674316406

Token 61: '+[' (ID: 166077)
  Prédit: '+['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+[' → logprob: -0.0935688242316246
    2. '+' → logprob: -2.593568801879883
    3. ' for' → logprob: -4.968568801879883
    4. 'for' → logprob: -5.218568801879883
    5. ' +' → logprob: -7.093568801879883
    6. '<|end|>' → logprob: -7.468568801879883
    7. '+(' → logprob: -8.218568801879883
    8. ']+' → logprob: -8.468568801879883
    9. '+
' → logprob: -9.718568801879883
    10. '
' → logprob: -10.093568801879883

Token 62: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -6.349075556499884e-05
    2. ' list' → logprob: -10.0000638961792
    3. '[list' → logprob: -11.5000638961792
    4. 'int' → logprob: -12.0000638961792
    5. '(list' → logprob: -14.5000638961792
    6. 'map' → logprob: -14.8750638961792
    7. '[int' → logprob: -15.0000638961792
    8. 'sorted' → logprob: -16.250062942504883
    9. '[' → logprob: -16.500062942504883
    10. '	list' → logprob: -16.875062942504883

Token 63: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -3.190178904333152e-05
    2. '(' → logprob: -10.500031471252441
    3. '(int' → logprob: -12.750031471252441
    4. ' (' → logprob: -14.750031471252441
    5. '<|end|>' → logprob: -15.125031471252441
    6. '(range' → logprob: -15.500031471252441
    7. ',map' → logprob: -16.000032424926758
    8. 'map' → logprob: -16.375032424926758
    9. '(eval' → logprob: -16.625032424926758
    10. '(list' → logprob: -16.875032424926758

Token 64: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -1.7835754988482222e-05
    2. ',int' → logprob: -11.625018119812012
    3. '<int' → logprob: -12.375018119812012
    4. '=int' → logprob: -13.750018119812012
    5. 'int' → logprob: -13.875018119812012
    6. '(' → logprob: -14.125018119812012
    7. '(lambda' → logprob: -14.375018119812012
    8. ']int' → logprob: -14.500018119812012
    9. '<|end|>' → logprob: -14.750018119812012
    10. '[int' → logprob: -15.000018119812012

Token 65: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.0037403409369289875
    2. ',int' → logprob: -5.878740310668945
    3. '(input' → logprob: -7.003740310668945
    4. 'input' → logprob: -11.378740310668945
    5. '(int' → logprob: -11.628740310668945
    6. ',' → logprob: -12.253740310668945
    7. '=input' → logprob: -15.253740310668945
    8. ' ,' → logprob: -15.503740310668945
    9. '```' → logprob: -15.503740310668945
    10. 'int' → logprob: -15.503740310668945

Token 66: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0280383548888494e-06
    2. '()' → logprob: -14.125000953674316
    3. ' ().' → logprob: -16.625001907348633
    4. '].' → logprob: -17.250001907348633
    5. '().__' → logprob: -17.750001907348633
    6. '(' → logprob: -17.750001907348633
    7. '.' → logprob: -18.000001907348633
    8. '()-' → logprob: -18.000001907348633
    9. '()].' → logprob: -18.125001907348633
    10. '.split' → logprob: -18.625001907348633

Token 67: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.5776860184123507e-06
    2. 'spl' → logprob: -13.00000286102295
    3. '(split' → logprob: -16.500001907348633
    4. ' split' → logprob: -16.625001907348633
    5. '```' → logprob: -17.750001907348633
    6. '.split' → logprob: -18.000001907348633
    7. 'strip' → logprob: -18.000001907348633
    8. 'plit' → logprob: -18.375001907348633
    9. 'read' → logprob: -19.000001907348633
    10. '_split' → logprob: -19.625001907348633

Token 68: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.030478747561573982
    2. '()[' → logprob: -3.6554787158966064
    3. '()' → logprob: -6.1554789543151855
    4. '))' → logprob: -6.6554789543151855
    5. '().' → logprob: -7.7804789543151855
    6. '())[' → logprob: -8.905478477478027
    7. '())' → logprob: -9.655478477478027
    8. '())).' → logprob: -9.905478477478027
    9. '))[' → logprob: -10.155478477478027
    10. '()))
' → logprob: -11.030478477478027

Token 69: '+[' (ID: 166077)
  Prédit: ')+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.021925445646047592
    2. ')' → logprob: -4.396925449371338
    3. '+[' → logprob: -4.771925449371338
    4. ' for' → logprob: -8.14692497253418
    5. 'for' → logprob: -8.27192497253418
    6. ')[' → logprob: -9.64692497253418
    7. ')+(' → logprob: -9.64692497253418
    8. ']+' → logprob: -9.64692497253418
    9. '()+' → logprob: -10.14692497253418
    10. '+' → logprob: -10.14692497253418

Token 70: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0031871015671640635
    2. ' i' → logprob: -6.37818717956543
    3. '0' → logprob: -6.87818717956543
    4. '[i' → logprob: -8.37818717956543
    5. '[' → logprob: -9.87818717956543
    6. ' ' → logprob: -10.12818717956543
    7. '1' → logprob: -10.75318717956543
    8. 'int' → logprob: -11.37818717956543
    9. 'j' → logprob: -11.44068717956543
    10. ' [' → logprob: -12.00318717956543

Token 71: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.5776860184123507e-06
    2. ' +' → logprob: -13.25000286102295
    3. ']+' → logprob: -14.62500286102295
    4. '+
' → logprob: -16.375001907348633
    5. '<|end|>' → logprob: -16.625001907348633
    6. '＋' → logprob: -17.625001907348633
    7. '()+' → logprob: -17.875001907348633
    8. '+[' → logprob: -18.125001907348633
    9. '+]' → logprob: -18.375001907348633
    10. '[' → logprob: -18.875001907348633

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021521867893170565
    2. '0' → logprob: -8.750215530395508
    3. '+' → logprob: -10.125215530395508
    4. ' ' → logprob: -11.375215530395508
    5. '2' → logprob: -12.375215530395508
    6. '-' → logprob: -15.125215530395508
    7. '```' → logprob: -15.125215530395508
    8. '<|end|>' → logprob: -16.312715530395508
    9. 'i' → logprob: -16.937715530395508
    10. '5' → logprob: -17.062715530395508

Token 73: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.0006429764907807112
    2. ']' → logprob: -7.375642776489258
    3. ' ]' → logprob: -12.000642776489258
    4. '+' → logprob: -12.125642776489258
    5. ')+' → logprob: -13.125642776489258
    6. '+[' → logprob: -14.125642776489258
    7. ']]' → logprob: -14.250642776489258
    8. ' for' → logprob: -14.875642776489258
    9. '+]' → logprob: -15.250642776489258
    10. '][' → logprob: -16.000642776489258

Token 74: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006840797723270953
    2. '+[' → logprob: -7.3756842613220215
    3. ' [' → logprob: -10.000683784484863
    4. '[i' → logprob: -12.375683784484863
    5. '0' → logprob: -13.375683784484863
    6. '+' → logprob: -13.500683784484863
    7. '][' → logprob: -14.125683784484863
    8. ']' → logprob: -14.375683784484863
    9. ']+' → logprob: -14.500683784484863
    10. '[S' → logprob: -14.625683784484863

Token 75: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003349178470671177
    2. '1' → logprob: -6.128349304199219
    3. 'i' → logprob: -8.128349304199219
    4. '-' → logprob: -8.253349304199219
    5. 'int' → logprob: -8.503349304199219
    6. ' ' → logprob: -8.628349304199219
    7. ']' → logprob: -9.753349304199219
    8. 'M' → logprob: -10.503349304199219
    9. 'j' → logprob: -10.878349304199219
    10. 'S' → logprob: -11.315849304199219

Token 76: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -7.028536492725834e-05
    2. ' ]' → logprob: -10.000070571899414
    3. ']]' → logprob: -11.250070571899414
    4. ')]' → logprob: -12.625070571899414
    5. ']
' → logprob: -12.750070571899414
    6. '0' → logprob: -13.875070571899414
    7. '`]' → logprob: -14.125070571899414
    8. ']+' → logprob: -14.250070571899414
    9. ' for' → logprob: -14.375070571899414
    10. ']

' → logprob: -14.625070571899414

Token 77: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.28506261110305786
    2. ']' → logprob: -1.785062551498413
    3. 'for' → logprob: -2.535062551498413
    4. ' ]' → logprob: -7.035062789916992
    5. ' ' → logprob: -10.035062789916992
    6. ')' → logprob: -10.785062789916992
    7. '	for' → logprob: -11.035062789916992
    8. ']+' → logprob: -11.660062789916992
    9. ')]' → logprob: -12.160062789916992
    10. ']]' → logprob: -12.660062789916992

Token 78: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20143185555934906
    2. 'i' → logprob: -1.7014318704605103
    3. '_i' → logprob: -11.951432228088379
    4. '_' → logprob: -12.451432228088379
    5. ' _' → logprob: -12.826432228088379
    6. ' range' → logprob: -13.076432228088379
    7. ' in' → logprob: -13.451432228088379
    8. '	i' → logprob: -14.451432228088379
    9. 'range' → logprob: -14.701432228088379
    10. ' ' → logprob: -14.826432228088379

Token 79: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0017143317963927984
    2. 'in' → logprob: -6.37671422958374
    3. 'range' → logprob: -11.626714706420898
    4. ' range' → logprob: -13.376714706420898
    5. ' ' → logprob: -14.376714706420898
    6. ' i' → logprob: -14.751714706420898
    7. 'i' → logprob: -15.126714706420898
    8. '(range' → logprob: -16.1267147064209
    9. 'n' → logprob: -16.5017147064209
    10. '_' → logprob: -17.2517147064209

Token 80: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16022828221321106
    2. ' range' → logprob: -1.9102282524108887
    3. '(range' → logprob: -12.535228729248047
    4. '	range' → logprob: -15.035228729248047
    5. ' ' → logprob: -16.035228729248047
    6. 'rang' → logprob: -17.285228729248047
    7. ' xrange' → logprob: -18.035228729248047
    8. '  ' → logprob: -18.160228729248047
    9. '```' → logprob: -18.972728729248047
    10. '   ' → logprob: -19.035228729248047

Token 81: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.1803743690252304
    2. '(N' → logprob: -1.8053743839263916
    3. '(' → logprob: -7.8053741455078125
    4. 'M' → logprob: -9.555374145507812
    5. ' (' → logprob: -9.680374145507812
    6. '(S' → logprob: -10.555374145507812
    7. 'N' → logprob: -10.930374145507812
    8. ' M' → logprob: -11.430374145507812
    9. ' range' → logprob: -11.930374145507812
    10. '(C' → logprob: -12.555374145507812

Token 82: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0014399961801245809
    2. ')' → logprob: -6.626440048217773
    3. ']' → logprob: -9.126440048217773
    4. '])' → logprob: -13.001440048217773
    5. ')])' → logprob: -13.751440048217773
    6. ')],' → logprob: -14.501440048217773
    7. '))' → logprob: -14.751440048217773
    8. '])]' → logprob: -14.751440048217773
    9. ')]
' → logprob: -15.751440048217773
    10. ')}' → logprob: -16.001440048217773

Token 83: 'CS' (ID: 9310)
  Prédit: 'CS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CS' → logprob: -0.40179261565208435
    2. 'dp' → logprob: -1.6517926454544067
    3. 'DP' → logprob: -3.276792526245117
    4. 'Q' → logprob: -4.151792526245117
    5. 'import' → logprob: -4.276792526245117
    6. 'cs' → logprob: -4.776792526245117
    7. 'from' → logprob: -5.151792526245117
    8. 'all' → logprob: -5.401792526245117
    9. 'd' → logprob: -5.401792526245117
    10. 'items' → logprob: -5.526792526245117

Token 84: '_S' (ID: 1875)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: 'LIST' (ID: 44615)
  Prédit: 'ort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ort' → logprob: -0.09681833535432816
    2. '.sort' → logprob: -2.721818447113037
    3. 'um' → logprob: -4.721818447113037
    4. '[' → logprob: -5.596818447113037
    5. '_sort' → logprob: -5.721818447113037
    6. 'orts' → logprob: -5.971818447113037
    7. '=' → logprob: -5.971818447113037
    8. 'orted' → logprob: -6.846818447113037
    9. 'sort' → logprob: -7.471818447113037
    10. 'ize' → logprob: -7.471818447113037

Token 86: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26841357350349426
    2. '=[]' → logprob: -1.6434135437011719
    3. ' =' → logprob: -4.143413543701172
    4. '=[' → logprob: -4.643413543701172
    5. ',' → logprob: -5.518413543701172
    6. '=[]
' → logprob: -6.143413543701172
    7. 'ort' → logprob: -6.393413543701172
    8. '=[[' → logprob: -6.393413543701172
    9. 'orted' → logprob: -7.268413543701172
    10. '.sort' → logprob: -7.518413543701172

Token 87: '[]' (ID: 1951)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2538306713104248
    2. 'CS' → logprob: -1.5038306713104248
    3. 'i' → logprob: -2.128830671310425
    4. '(C' → logprob: -2.378830671310425
    5. '(i' → logprob: -2.628830671310425
    6. '[]' → logprob: -3.003830671310425
    7. '(' → logprob: -3.128830671310425
    8. ']' → logprob: -4.003830909729004
    9. '[' → logprob: -4.253830909729004
    10. '(x' → logprob: -4.253830909729004

Token 88: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4164712429046631
    2. ']' → logprob: -1.791471242904663
    3. 'for' → logprob: -1.791471242904663
    4. '()' → logprob: -5.666471481323242
    5. ',' → logprob: -6.166471481323242
    6. ')' → logprob: -6.916471481323242
    7. '[]' → logprob: -8.416471481323242
    8. ' ]' → logprob: -9.291471481323242
    9. ' ' → logprob: -9.916471481323242
    10. ')]' → logprob: -10.166471481323242

Token 89: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05156910791993141
    2. ' range' → logprob: -3.0515692234039307
    3. 'range' → logprob: -6.051568984985352
    4. ' _' → logprob: -7.676568984985352
    5. ' in' → logprob: -9.551568984985352
    6. '(range' → logprob: -9.801568984985352
    7. '_range' → logprob: -11.301568984985352
    8. ' i' → logprob: -11.551568984985352
    9. 'in' → logprob: -12.551568984985352
    10. '(' → logprob: -13.051568984985352

Token 90: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.056258026510477066
    2. ' range' → logprob: -3.556257963180542
    3. 'in' → logprob: -3.806257963180542
    4. 'range' → logprob: -5.806258201599121
    5. '(range' → logprob: -7.056258201599121
    6. '(' → logprob: -11.181258201599121
    7. ' ' → logprob: -11.181258201599121
    8. ' xrange' → logprob: -11.806258201599121
    9. '	range' → logprob: -12.056258201599121
    10. '<|end|>' → logprob: -12.431258201599121

Token 91: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0067182136699557304
    2. 'range' → logprob: -5.006718158721924
    3. '(range' → logprob: -13.631718635559082
    4. '	range' → logprob: -14.256718635559082
    5. ' ran' → logprob: -14.756718635559082
    6. ' xrange' → logprob: -15.256718635559082
    7. ' ' → logprob: -15.756718635559082
    8. ' rang' → logprob: -16.631717681884766
    9. 'ran' → logprob: -17.506717681884766
    10. ' r' → logprob: -17.756717681884766

Token 92: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.15157897770404816
    2. '(' → logprob: -2.026578903198242
    3. '(S' → logprob: -5.776578903198242
    4. '(N' → logprob: -5.901578903198242
    5. '(C' → logprob: -6.651578903198242
    6. '(Y' → logprob: -7.401578903198242
    7. '((' → logprob: -7.526578903198242
    8. '(max' → logprob: -8.026578903198242
    9. '(Z' → logprob: -9.151578903198242
    10. '(MAX' → logprob: -10.401578903198242

Token 93: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0017237268621101975
    2. ')]' → logprob: -6.376723766326904
    3. ' +' → logprob: -11.126723289489746
    4. ')' → logprob: -12.626723289489746
    5. '+C' → logprob: -13.876723289489746
    6. '+
' → logprob: -14.626723289489746
    7. '*' → logprob: -14.751723289489746
    8. '+B' → logprob: -15.126723289489746
    9. '1' → logprob: -15.376723289489746
    10. '+A' → logprob: -15.501723289489746

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02406964637339115
    2. '2' → logprob: -4.399069786071777
    3. ' ' → logprob: -4.649069786071777
    4. '3' → logprob: -7.274069786071777
    5. 'Y' → logprob: -7.524069786071777
    6. '4' → logprob: -9.024069786071777
    7. '5' → logprob: -9.649069786071777
    8. 'X' → logprob: -9.649069786071777
    9. ' Y' → logprob: -9.649069786071777
    10. '10' → logprob: -9.899069786071777

Token 95: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.000748398422729224
    2. ']' → logprob: -7.250748634338379
    3. ')' → logprob: -10.250748634338379
    4. ')]
' → logprob: -13.625748634338379
    5. ')]

' → logprob: -14.375748634338379
    6. ' ]' → logprob: -14.875748634338379
    7. ')],' → logprob: -15.375748634338379
    8. '>]' → logprob: -15.375748634338379
    9. ')]
' → logprob: -16.250747680664062
    10. ' )' → logprob: -16.500747680664062

Token 96: 'CS' (ID: 9310)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3474690616130829
    2. ' for' → logprob: -1.4724690914154053
    3. '<|end|>' → logprob: -2.8474690914154053
    4. 'CS' → logprob: -5.347468852996826
    5. ' CS' → logprob: -7.847468852996826
    6. '
' → logprob: -8.597469329833984
    7. 'CC' → logprob: -8.597469329833984
    8. 'C' → logprob: -8.722469329833984
    9. '<|end|>' → logprob: -8.847469329833984
    10. ' 
' → logprob: -9.597469329833984

Token 97: '_CL' (ID: 18374)
  Prédit: '_S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_S' → logprob: -0.005584013648331165
    2. '[' → logprob: -5.755584239959717
    3. 'S' → logprob: -7.005584239959717
    4. '_s' → logprob: -7.130584239959717
    5. '<|end|>' → logprob: -8.130583763122559
    6. '_SL' → logprob: -9.255583763122559
    7. '_' → logprob: -9.380583763122559
    8. 's' → logprob: -10.005583763122559
    9. '_SPL' → logprob: -10.380583763122559
    10. '```' → logprob: -11.005583763122559

Token 98: 'IST' (ID: 6258)
  Prédit: 'IST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IST' → logprob: -0.00026741522015072405
    2. 'ST' → logprob: -9.000267028808594
    3. 'ISTS' → logprob: -9.125267028808594
    4. 'I' → logprob: -11.875267028808594
    5. 'ist' → logprob: -12.250267028808594
    6. '[' → logprob: -12.750267028808594
    7. 'IS' → logprob: -13.125267028808594
    8. 'UST' → logprob: -13.250267028808594
    9. 'ISTA' → logprob: -13.375267028808594
    10. '=' → logprob: -13.500267028808594

Token 99: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.04034070670604706
    2. '=' → logprob: -3.4153406620025635
    3. '=[]' → logprob: -5.290340900421143
    4. '=[[' → logprob: -6.540340900421143
    5. ' =' → logprob: -9.165340423583984
    6. '=[]
' → logprob: -11.040340423583984
    7. '[' → logprob: -11.290340423583984
    8. '={}' → logprob: -11.415340423583984
    9. '=[
' → logprob: -11.665340423583984
    10. ' =[' → logprob: -11.915340423583984

Token 100: '[]' (ID: 1951)
  Prédit: '[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0041355108842253685
    2. '[' → logprob: -5.504135608673096
    3. '0' → logprob: -10.754135131835938
    4. '[]
' → logprob: -11.254135131835938
    5. ' []' → logprob: -12.129135131835938
    6. ' [[]' → logprob: -12.129135131835938
    7. '[[' → logprob: -12.254135131835938
    8. '{}' → logprob: -13.379135131835938
    9. '[i' → logprob: -14.254135131835938
    10. 'set' → logprob: -14.254135131835938

Token 101: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38694140315055847
    2. 'for' → logprob: -1.1369414329528809
    3. ' (' → logprob: -9.886940956115723
    4. '(for' → logprob: -11.636940956115723
    5. '(X' → logprob: -11.886940956115723
    6. '(' → logprob: -13.261940956115723
    7. '	for' → logprob: -14.011940956115723
    8. ' ' → logprob: -14.886940956115723
    9. 'or' → logprob: -15.886940956115723
    10. ')' → logprob: -16.01194190979004

Token 102: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04964979737997055
    2. 'range' → logprob: -3.049649715423584
    3. '(range' → logprob: -6.924649715423584
    4. ' in' → logprob: -9.924650192260742
    5. ' i' → logprob: -11.674650192260742
    6. 'i' → logprob: -11.674650192260742
    7. '(i' → logprob: -12.049650192260742
    8. 'in' → logprob: -12.299650192260742
    9. ' (' → logprob: -14.174650192260742
    10. ' xrange' → logprob: -14.674650192260742

Token 103: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007854326628148556
    2. 'in' → logprob: -4.882854461669922
    3. 'range' → logprob: -8.507854461669922
    4. ' range' → logprob: -10.007854461669922
    5. '(range' → logprob: -13.882854461669922
    6. '(' → logprob: -16.007854461669922
    7. 'import' → logprob: -16.882854461669922
    8. ' ' → logprob: -17.507854461669922
    9. 'inthe' → logprob: -17.632854461669922
    10. '<|end|>' → logprob: -17.882854461669922

Token 104: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3868989646434784
    2. 'range' → logprob: -1.1368989944458008
    3. '(range' → logprob: -10.5118989944458
    4. '(X' → logprob: -15.0118989944458
    5. '(' → logprob: -15.1368989944458
    6. ' xrange' → logprob: -16.261898040771484
    7. '	range' → logprob: -16.386898040771484
    8. ' (' → logprob: -17.511898040771484
    9. 'Range' → logprob: -17.886898040771484
    10. '.range' → logprob: -18.761898040771484

Token 105: '(Y' (ID: 44341)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.18129384517669678
    2. '(Y' → logprob: -1.9312938451766968
    3. ' (' → logprob: -4.056293964385986
    4. '(' → logprob: -6.556293964385986
    5. '(S' → logprob: -6.931293964385986
    6. '(N' → logprob: -7.931293964385986
    7. '(C' → logprob: -8.056293487548828
    8. '(len' → logprob: -9.056293487548828
    9. '(Z' → logprob: -9.056293487548828
    10. '(M' → logprob: -9.681293487548828

Token 106: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0802738870552275e-05
    2. ' +' → logprob: -11.62501049041748
    3. ')]' → logprob: -13.62501049041748
    4. '1' → logprob: -14.75001049041748
    5. ')' → logprob: -16.625011444091797
    6. ')+' → logprob: -17.375011444091797
    7. '+
' → logprob: -17.375011444091797
    8. '＋' → logprob: -17.750011444091797
    9. ')]
' → logprob: -18.125011444091797
    10. '()+' → logprob: -18.375011444091797

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003076950670219958
    2. '+' → logprob: -8.6253080368042
    3. ' ' → logprob: -9.5003080368042
    4. '(' → logprob: -10.1253080368042
    5. '2' → logprob: -12.6253080368042
    6. '```' → logprob: -12.7503080368042
    7. '(S' → logprob: -13.2503080368042
    8. '0' → logprob: -14.0003080368042
    9. '   ' → logprob: -14.3753080368042
    10. '(C' → logprob: -15.1253080368042

Token 108: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.1616915911436081
    2. ']' → logprob: -1.9116915464401245
    3. ')' → logprob: -6.536691665649414
    4. ']
' → logprob: -12.036691665649414
    5. ')]
' → logprob: -12.661691665649414
    6. '])' → logprob: -12.911691665649414
    7. '()]' → logprob: -13.536691665649414
    8. ')],' → logprob: -14.411691665649414
    9. ' ]' → logprob: -14.536691665649414
    10. '>]' → logprob: -14.536691665649414

Token 109: 'CC' (ID: 4433)
  Prédit: 'CS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CS' → logprob: -0.6401382684707642
    2. 'for' → logprob: -0.7651382684707642
    3. 'CC' → logprob: -5.640138149261475
    4. ' for' → logprob: -5.640138149261475
    5. 'C' → logprob: -8.765138626098633
    6. ' CS' → logprob: -9.890138626098633
    7. 'SC' → logprob: -10.390138626098633
    8. 'S' → logprob: -10.765138626098633
    9. 'CSR' → logprob: -11.265138626098633
    10. 'CSC' → logprob: -11.515138626098633

Token 110: '_CL' (ID: 18374)
  Prédit: '_S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_S' → logprob: -0.004713495261967182
    2. '_CL' → logprob: -5.504713535308838
    3. '_SL' → logprob: -8.00471305847168
    4. '_LIST' → logprob: -9.62971305847168
    5. '_SPL' → logprob: -10.12971305847168
    6. '_L' → logprob: -10.75471305847168
    7. '_' → logprob: -10.87971305847168
    8. '[' → logprob: -11.12971305847168
    9. '_PL' → logprob: -11.37971305847168
    10. '_C' → logprob: -11.37971305847168

Token 111: 'IST' (ID: 6258)
  Prédit: 'IST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IST' → logprob: -0.00021045419271104038
    2. '[' → logprob: -9.375210762023926
    3. 'I' → logprob: -9.625210762023926
    4. 'ST' → logprob: -10.875210762023926
    5. 'ist' → logprob: -11.125210762023926
    6. 'ISTS' → logprob: -11.875210762023926
    7. ' IST' → logprob: -12.250210762023926
    8. '[[' → logprob: -13.000210762023926
    9. '[I' → logprob: -13.125210762023926
    10. '=' → logprob: -13.625210762023926

Token 112: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -4.000763510703109e-05
    2. '=[]' → logprob: -10.500040054321289
    3. ' =' → logprob: -12.250040054321289
    4. '=[[' → logprob: -12.500040054321289
    5. '=' → logprob: -13.000040054321289
    6. '[' → logprob: -14.375040054321289
    7. '=[
' → logprob: -14.500040054321289
    8. '=[]
' → logprob: -15.250040054321289
    9. ' =[' → logprob: -15.375040054321289
    10. '={' → logprob: -17.12504005432129

Token 113: '[]' (ID: 1951)
  Prédit: '[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.064348503947258
    2. '[' → logprob: -2.8143484592437744
    3. ' [[]' → logprob: -6.0643486976623535
    4. '([]' → logprob: -10.939348220825195
    5. '[]
' → logprob: -11.564348220825195
    6. ' []' → logprob: -12.064348220825195
    7. '[](' → logprob: -12.189348220825195
    8. '[[' → logprob: -12.314348220825195
    9. '[]

' → logprob: -13.064348220825195
    10. '[][]' → logprob: -13.189348220825195

Token 114: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3132646679878235
    2. ' for' → logprob: -1.3132646083831787
    3. '[' → logprob: -13.188264846801758
    4. '	for' → logprob: -15.188264846801758
    5. '(for' → logprob: -15.813264846801758
    6. ' ' → logprob: -15.938264846801758
    7. '(' → logprob: -16.313264846801758
    8. '[]' → logprob: -16.438264846801758
    9. ')' → logprob: -16.563264846801758
    10. ' (' → logprob: -17.063264846801758

Token 115: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.25255557894706726
    2. 'range' → logprob: -1.5025556087493896
    3. '(range' → logprob: -7.3775553703308105
    4. '(Y' → logprob: -14.252555847167969
    5. '(' → logprob: -15.627555847167969
    6. '	range' → logprob: -16.50255584716797
    7. 'for' → logprob: -16.62755584716797
    8. ' in' → logprob: -17.25255584716797
    9. ' xrange' → logprob: -17.50255584716797
    10. '.range' → logprob: -17.62755584716797

Token 116: ' in' (ID: 306)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.5951569080352783
    2. 'range' → logprob: -0.8451569080352783
    3. ' range' → logprob: -3.9701569080352783
    4. '(' → logprob: -8.9701566696167
    5. ' (' → logprob: -10.8451566696167
    6. '(Y' → logprob: -12.4701566696167
    7. '	range' → logprob: -12.8451566696167
    8. 'for' → logprob: -12.9701566696167
    9. '_range' → logprob: -13.3451566696167
    10. '.range' → logprob: -13.4701566696167

Token 117: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3153333365917206
    2. ' range' → logprob: -1.315333366394043
    3. '(range' → logprob: -6.190333366394043
    4. '(Y' → logprob: -11.065333366394043
    5. '(X' → logprob: -13.690333366394043
    6. '(C' → logprob: -13.940333366394043
    7. '(' → logprob: -14.440333366394043
    8. 'for' → logprob: -14.815333366394043
    9. '_range' → logprob: -14.940333366394043
    10. 'Range' → logprob: -15.065333366394043

Token 118: '(Y' (ID: 44341)
  Prédit: '(Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Z' → logprob: -0.6470108032226562
    2. '(Y' → logprob: -1.3970108032226562
    3. '(X' → logprob: -2.0220108032226562
    4. 'range' → logprob: -2.6470108032226562
    5. ' range' → logprob: -4.147010803222656
    6. '(range' → logprob: -4.772010803222656
    7. '(M' → logprob: -7.772010803222656
    8. '(C' → logprob: -8.022010803222656
    9. '(' → logprob: -8.647010803222656
    10. '(S' → logprob: -8.897010803222656

Token 119: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.8889261304575484e-06
    2. ' +' → logprob: -13.375003814697266
    3. ']+' → logprob: -13.750003814697266
    4. '1' → logprob: -14.750003814697266
    5. ')+' → logprob: -15.250003814697266
    6. '+
' → logprob: -15.875003814697266
    7. ')]' → logprob: -16.000003814697266
    8. '＋' → logprob: -16.500003814697266
    9. '[' → logprob: -16.625003814697266
    10. '```' → logprob: -17.625003814697266

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026515206322073936
    2. '+' → logprob: -3.651515245437622
    3. ' ' → logprob: -9.401515007019043
    4. '(' → logprob: -9.776515007019043
    5. '0' → logprob: -10.276515007019043
    6. '```' → logprob: -10.651515007019043
    7. ' +' → logprob: -12.026515007019043
    8. '
' → logprob: -13.276515007019043
    9. '2' → logprob: -13.401515007019043
    10. ']+' → logprob: -13.651515007019043

Token 121: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.39022237062454224
    2. ']' → logprob: -1.1402223110198975
    3. ')' → logprob: -5.890222549438477
    4. ']
' → logprob: -7.640222549438477
    5. '])' → logprob: -10.015222549438477
    6. ')]
' → logprob: -10.265222549438477
    7. ')
' → logprob: -12.265222549438477
    8. '])]' → logprob: -12.265222549438477
    9. ' ]' → logprob: -12.765222549438477
    10. '）' → logprob: -13.265222549438477

Token 122: 'CC' (ID: 4433)
  Prédit: 'CC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CC' → logprob: -0.07006525248289108
    2. 'CS' → logprob: -2.6950652599334717
    3. 'for' → logprob: -9.82006549835205
    4. ' CC' → logprob: -10.32006549835205
    5. 'SC' → logprob: -11.19506549835205
    6. 'import' → logprob: -11.82006549835205
    7. 'C' → logprob: -12.57006549835205
    8. '
' → logprob: -12.57006549835205
    9. ' for' → logprob: -13.19506549835205
    10. '_CC' → logprob: -13.19506549835205

Token 123: '_UL' (ID: 195965)
  Prédit: '_S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_S' → logprob: -0.31720593571662903
    2. '_CL' → logprob: -1.3172059059143066
    3. '_SL' → logprob: -5.692205905914307
    4. '_' → logprob: -8.192206382751465
    5. '_C' → logprob: -9.692206382751465
    6. '_PL' → logprob: -10.192206382751465
    7. '_SPL' → logprob: -10.442206382751465
    8. '_T' → logprob: -10.692206382751465
    9. '_L' → logprob: -10.692206382751465
    10. '_FL' → logprob: -10.942206382751465

Token 124: 'IST' (ID: 6258)
  Prédit: 'IST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IST' → logprob: -0.0001992490579141304
    2. 'ST' → logprob: -8.625199317932129
    3. 'ist' → logprob: -11.750199317932129
    4. ' IST' → logprob: -12.375199317932129
    5. 'LIST' → logprob: -13.250199317932129
    6. 'ISTS' → logprob: -13.250199317932129
    7. '[' → logprob: -14.125199317932129
    8. 'I' → logprob: -14.375199317932129
    9. 'S' → logprob: -14.500199317932129
    10. 'ISTA' → logprob: -15.000199317932129

Token 125: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -2.7729658540920354e-05
    2. '=[]' → logprob: -11.000027656555176
    3. '=[[' → logprob: -11.750027656555176
    4. '=' → logprob: -13.625027656555176
    5. ' =' → logprob: -13.875027656555176
    6. '[' → logprob: -15.000027656555176
    7. ' =[' → logprob: -15.000027656555176
    8. '=[]
' → logprob: -15.875027656555176
    9. '=[
' → logprob: -16.125028610229492
    10. '={' → logprob: -18.000028610229492

Token 126: '[]' (ID: 1951)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014574656262993813
    2. '[]' → logprob: -4.2645745277404785
    3. ' [[]' → logprob: -7.8895745277404785
    4. '[[' → logprob: -10.264575004577637
    5. '[][' → logprob: -15.264575004577637
    6. '[][]' → logprob: -15.639575004577637
    7. '[:' → logprob: -15.889575004577637
    8. '[['' → logprob: -16.13957405090332
    9. '[i' → logprob: -16.26457405090332
    10. '([]' → logprob: -16.26457405090332

Token 127: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10027330368757248
    2. ' for' → logprob: -2.350273370742798
    3. '[' → logprob: -9.850273132324219
    4. '[X' → logprob: -12.975273132324219
    5. '(for' → logprob: -12.975273132324219
    6. '+' → logprob: -13.600273132324219
    7. '	for' → logprob: -14.350273132324219
    8. ')' → logprob: -14.475273132324219
    9. '[]' → logprob: -14.475273132324219
    10. ' [' → logprob: -14.725273132324219

Token 128: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8148232698440552
    2. ' range' → logprob: -0.8148232698440552
    3. ' i' → logprob: -2.5648231506347656
    4. 'range' → logprob: -3.3148231506347656
    5. ' in' → logprob: -7.314823150634766
    6. 'in' → logprob: -7.814823150634766
    7. 'int' → logprob: -8.564823150634766
    8. ' j' → logprob: -11.564823150634766
    9. '(i' → logprob: -11.814823150634766
    10. ' ' → logprob: -11.814823150634766

Token 129: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6418710350990295
    2. ' range' → logprob: -1.1418709754943848
    3. ' in' → logprob: -2.3918709754943848
    4. 'in' → logprob: -2.8918709754943848
    5. '(range' → logprob: -4.891870975494385
    6. '(' → logprob: -10.641871452331543
    7. '_range' → logprob: -12.141871452331543
    8. '	range' → logprob: -13.516871452331543
    9. ' ' → logprob: -14.266871452331543
    10. '-range' → logprob: -14.391871452331543

Token 130: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6936122179031372
    2. 'range' → logprob: -0.6936122179031372
    3. '(range' → logprob: -7.693612098693848
    4. ' xrange' → logprob: -12.943612098693848
    5. 'for' → logprob: -13.568612098693848
    6. ' (' → logprob: -13.693612098693848
    7. '	range' → logprob: -13.818612098693848
    8. '-range' → logprob: -14.193612098693848
    9. '(X' → logprob: -14.568612098693848
    10. '.range' → logprob: -14.943612098693848

Token 131: '(Z' (ID: 55117)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.01410956121981144
    2. 'X' → logprob: -5.2641096115112305
    3. 'range' → logprob: -5.6391096115112305
    4. ' range' → logprob: -6.2641096115112305
    5. ' (' → logprob: -6.6391096115112305
    6. '(Z' → logprob: -6.6391096115112305
    7. '(range' → logprob: -8.76410961151123
    8. '(S' → logprob: -9.01410961151123
    9. '(M' → logprob: -9.13910961151123
    10. ' X' → logprob: -9.51410961151123

Token 132: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.531315314830863e-06
    2. ' +' → logprob: -13.125003814697266
    3. '1' → logprob: -14.125003814697266
    4. '+
' → logprob: -15.750003814697266
    5. '```' → logprob: -15.750003814697266
    6. ')]' → logprob: -15.875003814697266
    7. '＋' → logprob: -16.125003814697266
    8. ']+' → logprob: -16.250003814697266
    9. ')+' → logprob: -16.750003814697266
    10. '[' → logprob: -17.937503814697266

Token 133: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.420598219847307e-05
    2. '0' → logprob: -10.0000638961792
    3. ' ' → logprob: -11.0000638961792
    4. '+' → logprob: -14.1250638961792
    5. '```' → logprob: -14.3750638961792
    6. '   ' → logprob: -15.7500638961792
    7. '2' → logprob: -16.000064849853516
    8. 'S' → logprob: -16.375064849853516
    9. 'Z' → logprob: -16.375064849853516
    10. '(' → logprob: -16.562564849853516

Token 134: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.019874460995197296
    2. ']' → logprob: -4.019874572753906
    3. ')' → logprob: -6.394874572753906
    4. '])' → logprob: -10.144874572753906
    5. '])]' → logprob: -11.769874572753906
    6. ']
' → logprob: -13.269874572753906
    7. ')]
' → logprob: -14.144874572753906
    8. ')],' → logprob: -14.144874572753906
    9. ')])' → logprob: -14.394874572753906
    10. '）' → logprob: -14.394874572753906

Token 135: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0889953076839447
    2. ' for' → logprob: -2.4639952182769775
    3. '```' → logprob: -10.338994979858398
    4. '
' → logprob: -11.088994979858398
    5. ')' → logprob: -12.713994979858398
    6. ' 
' → logprob: -13.588994979858398
    7. '``' → logprob: -13.838994979858398
    8. '[
' → logprob: -14.338994979858398
    9. '[' → logprob: -14.838994979858398
    10. 'CS' → logprob: -14.838994979858398

Token 136: ' x' (ID: 1215)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.025893349200487137
    2. ' c' → logprob: -4.275893211364746
    3. 'i' → logprob: -4.775893211364746
    4. ' s' → logprob: -6.275893211364746
    5. 'c' → logprob: -8.275893211364746
    6. ' a' → logprob: -8.775893211364746
    7. ' cs' → logprob: -8.900893211364746
    8. ' j' → logprob: -9.025893211364746
    9. ' _' → logprob: -9.025893211364746
    10. ' x' → logprob: -9.275893211364746

Token 137: ',y' (ID: 16103)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08907163143157959
    2. 'in' → logprob: -2.464071750640869
    3. ' ' → logprob: -9.214071273803711
    4. '_' → logprob: -11.339071273803711
    5. '_in' → logprob: -12.339071273803711
    6. 'n' → logprob: -12.339071273803711
    7. 'i' → logprob: -13.089071273803711
    8. ',' → logprob: -13.464071273803711
    9. ' i' → logprob: -13.464071273803711
    10. '	in' → logprob: -13.839071273803711

Token 138: ',z' (ID: 54920)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.12731191515922546
    2. ' in' → logprob: -2.127311944961548
    3. ',' → logprob: -9.002311706542969
    4. ',in' → logprob: -9.002311706542969
    5. 's' → logprob: -10.377311706542969
    6. '_in' → logprob: -10.627311706542969
    7. '	in' → logprob: -11.252311706542969
    8. ' ' → logprob: -11.877311706542969
    9. ' ,' → logprob: -12.252311706542969
    10. ')' → logprob: -12.252311706542969

Token 139: ',_' (ID: 46431)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.313873827457428
    2. 'in' → logprob: -1.3138737678527832
    3. ',' → logprob: -8.188874244689941
    4. ' ' → logprob: -9.188874244689941
    5. ',in' → logprob: -9.813874244689941
    6. 's' → logprob: -10.188874244689941
    7. ' ,' → logprob: -10.313874244689941
    8. ')' → logprob: -10.313874244689941
    9. '	in' → logprob: -10.938874244689941
    10. '_in' → logprob: -11.938874244689941

Token 140: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01928015612065792
    2. 'in' → logprob: -4.019279956817627
    3. ',' → logprob: -7.144279956817627
    4. ' ,' → logprob: -8.769280433654785
    5. ' ' → logprob: -8.769280433654785
    6. '  ' → logprob: -12.144280433654785
    7. 's' → logprob: -12.769280433654785
    8. ',in' → logprob: -12.894280433654785
    9. ',_' → logprob: -13.019280433654785
    10. 'n' → logprob: -13.144280433654785

Token 141: ' CS' (ID: 15903)
  Prédit: 'CS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CS' → logprob: -0.0015343817649409175
    2. ' CS' → logprob: -6.501534461975098
    3. '[' → logprob: -11.126534461975098
    4. 'range' → logprob: -11.626534461975098
    5. '(C' → logprob: -12.376534461975098
    6. ' range' → logprob: -13.126534461975098
    7. ' ' → logprob: -14.751534461975098
    8. 'C' → logprob: -15.001534461975098
    9. '[C' → logprob: -15.001534461975098
    10. 'CC' → logprob: -15.251534461975098

Token 142: '[' (ID: 58)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18997518718242645
    2. ':
' → logprob: -1.9399751424789429
    3. '[' → logprob: -3.5649752616882324
    4. '[:' → logprob: -7.439975261688232
    5. '[:-' → logprob: -8.439974784851074
    6. ':x' → logprob: -9.814974784851074
    7. '[x' → logprob: -10.564974784851074
    8. '):
' → logprob: -11.314974784851074
    9. ',' → logprob: -11.314974784851074
    10. ']:' → logprob: -11.564974784851074

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.371605948312208e-05
    2. ':' → logprob: -10.250053405761719
    3. ':]' → logprob: -11.500053405761719
    4. 'range' → logprob: -12.250053405761719
    5. ']:' → logprob: -13.250053405761719
    6. ']' → logprob: -13.750053405761719
    7. ' ' → logprob: -15.375053405761719
    8. '[' → logprob: -16.62505340576172
    9. '(' → logprob: -16.87505340576172
    10. ' :' → logprob: -18.00005340576172

Token 144: ':' (ID: 25)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.047129739075899124
    2. ':' → logprob: -3.2971296310424805
    3. ']:
' → logprob: -4.9221296310424805
    4. '[' → logprob: -7.4221296310424805
    5. '(' → logprob: -8.17212963104248
    6. '():' → logprob: -8.42212963104248
    7. ':]' → logprob: -9.04712963104248
    8. ']' → logprob: -9.17212963104248
    9. '+' → logprob: -9.54712963104248
    10. '(x' → logprob: -9.54712963104248

Token 145: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.009980722330510616
    2. ']:
' → logprob: -4.63498067855835
    3. ']' → logprob: -9.134981155395508
    4. ':' → logprob: -10.009981155395508
    5. ']:
' → logprob: -10.634981155395508
    6. 's' → logprob: -11.134981155395508
    7. ' ]' → logprob: -12.259981155395508
    8. '():' → logprob: -12.259981155395508
    9. '(x' → logprob: -12.509981155395508
    10. 'x' → logprob: -12.759981155395508

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05390728637576103
    2. ' CS' → logprob: -3.5539073944091797
    3. 'CS' → logprob: -3.8039073944091797
    4. '	' → logprob: -7.67890739440918
    5. '	C' → logprob: -8.67890739440918
    6. '    
' → logprob: -8.67890739440918
    7. '```' → logprob: -8.80390739440918
    8. '   ' → logprob: -8.92890739440918
    9. ' ' → logprob: -9.30390739440918
    10. ',' → logprob: -10.05390739440918

Token 147: ' CS' (ID: 15903)
  Prédit: 'CS'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CS' (adapté à ' CS') → logprob: -0.620803713798523
    2. ' CS' → logprob: -1.120803713798523
    3. '   ' → logprob: -1.995803713798523
    4. ' ' → logprob: -8.245803833007812
    5. ' if' → logprob: -9.120803833007812
    6. 'if' → logprob: -9.495803833007812
    7. '_CS' → logprob: -10.745803833007812
    8. '    ' → logprob: -11.370803833007812
    9. '-CS' → logprob: -11.495803833007812
    10. '       ' → logprob: -11.620803833007812

Token 148: '_S' (ID: 1875)
  Prédit: '_S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_S' → logprob: -0.03252032399177551
    2. '_SL' → logprob: -3.532520294189453
    3. '_CL' → logprob: -5.907520294189453
    4. '_SPL' → logprob: -10.657520294189453
    5. '_CS' → logprob: -11.407520294189453
    6. '_' → logprob: -12.282520294189453
    7. '_SC' → logprob: -13.532520294189453
    8. '_s' → logprob: -13.782520294189453
    9. '_SR' → logprob: -13.907520294189453
    10. '_SP' → logprob: -13.907520294189453

Token 149: 'LIST' (ID: 44615)
  Prédit: 'LIST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LIST' → logprob: -0.0006415460375137627
    2. 'SL' → logprob: -8.125641822814941
    3. 'S' → logprob: -8.375641822814941
    4. 'L' → logprob: -9.125641822814941
    5. 'CL' → logprob: -13.125641822814941
    6. '[' → logprob: -13.625641822814941
    7. '_LIST' → logprob: -14.375641822814941
    8. 'LI' → logprob: -14.375641822814941
    9. 'List' → logprob: -15.000641822814941
    10. 'IST' → logprob: -15.000641822814941

Token 150: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0013332172529771924
    2. '[y' → logprob: -6.626333236694336
    3. '[' → logprob: -12.376333236694336
    4. 'x' → logprob: -12.876333236694336
    5. '[s' → logprob: -16.001333236694336
    6. ' [' → logprob: -16.001333236694336
    7. '[z' → logprob: -16.376333236694336
    8. '[int' → logprob: -17.126333236694336
    9. '```' → logprob: -17.251333236694336
    10. '[
' → logprob: -17.376333236694336

Token 151: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00012880703434348106
    2. '.append' → logprob: -9.000128746032715
    3. '.' → logprob: -12.875128746032715
    4. ' ].' → logprob: -13.500128746032715
    5. ']' → logprob: -13.750128746032715
    6. 'append' → logprob: -15.750128746032715
    7. '.app' → logprob: -16.75012969970703
    8. ').' → logprob: -17.00012969970703
    9. ' .' → logprob: -17.62512969970703
    10. ''].' → logprob: -17.87512969970703

Token 152: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.8624639324116288e-06
    2. ' append' → logprob: -13.250001907348633
    3. 'appen' → logprob: -17.125001907348633
    4. '.append' → logprob: -17.250001907348633
    5. 'app' → logprob: -18.000001907348633
    6. '_append' → logprob: -18.500001907348633
    7. '	append' → logprob: -19.375001907348633
    8. 'add' → logprob: -20.250001907348633
    9. 'Append' → logprob: -20.625001907348633
    10. ' ' → logprob: -21.750001907348633

Token 153: '(z' (ID: 27674)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.18135282397270203
    2. '(y' → logprob: -2.1813528537750244
    3. '(_)' → logprob: -3.3063528537750244
    4. '(' → logprob: -4.431352615356445
    5. '(_' → logprob: -6.556352615356445
    6. '(z' → logprob: -6.556352615356445
    7. '((_' → logprob: -7.181352615356445
    8. '([' → logprob: -7.556352615356445
    9. '(x' → logprob: -8.431352615356445
    10. '(_,' → logprob: -9.931352615356445

Token 154: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012535012501757592
    2. ' )' → logprob: -9.25012493133545
    3. ')
' → logprob: -10.50012493133545
    4. '   ' → logprob: -14.12512493133545
    5. ' ' → logprob: -15.37512493133545
    6. '),' → logprob: -15.87512493133545
    7. '<|end|>' → logprob: -16.250125885009766
    8. '))' → logprob: -16.625125885009766
    9. ')

' → logprob: -16.875125885009766
    10. ')#' → logprob: -17.000125885009766

Token 155: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02769920788705349
    2. ' for' → logprob: -3.6526992321014404
    3. '   ' → logprob: -7.152698993682861
    4. '<|end|>' → logprob: -8.27769947052002
    5. 'CS' → logprob: -9.02769947052002
    6. ',' → logprob: -9.27769947052002
    7. ' ' → logprob: -10.02769947052002
    8. '
' → logprob: -10.52769947052002
    9. '```' → logprob: -10.90269947052002
    10. ',
' → logprob: -11.65269947052002

Token 156: ' CS' (ID: 15903)
  Prédit: 'CS'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CS' (adapté à ' CS') → logprob: -0.0007266097818501294
    2. '   ' → logprob: -7.625726699829102
    3. ' CS' → logprob: -9.000726699829102
    4. 'y' → logprob: -9.625726699829102
    5. 'for' → logprob: -10.625726699829102
    6. ' ' → logprob: -11.875726699829102
    7. '_CS' → logprob: -12.000726699829102
    8. 'C' → logprob: -12.875726699829102
    9. 'Y' → logprob: -13.250726699829102
    10. 'S' → logprob: -13.625726699829102

Token 157: '_CL' (ID: 18374)
  Prédit: '_CL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CL' → logprob: -1.0280383548888494e-06
    2. '_C' → logprob: -14.125000953674316
    3. '_CS' → logprob: -16.500001907348633
    4. '_UL' → logprob: -17.250001907348633
    5. '_' → logprob: -17.375001907348633
    6. '_S' → logprob: -17.750001907348633
    7. '_CLR' → logprob: -17.875001907348633
    8. '_CC' → logprob: -18.375001907348633
    9. '_COL' → logprob: -18.375001907348633
    10. '_cl' → logprob: -18.625001907348633

Token 158: 'IST' (ID: 6258)
  Prédit: 'IST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IST' → logprob: -0.0006327360169962049
    2. 'LIST' → logprob: -7.5006327629089355
    3. 'ist' → logprob: -10.125632286071777
    4. 'ST' → logprob: -10.750632286071777
    5. '_LIST' → logprob: -11.750632286071777
    6. 'S' → logprob: -12.250632286071777
    7. 'ISTS' → logprob: -13.625632286071777
    8. '[' → logprob: -14.125632286071777
    9. '_list' → logprob: -14.500632286071777
    10. 'I' → logprob: -14.625632286071777

Token 159: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -3.726595241460018e-05
    2. 'y' → logprob: -10.62503719329834
    3. '[' → logprob: -11.50003719329834
    4. '[z' → logprob: -13.87503719329834
    5. '(y' → logprob: -14.37503719329834
    6. '[x' → logprob: -15.62503719329834
    7. '```' → logprob: -15.75003719329834
    8. '   ' → logprob: -16.000038146972656
    9. '=y' → logprob: -16.125038146972656
    10. ',y' → logprob: -16.500038146972656

Token 160: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.01908602938055992
    2. '.append' → logprob: -4.019085884094238
    3. '.' → logprob: -7.019085884094238
    4. ').' → logprob: -11.644085884094238
    5. '>.' → logprob: -11.644085884094238
    6. ' .' → logprob: -11.644085884094238
    7. '}.' → logprob: -12.519085884094238
    8. ' ].' → logprob: -12.644085884094238
    9. ']' → logprob: -12.769085884094238
    10. ''].' → logprob: -13.394085884094238

Token 161: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.842555426876061e-06
    2. ' append' → logprob: -12.625004768371582
    3. '.append' → logprob: -13.750004768371582
    4. 'appen' → logprob: -14.875004768371582
    5. '	append' → logprob: -17.8750057220459
    6. 'add' → logprob: -18.0000057220459
    7. 'app' → logprob: -18.1250057220459
    8. '_append' → logprob: -18.8750057220459
    9. 'Append' → logprob: -19.7500057220459
    10. '   ' → logprob: -20.3750057220459

Token 162: '(z' (ID: 27674)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.6738928556442261
    2. '(x' → logprob: -1.548892855644226
    3. '(z' → logprob: -1.548892855644226
    4. 'x' → logprob: -2.7988929748535156
    5. '(' → logprob: -5.798892974853516
    6. '(y' → logprob: -7.923892974853516
    7. '_' → logprob: -8.048892974853516
    8. '_z' → logprob: -8.798892974853516
    9. '(_)' → logprob: -8.798892974853516
    10. '(_' → logprob: -8.798892974853516

Token 163: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009231308358721435
    2. ')
' → logprob: -7.000923156738281
    3. ' )' → logprob: -12.000923156738281
    4. '   ' → logprob: -12.250923156738281
    5. ')

' → logprob: -15.125923156738281
    6. '<|end|>' → logprob: -15.625923156738281
    7. ')
' → logprob: -16.87592315673828
    8. '),' → logprob: -17.12592315673828
    9. ' ' → logprob: -17.12592315673828
    10. ')#' → logprob: -17.25092315673828

Token 164: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.302704761968926e-05
    2. ' for' → logprob: -9.625073432922363
    3. '```' → logprob: -12.375073432922363
    4. '
' → logprob: -13.875073432922363
    5. '``' → logprob: -15.125073432922363
    6. ' 
' → logprob: -15.375073432922363
    7. '<|end|>' → logprob: -15.375073432922363
    8. '`
' → logprob: -16.250072479248047
    9. '\n' → logprob: -16.250072479248047
    10. 'x' → logprob: -16.375072479248047

Token 165: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.000982435536570847
    2. '_,' → logprob: -7.375982284545898
    3. ' x' → logprob: -8.625982284545898
    4. 'c' → logprob: -9.875982284545898
    5. 's' → logprob: -10.625982284545898
    6. 'z' → logprob: -10.625982284545898
    7. 'a' → logprob: -10.625982284545898
    8. 'i' → logprob: -11.250982284545898
    9. 'y' → logprob: -11.375982284545898
    10. '_x' → logprob: -11.875982284545898

Token 166: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.00032747918157838285
    2. ',' → logprob: -8.125327110290527
    3. ' ,' → logprob: -11.125327110290527
    4. '_,' → logprob: -11.500327110290527
    5. 'y' → logprob: -13.000327110290527
    6. ',z' → logprob: -13.250327110290527
    7. ',x' → logprob: -13.875327110290527
    8. ',_' → logprob: -14.250327110290527
    9. ',u' → logprob: -15.875327110290527
    10. ',c' → logprob: -16.250328063964844

Token 167: ',z' (ID: 54920)
  Prédit: ',z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',z' → logprob: -0.0037298917304724455
    2. ',_' → logprob: -6.253729820251465
    3. ',' → logprob: -6.378729820251465
    4. ',Z' → logprob: -10.628729820251465
    5. ',x' → logprob: -11.003729820251465
    6. ' ,' → logprob: -11.003729820251465
    7. '_,' → logprob: -11.628729820251465
    8. ',C' → logprob: -12.003729820251465
    9. ',in' → logprob: -12.253729820251465
    10. ',[' → logprob: -12.628729820251465

Token 168: ',_' (ID: 46431)
  Prédit: ',_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',_' → logprob: -0.14600805938243866
    2. ',' → logprob: -2.021008014678955
    3. ' in' → logprob: -6.021008014678955
    4. 'in' → logprob: -7.271008014678955
    5. ' ,' → logprob: -9.396008491516113
    6. '_' → logprob: -10.271008491516113
    7. '_,' → logprob: -10.771008491516113
    8. ',__' → logprob: -11.646008491516113
    9. ',in' → logprob: -11.646008491516113
    10. ',...' → logprob: -11.771008491516113

Token 169: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02326178550720215
    2. 'in' → logprob: -3.773261785507202
    3. ',' → logprob: -12.023262023925781
    4. ' ' → logprob: -12.023262023925781
    5. 's' → logprob: -14.148262023925781
    6. 'CC' → logprob: -14.273262023925781
    7. ')' → logprob: -15.148262023925781
    8. '  ' → logprob: -15.148262023925781
    9. '```' → logprob: -15.273262023925781
    10. '   ' → logprob: -15.398262023925781

Token 170: ' CC' (ID: 21547)
  Prédit: 'CC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CC' → logprob: -0.004092054907232523
    2. ' CC' → logprob: -5.504092216491699
    3. 'CS' → logprob: -11.8790922164917
    4. ' ' → logprob: -13.0040922164917
    5. 'cc' → logprob: -13.1290922164917
    6. '	CC' → logprob: -13.8790922164917
    7. '   ' → logprob: -15.0040922164917
    8. '_CC' → logprob: -15.1290922164917
    9. '(CC' → logprob: -15.3790922164917
    10. 'C' → logprob: -15.5040922164917

Token 171: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00010080150241265073
    2. '_CL' → logprob: -10.000101089477539
    3. '_CC' → logprob: -10.375101089477539
    4. 'CL' → logprob: -11.750101089477539
    5. 'CC' → logprob: -11.875101089477539
    6. '[
' → logprob: -13.375101089477539
    7. '[:' → logprob: -13.500101089477539
    8. '[[' → logprob: -14.125101089477539
    9. '_UL' → logprob: -14.125101089477539
    10. '_C' → logprob: -14.250101089477539

Token 172: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015491410158574581
    2. '[' → logprob: -6.626549243927002
    3. '(' → logprob: -8.751548767089844
    4. 'range' → logprob: -9.751548767089844
    5. ' ' → logprob: -12.376548767089844
    6. '```' → logprob: -14.251548767089844
    7. 'CC' → logprob: -15.001548767089844
    8. '   ' → logprob: -15.126548767089844
    9. '
' → logprob: -15.251548767089844
    10. '0' → logprob: -15.501548767089844

Token 173: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16057232022285461
    2. '[' → logprob: -1.9105722904205322
    3. ':]' → logprob: -8.410572052001953
    4. '[:' → logprob: -10.035572052001953
    5. ':
' → logprob: -10.535572052001953
    6. ':[' → logprob: -11.410572052001953
    7. ':y' → logprob: -11.410572052001953
    8. ']:
' → logprob: -11.535572052001953
    9. ']:' → logprob: -12.285572052001953
    10. '1' → logprob: -12.285572052001953

Token 174: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.42386308312416077
    2. ']:
' → logprob: -1.5488630533218384
    3. ':' → logprob: -2.173863172531128
    4. ']:' → logprob: -4.548862934112549
    5. '):
' → logprob: -4.923862934112549
    6. '():
' → logprob: -7.673862934112549
    7. '):' → logprob: -8.298863410949707
    8. '   ' → logprob: -8.298863410949707
    9. ' :
' → logprob: -8.923863410949707
    10. ']' → logprob: -9.048863410949707

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4401172697544098
    2. 'CC' → logprob: -1.0651172399520874
    3. ' CC' → logprob: -4.565117359161377
    4. '	CC' → logprob: -7.940117359161377
    5. ' ' → logprob: -8.565116882324219
    6. '
' → logprob: -8.690116882324219
    7. '  ' → logprob: -9.690116882324219
    8. '_CC' → logprob: -9.940116882324219
    9. '       ' → logprob: -10.565116882324219
    10. '```' → logprob: -10.690116882324219

Token 176: ' CC' (ID: 21547)
  Prédit: 'CC'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CC' (adapté à ' CC') → logprob: -0.0002870801545213908
    2. ' CC' → logprob: -8.375287055969238
    3. '   ' → logprob: -10.250287055969238
    4. 'CS' → logprob: -11.875287055969238
    5. 'for' → logprob: -12.375287055969238
    6. '	CC' → logprob: -12.500287055969238
    7. ' ' → logprob: -13.250287055969238
    8. '_CC' → logprob: -14.000287055969238
    9. '
' → logprob: -14.250287055969238
    10. 'C' → logprob: -14.625287055969238

Token 177: '_CL' (ID: 18374)
  Prédit: '_CL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CL' → logprob: -0.3171837031841278
    2. '_UL' → logprob: -1.3171837329864502
    3. '_U' → logprob: -6.317183494567871
    4. '_S' → logprob: -6.442183494567871
    5. '_C' → logprob: -7.692183494567871
    6. '_CC' → logprob: -11.067183494567871
    7. '_' → logprob: -11.942183494567871
    8. '_US' → logprob: -12.692183494567871
    9. '_Y' → logprob: -12.817183494567871
    10. '_X' → logprob: -13.192183494567871

Token 178: 'IST' (ID: 6258)
  Prédit: 'IST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IST' → logprob: -0.014417113736271858
    2. 'LIST' → logprob: -4.2644171714782715
    3. 'ST' → logprob: -8.389416694641113
    4. 'ist' → logprob: -11.389416694641113
    5. '_LIST' → logprob: -12.014416694641113
    6. '_list' → logprob: -13.014416694641113
    7. 'ISTS' → logprob: -13.139416694641113
    8. '[' → logprob: -13.639416694641113
    9. 'list' → logprob: -13.889416694641113
    10. '[y' → logprob: -14.389416694641113

Token 179: '[x' (ID: 17295)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -1.7835754988482222e-05
    2. 'y' → logprob: -11.000018119812012
    3. '[' → logprob: -14.625018119812012
    4. '[x' → logprob: -14.750018119812012
    5. '[z' → logprob: -16.000017166137695
    6. ' [' → logprob: -17.500017166137695
    7. '[int' → logprob: -17.625017166137695
    8. '[t' → logprob: -17.625017166137695
    9. '=y' → logprob: -18.000017166137695
    10. '(y' → logprob: -18.500017166137695

Token 180: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.023394206538796425
    2. '[y' → logprob: -3.7733941078186035
    3. '][' → logprob: -10.273394584655762
    4. ']' → logprob: -10.273394584655762
    5. ' ].' → logprob: -10.398394584655762
    6. 'y' → logprob: -10.898394584655762
    7. '[x' → logprob: -11.523394584655762
    8. '   ' → logprob: -11.648394584655762
    9. '[' → logprob: -12.398394584655762
    10. '.' → logprob: -13.648394584655762

Token 181: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.650518920039758e-06
    2. 'appen' → logprob: -13.000003814697266
    3. ' append' → logprob: -14.250003814697266
    4. '.append' → logprob: -15.250003814697266
    5. 'y' → logprob: -15.875003814697266
    6. 'extend' → logprob: -16.250003814697266
    7. '	append' → logprob: -17.000003814697266
    8. '[y' → logprob: -17.625003814697266
    9. 'add' → logprob: -18.375003814697266
    10. '_append' → logprob: -18.500003814697266

Token 182: '(z' (ID: 27674)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.43036890029907227
    2. 'z' → logprob: -1.0553689002990723
    3. '(y' → logprob: -6.805368900299072
    4. '(z' → logprob: -7.555368900299072
    5. ' y' → logprob: -10.805368423461914
    6. ' z' → logprob: -12.555368423461914
    7. 'x' → logprob: -13.180368423461914
    8. 'yz' → logprob: -13.180368423461914
    9. '(' → logprob: -13.930368423461914
    10. '   ' → logprob: -14.055368423461914

Token 183: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14285343885421753
    2. ')
' → logprob: -2.0178534984588623
    3. '   ' → logprob: -9.892853736877441
    4. 'y' → logprob: -10.142853736877441
    5. ')y' → logprob: -10.392853736877441
    6. '[y' → logprob: -11.017853736877441
    7. ')

' → logprob: -11.392853736877441
    8. ')
' → logprob: -11.517853736877441
    9. '[' → logprob: -12.267853736877441
    10. ' y' → logprob: -12.517853736877441

Token 184: '   ' (ID: 271)
  Prédit: 'CC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CC' → logprob: -0.2501774728298187
    2. '   ' → logprob: -1.8751775026321411
    3. 'for' → logprob: -2.7501773834228516
    4. ' for' → logprob: -6.500177383422852
    5. ' CC' → logprob: -6.625177383422852
    6. '
' → logprob: -7.375177383422852
    7. '	CC' → logprob: -8.000177383422852
    8. ' ' → logprob: -8.875177383422852
    9. '_CC' → logprob: -9.750177383422852
    10. '(CC' → logprob: -10.250177383422852

Token 185: ' CC' (ID: 21547)
  Prédit: 'CC'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CC' (adapté à ' CC') → logprob: -0.002491595223546028
    2. ' CC' → logprob: -6.002491474151611
    3. ' ' → logprob: -12.00249195098877
    4. '   ' → logprob: -13.12749195098877
    5. '	CC' → logprob: -13.12749195098877
    6. '_CC' → logprob: -13.25249195098877
    7. '
' → logprob: -13.87749195098877
    8. 'C' → logprob: -14.12749195098877
    9. 'cc' → logprob: -14.50249195098877
    10. 'for' → logprob: -15.00249195098877

Token 186: '_UL' (ID: 195965)
  Prédit: '_UL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_UL' → logprob: -0.00044926130794920027
    2. '_' → logprob: -7.750449180603027
    3. '_U' → logprob: -11.250449180603027
    4. 'UL' → logprob: -13.000449180603027
    5. '_US' → logprob: -13.250449180603027
    6. '_Z' → logprob: -14.625449180603027
    7. '_Y' → logprob: -15.125449180603027
    8. '_UI' → logprob: -16.250450134277344
    9. '_UP' → logprob: -16.375450134277344
    10. '_UN' → logprob: -16.375450134277344

Token 187: 'IST' (ID: 6258)
  Prédit: 'IST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IST' → logprob: -0.16267357766628265
    2. 'ST' → logprob: -1.9126735925674438
    3. 'LIST' → logprob: -6.037673473358154
    4. 'S' → logprob: -11.037673950195312
    5. '[' → logprob: -11.412673950195312
    6. '_LIST' → logprob: -11.912673950195312
    7. 'ist' → logprob: -11.912673950195312
    8. '_list' → logprob: -12.287673950195312
    9. 'List' → logprob: -12.787673950195312
    10. '_ST' → logprob: -13.287673950195312

Token 188: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.0005862758844159544
    2. '[z' → logprob: -7.50058650970459
    3. '[' → logprob: -11.12558650970459
    4. 'y' → logprob: -11.75058650970459
    5. '[x' → logprob: -12.00058650970459
    6. '[u' → logprob: -13.25058650970459
    7. '```' → logprob: -14.75058650970459
    8. ' [' → logprob: -15.00058650970459
    9. '[t' → logprob: -15.25058650970459
    10. '(y' → logprob: -15.37558650970459

Token 189: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.01055346429347992
    2. '.append' → logprob: -4.635553359985352
    3. '.' → logprob: -7.635553359985352
    4. ').' → logprob: -8.260553359985352
    5. ']' → logprob: -10.760553359985352
    6. ' .' → logprob: -11.010553359985352
    7. '}.' → logprob: -11.760553359985352
    8. ' ].' → logprob: -12.635553359985352
    9. '>.' → logprob: -12.885553359985352
    10. '   ' → logprob: -14.135553359985352

Token 190: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.0280383548888494e-06
    2. 'appen' → logprob: -14.500000953674316
    3. '.append' → logprob: -15.750000953674316
    4. ' append' → logprob: -15.750000953674316
    5. '	append' → logprob: -16.875001907348633
    6. 'app' → logprob: -18.750001907348633
    7. '```' → logprob: -18.875001907348633
    8. 'prepend' → logprob: -19.375001907348633
    9. '<|end|>' → logprob: -19.500001907348633
    10. ' ' → logprob: -19.500001907348633

Token 191: '(z' (ID: 27674)
  Prédit: '(z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.28159254789352417
    2. 'z' → logprob: -1.406592607498169
    3. '(x' → logprob: -8.15659236907959
    4. 'x' → logprob: -9.65659236907959
    5. ' z' → logprob: -10.15659236907959
    6. '(' → logprob: -11.15659236907959
    7. '(y' → logprob: -11.40659236907959
    8. '_z' → logprob: -11.65659236907959
    9. '	z' → logprob: -12.53159236907959
    10. '(t' → logprob: -12.78159236907959

Token 192: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.03521392197581e-05
    2. ')
' → logprob: -10.500030517578125
    3. ' )' → logprob: -13.500030517578125
    4. '<|end|>' → logprob: -15.125030517578125
    5. ')

' → logprob: -15.375030517578125
    6. '   ' → logprob: -15.500030517578125
    7. ']' → logprob: -16.125030517578125
    8. '[' → logprob: -16.375030517578125
    9. ')#' → logprob: -16.500030517578125
    10. '))' → logprob: -16.500030517578125

Token 193: 'import' (ID: 561)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03756202012300491
    2. ' for' → logprob: -3.537562131881714
    3. 'S' → logprob: -6.787561893463135
    4. '[' → logprob: -6.787561893463135
    5. '```' → logprob: -6.912561893463135
    6. ')' → logprob: -7.287561893463135
    7. 'CS' → logprob: -7.287561893463135
    8. 'x' → logprob: -7.787561893463135
    9. ']' → logprob: -7.787561893463135
    10. 's' → logprob: -7.912561893463135

Token 194: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.015335763804614544
    2. 'bis' → logprob: -4.765335559844971
    3. 'collections' → logprob: -5.515335559844971
    4. 'math' → logprob: -6.015335559844971
    5. 'sys' → logprob: -8.515336036682129
    6. ' heap' → logprob: -10.890336036682129
    7. 'queue' → logprob: -11.765336036682129
    8. 'it' → logprob: -12.515336036682129
    9. 'copy' → logprob: -14.015336036682129
    10. ' bis' → logprob: -14.890336036682129

Token 195: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -9.722539834911004e-05
    2. 'queue' → logprob: -9.250097274780273
    3. '_queue' → logprob: -14.375097274780273
    4. ' queue' → logprob: -15.750097274780273
    5. 'import' → logprob: -16.250097274780273
    6. 'que' → logprob: -16.625097274780273
    7. '(queue' → logprob: -17.250097274780273
    8. '
' → logprob: -17.250097274780273
    9. '```' → logprob: -17.250097274780273
    10. 'ify' → logprob: -17.375097274780273

Token 196: '
' (ID: 198)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -1.039525032043457
    2. 'q' → logprob: -1.539525032043457
    3. 'for' → logprob: -2.164525032043457
    4. 'def' → logprob: -2.539525032043457
    5. 'Q' → logprob: -2.914525032043457
    6. 'h' → logprob: -3.039525032043457
    7. 'queue' → logprob: -3.289525032043457
    8. 'hq' → logprob: -4.289525032043457
    9. 'd' → logprob: -4.414525032043457
    10. 'pq' → logprob: -4.789525032043457

Token 197: 'MIN' (ID: 20797)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6401308178901672
    2. 'heap' → logprob: -2.2651307582855225
    3. 'dp' → logprob: -2.3901307582855225
    4. 'q' → logprob: -3.0151307582855225
    5. 'que' → logprob: -3.2651307582855225
    6. 'def' → logprob: -3.2651307582855225
    7. 'hq' → logprob: -3.2651307582855225
    8. 'pq' → logprob: -3.3901307582855225
    9. 'queue' → logprob: -4.015130996704102
    10. 'Q' → logprob: -4.015130996704102

Token 198: 'C' (ID: 34)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9813820719718933
    2. '=' → logprob: -1.481382131576538
    3. 'dist' → logprob: -2.106382131576538
    4. ' =' → logprob: -2.231382131576538
    5. '=[]' → logprob: -3.106382131576538
    6. 'heap' → logprob: -3.106382131576538
    7. '_dist' → logprob: -3.606382131576538
    8. 'import' → logprob: -4.481381893157959
    9. '_heap' → logprob: -4.981381893157959
    10. '_DIST' → logprob: -5.106381893157959

Token 199: 'OST' (ID: 7689)
  Prédit: 'ost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.24635757505893707
    2. ' =' → logprob: -2.7463576793670654
    3. '=' → logprob: -2.8713576793670654
    4. '=[]' → logprob: -2.8713576793670654
    5. 'OST' → logprob: -4.371357440948486
    6. '_' → logprob: -4.496357440948486
    7. 'heap' → logprob: -5.371357440948486
    8. '=[]
' → logprob: -6.121357440948486
    9. '_heap' → logprob: -6.746357440948486
    10. '_COST' → logprob: -6.746357440948486

Token 200: '_CS' (ID: 91377)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.473153680562973
    2. '=' → logprob: -1.0981537103652954
    3. '=[]' → logprob: -3.223153591156006
    4. '=[' → logprob: -5.848153591156006
    5. ' =[' → logprob: -8.473154067993164
    6. '=[]
' → logprob: -9.098154067993164
    7. ' ' → logprob: -9.473154067993164
    8. ',' → logprob: -9.598154067993164
    9. '_' → logprob: -9.973154067993164
    10. '=[[' → logprob: -10.348154067993164

Token 201: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.37118783593177795
    2. '=[]' → logprob: -1.7461878061294556
    3. ' =' → logprob: -2.246187925338745
    4. '=[' → logprob: -3.621187925338745
    5. '=[[' → logprob: -6.996187686920166
    6. ' =[' → logprob: -7.996187686920166
    7. '=[]
' → logprob: -8.246188163757324
    8. '=[
' → logprob: -8.871188163757324
    9. '[' → logprob: -8.996188163757324
    10. '_' → logprob: -8.996188163757324

Token 202: '1' (ID: 16)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.012106593698263168
    2. '10' → logprob: -4.887106418609619
    3. '0' → logprob: -5.512106418609619
    4. '[' → logprob: -8.637106895446777
    5. '-' → logprob: -9.387106895446777
    6. 'int' → logprob: -9.512106895446777
    7. '(float' → logprob: -10.137106895446777
    8. '[]' → logprob: -10.887106895446777
    9. ' float' → logprob: -11.512106895446777
    10. 'sys' → logprob: -11.637106895446777

Token 203: '<<' (ID: 5354)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.32328176498413086
    2. '<<' → logprob: -1.4482817649841309
    3. '10' → logprob: -3.573281764984131
    4. '000' → logprob: -5.198281764984131
    5. '_' → logprob: -5.948281764984131
    6. ']' → logprob: -6.198281764984131
    7. 'e' → logprob: -6.573281764984131
    8. '00' → logprob: -7.448281764984131
    9. ' <<' → logprob: -7.573281764984131
    10. ']*' → logprob: -8.948282241821289

Token 204: '30' (ID: 1130)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.05805467069149017
    2. '30' → logprob: -2.9330546855926514
    3. '31' → logprob: -6.183054447174072
    4. '50' → logprob: -7.808054447174072
    5. '29' → logprob: -8.18305492401123
    6. '61' → logprob: -8.43305492401123
    7. '40' → logprob: -9.43305492401123
    8. '59' → logprob: -10.55805492401123
    9. '62' → logprob: -10.68305492401123
    10. '63' → logprob: -10.80805492401123

Token 205: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.025959206745028496
    2. ']*' → logprob: -3.9009592533111572
    3. ' for' → logprob: -5.400959014892578
    4. 'for' → logprob: -7.650959014892578
    5. ' ]' → logprob: -8.275959014892578
    6. ',' → logprob: -9.775959014892578
    7. ']+' → logprob: -9.900959014892578
    8. ']*(' → logprob: -10.650959014892578
    9. ')]' → logprob: -12.025959014892578
    10. '	for' → logprob: -12.650959014892578

Token 206: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5347884297370911
    2. 'X' → logprob: -1.1597883701324463
    3. 'Y' → logprob: -2.9097883701324463
    4. 'S' → logprob: -3.5347883701324463
    5. 'Z' → logprob: -4.409788608551025
    6. 'M' → logprob: -6.284788608551025
    7. 'len' → logprob: -7.159788608551025
    8. '(X' → logprob: -7.409788608551025
    9. '(N' → logprob: -7.659788608551025
    10. '100' → logprob: -8.534788131713867

Token 207: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.2723104848410003e-05
    2. '+
' → logprob: -11.250022888183594
    3. '1' → logprob: -12.250022888183594
    4. ' +' → logprob: -12.625022888183594
    5. '+)' → logprob: -14.375022888183594
    6. ')' → logprob: -14.375022888183594
    7. '+

' → logprob: -16.625022888183594
    8. '```' → logprob: -16.625022888183594
    9. ')+' → logprob: -16.875022888183594
    10. '0' → logprob: -17.375022888183594

Token 208: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010509284038562328
    2. '2' → logprob: -9.250104904174805
    3. ' ' → logprob: -11.875104904174805
    4. '
' → logprob: -14.625104904174805
    5. '3' → logprob: -15.125104904174805
    6. '```' → logprob: -15.250104904174805
    7. '

' → logprob: -15.500104904174805
    8. '１' → logprob: -16.125104904174805
    9. '   ' → logprob: -16.250104904174805
    10. '+' → logprob: -16.375104904174805

Token 209: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00071695790393278
    2. ')
' → logprob: -7.2507171630859375
    3. ' )' → logprob: -12.000717163085938
    4. ')

' → logprob: -15.375717163085938
    5. '+' → logprob: -15.750717163085938
    6. ')
' → logprob: -16.250717163085938
    7. ')#' → logprob: -16.750717163085938
    8. '),' → logprob: -17.375717163085938
    9. ']' → logprob: -17.500717163085938
    10. '))' → logprob: -17.500717163085938

Token 210: 'MIN' (ID: 20797)
  Prédit: 'MIN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MIN' → logprob: -0.036793485283851624
    2. 'import' → logprob: -4.1617937088012695
    3. 'heap' → logprob: -4.6617937088012695
    4. 'hq' → logprob: -5.6617937088012695
    5. 'h' → logprob: -6.0367937088012695
    6. 'q' → logprob: -6.6617937088012695
    7. 'pq' → logprob: -6.7867937088012695
    8. 'queue' → logprob: -7.2867937088012695
    9. 'for' → logprob: -7.5367937088012695
    10. 'def' → logprob: -7.9117937088012695

Token 211: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.000885730201844126
    2. '_COST' → logprob: -7.125885963439941
    3. 'cost' → logprob: -10.000885963439941
    4. '_cost' → logprob: -10.875885963439941
    5. 'CS' → logprob: -12.125885963439941
    6. '=' → logprob: -13.125885963439941
    7. 'Cost' → logprob: -13.375885963439941
    8. '_' → logprob: -13.500885963439941
    9. ' COST' → logprob: -13.625885963439941
    10. '...' → logprob: -14.125885963439941

Token 212: 'OST' (ID: 7689)
  Prédit: 'OST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OST' → logprob: -0.05531088635325432
    2. 'C' → logprob: -2.9303109645843506
    3. '_COST' → logprob: -8.18031120300293
    4. 'O' → logprob: -9.55531120300293
    5. 'ost' → logprob: -10.55531120300293
    6. 'ST' → logprob: -10.93031120300293
    7. 'S' → logprob: -12.30531120300293
    8. '_cost' → logprob: -12.68031120300293
    9. '
' → logprob: -12.68031120300293
    10. 'T' → logprob: -13.18031120300293

Token 213: '_CC' (ID: 76416)
  Prédit: '_CS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CS' → logprob: -0.525542676448822
    2. '_CC' → logprob: -0.900542676448822
    3. '_' → logprob: -7.400542736053467
    4. '_C' → logprob: -7.525542736053467
    5. '_[' → logprob: -8.275542259216309
    6. '=_' → logprob: -8.650542259216309
    7. '=[' → logprob: -8.650542259216309
    8. '_=' → logprob: -9.025542259216309
    9. '[_' → logprob: -9.275542259216309
    10. '=' → logprob: -9.400542259216309

Token 214: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.0007580502424389124
    2. '=' → logprob: -7.250758171081543
    3. ' =' → logprob: -10.500758171081543
    4. ' =[' → logprob: -11.125758171081543
    5. '=[[' → logprob: -12.875758171081543
    6. '[' → logprob: -13.750758171081543
    7. '=[]' → logprob: -13.875758171081543
    8. '=[
' → logprob: -14.625758171081543
    9. '=
' → logprob: -15.375758171081543
    10. '=['' → logprob: -15.500758171081543

Token 215: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006533435662277043
    2. '[' → logprob: -8.000653266906738
    3. '(' → logprob: -8.125653266906738
    4. ' ' → logprob: -10.750653266906738
    5. ' (' → logprob: -15.375653266906738
    6. '```' → logprob: -15.875653266906738
    7. ' [' → logprob: -16.000654220581055
    8. '][' → logprob: -17.125654220581055
    9. '   ' → logprob: -17.625654220581055
    10. '0' → logprob: -17.625654220581055

Token 216: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -1.5213274309644476e-05
    2. '30' → logprob: -12.125015258789062
    3. '1' → logprob: -12.875015258789062
    4. '(' → logprob: -13.000015258789062
    5. '<<(' → logprob: -13.500015258789062
    6. ']<<' → logprob: -13.750015258789062
    7. ' <<' → logprob: -13.875015258789062
    8. ')<<' → logprob: -14.500015258789062
    9. '>>' → logprob: -15.375015258789062
    10. '```' → logprob: -15.500015258789062

Token 217: '30' (ID: 1130)
  Prédit: '30'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -4.246537173457909e-06
    2. '31' → logprob: -12.875003814697266
    3. '20' → logprob: -14.250003814697266
    4. '60' → logprob: -15.000003814697266
    5. '29' → logprob: -15.625003814697266
    6. ' ' → logprob: -15.875003814697266
    7. '
' → logprob: -16.500003814697266
    8. '25' → logprob: -16.875003814697266
    9. '27' → logprob: -16.875003814697266
    10. '```' → logprob: -17.000003814697266

Token 218: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.000578292878344655
    2. ')*(' → logprob: -7.7505784034729
    3. ']*' → logprob: -9.625577926635742
    4. '](' → logprob: -10.125577926635742
    5. ']' → logprob: -10.375577926635742
    6. '*(' → logprob: -12.000577926635742
    7. ']+' → logprob: -13.125577926635742
    8. '+' → logprob: -14.250577926635742
    9. '```' → logprob: -14.250577926635742
    10. '(N' → logprob: -15.375577926635742

Token 219: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0015191456768661737
    2. '(M' → logprob: -6.501519203186035
    3. ' M' → logprob: -11.126519203186035
    4. '   ' → logprob: -14.876519203186035
    5. 'N' → logprob: -15.001519203186035
    6. 'len' → logprob: -15.126519203186035
    7. '0' → logprob: -15.501519203186035
    8. '
' → logprob: -15.501519203186035
    9. 'Q' → logprob: -16.00151824951172
    10. '1' → logprob: -16.25151824951172

Token 220: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.988221684878226e-06
    2. ' +' → logprob: -12.625006675720215
    3. '1' → logprob: -12.750006675720215
    4. '```' → logprob: -15.000006675720215
    5. '+
' → logprob: -15.750006675720215
    6. ']+' → logprob: -16.25000762939453
    7. ')+' → logprob: -16.75000762939453
    8. '＋' → logprob: -16.87500762939453
    9. '[' → logprob: -17.00000762939453
    10. '
' → logprob: -17.25000762939453

Token 221: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -13.375004768371582
    3. '```' → logprob: -13.500004768371582
    4. '+' → logprob: -13.875004768371582
    5. '0' → logprob: -14.625004768371582
    6. '2' → logprob: -16.687503814697266
    7. '``' → logprob: -17.500003814697266
    8. '30' → logprob: -17.875003814697266
    9. '１' → logprob: -17.875003814697266
    10. '5' → logprob: -18.062503814697266

Token 222: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002342912630410865
    2. ')
' → logprob: -8.375234603881836
    3. ' )' → logprob: -13.000234603881836
    4. ')

' → logprob: -14.125234603881836
    5. ')
' → logprob: -14.875234603881836
    6. ']' → logprob: -16.625234603881836
    7. ')#' → logprob: -17.375234603881836
    8. '#' → logprob: -17.500234603881836
    9. '))' → logprob: -17.500234603881836
    10. ')`' → logprob: -17.625234603881836

Token 223: 'MIN' (ID: 20797)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5034332275390625
    2. 'heap' → logprob: -1.5034332275390625
    3. 'pq' → logprob: -3.1284332275390625
    4. 'hq' → logprob: -3.1284332275390625
    5. 'queue' → logprob: -3.3784332275390625
    6. 'q' → logprob: -3.5034332275390625
    7. 'h' → logprob: -4.7534332275390625
    8. 'que' → logprob: -5.0034332275390625
    9. 'dq' → logprob: -7.5034332275390625
    10. 'dp' → logprob: -7.5034332275390625

Token 224: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0006205809186212718
    2. '_COST' → logprob: -7.500620365142822
    3. '=' → logprob: -10.75062084197998
    4. 'cost' → logprob: -11.50062084197998
    5. '_cost' → logprob: -11.50062084197998
    6. 'CS' → logprob: -12.50062084197998
    7. ' =' → logprob: -12.87562084197998
    8. 'MIN' → logprob: -13.12562084197998
    9. '_C' → logprob: -13.25062084197998
    10. '_' → logprob: -13.25062084197998

Token 225: 'OST' (ID: 7689)
  Prédit: 'OST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OST' → logprob: -0.0003633521846495569
    2. 'O' → logprob: -8.00036334991455
    3. 'C' → logprob: -10.62536334991455
    4. 'ost' → logprob: -13.87536334991455
    5. '_COST' → logprob: -13.87536334991455
    6. '
' → logprob: -15.50036334991455
    7. ' OST' → logprob: -15.50036334991455
    8. 'OC' → logprob: -15.62536334991455
    9. '_' → logprob: -16.000364303588867
    10. '=' → logprob: -16.250364303588867

Token 226: '_CS' (ID: 91377)
  Prédit: '_CS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CS' → logprob: -0.00010092071170220152
    2. '_cs' → logprob: -10.250101089477539
    3. '_C' → logprob: -10.375101089477539
    4. '_CC' → logprob: -11.000101089477539
    5. '_' → logprob: -11.375101089477539
    6. '```' → logprob: -13.375101089477539
    7. '_=' → logprob: -14.125101089477539
    8. 'CS' → logprob: -14.375101089477539
    9. ' =' → logprob: -14.625101089477539
    10. '[_' → logprob: -15.000101089477539

Token 227: '[S' (ID: 85566)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.037163298577070236
    2. '<|end|>' → logprob: -3.412163257598877
    3. '=' → logprob: -6.287163257598877
    4. '[:]' → logprob: -7.287163257598877
    5. ' =' → logprob: -8.037163734436035
    6. '<|end|>' → logprob: -8.912163734436035
    7. ',' → logprob: -9.162163734436035
    8. '```' → logprob: -9.537163734436035
    9. '=[' → logprob: -9.787163734436035
    10. ')' → logprob: -10.537163734436035

Token 228: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.38720157742500305
    2. ']' → logprob: -1.1372015476226807
    3. '=' → logprob: -8.137201309204102
    4. ' ]' → logprob: -11.387201309204102
    5. ']+=' → logprob: -11.887201309204102
    6. '[' → logprob: -12.262201309204102
    7. ']=-' → logprob: -12.387201309204102
    8. '[S' → logprob: -12.762201309204102
    9. ']=(' → logprob: -13.637201309204102
    10. ']==' → logprob: -13.637201309204102

Token 229: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.749814019713085e-06
    2. 'S' → logprob: -12.375006675720215
    3. 'T' → logprob: -13.750006675720215
    4. 'CS' → logprob: -14.625006675720215
    5. 'X' → logprob: -14.875006675720215
    6. ' ' → logprob: -15.250006675720215
    7. 's' → logprob: -17.25000762939453
    8. '-' → logprob: -17.31250762939453
    9. '1' → logprob: -17.75000762939453
    10. '```' → logprob: -17.81250762939453

Token 230: '

' (ID: 279)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.18206661939620972
    2. 'h' → logprob: -2.1820666790008545
    3. 'import' → logprob: -3.8070666790008545
    4. 'queue' → logprob: -4.432066440582275
    5. 'hq' → logprob: -4.557066440582275
    6. 'q' → logprob: -5.307066440582275
    7. 'pq' → logprob: -5.682066440582275
    8. 'que' → logprob: -7.557066440582275
    9. '```' → logprob: -9.807066917419434
    10. 'he' → logprob: -10.057066917419434

Token 231: 'Q' (ID: 48)
  Prédit: 'hq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hq' → logprob: -0.33381175994873047
    2. 'h' → logprob: -1.8338117599487305
    3. 'heap' → logprob: -2.5838117599487305
    4. 'q' → logprob: -3.3338117599487305
    5. 'pq' → logprob: -5.3338117599487305
    6. 'import' → logprob: -5.4588117599487305
    7. 'que' → logprob: -6.2088117599487305
    8. 'queue' → logprob: -6.4588117599487305
    9. 'hp' → logprob: -9.45881175994873
    10. 'Q' → logprob: -9.45881175994873

Token 232: '=[[' (ID: 112637)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5011075139045715
    2. '=[]' → logprob: -1.3761074542999268
    3. '=' → logprob: -2.0011074542999268
    4. '=[]
' → logprob: -5.626107692718506
    5. '=[' → logprob: -6.001107692718506
    6. '.append' → logprob: -8.876107215881348
    7. '=[]
' → logprob: -9.626107215881348
    8. '=[[' → logprob: -10.376107215881348
    9. 'heap' → logprob: -11.126107215881348
    10. '.push' → logprob: -11.251107215881348

Token 233: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018167153000831604
    2. '(' → logprob: -4.018167018890381
    3. '(S' → logprob: -11.393167495727539
    4. 'MIN' → logprob: -13.268167495727539
    5. ' ' → logprob: -13.393167495727539
    6. '(M' → logprob: -13.643167495727539
    7. ' (' → logprob: -13.643167495727539
    8. ']' → logprob: -16.64316749572754
    9. '(T' → logprob: -16.64316749572754
    10. '(C' → logprob: -16.76816749572754

Token 234: ']+' (ID: 15344)
  Prédit: ',S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',S' → logprob: -0.5760122537612915
    2. ',' → logprob: -0.8260122537612915
    3. ' ,' → logprob: -10.07601261138916
    4. 'S' → logprob: -11.07601261138916
    5. ',int' → logprob: -12.32601261138916
    6. ',
' → logprob: -13.45101261138916
    7. ']' → logprob: -14.07601261138916
    8. '，' → logprob: -14.20101261138916
    9. ',s' → logprob: -14.20101261138916
    10. '0' → logprob: -14.20101261138916

Token 235: 'CS' (ID: 9310)
  Prédit: '[S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[S' → logprob: -0.04418183118104935
    2. '[' → logprob: -3.2941818237304688
    3. ' [' → logprob: -5.794181823730469
    4. '(S' → logprob: -6.044181823730469
    5. '[(' → logprob: -8.169181823730469
    6. '[s' → logprob: -8.919181823730469
    7. '[T' → logprob: -9.669181823730469
    8. '[C' → logprob: -9.669181823730469
    9. 'S' → logprob: -10.669181823730469
    10. '[-' → logprob: -10.794181823730469

Token 236: '[S' (ID: 85566)
  Prédit: '[S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[S' → logprob: -0.004207090009003878
    2. '_S' → logprob: -5.504207134246826
    3. 'S' → logprob: -9.129206657409668
    4. '[' → logprob: -11.379206657409668
    5. '_CS' → logprob: -12.504206657409668
    6. 'CS' → logprob: -13.879206657409668
    7. ')' → logprob: -13.879206657409668
    8. '[s' → logprob: -14.129206657409668
    9. '(S' → logprob: -14.129206657409668
    10. ',S' → logprob: -15.379206657409668

Token 237: ']]
' (ID: 29446)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.055785421282052994
    2. ']' → logprob: -3.3057854175567627
    3. '][' → logprob: -4.180785655975342
    4. '][:' → logprob: -6.555785655975342
    5. ']][' → logprob: -7.930785655975342
    6. ']]
' → logprob: -8.555785179138184
    7. ']]

' → logprob: -9.305785179138184
    8. '']]' → logprob: -9.555785179138184
    9. '][-' → logprob: -9.805785179138184
    10. '[' → logprob: -9.930785179138184

Token 238: 'USES' (ID: 183812)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.860592246055603
    2. 'while' → logprob: -1.735592246055603
    3. '<|end|>' → logprob: -2.1105923652648926
    4. ']' → logprob: -2.2355923652648926
    5. ')' → logprob: -2.3605923652648926
    6. 'he' → logprob: -3.8605923652648926
    7. '
' → logprob: -4.485592365264893
    8. ',' → logprob: -4.735592365264893
    9. '(heap' → logprob: -5.110592365264893
    10. 'import' → logprob: -5.360592365264893

Token 239: '=[' (ID: 13370)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.53746098279953
    2. '=' → logprob: -2.037461042404175
    3. ' =' → logprob: -2.037461042404175
    4. '=[]' → logprob: -3.162461042404175
    5. 'D' → logprob: -3.287461042404175
    6. '=[' → logprob: -4.287460803985596
    7. '.append' → logprob: -5.162460803985596
    8. ']' → logprob: -5.162460803985596
    9. '=S' → logprob: -5.287460803985596
    10. 'q' → logprob: -5.537460803985596

Token 240: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.1799827218055725
    2. '0' → logprob: -1.8049826622009277
    3. 'True' → logprob: -9.179983139038086
    4. '[' → logprob: -9.679983139038086
    5. '-' → logprob: -10.304983139038086
    6. '1' → logprob: -11.429983139038086
    7. ' False' → logprob: -11.679983139038086
    8. 'S' → logprob: -12.304983139038086
    9. '[]' → logprob: -12.304983139038086
    10. '(False' → logprob: -12.804983139038086

Token 241: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6210433840751648
    2. ']*' → logprob: -1.2460434436798096
    3. ']*(' → logprob: -1.8710434436798096
    4. ' for' → logprob: -4.7460432052612305
    5. ']+' → logprob: -5.2460432052612305
    6. ',' → logprob: -5.4960432052612305
    7. 'for' → logprob: -6.1210432052612305
    8. ' ]' → logprob: -7.4960432052612305
    9. '0' → logprob: -10.12104320526123
    10. ']
' → logprob: -10.24604320526123

Token 242: 'X' (ID: 55)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.012209753505885601
    2. 'X' → logprob: -4.762209892272949
    3. 'max' → logprob: -6.262209892272949
    4. 'len' → logprob: -7.637209892272949
    5. '1' → logprob: -7.887209892272949
    6. '(N' → logprob: -8.38720989227295
    7. '(' → logprob: -9.13720989227295
    8. '100' → logprob: -9.26220989227295
    9. ' N' → logprob: -9.51220989227295
    10. 'S' → logprob: -9.63720989227295

Token 243: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00017743845819495618
    2. '1' → logprob: -8.875177383422852
    3. ' +' → logprob: -10.375177383422852
    4. '0' → logprob: -13.250177383422852
    5. '+
' → logprob: -13.375177383422852
    6. '```' → logprob: -13.750177383422852
    7. '+B' → logprob: -14.375177383422852
    8. ']+' → logprob: -14.875177383422852
    9. ')+' → logprob: -15.250177383422852
    10. '
' → logprob: -15.500177383422852

Token 244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005344442906789482
    2. '2' → logprob: -7.875534534454346
    3. '7' → logprob: -10.125534057617188
    4. ' ' → logprob: -10.250534057617188
    5. '5' → logprob: -10.625534057617188
    6. '6' → logprob: -11.375534057617188
    7. '+' → logprob: -11.625534057617188
    8. '3' → logprob: -11.625534057617188
    9. 'N' → logprob: -11.875534057617188
    10. '11' → logprob: -12.750534057617188

Token 245: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023178798437584192
    2. ']' → logprob: -9.625231742858887
    3. '])' → logprob: -9.875231742858887
    4. ')
' → logprob: -10.125231742858887
    5. ' )' → logprob: -10.750231742858887
    6. '+' → logprob: -10.875231742858887
    7. ')]' → logprob: -11.125231742858887
    8. '0' → logprob: -12.625231742858887
    9. ')])' → logprob: -12.750231742858887
    10. '+)' → logprob: -12.875231742858887

Token 246: 'USE' (ID: 28638)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.04419392719864845
    2. 'heap' → logprob: -3.294193983078003
    3. ' while' → logprob: -5.294193744659424
    4. 'import' → logprob: -8.044194221496582
    5. 'he' → logprob: -8.169194221496582
    6. 'Q' → logprob: -8.544194221496582
    7. '```' → logprob: -9.044194221496582
    8. ' heap' → logprob: -10.169194221496582
    9. ')' → logprob: -10.294194221496582
    10. 'visited' → logprob: -10.669194221496582

Token 247: 'C' (ID: 34)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.021645616739988327
    2. '[' → logprob: -4.646645545959473
    3. 'd' → logprob: -5.271645545959473
    4. 'D' → logprob: -5.646645545959473
    5. '[S' → logprob: -6.271645545959473
    6. 's' → logprob: -7.771645545959473
    7. '=' → logprob: -7.896645545959473
    8. '```' → logprob: -9.021645545959473
    9. '[d' → logprob: -9.896645545959473
    10. '=S' → logprob: -10.271645545959473

Token 248: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.23051059246063232
    2. '[' → logprob: -2.105510711669922
    3. 'C' → logprob: -3.105510711669922
    4. '=' → logprob: -3.605510711669922
    5. ' =' → logprob: -5.480510711669922
    6. ' =[' → logprob: -5.730510711669922
    7. '_C' → logprob: -6.355510711669922
    8. 'S' → logprob: -7.230510711669922
    9. '```' → logprob: -7.980510711669922
    10. '_' → logprob: -8.105510711669922

Token 249: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22368760406970978
    2. 'Y' → logprob: -1.7236876487731934
    3. 'M' → logprob: -4.223687648773193
    4. 'N' → logprob: -5.723687648773193
    5. '(Y' → logprob: -6.473687648773193
    6. '(M' → logprob: -6.598687648773193
    7. 'Z' → logprob: -8.098687171936035
    8. 'X' → logprob: -8.473687171936035
    9. '[Y' → logprob: -8.848687171936035
    10. '[M' → logprob: -8.973687171936035

Token 250: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.000467730569653213
    2. ']*' → logprob: -8.250467300415039
    3. ')*(' → logprob: -9.125467300415039
    4. ']+' → logprob: -10.250467300415039
    5. ']' → logprob: -10.500467300415039
    6. '*(' → logprob: -10.875467300415039
    7. '](' → logprob: -11.125467300415039
    8. ']
' → logprob: -16.25046730041504
    9. '(X' → logprob: -16.25046730041504
    10. '```' → logprob: -16.37546730041504

Token 251: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.008635842241346836
    2. 'Z' → logprob: -4.883635997772217
    3. 'N' → logprob: -7.758635997772217
    4. 'X' → logprob: -8.258635520935059
    5. 'M' → logprob: -9.133635520935059
    6. '(Y' → logprob: -9.258635520935059
    7. ' Y' → logprob: -9.383635520935059
    8. '(Z' → logprob: -11.383635520935059
    9. '   ' → logprob: -11.508635520935059
    10. 'S' → logprob: -12.133635520935059

Token 252: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.981667537620524e-06
    2. ' +' → logprob: -13.500001907348633
    3. '1' → logprob: -15.375001907348633
    4. '```' → logprob: -16.125001907348633
    5. ']+' → logprob: -16.250001907348633
    6. '+
' → logprob: -17.000001907348633
    7. ')+' → logprob: -18.000001907348633
    8. '＋' → logprob: -18.250001907348633
    9. '[' → logprob: -18.250001907348633
    10. '()+' → logprob: -18.750001907348633

Token 253: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17984619736671448
    2. '+' → logprob: -1.804846167564392
    3. '```' → logprob: -9.679845809936523
    4. ' ' → logprob: -11.679845809936523
    5. ' +' → logprob: -11.679845809936523
    6. '2' → logprob: -12.679845809936523
    7. '5' → logprob: -12.804845809936523
    8. '0' → logprob: -12.929845809936523
    9. ']+' → logprob: -12.929845809936523
    10. '``' → logprob: -13.054845809936523

Token 254: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025654337368905544
    2. ')
' → logprob: -6.002565383911133
    3. ')]' → logprob: -9.752565383911133
    4. ']' → logprob: -11.377565383911133
    5. '+' → logprob: -12.002565383911133
    6. '])' → logprob: -12.627565383911133
    7. ' )' → logprob: -13.252565383911133
    8. ')

' → logprob: -13.377565383911133
    9. '))' → logprob: -13.752565383911133
    10. ')])' → logprob: -13.877565383911133

Token 255: 'USE' (ID: 28638)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2305459976196289
    2. 'heap' → logprob: -1.605545997619629
    3. 'he' → logprob: -6.355545997619629
    4. ' while' → logprob: -6.605545997619629
    5. 'Q' → logprob: -7.855545997619629
    6. 'q' → logprob: -7.980545997619629
    7. '```' → logprob: -8.105545997619629
    8. 'import' → logprob: -8.355545997619629
    9. ')' → logprob: -8.605545997619629
    10. 'visited' → logprob: -9.230545997619629

Token 256: 'U' (ID: 52)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.31119534373283386
    2. 'S' → logprob: -1.4361953735351562
    3. '[' → logprob: -4.061195373535156
    4. 'D' → logprob: -5.311195373535156
    5. 'R' → logprob: -5.811195373535156
    6. 'CS' → logprob: -6.436195373535156
    7. 'U' → logprob: -7.061195373535156
    8. '[S' → logprob: -7.186195373535156
    9. '```' → logprob: -8.186195373535156
    10. '=[' → logprob: -8.436195373535156

Token 257: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.001529024913907051
    2. '[' → logprob: -7.251529216766357
    3. '=' → logprob: -7.376529216766357
    4. ' =' → logprob: -9.3765287399292
    5. ' =[' → logprob: -9.6265287399292
    6. '=[[' → logprob: -10.5015287399292
    7. '={[' → logprob: -12.6265287399292
    8. '=[]' → logprob: -12.7515287399292
    9. '=['' → logprob: -13.5015287399292
    10. '```' → logprob: -13.6265287399292

Token 258: '0' (ID: 15)
  Prédit: '(Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Z' → logprob: -0.08851807564496994
    2. '0' → logprob: -2.8385181427001953
    3. '[' → logprob: -4.088518142700195
    4. 'Z' → logprob: -4.713518142700195
    5. '(' → logprob: -8.338518142700195
    6. ' (' → logprob: -8.838518142700195
    7. ' Z' → logprob: -10.838518142700195
    8. ' ' → logprob: -11.463518142700195
    9. '=' → logprob: -12.088518142700195
    10. '[](' → logprob: -12.463518142700195

Token 259: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.0018153596902266145
    2. ']' → logprob: -6.876815319061279
    3. ']+' → logprob: -7.751815319061279
    4. '](' → logprob: -8.751815795898438
    5. '+' → logprob: -9.126815795898438
    6. ']*' → logprob: -10.751815795898438
    7. ']=(' → logprob: -10.751815795898438
    8. '*(' → logprob: -11.126815795898438
    9. '+(' → logprob: -11.126815795898438
    10. ')*(' → logprob: -12.376815795898438

Token 260: 'Z' (ID: 57)
  Prédit: 'Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -2.2961512513575144e-05
    2. ' Z' → logprob: -11.125022888183594
    3. '(Z' → logprob: -11.750022888183594
    4. 'T' → logprob: -16.000022888183594
    5. '   ' → logprob: -16.500022888183594
    6. '	Z' → logprob: -17.250022888183594
    7. ' ' → logprob: -17.375022888183594
    8. 'S' → logprob: -17.625022888183594
    9. 'X' → logprob: -17.625022888183594
    10. '  ' → logprob: -18.500022888183594

Token 261: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.7432603272027336e-06
    2. ' +' → logprob: -13.750001907348633
    3. ']+' → logprob: -14.625001907348633
    4. '```' → logprob: -16.250001907348633
    5. '1' → logprob: -17.000001907348633
    6. '+
' → logprob: -17.625001907348633
    7. '＋' → logprob: -18.750001907348633
    8. '[' → logprob: -19.250001907348633
    9. '()+' → logprob: -19.625001907348633
    10. ')+' → logprob: -19.750001907348633

Token 262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.599403423024341e-05
    2. '+' → logprob: -9.750065803527832
    3. ' ' → logprob: -12.375065803527832
    4. '```' → logprob: -13.250065803527832
    5. '0' → logprob: -13.875065803527832
    6. '-' → logprob: -15.250065803527832
    7. '2' → logprob: -15.625065803527832
    8. '``' → logprob: -16.43756675720215
    9. '
' → logprob: -16.62506675720215
    10. '3' → logprob: -16.75006675720215

Token 263: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00041947141289711
    2. '])' → logprob: -8.750419616699219
    3. ']' → logprob: -8.875419616699219
    4. ')]' → logprob: -9.625419616699219
    5. ')
' → logprob: -10.000419616699219
    6. ')])' → logprob: -12.500419616699219
    7. ' )' → logprob: -12.625419616699219
    8. '）' → logprob: -14.250419616699219
    9. '))' → logprob: -14.375419616699219
    10. ')

' → logprob: -15.000419616699219

Token 264: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00784107856452465
    2. 'heap' → logprob: -5.007841110229492
    3. ' while' → logprob: -7.757841110229492
    4. ')' → logprob: -7.882841110229492
    5. 'he' → logprob: -8.632841110229492
    6. '```' → logprob: -10.132841110229492
    7. ']' → logprob: -10.882841110229492
    8. '<|end|>' → logprob: -11.007841110229492
    9. '
' → logprob: -11.382841110229492
    10. ',' → logprob: -12.007841110229492

Token 265: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.008706637658178806
    2. ' Q' → logprob: -4.758706569671631
    3. 'len' → logprob: -9.508707046508789
    4. ' len' → logprob: -11.383707046508789
    5. ' not' → logprob: -13.133707046508789
    6. 'not' → logprob: -13.383707046508789
    7. '	Q' → logprob: -14.258707046508789
    8. ' ' → logprob: -14.258707046508789
    9. 'q' → logprob: -14.758707046508789
    10. '   ' → logprob: -14.883707046508789

Token 266: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1967390775680542
    2. ':
' → logprob: -1.1967390775680542
    3. ' and' → logprob: -1.1967390775680542
    4. '[' → logprob: -3.0717391967773438
    5. 'and' → logprob: -3.1967391967773438
    6. '```' → logprob: -5.446739196777344
    7. '.pop' → logprob: -6.696739196777344
    8. '):
' → logprob: -9.071739196777344
    9. '.heap' → logprob: -9.696739196777344
    10. '.' → logprob: -9.821739196777344

Token 267: '   ' (ID: 271)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.29016974568367004
    2. '```' → logprob: -1.9151697158813477
    3. 'he' → logprob: -3.2901697158813477
    4. '0' → logprob: -3.5401697158813477
    5. 'import' → logprob: -5.165169715881348
    6. 'q' → logprob: -5.165169715881348
    7. '(heap' → logprob: -5.165169715881348
    8. '-' → logprob: -5.415169715881348
    9. '   ' → logprob: -5.540169715881348
    10. '-he' → logprob: -6.040169715881348

Token 268: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.09354699403047562
    2. 'cost' → logprob: -2.8435471057891846
    3. 'h' → logprob: -3.8435471057891846
    4. 'q' → logprob: -5.5935468673706055
    5. 'import' → logprob: -6.2185468673706055
    6. '```' → logprob: -6.5935468673706055
    7. 'd' → logprob: -7.2185468673706055
    8. 't' → logprob: -8.343546867370605
    9. 'heap' → logprob: -8.343546867370605
    10. '_,' → logprob: -8.343546867370605

Token 269: 'print' (ID: 1598)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.4740430414676666
    2. 'heap' → logprob: -1.0990430116653442
    3. 'q' → logprob: -3.849043130874634
    4. 'import' → logprob: -4.724042892456055
    5. 'he' → logprob: -5.474042892456055
    6. 'c' → logprob: -5.974042892456055
    7. 'h' → logprob: -6.099042892456055
    8. '_,' → logprob: -6.599042892456055
    9. 't' → logprob: -6.974042892456055
    10. 'score' → logprob: -7.599042892456055

Token 270: '(Q' (ID: 14437)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.30011582374572754
    2. 'Q' → logprob: -2.8001158237457275
    3. '()' → logprob: -3.0501158237457275
    4. '(heap' → logprob: -3.1751158237457275
    5. 'len' → logprob: -4.425115585327148
    6. 'q' → logprob: -4.550115585327148
    7. 'he' → logprob: -4.800115585327148
    8. ' heap' → logprob: -4.800115585327148
    9. '(Q' → logprob: -4.800115585327148
    10. '
' → logprob: -5.050115585327148

Token 271: ')
' (ID: 446)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02726614847779274
    2. 'q' → logprob: -4.527266025543213
    3. ',' → logprob: -5.527266025543213
    4. ')' → logprob: -5.902266025543213
    5. '.pop' → logprob: -5.902266025543213
    6. 'heap' → logprob: -6.527266025543213
    7. '.heap' → logprob: -6.652266025543213
    8. '.he' → logprob: -6.902266025543213
    9. 'he' → logprob: -7.152266025543213
    10. '=' → logprob: -8.277266502380371

Token 272: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37033921480178833
    2. 'import' → logprob: -2.6203391551971436
    3. 'c' → logprob: -3.1203391551971436
    4. 'cost' → logprob: -3.2453391551971436
    5. ',' → logprob: -3.3703391551971436
    6. 'q' → logprob: -3.4953391551971436
    7. 't' → logprob: -3.4953391551971436
    8. '```' → logprob: -4.495339393615723
    9. '_,' → logprob: -4.620339393615723
    10. 'h' → logprob: -4.745339393615723

Token 273: ' cost' (ID: 3097)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4851667881011963
    2. 'cost' (adapté à ' cost') → logprob: -1.8601667881011963
    3. 'h' → logprob: -2.3601667881011963
    4. 'q' → logprob: -2.9851667881011963
    5. '   ' → logprob: -3.7351667881011963
    6. 'import' → logprob: -4.110166549682617
    7. 'heap' → logprob: -4.360166549682617
    8. 'd' → logprob: -4.360166549682617
    9. 't' → logprob: -5.110166549682617
    10. 'he' → logprob: -5.610166549682617

Token 274: ',x' (ID: 29748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11980758607387543
    2. ',c' → logprob: -2.244807481765747
    3. ',q' → logprob: -5.869807720184326
    4. ',p' → logprob: -6.244807720184326
    5. ' ,' → logprob: -7.369807720184326
    6. ',current' → logprob: -7.869807720184326
    7. ',Q' → logprob: -8.369807243347168
    8. ',time' → logprob: -8.869807243347168
    9. ',t' → logprob: -8.994807243347168
    10. ',u' → logprob: -9.244807243347168

Token 275: ',y' (ID: 16103)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25293776392936707
    2. ',' → logprob: -1.8779377937316895
    3. ' =' → logprob: -3.2529377937316895
    4. ',q' → logprob: -5.3779377937316895
    5. ',Q' → logprob: -5.6279377937316895
    6. ',_' → logprob: -5.8779377937316895
    7. ']=' → logprob: -6.1279377937316895
    8. 'heap' → logprob: -6.2529377937316895
    9. ',h' → logprob: -6.3779377937316895
    10. ',p' → logprob: -6.5029377937316895

Token 276: ',z' (ID: 54920)
  Prédit: ',z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',z' → logprob: -0.015169989317655563
    2. ',q' → logprob: -5.265170097351074
    3. ',' → logprob: -5.765170097351074
    4. ',_' → logprob: -6.390170097351074
    5. ',v' → logprob: -6.640170097351074
    6. '=' → logprob: -6.765170097351074
    7. ',c' → logprob: -7.265170097351074
    8. ' =' → logprob: -8.265170097351074
    9. ',p' → logprob: -8.515170097351074
    10. ',Z' → logprob: -8.640170097351074

Token 277: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09568353742361069
    2. ',' → logprob: -3.2206835746765137
    3. ' =' → logprob: -3.2206835746765137
    4. ',c' → logprob: -5.470683574676514
    5. ']=' → logprob: -6.470683574676514
    6. ',Q' → logprob: -6.595683574676514
    7. ',q' → logprob: -6.720683574676514
    8. ',h' → logprob: -7.220683574676514
    9. 'heap' → logprob: -7.595683574676514
    10. '   ' → logprob: -7.720683574676514

Token 278: 'cs' (ID: 8102)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'id' → logprob: -1.7676421403884888
    2. 'idx' → logprob: -2.142642021179199
    3. 'i' → logprob: -2.267642021179199
    4. '_id' → logprob: -2.392642021179199
    5. '_=' → logprob: -2.392642021179199
    6. 'u' → logprob: -2.517642021179199
    7. 'w' → logprob: -2.642642021179199
    8. '_' → logprob: -3.267642021179199
    9. 'flag' → logprob: -3.267642021179199
    10. 'used' → logprob: -3.767642021179199

Token 279: '=' (ID: 28)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -1.4209846258163452
    2. '_id' → logprob: -1.5459846258163452
    3. 'id' → logprob: -1.9209846258163452
    4. ',' → logprob: -2.1709847450256348
    5. 'idx' → logprob: -2.4209847450256348
    6. '_type' → logprob: -3.5459847450256348
    7. ',i' → logprob: -3.7959847450256348
    8. ',c' → logprob: -4.045984745025635
    9. '_or' → logprob: -4.045984745025635
    10. '=' → logprob: -4.420984745025635

Token 280: 'heap' (ID: 38535)
  Prédit: 'heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.005855670664459467
    2. 'he' → logprob: -5.255855560302734
    3. ' heap' → logprob: -8.005855560302734
    4. '=' → logprob: -9.130855560302734
    5. '
' → logprob: -10.130855560302734
    6. 'q' → logprob: -10.255855560302734
    7. '(heap' → logprob: -10.380855560302734
    8. 'pop' → logprob: -11.130855560302734
    9. ' =' → logprob: -11.505855560302734
    10. 'Q' → logprob: -11.505855560302734

Token 281: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.250000953674316
    3. 'push' → logprob: -16.000001907348633
    4. 'p' → logprob: -16.625001907348633
    5. 'replace' → logprob: -17.125001907348633
    6. '```' → logprob: -17.500001907348633
    7. 'Q' → logprob: -17.625001907348633
    8. 'ify' → logprob: -17.625001907348633
    9. '.he' → logprob: -18.375001907348633
    10. 'h' → logprob: -18.375001907348633

Token 282: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.00020807012333534658
    2. '.heap' → logprob: -8.625207901000977
    3. '.' → logprob: -10.750207901000977
    4. 'q' → logprob: -12.375207901000977
    5. '.pop' → logprob: -14.000207901000977
    6. 'he' → logprob: -14.625207901000977
    7. ' .' → logprob: -14.750207901000977
    8. '```' → logprob: -15.500207901000977
    9. '.q' → logprob: -15.625207901000977
    10. ').' → logprob: -16.500207901000977

Token 283: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -7.32654589228332e-05
    2. 'pp' → logprob: -10.125073432922363
    3. 'ap' → logprob: -10.375073432922363
    4. 'q' → logprob: -14.375073432922363
    5. 'qp' → logprob: -14.375073432922363
    6. 'a' → logprob: -15.375073432922363
    7. '```' → logprob: -15.375073432922363
    8. '...' → logprob: -16.125072479248047
    9. '

' → logprob: -17.000072479248047
    10. '[' → logprob: -17.250072479248047

Token 284: 'op' (ID: 467)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.17241492867469788
    2. 'app' → logprob: -1.9224148988723755
    3. 'pp' → logprob: -4.922414779663086
    4. 'p' → logprob: -5.672414779663086
    5. 'op' → logprob: -6.672414779663086
    6. 'pop' → logprob: -9.922414779663086
    7. 'q' → logprob: -10.297414779663086
    8. 'sp' → logprob: -10.672414779663086
    9. 'qp' → logprob: -12.297414779663086
    10. 'u' → logprob: -12.422414779663086

Token 285: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -2.696889623621246e-06
    2. 'Q' → logprob: -13.25000286102295
    3. '(' → logprob: -14.87500286102295
    4. ',Q' → logprob: -15.00000286102295
    5. '
' → logprob: -16.750001907348633
    6. '(
' → logprob: -17.125001907348633
    7. ' (' → logprob: -17.375001907348633
    8. '```' → logprob: -17.500001907348633
    9. ',' → logprob: -17.750001907348633
    10. ' Q' → logprob: -18.250001907348633

Token 286: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00038467496051453054
    2. ')
' → logprob: -7.87538480758667
    3. ')[' → logprob: -13.250384330749512
    4. ' )' → logprob: -14.125384330749512
    5. ')

' → logprob: -14.250384330749512
    6. '   ' → logprob: -14.375384330749512
    7. ')#' → logprob: -14.875384330749512
    8. '),' → logprob: -16.125385284423828
    9. '<|end|>' → logprob: -17.000385284423828
    10. ',' → logprob: -17.250385284423828

Token 287: '    
' (ID: 1944)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 288: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.007188673131167889
    2. ' if' → logprob: -5.50718879699707
    3. 'for' → logprob: -6.13218879699707
    4. 'cost' → logprob: -7.50718879699707
    5. '   ' → logprob: -9.50718879699707
    6. ')' → logprob: -9.50718879699707
    7. '<|end|>' → logprob: -10.25718879699707
    8. '```' → logprob: -10.25718879699707
    9. 'i' → logprob: -10.63218879699707
    10. ' for' → logprob: -10.88218879699707

Token 289: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05926818773150444
    2. 'cost' → logprob: -3.1842682361602783
    3. 'for' → logprob: -4.184267997741699
    4. 'cs' → logprob: -7.684267997741699
    5. 'x' → logprob: -8.6842679977417
    6. ' if' → logprob: -9.6842679977417
    7. '0' → logprob: -9.8092679977417
    8. '   ' → logprob: -10.9342679977417
    9. '```' → logprob: -10.9342679977417
    10. '(cost' → logprob: -11.0592679977417

Token 290: ' cs' (ID: 14980)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.8022082448005676
    2. ' cost' → logprob: -1.3022081851959229
    3. 'cs' → logprob: -1.6772081851959229
    4. ' cs' → logprob: -2.802208185195923
    5. 'MIN' → logprob: -4.177208423614502
    6. 'USE' → logprob: -5.177208423614502
    7. ' MIN' → logprob: -5.802208423614502
    8. ' USE' → logprob: -5.927208423614502
    9. '(cost' → logprob: -6.052208423614502
    10. 'USES' → logprob: -7.427208423614502

Token 291: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02857925370335579
    2. ' ==' → logprob: -3.6535792350769043
    3. ':' → logprob: -6.653579235076904
    4. ']==' → logprob: -8.028579711914062
    5. '[' → logprob: -8.403579711914062
    6. '!=' → logprob: -9.028579711914062
    7. ')==' → logprob: -9.278579711914062
    8. '=' → logprob: -10.028579711914062
    9. '<|end|>' → logprob: -10.278579711914062
    10. '==
' → logprob: -10.403579711914062

Token 292: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003640107112005353
    2. '1' → logprob: -5.628640174865723
    3. ' ' → logprob: -10.128640174865723
    4. '   ' → logprob: -15.753640174865723
    5. 'True' → logprob: -16.753639221191406
    6. '2' → logprob: -18.128639221191406
    7. '=' → logprob: -18.253639221191406
    8. '  ' → logprob: -18.253639221191406
    9. 'CS' → logprob: -18.753639221191406
    10. '3' → logprob: -18.878639221191406

Token 293: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1487855464220047
    2. ' and' → logprob: -2.6487855911254883
    3. ':
' → logprob: -2.7737855911254883
    4. 'and' → logprob: -5.898785591125488
    5. '   ' → logprob: -6.773785591125488
    6. ' or' → logprob: -7.648785591125488
    7. '       ' → logprob: -8.148785591125488
    8. ':return' → logprob: -8.523785591125488
    9. '<|end|>' → logprob: -9.273785591125488
    10. ' :' → logprob: -9.773785591125488

Token 294: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3851989507675171
    2. ' for' → logprob: -1.635198950767517
    3. 'for' → logprob: -3.0101990699768066
    4. ' if' → logprob: -3.2601990699768066
    5. 'if' → logprob: -3.3851990699768066
    6. '       ' → logprob: -6.760199069976807
    7. ' USE' → logprob: -8.010198593139648
    8. 'USES' → logprob: -8.135198593139648
    9. '    
' → logprob: -8.510198593139648
    10. '    ' → logprob: -9.385198593139648

Token 295: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7066811919212341
    2. 'for' → logprob: -0.7066811919212341
    3. '   ' → logprob: -4.581681251525879
    4. ' for' → logprob: -6.706681251525879
    5. ' if' → logprob: -7.581681251525879
    6. 'USES' → logprob: -7.706681251525879
    7. 'USE' → logprob: -7.956681251525879
    8. 'heap' → logprob: -8.831681251525879
    9. '       ' → logprob: -8.956681251525879
    10. 'cost' → logprob: -9.081681251525879

Token 296: ' USE' (ID: 20180)
  Prédit: 'MIN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MIN' → logprob: -0.9999570846557617
    2. ' MIN' → logprob: -1.3749570846557617
    3. ' USE' → logprob: -2.1249570846557617
    4. 'USE' → logprob: -2.3749570846557617
    5. ' cost' → logprob: -2.4999570846557617
    6. 'cost' → logprob: -2.8749570846557617
    7. ' y' → logprob: -4.749957084655762
    8. ' not' → logprob: -5.374957084655762
    9. 'USES' → logprob: -5.624957084655762
    10. ' x' → logprob: -6.124957084655762

Token 297: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.11514706909656525
    2. 'C' → logprob: -2.240147113800049
    3. 'U' → logprob: -6.865147113800049
    4. '[x' → logprob: -7.615147113800049
    5. 'CS' → logprob: -7.865147113800049
    6. '[S' → logprob: -8.49014663696289
    7. '[' → logprob: -9.24014663696289
    8. 'x' → logprob: -10.99014663696289
    9. 'D' → logprob: -11.24014663696289
    10. 'Cs' → logprob: -11.49014663696289

Token 298: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -8.280175097752362e-05
    2. '[' → logprob: -9.875082969665527
    3. '[y' → logprob: -10.625082969665527
    4. '[z' → logprob: -12.250082969665527
    5. '```' → logprob: -14.125082969665527
    6. ' [' → logprob: -14.875082969665527
    7. 'x' → logprob: -15.375082969665527
    8. '==' → logprob: -15.875082969665527
    9. '[s' → logprob: -16.00008201599121
    10. '[u' → logprob: -16.37508201599121

Token 299: ']==' (ID: 34128)
  Prédit: ']=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.14711841940879822
    2. ']:' → logprob: -2.772118330001831
    3. ']' → logprob: -2.897118330001831
    4. '==' → logprob: -4.64711856842041
    5. ']>' → logprob: -5.27211856842041
    6. ']:
' → logprob: -6.77211856842041
    7. ']>=' → logprob: -7.14711856842041
    8. ']!=' → logprob: -7.64711856842041
    9. ':' → logprob: -7.77211856842041
    10. ']+=' → logprob: -7.77211856842041

Token 300: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000915039679966867
    2. '1' → logprob: -7.000915050506592
    3. ' ' → logprob: -13.125914573669434
    4. 'False' → logprob: -13.750914573669434
    5. '   ' → logprob: -15.125914573669434
    6. '
' → logprob: -16.12591552734375
    7. 'True' → logprob: -16.87591552734375
    8. '           ' → logprob: -18.00091552734375
    9. '```' → logprob: -18.00091552734375
    10. '    ' → logprob: -18.37591552734375

Token 301: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5911099314689636
    2. ':' → logprob: -0.8411099314689636
    3. ' and' → logprob: -4.341109752655029
    4. '       ' → logprob: -7.716109752655029
    5. ' or' → logprob: -7.716109752655029
    6. 'and' → logprob: -7.841109752655029
    7. '   ' → logprob: -7.966109752655029
    8. '<|end|>' → logprob: -9.216110229492188
    9. ':

' → logprob: -9.591110229492188
    10. '):
' → logprob: -9.966110229492188

Token 302: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02202608436346054
    2. '   ' → logprob: -5.022026062011719
    3. ' continue' → logprob: -5.522026062011719
    4. ':' → logprob: -5.897026062011719
    5. ':
' → logprob: -6.397026062011719
    6. ' cost' → logprob: -6.397026062011719
    7. ' USE' → logprob: -6.897026062011719
    8. '```' → logprob: -7.147026062011719
    9. '           ' → logprob: -7.272026062011719
    10. ' continues' → logprob: -7.647026062011719

Token 303: ' USE' (ID: 20180)
  Prédit: ' USE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' USE' → logprob: -0.5057544112205505
    2. 'USES' → logprob: -1.0057544708251953
    3. '           ' → logprob: -4.130754470825195
    4. '   ' → logprob: -5.005754470825195
    5. 'USE' (adapté à ' USE') → logprob: -5.130754470825195
    6. '       ' → logprob: -7.005754470825195
    7. 'Uses' → logprob: -7.755754470825195
    8. '```' → logprob: -8.130754470825195
    9. '               ' → logprob: -8.630754470825195
    10. 'US' → logprob: -9.005754470825195

Token 304: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -3.128163257315464e-07
    2. ' S' → logprob: -15.875
    3. '   ' → logprob: -16.875
    4. '```' → logprob: -17.375
    5. ' ' → logprob: -18.0
    6. '_S' → logprob: -18.375
    7. '_' → logprob: -19.125
    8. '`' → logprob: -19.5
    9. '  ' → logprob: -19.625
    10. '           ' → logprob: -19.75

Token 305: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -3.8889261304575484e-06
    2. '[' → logprob: -12.750003814697266
    3. '```' → logprob: -14.500003814697266
    4. ' [' → logprob: -16.125003814697266
    5. 'x' → logprob: -16.125003814697266
    6. '(x' → logprob: -16.500003814697266
    7. '=' → logprob: -18.125003814697266
    8. '[
' → logprob: -18.250003814697266
    9. '   ' → logprob: -18.375003814697266
    10. '][' → logprob: -18.500003814697266

Token 306: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10081535577774048
    2. ']=' → logprob: -2.3508152961730957
    3. ']' → logprob: -7.475815296173096
    4. ']+=' → logprob: -10.600815773010254
    5. ' =' → logprob: -11.725815773010254
    6. ')=' → logprob: -12.225815773010254
    7. '=True' → logprob: -13.600815773010254
    8. '+=' → logprob: -13.850815773010254
    9. '']=' → logprob: -13.975815773010254
    10. '}=' → logprob: -14.600815773010254

Token 307: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.87500286102295
    3. 'cost' → logprob: -14.87500286102295
    4. '   ' → logprob: -16.375003814697266
    5. '  ' → logprob: -19.000003814697266
    6. 'True' → logprob: -19.625003814697266
    7. '
' → logprob: -19.750003814697266
    8. '0' → logprob: -19.875003814697266
    9. '    ' → logprob: -20.000003814697266
    10. '

' → logprob: -20.250003814697266

Token 308: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5688599944114685
    2. '<|end|>' → logprob: -1.0688600540161133
    3. '
' → logprob: -2.4438600540161133
    4. '       ' → logprob: -6.443860054016113
    5. '<|end|>' → logprob: -7.318860054016113
    6. '   ' → logprob: -8.193860054016113
    7. '            
' → logprob: -8.318860054016113
    8. '               ' → logprob: -8.818860054016113
    9. ' 
' → logprob: -9.318860054016113
    10. '          ' → logprob: -9.693860054016113

Token 309: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9142334461212158
    2. ' for' → logprob: -1.4142334461212158
    3. 'for' → logprob: -1.6642334461212158
    4. '           ' → logprob: -2.664233446121216
    5. '
' → logprob: -3.039233446121216
    6. '       ' → logprob: -3.539233446121216
    7. '<|end|>' → logprob: -4.039233207702637
    8. '    
' → logprob: -7.289233207702637
    9. '```' → logprob: -7.914233207702637
    10. ',' → logprob: -8.289233207702637

Token 310: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0002273774443892762
    2. '   ' → logprob: -8.500226974487305
    3. ' for' → logprob: -10.875226974487305
    4. '           ' → logprob: -13.125226974487305
    5. '       ' → logprob: -14.000226974487305
    6. '
' → logprob: -14.375226974487305
    7. 'heap' → logprob: -14.500226974487305
    8. 'if' → logprob: -15.375226974487305
    9. '    
' → logprob: -15.375226974487305
    10. '	for' → logprob: -16.125226974487305

Token 311: ' to' (ID: 316)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -1.3479721546173096
    2. 'c' → logprob: -1.5979721546173096
    3. 'y' → logprob: -2.4729721546173096
    4. 'i' → logprob: -2.4729721546173096
    5. ' z' → logprob: -3.5979721546173096
    6. ' c' → logprob: -3.7229721546173096
    7. 'ny' → logprob: -3.7229721546173096
    8. 'u' → logprob: -3.7229721546173096
    9. ' y' → logprob: -3.8479721546173096
    10. 'yy' → logprob: -3.8479721546173096

Token 312: ' in' (ID: 306)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -1.0302854776382446
    2. ' in' → logprob: -1.2802854776382446
    3. '_z' → logprob: -1.2802854776382446
    4. '_cost' → logprob: -3.280285358428955
    5. 'in' → logprob: -3.780285358428955
    6. '_cs' → logprob: -5.030285358428955
    7. 'cost' → logprob: -5.155285358428955
    8. 'CS' → logprob: -5.655285358428955
    9. '_' → logprob: -6.280285358428955
    10. 'cs' → logprob: -6.780285358428955

Token 313: ' CS' (ID: 15903)
  Prédit: 'CS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CS' → logprob: -0.005938636604696512
    2. 'CC' → logprob: -5.130938529968262
    3. ' CS' → logprob: -11.880938529968262
    4. 'S' → logprob: -14.255938529968262
    5. 'C' → logprob: -14.505938529968262
    6. 'Y' → logprob: -14.880938529968262
    7. '   ' → logprob: -15.130938529968262
    8. 'range' → logprob: -15.380938529968262
    9. '_CS' → logprob: -15.380938529968262
    10. 'SC' → logprob: -15.630938529968262

Token 314: '_S' (ID: 1875)
  Prédit: '_S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_S' → logprob: -0.0005300374468788505
    2. '_CL' → logprob: -8.125530242919922
    3. '_SL' → logprob: -8.375530242919922
    4. '_CS' → logprob: -13.625530242919922
    5. '_SPL' → logprob: -13.625530242919922
    6. '_SC' → logprob: -15.000530242919922
    7. '_s' → logprob: -15.250530242919922
    8. '_C' → logprob: -16.250530242919922
    9. '_SP' → logprob: -16.625530242919922
    10. '   ' → logprob: -16.750530242919922

Token 315: 'LIST' (ID: 44615)
  Prédit: 'LIST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LIST' → logprob: -5.073596548754722e-05
    2. 'SL' → logprob: -10.62505054473877
    3. 'IST' → logprob: -10.75005054473877
    4. '_LIST' → logprob: -13.62505054473877
    5. 'S' → logprob: -14.00005054473877
    6. 'L' → logprob: -14.12505054473877
    7. 'CL' → logprob: -14.25005054473877
    8. 'list' → logprob: -15.00005054473877
    9. 'ST' → logprob: -15.12505054473877
    10. 'LL' → logprob: -15.25005054473877

Token 316: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.1517960956552997e-05
    2. 'x' → logprob: -12.375011444091797
    3. '[y' → logprob: -13.000011444091797
    4. '[' → logprob: -13.375011444091797
    5. ' [' → logprob: -13.750011444091797
    6. '```' → logprob: -14.000011444091797
    7. '   ' → logprob: -14.375011444091797
    8. '[z' → logprob: -15.125011444091797
    9. '[
' → logprob: -16.125011444091797
    10. '<x' → logprob: -16.750011444091797

Token 317: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.34877175092697144
    2. ']:
' → logprob: -1.2237718105316162
    3. ']' → logprob: -9.223772048950195
    4. ']:
' → logprob: -9.223772048950195
    5. ']:

' → logprob: -10.223772048950195
    6. ':' → logprob: -10.598772048950195
    7. '       ' → logprob: -10.598772048950195
    8. '   ' → logprob: -11.348772048950195
    9. ' ]' → logprob: -11.723772048950195
    10. '           ' → logprob: -12.098772048950195

Token 318: '               ' (ID: 506)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.36661189794540405
    2. '               ' → logprob: -1.8666119575500488
    3. '           ' → logprob: -1.9916119575500488
    4. 'for' → logprob: -5.116611957550049
    5. 'heap' → logprob: -5.741611957550049
    6. '       ' → logprob: -6.241611957550049
    7. 'USE' → logprob: -6.366611957550049
    8. '   ' → logprob: -6.366611957550049
    9. 'CS' → logprob: -7.366611957550049
    10. ' if' → logprob: -8.49161148071289

Token 319: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.22900402545928955
    2. 'heap' → logprob: -2.35400390625
    3. '   ' → logprob: -2.47900390625
    4. 'idx' → logprob: -3.97900390625
    5. 'for' → logprob: -6.10400390625
    6. 'cost' → logprob: -6.60400390625
    7. '           ' → logprob: -6.60400390625
    8. '       ' → logprob: -7.72900390625
    9. 'cs' → logprob: -8.10400390625
    10. 'index' → logprob: -8.22900390625

Token 320: ' MIN' (ID: 27151)
  Prédit: 'MIN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MIN' → logprob: -0.016743488609790802
    2. 'USES' → logprob: -4.6417436599731445
    3. ' MIN' → logprob: -6.2667436599731445
    4. 'cost' → logprob: -6.2667436599731445
    5. 'USE' → logprob: -6.6417436599731445
    6. '   ' → logprob: -7.5167436599731445
    7. 'min' → logprob: -7.5167436599731445
    8. 'not' → logprob: -8.391743659973145
    9. 'to' → logprob: -8.641743659973145
    10. ' USE' → logprob: -9.891743659973145

Token 321: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.0206720617134124e-05
    2. 'cost' → logprob: -12.37501049041748
    3. '_COST' → logprob: -12.37501049041748
    4. '
' → logprob: -14.87501049041748
    5. '_cost' → logprob: -14.87501049041748
    6. '   ' → logprob: -15.62501049041748
    7. '[' → logprob: -15.62501049041748
    8. 'c' → logprob: -16.375009536743164
    9. '_C' → logprob: -16.375009536743164
    10. '```' → logprob: -16.500009536743164

Token 322: 'OST' (ID: 7689)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0003253335307817906
    2. 'OST' → logprob: -8.500325202941895
    3. '_COST' → logprob: -9.625325202941895
    4. 'cost' → logprob: -10.125325202941895
    5. '
' → logprob: -12.875325202941895
    6. 'OC' → logprob: -13.000325202941895
    7. ' COST' → logprob: -13.000325202941895
    8. '_cost' → logprob: -13.125325202941895
    9. 'O' → logprob: -13.250325202941895
    10. '```' → logprob: -14.125325202941895

Token 323: '_CS' (ID: 91377)
  Prédit: '_CS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CS' → logprob: -0.0003790760529227555
    2. 'CS' → logprob: -8.000378608703613
    3. '_C' → logprob: -11.125378608703613
    4. '[' → logprob: -11.500378608703613
    5. '   ' → logprob: -12.000378608703613
    6. ' CS' → logprob: -12.000378608703613
    7. '-CS' → logprob: -13.500378608703613
    8. '_cs' → logprob: -13.625378608703613
    9. '           ' → logprob: -14.250378608703613
    10. 'cs' → logprob: -14.500378608703613

Token 324: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -1.1398757123970427e-05
    2. '[' → logprob: -11.875011444091797
    3. 'to' → logprob: -13.250011444091797
    4. '>' → logprob: -13.500011444091797
    5. '[min' → logprob: -14.250011444091797
    6. ' [' → logprob: -15.875011444091797
    7. '[from' → logprob: -16.125011444091797
    8. '>[' → logprob: -16.625011444091797
    9. '[temp' → logprob: -17.000011444091797
    10. '[now' → logprob: -17.125011444091797

Token 325: ']>' (ID: 54651)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2420780509710312
    2. ']>' → logprob: -1.7420780658721924
    3. ']' → logprob: -3.2420780658721924
    4. ' >' → logprob: -7.617077827453613
    5. '>[' → logprob: -9.117077827453613
    6. '[' → logprob: -9.742077827453613
    7. ']==' → logprob: -9.867077827453613
    8. ' ]' → logprob: -10.992077827453613
    9. '][' → logprob: -11.617077827453613
    10. '>]' → logprob: -11.867077827453613

Token 326: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0019402962643653154
    2. 'MIN' → logprob: -6.8769402503967285
    3. '0' → logprob: -7.5019402503967285
    4. ' cost' → logprob: -8.751940727233887
    5. '   ' → logprob: -9.126940727233887
    6. '(cost' → logprob: -11.001940727233887
    7. 'cs' → logprob: -11.501940727233887
    8. 'min' → logprob: -11.501940727233887
    9. 'S' → logprob: -11.626940727233887
    10. 'M' → logprob: -12.001940727233887

Token 327: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.020153967663645744
    2. ' +' → logprob: -4.520153999328613
    3. ':' → logprob: -5.895153999328613
    4. '+c' → logprob: -6.020153999328613
    5. ':
' → logprob: -6.395153999328613
    6. '=' → logprob: -6.645153999328613
    7. ' and' → logprob: -8.770153999328613
    8. '+C' → logprob: -9.020153999328613
    9. '   ' → logprob: -9.520153999328613
    10. ' =' → logprob: -10.020153999328613

Token 328: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6845042705535889
    2. 'T' → logprob: -1.4345042705535889
    3. 'Y' → logprob: -2.559504270553589
    4. '0' → logprob: -2.684504270553589
    5. 'CS' → logprob: -3.059504270553589
    6. 'Z' → logprob: -3.184504270553589
    7. 'X' → logprob: -4.934504508972168
    8. 'C' → logprob: -5.059504508972168
    9. 'CC' → logprob: -5.684504508972168
    10. 'S' → logprob: -6.184504508972168

Token 329: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11321146041154861
    2. ':
' → logprob: -2.2382113933563232
    3. '               ' → logprob: -9.863211631774902
    4. '=' → logprob: -9.863211631774902
    5. ':

' → logprob: -9.988211631774902
    6. '<|end|>' → logprob: -10.113211631774902
    7. '):' → logprob: -10.238211631774902
    8. ' and' → logprob: -10.613211631774902
    9. '):
' → logprob: -11.113211631774902
    10. ' :
' → logprob: -11.113211631774902

Token 330: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.24301806092262268
    2. '               ' → logprob: -1.6180180311203003
    3. '<|end|>' → logprob: -4.61801815032959
    4. '                       ' → logprob: -5.99301815032959
    5. '           ' → logprob: -6.24301815032959
    6. '<|end|>' → logprob: -7.11801815032959
    7. '                           ' → logprob: -8.24301815032959
    8. '   ' → logprob: -8.36801815032959
    9. '                    
' → logprob: -8.49301815032959
    10. ':
' → logprob: -8.61801815032959

Token 331: ' MIN' (ID: 27151)
  Prédit: 'MIN'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MIN' (adapté à ' MIN') → logprob: -0.028565574437379837
    2. '                   ' → logprob: -3.7785656452178955
    3. '                       ' → logprob: -6.028565406799316
    4. 'heap' → logprob: -6.653565406799316
    5. ' MIN' → logprob: -7.278565406799316
    6. '               ' → logprob: -7.528565406799316
    7. '   ' → logprob: -9.403565406799316
    8. '_MIN' → logprob: -9.778565406799316
    9. '                           ' → logprob: -10.153565406799316
    10. '           ' → logprob: -10.403565406799316

Token 332: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -2.534558552724775e-05
    2. '_COST' → logprob: -11.375025749206543
    3. 'cost' → logprob: -12.375025749206543
    4. '
' → logprob: -13.250025749206543
    5. '=' → logprob: -13.375025749206543
    6. 'COS' → logprob: -13.875025749206543
    7. 'OST' → logprob: -14.000025749206543
    8. 'OC' → logprob: -14.625025749206543
    9. '=C' → logprob: -14.750025749206543
    10. '_cost' → logprob: -14.750025749206543

Token 333: 'OST' (ID: 7689)
  Prédit: 'OST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OST' → logprob: -0.12706680595874786
    2. 'C' → logprob: -2.1270668506622314
    3. 'O' → logprob: -9.002066612243652
    4. 'ST' → logprob: -11.752066612243652
    5. '_COST' → logprob: -12.377066612243652
    6. 'T' → logprob: -13.877066612243652
    7. ' COST' → logprob: -14.627066612243652
    8. 'OC' → logprob: -14.752066612243652
    9. 'cost' → logprob: -15.002066612243652
    10. '
' → logprob: -15.752066612243652

Token 334: '_CS' (ID: 91377)
  Prédit: '_CS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CS' → logprob: -2.8444881536415778e-05
    2. 'CS' → logprob: -10.500028610229492
    3. '_C' → logprob: -14.750028610229492
    4. ' CS' → logprob: -15.750028610229492
    5. '_cs' → logprob: -16.375028610229492
    6. '```' → logprob: -16.625028610229492
    7. '-CS' → logprob: -17.375028610229492
    8. '_COST' → logprob: -18.125028610229492
    9. '_CC' → logprob: -18.625028610229492
    10. '	cs' → logprob: -19.125028610229492

Token 335: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -1.2664456789934775e-06
    2. 'to' → logprob: -14.000000953674316
    3. '[' → logprob: -15.250000953674316
    4. '=' → logprob: -17.125001907348633
    5. '(to' → logprob: -17.375001907348633
    6. '[
' → logprob: -17.500001907348633
    7. '
' → logprob: -17.500001907348633
    8. ' [' → logprob: -17.625001907348633
    9. '```' → logprob: -18.750001907348633
    10. '[token' → logprob: -19.125001907348633

Token 336: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004681576509028673
    2. ']=' → logprob: -5.504681587219238
    3. ' =' → logprob: -7.504681587219238
    4. ']' → logprob: -10.754681587219238
    5. '=
' → logprob: -11.504681587219238
    6. ')=' → logprob: -12.254681587219238
    7. '=cut' → logprob: -12.254681587219238
    8. '=c' → logprob: -12.629681587219238
    9. '=

' → logprob: -13.504681587219238
    10. '=len' → logprob: -13.879681587219238

Token 337: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -2.7610454708337784e-05
    2. ' cost' → logprob: -10.500027656555176
    3. '(cost' → logprob: -18.75002670288086
    4. '   ' → logprob: -22.12502670288086
    5. '_cost' → logprob: -22.50002670288086
    6. '
' → logprob: -22.87502670288086
    7. '1' → logprob: -23.12502670288086
    8. 'color' → logprob: -23.12502670288086
    9. 'code' → logprob: -24.00002670288086
    10. '.cost' → logprob: -24.12502670288086

Token 338: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.7697225252486533e-06
    2. ' +' → logprob: -12.500003814697266
    3. '+
' → logprob: -18.000003814697266
    4. '+[' → logprob: -19.625003814697266
    5. '
' → logprob: -19.750003814697266
    6. '[' → logprob: -19.875003814697266
    7. '+c' → logprob: -20.000003814697266
    8. '+i' → logprob: -20.625003814697266
    9. '+x' → logprob: -20.750003814697266
    10. ')+' → logprob: -20.750003814697266

Token 339: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -17.250001907348633
    4. '
' → logprob: -18.250001907348633
    5. '   ' → logprob: -18.875001907348633
    6. '2' → logprob: -20.125001907348633
    7. '+' → logprob: -20.625001907348633
    8. '0' → logprob: -21.125001907348633
    9. '１' → logprob: -21.250001907348633
    10. '[' → logprob: -21.312501907348633

Token 340: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001013876055367291
    2. 'heap' → logprob: -7.00101375579834
    3. '               ' → logprob: -10.62601375579834
    4. '				' → logprob: -10.75101375579834
    5. ' heap' → logprob: -11.37601375579834
    6. '                    
' → logprob: -11.62601375579834
    7. '           ' → logprob: -11.62601375579834
    8. '                       ' → logprob: -11.75101375579834
    9. ',' → logprob: -12.37601375579834
    10. '
' → logprob: -13.00101375579834

Token 341: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04882331192493439
    2. 'heap' → logprob: -3.048823356628418
    3. ' heap' → logprob: -9.548823356628418
    4. '               ' → logprob: -9.548823356628418
    5. '           ' → logprob: -10.673823356628418
    6. '                       ' → logprob: -10.923823356628418
    7. '```' → logprob: -11.298823356628418
    8. '(heap' → logprob: -11.923823356628418
    9. '                    
' → logprob: -12.048823356628418
    10. ',' → logprob: -12.298823356628418

Token 342: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -6.034592388459714e-06
    2. ' heap' → logprob: -12.375005722045898
    3. '   ' → logprob: -14.000005722045898
    4. 'he' → logprob: -14.250005722045898
    5. '```' → logprob: -15.000005722045898
    6. 'import' → logprob: -17.1250057220459
    7. '
' → logprob: -17.1250057220459
    8. '(heap' → logprob: -17.8750057220459
    9. '                   ' → logprob: -18.1250057220459
    10. '``' → logprob: -18.8750057220459

Token 343: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.128163257315464e-07
    2. 'p' → logprob: -15.75
    3. '```' → logprob: -17.0
    4. 'push' → logprob: -17.625
    5. 'app' → logprob: -18.25
    6. 'he' → logprob: -18.625
    7. '.he' → logprob: -19.0
    8. '.push' → logprob: -19.125
    9. 'qe' → logprob: -19.375
    10. 'h' → logprob: -19.5

Token 344: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -6.20603168499656e-05
    2. 'he' → logprob: -9.875061988830566
    3. '.push' → logprob: -12.000061988830566
    4. '.heap' → logprob: -13.500061988830566
    5. 'push' → logprob: -14.125061988830566
    6. ' he' → logprob: -14.125061988830566
    7. 'q' → logprob: -14.375061988830566
    8. '.' → logprob: -15.000061988830566
    9. '```' → logprob: -15.375061988830566
    10. '_he' → logprob: -16.500062942504883

Token 345: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.06203748658299446
    2. 'pp' → logprob: -2.812037467956543
    3. 'p' → logprob: -10.312037467956543
    4. 'q' → logprob: -11.187037467956543
    5. 'ap' → logprob: -11.437037467956543
    6. 'push' → logprob: -11.687037467956543
    7. '```' → logprob: -13.312037467956543
    8. 'qp' → logprob: -14.312037467956543
    9. 'op' → logprob: -15.187037467956543
    10. '[' → logprob: -15.812037467956543

Token 346: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.02709120139479637
    2. 'op' → logprob: -3.6520912647247314
    3. 'p' → logprob: -7.402091026306152
    4. 'app' → logprob: -9.777091026306152
    5. 'pp' → logprob: -10.152091026306152
    6. 'push' → logprob: -10.402091026306152
    7. 'q' → logprob: -10.902091026306152
    8. '```' → logprob: -11.152091026306152
    9. 'sh' → logprob: -11.277091026306152
    10. 'ap' → logprob: -12.652091026306152

Token 347: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -15.625
    3. '((' → logprob: -19.5
    4. '(
' → logprob: -19.875
    5. 'Q' → logprob: -20.875
    6. ',Q' → logprob: -21.125
    7. '<Q' → logprob: -22.375
    8. '```' → logprob: -22.5
    9. ' (' → logprob: -22.75
    10. '	Q' → logprob: -23.375

Token 348: ',[' (ID: 35502)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([' → logprob: -0.0005894906935282052
    2. '(' → logprob: -7.500589370727539
    3. '((' → logprob: -10.375589370727539
    4. '(cost' → logprob: -12.500589370727539
    5. '[' → logprob: -14.375589370727539
    6. '([-' → logprob: -14.625589370727539
    7. '(([' → logprob: -15.625589370727539
    8. ' ([' → logprob: -16.25058937072754
    9. '([[' → logprob: -16.62558937072754
    10. ',' → logprob: -16.62558937072754

Token 349: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.002554615493863821
    2. 'MIN' → logprob: -6.002554416656494
    3. ' cost' → logprob: -9.752554893493652
    4. '   ' → logprob: -11.127554893493652
    5. '(cost' → logprob: -12.752554893493652
    6. '
' → logprob: -13.752554893493652
    7. ' MIN' → logprob: -14.252554893493652
    8. '                   ' → logprob: -14.377554893493652
    9. '  ' → logprob: -15.877554893493652
    10. '    ' → logprob: -16.002553939819336

Token 350: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -8.554343366995454e-05
    2. ' +' → logprob: -9.375085830688477
    3. '[' → logprob: -16.000085830688477
    4. '＋' → logprob: -16.125085830688477
    5. '+
' → logprob: -16.250085830688477
    6. '1' → logprob: -16.625085830688477
    7. '   ' → logprob: -16.750085830688477
    8. ']+' → logprob: -17.000085830688477
    9. '+[' → logprob: -17.250085830688477
    10. ' ' → logprob: -17.500085830688477

Token 351: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.500011444091797
    3. '
' → logprob: -14.250011444091797
    4. '   ' → logprob: -15.125011444091797
    5. '```' → logprob: -15.500011444091797
    6. '2' → logprob: -16.375011444091797
    7. '0' → logprob: -16.750011444091797
    8. ',' → logprob: -17.750011444091797
    9. '                   ' → logprob: -18.625011444091797
    10. '``' → logprob: -18.625011444091797

Token 352: ']+' (ID: 15344)
  Prédit: ',to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',to' → logprob: -0.0011876109056174755
    2. ',' → logprob: -6.751187801361084
    3. 'to' → logprob: -11.251187324523926
    4. ' ,' → logprob: -12.501187324523926
    5. ',
' → logprob: -15.001187324523926
    6. '(to' → logprob: -16.251188278198242
    7. '[to' → logprob: -16.876188278198242
    8. ',t' → logprob: -17.751188278198242
    9. ',the' → logprob: -17.876188278198242
    10. ',target' → logprob: -18.001188278198242

Token 353: 'CS' (ID: 9310)
  Prédit: 'CS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CS' → logprob: -0.3869476318359375
    2. '[' → logprob: -1.1369476318359375
    3. '[C' → logprob: -9.886947631835938
    4. ' CS' → logprob: -11.261947631835938
    5. ' [' → logprob: -11.761947631835938
    6. '0' → logprob: -13.261947631835938
    7. '_CS' → logprob: -14.261947631835938
    8. '[to' → logprob: -14.761947631835938
    9. '[
' → logprob: -15.011947631835938
    10. 'Cs' → logprob: -15.136947631835938

Token 354: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -4.008129963040119e-06
    2. '[' → logprob: -13.000003814697266
    3. 'to' → logprob: -14.125003814697266
    4. '[token' → logprob: -14.625003814697266
    5. '(to' → logprob: -16.000003814697266
    6. '[from' → logprob: -16.875003814697266
    7. '[top' → logprob: -16.875003814697266
    8. '[next' → logprob: -17.250003814697266
    9. ' [' → logprob: -17.375003814697266
    10. 'CS' → logprob: -18.000003814697266

Token 355: '])

' (ID: 21045)
  Prédit: '[to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.08043874800205231
    2. '])' → logprob: -2.5804388523101807
    3. '[' → logprob: -7.205438613891602
    4. ')' → logprob: -7.330438613891602
    5. '[next' → logprob: -10.330438613891602
    6. '[token' → logprob: -10.580438613891602
    7. 'to' → logprob: -10.830438613891602
    8. '[from' → logprob: -11.205438613891602
    9. '[top' → logprob: -11.330438613891602
    10. '[now' → logprob: -11.955438613891602

Token 356: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4818313717842102
    2. '   ' → logprob: -1.4818313121795654
    3. '       ' → logprob: -2.2318313121795654
    4. 'for' → logprob: -4.2318315505981445
    5. ' for' → logprob: -4.9818315505981445
    6. '```' → logprob: -5.4818315505981445
    7. '                   ' → logprob: -5.6068315505981445
    8. '               ' → logprob: -5.6068315505981445
    9. '
' → logprob: -5.6068315505981445
    10. '<|end|>' → logprob: -6.2318315505981445

Token 357: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6323385834693909
    2. 'for' → logprob: -1.632338523864746
    3. 'if' (adapté à ' if') → logprob: -1.632338523864746
    4. ' if' → logprob: -3.507338523864746
    5. ' for' → logprob: -3.632338523864746
    6. '       ' → logprob: -4.757338523864746
    7. '```' → logprob: -5.007338523864746
    8. '
' → logprob: -6.007338523864746
    9. '           ' → logprob: -6.007338523864746
    10. ' ' → logprob: -8.257338523864746

Token 358: ' USE' (ID: 20180)
  Prédit: 'USE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'USE' → logprob: -0.039775848388671875
    2. ' USE' → logprob: -3.414775848388672
    3. 'USES' → logprob: -5.164775848388672
    4. 'UES' → logprob: -9.664775848388672
    5. 'US' → logprob: -9.789775848388672
    6. 'U' → logprob: -9.914775848388672
    7. ' ' → logprob: -10.164775848388672
    8. 'USED' → logprob: -10.727275848388672
    9. 'use' → logprob: -10.789775848388672
    10. '   ' → logprob: -11.164775848388672

Token 359: 'C' (ID: 34)
  Prédit: 'U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.07275903224945068
    2. 'S' → logprob: -3.1977591514587402
    3. 'C' → logprob: -3.5727591514587402
    4. '[y' → logprob: -7.82275915145874
    5. '[x' → logprob: -7.82275915145874
    6. 'Y' → logprob: -8.197758674621582
    7. '```' → logprob: -10.197758674621582
    8. 'y' → logprob: -10.322758674621582
    9. 'T' → logprob: -10.572758674621582
    10. ' U' → logprob: -10.947758674621582

Token 360: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.0011392654851078987
    2. '[c' → logprob: -7.001139163970947
    3. '[x' → logprob: -8.751139640808105
    4. '[C' → logprob: -10.126139640808105
    5. '[' → logprob: -11.251139640808105
    6. 'C' → logprob: -12.001139640808105
    7. '==' → logprob: -13.001139640808105
    8. '[z' → logprob: -13.126139640808105
    9. 'c' → logprob: -13.626139640808105
    10. '[u' → logprob: -13.876139640808105

Token 361: ']==' (ID: 34128)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2015020251274109
    2. ']==' → logprob: -1.7015020847320557
    3. '']==' → logprob: -10.201501846313477
    4. ' ==' → logprob: -11.201501846313477
    5. '[' → logprob: -11.451501846313477
    6. ')==' → logprob: -11.576501846313477
    7. '==
' → logprob: -11.826501846313477
    8. '```' → logprob: -12.576501846313477
    9. '()==' → logprob: -13.076501846313477
    10. '=' → logprob: -13.076501846313477

Token 362: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008816058747470379
    2. ' ' → logprob: -5.258816242218018
    3. '1' → logprob: -5.633816242218018
    4. '   ' → logprob: -15.13381576538086
    5. '```' → logprob: -15.13381576538086
    6. '
' → logprob: -16.00881576538086
    7. '(' → logprob: -16.50881576538086
    8. '  ' → logprob: -16.75881576538086
    9. '<|end|>' → logprob: -18.00881576538086
    10. '=' → logprob: -18.00881576538086

Token 363: ':
' (ID: 734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -4.842555426876061e-06
    2. '==' → logprob: -13.625004768371582
    3. '=True' → logprob: -13.625004768371582
    4. ' =' → logprob: -14.125004768371582
    5. '=
' → logprob: -14.125004768371582
    6. ':
' → logprob: -14.875004768371582
    7. '           ' → logprob: -14.875004768371582
    8. '   ' → logprob: -16.6250057220459
    9. '```' → logprob: -17.1250057220459
    10. ':=' → logprob: -17.2500057220459

Token 364: '           ' (ID: 352)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.014718770980835
    2. '1' → logprob: -1.264718770980835
    3. '           ' → logprob: -1.889718770980835
    4. '```' → logprob: -2.264718770980835
    5. ' ' → logprob: -3.389718770980835
    6. '       ' → logprob: -3.639718770980835
    7. '   ' → logprob: -3.764718770980835
    8. '0' → logprob: -4.889719009399414
    9. ' USE' → logprob: -6.389719009399414
    10. '[' → logprob: -6.764719009399414

Token 365: ' USE' (ID: 20180)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01601336896419525
    2. 'USE' (adapté à ' USE') → logprob: -4.766013145446777
    3. ' ' → logprob: -5.266013145446777
    4. ' USE' → logprob: -6.141013145446777
    5. 'Use' → logprob: -10.766013145446777
    6. '   ' → logprob: -11.641013145446777
    7. '```' → logprob: -11.766013145446777
    8. 'USES' → logprob: -11.891013145446777
    9. '_USE' → logprob: -13.266013145446777
    10. '           ' → logprob: -13.766013145446777

Token 366: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -8.895480277715251e-06
    2. '=' → logprob: -12.750008583068848
    3. 'USE' → logprob: -12.750008583068848
    4. '[' → logprob: -14.625008583068848
    5. ' C' → logprob: -14.625008583068848
    6. 'c' → logprob: -14.625008583068848
    7. '   ' → logprob: -15.500008583068848
    8. '           ' → logprob: -15.625008583068848
    9. '=C' → logprob: -15.625008583068848
    10. 'CS' → logprob: -15.750008583068848

Token 367: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -4.246537173457909e-06
    2. '=y' → logprob: -12.750003814697266
    3. '=' → logprob: -14.125003814697266
    4. '=[' → logprob: -15.125003814697266
    5. '[' → logprob: -15.875003814697266
    6. '[x' → logprob: -17.000003814697266
    7. ' [' → logprob: -17.000003814697266
    8. '[Y' → logprob: -17.000003814697266
    9. '```' → logprob: -18.000003814697266
    10. 'y' → logprob: -18.000003814697266

Token 368: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.259079363080673e-05
    2. '=y' → logprob: -11.750012397766113
    3. ']=' → logprob: -13.125012397766113
    4. '[y' → logprob: -13.125012397766113
    5. '+=' → logprob: -15.500012397766113
    6. '[' → logprob: -16.00001335144043
    7. '```' → logprob: -16.25001335144043
    8. '==' → logprob: -16.50001335144043
    9. '=
' → logprob: -16.62501335144043
    10. '1' → logprob: -16.75001335144043

Token 369: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -17.125003814697266
    4. '   ' → logprob: -17.750003814697266
    5. '
' → logprob: -18.000003814697266
    6. '=' → logprob: -18.375003814697266
    7. '[' → logprob: -18.750003814697266
    8. '0' → logprob: -19.000003814697266
    9. '<|end|>' → logprob: -19.375003814697266
    10. '>' → logprob: -19.625003814697266

Token 370: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005010905675590038
    2. '       ' → logprob: -6.630011081695557
    3. '<|end|>' → logprob: -6.755011081695557
    4. ' for' → logprob: -7.255011081695557
    5. '               ' → logprob: -7.630011081695557
    6. '   ' → logprob: -8.005010604858398
    7. '
' → logprob: -8.005010604858398
    8. 'for' → logprob: -8.630010604858398
    9. '          ' → logprob: -9.005010604858398
    10. '            
' → logprob: -9.630010604858398

Token 371: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06995344161987305
    2. 'for' → logprob: -3.319953441619873
    3. '```' → logprob: -3.694953441619873
    4. '       ' → logprob: -5.694953441619873
    5. '   ' → logprob: -6.569953441619873
    6. ' for' → logprob: -6.569953441619873
    7. '               ' → logprob: -8.444953918457031
    8. '<|end|>' → logprob: -9.819953918457031
    9. '
' → logprob: -10.569953918457031
    10. '``' → logprob: -10.944953918457031

Token 372: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0018625955563038588
    2. ' for' → logprob: -6.751862525939941
    3. '           ' → logprob: -7.376862525939941
    4. '   ' → logprob: -10.251862525939941
    5. '       ' → logprob: -11.251862525939941
    6. '               ' → logprob: -11.376862525939941
    7. '	for' → logprob: -12.251862525939941
    8. '```' → logprob: -13.376862525939941
    9. ' ' → logprob: -15.126862525939941
    10. '
' → logprob: -16.751863479614258

Token 373: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.005944563075900078
    2. ' to' → logprob: -5.130944728851318
    3. 'cc' → logprob: -12.50594425201416
    4. 'z' → logprob: -13.25594425201416
    5. 'u' → logprob: -13.75594425201416
    6. 't' → logprob: -13.88094425201416
    7. '   ' → logprob: -14.00594425201416
    8. ' ' → logprob: -14.25594425201416
    9. ' z' → logprob: -14.50594425201416
    10. 'for' → logprob: -14.63094425201416

Token 374: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47411492466926575
    2. 'in' → logprob: -0.9741148948669434
    3. '   ' → logprob: -11.099115371704102
    4. ' ' → logprob: -11.724115371704102
    5. '  ' → logprob: -12.474115371704102
    6. '	in' → logprob: -13.224115371704102
    7. 'to' → logprob: -13.349115371704102
    8. '_in' → logprob: -14.349115371704102
    9. 'import' → logprob: -14.536615371704102
    10. '```' → logprob: -14.599115371704102

Token 375: ' CS' (ID: 15903)
  Prédit: 'CC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CC' → logprob: -0.5249501466751099
    2. 'CS' → logprob: -0.8999501466751099
    3. ' CC' → logprob: -6.64995002746582
    4. ' CS' → logprob: -7.64995002746582
    5. 'range' → logprob: -10.52495002746582
    6. ' ' → logprob: -11.77495002746582
    7. '   ' → logprob: -11.89995002746582
    8. 'C' → logprob: -12.77495002746582
    9. ' range' → logprob: -12.77495002746582
    10. '	CC' → logprob: -13.02495002746582

Token 376: '_CL' (ID: 18374)
  Prédit: '_CL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CL' → logprob: -3.8889261304575484e-06
    2. 'CL' → logprob: -13.125003814697266
    3. '_C' → logprob: -14.000003814697266
    4. '_UL' → logprob: -14.750003814697266
    5. '   ' → logprob: -15.750003814697266
    6. '_S' → logprob: -16.125003814697266
    7. '```' → logprob: -16.625003814697266
    8. '[' → logprob: -16.750003814697266
    9. '_' → logprob: -17.375003814697266
    10. '_cl' → logprob: -17.750003814697266

Token 377: 'IST' (ID: 6258)
  Prédit: 'IST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IST' → logprob: -7.982165698194876e-05
    2. 'LIST' → logprob: -9.750080108642578
    3. 'ist' → logprob: -11.125080108642578
    4. 'ST' → logprob: -12.000080108642578
    5. '_LIST' → logprob: -15.500080108642578
    6. '_list' → logprob: -16.000080108642578
    7. 'ISTS' → logprob: -17.000080108642578
    8. '[y' → logprob: -17.250080108642578
    9. 'CL' → logprob: -17.375080108642578
    10. 'list' → logprob: -17.375080108642578

Token 378: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -4.537180211627856e-05
    2. '[z' → logprob: -10.500045776367188
    3. '[x' → logprob: -11.750045776367188
    4. '[' → logprob: -12.000045776367188
    5. 'y' → logprob: -13.000045776367188
    6. '[c' → logprob: -14.000045776367188
    7. '   ' → logprob: -15.000045776367188
    8. '[u' → logprob: -16.000045776367188
    9. '```' → logprob: -16.375045776367188
    10. '[
' → logprob: -16.750045776367188

Token 379: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5232362747192383
    2. ':
' → logprob: -0.8982362747192383
    3. ']:
' → logprob: -10.023236274719238
    4. ']:' → logprob: -10.523236274719238
    5. '[' → logprob: -11.773236274719238
    6. ']' → logprob: -12.023236274719238
    7. ':

' → logprob: -12.023236274719238
    8. '):
' → logprob: -12.273236274719238
    9. '               ' → logprob: -12.648236274719238
    10. '           ' → logprob: -12.898236274719238

Token 380: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0030749214347451925
    2. ':
' → logprob: -6.003075122833252
    3. ':' → logprob: -7.628075122833252
    4. ' if' → logprob: -10.378074645996094
    5. '<|end|>' → logprob: -10.503074645996094
    6. 'if' → logprob: -11.503074645996094
    7. '              ' → logprob: -11.628074645996094
    8. '[' → logprob: -11.628074645996094
    9. '```' → logprob: -12.128074645996094
    10. '):
' → logprob: -12.753074645996094

Token 381: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1824268400669098
    2. '               ' → logprob: -2.432426929473877
    3. ' if' → logprob: -2.557426929473877
    4. '[' → logprob: -7.432426929473877
    5. '                   ' → logprob: -7.682426929473877
    6. '```' → logprob: -8.932426452636719
    7. '           ' → logprob: -10.057426452636719
    8. 'heap' → logprob: -10.307426452636719
    9. '              ' → logprob: -10.432426452636719
    10. '<|end|>' → logprob: -10.807426452636719

Token 382: ' MIN' (ID: 27151)
  Prédit: 'MIN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MIN' → logprob: -0.10021573305130005
    2. ' MIN' → logprob: -2.3502156734466553
    3. 'min' → logprob: -12.725215911865234
    4. '   ' → logprob: -13.225215911865234
    5. 'M' → logprob: -13.600215911865234
    6. ' ' → logprob: -13.975215911865234
    7. 'USE' → logprob: -14.975215911865234
    8. '    ' → logprob: -15.225215911865234
    9. 'cost' → logprob: -15.225215911865234
    10. '  ' → logprob: -15.350215911865234

Token 383: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0013657122617587447
    2. 'cost' → logprob: -6.626365661621094
    3. '_COST' → logprob: -11.126365661621094
    4. 'OST' → logprob: -11.376365661621094
    5. '_cost' → logprob: -12.376365661621094
    6. 'OC' → logprob: -13.501365661621094
    7. 'c' → logprob: -13.626365661621094
    8. 'ost' → logprob: -13.626365661621094
    9. 'O' → logprob: -13.751365661621094
    10. ' COST' → logprob: -13.876365661621094

Token 384: 'OST' (ID: 7689)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.004886823706328869
    2. 'OST' → logprob: -5.379886627197266
    3. 'cost' → logprob: -8.379886627197266
    4. '_COST' → logprob: -11.504886627197266
    5. 'ost' → logprob: -11.629886627197266
    6. 'OC' → logprob: -12.379886627197266
    7. '   ' → logprob: -12.629886627197266
    8. 'O' → logprob: -13.004886627197266
    9. ' COST' → logprob: -13.129886627197266
    10. 'ST' → logprob: -13.129886627197266

Token 385: '_CS' (ID: 91377)
  Prédit: '_CS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CS' → logprob: -0.01476907916367054
    2. '_CC' → logprob: -4.264769077301025
    3. '_cs' → logprob: -8.014769554138184
    4. '[to' → logprob: -8.639769554138184
    5. '_C' → logprob: -10.139769554138184
    6. 'CS' → logprob: -10.764769554138184
    7. '_TO' → logprob: -11.764769554138184
    8. '[' → logprob: -11.764769554138184
    9. 'to' → logprob: -12.264769554138184
    10. '_SC' → logprob: -12.264769554138184

Token 386: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -1.0280383548888494e-06
    2. '>' → logprob: -14.125000953674316
    3. 'to' → logprob: -15.375000953674316
    4. '[from' → logprob: -18.625001907348633
    5. '(to' → logprob: -19.125001907348633
    6. '[
' → logprob: -19.625001907348633
    7. ' [' → logprob: -19.875001907348633
    8. '[' → logprob: -20.000001907348633
    9. '>[' → logprob: -20.000001907348633
    10. ' >' → logprob: -20.500001907348633

Token 387: ']>' (ID: 54651)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -7.703443770878948e-06
    2. ' >' → logprob: -11.875007629394531
    3. ']>' → logprob: -14.875007629394531
    4. '[' → logprob: -16.12500762939453
    5. '>
' → logprob: -16.75000762939453
    6. '   ' → logprob: -17.87500762939453
    7. ')>' → logprob: -18.50000762939453
    8. '
' → logprob: -18.50000762939453
    9. '">' → logprob: -18.62500762939453
    10. '>C' → logprob: -18.62500762939453

Token 388: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.00017970333283301443
    2. ' cost' → logprob: -8.625179290771484
    3. '(cost' → logprob: -16.000179290771484
    4. '```' → logprob: -17.500179290771484
    5. '   ' → logprob: -18.250179290771484
    6. '
' → logprob: -18.500179290771484
    7. 'code' → logprob: -19.125179290771484
    8. '1' → logprob: -19.500179290771484
    9. 'cur' → logprob: -20.125179290771484
    10. '0' → logprob: -20.250179290771484

Token 389: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.896309739408025e-07
    2. ' +' → logprob: -15.000000953674316
    3. '[' → logprob: -15.625000953674316
    4. '+
' → logprob: -16.5
    5. '+[' → logprob: -16.625
    6. '```' → logprob: -17.5
    7. '＋' → logprob: -18.5
    8. '+k' → logprob: -19.375
    9. '<|end|>' → logprob: -19.375
    10. ']+' → logprob: -19.5

Token 390: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.875003814697266
    3. '+' → logprob: -14.875003814697266
    4. 'cost' → logprob: -15.625003814697266
    5. '   ' → logprob: -15.875003814697266
    6. '```' → logprob: -16.125003814697266
    7. '2' → logprob: -18.125003814697266
    8. '...' → logprob: -18.375003814697266
    9. '[' → logprob: -18.375003814697266
    10. '0' → logprob: -18.562503814697266

Token 391: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7680324912071228
    2. ':
' → logprob: -0.8930324912071228
    3. ':' → logprob: -2.2680325508117676
    4. '=' → logprob: -4.143032550811768
    5. '                       ' → logprob: -6.018032550811768
    6. '<|end|>' → logprob: -6.018032550811768
    7. '               ' → logprob: -7.018032550811768
    8. '                  ' → logprob: -8.01803207397461
    9. '                    ' → logprob: -8.76803207397461
    10. ',' → logprob: -8.76803207397461

Token 392: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0036004253197461367
    2. '               ' → logprob: -6.128600597381592
    3. '                       ' → logprob: -7.003600597381592
    4. '                    ' → logprob: -9.128600120544434
    5. '                  ' → logprob: -9.253600120544434
    6. '```' → logprob: -9.378600120544434
    7. '<|end|>' → logprob: -9.503600120544434
    8. '           ' → logprob: -10.253600120544434
    9. '   ' → logprob: -10.378600120544434
    10. '                ' → logprob: -11.003600120544434

Token 393: ' MIN' (ID: 27151)
  Prédit: 'MIN'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MIN' (adapté à ' MIN') → logprob: -7.5649528298527e-05
    2. ' MIN' → logprob: -9.750075340270996
    3. '                   ' → logprob: -11.125075340270996
    4. '```' → logprob: -14.125075340270996
    5. '_MIN' → logprob: -14.500075340270996
    6. 'MID' → logprob: -14.875075340270996
    7. '               ' → logprob: -16.000076293945312
    8. '   ' → logprob: -16.125076293945312
    9. '           ' → logprob: -16.250076293945312
    10. '<|end|>' → logprob: -16.500076293945312

Token 394: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0004360334132798016
    2. 'cost' → logprob: -8.750435829162598
    3. '_COST' → logprob: -8.875435829162598
    4. '_cost' → logprob: -9.875435829162598
    5. 'OST' → logprob: -10.125435829162598
    6. 'O' → logprob: -11.000435829162598
    7. 'OC' → logprob: -12.000435829162598
    8. '
' → logprob: -12.375435829162598
    9. '_' → logprob: -12.750435829162598
    10. ' COST' → logprob: -13.125435829162598

Token 395: 'OST' (ID: 7689)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.7366816401481628
    2. 'OST' → logprob: -0.7366816401481628
    3. '_COST' → logprob: -3.7366816997528076
    4. '_cost' → logprob: -4.9866814613342285
    5. 'CS' → logprob: -5.1116814613342285
    6. 'cost' → logprob: -5.4866814613342285
    7. 'ost' → logprob: -6.6116814613342285
    8. 'O' → logprob: -9.236681938171387
    9. ' COST' → logprob: -9.611681938171387
    10. '_CS' → logprob: -9.611681938171387

Token 396: '_CS' (ID: 91377)
  Prédit: '_CS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CS' → logprob: -0.0027144034393131733
    2. '[to' → logprob: -6.37771463394165
    3. '_cs' → logprob: -7.50271463394165
    4. 'CS' → logprob: -7.87771463394165
    5. '+' → logprob: -10.252714157104492
    6. 'to' → logprob: -11.002714157104492
    7. 'Cs' → logprob: -11.752714157104492
    8. '-CS' → logprob: -11.877714157104492
    9. 'cs' → logprob: -12.127714157104492
    10. ' CS' → logprob: -13.002714157104492

Token 397: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.001129021286033094
    2. 'to' → logprob: -7.126129150390625
    3. '>' → logprob: -8.126129150390625
    4. '[token' → logprob: -11.751129150390625
    5. '=' → logprob: -11.876129150390625
    6. '```' → logprob: -12.501129150390625
    7. ' to' → logprob: -12.876129150390625
    8. '(to' → logprob: -12.876129150390625
    9. '[
' → logprob: -13.876129150390625
    10. '[' → logprob: -13.876129150390625

Token 398: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -6.44443862256594e-05
    2. ']=' → logprob: -10.875064849853516
    3. '=color' → logprob: -11.875064849853516
    4. '=len' → logprob: -12.000064849853516
    5. '=min' → logprob: -12.625064849853516
    6. '=max' → logprob: -12.875064849853516
    7. '=size' → logprob: -12.875064849853516
    8. '=sys' → logprob: -13.000064849853516
    9. '=
' → logprob: -13.000064849853516
    10. '=c' → logprob: -13.000064849853516

Token 399: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0004306692280806601
    2. ' cost' → logprob: -7.750430583953857
    3. '(cost' → logprob: -17.500431060791016
    4. 'co' → logprob: -18.125431060791016
    5. 'code' → logprob: -18.125431060791016
    6. 'count' → logprob: -19.375431060791016
    7. '   ' → logprob: -19.375431060791016
    8. 'cos' → logprob: -19.750431060791016
    9. '```' → logprob: -20.000431060791016
    10. 'color' → logprob: -20.375431060791016

Token 400: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.4849443838757e-06
    2. ' +' → logprob: -12.625004768371582
    3. '[' → logprob: -14.750004768371582
    4. '```' → logprob: -14.875004768371582
    5. '1' → logprob: -15.750004768371582
    6. '＋' → logprob: -16.625003814697266
    7. '2' → logprob: -17.750003814697266
    8. '   ' → logprob: -17.750003814697266
    9. '+
' → logprob: -18.000003814697266
    10. '+[' → logprob: -18.125003814697266

Token 401: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4021237802808173e-05
    2. ' ' → logprob: -11.250014305114746
    3. '2' → logprob: -15.125014305114746
    4. '```' → logprob: -15.125014305114746
    5. 'cost' → logprob: -15.625014305114746
    6. '+' → logprob: -15.750014305114746
    7. '   ' → logprob: -15.750014305114746
    8. '(' → logprob: -18.62501335144043
    9. '0' → logprob: -18.62501335144043
    10. '[' → logprob: -18.87501335144043

Token 402: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003076586639508605
    2. 'heap' → logprob: -5.878076553344727
    3. '               ' → logprob: -9.003076553344727
    4. '                    ' → logprob: -10.128076553344727
    5. '           ' → logprob: -10.503076553344727
    6. '```' → logprob: -10.753076553344727
    7. '                       ' → logprob: -10.878076553344727
    8. '                  ' → logprob: -11.253076553344727
    9. '                     ' → logprob: -12.378076553344727
    10. ' heap' → logprob: -12.628076553344727

Token 403: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07119016349315643
    2. 'heap' → logprob: -2.696190118789673
    3. '```' → logprob: -6.946190357208252
    4. '                       ' → logprob: -9.196189880371094
    5. '               ' → logprob: -9.571189880371094
    6. ' heap' → logprob: -10.571189880371094
    7. '                  ' → logprob: -10.571189880371094
    8. '                    ' → logprob: -10.821189880371094
    9. '           ' → logprob: -11.196189880371094
    10. '(heap' → logprob: -11.696189880371094

Token 404: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -4.320199877838604e-07
    2. ' heap' → logprob: -15.75
    3. '                   ' → logprob: -16.5
    4. '```' → logprob: -16.75
    5. 'he' → logprob: -17.5
    6. '
' → logprob: -18.375
    7. 'heat' → logprob: -19.75
    8. '   ' → logprob: -19.75
    9. '                       ' → logprob: -20.625
    10. '(heap' → logprob: -20.75

Token 405: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -7.3458322731312364e-06
    2. 'p' → logprob: -12.375007629394531
    3. '.he' → logprob: -13.625007629394531
    4. 'he' → logprob: -14.250007629394531
    5. '[' → logprob: -14.875007629394531
    6. '```' → logprob: -15.250007629394531
    7. 'app' → logprob: -15.500007629394531
    8. 'ap' → logprob: -16.12500762939453
    9. 'ush' → logprob: -16.62500762939453
    10. 'h' → logprob: -16.75000762939453

Token 406: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.02349132113158703
    2. 'he' → logprob: -3.773491382598877
    3. '.heap' → logprob: -9.273490905761719
    4. 'heap' → logprob: -9.523490905761719
    5. 'q' → logprob: -10.273490905761719
    6. 'ush' → logprob: -10.398490905761719
    7. 'push' → logprob: -11.898490905761719
    8. '```' → logprob: -12.523490905761719
    9. '.push' → logprob: -14.398490905761719
    10. 'app' → logprob: -14.523490905761719

Token 407: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.005971692036837339
    2. 'pp' → logprob: -5.755971908569336
    3. 'ap' → logprob: -6.005971908569336
    4. 'p' → logprob: -9.005971908569336
    5. 'ush' → logprob: -9.255971908569336
    6. 'push' → logprob: -9.630971908569336
    7. 'q' → logprob: -11.005971908569336
    8. '```' → logprob: -11.630971908569336
    9. 'appen' → logprob: -13.380971908569336
    10. 'qp' → logprob: -13.505971908569336

Token 408: 'ush' (ID: 1776)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.10748475790023804
    2. 'ush' → logprob: -2.357484817504883
    3. 'ap' → logprob: -4.982484817504883
    4. 'push' → logprob: -8.982484817504883
    5. 'pp' → logprob: -9.232484817504883
    6. 'p' → logprob: -9.357484817504883
    7. 'q' → logprob: -10.857484817504883
    8. 'sh' → logprob: -11.232484817504883
    9. '```' → logprob: -11.232484817504883
    10. 'he' → logprob: -11.482484817504883

Token 409: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: 0.0
    2. '[' → logprob: -17.5
    3. 'Q' → logprob: -20.25
    4. '```' → logprob: -20.875
    5. '<Q' → logprob: -21.125
    6. '(' → logprob: -21.25
    7. ',Q' → logprob: -22.125
    8. '(
' → logprob: -22.625
    9. '	Q' → logprob: -23.5
    10. '   ' → logprob: -23.75

Token 410: ',[' (ID: 35502)
  Prédit: ',['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',[' → logprob: -0.0018947218777611852
    2. ',' → logprob: -6.626894950866699
    3. ',Q' → logprob: -8.1268949508667
    4. '([' → logprob: -8.7518949508667
    5. '[' → logprob: -9.6268949508667
    6. ' ,[' → logprob: -10.2518949508667
    7. '(Q' → logprob: -11.8768949508667
    8. ',(' → logprob: -13.1268949508667
    9. '',[' → logprob: -13.3768949508667
    10. '，[' → logprob: -13.7518949508667

Token 411: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.0206720617134124e-05
    2. ' cost' → logprob: -11.50001049041748
    3. '(cost' → logprob: -17.750009536743164
    4. 'code' → logprob: -23.250009536743164
    5. '
' → logprob: -23.375009536743164
    6. '   ' → logprob: -23.625009536743164
    7. '-cost' → logprob: -24.125009536743164
    8. '```' → logprob: -24.125009536743164
    9. ' ' → logprob: -25.000009536743164
    10. 'color' → logprob: -25.375009536743164

Token 412: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.9361264946837764e-07
    2. ' +' → logprob: -15.75
    3. '[' → logprob: -17.25
    4. '```' → logprob: -17.625
    5. '...' → logprob: -18.875
    6. '﻿' → logprob: -19.625
    7. '-' → logprob: -19.625
    8. ')+' → logprob: -19.625
    9. '   ' → logprob: -19.625
    10. '＋' → logprob: -19.875

Token 413: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. '+' → logprob: -11.37501335144043
    3. ' ' → logprob: -13.87501335144043
    4. '2' → logprob: -15.87501335144043
    5. '   ' → logprob: -15.87501335144043
    6. '```' → logprob: -16.00001335144043
    7. 'to' → logprob: -16.00001335144043
    8. '
' → logprob: -17.25001335144043
    9. 'cost' → logprob: -18.00001335144043
    10. ' +' → logprob: -18.12501335144043

Token 414: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.03805479779839516
    2. '+' → logprob: -3.2880547046661377
    3. '+C' → logprob: -12.163054466247559
    4. ']' → logprob: -12.788054466247559
    5. ')+' → logprob: -12.913054466247559
    6. '}+' → logprob: -13.663054466247559
    7. '```' → logprob: -14.288054466247559
    8. ']+=' → logprob: -14.663054466247559
    9. ' +' → logprob: -16.288055419921875
    10. '+]' → logprob: -16.288055419921875

Token 415: 'CS' (ID: 9310)
  Prédit: 'CS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CS' → logprob: -5.512236498361744e-07
    2. ' CS' → logprob: -15.000000953674316
    3. 'CC' → logprob: -16.125
    4. 'C' → logprob: -18.5
    5. '_CS' → logprob: -19.625
    6. 'cs' → logprob: -19.875
    7. 'Cs' → logprob: -20.875
    8. 'CSC' → logprob: -21.0
    9. '   ' → logprob: -21.5
    10. '-CS' → logprob: -22.125

Token 416: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -3.128163257315464e-07
    2. 'to' → logprob: -15.375
    3. '[' → logprob: -19.375
    4. '(to' → logprob: -21.375
    5. '[from' → logprob: -21.5
    6. '[
' → logprob: -21.875
    7. ' [' → logprob: -22.0
    8. '[top' → logprob: -22.25
    9. '   ' → logprob: -22.375
    10. '```' → logprob: -23.125

Token 417: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.01457641925662756
    2. ')' → logprob: -4.264576435089111
    3. '])
' → logprob: -8.014575958251953
    4. ')]' → logprob: -10.264575958251953
    5. ']' → logprob: -11.514575958251953
    6. ')])' → logprob: -11.514575958251953
    7. '))' → logprob: -12.139575958251953
    8. ')
' → logprob: -12.264575958251953
    9. '   ' → logprob: -12.514575958251953
    10. '       ' → logprob: -12.889575958251953

Token 418: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027019262313842773
    2. '       ' → logprob: -3.6520192623138428
    3. '           ' → logprob: -7.402019500732422
    4. '
' → logprob: -10.277019500732422
    5. '```' → logprob: -10.402019500732422
    6. 'for' → logprob: -10.902019500732422
    7. '<|end|>' → logprob: -11.152019500732422
    8. ' ' → logprob: -13.527019500732422
    9. '    
' → logprob: -13.777019500732422
    10. '     ' → logprob: -13.902019500732422

Token 419: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.9294049739837646
    2. '       ' → logprob: -1.4294049739837646
    3. '           ' → logprob: -1.6794049739837646
    4. '<|end|>' → logprob: -2.6794049739837646
    5. ' for' → logprob: -2.9294049739837646
    6. ')' → logprob: -3.5544049739837646
    7. '   ' → logprob: -4.804405212402344
    8. '               ' → logprob: -5.679405212402344
    9. '```' → logprob: -6.429405212402344
    10. '[' → logprob: -6.679405212402344

Token 420: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0004587903094943613
    2. 'z' → logprob: -8.500458717346191
    3. ' to' → logprob: -8.625458717346191
    4. 'u' → logprob: -9.875458717346191
    5. 'CC' → logprob: -11.625458717346191
    6. 'cc' → logprob: -11.875458717346191
    7. 'i' → logprob: -13.000458717346191
    8. 'v' → logprob: -13.625458717346191
    9. ' z' → logprob: -14.250458717346191
    10. 't' → logprob: -14.625458717346191

Token 421: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.25203007459640503
    2. ' in' → logprob: -1.5020301342010498
    3. 'CC' → logprob: -10.002030372619629
    4. '_CC' → logprob: -11.002030372619629
    5. '   ' → logprob: -11.877030372619629
    6. ' CC' → logprob: -12.002030372619629
    7. ' ' → logprob: -12.377030372619629
    8. 'IN' → logprob: -12.502030372619629
    9. '  ' → logprob: -13.127030372619629
    10. 'C' → logprob: -13.252030372619629

Token 422: ' CC' (ID: 21547)
  Prédit: 'CC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CC' → logprob: -0.00010020548506872728
    2. ' CC' → logprob: -9.250100135803223
    3. 'CS' → logprob: -13.125100135803223
    4. ' ' → logprob: -14.500100135803223
    5. 'range' → logprob: -14.750100135803223
    6. '	CC' → logprob: -14.750100135803223
    7. '(CC' → logprob: -15.625100135803223
    8. '   ' → logprob: -15.625100135803223
    9. 'USE' → logprob: -15.875100135803223
    10. '  ' → logprob: -16.12510108947754

Token 423: '_CL' (ID: 18374)
  Prédit: '_CL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CL' → logprob: -0.04789955914020538
    2. 'CL' → logprob: -3.1728994846343994
    3. '_UL' → logprob: -5.7978997230529785
    4. '[' → logprob: -6.4228997230529785
    5. 'UL' → logprob: -8.67289924621582
    6. 'cl' → logprob: -11.42289924621582
    7. '[_' → logprob: -12.04789924621582
    8. ' CL' → logprob: -12.04789924621582
    9. '[y' → logprob: -12.17289924621582
    10. '[i' → logprob: -12.54789924621582

Token 424: 'IST' (ID: 6258)
  Prédit: 'IST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IST' → logprob: -3.4121114822482923e-06
    2. 'LIST' → logprob: -13.375003814697266
    3. 'ist' → logprob: -14.125003814697266
    4. 'ST' → logprob: -14.250003814697266
    5. '_list' → logprob: -15.875003814697266
    6. 'ISTS' → logprob: -16.125003814697266
    7. '_LIST' → logprob: -16.375003814697266
    8. '[' → logprob: -16.750003814697266
    9. ' IST' → logprob: -17.875003814697266
    10. 'I' → logprob: -17.875003814697266

Token 425: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.0006047414499334991
    2. 'y' → logprob: -7.625604629516602
    3. '[' → logprob: -9.750604629516602
    4. '[z' → logprob: -10.000604629516602
    5. '[x' → logprob: -12.875604629516602
    6. '   ' → logprob: -13.375604629516602
    7. ' [' → logprob: -13.375604629516602
    8. '(y' → logprob: -13.500604629516602
    9. '[to' → logprob: -13.750604629516602
    10. '```' → logprob: -14.375604629516602

Token 426: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01919093355536461
    2. ':
' → logprob: -4.019190788269043
    3. ']:' → logprob: -7.019190788269043
    4. '[' → logprob: -9.394190788269043
    5. ']:
' → logprob: -11.019190788269043
    6. '):' → logprob: -11.144190788269043
    7. '>:' → logprob: -11.769190788269043
    8. ']' → logprob: -12.269190788269043
    9. '       ' → logprob: -12.769190788269043
    10. '   ' → logprob: -13.144190788269043

Token 427: '               ' (ID: 506)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.0744669437408447
    2. '               ' → logprob: -1.3244669437408447
    3. ':' → logprob: -1.6994669437408447
    4. 'if' → logprob: -2.0744669437408447
    5. '       ' → logprob: -3.0744669437408447
    6. ' if' → logprob: -4.449466705322266
    7. '[' → logprob: -4.699466705322266
    8. '   ' → logprob: -4.824466705322266
    9. '           ' → logprob: -5.199466705322266
    10. '```' → logprob: -7.074466705322266

Token 428: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.014641153626143932
    2. ' if' → logprob: -4.889641284942627
    3. '               ' → logprob: -5.014641284942627
    4. '       ' → logprob: -9.139640808105469
    5. '           ' → logprob: -9.264640808105469
    6. '   ' → logprob: -9.264640808105469
    7. '                   ' → logprob: -9.764640808105469
    8. 'for' → logprob: -12.264640808105469
    9. '              ' → logprob: -13.014640808105469
    10. '```' → logprob: -13.139640808105469

Token 429: ' MIN' (ID: 27151)
  Prédit: 'MIN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MIN' → logprob: -0.007607220206409693
    2. ' MIN' → logprob: -4.8826069831848145
    3. 'min' → logprob: -14.632607460021973
    4. ' ' → logprob: -15.507607460021973
    5. '   ' → logprob: -15.632607460021973
    6. 'M' → logprob: -16.257606506347656
    7. '    ' → logprob: -17.257606506347656
    8. '  ' → logprob: -17.257606506347656
    9. '_MIN' → logprob: -17.882606506347656
    10. '
' → logprob: -18.007606506347656

Token 430: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.000605337496381253
    2. 'cost' → logprob: -7.62560510635376
    3. 'MIN' → logprob: -9.625605583190918
    4. 'c' → logprob: -11.125605583190918
    5. '_cost' → logprob: -11.625605583190918
    6. '_COST' → logprob: -12.000605583190918
    7. 'O' → logprob: -12.250605583190918
    8. 'OT' → logprob: -12.250605583190918
    9. '
' → logprob: -12.875605583190918
    10. 'M' → logprob: -13.500605583190918

Token 431: 'OST' (ID: 7689)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.10149669647216797
    2. 'cost' → logprob: -2.976496696472168
    3. 'OST' → logprob: -3.226496696472168
    4. 'OT' → logprob: -5.726496696472168
    5. '_cost' → logprob: -6.726496696472168
    6. '_COST' → logprob: -6.976496696472168
    7. 'OC' → logprob: -8.976496696472168
    8. 'ost' → logprob: -9.601496696472168
    9. 'O' → logprob: -9.851496696472168
    10. 'MIN' → logprob: -9.976496696472168

Token 432: '_CC' (ID: 76416)
  Prédit: '_CC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CC' → logprob: -0.004112473223358393
    2. '[' → logprob: -6.004112243652344
    3. '[to' → logprob: -7.004112243652344
    4. 'CC' → logprob: -7.754112243652344
    5. '_CS' → logprob: -9.254112243652344
    6. 'to' → logprob: -9.504112243652344
    7. '	CC' → logprob: -10.129112243652344
    8. '_cc' → logprob: -10.629112243652344
    9. 'cc' → logprob: -10.879112243652344
    10. ' CC' → logprob: -11.129112243652344

Token 433: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -5.512236498361744e-07
    2. 'to' → logprob: -14.875000953674316
    3. '>' → logprob: -16.75
    4. '[from' → logprob: -18.625
    5. '[' → logprob: -18.75
    6. 'cost' → logprob: -18.875
    7. '   ' → logprob: -19.0
    8. ' [' → logprob: -19.125
    9. '(to' → logprob: -19.25
    10. '[top' → logprob: -19.75

Token 434: ']>' (ID: 54651)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -5.676981345459353e-06
    2. ']>' → logprob: -12.750005722045898
    3. ' >' → logprob: -13.125005722045898
    4. '>tag' → logprob: -16.0000057220459
    5. '>#' → logprob: -16.3750057220459
    6. '[' → logprob: -16.5000057220459
    7. '＞' → logprob: -17.0000057220459
    8. '>[' → logprob: -17.2500057220459
    9. '">' → logprob: -17.5000057220459
    10. '[]>' → logprob: -17.6250057220459

Token 435: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -3.5716304410016164e-05
    2. ' cost' → logprob: -10.250035285949707
    3. '(cost' → logprob: -15.375035285949707
    4. '   ' → logprob: -18.750036239624023
    5. '0' → logprob: -19.000036239624023
    6. '1' → logprob: -19.125036239624023
    7. '
' → logprob: -19.250036239624023
    8. 'code' → logprob: -20.500036239624023
    9. ' ' → logprob: -20.750036239624023
    10. '...' → logprob: -21.000036239624023

Token 436: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -14.250001907348633
    3. ' +' → logprob: -15.125001907348633
    4. '```' → logprob: -15.375001907348633
    5. '+[' → logprob: -15.875001907348633
    6. '>' → logprob: -16.250001907348633
    7. '1' → logprob: -17.125001907348633
    8. '＋' → logprob: -17.500001907348633
    9. '()+' → logprob: -18.000001907348633
    10. '+
' → logprob: -18.000001907348633

Token 437: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.759734732331708e-05
    2. 'cost' → logprob: -11.000017166137695
    3. ' ' → logprob: -14.375017166137695
    4. '+' → logprob: -16.250017166137695
    5. '   ' → logprob: -17.000017166137695
    6. '0' → logprob: -17.000017166137695
    7. ' cost' → logprob: -17.250017166137695
    8. '
' → logprob: -17.625017166137695
    9. '```' → logprob: -17.625017166137695
    10. '(cost' → logprob: -18.000017166137695

Token 438: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7749987244606018
    2. ':' → logprob: -1.149998664855957
    3. '                   ' → logprob: -1.649998664855957
    4. '=' → logprob: -4.524998664855957
    5. '<|end|>' → logprob: -5.149998664855957
    6. ',' → logprob: -5.899998664855957
    7. 'cost' → logprob: -6.024998664855957
    8. '               ' → logprob: -6.149998664855957
    9. '(cost' → logprob: -6.399998664855957
    10. '                       ' → logprob: -6.524998664855957

Token 439: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.030259843915700912
    2. 'MIN' → logprob: -3.655259847640991
    3. '               ' → logprob: -6.030259609222412
    4. '                       ' → logprob: -6.780259609222412
    5. ' MIN' → logprob: -9.03026008605957
    6. '           ' → logprob: -9.28026008605957
    7. '                  ' → logprob: -9.28026008605957
    8. '                    ' → logprob: -10.03026008605957
    9. '=' → logprob: -11.53026008605957
    10. 'cost' → logprob: -11.53026008605957

Token 440: ' MIN' (ID: 27151)
  Prédit: 'MIN'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MIN' (adapté à ' MIN') → logprob: -2.0100624169572257e-05
    2. ' MIN' → logprob: -11.000020027160645
    3. '   ' → logprob: -12.750020027160645
    4. '                   ' → logprob: -15.625020027160645
    5. 'cost' → logprob: -16.00002098083496
    6. '               ' → logprob: -16.87502098083496
    7. '           ' → logprob: -17.62502098083496
    8. '       ' → logprob: -17.75002098083496
    9. '_MIN' → logprob: -17.87502098083496
    10. 'MID' → logprob: -18.37502098083496

Token 441: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00023298001906368881
    2. 'cost' → logprob: -8.500232696533203
    3. '_COST' → logprob: -11.375232696533203
    4. '_cost' → logprob: -11.625232696533203
    5. ' COST' → logprob: -12.625232696533203
    6. 'OST' → logprob: -13.000232696533203
    7. 'MIN' → logprob: -13.250232696533203
    8. 'O' → logprob: -14.250232696533203
    9. '-cost' → logprob: -15.250232696533203
    10. '
' → logprob: -16.000232696533203

Token 442: 'OST' (ID: 7689)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0030876360833644867
    2. '_COST' → logprob: -6.878087520599365
    3. 'cost' → logprob: -7.003087520599365
    4. '_cost' → logprob: -7.003087520599365
    5. 'OST' → logprob: -9.003087997436523
    6. 'CC' → logprob: -9.753087997436523
    7. 'CS' → logprob: -10.628087997436523
    8. ' COST' → logprob: -11.378087997436523
    9. 'ost' → logprob: -11.753087997436523
    10. 'OC' → logprob: -12.628087997436523

Token 443: '_CC' (ID: 76416)
  Prédit: '_CC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CC' → logprob: -0.2519657611846924
    2. 'CC' → logprob: -1.5019657611846924
    3. '	CC' → logprob: -11.001965522766113
    4. 'cc' → logprob: -11.376965522766113
    5. ' CC' → logprob: -12.501965522766113
    6. 'cost' → logprob: -13.126965522766113
    7. '_CS' → logprob: -14.001965522766113
    8. '_cc' → logprob: -14.126965522766113
    9. '(CC' → logprob: -15.001965522766113
    10. '_C' → logprob: -15.626965522766113

Token 444: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -2.2200749754119897e-06
    2. 'to' → logprob: -13.500001907348633
    3. '[' → logprob: -15.250001907348633
    4. '(to' → logprob: -15.875001907348633
    5. '```' → logprob: -16.250001907348633
    6. 'cost' → logprob: -16.625001907348633
    7. '=' → logprob: -16.625001907348633
    8. '``' → logprob: -18.000001907348633
    9. '>' → logprob: -18.125001907348633
    10. '[top' → logprob: -18.250001907348633

Token 445: ']=' (ID: 9539)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.022752566263079643
    2. '=' → logprob: -4.02275276184082
    3. '[to' → logprob: -5.89775276184082
    4. ']>' → logprob: -7.27275276184082
    5. 'cost' → logprob: -7.89775276184082
    6. '[' → logprob: -7.89775276184082
    7. '>[' → logprob: -8.77275276184082
    8. ' cost' → logprob: -9.39775276184082
    9. ')>' → logprob: -10.27275276184082
    10. '+' → logprob: -10.27275276184082

Token 446: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -6.2729995988775045e-06
    2. ' cost' → logprob: -12.000006675720215
    3. '(cost' → logprob: -16.7500057220459
    4. 'cos' → logprob: -19.7500057220459
    5. '   ' → logprob: -20.5000057220459
    6. 'c' → logprob: -21.1250057220459
    7. '[' → logprob: -21.1250057220459
    8. '1' → logprob: -21.2500057220459
    9. '.cost' → logprob: -21.3750057220459
    10. '-cost' → logprob: -21.5000057220459

Token 447: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.2200749754119897e-06
    2. ' +' → logprob: -13.875001907348633
    3. '[' → logprob: -14.375001907348633
    4. '1' → logprob: -14.500001907348633
    5. '```' → logprob: -16.875001907348633
    6. '   ' → logprob: -17.750001907348633
    7. '+[' → logprob: -18.000001907348633
    8. '           ' → logprob: -19.250001907348633
    9. '+
' → logprob: -19.375001907348633
    10. '()+' → logprob: -19.500001907348633

Token 448: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. 'cost' → logprob: -13.12500286102295
    3. 'heap' → logprob: -15.12500286102295
    4. ' ' → logprob: -15.12500286102295
    5. '```' → logprob: -15.62500286102295
    6. '+' → logprob: -16.500003814697266
    7. '   ' → logprob: -16.750003814697266
    8. '[' → logprob: -16.875003814697266
    9. '
' → logprob: -17.125003814697266
    10. '

' → logprob: -18.250003814697266

Token 449: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04334889352321625
    2. 'heap' → logprob: -3.168348789215088
    3. '               ' → logprob: -9.043349266052246
    4. ' heap' → logprob: -10.043349266052246
    5. '                  ' → logprob: -10.168349266052246
    6. '                       ' → logprob: -10.668349266052246
    7. '           ' → logprob: -10.668349266052246
    8. '                    ' → logprob: -10.668349266052246
    9. '```' → logprob: -10.793349266052246
    10. 'import' → logprob: -10.793349266052246

Token 450: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1799432933330536
    2. 'heap' → logprob: -1.804943323135376
    3. '               ' → logprob: -9.679943084716797
    4. '                  ' → logprob: -10.429943084716797
    5. 'import' → logprob: -10.679943084716797
    6. ' heap' → logprob: -10.804943084716797
    7. '```' → logprob: -11.179943084716797
    8. '           ' → logprob: -11.679943084716797
    9. '                    ' → logprob: -11.929943084716797
    10. '				' → logprob: -12.054943084716797

Token 451: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -4.320199877838604e-07
    2. ' heap' → logprob: -15.75
    3. 'he' → logprob: -16.125
    4. '   ' → logprob: -16.625
    5. '```' → logprob: -17.5
    6. '
' → logprob: -18.25
    7. 'import' → logprob: -18.875
    8. '(heap' → logprob: -20.625
    9. 'heat' → logprob: -21.25
    10. '                   ' → logprob: -21.25

Token 452: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -6.8497312895488e-05
    2. 'he' → logprob: -10.375068664550781
    3. '.he' → logprob: -10.625068664550781
    4. 'push' → logprob: -12.750068664550781
    5. '[' → logprob: -13.000068664550781
    6. 'ush' → logprob: -13.125068664550781
    7. 'p' → logprob: -13.375068664550781
    8. 'app' → logprob: -13.500068664550781
    9. '```' → logprob: -14.250068664550781
    10. 'h' → logprob: -14.250068664550781

Token 453: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.3875676691532135
    2. 'he' → logprob: -1.1375676393508911
    3. 'ush' → logprob: -8.137567520141602
    4. 'push' → logprob: -8.512567520141602
    5. 'heap' → logprob: -9.012567520141602
    6. 'q' → logprob: -10.387567520141602
    7. '```' → logprob: -10.637567520141602
    8. '.heap' → logprob: -11.637567520141602
    9. '.push' → logprob: -12.512567520141602
    10. 'p' → logprob: -12.887567520141602

Token 454: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0004734486574307084
    2. 'ap' → logprob: -7.750473499298096
    3. 'pp' → logprob: -10.125473022460938
    4. 'q' → logprob: -14.500473022460938
    5. 'push' → logprob: -14.625473022460938
    6. 'p' → logprob: -14.750473022460938
    7. '```' → logprob: -14.750473022460938
    8. 'a' → logprob: -15.875473022460938
    9. '[' → logprob: -15.875473022460938
    10. 'appen' → logprob: -16.000473022460938

Token 455: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.00015800826076883823
    2. 'push' → logprob: -8.875158309936523
    3. 'op' → logprob: -12.250158309936523
    4. 'sh' → logprob: -12.500158309936523
    5. 'he' → logprob: -12.625158309936523
    6. '```' → logprob: -13.500158309936523
    7. 'app' → logprob: -13.625158309936523
    8. 'p' → logprob: -13.750158309936523
    9. 'pp' → logprob: -14.125158309936523
    10. 'ushed' → logprob: -14.375158309936523

Token 456: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -2.7610454708337784e-05
    2. 'Q' → logprob: -10.500027656555176
    3. '```' → logprob: -18.75002670288086
    4. '[' → logprob: -19.25002670288086
    5. '<Q' → logprob: -20.25002670288086
    6. '	Q' → logprob: -20.50002670288086
    7. ',Q' → logprob: -20.87502670288086
    8. '(' → logprob: -21.37502670288086
    9. '(
' → logprob: -21.37502670288086
    10. '   ' → logprob: -22.62502670288086

Token 457: ',[' (ID: 35502)
  Prédit: '(Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.00861528143286705
    2. 'Q' → logprob: -4.758615493774414
    3. '[' → logprob: -14.508615493774414
    4. '<Q' → logprob: -16.508615493774414
    5. '```' → logprob: -16.633615493774414
    6. ',Q' → logprob: -16.633615493774414
    7. '	Q' → logprob: -18.008615493774414
    8. 'A' → logprob: -18.008615493774414
    9. ' Q' → logprob: -18.383615493774414
    10. '(' → logprob: -18.758615493774414

Token 458: 'cost' (ID: 33457)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.000536232371814549
    2. 'cost' → logprob: -7.7505364418029785
    3. '[' → logprob: -9.50053596496582
    4. '(cost' → logprob: -11.25053596496582
    5. 'Q' → logprob: -11.37553596496582
    6. '[to' → logprob: -12.12553596496582
    7. '[
' → logprob: -14.87553596496582
    8. '
' → logprob: -15.62553596496582
    9. ' [' → logprob: -16.50053596496582
    10. '[color' → logprob: -16.62553596496582

Token 459: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.079073965549469
    2. '[' → logprob: -2.579073905944824
    3. 'Q' → logprob: -9.954073905944824
    4. 'cost' → logprob: -10.329073905944824
    5. '[to' → logprob: -10.329073905944824
    6. '(Q' → logprob: -10.704073905944824
    7. '+[' → logprob: -10.704073905944824
    8. '1' → logprob: -11.329073905944824
    9. 'to' → logprob: -12.079073905944824
    10. 'CC' → logprob: -12.454073905944824

Token 460: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011882558465003967
    2. '+' → logprob: -5.386882781982422
    3. '[' → logprob: -5.511882781982422
    4. 'to' → logprob: -6.386882781982422
    5. '[to' → logprob: -7.261882781982422
    6. '(Q' → logprob: -7.886882781982422
    7. 'Q' → logprob: -8.511882781982422
    8. '(to' → logprob: -9.886882781982422
    9. '(' → logprob: -10.011882781982422
    10. ' ' → logprob: -10.261882781982422

Token 461: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.0380677729845047
    2. '+' → logprob: -3.2880678176879883
    3. ']' → logprob: -10.788067817687988
    4. ')+' → logprob: -13.663067817687988
    5. '+[' → logprob: -13.663067817687988
    6. '+]' → logprob: -14.038067817687988
    7. '}+' → logprob: -14.288067817687988
    8. '[' → logprob: -14.413067817687988
    9. ']+=' → logprob: -15.413067817687988
    10. '()+' → logprob: -15.413067817687988

Token 462: 'CC' (ID: 4433)
  Prédit: 'CC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CC' → logprob: -1.981667537620524e-06
    2. '[' → logprob: -13.875001907348633
    3. ' CC' → logprob: -13.875001907348633
    4. '(CC' → logprob: -18.250001907348633
    5. '	CC' → logprob: -18.375001907348633
    6. 'C' → logprob: -18.625001907348633
    7. 'cc' → logprob: -19.875001907348633
    8. '[C' → logprob: -21.500001907348633
    9. '_CC' → logprob: -21.625001907348633
    10. '
' → logprob: -22.375001907348633

Token 463: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -4.246537173457909e-06
    2. '[' → logprob: -12.750003814697266
    3. 'to' → logprob: -13.750003814697266
    4. '```' → logprob: -16.750003814697266
    5. '
' → logprob: -17.250003814697266
    6. ')' → logprob: -17.875003814697266
    7. ' [' → logprob: -18.125003814697266
    8. ',to' → logprob: -18.375003814697266
    9. '[from' → logprob: -18.375003814697266
    10. '   ' → logprob: -18.375003814697266

Token 464: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0005717403837479651
    2. '])
' → logprob: -7.8755717277526855
    3. ')' → logprob: -8.625572204589844
    4. ')]' → logprob: -12.625572204589844
    5. ')])' → logprob: -13.375572204589844
    6. ' ])' → logprob: -13.500572204589844
    7. '])

' → logprob: -13.750572204589844
    8. ']' → logprob: -14.000572204589844
    9. '])
' → logprob: -14.125572204589844
    10. '   ' → logprob: -14.375572204589844

Token 465: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0917141437530518
    2. '       ' → logprob: -1.2167141437530518
    3. '               ' → logprob: -1.4667141437530518
    4. '           ' → logprob: -2.7167141437530518
    5. '                   ' → logprob: -2.7167141437530518
    6. ' ' → logprob: -6.591713905334473
    7. 'for' → logprob: -7.591713905334473
    8. '<|end|>' → logprob: -7.716713905334473
    9. '```' → logprob: -7.716713905334473
    10. ')' → logprob: -7.841713905334473

Token 466: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19025325775146484
    2. '   ' → logprob: -2.065253257751465
    3. '               ' → logprob: -3.815253257751465
    4. '           ' → logprob: -4.065253257751465
    5. '                   ' → logprob: -5.190253257751465
    6. ')' → logprob: -7.815253257751465
    7. ' ' → logprob: -8.815253257751465
    8. '    ' → logprob: -8.940253257751465
    9. 'elif' → logprob: -9.065253257751465
    10. ' if' → logprob: -9.190253257751465

Token 467: ':

' (ID: 1402)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5902387499809265
    2. ':' → logprob: -1.0902388095855713
    3. '
' → logprob: -3.0902388095855713
    4. ':

' → logprob: -3.4652388095855713
    5. '       ' → logprob: -4.340238571166992
    6. '   ' → logprob: -4.590238571166992
    7. '<|end|>' → logprob: -5.715238571166992
    8. '    
' → logprob: -6.340238571166992
    9. '```' → logprob: -6.465238571166992
    10. '        
' → logprob: -6.715238571166992

Token 468: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04762965068221092
    2. '       ' → logprob: -3.1726295948028564
    3. 'if' → logprob: -6.1726298332214355
    4. '   ' → logprob: -7.4226298332214355
    5. '

' → logprob: -7.5476298332214355
    6. '<|end|>' → logprob: -7.7976298332214355
    7. '```' → logprob: -8.172629356384277
    8. '        
' → logprob: -8.297629356384277
    9. '    
' → logprob: -8.672629356384277
    10. '
' → logprob: -9.547629356384277

Token 469: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00912938266992569
    2. '       ' → logprob: -5.009129524230957
    3. '
' → logprob: -6.509129524230957
    4. '   ' → logprob: -7.134129524230957
    5. ' if' → logprob: -9.134129524230957
    6. '```' → logprob: -12.634129524230957
    7. '        
' → logprob: -13.009129524230957
    8. 'for' → logprob: -13.009129524230957
    9. '	if' → logprob: -13.509129524230957
    10. '    ' → logprob: -13.634129524230957

Token 470: ' USE' (ID: 20180)
  Prédit: 'USE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'USE' → logprob: -0.22555190324783325
    2. ' USE' → logprob: -1.6005518436431885
    3. ' ' → logprob: -9.72555160522461
    4. '  ' → logprob: -10.47555160522461
    5. '   ' → logprob: -11.35055160522461
    6. 'U' → logprob: -11.60055160522461
    7. 'CC' → logprob: -11.72555160522461
    8. 'UCE' → logprob: -12.72555160522461
    9. 'US' → logprob: -12.97555160522461
    10. 'use' → logprob: -13.10055160522461

Token 471: 'U' (ID: 52)
  Prédit: 'U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.07900457829236984
    2. 'C' → logprob: -2.5790045261383057
    3. 'E' → logprob: -10.829004287719727
    4. 'CC' → logprob: -10.954004287719727
    5. 'CU' → logprob: -11.329004287719727
    6. 'UL' → logprob: -11.579004287719727
    7. ' U' → logprob: -11.704004287719727
    8. 'A' → logprob: -12.266504287719727
    9. 'S' → logprob: -12.391504287719727
    10. 'USE' → logprob: -12.454004287719727

Token 472: '[y' (ID: 34551)
  Prédit: '[z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[z' → logprob: -8.537868779967539e-06
    2. '[u' → logprob: -12.375008583068848
    3. '[' → logprob: -12.750008583068848
    4. '[y' → logprob: -14.375008583068848
    5. 'z' → logprob: -14.500008583068848
    6. '[x' → logprob: -15.750008583068848
    7. '```' → logprob: -17.00000762939453
    8. '=z' → logprob: -17.37500762939453
    9. '==' → logprob: -18.00000762939453
    10. '=' → logprob: -18.62500762939453

Token 473: ']==' (ID: 34128)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0040831477381289005
    2. ']==' → logprob: -5.504083156585693
    3. ' ==' → logprob: -13.129082679748535
    4. '==
' → logprob: -13.879082679748535
    5. ')==' → logprob: -14.129082679748535
    6. '']==' → logprob: -14.879082679748535
    7. '```' → logprob: -15.129082679748535
    8. '=' → logprob: -15.629082679748535
    9. '()==' → logprob: -15.629082679748535
    10. '[' → logprob: -17.00408363342285

Token 474: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '=' → logprob: -20.75
    4. '1' → logprob: -21.25
    5. '   ' → logprob: -21.25
    6. '```' → logprob: -22.625
    7. '
' → logprob: -23.25
    8. '۰' → logprob: -24.375
    9. '  ' → logprob: -24.75
    10. '==' → logprob: -24.75

Token 475: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.037523556500673294
    2. '       ' → logprob: -4.1625237464904785
    3. '           ' → logprob: -4.5375237464904785
    4. ':' → logprob: -5.1625237464904785
    5. '=' → logprob: -5.5375237464904785
    6. '==' → logprob: -8.66252326965332
    7. '):
' → logprob: -8.78752326965332
    8. '               ' → logprob: -9.28752326965332
    9. '=
' → logprob: -9.28752326965332
    10. ':

' → logprob: -9.53752326965332

Token 476: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023488763719797134
    2. '       ' → logprob: -3.773488759994507
    3. '               ' → logprob: -8.398488998413086
    4. '   ' → logprob: -12.023488998413086
    5. '          ' → logprob: -12.273488998413086
    6. '```' → logprob: -13.273488998413086
    7. '         ' → logprob: -13.898488998413086
    8. '        ' → logprob: -13.898488998413086
    9. 'USE' → logprob: -14.148488998413086
    10. '``' → logprob: -14.273488998413086

Token 477: ' USE' (ID: 20180)
  Prédit: 'USE'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'USE' (adapté à ' USE') → logprob: -0.004137529991567135
    2. '           ' → logprob: -5.5041375160217285
    3. ' USE' → logprob: -10.504137992858887
    4. '       ' → logprob: -11.629137992858887
    5. '1' → logprob: -11.879137992858887
    6. '   ' → logprob: -12.004137992858887
    7. '               ' → logprob: -12.629137992858887
    8. 'USER' → logprob: -13.504137992858887
    9. 'US' → logprob: -13.629137992858887
    10. '```' → logprob: -13.754137992858887

Token 478: 'U' (ID: 52)
  Prédit: 'U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -6.704273118884885e-07
    2. '=' → logprob: -15.250000953674316
    3. 'USE' → logprob: -15.500000953674316
    4. ' U' → logprob: -15.875000953674316
    5. '[' → logprob: -18.0
    6. 'US' → logprob: -18.875
    7. 'UE' → logprob: -19.125
    8. '   ' → logprob: -19.25
    9. 'C' → logprob: -19.625
    10. '	U' → logprob: -20.375

Token 479: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -7.874882430769503e-05
    2. '=' → logprob: -9.500079154968262
    3. '=y' → logprob: -12.750079154968262
    4. '=[' → logprob: -14.375079154968262
    5. '[u' → logprob: -15.625079154968262
    6. '[Y' → logprob: -16.000078201293945
    7. '[x' → logprob: -17.125078201293945
    8. '[' → logprob: -18.250078201293945
    9. ' [' → logprob: -18.750078201293945
    10. '=True' → logprob: -19.000078201293945

Token 480: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -5.3120038501219824e-05
    2. ']=' → logprob: -9.875053405761719
    3. '=True' → logprob: -14.125053405761719
    4. ')=' → logprob: -15.125053405761719
    5. '=y' → logprob: -15.500053405761719
    6. '==' → logprob: -15.750053405761719
    7. '}=' → logprob: -15.875053405761719
    8. ' =' → logprob: -16.87505340576172
    9. '```' → logprob: -16.87505340576172
    10. '+=' → logprob: -17.12505340576172

Token 481: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '   ' → logprob: -20.0
    4. '           ' → logprob: -20.75
    5. '=' → logprob: -21.5
    6. '[' → logprob: -21.75
    7. '<|end|>' → logprob: -21.875
    8. 'True' → logprob: -22.375
    9. '0' → logprob: -22.5
    10. '```' → logprob: -23.125

Token 482: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017917776480317116
    2. '
' → logprob: -4.142917633056641
    3. 'for' → logprob: -7.142917633056641
    4. '<|end|>' → logprob: -7.142917633056641
    5. '```' → logprob: -9.39291763305664
    6. ' for' → logprob: -9.51791763305664
    7. '       ' → logprob: -10.26791763305664
    8. '   ' → logprob: -10.89291763305664
    9. '  
' → logprob: -11.01791763305664
    10. '               ' → logprob: -11.01791763305664

Token 483: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16154727339744568
    2. 'for' → logprob: -1.911547303199768
    3. '       ' → logprob: -7.1615471839904785
    4. ' for' → logprob: -7.9115471839904785
    5. '   ' → logprob: -9.036547660827637
    6. '```' → logprob: -10.411547660827637
    7. '
' → logprob: -11.536547660827637
    8. '               ' → logprob: -11.911547660827637
    9. '	for' → logprob: -12.661547660827637
    10. '          ' → logprob: -13.161547660827637

Token 484: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00043579499470070004
    2. '           ' → logprob: -8.000435829162598
    3. ' for' → logprob: -9.250435829162598
    4. '	for' → logprob: -13.125435829162598
    5. '   ' → logprob: -14.000435829162598
    6. '       ' → logprob: -14.125435829162598
    7. '
' → logprob: -15.000435829162598
    8. '```' → logprob: -15.250435829162598
    9. '               ' → logprob: -17.12543487548828
    10. 'For' → logprob: -18.37543487548828

Token 485: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.003177952254191041
    2. ' to' → logprob: -5.753178119659424
    3. 'u' → logprob: -16.003177642822266
    4. 'z' → logprob: -17.128177642822266
    5. 'x' → logprob: -17.503177642822266
    6. '```' → logprob: -17.753177642822266
    7. 'v' → logprob: -18.253177642822266
    8. '	to' → logprob: -18.503177642822266
    9. ' ' → logprob: -18.628177642822266
    10. '(to' → logprob: -18.878177642822266

Token 486: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.018150413408875465
    2. ' in' → logprob: -4.018150329589844
    3. ' ' → logprob: -15.893150329589844
    4. 'to' → logprob: -16.268150329589844
    5. '	in' → logprob: -16.393150329589844
    6. '```' → logprob: -16.768150329589844
    7. 'In' → logprob: -17.268150329589844
    8. 'CC' → logprob: -17.268150329589844
    9. ' ' → logprob: -17.643150329589844
    10. 'i' → logprob: -18.143150329589844

Token 487: ' CC' (ID: 21547)
  Prédit: 'CC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CC' → logprob: -1.676292231422849e-05
    2. ' CC' → logprob: -11.000017166137695
    3. '	CC' → logprob: -17.875017166137695
    4. ' ' → logprob: -18.750017166137695
    5. '_CC' → logprob: -19.750017166137695
    6. '(CC' → logprob: -21.000017166137695
    7. 'C' → logprob: -21.250017166137695
    8. '   ' → logprob: -21.875017166137695
    9. 'cc' → logprob: -22.250017166137695
    10. '  ' → logprob: -22.375017166137695

Token 488: '_UL' (ID: 195965)
  Prédit: '_UL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_UL' → logprob: -0.0010660359403118491
    2. '_U' → logprob: -7.251066207885742
    3. '_' → logprob: -8.001066207885742
    4. 'UL' → logprob: -11.251066207885742
    5. '_CL' → logprob: -12.251066207885742
    6. '_US' → logprob: -13.876066207885742
    7. '_UN' → logprob: -14.501066207885742
    8. '[' → logprob: -14.876066207885742
    9. '[_' → logprob: -15.251066207885742
    10. '_UID' → logprob: -15.251066207885742

Token 489: 'IST' (ID: 6258)
  Prédit: 'IST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IST' → logprob: -0.0015918690478429198
    2. 'LIST' → logprob: -6.751591682434082
    3. 'ST' → logprob: -7.876591682434082
    4. 'ist' → logprob: -10.251591682434082
    5. '[' → logprob: -12.751591682434082
    6. 'CL' → logprob: -13.126591682434082
    7. '[y' → logprob: -14.626591682434082
    8. 'list' → logprob: -15.126591682434082
    9. '_LIST' → logprob: -15.501591682434082
    10. '_list' → logprob: -16.1265926361084

Token 490: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.00014537633978761733
    2. '[z' → logprob: -8.875144958496094
    3. 'y' → logprob: -12.875144958496094
    4. '[' → logprob: -13.125144958496094
    5. '[u' → logprob: -14.750144958496094
    6. '[x' → logprob: -15.000144958496094
    7. '```' → logprob: -17.000144958496094
    8. '[
' → logprob: -17.250144958496094
    9. '[user' → logprob: -17.500144958496094
    10. ' [' → logprob: -17.875144958496094

Token 491: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.42911970615386963
    2. ':' → logprob: -1.0541197061538696
    3. ']:
' → logprob: -8.179120063781738
    4. ']:' → logprob: -9.429120063781738
    5. ']' → logprob: -10.554120063781738
    6. '):
' → logprob: -11.929120063781738
    7. ':
' → logprob: -12.054120063781738
    8. '[' → logprob: -12.429120063781738
    9. '               ' → logprob: -12.554120063781738
    10. ':

' → logprob: -12.679120063781738

Token 492: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0032756258733570576
    2. 'if' → logprob: -6.128275394439697
    3. '           ' → logprob: -7.003275394439697
    4. '       ' → logprob: -9.503275871276855
    5. ' if' → logprob: -10.128275871276855
    6. '```' → logprob: -10.628275871276855
    7. '   ' → logprob: -10.878275871276855
    8. '                   ' → logprob: -11.628275871276855
    9. '	           ' → logprob: -12.503275871276855
    10. '		       ' → logprob: -13.003275871276855

Token 493: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0010087540140375495
    2. ' if' → logprob: -7.001008987426758
    3. '               ' → logprob: -9.501008987426758
    4. '                   ' → logprob: -11.501008987426758
    5. '```' → logprob: -12.126008987426758
    6. '           ' → logprob: -13.376008987426758
    7. '<|end|>' → logprob: -13.376008987426758
    8. 'for' → logprob: -14.001008987426758
    9. '
' → logprob: -14.626008987426758
    10. 'heap' → logprob: -14.626008987426758

Token 494: ' MIN' (ID: 27151)
  Prédit: 'MIN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MIN' → logprob: -9.615255839889869e-05
    2. ' MIN' → logprob: -9.250096321105957
    3. 'M' → logprob: -18.37509536743164
    4. 'min' → logprob: -19.37509536743164
    5. 'MAX' → logprob: -19.50009536743164
    6. 'MID' → logprob: -20.50009536743164
    7. ' ' → logprob: -20.62509536743164
    8. 'CC' → logprob: -20.62509536743164
    9. '   ' → logprob: -20.75009536743164
    10. '_MIN' → logprob: -21.00009536743164

Token 495: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -7.896309739408025e-07
    2. 'MIN' → logprob: -15.750000953674316
    3. 'cost' → logprob: -16.125
    4. '[' → logprob: -16.5
    5. '_COST' → logprob: -16.75
    6. '=' → logprob: -17.125
    7. '```' → logprob: -17.25
    8. '
' → logprob: -17.25
    9. 'c' → logprob: -17.75
    10. '[C' → logprob: -17.875

Token 496: 'OST' (ID: 7689)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -5.3596853831550106e-05
    2. 'OST' → logprob: -10.375053405761719
    3. '_COST' → logprob: -11.125053405761719
    4. 'cost' → logprob: -12.625053405761719
    5. 'OC' → logprob: -13.375053405761719
    6. '_cost' → logprob: -14.750053405761719
    7. 'O' → logprob: -14.750053405761719
    8. '...' → logprob: -15.375053405761719
    9. ' COST' → logprob: -15.375053405761719
    10. '[' → logprob: -15.750053405761719

Token 497: '_CC' (ID: 76416)
  Prédit: '_CC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CC' → logprob: -6.511406809295295e-06
    2. 'CC' → logprob: -12.000006675720215
    3. '	CC' → logprob: -15.625006675720215
    4. ' CC' → logprob: -16.6250057220459
    5. 'cc' → logprob: -18.0000057220459
    6. '_C' → logprob: -18.3750057220459
    7. '```' → logprob: -18.3750057220459
    8. '_cc' → logprob: -19.2500057220459
    9. '[' → logprob: -19.8750057220459
    10. '_CS' → logprob: -20.3750057220459

Token 498: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: 0.0
    2. 'to' → logprob: -16.75
    3. '[from' → logprob: -19.875
    4. '```' → logprob: -20.125
    5. ' [' → logprob: -20.75
    6. '[
' → logprob: -20.75
    7. '[' → logprob: -20.875
    8. '
' → logprob: -21.25
    9. '   ' → logprob: -21.25
    10. '[tmp' → logprob: -21.5

Token 499: ']>' (ID: 54651)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -6.153795766294934e-06
    2. ' >' → logprob: -12.750005722045898
    3. ']>' → logprob: -13.375005722045898
    4. '[' → logprob: -13.875005722045898
    5. '[]>' → logprob: -15.875005722045898
    6. '>[' → logprob: -16.2500057220459
    7. '>
' → logprob: -16.3750057220459
    8. '>#' → logprob: -16.3750057220459
    9. '>tag' → logprob: -16.5000057220459
    10. '```' → logprob: -16.6250057220459

Token 500: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -3.547789674485102e-05
    2. ' cost' → logprob: -10.250035285949707
    3. '(cost' → logprob: -17.125036239624023
    4. '   ' → logprob: -19.375036239624023
    5. 'code' → logprob: -19.625036239624023
    6. '
' → logprob: -20.000036239624023
    7. ' ' → logprob: -21.625036239624023
    8. '.cost' → logprob: -21.750036239624023
    9. '-cost' → logprob: -22.375036239624023
    10. '```' → logprob: -22.625036239624023

Token 501: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.320199877838604e-07
    2. ' +' → logprob: -15.125
    3. '[' → logprob: -16.0
    4. '```' → logprob: -18.25
    5. '+
' → logprob: -18.375
    6. '+[' → logprob: -18.75
    7. '＋' → logprob: -19.125
    8. '+k' → logprob: -19.625
    9. '()+' → logprob: -19.75
    10. ')+' → logprob: -20.3125

Token 502: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2471589798224159e-05
    2. 'cost' → logprob: -11.375012397766113
    3. '+' → logprob: -14.000012397766113
    4. ' ' → logprob: -16.25001335144043
    5. '   ' → logprob: -18.12501335144043
    6. '```' → logprob: -18.37501335144043
    7. ' cost' → logprob: -18.87501335144043
    8. '
' → logprob: -20.00001335144043
    9. '(cost' → logprob: -20.75001335144043
    10. '0' → logprob: -20.75001335144043

Token 503: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7947539687156677
    2. ':
' → logprob: -1.1697540283203125
    3. ':' → logprob: -1.9197540283203125
    4. 'cost' → logprob: -3.2947540283203125
    5. ' cost' → logprob: -3.7947540283203125
    6. '               ' → logprob: -4.0447540283203125
    7. '(cost' → logprob: -5.0447540283203125
    8. '                  ' → logprob: -6.1697540283203125
    9. '=' → logprob: -6.4197540283203125
    10. '                       ' → logprob: -7.1697540283203125

Token 504: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.11145880818367004
    2. 'MIN' → logprob: -2.3614587783813477
    3. '               ' → logprob: -4.736458778381348
    4. ' MIN' → logprob: -6.361458778381348
    5. '           ' → logprob: -8.611458778381348
    6. '                  ' → logprob: -9.111458778381348
    7. '                       ' → logprob: -9.111458778381348
    8. '   ' → logprob: -9.236458778381348
    9. '                    ' → logprob: -9.611458778381348
    10. '```' → logprob: -9.861458778381348

Token 505: ' MIN' (ID: 27151)
  Prédit: 'MIN'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MIN' (adapté à ' MIN') → logprob: -4.572941179503687e-05
    2. ' MIN' → logprob: -10.000045776367188
    3. '                   ' → logprob: -15.625045776367188
    4. '   ' → logprob: -15.750045776367188
    5. '_MIN' → logprob: -18.375045776367188
    6. '               ' → logprob: -18.750045776367188
    7. ' ' → logprob: -20.250045776367188
    8. 'MID' → logprob: -20.500045776367188
    9. 'min' → logprob: -20.750045776367188
    10. '  ' → logprob: -20.750045776367188

Token 506: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0008908560266718268
    2. 'cost' → logprob: -7.375890731811523
    3. '_COST' → logprob: -8.500890731811523
    4. '_cost' → logprob: -10.375890731811523
    5. 'heap' → logprob: -12.125890731811523
    6. 'import' → logprob: -12.375890731811523
    7. 'c' → logprob: -12.375890731811523
    8. '-cost' → logprob: -12.625890731811523
    9. 'Cost' → logprob: -13.000890731811523
    10. '```' → logprob: -13.500890731811523

Token 507: 'OST' (ID: 7689)
  Prédit: 'OST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OST' → logprob: -0.37617531418800354
    2. 'C' → logprob: -1.2511752843856812
    3. 'cost' → logprob: -3.7511754035949707
    4. 'ost' → logprob: -5.876175403594971
    5. 'ST' → logprob: -7.876175403594971
    6. '_COST' → logprob: -8.001174926757812
    7. ' COST' → logprob: -8.626174926757812
    8. '_cost' → logprob: -9.501174926757812
    9. 'O' → logprob: -10.501174926757812
    10. 'OC' → logprob: -11.001174926757812

Token 508: '_CC' (ID: 76416)
  Prédit: '_CC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CC' → logprob: -0.00010831133840838447
    2. '_CS' → logprob: -9.75010871887207
    3. 'CC' → logprob: -10.00010871887207
    4. 'heap' → logprob: -13.62510871887207
    5. 'push' → logprob: -13.87510871887207
    6. '_CL' → logprob: -14.37510871887207
    7. '_cc' → logprob: -14.62510871887207
    8. 'import' → logprob: -15.00010871887207
    9. '_CH' → logprob: -15.37510871887207
    10. '_HE' → logprob: -15.62510871887207

Token 509: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -4.320199877838604e-07
    2. 'to' → logprob: -16.25
    3. '(to' → logprob: -16.5
    4. '=' → logprob: -17.5
    5. '[' → logprob: -17.75
    6. 'CC' → logprob: -18.5
    7. '_CC' → logprob: -18.625
    8. '[t' → logprob: -20.0
    9. '```' → logprob: -20.0
    10. '[top' → logprob: -20.0

Token 510: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00021474185632541776
    2. ']=' → logprob: -9.125214576721191
    3. '[to' → logprob: -9.500214576721191
    4. '=[' → logprob: -10.750214576721191
    5. '=-' → logprob: -12.875214576721191
    6. '=min' → logprob: -13.625214576721191
    7. '=
' → logprob: -13.875214576721191
    8. '+=' → logprob: -14.250214576721191
    9. ')=' → logprob: -14.625214576721191
    10. '=len' → logprob: -14.875214576721191

Token 511: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -7.896309739408025e-07
    2. ' cost' → logprob: -14.125000953674316
    3. '(cost' → logprob: -17.25
    4. '   ' → logprob: -19.25
    5. '```' → logprob: -20.5
    6. '
' → logprob: -21.125
    7. 'cos' → logprob: -21.125
    8. '.cost' → logprob: -21.25
    9. '-cost' → logprob: -21.25
    10. '...' → logprob: -21.375

Token 512: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005798388738185167
    2. '[to' → logprob: -7.625579833984375
    3. 'to' → logprob: -9.500579833984375
    4. '[' → logprob: -11.875579833984375
    5. ' +' → logprob: -12.375579833984375
    6. '```' → logprob: -13.750579833984375
    7. '   ' → logprob: -14.250579833984375
    8. '1' → logprob: -14.375579833984375
    9. '(to' → logprob: -14.625579833984375
    10. '[u' → logprob: -14.625579833984375

Token 513: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. 'cost' → logprob: -12.875006675720215
    3. '```' → logprob: -13.125006675720215
    4. ' ' → logprob: -14.625006675720215
    5. '+' → logprob: -14.750006675720215
    6. '
' → logprob: -15.625006675720215
    7. '2' → logprob: -15.750006675720215
    8. '   ' → logprob: -16.0625057220459
    9. '...' → logprob: -17.3125057220459
    10. 'to' → logprob: -17.3750057220459

Token 514: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04331521689891815
    2. 'heap' → logprob: -3.1683151721954346
    3. '                       ' → logprob: -9.418314933776855
    4. '               ' → logprob: -9.543314933776855
    5. '                  ' → logprob: -9.918314933776855
    6. '                    ' → logprob: -10.668314933776855
    7. '```' → logprob: -10.668314933776855
    8. ' heap' → logprob: -10.793314933776855
    9. '				' → logprob: -11.043314933776855
    10. '           ' → logprob: -11.668314933776855

Token 515: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.16169068217277527
    2. 'heap' → logprob: -1.9116907119750977
    3. '               ' → logprob: -7.661690711975098
    4. '                  ' → logprob: -8.036690711975098
    5. '                    ' → logprob: -8.661690711975098
    6. '                       ' → logprob: -9.161690711975098
    7. '                ' → logprob: -9.286690711975098
    8. '```' → logprob: -9.536690711975098
    9. '           ' → logprob: -10.161690711975098
    10. '                 ' → logprob: -10.161690711975098

Token 516: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -9.088346359931165e-07
    2. ' heap' → logprob: -15.125000953674316
    3. 'he' → logprob: -15.250000953674316
    4. '```' → logprob: -15.750000953674316
    5. '                   ' → logprob: -15.875000953674316
    6. '   ' → logprob: -17.25
    7. '(heap' → logprob: -18.875
    8. '
' → logprob: -19.0
    9. '``' → logprob: -19.375
    10. '.heap' → logprob: -19.625

Token 517: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.128163257315464e-07
    2. 'he' → logprob: -15.5
    3. 'p' → logprob: -17.375
    4. 'heap' → logprob: -17.375
    5. 'app' → logprob: -17.375
    6. '.he' → logprob: -17.5
    7. 'h' → logprob: -17.875
    8. '.heap' → logprob: -18.75
    9. '   ' → logprob: -18.875
    10. '[' → logprob: -19.25

Token 518: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.002601937623694539
    2. 'he' → logprob: -6.0026021003723145
    3. '.heap' → logprob: -9.377601623535156
    4. 'heap' → logprob: -10.377601623535156
    5. 'q' → logprob: -12.002601623535156
    6. 'ush' → logprob: -12.752601623535156
    7. 'app' → logprob: -14.377601623535156
    8. '```' → logprob: -15.752601623535156
    9. '.push' → logprob: -15.877601623535156
    10. 'push' → logprob: -16.002601623535156

Token 519: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -5.9795445849886164e-05
    2. 'ap' → logprob: -9.750060081481934
    3. 'pp' → logprob: -13.750060081481934
    4. 'q' → logprob: -16.375059127807617
    5. 'a' → logprob: -16.500059127807617
    6. '```' → logprob: -16.625059127807617
    7. 'aq' → logprob: -17.125059127807617
    8. 'push' → logprob: -17.500059127807617
    9. 'ап' → logprob: -17.875059127807617
    10. 'apput' → logprob: -18.000059127807617

Token 520: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.001144145498983562
    2. 'app' → logprob: -7.126143932342529
    3. 'push' → logprob: -8.376144409179688
    4. 'op' → logprob: -10.126144409179688
    5. 'p' → logprob: -10.501144409179688
    6. 'pp' → logprob: -11.126144409179688
    7. 'he' → logprob: -11.376144409179688
    8. 'ap' → logprob: -12.251144409179688
    9. 'q' → logprob: -12.501144409179688
    10. 'sh' → logprob: -13.251144409179688

Token 521: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: 0.0
    2. 'Q' → logprob: -18.125
    3. '(' → logprob: -21.25
    4. '(
' → logprob: -22.625
    5. '```' → logprob: -22.75
    6. '<Q' → logprob: -23.125
    7. ',Q' → logprob: -23.125
    8. '(K' → logprob: -23.375
    9. '((' → logprob: -23.375
    10. '(Qt' → logprob: -23.625

Token 522: ',[' (ID: 35502)
  Prédit: '(Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -7.088138227118179e-05
    2. ',Q' → logprob: -10.125070571899414
    3. '([' → logprob: -11.250070571899414
    4. '[' → logprob: -11.375070571899414
    5. ',[' → logprob: -12.125070571899414
    6. ',' → logprob: -14.625070571899414
    7. 'Q' → logprob: -15.500070571899414
    8. '<Q' → logprob: -16.625070571899414
    9. '(' → logprob: -17.000070571899414
    10. '```' → logprob: -17.250070571899414

Token 523: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -4.4849443838757e-06
    2. ' cost' → logprob: -12.375004768371582
    3. '(cost' → logprob: -15.750004768371582
    4. '
' → logprob: -17.000003814697266
    5. '-cost' → logprob: -19.875003814697266
    6. 'color' → logprob: -20.500003814697266
    7. '   ' → logprob: -20.625003814697266
    8. '0' → logprob: -20.625003814697266
    9. 'code' → logprob: -21.125003814697266
    10. '```' → logprob: -21.375003814697266

Token 524: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.5048530030981055e-06
    2. ' +' → logprob: -13.500001907348633
    3. '[' → logprob: -17.500001907348633
    4. '1' → logprob: -17.500001907348633
    5. '```' → logprob: -17.875001907348633
    6. '...' → logprob: -18.000001907348633
    7. 'cost' → logprob: -18.125001907348633
    8. '
' → logprob: -18.750001907348633
    9. '()+' → logprob: -19.000001907348633
    10. '﻿' → logprob: -19.625001907348633

Token 525: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.630610641877865e-06
    2. ' ' → logprob: -12.875006675720215
    3. '+' → logprob: -13.125006675720215
    4. '```' → logprob: -14.375006675720215
    5. 'cost' → logprob: -14.500006675720215
    6. '   ' → logprob: -14.625006675720215
    7. '2' → logprob: -16.2500057220459
    8. 'to' → logprob: -16.3750057220459
    9. '...' → logprob: -17.3750057220459
    10. '
' → logprob: -17.8125057220459

Token 526: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.00016861737822182477
    2. '+' → logprob: -8.750168800354004
    3. ']' → logprob: -11.625168800354004
    4. ' ]' → logprob: -14.750168800354004
    5. '+]' → logprob: -14.750168800354004
    6. ')+' → logprob: -16.000167846679688
    7. ',' → logprob: -16.500167846679688
    8. '```' → logprob: -17.000167846679688
    9. '}+' → logprob: -17.500167846679688
    10. ']+=' → logprob: -17.500167846679688

Token 527: 'CC' (ID: 4433)
  Prédit: 'CC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CC' → logprob: 0.0
    2. ' CC' → logprob: -17.375
    3. '(CC' → logprob: -20.375
    4. 'cc' → logprob: -21.5
    5. '[' → logprob: -22.125
    6. '	CC' → logprob: -22.125
    7. 'C' → logprob: -23.0
    8. '_CC' → logprob: -24.625
    9. '   ' → logprob: -25.0
    10. 'CD' → logprob: -25.5

Token 528: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -1.9361264946837764e-07
    2. 'to' → logprob: -16.0
    3. '(to' → logprob: -20.625
    4. ' [' → logprob: -20.625
    5. ')[' → logprob: -20.875
    6. '   ' → logprob: -20.875
    7. '[' → logprob: -21.0
    8. '[token' → logprob: -21.125
    9. '[top' → logprob: -21.25
    10. '```' → logprob: -21.625

Token 529: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.01703101024031639
    2. '[to' → logprob: -4.142031192779541
    3. ')' → logprob: -7.517031192779541
    4. '])
' → logprob: -7.767031192779541
    5. ')])' → logprob: -11.642030715942383
    6. ' ])' → logprob: -12.267030715942383
    7. ')]' → logprob: -12.642030715942383
    8. '[' → logprob: -13.142030715942383
    9. ')
' → logprob: -13.267030715942383
    10. '])

' → logprob: -13.767030715942383

Token 530: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 531: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 532: ' USE' (ID: 20180)
  Prédit: 'USE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'USE' → logprob: -0.004832499660551548
    2. ' USE' → logprob: -5.5048322677612305
    3. 'USES' → logprob: -8.25483226776123
    4. 'use' → logprob: -9.37983226776123
    5. 'CS' → logprob: -9.62983226776123
    6. 'US' → logprob: -9.75483226776123
    7. 'S' → logprob: -10.00483226776123
    8. 'T' → logprob: -10.12983226776123
    9. 'x' → logprob: -10.12983226776123
    10. 'CC' → logprob: -10.25483226776123

Token 533: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.004134799353778362
    2. 'U' → logprob: -5.879134654998779
    3. 'S' → logprob: -7.254134654998779
    4. 'x' → logprob: -8.004135131835938
    5. 'CS' → logprob: -8.504135131835938
    6. 'c' → logprob: -10.629135131835938
    7. 'USE' → logprob: -11.254135131835938
    8. 'CL' → logprob: -11.504135131835938
    9. ' C' → logprob: -12.254135131835938
    10. 'CU' → logprob: -12.629135131835938

Token 534: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.6008427143096924
    2. '[y' → logprob: -0.8508427143096924
    3. '[z' → logprob: -3.7258427143096924
    4. '[' → logprob: -8.475842475891113
    5. '[c' → logprob: -9.100842475891113
    6. '```' → logprob: -9.225842475891113
    7. '[u' → logprob: -9.975842475891113
    8. '[C' → logprob: -11.600842475891113
    9. 'y' → logprob: -12.225842475891113
    10. 'x' → logprob: -12.475842475891113

Token 535: ']==' (ID: 34128)
  Prédit: ']=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.3142557442188263
    2. '==' → logprob: -1.314255714416504
    3. '[x' → logprob: -7.189255714416504
    4. '```' → logprob: -9.439255714416504
    5. '']==' → logprob: -9.814255714416504
    6. '   ' → logprob: -10.314255714416504
    7. '[' → logprob: -10.939255714416504
    8. '==
' → logprob: -11.064255714416504
    9. '][' → logprob: -11.439255714416504
    10. ']' → logprob: -11.564255714416504

Token 536: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.625
    3. '=' → logprob: -17.5
    4. '1' → logprob: -18.0
    5. '
' → logprob: -19.125
    6. '   ' → logprob: -19.25
    7. '==' → logprob: -20.0
    8. '۰' → logprob: -20.25
    9. '```' → logprob: -20.5
    10. '[' → logprob: -21.4375

Token 537: ':
' (ID: 734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003639511065557599
    2. '           ' → logprob: -6.2536396980285645
    3. '==' → logprob: -6.6286396980285645
    4. ':
' → logprob: -8.128639221191406
    5. '=
' → logprob: -9.878639221191406
    6. '```' → logprob: -11.753639221191406
    7. '[' → logprob: -11.878639221191406
    8. '=True' → logprob: -12.003639221191406
    9. '       ' → logprob: -12.503639221191406
    10. '+=' → logprob: -12.628639221191406

Token 538: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08607838302850723
    2. '=' → logprob: -3.211078405380249
    3. '       ' → logprob: -3.336078405380249
    4. '```' → logprob: -5.71107816696167
    5. '0' → logprob: -6.83607816696167
    6. '   ' → logprob: -6.96107816696167
    7. '1' → logprob: -8.211078643798828
    8. 'USE' → logprob: -8.336078643798828
    9. '               ' → logprob: -8.586078643798828
    10. ' ' → logprob: -9.211078643798828

Token 539: ' USE' (ID: 20180)
  Prédit: 'USE'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'USE' (adapté à ' USE') → logprob: -0.03334055468440056
    2. ' USE' → logprob: -3.5333404541015625
    3. '           ' → logprob: -5.6583404541015625
    4. '0' → logprob: -10.033340454101562
    5. '1' → logprob: -10.408340454101562
    6. ' ' → logprob: -11.783340454101562
    7. '               ' → logprob: -12.533340454101562
    8. '```' → logprob: -13.033340454101562
    9. '   ' → logprob: -13.158340454101562
    10. '       ' → logprob: -13.283340454101562

Token 540: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.8908587662735954e-05
    2. '[' → logprob: -11.250019073486328
    3. '=' → logprob: -12.875019073486328
    4. ' C' → logprob: -13.500019073486328
    5. '=C' → logprob: -14.500019073486328
    6. '[C' → logprob: -15.375019073486328
    7. 'U' → logprob: -15.625019073486328
    8. '0' → logprob: -15.875019073486328
    9. '           ' → logprob: -15.875019073486328
    10. '_' → logprob: -15.875019073486328

Token 541: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.246537173457909e-06
    2. '[C' → logprob: -13.500003814697266
    3. '```' → logprob: -14.000003814697266
    4. 'C' → logprob: -14.625003814697266
    5. '[' → logprob: -14.875003814697266
    6. '=' → logprob: -14.875003814697266
    7. 'x' → logprob: -15.500003814697266
    8. '=x' → logprob: -15.500003814697266
    9. '=[' → logprob: -15.875003814697266
    10. '   ' → logprob: -16.250003814697266

Token 542: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00020377879263833165
    2. ']=' → logprob: -8.500204086303711
    3. ')=' → logprob: -16.12520408630371
    4. '==' → logprob: -16.87520408630371
    5. '           ' → logprob: -17.25020408630371
    6. '+=' → logprob: -17.25020408630371
    7. '}=' → logprob: -17.50020408630371
    8. '```' → logprob: -17.87520408630371
    9. ']' → logprob: -18.25020408630371
    10. ']==' → logprob: -18.37520408630371

Token 543: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '0' → logprob: -18.875
    4. '   ' → logprob: -19.125
    5. '<|end|>' → logprob: -19.25
    6. '```' → logprob: -20.25
    7. '           ' → logprob: -20.375
    8. '=' → logprob: -21.25
    9. '[' → logprob: -21.375
    10. '#' → logprob: -22.375

Token 544: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01043042540550232
    2. '
' → logprob: -4.885430335998535
    3. 'for' → logprob: -6.510430335998535
    4. '<|end|>' → logprob: -7.510430335998535
    5. '               ' → logprob: -8.135430335998535
    6. '```' → logprob: -8.760430335998535
    7. ' for' → logprob: -8.885430335998535
    8. '                   ' → logprob: -10.010430335998535
    9. '            
' → logprob: -10.135430335998535
    10. '   ' → logprob: -10.260430335998535

Token 545: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03224137797951698
    2. '               ' → logprob: -4.032241344451904
    3. 'for' → logprob: -4.907241344451904
    4. '```' → logprob: -5.407241344451904
    5. ' for' → logprob: -7.282241344451904
    6. '       ' → logprob: -7.532241344451904
    7. '	       ' → logprob: -7.782241344451904
    8. '		' → logprob: -8.907241821289062
    9. '	for' → logprob: -9.032241821289062
    10. '
' → logprob: -9.782241821289062

Token 546: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.001596153131686151
    2. '           ' → logprob: -6.501595973968506
    3. ' for' → logprob: -9.376596450805664
    4. '       ' → logprob: -12.501596450805664
    5. '
' → logprob: -13.001596450805664
    6. '   ' → logprob: -13.126596450805664
    7. '```' → logprob: -13.876596450805664
    8. '               ' → logprob: -15.251596450805664
    9. '	for' → logprob: -17.251596450805664
    10. '          ' → logprob: -17.751596450805664

Token 547: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.03804149478673935
    2. ' to' → logprob: -3.288041591644287
    3. '	to' → logprob: -17.038042068481445
    4. '```' → logprob: -17.288042068481445
    5. '
' → logprob: -17.538042068481445
    6. '(to' → logprob: -18.538042068481445
    7. ' ' → logprob: -19.163042068481445
    8. 't' → logprob: -19.163042068481445
    9. '[to' → logprob: -19.163042068481445
    10. 'toc' → logprob: -19.413042068481445

Token 548: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.31326669454574585
    2. ' in' → logprob: -1.3132667541503906
    3. 'to' → logprob: -12.31326675415039
    4. ' ' → logprob: -15.81326675415039
    5. '```' → logprob: -16.18826675415039
    6. '	in' → logprob: -16.68826675415039
    7. '   ' → logprob: -17.18826675415039
    8. '
' → logprob: -17.18826675415039
    9. ' ' → logprob: -17.93826675415039
    10. '  ' → logprob: -17.93826675415039

Token 549: ' CS' (ID: 15903)
  Prédit: 'CC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CC' → logprob: -0.015722984448075294
    2. 'CS' → logprob: -4.640722751617432
    3. ' CC' → logprob: -5.140722751617432
    4. ' CS' → logprob: -9.64072322845459
    5. '	CC' → logprob: -11.51572322845459
    6. ' ' → logprob: -12.64072322845459
    7. '   ' → logprob: -12.89072322845459
    8. 'cc' → logprob: -13.14072322845459
    9. 'C' → logprob: -13.32822322845459
    10. 'CSC' → logprob: -13.64072322845459

Token 550: '_CL' (ID: 18374)
  Prédit: '_CL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CL' → logprob: -1.5570885807392187e-05
    2. '_C' → logprob: -12.000015258789062
    3. 'CL' → logprob: -12.500015258789062
    4. '_CS' → logprob: -13.000015258789062
    5. '_CC' → logprob: -13.375015258789062
    6. '_S' → logprob: -15.500015258789062
    7. '_cl' → logprob: -15.875015258789062
    8. '```' → logprob: -15.875015258789062
    9. '_COL' → logprob: -16.125015258789062
    10. '   ' → logprob: -16.250015258789062

Token 551: 'IST' (ID: 6258)
  Prédit: 'IST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IST' → logprob: -9.088346359931165e-07
    2. 'ist' → logprob: -14.625000953674316
    3. 'LIST' → logprob: -15.500000953674316
    4. 'I' → logprob: -17.125
    5. 'ISTS' → logprob: -17.125
    6. 'ST' → logprob: -17.375
    7. '[' → logprob: -17.625
    8. 'Ist' → logprob: -17.625
    9. ' IST' → logprob: -17.875
    10. 'ISTA' → logprob: -18.625

Token 552: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.04950244352221489
    2. '[to' → logprob: -3.174502372741699
    3. '[y' → logprob: -5.174502372741699
    4. '[' → logprob: -7.674502372741699
    5. '[C' → logprob: -8.7995023727417
    6. '[c' → logprob: -9.0495023727417
    7. '[u' → logprob: -11.1745023727417
    8. '[t' → logprob: -11.2995023727417
    9. '[z' → logprob: -11.5495023727417
    10. 'to' → logprob: -11.7995023727417

Token 553: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.18137618899345398
    2. ']:
' → logprob: -2.0563762187957764
    3. ':' → logprob: -3.3063762187957764
    4. ']:' → logprob: -7.056375980377197
    5. '               ' → logprob: -8.056376457214355
    6. ']' → logprob: -9.431376457214355
    7. '           ' → logprob: -11.306376457214355
    8. '):
' → logprob: -11.806376457214355
    9. '```' → logprob: -11.806376457214355
    10. '   ' → logprob: -12.681376457214355

Token 554: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00140511360950768
    2. 'if' → logprob: -6.751405239105225
    3. '           ' → logprob: -8.876404762268066
    4. '                   ' → logprob: -10.126404762268066
    5. ' if' → logprob: -11.001404762268066
    6. '   ' → logprob: -11.501404762268066
    7. '       ' → logprob: -11.501404762268066
    8. '```' → logprob: -11.501404762268066
    9. '<|end|>' → logprob: -12.751404762268066
    10. '              ' → logprob: -13.126404762268066

Token 555: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.002455322304740548
    2. '               ' → logprob: -6.252455234527588
    3. ' if' → logprob: -8.002455711364746
    4. '                   ' → logprob: -9.002455711364746
    5. '           ' → logprob: -10.252455711364746
    6. '       ' → logprob: -11.627455711364746
    7. '   ' → logprob: -12.002455711364746
    8. '```' → logprob: -12.002455711364746
    9. '<|end|>' → logprob: -12.377455711364746
    10. '              ' → logprob: -13.252455711364746

Token 556: ' MIN' (ID: 27151)
  Prédit: 'MIN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MIN' → logprob: -0.16041086614131927
    2. ' MIN' → logprob: -1.9104108810424805
    3. 'cost' → logprob: -9.66041088104248
    4. ' cost' → logprob: -9.78541088104248
    5. '   ' → logprob: -10.16041088104248
    6. 'if' → logprob: -12.41041088104248
    7. ' ' → logprob: -12.78541088104248
    8. ' if' → logprob: -12.91041088104248
    9. '    ' → logprob: -12.91041088104248
    10. '  ' → logprob: -13.16041088104248

Token 557: 'C' (ID: 34)
  Prédit: 'IN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IN' → logprob: -0.46282973885536194
    2. 'MIN' → logprob: -1.3378297090530396
    3. 'INC' → logprob: -2.462829828262329
    4. 'N' → logprob: -4.08782958984375
    5. 'C' → logprob: -5.33782958984375
    6. 'INT' → logprob: -7.58782958984375
    7. 'NC' → logprob: -8.08782958984375
    8. 'NT' → logprob: -9.21282958984375
    9. 'NOT' → logprob: -9.46282958984375
    10. 'in' → logprob: -9.58782958984375

Token 558: 'OST' (ID: 7689)
  Prédit: 'MIN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MIN' → logprob: -0.539072573184967
    2. 'cost' → logprob: -1.5390725135803223
    3. 'C' → logprob: -1.6640725135803223
    4. 'IN' → logprob: -5.289072513580322
    5. 'N' → logprob: -5.539072513580322
    6. 'OST' → logprob: -5.914072513580322
    7. 'INC' → logprob: -8.16407299041748
    8. '(cost' → logprob: -8.41407299041748
    9. 'OC' → logprob: -9.16407299041748
    10. 'INT' → logprob: -9.41407299041748

Token 559: '_CS' (ID: 91377)
  Prédit: '_CS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CS' → logprob: -0.011098050512373447
    2. 'CS' → logprob: -4.6360979080200195
    3. '[to' → logprob: -6.7610979080200195
    4. 'to' → logprob: -9.38609790802002
    5. '_cs' → logprob: -10.13609790802002
    6. '[' → logprob: -11.01109790802002
    7. '-CS' → logprob: -11.26109790802002
    8. 'cs' → logprob: -11.51109790802002
    9. ' CS' → logprob: -11.51109790802002
    10. '_CC' → logprob: -12.63609790802002

Token 560: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -3.128163257315464e-07
    2. 'to' → logprob: -15.375
    3. '[from' → logprob: -18.625
    4. '>' → logprob: -19.25
    5. '(to' → logprob: -19.25
    6. '[' → logprob: -20.0
    7. '[
' → logprob: -20.125
    8. '[top' → logprob: -20.375
    9. ' [' → logprob: -20.875
    10. '   ' → logprob: -21.125

Token 561: ']>' (ID: 54651)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -7.584239938296378e-06
    2. '[' → logprob: -12.500007629394531
    3. ' >' → logprob: -13.000007629394531
    4. ']>' → logprob: -14.500007629394531
    5. '>[' → logprob: -14.625007629394531
    6. '[]>' → logprob: -15.500007629394531
    7. '>
' → logprob: -16.00000762939453
    8. '   ' → logprob: -16.00000762939453
    9. ')>' → logprob: -17.25000762939453
    10. '[c' → logprob: -17.75000762939453

Token 562: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.0206720617134124e-05
    2. ' cost' → logprob: -11.50001049041748
    3. '(cost' → logprob: -19.250009536743164
    4. 'code' → logprob: -20.875009536743164
    5. '   ' → logprob: -21.750009536743164
    6. 'color' → logprob: -23.750009536743164
    7. '
' → logprob: -23.875009536743164
    8. '-cost' → logprob: -24.125009536743164
    9. 'count' → logprob: -24.625009536743164
    10. '.cost' → logprob: -24.625009536743164

Token 563: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -13.62500286102295
    3. '>' → logprob: -14.00000286102295
    4. '```' → logprob: -15.25000286102295
    5. ' +' → logprob: -16.125001907348633
    6. '+
' → logprob: -17.625001907348633
    7. '-' → logprob: -17.812501907348633
    8. '   ' → logprob: -17.937501907348633
    9. ']+' → logprob: -18.125001907348633
    10. '1' → logprob: -18.375001907348633

Token 564: '1' (ID: 16)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0002469158498570323
    2. '1' → logprob: -8.37524700164795
    3. ' cost' → logprob: -11.12524700164795
    4. '(cost' → logprob: -14.12524700164795
    5. '0' → logprob: -14.75024700164795
    6. '+' → logprob: -15.00024700164795
    7. '   ' → logprob: -16.375246047973633
    8. ' ' → logprob: -17.250246047973633
    9. '
' → logprob: -17.375246047973633
    10. '```' → logprob: -18.250246047973633

Token 565: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09906774759292603
    2. '=' → logprob: -3.0990676879882812
    3. ':
' → logprob: -3.5990676879882812
    4. ':' → logprob: -4.099067687988281
    5. '                       ' → logprob: -5.724067687988281
    6. '               ' → logprob: -7.349067687988281
    7. '                    ' → logprob: -8.349067687988281
    8. '   ' → logprob: -8.724067687988281
    9. '```' → logprob: -8.724067687988281
    10. '[' → logprob: -8.849067687988281

Token 566: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01772456057369709
    2. 'MIN' → logprob: -4.267724514007568
    3. '               ' → logprob: -6.142724514007568
    4. '                       ' → logprob: -6.892724514007568
    5. '```' → logprob: -9.017724990844727
    6. '   ' → logprob: -9.392724990844727
    7. '           ' → logprob: -9.767724990844727
    8. '                  ' → logprob: -9.767724990844727
    9. '                    ' → logprob: -10.767724990844727
    10. '                 ' → logprob: -11.267724990844727

Token 567: ' MIN' (ID: 27151)
  Prédit: 'MIN'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MIN' (adapté à ' MIN') → logprob: -3.531315314830863e-06
    2. '                   ' → logprob: -13.125003814697266
    3. ' MIN' → logprob: -13.500003814697266
    4. '               ' → logprob: -16.250003814697266
    5. '   ' → logprob: -17.250003814697266
    6. '           ' → logprob: -18.125003814697266
    7. '```' → logprob: -18.875003814697266
    8. '                       ' → logprob: -19.750003814697266
    9. '       ' → logprob: -20.125003814697266
    10. '
' → logprob: -20.375003814697266

Token 568: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -2.951771421066951e-05
    2. '_COST' → logprob: -11.125029563903809
    3. 'cost' → logprob: -11.625029563903809
    4. '_cost' → logprob: -13.500029563903809
    5. '```' → logprob: -13.500029563903809
    6. '
' → logprob: -14.000029563903809
    7. '``' → logprob: -14.500029563903809
    8. 'COS' → logprob: -15.625029563903809
    9. ' C' → logprob: -15.750029563903809
    10. ' COST' → logprob: -15.750029563903809

Token 569: 'OST' (ID: 7689)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.02071518823504448
    2. 'OST' → logprob: -3.8957152366638184
    3. '_COST' → logprob: -9.52071475982666
    4. 'O' → logprob: -9.89571475982666
    5. 'OC' → logprob: -11.39571475982666
    6. 'OT' → logprob: -11.39571475982666
    7. ' COST' → logprob: -11.77071475982666
    8. 'cost' → logprob: -11.89571475982666
    9. '_cost' → logprob: -12.39571475982666
    10. 'ost' → logprob: -13.27071475982666

Token 570: '_CS' (ID: 91377)
  Prédit: '_CS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CS' → logprob: -0.12701870501041412
    2. 'CS' → logprob: -2.127018690109253
    3. '_COST' → logprob: -9.752018928527832
    4. 'cost' → logprob: -11.377018928527832
    5. '_cs' → logprob: -12.002018928527832
    6. ' CS' → logprob: -12.252018928527832
    7. '_C' → logprob: -12.627018928527832
    8. 'C' → logprob: -12.627018928527832
    9. 'cs' → logprob: -13.252018928527832
    10. 'Cs' → logprob: -14.377018928527832

Token 571: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.00872613675892353
    2. '=' → logprob: -4.758726119995117
    3. 'CS' → logprob: -9.883726119995117
    4. ' CS' → logprob: -10.758726119995117
    5. 'to' → logprob: -11.008726119995117
    6. '_CS' → logprob: -11.633726119995117
    7. '_cs' → logprob: -12.133726119995117
    8. 'cs' → logprob: -13.508726119995117
    9. '(to' → logprob: -13.508726119995117
    10. 'cost' → logprob: -13.508726119995117

Token 572: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1756367712223437e-05
    2. '=min' → logprob: -11.625011444091797
    3. '=sys' → logprob: -13.625011444091797
    4. ']=' → logprob: -14.250011444091797
    5. '=
' → logprob: -15.375011444091797
    6. '=max' → logprob: -15.875011444091797
    7. '=cut' → logprob: -16.125011444091797
    8. '=len' → logprob: -16.625011444091797
    9. 'cost' → logprob: -16.625011444091797
    10. '=C' → logprob: -17.000011444091797

Token 573: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.2664456789934775e-06
    2. ' cost' → logprob: -13.625000953674316
    3. '(cost' → logprob: -20.250001907348633
    4. '   ' → logprob: -21.375001907348633
    5. '```' → logprob: -21.750001907348633
    6. '
' → logprob: -22.000001907348633
    7. 'code' → logprob: -22.375001907348633
    8. '0' → logprob: -23.125001907348633
    9. '1' → logprob: -23.500001907348633
    10. '-cost' → logprob: -23.625001907348633

Token 574: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.6166903151315637e-05
    2. '1' → logprob: -12.125016212463379
    3. '```' → logprob: -12.750016212463379
    4. ' +' → logprob: -12.875016212463379
    5. '[' → logprob: -13.375016212463379
    6. '   ' → logprob: -13.625016212463379
    7. '-' → logprob: -13.875016212463379
    8. '...' → logprob: -14.875016212463379
    9. 'cost' → logprob: -16.000015258789062
    10. ']+' → logprob: -16.000015258789062

Token 575: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005653033731505275
    2. 'cost' → logprob: -7.500565528869629
    3. '```' → logprob: -11.875565528869629
    4. ' ' → logprob: -13.375565528869629
    5. '2' → logprob: -14.250565528869629
    6. '   ' → logprob: -14.500565528869629
    7. '+' → logprob: -14.625565528869629
    8. '
' → logprob: -14.750565528869629
    9. '0' → logprob: -14.750565528869629
    10. '3' → logprob: -15.125565528869629

Token 576: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0018113177502527833
    2. 'heap' → logprob: -6.376811504364014
    3. '```' → logprob: -10.501811027526855
    4. '               ' → logprob: -10.501811027526855
    5. '                       ' → logprob: -10.626811027526855
    6. '                    ' → logprob: -11.876811027526855
    7. '                  ' → logprob: -12.001811027526855
    8. ' heap' → logprob: -12.001811027526855
    9. '           ' → logprob: -12.126811027526855
    10. '				' → logprob: -13.376811027526855

Token 577: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00358451041392982
    2. 'heap' → logprob: -5.753584384918213
    3. '```' → logprob: -8.628584861755371
    4. '                       ' → logprob: -8.878584861755371
    5. '               ' → logprob: -10.253584861755371
    6. '                  ' → logprob: -11.378584861755371
    7. '                    ' → logprob: -11.503584861755371
    8. '           ' → logprob: -12.003584861755371
    9. '				' → logprob: -12.003584861755371
    10. ' heap' → logprob: -12.378584861755371

Token 578: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -4.723352049040841e-06
    2. '```' → logprob: -13.250004768371582
    3. 'he' → logprob: -13.625004768371582
    4. '                   ' → logprob: -14.000004768371582
    5. ' heap' → logprob: -14.250004768371582
    6. '   ' → logprob: -16.375003814697266
    7. '
' → logprob: -17.250003814697266
    8. '               ' → logprob: -17.500003814697266
    9. '``' → logprob: -17.500003814697266
    10. '           ' → logprob: -17.875003814697266

Token 579: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.3795937522663735e-05
    2. '.he' → logprob: -11.50002384185791
    3. 'he' → logprob: -11.62502384185791
    4. 'p' → logprob: -12.87502384185791
    5. 'push' → logprob: -14.87502384185791
    6. 'heap' → logprob: -15.00002384185791
    7. 'ap' → logprob: -15.25002384185791
    8. '```' → logprob: -15.25002384185791
    9. '.heap' → logprob: -15.37502384185791
    10. 'app' → logprob: -15.50002384185791

Token 580: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.21986521780490875
    2. 'he' → logprob: -2.844865322113037
    3. 'app' → logprob: -2.844865322113037
    4. 'q' → logprob: -2.969865322113037
    5. 'ush' → logprob: -4.344865322113037
    6. 'ap' → logprob: -4.844865322113037
    7. 'p' → logprob: -5.969865322113037
    8. 'heap' → logprob: -6.344865322113037
    9. 'push' → logprob: -6.344865322113037
    10. '.heap' → logprob: -6.594865322113037

Token 581: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -7.362307223957032e-05
    2. 'ap' → logprob: -9.750073432922363
    3. 'pp' → logprob: -11.125073432922363
    4. 'p' → logprob: -15.750073432922363
    5. 'q' → logprob: -16.00007438659668
    6. 'a' → logprob: -16.62507438659668
    7. '```' → logprob: -16.87507438659668
    8. 'push' → logprob: -17.00007438659668
    9. 'ush' → logprob: -17.12507438659668
    10. 'appen' → logprob: -18.37507438659668

Token 582: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.002069371985271573
    2. 'app' → logprob: -6.752069473266602
    3. 'push' → logprob: -7.752069473266602
    4. 'op' → logprob: -8.752069473266602
    5. 'sh' → logprob: -8.752069473266602
    6. 'pp' → logprob: -9.502069473266602
    7. 'p' → logprob: -9.752069473266602
    8. '```' → logprob: -12.002069473266602
    9. 'q' → logprob: -12.252069473266602
    10. 'he' → logprob: -13.377069473266602

Token 583: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: 0.0
    2. 'Q' → logprob: -17.875
    3. '(
' → logprob: -22.375
    4. '(K' → logprob: -22.5
    5. '```' → logprob: -22.5
    6. '   ' → logprob: -22.875
    7. '<Q' → logprob: -22.875
    8. ',Q' → logprob: -23.25
    9. '(' → logprob: -23.375
    10. '	Q' → logprob: -23.5

Token 584: ',[' (ID: 35502)
  Prédit: '(Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(Q' → logprob: -7.941850526549388e-06
    2. 'Q' → logprob: -11.750007629394531
    3. '[' → logprob: -18.12500762939453
    4. ',Q' → logprob: -18.25000762939453
    5. '<Q' → logprob: -18.87500762939453
    6. '```' → logprob: -19.37500762939453
    7. ' Q' → logprob: -19.62500762939453
    8. '	Q' → logprob: -19.87500762939453
    9. '([' → logprob: -20.50000762939453
    10. '   ' → logprob: -20.75000762939453

Token 585: 'cost' (ID: 33457)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -1.2948405128554441e-05
    2. '[' → logprob: -11.87501335144043
    3. 'cost' → logprob: -12.75001335144043
    4. '(cost' → logprob: -12.87501335144043
    5. ' Q' → logprob: -15.12501335144043
    6. '[c' → logprob: -15.50001335144043
    7. '(Q' → logprob: -16.12501335144043
    8. '(' → logprob: -19.75001335144043
    9. '```' → logprob: -19.87501335144043
    10. ' cost' → logprob: -20.25001335144043

Token 586: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006763351848348975
    2. '[' → logprob: -7.750676155090332
    3. 'q' → logprob: -9.375676155090332
    4. '+[' → logprob: -9.375676155090332
    5. '-' → logprob: -10.125676155090332
    6. '(' → logprob: -11.875676155090332
    7. ' +' → logprob: -12.625676155090332
    8. '[q' → logprob: -12.750676155090332
    9. '+C' → logprob: -13.000676155090332
    10. '(heap' → logprob: -13.000676155090332

Token 587: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. '+' → logprob: -12.125009536743164
    3. 'cost' → logprob: -13.875009536743164
    4. '(Q' → logprob: -14.375009536743164
    5. '(' → logprob: -14.625009536743164
    6. '```' → logprob: -14.875009536743164
    7. ' ' → logprob: -15.000009536743164
    8. '   ' → logprob: -15.125009536743164
    9. 'Q' → logprob: -15.125009536743164
    10. '2' → logprob: -16.375009536743164

Token 588: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.026404913514852524
    2. '+' → logprob: -3.651404857635498
    3. ')+' → logprob: -10.151405334472656
    4. ']' → logprob: -10.651405334472656
    5. '(C' → logprob: -10.776405334472656
    6. '[' → logprob: -12.151405334472656
    7. '(Q' → logprob: -12.651405334472656
    8. '()+' → logprob: -12.651405334472656
    9. '+]' → logprob: -12.776405334472656
    10. '}+' → logprob: -12.901405334472656

Token 589: 'CS' (ID: 9310)
  Prédit: 'CS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CS' → logprob: -1.2664456789934775e-06
    2. ' CS' → logprob: -13.750000953674316
    3. 'CC' → logprob: -16.375001907348633
    4. '   ' → logprob: -19.375001907348633
    5. 'C' → logprob: -19.875001907348633
    6. 'cs' → logprob: -19.875001907348633
    7. '_CS' → logprob: -20.375001907348633
    8. 'SC' → logprob: -20.875001907348633
    9. '-CS' → logprob: -21.125001907348633
    10. 'Cs' → logprob: -21.625001907348633

Token 590: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.00029744720086455345
    2. 'to' → logprob: -8.125297546386719
    3. '(to' → logprob: -14.125297546386719
    4. '[' → logprob: -14.625297546386719
    5. ')' → logprob: -16.37529754638672
    6. 'CS' → logprob: -16.50029754638672
    7. ',to' → logprob: -17.25029754638672
    8. ' to' → logprob: -17.75029754638672
    9. '[from' → logprob: -18.62529754638672
    10. 'cs' → logprob: -18.75029754638672

Token 591: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.014844478107988834
    2. ')' → logprob: -4.2648444175720215
    3. '])
' → logprob: -7.5148444175720215
    4. ')]' → logprob: -9.51484489440918
    5. '])

' → logprob: -10.88984489440918
    6. ')])' → logprob: -11.13984489440918
    7. ')
' → logprob: -11.51484489440918
    8. ']' → logprob: -11.88984489440918
    9. '))' → logprob: -13.01484489440918
    10. '       ' → logprob: -13.13984489440918

Token 592: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6486069560050964
    2. '           ' → logprob: -1.6486070156097412
    3. '<|end|>' → logprob: -2.273607015609741
    4. 'for' → logprob: -2.398607015609741
    5. 'if' → logprob: -3.648607015609741
    6. '```' → logprob: -3.898607015609741
    7. '   ' → logprob: -4.023606777191162
    8. '
' → logprob: -4.648606777191162
    9. ')' → logprob: -5.523606777191162
    10. '               ' → logprob: -5.523606777191162

Token 593: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011800680309534073
    2. ' for' → logprob: -4.761800765991211
    3. '           ' → logprob: -5.761800765991211
    4. '       ' → logprob: -11.011800765991211
    5. '               ' → logprob: -12.261800765991211
    6. '                   ' → logprob: -12.386800765991211
    7. '[' → logprob: -12.886800765991211
    8. '<|end|>' → logprob: -13.136800765991211
    9. '```' → logprob: -13.261800765991211
    10. '   ' → logprob: -13.511800765991211

Token 594: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.07889066636562347
    2. ' to' → logprob: -2.578890562057495
    3. '	to' → logprob: -14.828890800476074
    4. '[to' → logprob: -15.578890800476074
    5. '(to' → logprob: -16.078889846801758
    6. '```' → logprob: -16.328889846801758
    7. '   ' → logprob: -16.453889846801758
    8. ' ' → logprob: -16.828889846801758
    9. ' ' → logprob: -17.828889846801758
    10. 'toc' → logprob: -18.078889846801758

Token 595: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.31328585743904114
    2. ' in' → logprob: -1.3132858276367188
    3. 'to' → logprob: -11.438285827636719
    4. '   ' → logprob: -12.188285827636719
    5. ' ' → logprob: -12.813285827636719
    6. '  ' → logprob: -12.938285827636719
    7. 'CC' → logprob: -14.313285827636719
    8. 'IN' → logprob: -14.438285827636719
    9. ' CC' → logprob: -14.688285827636719
    10. '```' → logprob: -14.938285827636719

Token 596: ' CC' (ID: 21547)
  Prédit: 'CC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CC' → logprob: -0.008615872822701931
    2. ' CC' → logprob: -4.758615970611572
    3. '	CC' → logprob: -13.758615493774414
    4. '_CC' → logprob: -15.883615493774414
    5. ' ' → logprob: -16.258615493774414
    6. 'cc' → logprob: -17.008615493774414
    7. '(CC' → logprob: -17.383615493774414
    8. '   ' → logprob: -18.008615493774414
    9. '
' → logprob: -18.008615493774414
    10. 'C' → logprob: -18.633615493774414

Token 597: '_CL' (ID: 18374)
  Prédit: '_CL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CL' → logprob: -0.0011706985533237457
    2. '_CC' → logprob: -6.751170635223389
    3. '_cl' → logprob: -15.876171112060547
    4. '_COL' → logprob: -16.001171112060547
    5. '_UL' → logprob: -16.376171112060547
    6. '_C' → logprob: -16.501171112060547
    7. '[_' → logprob: -17.001171112060547
    8. '[' → logprob: -17.501171112060547
    9. '_CH' → logprob: -17.876171112060547
    10. '```' → logprob: -18.251171112060547

Token 598: 'IST' (ID: 6258)
  Prédit: 'IST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IST' → logprob: -0.0002870801545213908
    2. 'LIST' → logprob: -8.750287055969238
    3. '_LIST' → logprob: -9.625287055969238
    4. 'ISTS' → logprob: -10.375287055969238
    5. 'ist' → logprob: -11.250287055969238
    6. '[' → logprob: -11.500287055969238
    7. 'ISTA' → logprob: -13.000287055969238
    8. '_list' → logprob: -13.250287055969238
    9. '[i' → logprob: -13.375287055969238
    10. '[y' → logprob: -14.125287055969238

Token 599: '[x' (ID: 17295)
  Prédit: '[to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.02089989371597767
    2. '[y' → logprob: -4.145899772644043
    3. '[x' → logprob: -5.395899772644043
    4. '[' → logprob: -8.645899772644043
    5. '[z' → logprob: -9.020899772644043
    6. '[t' → logprob: -11.020899772644043
    7. 'to' → logprob: -13.020899772644043
    8. '```' → logprob: -13.520899772644043
    9. '(to' → logprob: -14.770899772644043
    10. '[u' → logprob: -15.395899772644043

Token 600: ']:
' (ID: 22152)
  Prédit: '[to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.8890761137008667
    2. ':' → logprob: -1.0140761137008667
    3. ':
' → logprob: -2.3890762329101562
    4. '               ' → logprob: -3.2640762329101562
    5. '[' → logprob: -3.5140762329101562
    6. ']:' → logprob: -3.6390762329101562
    7. ']:
' → logprob: -4.389076232910156
    8. '[y' → logprob: -5.139076232910156
    9. 'to' → logprob: -5.514076232910156
    10. ']' → logprob: -5.639076232910156

Token 601: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.034101702272892
    2. 'if' → logprob: -3.409101724624634
    3. ' if' → logprob: -8.409101486206055
    4. '[' → logprob: -10.034101486206055
    5. '           ' → logprob: -10.034101486206055
    6. '```' → logprob: -10.034101486206055
    7. '                   ' → logprob: -10.409101486206055
    8. '[to' → logprob: -10.659101486206055
    9. 'to' → logprob: -10.784101486206055
    10. '              ' → logprob: -11.659101486206055

Token 602: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.012906662188470364
    2. '               ' → logprob: -4.887906551361084
    3. ' if' → logprob: -5.262906551361084
    4. '                   ' → logprob: -9.762907028198242
    5. '           ' → logprob: -10.262907028198242
    6. '```' → logprob: -12.762907028198242
    7. '              ' → logprob: -13.137907028198242
    8. '   ' → logprob: -13.262907028198242
    9. '<|end|>' → logprob: -13.262907028198242
    10. '[' → logprob: -13.762907028198242

Token 603: ' MIN' (ID: 27151)
  Prédit: 'MIN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MIN' → logprob: -0.0007513784803450108
    2. ' MIN' → logprob: -7.250751495361328
    3. 'cost' → logprob: -10.125751495361328
    4. ' cost' → logprob: -13.500751495361328
    5. '   ' → logprob: -17.625751495361328
    6. 'M' → logprob: -17.750751495361328
    7. 'min' → logprob: -18.125751495361328
    8. 'MID' → logprob: -18.125751495361328
    9. '_MIN' → logprob: -19.625751495361328
    10. 'MAX' → logprob: -19.875751495361328

Token 604: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0014491601614281535
    2. '_cost' → logprob: -7.251449108123779
    3. '_COST' → logprob: -7.876449108123779
    4. 'cost' → logprob: -8.001449584960938
    5. '_C' → logprob: -12.126449584960938
    6. '-cost' → logprob: -12.376449584960938
    7. '_' → logprob: -12.751449584960938
    8. '[' → logprob: -13.001449584960938
    9. ' COST' → logprob: -13.876449584960938
    10. '
' → logprob: -13.876449584960938

Token 605: 'OST' (ID: 7689)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.18198543787002563
    2. '_COST' → logprob: -2.181985378265381
    3. 'cost' → logprob: -3.181985378265381
    4. '_cost' → logprob: -4.806985378265381
    5. '[' → logprob: -6.431985378265381
    6. '>' → logprob: -7.056985378265381
    7. 'CC' → logprob: -7.556985378265381
    8. '_C' → logprob: -8.056985855102539
    9. ' COST' → logprob: -9.306985855102539
    10. '_CC' → logprob: -9.681985855102539

Token 606: '_CC' (ID: 76416)
  Prédit: '_CC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CC' → logprob: -0.0001129602751461789
    2. 'CC' → logprob: -9.500112533569336
    3. 'cost' → logprob: -11.250112533569336
    4. '_CS' → logprob: -11.375112533569336
    5. '_cc' → logprob: -12.875112533569336
    6. 'cc' → logprob: -13.000112533569336
    7. '_COST' → logprob: -13.125112533569336
    8. '	CC' → logprob: -13.250112533569336
    9. '>' → logprob: -13.625112533569336
    10. '[to' → logprob: -13.875112533569336

Token 607: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -2.6895233531831764e-05
    2. 'to' → logprob: -10.62502670288086
    3. '(to' → logprob: -13.75002670288086
    4. '[' → logprob: -13.87502670288086
    5. '>' → logprob: -15.25002670288086
    6. '```' → logprob: -17.00002670288086
    7. ',to' → logprob: -17.50002670288086
    8. '   ' → logprob: -18.00002670288086
    9. '	to' → logprob: -18.12502670288086
    10. ' to' → logprob: -18.37502670288086

Token 608: ']>' (ID: 54651)
  Prédit: '[to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.47413370013237
    2. '>' → logprob: -0.9741337299346924
    3. 'to' → logprob: -10.599133491516113
    4. ' >' → logprob: -11.224133491516113
    5. '>[' → logprob: -12.099133491516113
    6. '(to' → logprob: -12.224133491516113
    7. ']>' → logprob: -12.849133491516113
    8. '[' → logprob: -12.974133491516113
    9. '[]>' → logprob: -13.599133491516113
    10. '[top' → logprob: -15.099133491516113

Token 609: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.5048530030981055e-06
    2. ' cost' → logprob: -13.500001907348633
    3. '(cost' → logprob: -18.250001907348633
    4. '
' → logprob: -19.875001907348633
    5. 'code' → logprob: -20.500001907348633
    6. '   ' → logprob: -22.625001907348633
    7. '```' → logprob: -23.250001907348633
    8. 'cos' → logprob: -23.250001907348633
    9. '0' → logprob: -23.625001907348633
    10. '_cost' → logprob: -24.000001907348633

Token 610: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.8325677703833207e-05
    2. '[' → logprob: -11.375028610229492
    3. 'cost' → logprob: -11.375028610229492
    4. '1' → logprob: -12.375028610229492
    5. ' +' → logprob: -15.000028610229492
    6. '(cost' → logprob: -15.500028610229492
    7. '   ' → logprob: -15.625028610229492
    8. '```' → logprob: -15.750028610229492
    9. ' cost' → logprob: -16.125028610229492
    10. '+
' → logprob: -16.375028610229492

Token 611: '1' (ID: 16)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.00042662365012802184
    2. '1' → logprob: -8.125426292419434
    3. ' cost' → logprob: -9.125426292419434
    4. '(cost' → logprob: -10.750426292419434
    5. '0' → logprob: -17.00042724609375
    6. ' ' → logprob: -17.37542724609375
    7. 'code' → logprob: -17.50042724609375
    8. '
' → logprob: -18.00042724609375
    9. '```' → logprob: -18.25042724609375
    10. '_cost' → logprob: -18.25042724609375

Token 612: ':
' (ID: 734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -7.107425062713446e-06
    2. '                   ' → logprob: -12.875006675720215
    3. '=cut' → logprob: -13.875006675720215
    4. '=c' → logprob: -14.000006675720215
    5. ' =' → logprob: -14.625006675720215
    6. '=min' → logprob: -14.875006675720215
    7. '(cost' → logprob: -15.125006675720215
    8. '=color' → logprob: -15.125006675720215
    9. '=count' → logprob: -15.625006675720215
    10. '=size' → logprob: -15.875006675720215

Token 613: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5773615837097168
    2. 'MIN' → logprob: -0.8273615837097168
    3. '               ' → logprob: -7.077361583709717
    4. '                       ' → logprob: -7.952361583709717
    5. ' MIN' → logprob: -8.827362060546875
    6. '                    ' → logprob: -10.702362060546875
    7. '                  ' → logprob: -11.077362060546875
    8. '           ' → logprob: -11.202362060546875
    9. '   ' → logprob: -11.577362060546875
    10. '                ' → logprob: -12.577362060546875

Token 614: ' MIN' (ID: 27151)
  Prédit: 'MIN'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MIN' (adapté à ' MIN') → logprob: -1.5048530030981055e-06
    2. ' MIN' → logprob: -13.500001907348633
    3. '                   ' → logprob: -16.500001907348633
    4. '               ' → logprob: -19.375001907348633
    5. '   ' → logprob: -19.750001907348633
    6. '           ' → logprob: -21.875001907348633
    7. '_MIN' → logprob: -22.250001907348633
    8. 'min' → logprob: -22.375001907348633
    9. '                       ' → logprob: -22.500001907348633
    10. 'MAX' → logprob: -22.750001907348633

Token 615: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -6.837811088189483e-05
    2. '_COST' → logprob: -10.125068664550781
    3. 'cost' → logprob: -11.375068664550781
    4. 'MIN' → logprob: -12.250068664550781
    5. '_cost' → logprob: -12.375068664550781
    6. 'O' → logprob: -13.875068664550781
    7. '
' → logprob: -14.000068664550781
    8. '```' → logprob: -14.125068664550781
    9. ' COST' → logprob: -14.375068664550781
    10. '   ' → logprob: -14.750068664550781

Token 616: 'OST' (ID: 7689)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.01829778403043747
    2. 'OST' → logprob: -4.2682976722717285
    3. '_COST' → logprob: -5.7682976722717285
    4. 'cost' → logprob: -7.6432976722717285
    5. '_cost' → logprob: -8.393298149108887
    6. 'CC' → logprob: -9.518298149108887
    7. 'OC' → logprob: -9.643298149108887
    8. ' COST' → logprob: -9.768298149108887
    9. 'O' → logprob: -10.143298149108887
    10. 'ost' → logprob: -10.768298149108887

Token 617: '_CC' (ID: 76416)
  Prédit: '_CC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CC' → logprob: -0.020099986344575882
    2. 'CC' → logprob: -4.020100116729736
    3. '_C' → logprob: -7.520100116729736
    4. '_CS' → logprob: -7.520100116729736
    5. '_COST' → logprob: -8.270099639892578
    6. '_cc' → logprob: -8.895099639892578
    7. 'heap' → logprob: -9.020099639892578
    8. 'push' → logprob: -9.145099639892578
    9. '_cost' → logprob: -9.520099639892578
    10. ' CC' → logprob: -10.395099639892578

Token 618: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.004873300436884165
    2. '_CC' → logprob: -5.379873275756836
    3. 'CC' → logprob: -9.504873275756836
    4. '_CS' → logprob: -9.504873275756836
    5. ' CC' → logprob: -9.754873275756836
    6. 'to' → logprob: -11.129873275756836
    7. '	CC' → logprob: -11.379873275756836
    8. '[min' → logprob: -11.879873275756836
    9. '_cc' → logprob: -12.629873275756836
    10. '=' → logprob: -13.129873275756836

Token 619: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.816093228830141e-06
    2. ']=' → logprob: -13.62500286102295
    3. '=size' → logprob: -15.62500286102295
    4. '+=' → logprob: -15.87500286102295
    5. '=cut' → logprob: -15.87500286102295
    6. '=c' → logprob: -15.87500286102295
    7. '=max' → logprob: -16.125001907348633
    8. '=min' → logprob: -16.125001907348633
    9. '=edge' → logprob: -16.375001907348633
    10. '=len' → logprob: -16.500001907348633

Token 620: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -6.988221684878226e-06
    2. ' cost' → logprob: -11.875006675720215
    3. '(cost' → logprob: -18.87500762939453
    4. '   ' → logprob: -20.25000762939453
    5. 'code' → logprob: -21.62500762939453
    6. 'cos' → logprob: -21.75000762939453
    7. '...' → logprob: -22.37500762939453
    8. '0' → logprob: -22.50000762939453
    9. '-cost' → logprob: -22.50000762939453
    10. 'const' → logprob: -22.50000762939453

Token 621: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0008477445808239281
    2. 'cost' → logprob: -7.250847816467285
    3. '1' → logprob: -10.125847816467285
    4. '   ' → logprob: -10.625847816467285
    5. '```' → logprob: -10.875847816467285
    6. ' +' → logprob: -10.875847816467285
    7. '[' → logprob: -12.250847816467285
    8. 'heap' → logprob: -12.500847816467285
    9. '...' → logprob: -12.625847816467285
    10. 'CC' → logprob: -13.000847816467285

Token 622: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4742054343223572
    2. 'cost' → logprob: -0.9742054343223572
    3. '(cost' → logprob: -9.349205017089844
    4. ' cost' → logprob: -10.599205017089844
    5. ' ' → logprob: -12.224205017089844
    6. '
' → logprob: -12.474205017089844
    7. 'count' → logprob: -13.224205017089844
    8. '   ' → logprob: -13.599205017089844
    9. '```' → logprob: -13.599205017089844
    10. '+' → logprob: -14.474205017089844

Token 623: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09374629706144333
    2. '=' → logprob: -2.4687461853027344
    3. 'cost' → logprob: -6.093746185302734
    4. '               ' → logprob: -6.843746185302734
    5. 'heap' → logprob: -7.468746185302734
    6. '                       ' → logprob: -8.093746185302734
    7. '                    ' → logprob: -9.093746185302734
    8. '                  ' → logprob: -9.093746185302734
    9. '   ' → logprob: -9.218746185302734
    10. '           ' → logprob: -9.593746185302734

Token 624: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.018602881580591202
    2. 'heap' → logprob: -4.0186028480529785
    3. '```' → logprob: -9.018603324890137
    4. '                    ' → logprob: -9.018603324890137
    5. '                  ' → logprob: -9.643603324890137
    6. '               ' → logprob: -9.893603324890137
    7. '                       ' → logprob: -10.268603324890137
    8. '                 ' → logprob: -11.518603324890137
    9. '                     ' → logprob: -11.643603324890137
    10. '                ' → logprob: -11.643603324890137

Token 625: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -2.696889623621246e-06
    2. 'he' → logprob: -13.25000286102295
    3. '```' → logprob: -14.25000286102295
    4. ' heap' → logprob: -15.62500286102295
    5. '
' → logprob: -17.375001907348633
    6. '``' → logprob: -17.500001907348633
    7. '                   ' → logprob: -17.875001907348633
    8. '   ' → logprob: -18.125001907348633
    9. 'heat' → logprob: -18.750001907348633
    10. '           ' → logprob: -19.500001907348633

Token 626: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0003022153687197715
    2. 'p' → logprob: -8.2503023147583
    3. 'push' → logprob: -11.0003023147583
    4. 'he' → logprob: -11.3753023147583
    5. 'ush' → logprob: -12.2503023147583
    6. 'h' → logprob: -12.5003023147583
    7. '_push' → logprob: -13.2503023147583
    8. '[' → logprob: -14.2503023147583
    9. '.he' → logprob: -14.2503023147583
    10. '```' → logprob: -14.6253023147583

Token 627: '.he' (ID: 67786)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.34278929233551025
    2. 'ush' → logprob: -2.2177891731262207
    3. 'push' → logprob: -2.5927891731262207
    4. 'q' → logprob: -2.5927891731262207
    5. '.he' → logprob: -3.8427891731262207
    6. '_push' → logprob: -4.842789173126221
    7. 'h' → logprob: -7.592789173126221
    8. '.push' → logprob: -7.592789173126221
    9. 'heap' → logprob: -7.592789173126221
    10. '_he' → logprob: -7.717789173126221

Token 628: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.522638169466518e-05
    2. 'ap' → logprob: -10.625024795532227
    3. 'pp' → logprob: -14.375024795532227
    4. 'q' → logprob: -15.500024795532227
    5. 'a' → logprob: -16.500024795532227
    6. '_app' → logprob: -18.625024795532227
    7. 'appen' → logprob: -18.875024795532227
    8. 'qp' → logprob: -18.875024795532227
    9. 'aps' → logprob: -19.125024795532227
    10. '```' → logprob: -19.375024795532227

Token 629: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.00022725824965164065
    2. 'app' → logprob: -8.500226974487305
    3. 'push' → logprob: -11.000226974487305
    4. 'op' → logprob: -13.000226974487305
    5. 'sh' → logprob: -13.375226974487305
    6. 'pp' → logprob: -13.875226974487305
    7. 'p' → logprob: -14.125226974487305
    8. 'he' → logprob: -14.250226974487305
    9. '```' → logprob: -15.125226974487305
    10. 'q' → logprob: -15.500226974487305

Token 630: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -3.128163257315464e-07
    2. 'Q' → logprob: -15.25
    3. '```' → logprob: -17.75
    4. '[' → logprob: -19.875
    5. '<Q' → logprob: -21.5
    6. '(' → logprob: -21.625
    7. '`' → logprob: -22.125
    8. '``' → logprob: -22.375
    9. '​' → logprob: -22.625
    10. ' (' → logprob: -22.625

Token 631: ',[' (ID: 35502)
  Prédit: '(Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(Q' → logprob: -2.696889623621246e-06
    2. '[' → logprob: -13.37500286102295
    3. 'Q' → logprob: -13.87500286102295
    4. '([' → logprob: -16.000001907348633
    5. '```' → logprob: -18.000001907348633
    6. '<Q' → logprob: -18.500001907348633
    7. ',Q' → logprob: -19.000001907348633
    8. '   ' → logprob: -19.500001907348633
    9. '
' → logprob: -19.750001907348633
    10. '((' → logprob: -19.750001907348633

Token 632: 'cost' (ID: 33457)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.11812183260917664
    2. '[' → logprob: -2.368121862411499
    3. '[c' → logprob: -4.61812162399292
    4. 'cost' → logprob: -4.99312162399292
    5. '(cost' → logprob: -6.86812162399292
    6. '(Q' → logprob: -10.368122100830078
    7. ' [' → logprob: -11.868122100830078
    8. '[count' → logprob: -11.868122100830078
    9. ' Q' → logprob: -12.493122100830078
    10. ' cost' → logprob: -12.493122100830078

Token 633: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.650518920039758e-06
    2. ' +' → logprob: -13.250003814697266
    3. '1' → logprob: -14.125003814697266
    4. '[' → logprob: -15.125003814697266
    5. '```' → logprob: -15.125003814697266
    6. '   ' → logprob: -16.000003814697266
    7. '...' → logprob: -16.625003814697266
    8. '0' → logprob: -16.750003814697266
    9. ' ' → logprob: -17.000003814697266
    10. '
' → logprob: -17.125003814697266

Token 634: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024861192796379328
    2. '+' → logprob: -6.002486228942871
    3. ' ' → logprob: -12.127486228942871
    4. '```' → logprob: -13.252486228942871
    5. '(' → logprob: -13.877486228942871
    6. '   ' → logprob: -14.502486228942871
    7. ' +' → logprob: -15.127486228942871
    8. '++' → logprob: -15.377486228942871
    9. '[' → logprob: -15.752486228942871
    10. '{' → logprob: -16.252485275268555

Token 635: ']+' (ID: 15344)
  Prédit: '(Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.10216841101646423
    2. '[' → logprob: -2.352168321609497
    3. '(CC' → logprob: -7.227168560028076
    4. '[to' → logprob: -7.727168560028076
    5. '+[' → logprob: -8.102168083190918
    6. '+' → logprob: -8.227168083190918
    7. 'Q' → logprob: -9.852168083190918
    8. ')+' → logprob: -9.977168083190918
    9. '(to' → logprob: -10.227168083190918
    10. ']+' → logprob: -10.852168083190918

Token 636: 'CC' (ID: 4433)
  Prédit: 'CC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CC' → logprob: -7.896309739408025e-07
    2. ' CC' → logprob: -14.250000953674316
    3. 'C' → logprob: -16.375
    4. 'cc' → logprob: -19.375
    5. '[' → logprob: -21.25
    6. '	CC' → logprob: -21.375
    7. '   ' → logprob: -22.5
    8. '_CC' → logprob: -22.75
    9. '(CC' → logprob: -22.75
    10. 'CD' → logprob: -23.625

Token 637: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: 0.0
    2. 'to' → logprob: -17.125
    3. ')[' → logprob: -17.625
    4. '[[' → logprob: -18.75
    5. '[' → logprob: -19.125
    6. '(to' → logprob: -19.625
    7. '   ' → logprob: -20.0
    8. ' [' → logprob: -20.25
    9. ')' → logprob: -20.375
    10. '[top' → logprob: -20.375

Token 638: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.026573020964860916
    2. ')' → logprob: -3.6515729427337646
    3. ')]' → logprob: -8.526573181152344
    4. '])
' → logprob: -10.401573181152344
    5. '))' → logprob: -11.276573181152344
    6. ')])' → logprob: -11.276573181152344
    7. ']' → logprob: -11.401573181152344
    8. ')
' → logprob: -13.151573181152344
    9. '})' → logprob: -13.776573181152344
    10. '）' → logprob: -14.276573181152344

Token 639: '#print' (ID: 57825)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11717963218688965
    2. 'if' → logprob: -2.3671796321868896
    3. 'result' → logprob: -4.492179870605469
    4. 'answer' → logprob: -5.492179870605469
    5. 'cost' → logprob: -6.742179870605469
    6. ' if' → logprob: -9.867179870605469
    7. 'target' → logprob: -9.867179870605469
    8. 'ans' → logprob: -10.492179870605469
    9. '```' → logprob: -10.742179870605469
    10. 'for' → logprob: -10.742179870605469

Token 640: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.18384495377540588
    2. '(min' → logprob: -1.8088449239730835
    3. '(' → logprob: -6.433845043182373
    4. '()' → logprob: -7.308845043182373
    5. '(-' → logprob: -7.308845043182373
    6. '((' → logprob: -7.558845043182373
    7. '(max' → logprob: -8.558844566345215
    8. '(len' → logprob: -9.433844566345215
    9. '(sum' → logprob: -9.558844566345215
    10. '(abs' → logprob: -9.558844566345215

Token 641: 'INC' (ID: 58311)
  Prédit: 'IN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IN' → logprob: -0.039969101548194885
    2. 'INC' → logprob: -3.2899692058563232
    3. 'INV' → logprob: -7.039968967437744
    4. 'I' → logprob: -7.789968967437744
    5. 'INF' → logprob: -8.164969444274902
    6. 'INS' → logprob: -9.664969444274902
    7. 'INVAL' → logprob: -10.414969444274902
    8. 'AX' → logprob: -10.539969444274902
    9. 'INT' → logprob: -10.664969444274902
    10. ')' → logprob: -10.789969444274902

Token 642: 'OST' (ID: 7689)
  Prédit: 'OST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OST' → logprob: -0.056853074580430984
    2. 'C' → logprob: -2.9318530559539795
    3. 'O' → logprob: -6.431853294372559
    4. 'ost' → logprob: -9.931853294372559
    5. 'ST' → logprob: -10.556853294372559
    6. '
' → logprob: -10.556853294372559
    7. '_COST' → logprob: -10.556853294372559
    8. 'OS' → logprob: -10.806853294372559
    9. '[' → logprob: -10.931853294372559
    10. ')' → logprob: -11.056853294372559

Token 643: '_CS' (ID: 91377)
  Prédit: '_CC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CC' → logprob: -0.6481977105140686
    2. '[T' → logprob: -0.8981977105140686
    3. '_CS' → logprob: -2.898197650909424
    4. '_T' → logprob: -4.773197650909424
    5. '_TC' → logprob: -5.898197650909424
    6. '_CT' → logprob: -6.523197650909424
    7. '[S' → logprob: -7.398197650909424
    8. '[' → logprob: -8.148198127746582
    9. ')' → logprob: -8.398198127746582
    10. '_TS' → logprob: -8.398198127746582

Token 644: ')
' (ID: 446)
  Prédit: '[T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[T' → logprob: -0.006650479976087809
    2. '[S' → logprob: -5.256650447845459
    3. ')' → logprob: -7.131650447845459
    4. ']' → logprob: -8.631650924682617
    5. 'T' → logprob: -8.756650924682617
    6. '[' → logprob: -8.756650924682617
    7. '[-' → logprob: -10.881650924682617
    8. '[M' → logprob: -10.881650924682617
    9. '])' → logprob: -11.131650924682617
    10. ')
' → logprob: -11.256650924682617

Token 645: '#print' (ID: 57825)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003821716527454555
    2. 'cost' → logprob: -8.625382423400879
    3. 'if' → logprob: -8.750382423400879
    4. 'result' → logprob: -10.750382423400879
    5. 'answer' → logprob: -12.125382423400879
    6. 'for' → logprob: -12.500382423400879
    7. 'ans' → logprob: -12.500382423400879
    8. '```' → logprob: -12.625382423400879
    9. 'pr' → logprob: -13.125382423400879
    10. '#print' → logprob: -14.125382423400879

Token 646: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.01833278127014637
    2. '(' → logprob: -4.0183329582214355
    3. '()' → logprob: -9.643332481384277
    4. '(
' → logprob: -10.268332481384277
    5. '((' → logprob: -10.643332481384277
    6. '(min' → logprob: -10.893332481384277
    7. '(C' → logprob: -11.143332481384277
    8. '(MAX' → logprob: -11.393332481384277
    9. '(len' → logprob: -12.518332481384277
    10. '(S' → logprob: -12.893332481384277

Token 647: 'INC' (ID: 58311)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.06021368131041527
    2. 'IN' → logprob: -2.935213565826416
    3. '(' → logprob: -6.810213565826416
    4. '(M' → logprob: -6.935213565826416
    5. 'OST' → logprob: -7.185213565826416
    6. 'cost' → logprob: -7.310213565826416
    7. '(C' → logprob: -8.060214042663574
    8. 'MIN' → logprob: -8.310214042663574
    9. 'OC' → logprob: -8.560214042663574
    10. '_COST' → logprob: -8.810214042663574

Token 648: 'OST' (ID: 7689)
  Prédit: 'OST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OST' → logprob: -0.0012009433703497052
    2. 'C' → logprob: -7.376201152801514
    3. '_COST' → logprob: -7.751201152801514
    4. 'cost' → logprob: -9.376200675964355
    5. '_cost' → logprob: -10.626200675964355
    6. ' COST' → logprob: -11.876200675964355
    7. 'O' → logprob: -12.001200675964355
    8. 'ost' → logprob: -12.251200675964355
    9. 'OC' → logprob: -12.376200675964355
    10. 'OT' → logprob: -12.876200675964355

Token 649: '_CC' (ID: 76416)
  Prédit: '_CS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CS' → logprob: -0.28235694766044617
    2. '_CC' → logprob: -1.4073569774627686
    3. ')' → logprob: -7.2823567390441895
    4. 'CS' → logprob: -8.907357215881348
    5. '[_' → logprob: -9.532357215881348
    6. '[' → logprob: -9.657357215881348
    7. '_C' → logprob: -9.907357215881348
    8. 'CC' → logprob: -10.282357215881348
    9. '[S' → logprob: -10.282357215881348
    10. '_cs' → logprob: -10.657357215881348

Token 650: ')

' (ID: 1029)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.31409692764282227
    2. ')' → logprob: -1.3140969276428223
    3. ')

' → logprob: -7.189096927642822
    4. 'print' → logprob: -10.314096450805664
    5. 'if' → logprob: -11.439096450805664
    6. '[' → logprob: -12.189096450805664
    7. ']' → logprob: -12.439096450805664
    8. '[S' → logprob: -12.439096450805664
    9. '])' → logprob: -12.814096450805664
    10. '(S' → logprob: -13.064096450805664

Token 651: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0018246464896947145
    2. 'if' → logprob: -6.376824855804443
    3. 'cost' → logprob: -10.001824378967285
    4. 'ans' → logprob: -10.626824378967285
    5. 'result' → logprob: -10.876824378967285
    6. 'for' → logprob: -11.251824378967285
    7. 'answer' → logprob: -11.501824378967285
    8. 'pr' → logprob: -12.001824378967285
    9. '-cost' → logprob: -14.376824378967285
    10. '#print' → logprob: -14.626824378967285

Token 652: ' MIN' (ID: 27151)
  Prédit: 'MIN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MIN' → logprob: -0.14284557104110718
    2. ' MIN' → logprob: -2.017845630645752
    3. 'min' → logprob: -9.767845153808594
    4. 'CS' → logprob: -9.892845153808594
    5. ' min' → logprob: -10.767845153808594
    6. 'S' → logprob: -11.392845153808594
    7. 'cs' → logprob: -12.142845153808594
    8. ' CS' → logprob: -12.267845153808594
    9. 'M' → logprob: -12.392845153808594
    10. 'USE' → logprob: -12.517845153808594

Token 653: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -5.512236498361744e-07
    2. '_COST' → logprob: -15.125000953674316
    3. 'cost' → logprob: -17.125
    4. ' C' → logprob: -17.125
    5. 'OST' → logprob: -17.25
    6. '
' → logprob: -17.375
    7. 'COS' → logprob: -17.75
    8. 'OC' → logprob: -18.125
    9. '=C' → logprob: -18.375
    10. ' COST' → logprob: -18.375

Token 654: 'OST' (ID: 7689)
  Prédit: 'OST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OST' → logprob: -0.061972279101610184
    2. 'C' → logprob: -2.8119723796844482
    3. 'O' → logprob: -12.686972618103027
    4. '_COST' → logprob: -13.936972618103027
    5. 'ST' → logprob: -15.061972618103027
    6. 'OC' → logprob: -15.936972618103027
    7. 'ost' → logprob: -16.68697166442871
    8. '
' → logprob: -17.18697166442871
    9. 'T' → logprob: -17.31197166442871
    10. ' COST' → logprob: -18.06197166442871

Token 655: '_CC' (ID: 76416)
  Prédit: '_CC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CC' → logprob: -0.6931604743003845
    2. '_CS' → logprob: -0.6931604743003845
    3. 'CC' → logprob: -11.818160057067871
    4. 'CS' → logprob: -12.318160057067871
    5. '	CC' → logprob: -14.318160057067871
    6. ' CC' → logprob: -15.443160057067871
    7. '_C' → logprob: -15.818160057067871
    8. '[' → logprob: -15.943160057067871
    9. '_SC' → logprob: -16.068161010742188
    10. '_CD' → logprob: -16.193161010742188

Token 656: '[T' (ID: 51540)
  Prédit: '[T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[T' → logprob: -0.00013905855303164572
    2. '[S' → logprob: -9.625139236450195
    3. '[' → logprob: -10.250139236450195
    4. '[t' → logprob: -11.625139236450195
    5. '[N' → logprob: -11.875139236450195
    6. '[M' → logprob: -11.875139236450195
    7. '[D' → logprob: -12.750139236450195
    8. '[C' → logprob: -13.250139236450195
    9. '[G' → logprob: -13.625139236450195
    10. '[-' → logprob: -13.750139236450195

Token 657: ']==' (ID: 34128)
  Prédit: '[T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[T' → logprob: -0.00047654795343987644
    2. '[' → logprob: -7.875476360321045
    3. ']' → logprob: -10.000476837158203
    4. '[t' → logprob: -10.875476837158203
    5. ']==' → logprob: -11.250476837158203
    6. '[S' → logprob: -12.000476837158203
    7. '][' → logprob: -12.625476837158203
    8. '==' → logprob: -13.000476837158203
    9. '[
' → logprob: -13.125476837158203
    10. '[C' → logprob: -13.875476837158203

Token 658: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5760801434516907
    2. '(' → logprob: -0.8260801434516907
    3. '0' → logprob: -9.201080322265625
    4. ' (' → logprob: -11.326080322265625
    5. '((' → logprob: -11.576080322265625
    6. '<<' → logprob: -12.076080322265625
    7. '<(' → logprob: -12.326080322265625
    8. '(M' → logprob: -12.701080322265625
    9. ' ' → logprob: -13.201080322265625
    10. '<' → logprob: -14.076080322265625

Token 659: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.00011069540778407827
    2. '<' → logprob: -9.625110626220703
    3. '```' → logprob: -10.875110626220703
    4. '<<(' → logprob: -11.500110626220703
    5. ' <<' → logprob: -12.125110626220703
    6. '1' → logprob: -13.000110626220703
    7. '==' → logprob: -13.250110626220703
    8. '>>' → logprob: -14.000110626220703
    9. '<n' → logprob: -14.125110626220703
    10. '<len' → logprob: -14.500110626220703

Token 660: '30' (ID: 1130)
  Prédit: '30'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -1.9361264946837764e-07
    2. '60' → logprob: -16.375
    3. '31' → logprob: -17.25
    4. ' ' → logprob: -19.25
    5. '29' → logprob: -19.625
    6. '３０' → logprob: -19.875
    7. '20' → logprob: -21.125
    8. '
' → logprob: -21.25
    9. '۳۰' → logprob: -21.75
    10. '```' → logprob: -22.125

Token 661: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.041550204157829285
    2. ':' → logprob: -3.2915501594543457
    3. ' or' → logprob: -5.916550159454346
    4. 'or' → logprob: -7.166550159454346
    5. 'print' → logprob: -10.916550636291504
    6. '):
' → logprob: -12.166550636291504
    7. ':return' → logprob: -12.166550636291504
    8. '   ' → logprob: -13.166550636291504
    9. '==' → logprob: -13.666550636291504
    10. ':
' → logprob: -13.916550636291504

Token 662: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003094647079706192
    2. '   ' → logprob: -6.503094673156738
    3. ' print' → logprob: -6.503094673156738
    4. '```' → logprob: -10.003094673156738
    5. '	print' → logprob: -10.253094673156738
    6. '
' → logprob: -12.378094673156738
    7. '-print' → logprob: -12.878094673156738
    8. '``' → logprob: -13.253094673156738
    9. '#print' → logprob: -14.253094673156738
    10. '-' → logprob: -14.628094673156738

Token 663: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.203409844194539e-05
    2. '
' → logprob: -10.125041961669922
    3. ' print' → logprob: -13.750041961669922
    4. '```' → logprob: -14.875041961669922
    5. '-print' → logprob: -15.875041961669922
    6. '#print' → logprob: -16.375041961669922
    7. '``' → logprob: -16.500041961669922
    8. '   ' → logprob: -16.750041961669922
    9. '
' → logprob: -17.250041961669922
    10. '	print' → logprob: -17.875041961669922

Token 664: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.012120016850531101
    2. '-' → logprob: -4.512120246887207
    3. '(' → logprob: -6.887120246887207
    4. '("' → logprob: -10.887120246887207
    5. '("-' → logprob: -11.262120246887207
    6. '('' → logprob: -11.262120246887207
    7. '(
' → logprob: -12.762120246887207
    8. '('-' → logprob: -13.762120246887207
    9. '()-' → logprob: -14.512120246887207
    10. '(None' → logprob: -14.887120246887207

Token 665: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '１' → logprob: -20.5
    4. '2' → logprob: -20.875
    5. '```' → logprob: -21.0
    6. '   ' → logprob: -21.625
    7. '``' → logprob: -21.75
    8. '
' → logprob: -22.125
    9. '9' → logprob: -22.25
    10. '-' → logprob: -22.25

Token 666: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2029927521944046
    2. ')' → logprob: -1.7029927968978882
    3. 'else' → logprob: -6.452992916107178
    4. '   ' → logprob: -13.95299243927002
    5. ' )
' → logprob: -14.45299243927002
    6. ')

' → logprob: -14.95299243927002
    7. ')
' → logprob: -15.32799243927002
    8. ' else' → logprob: -15.57799243927002
    9. '),' → logprob: -16.077993392944336
    10. ' )' → logprob: -16.202993392944336

Token 667: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -2.696889623621246e-06
    2. ' else' → logprob: -13.00000286102295
    3. '
' → logprob: -16.375001907348633
    4. '   ' → logprob: -16.500001907348633
    5. 'elif' → logprob: -16.625001907348633
    6. ')' → logprob: -16.625001907348633
    7. '```' → logprob: -16.750001907348633
    8. ')
' → logprob: -17.750001907348633
    9. '#else' → logprob: -18.250001907348633
    10. '}else' → logprob: -18.750001907348633

Token 668: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05225000157952309
    2. ':' → logprob: -3.5522499084472656
    3. ':
' → logprob: -3.9272499084472656
    4. 'print' → logprob: -6.802249908447266
    5. ' print' → logprob: -7.177249908447266
    6. '       ' → logprob: -8.427249908447266
    7. '	print' → logprob: -8.802249908447266
    8. '    ' → logprob: -9.302249908447266
    9. '(print' → logprob: -9.802249908447266
    10. '  ' → logprob: -10.427249908447266

Token 669: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.630610641877865e-06
    2. '   ' → logprob: -12.500006675720215
    3. ' print' → logprob: -12.750006675720215
    4. '```' → logprob: -18.7500057220459
    5. '	print' → logprob: -19.5000057220459
    6. '
' → logprob: -22.1250057220459
    7. '_print' → logprob: -22.6250057220459
    8. '.print' → logprob: -22.6250057220459
    9. '``' → logprob: -22.7500057220459
    10. 'printf' → logprob: -23.1250057220459

Token 670: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: 0.0
    2. ' print' → logprob: -18.25
    3. 'pr' → logprob: -19.0
    4. '```' → logprob: -19.5
    5. '
' → logprob: -21.375
    6. '   ' → logprob: -21.625
    7. 'prin' → logprob: -22.25
    8. 'printf' → logprob: -22.5
    9. 'prit' → logprob: -23.625
    10. '.print' → logprob: -24.125

Token 671: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.12708108127117157
    2. 'MIN' → logprob: -2.1270811557769775
    3. 'M' → logprob: -8.877080917358398
    4. 'min' → logprob: -12.252080917358398
    5. ' MIN' → logprob: -12.627080917358398
    6. '(min' → logprob: -12.627080917358398
    7. '(' → logprob: -14.002080917358398
    8. 'Min' → logprob: -14.377080917358398
    9. '_MIN' → logprob: -15.377080917358398
    10. 'MN' → logprob: -16.2520809173584

Token 672: 'INC' (ID: 58311)
  Prédit: 'INC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INC' → logprob: -2.6895233531831764e-05
    2. 'IN' → logprob: -11.37502670288086
    3. 'C' → logprob: -11.62502670288086
    4. 'NC' → logprob: -12.50002670288086
    5. 'inc' → logprob: -13.25002670288086
    6. 'IC' → logprob: -14.37502670288086
    7. ' INC' → logprob: -16.50002670288086
    8. '[' → logprob: -16.62502670288086
    9. 'MIN' → logprob: -16.87502670288086
    10. 'IOC' → logprob: -17.00002670288086

Token 673: 'OST' (ID: 7689)
  Prédit: 'OST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OST' → logprob: -4.60414821645827e-06
    2. 'C' → logprob: -12.625004768371582
    3. 'ST' → logprob: -14.000004768371582
    4. 'O' → logprob: -14.875004768371582
    5. 'T' → logprob: -17.375003814697266
    6. '_COST' → logprob: -17.625003814697266
    7. ' OST' → logprob: -18.125003814697266
    8. 'ost' → logprob: -18.875003814697266
    9. '0' → logprob: -19.125003814697266
    10. '_' → logprob: -19.250003814697266

Token 674: '_CC' (ID: 76416)
  Prédit: '_CC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CC' → logprob: -2.816093228830141e-06
    2. '_CS' → logprob: -12.87500286102295
    3. 'CC' → logprob: -16.000001907348633
    4. '	CC' → logprob: -17.250001907348633
    5. ' CC' → logprob: -17.375001907348633
    6. '_C' → logprob: -18.000001907348633
    7. '_cc' → logprob: -18.625001907348633
    8. '_CD' → logprob: -19.375001907348633
    9. '```' → logprob: -20.750001907348633
    10. '[' → logprob: -21.000001907348633

Token 675: '[T' (ID: 51540)
  Prédit: '[T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[T' → logprob: 0.0
    2. 'T' → logprob: -17.75
    3. ')[' → logprob: -18.125
    4. ' [' → logprob: -18.375
    5. '[
' → logprob: -20.0
    6. '[' → logprob: -20.125
    7. '```' → logprob: -20.375
    8. '
' → logprob: -20.875
    9. '[S' → logprob: -21.0
    10. '

' → logprob: -21.375

Token 676: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.511406809295295e-06
    2. '])' → logprob: -12.750006675720215
    3. ')
' → logprob: -13.125006675720215
    4. '))' → logprob: -14.375006675720215
    5. ' )' → logprob: -15.000006675720215
    6. '[T' → logprob: -15.500006675720215
    7. '})' → logprob: -15.625006675720215
    8. '[' → logprob: -16.7500057220459
    9. '),' → logprob: -17.2500057220459
    10. '+' → logprob: -17.5000057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 674
Tokens correctement prédits (1ère position, stricte): 368
Tokens correctement prédits (1ère position, avec adaptation): 403
Tokens correctement prédits (top 10): 599
Précision stricte (1ère position): 54.60%
Précision adaptée (1ère position): 59.79%
Précision (top 10): 88.87%
================================================================================
