================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import deque
from sys import stdin
N = int(stdin.readline().rstrip())
d = deque()
for i in range(N):
    op_key = stdin.readline().rstrip().split()
    if op_key[0] == 'insert':
        d.appendleft(op_key[1])
    elif op_key[0] == 'delete':
        try:
            d.remove(op_key[1])
        except:
            pass
    elif op_key[0] == 'deleteFirst':
        d.popleft()
    elif op_key[0] == 'deleteLast':
        d.pop()
print(*d)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.0460870265960693
    2. 'default' → logprob: -1.1710870265960693
    3. 'abc' → logprob: -1.7960870265960693
    4. 'Counter' → logprob: -2.4210870265960693
    5. ' defaultdict' → logprob: -2.6710870265960693
    6. 'named' → logprob: -5.421087265014648
    7. ' Counter' → logprob: -5.546087265014648
    8. ' abc' → logprob: -6.046087265014648
    9. ' deque' → logprob: -6.421087265014648
    10. '```' → logprob: -6.796087265014648

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014316747896373272
    2. '.' → logprob: -5.014316558837891
    3. '\(' → logprob: -5.764316558837891
    4. '```' → logprob: -6.889316558837891
    5. '\' → logprob: -7.014316558837891
    6. '\n' → logprob: -7.264316558837891
    7. '[' → logprob: -8.01431655883789
    8. '(
' → logprob: -8.26431655883789
    9. 'import' → logprob: -8.38931655883789
    10. 'newline' → logprob: -8.38931655883789

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.536668598651886
    2. 'd' → logprob: -1.5366685390472412
    3. 'a' → logprob: -2.661668539047241
    4. '\n' → logprob: -3.536668539047241
    5. '\' → logprob: -3.786668539047241
    6. '[' → logprob: -4.53666877746582
    7. 'newline' → logprob: -4.78666877746582
    8. '
' → logprob: -4.78666877746582
    9. ',' → logprob: -5.16166877746582
    10. '.' → logprob: -5.41166877746582

Token 6: ' sys' (ID: 12228)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.2331860363483429
    2. ' collections' → logprob: -2.2331860065460205
    3. ' itertools' → logprob: -2.7331860065460205
    4. ' sys' → logprob: -4.4831862449646
    5. ' heap' → logprob: -4.7331862449646
    6. ' typing' → logprob: -5.1081862449646
    7. ' math' → logprob: -5.9831862449646
    8. ' ' → logprob: -5.9831862449646
    9. ' os' → logprob: -6.7331862449646
    10. ' copy' → logprob: -7.2331862449646

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.003615870140492916
    2. 'import' → logprob: -5.628615856170654
    3. '<|end|>' → logprob: -12.128616333007812
    4. ' ' → logprob: -12.878616333007812
    5. '	import' → logprob: -13.128616333007812
    6. ' imports' → logprob: -13.753616333007812
    7. ' im' → logprob: -13.878616333007812
    8. '.' → logprob: -14.378616333007812
    9. '<|end|>' → logprob: -14.378616333007812
    10. ' importar' → logprob: -14.753616333007812

Token 8: ' stdin' (ID: 75143)
  Prédit: ' stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stdin' → logprob: -0.14941158890724182
    2. 'stdin' → logprob: -2.149411678314209
    3. ' exit' → logprob: -4.899411678314209
    4. 'argv' → logprob: -5.024411678314209
    5. ' argv' → logprob: -5.774411678314209
    6. 'stdout' → logprob: -6.024411678314209
    7. 'exit' → logprob: -6.274411678314209
    8. 'stderr' → logprob: -8.02441120147705
    9. ' stdout' → logprob: -8.27441120147705
    10. ' stderr' → logprob: -9.39941120147705

Token 9: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6133753657341003
    2. '\' → logprob: -1.6133754253387451
    3. 'for' → logprob: -1.8633754253387451
    4. '
' → logprob: -3.488375425338745
    5. '.' → logprob: -3.738375425338745
    6. 'newline' → logprob: -4.488375186920166
    7. '```' → logprob: -4.488375186920166
    8. '' → logprob: -4.988375186920166
    9. 'import' → logprob: -5.238375186920166
    10. 'input' → logprob: -5.863375186920166

Token 10: 'N' (ID: 45)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8230321407318115
    2. '\n' → logprob: -0.9480321407318115
    3. '\' → logprob: -2.4480321407318115
    4. 'data' → logprob: -4.198032379150391
    5. '`' → logprob: -4.198032379150391
    6. '```' → logprob: -4.323032379150391
    7. '
' → logprob: -4.573032379150391
    8. 'd' → logprob: -4.698032379150391
    9. '.' → logprob: -5.198032379150391
    10. 'import' → logprob: -5.698032379150391

Token 11: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4766744375228882
    2. ' =' → logprob: -0.9766744375228882
    3. ',' → logprob: -6.851674556732178
    4. ')' → logprob: -7.351674556732178
    5. ' ' → logprob: -7.726674556732178
    6. '.' → logprob: -9.22667407989502
    7. '<|end|>' → logprob: -9.22667407989502
    8. '  ' → logprob: -9.47667407989502
    9. ' =
' → logprob: -10.47667407989502
    10. '_' → logprob: -10.47667407989502

Token 12: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.029804063960909843
    2. 'int' → logprob: -3.529803991317749
    3. ' ' → logprob: -10.529804229736328
    4. '=int' → logprob: -11.154804229736328
    5. '10' → logprob: -12.529804229736328
    6. ' input' → logprob: -12.904804229736328
    7. '<int' → logprob: -13.404804229736328
    8. '[int' → logprob: -14.029804229736328
    9. '0' → logprob: -14.154804229736328
    10. 'input' → logprob: -14.279804229736328

Token 13: '(stdin' (ID: 176594)
  Prédit: '(stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.47595325112342834
    2. '(' → logprob: -0.975953221321106
    3. '(input' → logprob: -6.350953102111816
    4. '()' → logprob: -10.350953102111816
    5. '(st' → logprob: -10.475953102111816
    6. '(std' → logprob: -11.350953102111816
    7. '('' → logprob: -11.350953102111816
    8. ' (' → logprob: -11.850953102111816
    9. '(N' → logprob: -12.100953102111816
    10. '(
' → logprob: -12.100953102111816

Token 14: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.012744012288749218
    2. '.' → logprob: -4.762743949890137
    3. '.read' → logprob: -5.512743949890137
    4. '.)' → logprob: -9.887743949890137
    5. ')' → logprob: -11.137743949890137
    6. '.Read' → logprob: -11.762743949890137
    7. '.readlines' → logprob: -12.012743949890137
    8. '.READ' → logprob: -13.137743949890137
    9. ').' → logprob: -13.387743949890137
    10. '.")' → logprob: -14.387743949890137

Token 15: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.05397370085120201
    2. '()' → logprob: -3.30397367477417
    3. ')' → logprob: -4.17897367477417
    4. '(' → logprob: -8.803974151611328
    5. '().' → logprob: -8.928974151611328
    6. '()))' → logprob: -8.928974151611328
    7. ' ())' → logprob: -10.178974151611328
    8. '();)' → logprob: -11.803974151611328
    9. '))' → logprob: -11.928974151611328
    10. '()),' → logprob: -12.803974151611328

Token 16: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.017730997875332832
    2. 'read' → logprob: -4.517731189727783
    3. 'rstrip' → logprob: -5.017731189727783
    4. ')' → logprob: -10.392730712890625
    5. ' strip' → logprob: -11.892730712890625
    6. 'split' → logprob: -13.142730712890625
    7. '_strip' → logprob: -14.517730712890625
    8. ' readline' → logprob: -14.892730712890625
    9. 'r' → logprob: -15.392730712890625
    10. 'trim' → logprob: -15.642730712890625

Token 17: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08033908158540726
    2. '))' → logprob: -2.580339193344116
    3. '())' → logprob: -6.705338954925537
    4. '()))' → logprob: -9.080339431762695
    5. '()' → logprob: -9.455339431762695
    6. '(' → logprob: -10.705339431762695
    7. ')))' → logprob: -13.080339431762695
    8. ' )' → logprob: -13.705339431762695
    9. ')\' → logprob: -14.080339431762695
    10. '`)' → logprob: -14.080339431762695

Token 18: 'd' (ID: 67)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.5297861695289612
    2. 'q' → logprob: -1.2797861099243164
    3. 'd' → logprob: -2.9047861099243164
    4. 'stack' → logprob: -3.7797861099243164
    5. 'deque' → logprob: -4.154786109924316
    6. 's' → logprob: -4.529786109924316
    7. 'for' → logprob: -5.279786109924316
    8. 'que' → logprob: -5.654786109924316
    9. 'dq' → logprob: -5.904786109924316
    10. 'de' → logprob: -5.904786109924316

Token 19: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.017941780388355255
    2. '=' → logprob: -4.892941951751709
    3. ' =' → logprob: -5.267941951751709
    4. '.e' → logprob: -6.142941951751709
    5. 'eq' → logprob: -6.892941951751709
    6. '.' → logprob: -7.142941951751709
    7. 'q' → logprob: -7.767941951751709
    8. '=e' → logprob: -8.64294147491455
    9. '```' → logprob: -8.64294147491455
    10. '.append' → logprob: -8.76794147491455

Token 20: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.12693051993846893
    2. 'deque' → logprob: -2.1269304752349854
    3. 'Deque' → logprob: -13.751930236816406
    4. ' de' → logprob: -14.251930236816406
    5. 'de' → logprob: -14.751930236816406
    6. '	de' → logprob: -16.001930236816406
    7. ' ' → logprob: -16.751930236816406
    8. ' dequeue' → logprob: -17.126930236816406
    9. '(de' → logprob: -17.376930236816406
    10. ' collections' → logprob: -18.376930236816406

Token 21: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00920144747942686
    2. '()' → logprob: -5.384201526641846
    3. '([' → logprob: -5.509201526641846
    4. '((' → logprob: -8.884201049804688
    5. '([]' → logprob: -8.884201049804688
    6. '([(' → logprob: -8.884201049804688
    7. '(range' → logprob: -11.259201049804688
    8. '(()' → logprob: -11.509201049804688
    9. '([...' → logprob: -11.509201049804688
    10. '('' → logprob: -11.759201049804688

Token 22: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000631543982308358
    2. ' for' → logprob: -7.875631332397461
    3. '```' → logprob: -9.625631332397461
    4. '
' → logprob: -9.750631332397461
    5. 'f' → logprob: -9.875631332397461
    6. 'n' → logprob: -10.875631332397461
    7. '\' → logprob: -11.000631332397461
    8. '\n' → logprob: -11.125631332397461
    9. '' → logprob: -11.625631332397461
    10. 'i' → logprob: -12.750631332397461

Token 23: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03910601884126663
    2. '  ' → logprob: -3.7891061305999756
    3. ' i' → logprob: -4.1641058921813965
    4. ' d' → logprob: -9.414106369018555
    5. ' N' → logprob: -10.039106369018555
    6. ' _' → logprob: -10.664106369018555
    7. ' ‌' → logprob: -11.164106369018555
    8. 'i' → logprob: -12.289106369018555
    9. '_' → logprob: -12.539106369018555
    10. ' )' → logprob: -12.789106369018555

Token 24: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.015528636984527111
    2. 'in' → logprob: -4.265528678894043
    3. ' ' → logprob: -6.640528678894043
    4. 'n' → logprob: -10.765528678894043
    5. '  ' → logprob: -11.640528678894043
    6. 'range' → logprob: -12.015528678894043
    7. '(' → logprob: -12.265528678894043
    8. ' n' → logprob: -12.640528678894043
    9. '	in' → logprob: -12.765528678894043
    10. ')' → logprob: -13.390528678894043

Token 25: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.026306109502911568
    2. 'range' → logprob: -3.65130615234375
    3. '	range' → logprob: -13.27630615234375
    4. '(range' → logprob: -13.65130615234375
    5. ' xrange' → logprob: -13.77630615234375
    6. ' ' → logprob: -13.77630615234375
    7. ')' → logprob: -16.02630615234375
    8. '```' → logprob: -16.15130615234375
    9. '_range' → logprob: -16.40130615234375
    10. 'Range' → logprob: -16.40130615234375

Token 26: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005934843793511391
    2. '(N' → logprob: -5.130934715270996
    3. ' (' → logprob: -12.505934715270996
    4. '(n' → logprob: -14.130934715270996
    5. '(
' → logprob: -14.255934715270996
    6. '(i' → logprob: -15.505934715270996
    7. '()' → logprob: -16.005935668945312
    8. '(range' → logprob: -16.005935668945312
    9. '(len' → logprob: -16.130935668945312
    10. '(`' → logprob: -16.380935668945312

Token 27: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09359824657440186
    2. ')' → logprob: -3.0935983657836914
    3. '+' → logprob: -3.2185983657836914
    4. ' ):' → logprob: -5.843598365783691
    5. ' )' → logprob: -7.593598365783691
    6. ' +' → logprob: -8.343598365783691
    7. ',' → logprob: -8.968598365783691
    8. '):
' → logprob: -9.343598365783691
    9. ' ' → logprob: -9.843598365783691
    10. ':' → logprob: -10.593598365783691

Token 28: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.29648062586784363
    2. ' d' → logprob: -2.046480655670166
    3. ' s' → logprob: -3.171480655670166
    4. ' readline' → logprob: -3.671480655670166
    5. ' input' → logprob: -4.046480655670166
    6. ' line' → logprob: -4.546480655670166
    7. ' 
' → logprob: -5.171480655670166
    8. '    ' → logprob: -5.546480655670166
    9. '   ' → logprob: -5.671480655670166
    10. '    
' → logprob: -5.921480655670166

Token 29: ' op' (ID: 991)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.015202048234641552
    2. ' command' → logprob: -4.765202045440674
    3. 'line' → logprob: -5.640202045440674
    4. ' cmd' → logprob: -7.265202045440674
    5. ' s' → logprob: -7.640202045440674
    6. ' data' → logprob: -7.890202045440674
    7. ' ' → logprob: -8.015202522277832
    8. ' input' → logprob: -8.140202522277832
    9. ' inp' → logprob: -8.515202522277832
    10. 'command' → logprob: -8.640202522277832

Token 30: '_key' (ID: 6724)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.33570611476898193
    2. ' ' → logprob: -1.460706114768982
    3. '=' → logprob: -3.2107062339782715
    4. '_' → logprob: -4.4607062339782715
    5. 'u' → logprob: -7.5857062339782715
    6. '    ' → logprob: -9.210705757141113
    7. '  ' → logprob: -9.210705757141113
    8. '   ' → logprob: -9.460705757141113
    9. 's' → logprob: -9.710705757141113
    10. ',' → logprob: -9.960705757141113

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4487267732620239
    2. ',' → logprob: -1.573726773262024
    3. '=' → logprob: -1.948726773262024
    4. ' ' → logprob: -4.573726654052734
    5. '   ' → logprob: -7.448726654052734
    6. ' ,' → logprob: -7.948726654052734
    7. 's' → logprob: -8.448726654052734
    8. ')' → logprob: -9.198726654052734
    9. '  ' → logprob: -9.198726654052734
    10. '_' → logprob: -10.448726654052734

Token 32: ' stdin' (ID: 75143)
  Prédit: ' stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stdin' → logprob: -0.4830809533596039
    2. 'stdin' → logprob: -0.9830809831619263
    3. '(stdin' → logprob: -5.108080863952637
    4. ''' → logprob: -7.358080863952637
    5. '"' → logprob: -7.608080863952637
    6. '.stdin' → logprob: -7.858080863952637
    7. 'input' → logprob: -8.108080863952637
    8. ' '' → logprob: -8.358080863952637
    9. ' ' → logprob: -8.733080863952637
    10. ' input' → logprob: -9.233080863952637

Token 33: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.15441757265944e-05
    2. '.' → logprob: -11.000031471252441
    3. '().' → logprob: -11.750031471252441
    4. '.read' → logprob: -12.125031471252441
    5. '.readlines' → logprob: -13.500031471252441
    6. ' readline' → logprob: -16.625032424926758
    7. ' .' → logprob: -18.250032424926758
    8. '.Read' → logprob: -18.375032424926758
    9. '```' → logprob: -18.750032424926758
    10. '.write' → logprob: -18.750032424926758

Token 34: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.03807293251156807
    2. '()' → logprob: -3.2880728244781494
    3. '())' → logprob: -11.66307258605957
    4. '(' → logprob: -11.78807258605957
    5. ' ().' → logprob: -12.78807258605957
    6. '().'' → logprob: -12.91307258605957
    7. '.rstrip' → logprob: -13.66307258605957
    8. '<|end|>' → logprob: -13.78807258605957
    9. '()).' → logprob: -13.91307258605957
    10. ')' → logprob: -14.03807258605957

Token 35: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.0007167232106439769
    2. 'strip' → logprob: -7.250716686248779
    3. 'rst' → logprob: -12.875717163085938
    4. 'split' → logprob: -13.750717163085938
    5. '```' → logprob: -14.125717163085938
    6. 'decode' → logprob: -14.125717163085938
    7. '.rstrip' → logprob: -14.625717163085938
    8. 'rl' → logprob: -14.750717163085938
    9. 'rs' → logprob: -15.375717163085938
    10. 'read' → logprob: -15.375717163085938

Token 36: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0061823721043765545
    2. '(' → logprob: -5.2561821937561035
    3. '())' → logprob: -7.7561821937561035
    4. ')' → logprob: -8.506182670593262
    5. '()
' → logprob: -9.381182670593262
    6. '().' → logprob: -9.381182670593262
    7. ''' → logprob: -10.006182670593262
    8. '('' → logprob: -10.006182670593262
    9. '()`' → logprob: -11.381182670593262
    10. '(
' → logprob: -11.756182670593262

Token 37: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0019505366217345
    2. 'strip' → logprob: -6.251950740814209
    3. 'startswith' → logprob: -11.25195026397705
    4. 'rstrip' → logprob: -12.00195026397705
    5. 'spl' → logprob: -13.62695026397705
    6. ' split' → logprob: -14.12695026397705
    7. '(split' → logprob: -14.87695026397705
    8. '```' → logprob: -16.126951217651367
    9. 'replace' → logprob: -16.126951217651367
    10. 'plit' → logprob: -16.876951217651367

Token 38: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12873905897140503
    2. '('' → logprob: -2.37873911857605
    3. '(' → logprob: -3.62873911857605
    4. '("("' → logprob: -6.628738880157471
    5. '("' → logprob: -9.753739356994629
    6. '()[' → logprob: -10.253739356994629
    7. '())' → logprob: -10.378739356994629
    8. '(`' → logprob: -11.003739356994629
    9. '(None' → logprob: -11.128739356994629
    10. ''' → logprob: -11.253739356994629

Token 39: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.058149710297584534
    2. 'if' → logprob: -4.308149814605713
    3. '   ' → logprob: -4.683149814605713
    4. ' ' → logprob: -4.933149814605713
    5. ' if' → logprob: -5.183149814605713
    6. '```' → logprob: -5.808149814605713
    7. '\[' → logprob: -5.933149814605713
    8. '[
' → logprob: -5.933149814605713
    9. '\' → logprob: -6.058149814605713
    10. '<|end|>' → logprob: -6.183149814605713

Token 40: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8238644599914551
    2. '[' → logprob: -1.198864459991455
    3. 'if' (adapté à ' if') → logprob: -1.698864459991455
    4. ' if' → logprob: -3.198864459991455
    5. '<|end|>' → logprob: -5.073864459991455
    6. '   ' → logprob: -5.323864459991455
    7. '_' → logprob: -5.573864459991455
    8. ')' → logprob: -5.948864459991455
    9. ' 
' → logprob: -6.073864459991455
    10. 'i' → logprob: -6.323864459991455

Token 41: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.03037617914378643
    2. 'op' → logprob: -3.5303761959075928
    3. ' len' → logprob: -8.280376434326172
    4. 'len' → logprob: -8.655376434326172
    5. ' ' → logprob: -9.155376434326172
    6. ' ' → logprob: -10.405376434326172
    7. '(op' → logprob: -11.030376434326172
    8. ''op' → logprob: -11.155376434326172
    9. ' '' → logprob: -11.780376434326172
    10. '	op' → logprob: -12.030376434326172

Token 42: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -2.3438327843905427e-05
    2. '[' → logprob: -10.87502384185791
    3. '_' → logprob: -13.25002384185791
    4. '[_' → logprob: -14.25002384185791
    5. '```' → logprob: -15.12502384185791
    6. '._' → logprob: -15.87502384185791
    7. 'key' → logprob: -15.87502384185791
    8. '_token' → logprob: -16.000022888183594
    9. '"_' → logprob: -16.125022888183594
    10. ')_' → logprob: -16.125022888183594

Token 43: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0564331205387134e-05
    2. ' [' → logprob: -11.62501049041748
    3. '==' → logprob: -14.25001049041748
    4. ' ' → logprob: -15.00001049041748
    5. ' ==' → logprob: -15.50001049041748
    6. '```' → logprob: -16.125011444091797
    7. '0' → logprob: -16.500011444091797
    8. '\[' → logprob: -17.125011444091797
    9. ' and' → logprob: -17.875011444091797
    10. '[-' → logprob: -18.000011444091797

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005236479919403791
    2. ' ' → logprob: -5.255236625671387
    3. '==' → logprob: -14.130236625671387
    4. '[' → logprob: -14.255236625671387
    5. '1' → logprob: -15.130236625671387
    6. ' ==' → logprob: -15.630236625671387
    7. '(' → logprob: -15.755236625671387
    8. '   ' → logprob: -16.13023567199707
    9. ']==' → logprob: -16.13023567199707
    10. ']' → logprob: -16.31773567199707

Token 45: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.44475334882736206
    2. ' ==' → logprob: -1.0697534084320068
    3. ')' → logprob: -5.194753170013428
    4. '=' → logprob: -5.444753170013428
    5. ']' → logprob: -5.444753170013428
    6. ']==' → logprob: -6.944753170013428
    7. '=='' → logprob: -8.819753646850586
    8. '===' → logprob: -8.944753646850586
    9. '[' → logprob: -9.069753646850586
    10. ')==' → logprob: -9.319753646850586

Token 46: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0916757881641388
    2. ' ==' → logprob: -2.4666757583618164
    3. '=' → logprob: -6.216675758361816
    4. '=='' → logprob: -8.091675758361816
    5. '===' → logprob: -8.466675758361816
    6. '=="' → logprob: -9.341675758361816
    7. '[' → logprob: -9.841675758361816
    8. ' ' → logprob: -11.341675758361816
    9. ' =' → logprob: -11.716675758361816
    10. ''' → logprob: -11.966675758361816

Token 47: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0013747569173574448
    2. ' '' → logprob: -7.1263747215271
    3. '"' → logprob: -7.7513747215271
    4. ''s' → logprob: -9.501375198364258
    5. ' ' → logprob: -11.126375198364258
    6. ''a' → logprob: -11.501375198364258
    7. ''p' → logprob: -12.001375198364258
    8. '`' → logprob: -12.376375198364258
    9. ''i' → logprob: -12.376375198364258
    10. ' "' → logprob: -12.626375198364258

Token 48: 'insert' (ID: 14813)
  Prédit: 'push'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'push' → logprob: -0.5352247953414917
    2. 'p' → logprob: -1.0352247953414917
    3. 'append' → logprob: -3.6602249145507812
    4. 'a' → logprob: -4.160224914550781
    5. ''' → logprob: -4.535224914550781
    6. 'pus' → logprob: -6.160224914550781
    7. 'insert' → logprob: -6.285224914550781
    8. 'i' → logprob: -6.910224914550781
    9. 'pu' → logprob: -7.535224914550781
    10. ''p' → logprob: -7.910224914550781

Token 49: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.017146442085504532
    2. ''' → logprob: -4.517146587371826
    3. 'left' → logprob: -5.892146587371826
    4. '':
' → logprob: -6.892146587371826
    5. ' ':' → logprob: -7.767146587371826
    6. 'insert' → logprob: -8.142146110534668
    7. 'right' → logprob: -8.267146110534668
    8. '0' → logprob: -8.267146110534668
    9. '(':' → logprob: -8.267146110534668
    10. ''):' → logprob: -8.517146110534668

Token 50: '       ' (ID: 309)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.2940291166305542
    2. ' ' → logprob: -1.4190291166305542
    3. ':' → logprob: -1.6690291166305542
    4. 'd' → logprob: -1.7940291166305542
    5. '   ' → logprob: -3.1690292358398438
    6. '(' → logprob: -3.7940292358398438
    7. ' :' → logprob: -4.169029235839844
    8. '    ' → logprob: -4.169029235839844
    9. '):' → logprob: -4.794029235839844
    10. ')' → logprob: -5.044029235839844

Token 51: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.8010848760604858
    2. 'd' (adapté à ' d') → logprob: -0.9260848760604858
    3. ' ' → logprob: -2.1760849952697754
    4. '(' → logprob: -3.6760849952697754
    5. ')' → logprob: -5.551084995269775
    6. ' (' → logprob: -5.676084995269775
    7. '    ' → logprob: -6.301084995269775
    8. 'space' → logprob: -6.801084995269775
    9. '   ' → logprob: -6.926084995269775
    10. ' )' → logprob: -7.176084995269775

Token 52: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.16064651310443878
    2. '.' → logprob: -1.9106465578079224
    3. '.insert' → logprob: -8.160646438598633
    4. '.extend' → logprob: -9.660646438598633
    5. 'left' → logprob: -10.785646438598633
    6. ' .' → logprob: -11.285646438598633
    7. '.left' → logprob: -11.660646438598633
    8. ' ' → logprob: -11.910646438598633
    9. 'append' → logprob: -11.910646438598633
    10. '_left' → logprob: -12.535646438598633

Token 53: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -7.896309739408025e-07
    2. 'le' → logprob: -14.875000953674316
    3. 'lef' → logprob: -15.250000953674316
    4. 'l' → logprob: -16.75
    5. 'Left' → logprob: -18.0
    6. 'opleft' → logprob: -18.5
    7. 'LEFT' → logprob: -19.0
    8. '```' → logprob: -20.0
    9. '(' → logprob: -20.125
    10. ' left' → logprob: -20.375

Token 54: '(op' (ID: 34275)
  Prédit: '(op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(op' → logprob: -0.0015111699467524886
    2. '(' → logprob: -6.501511096954346
    3. ' (' → logprob: -12.376511573791504
    4. '('' → logprob: -12.626511573791504
    5. '((' → logprob: -14.626511573791504
    6. '(
' → logprob: -15.001511573791504
    7. '(operator' → logprob: -16.251510620117188
    8. ' op' → logprob: -16.376510620117188
    9. '(Op' → logprob: -16.501510620117188
    10. '(eval' → logprob: -16.876510620117188

Token 55: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -8.180258191714529e-06
    2. 'key' → logprob: -13.125008583068848
    3. '_' → logprob: -13.625008583068848
    4. '[' → logprob: -13.625008583068848
    5. '-key' → logprob: -14.000008583068848
    6. '_KEY' → logprob: -14.375008583068848
    7. 'Key' → logprob: -15.000008583068848
    8. '[key' → logprob: -15.125008583068848
    9. '_token' → logprob: -15.750008583068848
    10. ')' → logprob: -15.875008583068848

Token 56: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.3438327843905427e-05
    2. '1' → logprob: -10.75002384185791
    3. ')[' → logprob: -14.25002384185791
    4. ' [' → logprob: -14.50002384185791
    5. '(' → logprob: -15.50002384185791
    6. ')' → logprob: -15.87502384185791
    7. '   ' → logprob: -16.375022888183594
    8. '```' → logprob: -16.500022888183594
    9. ''[' → logprob: -16.625022888183594
    10. '()[' → logprob: -16.750022888183594

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.875000953674316
    3. '[' → logprob: -15.250000953674316
    4. '-' → logprob: -16.750001907348633
    5. '   ' → logprob: -17.125001907348633
    6. ']' → logprob: -18.375001907348633
    7. '2' → logprob: -18.625001907348633
    8. '```' → logprob: -18.625001907348633
    9. '

' → logprob: -19.187501907348633
    10. '  ' → logprob: -19.437501907348633

Token 58: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003343594027683139
    2. '])' → logprob: -5.75334358215332
    3. ']' → logprob: -9.25334358215332
    4. '))' → logprob: -10.62834358215332
    5. ''])' → logprob: -11.37834358215332
    6. '')' → logprob: -11.37834358215332
    7. ')])' → logprob: -11.62834358215332
    8. '）' → logprob: -12.75334358215332
    9. ')]' → logprob: -12.87834358215332
    10. '})' → logprob: -12.87834358215332

Token 59: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.21442073583602905
    2. 'elif' → logprob: -1.9644207954406738
    3. '
' → logprob: -3.339420795440674
    4. ' elif' → logprob: -4.839420795440674
    5. '\r' → logprob: -5.839420795440674
    6. '\' → logprob: -6.339420795440674
    7. '<|end|>' → logprob: -6.589420795440674
    8. '```' → logprob: -7.464420795440674
    9. 'else' → logprob: -7.714420795440674
    10. '	elif' → logprob: -8.089420318603516

Token 60: ' elif' (ID: 9497)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.40663570165634155
    2. 'elif' (adapté à ' elif') → logprob: -1.1566357612609863
    3. ' elif' → logprob: -5.156635761260986
    4. '
' → logprob: -5.656635761260986
    5. '\' → logprob: -6.281635761260986
    6. '```' → logprob: -6.281635761260986
    7. '\r' → logprob: -6.531635761260986
    8. 'else' → logprob: -6.781635761260986
    9. 'newline' → logprob: -7.031635761260986
    10. 'e' → logprob: -7.406635761260986

Token 61: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.0061278678476810455
    2. 'op' → logprob: -6.006127834320068
    3. ' ' → logprob: -7.256127834320068
    4. ' ' → logprob: -7.256127834320068
    5. '<|end|>' → logprob: -7.256127834320068
    6. ''' → logprob: -7.381127834320068
    7. ' '' → logprob: -8.131128311157227
    8. ''op' → logprob: -8.256128311157227
    9. 's' → logprob: -9.131128311157227
    10. 'space' → logprob: -9.756128311157227

Token 62: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -0.1475536972284317
    2. '[' → logprob: -2.0225536823272705
    3. 'elif' → logprob: -6.27255392074585
    4. 'key' → logprob: -7.77255392074585
    5. '['_' → logprob: -8.272553443908691
    6. 'Key' → logprob: -8.272553443908691
    7. '==' → logprob: -8.397553443908691
    8. '.key' → logprob: -8.647553443908691
    9. '._' → logprob: -8.647553443908691
    10. '['' → logprob: -8.772553443908691

Token 63: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009165783412754536
    2. ' ==' → logprob: -7.375916481018066
    3. '==' → logprob: -8.250916481018066
    4. ' [' → logprob: -11.250916481018066
    5. ' ' → logprob: -11.625916481018066
    6. '```' → logprob: -13.750916481018066
    7. '[]' → logprob: -14.000916481018066
    8. ''' → logprob: -14.375916481018066
    9. ''[' → logprob: -14.750916481018066
    10. '[:]' → logprob: -14.750916481018066

Token 64: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2834669053554535
    2. ''' → logprob: -1.4084669351577759
    3. ''value' → logprob: -7.783466815948486
    4. ''s' → logprob: -7.908466815948486
    5. ' ' → logprob: -8.408467292785645
    6. ''t' → logprob: -8.658467292785645
    7. ''d' → logprob: -8.658467292785645
    8. ''m' → logprob: -8.783467292785645
    9. ' '' → logprob: -9.783467292785645
    10. ''x' → logprob: -9.783467292785645

Token 65: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.28020983934402466
    2. '==' → logprob: -1.6552097797393799
    3. ']' → logprob: -3.03020977973938
    4. ']==' → logprob: -5.780210018157959
    5. '[' → logprob: -7.280210018157959
    6. ' ]' → logprob: -7.405210018157959
    7. '=' → logprob: -8.2802095413208
    8. ')' → logprob: -8.7802095413208
    9. ' ' → logprob: -9.4052095413208
    10. ''' → logprob: -10.0302095413208

Token 66: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.033820658922195435
    2. '==' → logprob: -3.408820629119873
    3. ' =='' → logprob: -9.658821105957031
    4. '[' → logprob: -10.658821105957031
    5. '=='' → logprob: -10.783821105957031
    6. '=' → logprob: -11.033821105957031
    7. ' ' → logprob: -11.283821105957031
    8. ' =' → logprob: -11.533821105957031
    9. ''' → logprob: -11.533821105957031
    10. ' ===' → logprob: -12.033821105957031

Token 67: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04308231920003891
    2. ' '' → logprob: -3.1680822372436523
    3. ''s' → logprob: -11.168082237243652
    4. '"' → logprob: -11.793082237243652
    5. ''post' → logprob: -11.918082237243652
    6. ''i' → logprob: -12.168082237243652
    7. ''end' → logprob: -12.168082237243652
    8. ' ' → logprob: -12.418082237243652
    9. ''ex' → logprob: -12.418082237243652
    10. ''d' → logprob: -12.793082237243652

Token 68: 'delete' (ID: 8509)
  Prédit: 'pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.8181642293930054
    2. 'delete' → logprob: -0.9431642293930054
    3. ''' → logprob: -1.8181642293930054
    4. 'erase' → logprob: -6.068164348602295
    5. ''s' → logprob: -6.568164348602295
    6. 'p' → logprob: -6.943164348602295
    7. 'remove' → logprob: -7.068164348602295
    8. '"' → logprob: -8.568163871765137
    9. ''p' → logprob: -8.943163871765137
    10. ''i' → logprob: -9.068163871765137

Token 69: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6906869411468506
    2. '_' → logprob: -1.6906869411468506
    3. ' ' → logprob: -2.3156869411468506
    4. ' :' → logprob: -2.5656869411468506
    5. '):' → logprob: -3.1906869411468506
    6. ''' → logprob: -3.8156869411468506
    7. '':' → logprob: -4.06568717956543
    8. ''):' → logprob: -4.31568717956543
    9. '<|end|>' → logprob: -5.06568717956543
    10. '    ' → logprob: -5.19068717956543

Token 70: '       ' (ID: 309)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.7397857904434204
    2. ' try' → logprob: -1.3647857904434204
    3. ' ' → logprob: -1.8647857904434204
    4. '_' → logprob: -3.114785671234131
    5. 'd' → logprob: -3.364785671234131
    6. ' if' → logprob: -4.739785671234131
    7. '    ' → logprob: -4.739785671234131
    8. ' _' → logprob: -5.614785671234131
    9. '<|end|>' → logprob: -6.114785671234131
    10. 'try' → logprob: -6.364785671234131

Token 71: ' try' (ID: 2075)
  Prédit: ' try'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' try' → logprob: -0.21664689481258392
    2. ' d' → logprob: -3.091646909713745
    3. 'try' (adapté à ' try') → logprob: -3.091646909713745
    4. 'd' → logprob: -3.341646909713745
    5. ' x' → logprob: -3.966646909713745
    6. ' key' → logprob: -4.091646671295166
    7. ' value' → logprob: -4.591646671295166
    8. ' if' → logprob: -5.091646671295166
    9. 'x' → logprob: -5.466646671295166
    10. ' op' → logprob: -5.966646671295166

Token 72: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009463044814765453
    2. ':
' → logprob: -4.759462833404541
    3. '   ' → logprob: -7.759462833404541
    4. ' :' → logprob: -7.884462833404541
    5. ':
' → logprob: -11.5094633102417
    6. ' :
' → logprob: -11.8844633102417
    7. ':d' → logprob: -12.0094633102417
    8. '    ' → logprob: -12.3844633102417
    9. '           ' → logprob: -13.0094633102417
    10. 'd' → logprob: -13.2594633102417

Token 73: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03876055032014847
    2. '   ' → logprob: -3.7887606620788574
    3. ':
' → logprob: -4.413760662078857
    4. ' :' → logprob: -6.413760662078857
    5. '           ' → logprob: -7.413760662078857
    6. '       ' → logprob: -8.4137601852417
    7. ' ' → logprob: -8.6637601852417
    8. 'd' → logprob: -8.9137601852417
    9. ' d' → logprob: -8.9137601852417
    10. ':
' → logprob: -9.2887601852417

Token 74: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.07006292045116425
    2. 'd' (adapté à ' d') → logprob: -2.6950628757476807
    3. '<|end|>' → logprob: -10.695062637329102
    4. '
' → logprob: -10.945062637329102
    5. '_d' → logprob: -11.195062637329102
    6. ' 
' → logprob: -11.445062637329102
    7. '   ' → logprob: -11.570062637329102
    8. '	d' → logprob: -11.695062637329102
    9. '           ' → logprob: -12.070062637329102
    10. '       ' → logprob: -12.195062637329102

Token 75: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.2814267873764038
    2. '.' → logprob: -1.4064267873764038
    3. 'remove' → logprob: -8.281426429748535
    4. ' .' → logprob: -11.656426429748535
    5. ' remove' → logprob: -12.031426429748535
    6. '.Remove' → logprob: -12.406426429748535
    7. '.r' → logprob: -14.281426429748535
    8. '_remove' → logprob: -14.656426429748535
    9. '.rem' → logprob: -14.781426429748535
    10. '>.' → logprob: -14.781426429748535

Token 76: '(op' (ID: 34275)
  Prédit: '(op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(op' → logprob: -2.2007883671903983e-05
    2. '(' → logprob: -11.000021934509277
    3. ' op' → logprob: -12.625021934509277
    4. 'op' → logprob: -13.375021934509277
    5. ' (' → logprob: -15.125021934509277
    6. '(
' → logprob: -17.125022888183594
    7. '	op' → logprob: -17.375022888183594
    8. '/op' → logprob: -18.625022888183594
    9. '(eval' → logprob: -18.875022888183594
    10. '(opt' → logprob: -19.125022888183594

Token 77: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -2.522638169466518e-05
    2. 'key' → logprob: -11.625024795532227
    3. 'Key' → logprob: -12.375024795532227
    4. '<Key' → logprob: -12.625024795532227
    5. '_KEY' → logprob: -13.375024795532227
    6. 'd' → logprob: -13.375024795532227
    7. '[' → logprob: -13.500024795532227
    8. 'o' → logprob: -13.625024795532227
    9. '_' → logprob: -14.250024795532227
    10. '_Key' → logprob: -15.000024795532227

Token 78: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5048530030981055e-06
    2. '[
' → logprob: -14.125001907348633
    3. '1' → logprob: -15.500001907348633
    4. ')' → logprob: -16.000001907348633
    5. ''[' → logprob: -16.125001907348633
    6. '```' → logprob: -16.125001907348633
    7. ' [' → logprob: -16.500001907348633
    8. ')[' → logprob: -16.625001907348633
    9. '][' → logprob: -17.500001907348633
    10. '(' → logprob: -18.062501907348633

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.703443770878948e-06
    2. ' ' → logprob: -12.750007629394531
    3. '[' → logprob: -13.000007629394531
    4. '2' → logprob: -13.500007629394531
    5. ']' → logprob: -15.000007629394531
    6. '```' → logprob: -15.375007629394531
    7. '   ' → logprob: -16.18750762939453
    8. ')' → logprob: -16.56250762939453
    9. '  ' → logprob: -16.75000762939453
    10. '-' → logprob: -16.81250762939453

Token 80: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002028251619776711
    2. ')
' → logprob: -8.750203132629395
    3. '')' → logprob: -10.250203132629395
    4. ' )' → logprob: -12.625203132629395
    5. '")' → logprob: -12.875203132629395
    6. '`)' → logprob: -13.375203132629395
    7. '）' → logprob: -14.750203132629395
    8. ')`' → logprob: -15.375203132629395
    9. ')

' → logprob: -15.500203132629395
    10. ']' → logprob: -15.500203132629395

Token 81: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8427973985671997
    2. '
' → logprob: -1.0927973985671997
    3. ' except' → logprob: -1.9677973985671997
    4. 'except' → logprob: -2.71779727935791
    5. '\n' → logprob: -4.21779727935791
    6. '        
' → logprob: -5.71779727935791
    7. '	except' → logprob: -5.96779727935791
    8. '   ' → logprob: -6.09279727935791
    9. '    
' → logprob: -6.71779727935791
    10. '
' → logprob: -7.21779727935791

Token 82: ' except' (ID: 6384)
  Prédit: ' except'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' except' → logprob: -0.04071183502674103
    2. 'except' (adapté à ' except') → logprob: -3.2907118797302246
    3. '	except' → logprob: -6.665711879730225
    4. '
' → logprob: -7.790711879730225
    5. '   ' → logprob: -8.040711402893066
    6. '       ' → logprob: -8.165711402893066
    7. ' 
' → logprob: -8.665711402893066
    8. '    
' → logprob: -9.290711402893066
    9. '        
' → logprob: -10.415711402893066
    10. '\n' → logprob: -11.040711402893066

Token 83: ':
' (ID: 734)
  Prédit: ' Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.005648136138916016
    2. 'Value' → logprob: -5.380648136138916
    3. '	Value' → logprob: -7.755648136138916
    4. ' ' → logprob: -8.130647659301758
    5. '(Value' → logprob: -8.380647659301758
    6. ':' → logprob: -10.630647659301758
    7. ' Val' → logprob: -11.130647659301758
    8. '_Value' → logprob: -12.005647659301758
    9. '<Value' → logprob: -12.130647659301758
    10. '  ' → logprob: -12.380647659301758

Token 84: '           ' (ID: 352)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.48747220635414124
    2. '           ' → logprob: -1.6124721765518188
    3. ' ' → logprob: -2.3624722957611084
    4. ' 
' → logprob: -3.8624722957611084
    5. ' None' → logprob: -4.112472057342529
    6. ' ' → logprob: -4.237472057342529
    7. '       ' → logprob: -4.487472057342529
    8. ':' → logprob: -4.612472057342529
    9. ' Index' → logprob: -5.237472057342529
    10. '        ' → logprob: -5.862472057342529

Token 85: ' pass' (ID: 1853)
  Prédit: ' pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.011699944734573364
    2. ' continue' → logprob: -5.63670015335083
    3. ' ' → logprob: -6.13670015335083
    4. ' 
' → logprob: -6.26170015335083
    5. 'pass' (adapté à ' pass') → logprob: -6.26170015335083
    6. ' None' → logprob: -7.38670015335083
    7. 'n' → logprob: -7.88670015335083
    8. ' ' → logprob: -9.011699676513672
    9. '0' → logprob: -9.136699676513672
    10. ' Pass' → logprob: -9.261699676513672

Token 86: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10996636003255844
    2. '\n' → logprob: -3.109966278076172
    3. '    
' → logprob: -3.359966278076172
    4. ' 
' → logprob: -4.859966278076172
    5. '
' → logprob: -5.109966278076172
    6. ' elif' → logprob: -5.984966278076172
    7. 'elif' → logprob: -6.109966278076172
    8. '  
' → logprob: -6.609966278076172
    9. ' ' → logprob: -6.734966278076172
    10. 'n' → logprob: -6.734966278076172

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3239065110683441
    2. '    
' → logprob: -2.073906421661377
    3. ' 
' → logprob: -2.948906421661377
    4. ' ' → logprob: -3.448906421661377
    5. '\n' → logprob: -3.448906421661377
    6. ' elif' → logprob: -4.823906421661377
    7. '  
' → logprob: -4.823906421661377
    8. '
' → logprob: -5.198906421661377
    9. 'elif' → logprob: -5.573906421661377
    10. '   
' → logprob: -5.948906421661377

Token 88: ' elif' (ID: 9497)
  Prédit: ' elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.08442849665880203
    2. '   ' → logprob: -2.834428548812866
    3. 'elif' (adapté à ' elif') → logprob: -4.334428310394287
    4. ' ' → logprob: -5.584428310394287
    5. ' else' → logprob: -5.834428310394287
    6. '    
' → logprob: -7.209428310394287
    7. '	elif' → logprob: -7.459428310394287
    8. ' 
' → logprob: -7.709428310394287
    9. 'e' → logprob: -8.584428787231445
    10. ' \' → logprob: -9.209428787231445

Token 89: ' op' (ID: 991)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4867122173309326
    2. ' op' → logprob: -0.9867122173309326
    3. ' ' → logprob: -5.861712455749512
    4. 's' → logprob: -5.986712455749512
    5. ' ' → logprob: -6.236712455749512
    6. ''op' → logprob: -6.486712455749512
    7. 'op' → logprob: -6.861712455749512
    8. ' '' → logprob: -6.986712455749512
    9. '"' → logprob: -7.736712455749512
    10. ''s' → logprob: -7.986712455749512

Token 90: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -0.044783394783735275
    2. '[' → logprob: -3.169783353805542
    3. 'elif' → logprob: -7.544783592224121
    4. '_' → logprob: -7.919783592224121
    5. 'key' → logprob: -8.419783592224121
    6. 'Key' → logprob: -8.669783592224121
    7. '```' → logprob: -9.669783592224121
    8. '['' → logprob: -10.044783592224121
    9. 's' → logprob: -10.044783592224121
    10. '-key' → logprob: -10.044783592224121

Token 91: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0011526016751304269
    2. ' ==' → logprob: -7.126152515411377
    3. ' [' → logprob: -8.876152992248535
    4. '==' → logprob: -9.126152992248535
    5. ' ' → logprob: -10.376152992248535
    6. '_' → logprob: -10.376152992248535
    7. ''' → logprob: -11.751152992248535
    8. '[
' → logprob: -11.876152992248535
    9. '[]' → logprob: -12.376152992248535
    10. '[:]' → logprob: -12.626152992248535

Token 92: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08564931154251099
    2. ' '' → logprob: -3.335649251937866
    3. ''s' → logprob: -3.960649251937866
    4. ''d' → logprob: -4.460649490356445
    5. ''value' → logprob: -5.210649490356445
    6. ''t' → logprob: -6.335649490356445
    7. ''w' → logprob: -6.585649490356445
    8. ''post' → logprob: -6.710649490356445
    9. ''e' → logprob: -7.460649490356445
    10. ''o' → logprob: -7.710649490356445

Token 93: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04866049066185951
    2. '==' → logprob: -3.4236605167388916
    3. '=' → logprob: -4.4236602783203125
    4. ' =' → logprob: -6.4236602783203125
    5. '[' → logprob: -6.7986602783203125
    6. ''' → logprob: -9.673660278320312
    7. ')' → logprob: -10.423660278320312
    8. ']' → logprob: -10.673660278320312
    9. ' ' → logprob: -10.798660278320312
    10. ']==' → logprob: -11.673660278320312

Token 94: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03192148730158806
    2. '==' → logprob: -3.65692138671875
    3. ' =' → logprob: -5.78192138671875
    4. '=' → logprob: -6.15692138671875
    5. '[' → logprob: -7.90692138671875
    6. ' =='' → logprob: -11.28192138671875
    7. ' ' → logprob: -11.65692138671875
    8. '=='' → logprob: -12.53192138671875
    9. ''' → logprob: -12.78192138671875
    10. '===' → logprob: -13.40692138671875

Token 95: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.004976747091859579
    2. ' '' → logprob: -5.379976749420166
    3. ''s' → logprob: -9.004976272583008
    4. ' ' → logprob: -10.254976272583008
    5. ''m' → logprob: -10.254976272583008
    6. ''t' → logprob: -10.504976272583008
    7. '"' → logprob: -10.754976272583008
    8. ''end' → logprob: -11.379976272583008
    9. ''value' → logprob: -11.504976272583008
    10. ''d' → logprob: -11.629976272583008

Token 96: 'delete' (ID: 8509)
  Prédit: 'delete'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delete' → logprob: -0.06589146703481674
    2. 'pop' → logprob: -2.8158915042877197
    3. 'find' → logprob: -6.065891265869141
    4. 'search' → logprob: -7.940891265869141
    5. 'print' → logprob: -8.31589126586914
    6. ''' → logprob: -9.19089126586914
    7. 'size' → logprob: -9.19089126586914
    8. 'erase' → logprob: -9.31589126586914
    9. 'sort' → logprob: -9.44089126586914
    10. 'append' → logprob: -9.69089126586914

Token 97: 'First' (ID: 7127)
  Prédit: 'First'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'First' → logprob: -0.7025972008705139
    2. 'first' → logprob: -0.9525972008705139
    3. '_first' → logprob: -2.327597141265869
    4. '_' → logprob: -4.827597141265869
    5. 'F' → logprob: -4.952597141265869
    6. 'f' → logprob: -5.577597141265869
    7. '_min' → logprob: -6.702597141265869
    8. '_front' → logprob: -8.202597618103027
    9. 'Min' → logprob: -8.452597618103027
    10. 'min' → logprob: -8.702597618103027

Token 98: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013870817609131336
    2. '':' → logprob: -4.388870716094971
    3. '():' → logprob: -7.388870716094971
    4. ':
' → logprob: -8.013871192932129
    5. '):' → logprob: -8.638871192932129
    6. ' :' → logprob: -9.888871192932129
    7. '   ' → logprob: -10.138871192932129
    8. ''' → logprob: -10.263871192932129
    9. '       ' → logprob: -10.513871192932129
    10. '()' → logprob: -10.888871192932129

Token 99: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09567249566316605
    2. '():' → logprob: -2.720672607421875
    3. ':
' → logprob: -3.970672607421875
    4. '():
' → logprob: -5.220672607421875
    5. '()' → logprob: -6.970672607421875
    6. '       ' → logprob: -9.095672607421875
    7. '):' → logprob: -9.970672607421875
    8. '   ' → logprob: -11.220672607421875
    9. '):
' → logprob: -11.720672607421875
    10. '()
' → logprob: -12.345672607421875

Token 100: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3856760263442993
    2. 'd' (adapté à ' d') → logprob: -1.7606760263442993
    3. '       ' → logprob: -2.8856759071350098
    4. ' 
' → logprob: -2.8856759071350098
    5. ' if' → logprob: -3.6356759071350098
    6. 'if' → logprob: -5.76067590713501
    7. '   ' → logprob: -5.76067590713501
    8. '
' → logprob: -6.13567590713501
    9. '        
' → logprob: -8.010676383972168
    10. '    
' → logprob: -8.010676383972168

Token 101: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0006136707379482687
    2. '.' → logprob: -7.875613689422607
    3. '.pop' → logprob: -8.37561321258545
    4. 'opleft' → logprob: -13.37561321258545
    5. '.
' → logprob: -14.12561321258545
    6. 'p' → logprob: -15.50061321258545
    7. '.op' → logprob: -16.375614166259766
    8. '.po' → logprob: -16.375614166259766
    9. '.п' → logprob: -16.625614166259766
    10. '.​' → logprob: -16.625614166259766

Token 102: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.128290593624115
    2. 'ople' → logprob: -2.1282906532287598
    3. 'opl' → logprob: -6.75329065322876
    4. 'op' → logprob: -8.628290176391602
    5. 'o' → logprob: -11.253290176391602
    6. 'oplevel' → logprob: -14.003290176391602
    7. 'e' → logprob: -15.003290176391602
    8. 'left' → logprob: -15.128290176391602
    9. 'opr' → logprob: -15.628290176391602
    10. 'OPLE' → logprob: -15.753290176391602

Token 103: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00016599490481894463
    2. '(' → logprob: -8.750165939331055
    3. '()
' → logprob: -12.000165939331055
    4. '()`' → logprob: -14.375165939331055
    5. '()

' → logprob: -15.125165939331055
    6. '();' → logprob: -16.375165939331055
    7. '()\' → logprob: -16.500165939331055
    8. '()"' → logprob: -16.750165939331055
    9. ')' → logprob: -16.750165939331055
    10. ' ()' → logprob: -16.875165939331055

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020533124916255474
    2. ' elif' → logprob: -6.877053260803223
    3. 'elif' → logprob: -7.627053260803223
    4. '    
' → logprob: -7.627053260803223
    5. '	elif' → logprob: -10.627053260803223
    6. ' ' → logprob: -12.252053260803223
    7. ' else' → logprob: -12.377053260803223
    8. '<|end|>' → logprob: -13.127053260803223
    9. '   
' → logprob: -13.252053260803223
    10. ' 
' → logprob: -13.252053260803223

Token 105: ' elif' (ID: 9497)
  Prédit: ' elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.07942891120910645
    2. 'elif' (adapté à ' elif') → logprob: -3.0794289112091064
    3. '   ' → logprob: -3.5794289112091064
    4. ' else' → logprob: -6.204428672790527
    5. '	elif' → logprob: -8.579428672790527
    6. ' ' → logprob: -9.079428672790527
    7. 'else' → logprob: -9.704428672790527
    8. '    
' → logprob: -9.829428672790527
    9. '  ' → logprob: -11.079428672790527
    10. '    ' → logprob: -11.704428672790527

Token 106: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.0002489423204679042
    2. 'op' → logprob: -9.000248908996582
    3. ' ' → logprob: -9.625248908996582
    4. ' ' → logprob: -9.875248908996582
    5. ''' → logprob: -13.125248908996582
    6. ' o' → logprob: -13.750248908996582
    7. '(op' → logprob: -14.000248908996582
    8. ' '' → logprob: -14.000248908996582
    9. 's' → logprob: -14.250248908996582
    10. ' space' → logprob: -14.375248908996582

Token 107: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -0.014397015795111656
    2. '[' → logprob: -4.264397144317627
    3. 'Key' → logprob: -9.389396667480469
    4. '_' → logprob: -9.639396667480469
    5. 'key' → logprob: -11.014396667480469
    6. 'elif' → logprob: -11.389396667480469
    7. '==' → logprob: -12.139396667480469
    8. ''_' → logprob: -12.139396667480469
    9. '_KEY' → logprob: -12.264396667480469
    10. '[_' → logprob: -12.264396667480469

Token 108: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.010818361304700375
    2. '==' → logprob: -4.8858184814453125
    3. ' ==' → logprob: -5.7608184814453125
    4. '_' → logprob: -11.385818481445312
    5. '[
' → logprob: -11.885818481445312
    6. ' ' → logprob: -12.260818481445312
    7. ' [' → logprob: -12.260818481445312
    8. '.' → logprob: -12.385818481445312
    9. '[]' → logprob: -12.385818481445312
    10. '=='' → logprob: -12.885818481445312

Token 109: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.05826915428042412
    2. ' '' → logprob: -2.9332692623138428
    3. ''s' → logprob: -6.308269023895264
    4. '0' → logprob: -8.558269500732422
    5. ' ' → logprob: -8.558269500732422
    6. ''value' → logprob: -8.558269500732422
    7. ''name' → logprob: -9.058269500732422
    8. ''t' → logprob: -9.058269500732422
    9. ''S' → logprob: -9.308269500732422
    10. ''op' → logprob: -9.433269500732422

Token 110: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07608292251825333
    2. ' ==' → logprob: -2.701082944869995
    3. '[' → logprob: -5.451082706451416
    4. ']==' → logprob: -6.951082706451416
    5. ']' → logprob: -7.451082706451416
    6. '=' → logprob: -8.451083183288574
    7. '===' → logprob: -10.576083183288574
    8. '[]' → logprob: -10.701083183288574
    9. '[:]' → logprob: -11.326083183288574
    10. ')' → logprob: -12.451083183288574

Token 111: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5771893858909607
    2. '==' → logprob: -0.8271893858909607
    3. '=' → logprob: -6.8271894454956055
    4. ' =' → logprob: -9.077189445495605
    5. '[' → logprob: -10.202189445495605
    6. '=='' → logprob: -12.202189445495605
    7. ' ' → logprob: -12.702189445495605
    8. '===' → logprob: -13.327189445495605
    9. ' =='' → logprob: -14.077189445495605
    10. ''' → logprob: -14.327189445495605

Token 112: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.05507241562008858
    2. ' '' → logprob: -2.93007230758667
    3. '"' → logprob: -9.555072784423828
    4. ''d' → logprob: -10.555072784423828
    5. ''s' → logprob: -10.555072784423828
    6. '[' → logprob: -10.680072784423828
    7. ' ' → logprob: -11.180072784423828
    8. ''D' → logprob: -11.930072784423828
    9. '('' → logprob: -12.305072784423828
    10. '(' → logprob: -12.680072784423828

Token 113: 'delete' (ID: 8509)
  Prédit: 'delete'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delete' → logprob: -9.376848902320489e-05
    2. 'pop' → logprob: -10.500093460083008
    3. 'd' → logprob: -10.875093460083008
    4. ' delete' → logprob: -11.250093460083008
    5. 'append' → logprob: -11.375093460083008
    6. '`' → logprob: -12.500093460083008
    7. 'insert' → logprob: -12.875093460083008
    8. 'deque' → logprob: -13.000093460083008
    9. 'p' → logprob: -13.250093460083008
    10. '```' → logprob: -13.375093460083008

Token 114: 'Last' (ID: 6949)
  Prédit: 'Last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Last' → logprob: -8.816591434879228e-05
    2. 'L' → logprob: -10.00008773803711
    3. 'Las' → logprob: -10.25008773803711
    4. 'last' → logprob: -12.50008773803711
    5. 'La' → logprob: -12.62508773803711
    6. '_last' → logprob: -16.00008773803711
    7. 'First' → logprob: -16.75008773803711
    8. ' Last' → logprob: -16.87508773803711
    9. 'LA' → logprob: -17.25008773803711
    10. '```' → logprob: -17.37508773803711

Token 115: '':
' (ID: 7669)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3915441930294037
    2. '()' → logprob: -1.141544222831726
    3. ':' → logprob: -6.266544342041016
    4. '():
' → logprob: -6.391544342041016
    5. '':' → logprob: -7.016544342041016
    6. '(' → logprob: -9.141544342041016
    7. ''' → logprob: -11.141544342041016
    8. ' ():' → logprob: -11.266544342041016
    9. ' ()' → logprob: -11.641544342041016
    10. '):' → logprob: -11.766544342041016

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018991250544786453
    2. ' d' → logprob: -6.876899242401123
    3. '   ' → logprob: -7.501899242401123
    4. 'd' → logprob: -8.126898765563965
    5. '      ' → logprob: -12.501898765563965
    6. '	d' → logprob: -13.001898765563965
    7. '           ' → logprob: -13.251898765563965
    8. ' ' → logprob: -13.251898765563965
    9. '     ' → logprob: -13.376898765563965
    10. '    ' → logprob: -13.376898765563965

Token 117: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5760285258293152
    2. 'd' (adapté à ' d') → logprob: -0.8260285258293152
    3. '   ' → logprob: -9.451028823852539
    4. '       ' → logprob: -11.826028823852539
    5. '	d' → logprob: -13.201028823852539
    6. '
' → logprob: -14.451028823852539
    7. ' ' → logprob: -15.826028823852539
    8. ' 
' → logprob: -16.07602882385254
    9. '    ' → logprob: -16.32602882385254
    10. '  ' → logprob: -16.70102882385254

Token 118: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0005715019651688635
    2. '.' → logprob: -7.5005717277526855
    3. '.p' → logprob: -11.875571250915527
    4. 'pop' → logprob: -12.250571250915527
    5. '.
' → logprob: -12.250571250915527
    6. '.append' → logprob: -14.625571250915527
    7. '.po' → logprob: -14.875571250915527
    8. '	pop' → logprob: -15.125571250915527
    9. '.rstrip' → logprob: -15.375571250915527
    10. '.remove' → logprob: -15.625571250915527

Token 119: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.966313281329349e-05
    2. '()
' → logprob: -10.125049591064453
    3. '(' → logprob: -11.750049591064453
    4. '()

' → logprob: -14.000049591064453
    5. '()\' → logprob: -14.750049591064453
    6. '()`' → logprob: -15.500049591064453
    7. '()
' → logprob: -15.750049591064453
    8. ' ()' → logprob: -17.000049591064453
    9. '()"' → logprob: -17.625049591064453
    10. '().' → logprob: -18.375049591064453

Token 120: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5622262954711914
    2. 'for' → logprob: -0.9372262954711914
    3. '
' → logprob: -3.8122262954711914
    4. '#' → logprob: -5.312226295471191
    5. ')' → logprob: -6.187226295471191
    6. ' for' → logprob: -6.437226295471191
    7. '[' → logprob: -6.437226295471191
    8. '  
' → logprob: -6.812226295471191
    9. '```' → logprob: -6.812226295471191
    10. '<|end|>' → logprob: -7.312226295471191

Token 121: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5005869269371033
    2. '('' → logprob: -1.000586986541748
    3. '("' → logprob: -3.875586986541748
    4. '("("' → logprob: -5.500586986541748
    5. '(*' → logprob: -6.750586986541748
    6. '(len' → logprob: -9.87558650970459
    7. '((' → logprob: -10.12558650970459
    8. '(list' → logprob: -10.50058650970459
    9. '()' → logprob: -11.50058650970459
    10. ''' → logprob: -11.62558650970459

Token 122: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00023178798437584192
    2. ' d' → logprob: -8.375231742858887
    3. ')d' → logprob: -14.375231742858887
    4. ')' → logprob: -15.000231742858887
    5. 'list' → logprob: -15.250231742858887
    6. 'deque' → logprob: -16.750232696533203
    7. '[d' → logprob: -16.875232696533203
    8. ' ' → logprob: -17.875232696533203
    9. '   ' → logprob: -18.250232696533203
    10. '	d' → logprob: -18.250232696533203

Token 123: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')`' → logprob: -15.0
    3. '))' → logprob: -16.75
    4. ' )' → logprob: -17.0
    5. ')
' → logprob: -17.5
    6. '`)' → logprob: -17.875
    7. ')#' → logprob: -18.625
    8. ')**' → logprob: -19.0
    9. '),' → logprob: -19.375
    10. ',)' → logprob: -19.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 121
Tokens correctement prédits (1ère position, stricte): 65
Tokens correctement prédits (1ère position, avec adaptation): 65
Tokens correctement prédits (top 10): 103
Précision stricte (1ère position): 53.72%
Précision adaptée (1ère position): 53.72%
Précision (top 10): 85.12%
================================================================================
