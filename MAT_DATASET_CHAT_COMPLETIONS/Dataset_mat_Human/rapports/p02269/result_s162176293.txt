================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    dictionary = {}
    input_num = int(raw_input())
    counter = 0
    while counter < input_num:
        command, key = raw_input().split(' ')
        if command[0] == 'i':
            dictionary[key] = True
        else:
            if key in dictionary:
                print 'yes'
            else:
              print 'no'

        counter += 1

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.27454787492752075
    2. '\n' → logprob: -1.774547815322876
    3. '   ' → logprob: -3.524547815322876
    4. '(' → logprob: -4.399548053741455
    5. ' 
' → logprob: -5.149548053741455
    6. '    
' → logprob: -5.274548053741455
    7. ' ' → logprob: -5.524548053741455
    8. ''' → logprob: -5.649548053741455
    9. '```' → logprob: -6.274548053741455
    10. '    ' → logprob: -6.399548053741455

Token 4: ' dictionary' (ID: 22131)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5843620896339417
    2. '   ' → logprob: -1.4593620300292969
    3. 'pass' → logprob: -2.209362030029297
    4. 'return' → logprob: -2.834362030029297
    5. '#' → logprob: -4.209362030029297
    6. 'p' → logprob: -5.209362030029297
    7. '```' → logprob: -5.709362030029297
    8. 'r' → logprob: -5.709362030029297
    9. '\' → logprob: -5.959362030029297
    10. 'a' → logprob: -6.084362030029297

Token 5: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10919221490621567
    2. '.' → logprob: -2.359192132949829
    3. '=' → logprob: -5.484192371368408
    4. ' =' → logprob: -6.484192371368408
    5. '.setdefault' → logprob: -7.109192371368408
    6. '['' → logprob: -7.734192371368408
    7. '_' → logprob: -7.984192371368408
    8. ')' → logprob: -8.10919189453125
    9. 's' → logprob: -8.48419189453125
    10. '["' → logprob: -8.48419189453125

Token 6: ' {}
' (ID: 11421)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.023694146424531937
    2. '{}' → logprob: -4.398694038391113
    3. ' {' → logprob: -4.523694038391113
    4. '{' → logprob: -9.273694038391113
    5. ' {'' → logprob: -9.773694038391113
    6. ' {
' → logprob: -10.148694038391113
    7. ' {"' → logprob: -10.523694038391113
    8. 'dict' → logprob: -11.273694038391113
    9. ' {}\' → logprob: -11.398694038391113
    10. ' ' → logprob: -11.898694038391113

Token 7: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.27802109718322754
    2. '   ' → logprob: -1.7780210971832275
    3. ' ' → logprob: -3.6530210971832275
    4. '.' → logprob: -4.278020858764648
    5. '\' → logprob: -4.778020858764648
    6. '    
' → logprob: -5.903020858764648
    7. '[
' → logprob: -5.903020858764648
    8. '```' → logprob: -5.903020858764648
    9. 'a' → logprob: -6.028020858764648
    10. ''' → logprob: -6.153020858764648

Token 8: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7480424046516418
    2. '   ' → logprob: -0.8730424046516418
    3. 'a' → logprob: -2.873042345046997
    4. '    ' → logprob: -4.373042583465576
    5. '[' → logprob: -4.623042583465576
    6. '  ' → logprob: -4.748042583465576
    7. 'd' → logprob: -4.873042583465576
    8. '\' → logprob: -5.623042583465576
    9. 'n' → logprob: -5.623042583465576
    10. '    
' → logprob: -6.248042583465576

Token 9: '_num' (ID: 9834)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.33694079518318176
    2. '(' → logprob: -1.7119407653808594
    3. '_line' → logprob: -3.0869407653808594
    4. '[' → logprob: -4.461940765380859
    5. '_text' → logprob: -4.586940765380859
    6. '('' → logprob: -4.836940765380859
    7. '("' → logprob: -4.961940765380859
    8. '_data' → logprob: -5.836940765380859
    9. '_token' → logprob: -6.086940765380859
    10. '()' → logprob: -6.336940765380859

Token 10: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.49380186200141907
    2. ' =' → logprob: -1.4938018321990967
    3. 'ber' → logprob: -2.6188018321990967
    4. '=' → logprob: -2.7438018321990967
    5. '_' → logprob: -3.6188018321990967
    6. '_s' → logprob: -7.993802070617676
    7. '  ' → logprob: -8.493802070617676
    8. '   ' → logprob: -8.993802070617676
    9. ' ' → logprob: -9.118802070617676
    10. '()' → logprob: -9.993802070617676

Token 11: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2703087329864502
    2. ' input' → logprob: -1.6453087329864502
    3. ' ' → logprob: -3.27030873298645
    4. 'input' → logprob: -5.770308494567871
    5. 'int' → logprob: -6.020308494567871
    6. '  ' → logprob: -8.770308494567871
    7. '   ' → logprob: -9.645308494567871
    8. '0' → logprob: -10.270308494567871
    9. ' []' → logprob: -10.395308494567871
    10. ' "' → logprob: -11.145308494567871

Token 12: '(raw' (ID: 46707)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001362020499072969
    2. '('' → logprob: -6.876361846923828
    3. '(input' → logprob: -8.376361846923828
    4. ''' → logprob: -10.126361846923828
    5. '("("' → logprob: -10.751361846923828
    6. ' (' → logprob: -12.126361846923828
    7. 'input' → logprob: -12.376361846923828
    8. '()' → logprob: -12.501361846923828
    9. '`' → logprob: -12.876361846923828
    10. '("' → logprob: -13.001361846923828

Token 13: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.3504489064216614
    2. '_' → logprob: -1.2254488468170166
    3. ' _' → logprob: -7.100449085235596
    4. '(' → logprob: -7.350449085235596
    5. '_in' → logprob: -8.600448608398438
    6. ')' → logprob: -8.975448608398438
    7. 'input' → logprob: -9.350448608398438
    8. ' input' → logprob: -10.600448608398438
    9. '```' → logprob: -10.725448608398438
    10. '`' → logprob: -11.475448608398438

Token 14: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1469251662492752
    2. '('' → logprob: -2.271925210952759
    3. '("("' → logprob: -3.646925210952759
    4. '()' → logprob: -5.27192497253418
    5. ''' → logprob: -7.14692497253418
    6. '("' → logprob: -7.64692497253418
    7. '"' → logprob: -8.02192497253418
    8. ')' → logprob: -8.02192497253418
    9. '(
' → logprob: -9.64692497253418
    10. ' ' → logprob: -9.64692497253418

Token 15: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4762951135635376
    2. '\' → logprob: -1.6012951135635376
    3. '   ' → logprob: -1.8512951135635376
    4. '<|end|>' → logprob: -1.9762951135635376
    5. '\n' → logprob: -2.601294994354248
    6. '
' → logprob: -3.226294994354248
    7. '```' → logprob: -3.976294994354248
    8. '    ' → logprob: -3.976294994354248
    9. ' ' → logprob: -4.226294994354248
    10. '[' → logprob: -4.226294994354248

Token 16: ' counter' (ID: 9446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2509962320327759
    2. 'for' → logprob: -1.2509962320327759
    3. ' for' → logprob: -1.5009962320327759
    4. '\n' → logprob: -2.7509961128234863
    5. '\' → logprob: -3.0009961128234863
    6. ' ' → logprob: -3.2509961128234863
    7. ')' → logprob: -4.250996112823486
    8. '    ' → logprob: -5.500996112823486
    9. '```' → logprob: -5.750996112823486
    10. '`' → logprob: -5.750996112823486

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3820766806602478
    2. '=' → logprob: -1.3820767402648926
    3. '_' → logprob: -3.5070767402648926
    4. '[' → logprob: -4.007076740264893
    5. 's' → logprob: -4.382076740264893
    6. ' ' → logprob: -6.632076740264893
    7. '[]' → logprob: -7.007076740264893
    8. '  ' → logprob: -7.257076740264893
    9. '[:]' → logprob: -7.507076740264893
    10. '.' → logprob: -7.632076740264893

Token 18: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07983512431383133
    2. ' ' → logprob: -2.5798351764678955
    3. '1' → logprob: -7.954834938049316
    4. ' {}' → logprob: -8.204834938049316
    5. '{}' → logprob: -8.204834938049316
    6. '   ' → logprob: -11.204834938049316
    7. ' defaultdict' → logprob: -11.329834938049316
    8. '  ' → logprob: -12.204834938049316
    9. '    ' → logprob: -12.829834938049316
    10. '{' → logprob: -13.079834938049316

Token 19: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005212648306041956
    2. ' ' → logprob: -5.880212783813477
    3. '{}' → logprob: -6.130212783813477
    4. '1' → logprob: -8.755212783813477
    5. '   ' → logprob: -10.755212783813477
    6. ' {}' → logprob: -10.880212783813477
    7. '{' → logprob: -11.380212783813477
    8. '{})' → logprob: -11.755212783813477
    9. '  ' → logprob: -12.380212783813477
    10. ')' → logprob: -12.630212783813477

Token 20: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40969717502593994
    2. '<|end|>' → logprob: -2.1596970558166504
    3. ' for' → logprob: -3.0346970558166504
    4. '
' → logprob: -3.0346970558166504
    5. 'for' → logprob: -3.5346970558166504
    6. ' ' → logprob: -3.7846970558166504
    7. '\n' → logprob: -4.15969705581665
    8. '    
' → logprob: -4.90969705581665
    9. '  ' → logprob: -4.90969705581665
    10. ' 
' → logprob: -5.15969705581665

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6247520446777344
    2. '\' → logprob: -1.7497520446777344
    3. '<|end|>' → logprob: -2.3747520446777344
    4. '    
' → logprob: -3.2497520446777344
    5. '\n' → logprob: -3.3747520446777344
    6. '
' → logprob: -3.3747520446777344
    7. ' ' → logprob: -4.124752044677734
    8. '' → logprob: -4.624752044677734
    9. ' 
' → logprob: -4.874752044677734
    10. ':' → logprob: -4.874752044677734

Token 22: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30451837182044983
    2. ' for' → logprob: -2.679518461227417
    3. ' ' → logprob: -2.804518461227417
    4. '<|end|>' → logprob: -3.304518461227417
    5. 'for' → logprob: -3.429518461227417
    6. ' while' → logprob: -3.929518461227417
    7. ' 
' → logprob: -4.804518222808838
    8. '    ' → logprob: -5.304518222808838
    9. 'while' (adapté à ' while') → logprob: -5.304518222808838
    10. '
' → logprob: -5.554518222808838

Token 23: ' counter' (ID: 9446)
  Prédit: ' counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counter' → logprob: -0.11011362820863724
    2. ' input' → logprob: -2.6101136207580566
    3. 'counter' → logprob: -3.6101136207580566
    4. ' ' → logprob: -5.985113620758057
    5. 'input' → logprob: -7.485113620758057
    6. '(counter' → logprob: -8.485114097595215
    7. ' not' → logprob: -9.360114097595215
    8. ' True' → logprob: -9.485114097595215
    9. '_counter' → logprob: -9.610114097595215
    10. '    ' → logprob: -9.985114097595215

Token 24: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0012508237268775702
    2. '<' → logprob: -7.001250743865967
    3. ' <=' → logprob: -8.376251220703125
    4. ' ' → logprob: -9.251251220703125
    5. '<|end|>' → logprob: -12.626251220703125
    6. '  ' → logprob: -12.876251220703125
    7. ' <",' → logprob: -13.626251220703125
    8. '   ' → logprob: -13.626251220703125
    9. ' ==' → logprob: -14.126251220703125
    10. ' <
' → logprob: -14.626251220703125

Token 25: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.10220564901828766
    2. 'input' → logprob: -2.352205753326416
    3. ' ' → logprob: -6.227205753326416
    4. '=input' → logprob: -12.477205276489258
    5. '20' → logprob: -12.602205276489258
    6. '10' → logprob: -12.727205276489258
    7. 'Input' → logprob: -13.102205276489258
    8. '(input' → logprob: -13.352205276489258
    9. '<input' → logprob: -13.727205276489258
    10. '  ' → logprob: -14.227205276489258

Token 26: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -6.980854959692806e-05
    2. '_' → logprob: -10.000069618225098
    3. ' _' → logprob: -10.875069618225098
    4. '_n' → logprob: -12.875069618225098
    5. ')_' → logprob: -13.875069618225098
    6. '_number' → logprob: -14.875069618225098
    7. '   ' → logprob: -15.250069618225098
    8. ')' → logprob: -15.250069618225098
    9. '_nums' → logprob: -15.625069618225098
    10. '_len' → logprob: -15.750069618225098

Token 27: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00030066570616327226
    2. ' :' → logprob: -8.250300407409668
    3. ':**' → logprob: -10.750300407409668
    4. ':
' → logprob: -11.750300407409668
    5. '):' → logprob: -12.000300407409668
    6. '   ' → logprob: -14.125300407409668
    7. '+:' → logprob: -14.375300407409668
    8. '>:' → logprob: -14.750300407409668
    9. '():' → logprob: -14.750300407409668
    10. '：' → logprob: -15.625300407409668

Token 28: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.5634797811508179
    2. '       ' → logprob: -1.3134797811508179
    3. ' ' → logprob: -2.3134799003601074
    4. '   ' → logprob: -3.3134799003601074
    5. '     
' → logprob: -4.688479900360107
    6. '        
' → logprob: -5.813479900360107
    7. '<|end|>' → logprob: -5.813479900360107
    8. '        ' → logprob: -5.813479900360107
    9. '    
' → logprob: -6.063479900360107
    10. ' 
' → logprob: -6.188479900360107

Token 29: ' command' (ID: 6348)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -1.0384325981140137
    2. ' ' → logprob: -1.5384325981140137
    3. '   ' → logprob: -1.5384325981140137
    4. '       ' → logprob: -1.6634325981140137
    5. '        ' → logprob: -5.038432598114014
    6. '  ' → logprob: -5.913432598114014
    7. 'input' → logprob: -6.038432598114014
    8. ' )' → logprob: -6.038432598114014
    9. '        
' → logprob: -6.288432598114014
    10. ')' → logprob: -6.538432598114014

Token 30: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4533751308917999
    2. '[' → logprob: -1.9533751010894775
    3. ' ' → logprob: -2.3283751010894775
    4. '=' → logprob: -3.7033751010894775
    5. '   ' → logprob: -4.078375339508057
    6. '<|end|>' → logprob: -4.078375339508057
    7. 's' → logprob: -4.703375339508057
    8. ')' → logprob: -4.828375339508057
    9. '()' → logprob: -5.078375339508057
    10. '    ' → logprob: -5.203375339508057

Token 31: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.6737048625946045
    2. ' dictionary' → logprob: -2.0487048625946045
    3. ' ' → logprob: -2.2987048625946045
    4. ' input' → logprob: -3.0487048625946045
    5. '<|end|>' → logprob: -3.6737048625946045
    6. ' value' → logprob: -3.7987048625946045
    7. 'value' → logprob: -4.048705101013184
    8. 'dictionary' → logprob: -4.173705101013184
    9. ' word' → logprob: -4.298705101013184
    10. 'key' → logprob: -4.298705101013184

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07414402067661285
    2. ',' → logprob: -2.824144124984741
    3. '=' → logprob: -4.449143886566162
    4. ' ' → logprob: -8.94914436340332
    5. '<|end|>' → logprob: -9.07414436340332
    6. ')' → logprob: -9.44914436340332
    7. ' ,' → logprob: -9.94914436340332
    8. '   ' → logprob: -10.94914436340332
    9. '<|end|>' → logprob: -11.69914436340332
    10. '    ' → logprob: -12.94914436340332

Token 33: ' raw' (ID: 11428)
  Prédit: ' raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raw' → logprob: -0.026487814262509346
    2. 'raw' → logprob: -3.6514878273010254
    3. ' ' → logprob: -9.151487350463867
    4. '	raw' → logprob: -10.276487350463867
    5. '(raw' → logprob: -11.151487350463867
    6. ' map' → logprob: -11.651487350463867
    7. '_raw' → logprob: -12.276487350463867
    8. ' input' → logprob: -12.338987350463867
    9. '.raw' → logprob: -13.026487350463867
    10. ' tuple' → logprob: -13.401487350463867

Token 34: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14130799472332
    2. '_input' → logprob: -2.391308069229126
    3. ' _' → logprob: -3.266308069229126
    4. '_user' → logprob: -7.391307830810547
    5. '_output' → logprob: -8.641307830810547
    6. '```' → logprob: -8.766307830810547
    7. '_space' → logprob: -8.766307830810547
    8. '_token' → logprob: -9.141307830810547
    9. ' ' → logprob: -9.141307830810547
    10. '_raw' → logprob: -9.266307830810547

Token 35: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5837116837501526
    2. '().' → logprob: -0.8337116837501526
    3. '(' → logprob: -5.083711624145508
    4. '('' → logprob: -6.833711624145508
    5. '()[' → logprob: -8.333711624145508
    6. '("("' → logprob: -9.708711624145508
    7. '()
' → logprob: -11.083711624145508
    8. ''' → logprob: -11.333711624145508
    9. ' ()' → logprob: -11.333711624145508
    10. '(),' → logprob: -11.333711624145508

Token 36: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011766550596803427
    2. 'strip' → logprob: -6.751176834106445
    3. ' split' → logprob: -12.251176834106445
    4. 'rstrip' → logprob: -13.626176834106445
    5. 'spl' → logprob: -15.001176834106445
    6. '(split' → logprob: -16.376176834106445
    7. 's' → logprob: -17.626176834106445
    8. ' ' → logprob: -17.876176834106445
    9. '.split' → logprob: -18.376176834106445
    10. '```' → logprob: -19.001176834106445

Token 37: '('' (ID: 706)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.027389682829380035
    2. '('' → logprob: -3.7773897647857666
    3. '(' → logprob: -5.5273895263671875
    4. '("("' → logprob: -10.402389526367188
    5. '())' → logprob: -10.777389526367188
    6. ''' → logprob: -10.777389526367188
    7. '()
' → logprob: -11.152389526367188
    8. '("' → logprob: -11.277389526367188
    9. '()]' → logprob: -11.902389526367188
    10. '()

' → logprob: -11.902389526367188

Token 38: ' ')
' (ID: 49195)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4497542381286621
    2. ' )' → logprob: -1.074754238128662
    3. '')' → logprob: -4.199754238128662
    4. ' ' → logprob: -5.824754238128662
    5. ' ')' → logprob: -6.574754238128662
    6. ''' → logprob: -7.324754238128662
    7. ',' → logprob: -7.699754238128662
    8. ' ,' → logprob: -8.94975471496582
    9. '()' → logprob: -9.07475471496582
    10. '',' → logprob: -10.07475471496582

Token 39: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: ' command' (ID: 6348)
  Prédit: ' command'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' command' → logprob: -0.5310996770858765
    2. ' key' → logprob: -0.9060996770858765
    3. 'command' → logprob: -5.031099796295166
    4. 'key' → logprob: -6.781099796295166
    5. ' counter' → logprob: -8.906099319458008
    6. ' ' → logprob: -9.906099319458008
    7. ' dictionary' → logprob: -11.156099319458008
    8. '(command' → logprob: -11.406099319458008
    9. 'counter' → logprob: -11.406099319458008
    10. ' not' → logprob: -11.656099319458008

Token 42: '[' (ID: 58)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.048611775040626526
    2. '==' → logprob: -3.048611879348755
    3. '=' → logprob: -11.923611640930176
    4. ' ' → logprob: -12.048611640930176
    5. '=='' → logprob: -12.923611640930176
    6. '=="' → logprob: -13.548611640930176
    7. ')' → logprob: -13.673611640930176
    8. ' =='' → logprob: -13.673611640930176
    9. ' =' → logprob: -13.798611640930176
    10. '===' → logprob: -13.923611640930176

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.778789758682251
    2. '==' → logprob: -1.403789758682251
    3. '=' → logprob: -1.528789758682251
    4. ']' → logprob: -3.778789758682251
    5. ''' → logprob: -4.278789520263672
    6. ' ==' → logprob: -4.653789520263672
    7. ' ' → logprob: -5.153789520263672
    8. '[' → logprob: -5.528789520263672
    9. ']==' → logprob: -5.528789520263672
    10. ':' → logprob: -5.653789520263672

Token 44: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05104239657521248
    2. '=' → logprob: -3.551042318344116
    3. ']==' → logprob: -4.176042556762695
    4. '==' → logprob: -5.551042556762695
    5. ' ]' → logprob: -6.801042556762695
    6. ' ==' → logprob: -8.426042556762695
    7. ']=' → logprob: -8.801042556762695
    8. ']=='' → logprob: -9.051042556762695
    9. ')' → logprob: -10.301042556762695
    10. ':' → logprob: -10.426042556762695

Token 45: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.414835661649704
    2. '=' → logprob: -1.6648356914520264
    3. ' ==' → logprob: -1.9148356914520264
    4. ' =' → logprob: -6.539835453033447
    5. '=='' → logprob: -7.539835453033447
    6. '[' → logprob: -8.664835929870605
    7. ' ' → logprob: -8.914835929870605
    8. 's' → logprob: -9.039835929870605
    9. '===' → logprob: -9.039835929870605
    10. ':' → logprob: -9.664835929870605

Token 46: ' '' (ID: 461)
  Prédit: ''i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''i' → logprob: -0.4287039339542389
    2. ''' → logprob: -1.6787039041519165
    3. ''I' → logprob: -3.178704023361206
    4. ' '' → logprob: -3.553704023361206
    5. ''a' → logprob: -3.803704023361206
    6. ''p' → logprob: -4.303703784942627
    7. ''d' → logprob: -4.678703784942627
    8. ''s' → logprob: -4.803703784942627
    9. ''u' → logprob: -5.178703784942627
    10. ''q' → logprob: -5.303703784942627

Token 47: 'i' (ID: 72)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7680028080940247
    2. 'i' → logprob: -1.0180027484893799
    3. 'p' → logprob: -2.14300274848938
    4. 's' → logprob: -3.39300274848938
    5. 'g' → logprob: -5.143002986907959
    6. 'A' → logprob: -5.518002986907959
    7. 'I' → logprob: -5.768002986907959
    8. 'd' → logprob: -5.893002986907959
    9. 'S' → logprob: -6.518002986907959
    10. 'c' → logprob: -7.018002986907959

Token 48: '':
' (ID: 7669)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0008394040050916374
    2. ''' → logprob: -7.3758392333984375
    3. 'm' → logprob: -9.125839233398438
    4. ''n' → logprob: -10.250839233398438
    5. '')' → logprob: -11.125839233398438
    6. ''):' → logprob: -11.500839233398438
    7. '':' → logprob: -11.750839233398438
    8. '']' → logprob: -11.750839233398438
    9. ' '' → logprob: -11.875839233398438
    10. 's' → logprob: -13.000839233398438

Token 49: '           ' (ID: 352)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.7081859111785889
    2. 'n' → logprob: -0.9581859111785889
    3. '       ' → logprob: -3.208185911178589
    4. '   ' → logprob: -3.708185911178589
    5. 'nd' → logprob: -4.208186149597168
    6. ':' → logprob: -4.583186149597168
    7. ' ' → logprob: -4.583186149597168
    8. ' n' → logprob: -4.708186149597168
    9. '    ' → logprob: -4.958186149597168
    10. '     ' → logprob: -6.708186149597168

Token 50: ' dictionary' (ID: 22131)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4420585334300995
    2. ' dictionary' → logprob: -1.8170585632324219
    3. 'n' → logprob: -2.192058563232422
    4. 'dictionary' (adapté à ' dictionary') → logprob: -3.567058563232422
    5. '    ' → logprob: -4.817058563232422
    6. 'd' → logprob: -4.942058563232422
    7. ' n' → logprob: -4.942058563232422
    8. ' d' → logprob: -5.567058563232422
    9. '       ' → logprob: -5.567058563232422
    10. '   ' → logprob: -5.567058563232422

Token 51: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.03369411081075668
    2. '[' → logprob: -3.40869402885437
    3. ' [' → logprob: -11.15869426727295
    4. '['' → logprob: -11.78369426727295
    5. '.setdefault' → logprob: -11.90869426727295
    6. '[...]' → logprob: -12.65869426727295
    7. '[]' → logprob: -12.65869426727295
    8. ''' → logprob: -13.15869426727295
    9. '\[' → logprob: -13.28369426727295
    10. '```' → logprob: -13.65869426727295

Token 52: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002085308311507106
    2. ']=' → logprob: -6.877085208892822
    3. ' ]' → logprob: -7.127085208892822
    4. ']+=' → logprob: -8.87708568572998
    5. '']' → logprob: -9.25208568572998
    6. '[' → logprob: -13.12708568572998
    7. '=' → logprob: -13.37708568572998
    8. ']='' → logprob: -13.62708568572998
    9. '']=' → logprob: -13.75208568572998
    10. ' =' → logprob: -14.00208568572998

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06265607476234436
    2. '=' → logprob: -2.8126561641693115
    3. ' +=' → logprob: -7.687655925750732
    4. ']' → logprob: -9.18765640258789
    5. ' ' → logprob: -10.18765640258789
    6. '+=' → logprob: -10.56265640258789
    7. '[' → logprob: -10.68765640258789
    8. ')' → logprob: -11.31265640258789
    9. ' =
' → logprob: -12.18765640258789
    10. '.append' → logprob: -12.31265640258789

Token 54: ' True' (ID: 6432)
  Prédit: ' counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counter' → logprob: -0.8267161846160889
    2. 'counter' → logprob: -1.0767161846160889
    3. '1' → logprob: -2.326716184616089
    4. ' True' → logprob: -2.951716184616089
    5. 'True' → logprob: -3.701716184616089
    6. ' ' → logprob: -3.701716184616089
    7. '0' → logprob: -4.076716423034668
    8. 'int' → logprob: -6.701716423034668
    9. ' int' → logprob: -7.451716423034668
    10. '	counter' → logprob: -7.576716423034668

Token 55: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6798707246780396
    2. '<|end|>' → logprob: -0.8048707246780396
    3. '\n' → logprob: -4.30487060546875
    4. '       ' → logprob: -4.80487060546875
    5. '<|end|>' → logprob: -4.92987060546875
    6. 'elif' → logprob: -5.67987060546875
    7. 'else' → logprob: -5.80487060546875
    8. 'counter' → logprob: -6.17987060546875
    9. ' else' → logprob: -6.67987060546875
    10. '    
' → logprob: -6.67987060546875

Token 56: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24372142553329468
    2. '\n' → logprob: -1.9937214851379395
    3. '<|end|>' → logprob: -3.4937214851379395
    4. '       ' → logprob: -3.7437214851379395
    5. '    
' → logprob: -5.1187214851379395
    6. 'counter' → logprob: -5.2437214851379395
    7. '        
' → logprob: -5.6187214851379395
    8. '   ' → logprob: -6.4937214851379395
    9. ' 
' → logprob: -6.6187214851379395
    10. '\' → logprob: -6.6187214851379395

Token 57: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.110287070274353
    2. 'elif' → logprob: -1.985287070274353
    3. 'else' (adapté à ' else') → logprob: -2.1102871894836426
    4. '   ' → logprob: -2.1102871894836426
    5. 'counter' → logprob: -2.2352871894836426
    6. '\n' → logprob: -2.9852871894836426
    7. '
' → logprob: -3.1102871894836426
    8. ' else' → logprob: -3.4852871894836426
    9. ' counter' → logprob: -3.9852871894836426
    10. ' elif' → logprob: -4.360287189483643

Token 58: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.049120478332042694
    2. ':
' → logprob: -3.0491204261779785
    3. ' if' → logprob: -8.299120903015137
    4. ' :' → logprob: -9.924120903015137
    5. '       ' → logprob: -10.049120903015137
    6. ' :
' → logprob: -10.174120903015137
    7. '   ' → logprob: -10.424120903015137
    8. '           ' → logprob: -10.549120903015137
    9. '<|end|>' → logprob: -10.549120903015137
    10. 'if' → logprob: -10.799120903015137

Token 59: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5009003281593323
    2. ' ' → logprob: -1.7509002685546875
    3. '   ' → logprob: -1.8759002685546875
    4. ' if' → logprob: -3.5009002685546875
    5. '    ' → logprob: -4.0009002685546875
    6. '           ' → logprob: -5.1259002685546875
    7. '<|end|>' → logprob: -5.6259002685546875
    8. '        ' → logprob: -6.1259002685546875
    9. ':' → logprob: -6.7509002685546875
    10. '    
' → logprob: -7.0009002685546875

Token 60: ' if' (ID: 538)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.22815635800361633
    2. ' if' → logprob: -2.103156328201294
    3. 'print' → logprob: -2.978156328201294
    4. ' dictionary' → logprob: -4.103156566619873
    5. 'if' (adapté à ' if') → logprob: -5.603156566619873
    6. '   ' → logprob: -5.978156566619873
    7. '       ' → logprob: -6.478156566619873
    8. '    ' → logprob: -6.603156566619873
    9. 'dictionary' → logprob: -6.853156566619873
    10. ' try' → logprob: -6.853156566619873

Token 61: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.00028624574770219624
    2. ' dictionary' → logprob: -8.875286102294922
    3. 'key' → logprob: -9.500286102294922
    4. ' not' → logprob: -9.625286102294922
    5. ' ' → logprob: -13.500286102294922
    6. ' ' → logprob: -13.625286102294922
    7. '	key' → logprob: -14.500286102294922
    8. 'dictionary' → logprob: -14.875286102294922
    9. ' counter' → logprob: -15.000286102294922
    10. ' keys' → logprob: -15.000286102294922

Token 62: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04155054688453674
    2. ' not' → logprob: -3.291550636291504
    3. 'in' → logprob: -5.791550636291504
    4. ' ' → logprob: -8.291550636291504
    5. 'not' → logprob: -8.666550636291504
    6. '<|end|>' → logprob: -12.041550636291504
    7. ')' → logprob: -12.416550636291504
    8. ' i' → logprob: -13.041550636291504
    9. ' n' → logprob: -13.166550636291504
    10. '   ' → logprob: -13.166550636291504

Token 63: ' dictionary' (ID: 22131)
  Prédit: ' dictionary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dictionary' → logprob: -0.001391423400491476
    2. 'dictionary' → logprob: -6.626391410827637
    3. '(dictionary' → logprob: -9.751391410827637
    4. '.dictionary' → logprob: -12.751391410827637
    5. 'ictionary' → logprob: -13.001391410827637
    6. '_dictionary' → logprob: -14.501391410827637
    7. ' diction' → logprob: -15.001391410827637
    8. '<|end|>' → logprob: -15.001391410827637
    9. 'dict' → logprob: -15.501391410827637
    10. ' ' → logprob: -15.501391410827637

Token 64: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024292864836752415
    2. '):' → logprob: -7.127429485321045
    3. ':
' → logprob: -7.377429485321045
    4. '<|end|>' → logprob: -7.377429485321045
    5. ' and' → logprob: -8.502429008483887
    6. '.keys' → logprob: -10.127429008483887
    7. '<|end|>' → logprob: -10.127429008483887
    8. ')' → logprob: -10.502429008483887
    9. ' :' → logprob: -11.252429008483887
    10. '           ' → logprob: -11.627429008483887

Token 65: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10582683980464935
    2. '           ' → logprob: -2.8558268547058105
    3. ':' → logprob: -3.8558268547058105
    4. '            ' → logprob: -4.7308268547058105
    5. ' print' → logprob: -6.1058268547058105
    6. '<|end|>' → logprob: -6.2308268547058105
    7. '                
' → logprob: -7.1058268547058105
    8. '            
' → logprob: -7.1058268547058105
    9. ' ' → logprob: -7.1058268547058105
    10. ':
' → logprob: -7.2308268547058105

Token 66: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.2103341668844223
    2. 'print' (adapté à ' print') → logprob: -1.9603341817855835
    3. '           ' → logprob: -3.210334062576294
    4. '               ' → logprob: -5.085334300994873
    5. '   ' → logprob: -6.585334300994873
    6. '       ' → logprob: -8.085333824157715
    7. '	print' → logprob: -8.710333824157715
    8. ' dictionary' → logprob: -9.210333824157715
    9. '                   ' → logprob: -9.585333824157715
    10. ' counter' → logprob: -9.835333824157715

Token 67: ' '' (ID: 461)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.48501741886138916
    2. '("' → logprob: -1.6100174188613892
    3. '"' → logprob: -2.6100172996520996
    4. ' "' → logprob: -3.8600172996520996
    5. '('' → logprob: -3.9850172996520996
    6. '(True' → logprob: -4.2350172996521
    7. ' True' → logprob: -4.4850172996521
    8. ' ("' → logprob: -4.4850172996521
    9. ' (' → logprob: -5.3600172996521
    10. ''' → logprob: -5.4850172996521

Token 68: 'yes' (ID: 6763)
  Prédit: 'Yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -1.2990422248840332
    2. 'YES' → logprob: -1.5490422248840332
    3. 'yes' → logprob: -1.7990422248840332
    4. '1' → logprob: -2.299042224884033
    5. 'found' → logprob: -2.299042224884033
    6. 'Found' → logprob: -3.299042224884033
    7. 'present' → logprob: -3.674042224884033
    8. 'True' → logprob: -4.049042224884033
    9. 'OK' → logprob: -5.049042224884033
    10. 'insert' → logprob: -5.174042224884033

Token 69: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.019327756017446518
    2. '')' → logprob: -5.019327640533447
    3. ''
' → logprob: -5.144327640533447
    4. '           ' → logprob: -6.394327640533447
    5. '<|end|>' → logprob: -6.519327640533447
    6. '')
' → logprob: -6.644327640533447
    7. '',' → logprob: -7.019327640533447
    8. '       ' → logprob: -7.269327640533447
    9. '<|end|>' → logprob: -8.519328117370605
    10. '               ' → logprob: -8.519328117370605

Token 70: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17707063257694244
    2. 'else' → logprob: -2.3020706176757812
    3. ' else' → logprob: -3.0520706176757812
    4. '           ' → logprob: -5.052070617675781
    5. '<|end|>' → logprob: -5.427070617675781
    6. '	' → logprob: -6.302070617675781
    7. '	else' → logprob: -6.677070617675781
    8. '               ' → logprob: -8.052070617675781
    9. '<|end|>' → logprob: -8.552070617675781
    10. '   ' → logprob: -8.552070617675781

Token 71: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.7080212235450745
    2. ' else' → logprob: -1.2080211639404297
    3. '       ' → logprob: -1.5830211639404297
    4. '	else' → logprob: -6.58302116394043
    5. '           ' → logprob: -7.08302116394043
    6. '	' → logprob: -7.33302116394043
    7. '        ' → logprob: -9.33302116394043
    8. '   ' → logprob: -9.70802116394043
    9. '	       ' → logprob: -10.08302116394043
    10. '    ' → logprob: -10.83302116394043

Token 72: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5906767249107361
    2. '               ' → logprob: -0.8406767249107361
    3. '           ' → logprob: -5.090676784515381
    4. ':
' → logprob: -5.340676784515381
    5. '<|end|>' → logprob: -6.465676784515381
    6. '              ' → logprob: -8.090676307678223
    7. '       ' → logprob: -8.215676307678223
    8. ' :' → logprob: -8.340676307678223
    9. ' print' → logprob: -8.590676307678223
    10. 'print' → logprob: -8.715676307678223

Token 73: '             ' (ID: 1698)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.2994403839111328
    2. ' print' → logprob: -1.2994403839111328
    3. ''' → logprob: -1.7994403839111328
    4. '           ' → logprob: -2.049440383911133
    5. 'print' → logprob: -2.299440383911133
    6. '            ' → logprob: -3.799440383911133
    7. '                ' → logprob: -4.049440383911133
    8. ' ' → logprob: -4.924440383911133
    9. ' '' → logprob: -5.924440383911133
    10. '       ' → logprob: -6.424440383911133

Token 74: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.6522475481033325
    2. 'print' (adapté à ' print') → logprob: -0.7772475481033325
    3. '               ' → logprob: -4.152247428894043
    4. ' ' → logprob: -6.902247428894043
    5. '           ' → logprob: -7.152247428894043
    6. '   ' → logprob: -7.152247428894043
    7. '       ' → logprob: -7.902247428894043
    8. '              ' → logprob: -8.652247428894043
    9. '             ' → logprob: -8.902247428894043
    10. '                ' → logprob: -8.902247428894043

Token 75: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.012135203927755356
    2. ' ' → logprob: -5.012135028839111
    3. ' '' → logprob: -5.262135028839111
    4. '"' → logprob: -9.26213550567627
    5. ''s' → logprob: -10.13713550567627
    6. '  ' → logprob: -10.88713550567627
    7. '('' → logprob: -11.38713550567627
    8. ''t' → logprob: -11.51213550567627
    9. '`' → logprob: -11.88713550567627
    10. ' ' → logprob: -12.01213550567627

Token 76: 'no' (ID: 1750)
  Prédit: 'no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.013339038006961346
    2. ' no' → logprob: -4.513339042663574
    3. ''' → logprob: -6.138339042663574
    4. ' ' → logprob: -9.138339042663574
    5. ' '' → logprob: -11.013339042663574
    6. ''n' → logprob: -12.763339042663574
    7. '   ' → logprob: -14.263339042663574
    8. 'No' → logprob: -14.263339042663574
    9. '	no' → logprob: -14.263339042663574
    10. 'not' → logprob: -15.013339042663574

Token 77: ''

' (ID: 7497)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09922049939632416
    2. '
' → logprob: -2.8492205142974854
    3. '        
' → logprob: -4.349220275878906
    4. '   ' → logprob: -4.974220275878906
    5. '  
' → logprob: -5.224220275878906
    6. '     ' → logprob: -6.349220275878906
    7. '    ' → logprob: -6.474220275878906
    8. '      ' → logprob: -6.599220275878906
    9. '    
' → logprob: -6.599220275878906
    10. '<|end|>' → logprob: -7.099220275878906

Token 79: ' counter' (ID: 9446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15758977830410004
    2. '
' → logprob: -2.0325896739959717
    3. 'counter' (adapté à ' counter') → logprob: -4.657589912414551
    4. '   ' → logprob: -6.032589912414551
    5. ' counter' → logprob: -6.407589912414551
    6. '        
' → logprob: -8.03258991241455
    7. '	counter' → logprob: -8.03258991241455
    8. ' ' → logprob: -8.15758991241455
    9. '	' → logprob: -9.65758991241455
    10. '\n' → logprob: -9.90758991241455

Token 80: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6516618132591248
    2. ' +=' → logprob: -0.7766618132591248
    3. '+=' → logprob: -4.2766618728637695
    4. ' +' → logprob: -5.4016618728637695
    5. '<|end|>' → logprob: -8.15166187286377
    6. ' ' → logprob: -8.77666187286377
    7. '=' → logprob: -11.02666187286377
    8. '++' → logprob: -11.65166187286377
    9. '+="' → logprob: -12.52666187286377
    10. '+++' → logprob: -13.02666187286377

Token 81: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6931489109992981
    2. ' ' → logprob: -0.6931489109992981
    3. ' ' → logprob: -13.693148612976074
    4. '   ' → logprob: -15.818148612976074
    5. '```' → logprob: -16.44314956665039
    6. '１' → logprob: -16.56814956665039
    7. '    ' → logprob: -17.06814956665039
    8. '<|end|>' → logprob: -17.13064956665039
    9. '  ' → logprob: -17.31814956665039
    10. '0' → logprob: -18.50564956665039

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.627176768844947e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -16.50009536743164
    4. '１' → logprob: -18.00009536743164
    5. '  ' → logprob: -18.37509536743164
    6. 'counter' → logprob: -18.81259536743164
    7. '```' → logprob: -19.18759536743164
    8. 's' → logprob: -19.68759536743164
    9. ' ' → logprob: -20.00009536743164
    10. '+' → logprob: -20.25009536743164

Token 83: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.002517158165574074
    2. '__' → logprob: -6.877517223358154
    3. ' ' → logprob: -6.877517223358154
    4. '_' → logprob: -8.127516746520996
    5. ' ' → logprob: -9.377516746520996
    6. ' _' → logprob: -10.002516746520996
    7. '  ' → logprob: -10.752516746520996
    8. '_name' → logprob: -13.627516746520996
    9. ' ‌' → logprob: -14.127516746520996
    10. ' main' → logprob: -14.252516746520996

Token 86: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.11873759329319
    2. ' __' → logprob: -2.2437376976013184
    3. ' ==' → logprob: -5.868737697601318
    4. '__.__' → logprob: -7.493737697601318
    5. ' .' → logprob: -7.618737697601318
    6. ' ' → logprob: -7.868737697601318
    7. '.__' → logprob: -7.993737697601318
    8. '[' → logprob: -7.993737697601318
    9. '.' → logprob: -8.49373722076416
    10. '_' → logprob: -8.61873722076416

Token 87: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -8.566264295950532e-05
    2. '_' → logprob: -9.500085830688477
    3. '==' → logprob: -12.375085830688477
    4. '__.__' → logprob: -12.750085830688477
    5. '___' → logprob: -13.125085830688477
    6. '__.' → logprob: -14.625085830688477
    7. ' ==' → logprob: -14.750085830688477
    8. '____' → logprob: -15.000085830688477
    9. ' __' → logprob: -16.250085830688477
    10. '__[' → logprob: -16.375085830688477

Token 88: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3197099566459656
    2. ' ==' → logprob: -1.4447100162506104
    3. '==' → logprob: -3.4447100162506104
    4. '<|end|>' → logprob: -6.944709777832031
    5. '[' → logprob: -7.069709777832031
    6. '=='' → logprob: -7.444709777832031
    7. '['' → logprob: -7.569709777832031
    8. '__.__' → logprob: -7.694709777832031
    9. '.__' → logprob: -7.819709777832031
    10. '=="' → logprob: -7.944709777832031

Token 89: ' '__' (ID: 28278)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.12710794806480408
    2. '"' → logprob: -2.127107858657837
    3. ' "__' → logprob: -9.627107620239258
    4. ' '__' → logprob: -9.627107620239258
    5. ' "' → logprob: -10.752107620239258
    6. ' '' → logprob: -10.877107620239258
    7. '__' → logprob: -11.877107620239258
    8. ' __' → logprob: -15.127107620239258
    9. ''s' → logprob: -15.502107620239258
    10. ' ' → logprob: -16.002107620239258

Token 90: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.1472419600977446e-06
    2. 'name' → logprob: -14.500000953674316
    3. 'ma' → logprob: -14.750000953674316
    4. 'm' → logprob: -16.375001907348633
    5. ' main' → logprob: -17.625001907348633
    6. 'mai' → logprob: -18.625001907348633
    7. 'maine' → logprob: -19.250001907348633
    8. '	main' → logprob: -19.750001907348633
    9. '_main' → logprob: -21.625001907348633
    10. '__' → logprob: -22.500001907348633

Token 91: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.3132792115211487
    2. '__' → logprob: -1.313279151916504
    3. '_' → logprob: -11.313279151916504
    4. '__:' → logprob: -12.813279151916504
    5. '__":
' → logprob: -12.938279151916504
    6. '__('' → logprob: -16.81328010559082
    7. '__.' → logprob: -16.81328010559082
    8. '___' → logprob: -17.31328010559082
    9. '()' → logprob: -17.43828010559082
    10. '':' → logprob: -17.68828010559082

Token 92: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.19042906165122986
    2. '   ' → logprob: -1.8154290914535522
    3. 'main' → logprob: -5.440429210662842
    4. '	main' → logprob: -5.440429210662842
    5. ' ' → logprob: -7.440429210662842
    6. ' 
' → logprob: -7.940429210662842
    7. '    
' → logprob: -8.315428733825684
    8. '<|end|>' → logprob: -8.440428733825684
    9. ' ' → logprob: -8.565428733825684
    10. '   ' → logprob: -9.565428733825684

Token 93: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.693165123462677
    2. 'main' (adapté à ' main') → logprob: -0.693165123462677
    3. '	main' → logprob: -11.068164825439453
    4. '   ' → logprob: -14.193164825439453
    5. ' ' → logprob: -14.568164825439453
    6. '(main' → logprob: -15.193164825439453
    7. '_main' → logprob: -15.443164825439453
    8. ' ' → logprob: -15.818164825439453
    9. '.main' → logprob: -15.943164825439453
    10. '  ' → logprob: -16.443164825439453

Token 94: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005310842767357826
    2. '(' → logprob: -5.255311012268066
    3. '()
' → logprob: -9.630311012268066
    4. '()`' → logprob: -12.505311012268066
    5. '(
' → logprob: -12.630311012268066
    6. '()

' → logprob: -13.755311012268066
    7. ' ()' → logprob: -14.755311012268066
    8. '();' → logprob: -14.755311012268066
    9. '```' → logprob: -15.005311012268066
    10. ':' → logprob: -15.255311012268066


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 92
Tokens correctement prédits (1ère position, stricte): 35
Tokens correctement prédits (1ère position, avec adaptation): 36
Tokens correctement prédits (top 10): 71
Précision stricte (1ère position): 38.04%
Précision adaptée (1ère position): 39.13%
Précision (top 10): 77.17%
================================================================================
