================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
order = [''] * n
st = [''] * n
for i in range(n):
    order[i], st[i] = map(str, input().split())

dic = {}
for i in range(n):
    if order[i] == 'insert':
        dic.setdefault(st[i], 0)
    else:
        if st[i] in dic:
            print('yes')
        else:
            print('no')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00042768914136104286
    2. ''' → logprob: -8.62542724609375
    3. '('' → logprob: -9.37542724609375
    4. '(n' → logprob: -9.87542724609375
    5. '```' → logprob: -10.37542724609375
    6. '`' → logprob: -10.75042724609375
    7. '("("' → logprob: -11.12542724609375
    8. '(
' → logprob: -11.12542724609375
    9. ')' → logprob: -11.75042724609375
    10. '()' → logprob: -12.25042724609375

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11869344860315323
    2. ')' → logprob: -2.2436933517456055
    3. '()' → logprob: -5.3686933517456055
    4. '())' → logprob: -7.4936933517456055
    5. '(
' → logprob: -8.243693351745605
    6. '```' → logprob: -9.993693351745605
    7. '(

' → logprob: -10.368693351745605
    8. '('' → logprob: -10.493693351745605
    9. ''' → logprob: -10.618693351745605
    10. '(n' → logprob: -10.868693351745605

Token 5: 'order' (ID: 2143)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7040315866470337
    2. 'if' → logprob: -1.4540315866470337
    3. 'for' → logprob: -2.329031467437744
    4. 's' → logprob: -2.454031467437744
    5. 'f' → logprob: -4.329031467437744
    6. ' ' → logprob: -4.454031467437744
    7. 'x' → logprob: -4.829031467437744
    8. ')' → logprob: -4.954031467437744
    9. 'a' → logprob: -4.954031467437744
    10. ''' → logprob: -5.079031467437744

Token 6: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.669201135635376
    2. '[' → logprob: -0.794201135635376
    3. '.' → logprob: -3.794201135635376
    4. '_' → logprob: -4.919200897216797
    5. '_s' → logprob: -6.419200897216797
    6. '[s' → logprob: -6.419200897216797
    7. '=' → logprob: -8.044200897216797
    8. '\[' → logprob: -8.044200897216797
    9. '[]' → logprob: -8.169200897216797
    10. '(' → logprob: -8.169200897216797

Token 7: ' ['' (ID: 5140)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.2644025087356567
    2. ' []' → logprob: -1.2644025087356567
    3. '[]' → logprob: -1.6394025087356567
    4. ' list' → logprob: -1.8894025087356567
    5. 'input' → logprob: -2.889402389526367
    6. ' input' → logprob: -4.014402389526367
    7. '[input' → logprob: -4.514402389526367
    8. 'sorted' → logprob: -6.264402389526367
    9. ' [' → logprob: -6.639402389526367
    10. '[' → logprob: -7.889402389526367

Token 8: '']' (ID: 1089)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.7396281957626343
    2. 'R' → logprob: -1.8646281957626343
    3. 'a' → logprob: -1.9896281957626343
    4. '0' → logprob: -2.364628314971924
    5. '1' → logprob: -2.614628314971924
    6. 'U' → logprob: -3.114628314971924
    7. 'L' → logprob: -3.114628314971924
    8. '2' → logprob: -3.864628314971924
    9. 'B' → logprob: -3.989628314971924
    10. '+' → logprob: -3.989628314971924

Token 9: ' *' (ID: 425)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9971001744270325
    2. ')' → logprob: -1.1221001148223877
    3. '<|end|>' → logprob: -2.2471001148223877
    4. '*' → logprob: -2.9971001148223877
    5. '+' → logprob: -3.2471001148223877
    6. ']' → logprob: -3.4971001148223877
    7. 'n' → logprob: -3.4971001148223877
    8. '#' → logprob: -5.122100353240967
    9. ' ' → logprob: -5.122100353240967
    10. 's' → logprob: -5.497100353240967

Token 10: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011113489978015423
    2. '(n' → logprob: -4.63611364364624
    3. ' n' → logprob: -7.01111364364624
    4. '(' → logprob: -7.88611364364624
    5. '10' → logprob: -10.761113166809082
    6. '100' → logprob: -11.011113166809082
    7. ' (' → logprob: -11.136113166809082
    8. '5' → logprob: -12.261113166809082
    9. '1' → logprob: -12.511113166809082
    10. '3' → logprob: -12.886113166809082

Token 11: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00683484086766839
    2. ' for' → logprob: -5.631834983825684
    3. '
' → logprob: -6.631834983825684
    4. '[' → logprob: -7.381834983825684
    5. 'order' → logprob: -7.506834983825684
    6. '\n' → logprob: -8.256834983825684
    7. '```' → logprob: -9.006834983825684
    8. 'n' → logprob: -9.506834983825684
    9. '[
' → logprob: -9.881834983825684
    10. '#' → logprob: -10.381834983825684

Token 12: 'st' (ID: 302)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.024604277219623e-05
    2. ' for' → logprob: -10.375040054321289
    3. 'order' → logprob: -12.000040054321289
    4. '```' → logprob: -14.625040054321289
    5. 'names' → logprob: -14.750040054321289
    6. 'i' → logprob: -14.750040054321289
    7. 'price' → logprob: -16.00004005432129
    8. 'name' → logprob: -16.00004005432129
    9. 'result' → logprob: -16.00004005432129
    10. '\n' → logprob: -16.12504005432129

Token 13: ' =' (ID: 314)
  Prédit: 'ack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ack' → logprob: -0.026073496788740158
    2. 'acks' → logprob: -4.151073455810547
    3. 'r' → logprob: -5.401073455810547
    4. 'ring' → logprob: -6.401073455810547
    5. 'rings' → logprob: -7.651073455810547
    6. 'k' → logprob: -7.776073455810547
    7. 'ream' → logprob: -7.776073455810547
    8. 'ate' → logprob: -7.901073455810547
    9. 'd' → logprob: -8.651073455810547
    10. 'udents' → logprob: -8.776073455810547

Token 14: ' ['' (ID: 5140)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.37563642859458923
    2. ' []' → logprob: -1.2506364583969116
    3. 'set' → logprob: -5.000636577606201
    4. '{}' → logprob: -5.125636577606201
    5. '"' → logprob: -5.625636577606201
    6. ''' → logprob: -6.125636577606201
    7. ' set' → logprob: -6.125636577606201
    8. ''s' → logprob: -6.625636577606201
    9. ' {}' → logprob: -6.625636577606201
    10. ' ' → logprob: -7.250636577606201

Token 15: '']' (ID: 1089)
  Prédit: '']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.0008535855449736118
    2. ''' → logprob: -7.875853538513184
    3. '0' → logprob: -8.625853538513184
    4. '[' → logprob: -10.000853538513184
    5. '('' → logprob: -10.000853538513184
    6. ' ']' → logprob: -10.000853538513184
    7. '[]' → logprob: -10.250853538513184
    8. '"]' → logprob: -10.375853538513184
    9. '''' → logprob: -11.375853538513184
    10. '*' → logprob: -11.375853538513184

Token 16: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 17: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0028071331325918436
    2. ' n' → logprob: -5.877807140350342
    3. '(n' → logprob: -14.002806663513184
    4. ' ' → logprob: -14.127806663513184
    5. '(' → logprob: -15.002806663513184
    6. ' (' → logprob: -15.377806663513184
    7. '   ' → logprob: -16.7528076171875
    8. '10' → logprob: -17.2528076171875
    9. '0' → logprob: -17.3778076171875
    10. '100' → logprob: -17.6278076171875

Token 18: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3653642535209656
    2. '
' → logprob: -1.2403643131256104
    3. 'n' → logprob: -5.365364074707031
    4. ' for' → logprob: -5.490364074707031
    5. '<|end|>' → logprob: -5.865364074707031
    6. '\n' → logprob: -6.615364074707031
    7. '' → logprob: -6.865364074707031
    8. 'i' → logprob: -7.365364074707031
    9. '[' → logprob: -7.365364074707031
    10. '```' → logprob: -8.115364074707031

Token 19: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00025275684311054647
    2. 'i' → logprob: -9.500252723693848
    3. ' for' → logprob: -10.000252723693848
    4. 'idx' → logprob: -10.125252723693848
    5. 'index' → logprob: -10.750252723693848
    6. 'order' → logprob: -11.250252723693848
    7. 'result' → logprob: -11.500252723693848
    8. 'indices' → logprob: -12.250252723693848
    9. 'status' → logprob: -12.375252723693848
    10. 'n' → logprob: -12.750252723693848

Token 20: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.012988326139748096
    2. ' ' → logprob: -4.637988090515137
    3. 'i' → logprob: -5.762988090515137
    4. '_' → logprob: -10.512988090515137
    5. ' ‌' → logprob: -10.637988090515137
    6. ' ' → logprob: -10.762988090515137
    7. '	i' → logprob: -12.887988090515137
    8. '  ' → logprob: -12.887988090515137
    9. ' _' → logprob: -13.137988090515137
    10. ' I' → logprob: -13.262988090515137

Token 21: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011035211384296417
    2. 'in' → logprob: -4.886035442352295
    3. ' ' → logprob: -5.761035442352295
    4. ' n' → logprob: -9.386034965515137
    5. 'n' → logprob: -9.511034965515137
    6. '  ' → logprob: -9.886034965515137
    7. ' range' → logprob: -10.511034965515137
    8. 'range' → logprob: -11.011034965515137
    9. ' i' → logprob: -12.011034965515137
    10. ',' → logprob: -12.761034965515137

Token 22: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.006776946131139994
    2. 'range' → logprob: -5.006776809692383
    3. ' ' → logprob: -9.756776809692383
    4. ' xrange' → logprob: -13.506776809692383
    5. '	range' → logprob: -13.631776809692383
    6. '(range' → logprob: -14.631776809692383
    7. '_range' → logprob: -15.506776809692383
    8. ' ' → logprob: -15.881776809692383
    9. '  ' → logprob: -16.131776809692383
    10. ' ran' → logprob: -16.506776809692383

Token 23: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04537707939743996
    2. '(n' → logprob: -3.295377016067505
    3. ' (' → logprob: -4.920377254486084
    4. ' n' → logprob: -12.670376777648926
    5. ' ' → logprob: -12.920376777648926
    6. '(
' → logprob: -13.045376777648926
    7. '(i' → logprob: -13.420376777648926
    8. '(len' → logprob: -13.670376777648926
    9. '(range' → logprob: -14.295376777648926
    10. '(

' → logprob: -15.170376777648926

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003282048273831606
    2. ')' → logprob: -6.128282070159912
    3. '):
' → logprob: -7.128282070159912
    4. ':' → logprob: -8.253281593322754
    5. '+' → logprob: -11.253281593322754
    6. ' ):' → logprob: -11.878281593322754
    7. '-' → logprob: -12.128281593322754
    8. '):

' → logprob: -13.878281593322754
    9. '**' → logprob: -14.003281593322754
    10. ' ' → logprob: -14.003281593322754

Token 25: '   ' (ID: 271)
  Prédit: ' order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.5630245208740234
    2. ' st' → logprob: -1.3130245208740234
    3. '   ' → logprob: -2.3130245208740234
    4. '	st' → logprob: -3.3130245208740234
    5. 'order' → logprob: -4.688024520874023
    6. 'st' → logprob: -5.688024520874023
    7. '	order' → logprob: -5.938024520874023
    8. ' input' → logprob: -6.313024520874023
    9. ' ind' → logprob: -6.688024520874023
    10. '    ' → logprob: -6.813024520874023

Token 26: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' (adapté à ' order') → logprob: -0.6303847432136536
    2. ' order' → logprob: -1.0053846836090088
    3. 'st' → logprob: -2.630384683609009
    4. ' st' → logprob: -3.630384683609009
    5. 'name' → logprob: -7.130384922027588
    6. ' line' → logprob: -7.630384922027588
    7. 'line' → logprob: -8.13038444519043
    8. '   ' → logprob: -8.25538444519043
    9. ' name' → logprob: -8.38038444519043
    10. 's' → logprob: -8.50538444519043

Token 27: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.20147521793842316
    2. '[' → logprob: -1.7014752626419067
    3. ' [' → logprob: -10.951475143432617
    4. '[input' → logprob: -11.076475143432617
    5. '[I' → logprob: -11.201475143432617
    6. '\[' → logprob: -12.701475143432617
    7. '[...]' → logprob: -13.076475143432617
    8. '```' → logprob: -13.326475143432617
    9. '[int' → logprob: -13.701475143432617
    10. '[
' → logprob: -13.951475143432617

Token 28: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003979973960667849
    2. ' ]' → logprob: -5.7539801597595215
    3. ']=' → logprob: -7.5039801597595215
    4. '=' → logprob: -9.003979682922363
    5. ')' → logprob: -9.628979682922363
    6. ' =' → logprob: -10.003979682922363
    7. '[' → logprob: -11.753979682922363
    8. '][' → logprob: -13.253979682922363
    9. ']+=' → logprob: -13.628979682922363
    10. '])' → logprob: -13.753979682922363

Token 29: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.0833912044763565
    2. ' st' → logprob: -3.4583911895751953
    3. 'input' → logprob: -3.7083911895751953
    4. ' =' → logprob: -4.708391189575195
    5. ' input' → logprob: -4.708391189575195
    6. '=' → logprob: -5.708391189575195
    7. ' ' → logprob: -6.833391189575195
    8. '_=' → logprob: -8.333391189575195
    9. 's' → logprob: -8.458391189575195
    10. '=input' → logprob: -8.583391189575195

Token 30: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00018029935017693788
    2. '[' → logprob: -8.7501802444458
    3. '[input' → logprob: -11.8751802444458
    4. '[I' → logprob: -12.0001802444458
    5. '<|end|>' → logprob: -12.7501802444458
    6. '[user' → logprob: -13.3751802444458
    7. '[int' → logprob: -14.0001802444458
    8. 'i' → logprob: -14.1251802444458
    9. '[...]' → logprob: -14.3751802444458
    10. '<|end|>' → logprob: -14.5001802444458

Token 31: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06569813191890717
    2. ')' → logprob: -3.1906981468200684
    3. '=' → logprob: -4.065698146820068
    4. ' =' → logprob: -5.565698146820068
    5. ']=' → logprob: -7.065698146820068
    6. ' ]' → logprob: -8.19069766998291
    7. ')=' → logprob: -8.69069766998291
    8. '<|end|>' → logprob: -10.31569766998291
    9. ',' → logprob: -10.44069766998291
    10. ' ' → logprob: -10.56569766998291

Token 32: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5243022441864014
    2. ' =' → logprob: -0.8993022441864014
    3. '=input' → logprob: -6.7743024826049805
    4. ',' → logprob: -10.77430248260498
    5. 'input' → logprob: -12.14930248260498
    6. '<|end|>' → logprob: -13.39930248260498
    7. ' ' → logprob: -13.52430248260498
    8. ')' → logprob: -13.52430248260498
    9. '=list' → logprob: -13.64930248260498
    10. ',input' → logprob: -14.14930248260498

Token 33: ' map' (ID: 4014)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07103494554758072
    2. ' input' → logprob: -2.6960349082946777
    3. 'map' → logprob: -6.946034908294678
    4. ' map' → logprob: -8.946035385131836
    5. '(input' → logprob: -13.321035385131836
    6. ' ' → logprob: -13.821035385131836
    7. 'list' → logprob: -13.946035385131836
    8. '[input' → logprob: -14.571035385131836
    9. '	input' → logprob: -15.446035385131836
    10. 'tuple' → logprob: -15.446035385131836

Token 34: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.20478670299053192
    2. '(int' → logprob: -2.079786777496338
    3. '(input' → logprob: -2.829786777496338
    4. '(lambda' → logprob: -7.454786777496338
    5. '(' → logprob: -7.704786777496338
    6. 'str' → logprob: -9.45478630065918
    7. 'input' → logprob: -9.95478630065918
    8. '(list' → logprob: -12.07978630065918
    9. '[str' → logprob: -12.07978630065918
    10. '```' → logprob: -12.07978630065918

Token 35: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.16343528032302856
    2. ',' → logprob: -1.9134352207183838
    3. '(input' → logprob: -5.788435459136963
    4. 'input' → logprob: -9.038434982299805
    5. ' ,' → logprob: -11.288434982299805
    6. ',int' → logprob: -12.288434982299805
    7. ' input' → logprob: -13.663434982299805
    8. '[input' → logprob: -13.788434982299805
    9. '=input' → logprob: -13.913434982299805
    10. '<input' → logprob: -14.288434982299805

Token 36: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02977236546576023
    2. ' input' → logprob: -3.5297722816467285
    3. ')' → logprob: -11.404772758483887
    4. '(input' → logprob: -12.029772758483887
    5. ',input' → logprob: -13.779772758483887
    6. '=input' → logprob: -13.904772758483887
    7. '   ' → logprob: -14.154772758483887
    8. '<input' → logprob: -14.154772758483887
    9. '	input' → logprob: -14.779772758483887
    10. '_input' → logprob: -14.904772758483887

Token 37: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.003458229824900627
    2. '()' → logprob: -5.753458023071289
    3. '())' → logprob: -8.253458023071289
    4. ')' → logprob: -11.128458023071289
    5. '()
' → logprob: -13.253458023071289
    6. ' ().' → logprob: -13.878458023071289
    7. '(' → logprob: -14.753458023071289
    8. '()`' → logprob: -15.003458023071289
    9. '()))' → logprob: -15.128458023071289
    10. '()[' → logprob: -15.253458023071289

Token 38: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.003239505458623171
    2. 'strip' → logprob: -5.753239631652832
    3. 'rstrip' → logprob: -9.753239631652832
    4. ' split' → logprob: -12.628239631652832
    5. 'rs' → logprob: -15.003239631652832
    6. 'spl' → logprob: -16.378238677978516
    7. '(split' → logprob: -16.503238677978516
    8. ')' → logprob: -18.253238677978516
    9. ' strip' → logprob: -18.628238677978516
    10. '.split' → logprob: -19.003238677978516

Token 39: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0157913900911808
    2. '()' → logprob: -5.140791416168213
    3. ')' → logprob: -5.265791416168213
    4. '('' → logprob: -5.640791416168213
    5. '()))' → logprob: -7.265791416168213
    6. '(' → logprob: -8.640790939331055
    7. '))' → logprob: -8.765790939331055
    8. '())
' → logprob: -10.515790939331055
    9. '')' → logprob: -11.640790939331055
    10. '(','' → logprob: -11.765790939331055

Token 40: 'dic' (ID: 62630)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16966350376605988
    2. 'if' → logprob: -2.544663429260254
    3. 'result' → logprob: -4.044663429260254
    4. '#' → logprob: -4.419663429260254
    5. 'i' → logprob: -4.794663429260254
    6. 'n' → logprob: -5.169663429260254
    7. 'max' → logprob: -5.169663429260254
    8. 's' → logprob: -6.044663429260254
    9. 'm' → logprob: -6.169663429260254
    10. 't' → logprob: -6.294663429260254

Token 41: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3299262821674347
    2. 't' → logprob: -1.9549262523651123
    3. ' =' → logprob: -3.2049262523651123
    4. '=' → logprob: -3.4549262523651123
    5. '_' → logprob: -4.204926490783691
    6. 'tion' → logprob: -4.329926490783691
    7. ')' → logprob: -4.704926490783691
    8. ']' → logprob: -5.079926490783691
    9. '\[' → logprob: -5.329926490783691
    10. '.' → logprob: -5.579926490783691

Token 42: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0002680112374946475
    2. ' {}' → logprob: -8.25026798248291
    3. 'dict' → logprob: -12.37526798248291
    4. '{' → logprob: -13.50026798248291
    5. 'default' → logprob: -14.62526798248291
    6. '[]' → logprob: -15.50026798248291
    7. ' defaultdict' → logprob: -15.50026798248291
    8. '{}
' → logprob: -16.500268936157227
    9. ' dict' → logprob: -16.625268936157227
    10. '{}\' → logprob: -17.250268936157227

Token 43: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0036139667499810457
    2. ' for' → logprob: -5.6286139488220215
    3. 'count' → logprob: -12.25361442565918
    4. '```' → logprob: -13.25361442565918
    5. 'order' → logprob: -13.75361442565918
    6. 'i' → logprob: -13.75361442565918
    7. ' ' → logprob: -14.62861442565918
    8. 'from' → logprob: -14.62861442565918
    9. 'current' → logprob: -15.00361442565918
    10. 's' → logprob: -15.12861442565918

Token 44: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20408901572227478
    2. 'i' → logprob: -1.7040890455245972
    3. ' order' → logprob: -6.704089164733887
    4. ' key' → logprob: -7.579089164733887
    5. 'order' → logprob: -8.579089164733887
    6. ' word' → logprob: -8.704089164733887
    7. ' o' → logprob: -9.079089164733887
    8. ' ' → logprob: -9.454089164733887
    9. 'o' → logprob: -9.454089164733887
    10. ' s' → logprob: -10.329089164733887

Token 45: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16558633744716644
    2. 'in' → logprob: -1.9155863523483276
    3. ' ' → logprob: -5.290586471557617
    4. '  ' → logprob: -8.790586471557617
    5. 'n' → logprob: -9.415586471557617
    6. '   ' → logprob: -10.790586471557617
    7. ',' → logprob: -11.415586471557617
    8. 'range' → logprob: -11.415586471557617
    9. '	in' → logprob: -11.790586471557617
    10. '```' → logprob: -12.415586471557617

Token 46: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03401252254843712
    2. ' range' → logprob: -3.40901255607605
    3. 'order' → logprob: -8.034012794494629
    4. 'st' → logprob: -10.409012794494629
    5. ' order' → logprob: -12.159012794494629
    6. ' ' → logprob: -13.784012794494629
    7. 'ran' → logprob: -13.784012794494629
    8. 'r' → logprob: -14.034012794494629
    9. ' st' → logprob: -14.034012794494629
    10. '   ' → logprob: -14.534012794494629

Token 47: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.002605029381811619
    2. '(' → logprob: -6.002604961395264
    3. ' (' → logprob: -9.502605438232422
    4. ' n' → logprob: -9.877605438232422
    5. 'n' → logprob: -13.002605438232422
    6. '(len' → logprob: -14.002605438232422
    7. ' ' → logprob: -16.127605438232422
    8. '(
' → logprob: -17.252605438232422
    9. '(s' → logprob: -17.502605438232422
    10. ')' → logprob: -17.752605438232422

Token 48: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007519744685851038
    2. '):
' → logprob: -7.250751972198486
    3. ')' → logprob: -10.875752449035645
    4. ' ):' → logprob: -11.625752449035645
    5. ':' → logprob: -11.750752449035645
    6. '+' → logprob: -13.000752449035645
    7. '):
' → logprob: -13.750752449035645
    8. '-' → logprob: -13.750752449035645
    9. '   ' → logprob: -14.125752449035645
    10. '}:' → logprob: -15.375752449035645

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006107370834797621
    2. ' if' → logprob: -5.131107330322266
    3. ' dic' → logprob: -9.131107330322266
    4. '	if' → logprob: -11.881107330322266
    5. '```' → logprob: -11.881107330322266
    6. '   ' → logprob: -12.006107330322266
    7. 'if' → logprob: -12.131107330322266
    8. '<|end|>' → logprob: -12.381107330322266
    9. '    ' → logprob: -12.506107330322266
    10. ' `' → logprob: -12.506107330322266

Token 50: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5192351341247559
    2. ' if' → logprob: -1.0192351341247559
    3. 'key' → logprob: -4.519235134124756
    4. 'dic' → logprob: -4.769235134124756
    5. ' key' → logprob: -4.894235134124756
    6. '   ' → logprob: -5.269235134124756
    7. 'order' → logprob: -5.269235134124756
    8. ' order' → logprob: -6.019235134124756
    9. ' dic' → logprob: -6.394235134124756
    10. 'word' → logprob: -6.894235134124756

Token 51: ' order' (ID: 2569)
  Prédit: ' order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.00979575328528881
    2. 'order' → logprob: -4.759795665740967
    3. ' st' → logprob: -6.884795665740967
    4. ' not' → logprob: -9.509796142578125
    5. 'st' → logprob: -10.259796142578125
    6. ' ' → logprob: -10.884796142578125
    7. ' ' → logprob: -12.259796142578125
    8. '(order' → logprob: -12.259796142578125
    9. ' ord' → logprob: -12.384796142578125
    10. ' orders' → logprob: -12.884796142578125

Token 52: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.7372048862162046e-05
    2. '[' → logprob: -11.000027656555176
    3. ' [' → logprob: -11.750027656555176
    4. '[I' → logprob: -13.250027656555176
    5. '```' → logprob: -15.250027656555176
    6. '   ' → logprob: -15.625027656555176
    7. '[n' → logprob: -16.62502670288086
    8. '\[' → logprob: -17.37502670288086
    9. '[
' → logprob: -17.50002670288086
    10. '[a' → logprob: -17.50002670288086

Token 53: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0713636726140976
    2. '[i' → logprob: -3.196363687515259
    3. ']==' → logprob: -4.19636344909668
    4. ' not' → logprob: -5.44636344909668
    5. '[' → logprob: -5.94636344909668
    6. ' in' → logprob: -6.07136344909668
    7. ' ]' → logprob: -6.82136344909668
    8. '==' → logprob: -7.07136344909668
    9. '][' → logprob: -7.57136344909668
    10. 'not' → logprob: -7.94636344909668

Token 54: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.9734955430030823
    2. ' not' → logprob: -1.5984954833984375
    3. ' in' → logprob: -1.7234954833984375
    4. '==' → logprob: -1.7234954833984375
    5. '[' → logprob: -3.2234954833984375
    6. 'in' → logprob: -4.2234954833984375
    7. 'not' → logprob: -5.2234954833984375
    8. ' ' → logprob: -7.2234954833984375
    9. '[i' → logprob: -7.4734954833984375
    10. '=' → logprob: -7.7234954833984375

Token 55: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.09489446878433228
    2. '"' → logprob: -3.3448944091796875
    3. ''s' → logprob: -4.5948944091796875
    4. ''A' → logprob: -4.9698944091796875
    5. ''b' → logprob: -5.3448944091796875
    6. ''in' → logprob: -5.8448944091796875
    7. ''a' → logprob: -5.8448944091796875
    8. ' '' → logprob: -5.8448944091796875
    9. ''o' → logprob: -5.8448944091796875
    10. ''d' → logprob: -5.9698944091796875

Token 56: 'insert' (ID: 14813)
  Prédit: 'insert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'insert' → logprob: -0.5395883321762085
    2. 'I' → logprob: -1.9145883321762085
    3. 'buy' → logprob: -2.914588451385498
    4. 'add' → logprob: -3.039588451385498
    5. 'push' → logprob: -3.289588451385498
    6. ''' → logprob: -3.664588451385498
    7. 'enter' → logprob: -3.789588451385498
    8. 'sell' → logprob: -4.164588451385498
    9. 'A' → logprob: -4.414588451385498
    10. '"' → logprob: -4.789588451385498

Token 57: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.007084752898663282
    2. ''' → logprob: -5.007084846496582
    3. ' ':' → logprob: -8.757084846496582
    4. '':
' → logprob: -9.132084846496582
    5. ' '' → logprob: -10.007084846496582
    6. ':' → logprob: -11.132084846496582
    7. '':
' → logprob: -11.507084846496582
    8. '':'' → logprob: -11.507084846496582
    9. '":' → logprob: -12.507084846496582
    10. '(':' → logprob: -12.632084846496582

Token 58: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2384939342737198
    2. ' :' → logprob: -2.1134939193725586
    3. ' dic' → logprob: -3.3634939193725586
    4. ' st' → logprob: -3.8634939193725586
    5. '   ' → logprob: -3.9884939193725586
    6. ' and' → logprob: -4.488493919372559
    7. 'dic' → logprob: -6.488493919372559
    8. ' ' → logprob: -6.613493919372559
    9. '       ' → logprob: -6.988493919372559
    10. '    ' → logprob: -7.988493919372559

Token 59: ' dic' (ID: 22318)
  Prédit: ' dic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dic' → logprob: -0.06428132951259613
    2. 'dic' (adapté à ' dic') → logprob: -2.8142812252044678
    3. ' st' → logprob: -7.564281463623047
    4. ' key' → logprob: -7.564281463623047
    5. '   ' → logprob: -7.689281463623047
    6. ' d' → logprob: -9.439281463623047
    7. 'st' → logprob: -9.439281463623047
    8. ' ' → logprob: -9.439281463623047
    9. 'key' → logprob: -9.564281463623047
    10. ' if' → logprob: -9.564281463623047

Token 60: '.setdefault' (ID: 113053)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0037928272504359484
    2. '.setdefault' → logprob: -5.753792762756348
    3. '.update' → logprob: -9.503792762756348
    4. '[...]' → logprob: -9.503792762756348
    5. '.' → logprob: -9.628792762756348
    6. ' [' → logprob: -9.628792762756348
    7. '[data' → logprob: -9.878792762756348
    8. '```' → logprob: -10.378792762756348
    9. '['' → logprob: -10.503792762756348
    10. '[input' → logprob: -10.753792762756348

Token 61: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.0005096645909361541
    2. '(' → logprob: -7.750509738922119
    3. ' (' → logprob: -10.875509262084961
    4. 'st' → logprob: -11.125509262084961
    5. '(order' → logprob: -11.375509262084961
    6. '('' → logprob: -11.500509262084961
    7. ' st' → logprob: -11.750509262084961
    8. ')' → logprob: -12.875509262084961
    9. '(str' → logprob: -13.125509262084961
    10. '(key' → logprob: -13.625509262084961

Token 62: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.080963092041202e-06
    2. '[' → logprob: -12.250004768371582
    3. '```' → logprob: -16.6250057220459
    4. ')' → logprob: -17.0000057220459
    5. '[n' → logprob: -17.8750057220459
    6. 'i' → logprob: -18.1250057220459
    7. '[int' → logprob: -18.2500057220459
    8. ' [' → logprob: -18.2500057220459
    9. ' ' → logprob: -18.3750057220459
    10. '(i' → logprob: -18.5000057220459

Token 63: '],' (ID: 2155)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.35698202252388
    2. '],' → logprob: -1.2319819927215576
    3. ']' → logprob: -5.856982231140137
    4. '],[' → logprob: -6.106982231140137
    5. '[' → logprob: -6.856982231140137
    6. ',' → logprob: -6.981982231140137
    7. '][' → logprob: -7.731982231140137
    8. '])' → logprob: -8.481982231140137
    9. ''],' → logprob: -8.731982231140137
    10. ' ],' → logprob: -8.856982231140137

Token 64: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.24630232155323029
    2. '1' → logprob: -1.8713023662567139
    3. ' ' → logprob: -2.996302366256714
    4. ')' → logprob: -5.371302127838135
    5. '[])' → logprob: -5.746302127838135
    6. ' True' → logprob: -6.996302127838135
    7. '[]' → logprob: -7.246302127838135
    8. ' )' → logprob: -7.246302127838135
    9. ' [])' → logprob: -7.246302127838135
    10. 'True' → logprob: -7.246302127838135

Token 65: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026000795885920525
    2. '1' → logprob: -4.4010009765625
    3. 'dic' → logprob: -5.0260009765625
    4. 'True' → logprob: -6.2760009765625
    5. '[])' → logprob: -6.4010009765625
    6. ' ' → logprob: -6.7760009765625
    7. '[]' → logprob: -7.4010009765625
    8. 'i' → logprob: -8.0260009765625
    9. 'int' → logprob: -8.2760009765625
    10. ')' → logprob: -8.9635009765625

Token 66: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.051387276500463486
    2. ' )' → logprob: -3.301387310028076
    3. ')+' → logprob: -4.926387310028076
    4. '+' → logprob: -5.926387310028076
    5. ',' → logprob: -6.426387310028076
    6. '<|end|>' → logprob: -7.551387310028076
    7. ' +=' → logprob: -7.926387310028076
    8. ' +' → logprob: -8.426386833190918
    9. ' ,' → logprob: -8.426386833190918
    10. '+=' → logprob: -8.551386833190918

Token 67: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: ' else' (ID: 1203)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.43377771973609924
    2. '<|end|>' → logprob: -1.6837776899337769
    3. ' +' → logprob: -2.5587778091430664
    4. ' +=' → logprob: -3.5587778091430664
    5. ' ' → logprob: -3.9337778091430664
    6. '   ' → logprob: -4.808777809143066
    7. '<|end|>' → logprob: -5.058777809143066
    8. '+=' → logprob: -5.183777809143066
    9. ')' → logprob: -5.183777809143066
    10. 'dic' → logprob: -5.808777809143066

Token 69: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01845601759850979
    2. '       ' → logprob: -4.643455982208252
    3. ':
' → logprob: -5.768455982208252
    4. '   ' → logprob: -6.268455982208252
    5. ' if' → logprob: -7.018455982208252
    6. '    ' → logprob: -7.018455982208252
    7. 'if' → logprob: -7.768455982208252
    8. '[' → logprob: -8.26845645904541
    9. '        ' → logprob: -8.39345645904541
    10. ' :' → logprob: -8.64345645904541

Token 70: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6094197630882263
    2. ' if' → logprob: -1.484419822692871
    3. '   ' → logprob: -2.109419822692871
    4. ' dic' → logprob: -3.359419822692871
    5. 'if' → logprob: -3.609419822692871
    6. ' del' → logprob: -4.234419822692871
    7. 'print' → logprob: -4.484419822692871
    8. 'dic' → logprob: -4.609419822692871
    9. ' print' → logprob: -5.734419822692871
    10. '```' → logprob: -5.984419822692871

Token 71: ' if' (ID: 538)
  Prédit: ' dic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dic' → logprob: -0.9223063588142395
    2. 'print' → logprob: -1.7973062992095947
    3. 'dic' → logprob: -1.7973062992095947
    4. ' if' → logprob: -2.1723062992095947
    5. ' print' → logprob: -2.6723062992095947
    6. ' del' → logprob: -3.2973062992095947
    7. 'if' (adapté à ' if') → logprob: -3.4223062992095947
    8. 'del' → logprob: -4.172306537628174
    9. '   ' → logprob: -6.672306537628174
    10. 'd' → logprob: -7.672306537628174

Token 72: ' st' (ID: 420)
  Prédit: ' st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' st' → logprob: -0.03297717496752739
    2. ' order' → logprob: -4.032977104187012
    3. 'st' → logprob: -4.282977104187012
    4. ' dic' → logprob: -7.782977104187012
    5. 'order' → logprob: -8.282977104187012
    6. ' ' → logprob: -8.782977104187012
    7. 'dic' → logprob: -10.657977104187012
    8. ' ' → logprob: -11.532977104187012
    9. ' ord' → logprob: -11.595477104187012
    10. ' len' → logprob: -12.032977104187012

Token 73: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.584239938296378e-06
    2. '[' → logprob: -12.000007629394531
    3. '[I' → logprob: -14.375007629394531
    4. ' in' → logprob: -15.125007629394531
    5. '<|end|>' → logprob: -15.750007629394531
    6. '[j' → logprob: -16.00000762939453
    7. '[user' → logprob: -17.12500762939453
    8. '<|end|>' → logprob: -17.50000762939453
    9. '[in' → logprob: -17.75000762939453
    10. '[s' → logprob: -17.87500762939453

Token 74: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0861850157380104
    2. ' in' → logprob: -2.5861849784851074
    3. 'in' → logprob: -5.086184978485107
    4. '[i' → logprob: -7.711184978485107
    5. '[' → logprob: -8.961185455322266
    6. ' not' → logprob: -9.211185455322266
    7. ' ]' → logprob: -9.461185455322266
    8. 'not' → logprob: -9.586185455322266
    9. '']' → logprob: -9.711185455322266
    10. ')' → logprob: -9.711185455322266

Token 75: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.013686927035450935
    2. 'in' → logprob: -4.5136871337890625
    3. ' not' → logprob: -6.2636871337890625
    4. ' ' → logprob: -7.3886871337890625
    5. ']' → logprob: -10.388687133789062
    6. '[' → logprob: -10.888687133789062
    7. 'not' → logprob: -10.888687133789062
    8. ')' → logprob: -11.388687133789062
    9. ' '' → logprob: -11.888687133789062
    10. '<|end|>' → logprob: -12.013687133789062

Token 76: ' dic' (ID: 22318)
  Prédit: ' dic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dic' → logprob: -0.693165123462677
    2. 'dic' → logprob: -0.693165123462677
    3. '(dic' → logprob: -11.318164825439453
    4. 'd' → logprob: -13.568164825439453
    5. '_dic' → logprob: -13.568164825439453
    6. 'dict' → logprob: -13.693164825439453
    7. ' ' → logprob: -13.693164825439453
    8. 'Dic' → logprob: -15.068164825439453
    9. ' dict' → logprob: -16.693164825439453
    10. 'dice' → logprob: -16.818164825439453

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000693016336299479
    2. ':
' → logprob: -7.625692844390869
    3. '.keys' → logprob: -9.500693321228027
    4. '):' → logprob: -10.250693321228027
    5. ' :' → logprob: -10.375693321228027
    6. '           ' → logprob: -10.375693321228027
    7. ' and' → logprob: -11.750693321228027
    8. '.remove' → logprob: -12.125693321228027
    9. '.' → logprob: -12.500693321228027
    10. ':

' → logprob: -12.625693321228027

Token 78: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06272470206022263
    2. ' del' → logprob: -3.9377245903015137
    3. '       ' → logprob: -3.9377245903015137
    4. 'del' → logprob: -4.187724590301514
    5. 'print' → logprob: -6.187724590301514
    6. ' dic' → logprob: -6.437724590301514
    7. 'dic' → logprob: -6.562724590301514
    8. ' print' → logprob: -7.437724590301514
    9. '	       ' → logprob: -7.687724590301514
    10. '```' → logprob: -8.937725067138672

Token 79: ' print' (ID: 2123)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.12953904271125793
    2. 'dic' → logprob: -2.5045390129089355
    3. '           ' → logprob: -4.0045390129089355
    4. 'print' (adapté à ' print') → logprob: -4.2545390129089355
    5. ' del' → logprob: -5.0045390129089355
    6. ' dic' → logprob: -8.129539489746094
    7. '       ' → logprob: -8.879539489746094
    8. 'if' → logprob: -9.754539489746094
    9. ' print' → logprob: -10.004539489746094
    10. '   ' → logprob: -10.379539489746094

Token 80: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5375359058380127
    2. '(dic' → logprob: -1.2875359058380127
    3. '('' → logprob: -2.7875359058380127
    4. '("' → logprob: -3.0375359058380127
    5. '(st' → logprob: -3.5375359058380127
    6. '(True' → logprob: -7.662535667419434
    7. '(i' → logprob: -7.912535667419434
    8. '(-' → logprob: -9.787535667419434
    9. 'dic' → logprob: -10.037535667419434
    10. '()' → logprob: -10.037535667419434

Token 81: 'yes' (ID: 6763)
  Prédit: 'yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yes' → logprob: -0.0709235742688179
    2. 'Yes' → logprob: -3.6959235668182373
    3. 'YES' → logprob: -4.820923805236816
    4. '1' → logprob: -5.320923805236816
    5. 'true' → logprob: -5.320923805236816
    6. ''' → logprob: -5.570923805236816
    7. ' yes' → logprob: -5.570923805236816
    8. 'no' → logprob: -5.695923805236816
    9. 'exist' → logprob: -5.695923805236816
    10. 'error' → logprob: -6.320923805236816

Token 82: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.26404356956481934
    2. ')' → logprob: -1.5140435695648193
    3. '')
' → logprob: -5.139043807983398
    4. '<|end|>' → logprob: -6.014043807983398
    5. 'else' → logprob: -6.389043807983398
    6. '")' → logprob: -7.014043807983398
    7. ')
' → logprob: -7.264043807983398
    8. '\n' → logprob: -8.639043807983398
    9. ',' → logprob: -9.764043807983398
    10. '<|end|>' → logprob: -10.514043807983398

Token 83: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020809993147850037
    2. 'else' → logprob: -4.020810127258301
    3. '<|end|>' → logprob: -6.145810127258301
    4. ' else' → logprob: -7.895810127258301
    5. '   ' → logprob: -9.7708101272583
    6. '           ' → logprob: -10.5208101272583
    7. '<|end|>' → logprob: -10.7708101272583
    8. '        ' → logprob: -11.7708101272583
    9. 'elif' → logprob: -12.0208101272583
    10. '```' → logprob: -12.1458101272583

Token 84: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5875770449638367
    2. 'else' (adapté à ' else') → logprob: -0.8375770449638367
    3. ' else' → logprob: -4.462576866149902
    4. '	else' → logprob: -11.087576866149902
    5. '   ' → logprob: -11.962576866149902
    6. '	' → logprob: -12.212576866149902
    7. '<|end|>' → logprob: -12.462576866149902
    8. 'elif' → logprob: -13.587576866149902
    9. '```' → logprob: -13.712576866149902
    10. '           ' → logprob: -13.712576866149902

Token 85: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22624893486499786
    2. ':' → logprob: -1.6012489795684814
    3. ':
' → logprob: -7.476248741149902
    4. '          ' → logprob: -9.351248741149902
    5. '<|end|>' → logprob: -9.976248741149902
    6. '	       ' → logprob: -10.726248741149902
    7. '.' → logprob: -10.851248741149902
    8. '       ' → logprob: -11.101248741149902
    9. 'print' → logprob: -11.226248741149902
    10. '               ' → logprob: -11.351248741149902

Token 86: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2895309627056122
    2. '           ' → logprob: -1.4145309925079346
    3. ' print' → logprob: -5.1645307540893555
    4. '       ' → logprob: -6.2895307540893555
    5. '   ' → logprob: -7.7895307540893555
    6. '```' → logprob: -9.289530754089355
    7. '	       ' → logprob: -10.164530754089355
    8. ' ' → logprob: -10.289530754089355
    9. '          ' → logprob: -10.414530754089355
    10. '	print' → logprob: -10.664530754089355

Token 87: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -7.815280696377158e-05
    2. ' print' → logprob: -9.500078201293945
    3. '   ' → logprob: -13.000078201293945
    4. '           ' → logprob: -15.125078201293945
    5. '	print' → logprob: -15.125078201293945
    6. '       ' → logprob: -15.750078201293945
    7. ' ' → logprob: -16.250078201293945
    8. '  ' → logprob: -17.250078201293945
    9. 'printf' → logprob: -17.500078201293945
    10. '    ' → logprob: -17.750078201293945

Token 88: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.576140820980072
    2. '('' → logprob: -0.826140820980072
    3. '("' → logprob: -9.451140403747559
    4. '('(' → logprob: -10.326140403747559
    5. ''' → logprob: -10.576140403747559
    6. '(
' → logprob: -10.951140403747559
    7. '(`' → logprob: -11.076140403747559
    8. '()' → logprob: -11.826140403747559
    9. '(

' → logprob: -11.951140403747559
    10. ' (' → logprob: -12.326140403747559

Token 89: 'no' (ID: 1750)
  Prédit: 'no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -3.531315314830863e-06
    2. ''' → logprob: -13.000003814697266
    3. ' no' → logprob: -14.125003814697266
    4. '')' → logprob: -15.125003814697266
    5. '	no' → logprob: -15.625003814697266
    6. 'No' → logprob: -16.000003814697266
    7. 'na' → logprob: -18.500003814697266
    8. ' ' → logprob: -18.750003814697266
    9. ')' → logprob: -19.250003814697266
    10. '(no' → logprob: -19.875003814697266

Token 90: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06197945028543472
    2. '')' → logprob: -2.8119795322418213
    3. '")' → logprob: -12.186979293823242
    4. '`)' → logprob: -12.436979293823242
    5. '```' → logprob: -13.561979293823242
    6. ')
' → logprob: -14.561979293823242
    7. ''' → logprob: -15.436979293823242
    8. ' )' → logprob: -15.561979293823242
    9. '')
' → logprob: -16.061979293823242
    10. '）' → logprob: -16.311979293823242


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 88
Tokens correctement prédits (1ère position, stricte): 35
Tokens correctement prédits (1ère position, avec adaptation): 38
Tokens correctement prédits (top 10): 70
Précision stricte (1ère position): 39.77%
Précision adaptée (1ère position): 43.18%
Précision (top 10): 79.55%
================================================================================
