================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import deque

D = set()
N = int(input())

for i in range(N):
	c, s = input().split()
	if c == "insert":
		D.add(s)
	elif c == "find":
		if (s in D):
			print("yes")
		else:
			print("no")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.0460870265960693
    2. 'default' → logprob: -1.1710870265960693
    3. 'abc' → logprob: -1.7960870265960693
    4. 'Counter' → logprob: -2.4210870265960693
    5. ' defaultdict' → logprob: -2.6710870265960693
    6. 'named' → logprob: -5.421087265014648
    7. ' Counter' → logprob: -5.546087265014648
    8. ' abc' → logprob: -6.046087265014648
    9. ' deque' → logprob: -6.421087265014648
    10. '```' → logprob: -6.796087265014648

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014323927462100983
    2. '.' → logprob: -5.014323711395264
    3. '\(' → logprob: -5.764323711395264
    4. '```' → logprob: -6.889323711395264
    5. '\' → logprob: -7.014323711395264
    6. '\n' → logprob: -7.264323711395264
    7. '[' → logprob: -8.014324188232422
    8. '(
' → logprob: -8.264324188232422
    9. 'import' → logprob: -8.389324188232422
    10. 'newline' → logprob: -8.389324188232422

Token 5: 'D' (ID: 35)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0019758609123528004
    2. '\n' → logprob: -7.501976013183594
    3. '\' → logprob: -8.126976013183594
    4. '[' → logprob: -8.376976013183594
    5. '\(' → logprob: -8.626976013183594
    6. 'a' → logprob: -9.001976013183594
    7. 'newline' → logprob: -9.251976013183594
    8. '(
' → logprob: -9.376976013183594
    9. 'import' → logprob: -9.501976013183594
    10. ',' → logprob: -9.626976013183594

Token 6: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -4.930552313453518e-05
    2. ' =' → logprob: -10.625049591064453
    3. 'E' → logprob: -11.375049591064453
    4. '=' → logprob: -11.500049591064453
    5. '   ' → logprob: -13.875049591064453
    6. ' e' → logprob: -14.250049591064453
    7. 'eq' → logprob: -15.375049591064453
    8. 'Q' → logprob: -15.500049591064453
    9. '	e' → logprob: -15.500049591064453
    10. ':' → logprob: -15.750049591064453

Token 7: ' set' (ID: 920)
  Prédit: ' deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.020555783063173294
    2. 'deque' → logprob: -3.8955557346343994
    3. ' ' → logprob: -12.02055549621582
    4. ' defaultdict' → logprob: -12.64555549621582
    5. ' de' → logprob: -13.02055549621582
    6. 'Deque' → logprob: -14.27055549621582
    7. ' dequeue' → logprob: -14.27055549621582
    8. '```' → logprob: -15.27055549621582
    9. ' ```' → logprob: -15.39555549621582
    10. ' []' → logprob: -15.89555549621582

Token 8: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01659413054585457
    2. '()' → logprob: -4.141593933105469
    3. '([' → logprob: -8.141593933105469
    4. '((' → logprob: -8.891593933105469
    5. '({' → logprob: -10.516593933105469
    6. '([]' → logprob: -10.891593933105469
    7. '([(' → logprob: -11.016593933105469
    8. '(range' → logprob: -11.516593933105469
    9. '(
' → logprob: -11.641593933105469
    10. '(D' → logprob: -11.641593933105469

Token 9: 'N' (ID: 45)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05371501296758652
    2. '.' → logprob: -3.4287149906158447
    3. '(
' → logprob: -4.553715229034424
    4. '()' → logprob: -5.928715229034424
    5. ',' → logprob: -6.303715229034424
    6. 'D' → logprob: -7.053715229034424
    7. 'a' → logprob: -7.303715229034424
    8. 'd' → logprob: -7.678715229034424
    9. '.add' → logprob: -8.053714752197266
    10. 's' → logprob: -8.178714752197266

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14365771412849426
    2. '=' → logprob: -2.893657684326172
    3. ' ' → logprob: -3.018657684326172
    4. '_' → logprob: -3.893657684326172
    5. '.' → logprob: -5.893657684326172
    6. ',' → logprob: -6.518657684326172
    7. 'u' → logprob: -7.143657684326172
    8. 'E' → logprob: -7.268657684326172
    9. 'e' → logprob: -7.393657684326172
    10. '  ' → logprob: -7.643657684326172

Token 11: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3551880121231079
    2. ' int' → logprob: -1.855188012123108
    3. '10' → logprob: -2.8551878929138184
    4. 'int' → logprob: -3.1051878929138184
    5. '0' → logprob: -4.230187892913818
    6. 'deque' → logprob: -4.355187892913818
    7. ' []' → logprob: -5.605187892913818
    8. ' deque' → logprob: -5.855187892913818
    9. '5' → logprob: -5.980187892913818
    10. '100' → logprob: -6.355187892913818

Token 12: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017491996986791492
    2. '('' → logprob: -6.876749038696289
    3. '(input' → logprob: -7.501749038696289
    4. '()' → logprob: -9.251749038696289
    5. '("' → logprob: -10.626749038696289
    6. ''' → logprob: -10.876749038696289
    7. '(
' → logprob: -12.126749038696289
    8. '(`' → logprob: -12.251749038696289
    9. '"' → logprob: -13.001749038696289
    10. '(user' → logprob: -13.376749038696289

Token 13: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32240399718284607
    2. '())' → logprob: -2.072403907775879
    3. '()' → logprob: -2.197403907775879
    4. '(' → logprob: -3.322403907775879
    5. '))' → logprob: -6.447403907775879
    6. '')' → logprob: -8.072403907775879
    7. '`)' → logprob: -8.447403907775879
    8. '('' → logprob: -8.947403907775879
    9. '")' → logprob: -9.072403907775879
    10. '(
' → logprob: -9.322403907775879

Token 14: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005258689634501934
    2. ' for' → logprob: -7.625525951385498
    3. 'queue' → logprob: -11.00052547454834
    4. 'while' → logprob: -11.37552547454834
    5. 'q' → logprob: -12.75052547454834
    6. 'd' → logprob: -13.00052547454834
    7. 'deque' → logprob: -13.50052547454834
    8. '```' → logprob: -13.87552547454834
    9. 'graph' → logprob: -14.75052547454834
    10. 'Q' → logprob: -14.87552547454834

Token 15: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.013330926187336445
    2. ' i' → logprob: -4.763330936431885
    3. '  ' → logprob: -5.388330936431885
    4. ' )' → logprob: -10.013330459594727
    5. ' ‌' → logprob: -11.013330459594727
    6. '_' → logprob: -11.513330459594727
    7. ' I' → logprob: -11.638330459594727
    8. ' range' → logprob: -12.138330459594727
    9. ' ' → logprob: -12.138330459594727
    10. ')' → logprob: -12.263330459594727

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03814912959933281
    2. 'in' → logprob: -3.413149118423462
    3. ' ' → logprob: -5.538149356842041
    4. 'n' → logprob: -8.163148880004883
    5. ' n' → logprob: -8.788148880004883
    6. '  ' → logprob: -10.288148880004883
    7. ' i' → logprob: -10.538148880004883
    8. '_' → logprob: -10.788148880004883
    9. 'range' → logprob: -12.038148880004883
    10. ')' → logprob: -12.163148880004883

Token 17: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.012522606179118156
    2. 'range' → logprob: -4.3875226974487305
    3. ' ' → logprob: -12.13752269744873
    4. '(range' → logprob: -12.26252269744873
    5. '	range' → logprob: -13.26252269744873
    6. ' xrange' → logprob: -14.76252269744873
    7. ')' → logprob: -15.38752269744873
    8. '_range' → logprob: -16.637521743774414
    9. '```' → logprob: -16.637521743774414
    10. '  ' → logprob: -16.637521743774414

Token 18: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002632430987432599
    2. ' (' → logprob: -8.375263214111328
    3. '(N' → logprob: -11.250263214111328
    4. '(n' → logprob: -12.125263214111328
    5. '(range' → logprob: -12.500263214111328
    6. '(
' → logprob: -12.750263214111328
    7. '(len' → logprob: -12.750263214111328
    8. ' ' → logprob: -13.750263214111328
    9. '(i' → logprob: -13.875263214111328
    10. '(

' → logprob: -14.625263214111328

Token 19: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20302212238311768
    2. ')' → logprob: -1.7030221223831177
    3. ' ):' → logprob: -7.078022003173828
    4. ' )' → logprob: -8.203022003173828
    5. ':' → logprob: -8.453022003173828
    6. '+' → logprob: -8.453022003173828
    7. ' ' → logprob: -10.953022003173828
    8. '):
' → logprob: -10.953022003173828
    9. ',' → logprob: -11.328022003173828
    10. '():' → logprob: -13.453022003173828

Token 20: '	c' (ID: 2736)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02511485666036606
    2. ' input' → logprob: -4.775115013122559
    3. ' s' → logprob: -5.025115013122559
    4. '    ' → logprob: -6.400115013122559
    5. ' )' → logprob: -6.525115013122559
    6. 'input' → logprob: -6.900115013122559
    7. ' 
' → logprob: -7.025115013122559
    8. ' i' → logprob: -7.400115013122559
    9. ' (' → logprob: -7.775115013122559
    10. '     
' → logprob: -7.900115013122559

Token 21: ',' (ID: 11)
  Prédit: 'ode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ode' → logprob: -0.1582590788602829
    2. 'i' → logprob: -3.658259153366089
    3. 'har' → logprob: -3.658259153366089
    4. 'urrent' → logprob: -4.03325891494751
    5. '   ' → logprob: -4.65825891494751
    6. ' ' → logprob: -5.15825891494751
    7. 'c' → logprob: -5.15825891494751
    8. 'o' → logprob: -5.40825891494751
    9. 'ounter' → logprob: -5.40825891494751
    10. 'ont' → logprob: -5.40825891494751

Token 22: ' s' (ID: 265)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6972136497497559
    2. 'd' → logprob: -1.6972136497497559
    3. ' v' → logprob: -2.447213649749756
    4. '_' → logprob: -2.697213649749756
    5. 'v' → logprob: -3.322213649749756
    6. 'a' → logprob: -3.947213649749756
    7. 'x' → logprob: -4.322213649749756
    8. ' a' → logprob: -4.322213649749756
    9. ' w' → logprob: -4.697213649749756
    10. 'w' → logprob: -4.947213649749756

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10196971148252487
    2. '=' → logprob: -2.3519697189331055
    3. ',' → logprob: -6.6019697189331055
    4. '	' → logprob: -8.726969718933105
    5. ' ' → logprob: -8.726969718933105
    6. '=input' → logprob: -10.476969718933105
    7. ' ' → logprob: -11.351969718933105
    8. 'tr' → logprob: -11.726969718933105
    9. ')' → logprob: -12.226969718933105
    10. '_' → logprob: -12.601969718933105

Token 24: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.694934606552124
    2. ' input' → logprob: -0.694934606552124
    3. ' map' → logprob: -6.694934844970703
    4. 'map' → logprob: -7.569934844970703
    5. '	input' → logprob: -10.569934844970703
    6. ' ' → logprob: -12.819934844970703
    7. '(input' → logprob: -13.694934844970703
    8. '=input' → logprob: -14.194934844970703
    9. '	map' → logprob: -14.569934844970703
    10. '[input' → logprob: -14.694934844970703

Token 25: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00018577903392724693
    2. '()' → logprob: -8.6251859664917
    3. '.split' → logprob: -12.6251859664917
    4. '(' → logprob: -13.0001859664917
    5. 'split' → logprob: -15.6251859664917
    6. '()
' → logprob: -16.000185012817383
    7. '('' → logprob: -16.375185012817383
    8. '.' → logprob: -16.500185012817383
    9. '("").' → logprob: -16.750185012817383
    10. ')' → logprob: -16.875185012817383

Token 26: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002703953068703413
    2. 'strip' → logprob: -8.25027084350586
    3. 'rstrip' → logprob: -11.87527084350586
    4. ' split' → logprob: -13.37527084350586
    5. 'spl' → logprob: -15.25027084350586
    6. 'rs' → logprob: -15.25027084350586
    7. '(split' → logprob: -17.12527084350586
    8. '.split' → logprob: -17.25027084350586
    9. '```' → logprob: -17.75027084350586
    10. 'sp' → logprob: -18.62527084350586

Token 27: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2907097041606903
    2. '(' → logprob: -1.6657097339630127
    3. '('' → logprob: -2.7907097339630127
    4. '(',' → logprob: -6.665709495544434
    5. '("("' → logprob: -8.665709495544434
    6. '("' → logprob: -9.540709495544434
    7. ')' → logprob: -9.790709495544434
    8. '(`' → logprob: -10.415709495544434
    9. '()
' → logprob: -10.540709495544434
    10. '(),' → logprob: -10.540709495544434

Token 28: '	if' (ID: 1224)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 29: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.2303805947303772
    2. ' s' → logprob: -1.8553805351257324
    3. 'c' → logprob: -3.3553805351257324
    4. 's' → logprob: -4.480380535125732
    5. ' (' → logprob: -5.855380535125732
    6. '(c' → logprob: -9.10538101196289
    7. ' ' → logprob: -9.85538101196289
    8. '(' → logprob: -10.35538101196289
    9. '(s' → logprob: -10.85538101196289
    10. ' not' → logprob: -10.85538101196289

Token 30: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1273675262928009
    2. '==' → logprob: -2.1273674964904785
    3. ' in' → logprob: -9.252367973327637
    4. ' not' → logprob: -9.377367973327637
    5. '<|end|>' → logprob: -10.002367973327637
    6. '=' → logprob: -10.252367973327637
    7. '=="' → logprob: -10.377367973327637
    8. ' ' → logprob: -10.752367973327637
    9. ' =' → logprob: -10.877367973327637
    10. ' !=' → logprob: -11.127367973327637

Token 31: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.013268345966935158
    2. '"' → logprob: -5.51326847076416
    3. ''a' → logprob: -5.63826847076416
    4. ''s' → logprob: -6.26326847076416
    5. ''A' → logprob: -6.26326847076416
    6. ''S' → logprob: -7.38826847076416
    7. ' '' → logprob: -8.13826847076416
    8. ''i' → logprob: -9.01326847076416
    9. ''I' → logprob: -9.01326847076416
    10. ''o' → logprob: -9.13826847076416

Token 32: 'insert' (ID: 14813)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.1914617270231247
    2. 'A' → logprob: -2.6914618015289307
    3. '+' → logprob: -3.5664618015289307
    4. 'i' → logprob: -3.8164618015289307
    5. 'a' → logprob: -4.191461563110352
    6. 'S' → logprob: -4.566461563110352
    7. 'D' → logprob: -4.566461563110352
    8. 'B' → logprob: -5.441461563110352
    9. ''' → logprob: -5.941461563110352
    10. '"' → logprob: -5.941461563110352

Token 33: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.02919989451766014
    2. '"' → logprob: -3.6541998386383057
    3. ' ":' → logprob: -6.904200077056885
    4. '":
' → logprob: -7.279200077056885
    5. ' "' → logprob: -7.904200077056885
    6. '":
' → logprob: -7.904200077056885
    7. '"):' → logprob: -8.279199600219727
    8. '">' → logprob: -9.779199600219727
    9. '":"' → logprob: -10.279199600219727
    10. ':' → logprob: -10.904199600219727

Token 34: '	' (ID: 197)
  Prédit: ' D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.19913657009601593
    2. ' ' → logprob: -2.69913649559021
    3. '	D' → logprob: -2.94913649559021
    4. '   ' → logprob: -3.32413649559021
    5. ':' → logprob: -4.824136734008789
    6. 'D' → logprob: -5.324136734008789
    7. ' s' → logprob: -6.074136734008789
    8. '    ' → logprob: -6.449136734008789
    9. ' ' → logprob: -6.949136734008789
    10. '```' → logprob: -7.074136734008789

Token 35: '	D' (ID: 24435)
  Prédit: ' D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.06381607055664062
    2. ' ' → logprob: -3.0638160705566406
    3. 'D' → logprob: -4.938816070556641
    4. ' s' → logprob: -6.063816070556641
    5. ' ' → logprob: -6.313816070556641
    6. '	D' → logprob: -6.813816070556641
    7. 's' → logprob: -7.188816070556641
    8. '	' → logprob: -8.18881607055664
    9. '		' → logprob: -8.43881607055664
    10. ' 	' → logprob: -8.56381607055664

Token 36: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.4745246469974518
    2. '.' → logprob: -0.9745246171951294
    3. '.update' → logprob: -8.34952449798584
    4. '.insert' → logprob: -9.22452449798584
    5. ' .' → logprob: -10.22452449798584
    6. '.append' → logprob: -10.47452449798584
    7. '.union' → logprob: -10.97452449798584
    8. '.setdefault' → logprob: -11.47452449798584
    9. '	' → logprob: -11.97452449798584
    10. ' ' → logprob: -12.22452449798584

Token 37: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.003218349302187562
    2. '(' → logprob: -5.753218173980713
    3. '(int' → logprob: -10.378218650817871
    4. ' (' → logprob: -11.753218650817871
    5. 's' → logprob: -14.628218650817871
    6. '('' → logprob: -15.128218650817871
    7. ')' → logprob: -15.378218650817871
    8. '((' → logprob: -15.378218650817871
    9. '(str' → logprob: -15.753218650817871
    10. '()' → logprob: -16.253217697143555

Token 38: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005361131625249982
    2. ')
' → logprob: -8.00053596496582
    3. ' )' → logprob: -8.87553596496582
    4. '	' → logprob: -10.00053596496582
    5. ' ' → logprob: -12.62553596496582
    6. '())' → logprob: -12.87553596496582
    7. ')
' → logprob: -13.00053596496582
    8. ')

' → logprob: -13.50053596496582
    9. '()' → logprob: -13.87553596496582
    10. '))' → logprob: -14.75053596496582

Token 39: '	elif' (ID: 56165)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: ' c' (ID: 274)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2860960066318512
    2. ' "' → logprob: -1.4110959768295288
    3. ' ' → logprob: -6.036096096038818
    4. ' s' → logprob: -6.536096096038818
    5. '<|end|>' → logprob: -8.03609561920166
    6. 's' → logprob: -8.28609561920166
    7. ' c' → logprob: -8.91109561920166
    8. '"user' → logprob: -9.66109561920166
    9. '"s' → logprob: -10.09859561920166
    10. ' ' → logprob: -10.41109561920166

Token 41: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0793355256319046
    2. '==' → logprob: -2.5793354511260986
    3. '[' → logprob: -8.95433521270752
    4. '=' → logprob: -9.45433521270752
    5. ' =' → logprob: -9.45433521270752
    6. '=="' → logprob: -9.95433521270752
    7. ' =="' → logprob: -10.45433521270752
    8. '===' → logprob: -10.70433521270752
    9. ' ===' → logprob: -11.20433521270752
    10. '	' → logprob: -11.57933521270752

Token 42: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04874984920024872
    2. ' "' → logprob: -3.0487499237060547
    3. '	' → logprob: -10.173749923706055
    4. ' ' → logprob: -10.423749923706055
    5. '"value' → logprob: -10.798749923706055
    6. ''' → logprob: -11.048749923706055
    7. '"display' → logprob: -11.298749923706055
    8. '"user' → logprob: -11.798749923706055
    9. ' ' → logprob: -11.923749923706055
    10. '"indices' → logprob: -12.298749923706055

Token 43: 'find' (ID: 6555)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03670156002044678
    2. 'remove' → logprob: -4.036701679229736
    3. '"s' → logprob: -4.411701679229736
    4. 'delete' → logprob: -6.161701679229736
    5. 'erase' → logprob: -6.286701679229736
    6. ' "' → logprob: -7.786701679229736
    7. 'discard' → logprob: -7.786701679229736
    8. ''' → logprob: -8.536701202392578
    9. ''s' → logprob: -8.661701202392578
    10. '"in' → logprob: -8.661701202392578

Token 44: '":
' (ID: 9213)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.5083512663841248
    2. '":' → logprob: -1.8833513259887695
    3. 's' → logprob: -2.2583513259887695
    4. '"' → logprob: -3.1333513259887695
    5. '"):' → logprob: -3.6333513259887695
    6. ' s' → logprob: -3.8833513259887695
    7. ':' → logprob: -4.0083513259887695
    8. '">' → logprob: -4.6333513259887695
    9. '(' → logprob: -5.0083513259887695
    10. '")' → logprob: -6.2583513259887695

Token 45: '	' (ID: 197)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5640716552734375
    2. '	s' → logprob: -2.3140716552734375
    3. 's' → logprob: -2.8140716552734375
    4. '   ' → logprob: -2.9390716552734375
    5. '	' → logprob: -3.0640716552734375
    6. ' ' → logprob: -3.0640716552734375
    7. '	print' → logprob: -3.3140716552734375
    8. ' print' → logprob: -3.6890716552734375
    9. '<|end|>' → logprob: -4.1890716552734375
    10. '	if' → logprob: -4.3140716552734375

Token 46: '	if' (ID: 1224)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.24313510954380035
    2. ' print' → logprob: -1.6181350946426392
    3. 'if' → logprob: -4.99313497543335
    4. ' if' → logprob: -4.99313497543335
    5. '	print' → logprob: -5.99313497543335
    6. 's' → logprob: -7.36813497543335
    7. '   ' → logprob: -8.493135452270508
    8. ' s' → logprob: -8.618135452270508
    9. '	if' → logprob: -9.243135452270508
    10. '	' → logprob: -9.243135452270508

Token 47: ' (' (ID: 350)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.002807725453749299
    2. 's' → logprob: -5.8778076171875
    3. ' ' → logprob: -13.8778076171875
    4. ' ' → logprob: -14.3778076171875
    5. '	s' → logprob: -14.6278076171875
    6. '_s' → logprob: -14.8778076171875
    7. '<|end|>' → logprob: -15.0028076171875
    8. '(s' → logprob: -16.0028076171875
    9. '<s' → logprob: -17.0028076171875
    10. '<|end|>' → logprob: -17.5653076171875

Token 48: 's' (ID: 82)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.0430578850209713
    2. 's' → logprob: -3.168057918548584
    3. '	s' → logprob: -9.793057441711426
    4. ' ' → logprob: -13.918057441711426
    5. ' ' → logprob: -14.168057441711426
    6. ')' → logprob: -14.543057441711426
    7. '	' → logprob: -15.418057441711426
    8. '<|end|>' → logprob: -15.668057441711426
    9. '_s' → logprob: -15.793057441711426
    10. ')s' → logprob: -16.168058395385742

Token 49: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012783447280526161
    2. 'in' → logprob: -4.387783527374268
    3. ' not' → logprob: -9.01278305053711
    4. ')' → logprob: -9.38778305053711
    5. '<|end|>' → logprob: -10.88778305053711
    6. ' )' → logprob: -11.13778305053711
    7. '	in' → logprob: -11.38778305053711
    8. ' ' → logprob: -11.63778305053711
    9. 'not' → logprob: -12.01278305053711
    10. 's' → logprob: -12.88778305053711

Token 50: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.6932327151298523
    2. ' D' → logprob: -0.6932327151298523
    3. ')' → logprob: -9.568232536315918
    4. ' ' → logprob: -11.943232536315918
    5. '	D' → logprob: -12.318232536315918
    6. ' ' → logprob: -13.318232536315918
    7. '<|end|>' → logprob: -13.443232536315918
    8. ' )' → logprob: -14.693232536315918
    9. '	' → logprob: -15.818232536315918
    10. ' the' → logprob: -16.068233489990234

Token 51: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5374897718429565
    2. ')' → logprob: -0.9124897718429565
    3. '):
' → logprob: -4.537489891052246
    4. ':' → logprob: -6.037489891052246
    5. '	' → logprob: -8.162489891052246
    6. ' ):' → logprob: -8.162489891052246
    7. ' )' → logprob: -8.287489891052246
    8. ')==' → logprob: -8.537489891052246
    9. '):

' → logprob: -9.787489891052246
    10. '):
' → logprob: -10.162489891052246

Token 52: '		' (ID: 335)
  Prédit: '		'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.3657149076461792
    2. '	' → logprob: -1.2407149076461792
    3. 'print' → logprob: -5.115715026855469
    4. '           ' → logprob: -5.490715026855469
    5. '	print' → logprob: -5.615715026855469
    6. ' print' → logprob: -6.615715026855469
    7. '		   ' → logprob: -7.615715026855469
    8. '			' → logprob: -8.365715026855469
    9. '       ' → logprob: -8.865715026855469
    10. '	       ' → logprob: -8.990715026855469

Token 53: '	print' (ID: 15269)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6261398196220398
    2. '	print' → logprob: -1.2511398792266846
    3. '	' → logprob: -1.8761398792266846
    4. ' print' → logprob: -4.0011396408081055
    5. '		' → logprob: -5.1261396408081055
    6. '       ' → logprob: -7.7511396408081055
    7. '   ' → logprob: -7.7511396408081055
    8. '           ' → logprob: -8.501139640808105
    9. '\t' → logprob: -9.126139640808105
    10. '	       ' → logprob: -9.251139640808105

Token 54: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.2559012770652771
    2. '(' → logprob: -1.5059013366699219
    3. '(True' → logprob: -5.630901336669922
    4. '('' → logprob: -8.005901336669922
    5. '(s' → logprob: -11.255901336669922
    6. '()' → logprob: -11.255901336669922
    7. '(-' → logprob: -12.880901336669922
    8. ' ("' → logprob: -12.880901336669922
    9. '("("' → logprob: -12.880901336669922
    10. '(true' → logprob: -12.880901336669922

Token 55: 'yes' (ID: 6763)
  Prédit: 'yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yes' → logprob: -0.01035609282553196
    2. ' yes' → logprob: -4.6353559494018555
    3. 'Yes' → logprob: -8.010355949401855
    4. 'YES' → logprob: -8.635355949401855
    5. '_yes' → logprob: -10.010355949401855
    6. '1' → logprob: -11.385355949401855
    7. ' Yes' → logprob: -11.635355949401855
    8. 'true' → logprob: -12.010355949401855
    9. '"' → logprob: -12.010355949401855
    10. ' YES' → logprob: -13.010355949401855

Token 56: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.026369042694568634
    2. '")
' → logprob: -3.776369094848633
    3. ')' → logprob: -5.901369094848633
    4. '")
' → logprob: -8.026369094848633
    5. ')
' → logprob: -10.276369094848633
    6. '"' → logprob: -12.151369094848633
    7. ' ")' → logprob: -12.776369094848633
    8. ')")' → logprob: -12.776369094848633
    9. '")

' → logprob: -12.901369094848633
    10. '");' → logprob: -13.026369094848633

Token 57: '	' (ID: 197)
  Prédit: '	'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.0794813260436058
    2. 'else' → logprob: -2.954481363296509
    3. ' else' → logprob: -4.20448112487793
    4. '	else' → logprob: -4.70448112487793
    5. '		' → logprob: -8.82948112487793
    6. '<|end|>' → logprob: -9.32948112487793
    7. '       ' → logprob: -10.82948112487793
    8. ' 	' → logprob: -11.32948112487793
    9. ')' → logprob: -11.45448112487793
    10. '```' → logprob: -11.70448112487793

Token 58: '	else' (ID: 5107)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.16997474431991577
    2. 'else' → logprob: -2.1699748039245605
    3. '	else' → logprob: -3.2949748039245605
    4. ' else' → logprob: -5.2949748039245605
    5. '		' → logprob: -10.544974327087402
    6. '```' → logprob: -11.794974327087402
    7. '       ' → logprob: -12.544974327087402
    8. '	elif' → logprob: -12.919974327087402
    9. '<|end|>' → logprob: -13.044974327087402
    10. ' 	' → logprob: -13.419974327087402

Token 59: ':
' (ID: 734)
  Prédit: '		'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.31408894062042236
    2. ':' → logprob: -1.5640889406204224
    3. '	' → logprob: -3.189088821411133
    4. ':
' → logprob: -4.439088821411133
    5. '	print' → logprob: -6.439088821411133
    6. '<|end|>' → logprob: -6.689088821411133
    7. 'print' → logprob: -7.189088821411133
    8. ' print' → logprob: -7.439088821411133
    9. '	       ' → logprob: -7.939088821411133
    10. '           ' → logprob: -8.189088821411133

Token 60: '		' (ID: 335)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6665548086166382
    2. '		' → logprob: -0.7915548086166382
    3. ' print' → logprob: -4.291554927825928
    4. '	print' → logprob: -4.666554927825928
    5. '	' → logprob: -5.041554927825928
    6. '	       ' → logprob: -6.791554927825928
    7. '           ' → logprob: -6.916554927825928
    8. '			' → logprob: -7.791554927825928
    9. '		   ' → logprob: -7.916554927825928
    10. '		 ' → logprob: -8.91655445098877

Token 61: '	print' (ID: 15269)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00021891399228479713
    2. '	print' → logprob: -8.750219345092773
    3. ' print' → logprob: -9.750219345092773
    4. '	' → logprob: -14.250219345092773
    5. '		' → logprob: -14.375219345092773
    6. '"' → logprob: -14.500219345092773
    7. 'printf' → logprob: -15.750219345092773
    8. ' ' → logprob: -16.750219345092773
    9. 'no' → logprob: -17.250219345092773
    10. '.print' → logprob: -17.375219345092773

Token 62: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.029752103611826897
    2. '(' → logprob: -3.529752016067505
    3. '('' → logprob: -14.029751777648926
    4. '(
' → logprob: -15.404751777648926
    5. '("")' → logprob: -15.779751777648926
    6. '("("' → logprob: -15.779751777648926
    7. '"' → logprob: -15.904751777648926
    8. '()' → logprob: -16.404752731323242
    9. '(

' → logprob: -17.029752731323242
    10. '(""' → logprob: -17.279752731323242

Token 63: 'no' (ID: 1750)
  Prédit: 'no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -1.9027791495318525e-05
    2. '"' → logprob: -11.500019073486328
    3. '	no' → logprob: -11.750019073486328
    4. ' no' → logprob: -14.125019073486328
    5. 'No' → logprob: -16.500019073486328
    6. '"No' → logprob: -16.750019073486328
    7. '	' → logprob: -17.125019073486328
    8. 'na' → logprob: -17.250019073486328
    9. '")' → logprob: -17.250019073486328
    10. ' ' → logprob: -18.000019073486328

Token 64: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.048675596714019775
    2. ')' → logprob: -3.048675537109375
    3. ')")' → logprob: -9.423675537109375
    4. '")
' → logprob: -12.798675537109375
    5. '`)' → logprob: -12.798675537109375
    6. ')
' → logprob: -13.923675537109375
    7. '"' → logprob: -15.423675537109375
    8. '}")' → logprob: -15.423675537109375
    9. ' )' → logprob: -15.923675537109375
    10. '')' → logprob: -16.048675537109375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 62
Tokens correctement prédits (1ère position, stricte): 20
Tokens correctement prédits (1ère position, avec adaptation): 20
Tokens correctement prédits (top 10): 45
Précision stricte (1ère position): 32.26%
Précision adaptée (1ère position): 32.26%
Précision (top 10): 72.58%
================================================================================
