================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from random import random
from collections import deque
from copy import deepcopy
import sys
input = sys.stdin.readline

class Treap:
    def __init__(self, iterable=None):
        # vertex = [left, right, key, priority, #descendants, sum of descendants]
        self.root = None
        if iterable: self._construct(iterable)
    
    def _construct(self, iterable):
        for it in iterable: self.insert(it)
    
    def __len__(self): return self._count(self.root)
    
    @staticmethod
    def _count(v): return v[4] if v is not None else 0

    def _rotate(self, v, direction): # rotate the vertex v to the given direction
        c = v[1 - direction] # direction == 1: right rotation
        v[1 - direction], t = c[direction], c[1 - direction]
        c[direction] = v
        # update vertex's information
        n_desc, sum_desc = c[4:] = v[4:]
        v[4:] = n_desc - 1 - self._count(t), sum_desc - (c[2] if c[2] else 0) - (t[5] if t else 0)
        return c # new parent
    
    def __contains__(self, key): # check whether the given key is in the treap
        if self.root is None: return False
        v = self.root
        while v:
            k = v[2]
            if k == key: return True
            v = v[key > k] # key > v[2] -> v = v[1] (right child)
        return False
    
    def __getitem__(self, i): # get the i-th smallest element in the treap
        count = self._count
        if i < 0: i = count(self.root) + i
        if i >= count(self.root) or i < 0: raise IndexError
        v = self.root
        while True:
            n_left = count(v[0])
            if i == n_left: return v[2]
            elif i > n_left: i -= n_left + 1; v = v[1]
            else: v = v[0]
    
    def __repr__(self): # visualize the treap
        if not self.root: return 'Treap([])'
        elements = []
        q = deque([self.root])
        while q:
            v = q.popleft()
            if v is None: elements.append(v); continue
            elements.append((v[2], v[3]))
            q.append(v[0]); q.append(v[1])
        return 'Treap({})'.format(str(elements))
    
    @classmethod
    def _treap(cls, treapnode):
        tp = cls(); tp.root = deepcopy(treapnode)
        return tp
            
    def sort(self):
        if not self.root: return []
        elements = []
        stack = [(self.root, 0)]
        while stack:
            v, st = stack.pop()
            [left, right, k, _, _, _] = v
            if st == 0:
                if right: stack.append((right, 0))
                stack.append((v, 1))
                if left: stack.append((left, 0))
            if st == 1: elements.append(k)
        return elements
    
    def bisect(self, key): # bisect_right
        if self.root is None: return 0
        v = self.root; idx = 0
        count = self._count
        while v:
            left, right, k, _, _, _ = v
            if key >= k: idx += count(left) + 1; v = right
            else: v = left
        return idx
    
    def insert(self, key, priority=None):
        if priority is None: priority = random()
        rotate = self._rotate
        v = self.root; p = None; direction = None
        stack = []
        while v:
            direction = (key >= v[2])
            stack.append((v, direction))
            v, p = v[direction], v
        v = [None, None, key, priority, 1, key]
        while stack:
            p, direction = stack.pop()
            p[direction] = v
            p[4] += 1; p[5] += key # update vertex's information
            if p[3] >= v[3]: break
            v = rotate(p, 1 - direction)
        else: self.root = v
        for p, _ in stack: p[4] += 1; p[5] += key # update vertex's information
        return self.root
    
    def delete(self, key):
        v = self.root; p = None; direction = None
        stack = []
        while v:
            if key == v[2]: break # vertex to be deleted has been found
            direction = (key > v[2])
            stack.append((v, direction))
            v, p = v[direction], v
        else: return self.root # the given key is not in the treap
        rotate = self._rotate
        while v[0] or v[1]: # while v is not a leaf
            left, right, _, _, _, _ = v
            direction = (left[3] > right[3]) if left and right else (right is None)
            p = rotate(v, direction)
            stack.append((p, direction)); v = p[direction]
        v = None # delete
        while stack:
            p, direction = stack.pop()
            p[direction] = v
            p[4] -= 1; p[5] -= (key if key else 0) # update vertex's information
            v = p
        self.root = v
        return self.root
    
    def merge(self, other):
        r, o = self.root, other.root
        temp_v = [r, o, None, float('inf'), 1 + r[4] + o[4], r[5] + o[5]]
        virtual = self._treap(temp_v)
        self.root = virtual.delete(None)
        return self.root
    
    def split(self, i):
        count = self._count
        if i < 0: i = count(self.root) + i
        if i >= count(self.root) or i < 0: raise IndexError
        rotate = self._rotate
        v = self.root; p = None; direction = None
        stack = []
        while v:
            n_left = count(v[0])
            direction = (i > n_left)
            stack.append((v, direction))
            if direction: i -= n_left + 1
            v, p = v[direction], v
        v = [None, None, None, float('inf'), 1, 0]
        while stack:
            p, direction = stack.pop()
            p[direction] = v
            p[4] += 1; p[5] += 0 # update vertex's information
            v = rotate(p, 1 - direction)
        l, r = v[:2]
        self.root = l
        return self._treap(r)

def print_treap(tr):
    preorder = ['']
    inorder = ['']
    def dfs(vtx):
        v = str(vtx[2])
        preorder.append(v)
        if vtx[0]: dfs(vtx[0])
        inorder.append(v)
        if vtx[1]: dfs(vtx[1])
    dfs(tr.root)
    print(' '.join(inorder))
    print(' '.join(preorder))
    return
    
m = int(input())
tr = Treap()
for _ in range(m):
    query, *args, = input().split()
    if query == 'insert':
        k, p = map(int, args)
        tr.insert(k, p)
    elif query == 'find':
        k = int(args[0])
        print('yes' if k in tr else 'no')
    elif query == 'delete':
        k = int(args[0])
        tr.delete(k)
    else:
        print_treap(tr)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' random' (ID: 7526)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' random' (ID: 7526)
  Prédit: ' randint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' randint' → logprob: -0.5056880712509155
    2. 'rand' → logprob: -1.0056880712509155
    3. 'choice' → logprob: -3.755688190460205
    4. ' choice' → logprob: -5.255688190460205
    5. ' rand' → logprob: -6.255688190460205
    6. 'random' → logprob: -7.755688190460205
    7. ' random' → logprob: -9.130687713623047
    8. 'choices' → logprob: -10.505687713623047
    9. ' ' → logprob: -11.880687713623047
    10. 'sample' → logprob: -12.255687713623047

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008996733813546598
    2. '.' → logprob: -7.875899791717529
    3. ' (' → logprob: -8.750899314880371
    4. '(
' → logprob: -9.375899314880371
    5. ',' → logprob: -9.500899314880371
    6. '\(' → logprob: -9.500899314880371
    7. '\' → logprob: -10.250899314880371
    8. '\n' → logprob: -10.500899314880371
    9. 'import' → logprob: -11.250899314880371
    10. ' ' → logprob: -11.375899314880371

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009962485637515783
    2. '(
' → logprob: -8.000996589660645
    3. '\n' → logprob: -8.750996589660645
    4. ',' → logprob: -9.250996589660645
    5. ' (' → logprob: -9.500996589660645
    6. '
' → logprob: -9.625996589660645
    7. '\' → logprob: -10.125996589660645
    8. '\(' → logprob: -10.125996589660645
    9. '()' → logprob: -10.250996589660645
    10. '.' → logprob: -10.500996589660645

Token 6: ' collections' (ID: 22690)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.04173361510038376
    2. ' time' → logprob: -3.791733503341675
    3. ' numpy' → logprob: -5.166733741760254
    4. ' os' → logprob: -5.791733741760254
    5. ' random' → logprob: -6.166733741760254
    6. 'math' → logprob: -6.416733741760254
    7. 'time' → logprob: -6.416733741760254
    8. ' ' → logprob: -6.666733741760254
    9. ' datetime' → logprob: -7.541733741760254
    10. ' itertools' → logprob: -7.541733741760254

Token 7: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.08510544896125793
    2. ' import' → logprob: -2.9601054191589355
    3. '.' → logprob: -3.5851054191589355
    4. '<|end|>' → logprob: -7.5851054191589355
    5. '.import' → logprob: -7.7101054191589355
    6. '```' → logprob: -7.9601054191589355
    7. '.Counter' → logprob: -8.085105895996094
    8. ' ' → logprob: -9.460105895996094
    9. 'abc' → logprob: -10.085105895996094
    10. '_import' → logprob: -10.085105895996094

Token 8: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.46289682388305664
    2. ' deque' → logprob: -1.3378968238830566
    3. ' defaultdict' → logprob: -2.3378968238830566
    4. ' named' → logprob: -5.337896823883057
    5. 'named' → logprob: -5.962896823883057
    6. 'abc' → logprob: -6.587896823883057
    7. ' abc' → logprob: -6.837896823883057
    8. 'default' → logprob: -7.212896823883057
    9. ' Counter' → logprob: -7.712896823883057
    10. 'Counter' → logprob: -8.087896347045898

Token 9: '
' (ID: 198)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.8723216652870178
    2. '
' → logprob: -1.747321605682373
    3. '\n' → logprob: -1.747321605682373
    4. '(' → logprob: -2.747321605682373
    5. 'd' → logprob: -3.122321605682373
    6. 'import' → logprob: -3.247321605682373
    7. '' → logprob: -3.622321605682373
    8. 'def' → logprob: -4.247321605682373
    9. '(
' → logprob: -4.872321605682373
    10. '

' → logprob: -4.872321605682373

Token 10: 'from' (ID: 2845)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.9629778265953064
    2. '
' → logprob: -1.5879778861999512
    3. 'd' → logprob: -1.9629778861999512
    4. '

' → logprob: -2.587977886199951
    5. '' → logprob: -3.212977886199951
    6. '\n' → logprob: -3.587977886199951
    7. 'def' → logprob: -3.962977886199951
    8. '`' → logprob: -4.087977886199951
    9. 'n' → logprob: -4.337977886199951
    10. '```' → logprob: -4.462977886199951

Token 11: ' copy' (ID: 5150)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.3599736988544464
    2. ' itertools' → logprob: -2.109973669052124
    3. 'queue' → logprob: -2.984973669052124
    4. ' time' → logprob: -3.859973669052124
    5. ' typing' → logprob: -3.859973669052124
    6. ' math' → logprob: -4.109973907470703
    7. ' heap' → logprob: -4.234973907470703
    8. ' threading' → logprob: -4.359973907470703
    9. 'time' → logprob: -4.734973907470703
    10. ' ' → logprob: -5.109973907470703

Token 12: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6936183571815491
    2. ' import' → logprob: -0.6936183571815491
    3. '_import' → logprob: -8.943618774414062
    4. '.' → logprob: -9.068618774414062
    5. '	import' → logprob: -9.318618774414062
    6. '<|end|>' → logprob: -10.193618774414062
    7. '.import' → logprob: -10.443618774414062
    8. ' ' → logprob: -10.693618774414062
    9. ' im' → logprob: -11.943618774414062
    10. 'from' → logprob: -11.943618774414062

Token 13: ' deepcopy' (ID: 130230)
  Prédit: ' deepcopy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deepcopy' → logprob: -0.009324398823082447
    2. 'copy' → logprob: -5.009324550628662
    3. ' copy' → logprob: -6.634324550628662
    4. 'deep' → logprob: -7.134324550628662
    5. '.deepcopy' → logprob: -7.634324550628662
    6. 'deque' → logprob: -12.134324073791504
    7. ' deep' → logprob: -12.759324073791504
    8. 'de' → logprob: -14.134324073791504
    9. ' dee' → logprob: -14.634324073791504
    10. 'dee' → logprob: -15.009324073791504

Token 14: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5622504353523254
    2. '
' → logprob: -1.1872503757476807
    3. '```' → logprob: -3.3122503757476807
    4. '\n' → logprob: -3.6872503757476807
    5. '\' → logprob: -3.8122503757476807
    6. 'def' → logprob: -4.18725061416626
    7. 'import' → logprob: -5.18725061416626
    8. 'd' → logprob: -5.56225061416626
    9. '' → logprob: -5.81225061416626
    10. '#' → logprob: -6.06225061416626

Token 15: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0588339567184448
    2. '\' → logprob: -1.1838339567184448
    3. '
' → logprob: -2.4338340759277344
    4. 'd' → logprob: -2.6838340759277344
    5. '' → logprob: -3.1838340759277344
    6. '```' → logprob: -3.3088340759277344
    7. '

' → logprob: -3.6838340759277344
    8. 'n' → logprob: -4.058834075927734
    9. ' 

' → logprob: -4.433834075927734
    10. '`' → logprob: -4.933834075927734

Token 16: ' sys' (ID: 12228)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6581629514694214
    2. ' random' → logprob: -1.1581629514694214
    3. ' numpy' → logprob: -3.033163070678711
    4. ' os' → logprob: -3.408163070678711
    5. ' math' → logprob: -3.408163070678711
    6. ' itertools' → logprob: -3.908163070678711
    7. ' space' → logprob: -5.033163070678711
    8. '  ' → logprob: -5.158163070678711
    9. ' time' → logprob: -5.408163070678711
    10. ' sys' → logprob: -5.408163070678711

Token 17: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.555418848991394
    2. '

' → logprob: -0.930418848991394
    3. 'import' → logprob: -4.430418968200684
    4. '\n' → logprob: -4.805418968200684
    5. 'def' → logprob: -5.430418968200684
    6. '' → logprob: -6.180418968200684
    7. '```' → logprob: -6.805418968200684
    8. ',' → logprob: -6.930418968200684
    9. '#' → logprob: -7.555418968200684
    10. '\' → logprob: -8.055418968200684

Token 18: 'input' (ID: 2586)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17772603034973145
    2. '

' → logprob: -2.8027260303497314
    3. '' → logprob: -3.8027260303497314
    4. '\n' → logprob: -3.9277260303497314
    5. 'import' → logprob: -4.302725791931152
    6. 'def' → logprob: -4.302725791931152
    7. '#' → logprob: -4.802725791931152
    8. '```' → logprob: -4.802725791931152
    9. '\' → logprob: -5.427725791931152
    10. 'class' → logprob: -5.677725791931152

Token 19: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008991966024041176
    2. '()' → logprob: -7.625899314880371
    3. '<|end|>' → logprob: -9.250899314880371
    4. '```' → logprob: -9.625899314880371
    5. '.' → logprob: -9.750899314880371
    6. '(
' → logprob: -10.125899314880371
    7. '=' → logprob: -10.375899314880371
    8. ' (' → logprob: -11.000899314880371
    9. '("("' → logprob: -11.000899314880371
    10. ')' → logprob: -11.125899314880371

Token 20: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.04369756206870079
    2. 'input' → logprob: -3.5436975955963135
    3. ' sys' → logprob: -4.293697357177734
    4. 'lambda' → logprob: -9.168697357177734
    5. ' input' → logprob: -9.418697357177734
    6. 'raw' → logprob: -12.293697357177734
    7. '	sys' → logprob: -13.418697357177734
    8. '=sys' → logprob: -13.418697357177734
    9. ' lambda' → logprob: -13.793697357177734
    10. 'system' → logprob: -14.418697357177734

Token 21: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.09186698496341705
    2. '.stdin' → logprob: -2.591866970062256
    3. '.readline' → logprob: -4.591866970062256
    4. ' .' → logprob: -6.591866970062256
    5. '.stdout' → logprob: -7.841866970062256
    6. '.exit' → logprob: -8.466867446899414
    7. '.argv' → logprob: -8.716867446899414
    8. '.input' → logprob: -8.966867446899414
    9. '.setdefault' → logprob: -8.966867446899414
    10. '.import' → logprob: -9.966867446899414

Token 22: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07028462737798691
    2. '.readline' → logprob: -2.695284605026245
    3. '.read' → logprob: -8.070284843444824
    4. '.readlines' → logprob: -11.695284843444824
    5. '.\' → logprob: -11.820284843444824
    6. 'read' → logprob: -11.945284843444824
    7. '.

' → logprob: -12.570284843444824
    8. '.
' → logprob: -12.570284843444824
    9. '```' → logprob: -13.945284843444824
    10. '.write' → logprob: -14.070284843444824

Token 23: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6357896327972412
    2. 'def' → logprob: -1.5107896327972412
    3. '

' → logprob: -2.385789632797241
    4. 'n' → logprob: -2.885789632797241
    5. '(' → logprob: -3.385789632797241
    6. '(n' → logprob: -4.63578987121582
    7. '()' → logprob: -4.76078987121582
    8. '\n' → logprob: -4.76078987121582
    9. 'class' → logprob: -5.13578987121582
    10. '\' → logprob: -5.26078987121582

Token 24: 'class' (ID: 1444)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.29334327578544617
    2. 'class' → logprob: -1.7933433055877686
    3. 'def' → logprob: -2.6683433055877686
    4. '
' → logprob: -4.9183430671691895
    5. 'd' → logprob: -5.2933430671691895
    6. 'N' → logprob: -5.7933430671691895
    7. '

' → logprob: -7.0433430671691895
    8. '\' → logprob: -8.043343544006348
    9. 's' → logprob: -8.293343544006348
    10. 'a' → logprob: -8.418343544006348

Token 25: ' Tre' (ID: 14031)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5181599259376526
    2. ' Random' → logprob: -1.1431598663330078
    3. ' My' → logprob: -3.893159866333008
    4. ' Monte' → logprob: -4.268159866333008
    5. ' Space' → logprob: -4.393159866333008
    6. ' Generator' → logprob: -5.018159866333008
    7. ' Snake' → logprob: -5.018159866333008
    8. ' A' → logprob: -5.893159866333008
    9. ' Agent' → logprob: -6.018159866333008
    10. ' Node' → logprob: -6.143159866333008

Token 26: 'ap' (ID: 403)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0012952389661222696
    2. 'ee' → logprob: -7.12629508972168
    3. 'ap' → logprob: -7.87629508972168
    4. 'a' → logprob: -10.87629508972168
    5. 'Node' → logprob: -10.87629508972168
    6. 'emap' → logprob: -11.37629508972168
    7. 'es' → logprob: -11.37629508972168
    8. 'em' → logprob: -11.87629508972168
    9. 'node' → logprob: -12.12629508972168
    10. 'ep' → logprob: -12.25129508972168

Token 27: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00017827287956606597
    2. ' :' → logprob: -9.125178337097168
    3. '(' → logprob: -9.750178337097168
    4. ':
' → logprob: -12.625178337097168
    5. '():' → logprob: -13.250178337097168
    6. ':**' → logprob: -13.750178337097168
    7. '(Node' → logprob: -13.875178337097168
    8. '(object' → logprob: -14.250178337097168
    9. '(T' → logprob: -14.375178337097168
    10. 'Node' → logprob: -15.000178337097168

Token 28: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3121345043182373
    2. '   ' → logprob: -1.5621345043182373
    3. '    ' → logprob: -4.062134742736816
    4. '(' → logprob: -4.062134742736816
    5. ' def' → logprob: -5.437134742736816
    6. ':' → logprob: -5.812134742736816
    7. ' 
' → logprob: -5.812134742736816
    8. ' (' → logprob: -5.812134742736816
    9. '<|end|>' → logprob: -5.937134742736816
    10. '  ' → logprob: -6.437134742736816

Token 29: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.012406631372869015
    2. 'def' (adapté à ' def') → logprob: -4.512406826019287
    3. ' ' → logprob: -7.262406826019287
    4. '   ' → logprob: -8.762406349182129
    5. 'class' → logprob: -9.012406349182129
    6. ' class' → logprob: -9.137406349182129
    7. ' None' → logprob: -9.262406349182129
    8. '    ' → logprob: -9.887406349182129
    9. ' 
' → logprob: -9.887406349182129
    10. '	def' → logprob: -10.637406349182129

Token 30: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0011695101857185364
    2. '__' → logprob: -7.376169681549072
    3. ' ' → logprob: -8.001169204711914
    4. ' _' → logprob: -8.751169204711914
    5. ' init' → logprob: -10.376169204711914
    6. '_' → logprob: -12.126169204711914
    7. 'init' → logprob: -12.251169204711914
    8. '_init' → logprob: -12.501169204711914
    9. ' ' → logprob: -12.626169204711914
    10. ' ___' → logprob: -14.876169204711914

Token 31: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'in' → logprob: -18.0
    3. 'ini' → logprob: -19.125
    4. '_init' → logprob: -19.25
    5. ' init' → logprob: -20.125
    6. 'int' → logprob: -20.375
    7. 'inite' → logprob: -20.75
    8. 'innit' → logprob: -21.875
    9. '	init' → logprob: -23.0
    10. '-init' → logprob: -23.375

Token 32: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.44512081146240234
    2. '(' → logprob: -1.0701208114624023
    3. '__' → logprob: -5.320120811462402
    4. '(self' → logprob: -5.445120811462402
    5. ' (' → logprob: -6.195120811462402
    6. '<|end|>' → logprob: -6.445120811462402
    7. '_(' → logprob: -6.695120811462402
    8. '__(
' → logprob: -7.695120811462402
    9. '_' → logprob: -7.945120811462402
    10. '__((' → logprob: -8.570120811462402

Token 33: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00319042825140059
    2. ' self' → logprob: -5.753190517425537
    3. ' ' → logprob: -11.503190040588379
    4. ')' → logprob: -13.253190040588379
    5. ',self' → logprob: -15.378190040588379
    6. '(self' → logprob: -15.503190040588379
    7. '	self' → logprob: -15.753190040588379
    8. '0' → logprob: -16.503190994262695
    9. '   ' → logprob: -16.628190994262695
    10. ',' → logprob: -17.003190994262695

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004767595790326595
    2. ' ,' → logprob: -5.629767417907715
    3. 'self' → logprob: -7.254767417907715
    4. ',self' → logprob: -7.879767417907715
    5. ' self' → logprob: -10.504767417907715
    6. ')' → logprob: -11.254767417907715
    7. '(self' → logprob: -12.129767417907715
    8. ' ' → logprob: -12.129767417907715
    9. '_,' → logprob: -12.129767417907715
    10. '_self' → logprob: -12.504767417907715

Token 35: ' iterable' (ID: 113880)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.11167985200881958
    2. ' value' → logprob: -3.111679792404175
    3. ' val' → logprob: -3.361679792404175
    4. ' data' → logprob: -4.611680030822754
    5. 'key' → logprob: -4.986680030822754
    6. ' root' → logprob: -5.361680030822754
    7. 'value' → logprob: -6.236680030822754
    8. ' ' → logprob: -7.111680030822754
    9. 'data' → logprob: -7.486680030822754
    10. ' self' → logprob: -7.736680030822754

Token 36: '=None' (ID: 12783)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18420851230621338
    2. '):' → logprob: -1.8092085123062134
    3. '=None' → logprob: -5.559208393096924
    4. '=[]' → logprob: -8.559208869934082
    5. '=' → logprob: -8.684208869934082
    6. ')' → logprob: -9.184208869934082
    7. ' ,' → logprob: -9.684208869934082
    8. ' ):' → logprob: -10.559208869934082
    9. '):
' → logprob: -11.434208869934082
    10. '=[],' → logprob: -11.434208869934082

Token 37: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3875465393066406
    2. ',' → logprob: -1.1375465393066406
    3. ')' → logprob: -7.387546539306641
    4. ' ):' → logprob: -12.01254653930664
    5. ',p' → logprob: -12.01254653930664
    6. ',parent' → logprob: -12.13754653930664
    7. ' ,' → logprob: -12.26254653930664
    8. '   ' → logprob: -12.76254653930664
    9. ',size' → logprob: -12.76254653930664
    10. '):
' → logprob: -12.76254653930664

Token 38: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6927016973495483
    2. '<|end|>' → logprob: -1.1927016973495483
    3. ' ' → logprob: -2.192701816558838
    4. ')' → logprob: -2.817701816558838
    5. '    ' → logprob: -5.067701816558838
    6. '   ' → logprob: -5.067701816558838
    7. '<|end|>' → logprob: -6.067701816558838
    8. ' )' → logprob: -6.067701816558838
    9. '        ' → logprob: -6.317701816558838
    10. ' 
' → logprob: -6.942701816558838

Token 39: ' #' (ID: 1069)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.07539145648479462
    2. 'self' → logprob: -2.8253915309906006
    3. '       ' → logprob: -5.0753912925720215
    4. '        ' → logprob: -6.0753912925720215
    5. ' ' → logprob: -6.2003912925720215
    6. ' if' → logprob: -7.2003912925720215
    7. '[]' → logprob: -7.8253912925720215
    8. ' super' → logprob: -7.8253912925720215
    9. '    ' → logprob: -8.32539176940918
    10. ' []' → logprob: -8.32539176940918

Token 40: ' vertex' (ID: 25363)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.15244066715240479
    2. 'self' → logprob: -2.2774405479431152
    3. ' if' → logprob: -3.4024405479431152
    4. 'if' → logprob: -5.277440547943115
    5. ' super' → logprob: -8.027441024780273
    6. 'super' → logprob: -10.152441024780273
    7. ' ' → logprob: -10.527441024780273
    8. ' random' → logprob: -11.902441024780273
    9. 'If' → logprob: -11.902441024780273
    10. ' data' → logprob: -12.152441024780273

Token 41: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.35837408900260925
    2. ' =' → logprob: -1.2333741188049316
    3. ',' → logprob: -5.983374118804932
    4. '=' → logprob: -6.108374118804932
    5. ':' → logprob: -6.608374118804932
    6. ' s' → logprob: -6.733374118804932
    7. ' ' → logprob: -7.483374118804932
    8. '=None' → logprob: -7.483374118804932
    9. '   ' → logprob: -7.983374118804932
    10. '_id' → logprob: -8.858373641967773

Token 42: ' [' (ID: 723)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.06067351996898651
    2. 'None' → logprob: -2.935673475265503
    3. ' {' → logprob: -5.435673713684082
    4. '{' → logprob: -7.560673713684082
    5. ' {'' → logprob: -7.685673713684082
    6. ' ' → logprob: -8.560673713684082
    7. ' {}' → logprob: -9.935673713684082
    8. ' {
' → logprob: -10.185673713684082
    9. ' random' → logprob: -10.435673713684082
    10. '{}' → logprob: -10.685673713684082

Token 43: 'left' (ID: 4530)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.5514689087867737
    2. 'None' → logprob: -1.176468849182129
    3. ' None' → logprob: -3.176468849182129
    4. '0' → logprob: -3.551468849182129
    5. ' key' → logprob: -3.551468849182129
    6. 'value' → logprob: -4.676468849182129
    7. 'val' → logprob: -6.301468849182129
    8. '(None' → logprob: -7.176468849182129
    9. 'priority' → logprob: -7.301468849182129
    10. '[' → logprob: -7.301468849182129

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006847030483186245
    2. ' ,' → logprob: -5.631846904754639
    3. '_child' → logprob: -6.131846904754639
    4. '_idx' → logprob: -8.006847381591797
    5. 'child' → logprob: -9.006847381591797
    6. 'size' → logprob: -9.506847381591797
    7. '_node' → logprob: -9.631847381591797
    8. '_index' → logprob: -10.006847381591797
    9. '_id' → logprob: -10.131847381591797
    10. ',node' → logprob: -10.131847381591797

Token 45: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.20148955285549164
    2. ' right' → logprob: -1.7014895677566528
    3. 'key' → logprob: -10.451489448547363
    4. ' key' → logprob: -10.951489448547363
    5. '	right' → logprob: -11.326489448547363
    6. 'priority' → logprob: -12.201489448547363
    7. ' ' → logprob: -12.701489448547363
    8. 'prior' → logprob: -12.826489448547363
    9. '   ' → logprob: -13.201489448547363
    10. ' priority' → logprob: -14.076489448547363

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004471896681934595
    2. ' ,' → logprob: -5.504471778869629
    3. ']' → logprob: -8.004471778869629
    4. 'None' → logprob: -11.004471778869629
    5. ' None' → logprob: -11.379471778869629
    6. ' ]' → logprob: -11.879471778869629
    7. ',None' → logprob: -12.379471778869629
    8. 'index' → logprob: -13.004471778869629
    9. ' ' → logprob: -13.254471778869629
    10. '=None' → logprob: -13.379471778869629

Token 47: ' key' (ID: 2140)
  Prédit: 'priority'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'priority' → logprob: -0.8680423498153687
    2. 'key' → logprob: -1.2430423498153687
    3. ' key' → logprob: -2.118042469024658
    4. ' priority' → logprob: -2.743042469024658
    5. 'prior' → logprob: -3.243042469024658
    6. 'value' → logprob: -3.993042469024658
    7. 'size' → logprob: -3.993042469024658
    8. 'parent' → logprob: -4.743042469024658
    9. ' size' → logprob: -4.993042469024658
    10. 'prio' → logprob: -5.118042469024658

Token 48: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0068469117395579815
    2. ']' → logprob: -5.006846904754639
    3. ' ,' → logprob: -9.256847381591797
    4. ' ]' → logprob: -11.131847381591797
    5. ')' → logprob: -12.381847381591797
    6. '       ' → logprob: -12.506847381591797
    7. '   ' → logprob: -12.631847381591797
    8. ',
' → logprob: -13.256847381591797
    9. ',None' → logprob: -13.506847381591797
    10. '[' → logprob: -13.631847381591797

Token 49: ' priority' (ID: 17621)
  Prédit: 'priority'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'priority' → logprob: -0.3625609278678894
    2. ' priority' → logprob: -1.4875609874725342
    3. 'prior' → logprob: -3.112560987472534
    4. 'prio' → logprob: -3.612560987472534
    5. ' y' → logprob: -6.737560749053955
    6. ' pr' → logprob: -6.862560749053955
    7. ' prior' → logprob: -6.987560749053955
    8. '   ' → logprob: -6.987560749053955
    9. ' ' → logprob: -7.862560749053955
    10. 'y' → logprob: -7.862560749053955

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023679709061980247
    2. ']' → logprob: -3.773679733276367
    3. ' ]' → logprob: -8.773679733276367
    4. ' ,' → logprob: -9.148679733276367
    5. '   ' → logprob: -9.273679733276367
    6. '       ' → logprob: -10.398679733276367
    7. ' ' → logprob: -11.398679733276367
    8. ',
' → logprob: -11.523679733276367
    9. ')' → logprob: -11.773679733276367
    10. ',None' → logprob: -12.523679733276367

Token 51: ' #' (ID: 1069)
  Prédit: ' size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.163181334733963
    2. 'size' → logprob: -2.5381813049316406
    3. ' count' → logprob: -3.6631813049316406
    4. ' value' → logprob: -3.7881813049316406
    5. 'count' → logprob: -5.413181304931641
    6. ' parent' → logprob: -5.413181304931641
    7. ' data' → logprob: -5.413181304931641
    8. 'value' → logprob: -5.413181304931641
    9. ' cnt' → logprob: -6.913181304931641
    10. ' val' → logprob: -7.163181304931641

Token 52: 'desc' (ID: 17186)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.5124940276145935
    2. ' size' → logprob: -1.7624940872192383
    3. 'count' → logprob: -2.1374940872192383
    4. 'vertices' → logprob: -3.6374940872192383
    5. ' vertices' → logprob: -4.012494087219238
    6. ' ' → logprob: -4.512494087219238
    7. ' count' → logprob: -4.512494087219238
    8. 'sub' → logprob: -4.637494087219238
    9. 'elements' → logprob: -4.637494087219238
    10. ' elements' → logprob: -5.512494087219238

Token 53: 'endants' (ID: 88445)
  Prédit: 'endants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endants' → logprob: -0.0012808336177840829
    2. 'endant' → logprob: -6.876280784606934
    3. 'endent' → logprob: -8.876280784606934
    4. 'ents' → logprob: -9.626280784606934
    5. 'end' → logprob: -10.876280784606934
    6. 'ent' → logprob: -12.376280784606934
    7. 'endr' → logprob: -13.001280784606934
    8. 'enders' → logprob: -13.126280784606934
    9. 'ends' → logprob: -13.251280784606934
    10. ']' → logprob: -13.376280784606934

Token 54: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2555701732635498
    2. ',' → logprob: -1.5055701732635498
    3. ' ]' → logprob: -5.755570411682129
    4. ' ,' → logprob: -8.505570411682129
    5. '   ' → logprob: -9.130570411682129
    6. ')' → logprob: -9.755570411682129
    7. '       ' → logprob: -10.880570411682129
    8. ' ' → logprob: -11.255570411682129
    9. '0' → logprob: -11.505570411682129
    10. '[' → logprob: -11.880570411682129

Token 55: ' sum' (ID: 4215)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.7205569744110107
    2. ' parent' → logprob: -1.7205569744110107
    3. 'None' → logprob: -2.2205569744110107
    4. ' value' → logprob: -2.5955569744110107
    5. 'parent' → logprob: -2.9705569744110107
    6. 'value' → logprob: -3.7205569744110107
    7. ' size' → logprob: -3.8455569744110107
    8. ' ' → logprob: -4.97055721282959
    9. ' data' → logprob: -5.09555721282959
    10. 'size' → logprob: -5.34555721282959

Token 56: ' of' (ID: 328)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10089876502752304
    2. ',' → logprob: -2.4758987426757812
    3. ' ]' → logprob: -4.475898742675781
    4. ' ,' → logprob: -8.475898742675781
    5. '   ' → logprob: -8.850898742675781
    6. ')' → logprob: -10.475898742675781
    7. '[' → logprob: -10.725898742675781
    8. ' ' → logprob: -10.850898742675781
    9. 's' → logprob: -11.350898742675781
    10. ']
' → logprob: -12.225898742675781

Token 57: ' descendants' (ID: 95619)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.17381814122200012
    2. 'desc' → logprob: -2.5488181114196777
    3. 'sub' → logprob: -2.7988181114196777
    4. 'value' → logprob: -5.548818111419678
    5. ' values' → logprob: -5.673818111419678
    6. ' descendants' → logprob: -5.673818111419678
    7. 'keys' → logprob: -6.423818111419678
    8. 'children' → logprob: -6.673818111419678
    9. ')' → logprob: -6.798818111419678
    10. 'elements' → logprob: -7.048818111419678

Token 58: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005958187393844128
    2. ',' → logprob: -5.255958080291748
    3. ' ]' → logprob: -7.880958080291748
    4. 's' → logprob: -8.380958557128906
    5. '   ' → logprob: -10.505958557128906
    6. ']
' → logprob: -10.505958557128906
    7. ')' → logprob: -11.255958557128906
    8. ' ' → logprob: -12.380958557128906
    9. ']

' → logprob: -12.505958557128906
    10. '']' → logprob: -12.755958557128906

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6344959139823914
    2. '   ' → logprob: -1.6344959735870361
    3. ']' → logprob: -2.384495973587036
    4. ')' → logprob: -2.884495973587036
    5. ',' → logprob: -3.259495973587036
    6. ' ' → logprob: -3.384495973587036
    7. '    ' → logprob: -3.634495973587036
    8. ' ]' → logprob: -4.509495735168457
    9. '  ' → logprob: -5.509495735168457
    10. '     ' → logprob: -6.009495735168457

Token 60: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.8571845889091492
    2. '       ' → logprob: -0.9821845889091492
    3. ' self' → logprob: -2.107184648513794
    4. ' if' → logprob: -3.232184648513794
    5. 'if' → logprob: -3.357184648513794
    6. '   ' → logprob: -6.357184410095215
    7. ' ' → logprob: -6.857184410095215
    8. 'super' → logprob: -7.232184410095215
    9. ' super' → logprob: -7.357184410095215
    10. '[]' → logprob: -8.107184410095215

Token 61: '.root' (ID: 25375)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.5725045800209045
    2. '.' → logprob: -1.9475045204162598
    3. ' .' → logprob: -2.1975045204162598
    4. '.root' → logprob: -2.4475045204162598
    5. '.vertices' → logprob: -3.3225045204162598
    6. '.de' → logprob: -4.57250452041626
    7. '.vertex' → logprob: -4.69750452041626
    8. '.tree' → logprob: -4.94750452041626
    9. '.t' → logprob: -5.07250452041626
    10. '.queue' → logprob: -5.32250452041626

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10023493319749832
    2. '=' → logprob: -2.3502349853515625
    3. '=None' → logprob: -10.975234985351562
    4. ' None' → logprob: -11.850234985351562
    5. ' ' → logprob: -12.850234985351562
    6. 'None' → logprob: -14.850234985351562
    7. ',' → logprob: -14.975234985351562
    8. ' =
' → logprob: -15.350234985351562
    9. ' is' → logprob: -15.475234985351562
    10. ')' → logprob: -17.100234985351562

Token 63: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.31326353549957275
    2. 'None' → logprob: -1.3132635354995728
    3. '0' → logprob: -13.438263893127441
    4. '(None' → logprob: -15.688263893127441
    5. '_None' → logprob: -16.813262939453125
    6. ' ' → logprob: -17.313262939453125
    7. ',None' → logprob: -17.688262939453125
    8. ' none' → logprob: -17.938262939453125
    9. '=None' → logprob: -17.938262939453125
    10. 'none' → logprob: -18.063262939453125

Token 64: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06808605790138245
    2. '<|end|>' → logprob: -3.3180861473083496
    3. 'def' → logprob: -4.31808614730835
    4. '   ' → logprob: -5.31808614730835
    5. '       ' → logprob: -5.94308614730835
    6. '<|end|>' → logprob: -6.06808614730835
    7. ' def' → logprob: -6.31808614730835
    8. '' → logprob: -6.56808614730835
    9. '\n' → logprob: -7.31808614730835
    10. ' ' → logprob: -7.81808614730835

Token 65: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.029534433037042618
    2. '<|end|>' → logprob: -3.779534339904785
    3. '   ' → logprob: -6.529534339904785
    4. 'def' → logprob: -6.779534339904785
    5. '<|end|>' → logprob: -6.904534339904785
    6. '\n' → logprob: -7.529534339904785
    7. '' → logprob: -7.904534339904785
    8. '       ' → logprob: -7.904534339904785
    9. '
' → logprob: -8.404534339904785
    10. 'newline' → logprob: -8.529534339904785

Token 66: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.026124024763703346
    2. 'def' → logprob: -4.151124000549316
    3. '       ' → logprob: -5.151124000549316
    4. '
' → logprob: -6.651124000549316
    5. '   ' → logprob: -7.151124000549316
    6. 'self' → logprob: -7.401124000549316
    7. '    
' → logprob: -8.026124000549316
    8. '

' → logprob: -8.151124000549316
    9. '<|end|>' → logprob: -8.526124000549316
    10. '```' → logprob: -8.651124000549316

Token 67: ' iterable' (ID: 113880)
  Prédit: ' iterable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' iterable' → logprob: -1.1279553291387856e-05
    2. 'iter' → logprob: -11.625011444091797
    3. 'Iterable' → logprob: -13.750011444091797
    4. ' iter' → logprob: -14.625011444091797
    5. ' ' → logprob: -14.750011444091797
    6. '(iter' → logprob: -15.625011444091797
    7. ' not' → logprob: -16.250011444091797
    8. 'not' → logprob: -16.875011444091797
    9. ' ' → logprob: -17.000011444091797
    10. ' iterative' → logprob: -17.250011444091797

Token 68: ':' (ID: 25)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.006133671849966049
    2. ':' → logprob: -5.256133556365967
    3. 'is' → logprob: -7.131133556365967
    4. ')' → logprob: -9.881134033203125
    5. ' not' → logprob: -10.881134033203125
    6. ' :' → logprob: -11.881134033203125
    7. ' ' → logprob: -12.006134033203125
    8. '):' → logprob: -12.756134033203125
    9. ' and' → logprob: -12.881134033203125
    10. 'not' → logprob: -13.006134033203125

Token 69: ' self' (ID: 1051)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7127499580383301
    2. '       ' → logprob: -1.21274995803833
    3. '        ' → logprob: -2.21274995803833
    4. ' ' → logprob: -3.58774995803833
    5. ' self' → logprob: -3.58774995803833
    6. '           ' → logprob: -4.33774995803833
    7. '<|end|>' → logprob: -4.83774995803833
    8. ',' → logprob: -5.33774995803833
    9. ' ' → logprob: -5.33774995803833
    10. '        
' → logprob: -6.33774995803833

Token 70: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.23774074018001556
    2. '.root' → logprob: -2.8627407550811768
    3. '.insert' → logprob: -2.8627407550811768
    4. ' .' → logprob: -3.3627407550811768
    5. '._' → logprob: -4.112740516662598
    6. '.extend' → logprob: -4.112740516662598
    7. '.push' → logprob: -4.737740516662598
    8. '.append' → logprob: -5.737740516662598
    9. '.update' → logprob: -5.737740516662598
    10. 'root' → logprob: -5.987740516662598

Token 71: 'construct' (ID: 17936)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.006184621714055538
    2. 'init' → logprob: -5.7561845779418945
    3. '_build' → logprob: -6.1311845779418945
    4. 'initialize' → logprob: -8.006184577941895
    5. 'insert' → logprob: -8.631184577941895
    6. '_init' → logprob: -9.506184577941895
    7. 'push' → logprob: -9.881184577941895
    8. 're' → logprob: -10.756184577941895
    9. 'tre' → logprob: -10.756184577941895
    10. 'merge' → logprob: -10.756184577941895

Token 72: '(iter' (ID: 61014)
  Prédit: '(iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(iter' → logprob: -0.04154185950756073
    2. '(' → logprob: -3.291541814804077
    3. '(it' → logprob: -7.291542053222656
    4. '(iterator' → logprob: -7.541542053222656
    5. '(in' → logprob: -7.666542053222656
    6. '(list' → logprob: -7.916542053222656
    7. '(tree' → logprob: -7.916542053222656
    8. '(de' → logprob: -8.416542053222656
    9. '(node' → logprob: -8.541542053222656
    10. '_iter' → logprob: -9.166542053222656

Token 73: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -3.857719275401905e-05
    2. 'utable' → logprob: -10.250038146972656
    3. 'er' → logprob: -14.375038146972656
    4. 'ent' → logprob: -14.875038146972656
    5. ' iterable' → logprob: -15.125038146972656
    6. '   ' → logprob: -15.250038146972656
    7. 'abl' → logprob: -15.500038146972656
    8. 'table' → logprob: -15.500038146972656
    9. 'al' → logprob: -15.750038146972656
    10. '       ' → logprob: -15.750038146972656

Token 74: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005163363530300558
    2. ' )' → logprob: -7.875516414642334
    3. '())' → logprob: -9.750515937805176
    4. '()' → logprob: -10.375515937805176
    5. ',' → logprob: -11.125515937805176
    6. ' ' → logprob: -11.625515937805176
    7. '(' → logprob: -12.000515937805176
    8. '))' → logprob: -12.125515937805176
    9. ',)' → logprob: -12.750515937805176
    10. ')`' → logprob: -12.750515937805176

Token 75: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6064743399620056
    2. '   ' → logprob: -1.2314743995666504
    3. '    
' → logprob: -2.3564743995666504
    4. 'def' → logprob: -4.23147439956665
    5. '\n' → logprob: -4.48147439956665
    6. ':' → logprob: -4.85647439956665
    7. '  
' → logprob: -4.85647439956665
    8. '   
' → logprob: -5.23147439956665
    9. ' 
' → logprob: -5.48147439956665
    10. ',' → logprob: -5.73147439956665

Token 76: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3666592240333557
    2. '   ' → logprob: -1.741659164428711
    3. ' def' → logprob: -2.366659164428711
    4. '
' → logprob: -3.991659164428711
    5. '    
' → logprob: -4.366659164428711
    6. '  
' → logprob: -6.616659164428711
    7. '	def' → logprob: -7.116659164428711
    8. ':' → logprob: -7.491659164428711
    9. ' 
' → logprob: -7.616659164428711
    10. '        
' → logprob: -7.616659164428711

Token 77: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.022218480706214905
    2. '   ' → logprob: -4.647218704223633
    3. ' def' → logprob: -4.772218704223633
    4. '    
' → logprob: -6.272218704223633
    5. '
' → logprob: -7.022218704223633
    6. ' ' → logprob: -8.522218704223633
    7. '  
' → logprob: -8.772218704223633
    8. '	def' → logprob: -8.772218704223633
    9. ' 
' → logprob: -8.897218704223633
    10. ')' → logprob: -9.022218704223633

Token 78: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0645834356546402
    2. '_' → logprob: -3.1895835399627686
    3. '_insert' → logprob: -4.3145833015441895
    4. ' split' → logprob: -5.9395833015441895
    5. ' insert' → logprob: -6.1895833015441895
    6. '_split' → logprob: -6.5645833015441895
    7. '_push' → logprob: -7.9395833015441895
    8. '_construct' → logprob: -8.064583778381348
    9. ' root' → logprob: -8.314583778381348
    10. '_merge' → logprob: -8.564583778381348

Token 79: 'construct' (ID: 17936)
  Prédit: 'construct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'construct' → logprob: -0.02883652038872242
    2. 'split' → logprob: -4.653836727142334
    3. 'build' → logprob: -4.903836727142334
    4. '_construct' → logprob: -5.278836727142334
    5. 'con' → logprob: -6.153836727142334
    6. 'merge' → logprob: -6.278836727142334
    7. 'push' → logprob: -7.653836727142334
    8. '_con' → logprob: -8.278836250305176
    9. 'cons' → logprob: -8.403836250305176
    10. 'contr' → logprob: -8.528836250305176

Token 80: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04752643406391144
    2. '(' → logprob: -3.1725263595581055
    3. ' (' → logprob: -5.5475263595581055
    4. '(
' → logprob: -7.9225263595581055
    5. '<|end|>' → logprob: -9.172526359558105
    6. '(s' → logprob: -9.547526359558105
    7. ' self' → logprob: -11.047526359558105
    8. 'self' → logprob: -11.422526359558105
    9. '_self' → logprob: -11.922526359558105
    10. '(Self' → logprob: -12.172526359558105

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00460113026201725
    2. ' ,' → logprob: -5.504601001739502
    3. ')' → logprob: -8.00460147857666
    4. '[' → logprob: -9.37960147857666
    5. 'self' → logprob: -10.50460147857666
    6. ',
' → logprob: -11.37960147857666
    7. ',self' → logprob: -11.50460147857666
    8. ',array' → logprob: -12.12960147857666
    9. ' )' → logprob: -12.37960147857666
    10. '):' → logprob: -12.62960147857666

Token 82: ' iterable' (ID: 113880)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1209803894162178
    2. ' iterable' → logprob: -3.1209805011749268
    3. 'iter' → logprob: -3.3709805011749268
    4. ' self' → logprob: -3.3709805011749268
    5. ')' → logprob: -7.495980262756348
    6. ' iter' → logprob: -8.870980262756348
    7. '(self' → logprob: -9.745980262756348
    8. ' ' → logprob: -10.120980262756348
    9. '   ' → logprob: -10.120980262756348
    10. 'Iterable' → logprob: -10.245980262756348

Token 83: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006936659105122089
    2. ' ):' → logprob: -5.131936550140381
    3. ')' → logprob: -7.631936550140381
    4. '):
' → logprob: -8.006937026977539
    5. ',' → logprob: -9.006937026977539
    6. '       ' → logprob: -10.506937026977539
    7. '   ' → logprob: -10.881937026977539
    8. ' )' → logprob: -11.131937026977539
    9. '):
' → logprob: -13.506937026977539
    10. ':' → logprob: -13.506937026977539

Token 84: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17676100134849548
    2. '       ' → logprob: -2.1767609119415283
    3. ',' → logprob: -4.051761150360107
    4. '<|end|>' → logprob: -4.426761150360107
    5. '):' → logprob: -5.051761150360107
    6. '<|end|>' → logprob: -5.926761150360107
    7. ')' → logprob: -6.426761150360107
    8. '(' → logprob: -6.801761150360107
    9. '():' → logprob: -7.051761150360107
    10. '        
' → logprob: -7.176761150360107

Token 85: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5345169901847839
    2. ' pass' → logprob: -1.7845170497894287
    3. ' nodes' → logprob: -2.4095170497894287
    4. ' node' → logprob: -3.7845170497894287
    5. ' self' → logprob: -4.15951681137085
    6. ' for' → logprob: -4.28451681137085
    7. '        ' → logprob: -4.65951681137085
    8. ' stack' → logprob: -4.78451681137085
    9. 'stack' → logprob: -4.78451681137085
    10. 'nodes' → logprob: -4.90951681137085

Token 86: ' it' (ID: 480)
  Prédit: ' item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.6043182611465454
    2. ' x' → logprob: -1.1043182611465454
    3. ' key' → logprob: -3.104318141937256
    4. ' ' → logprob: -3.479318141937256
    5. ' value' → logprob: -4.104318141937256
    6. ' element' → logprob: -4.479318141937256
    7. ' val' → logprob: -4.854318141937256
    8. ' i' → logprob: -5.854318141937256
    9. ' elem' → logprob: -5.979318141937256
    10. 'item' → logprob: -6.729318141937256

Token 87: ' in' (ID: 306)
  Prédit: 'em'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'em' → logprob: -0.29429808259010315
    2. ' in' → logprob: -1.7942980527877808
    3. ' ' → logprob: -3.4192981719970703
    4. 'er' → logprob: -3.4192981719970703
    5. 'in' → logprob: -4.16929817199707
    6. '  ' → logprob: -5.04429817199707
    7. '   ' → logprob: -7.41929817199707
    8. 'e' → logprob: -8.16929817199707
    9. ' em' → logprob: -8.54429817199707
    10. 'm' → logprob: -9.79429817199707

Token 88: ' iterable' (ID: 113880)
  Prédit: ' iterable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' iterable' → logprob: -0.00224577309563756
    2. 'iter' → logprob: -6.127245903015137
    3. ' iter' → logprob: -10.002245903015137
    4. '(iter' → logprob: -11.877245903015137
    5. ' itertools' → logprob: -12.752245903015137
    6. 'Iterable' → logprob: -13.127245903015137
    7. ' Iterable' → logprob: -14.127245903015137
    8. ' range' → logprob: -14.627245903015137
    9. ' iterative' → logprob: -14.627245903015137
    10. ' ' → logprob: -14.752245903015137

Token 89: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0022400659509003162
    2. ':
' → logprob: -6.252240180969238
    3. ' :' → logprob: -8.752240180969238
    4. '):' → logprob: -9.127240180969238
    5. '):
' → logprob: -11.377240180969238
    6. '():' → logprob: -11.502240180969238
    7. ',' → logprob: -12.127240180969238
    8. '       ' → logprob: -12.377240180969238
    9. ' :
' → logprob: -12.502240180969238
    10. '():
' → logprob: -12.877240180969238

Token 90: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9388420581817627
    2. ' self' → logprob: -1.0638420581817627
    3. ' 
' → logprob: -2.5638420581817627
    4. '
' → logprob: -2.5638420581817627
    5. ' ' → logprob: -2.8138420581817627
    6. '            
' → logprob: -4.313841819763184
    7. '  
' → logprob: -4.688841819763184
    8. ':' → logprob: -5.188841819763184
    9. ',' → logprob: -5.438841819763184
    10. '    
' → logprob: -5.813841819763184

Token 91: '.insert' (ID: 13222)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02616083063185215
    2. '.insert' → logprob: -4.026160717010498
    3. '._' → logprob: -4.901160717010498
    4. '.append' → logprob: -8.526161193847656
    5. '.push' → logprob: -9.026161193847656
    6. ' .' → logprob: -9.026161193847656
    7. '.add' → logprob: -9.901161193847656
    8. ' ' → logprob: -11.651161193847656
    9. '.s' → logprob: -11.776161193847656
    10. '_insert' → logprob: -11.776161193847656

Token 92: '(it' (ID: 29445)
  Prédit: '(it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(it' → logprob: -0.3869146704673767
    2. '(' → logprob: -1.1369147300720215
    3. '((' → logprob: -11.136914253234863
    4. '(`' → logprob: -11.761914253234863
    5. '(i' → logprob: -12.261914253234863
    6. '(iter' → logprob: -12.386914253234863
    7. '(
' → logprob: -12.386914253234863
    8. '(value' → logprob: -13.386914253234863
    9. ' (' → logprob: -14.261914253234863
    10. '('' → logprob: -14.386914253234863

Token 93: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017560989363119006
    2. ' )' → logprob: -6.376756191253662
    3. ',' → logprob: -10.001755714416504
    4. ',)' → logprob: -12.876755714416504
    5. ')
' → logprob: -13.251755714416504
    6. ' ' → logprob: -13.876755714416504
    7. ');' → logprob: -14.251755714416504
    8. '   ' → logprob: -14.501755714416504
    9. '),' → logprob: -14.751755714416504
    10. ')`' → logprob: -15.126755714416504

Token 94: '    
' (ID: 1944)
  Prédit: '    
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -1.2418358325958252
    2. '   ' → logprob: -1.9918358325958252
    3. ' 
' → logprob: -1.9918358325958252
    4. ' ' → logprob: -2.366835832595825
    5. '  
' → logprob: -2.491835832595825
    6. '<|end|>' → logprob: -2.616835832595825
    7. '
' → logprob: -2.866835832595825
    8. '   
' → logprob: -3.866835832595825
    9. '    ' → logprob: -4.116835594177246
    10. '  ' → logprob: -4.116835594177246

Token 95: '   ' (ID: 271)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.5767952799797058
    2. '
' → logprob: -1.8267953395843506
    3. '   ' → logprob: -1.8267953395843506
    4. '  
' → logprob: -2.9517953395843506
    5. '   
' → logprob: -3.3267953395843506
    6. ' 
' → logprob: -4.3267951011657715
    7. 'def' → logprob: -5.0767951011657715
    8. ' def' → logprob: -6.0767951011657715
    9. ' ' → logprob: -6.3267951011657715
    10. '  ' → logprob: -6.3267951011657715

Token 96: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.40458211302757263
    2. 'def' (adapté à ' def') → logprob: -1.154582142829895
    3. ' ' → logprob: -4.6545820236206055
    4. '   ' → logprob: -5.0295820236206055
    5. '    ' → logprob: -7.7795820236206055
    6. 'd' → logprob: -7.9045820236206055
    7. '  ' → logprob: -8.279582023620605
    8. '    
' → logprob: -8.904582023620605
    9. ' 
' → logprob: -9.154582023620605
    10. 'de' → logprob: -9.404582023620605

Token 97: ' __' (ID: 2516)
  Prédit: ' insert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' insert' → logprob: -0.3164241313934326
    2. '_insert' → logprob: -1.8164241313934326
    3. ' _' → logprob: -2.3164241313934326
    4. '_' → logprob: -5.941424369812012
    5. ' root' → logprob: -6.066424369812012
    6. 'insert' → logprob: -6.441424369812012
    7. ' split' → logprob: -6.816424369812012
    8. ' find' → logprob: -7.566424369812012
    9. '_root' → logprob: -7.816424369812012
    10. ' search' → logprob: -7.941424369812012

Token 98: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5314466953277588
    2. 'init' → logprob: -1.5314466953277588
    3. 'iter' → logprob: -1.6564466953277588
    4. 'contains' → logprob: -5.78144645690918
    5. 'getitem' → logprob: -7.03144645690918
    6. 'i' → logprob: -8.03144645690918
    7. 'next' → logprob: -8.15644645690918
    8. 'str' → logprob: -8.40644645690918
    9. 'repr' → logprob: -8.90644645690918
    10. ' iter' → logprob: -9.90644645690918

Token 99: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10722478479146957
    2. '(self' → logprob: -2.357224702835083
    3. '__(' → logprob: -5.107224941253662
    4. '<|end|>' → logprob: -8.482224464416504
    5. '_(' → logprob: -8.857224464416504
    6. ' (' → logprob: -8.857224464416504
    7. '(
' → logprob: -8.857224464416504
    8. '__(
' → logprob: -9.107224464416504
    9. ')(' → logprob: -9.982224464416504
    10. '">(' → logprob: -10.232224464416504

Token 100: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01621818169951439
    2. ')' → logprob: -4.141218185424805
    3. ' self' → logprob: -8.891218185424805
    4. '(self' → logprob: -10.766218185424805
    5. '<|end|>' → logprob: -10.891218185424805
    6. ' )' → logprob: -13.516218185424805
    7. '
' → logprob: -13.891218185424805
    8. ' ' → logprob: -13.891218185424805
    9. '	self' → logprob: -14.016218185424805
    10. ')
' → logprob: -14.766218185424805

Token 101: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5256829261779785
    2. '):' → logprob: -0.9006829261779785
    3. ' )' → logprob: -7.0256829261779785
    4. ' ):' → logprob: -7.0256829261779785
    5. '):
' → logprob: -8.02568244934082
    6. ':' → logprob: -8.77568244934082
    7. ' ' → logprob: -9.02568244934082
    8. '.' → logprob: -9.15068244934082
    9. 'self' → logprob: -10.40068244934082
    10. '   ' → logprob: -11.90068244934082

Token 102: ' return' (ID: 622)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08080463856458664
    2. '(self' → logprob: -2.5808045864105225
    3. '(
' → logprob: -6.580804824829102
    4. 'self' → logprob: -7.955804824829102
    5. 'return' → logprob: -9.580804824829102
    6. '()' → logprob: -10.080804824829102
    7. 's' → logprob: -10.955804824829102
    8. '(s' → logprob: -11.205804824829102
    9. '0' → logprob: -11.455804824829102
    10. ' (' → logprob: -12.455804824829102

Token 103: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.03639446198940277
    2. ' ' → logprob: -3.9113943576812744
    3. '0' → logprob: -4.7863945960998535
    4. 'self' → logprob: -4.9113945960998535
    5. ' (' → logprob: -11.161394119262695
    6. ' getattr' → logprob: -12.911394119262695
    7. '(self' → logprob: -13.036394119262695
    8. ' len' → logprob: -13.286394119262695
    9. ' ' → logprob: -14.536394119262695
    10. '	self' → logprob: -15.036394119262695

Token 104: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0011041370453312993
    2. ' .' → logprob: -7.376104354858398
    3. '.root' → logprob: -8.126104354858398
    4. ' ' → logprob: -9.751104354858398
    5. '.
' → logprob: -10.001104354858398
    6. ')' → logprob: -11.126104354858398
    7. '._' → logprob: -11.751104354858398
    8. '.size' → logprob: -11.751104354858398
    9. '>' → logprob: -11.876104354858398
    10. '.length' → logprob: -12.126104354858398

Token 105: 'count' (ID: 5420)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.025959093123674393
    2. 'count' → logprob: -4.400959014892578
    3. 'len' → logprob: -4.650959014892578
    4. 'root' → logprob: -6.525959014892578
    5. 'get' → logprob: -6.650959014892578
    6. 'sz' → logprob: -7.775959014892578
    7. 'length' → logprob: -8.525959014892578
    8. 'cnt' → logprob: -8.650959014892578
    9. '_size' → logprob: -9.400959014892578
    10. ' size' → logprob: -9.775959014892578

Token 106: '(self' (ID: 2402)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.0063698976300656796
    2. 'root' → logprob: -5.7563700675964355
    3. '.' → logprob: -5.8813700675964355
    4. '.
' → logprob: -8.881369590759277
    5. '(root' → logprob: -8.881369590759277
    6. ')' → logprob: -10.131369590759277
    7. ' .' → logprob: -10.881369590759277
    8. ' root' → logprob: -11.756369590759277
    9. '.ro' → logprob: -11.756369590759277
    10. 'self' → logprob: -12.381369590759277

Token 108: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003832445072475821
    2. ' )' → logprob: -7.875383377075195
    3. ' ' → logprob: -13.250383377075195
    4. '   ' → logprob: -14.750383377075195
    5. ')
' → logprob: -14.750383377075195
    6. '}' → logprob: -16.125383377075195
    7. ')

' → logprob: -16.625383377075195
    8. '),' → logprob: -16.750383377075195
    9. ',' → logprob: -16.875383377075195
    10. ' if' → logprob: -17.125383377075195

Token 109: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31767135858535767
    2. '(' → logprob: -2.817671298980713
    3. '    
' → logprob: -2.942671298980713
    4. '\n' → logprob: -3.442671298980713
    5. '   ' → logprob: -3.817671298980713
    6. 'def' → logprob: -3.942671298980713
    7. ' 
' → logprob: -4.317671298980713
    8. '  
' → logprob: -4.317671298980713
    9. '\' → logprob: -4.567671298980713
    10. '<|end|>' → logprob: -4.692671298980713

Token 110: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0485872030258179
    2. '
' → logprob: -1.1735872030258179
    3. '   ' → logprob: -1.5485872030258179
    4. '  
' → logprob: -3.1735873222351074
    5. '    
' → logprob: -3.5485873222351074
    6. ' 
' → logprob: -3.5485873222351074
    7. 'def' → logprob: -4.548587322235107
    8. '  ' → logprob: -5.923587322235107
    9. ' def' → logprob: -5.923587322235107
    10. '   
' → logprob: -5.923587322235107

Token 111: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0391884371638298
    2. ' ' → logprob: -4.289188385009766
    3. ' def' → logprob: -4.414188385009766
    4. '   ' → logprob: -4.914188385009766
    5. ':' → logprob: -6.664188385009766
    6. '_' → logprob: -6.914188385009766
    7. ' 
' → logprob: -7.289188385009766
    8. '
' → logprob: -7.539188385009766
    9. '    
' → logprob: -7.539188385009766
    10. '  
' → logprob: -7.789188385009766

Token 112: 'staticmethod' (ID: 53164)
  Prédit: 'property'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'property' → logprob: -0.31337010860443115
    2. 'staticmethod' → logprob: -1.3133701086044312
    3. 'classmethod' → logprob: -9.188369750976562
    4. ' property' → logprob: -12.563369750976562
    5. 'dat' → logprob: -13.438369750976562
    6. 'cache' → logprob: -14.938369750976562
    7. 'static' → logprob: -15.063369750976562
    8. '_' → logprob: -15.313369750976562
    9. 'l' → logprob: -16.063369750976562
    10. '_property' → logprob: -16.313369750976562

Token 113: '
' (ID: 198)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.9936161041259766
    2. 'def' → logprob: -0.9936161041259766
    3. '(' → logprob: -1.3686161041259766
    4. '   ' → logprob: -6.618616104125977
    5. '
' → logprob: -6.993616104125977
    6. '(
' → logprob: -8.118616104125977
    7. ' (' → logprob: -8.118616104125977
    8. ' ' → logprob: -8.243616104125977
    9. ')' → logprob: -8.368616104125977
    10. '(def' → logprob: -8.368616104125977

Token 114: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013000097125768661
    2. ' def' → logprob: -4.513000011444092
    3. '
' → logprob: -6.263000011444092
    4. '   ' → logprob: -10.26300048828125
    5. '    
' → logprob: -12.76300048828125
    6. '	def' → logprob: -13.13800048828125
    7. '_def' → logprob: -13.51300048828125
    8. '  
' → logprob: -14.01300048828125
    9. ' ' → logprob: -14.26300048828125
    10. '(def' → logprob: -14.26300048828125

Token 115: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -6.885492621222511e-05
    2. ' def' → logprob: -9.750068664550781
    3. '
' → logprob: -11.500068664550781
    4. ' ' → logprob: -15.625068664550781
    5. '   ' → logprob: -16.12506866455078
    6. '  
' → logprob: -17.37506866455078
    7. 'count' → logprob: -18.12506866455078
    8. 'de' → logprob: -18.12506866455078
    9. ' 
' → logprob: -18.50006866455078
    10. '  ' → logprob: -18.62506866455078

Token 116: ' _' (ID: 1175)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.4830159842967987
    2. ' _' → logprob: -0.9830160140991211
    3. '_insert' → logprob: -5.983016014099121
    4. ' def' → logprob: -7.108016014099121
    5. '_key' → logprob: -7.358016014099121
    6. '_size' → logprob: -7.358016014099121
    7. '_copy' → logprob: -7.608016014099121
    8. '_split' → logprob: -7.858016014099121
    9. '_' → logprob: -7.983016014099121
    10. '_random' → logprob: -7.983016014099121

Token 117: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -6.229872087715194e-05
    2. 'get' → logprob: -10.875061988830566
    3. 'size' → logprob: -11.125061988830566
    4. 'node' → logprob: -11.500061988830566
    5. 'update' → logprob: -12.250061988830566
    6. 'split' → logprob: -12.500061988830566
    7. 'key' → logprob: -13.500061988830566
    8. 'cnt' → logprob: -13.750061988830566
    9. '_count' → logprob: -13.875061988830566
    10. 'copy' → logprob: -14.000061988830566

Token 118: '(v' (ID: 6932)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005902607459574938
    2. '(node' → logprob: -5.2559027671813965
    3. '(None' → logprob: -7.6309027671813965
    4. '(root' → logprob: -9.255902290344238
    5. '(
' → logprob: -10.630902290344238
    6. ' (' → logprob: -11.255902290344238
    7. '(self' → logprob: -12.130902290344238
    8. '<|end|>' → logprob: -12.255902290344238
    9. '(vertex' → logprob: -12.255902290344238
    10. '(object' → logprob: -12.380902290344238

Token 119: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01892695389688015
    2. ' ):' → logprob: -4.143927097320557
    3. ')' → logprob: -6.268927097320557
    4. '):
' → logprob: -7.143927097320557
    5. ' )' → logprob: -9.393926620483398
    6. ':' → logprob: -10.018926620483398
    7. ',' → logprob: -10.393926620483398
    8. '[' → logprob: -11.018926620483398
    9. ' ' → logprob: -11.518926620483398
    10. '   ' → logprob: -12.268926620483398

Token 120: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2785509824752808
    2. ' v' → logprob: -1.5285509824752808
    3. ' return' → logprob: -1.7785509824752808
    4. ' if' → logprob: -1.9035509824752808
    5. ' None' → logprob: -2.9035511016845703
    6. 'return' → logprob: -3.0285511016845703
    7. 'v' → logprob: -3.1535511016845703
    8. 'if' → logprob: -3.7785511016845703
    9. 'None' → logprob: -4.65355110168457
    10. ' ' → logprob: -5.40355110168457

Token 121: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4002586603164673
    2. '0' → logprob: -1.7752586603164673
    3. ' v' → logprob: -1.9002586603164673
    4. ' ' → logprob: -4.525258541107178
    5. 'len' → logprob: -11.150259017944336
    6. ' len' → logprob: -11.150259017944336
    7. '(v' → logprob: -11.525259017944336
    8. '	v' → logprob: -12.150259017944336
    9. ' (' → logprob: -12.900259017944336
    10. '   ' → logprob: -13.775259017944336

Token 122: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3357774317264557
    2. ' and' → logprob: -1.5857774019241333
    3. 'and' → logprob: -3.085777521133423
    4. '<|end|>' → logprob: -4.085777282714844
    5. '.' → logprob: -4.835777282714844
    6. ' if' → logprob: -5.835777282714844
    7. ' or' → logprob: -6.335777282714844
    8. '.left' → logprob: -6.460777282714844
    9. '.size' → logprob: -6.585777282714844
    10. 'if' → logprob: -6.960777282714844

Token 123: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -3.500108141452074e-05
    2. '5' → logprob: -10.875035285949707
    3. '0' → logprob: -11.875035285949707
    4. ' ' → logprob: -12.250035285949707
    5. '```' → logprob: -12.875035285949707
    6. '   ' → logprob: -14.750035285949707
    7. '
' → logprob: -15.250035285949707
    8. '``' → logprob: -16.25003433227539
    9. '' → logprob: -16.31253433227539
    10. ']' → logprob: -16.56253433227539

Token 124: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2685227692127228
    2. ' if' → logprob: -1.5185227394104004
    3. '<|end|>' → logprob: -4.2685227394104
    4. ' ]' → logprob: -6.6435227394104
    5. 'if' → logprob: -8.143523216247559
    6. ' ' → logprob: -8.393523216247559
    7. '+' → logprob: -8.393523216247559
    8. ']+' → logprob: -8.643523216247559
    9. ')' → logprob: -9.518523216247559
    10. '<|end|>' → logprob: -9.768523216247559

Token 125: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.011214280501008034
    2. 'if' → logprob: -4.511214256286621
    3. '<|end|>' → logprob: -9.011214256286621
    4. ' ' → logprob: -10.261214256286621
    5. '	if' → logprob: -12.386214256286621
    6. ' ' → logprob: -13.386214256286621
    7. '   ' → logprob: -14.011214256286621
    8. '
' → logprob: -14.261214256286621
    9. '+' → logprob: -14.636214256286621
    10. '<|end|>' → logprob: -14.761214256286621

Token 126: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.014163747429847717
    2. ' v' → logprob: -4.264163970947266
    3. '	v' → logprob: -15.264163970947266
    4. ' ' → logprob: -19.014163970947266
    5. '(v' → logprob: -19.264163970947266
    6. ' ' → logprob: -19.514163970947266
    7. '   ' → logprob: -20.389163970947266
    8. '_v' → logprob: -20.639163970947266
    9. ')v' → logprob: -21.514163970947266
    10. '
' → logprob: -21.764163970947266

Token 127: ' is' (ID: 382)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.17318125069141388
    2. 'else' → logprob: -1.9231812953948975
    3. ' is' → logprob: -4.673181056976318
    4. '<|end|>' → logprob: -6.048181056976318
    5. 'is' → logprob: -7.548181056976318
    6. 'v' → logprob: -8.673181533813477
    7. 'and' → logprob: -8.923181533813477
    8. ' and' → logprob: -9.298181533813477
    9. ' v' → logprob: -9.548181533813477
    10. '?v' → logprob: -10.048181533813477

Token 128: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.048795949667692184
    2. ' not' → logprob: -3.0487959384918213
    3. 'None' → logprob: -9.048795700073242
    4. 'v' → logprob: -10.048795700073242
    5. '   ' → logprob: -11.173795700073242
    6. ' ' → logprob: -12.173795700073242
    7. '
' → logprob: -12.423795700073242
    8. ' ' → logprob: -12.798795700073242
    9. '!' → logprob: -12.923795700073242
    10. '    ' → logprob: -13.048795700073242

Token 129: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0007101670489646494
    2. ' None' → logprob: -7.2507100105285645
    3. '   ' → logprob: -16.500709533691406
    4. 'False' → logprob: -17.000709533691406
    5. '_None' → logprob: -17.500709533691406
    6. '  ' → logprob: -17.625709533691406
    7. 'none' → logprob: -17.875709533691406
    8. 'v' → logprob: -17.875709533691406
    9. '0' → logprob: -18.125709533691406
    10. ' ' → logprob: -18.375709533691406

Token 130: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.10020752996206284
    2. 'else' → logprob: -2.350207567214966
    3. '	else' → logprob: -14.225207328796387
    4. ' ' → logprob: -15.850207328796387
    5. '    ' → logprob: -16.725208282470703
    6. '_else' → logprob: -17.350208282470703
    7. '   ' → logprob: -17.975208282470703
    8. ' ' → logprob: -18.100208282470703
    9. 'Else' → logprob: -18.975208282470703
    10. '  ' → logprob: -19.475208282470703

Token 131: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '۰' → logprob: -20.250335693359375
    4. '   ' → logprob: -20.625335693359375
    5. '
' → logprob: -21.875335693359375
    6. ' ' → logprob: -21.875335693359375
    7. '０' → logprob: -22.125335693359375
    8. ' 
' → logprob: -22.250335693359375
    9. '000' → logprob: -22.750335693359375
    10. '  ' → logprob: -22.750335693359375

Token 132: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '۰' → logprob: -22.25
    4. '０' → logprob: -24.125
    5. '000' → logprob: -24.375
    6. '00' → logprob: -24.625
    7. '
' → logprob: -24.75
    8. '   ' → logprob: -24.875
    9. '٠' → logprob: -25.625
    10. '  ' → logprob: -25.75

Token 133: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 134: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5933377146720886
    2. ' 
' → logprob: -0.9683377146720886
    3. '<|end|>' → logprob: -3.8433377742767334
    4. '_' → logprob: -4.218337535858154
    5. '   ' → logprob: -4.593337535858154
    6. '  
' → logprob: -5.093337535858154
    7. '    
' → logprob: -5.843337535858154
    8. '
' → logprob: -6.343337535858154
    9. '   
' → logprob: -6.718337535858154
    10. ',' → logprob: -6.718337535858154

Token 135: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04537389054894447
    2. '    
' → logprob: -3.5453739166259766
    3. ' 
' → logprob: -5.295373916625977
    4. '_' → logprob: -6.170373916625977
    5. 'def' (adapté à ' def') → logprob: -6.295373916625977
    6. '@' → logprob: -6.545373916625977
    7. '   
' → logprob: -6.670373916625977
    8. '  
' → logprob: -6.670373916625977
    9. ' ' → logprob: -6.920373916625977
    10. '<|end|>' → logprob: -8.045373916625977

Token 136: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0689348429441452
    2. ' ' → logprob: -3.693934917449951
    3. '_' → logprob: -3.818934917449951
    4. '._' → logprob: -4.693934917449951
    5. ' .' → logprob: -5.318934917449951
    6. ' def' → logprob: -6.193934917449951
    7. '_insert' → logprob: -6.818934917449951
    8. 'def' → logprob: -7.568934917449951
    9. '.' → logprob: -7.818934917449951
    10. '  ' → logprob: -8.193934440612793

Token 137: 'rotate' (ID: 31296)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.3872130513191223
    2. 'push' → logprob: -2.0122129917144775
    3. 'upd' → logprob: -2.8872129917144775
    4. 'split' → logprob: -3.2622129917144775
    5. 're' → logprob: -3.2622129917144775
    6. 'count' → logprob: -3.8872129917144775
    7. 'merge' → logprob: -4.137213230133057
    8. 'size' → logprob: -5.637213230133057
    9. 'calc' → logprob: -5.887213230133057
    10. 'get' → logprob: -6.012213230133057

Token 138: '(self' (ID: 2402)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.2750057876110077
    2. 'left' → logprob: -2.40000581741333
    3. '_right' → logprob: -2.52500581741333
    4. '(' → logprob: -3.02500581741333
    5. '_' → logprob: -4.90000581741333
    6. 'Left' → logprob: -5.15000581741333
    7. 'right' → logprob: -6.02500581741333
    8. 'Right' → logprob: -6.65000581741333
    9. '(
' → logprob: -6.77500581741333
    10. '(self' → logprob: -7.52500581741333

Token 139: ',' (ID: 11)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.5411983728408813
    2. 'left' → logprob: -1.2911983728408813
    3. '_right' → logprob: -2.916198253631592
    4. 'Left' → logprob: -4.291198253631592
    5. ')' → logprob: -4.541198253631592
    6. '(' → logprob: -4.541198253631592
    7. 'right' → logprob: -4.791198253631592
    8. ' (' → logprob: -4.916198253631592
    9. ',' → logprob: -5.291198253631592
    10. '   ' → logprob: -5.416198253631592

Token 140: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.16529405117034912
    2. ' v' → logprob: -2.5402941703796387
    3. 'self' → logprob: -2.9152941703796387
    4. ' self' → logprob: -4.790294170379639
    5. ')' → logprob: -5.665294170379639
    6. '<|end|>' → logprob: -5.790294170379639
    7. 'root' → logprob: -6.540294170379639
    8. 'lambda' → logprob: -6.790294170379639
    9. ' ' → logprob: -7.665294170379639
    10. ')v' → logprob: -8.66529369354248

Token 141: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010661864653229713
    2. ' ,' → logprob: -5.010662078857422
    3. '):' → logprob: -6.010662078857422
    4. '):
' → logprob: -7.635662078857422
    5. '[' → logprob: -8.010662078857422
    6. '   ' → logprob: -8.135662078857422
    7. ' ):' → logprob: -8.885662078857422
    8. ' ' → logprob: -9.885662078857422
    9. ':' → logprob: -10.010662078857422
    10. ')' → logprob: -10.135662078857422

Token 142: ' direction' (ID: 9262)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01845601759850979
    2. 'True' → logprob: -5.393455982208252
    3. ' ' → logprob: -5.518455982208252
    4. 'direction' → logprob: -5.643455982208252
    5. ')' → logprob: -6.518455982208252
    6. '1' → logprob: -6.893455982208252
    7. 'v' → logprob: -7.143455982208252
    8. ' True' → logprob: -7.268455982208252
    9. 'dir' → logprob: -7.393455982208252
    10. ' direction' → logprob: -7.893455982208252

Token 143: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002004888141527772
    2. '):
' → logprob: -6.627005100250244
    3. ' ):' → logprob: -7.377005100250244
    4. ':' → logprob: -10.502004623413086
    5. ']:' → logprob: -11.627004623413086
    6. ',' → logprob: -11.877004623413086
    7. ')' → logprob: -12.627004623413086
    8. '[' → logprob: -13.627004623413086
    9. '   ' → logprob: -13.752004623413086
    10. '):
' → logprob: -14.127004623413086

Token 144: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8116674423217773
    2. '    ' → logprob: -1.0616674423217773
    3. '[' → logprob: -2.5616674423217773
    4. '       ' → logprob: -3.0616674423217773
    5. ' ' → logprob: -3.5616674423217773
    6. ' =' → logprob: -4.186667442321777
    7. ' [' → logprob: -4.311667442321777
    8. ',' → logprob: -4.686667442321777
    9. ' v' → logprob: -5.061667442321777
    10. '<|end|>' → logprob: -6.686667442321777

Token 145: ' rotate' (ID: 31987)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.3284836709499359
    2. 'v' → logprob: -1.4534837007522583
    3. 'None' → logprob: -4.578483581542969
    4. ' [' → logprob: -4.828483581542969
    5. ' None' → logprob: -5.203483581542969
    6. ' direction' → logprob: -5.578483581542969
    7. 'def' → logprob: -5.828483581542969
    8. ' list' → logprob: -5.828483581542969
    9. '[' → logprob: -5.828483581542969
    10. 'list' → logprob: -5.953483581542969

Token 146: ' the' (ID: 290)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31772392988204956
    2. '[' → logprob: -2.3177239894866943
    3. ' ' → logprob: -3.3177239894866943
    4. ',' → logprob: -3.8177239894866943
    5. '   ' → logprob: -3.8177239894866943
    6. ']' → logprob: -4.067723751068115
    7. ':' → logprob: -4.567723751068115
    8. '):' → logprob: -4.567723751068115
    9. ')' → logprob: -4.692723751068115
    10. '=' → logprob: -4.942723751068115

Token 147: ' vertex' (ID: 25363)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4305815100669861
    2. ' v' → logprob: -1.0555815696716309
    3. '[v' → logprob: -7.555581569671631
    4. '[' → logprob: -8.805581092834473
    5. ' next' → logprob: -8.805581092834473
    6. 'next' → logprob: -9.055581092834473
    7. ' ' → logprob: -9.180581092834473
    8. ' opposite' → logprob: -9.305581092834473
    9. '
' → logprob: -9.430581092834473
    10. '<|end|>' → logprob: -9.555581092834473

Token 148: ' v' (ID: 323)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4209873676300049
    2. '):' → logprob: -1.5459873676300049
    3. ' =' → logprob: -1.7959873676300049
    4. ':' → logprob: -2.170987367630005
    5. '[' → logprob: -2.295987367630005
    6. ',' → logprob: -3.420987367630005
    7. ']:' → logprob: -4.045987129211426
    8. '):
' → logprob: -4.170987129211426
    9. '=' → logprob: -4.170987129211426
    10. ']' → logprob: -4.420987129211426

Token 149: ' to' (ID: 316)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9243497252464294
    2. '):' → logprob: -0.9243497252464294
    3. ',' → logprob: -2.174349784851074
    4. '   ' → logprob: -3.674349784851074
    5. ']:' → logprob: -3.924349784851074
    6. '[v' → logprob: -4.299349784851074
    7. ' =' → logprob: -4.674349784851074
    8. ':' → logprob: -4.799349784851074
    9. '):
' → logprob: -5.424349784851074
    10. ')' → logprob: -5.799349784851074

Token 150: ' the' (ID: 290)
  Prédit: ' direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.3724776804447174
    2. 'direction' → logprob: -1.622477650642395
    3. ' the' → logprob: -3.1224777698516846
    4. 'the' → logprob: -3.1224777698516846
    5. '   ' → logprob: -4.6224775314331055
    6. '(direction' → logprob: -4.8724775314331055
    7. ' ' → logprob: -6.3724775314331055
    8. '1' → logprob: -6.7474775314331055
    9. 'left' → logprob: -6.7474775314331055
    10. 'right' → logprob: -6.8724775314331055

Token 151: ' given' (ID: 4335)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.36833876371383667
    2. ' direction' → logprob: -1.3683388233184814
    3. 'right' → logprob: -3.4933388233184814
    4. ' right' → logprob: -3.9933388233184814
    5. 'left' → logprob: -6.743338584899902
    6. '(direction' → logprob: -6.868338584899902
    7. '1' → logprob: -7.743338584899902
    8. 'other' → logprob: -7.993338584899902
    9. ' opposite' → logprob: -8.118338584899902
    10. '
' → logprob: -8.243338584899902

Token 152: ' direction' (ID: 9262)
  Prédit: ' direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.6328442692756653
    2. 'direction' → logprob: -0.7578442692756653
    3. '(direction' → logprob: -8.757843971252441
    4. ' ' → logprob: -10.507843971252441
    5. 'dire' → logprob: -11.007843971252441
    6. '
' → logprob: -11.257843971252441
    7. '_direction' → logprob: -12.382843971252441
    8. '方向' → logprob: -12.757843971252441
    9. '[' → logprob: -12.882843971252441
    10. 'irection' → logprob: -12.882843971252441

Token 153: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2780655026435852
    2. '):' → logprob: -2.0280654430389404
    3. '   ' → logprob: -3.0280654430389404
    4. ',' → logprob: -3.9030654430389404
    5. '):
' → logprob: -4.6530656814575195
    6. '[' → logprob: -4.6530656814575195
    7. ')' → logprob: -4.6530656814575195
    8. ' :' → logprob: -5.7780656814575195
    9. ':
' → logprob: -6.1530656814575195
    10. ']:' → logprob: -6.2780656814575195

Token 154: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5664752721786499
    2. '[' → logprob: -1.94147527217865
    3. ':' → logprob: -2.1914753913879395
    4. '):' → logprob: -2.1914753913879395
    5. ' ,' → logprob: -4.0664753913879395
    6. '   ' → logprob: -4.4414753913879395
    7. ' ' → logprob: -4.6914753913879395
    8. ' :' → logprob: -4.6914753913879395
    9. ')' → logprob: -5.0664753913879395
    10. '<|end|>' → logprob: -6.0664753913879395

Token 155: ' c' (ID: 274)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.45152926445007324
    2. ' v' → logprob: -2.2015292644500732
    3. 'l' → logprob: -2.8265292644500732
    4. 'v' → logprob: -3.4515292644500732
    5. '   ' → logprob: -3.4515292644500732
    6. ' left' → logprob: -3.7015292644500732
    7. ' [' → logprob: -3.8265292644500732
    8. 'left' → logprob: -3.9515292644500732
    9. ' new' → logprob: -4.201529502868652
    10. '[' → logprob: -4.701529502868652

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22283384203910828
    2. '=' → logprob: -2.5978338718414307
    3. 'h' → logprob: -2.8478338718414307
    4. '[' → logprob: -2.9728338718414307
    5. '_idx' → logprob: -5.222833633422852
    6. '   ' → logprob: -6.222833633422852
    7. ' ' → logprob: -6.847833633422852
    8. '=d' → logprob: -6.972833633422852
    9. '       ' → logprob: -7.597833633422852
    10. '  ' → logprob: -7.847833633422852

Token 157: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.523158609867096
    2. ' v' → logprob: -0.898158609867096
    3. '	v' → logprob: -11.89815902709961
    4. ' ' → logprob: -12.02315902709961
    5. '[' → logprob: -12.14815902709961
    6. '   ' → logprob: -12.39815902709961
    7. '
' → logprob: -12.89815902709961
    8. '[v' → logprob: -13.39815902709961
    9. ' [' → logprob: -14.02315902709961
    10. ' 
' → logprob: -14.02315902709961

Token 158: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.551721889991313e-05
    2. '[d' → logprob: -10.125065803527832
    3. '[
' → logprob: -11.500065803527832
    4. ' [' → logprob: -11.875065803527832
    5. '   ' → logprob: -12.625065803527832
    6. '[int' → logprob: -13.875065803527832
    7. '[(' → logprob: -14.250065803527832
    8. '[v' → logprob: -14.500065803527832
    9. '
' → logprob: -14.500065803527832
    10. '	' → logprob: -14.625065803527832

Token 159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38245895504951477
    2. 'direction' → logprob: -1.2574589252471924
    3. '0' → logprob: -3.7574589252471924
    4. '(' → logprob: -5.6324591636657715
    5. '3' → logprob: -6.2574591636657715
    6. 'int' → logprob: -6.7574591636657715
    7. '2' → logprob: -6.8824591636657715
    8. '(direction' → logprob: -7.0074591636657715
    9. '[' → logprob: -8.007458686828613
    10. 'abs' → logprob: -8.257458686828613

Token 160: ' -' (ID: 533)
  Prédit: '-direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-direction' → logprob: -0.5779915452003479
    2. ' -' → logprob: -0.8279915452003479
    3. '-' → logprob: -7.202991485595703
    4. ']' → logprob: -7.577991485595703
    5. '][' → logprob: -8.077991485595703
    6. ' if' → logprob: -8.202991485595703
    7. '-dire' → logprob: -9.577991485595703
    8. '[' → logprob: -9.702991485595703
    9. '' → logprob: -11.077991485595703
    10. 'if' → logprob: -11.577991485595703

Token 161: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.029752222821116447
    2. ' direction' → logprob: -3.529752254486084
    3. '(direction' → logprob: -14.154751777648926
    4. '   ' → logprob: -15.154751777648926
    5. 'dire' → logprob: -15.404751777648926
    6. ' ' → logprob: -15.904751777648926
    7. 'd' → logprob: -16.404752731323242
    8. '_direction' → logprob: -16.529752731323242
    9. '  ' → logprob: -16.654752731323242
    10. 'dir' → logprob: -16.779752731323242

Token 162: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003305784775875509
    2. ']
' → logprob: -8.500330924987793
    3. ' ]' → logprob: -9.000330924987793
    4. '()]' → logprob: -14.500330924987793
    5. '<|end|>' → logprob: -14.500330924987793
    6. ']

' → logprob: -14.625330924987793
    7. '][' → logprob: -14.625330924987793
    8. ']
' → logprob: -14.875330924987793
    9. '];' → logprob: -15.375330924987793
    10. '`]' → logprob: -15.875330924987793

Token 163: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9518011808395386
    2. '       ' → logprob: -0.9518011808395386
    3. '[' → logprob: -1.7018011808395386
    4. 'v' → logprob: -3.201801300048828
    5. ' v' → logprob: -6.576801300048828
    6. ',' → logprob: -6.576801300048828
    7. '
' → logprob: -7.701801300048828
    8. ',
' → logprob: -7.951801300048828
    9. '   ' → logprob: -8.076801300048828
    10. '[v' → logprob: -8.326801300048828

Token 164: ' direction' (ID: 9262)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003772531636059284
    2. 'v' → logprob: -6.503772735595703
    3. 'c' → logprob: -7.503772735595703
    4. '][' → logprob: -7.878772735595703
    5. 'def' → logprob: -8.253772735595703
    6. '[
' → logprob: -8.628772735595703
    7. '0' → logprob: -8.628772735595703
    8. 'direction' → logprob: -9.253772735595703
    9. ']' → logprob: -9.378772735595703
    10. '1' → logprob: -9.753772735595703

Token 165: ' ==' (ID: 951)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6773386001586914
    2. ']' → logprob: -1.0523386001586914
    3. '<|end|>' → logprob: -2.6773386001586914
    4. '][' → logprob: -3.4273386001586914
    5. ' =' → logprob: -4.427338600158691
    6. '
' → logprob: -5.052338600158691
    7. ',' → logprob: -5.302338600158691
    8. '=' → logprob: -5.677338600158691
    9. ''s' → logprob: -6.552338600158691
    10. ']
' → logprob: -6.677338600158691

Token 166: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07620730996131897
    2. '1' → logprob: -2.701207399368286
    3. ' ' → logprob: -5.076207160949707
    4. '   ' → logprob: -12.326207160949707
    5. '  ' → logprob: -14.326207160949707
    6. '-' → logprob: -14.638707160949707
    7. 'True' → logprob: -14.951207160949707
    8. '=' → logprob: -15.451207160949707
    9. 'int' → logprob: -15.576207160949707
    10. '2' → logprob: -15.638707160949707

Token 167: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09151317179203033
    2. '1' → logprob: -2.466513156890869
    3. ' ' → logprob: -5.966513156890869
    4. '   ' → logprob: -13.091513633728027
    5. '-' → logprob: -13.529013633728027
    6. '2' → logprob: -14.216513633728027
    7. '!' → logprob: -14.966513633728027
    8. '  ' → logprob: -15.029013633728027
    9. 'direction' → logprob: -15.341513633728027
    10. '```' → logprob: -15.529013633728027

Token 168: ':' (ID: 25)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6011002659797668
    2. '][' → logprob: -1.351100206375122
    3. '[' → logprob: -2.101100206375122
    4. ']
' → logprob: -3.226100206375122
    5. '
' → logprob: -3.976100206375122
    6. '<|end|>' → logprob: -5.351100444793701
    7. ',' → logprob: -6.851100444793701
    8. '   ' → logprob: -7.476100444793701
    9. '],' → logprob: -7.476100444793701
    10. 'v' → logprob: -7.851100444793701

Token 169: ' right' (ID: 1849)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.33276697993278503
    2. ' v' → logprob: -1.8327670097351074
    3. '0' → logprob: -2.3327670097351074
    4. '[' → logprob: -4.707767009735107
    5. ' ' → logprob: -4.707767009735107
    6. '   ' → logprob: -6.332767009735107
    7. 'return' → logprob: -6.582767009735107
    8. 'c' → logprob: -6.957767009735107
    9. 'def' → logprob: -7.082767009735107
    10. ' return' → logprob: -7.457767009735107

Token 170: ' rotation' (ID: 23769)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3770768940448761
    2. ',' → logprob: -2.5020768642425537
    3. 'child' → logprob: -2.6270768642425537
    4. '[' → logprob: -2.8770768642425537
    5. '][' → logprob: -3.8770768642425537
    6. ' child' → logprob: -4.252077102661133
    7. '],' → logprob: -4.627077102661133
    8. ' =' → logprob: -4.752077102661133
    9. '_child' → logprob: -4.877077102661133
    10. '   ' → logprob: -5.127077102661133

Token 171: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.600087583065033
    2. ']' → logprob: -1.3500876426696777
    3. '<|end|>' → logprob: -2.4750876426696777
    4. '][' → logprob: -2.8500876426696777
    5. '
' → logprob: -3.7250876426696777
    6. ',' → logprob: -4.350087642669678
    7. '   ' → logprob: -6.100087642669678
    8. ' ]' → logprob: -6.600087642669678
    9. ')' → logprob: -6.725087642669678
    10. '<|end|>' → logprob: -7.100087642669678

Token 172: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4019432067871094
    2. '       ' → logprob: -2.0269432067871094
    3. '
' → logprob: -2.2769432067871094
    4. ' =' → logprob: -3.2769432067871094
    5. 'v' → logprob: -3.6519432067871094
    6. '   ' → logprob: -4.651943206787109
    7. ',' → logprob: -4.901943206787109
    8. ' v' → logprob: -5.026943206787109
    9. ')' → logprob: -6.026943206787109
    10. ')
' → logprob: -6.526943206787109

Token 173: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.05610937997698784
    2. ' v' → logprob: -2.9311094284057617
    3. '   ' → logprob: -6.806109428405762
    4. '	v' → logprob: -10.306109428405762
    5. 'if' → logprob: -10.806109428405762
    6. '[' → logprob: -10.931109428405762
    7. '       ' → logprob: -11.431109428405762
    8. ' if' → logprob: -11.431109428405762
    9. ' ' → logprob: -11.681109428405762
    10. '[v' → logprob: -12.181109428405762

Token 174: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00016074994346126914
    2. '[
' → logprob: -9.375161170959473
    3. ' =' → logprob: -11.000161170959473
    4. '=' → logprob: -11.500161170959473
    5. '
' → logprob: -11.875161170959473
    6. '1' → logprob: -11.875161170959473
    7. ',' → logprob: -12.250161170959473
    8. 'c' → logprob: -12.500161170959473
    9. ' [' → logprob: -12.625161170959473
    10. '2' → logprob: -13.000161170959473

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00045545989996753633
    2. '2' → logprob: -8.625455856323242
    3. '(' → logprob: -9.250455856323242
    4. ' ' → logprob: -10.000455856323242
    5. '
' → logprob: -10.125455856323242
    6. '0' → logprob: -10.750455856323242
    7. '4' → logprob: -10.875455856323242
    8. '[' → logprob: -11.000455856323242
    9. '3' → logprob: -11.125455856323242
    10. '   ' → logprob: -12.000455856323242

Token 176: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6708203554153442
    2. '-direction' → logprob: -1.2958203554153442
    3. ' -' → logprob: -1.5458203554153442
    4. '[' → logprob: -6.545820236206055
    5. '][' → logprob: -8.045820236206055
    6. ']' → logprob: -9.545820236206055
    7. '-[' → logprob: -11.795820236206055
    8. '<|end|>' → logprob: -11.920820236206055
    9. '-dire' → logprob: -12.170820236206055
    10. '-d' → logprob: -12.295820236206055

Token 177: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -4.5491004129871726e-05
    2. ' direction' → logprob: -10.000045776367188
    3. '(direction' → logprob: -17.000045776367188
    4. 'directive' → logprob: -17.875045776367188
    5. '_direction' → logprob: -18.000045776367188
    6. 'dire' → logprob: -18.375045776367188
    7. '方向' → logprob: -19.250045776367188
    8. '   ' → logprob: -19.500045776367188
    9. '.direction' → logprob: -19.500045776367188
    10. 'director' → logprob: -19.500045776367188

Token 178: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03425814211368561
    2. '][' → logprob: -3.9092581272125244
    3. '],' → logprob: -4.5342583656311035
    4. ']=' → logprob: -6.2842583656311035
    5. '[' → logprob: -7.6592583656311035
    6. ',' → logprob: -8.659257888793945
    7. ' ]' → logprob: -9.159257888793945
    8. '][]' → logprob: -9.534257888793945
    9. '=' → logprob: -10.659257888793945
    10. '].' → logprob: -10.784257888793945

Token 179: ' t' (ID: 260)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.011157703585922718
    2. ' c' → logprob: -4.511157512664795
    3. '   ' → logprob: -10.136157989501953
    4. '	c' → logprob: -11.386157989501953
    5. '<|end|>' → logprob: -11.386157989501953
    6. '       ' → logprob: -11.761157989501953
    7. ' =' → logprob: -11.761157989501953
    8. 'v' → logprob: -11.761157989501953
    9. '
' → logprob: -11.886157989501953
    10. ')c' → logprob: -12.261157989501953

Token 180: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.46390196681022644
    2. '=' → logprob: -1.5889019966125488
    3. 'c' → logprob: -2.088901996612549
    4. '<|end|>' → logprob: -3.588901996612549
    5. '[' → logprob: -4.963901996612549
    6. '=c' → logprob: -5.838901996612549
    7. ' c' → logprob: -6.588901996612549
    8. ',' → logprob: -6.713901996612549
    9. ' ' → logprob: -7.338901996612549
    10. 'v' → logprob: -7.963901996612549

Token 181: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0430559404194355
    2. ' c' → logprob: -3.168056011199951
    3. '	c' → logprob: -10.293055534362793
    4. '   ' → logprob: -12.293055534362793
    5. '(c' → logprob: -12.293055534362793
    6. '
' → logprob: -12.418055534362793
    7. ')c' → logprob: -13.043055534362793
    8. '_c' → logprob: -13.793055534362793
    9. '       ' → logprob: -13.918055534362793
    10. '[c' → logprob: -14.043055534362793

Token 182: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.127333340875339e-06
    2. '[d' → logprob: -13.250003814697266
    3. 'direction' → logprob: -13.625003814697266
    4. '[
' → logprob: -14.250003814697266
    5. '   ' → logprob: -15.875003814697266
    6. ' [' → logprob: -17.125003814697266
    7. ' =' → logprob: -17.375003814697266
    8. '=' → logprob: -17.500003814697266
    9. 'v' → logprob: -17.625003814697266
    10. '    
' → logprob: -17.750003814697266

Token 183: 'direction' (ID: 43278)
  Prédit: 'direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.0037503212224692106
    2. '[' → logprob: -5.753750324249268
    3. '   ' → logprob: -8.00374984741211
    4. ' direction' → logprob: -9.37874984741211
    5. '
' → logprob: -9.62874984741211
    6. '2' → logprob: -10.87874984741211
    7. 'd' → logprob: -11.00374984741211
    8. 'dire' → logprob: -11.87874984741211
    9. 'directory' → logprob: -12.25374984741211
    10. '0' → logprob: -12.25374984741211

Token 184: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.002870373660698533
    2. ',' → logprob: -5.877870559692383
    3. ' ],' → logprob: -10.252870559692383
    4. ']' → logprob: -10.877870559692383
    5. '
' → logprob: -12.377870559692383
    6. 'c' → logprob: -12.877870559692383
    7. '[' → logprob: -14.002870559692383
    8. '   ' → logprob: -14.377870559692383
    9. ',c' → logprob: -14.752870559692383
    10. ' ,' → logprob: -14.877870559692383

Token 185: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4390451908111572
    2. 'v' → logprob: -1.1890451908111572
    3. 'None' → logprob: -3.5640451908111572
    4. '[' → logprob: -4.939044952392578
    5. ' c' → logprob: -5.689044952392578
    6. ' None' → logprob: -6.314044952392578
    7. ' deepcopy' → logprob: -6.439044952392578
    8. 'deque' → logprob: -6.564044952392578
    9. '   ' → logprob: -6.689044952392578
    10. ' ' → logprob: -6.814044952392578

Token 186: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.031157969729975e-05
    2. '<|end|>' → logprob: -9.875090599060059
    3. '
' → logprob: -10.875090599060059
    4. '[
' → logprob: -11.125090599060059
    5. '<|end|>' → logprob: -14.125090599060059
    6. 'def' → logprob: -14.250090599060059
    7. ' ' → logprob: -14.375090599060059
    8. '#' → logprob: -15.125090599060059
    9. '0' → logprob: -15.250090599060059
    10. '   ' → logprob: -15.375090599060059

Token 187: '1' (ID: 16)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -1.4736459888808895e-05
    2. ' direction' → logprob: -11.750014305114746
    3. '(direction' → logprob: -12.500014305114746
    4. '0' → logprob: -13.125014305114746
    5. '   ' → logprob: -14.375014305114746
    6. '
' → logprob: -15.875014305114746
    7. '[' → logprob: -16.500015258789062
    8. 'd' → logprob: -16.625015258789062
    9. 'dimension' → logprob: -16.625015258789062
    10. 'directive' → logprob: -17.250015258789062

Token 188: ' -' (ID: 533)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.022998301312327385
    2. '-' → logprob: -4.897998332977295
    3. ' -' → logprob: -5.022998332977295
    4. ']' → logprob: -5.397998332977295
    5. ' ' → logprob: -6.772998332977295
    6. ' =' → logprob: -7.647998332977295
    7. '<|end|>' → logprob: -7.647998332977295
    8. '
' → logprob: -7.772998332977295
    9. '-direction' → logprob: -7.772998332977295
    10. '0' → logprob: -8.772997856140137

Token 189: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.0032409359700977802
    2. ' direction' → logprob: -5.753241062164307
    3. '0' → logprob: -11.253240585327148
    4. '   ' → logprob: -11.253240585327148
    5. ']' → logprob: -11.753240585327148
    6. '(direction' → logprob: -11.753240585327148
    7. '1' → logprob: -12.378240585327148
    8. '
' → logprob: -12.878240585327148
    9. 'dire' → logprob: -13.253240585327148
    10. ')' → logprob: -13.503240585327148

Token 190: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13920865952968597
    2. ']
' → logprob: -2.2642085552215576
    3. '
' → logprob: -4.389208793640137
    4. '[' → logprob: -5.139208793640137
    5. '       ' → logprob: -6.014208793640137
    6. ']=' → logprob: -6.264208793640137
    7. 'c' → logprob: -6.764208793640137
    8. '],' → logprob: -7.014208793640137
    9. ' =' → logprob: -8.139208793640137
    10. 'v' → logprob: -8.639208793640137

Token 191: '       ' (ID: 309)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03669466823339462
    2. '       ' → logprob: -4.161694526672363
    3. '[' → logprob: -4.411694526672363
    4. ' c' → logprob: -4.911694526672363
    5. '   ' → logprob: -7.786694526672363
    6. ',' → logprob: -8.786694526672363
    7. '
' → logprob: -8.911694526672363
    8. ' ' → logprob: -9.036694526672363
    9. '<|end|>' → logprob: -9.911694526672363
    10. 'v' → logprob: -10.911694526672363

Token 192: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.0016839897725731134
    2. '       ' → logprob: -6.626684188842773
    3. ' c' → logprob: -8.126684188842773
    4. '[' → logprob: -9.876684188842773
    5. 'v' → logprob: -12.001684188842773
    6. '   ' → logprob: -13.251684188842773
    7. '
' → logprob: -13.501684188842773
    8. ',' → logprob: -15.126684188842773
    9. '#' → logprob: -15.251684188842773
    10. ')c' → logprob: -15.501684188842773

Token 193: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.107425062713446e-06
    2. '[
' → logprob: -12.375006675720215
    3. '   ' → logprob: -14.250006675720215
    4. '
' → logprob: -14.875006675720215
    5. '[d' → logprob: -15.500006675720215
    6. '```' → logprob: -15.875006675720215
    7. '[...]' → logprob: -16.25000762939453
    8. '	' → logprob: -16.37500762939453
    9. '    ' → logprob: -16.62500762939453
    10. '[[' → logprob: -16.93750762939453

Token 194: 'direction' (ID: 43278)
  Prédit: 'direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -6.134509021649137e-05
    2. '[' → logprob: -10.12506103515625
    3. '   ' → logprob: -11.12506103515625
    4. ' direction' → logprob: -12.75006103515625
    5. '1' → logprob: -13.37506103515625
    6. '(direction' → logprob: -14.00006103515625
    7. 'dimension' → logprob: -15.37506103515625
    8. 'dire' → logprob: -15.62506103515625
    9. '
' → logprob: -15.62506103515625
    10. 'd' → logprob: -16.12506103515625

Token 195: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5783277153968811
    2. '],' → logprob: -1.3283276557922363
    3. ',' → logprob: -1.8283276557922363
    4. '=' → logprob: -4.828327655792236
    5. ']=' → logprob: -5.953327655792236
    6. ' =' → logprob: -6.828327655792236
    7. ' ,' → logprob: -7.578327655792236
    8. ' ],' → logprob: -7.953327655792236
    9. ' ]' → logprob: -8.078328132629395
    10. '[' → logprob: -8.078328132629395

Token 196: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5040754675865173
    2. '=' → logprob: -1.004075527191162
    3. ' =' → logprob: -3.754075527191162
    4. '[' → logprob: -5.379075527191162
    5. ',v' → logprob: -6.754075527191162
    6. ' ,' → logprob: -8.504075050354004
    7. '=v' → logprob: -9.379075050354004
    8. 'v' → logprob: -10.754075050354004
    9. ',t' → logprob: -11.754075050354004
    10. ']' → logprob: -12.129075050354004

Token 197: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.004630553536117077
    2. ' v' → logprob: -5.3796305656433105
    3. '	v' → logprob: -11.754630088806152
    4. 't' → logprob: -14.254630088806152
    5. '
' → logprob: -14.504630088806152
    6. ')v' → logprob: -15.004630088806152
    7. '(v' → logprob: -15.254630088806152
    8. '   ' → logprob: -15.379630088806152
    9. '[v' → logprob: -15.504630088806152
    10. ',v' → logprob: -16.25463104248047

Token 198: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15783901512622833
    2. '[' → logprob: -2.032839059829712
    3. 'v' → logprob: -4.907838821411133
    4. ',' → logprob: -5.032838821411133
    5. '
' → logprob: -7.782838821411133
    6. 't' → logprob: -8.282838821411133
    7. '   ' → logprob: -9.532838821411133
    8. '<|end|>' → logprob: -9.532838821411133
    9. '
' → logprob: -10.032838821411133
    10. ' [' → logprob: -10.532838821411133

Token 199: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022232472896575928
    2. 'v' → logprob: -4.522232532501221
    3. 'return' → logprob: -4.647232532501221
    4. ' return' → logprob: -7.022232532501221
    5. 'c' → logprob: -7.772232532501221
    6. ' c' → logprob: -9.397232055664062
    7. ' v' → logprob: -9.522232055664062
    8. '[' → logprob: -10.272232055664062
    9. ',' → logprob: -11.897232055664062
    10. 't' → logprob: -12.022232055664062

Token 200: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.017321253195405006
    2. 'v' → logprob: -4.6423211097717285
    3. 'c' → logprob: -5.1423211097717285
    4. 'if' → logprob: -7.6423211097717285
    5. '   ' → logprob: -7.7673211097717285
    6. 'for' → logprob: -8.017321586608887
    7. 'self' → logprob: -8.517321586608887
    8. ' return' → logprob: -9.142321586608887
    9. 't' → logprob: -9.517321586608887
    10. 'def' → logprob: -10.142321586608887

Token 201: ' update' (ID: 4027)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.05074748024344444
    2. ' v' → logprob: -4.300747394561768
    3. 't' → logprob: -5.050747394561768
    4. 'c' → logprob: -5.175747394561768
    5. 'return' → logprob: -5.175747394561768
    6. '#' → logprob: -5.425747394561768
    7. '       ' → logprob: -5.550747394561768
    8. 'for' → logprob: -5.550747394561768
    9. 'def' → logprob: -6.300747394561768
    10. 'if' → logprob: -6.425747394561768

Token 202: ' vertex' (ID: 25363)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.4186662435531616
    2. 'v' → logprob: -1.1686662435531616
    3. '       ' → logprob: -4.168666362762451
    4. ' c' → logprob: -5.043666362762451
    5. 'c' → logprob: -5.793666362762451
    6. '   ' → logprob: -6.043666362762451
    7. ' for' → logprob: -6.793666362762451
    8. ' self' → logprob: -7.793666362762451
    9. '[' → logprob: -7.918666362762451
    10. '#' → logprob: -8.043665885925293

Token 203: ''s' (ID: 885)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9454397559165955
    2. '[' → logprob: -1.3204398155212402
    3. 'v' → logprob: -1.4454398155212402
    4. ' v' → logprob: -2.4454398155212402
    5. ' c' → logprob: -5.19543981552124
    6. 'c' → logprob: -5.69543981552124
    7. 's' → logprob: -5.82043981552124
    8. 'def' → logprob: -6.57043981552124
    9. ' counts' → logprob: -6.57043981552124
    10. ' [' → logprob: -6.82043981552124

Token 204: ' information' (ID: 2164)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.8186224102973938
    2. '[' → logprob: -0.8186224102973938
    3. ' ' → logprob: -2.818622350692749
    4. '5' → logprob: -3.443622350692749
    5. 'count' → logprob: -4.568622589111328
    6. '#' → logprob: -5.943622589111328
    7. 'counts' → logprob: -6.068622589111328
    8. 'v' → logprob: -6.193622589111328
    9. ' counts' → logprob: -6.193622589111328
    10. '   ' → logprob: -6.568622589111328

Token 205: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025025326758623123
    2. 'v' → logprob: -6.50250244140625
    3. ' v' → logprob: -7.37750244140625
    4. '<|end|>' → logprob: -9.25250244140625
    5. '[' → logprob: -9.62750244140625
    6. ',' → logprob: -9.87750244140625
    7. 'c' → logprob: -10.00250244140625
    8. ' c' → logprob: -10.12750244140625
    9. 'def' → logprob: -10.87750244140625
    10. '   ' → logprob: -11.87750244140625

Token 206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014274981804192066
    2. 'v' → logprob: -7.00142765045166
    3. ' v' → logprob: -7.87642765045166
    4. '<|end|>' → logprob: -9.75142765045166
    5. ',' → logprob: -10.50142765045166
    6. '        
' → logprob: -11.75142765045166
    7. 'def' → logprob: -11.87642765045166
    8. '   ' → logprob: -12.12642765045166
    9. ' ' → logprob: -12.50142765045166
    10. ' c' → logprob: -12.50142765045166

Token 207: ' n' (ID: 297)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.002977464348077774
    2. ' v' → logprob: -6.25297737121582
    3. 'c' → logprob: -7.75297737121582
    4. '       ' → logprob: -7.87797737121582
    5. 'def' → logprob: -9.37797737121582
    6. 't' → logprob: -10.25297737121582
    7. 'return' → logprob: -10.37797737121582
    8. 'for' → logprob: -10.37797737121582
    9. 'self' → logprob: -10.87797737121582
    10. '   ' → logprob: -10.87797737121582

Token 208: '_desc' (ID: 26683)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04722127690911293
    2. '=' → logprob: -4.4222211837768555
    3. 'v' → logprob: -4.7972211837768555
    4. 'um' → logprob: -5.0472211837768555
    5. 'ew' → logprob: -5.5472211837768555
    6. '   ' → logprob: -5.6722211837768555
    7. '_desc' → logprob: -6.0472211837768555
    8. '_count' → logprob: -6.0472211837768555
    9. 'desc' → logprob: -6.1722211837768555
    10. 'c' → logprob: -6.5472211837768555

Token 209: ',' (ID: 11)
  Prédit: 'endants'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endants' → logprob: -0.001143314759247005
    2. ' =' → logprob: -7.126143455505371
    3. '=' → logprob: -8.876143455505371
    4. '   ' → logprob: -9.251143455505371
    5. 'v' → logprob: -10.501143455505371
    6. 'endant' → logprob: -10.626143455505371
    7. '=v' → logprob: -10.626143455505371
    8. 'end' → logprob: -12.251143455505371
    9. ',' → logprob: -12.251143455505371
    10. 'enants' → logprob: -12.626143455505371

Token 210: ' sum' (ID: 4215)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.9645047187805176
    2. 's' → logprob: -1.3395047187805176
    3. 'n' → logprob: -1.8395047187805176
    4. ' n' → logprob: -1.9645047187805176
    5. 'sum' → logprob: -3.8395047187805176
    6. 'c' → logprob: -4.714504718780518
    7. ' c' → logprob: -5.339504718780518
    8. 'v' → logprob: -5.714504718780518
    9. '_sum' → logprob: -5.714504718780518
    10. 'total' → logprob: -6.214504718780518

Token 211: '_desc' (ID: 26683)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.26199910044670105
    2. '_desc' → logprob: -2.1369991302490234
    3. ' =' → logprob: -2.7619991302490234
    4. '_val' → logprob: -3.8869991302490234
    5. '=' → logprob: -5.011999130249023
    6. '_,' → logprob: -5.511999130249023
    7. '_value' → logprob: -5.761999130249023
    8. '_=' → logprob: -5.886999130249023
    9. 'desc' → logprob: -6.136999130249023
    10. '_v' → logprob: -6.136999130249023

Token 212: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18161848187446594
    2. ' =' → logprob: -1.8066184520721436
    3. ',' → logprob: -6.306618690490723
    4. '=v' → logprob: -11.056618690490723
    5. 'v' → logprob: -11.681618690490723
    6. ',v' → logprob: -11.931618690490723
    7. 's' → logprob: -13.056618690490723
    8. 'c' → logprob: -13.181618690490723
    9. ')' → logprob: -13.306618690490723
    10. '<|end|>' → logprob: -13.681618690490723

Token 213: ' c' (ID: 274)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7424042224884033
    2. 'self' → logprob: -1.1174042224884033
    3. '0' → logprob: -2.3674042224884033
    4. '(self' → logprob: -2.6174042224884033
    5. '(' → logprob: -3.9924042224884033
    6. '(T' → logprob: -5.242403984069824
    7. 'Tre' → logprob: -5.992403984069824
    8. '(c' → logprob: -6.867403984069824
    9. ' self' → logprob: -7.242403984069824
    10. '(
' → logprob: -7.992403984069824

Token 214: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014402776956558228
    2. ' =' → logprob: -5.389402866363525
    3. '=' → logprob: -5.889402866363525
    4. '
' → logprob: -6.514402866363525
    5. 'def' → logprob: -6.639402866363525
    6. '   ' → logprob: -6.764402866363525
    7. '#' → logprob: -7.514402866363525
    8. '_count' → logprob: -7.764402866363525
    9. 'count' → logprob: -8.264402389526367
    10. '2' → logprob: -8.389402389526367

Token 215: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.11488056927919388
    2. '[' → logprob: -2.6148805618286133
    3. '0' → logprob: -4.489880561828613
    4. 'count' → logprob: -4.989880561828613
    5. '(' → logprob: -5.489880561828613
    6. '2' → logprob: -5.614880561828613
    7. '_count' → logprob: -6.364880561828613
    8. ']' → logprob: -6.614880561828613
    9. '1' → logprob: -6.864880561828613
    10. '3' → logprob: -7.114880561828613

Token 216: ':]' (ID: 67377)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '],' → logprob: -0.5122190117835999
    2. ']' → logprob: -1.137218952178955
    3. '+' → logprob: -3.387218952178955
    4. ']+' → logprob: -3.637218952178955
    5. ',' → logprob: -4.012218952178955
    6. ' +' → logprob: -6.887218952178955
    7. ']+=' → logprob: -8.387219429016113
    8. ' ],' → logprob: -8.512219429016113
    9. ' ,' → logprob: -9.637219429016113
    10. '[' → logprob: -10.012219429016113

Token 217: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8221463561058044
    2. '[' → logprob: -1.1971464157104492
    3. ' =' → logprob: -1.9471464157104492
    4. '
' → logprob: -2.822146415710449
    5. '       ' → logprob: -3.572146415710449
    6. '<|end|>' → logprob: -4.447146415710449
    7. '[:]' → logprob: -5.572146415710449
    8. '#' → logprob: -6.197146415710449
    9. 'def' → logprob: -6.447146415710449
    10. '        
' → logprob: -6.572146415710449

Token 218: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5580623149871826
    2. '[' → logprob: -1.1830623149871826
    3. '[v' → logprob: -3.1830623149871826
    4. 'c' → logprob: -4.183062553405762
    5. '0' → logprob: -4.558062553405762
    6. ' v' → logprob: -4.683062553405762
    7. '[
' → logprob: -4.808062553405762
    8. '[T' → logprob: -4.808062553405762
    9. ' [' → logprob: -5.058062553405762
    10. '[c' → logprob: -5.683062553405762

Token 219: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007842259481549263
    2. '4' → logprob: -4.882842063903809
    3. '[:' → logprob: -9.507842063903809
    4. ',' → logprob: -9.882842063903809
    5. '5' → logprob: -10.007842063903809
    6. '   ' → logprob: -10.882842063903809
    7. ':' → logprob: -11.757842063903809
    8. ' [' → logprob: -11.757842063903809
    9. ' ' → logprob: -12.132842063903809
    10. ')[' → logprob: -13.007842063903809

Token 220: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.09041592478752136
    2. '[' → logprob: -2.4654159545898438
    3. ':' → logprob: -6.715415954589844
    4. ']' → logprob: -9.715415954589844
    5. '][' → logprob: -9.965415954589844
    6. ',' → logprob: -9.965415954589844
    7. '[:' → logprob: -10.965415954589844
    8. ' ' → logprob: -11.215415954589844
    9. '(' → logprob: -11.340415954589844
    10. '2' → logprob: -11.590415954589844

Token 221: ':]
' (ID: 61598)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3347915709018707
    2. '],' → logprob: -2.209791660308838
    3. ']+' → logprob: -2.584791660308838
    4. ':' → logprob: -3.084791660308838
    5. ':]' → logprob: -3.584791660308838
    6. ':],' → logprob: -4.209791660308838
    7. ',' → logprob: -5.584791660308838
    8. '5' → logprob: -6.584791660308838
    9. '+' → logprob: -6.584791660308838
    10. '4' → logprob: -6.709791660308838

Token 222: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.333351731300354
    2. ',' → logprob: -2.3333516120910645
    3. '+' → logprob: -2.8333516120910645
    4. ' +' → logprob: -3.3333516120910645
    5. '[' → logprob: -3.4583516120910645
    6. 'v' → logprob: -3.5833516120910645
    7. 'n' → logprob: -4.7083516120910645
    8. '
' → logprob: -5.0833516120910645
    9. '=' → logprob: -5.5833516120910645
    10. '   ' → logprob: -5.8333516120910645

Token 223: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.5983121991157532
    2. '       ' → logprob: -0.8483121991157532
    3. 'n' → logprob: -3.9733121395111084
    4. '   ' → logprob: -7.0983123779296875
    5. ' v' → logprob: -7.0983123779296875
    6. 'c' → logprob: -7.8483123779296875
    7. 'if' → logprob: -8.098312377929688
    8. ',' → logprob: -8.223312377929688
    9. 'def' → logprob: -9.223312377929688
    10. '#' → logprob: -9.223312377929688

Token 224: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.602024900028482e-05
    2. '=' → logprob: -10.125085830688477
    3. '[:' → logprob: -11.250085830688477
    4. '#' → logprob: -12.000085830688477
    5. '[
' → logprob: -12.000085830688477
    6. ' =' → logprob: -12.625085830688477
    7. '   ' → logprob: -13.000085830688477
    8. '[:]' → logprob: -13.125085830688477
    9. ' [' → logprob: -13.250085830688477
    10. '
' → logprob: -13.500085830688477

Token 225: '4' (ID: 19)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7659886479377747
    2. '4' → logprob: -1.0159885883331299
    3. 'direction' → logprob: -1.8909885883331299
    4. '3' → logprob: -5.015988826751709
    5. '2' → logprob: -5.390988826751709
    6. '[' → logprob: -5.640988826751709
    7. '5' → logprob: -5.765988826751709
    8. '0' → logprob: -6.890988826751709
    9. '(direction' → logprob: -7.515988826751709
    10. ' ' → logprob: -7.515988826751709

Token 226: ':]' (ID: 67377)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02596292831003666
    2. '][' → logprob: -3.9009628295898438
    3. ']-' → logprob: -6.275962829589844
    4. ']+=' → logprob: -6.275962829589844
    5. '[' → logprob: -7.275962829589844
    6. '-' → logprob: -7.525962829589844
    7. ']=' → logprob: -8.775962829589844
    8. '][-' → logprob: -9.775962829589844
    9. ' ]' → logprob: -10.150962829589844
    10. '-=' → logprob: -10.775962829589844

Token 227: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28290659189224243
    2. ' =' → logprob: -1.4079065322875977
    3. '[' → logprob: -6.407906532287598
    4. ',' → logprob: -10.157906532287598
    5. '=[' → logprob: -11.032906532287598
    6. ')' → logprob: -11.032906532287598
    7. ' [' → logprob: -12.157906532287598
    8. '   ' → logprob: -12.282906532287598
    9. ' =[' → logprob: -12.282906532287598
    10. ']' → logprob: -12.407906532287598

Token 228: ' n' (ID: 297)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0981872081756592
    2. '[T' → logprob: -1.7231872081756592
    3. '[
' → logprob: -2.223187208175659
    4. 'v' → logprob: -2.223187208175659
    5. '[v' → logprob: -2.348187208175659
    6. '(T' → logprob: -2.973187208175659
    7. 'Tre' → logprob: -3.348187208175659
    8. '(' → logprob: -4.098187446594238
    9. '(v' → logprob: -4.598187446594238
    10. '[n' → logprob: -4.598187446594238

Token 229: '_desc' (ID: 26683)
  Prédit: '_desc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_desc' → logprob: -0.4297877252101898
    2. '[' → logprob: -2.0547876358032227
    3. '-' → logprob: -2.3047876358032227
    4. '_count' → logprob: -3.6797876358032227
    5. '5' → logprob: -3.8047876358032227
    6. 'v' → logprob: -3.9297876358032227
    7. 'desc' → logprob: -4.304787635803223
    8. ' -' → logprob: -4.679787635803223
    9. '_' → logprob: -4.929787635803223
    10. ',' → logprob: -5.554787635803223

Token 230: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.34860342741012573
    2. ' -' → logprob: -1.4736034870147705
    3. '+' → logprob: -3.4736034870147705
    4. ',' → logprob: -3.8486034870147705
    5. ' +' → logprob: -4.848603248596191
    6. '[' → logprob: -6.223603248596191
    7. ' ' → logprob: -7.473603248596191
    8. 'v' → logprob: -7.848603248596191
    9. '   ' → logprob: -8.098603248596191
    10. '1' → logprob: -8.473603248596191

Token 231: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.19290539622306824
    2. 'Tre' → logprob: -2.1929054260253906
    3. 'c' → logprob: -3.0679054260253906
    4. '1' → logprob: -5.442905426025391
    5. ' self' → logprob: -5.567905426025391
    6. 'T' → logprob: -5.692905426025391
    7. 'n' → logprob: -5.692905426025391
    8. ' Tre' → logprob: -7.442905426025391
    9. '(T' → logprob: -7.817905426025391
    10. '(' → logprob: -8.31790542602539

Token 232: '1' (ID: 16)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.934056282043457
    2. 'Tre' → logprob: -0.934056282043457
    3. 'c' → logprob: -1.684056282043457
    4. 'T' → logprob: -4.184056282043457
    5. 'n' → logprob: -5.184056282043457
    6. '(T' → logprob: -6.309056282043457
    7. ' Tre' → logprob: -6.434056282043457
    8. '1' → logprob: -7.059056282043457
    9. 'v' → logprob: -7.184056282043457
    10. ' self' → logprob: -7.684056282043457

Token 233: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004997743526473641
    2. ' ,' → logprob: -8.375499725341797
    3. ',v' → logprob: -9.125499725341797
    4. 'v' → logprob: -10.625499725341797
    5. ',
' → logprob: -10.875499725341797
    6. ' if' → logprob: -10.875499725341797
    7. '       ' → logprob: -10.875499725341797
    8. 'def' → logprob: -11.750499725341797
    9. '   ' → logprob: -12.000499725341797
    10. ' and' → logprob: -12.125499725341797

Token 234: ' self' (ID: 1051)
  Prédit: 'Tre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Tre' → logprob: -1.3537076711654663
    2. 'self' → logprob: -1.6037076711654663
    3. '(self' → logprob: -1.6037076711654663
    4. '(T' → logprob: -1.9787076711654663
    5. '(c' → logprob: -2.353707790374756
    6. '(v' → logprob: -3.478707790374756
    7. '(' → logprob: -3.978707790374756
    8. '(n' → logprob: -4.228707790374756
    9. 'T' → logprob: -4.353707790374756
    10. 'c' → logprob: -4.478707790374756

Token 235: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00041220002458430827
    2. '[' → logprob: -8.500411987304688
    3. '.__' → logprob: -9.750411987304688
    4. '.' → logprob: -10.125411987304688
    5. '
' → logprob: -11.125411987304688
    6. '@' → logprob: -11.250411987304688
    7. '.@' → logprob: -11.250411987304688
    8. ')' → logprob: -12.125411987304688
    9. '   ' → logprob: -12.250411987304688

Token 236: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.023248042911291122
    2. '_count' → logprob: -3.7732479572296143
    3. '.count' → logprob: -14.523247718811035
    4. '
' → logprob: -15.398247718811035
    5. 'cnt' → logprob: -15.398247718811035
    6. '-count' → logprob: -15.648247718811035
    7. '_c' → logprob: -15.898247718811035
    8. 'c' → logprob: -15.898247718811035
    9. 'len' → logprob: -15.898247718811035
    10. ' count' → logprob: -15.898247718811035

Token 237: '(t' (ID: 2025)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.285847932100296
    2. '(c' → logprob: -1.9108479022979736
    3. '(t' → logprob: -2.4108479022979736
    4. '(' → logprob: -4.535848140716553
    5. '(
' → logprob: -9.035847663879395
    6. 't' → logprob: -10.410847663879395
    7. '((' → logprob: -10.910847663879395
    8. 'v' → logprob: -11.160847663879395
    9. '(n' → logprob: -12.035847663879395
    10. 'c' → logprob: -12.285847663879395

Token 238: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0818551555275917
    2. '),' → logprob: -2.706855058670044
    3. ')' → logprob: -5.206855297088623
    4. ' ,' → logprob: -5.456855297088623
    5. '[' → logprob: -6.581855297088623
    6. ',t' → logprob: -8.456854820251465
    7. ')+' → logprob: -9.081854820251465
    8. ',[' → logprob: -9.831854820251465
    9. ' ),' → logprob: -9.956854820251465
    10. ' ' → logprob: -10.081854820251465

Token 239: ' sum' (ID: 4215)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.028760073706507683
    2. ' v' → logprob: -3.6537599563598633
    3. '(v' → logprob: -7.278759956359863
    4. 'sum' → logprob: -7.403759956359863
    5. '0' → logprob: -8.278759956359863
    6. '   ' → logprob: -8.903759956359863
    7. ' sum' → logprob: -9.028759956359863
    8. ' (' → logprob: -9.153759956359863
    9. '(' → logprob: -9.778759956359863
    10. 't' → logprob: -9.778759956359863

Token 240: '_desc' (ID: 26683)
  Prédit: '_desc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_desc' → logprob: -0.12154828011989594
    2. '[' → logprob: -2.8715481758117676
    3. '(v' → logprob: -3.3715481758117676
    4. 'desc' → logprob: -4.746548175811768
    5. '[v' → logprob: -5.496548175811768
    6. '(' → logprob: -5.621548175811768
    7. 'Desc' → logprob: -5.621548175811768
    8. '_DESC' → logprob: -7.371548175811768
    9. 'v' → logprob: -7.871548175811768
    10. '-desc' → logprob: -8.371548652648926

Token 241: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3868938088417053
    2. '-' → logprob: -1.1368937492370605
    3. '[' → logprob: -11.761894226074219
    4. ' ' → logprob: -12.761894226074219
    5. '+' → logprob: -13.011894226074219
    6. '<|end|>' → logprob: -13.261894226074219
    7. ')' → logprob: -13.386894226074219
    8. 'if' → logprob: -13.886894226074219
    9. 't' → logprob: -14.386894226074219
    10. ' if' → logprob: -14.636894226074219

Token 242: ' (' (ID: 350)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3816729485988617
    2. 't' → logprob: -1.506672978401184
    3. 'c' → logprob: -3.1316728591918945
    4. '(v' → logprob: -4.2566728591918945
    5. ' v' → logprob: -4.5066728591918945
    6. '(t' → logprob: -4.6316728591918945
    7. ' t' → logprob: -5.3816728591918945
    8. '(c' → logprob: -5.5066728591918945
    9. '(' → logprob: -5.7566728591918945
    10. ' (' → logprob: -5.8816728591918945

Token 243: 'c' (ID: 66)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.35283809900283813
    2. 'c' → logprob: -1.7278380393981934
    3. 'v' → logprob: -2.2278380393981934
    4. '0' → logprob: -4.977838039398193
    5. ' t' → logprob: -6.102838039398193
    6. '(t' → logprob: -7.477838039398193
    7. '(c' → logprob: -7.602838039398193
    8. '(' → logprob: -7.852838039398193
    9. ' c' → logprob: -7.977838039398193
    10. '(v' → logprob: -8.227838516235352

Token 244: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001426186878234148
    2. '3' → logprob: -6.7514262199401855
    3. '2' → logprob: -10.001425743103027
    4. '```' → logprob: -10.376425743103027
    5. '   ' → logprob: -10.501425743103027
    6. ' [' → logprob: -10.626425743103027
    7. ')' → logprob: -10.876425743103027
    8. ')[' → logprob: -11.001425743103027
    9. '
' → logprob: -11.251425743103027
    10. '][' → logprob: -11.376425743103027

Token 245: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.023780876770615578
    2. '2' → logprob: -3.7737808227539062
    3. '[' → logprob: -7.898780822753906
    4. '   ' → logprob: -9.898780822753906
    5. '][' → logprob: -10.398780822753906
    6. '```' → logprob: -10.773780822753906
    7. ' ' → logprob: -11.273780822753906
    8. 'key' → logprob: -11.398780822753906
    9. '5' → logprob: -11.648780822753906
    10. ']' → logprob: -12.461280822753906

Token 246: ']' (ID: 60)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9651843309402466
    2. '[' → logprob: -1.0901843309402466
    3. '*' → logprob: -2.465184211730957
    4. ')' → logprob: -3.090184211730957
    5. ' *' → logprob: -3.090184211730957
    6. 'if' → logprob: -3.340184211730957
    7. '+' → logprob: -3.590184211730957
    8. ' +' → logprob: -3.715184211730957
    9. ']' → logprob: -5.590184211730957
    10. ' ' → logprob: -5.715184211730957

Token 247: ' if' (ID: 538)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.840529203414917
    2. ' if' → logprob: -1.090529203414917
    3. '+' → logprob: -2.340529203414917
    4. ' *' → logprob: -2.340529203414917
    5. '*' → logprob: -4.090529441833496
    6. 'if' → logprob: -4.715529441833496
    7. ' -' → logprob: -4.965529441833496
    8. ')' → logprob: -5.465529441833496
    9. ' ' → logprob: -6.715529441833496
    10. '-' → logprob: -7.465529441833496

Token 248: ' c' (ID: 274)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.009735194966197014
    2. ' t' → logprob: -5.134735107421875
    3. 'c' → logprob: -5.759735107421875
    4. 'direction' → logprob: -8.384735107421875
    5. '   ' → logprob: -8.759735107421875
    6. 'v' → logprob: -9.509735107421875
    7. 'not' → logprob: -10.634735107421875
    8. ' c' → logprob: -10.759735107421875
    9. 'None' → logprob: -10.884735107421875
    10. '
' → logprob: -10.884735107421875

Token 249: '[' (ID: 58)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.1790473759174347
    2. '[' → logprob: -1.9290473461151123
    3. ' else' → logprob: -4.929047584533691
    4. 'is' → logprob: -5.304047584533691
    5. 'else' → logprob: -5.304047584533691
    6. '!=' → logprob: -6.929047584533691
    7. '==' → logprob: -8.554047584533691
    8. ' !=' → logprob: -8.679047584533691
    9. ' ' → logprob: -11.179047584533691
    10. ' ==' → logprob: -11.179047584533691

Token 250: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.28179439902305603
    2. ' is' → logprob: -1.7817944288253784
    3. '[' → logprob: -4.156794548034668
    4. '3' → logprob: -4.156794548034668
    5. 'is' → logprob: -4.281794548034668
    6. '1' → logprob: -4.281794548034668
    7. '0' → logprob: -4.656794548034668
    8. 'None' → logprob: -5.906794548034668
    9. '4' → logprob: -6.906794548034668
    10. 'else' → logprob: -7.031794548034668

Token 251: ']' (ID: 60)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.09995007514953613
    2. ' else' → logprob: -2.974950075149536
    3. 'else' → logprob: -3.349950075149536
    4. 'is' → logprob: -4.849949836730957
    5. '!=' → logprob: -7.974949836730957
    6. '==' → logprob: -8.599949836730957
    7. '[' → logprob: -8.724949836730957
    8. ' ' → logprob: -9.099949836730957
    9. ')' → logprob: -9.599949836730957
    10. ' !=' → logprob: -9.724949836730957

Token 252: ' else' (ID: 1203)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.29652997851371765
    2. '==' → logprob: -1.92153000831604
    3. ' ==' → logprob: -3.42153000831604
    4. 'else' → logprob: -3.42153000831604
    5. ' else' → logprob: -4.046529769897461
    6. '!=' → logprob: -4.171529769897461
    7. ' !=' → logprob: -5.546529769897461
    8. 'is' → logprob: -5.671529769897461
    9. '[' → logprob: -6.046529769897461
    10. '>' → logprob: -7.296529769897461

Token 253: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20357206463813782
    2. ' ' → logprob: -2.2035720348358154
    3. 't' → logprob: -3.2035720348358154
    4. ' t' → logprob: -3.8285720348358154
    5. 'v' → logprob: -5.7035722732543945
    6. 'None' → logprob: -6.2035722732543945
    7. ' v' → logprob: -6.3285722732543945
    8. 'c' → logprob: -6.7035722732543945
    9. '1' → logprob: -6.7035722732543945
    10. ' c' → logprob: -7.0785722732543945

Token 254: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.24963273108005524
    2. 't' → logprob: -1.874632716178894
    3. 'None' → logprob: -3.1246328353881836
    4. ' ' → logprob: -4.499632835388184
    5. ' t' → logprob: -5.374632835388184
    6. 'c' → logprob: -5.499632835388184
    7. ' None' → logprob: -6.624632835388184
    8. 'v' → logprob: -6.624632835388184
    9. '   ' → logprob: -7.624632835388184
    10. '1' → logprob: -8.874632835388184

Token 255: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021856745705008507
    2. ' )' → logprob: -4.146856784820557
    3. '+' → logprob: -6.521856784820557
    4. '<|end|>' → logprob: -6.521856784820557
    5. ' +' → logprob: -6.646856784820557
    6. ',' → logprob: -7.521856784820557
    7. '),' → logprob: -8.021856307983398
    8. ' -' → logprob: -8.646856307983398
    9. ' ' → logprob: -9.021856307983398
    10. ')+' → logprob: -9.521856307983398

Token 256: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 257: ' (' (ID: 350)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.9520634412765503
    2. '(' → logprob: -1.4520634412765503
    3. '0' → logprob: -1.5770634412765503
    4. '(v' → logprob: -2.45206356048584
    5. '(c' → logprob: -3.32706356048584
    6. 'v' → logprob: -4.20206356048584
    7. ' (' → logprob: -4.32706356048584
    8. 't' → logprob: -4.45206356048584
    9. '(self' → logprob: -5.32706356048584
    10. ' ' → logprob: -6.57706356048584

Token 258: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.02392718754708767
    2. '0' → logprob: -4.273927211761475
    3. '(t' → logprob: -5.148927211761475
    4. 'self' → logprob: -6.273927211761475
    5. ' t' → logprob: -6.898927211761475
    6. 'v' → logprob: -7.773927211761475
    7. 'c' → logprob: -9.023926734924316
    8. '(' → logprob: -9.023926734924316
    9. '(v' → logprob: -9.273926734924316
    10. 'sum' → logprob: -9.523926734924316

Token 259: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.735893965815194e-05
    2. 'and' → logprob: -11.750017166137695
    3. ' and' → logprob: -12.125017166137695
    4. '
' → logprob: -13.500017166137695
    5. '[-' → logprob: -14.125017166137695
    6. '[
' → logprob: -14.625017166137695
    7. ' [' → logprob: -15.000017166137695
    8. '```' → logprob: -15.000017166137695
    9. '   ' → logprob: -15.375017166137695
    10. '.' → logprob: -16.750017166137695

Token 260: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.005200793966650963
    2. '3' → logprob: -5.5052008628845215
    3. '[' → logprob: -7.1302008628845215
    4. ' ' → logprob: -8.130200386047363
    5. '6' → logprob: -11.880200386047363
    6. '4' → logprob: -12.130200386047363
    7. '(' → logprob: -12.505200386047363
    8. '   ' → logprob: -12.630200386047363
    9. '
' → logprob: -12.880200386047363
    10. '1' → logprob: -13.255200386047363

Token 261: ']' (ID: 60)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1953691840171814
    2. ']' → logprob: -2.070369243621826
    3. 'if' → logprob: -3.195369243621826
    4. '[' → logprob: -5.570369243621826
    5. '])' → logprob: -5.570369243621826
    6. ')' → logprob: -6.570369243621826
    7. '5' → logprob: -6.820369243621826
    8. '6' → logprob: -8.820368766784668
    9. ')]' → logprob: -10.570368766784668
    10. ' ' → logprob: -11.195368766784668

Token 262: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3134264051914215
    2. 'if' → logprob: -1.3134263753890991
    3. '+' → logprob: -9.31342601776123
    4. '<|end|>' → logprob: -9.68842601776123
    5. '<|end|>' → logprob: -12.81342601776123
    6. '	if' → logprob: -12.81342601776123
    7. ' ' → logprob: -13.18842601776123
    8. ')' → logprob: -13.68842601776123
    9. '[' → logprob: -13.93842601776123
    10. 'If' → logprob: -14.18842601776123

Token 263: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0052377874962985516
    2. ' t' → logprob: -5.255237579345703
    3. '(t' → logprob: -13.380237579345703
    4. ' ' → logprob: -14.255237579345703
    5. '   ' → logprob: -14.505237579345703
    6. '	t' → logprob: -14.630237579345703
    7. '  ' → logprob: -15.130237579345703
    8. '
' → logprob: -16.130237579345703
    9. ' ' → logprob: -16.255237579345703
    10. '`t' → logprob: -16.380237579345703

Token 264: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.7453859448432922
    2. 'else' → logprob: -0.9953859448432922
    3. ' is' → logprob: -1.8703858852386475
    4. 'is' → logprob: -6.370386123657227
    5. ' ' → logprob: -10.745386123657227
    6. '[' → logprob: -10.995386123657227
    7. '    ' → logprob: -11.370386123657227
    8. '   ' → logprob: -11.495386123657227
    9. '5' → logprob: -11.995386123657227
    10. '<|end|>' → logprob: -12.120386123657227

Token 265: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4613087475299835
    2. ' t' → logprob: -1.3363087177276611
    3. 't' → logprob: -2.586308717727661
    4. ' ' → logprob: -3.461308717727661
    5. '(t' → logprob: -10.461308479309082
    6. '	t' → logprob: -12.961308479309082
    7. '[t' → logprob: -13.086308479309082
    8. ' (' → logprob: -13.336308479309082
    9. '`t' → logprob: -13.461308479309082
    10. ')t' → logprob: -13.961308479309082

Token 266: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -17.000028610229492
    4. 'None' → logprob: -17.000028610229492
    5. 't' → logprob: -17.750028610229492
    6. '  ' → logprob: -17.875028610229492
    7. '5' → logprob: -18.750028610229492
    8. '۰' → logprob: -18.875028610229492
    9. '(' → logprob: -19.250028610229492
    10. '    ' → logprob: -19.375028610229492

Token 267: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005639957962557673
    2. ')
' → logprob: -7.625564098358154
    3. ' )' → logprob: -10.125563621520996
    4. '<|end|>' → logprob: -11.625563621520996
    5. ')

' → logprob: -11.875563621520996
    6. '       ' → logprob: -12.000563621520996
    7. '),' → logprob: -12.125563621520996
    8. ')
' → logprob: -13.000563621520996
    9. ')return' → logprob: -13.625563621520996
    10. '   ' → logprob: -14.125563621520996

Token 268: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 269: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8185181021690369
    2. ')' → logprob: -1.1935181617736816
    3. '<|end|>' → logprob: -1.9435181617736816
    4. ' ' → logprob: -3.5685181617736816
    5. '[' → logprob: -4.068518161773682
    6. 'v' → logprob: -4.068518161773682
    7. '   ' → logprob: -4.818518161773682
    8. '6' → logprob: -4.943518161773682
    9. '0' → logprob: -5.318518161773682
    10. '	' → logprob: -5.568518161773682

Token 270: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.018154270946979523
    2. ' c' → logprob: -4.018154144287109
    3. '	c' → logprob: -13.51815414428711
    4. 'self' → logprob: -13.89315414428711
    5. ')c' → logprob: -14.76815414428711
    6. '(c' → logprob: -15.01815414428711
    7. 'None' → logprob: -15.14315414428711
    8. ' ' → logprob: -15.14315414428711
    9. '[c' → logprob: -15.89315414428711
    10. '[' → logprob: -15.89315414428711

Token 271: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 272: ' new' (ID: 620)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 273: ' parent' (ID: 5980)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.04093419760465622
    2. ' root' → logprob: -3.2909340858459473
    3. 'v' → logprob: -5.915934085845947
    4. '_root' → logprob: -9.915934562683105
    5. 'top' → logprob: -10.665934562683105
    6. ' v' → logprob: -10.665934562683105
    7. 'parent' → logprob: -10.915934562683105
    8. 'sub' → logprob: -11.040934562683105
    9. ' subtree' → logprob: -11.040934562683105
    10. 'vertex' → logprob: -11.165934562683105

Token 274: '
    
' (ID: 15698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 275: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18056635558605194
    2. '<|end|>' → logprob: -2.1805663108825684
    3. '       ' → logprob: -4.680566310882568
    4. ' ' → logprob: -4.680566310882568
    5. '    
' → logprob: -4.805566310882568
    6. '[' → logprob: -4.805566310882568
    7. '_' → logprob: -5.055566310882568
    8. '    ' → logprob: -6.055566310882568
    9. ')' → logprob: -6.305566310882568
    10. '  ' → logprob: -6.680566310882568

Token 276: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08751357346773148
    2. '    
' → logprob: -3.8375136852264404
    3. '[' → logprob: -4.337513446807861
    4. ' ' → logprob: -4.837513446807861
    5. ' 
' → logprob: -4.962513446807861
    6. '<|end|>' → logprob: -4.962513446807861
    7. '_' → logprob: -5.087513446807861
    8. 'def' (adapté à ' def') → logprob: -5.087513446807861
    9. '  
' → logprob: -5.837513446807861
    10. '   
' → logprob: -6.337513446807861

Token 277: ' __' (ID: 2516)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.19138112664222717
    2. '_' → logprob: -1.9413810968399048
    3. ' split' → logprob: -4.191380977630615
    4. ' insert' → logprob: -4.566380977630615
    5. '_insert' → logprob: -6.316380977630615
    6. 'split' → logprob: -6.816380977630615
    7. '_split' → logprob: -6.816380977630615
    8. ' merge' → logprob: -7.816380977630615
    9. 'insert' → logprob: -8.316381454467773
    10. ' ' → logprob: -8.441381454467773

Token 278: 'contains' (ID: 21841)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.252545565366745
    2. 'contains' → logprob: -2.8775455951690674
    3. 'iter' → logprob: -3.1275455951690674
    4. 'getitem' → logprob: -3.3775455951690674
    5. 'next' → logprob: -3.5025455951690674
    6. 'init' → logprob: -4.127545356750488
    7. '_' → logprob: -4.252545356750488
    8. 'repr' → logprob: -4.502545356750488
    9. 'get' → logprob: -5.002545356750488
    10. 'call' → logprob: -5.502545356750488

Token 279: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.024081990122795105
    2. ' (' → logprob: -3.7740819454193115
    3. '(self' → logprob: -7.649082183837891
    4. '(
' → logprob: -9.14908218383789
    5. '(space' → logprob: -9.27408218383789
    6. '__(' → logprob: -10.27408218383789
    7. '<|end|>' → logprob: -10.89908218383789
    8. ' ' → logprob: -11.27408218383789
    9. '[' → logprob: -11.64908218383789
    10. '(s' → logprob: -11.64908218383789

Token 280: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02474265918135643
    2. ' self' → logprob: -3.774742603302002
    3. ',' → logprob: -7.149742603302002
    4. '(self' → logprob: -7.399742603302002
    5. ')' → logprob: -10.14974308013916
    6. '   ' → logprob: -11.39974308013916
    7. ',self' → logprob: -11.52474308013916
    8. 'v' → logprob: -11.64974308013916
    9. '	self' → logprob: -12.39974308013916
    10. 'key' → logprob: -12.39974308013916

Token 281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13878227770328522
    2. ' (' → logprob: -2.513782262802124
    3. '(self' → logprob: -3.638782262802124
    4. '(' → logprob: -4.263782501220703
    5. ' ,' → logprob: -5.263782501220703
    6. ',
' → logprob: -6.888782501220703
    7. ')' → logprob: -7.513782501220703
    8. '(v' → logprob: -8.013782501220703
    9. 'self' → logprob: -8.138782501220703
    10. ',(' → logprob: -8.888782501220703

Token 282: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.6408103108406067
    2. ' key' → logprob: -0.7658103108406067
    3. 'x' → logprob: -6.015810489654541
    4. ' v' → logprob: -6.390810489654541
    5. 'v' → logprob: -6.515810489654541
    6. 'k' → logprob: -6.890810489654541
    7. ' x' → logprob: -7.640810489654541
    8. ')' → logprob: -7.890810489654541
    9. 'item' → logprob: -8.265810012817383
    10. ' k' → logprob: -9.140810012817383

Token 283: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00665841531008482
    2. '):
' → logprob: -5.131658554077148
    3. ' ):' → logprob: -7.506658554077148
    4. ')' → logprob: -8.756658554077148
    5. ':' → logprob: -11.881658554077148
    6. ' ):
' → logprob: -12.131658554077148
    7. '):
' → logprob: -12.256658554077148
    8. '):

' → logprob: -13.006658554077148
    9. ',' → logprob: -13.506658554077148
    10. ' )' → logprob: -14.131658554077148

Token 284: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5831371545791626
    2. ' 
' → logprob: -1.7081371545791626
    3. '<|end|>' → logprob: -1.7081371545791626
    4. '  
' → logprob: -3.958137035369873
    5. '   ' → logprob: -4.583137035369873
    6. '    ' → logprob: -4.833137035369873
    7. '       ' → logprob: -4.833137035369873
    8. ':' → logprob: -5.333137035369873
    9. '<|end|>' → logprob: -5.708137035369873
    10. '  ' → logprob: -5.833137035369873

Token 285: ' check' (ID: 2371)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.035637691617012024
    2. 'def' → logprob: -3.410637617111206
    3. '   ' → logprob: -6.535637855529785
    4. ' ' → logprob: -8.410637855529785
    5. ' None' → logprob: -9.035637855529785
    6. ' return' → logprob: -9.910637855529785
    7. '
' → logprob: -10.410637855529785
    8. ' _' → logprob: -10.910637855529785
    9. '    ' → logprob: -10.910637855529785
    10. ' self' → logprob: -11.160637855529785

Token 286: ' whether' (ID: 5588)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1517961472272873
    2. ' key' → logprob: -2.4017961025238037
    3. 'if' → logprob: -3.9017961025238037
    4. '<|end|>' → logprob: -4.401796340942383
    5. ' return' → logprob: -5.901796340942383
    6. 'key' → logprob: -6.026796340942383
    7. 'def' → logprob: -6.151796340942383
    8. ' presence' → logprob: -6.651796340942383
    9. ' not' → logprob: -6.776796340942383
    10. ' for' → logprob: -6.901796340942383

Token 287: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3712722361087799
    2. ' self' → logprob: -1.4962722063064575
    3. 'key' → logprob: -2.746272325515747
    4. ' key' → logprob: -3.871272325515747
    5. ' not' → logprob: -7.871272087097168
    6. ' v' → logprob: -8.496272087097168
    7. 'True' → logprob: -8.746272087097168
    8. 'v' → logprob: -9.246272087097168
    9. ' True' → logprob: -9.746272087097168
    10. 'not' → logprob: -9.996272087097168

Token 288: ' given' (ID: 4335)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.18695375323295593
    2. 'key' → logprob: -2.0619537830352783
    3. ' root' → logprob: -3.4369537830352783
    4. 'root' → logprob: -5.436953544616699
    5. 'v' → logprob: -5.811953544616699
    6. 'def' → logprob: -6.811953544616699
    7. '_key' → logprob: -6.811953544616699
    8. ' v' → logprob: -7.811953544616699
    9. '[' → logprob: -8.3119535446167
    10. '
' → logprob: -8.9369535446167

Token 289: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.02330021746456623
    2. 'key' → logprob: -3.7733001708984375
    3. '_key' → logprob: -11.023300170898438
    4. '
' → logprob: -11.273300170898438
    5. ' ' → logprob: -12.148300170898438
    6. '	key' → logprob: -12.523300170898438
    7. '(key' → logprob: -12.648300170898438
    8. ' 
' → logprob: -12.773300170898438
    9. ' v' → logprob: -13.023300170898438
    10. 'v' → logprob: -13.398300170898438

Token 290: ' is' (ID: 382)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05353774130344391
    2. 'in' → logprob: -3.1785378456115723
    3. ' is' → logprob: -4.678537845611572
    4. '<|end|>' → logprob: -7.053537845611572
    5. '<|end|>' → logprob: -9.053537368774414
    6. ' ' → logprob: -9.803537368774414
    7. ':' → logprob: -10.553537368774414
    8. '[' → logprob: -10.553537368774414
    9. ')' → logprob: -10.678537368774414
    10. ',' → logprob: -11.178537368774414

Token 291: ' in' (ID: 306)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.8880612850189209
    2. 'in' → logprob: -1.388061285018921
    3. ' in' → logprob: -1.388061285018921
    4. ' None' → logprob: -3.263061285018921
    5. ' present' → logprob: -3.638061285018921
    6. 'v' → logprob: -4.7630615234375
    7. ' not' → logprob: -5.3880615234375
    8. 'present' → logprob: -5.6380615234375
    9. 'None' → logprob: -6.1380615234375
    10. 'not' → logprob: -6.2630615234375

Token 292: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06208229809999466
    2. ' self' → logprob: -2.812082290649414
    3. ' the' → logprob: -10.062082290649414
    4. 'v' → logprob: -11.062082290649414
    5. ')' → logprob: -11.687082290649414
    6. 'the' → logprob: -11.812082290649414
    7. ' v' → logprob: -11.812082290649414
    8. ' ' → logprob: -11.937082290649414
    9. '(self' → logprob: -11.937082290649414
    10. 'None' → logprob: -12.812082290649414

Token 293: ' tre' (ID: 4360)
  Prédit: 'tre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tre' → logprob: -0.0732838436961174
    2. 'root' → logprob: -3.0732839107513428
    3. 'tree' → logprob: -4.323283672332764
    4. 'Tre' → logprob: -5.573283672332764
    5. 'self' → logprob: -6.198283672332764
    6. ' tre' → logprob: -6.323283672332764
    7. '
' → logprob: -6.448283672332764
    8. '_t' → logprob: -7.448283672332764
    9. ' root' → logprob: -7.823283672332764
    10. ' tree' → logprob: -7.948283672332764

Token 294: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -1.8074162653647363e-05
    2. '   ' → logprob: -11.625018119812012
    3. '[' → logprob: -12.750018119812012
    4. ' or' → logprob: -13.750018119812012
    5. 'aps' → logprob: -14.500018119812012
    6. ' ' → logprob: -14.500018119812012
    7. 'ап' → logprob: -14.500018119812012
    8. 'root' → logprob: -14.625018119812012
    9. 'e' → logprob: -14.750018119812012
    10. '[]' → logprob: -14.875018119812012

Token 295: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18153339624404907
    2. '       ' → logprob: -2.5565333366394043
    3. '(self' → logprob: -2.6815333366394043
    4. ':' → logprob: -4.931533336639404
    5. ',' → logprob: -5.681533336639404
    6. 'def' → logprob: -6.056533336639404
    7. '
' → logprob: -6.306533336639404
    8. 'self' → logprob: -7.306533336639404
    9. '(' → logprob: -7.306533336639404
    10. ':
' → logprob: -7.431533336639404

Token 296: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024314245209097862
    2. '       ' → logprob: -5.0243144035339355
    3. ':' → logprob: -5.7743144035339355
    4. '    
' → logprob: -5.8993144035339355
    5. '(self' → logprob: -6.1493144035339355
    6. '(' → logprob: -6.6493144035339355
    7. '[' → logprob: -6.7743144035339355
    8. 'def' → logprob: -6.7743144035339355
    9. ':
' → logprob: -7.0243144035339355
    10. '
' → logprob: -7.1493144035339355

Token 297: ' if' (ID: 538)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.12506693601608276
    2. 'v' → logprob: -2.5000669956207275
    3. ' def' → logprob: -4.500066757202148
    4. '   ' → logprob: -4.625066757202148
    5. 'def' → logprob: -5.125066757202148
    6. '       ' → logprob: -5.250066757202148
    7. '
' → logprob: -6.000066757202148
    8. ' node' → logprob: -7.625066757202148
    9. ' current' → logprob: -8.375066757202148
    10. 'node' → logprob: -10.125066757202148

Token 298: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009255417622625828
    2. ' self' → logprob: -5.134255409240723
    3. 'not' → logprob: -5.884255409240723
    4. ' not' → logprob: -7.759255409240723
    5. 'key' → logprob: -9.759255409240723
    6. '   ' → logprob: -10.259255409240723
    7. ' ' → logprob: -12.384255409240723
    8. '       ' → logprob: -12.634255409240723
    9. '	self' → logprob: -12.759255409240723
    10. '  ' → logprob: -12.759255409240723

Token 299: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.0020704446360468864
    2. '.' → logprob: -6.502070426940918
    3. 'root' → logprob: -8.127070426940918
    4. ' .' → logprob: -8.752070426940918
    5. '.
' → logprob: -10.502070426940918
    6. '   ' → logprob: -11.002070426940918
    7. '[root' → logprob: -11.002070426940918
    8. ' is' → logprob: -11.877070426940918
    9. ' root' → logprob: -11.877070426940918
    10. '
' → logprob: -12.002070426940918

Token 300: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0001266613689949736
    2. 'is' → logprob: -9.000126838684082
    3. ':' → logprob: -13.625126838684082
    4. '	is' → logprob: -14.000126838684082
    5. ' ' → logprob: -15.125126838684082
    6. '[' → logprob: -15.250126838684082
    7. '   ' → logprob: -15.375126838684082
    8. '==' → logprob: -16.125125885009766
    9. ' ==' → logprob: -16.250125885009766
    10. ':
' → logprob: -16.375125885009766

Token 301: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0031794982496649027
    2. ' None' → logprob: -5.753179550170898
    3. 'not' → logprob: -13.503179550170898
    4. '   ' → logprob: -15.378179550170898
    5. ' not' → logprob: -16.1281795501709
    6. '(None' → logprob: -17.8781795501709
    7. 'none' → logprob: -18.0031795501709
    8. '0' → logprob: -18.2531795501709
    9. '_None' → logprob: -18.3781795501709
    10. ' ' → logprob: -18.5031795501709

Token 302: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06332609802484512
    2. ':
' → logprob: -3.063326120376587
    3. ' or' → logprob: -4.688325881958008
    4. ':return' → logprob: -5.313325881958008
    5. '           ' → logprob: -8.438325881958008
    6. '       ' → logprob: -8.688325881958008
    7. ' :' → logprob: -9.688325881958008
    8. ',' → logprob: -11.563325881958008
    9. ' :
' → logprob: -11.938325881958008
    10. '   ' → logprob: -11.938325881958008

Token 303: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.672927737236023
    2. '           ' → logprob: -0.797927737236023
    3. 'return' → logprob: -3.4229278564453125
    4. '
' → logprob: -6.2979278564453125
    5. ' ' → logprob: -6.5479278564453125
    6. ':return' → logprob: -7.2979278564453125
    7. '	return' → logprob: -7.6729278564453125
    8. ' 
' → logprob: -7.7979278564453125
    9. '		' → logprob: -8.172927856445312
    10. ':' → logprob: -8.172927856445312

Token 304: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0015024791937321424
    2. ' False' → logprob: -6.501502513885498
    3. 'F' → logprob: -16.751502990722656
    4. '(False' → logprob: -17.001502990722656
    5. '0' → logprob: -17.251502990722656
    6. '   ' → logprob: -17.626502990722656
    7. 'True' → logprob: -18.001502990722656
    8. 'None' → logprob: -18.251502990722656
    9. '
' → logprob: -18.626502990722656
    10. '  ' → logprob: -19.751502990722656

Token 305: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6711304187774658
    2. '       ' → logprob: -0.7961304187774658
    3. 'v' → logprob: -3.421130418777466
    4. '
' → logprob: -6.546130180358887
    5. '   ' → logprob: -6.921130180358887
    6. '        
' → logprob: -7.171130180358887
    7. ' v' → logprob: -7.671130180358887
    8. '    
' → logprob: -7.671130180358887
    9. 'current' → logprob: -8.796130180358887
    10. '  
' → logprob: -9.171130180358887

Token 306: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5460929870605469
    2. 'v' → logprob: -1.6710929870605469
    3. ' v' → logprob: -1.7960929870605469
    4. '       ' → logprob: -2.796092987060547
    5. '   ' → logprob: -6.046092987060547
    6. '    
' → logprob: -6.421092987060547
    7. '        
' → logprob: -6.921092987060547
    8. '
' → logprob: -8.421092987060547
    9. 'node' → logprob: -9.171092987060547
    10. ' current' → logprob: -9.421092987060547

Token 307: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.008979592472314835
    2. ' v' → logprob: -5.008979797363281
    3. '   ' → logprob: -7.008979797363281
    4. 'cur' → logprob: -7.258979797363281
    5. '       ' → logprob: -7.883979797363281
    6. 'node' → logprob: -9.008979797363281
    7. 'curr' → logprob: -9.383979797363281
    8. '
' → logprob: -10.758979797363281
    9. 'c' → logprob: -11.133979797363281
    10. 'current' → logprob: -11.633979797363281

Token 308: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47414764761924744
    2. ' =' → logprob: -0.9741476774215698
    3. '=v' → logprob: -9.84914779663086
    4. '=
' → logprob: -12.22414779663086
    5. ',' → logprob: -12.47414779663086
    6. '   ' → logprob: -12.59914779663086
    7. ' ' → logprob: -12.97414779663086
    8. ' =
' → logprob: -14.47414779663086
    9. '[' → logprob: -14.72414779663086
    10. '  ' → logprob: -14.84914779663086

Token 309: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10021249949932098
    2. ' self' → logprob: -2.350212574005127
    3. '   ' → logprob: -12.225212097167969
    4. ' ' → logprob: -15.100212097167969
    5. '	self' → logprob: -15.725212097167969
    6. '       ' → logprob: -15.975212097167969
    7. '    ' → logprob: -16.22521209716797
    8. '  ' → logprob: -16.72521209716797
    9. 'v' → logprob: -17.10021209716797
    10. '(self' → logprob: -17.10021209716797

Token 310: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.0007337473216466606
    2. 'root' → logprob: -7.750733852386475
    3. '.' → logprob: -8.250733375549316
    4. '[' → logprob: -10.375733375549316
    5. '=root' → logprob: -12.625733375549316
    6. ' .' → logprob: -13.000733375549316
    7. '[root' → logprob: -13.375733375549316
    8. ' root' → logprob: -13.750733375549316
    9. '_root' → logprob: -14.250733375549316
    10. '	root' → logprob: -14.875733375549316

Token 311: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0849311351776123
    2. 'while' → logprob: -2.5849311351776123
    3. ' while' → logprob: -5.834931373596191
    4. '       ' → logprob: -6.709931373596191
    5. '<|end|>' → logprob: -7.209931373596191
    6. '[' → logprob: -8.084931373596191
    7. '
' → logprob: -8.459931373596191
    8. '	while' → logprob: -8.584931373596191
    9. '        
' → logprob: -8.959931373596191
    10. '   ' → logprob: -10.084931373596191

Token 312: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.395496666431427
    2. '
' → logprob: -1.7704966068267822
    3. ' while' → logprob: -3.0204966068267822
    4. '	while' → logprob: -3.6454966068267822
    5. '<|end|>' → logprob: -4.020496845245361
    6. '   ' → logprob: -4.020496845245361
    7. '        
' → logprob: -4.270496845245361
    8. ' 
' → logprob: -4.270496845245361
    9. '    
' → logprob: -5.145496845245361
    10. '  
' → logprob: -5.270496845245361

Token 313: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0001552665780764073
    2. '       ' → logprob: -9.250155448913574
    3. ' while' → logprob: -9.750155448913574
    4. '	while' → logprob: -14.500155448913574
    5. '   ' → logprob: -15.750155448913574
    6. '
' → logprob: -16.250154495239258
    7. 'if' → logprob: -17.125154495239258
    8. 'dir' → logprob: -17.250154495239258
    9. 'direction' → logprob: -17.250154495239258
    10. 'While' → logprob: -18.125154495239258

Token 314: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0035644276067614555
    2. 'True' → logprob: -5.753564357757568
    3. ' v' → logprob: -8.378564834594727
    4. ' True' → logprob: -8.878564834594727
    5. 'key' → logprob: -11.378564834594727
    6. ' ' → logprob: -13.003564834594727
    7. '   ' → logprob: -13.253564834594727
    8. '	v' → logprob: -13.878564834594727
    9. '  ' → logprob: -14.378564834594727
    10. '(True' → logprob: -14.878564834594727

Token 315: ':
' (ID: 734)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.15550316870212555
    2. ' and' → logprob: -2.655503273010254
    3. 'and' → logprob: -3.030503273010254
    4. 'is' → logprob: -4.405503273010254
    5. ':
' → logprob: -5.280503273010254
    6. ':' → logprob: -5.405503273010254
    7. '[' → logprob: -5.655503273010254
    8. '   ' → logprob: -9.780503273010254
    9. ' ' → logprob: -9.780503273010254
    10. '!=' → logprob: -10.405503273010254

Token 316: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009112146683037281
    2. ' if' → logprob: -5.509112358093262
    3. '           ' → logprob: -6.384112358093262
    4. ':' → logprob: -6.884112358093262
    5. '<|end|>' → logprob: -7.009112358093262
    6. ',' → logprob: -7.884112358093262
    7. '   ' → logprob: -8.509112358093262
    8. '	' → logprob: -8.634112358093262
    9. ':
' → logprob: -8.759112358093262
    10. '        
' → logprob: -9.634112358093262

Token 317: ' k' (ID: 372)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.035549912601709366
    2. '           ' → logprob: -3.5355498790740967
    3. ' if' → logprob: -5.160550117492676
    4. '       ' → logprob: -10.660550117492676
    5. '
' → logprob: -11.660550117492676
    6. 'v' → logprob: -12.910550117492676
    7. '	if' → logprob: -13.035550117492676
    8. '   ' → logprob: -13.285550117492676
    9. 'd' → logprob: -14.160550117492676
    10. 'If' → logprob: -14.160550117492676

Token 318: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9529687762260437
    2. '=' → logprob: -1.2029688358306885
    3. '[' → logprob: -1.3279688358306885
    4. ' ==' → logprob: -4.077968597412109
    5. ' !=' → logprob: -4.327968597412109
    6. '!=' → logprob: -4.452968597412109
    7. '==' → logprob: -5.327968597412109
    8. '   ' → logprob: -7.327968597412109
    9. ' ' → logprob: -8.07796859741211
    10. ' <' → logprob: -8.20296859741211

Token 319: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0005165747134014964
    2. ' v' → logprob: -7.625516414642334
    3. 'key' → logprob: -10.625516891479492
    4. 'k' → logprob: -12.500516891479492
    5. ' key' → logprob: -15.000516891479492
    6. '	v' → logprob: -16.250516891479492
    7. '   ' → logprob: -16.625516891479492
    8. '
' → logprob: -18.125516891479492
    9. ' ' → logprob: -18.750516891479492
    10. '    ' → logprob: -18.875516891479492

Token 320: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.4121114822482923e-06
    2. '   ' → logprob: -14.375003814697266
    3. '
' → logprob: -14.375003814697266
    4. '3' → logprob: -14.625003814697266
    5. '#' → logprob: -15.000003814697266
    6. '```' → logprob: -15.250003814697266
    7. '2' → logprob: -15.375003814697266
    8. '           ' → logprob: -15.375003814697266
    9. '       ' → logprob: -15.750003814697266
    10. ' [' → logprob: -15.875003814697266

Token 321: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.008129963040119e-06
    2. '   ' → logprob: -12.875003814697266
    3. ' ' → logprob: -14.375003814697266
    4. '
' → logprob: -14.875003814697266
    5. '```' → logprob: -15.875003814697266
    6. '  ' → logprob: -16.000003814697266
    7. '    ' → logprob: -16.500003814697266
    8. '۲' → logprob: -17.375003814697266
    9. '[' → logprob: -17.437503814697266
    10. '       ' → logprob: -18.062503814697266

Token 322: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -1.0344648361206055
    2. ']
' → logprob: -1.0344648361206055
    3. '           ' → logprob: -2.0344648361206055
    4. ']' → logprob: -2.6594648361206055
    5. ')' → logprob: -2.6594648361206055
    6. '
' → logprob: -4.1594648361206055
    7. '            ' → logprob: -7.7844648361206055
    8. '               ' → logprob: -8.284464836120605
    9. ' )
' → logprob: -8.284464836120605
    10. ',' → logprob: -8.534464836120605

Token 323: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007650403305888176
    2. '
' → logprob: -5.257650375366211
    3. ' if' → logprob: -6.382650375366211
    4. ' 
' → logprob: -7.507650375366211
    5. ',' → logprob: -10.757650375366211
    6. '<|end|>' → logprob: -10.757650375366211
    7. '            
' → logprob: -10.757650375366211
    8. '=' → logprob: -11.007650375366211
    9. ' ' → logprob: -11.507650375366211
    10. '  
' → logprob: -11.507650375366211

Token 324: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4398590922355652
    2. '           ' → logprob: -1.31485915184021
    3. 'if' (adapté à ' if') → logprob: -2.43985915184021
    4. '       ' → logprob: -10.064859390258789
    5. '
' → logprob: -10.314859390258789
    6. '	if' → logprob: -10.939859390258789
    7. '		' → logprob: -11.064859390258789
    8. '        ' → logprob: -11.564859390258789
    9. '   ' → logprob: -11.689859390258789
    10. ' ' → logprob: -11.814859390258789

Token 325: ' k' (ID: 372)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.06308817863464355
    2. 'k' → logprob: -2.9380881786346436
    3. ' key' → logprob: -4.813088417053223
    4. ' k' → logprob: -10.438088417053223
    5. 'v' → logprob: -11.438088417053223
    6. '	key' → logprob: -11.938088417053223
    7. ' ' → logprob: -14.313088417053223
    8. '   ' → logprob: -14.563088417053223
    9. '_key' → logprob: -14.813088417053223
    10. 'Key' → logprob: -14.813088417053223

Token 326: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2105833739042282
    2. '==' → logprob: -1.7105833292007446
    3. ' is' → logprob: -4.710583209991455
    4. ' <' → logprob: -10.085583686828613
    5. ' >' → logprob: -10.210583686828613
    6. '>' → logprob: -11.335583686828613
    7. '=' → logprob: -11.585583686828613
    8. '<' → logprob: -11.710583686828613
    9. ' ' → logprob: -12.210583686828613
    10. ' =' → logprob: -12.835583686828613

Token 327: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.3868713676929474
    2. ' key' → logprob: -1.136871337890625
    3. '	key' → logprob: -15.386871337890625
    4. '_key' → logprob: -17.011871337890625
    5. '(key' → logprob: -17.136871337890625
    6. ' ' → logprob: -17.886871337890625
    7. 'Key' → logprob: -18.011871337890625
    8. '$key' → logprob: -18.011871337890625
    9. '[key' → logprob: -18.386871337890625
    10. '
' → logprob: -18.511871337890625

Token 328: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004593180492520332
    2. ':
' → logprob: -5.504593372344971
    3. ':return' → logprob: -7.629593372344971
    4. ' :' → logprob: -11.504592895507812
    5. ' or' → logprob: -11.629592895507812
    6. '           ' → logprob: -12.379592895507812
    7. '               ' → logprob: -13.504592895507812
    8. '):' → logprob: -13.629592895507812
    9. ':
' → logprob: -13.754592895507812
    10. ' :
' → logprob: -14.879592895507812

Token 329: ' return' (ID: 622)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.578245222568512
    2. ' return' → logprob: -0.828245222568512
    3. ' ' → logprob: -6.953245162963867
    4. '                ' → logprob: -7.703245162963867
    5. ' 
' → logprob: -8.078245162963867
    6. 'return' → logprob: -8.078245162963867
    7. '            ' → logprob: -9.453245162963867
    8. '                
' → logprob: -9.703245162963867
    9. ' True' → logprob: -10.328245162963867
    10. '           ' → logprob: -10.578245162963867

Token 330: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00861468818038702
    2. ' True' → logprob: -4.758614540100098
    3. 'v' → logprob: -16.383615493774414
    4. '(True' → logprob: -17.133615493774414
    5. '1' → logprob: -17.508615493774414
    6. '   ' → logprob: -17.758615493774414
    7. '=True' → logprob: -18.758615493774414
    8. ' v' → logprob: -19.133615493774414
    9. 'False' → logprob: -19.383615493774414
    10. '
' → logprob: -20.008615493774414

Token 331: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004802007228136063
    2. '            
' → logprob: -6.254802227020264
    3. '
' → logprob: -7.379802227020264
    4. '       ' → logprob: -7.504802227020264
    5. ' 
' → logprob: -7.754802227020264
    6. ' elif' → logprob: -7.754802227020264
    7. 'elif' → logprob: -7.879802227020264
    8. '\n' → logprob: -9.004801750183105
    9. '               ' → logprob: -9.879801750183105
    10. 'v' → logprob: -9.879801750183105

Token 332: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016282867873087525
    2. 'elif' → logprob: -6.751628398895264
    3. ' elif' → logprob: -8.001627922058105
    4. '<|end|>' → logprob: -10.251627922058105
    5. 'v' → logprob: -10.751627922058105
    6. '       ' → logprob: -11.251627922058105
    7. 'n' → logprob: -11.751627922058105
    8. 'e' → logprob: -12.126627922058105
    9. '            
' → logprob: -12.126627922058105
    10. 'b' → logprob: -12.626627922058105

Token 333: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.046115532517433167
    2. '           ' → logprob: -3.2961156368255615
    3. ' v' → logprob: -5.671115398406982
    4. 'elif' → logprob: -6.296115398406982
    5. 'if' → logprob: -6.421115398406982
    6. ' if' → logprob: -7.921115398406982
    7. 'd' → logprob: -8.17111587524414
    8. '       ' → logprob: -8.54611587524414
    9. '   ' → logprob: -9.04611587524414
    10. ' elif' → logprob: -9.29611587524414

Token 334: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760248899459839
    2. ' =' → logprob: -0.8260248899459839
    3. '[' → logprob: -9.451025009155273
    4. '=v' → logprob: -12.576025009155273
    5. ' ' → logprob: -13.326025009155273
    6. ',' → logprob: -14.076025009155273
    7. 'v' → logprob: -14.826025009155273
    8. '=
' → logprob: -16.576025009155273
    9. '=[' → logprob: -16.576025009155273
    10. 'if' → logprob: -16.826025009155273

Token 335: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.007609824184328318
    2. ' v' → logprob: -4.882609844207764
    3. '	v' → logprob: -12.882609367370605
    4. '   ' → logprob: -14.757609367370605
    5. '(v' → logprob: -15.757609367370605
    6. ' ' → logprob: -15.757609367370605
    7. '(' → logprob: -15.882609367370605
    8. '[' → logprob: -16.007610321044922
    9. ' (' → logprob: -16.632610321044922
    10. '  ' → logprob: -17.257610321044922

Token 336: '[key' (ID: 16401)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04764249175786972
    2. '[v' → logprob: -3.172642469406128
    3. 'v' → logprob: -5.422642707824707
    4. ' [' → logprob: -9.172642707824707
    5. ' v' → logprob: -9.422642707824707
    6. '[
' → logprob: -11.047642707824707
    7. '0' → logprob: -11.797642707824707
    8. '[k' → logprob: -13.172642707824707
    9. '[c' → logprob: -13.672642707824707
    10. '	v' → logprob: -13.797642707824707

Token 337: ' >' (ID: 1424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.27121788263320923
    2. ' <' → logprob: -2.1462178230285645
    3. '>' → logprob: -2.5212178230285645
    4. ' >' → logprob: -3.6462178230285645
    5. '<v' → logprob: -5.0212178230285645
    6. '[' → logprob: -5.3962178230285645
    7. ' ' → logprob: -7.6462178230285645
    8. '<int' → logprob: -8.396218299865723
    9. '<n' → logprob: -8.521218299865723
    10. '<data' → logprob: -8.646218299865723

Token 338: ' k' (ID: 372)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -9.269565634895116e-05
    2. ' ' → logprob: -9.375092506408691
    3. '[' → logprob: -13.000092506408691
    4. 'v' → logprob: -13.125092506408691
    5. 'k' → logprob: -13.250092506408691
    6. '   ' → logprob: -13.875092506408691
    7. '
' → logprob: -15.125092506408691
    8. '  ' → logprob: -15.750092506408691
    9. '```' → logprob: -16.000093460083008
    10. '(' → logprob: -16.625093460083008

Token 339: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04822324588894844
    2. '1' → logprob: -3.4232232570648193
    3. '2' → logprob: -5.42322301864624
    4. ' ' → logprob: -5.67322301864624
    5. '   ' → logprob: -6.29822301864624
    6. ']' → logprob: -6.42322301864624
    7. '0' → logprob: -6.79822301864624
    8. '    ' → logprob: -8.048223495483398
    9. ' and' → logprob: -8.548223495483398
    10. '.__' → logprob: -8.673223495483398

Token 340: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 341: ' key' (ID: 2140)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.025166938081383705
    2. '1' → logprob: -4.275166988372803
    3. ' v' → logprob: -4.525166988372803
    4. ' ' → logprob: -9.400166511535645
    5. '   ' → logprob: -11.900166511535645
    6. 'int' → logprob: -12.400166511535645
    7. '0' → logprob: -12.400166511535645
    8. '2' → logprob: -12.650166511535645
    9. '[' → logprob: -12.775166511535645
    10. '(' → logprob: -13.400166511535645

Token 342: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.37563082575798035
    2. '<|end|>' → logprob: -1.5006308555603027
    3. '>' → logprob: -3.2506308555603027
    4. ']' → logprob: -3.3756308555603027
    5. ']>' → logprob: -4.625630855560303
    6. ' <' → logprob: -6.375630855560303
    7. '<|end|>' → logprob: -6.750630855560303
    8. ' ' → logprob: -6.875630855560303
    9. ' ]' → logprob: -7.000630855560303
    10. ' if' → logprob: -8.125630378723145

Token 343: ' v' (ID: 323)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7871900796890259
    2. 'k' → logprob: -1.4121900796890259
    3. '0' → logprob: -1.5371900796890259
    4. '2' → logprob: -3.1621899604797363
    5. 'v' → logprob: -3.2871899604797363
    6. ' ' → logprob: -6.287189960479736
    7. 'int' → logprob: -6.412189960479736
    8. 'True' → logprob: -7.162189960479736
    9. ' k' → logprob: -7.162189960479736
    10. '(' → logprob: -7.662189960479736

Token 344: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04471113532781601
    2. '2' → logprob: -3.544711112976074
    3. ']' → logprob: -4.669711112976074
    4. '<|end|>' → logprob: -5.294711112976074
    5. ')' → logprob: -9.419711112976074
    6. ']>' → logprob: -9.919711112976074
    7. '.' → logprob: -10.044711112976074
    8. '][' → logprob: -10.294711112976074
    9. '1' → logprob: -10.419711112976074
    10. '<|end|>' → logprob: -10.544711112976074

Token 345: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.464347173576243e-05
    2. ' ' → logprob: -10.75003433227539
    3. '[' → logprob: -12.68753433227539
    4. '   ' → logprob: -12.75003433227539
    5. '```' → logprob: -13.31253433227539
    6. '
' → logprob: -13.81253433227539
    7. '(' → logprob: -14.00003433227539
    8. '  ' → logprob: -14.43753433227539
    9. ']' → logprob: -15.00003433227539
    10. 'key' → logprob: -15.12503433227539

Token 346: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012284054420888424
    2. '<|end|>' → logprob: -4.512284278869629
    3. ' ]' → logprob: -7.762284278869629
    4. '<|end|>' → logprob: -8.137284278869629
    5. '1' → logprob: -9.387284278869629
    6. ')' → logprob: -9.387284278869629
    7. '0' → logprob: -9.512284278869629
    8. ']
' → logprob: -10.012284278869629
    9. ' ' → logprob: -10.137284278869629
    10. ']>' → logprob: -10.137284278869629

Token 347: ' ->' (ID: 2747)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 348: ' v' (ID: 323)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006045401096343994
    2. ' ' → logprob: -5.131045341491699
    3. 'True' → logprob: -9.5060453414917
    4. ' True' → logprob: -10.1310453414917
    5. ' right' → logprob: -14.1310453414917
    6. 'int' → logprob: -14.3810453414917
    7. 'Right' → logprob: -14.7560453414917
    8. 'right' → logprob: -15.0060453414917
    9. 'v' → logprob: -15.3810453414917
    10. ' int' → logprob: -15.7560453414917

Token 349: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0012048733187839389
    2. '1' → logprob: -7.501204967498779
    3. '[
' → logprob: -8.626204490661621
    4. '[key' → logprob: -9.126204490661621
    5. '=' → logprob: -9.376204490661621
    6. 'v' → logprob: -10.626204490661621
    7. ']' → logprob: -10.626204490661621
    8. '(' → logprob: -10.626204490661621
    9. '[int' → logprob: -10.626204490661621
    10. 's' → logprob: -10.751204490661621

Token 350: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0019289902411401272
    2. ' v' → logprob: -6.251928806304932
    3. '   ' → logprob: -15.25192928314209
    4. '	v' → logprob: -16.126928329467773
    5. ' ' → logprob: -17.626928329467773
    6. '[' → logprob: -18.251928329467773
    7. '
' → logprob: -18.501928329467773
    8. '<|end|>' → logprob: -18.626928329467773
    9. '  ' → logprob: -19.251928329467773
    10. '       ' → logprob: -19.626928329467773

Token 351: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010391215328127146
    2. '1' → logprob: -6.876039028167725
    3. '   ' → logprob: -13.001039505004883
    4. '[
' → logprob: -13.626039505004883
    5. '```' → logprob: -13.751039505004883
    6. '
' → logprob: -14.751039505004883
    7. ' [' → logprob: -14.751039505004883
    8. '0' → logprob: -15.126039505004883
    9. ' ' → logprob: -15.501039505004883
    10. '2' → logprob: -16.501039505004883

Token 352: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.822646693966817e-06
    2. ' ' → logprob: -12.875007629394531
    3. '   ' → logprob: -13.500007629394531
    4. 'right' → logprob: -13.750007629394531
    5. '0' → logprob: -13.875007629394531
    6. '
' → logprob: -14.625007629394531
    7. '```' → logprob: -14.625007629394531
    8. ']' → logprob: -15.250007629394531
    9. '  ' → logprob: -16.25000762939453
    10. '[' → logprob: -16.25000762939453

Token 353: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002475062618032098
    2. '<|end|>' → logprob: -6.502475261688232
    3. 'else' → logprob: -7.252475261688232
    4. ' else' → logprob: -8.502474784851074
    5. ' ]' → logprob: -10.502474784851074
    6. '<|end|>' → logprob: -11.752474784851074
    7. ']
' → logprob: -12.002474784851074
    8. '],' → logprob: -12.252474784851074
    9. '])' → logprob: -13.252474784851074
    10. ']>' → logprob: -13.377474784851074

Token 354: ' (' (ID: 350)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5230435729026794
    2. ' else' → logprob: -1.1480436325073242
    3. '           ' → logprob: -2.898043632507324
    4. '<|end|>' → logprob: -3.773043632507324
    5. '       ' → logprob: -5.398043632507324
    6. '[' → logprob: -5.523043632507324
    7. ',' → logprob: -6.648043632507324
    8. '<|end|>' → logprob: -7.773043632507324
    9. ' or' → logprob: -8.773043632507324
    10. '```' → logprob: -8.773043632507324

Token 355: 'right' (ID: 2460)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009636733680963516
    2. 'key' → logprob: -5.634636878967285
    3. 'True' → logprob: -5.759636878967285
    4. ' ' → logprob: -6.759636878967285
    5. '0' → logprob: -7.009636878967285
    6. ' key' → logprob: -8.259636878967285
    7. ' True' → logprob: -8.634636878967285
    8. '(key' → logprob: -9.384636878967285
    9. 'v' → logprob: -9.634636878967285
    10. ')' → logprob: -9.634636878967285

Token 356: ' child' (ID: 2320)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16982516646385193
    2. 'else' → logprob: -2.4198250770568848
    3. ' else' → logprob: -2.7948250770568848
    4. '<|end|>' → logprob: -6.044825077056885
    5. ')' → logprob: -6.544825077056885
    6. ' ]' → logprob: -7.544825077056885
    7. ' if' → logprob: -7.919825077056885
    8. '],' → logprob: -8.044825553894043
    9. '])' → logprob: -8.294825553894043
    10. ']
' → logprob: -9.294825553894043

Token 357: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004512481391429901
    2. 'else' → logprob: -6.754512310028076
    3. ' else' → logprob: -6.879512310028076
    4. '<|end|>' → logprob: -7.629512310028076
    5. ']' → logprob: -7.754512310028076
    6. '           ' → logprob: -7.879512310028076
    7. ')
' → logprob: -8.129512786865234
    8. '),' → logprob: -8.254512786865234
    9. '       ' → logprob: -9.004512786865234
    10. ',' → logprob: -9.504512786865234

Token 358: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2888323962688446
    2. ' else' → logprob: -2.163832426071167
    3. '[' → logprob: -2.913832426071167
    4. 'else' → logprob: -3.163832426071167
    5. '       ' → logprob: -3.538832426071167
    6. '<|end|>' → logprob: -5.413832187652588
    7. '```' → logprob: -7.163832187652588
    8. '            
' → logprob: -7.413832187652588
    9. '               ' → logprob: -7.538832187652588
    10. ',' → logprob: -7.663832187652588

Token 359: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5001260042190552
    2. '<|end|>' → logprob: -1.1251260042190552
    3. '   ' → logprob: -4.125125885009766
    4. '[' → logprob: -4.250125885009766
    5. ')' → logprob: -4.750125885009766
    6. '           ' → logprob: -4.875125885009766
    7. '```' → logprob: -5.750125885009766
    8. '<|end|>' → logprob: -5.875125885009766
    9. '        
' → logprob: -6.375125885009766
    10. '[]' → logprob: -6.500125885009766

Token 360: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.306760805164231e-05
    2. ' False' → logprob: -11.25001335144043
    3. '(False' → logprob: -22.12501335144043
    4. 'True' → logprob: -23.62501335144043
    5. 'false' → logprob: -23.75001335144043
    6. 'None' → logprob: -24.25001335144043
    7. '=False' → logprob: -24.62501335144043
    8. 'F' → logprob: -25.12501335144043
    9. '_false' → logprob: -26.00001335144043
    10. '.False' → logprob: -26.37501335144043

Token 361: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1154291033744812
    2. '    
' → logprob: -2.365429162979126
    3. '<|end|>' → logprob: -4.990428924560547
    4. 'def' → logprob: -5.615428924560547
    5. '
' → logprob: -5.990428924560547
    6. '        
' → logprob: -6.865428924560547
    7. '[' → logprob: -8.365428924560547
    8. '_' → logprob: -8.740428924560547
    9. ')' → logprob: -8.740428924560547
    10. '  
' → logprob: -9.240428924560547

Token 362: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02710604853928089
    2. 'def' → logprob: -3.6521060466766357
    3. '    
' → logprob: -7.652106285095215
    4. ' def' → logprob: -8.152106285095215
    5. '
' → logprob: -10.777106285095215
    6. '	def' → logprob: -11.527106285095215
    7. '<|end|>' → logprob: -12.777106285095215
    8. '        
' → logprob: -13.402106285095215
    9. '```' → logprob: -13.402106285095215
    10. '<|end|>' → logprob: -13.402106285095215

Token 363: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.16485005617141724
    2. '   ' → logprob: -1.9148499965667725
    3. ' def' → logprob: -5.414850234985352
    4. '    
' → logprob: -9.039850234985352
    5. 'class' → logprob: -11.039850234985352
    6. '
' → logprob: -12.164850234985352
    7. '```' → logprob: -12.164850234985352
    8. '	def' → logprob: -12.789850234985352
    9. '        
' → logprob: -13.039850234985352
    10. '_def' → logprob: -13.039850234985352

Token 364: ' __' (ID: 2516)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.9620303511619568
    2. '_' → logprob: -1.2120304107666016
    3. '_insert' → logprob: -1.2120304107666016
    4. ' insert' → logprob: -4.837030410766602
    5. '_find' → logprob: -5.337030410766602
    6. '_split' → logprob: -5.962030410766602
    7. 'insert' → logprob: -6.337030410766602
    8. '_update' → logprob: -6.712030410766602
    9. '_search' → logprob: -7.087030410766602
    10. '_merge' → logprob: -7.587030410766602

Token 365: 'getitem' (ID: 147767)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.6209977865219116
    2. 'getitem' → logprob: -1.1209977865219116
    3. 'bool' → logprob: -2.745997905731201
    4. 'repr' → logprob: -3.495997905731201
    5. 'next' → logprob: -3.745997905731201
    6. 'contains' → logprob: -4.495997905731201
    7. 'str' → logprob: -5.370997905731201
    8. 'init' → logprob: -7.370997905731201
    9. 'len' → logprob: -7.495997905731201
    10. 'i' → logprob: -7.745997905731201

Token 366: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.02134973183274269
    2. '(' → logprob: -4.021349906921387
    3. '__' → logprob: -6.771349906921387
    4. '(self' → logprob: -7.021349906921387
    5. '__(
' → logprob: -7.521349906921387
    6. '_(' → logprob: -8.521349906921387
    7. '__((' → logprob: -8.646349906921387
    8. '_' → logprob: -9.646349906921387
    9. ' (' → logprob: -9.896349906921387
    10. '__('' → logprob: -10.021349906921387

Token 367: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002137882256647572
    2. ' self' → logprob: -8.625213623046875
    3. '(self' → logprob: -11.125213623046875
    4. '   ' → logprob: -12.000213623046875
    5. '       ' → logprob: -12.000213623046875
    6. '0' → logprob: -12.500213623046875
    7. 's' → logprob: -13.875213623046875
    8. 'key' → logprob: -14.125213623046875
    9. ' ' → logprob: -15.000213623046875
    10. '
' → logprob: -15.375213623046875

Token 368: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028290078043937683
    2. 'self' → logprob: -6.002829074859619
    3. ' ,' → logprob: -8.502828598022461
    4. ',self' → logprob: -9.502828598022461
    5. '[' → logprob: -10.877828598022461
    6. ')' → logprob: -11.002828598022461
    7. ',
' → logprob: -12.127828598022461
    8. ',v' → logprob: -12.127828598022461
    9. ' self' → logprob: -12.252828598022461
    10. ',key' → logprob: -12.377828598022461

Token 369: ' i' (ID: 575)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.7687122821807861
    2. 'index' → logprob: -0.7687122821807861
    3. ' key' → logprob: -2.893712282180786
    4. ' index' → logprob: -4.143712043762207
    5. 'self' → logprob: -6.768712043762207
    6. 'idx' → logprob: -8.143712043762207
    7. ' self' → logprob: -9.768712043762207
    8. ' idx' → logprob: -11.393712043762207
    9. 'item' → logprob: -11.643712043762207
    10. 'slice' → logprob: -12.268712043762207

Token 370: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03628042712807655
    2. '):
' → logprob: -3.411280393600464
    3. ')' → logprob: -6.036280632019043
    4. '):
' → logprob: -9.786280632019043
    5. '   ' → logprob: -10.286280632019043
    6. ':' → logprob: -10.286280632019043
    7. ']:' → logprob: -10.536280632019043
    8. ' ):' → logprob: -10.786280632019043
    9. ',' → logprob: -11.536280632019043
    10. ']' → logprob: -12.036280632019043

Token 371: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27958399057388306
    2. ' v' → logprob: -1.9045839309692383
    3. ' if' → logprob: -2.4045839309692383
    4. ' def' → logprob: -6.279583930969238
    5. ' return' → logprob: -6.904583930969238
    6. ' #' → logprob: -7.779583930969238
    7. ' [' → logprob: -8.779583930969238
    8. ' key' → logprob: -9.029583930969238
    9. ' s' → logprob: -9.154583930969238
    10. ' self' → logprob: -9.404583930969238

Token 372: ' get' (ID: 717)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6781338453292847
    2. ' def' → logprob: -0.8031338453292847
    3. ' v' → logprob: -3.928133964538574
    4. ' self' → logprob: -4.803133964538574
    5. ' if' → logprob: -4.803133964538574
    6. 'if' → logprob: -5.428133964538574
    7. 'v' → logprob: -7.053133964538574
    8. 'self' → logprob: -7.303133964538574
    9. ' assert' → logprob: -7.428133964538574
    10. ' ' → logprob: -8.053133964538574

Token 373: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8955299854278564
    2. ' v' → logprob: -1.1455299854278564
    3. ' self' → logprob: -1.6455299854278564
    4. 'v' → logprob: -2.5205299854278564
    5. 'def' → logprob: -9.145529747009277
    6. 's' → logprob: -11.145529747009277
    7. '_v' → logprob: -11.270529747009277
    8. ' None' → logprob: -11.895529747009277
    9. 'return' → logprob: -11.895529747009277
    10. '
' → logprob: -11.895529747009277

Token 374: ' i' (ID: 575)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.2569972276687622
    2. '[' → logprob: -1.7569972276687622
    3. 'self' → logprob: -4.256997108459473
    4. 'key' → logprob: -4.256997108459473
    5. ' root' → logprob: -4.506997108459473
    6. 'v' → logprob: -5.381997108459473
    7. 'def' → logprob: -6.006997108459473
    8. '_key' → logprob: -6.256997108459473
    9. '_root' → logprob: -6.756997108459473
    10. 'node' → logprob: -7.256997108459473

Token 375: '-th' (ID: 14928)
  Prédit: '-th'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-th' → logprob: -0.6079988479614258
    2. '[' → logprob: -0.9829988479614258
    3. 'th' → logprob: -2.857998847961426
    4. ']' → logprob: -4.482998847961426
    5. ' ' → logprob: -6.357998847961426
    6. 't' → logprob: -6.357998847961426
    7. '
' → logprob: -6.732998847961426
    8. ''t' → logprob: -6.857998847961426
    9. ' [' → logprob: -7.232998847961426
    10. '-' → logprob: -7.232998847961426

Token 376: ' smallest' (ID: 42173)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14974847435951233
    2. 'element' → logprob: -3.5247485637664795
    3. ' element' → logprob: -3.7747485637664795
    4. ' node' → logprob: -3.8997485637664795
    5. ' key' → logprob: -4.0247483253479
    6. ' ' → logprob: -4.8997483253479
    7. ' [' → logprob: -4.8997483253479
    8. ' item' → logprob: -5.0247483253479
    9. 'node' → logprob: -5.0247483253479
    10. 'item' → logprob: -5.0247483253479

Token 377: ' element' (ID: 3577)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1983321905136108
    2. ' (' → logprob: -2.3233323097229004
    3. '<|end|>' → logprob: -2.5733323097229004
    4. 'element' → logprob: -2.8233323097229004
    5. 'item' → logprob: -2.9483323097229004
    6. '   ' → logprob: -2.9483323097229004
    7. ' ' → logprob: -2.9483323097229004
    8. ' key' → logprob: -3.1983323097229004
    9. 'key' → logprob: -3.8233323097229004
    10. '[' → logprob: -3.8233323097229004

Token 378: ' in' (ID: 306)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3852600157260895
    2. '<|end|>' → logprob: -1.760259985923767
    3. '(
' → logprob: -2.7602601051330566
    4. '   ' → logprob: -3.6352601051330566
    5. '(self' → logprob: -4.260260105133057
    6. '[' → logprob: -4.510260105133057
    7. '
' → logprob: -5.135260105133057
    8. '       ' → logprob: -5.135260105133057
    9. '<|end|>' → logprob: -5.510260105133057
    10. ' (' → logprob: -5.760260105133057

Token 379: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0012892824597656727
    2. 'the' → logprob: -7.126289367675781
    3. ' self' → logprob: -7.751289367675781
    4. ' the' → logprob: -10.126289367675781
    5. '
' → logprob: -12.126289367675781
    6. ')' → logprob: -12.751289367675781
    7. '[self' → logprob: -13.126289367675781
    8. 'def' → logprob: -14.126289367675781
    9. '(self' → logprob: -14.626289367675781
    10. 'tre' → logprob: -14.751289367675781

Token 380: ' tre' (ID: 4360)
  Prédit: 'tre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tre' → logprob: -0.049053069204092026
    2. ' tre' → logprob: -4.049053192138672
    3. 'self' → logprob: -4.174053192138672
    4. 'root' → logprob: -4.799053192138672
    5. 'Tre' → logprob: -5.549053192138672
    6. 'tree' → logprob: -6.799053192138672
    7. 'sequence' → logprob: -8.424053192138672
    8. 'def' → logprob: -8.674053192138672
    9. ' root' → logprob: -8.674053192138672
    10. ' tree' → logprob: -8.924053192138672

Token 381: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.000116655595775228
    2. '   ' → logprob: -10.000116348266602
    3. 'up' → logprob: -11.500116348266602
    4. 'ur' → logprob: -11.875116348266602
    5. '```' → logprob: -12.125116348266602
    6. '[' → logprob: -12.375116348266602
    7. 't' → logprob: -12.375116348266602
    8. 'def' → logprob: -12.375116348266602
    9. '[]' → logprob: -12.500116348266602
    10. 'u' → logprob: -12.625116348266602

Token 382: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8050599694252014
    2. ':' → logprob: -1.8050599098205566
    3. '       ' → logprob: -1.8050599098205566
    4. '[' → logprob: -2.4300599098205566
    5. '<|end|>' → logprob: -2.5550599098205566
    6. '[
' → logprob: -4.555059909820557
    7. '(' → logprob: -4.680059909820557
    8. ':
' → logprob: -4.805059909820557
    9. '
' → logprob: -5.430059909820557
    10. '(
' → logprob: -5.555059909820557

Token 383: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0083878543227911
    2. '   ' → logprob: -6.008388042449951
    3. ' v' → logprob: -6.008388042449951
    4. '    ' → logprob: -6.883388042449951
    5. ' if' → logprob: -7.008388042449951
    6. '```' → logprob: -8.383387565612793
    7. '        ' → logprob: -8.758387565612793
    8. '        
' → logprob: -8.883387565612793
    9. '<|end|>' → logprob: -9.008387565612793
    10. ' 
' → logprob: -9.133387565612793

Token 384: ' count' (ID: 3605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3177031874656677
    2. ' v' → logprob: -1.5677032470703125
    3. 'v' → logprob: -2.8177032470703125
    4. ' if' → logprob: -6.1927032470703125
    5. 'def' → logprob: -6.8177032470703125
    6. ' def' → logprob: -7.8177032470703125
    7. 'if' → logprob: -7.9427032470703125
    8. '   ' → logprob: -11.317703247070312
    9. '```' → logprob: -12.942703247070312
    10. '	v' → logprob: -13.442703247070312

Token 385: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010331436060369015
    2. '=' → logprob: -4.760331630706787
    3. '<|end|>' → logprob: -7.260331630706787
    4. ',' → logprob: -8.010331153869629
    5. 's' → logprob: -8.760331153869629
    6. ' ' → logprob: -9.260331153869629
    7. '=v' → logprob: -9.635331153869629
    8. 'v' → logprob: -9.760331153869629
    9. '_' → logprob: -9.885331153869629
    10. '(v' → logprob: -10.010331153869629

Token 386: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06535503268241882
    2. '0' → logprob: -3.190355062484741
    3. ' self' → logprob: -3.940355062484741
    4. 'i' → logprob: -6.315354824066162
    5. ' ' → logprob: -7.440354824066162
    6. ' i' → logprob: -9.69035530090332
    7. '   ' → logprob: -10.19035530090332
    8. '1' → logprob: -10.19035530090332
    9. '
' → logprob: -10.31535530090332
    10. '(self' → logprob: -10.56535530090332

Token 387: '._' (ID: 2697)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06588733196258545
    2. 'root' → logprob: -3.440887451171875
    3. '.root' → logprob: -4.440887451171875
    4. ' root' → logprob: -4.440887451171875
    5. '   ' → logprob: -5.565887451171875
    6. '[root' → logprob: -6.440887451171875
    7. ' ' → logprob: -7.815887451171875
    8. '
' → logprob: -7.940887451171875
    9. '.' → logprob: -7.940887451171875
    10. '_root' → logprob: -8.190887451171875

Token 388: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.0280383548888494e-06
    2. '_count' → logprob: -14.625000953674316
    3. 'root' → logprob: -15.250000953674316
    4. 'get' → logprob: -15.750000953674316
    5. ' count' → logprob: -17.375001907348633
    6. 'copy' → logprob: -17.875001907348633
    7. '(count' → logprob: -18.125001907348633
    8. '```' → logprob: -18.375001907348633
    9. 'getitem' → logprob: -18.500001907348633
    10. 'cnt' → logprob: -18.500001907348633

Token 389: '
' (ID: 198)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.00879998691380024
    2. '(' → logprob: -5.258800029754639
    3. '(self' → logprob: -5.758800029754639
    4. '<|end|>' → logprob: -8.75879955291748
    5. '(root' → logprob: -9.88379955291748
    6. '((' → logprob: -10.25879955291748
    7. '(t' → logprob: -10.25879955291748
    8. '(s' → logprob: -11.13379955291748
    9. 'def' → logprob: -11.38379955291748
    10. '(
' → logprob: -11.50879955291748

Token 390: '       ' (ID: 309)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.9560561180114746
    2. '       ' → logprob: -1.0810561180114746
    3. '
' → logprob: -1.9560561180114746
    4. '<|end|>' → logprob: -2.5810561180114746
    5. '(' → logprob: -3.7060561180114746
    6. '(self' → logprob: -4.706056118011475
    7. '   ' → logprob: -5.956056118011475
    8. '(
' → logprob: -5.956056118011475
    9. '        
' → logprob: -5.956056118011475
    10. ',' → logprob: -6.331056118011475

Token 391: ' if' (ID: 538)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00984899327158928
    2. 'def' → logprob: -4.7598490715026855
    3. '       ' → logprob: -6.7598490715026855
    4. '   ' → logprob: -10.134848594665527
    5. '```' → logprob: -11.259848594665527
    6. '
' → logprob: -11.509848594665527
    7. ' v' → logprob: -12.134848594665527
    8. 'if' (adapté à ' if') → logprob: -12.259848594665527
    9. '	v' → logprob: -14.884848594665527
    10. ' def' → logprob: -14.884848594665527

Token 392: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12815971672534943
    2. 'self' → logprob: -2.753159761428833
    3. 'not' → logprob: -3.753159761428833
    4. ' i' → logprob: -3.878159761428833
    5. ' not' → logprob: -4.753159523010254
    6. ' self' → logprob: -5.878159523010254
    7. 'type' → logprob: -8.128159523010254
    8. ' ' → logprob: -8.503159523010254
    9. '   ' → logprob: -8.878159523010254
    10. '0' → logprob: -9.128159523010254

Token 393: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.24558007717132568
    2. ' ==' → logprob: -2.1205801963806152
    3. '[' → logprob: -3.4955801963806152
    4. '<' → logprob: -3.7455801963806152
    5. ' >=' → logprob: -4.245580196380615
    6. '<|end|>' → logprob: -4.745580196380615
    7. '==' → logprob: -5.120580196380615
    8. ' >' → logprob: -5.370580196380615
    9. ')' → logprob: -5.995580196380615
    10. '0' → logprob: -6.370580196380615

Token 394: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1002187430858612
    2. ' ' → logprob: -2.3502187728881836
    3. '   ' → logprob: -12.225218772888184
    4. '1' → logprob: -13.100218772888184
    5. '  ' → logprob: -13.350218772888184
    6. '-' → logprob: -13.975218772888184
    7. ' -' → logprob: -14.225218772888184
    8. '    ' → logprob: -15.100218772888184
    9. '     ' → logprob: -15.412718772888184
    10. '```' → logprob: -15.912718772888184

Token 395: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.906711546937004e-05
    2. ' ' → logprob: -10.000048637390137
    3. 'count' → logprob: -12.750048637390137
    4. '1' → logprob: -15.250048637390137
    5. '-' → logprob: -15.375048637390137
    6. 'self' → logprob: -16.625049591064453
    7. '   ' → logprob: -16.875049591064453
    8. '(' → logprob: -17.750049591064453
    9. 'len' → logprob: -17.750049591064453
    10. '  ' → logprob: -18.000049591064453

Token 396: ':' (ID: 25)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.04274920001626015
    2. ':' → logprob: -3.5427491664886475
    3. 'or' → logprob: -4.417749404907227
    4. ':return' → logprob: -7.417749404907227
    5. ':
' → logprob: -8.917749404907227
    6. '       ' → logprob: -9.917749404907227
    7. '   ' → logprob: -10.667749404907227
    8. ')' → logprob: -11.417749404907227
    9. '	or' → logprob: -11.792749404907227
    10. ' :' → logprob: -11.792749404907227

Token 397: ' i' (ID: 575)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7444382309913635
    2. ' i' → logprob: -0.8694382309913635
    3. 'return' → logprob: -2.6194381713867188
    4. '
' → logprob: -4.244438171386719
    5. 'i' → logprob: -4.619438171386719
    6. '           ' → logprob: -5.494438171386719
    7. '       ' → logprob: -5.744438171386719
    8. 'raise' → logprob: -8.244438171386719
    9. ' raise' → logprob: -8.244438171386719
    10. ' 
' → logprob: -8.369438171386719

Token 398: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.30119749903678894
    2. '=' → logprob: -1.8011975288391113
    3. ' +=' → logprob: -2.4261975288391113
    4. ' =' → logprob: -5.051197528839111
    5. '%=' → logprob: -9.301197052001953
    6. ' %=' → logprob: -9.551197052001953
    7. '+' → logprob: -11.426197052001953
    8. '%' → logprob: -12.676197052001953
    9. '   ' → logprob: -12.926197052001953
    10. '*=' → logprob: -13.051197052001953

Token 399: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.4795610010623932
    2. 'self' → logprob: -1.4795609712600708
    3. ' count' → logprob: -2.6045610904693604
    4. ' self' → logprob: -2.9795610904693604
    5. 'len' → logprob: -3.7295610904693604
    6. ' ' → logprob: -6.104560852050781
    7. ' len' → logprob: -6.979560852050781
    8. 'i' → logprob: -7.979560852050781
    9. ' i' → logprob: -7.979560852050781
    10. '   ' → logprob: -8.479560852050781

Token 400: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.349075556499884e-05
    2. 'self' → logprob: -9.8750638961792
    3. '(root' → logprob: -11.7500638961792
    4. '(i' → logprob: -13.6250638961792
    5. '(' → logprob: -13.8750638961792
    6. '((' → logprob: -14.5000638961792
    7. '(v' → logprob: -14.8750638961792
    8. '(this' → logprob: -15.1250638961792
    9. ' (' → logprob: -16.250062942504883
    10. ')' → logprob: -16.500062942504883

Token 401: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -1.8670179997570813e-05
    2. 'root' → logprob: -11.250019073486328
    3. '.' → logprob: -12.750019073486328
    4. '(root' → logprob: -13.375019073486328
    5. ')' → logprob: -13.875019073486328
    6. ' root' → logprob: -16.375019073486328
    7. ' .' → logprob: -16.750019073486328
    8. '[root' → logprob: -17.250019073486328
    9. '	root' → logprob: -18.125019073486328
    10. '._' → logprob: -18.125019073486328

Token 402: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2654494643211365
    2. '(self' → logprob: -1.6404495239257812
    3. '+self' → logprob: -4.140449523925781
    4. ')+' → logprob: -4.515449523925781
    5. 'self' → logprob: -4.765449523925781
    6. ' +' → logprob: -6.765449523925781
    7. '+' → logprob: -7.140449523925781
    8. '()' → logprob: -7.265449523925781
    9. '[self' → logprob: -7.640449523925781
    10. '[' → logprob: -9.140449523925781

Token 403: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20193998515605927
    2. ' +' → logprob: -1.7019399404525757
    3. '+i' → logprob: -7.576940059661865
    4. '-' → logprob: -12.076939582824707
    5. '+
' → logprob: -12.326939582824707
    6. '
' → logprob: -13.826939582824707
    7. '()+' → logprob: -13.951939582824707
    8. ' ' → logprob: -13.951939582824707
    9. ' -' → logprob: -14.326939582824707
    10. ' +
' → logprob: -15.826939582824707

Token 404: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005234002135694027
    2. ' i' → logprob: -5.2552337646484375
    3. '   ' → logprob: -16.255233764648438
    4. ' ' → logprob: -16.380233764648438
    5. '	i' → logprob: -17.130233764648438
    6. '  ' → logprob: -18.380233764648438
    7. '1' → logprob: -19.005233764648438
    8. '<|end|>' → logprob: -19.255233764648438
    9. '(i' → logprob: -19.380233764648438
    10. '_i' → logprob: -19.880233764648438

Token 405: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.638508677482605
    2. '<|end|>' → logprob: -1.513508677482605
    3. '
' → logprob: -2.1385087966918945
    4. ' 
' → logprob: -3.1385087966918945
    5. '   ' → logprob: -3.3885087966918945
    6. ' ' → logprob: -3.8885087966918945
    7. '  
' → logprob: -4.3885087966918945
    8. '    
' → logprob: -5.0135087966918945
    9. '        
' → logprob: -5.7635087966918945
    10. '[' → logprob: -5.8885087966918945

Token 406: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.044144999235868454
    2. '<|end|>' → logprob: -3.419145107269287
    3. '
' → logprob: -4.919145107269287
    4. ' if' → logprob: -6.419145107269287
    5. '        
' → logprob: -8.294144630432129
    6. '   ' → logprob: -8.419144630432129
    7. ' ' → logprob: -8.669144630432129
    8. '<|end|>' → logprob: -8.669144630432129
    9. '  
' → logprob: -9.044144630432129
    10. ' 
' → logprob: -9.169144630432129

Token 407: ' if' (ID: 538)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0022810997907072306
    2. 'if' (adapté à ' if') → logprob: -6.627281188964844
    3. ' v' → logprob: -7.127281188964844
    4. '   ' → logprob: -9.252281188964844
    5. '       ' → logprob: -10.502281188964844
    6. ' if' → logprob: -10.752281188964844
    7. 'assert' → logprob: -13.002281188964844
    8. 'def' → logprob: -13.752281188964844
    9. '        
' → logprob: -13.877281188964844
    10. '
' → logprob: -14.377281188964844

Token 408: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2432428002357483
    2. ' i' → logprob: -2.3682427406311035
    3. ' not' → logprob: -2.4932427406311035
    4. 'not' → logprob: -3.2432427406311035
    5. '   ' → logprob: -8.868243217468262
    6. ' ' → logprob: -8.993243217468262
    7. 'self' → logprob: -9.243243217468262
    8. '0' → logprob: -9.368243217468262
    9. ' self' → logprob: -10.243243217468262
    10. '  ' → logprob: -10.368243217468262

Token 409: ' >=' (ID: 5064)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3718317747116089
    2. '<' → logprob: -1.6218317747116089
    3. ' >=' → logprob: -2.7468318939208984
    4. '>=' → logprob: -4.246831893920898
    5. '<|end|>' → logprob: -4.496831893920898
    6. '[' → logprob: -4.496831893920898
    7. ' ==' → logprob: -5.621831893920898
    8. '==' → logprob: -6.371831893920898
    9. '>' → logprob: -6.621831893920898
    10. '=' → logprob: -6.871831893920898

Token 410: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.10035320371389389
    2. ' count' → logprob: -2.350353240966797
    3. 'self' → logprob: -9.350353240966797
    4. ' self' → logprob: -10.225353240966797
    5. '0' → logprob: -10.725353240966797
    6. ' ' → logprob: -14.225353240966797
    7. '	count' → logprob: -15.350353240966797
    8. '(count' → logprob: -15.850353240966797
    9. '   ' → logprob: -16.350353240966797
    10. '$count' → logprob: -16.600353240966797

Token 411: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.580929347255733e-05
    2. 'self' → logprob: -11.500016212463379
    3. '(' → logprob: -12.375016212463379
    4. ' (' → logprob: -14.000016212463379
    5. ',' → logprob: -16.000015258789062
    6. ' self' → logprob: -16.125015258789062
    7. ')' → logprob: -16.250015258789062
    8. ',self' → logprob: -16.750015258789062
    9. '(root' → logprob: -17.000015258789062
    10. '(
' → logprob: -17.375015258789062

Token 412: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.00013154871703591198
    2. 'root' → logprob: -9.000131607055664
    3. '.' → logprob: -12.500131607055664
    4. ' .' → logprob: -13.750131607055664
    5. '(root' → logprob: -13.875131607055664
    6. ')' → logprob: -14.375131607055664
    7. '[root' → logprob: -14.625131607055664
    8. ' root' → logprob: -14.875131607055664
    9. ').' → logprob: -15.375131607055664
    10. '   ' → logprob: -15.500131607055664

Token 413: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016597764566540718
    2. ' or' → logprob: -4.516597747802734
    3. ')' → logprob: -5.641597747802734
    4. '):
' → logprob: -6.516597747802734
    5. ' ):' → logprob: -8.391597747802734
    6. ':' → logprob: -8.766597747802734
    7. '       ' → logprob: -10.266597747802734
    8. '   ' → logprob: -10.516597747802734
    9. ':return' → logprob: -10.641597747802734
    10. ')return' → logprob: -11.141597747802734

Token 414: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10626480728387833
    2. ':return' → logprob: -2.35626482963562
    3. ' or' → logprob: -5.606264591217041
    4. ':
' → logprob: -6.106264591217041
    5. '       ' → logprob: -10.2312650680542
    6. 'return' → logprob: -10.3562650680542
    7. ' return' → logprob: -10.6062650680542
    8. ' :' → logprob: -10.9812650680542
    9. ':
' → logprob: -11.9812650680542
    10. '):' → logprob: -12.1062650680542

Token 415: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.026388542726635933
    2. ' i' → logprob: -3.651388645172119
    3. '   ' → logprob: -9.776388168334961
    4. ' ' → logprob: -11.026388168334961
    5. '  ' → logprob: -11.901388168334961
    6. '
' → logprob: -13.526388168334961
    7. '     ' → logprob: -13.526388168334961
    8. '       ' → logprob: -14.026388168334961
    9. ' not' → logprob: -14.151388168334961
    10. 'not' → logprob: -14.151388168334961

Token 416: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6712425947189331
    2. '<' → logprob: -0.7962425947189331
    3. ' ==' → logprob: -4.796242713928223
    4. '[' → logprob: -4.921242713928223
    5. ' <=' → logprob: -5.171242713928223
    6. ':' → logprob: -5.796242713928223
    7. ')' → logprob: -5.921242713928223
    8. '<=' → logprob: -6.296242713928223
    9. '==' → logprob: -6.671242713928223
    10. '[i' → logprob: -6.671242713928223

Token 417: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028061794582754374
    2. ' ' → logprob: -5.877806186676025
    3. '
' → logprob: -14.127805709838867
    4. '   ' → logprob: -15.377805709838867
    5. '  ' → logprob: -16.502805709838867
    6. '```' → logprob: -16.877805709838867
    7. ' 
' → logprob: -17.002805709838867
    8. '=' → logprob: -17.502805709838867
    9. '-' → logprob: -17.752805709838867
    10. '[' → logprob: -17.877805709838867

Token 418: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.286852345103398e-05
    2. ' ' → logprob: -10.250042915344238
    3. '-' → logprob: -11.875042915344238
    4. '
' → logprob: -15.750042915344238
    5. '   ' → logprob: -16.125041961669922
    6. ' -' → logprob: -16.125041961669922
    7. '```' → logprob: -16.500041961669922
    8. '=' → logprob: -17.000041961669922
    9. '  ' → logprob: -17.750041961669922
    10. '[' → logprob: -18.250041961669922

Token 419: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011739296838641167
    2. ':return' → logprob: -4.511739253997803
    3. ':
' → logprob: -7.386739253997803
    4. ' or' → logprob: -10.136739730834961
    5. '       ' → logprob: -10.886739730834961
    6. ' :' → logprob: -12.261739730834961
    7. '):' → logprob: -12.511739730834961
    8. ')' → logprob: -12.886739730834961
    9. '   ' → logprob: -14.386739730834961
    10. '           ' → logprob: -14.511739730834961

Token 420: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.4399753510951996
    2. '           ' → logprob: -1.189975380897522
    3. 'raise' → logprob: -3.1899752616882324
    4. ' return' → logprob: -4.814975261688232
    5. '       ' → logprob: -6.939975261688232
    6. '	raise' → logprob: -7.439975261688232
    7. 'Raise' → logprob: -8.06497573852539
    8. 'return' → logprob: -8.68997573852539
    9. '   ' → logprob: -9.06497573852539
    10. '_raise' → logprob: -9.81497573852539

Token 421: ' Index' (ID: 14580)
  Prédit: 'Index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Index' → logprob: -0.0007117166533134878
    2. ' Index' → logprob: -7.250711917877197
    3. '(Index' → logprob: -13.750711441040039
    4. '_Index' → logprob: -15.750711441040039
    5. '_index' → logprob: -16.25071144104004
    6. 'Key' → logprob: -16.25071144104004
    7. '[Index' → logprob: -16.62571144104004
    8. 'Assertion' → logprob: -16.62571144104004
    9. 'Indexer' → logprob: -16.75071144104004
    10. '```' → logprob: -17.00071144104004

Token 422: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: 0.0
    2. 'Out' → logprob: -18.375
    3. 'Index' → logprob: -19.0
    4. 'rror' → logprob: -20.0
    5. '	Error' → logprob: -20.625
    6. 'Erro' → logprob: -21.125
    7. '   ' → logprob: -21.375
    8. ' Error' → logprob: -21.375
    9. 'ERROR' → logprob: -21.75
    10. 'Er' → logprob: -22.25

Token 423: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2050933986902237
    2. '
' → logprob: -2.3300933837890625
    3. '('' → logprob: -3.7050933837890625
    4. '(
' → logprob: -4.2050933837890625
    5. '()' → logprob: -4.5800933837890625
    6. '   ' → logprob: -4.9550933837890625
    7. 'Index' → logprob: -5.0800933837890625
    8. '        
' → logprob: -5.4550933837890625
    9. ' Index' → logprob: -5.8300933837890625
    10. '[
' → logprob: -5.8300933837890625

Token 424: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06367515027523041
    2. '
' → logprob: -4.0636749267578125
    3. 'v' → logprob: -4.4386749267578125
    4. '   ' → logprob: -4.4386749267578125
    5. ' v' → logprob: -4.9386749267578125
    6. '        
' → logprob: -4.9386749267578125
    7. '    
' → logprob: -6.6886749267578125
    8. '<|end|>' → logprob: -6.6886749267578125
    9. '[' → logprob: -6.8136749267578125
    10. ',' → logprob: -7.8136749267578125

Token 425: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.604022741317749
    2. '       ' → logprob: -0.854022741317749
    3. ' v' → logprob: -3.604022741317749
    4. '```' → logprob: -8.229022979736328
    5. '	v' → logprob: -8.979022979736328
    6. 'def' → logprob: -10.104022979736328
    7. '
' → logprob: -10.979022979736328
    8. '   ' → logprob: -11.229022979736328
    9. ',v' → logprob: -12.479022979736328
    10. '``' → logprob: -13.229022979736328

Token 426: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38689500093460083
    2. '=' → logprob: -1.136894941329956
    3. '=v' → logprob: -11.011895179748535
    4. '   ' → logprob: -12.761895179748535
    5. ',' → logprob: -12.761895179748535
    6. ' ' → logprob: -14.636895179748535
    7. '[' → logprob: -14.761895179748535
    8. 'v' → logprob: -15.261895179748535
    9. '=
' → logprob: -15.386895179748535
    10. '  ' → logprob: -16.38689422607422

Token 427: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04858805239200592
    2. ' self' → logprob: -3.0485880374908447
    3. '   ' → logprob: -14.798587799072266
    4. '       ' → logprob: -15.423587799072266
    5. '	self' → logprob: -17.048587799072266
    6. ' ' → logprob: -17.173587799072266
    7. '(self' → logprob: -17.673587799072266
    8. '    ' → logprob: -18.298587799072266
    9. '[self' → logprob: -18.423587799072266
    10. ' deepcopy' → logprob: -18.798587799072266

Token 428: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.018035797402262688
    2. 'root' → logprob: -4.143035888671875
    3. '[' → logprob: -6.393035888671875
    4. '.' → logprob: -8.268035888671875
    5. 'self' → logprob: -10.143035888671875
    6. ' root' → logprob: -11.893035888671875
    7. '[root' → logprob: -11.893035888671875
    8. '_root' → logprob: -12.518035888671875
    9. '	root' → logprob: -12.643035888671875
    10. '
' → logprob: -13.143035888671875

Token 429: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006349049974232912
    2. '<|end|>' → logprob: -6.256349086761475
    3. 'while' → logprob: -6.631349086761475
    4. '
' → logprob: -6.881349086761475
    5. '        
' → logprob: -7.256349086761475
    6. ' while' → logprob: -7.631349086761475
    7. ',' → logprob: -8.381348609924316
    8. '	while' → logprob: -8.506348609924316
    9. '<|end|>' → logprob: -9.506348609924316
    10. '```' → logprob: -9.881348609924316

Token 430: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2305503636598587
    2. '<|end|>' → logprob: -2.6055502891540527
    3. '	while' → logprob: -2.8555502891540527
    4. '
' → logprob: -3.1055502891540527
    5. '   ' → logprob: -5.105550289154053
    6. '        
' → logprob: -5.355550289154053
    7. ' while' → logprob: -5.605550289154053
    8. '[' → logprob: -6.105550289154053
    9. '<|end|>' → logprob: -6.230550289154053
    10. ',' → logprob: -6.605550289154053

Token 431: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.06388339400291443
    2. '       ' → logprob: -2.8138833045959473
    3. '
' → logprob: -6.563883304595947
    4. ' while' → logprob: -7.938883304595947
    5. '```' → logprob: -9.813883781433105
    6. '	while' → logprob: -9.938883781433105
    7. '        
' → logprob: -11.188883781433105
    8. '   ' → logprob: -11.313883781433105
    9. 'd' → logprob: -12.188883781433105
    10. 'While' → logprob: -12.563883781433105

Token 432: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.25224724411964417
    2. 'v' → logprob: -1.5022472143173218
    3. ' True' → logprob: -8.252246856689453
    4. '(True' → logprob: -10.252246856689453
    5. '   ' → logprob: -11.127246856689453
    6. ' v' → logprob: -12.877246856689453
    7. 'true' → logprob: -13.502246856689453
    8. '  ' → logprob: -14.002246856689453
    9. ' ' → logprob: -14.252246856689453
    10. '
' → logprob: -14.752246856689453

Token 433: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20178596675395966
    2. ':
' → logprob: -1.701785922050476
    3. '       ' → logprob: -8.826786041259766
    4. ',' → logprob: -9.201786041259766
    5. '           ' → logprob: -9.951786041259766
    6. '):
' → logprob: -10.076786041259766
    7. '<|end|>' → logprob: -11.951786041259766
    8. ':

' → logprob: -12.201786041259766
    9. '():
' → logprob: -12.701786041259766
    10. '[' → logprob: -12.951786041259766

Token 434: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07068314403295517
    2. '           ' → logprob: -2.945683240890503
    3. 'd' → logprob: -5.820683002471924
    4. 'count' → logprob: -6.320683002471924
    5. '
' → logprob: -6.445683002471924
    6. 'left' → logprob: -6.695683002471924
    7. '```' → logprob: -6.820683002471924
    8. '   ' → logprob: -6.820683002471924
    9. ' if' → logprob: -7.320683002471924
    10. ' left' → logprob: -7.445683002471924

Token 435: ' n' (ID: 297)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.5225293636322021
    2. 'l' → logprob: -1.7725293636322021
    3. '           ' → logprob: -2.022529363632202
    4. 'c' → logprob: -2.897529363632202
    5. 'count' → logprob: -3.772529363632202
    6. 'k' → logprob: -5.022529602050781
    7. 'lc' → logprob: -5.022529602050781
    8. '
' → logprob: -5.647529602050781
    9. 'cnt' → logprob: -6.022529602050781
    10. 'd' → logprob: -6.272529602050781

Token 436: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.3466627597808838
    2. ' =' → logprob: -1.9716627597808838
    3. 'left' → logprob: -2.221662759780884
    4. '=' → logprob: -3.846662759780884
    5. '_desc' → logprob: -3.971662759780884
    6. 'desc' → logprob: -6.471662521362305
    7. 'v' → logprob: -7.346662521362305
    8. 'l' → logprob: -7.471662521362305
    9. '_l' → logprob: -7.596662521362305
    10. 'Left' → logprob: -8.096662521362305

Token 437: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5236004590988159
    2. ' =' → logprob: -0.8986004590988159
    3. ',' → logprob: -8.148600578308105
    4. '=v' → logprob: -9.023600578308105
    5. 'v' → logprob: -10.648600578308105
    6. '   ' → logprob: -10.898600578308105
    7. ',v' → logprob: -11.648600578308105
    8. '<|end|>' → logprob: -12.148600578308105
    9. '    ' → logprob: -13.148600578308105
    10. '  ' → logprob: -13.273600578308105

Token 438: ' count' (ID: 3605)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.36655494570732117
    2. 'count' → logprob: -1.6165549755096436
    3. 'v' → logprob: -2.2415549755096436
    4. ' self' → logprob: -6.3665547370910645
    5. ' count' → logprob: -9.116555213928223
    6. ' v' → logprob: -9.241555213928223
    7. '0' → logprob: -10.116555213928223
    8. '   ' → logprob: -11.866555213928223
    9. '(self' → logprob: -12.116555213928223
    10. 'Tre' → logprob: -12.491555213928223

Token 439: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -3.650518920039758e-06
    2. '(' → logprob: -12.750003814697266
    3. '((' → logprob: -15.125003814697266
    4. '(
' → logprob: -15.625003814697266
    5. ' (' → logprob: -16.125003814697266
    6. 'v' → logprob: -16.875003814697266
    7. '=' → logprob: -18.625003814697266
    8. '   ' → logprob: -18.625003814697266
    9. '
' → logprob: -18.875003814697266
    10. '(n' → logprob: -19.500003814697266

Token 440: '[' (ID: 58)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.000521577603649348
    2. '[' → logprob: -8.000521659851074
    3. '(' → logprob: -9.000521659851074
    4. ' (' → logprob: -10.250521659851074
    5. ')' → logprob: -12.125521659851074
    6. '([' → logprob: -12.250521659851074
    7. '((' → logprob: -12.875521659851074
    8. '   ' → logprob: -13.000521659851074
    9. '(
' → logprob: -13.000521659851074
    10. '[v' → logprob: -13.000521659851074

Token 441: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09051197022199631
    2. '[' → logprob: -2.4655120372772217
    3. '(' → logprob: -6.590511798858643
    4. '   ' → logprob: -9.2155122756958
    5. ' ' → logprob: -9.5905122756958
    6. '][' → logprob: -12.7155122756958
    7. 'v' → logprob: -12.8405122756958
    8. '       ' → logprob: -12.8405122756958
    9. '```' → logprob: -13.0905122756958
    10. '           ' → logprob: -13.3405122756958

Token 442: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.387910395860672
    2. ')' → logprob: -1.1379103660583496
    3. ')
' → logprob: -7.76291036605835
    4. '])
' → logprob: -8.137910842895508
    5. ' )' → logprob: -9.512910842895508
    6. ']' → logprob: -9.887910842895508
    7. ' ])' → logprob: -10.012910842895508
    8. ')]' → logprob: -10.262910842895508
    9. '   ' → logprob: -10.637910842895508
    10. ')])' → logprob: -10.887910842895508

Token 443: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00018220659694634378
    2. ' if' → logprob: -9.250182151794434
    3. ',' → logprob: -9.875182151794434
    4. '<|end|>' → logprob: -10.750182151794434
    5. '<|end|>' → logprob: -12.375182151794434
    6. ' and' → logprob: -13.250182151794434
    7. '            
' → logprob: -13.250182151794434
    8. '	       ' → logprob: -13.750182151794434
    9. '       ' → logprob: -14.750182151794434
    10. '          ' → logprob: -14.750182151794434

Token 444: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09700573980808258
    2. 'if' (adapté à ' if') → logprob: -2.472005844116211
    3. ' if' → logprob: -4.847005844116211
    4. '	if' → logprob: -10.222005844116211
    5. '   ' → logprob: -10.347005844116211
    6. '       ' → logprob: -10.347005844116211
    7. 'If' → logprob: -10.847005844116211
    8. '```' → logprob: -10.847005844116211
    9. '	       ' → logprob: -11.597005844116211
    10. '<|end|>' → logprob: -11.722005844116211

Token 445: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.003655075328424573
    2. ' i' → logprob: -6.128654956817627
    3. 'n' → logprob: -6.628654956817627
    4. '   ' → logprob: -9.253655433654785
    5. ' ' → logprob: -10.753655433654785
    6. ' n' → logprob: -11.253655433654785
    7. '  ' → logprob: -12.253655433654785
    8. '	i' → logprob: -12.253655433654785
    9. '    ' → logprob: -12.753655433654785
    10. '     ' → logprob: -13.128655433654785

Token 446: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3085547387599945
    2. ' <' → logprob: -1.433554768562317
    3. '==' → logprob: -3.8085546493530273
    4. '<' → logprob: -5.558554649353027
    5. '<|end|>' → logprob: -7.183554649353027
    6. ' ' → logprob: -9.683554649353027
    7. '[' → logprob: -9.808554649353027
    8. '<|end|>' → logprob: -11.058554649353027
    9. '=' → logprob: -11.433554649353027
    10. ')' → logprob: -11.558554649353027

Token 447: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.018156733363866806
    2. ' n' → logprob: -4.0181565284729
    3. '	n' → logprob: -12.143157005310059
    4. '0' → logprob: -14.393157005310059
    5. '   ' → logprob: -15.143157005310059
    6. '
' → logprob: -15.268157005310059
    7. ' ' → logprob: -15.393157005310059
    8. '    ' → logprob: -16.893156051635742
    9. ')n' → logprob: -17.518156051635742
    10. '(n' → logprob: -17.643156051635742

Token 448: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -4.842555426876061e-06
    2. 'left' → logprob: -12.375004768371582
    3. '[' → logprob: -15.375004768371582
    4. '[left' → logprob: -16.1250057220459
    5. '_LEFT' → logprob: -16.6250057220459
    6. '_' → logprob: -16.8750057220459
    7. '_right' → logprob: -17.0000057220459
    8. 'Left' → logprob: -17.1250057220459
    9. '```' → logprob: -18.0000057220459
    10. '_Left' → logprob: -18.1250057220459

Token 449: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03146865963935852
    2. ':
' → logprob: -3.656468629837036
    3. ':return' → logprob: -5.281468868255615
    4. ' return' → logprob: -11.531468391418457
    5. '           ' → logprob: -11.531468391418457
    6. ' :' → logprob: -11.906468391418457
    7. '<|end|>' → logprob: -12.031468391418457
    8. '   ' → logprob: -12.031468391418457
    9. '<|end|>' → logprob: -12.281468391418457
    10. 'return' → logprob: -12.656468391418457

Token 450: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.46777471899986267
    2. '               ' → logprob: -1.467774748802185
    3. ' return' → logprob: -1.967774748802185
    4. '           ' → logprob: -5.717774868011475
    5. '	return' → logprob: -9.217774391174316
    6. '                   ' → logprob: -12.592774391174316
    7. '
' → logprob: -12.967774391174316
    8. '   ' → logprob: -13.592774391174316
    9. '{return' → logprob: -13.717774391174316
    10. '```' → logprob: -13.842774391174316

Token 451: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0003802680876106024
    2. ' v' → logprob: -7.875380039215088
    3. '	v' → logprob: -15.875380516052246
    4. '(v' → logprob: -17.00037956237793
    5. '   ' → logprob: -18.00037956237793
    6. '[v' → logprob: -19.25037956237793
    7. '$v' → logprob: -20.62537956237793
    8. '  ' → logprob: -21.12537956237793
    9. '_v' → logprob: -21.12537956237793
    10. ')v' → logprob: -21.12537956237793

Token 452: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.05499910004437e-05
    2. '2' → logprob: -9.375090599060059
    3. '```' → logprob: -13.125090599060059
    4. '3' → logprob: -13.625090599060059
    5. ' ' → logprob: -14.125090599060059
    6. '
' → logprob: -14.875090599060059
    7. '[
' → logprob: -15.375090599060059
    8. '(' → logprob: -15.375090599060059
    9. '   ' → logprob: -15.500090599060059
    10. '	' → logprob: -15.875090599060059

Token 453: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -13.000003814697266
    3. '[' → logprob: -14.000003814697266
    4. '   ' → logprob: -14.625003814697266
    5. '```' → logprob: -15.625003814697266
    6. '  ' → logprob: -17.062503814697266
    7. '-' → logprob: -17.125003814697266
    8. '۲' → logprob: -17.437503814697266
    9. '    ' → logprob: -17.625003814697266
    10. '
' → logprob: -17.937503814697266

Token 454: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4401698410511017
    2. '<|end|>' → logprob: -1.8151698112487793
    3. '
' → logprob: -2.0651698112487793
    4. '           ' → logprob: -3.9401698112487793
    5. ']' → logprob: -4.065169811248779
    6. ')
' → logprob: -4.190169811248779
    7. '[' → logprob: -5.440169811248779
    8. ' )' → logprob: -5.940169811248779
    9. '<|end|>' → logprob: -6.065169811248779
    10. ' 
' → logprob: -6.815169811248779

Token 455: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012240358628332615
    2. 'elif' → logprob: -6.876224040985107
    3. 'v' → logprob: -9.25122356414795
    4. ' elif' → logprob: -9.37622356414795
    5. ' if' → logprob: -12.50122356414795
    6. '       ' → logprob: -13.00122356414795
    7. 'if' → logprob: -13.62622356414795
    8. '            
' → logprob: -15.00122356414795
    9. '               ' → logprob: -15.00122356414795
    10. 'import' → logprob: -15.12622356414795

Token 456: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.21087439358234406
    2. 'if' → logprob: -1.9608744382858276
    3. '           ' → logprob: -3.710874319076538
    4. ' if' → logprob: -4.210874557495117
    5. ' elif' → logprob: -4.960874557495117
    6. 'v' → logprob: -6.460874557495117
    7. '       ' → logprob: -6.835874557495117
    8. '   ' → logprob: -8.085874557495117
    9. '               ' → logprob: -10.460874557495117
    10. '	elif' → logprob: -10.460874557495117

Token 457: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16030454635620117
    2. ' i' → logprob: -1.9103045463562012
    3. ' ' → logprob: -10.41030502319336
    4. '   ' → logprob: -11.03530502319336
    5. '	i' → logprob: -11.03530502319336
    6. '  ' → logprob: -12.03530502319336
    7. 'v' → logprob: -13.03530502319336
    8. ' ' → logprob: -13.34780502319336
    9. 'n' → logprob: -13.84780502319336
    10. '     ' → logprob: -13.97280502319336

Token 458: ' >' (ID: 1424)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6327090859413147
    2. '<' → logprob: -0.7577090859413147
    3. ' ' → logprob: -9.757709503173828
    4. '[' → logprob: -11.632709503173828
    5. '	' → logprob: -12.007709503173828
    6. '<n' → logprob: -12.257709503173828
    7. '   ' → logprob: -12.257709503173828
    8. ' >' → logprob: -12.382709503173828
    9. '>' → logprob: -12.632709503173828
    10. ',' → logprob: -13.007709503173828

Token 459: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.038042984902858734
    2. ' n' → logprob: -3.2880430221557617
    3. '	n' → logprob: -13.913043022155762
    4. '(n' → logprob: -14.663043022155762
    5. '_n' → logprob: -16.163042068481445
    6. '=' → logprob: -17.413042068481445
    7. ' ' → logprob: -17.413042068481445
    8. ')n' → logprob: -17.538042068481445
    9. '=n' → logprob: -17.663042068481445
    10. 'count' → logprob: -17.788042068481445

Token 460: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.0020345149096101522
    2. '[' → logprob: -6.627034664154053
    3. '_' → logprob: -7.377034664154053
    4. 'left' → logprob: -10.752034187316895
    5. '_LEFT' → logprob: -10.752034187316895
    6. '_right' → logprob: -11.627034187316895
    7. 'Left' → logprob: -12.252034187316895
    8. '._' → logprob: -12.502034187316895
    9. '0' → logprob: -12.627034187316895
    10. '
' → logprob: -12.877034187316895

Token 461: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014273280277848244
    2. ':
' → logprob: -4.264273166656494
    3. '-' → logprob: -9.514273643493652
    4. ' :' → logprob: -12.014273643493652
    5. ',' → logprob: -12.389273643493652
    6. '           ' → logprob: -12.389273643493652
    7. ' -' → logprob: -12.514273643493652
    8. ':return' → logprob: -12.514273643493652
    9. '               ' → logprob: -12.764273643493652
    10. 'else' → logprob: -13.264273643493652

Token 462: ' i' (ID: 575)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.49960440397262573
    2. '           ' → logprob: -1.3746044635772705
    3. ' i' → logprob: -1.9996044635772705
    4. ' v' → logprob: -5.749604225158691
    5. 'i' → logprob: -6.749604225158691
    6. 'v' → logprob: -8.124604225158691
    7. '            ' → logprob: -8.624604225158691
    8. '   ' → logprob: -10.499604225158691
    9. ' ' → logprob: -12.124604225158691
    10. '             ' → logprob: -12.499604225158691

Token 463: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.5903732180595398
    2. '-=' → logprob: -0.8403732180595398
    3. '-' → logprob: -4.3403730392456055
    4. '=' → logprob: -7.4653730392456055
    5. '[' → logprob: -7.7153730392456055
    6. '    ' → logprob: -9.465373039245605
    7. ' -' → logprob: -9.965373039245605
    8. '<|end|>' → logprob: -10.590373039245605
    9. '   ' → logprob: -10.715373039245605
    10. ')' → logprob: -10.715373039245605

Token 464: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00222210306674242
    2. ' n' → logprob: -6.127222061157227
    3. '(n' → logprob: -10.502222061157227
    4. '   ' → logprob: -12.377222061157227
    5. '1' → logprob: -13.252222061157227
    6. '	n' → logprob: -13.377222061157227
    7. '(' → logprob: -14.752222061157227
    8. ' ' → logprob: -15.002222061157227
    9. ' (' → logprob: -15.127222061157227
    10. '       ' → logprob: -15.377222061157227

Token 465: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -4.656383680412546e-05
    2. 'left' → logprob: -10.125046730041504
    3. '[' → logprob: -13.000046730041504
    4. 'Left' → logprob: -13.500046730041504
    5. '_LEFT' → logprob: -14.000046730041504
    6. '[left' → logprob: -14.125046730041504
    7. 'eft' → logprob: -15.125046730041504
    8. '_right' → logprob: -15.250046730041504
    9. '```' → logprob: -15.500046730041504
    10. 'LEFT' → logprob: -15.500046730041504

Token 466: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.28122037649154663
    2. ' +' → logprob: -1.4062204360961914
    3. ' -' → logprob: -10.781220436096191
    4. '1' → logprob: -10.781220436096191
    5. '-' → logprob: -11.531220436096191
    6. '+
' → logprob: -11.656220436096191
    7. ' +
' → logprob: -12.656220436096191
    8. ' ' → logprob: -13.031220436096191
    9. ' and' → logprob: -13.531220436096191
    10. 'and' → logprob: -14.031220436096191

Token 467: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -18.25000762939453
    4. '```' → logprob: -18.37500762939453
    5. '
' → logprob: -21.50000762939453
    6. '  ' → logprob: -21.50000762939453
    7. '0' → logprob: -21.62500762939453
    8. '۱' → logprob: -22.12500762939453
    9. '       ' → logprob: -22.25000762939453
    10. '[' → logprob: -22.37500762939453

Token 468: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -18.125001907348633
    4. '
' → logprob: -19.125001907348633
    5. '   ' → logprob: -20.625001907348633
    6. '۱' → logprob: -21.000001907348633
    7. '[' → logprob: -21.375001907348633
    8. '{' → logprob: -21.812501907348633
    9. '１' → logprob: -21.812501907348633
    10. 'from' → logprob: -22.062501907348633

Token 469: ';' (ID: 26)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47432082891464233
    2. '           ' → logprob: -1.099320888519287
    3. ';' → logprob: -3.349320888519287
    4. 'v' → logprob: -5.099320888519287
    5. ',' → logprob: -6.599320888519287
    6. ' v' → logprob: -6.849320888519287
    7. '
' → logprob: -8.224320411682129
    8. ',v' → logprob: -8.474320411682129
    9. '               ' → logprob: -8.849320411682129
    10. '		' → logprob: -9.724320411682129

Token 470: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.056187935173511505
    2. '           ' → logprob: -3.431187868118286
    3. ' v' → logprob: -3.806187868118286
    4. '	v' → logprob: -10.056187629699707
    5. '       ' → logprob: -12.306187629699707
    6. '   ' → logprob: -12.306187629699707
    7. '               ' → logprob: -13.431187629699707
    8. '		' → logprob: -13.931187629699707
    9. '	       ' → logprob: -14.306187629699707
    10. ',v' → logprob: -14.431187629699707

Token 471: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3484523296356201
    2. ' =' → logprob: -1.2234523296356201
    3. '=v' → logprob: -12.3484525680542
    4. '[' → logprob: -13.7234525680542
    5. '<|end|>' → logprob: -14.0984525680542
    6. 'v' → logprob: -14.5984525680542
    7. ' ' → logprob: -14.7234525680542
    8. ',' → logprob: -15.3484525680542
    9. ')' → logprob: -15.3484525680542
    10. '```' → logprob: -16.473451614379883

Token 472: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.547789674485102e-05
    2. ' v' → logprob: -10.250035285949707
    3. '	v' → logprob: -16.750036239624023
    4. '[v' → logprob: -19.250036239624023
    5. '   ' → logprob: -20.125036239624023
    6. '(v' → logprob: -20.125036239624023
    7. ')v' → logprob: -20.250036239624023
    8. '$v' → logprob: -20.375036239624023
    9. '_v' → logprob: -21.625036239624023
    10. 'vq' → logprob: -22.375036239624023

Token 473: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.729906196298543e-06
    2. '1' → logprob: -11.750009536743164
    3. 'v' → logprob: -13.250009536743164
    4. '[
' → logprob: -17.500009536743164
    5. '```' → logprob: -17.625009536743164
    6. '   ' → logprob: -18.125009536743164
    7. ' [' → logprob: -18.125009536743164
    8. '[v' → logprob: -18.625009536743164
    9. ')[' → logprob: -19.125009536743164
    10. '
' → logprob: -19.375009536743164

Token 474: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017863049288280308
    2. '[' → logprob: -9.000178337097168
    3. 'v' → logprob: -10.000178337097168
    4. ' ' → logprob: -12.750178337097168
    5. '   ' → logprob: -13.000178337097168
    6. '```' → logprob: -13.000178337097168
    7. '][' → logprob: -14.250178337097168
    8. '`' → logprob: -15.250178337097168
    9. '``' → logprob: -15.375178337097168
    10. '2' → logprob: -15.500178337097168

Token 475: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.22650130093097687
    2. '<|end|>' → logprob: -1.6015013456344604
    3. '<|end|>' → logprob: -7.97650146484375
    4. ']
' → logprob: -8.60150146484375
    5. ')' → logprob: -8.85150146484375
    6. 'else' → logprob: -9.47650146484375
    7. '[' → logprob: -9.72650146484375
    8. '
' → logprob: -9.72650146484375
    9. '```' → logprob: -9.72650146484375
    10. ' else' → logprob: -10.22650146484375

Token 476: '           ' (ID: 352)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.1518992781639099
    2. '           ' → logprob: -2.4018993377685547
    3. ' else' → logprob: -3.0268993377685547
    4. 'elif' → logprob: -6.901899337768555
    5. '<|end|>' → logprob: -7.526899337768555
    6. '       ' → logprob: -8.151899337768555
    7. '```' → logprob: -10.776899337768555
    8. '	else' → logprob: -11.026899337768555
    9. '<|end|>' → logprob: -11.776899337768555
    10. ' elif' → logprob: -11.901899337768555

Token 477: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.14197774231433868
    2. ' else' → logprob: -2.1419777870178223
    3. '           ' → logprob: -4.891977787017822
    4. 'elif' → logprob: -5.391977787017822
    5. '       ' → logprob: -6.016977787017822
    6. ' elif' → logprob: -8.891977310180664
    7. '[' → logprob: -9.141977310180664
    8. '	else' → logprob: -9.891977310180664
    9. '<|end|>' → logprob: -10.016977310180664
    10. 'v' → logprob: -10.516977310180664

Token 478: ':' (ID: 25)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.38870275020599365
    2. ' v' → logprob: -1.1387027502059937
    3. '           ' → logprob: -6.388702869415283
    4. ':' → logprob: -9.763702392578125
    5. '	v' → logprob: -10.638702392578125
    6. '[v' → logprob: -11.013702392578125
    7. ',v' → logprob: -11.138702392578125
    8. '               ' → logprob: -11.763702392578125
    9. '(v' → logprob: -12.013702392578125
    10. ':v' → logprob: -12.763702392578125

Token 479: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.5761423707008362
    2. 'v' → logprob: -0.8261423707008362
    3. '           ' → logprob: -8.701142311096191
    4. '	v' → logprob: -10.326142311096191
    5. ',v' → logprob: -13.451142311096191
    6. '[v' → logprob: -13.701142311096191
    7. '(v' → logprob: -15.326142311096191
    8. '   ' → logprob: -15.826142311096191
    9. ')v' → logprob: -15.826142311096191
    10. '.v' → logprob: -16.076143264770508

Token 480: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02977861277759075
    2. ' =' → logprob: -3.5297787189483643
    3. '=v' → logprob: -10.529778480529785
    4. 'v' → logprob: -13.779778480529785
    5. ',' → logprob: -15.404778480529785
    6. ' v' → logprob: -16.9047794342041
    7. ' ' → logprob: -17.2797794342041
    8. '=
' → logprob: -17.2797794342041
    9. '[' → logprob: -17.2797794342041
    10. ',v' → logprob: -17.7797794342041

Token 481: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.011048170737922192
    2. ' v' → logprob: -4.511048316955566
    3. '	v' → logprob: -14.886048316955566
    4. '(v' → logprob: -17.63604736328125
    5. ')v' → logprob: -17.76104736328125
    6. '$v' → logprob: -18.88604736328125
    7. '<|end|>' → logprob: -19.13604736328125
    8. 'vq' → logprob: -19.38604736328125
    9. '_v' → logprob: -20.01104736328125
    10. '[v' → logprob: -20.26104736328125

Token 482: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.23917081207037e-05
    2. '0' → logprob: -10.125041961669922
    3. 'v' → logprob: -13.125041961669922
    4. '   ' → logprob: -16.750041961669922
    5. ' ' → logprob: -16.750041961669922
    6. ' [' → logprob: -17.000041961669922
    7. '```' → logprob: -17.000041961669922
    8. '(' → logprob: -17.750041961669922
    9. 's' → logprob: -17.875041961669922
    10. '1' → logprob: -17.875041961669922

Token 483: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.054500666621607e-06
    2. '[' → logprob: -13.12500286102295
    3. ' ' → logprob: -14.50000286102295
    4. 'v' → logprob: -15.37500286102295
    5. '۰' → logprob: -17.062503814697266
    6. '   ' → logprob: -17.625003814697266
    7. ')' → logprob: -17.687503814697266
    8. 'def' → logprob: -17.937503814697266
    9. '(' → logprob: -18.187503814697266
    10. ',' → logprob: -18.437503814697266

Token 484: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 485: '    
' (ID: 1944)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 486: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022916749119758606
    2. '    
' → logprob: -4.147916793823242
    3. 'def' → logprob: -5.022916793823242
    4. '        
' → logprob: -9.397916793823242
    5. '<|end|>' → logprob: -9.897916793823242
    6. ' def' → logprob: -10.022916793823242
    7. '_' → logprob: -10.147916793823242
    8. '
' → logprob: -11.272916793823242
    9. '   
' → logprob: -11.397916793823242
    10. ' 
' → logprob: -11.897916793823242

Token 487: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36954060196876526
    2. 'def' (adapté à ' def') → logprob: -1.2445405721664429
    3. '    
' → logprob: -4.119540691375732
    4. ' def' → logprob: -5.494540691375732
    5. '
' → logprob: -8.494540214538574
    6. '  ' → logprob: -9.494540214538574
    7. '    ' → logprob: -10.369540214538574
    8. '        
' → logprob: -10.369540214538574
    9. '  
' → logprob: -10.619540214538574
    10. '	def' → logprob: -10.619540214538574

Token 488: ' __' (ID: 2516)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.9125949144363403
    2. '_insert' → logprob: -1.2875949144363403
    3. '_' → logprob: -1.5375949144363403
    4. '_split' → logprob: -2.662594795227051
    5. '_find' → logprob: -4.662594795227051
    6. '_merge' → logprob: -5.537594795227051
    7. ' insert' → logprob: -5.662594795227051
    8. '_update' → logprob: -5.912594795227051
    9. '_key' → logprob: -5.912594795227051
    10. ' split' → logprob: -6.037594795227051

Token 489: 'repr' (ID: 67002)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.2862136662006378
    2. 'iter' → logprob: -1.5362136363983154
    3. 'repr' → logprob: -4.5362138748168945
    4. 'bool' → logprob: -4.7862138748168945
    5. 'len' → logprob: -5.0362138748168945
    6. 'i' → logprob: -5.7862138748168945
    7. 'del' → logprob: -6.4112138748168945
    8. 'next' → logprob: -6.5362138748168945
    9. 'str' → logprob: -6.6612138748168945
    10. 'contains' → logprob: -8.161213874816895

Token 490: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.002535948297008872
    2. '(self' → logprob: -6.752535820007324
    3. '(' → logprob: -7.627535820007324
    4. '__(
' → logprob: -7.627535820007324
    5. '__' → logprob: -8.377535820007324
    6. '__('' → logprob: -9.002535820007324
    7. '__("' → logprob: -11.002535820007324
    8. '__((' → logprob: -11.752535820007324
    9. '_(' → logprob: -12.002535820007324
    10. '__(*' → logprob: -13.127535820007324

Token 491: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.088346359931165e-07
    2. ')' → logprob: -14.250000953674316
    3. ' self' → logprob: -16.125
    4. '
' → logprob: -17.375
    5. '):
' → logprob: -19.125
    6. '   ' → logprob: -19.5
    7. '       ' → logprob: -19.625
    8. '(self' → logprob: -19.75
    9. 's' → logprob: -20.25
    10. '):' → logprob: -20.5

Token 492: '):' (ID: 3127)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.7009309530258179
    2. 'self' → logprob: -0.9509309530258179
    3. '(self' → logprob: -2.7009310722351074
    4. '__' → logprob: -3.8259310722351074
    5. ',' → logprob: -3.9509310722351074
    6. '):' → logprob: -6.200931072235107
    7. '):
' → logprob: -6.450931072235107
    8. '__('' → logprob: -6.700931072235107
    9. ')(' → logprob: -6.825931072235107
    10. '__,' → logprob: -7.075931072235107

Token 493: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013694333843886852
    2. ' return' → logprob: -4.3886942863464355
    3. 'return' → logprob: -6.8886942863464355
    4. ' if' → logprob: -10.013694763183594
    5. 'def' → logprob: -10.388694763183594
    6. ' self' → logprob: -10.513694763183594
    7. '
' → logprob: -11.138694763183594
    8. 'self' → logprob: -11.638694763183594
    9. ' def' → logprob: -11.763694763183594
    10. '   ' → logprob: -12.263694763183594

Token 494: ' visualize' (ID: 85009)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5164679884910583
    2. 'return' → logprob: -1.8914680480957031
    3. ' return' → logprob: -2.016468048095703
    4. ' if' → logprob: -2.766468048095703
    5. 'if' → logprob: -3.641468048095703
    6. 'def' → logprob: -3.641468048095703
    7. ' def' → logprob: -6.266468048095703
    8. '   ' → logprob: -6.516468048095703
    9. '    ' → logprob: -7.641468048095703
    10. '     ' → logprob: -9.641468048095703

Token 495: ' the' (ID: 290)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009912028908729553
    2. 'self' → logprob: -5.259912014007568
    3. '
' → logprob: -6.134912014007568
    4. '(self' → logprob: -6.759912014007568
    5. 'return' → logprob: -7.509912014007568
    6. '   ' → logprob: -7.884912014007568
    7. 'def' → logprob: -8.009912490844727
    8. ' self' → logprob: -10.134912490844727
    9. '(' → logprob: -10.634912490844727
    10. ' return' → logprob: -11.759912490844727

Token 496: ' tre' (ID: 4360)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.22386714816093445
    2. 'f' → logprob: -1.7238671779632568
    3. 'repr' → logprob: -4.598866939544678
    4. 'self' → logprob: -4.973866939544678
    5. 'def' → logprob: -6.348866939544678
    6. '"' → logprob: -6.848866939544678
    7. ''' → logprob: -7.473866939544678
    8. ' f' → logprob: -7.848866939544678
    9. ' root' → logprob: -7.973866939544678
    10. '   ' → logprob: -7.973866939544678

Token 497: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.011249176226556301
    2. 'e' → logprob: -4.51124906539917
    3. 'ep' → logprob: -9.761249542236328
    4. '   ' → logprob: -9.886249542236328
    5. 'es' → logprob: -10.261249542236328
    6. '```' → logprob: -11.511249542236328
    7. '_ap' → logprob: -11.761249542236328
    8. '__' → logprob: -11.886249542236328
    9. 'a' → logprob: -12.011249542236328
    10. '``' → logprob: -12.261249542236328

Token 498: '
' (ID: 198)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.13738404214382172
    2. '(' → logprob: -2.2623839378356934
    3. '(
' → logprob: -3.7623839378356934
    4. '       ' → logprob: -7.637383937835693
    5. '   ' → logprob: -8.012384414672852
    6. '
' → logprob: -9.137384414672852
    7. 'self' → logprob: -9.762384414672852
    8. ',' → logprob: -11.512384414672852
    9. '{' → logprob: -11.762384414672852
    10. '[' → logprob: -12.137384414672852

Token 499: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32957205176353455
    2. '   ' → logprob: -1.329572081565857
    3. ' def' → logprob: -5.0795722007751465
    4. '(self' → logprob: -6.0795722007751465
    5. '
' → logprob: -6.3295722007751465
    6. '(' → logprob: -6.4545722007751465
    7. 'def' → logprob: -6.5795722007751465
    8. '[' → logprob: -7.2045722007751465
    9. ' self' → logprob: -7.2045722007751465
    10. '    ' → logprob: -8.079571723937988

Token 500: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.23071876168251038
    2. 'if' (adapté à ' if') → logprob: -2.1057188510894775
    3. '       ' → logprob: -3.2307188510894775
    4. ' def' → logprob: -3.6057188510894775
    5. 'def' → logprob: -4.355718612670898
    6. ' return' → logprob: -5.730718612670898
    7. 'return' → logprob: -6.855718612670898
    8. ' lines' → logprob: -9.105718612670898
    9. ' s' → logprob: -9.355718612670898
    10. '   ' → logprob: -9.480718612670898

Token 501: ' not' (ID: 625)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5916680097579956
    2. 'self' → logprob: -0.8416680097579956
    3. ' not' → logprob: -4.216668128967285
    4. 'not' → logprob: -7.091668128967285
    5. '   ' → logprob: -11.216668128967285
    6. ' ' → logprob: -12.841668128967285
    7. '	self' → logprob: -12.966668128967285
    8. '       ' → logprob: -13.091668128967285
    9. '(self' → logprob: -13.716668128967285
    10. '    ' → logprob: -13.716668128967285

Token 502: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02054445445537567
    2. ' self' → logprob: -3.8955445289611816
    3. '(self' → logprob: -13.895544052124023
    4. '	self' → logprob: -14.645544052124023
    5. '   ' → logprob: -14.895544052124023
    6. ' ' → logprob: -15.020544052124023
    7. '
' → logprob: -15.270544052124023
    8. '[self' → logprob: -16.770544052124023
    9. ' hasattr' → logprob: -16.895544052124023
    10. '  ' → logprob: -17.020544052124023

Token 503: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.00011975488450843841
    2. 'root' → logprob: -9.250120162963867
    3. '.' → logprob: -11.125120162963867
    4. ' .' → logprob: -12.250120162963867
    5. '[' → logprob: -13.250120162963867
    6. '[root' → logprob: -14.000120162963867
    7. ' root' → logprob: -14.000120162963867
    8. '._' → logprob: -15.875120162963867
    9. '.
' → logprob: -15.875120162963867
    10. '_root' → logprob: -16.250120162963867

Token 504: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05045011267066002
    2. ':
' → logprob: -3.050450086593628
    3. ':return' → logprob: -6.300450325012207
    4. ' :' → logprob: -11.050450325012207
    5. '       ' → logprob: -12.550450325012207
    6. '   ' → logprob: -12.800450325012207
    7. 'return' → logprob: -14.300450325012207
    8. '           ' → logprob: -14.300450325012207
    9. ' or' → logprob: -14.300450325012207
    10. ':
' → logprob: -14.675450325012207

Token 505: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.051175590604543686
    2. 'return' → logprob: -3.051175594329834
    3. '       ' → logprob: -6.301175594329834
    4. '
' → logprob: -7.426175594329834
    5. '           ' → logprob: -9.176175117492676
    6. '	return' → logprob: -10.551175117492676
    7. '   ' → logprob: -11.676175117492676
    8. '
' → logprob: -12.301175117492676
    9. ' ' → logprob: -12.801175117492676
    10. ' 
' → logprob: -13.301175117492676

Token 506: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.13540606200695038
    2. '"' → logprob: -2.135406017303467
    3. ''<' → logprob: -5.385406017303467
    4. '"<' → logprob: -6.010406017303467
    5. ' '' → logprob: -7.635406017303467
    6. ''T' → logprob: -7.635406017303467
    7. ''Re' → logprob: -8.885406494140625
    8. '"'' → logprob: -9.260406494140625
    9. ' "' → logprob: -10.260406494140625
    10. ''S' → logprob: -10.635406494140625

Token 507: 'Tre' (ID: 61774)
  Prédit: 'Tre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tre' → logprob: -0.04955166578292847
    2. '<T' → logprob: -3.6745517253875732
    3. 'T' → logprob: -4.674551486968994
    4. '<' → logprob: -6.299551486968994
    5. ''' → logprob: -6.299551486968994
    6. '""' → logprob: -6.549551486968994
    7. '[]' → logprob: -6.924551486968994
    8. 'Empty' → logprob: -7.049551486968994
    9. '"' → logprob: -7.049551486968994
    10. 'None' → logprob: -7.299551486968994

Token 508: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -5.796184723294573e-06
    2. ' ap' → logprob: -13.250005722045898
    3. 'a' → logprob: -13.500005722045898
    4. 'Ap' → logprob: -14.625005722045898
    5. 'ап' → logprob: -14.875005722045898
    6. 'aps' → logprob: -15.375005722045898
    7. '```' → logprob: -15.375005722045898
    8. '
' → logprob: -15.500005722045898
    9. 'AP' → logprob: -15.500005722045898
    10. '	ap' → logprob: -15.750005722045898

Token 509: '([]' (ID: 18742)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01236778125166893
    2. ''' → logprob: -4.5123677253723145
    3. '[]' → logprob: -7.5123677253723145
    4. '([]' → logprob: -8.637368202209473
    5. '{}' → logprob: -9.012368202209473
    6. '(root' → logprob: -9.262368202209473
    7. '<' → logprob: -9.262368202209473
    8. '(' → logprob: -10.012368202209473
    9. '()`' → logprob: -10.137368202209473
    10. '('' → logprob: -10.262368202209473

Token 510: ')'
' (ID: 91968)
  Prédit: ')''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')'' → logprob: -0.16296319663524628
    2. ')'
' → logprob: -1.9129631519317627
    3. ')' → logprob: -5.912963390350342
    4. ''' → logprob: -11.412962913513184
    5. ' )' → logprob: -12.162962913513184
    6. ')"' → logprob: -12.912962913513184
    7. ''
' → logprob: -13.037962913513184
    8. '])' → logprob: -13.287962913513184
    9. ']'' → logprob: -13.412962913513184
    10. ']'
' → logprob: -13.662962913513184

Token 511: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011311669368296862
    2. '
' → logprob: -7.501131057739258
    3. ' return' → logprob: -9.126131057739258
    4. '   ' → logprob: -9.376131057739258
    5. 'return' → logprob: -9.626131057739258
    6. '	' → logprob: -9.751131057739258
    7. '        
' → logprob: -10.376131057739258
    8. '    ' → logprob: -10.501131057739258
    9. 'def' → logprob: -10.751131057739258
    10. '     ' → logprob: -11.001131057739258

Token 512: ' elements' (ID: 8632)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.0141948461532593
    2. '       ' → logprob: -1.0141948461532593
    3. 'def' → logprob: -1.7641948461532593
    4. 'queue' → logprob: -3.514194965362549
    5. 'nodes' → logprob: -3.889194965362549
    6. 'lines' → logprob: -4.264194965362549
    7. 'result' → logprob: -4.514194965362549
    8. 'from' → logprob: -4.764194965362549
    9. 'dq' → logprob: -5.639194965362549
    10. '        
' → logprob: -6.139194965362549

Token 513: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048826828598976135
    2. '=' → logprob: -3.0488269329071045
    3. ',' → logprob: -8.923827171325684
    4. '=[]' → logprob: -9.298827171325684
    5. '=[]
' → logprob: -12.548827171325684
    6. '=[' → logprob: -12.798827171325684
    7. 's' → logprob: -12.798827171325684
    8. ' =[' → logprob: -14.298827171325684
    9. '[]' → logprob: -14.548827171325684
    10. 'def' → logprob: -14.673827171325684

Token 514: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.08326101303100586
    2. '[]' → logprob: -2.583261013031006
    3. ' []
' → logprob: -6.208261013031006
    4. 'deque' → logprob: -6.833261013031006
    5. '[' → logprob: -7.333261013031006
    6. ' []' → logprob: -7.708261013031006
    7. 'list' → logprob: -9.458261489868164
    8. '[]

' → logprob: -11.083261489868164
    9. ' deque' → logprob: -11.208261489868164
    10. ''' → logprob: -11.333261489868164

Token 515: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013135707704350352
    2. ' queue' → logprob: -7.87631368637085
    3. 'def' → logprob: -8.126313209533691
    4. '
' → logprob: -8.376313209533691
    5. '   ' → logprob: -9.376313209533691
    6. 'queue' → logprob: -10.001313209533691
    7. 'v' → logprob: -10.001313209533691
    8. ' v' → logprob: -10.001313209533691
    9. ' def' → logprob: -10.126313209533691
    10. '        
' → logprob: -10.501313209533691

Token 516: ' q' (ID: 2335)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06632964313030243
    2. ' queue' → logprob: -3.6913297176361084
    3. 'def' → logprob: -3.8163297176361084
    4. 'q' (adapté à ' q') → logprob: -5.441329479217529
    5. 'queue' → logprob: -5.441329479217529
    6. ' q' → logprob: -5.566329479217529
    7. ' stack' → logprob: -6.566329479217529
    8. ' def' → logprob: -6.691329479217529
    9. '   ' → logprob: -7.316329479217529
    10. 'stack' → logprob: -7.316329479217529

Token 517: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196993216872215
    2. ' =' → logprob: -2.8119699954986572
    3. ',' → logprob: -14.061969757080078
    4. '=q' → logprob: -14.311969757080078
    5. '=[' → logprob: -15.311969757080078
    6. 'deque' → logprob: -16.061969757080078
    7. '=[]' → logprob: -16.186969757080078
    8. ' ' → logprob: -16.561969757080078
    9. '=
' → logprob: -16.811969757080078
    10. '.append' → logprob: -16.936969757080078

Token 518: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -9.984787902794778e-05
    2. ' deque' → logprob: -9.250100135803223
    3. '[(' → logprob: -12.625100135803223
    4. '   ' → logprob: -15.375100135803223
    5. '[' → logprob: -17.500099182128906
    6. 'Deque' → logprob: -18.625099182128906
    7. 'collections' → logprob: -18.875099182128906
    8. '	de' → logprob: -19.375099182128906
    9. 'dq' → logprob: -19.375099182128906
    10. 'de' → logprob: -19.500099182128906

Token 519: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.2519838511943817
    2. '([(' → logprob: -1.501983880996704
    3. '()
' → logprob: -10.626983642578125
    4. '[(' → logprob: -11.001983642578125
    5. '()' → logprob: -11.251983642578125
    6. '[' → logprob: -14.876983642578125
    7. '((' → logprob: -15.876983642578125
    8. '(' → logprob: -16.001983642578125
    9. '([
' → logprob: -16.001983642578125
    10. '
' → logprob: -17.001983642578125

Token 520: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014214275404810905
    2. '(self' → logprob: -4.264214038848877
    3. '(' → logprob: -10.514214515686035
    4. ' self' → logprob: -11.014214515686035
    5. '[self' → logprob: -12.389214515686035
    6. ' (' → logprob: -14.139214515686035
    7. 'deep' → logprob: -14.139214515686035
    8. '((' → logprob: -14.514214515686035
    9. '(de' → logprob: -15.389214515686035
    10. '[' → logprob: -15.514214515686035

Token 521: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.3630031645298004
    2. 'self' → logprob: -1.988003134727478
    3. 'root' → logprob: -2.2380032539367676
    4. '(self' → logprob: -2.8630032539367676
    5. '(' → logprob: -6.238003253936768
    6. '(root' → logprob: -6.613003253936768
    7. '([' → logprob: -9.36300277709961
    8. '((' → logprob: -9.48800277709961
    9. ' self' → logprob: -10.36300277709961
    10. '[' → logprob: -10.36300277709961

Token 522: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.3162901699542999
    2. '])
' → logprob: -1.3162901401519775
    3. '[' → logprob: -5.816290378570557
    4. '])
' → logprob: -11.441289901733398
    5. '])

' → logprob: -11.691289901733398
    6. '()])
' → logprob: -11.941289901733398
    7. ' ])' → logprob: -12.691289901733398
    8. ']);' → logprob: -12.816289901733398
    9. ' ])
' → logprob: -12.816289901733398
    10. ',' → logprob: -13.191289901733398

Token 523: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048334795981645584
    2. '	while' → logprob: -3.173334836959839
    3. ' while' → logprob: -5.92333459854126
    4. '   ' → logprob: -7.04833459854126
    5. '<|end|>' → logprob: -7.29833459854126
    6. 'while' → logprob: -8.048335075378418
    7. '
' → logprob: -8.048335075378418
    8. '<|end|>' → logprob: -9.548335075378418
    9. ' ' → logprob: -9.673335075378418
    10. '	' → logprob: -9.798335075378418

Token 524: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.1926635354757309
    2. '       ' → logprob: -2.4426634311676025
    3. ' while' → logprob: -2.4426634311676025
    4. '	while' → logprob: -6.817663669586182
    5. '
' → logprob: -8.442663192749023
    6. '   ' → logprob: -9.692663192749023
    7. '	' → logprob: -11.817663192749023
    8. 'While' → logprob: -14.067663192749023
    9. '	   ' → logprob: -14.442663192749023
    10. '```' → logprob: -14.442663192749023

Token 525: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -6.182190554682165e-05
    2. ' q' → logprob: -9.750061988830566
    3. 'len' → logprob: -12.625061988830566
    4. '   ' → logprob: -16.12506103515625
    5. ' ' → logprob: -16.75006103515625
    6. '	q' → logprob: -17.50006103515625
    7. '  ' → logprob: -18.00006103515625
    8. 'True' → logprob: -18.62506103515625
    9. '(q' → logprob: -19.12506103515625
    10. ' len' → logprob: -19.25006103515625

Token 526: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005314277950674295
    2. ':
' → logprob: -5.755314350128174
    3. 'and' → logprob: -7.130314350128174
    4. '[' → logprob: -7.505314350128174
    5. '):' → logprob: -9.130313873291016
    6. ' and' → logprob: -9.255313873291016
    7. '.pop' → logprob: -9.505313873291016
    8. ':not' → logprob: -9.505313873291016
    9. '<|end|>' → logprob: -10.130313873291016
    10. '>:' → logprob: -10.380313873291016

Token 527: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3580051362514496
    2. 'v' → logprob: -1.233005166053772
    3. ' v' → logprob: -5.483005046844482
    4. '	       ' → logprob: -5.858005046844482
    5. '	   ' → logprob: -7.483005046844482
    6. '		' → logprob: -7.858005046844482
    7. '   ' → logprob: -7.983005046844482
    8. 'vq' → logprob: -8.10800552368164
    9. '```' → logprob: -8.23300552368164
    10. '	v' → logprob: -8.73300552368164

Token 528: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.0003357006062287837
    2. ' v' → logprob: -8.000335693359375
    3. '           ' → logprob: -16.000335693359375
    4. '   ' → logprob: -16.875335693359375
    5. 'node' → logprob: -17.125335693359375
    6. '	v' → logprob: -17.500335693359375
    7. '
' → logprob: -19.125335693359375
    8. 'vq' → logprob: -19.125335693359375
    9. '            
' → logprob: -19.625335693359375
    10. '```' → logprob: -19.875335693359375

Token 529: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10032140463590622
    2. ' =' → logprob: -2.3503212928771973
    3. '=v' → logprob: -9.225321769714355
    4. '=q' → logprob: -11.600321769714355
    5. '=
' → logprob: -12.850321769714355
    6. 'v' → logprob: -12.975321769714355
    7. ' ' → logprob: -14.350321769714355
    8. ' v' → logprob: -14.475321769714355
    9. ',' → logprob: -15.225321769714355
    10. ' =
' → logprob: -15.850321769714355

Token 530: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0004306692280806601
    2. ' q' → logprob: -7.750430583953857
    3. 'v' → logprob: -17.000431060791016
    4. '	q' → logprob: -19.000431060791016
    5. '[q' → logprob: -20.000431060791016
    6. '   ' → logprob: -20.375431060791016
    7. '_q' → logprob: -20.500431060791016
    8. '
' → logprob: -21.000431060791016
    9. ' ' → logprob: -21.000431060791016
    10. 'None' → logprob: -21.500431060791016

Token 531: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -3.607391408877447e-05
    2. '.pop' → logprob: -10.375036239624023
    3. '.' → logprob: -13.250036239624023
    4. 'opleft' → logprob: -13.750036239624023
    5. '   ' → logprob: -14.375036239624023
    6. ' .' → logprob: -14.625036239624023
    7. '=' → logprob: -15.000036239624023
    8. 'p' → logprob: -15.375036239624023
    9. '[' → logprob: -15.625036239624023
    10. '.append' → logprob: -16.750036239624023

Token 532: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.0009326597792096436
    2. 'op' → logprob: -7.000932693481445
    3. 'ople' → logprob: -10.875932693481445
    4. 'opl' → logprob: -13.125932693481445
    5. 'append' → logprob: -16.250932693481445
    6. 'opup' → logprob: -16.500932693481445
    7. '```' → logprob: -16.750932693481445
    8. 'opf' → logprob: -17.625932693481445
    9. 'oplevel' → logprob: -18.000932693481445
    10. 'opy' → logprob: -18.125932693481445

Token 533: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14216256141662598
    2. '
' → logprob: -2.142162561416626
    3. ')
' → logprob: -4.642162322998047
    4. '            
' → logprob: -6.267162322998047
    5. ')' → logprob: -6.517162322998047
    6. '<|end|>' → logprob: -7.642162322998047
    7. '       ' → logprob: -8.267162322998047
    8. 'v' → logprob: -8.517162322998047
    9. '<|end|>' → logprob: -8.767162322998047
    10. ',' → logprob: -9.017162322998047

Token 534: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05014697462320328
    2. '       ' → logprob: -3.30014705657959
    3. ' if' → logprob: -4.80014705657959
    4. 'if' → logprob: -5.80014705657959
    5. '   ' → logprob: -8.42514705657959
    6. '
' → logprob: -8.55014705657959
    7. 'elements' → logprob: -9.80014705657959
    8. '```' → logprob: -10.05014705657959
    9. '        
' → logprob: -10.30014705657959
    10. '	       ' → logprob: -10.30014705657959

Token 535: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04971320554614067
    2. '           ' → logprob: -3.049713134765625
    3. ' if' → logprob: -7.424713134765625
    4. 'for' → logprob: -8.299713134765625
    5. 'elements' → logprob: -8.299713134765625
    6. '       ' → logprob: -10.674713134765625
    7. '   ' → logprob: -12.424713134765625
    8. '
' → logprob: -14.174713134765625
    9. '_elements' → logprob: -14.424713134765625
    10. ' elements' → logprob: -14.924713134765625

Token 536: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -7.779520092299208e-05
    2. 'not' → logprob: -10.125078201293945
    3. ' v' → logprob: -10.250078201293945
    4. '   ' → logprob: -13.625078201293945
    5. ' not' → logprob: -14.375078201293945
    6. ' ' → logprob: -15.375078201293945
    7. '  ' → logprob: -16.500078201293945
    8. '
' → logprob: -16.750078201293945
    9. '	v' → logprob: -17.250078201293945
    10. '```' → logprob: -17.375078201293945

Token 537: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.08721163123846054
    2. '[' → logprob: -2.7122116088867188
    3. ':' → logprob: -4.587211608886719
    4. 'is' → logprob: -5.212211608886719
    5. '<|end|>' → logprob: -6.587211608886719
    6. ':
' → logprob: -9.712211608886719
    7. '<|end|>' → logprob: -11.212211608886719
    8. ')' → logprob: -11.837211608886719
    9. '```' → logprob: -11.962211608886719
    10. '==' → logprob: -12.212211608886719

Token 538: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.2100421041250229
    2. 'not' → logprob: -1.710042119026184
    3. ' not' → logprob: -4.9600419998168945
    4. ' None' → logprob: -6.4600419998168945
    5. '   ' → logprob: -11.335041999816895
    6. 'none' → logprob: -14.085041999816895
    7. '0' → logprob: -14.210041999816895
    8. '(None' → logprob: -14.960041999816895
    9. 'Not' → logprob: -15.585041999816895
    10. '	not' → logprob: -16.21004295349121

Token 539: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11917872726917267
    2. ':
' → logprob: -2.2441787719726562
    3. '               ' → logprob: -5.744178771972656
    4. ':return' → logprob: -6.869178771972656
    5. ' or' → logprob: -7.119178771972656
    6. '           ' → logprob: -7.244178771972656
    7. 'continue' → logprob: -8.369178771972656
    8. ' continue' → logprob: -8.619178771972656
    9. '):
' → logprob: -10.744178771972656
    10. ' :' → logprob: -10.744178771972656

Token 540: ' elements' (ID: 8632)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6091024279594421
    2. 'elements' → logprob: -1.609102487564087
    3. ' elements' → logprob: -1.859102487564087
    4. '           ' → logprob: -3.109102487564087
    5. ' continue' → logprob: -3.109102487564087
    6. 'continue' → logprob: -4.984102249145508
    7. '(elements' → logprob: -6.734102249145508
    8. ',' → logprob: -7.359102249145508
    9. '.elements' → logprob: -7.484102249145508
    10. '
' → logprob: -8.234102249145508

Token 541: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0001463299704482779
    2. '.' → logprob: -8.87514591217041
    3. 'append' → logprob: -12.50014591217041
    4. ' .' → logprob: -13.75014591217041
    5. '.extend' → logprob: -14.00014591217041
    6. ' append' → logprob: -15.62514591217041
    7. '.app' → logprob: -15.75014591217041
    8. '+=' → logprob: -15.75014591217041
    9. '           ' → logprob: -16.000146865844727
    10. 'Append' → logprob: -16.375146865844727

Token 542: '(v' (ID: 6932)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6771813035011292
    2. 'None' → logprob: -1.4271812438964844
    3. '"' → logprob: -1.5521812438964844
    4. ' None' → logprob: -3.8021812438964844
    5. ' '' → logprob: -4.802181243896484
    6. '(None' → logprob: -5.802181243896484
    7. ''#' → logprob: -6.052181243896484
    8. '   ' → logprob: -6.677181243896484
    9. ' "' → logprob: -6.927181243896484
    10. ''.' → logprob: -7.427181243896484

Token 543: ');' (ID: 2245)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1630069464445114
    2. ')
' → logprob: -2.7880070209503174
    3. ');' → logprob: -3.0380070209503174
    4. ';' → logprob: -3.5380070209503174
    5. '           ' → logprob: -4.538006782531738
    6. '               ' → logprob: -8.163006782531738
    7. ');
' → logprob: -8.788006782531738
    8. ',' → logprob: -8.913006782531738
    9. 'else' → logprob: -9.038006782531738
    10. '
' → logprob: -9.538006782531738

Token 544: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.4091528058052063
    2. '               ' → logprob: -1.6591527462005615
    3. '           ' → logprob: -2.4091527462005615
    4. ' continue' → logprob: -2.9091527462005615
    5. 'else' → logprob: -7.409152984619141
    6. ' else' → logprob: -9.40915298461914
    7. '                   ' → logprob: -9.40915298461914
    8. 'contin' → logprob: -9.78415298461914
    9. '   ' → logprob: -10.15915298461914
    10. '```' → logprob: -10.40915298461914

Token 545: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002843510126695037
    2. '       ' → logprob: -6.377843379974365
    3. '
' → logprob: -7.627843379974365
    4. '   ' → logprob: -8.252843856811523
    5. '            
' → logprob: -9.377843856811523
    6. '```' → logprob: -9.502843856811523
    7. '    
' → logprob: -9.627843856811523
    8. '        
' → logprob: -10.127843856811523
    9. '<|end|>' → logprob: -10.252843856811523
    10. 'q' → logprob: -10.502843856811523

Token 546: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009435527957975864
    2. '       ' → logprob: -4.759435653686523
    3. '   ' → logprob: -8.384435653686523
    4. 'q' → logprob: -8.759435653686523
    5. '<|end|>' → logprob: -8.884435653686523
    6. '```' → logprob: -9.759435653686523
    7. '
' → logprob: -9.884435653686523
    8. '        
' → logprob: -10.384435653686523
    9. '            
' → logprob: -10.509435653686523
    10. '[' → logprob: -10.884435653686523

Token 547: ' elements' (ID: 8632)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elements' (adapté à ' elements') → logprob: -0.3330489695072174
    2. '       ' → logprob: -1.708048939704895
    3. '           ' → logprob: -3.2080490589141846
    4. ' elements' → logprob: -3.3330490589141846
    5. 'q' → logprob: -3.9580490589141846
    6. '   ' → logprob: -5.3330488204956055
    7. ' q' → logprob: -6.8330488204956055
    8. '```' → logprob: -8.333048820495605
    9. 'if' → logprob: -9.208048820495605
    10. 'for' → logprob: -9.833048820495605

Token 548: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0435553640127182
    2. '.extend' → logprob: -3.54355525970459
    3. '.' → logprob: -4.29355525970459
    4. '+=' → logprob: -10.16855525970459
    5. ' +=' → logprob: -12.54355525970459
    6. ' .' → logprob: -12.91855525970459
    7. '+' → logprob: -12.91855525970459
    8. 'append' → logprob: -13.04355525970459
    9. ',' → logprob: -13.41855525970459
    10. '[' → logprob: -13.79355525970459

Token 549: '((' (ID: 2054)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.28579822182655334
    2. '(f' → logprob: -2.4107983112335205
    3. '(str' → logprob: -2.4107983112335205
    4. '((' → logprob: -3.2857983112335205
    5. 'v' → logprob: -3.7857983112335205
    6. 'str' → logprob: -5.410798072814941
    7. 'f' → logprob: -6.035798072814941
    8. '(' → logprob: -7.160798072814941
    9. 'repr' → logprob: -8.035798072814941
    10. '(re' → logprob: -8.410798072814941

Token 550: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00010759611177491024
    2. '(v' → logprob: -9.875107765197754
    3. ' v' → logprob: -10.875107765197754
    4. 'len' → logprob: -11.625107765197754
    5. '
' → logprob: -12.250107765197754
    6. '[v' → logprob: -12.625107765197754
    7. '(' → logprob: -13.000107765197754
    8. '*v' → logprob: -13.000107765197754
    9. 'tuple' → logprob: -13.125107765197754
    10. '   ' → logprob: -13.125107765197754

Token 551: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.0339031834737398e-05
    2. '0' → logprob: -11.375020027160645
    3. ',' → logprob: -12.875020027160645
    4. '[
' → logprob: -13.875020027160645
    5. '#' → logprob: -14.125020027160645
    6. '
' → logprob: -14.625020027160645
    7. '   ' → logprob: -14.625020027160645
    8. ' [' → logprob: -14.750020027160645
    9. '))' → logprob: -14.875020027160645
    10. ')' → logprob: -14.875020027160645

Token 552: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3487519919872284
    2. '0' → logprob: -1.2237520217895508
    3. '4' → logprob: -8.72375202178955
    4. '1' → logprob: -9.97375202178955
    5. '[' → logprob: -10.22375202178955
    6. ' ' → logprob: -11.41125202178955
    7. '
' → logprob: -11.53625202178955
    8. '   ' → logprob: -11.53625202178955
    9. '3' → logprob: -12.16125202178955
    10. '```' → logprob: -12.72375202178955

Token 553: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005675395485013723
    2. ',v' → logprob: -6.255675315856934
    3. ']))' → logprob: -6.255675315856934
    4. '))' → logprob: -7.255675315856934
    5. ',
' → logprob: -7.380675315856934
    6. ' ,' → logprob: -8.880675315856934
    7. ')' → logprob: -9.130675315856934
    8. 'v' → logprob: -9.630675315856934
    9. ']' → logprob: -10.130675315856934
    10. '])' → logprob: -10.505675315856934

Token 554: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0034364922903478146
    2. 'round' → logprob: -6.37843656539917
    3. ' v' → logprob: -6.62843656539917
    4. 'len' → logprob: -9.003436088562012
    5. '(v' → logprob: -9.253436088562012
    6. '[v' → logprob: -10.253436088562012
    7. '[' → logprob: -10.378436088562012
    8. '(' → logprob: -10.753436088562012
    9. 'float' → logprob: -11.003436088562012
    10. '(round' → logprob: -11.128436088562012

Token 555: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.027548806741833687
    2. ',' → logprob: -4.027548789978027
    3. '))' → logprob: -5.527548789978027
    4. ' is' → logprob: -6.402548789978027
    5. '
' → logprob: -7.402548789978027
    6. ' ,' → logprob: -7.652548789978027
    7. '0' → logprob: -7.902548789978027
    8. ',
' → logprob: -8.277548789978027
    9. '])' → logprob: -8.402548789978027
    10. ',None' → logprob: -8.527548789978027

Token 556: '3' (ID: 18)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.21024306118488312
    2. '4' → logprob: -2.585242986679077
    3. 'v' → logprob: -3.460242986679077
    4. '0' → logprob: -3.585242986679077
    5. '[' → logprob: -3.960242986679077
    6. '3' → logprob: -4.335243225097656
    7. '(' → logprob: -4.835243225097656
    8. '1' → logprob: -5.335243225097656
    9. 'priority' → logprob: -5.335243225097656
    10. 'random' → logprob: -5.960243225097656

Token 557: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4268212616443634
    2. ',' → logprob: -1.176821231842041
    3. '))
' → logprob: -3.426821231842041
    4. ',v' → logprob: -5.926821231842041
    5. ',q' → logprob: -6.301821231842041
    6. ']))' → logprob: -7.301821231842041
    7. ')' → logprob: -7.801821231842041
    8. ' ))' → logprob: -8.1768217086792
    9. '])' → logprob: -8.5518217086792
    10. ' ,' → logprob: -8.8018217086792

Token 558: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.084206375409849e-05
    2. '
' → logprob: -10.625041007995605
    3. 'q' → logprob: -12.375041007995605
    4. 'v' → logprob: -13.125041007995605
    5. '```' → logprob: -13.125041007995605
    6. '       ' → logprob: -13.500041007995605
    7. '            
' → logprob: -13.625041007995605
    8. ',' → logprob: -13.625041007995605
    9. 'if' → logprob: -14.000041007995605
    10. '   ' → logprob: -14.000041007995605

Token 559: ' q' (ID: 2335)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007556220982223749
    2. 'q' (adapté à ' q') → logprob: -5.632556438446045
    3. 'if' → logprob: -6.507556438446045
    4. ' q' → logprob: -6.632556438446045
    5. ' if' → logprob: -6.882556438446045
    6. 'for' → logprob: -9.382555961608887
    7. ' for' → logprob: -10.632555961608887
    8. 'v' → logprob: -13.257555961608887
    9. '
' → logprob: -13.882555961608887
    10. '            
' → logprob: -14.632555961608887

Token 560: '.append' (ID: 3709)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.3942447006702423
    2. '.append' → logprob: -1.14424467086792
    3. 'append' → logprob: -5.26924467086792
    4. 'extend' → logprob: -6.14424467086792
    5. '.' → logprob: -10.269245147705078
    6. 'extends' → logprob: -12.019245147705078
    7. ' extends' → logprob: -12.644245147705078
    8. ' append' → logprob: -13.019245147705078
    9. '
' → logprob: -13.394245147705078
    10. ' extend' → logprob: -14.269245147705078

Token 561: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -2.2200749754119897e-06
    2. 'v' → logprob: -13.125001907348633
    3. '(' → logprob: -15.500001907348633
    4. 'left' → logprob: -17.875001907348633
    5. ' (' → logprob: -18.250001907348633
    6. '((' → logprob: -18.375001907348633
    7. ' v' → logprob: -18.375001907348633
    8. '(
' → logprob: -19.375001907348633
    9. '	v' → logprob: -19.750001907348633
    10. '[v' → logprob: -20.000001907348633

Token 562: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.404745439183898e-05
    2. '0' → logprob: -10.87503433227539
    3. '(' → logprob: -11.37503433227539
    4. '(v' → logprob: -13.62503433227539
    5. '[v' → logprob: -14.00003433227539
    6. 'v' → logprob: -14.37503433227539
    7. '   ' → logprob: -14.50003433227539
    8. '[
' → logprob: -16.50003433227539
    9. ' [' → logprob: -16.62503433227539
    10. '()[' → logprob: -16.75003433227539

Token 563: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.191489642835222e-05
    2. '1' → logprob: -10.375041961669922
    3. ' ' → logprob: -11.750041961669922
    4. '   ' → logprob: -13.625041961669922
    5. '[' → logprob: -14.125041961669922
    6. '2' → logprob: -15.750041961669922
    7. 'v' → logprob: -16.062541961669922
    8. '```' → logprob: -16.125041961669922
    9. '
' → logprob: -16.250041961669922
    10. '(' → logprob: -16.750041961669922

Token 564: ']);' (ID: 34389)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2519676387310028
    2. ')' → logprob: -1.5019676685333252
    3. ')
' → logprob: -10.376967430114746
    4. ');' → logprob: -12.751967430114746
    5. ')

' → logprob: -13.626967430114746
    6. '),' → logprob: -13.751967430114746
    7. ')v' → logprob: -14.126967430114746
    8. '           ' → logprob: -15.126967430114746
    9. '       ' → logprob: -15.376967430114746
    10. ');
' → logprob: -15.376967430114746

Token 565: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.39546480774879456
    2. ' q' → logprob: -1.1454647779464722
    3. '           ' → logprob: -4.770464897155762
    4. '	q' → logprob: -10.270464897155762
    5. '       ' → logprob: -10.645464897155762
    6. '   ' → logprob: -12.020464897155762
    7. '            ' → logprob: -12.645464897155762
    8. 'v' → logprob: -12.770464897155762
    9. '```' → logprob: -13.395464897155762
    10. '        ' → logprob: -13.520464897155762

Token 566: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005170515505596995
    2. 'append' → logprob: -7.625516891479492
    3. '.' → logprob: -10.625516891479492
    4. 'app' → logprob: -12.625516891479492
    5. '.app' → logprob: -14.750516891479492
    6. 'appen' → logprob: -14.750516891479492
    7. '	append' → logprob: -15.875516891479492
    8. 'Append' → logprob: -16.500516891479492
    9. '_append' → logprob: -16.625516891479492
    10. ' append' → logprob: -16.875516891479492

Token 567: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -3.054500666621607e-06
    2. 'v' → logprob: -12.75000286102295
    3. '(' → logprob: -18.000003814697266
    4. '(
' → logprob: -20.125003814697266
    5. ' v' → logprob: -20.500003814697266
    6. '[v' → logprob: -20.750003814697266
    7. '	v' → logprob: -20.750003814697266
    8. '   ' → logprob: -21.250003814697266
    9. '((' → logprob: -21.625003814697266
    10. ' (' → logprob: -21.875003814697266

Token 568: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0019288709154352546
    2. '1' → logprob: -6.251928806304932
    3. '   ' → logprob: -15.87692928314209
    4. '```' → logprob: -16.626928329467773
    5. ' ' → logprob: -17.251928329467773
    6. '[
' → logprob: -17.501928329467773
    7. ' [' → logprob: -17.876928329467773
    8. ')' → logprob: -18.251928329467773
    9. '2' → logprob: -19.001928329467773
    10. ']' → logprob: -19.251928329467773

Token 569: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -13.750001907348633
    3. ' ' → logprob: -13.875001907348633
    4. '   ' → logprob: -16.000001907348633
    5. '```' → logprob: -17.500001907348633
    6. ')' → logprob: -18.000001907348633
    7. '  ' → logprob: -18.125001907348633
    8. '])' → logprob: -18.500001907348633
    9. '0' → logprob: -18.500001907348633
    10. '2' → logprob: -18.625001907348633

Token 570: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006781688891351223
    2. '])' → logprob: -5.006781578063965
    3. ')]' → logprob: -10.381781578063965
    4. ']' → logprob: -11.631781578063965
    5. ')
' → logprob: -11.756781578063965
    6. ')])' → logprob: -12.006781578063965
    7. ' )' → logprob: -12.506781578063965
    8. '))' → logprob: -12.756781578063965
    9. '<|end|>' → logprob: -12.881781578063965
    10. '       ' → logprob: -14.756781578063965

Token 571: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08388186991214752
    2. '   ' → logprob: -2.7088818550109863
    3. '<|end|>' → logprob: -4.583881855010986
    4. ')' → logprob: -6.708881855010986
    5. 'def' → logprob: -6.708881855010986
    6. 'return' → logprob: -7.833881855010986
    7. '```' → logprob: -8.708882331848145
    8. ' return' → logprob: -9.458882331848145
    9. '<|end|>' → logprob: -9.708882331848145
    10. '        
' → logprob: -9.708882331848145

Token 572: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3073134422302246
    2. ' return' → logprob: -1.8073134422302246
    3. '       ' → logprob: -2.3073134422302246
    4. '
' → logprob: -7.057313442230225
    5. '	return' → logprob: -10.307313919067383
    6. ')' → logprob: -10.807313919067383
    7. '   ' → logprob: -11.432313919067383
    8. '        
' → logprob: -12.057313919067383
    9. ' 
' → logprob: -12.432313919067383
    10. '```' → logprob: -12.557313919067383

Token 573: ' '' (ID: 461)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.7330209016799927
    2. ' f' → logprob: -1.2330209016799927
    3. '"' → logprob: -2.233020782470703
    4. ''' → logprob: -2.733020782470703
    5. ''T' → logprob: -2.983020782470703
    6. ' '' → logprob: -6.233020782470703
    7. ''f' → logprob: -6.233020782470703
    8. '"T' → logprob: -7.233020782470703
    9. ' "' → logprob: -7.608020782470703
    10. '
' → logprob: -10.483020782470703

Token 574: 'Tre' (ID: 61774)
  Prédit: 'Tre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tre' → logprob: -0.035222895443439484
    2. 'f' → logprob: -4.035223007202148
    3. ''T' → logprob: -4.535223007202148
    4. ''' → logprob: -5.160223007202148
    5. '"' → logprob: -7.910223007202148
    6. '\'' → logprob: -11.035223007202148
    7. 'Treas' → logprob: -11.410223007202148
    8. ' Tre' → logprob: -11.660223007202148
    9. ''f' → logprob: -11.660223007202148
    10. '{}' → logprob: -11.910223007202148

Token 575: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -9.088346359931165e-07
    2. 'ап' → logprob: -15.625000953674316
    3. ' ap' → logprob: -15.750000953674316
    4. 'p' → logprob: -16.0
    5. '	ap' → logprob: -16.5
    6. '(ap' → logprob: -16.625
    7. 'a' → logprob: -16.875
    8. 'Ap' → logprob: -17.0
    9. '```' → logprob: -17.375
    10. ''ap' → logprob: -17.875

Token 576: '({' (ID: 3972)
  Prédit: '([''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(['' → logprob: -0.10541184991598129
    2. '('' → logprob: -2.3554117679595947
    3. '([' → logprob: -5.605412006378174
    4. '['' → logprob: -7.355412006378174
    5. ''' → logprob: -7.730412006378174
    6. '([]' → logprob: -9.105411529541016
    7. '(' → logprob: -9.230411529541016
    8. '([\' → logprob: -9.605411529541016
    9. '(('' → logprob: -9.980411529541016
    10. '([...' → logprob: -10.355411529541016

Token 577: '})' (ID: 9263)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.0040343524888157845
    2. '[' → logprob: -5.754034519195557
    3. 'repr' → logprob: -7.504034519195557
    4. '['' → logprob: -9.004034042358398
    5. ''' → logprob: -9.879034042358398
    6. '})' → logprob: -10.004034042358398
    7. '.elements' → logprob: -11.254034042358398
    8. 'list' → logprob: -11.504034042358398
    9. ' elements' → logprob: -11.629034042358398
    10. '}' → logprob: -11.879034042358398

Token 578: ''.' (ID: 6120)
  Prédit: '(elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(elements' → logprob: -0.006409104913473129
    2. ''' → logprob: -5.256409168243408
    3. '{}'.' → logprob: -8.00640869140625
    4. 'elements' → logprob: -8.13140869140625
    5. '('' → logprob: -8.75640869140625
    6. ''.' → logprob: -9.00640869140625
    7. '.format' → logprob: -9.88140869140625
    8. '('.' → logprob: -10.25640869140625
    9. '({' → logprob: -10.25640869140625
    10. '(format' → logprob: -10.38140869140625

Token 579: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.033983487635850906
    2. 'str' → logprob: -4.1589837074279785
    3. 'elements' → logprob: -4.2839837074279785
    4. 'repr' → logprob: -5.5339837074279785
    5. '```' → logprob: -10.90898323059082
    6. '__' → logprob: -11.28398323059082
    7. 'replace' → logprob: -12.28398323059082
    8. 'strip' → logprob: -13.03398323059082
    9. 'rep' → logprob: -13.40898323059082
    10. ' format' → logprob: -13.78398323059082

Token 580: '(str' (ID: 7946)
  Prédit: '(elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(elements' → logprob: -0.5759977102279663
    2. 'elements' → logprob: -0.8259977102279663
    3. ' elements' → logprob: -9.950997352600098
    4. 'repr' → logprob: -11.575997352600098
    5. '(re' → logprob: -14.325997352600098
    6. 'ele' → logprob: -16.200998306274414
    7. '.elements' → logprob: -16.450998306274414
    8. 'str' → logprob: -16.450998306274414
    9. '_elements' → logprob: -16.575998306274414
    10. 're' → logprob: -16.700998306274414

Token 581: '(elements' (ID: 120313)
  Prédit: '(elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(elements' → logprob: -8.578184497309849e-05
    2. 'elements' → logprob: -9.375085830688477
    3. '([' → logprob: -15.000085830688477
    4. ')' → logprob: -15.875085830688477
    5. '(e' → logprob: -16.000085830688477
    6. ')(' → logprob: -16.375085830688477
    7. '(' → logprob: -16.500085830688477
    8. ' elements' → logprob: -16.625085830688477
    9. '```' → logprob: -17.000085830688477
    10. ' (' → logprob: -17.625085830688477

Token 582: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5764857530593872
    2. ')' → logprob: -0.8264857530593872
    3. ').' → logprob: -7.576485633850098
    4. ')))' → logprob: -11.951485633850098
    5. '[' → logprob: -12.076485633850098
    6. '()))' → logprob: -12.451485633850098
    7. ')[' → logprob: -12.951485633850098
    8. '[:-' → logprob: -12.951485633850098
    9. '])' → logprob: -13.201485633850098
    10. '   ' → logprob: -13.326485633850098

Token 583: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05961896851658821
    2. '    
' → logprob: -3.0596189498901367
    3. '<|end|>' → logprob: -5.309618949890137
    4. 'def' → logprob: -5.809618949890137
    5. '```' → logprob: -7.559618949890137
    6. '        
' → logprob: -7.559618949890137
    7. '    ' → logprob: -7.684618949890137
    8. ' 
' → logprob: -7.934618949890137
    9. '  
' → logprob: -8.809618949890137
    10. ')' → logprob: -8.934618949890137

Token 584: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2124762088060379
    2. 'def' → logprob: -1.8374762535095215
    3. '    
' → logprob: -3.8374762535095215
    4. '
' → logprob: -4.9624762535095215
    5. ' def' → logprob: -6.0874762535095215
    6. '<|end|>' → logprob: -7.3374762535095215
    7. '        
' → logprob: -8.712475776672363
    8. '	def' → logprob: -9.087475776672363
    9. ' 
' → logprob: -9.212475776672363
    10. '  
' → logprob: -9.337475776672363

Token 585: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0017171852523460984
    2. '   ' → logprob: -6.5017170906066895
    3. ' def' → logprob: -8.501717567443848
    4. '    
' → logprob: -11.626717567443848
    5. 'class' → logprob: -13.501717567443848
    6. '
' → logprob: -15.126717567443848
    7. '@' (adapté à ' @') → logprob: -15.376717567443848
    8. '	def' → logprob: -15.501717567443848
    9. '#' → logprob: -15.876717567443848
    10. '  ' → logprob: -16.25171661376953

Token 586: 'classmethod' (ID: 64680)
  Prédit: 'staticmethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.16029663383960724
    2. 'property' → logprob: -1.9102966785430908
    3. 'classmethod' → logprob: -9.535296440124512
    4. 'static' → logprob: -15.910296440124512
    5. ' property' → logprob: -16.660297393798828
    6. 'random' → logprob: -17.410297393798828
    7. 'deep' → logprob: -17.910297393798828
    8. '_' → logprob: -18.160297393798828
    9. 'dat' → logprob: -18.785297393798828
    10. 'copy' → logprob: -18.785297393798828

Token 587: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00834943912923336
    2. '   ' → logprob: -5.508349418640137
    3. ' def' → logprob: -5.508349418640137
    4. '
' → logprob: -8.633349418640137
    5. '	def' → logprob: -11.883349418640137
    6. 'from' → logprob: -12.008349418640137
    7. '_def' → logprob: -12.133349418640137
    8. '(' → logprob: -13.008349418640137
    9. '[' → logprob: -13.383349418640137
    10. '(def' → logprob: -13.508349418640137

Token 588: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00500177126377821
    2. ' def' → logprob: -5.505001544952393
    3. '   ' → logprob: -7.130001544952393
    4. '
' → logprob: -9.13000202178955
    5. '_def' → logprob: -12.25500202178955
    6. '[' → logprob: -12.25500202178955
    7. '[]' → logprob: -14.50500202178955
    8. '```' → logprob: -14.63000202178955
    9. '	def' → logprob: -14.75500202178955
    10. ' ' → logprob: -15.25500202178955

Token 589: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.009470012970268726
    2. 'staticmethod' → logprob: -5.009469985961914
    3. '
' → logprob: -6.759469985961914
    4. 'classmethod' → logprob: -7.384469985961914
    5. '    
' → logprob: -7.634469985961914
    6. 'property' → logprob: -7.884469985961914
    7. ' def' → logprob: -10.009469985961914
    8. '  
' → logprob: -11.009469985961914
    9. 'de' → logprob: -11.134469985961914
    10. 'from' → logprob: -11.509469985961914

Token 590: ' _' (ID: 1175)
  Prédit: '_merge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_merge' → logprob: -0.9213979244232178
    2. '_split' → logprob: -1.5463979244232178
    3. 'merge' → logprob: -1.7963979244232178
    4. '_from' → logprob: -2.4213979244232178
    5. 'split' → logprob: -3.1713979244232178
    6. 'from' → logprob: -3.1713979244232178
    7. '_find' → logprob: -5.171398162841797
    8. '_node' → logprob: -5.171398162841797
    9. 'def' → logprob: -5.546398162841797
    10. 'staticmethod' → logprob: -5.546398162841797

Token 591: 'tre' (ID: 4086)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.270485281944275
    2. 'new' → logprob: -1.395485281944275
    3. 'merge' → logprob: -2.5204854011535645
    4. 'update' → logprob: -2.6454854011535645
    5. 'init' → logprob: -2.7704854011535645
    6. 'count' → logprob: -2.8954854011535645
    7. 'node' → logprob: -3.1454854011535645
    8. 'get' → logprob: -3.5204854011535645
    9. 'staticmethod' → logprob: -4.2704854011535645
    10. 'random' → logprob: -4.6454854011535645

Token 592: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.0030428392346948385
    2. 'e' → logprob: -6.003042697906494
    3. 'ep' → logprob: -8.378043174743652
    4. '_ap' → logprob: -8.628043174743652
    5. '_e' → logprob: -10.503043174743652
    6. 'aps' → logprob: -10.878043174743652
    7. 'ef' → logprob: -10.878043174743652
    8. 'split' → logprob: -11.253043174743652
    9. '_split' → logprob: -11.628043174743652
    10. 'esize' → logprob: -11.628043174743652

Token 593: '(cls' (ID: 46446)
  Prédit: 'ify'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -0.32679688930511475
    2. 'def' → logprob: -1.9517968893051147
    3. '_split' → logprob: -2.4517970085144043
    4. 'split' → logprob: -3.3267970085144043
    5. '_merge' → logprob: -5.326797008514404
    6. '_node' → logprob: -6.451797008514404
    7. '_rotate' → logprob: -6.451797008514404
    8. '(cls' → logprob: -6.576797008514404
    9. '_insert' → logprob: -7.201797008514404
    10. 'fy' → logprob: -7.451797008514404

Token 594: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09274211525917053
    2. '(cls' → logprob: -2.9677422046661377
    3. '_split' → logprob: -4.342741966247559
    4. 'def' → logprob: -4.717741966247559
    5. '   ' → logprob: -5.342741966247559
    6. 'cls' → logprob: -5.592741966247559
    7. 'split' → logprob: -6.217741966247559
    8. '_merge' → logprob: -6.467741966247559
    9. ')' → logprob: -7.217741966247559
    10. '_rotate' → logprob: -7.967741966247559

Token 595: ' tre' (ID: 4360)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.21787749230861664
    2. 'left' → logprob: -2.0928773880004883
    3. 'cls' → logprob: -2.9678773880004883
    4. 'root' → logprob: -5.467877388000488
    5. 'key' → logprob: -5.967877388000488
    6. 'l' → logprob: -5.967877388000488
    7. 'a' → logprob: -6.092877388000488
    8. ' v' → logprob: -6.092877388000488
    9. ' left' → logprob: -6.217877388000488
    10. 'self' → logprob: -6.342877388000488

Token 596: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.005668998695909977
    2. 'e' → logprob: -5.380669116973877
    3. 'p' → logprob: -8.255668640136719
    4. 'ep' → logprob: -8.380668640136719
    5. 'es' → logprob: -9.005668640136719
    6. 'aps' → logprob: -9.005668640136719
    7. 'q' → logprob: -9.380668640136719
    8. 'node' → logprob: -9.505668640136719
    9. '
' → logprob: -11.255668640136719
    10. 'def' → logprob: -11.505668640136719

Token 597: 'node' (ID: 7005)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011528400937095284
    2. '):' → logprob: -7.251152992248535
    3. ' ,' → logprob: -8.876152992248535
    4. ',v' → logprob: -9.001152992248535
    5. '   ' → logprob: -10.001152992248535
    6. 'cls' → logprob: -10.501152992248535
    7. '(cls' → logprob: -10.501152992248535
    8. '):
' → logprob: -11.001152992248535
    9. ',node' → logprob: -11.751152992248535
    10. ',class' → logprob: -12.001152992248535

Token 598: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005171020515263081
    2. '):' → logprob: -5.630170822143555
    3. '):
' → logprob: -7.255170822143555
    4. '   ' → logprob: -8.505170822143555
    5. ',v' → logprob: -8.630170822143555
    6. ' ,' → logprob: -9.130170822143555
    7. '       ' → logprob: -9.505170822143555
    8. '(cls' → logprob: -9.630170822143555
    9. 'v' → logprob: -9.755170822143555
    10. 'cls' → logprob: -10.005170822143555

Token 599: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7272589206695557
    2. '       ' → logprob: -1.1022589206695557
    3. ':' → logprob: -2.6022589206695557
    4. '<|end|>' → logprob: -2.9772589206695557
    5. ' if' → logprob: -3.7272589206695557
    6. 'def' → logprob: -5.102258682250977
    7. '[' → logprob: -5.227258682250977
    8. '   ' → logprob: -5.727258682250977
    9. '(' → logprob: -6.102258682250977
    10. '...' → logprob: -6.227258682250977

Token 600: ' tp' (ID: 39573)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.21317538619041443
    2. 'if' → logprob: -2.0881752967834473
    3. '       ' → logprob: -3.3381752967834473
    4. 'v' → logprob: -4.213175296783447
    5. ' v' → logprob: -4.338175296783447
    6. ' return' → logprob: -6.338175296783447
    7. 'def' → logprob: -7.088175296783447
    8. 'return' → logprob: -7.338175296783447
    9. ' left' → logprob: -8.338175773620605
    10. ' node' → logprob: -8.588175773620605

Token 601: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27264994382858276
    2. '=' → logprob: -1.7726500034332275
    3. 'r' → logprob: -3.5226500034332275
    4. 'v' → logprob: -4.022649765014648
    5. 'if' → logprob: -4.897649765014648
    6. 'node' → logprob: -6.272649765014648
    7. 'y' → logprob: -6.397649765014648
    8. '=[]' → logprob: -6.397649765014648
    9. ',' → logprob: -6.647649765014648
    10. '=None' → logprob: -7.272649765014648

Token 602: ' cls' (ID: 26133)
  Prédit: 'deep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deep' → logprob: -0.08903446048498154
    2. 'Tre' → logprob: -3.2140345573425293
    3. 'tre' → logprob: -3.9640345573425293
    4. 'cls' → logprob: -4.964034557342529
    5. 'random' → logprob: -5.089034557342529
    6. ' deepcopy' → logprob: -5.589034557342529
    7. '[]' → logprob: -6.089034557342529
    8. '[' → logprob: -6.339034557342529
    9. '[]
' → logprob: -6.464034557342529
    10. 'tp' → logprob: -7.089034557342529

Token 603: '();' (ID: 4177)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.5218428373336792
    2. '()' → logprob: -2.1468429565429688
    3. '._' → logprob: -2.3968429565429688
    4. '([]' → logprob: -2.7718429565429688
    5. '([' → logprob: -2.7718429565429688
    6. '(de' → logprob: -3.2718429565429688
    7. '(' → logprob: -4.146842956542969
    8. '.T' → logprob: -5.646842956542969
    9. '(
' → logprob: -5.771842956542969
    10. '.t' → logprob: -6.271842956542969

Token 604: ' tp' (ID: 39573)
  Prédit: 'tp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tp' → logprob: -1.0921942703134846e-05
    2. ' tp' → logprob: -11.50001049041748
    3. '       ' → logprob: -14.87501049041748
    4. '_tp' → logprob: -15.50001049041748
    5. ',tp' → logprob: -16.375011444091797
    6. '.tp' → logprob: -16.625011444091797
    7. '(tp' → logprob: -16.875011444091797
    8. 't' → logprob: -18.750011444091797
    9. 'dp' → logprob: -18.875011444091797
    10. 'TP' → logprob: -19.000011444091797

Token 605: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.00021033499797340482
    2. 'root' → logprob: -9.625210762023926
    3. '.' → logprob: -9.875210762023926
    4. ' .' → logprob: -10.000210762023926
    5. '._' → logprob: -10.875210762023926
    6. '.py' → logprob: -12.375210762023926
    7. '.user' → logprob: -12.375210762023926
    8. '.raw' → logprob: -13.375210762023926
    9. '.parent' → logprob: -13.500210762023926
    10. '.self' → logprob: -13.500210762023926

Token 606: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031781906727701426
    2. ' =' → logprob: -5.753178119659424
    3. '=
' → logprob: -16.003177642822266
    4. '=

' → logprob: -16.128177642822266
    5. ',' → logprob: -16.503177642822266
    6. '=}' → logprob: -17.003177642822266
    7. '＝' → logprob: -18.503177642822266
    8. '=re' → logprob: -18.753177642822266
    9. '=random' → logprob: -19.003177642822266
    10. '=create' → logprob: -19.628177642822266

Token 607: ' deepcopy' (ID: 130230)
  Prédit: 'deep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deep' → logprob: -0.0904512032866478
    2. 'tre' → logprob: -2.465451240539551
    3. ' deepcopy' → logprob: -7.215451240539551
    4. 'dee' → logprob: -7.340451240539551
    5. ' deep' → logprob: -9.59045124053955
    6. ' tre' → logprob: -11.59045124053955
    7. '   ' → logprob: -11.84045124053955
    8. 'depth' → logprob: -11.96545124053955
    9. 'deque' → logprob: -11.96545124053955
    10. '.deepcopy' → logprob: -12.21545124053955

Token 608: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.0
    3. 't' → logprob: -17.5
    4. 'tre' → logprob: -18.375
    5. '(tr' → logprob: -18.875
    6. '(
' → logprob: -19.375
    7. ' (' → logprob: -20.0
    8. '	t' → logprob: -20.5
    9. '((' → logprob: -20.625
    10. '(te' → logprob: -20.75

Token 609: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.5762956738471985
    2. 'tre' → logprob: -0.8262956738471985
    3. ' tre' → logprob: -8.576295852661133
    4. 'rep' → logprob: -9.826295852661133
    5. 'ree' → logprob: -10.201295852661133
    6. 'reet' → logprob: -10.951295852661133
    7. '(re' → logprob: -11.576295852661133
    8. 'reep' → logprob: -11.951295852661133
    9. 't' → logprob: -12.076295852661133
    10. 'heap' → logprob: -12.451295852661133

Token 610: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -2.1008713702030946e-06
    2. 'apt' → logprob: -14.625001907348633
    3. 'rap' → logprob: -14.750001907348633
    4. 'p' → logprob: -15.250001907348633
    5. 'ап' → logprob: -16.125001907348633
    6. '(ap' → logprob: -16.125001907348633
    7. 'apin' → logprob: -16.250001907348633
    8. 'nap' → logprob: -16.500001907348633
    9. 'apte' → logprob: -16.750001907348633
    10. '	ap' → logprob: -17.000001907348633

Token 611: 'node' (ID: 7005)
  Prédit: 'node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.000712670327629894
    2. 'ode' → logprob: -7.250712871551514
    3. '(node' → logprob: -14.250712394714355
    4. ')' → logprob: -15.000712394714355
    5. 'tre' → logprob: -15.375712394714355
    6. '
' → logprob: -15.625712394714355
    7. 't' → logprob: -15.750712394714355
    8. ' node' → logprob: -15.750712394714355
    9. 'o' → logprob: -15.875712394714355
    10. '   ' → logprob: -16.125713348388672

Token 612: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011309999041259289
    2. ')
' → logprob: -4.63631010055542
    3. ');' → logprob: -6.51131010055542
    4. ')return' → logprob: -9.761309623718262
    5. ')
' → logprob: -12.761309623718262
    6. '[' → logprob: -13.261309623718262
    7. ' )' → logprob: -13.511309623718262
    8. ')

' → logprob: -14.261309623718262
    9. ')#' → logprob: -14.886309623718262
    10. ');
' → logprob: -15.261309623718262

Token 613: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07302401959896088
    2. '<|end|>' → logprob: -3.073024034500122
    3. '   ' → logprob: -4.698023796081543
    4. '	' → logprob: -5.323023796081543
    5. 'return' → logprob: -5.573023796081543
    6. ')' → logprob: -6.073023796081543
    7. '	return' → logprob: -6.573023796081543
    8. '[' → logprob: -7.823023796081543
    9. ' return' → logprob: -8.073023796081543
    10. '    ' → logprob: -8.073023796081543

Token 614: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.38814640045166016
    2. '       ' → logprob: -1.1381464004516602
    3. ' return' → logprob: -6.76314640045166
    4. '<|end|>' → logprob: -10.01314640045166
    5. '	return' → logprob: -10.26314640045166
    6. '   ' → logprob: -11.38814640045166
    7. ':return' → logprob: -12.13814640045166
    8. ')return' → logprob: -12.63814640045166
    9. '	' → logprob: -12.76314640045166
    10. '{return' → logprob: -12.88814640045166

Token 615: ' tp' (ID: 39573)
  Prédit: 'tp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tp' → logprob: -0.0002625278721097857
    2. ' tp' → logprob: -8.250262260437012
    3. '(tp' → logprob: -13.875262260437012
    4. ',tp' → logprob: -15.625262260437012
    5. 'TP' → logprob: -16.250263214111328
    6. '_tp' → logprob: -17.125263214111328
    7. 'Tp' → logprob: -17.625263214111328
    8. '.tp' → logprob: -18.000263214111328
    9. 'pt' → logprob: -19.375263214111328
    10. 'dp' → logprob: -20.250263214111328

Token 616: '
            
' (ID: 45334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 617: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007276617921888828
    2. '   ' → logprob: -5.38227653503418
    3. '    
' → logprob: -6.13227653503418
    4. ' def' → logprob: -8.75727653503418
    5. '<|end|>' → logprob: -8.75727653503418
    6. '
' → logprob: -9.63227653503418
    7. '@' → logprob: -11.00727653503418
    8. ')' → logprob: -11.00727653503418
    9. '<|end|>' → logprob: -11.38227653503418
    10. '#' → logprob: -11.88227653503418

Token 618: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.1379045844078064
    2. '   ' → logprob: -2.387904644012451
    3. '
' → logprob: -3.762904644012451
    4. '    
' → logprob: -4.512904644012451
    5. ' def' → logprob: -6.262904644012451
    6. '_' → logprob: -7.762904644012451
    7. '_def' → logprob: -9.262904167175293
    8. '        
' → logprob: -9.762904167175293
    9. ')' → logprob: -10.012904167175293
    10. '   
' → logprob: -10.137904167175293

Token 619: ' sort' (ID: 4506)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.21424196660518646
    2. ' insert' → logprob: -2.0892419815063477
    3. '_insert' → logprob: -2.9642419815063477
    4. '_' → logprob: -4.714241981506348
    5. 'insert' → logprob: -5.589241981506348
    6. ' split' → logprob: -6.339241981506348
    7. ' merge' → logprob: -7.464241981506348
    8. ' copy' → logprob: -8.089241981506348
    9. '_split' → logprob: -8.089241981506348
    10. 'split' → logprob: -8.089241981506348

Token 620: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003862245939671993
    2. 'self' → logprob: -8.625386238098145
    3. '(' → logprob: -9.000386238098145
    4. '()' → logprob: -11.250386238098145
    5. '(s' → logprob: -11.875386238098145
    6. '   ' → logprob: -12.250386238098145
    7. ' (' → logprob: -12.375386238098145
    8. 'key' → logprob: -12.375386238098145
    9. '_(' → logprob: -12.375386238098145
    10. '_by' → logprob: -12.500386238098145

Token 621: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7008799314498901
    2. '):' → logprob: -0.7008799314498901
    3. 'self' → logprob: -5.20088005065918
    4. ')' → logprob: -6.95088005065918
    5. '):
' → logprob: -7.07588005065918
    6. ')):' → logprob: -9.45088005065918
    7. ',self' → logprob: -9.70088005065918
    8. '(self' → logprob: -10.57588005065918
    9. ' ):' → logprob: -10.82588005065918
    10. ',v' → logprob: -11.07588005065918

Token 622: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006995969917625189
    2. '):
' → logprob: -6.506996154785156
    3. ',' → logprob: -6.631996154785156
    4. '   ' → logprob: -7.256996154785156
    5. ' =' → logprob: -7.506996154785156
    6. ':
' → logprob: -7.756996154785156
    7. ')' → logprob: -7.881996154785156
    8. ':' → logprob: -8.256996154785156
    9. 'self' → logprob: -8.256996154785156
    10. '):' → logprob: -8.256996154785156

Token 623: ' if' (ID: 538)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.0115855932235718
    2. 'return' → logprob: -1.1365855932235718
    3. 'def' → logprob: -1.5115855932235718
    4. 'result' → logprob: -2.7615857124328613
    5. 'arr' → logprob: -4.261585712432861
    6. '   ' → logprob: -4.761585712432861
    7. '       ' → logprob: -5.136585712432861
    8. 'if' (adapté à ' if') → logprob: -7.386585712432861
    9. 'out' → logprob: -7.761585712432861
    10. 'lst' → logprob: -7.886585712432861

Token 624: ' not' (ID: 625)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5706815719604492
    2. ' self' → logprob: -1.3206815719604492
    3. ' not' → logprob: -1.9456815719604492
    4. 'not' → logprob: -3.695681571960449
    5. '   ' → logprob: -9.32068157196045
    6. ' ' → logprob: -10.07068157196045
    7. '  ' → logprob: -11.07068157196045
    8. '	self' → logprob: -11.69568157196045
    9. '       ' → logprob: -12.07068157196045
    10. 'len' → logprob: -12.07068157196045

Token 625: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001509739668108523
    2. ' self' → logprob: -6.501509666442871
    3. '(self' → logprob: -12.376509666442871
    4. '
' → logprob: -13.626509666442871
    5. '   ' → logprob: -13.876509666442871
    6. '       ' → logprob: -14.501509666442871
    7. '	self' → logprob: -15.376509666442871
    8. ' ' → logprob: -16.751510620117188
    9. '  ' → logprob: -16.876510620117188
    10. '[self' → logprob: -16.876510620117188

Token 626: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.0002639582962729037
    2. 'root' → logprob: -8.250264167785645
    3. '.' → logprob: -13.000264167785645
    4. '[root' → logprob: -16.000263214111328
    5. '   ' → logprob: -16.125263214111328
    6. ':' → logprob: -16.875263214111328
    7. ' .' → logprob: -17.125263214111328
    8. ' root' → logprob: -17.500263214111328
    9. '_root' → logprob: -18.375263214111328
    10. '[' → logprob: -18.500263214111328

Token 627: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013133877888321877
    2. ':return' → logprob: -4.388134002685547
    3. ':
' → logprob: -7.763134002685547
    4. '       ' → logprob: -9.513134002685547
    5. ' :' → logprob: -9.763134002685547
    6. ' or' → logprob: -10.138134002685547
    7. 'return' → logprob: -11.638134002685547
    8. '           ' → logprob: -11.763134002685547
    9. '   ' → logprob: -12.013134002685547
    10. ' return' → logprob: -12.763134002685547

Token 628: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.10574179887771606
    2. '           ' → logprob: -2.7307417392730713
    3. 'return' → logprob: -3.3557417392730713
    4. '       ' → logprob: -8.730741500854492
    5. '	return' → logprob: -9.230741500854492
    6. '   ' → logprob: -11.230741500854492
    7. '        ' → logprob: -12.105741500854492
    8. '    ' → logprob: -13.105741500854492
    9. '	       ' → logprob: -13.730741500854492
    10. 'eturn' → logprob: -13.980741500854492

Token 629: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.06223129853606224
    2. '[]' → logprob: -2.8122313022613525
    3. ' []
' → logprob: -8.937231063842773
    4. '
' → logprob: -9.437231063842773
    5. '[]

' → logprob: -10.812231063842773
    6. '       ' → logprob: -11.062231063842773
    7. ' []' → logprob: -12.062231063842773
    8. '[])
' → logprob: -12.562231063842773
    9. '[],' → logprob: -12.562231063842773
    10. '([])
' → logprob: -13.812231063842773

Token 630: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009521945030428469
    2. '
' → logprob: -7.000952243804932
    3. '        
' → logprob: -11.000951766967773
    4. '   ' → logprob: -12.000951766967773
    5. '    
' → logprob: -12.125951766967773
    6. 'return' → logprob: -12.250951766967773
    7. ' return' → logprob: -12.875951766967773
    8. '      ' → logprob: -13.875951766967773
    9. '     ' → logprob: -14.125951766967773
    10. 'result' → logprob: -14.875951766967773

Token 631: ' elements' (ID: 8632)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.9163857698440552
    2. 'result' → logprob: -1.0413857698440552
    3. '       ' → logprob: -1.6663857698440552
    4. 'def' → logprob: -3.2913856506347656
    5. 'return' → logprob: -4.916385650634766
    6. 'ans' → logprob: -5.541385650634766
    7. 'stack' → logprob: -5.541385650634766
    8. 'arr' → logprob: -6.541385650634766
    9. 'out' → logprob: -6.916385650634766
    10. 'r' → logprob: -6.916385650634766

Token 632: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07993956655263901
    2. '=' → logprob: -2.704939603805542
    3. '=[]' → logprob: -4.704939365386963
    4. ',' → logprob: -7.079939365386963
    5. '=[]
' → logprob: -10.204939842224121
    6. '   ' → logprob: -12.329939842224121
    7. '    ' → logprob: -12.579939842224121
    8. '       ' → logprob: -12.704939842224121
    9. '=[],' → logprob: -12.954939842224121
    10. '[]' → logprob: -13.204939842224121

Token 633: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.10023891925811768
    2. '[]' → logprob: -2.350238800048828
    3. '[]

' → logprob: -10.725238800048828
    4. '[' → logprob: -12.100238800048828
    5. ' []
' → logprob: -12.725238800048828
    6. ' []' → logprob: -14.475238800048828
    7. '[self' → logprob: -14.850238800048828
    8. 'self' → logprob: -15.600238800048828
    9. 'deque' → logprob: -15.600238800048828
    10. '[
' → logprob: -16.100238800048828

Token 634: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.7835754988482222e-05
    2. '   ' → logprob: -11.750018119812012
    3. '        
' → logprob: -12.750018119812012
    4. 'def' → logprob: -12.875018119812012
    5. '
' → logprob: -13.125018119812012
    6. 'v' → logprob: -13.625018119812012
    7. ',' → logprob: -15.125018119812012
    8. '           ' → logprob: -15.250018119812012
    9. '    
' → logprob: -15.750018119812012
    10. '      ' → logprob: -16.125017166137695

Token 635: ' stack' (ID: 10825)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009470365941524506
    2. '       ' → logprob: -4.759470462799072
    3. 'stack' (adapté à ' stack') → logprob: -7.509470462799072
    4. '
' → logprob: -8.759469985961914
    5. 'v' → logprob: -9.759469985961914
    6. 'self' → logprob: -9.884469985961914
    7. 'q' → logprob: -10.759469985961914
    8. '   ' → logprob: -11.384469985961914
    9. ' def' → logprob: -12.134469985961914
    10. '	def' → logprob: -13.884469985961914

Token 636: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04881172627210617
    2. '=' → logprob: -3.048811674118042
    3. '=[]' → logprob: -8.423811912536621
    4. ',' → logprob: -13.298811912536621
    5. '=[' → logprob: -14.173811912536621
    6. '=[]
' → logprob: -14.423811912536621
    7. '   ' → logprob: -14.798811912536621
    8. '    ' → logprob: -14.923811912536621
    9. '       ' → logprob: -15.048811912536621
    10. '        ' → logprob: -15.548811912536621

Token 637: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.18751701712608337
    2. '[]
' → logprob: -1.9375170469284058
    3. '[]' → logprob: -3.937516927719116
    4. '[' → logprob: -4.937517166137695
    5. '[self' → logprob: -8.937517166137695
    6. 'deque' → logprob: -9.437517166137695
    7. ' [(' → logprob: -11.437517166137695
    8. '[((' → logprob: -11.687517166137695
    9. '[v' → logprob: -12.312517166137695
    10. '[]

' → logprob: -12.437517166137695

Token 638: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.2113979209971149e-05
    2. ' self' → logprob: -11.500012397766113
    3. '(self' → logprob: -13.875012397766113
    4. '0' → logprob: -14.625012397766113
    5. ')' → logprob: -16.000011444091797
    6. '
' → logprob: -16.250011444091797
    7. 'True' → logprob: -16.625011444091797
    8. '   ' → logprob: -16.750011444091797
    9. '[self' → logprob: -17.125011444091797
    10. 'False' → logprob: -17.500011444091797

Token 639: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.0037962731439620256
    2. 'root' → logprob: -5.628796100616455
    3. '[' → logprob: -8.753796577453613
    4. '.' → logprob: -11.003796577453613
    5. ',' → logprob: -11.878796577453613
    6. '[root' → logprob: -12.628796577453613
    7. ' root' → logprob: -12.878796577453613
    8. '_root' → logprob: -13.628796577453613
    9. '
' → logprob: -13.753796577453613
    10. '   ' → logprob: -13.878796577453613

Token 640: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004234051739331335
    2. ' ,' → logprob: -8.250423431396484
    3. '[' → logprob: -8.875423431396484
    4. ',None' → logprob: -11.375423431396484
    5. ')]' → logprob: -12.125423431396484
    6. ',[' → logprob: -13.375423431396484
    7. ',
' → logprob: -13.375423431396484
    8. 'None' → logprob: -14.250423431396484
    9. '   ' → logprob: -14.750423431396484
    10. '
' → logprob: -15.000423431396484

Token 641: ' ' (ID: 220)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.5773680210113525
    2. '0' → logprob: -0.8273680210113525
    3. ' False' → logprob: -6.577367782592773
    4. '   ' → logprob: -11.077367782592773
    5. ' ' → logprob: -11.577367782592773
    6. 'True' → logprob: -11.952367782592773
    7. '
' → logprob: -13.327367782592773
    8. '1' → logprob: -14.202367782592773
    9. '    ' → logprob: -14.577367782592773
    10. '(False' → logprob: -14.827367782592773

Token 642: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6332365274429321
    2. 'False' → logprob: -0.7582365274429321
    3. ' False' → logprob: -7.508236408233643
    4. ' ' → logprob: -10.1332368850708
    5. 'True' → logprob: -11.0082368850708
    6. ''' → logprob: -11.2582368850708
    7. '   ' → logprob: -11.7582368850708
    8. '1' → logprob: -12.2582368850708
    9. '"' → logprob: -13.1332368850708
    10. ')' → logprob: -13.5082368850708

Token 643: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00026741522015072405
    2. ')]
' → logprob: -8.250267028808594
    3. ')' → logprob: -13.125267028808594
    4. ' )' → logprob: -13.375267028808594
    5. ']' → logprob: -13.750267028808594
    6. ')]

' → logprob: -14.750267028808594
    7. ',' → logprob: -15.125267028808594
    8. '   ' → logprob: -15.250267028808594
    9. '       ' → logprob: -15.875267028808594
    10. ')]
' → logprob: -16.875267028808594

Token 644: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019279246916994452
    2. ' while' → logprob: -7.001927852630615
    3. '	' → logprob: -8.001928329467773
    4. '   ' → logprob: -8.376928329467773
    5. 'while' → logprob: -8.876928329467773
    6. '<|end|>' → logprob: -9.001928329467773
    7. '	while' → logprob: -9.251928329467773
    8. '        
' → logprob: -11.501928329467773
    9. '           ' → logprob: -11.501928329467773
    10. '```' → logprob: -11.501928329467773

Token 645: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.4995202124118805
    2. ' while' → logprob: -0.9995201826095581
    3. '       ' → logprob: -3.7495203018188477
    4. '	while' → logprob: -6.624520301818848
    5. '
' → logprob: -8.749520301818848
    6. '   ' → logprob: -9.749520301818848
    7. '	' → logprob: -10.749520301818848
    8. '```' → logprob: -11.249520301818848
    9. '        ' → logprob: -12.624520301818848
    10. '    ' → logprob: -12.999520301818848

Token 646: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.006718452088534832
    2. ' stack' → logprob: -5.006718635559082
    3. '	stack' → logprob: -12.881718635559082
    4. '(stack' → logprob: -15.131718635559082
    5. '   ' → logprob: -16.256717681884766
    6. 'len' → logprob: -16.506717681884766
    7. 'True' → logprob: -16.881717681884766
    8. ' ' → logprob: -18.256717681884766
    9. '  ' → logprob: -18.506717681884766
    10. '    ' → logprob: -19.506717681884766

Token 647: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6836696863174438
    2. ':' → logprob: -0.9336696863174438
    3. '[' → logprob: -3.0586695671081543
    4. '[-' → logprob: -4.183669567108154
    5. '<|end|>' → logprob: -4.808669567108154
    6. ' and' → logprob: -4.933669567108154
    7. ',' → logprob: -5.308669567108154
    8. '       ' → logprob: -5.558669567108154
    9. '.pop' → logprob: -5.683669567108154
    10. 'and' → logprob: -5.683669567108154

Token 648: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20621134340763092
    2. 'v' → logprob: -1.7062113285064697
    3. ' v' → logprob: -5.456211566925049
    4. ',v' → logprob: -8.08121109008789
    5. ',' → logprob: -9.58121109008789
    6. '(v' → logprob: -9.70621109008789
    7. '		' → logprob: -11.08121109008789
    8. '   ' → logprob: -11.33121109008789
    9. '[v' → logprob: -11.33121109008789
    10. '```' → logprob: -11.58121109008789

Token 649: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.005766203626990318
    2. ' v' → logprob: -5.25576639175415
    3. 'node' → logprob: -7.63076639175415
    4. '           ' → logprob: -10.255765914916992
    5. ' node' → logprob: -11.505765914916992
    6. 'vertex' → logprob: -14.380765914916992
    7. '(v' → logprob: -14.880765914916992
    8. '            
' → logprob: -15.255765914916992
    9. '	v' → logprob: -15.505765914916992
    10. '   ' → logprob: -16.130765914916992

Token 650: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.572941179503687e-05
    2. ',v' → logprob: -10.125045776367188
    3. '=' → logprob: -13.250045776367188
    4. ',
' → logprob: -13.625045776367188
    5. ' ,' → logprob: -13.625045776367188
    6. '[' → logprob: -15.500045776367188
    7. ',n' → logprob: -15.625045776367188
    8. ',s' → logprob: -15.750045776367188
    9. ',var' → logprob: -16.125045776367188
    10. ',status' → logprob: -16.750045776367188

Token 651: ' st' (ID: 420)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.030471699312329292
    2. 'idx' → logprob: -4.9054718017578125
    3. 'visited' → logprob: -5.4054718017578125
    4. 's' → logprob: -5.7804718017578125
    5. 'phase' → logprob: -5.9054718017578125
    6. ' state' → logprob: -5.9054718017578125
    7. 'stage' → logprob: -6.0304718017578125
    8. 'pos' → logprob: -6.2804718017578125
    9. 'i' → logprob: -6.5304718017578125
    10. 'step' → logprob: -6.7804718017578125

Token 652: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011087908409535885
    2. ' =' → logprob: -4.511087894439697
    3. 'ate' → logprob: -10.636088371276855
    4. '=
' → logprob: -12.386088371276855
    5. 'atus' → logprob: -12.636088371276855
    6. ')' → logprob: -12.886088371276855
    7. 'ack' → logprob: -13.011088371276855
    8. ' ' → logprob: -14.886088371276855
    9. ')=' → logprob: -15.011088371276855
    10. '=}' → logprob: -15.136088371276855

Token 653: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.20143789052963257
    2. ' stack' → logprob: -1.7014379501342773
    3. '(stack' → logprob: -11.076437950134277
    4. '	stack' → logprob: -11.701437950134277
    5. ' v' → logprob: -15.076437950134277
    6. '_stack' → logprob: -15.826437950134277
    7. ' ' → logprob: -16.07643699645996
    8. '
' → logprob: -16.20143699645996
    9. '.stack' → logprob: -16.57643699645996
    10. 'st' → logprob: -16.57643699645996

Token 654: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.001666015712544322
    2. '[-' → logprob: -7.376666069030762
    3. 'pop' → logprob: -7.501666069030762
    4. '=' → logprob: -8.126666069030762
    5. '.' → logprob: -9.376666069030762
    6. '-' → logprob: -10.626666069030762
    7. '```' → logprob: -10.876666069030762
    8. ' pop' → logprob: -11.251666069030762
    9. '	pop' → logprob: -12.001666069030762
    10. '   ' → logprob: -12.126666069030762

Token 655: '()
' (ID: 1234)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.044420402497053146
    2. ',v' → logprob: -3.5444204807281494
    3. '(v' → logprob: -5.41942024230957
    4. ')' → logprob: -5.79442024230957
    5. '<|end|>' → logprob: -5.91942024230957
    6. '(' → logprob: -7.54442024230957
    7. ' v' → logprob: -7.54442024230957
    8. ' ,' → logprob: -7.91942024230957
    9. ')v' → logprob: -7.91942024230957
    10. ';' → logprob: -8.04442024230957

Token 656: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00019293125660624355
    2. '       ' → logprob: -9.125192642211914
    3. ' if' → logprob: -9.750192642211914
    4. '               ' → logprob: -12.000192642211914
    5. '```' → logprob: -12.125192642211914
    6. '   ' → logprob: -12.750192642211914
    7. '            
' → logprob: -12.875192642211914
    8. '		' → logprob: -13.375192642211914
    9. ' 
' → logprob: -13.625192642211914
    10. 'if' → logprob: -14.000192642211914

Token 657: ' [' (ID: 723)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.38752955198287964
    2. ' if' → logprob: -1.3875296115875244
    3. '           ' → logprob: -2.6375296115875244
    4. '	if' → logprob: -10.512529373168945
    5. '   ' → logprob: -12.512529373168945
    6. '		' → logprob: -12.887529373168945
    7. '       ' → logprob: -13.012529373168945
    8. '               ' → logprob: -13.762529373168945
    9. '	       ' → logprob: -14.012529373168945
    10. '```' → logprob: -14.387529373168945

Token 658: 'left' (ID: 4530)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3879023790359497
    2. '0' → logprob: -2.13790225982666
    3. '           ' → logprob: -2.13790225982666
    4. 'st' → logprob: -3.38790225982666
    5. '               ' → logprob: -4.01290225982666
    6. 'v' → logprob: -4.51290225982666
    7. ' if' → logprob: -4.88790225982666
    8. 'stack' → logprob: -5.38790225982666
    9. 'None' → logprob: -5.63790225982666
    10. '
' → logprob: -6.01290225982666

Token 659: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.33320796489715576
    2. 'if' → logprob: -2.3332080841064453
    3. 'stack' → logprob: -3.0832080841064453
    4. 'and' → logprob: -3.0832080841064453
    5. ',v' → logprob: -3.5832080841064453
    6. ' if' → logprob: -4.208208084106445
    7. 'v' → logprob: -4.458208084106445
    8. '=' → logprob: -4.583208084106445
    9. ' and' → logprob: -4.708208084106445
    10. '(v' → logprob: -5.708208084106445

Token 660: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0010559145594015718
    2. ' right' → logprob: -6.876055717468262
    3. 'key' → logprob: -11.251055717468262
    4. '   ' → logprob: -13.126055717468262
    5. ',right' → logprob: -13.251055717468262
    6. '    
' → logprob: -13.626055717468262
    7. '	right' → logprob: -13.876055717468262
    8. ',' → logprob: -14.126055717468262
    9. 'v' → logprob: -14.501055717468262
    10. ' ' → logprob: -14.876055717468262

Token 661: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05994674190878868
    2. ']' → logprob: -3.0599467754364014
    3. '           ' → logprob: -5.559946537017822
    4. ']=' → logprob: -5.809946537017822
    5. '=' → logprob: -6.434946537017822
    6. ' ,' → logprob: -7.059946537017822
    7. ' =' → logprob: -7.434946537017822
    8. ',v' → logprob: -8.05994701385498
    9. 'if' → logprob: -8.18494701385498
    10. '       ' → logprob: -8.55994701385498

Token 662: ' k' (ID: 372)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.1602877974510193
    2. ' key' → logprob: -1.910287857055664
    3. '_,' → logprob: -11.285287857055664
    4. 'k' → logprob: -11.660287857055664
    5. '_key' → logprob: -11.910287857055664
    6. ' ' → logprob: -12.035287857055664
    7. ',' → logprob: -12.160287857055664
    8. '	key' → logprob: -12.410287857055664
    9. '           ' → logprob: -12.785287857055664
    10. '
' → logprob: -12.785287857055664

Token 663: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015567955560982227
    2. ']' → logprob: -4.765567779541016
    3. '=' → logprob: -5.140567779541016
    4. ' =' → logprob: -7.390567779541016
    5. ']=' → logprob: -8.265567779541016
    6. ' ,' → logprob: -9.265567779541016
    7. '       ' → logprob: -10.390567779541016
    8. 't' → logprob: -11.390567779541016
    9. ',key' → logprob: -11.640567779541016
    10. '],' → logprob: -12.015567779541016

Token 664: ' _,' (ID: 18042)
  Prédit: 'prio'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prio' → logprob: -0.7101256847381592
    2. 'priority' → logprob: -1.4601256847381592
    3. 'p' → logprob: -2.085125684738159
    4. '_,' → logprob: -2.585125684738159
    5. '_' → logprob: -4.085125923156738
    6. 'prior' → logprob: -4.335125923156738
    7. ' p' → logprob: -4.460125923156738
    8. 'pri' → logprob: -4.460125923156738
    9. 'pr' → logprob: -4.835125923156738
    10. ' priority' → logprob: -5.710125923156738

Token 665: ' _,' (ID: 18042)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.1537233591079712
    2. 'priority' → logprob: -1.1537233591079712
    3. 'prio' → logprob: -2.0287232398986816
    4. '_' → logprob: -2.2787232398986816
    5. 'desc' → logprob: -2.6537232398986816
    6. '_]' → logprob: -3.9037232398986816
    7. 'cnt' → logprob: -4.403723239898682
    8. 'sum' → logprob: -5.028723239898682
    9. ']' → logprob: -5.153723239898682
    10. 'st' → logprob: -5.653723239898682

Token 666: ' _' (ID: 1175)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.1448972523212433
    2. '_' → logprob: -2.894897222518921
    3. 's' → logprob: -3.644897222518921
    4. '_]' → logprob: -3.894897222518921
    5. '_sum' → logprob: -4.2698974609375
    6. ' sum' → logprob: -4.7698974609375
    7. '_=' → logprob: -6.1448974609375
    8. 'total' → logprob: -6.6448974609375
    9. '_s' → logprob: -6.6448974609375
    10. ' _' → logprob: -6.7698974609375

Token 667: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.027359411120414734
    2. ',' → logprob: -4.152359485626221
    3. ']=' → logprob: -4.902359485626221
    4. '           ' → logprob: -6.152359485626221
    5. '=' → logprob: -7.527359485626221
    6. ' ]' → logprob: -8.027359008789062
    7. ']
' → logprob: -8.277359008789062
    8. '       ' → logprob: -8.902359008789062
    9. ' =' → logprob: -9.402359008789062
    10. 'if' → logprob: -9.652359008789062

Token 668: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.252539724111557
    2. ' =' → logprob: -1.5025397539138794
    3. ' if' → logprob: -8.12753963470459
    4. 'if' → logprob: -8.62753963470459
    5. '=v' → logprob: -10.12753963470459
    6. '           ' → logprob: -10.75253963470459
    7. '=line' → logprob: -11.37753963470459
    8. '
' → logprob: -11.50253963470459
    9. ',' → logprob: -11.87753963470459
    10. '       ' → logprob: -12.12753963470459

Token 669: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0019298245897516608
    2. ' v' → logprob: -6.251929759979248
    3. '	v' → logprob: -14.751930236816406
    4. '   ' → logprob: -14.751930236816406
    5. '[v' → logprob: -14.876930236816406
    6. '(v' → logprob: -17.001930236816406
    7. ' ' → logprob: -17.501930236816406
    8. '_v' → logprob: -17.751930236816406
    9. '  ' → logprob: -18.001930236816406
    10. '
' → logprob: -18.626930236816406

Token 670: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03069564513862133
    2. '
' → logprob: -3.530695676803589
    3. ' if' → logprob: -8.280695915222168
    4. '<|end|>' → logprob: -8.530695915222168
    5. '            
' → logprob: -9.280695915222168
    6. ',' → logprob: -9.280695915222168
    7. '		' → logprob: -9.405695915222168
    8. '	       ' → logprob: -10.030695915222168
    9. '
' → logprob: -10.405695915222168
    10. 'if' → logprob: -11.030695915222168

Token 671: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00016551809676457196
    2. 'if' → logprob: -9.250165939331055
    3. ' if' → logprob: -9.750165939331055
    4. '<|end|>' → logprob: -12.375165939331055
    5. '		' → logprob: -13.875165939331055
    6. ',' → logprob: -14.000165939331055
    7. '       ' → logprob: -14.250165939331055
    8. '            
' → logprob: -14.250165939331055
    9. '
' → logprob: -14.250165939331055
    10. '   ' → logprob: -14.500165939331055

Token 672: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07074743509292603
    2. ' if' → logprob: -3.0707473754882812
    3. '           ' → logprob: -3.8207473754882812
    4. '       ' → logprob: -13.320747375488281
    5. '   ' → logprob: -13.445747375488281
    6. '	if' → logprob: -13.695747375488281
    7. '```' → logprob: -15.570747375488281
    8. '		' → logprob: -15.820747375488281
    9. '	       ' → logprob: -16.57074737548828
    10. ' ' → logprob: -16.69574737548828

Token 673: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.0059983558021485806
    2. ' st' → logprob: -5.130998134613037
    3. 'not' → logprob: -9.880998611450195
    4. '   ' → logprob: -11.755998611450195
    5. ' not' → logprob: -11.880998611450195
    6. '	st' → logprob: -14.130998611450195
    7. 'v' → logprob: -14.255998611450195
    8. '(st' → logprob: -14.505998611450195
    9. ' ' → logprob: -14.755998611450195
    10. '  ' → logprob: -14.880998611450195

Token 674: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0486200675368309
    2. ' ==' → logprob: -3.0486199855804443
    3. '==
' → logprob: -11.298620223999023
    4. '0' → logprob: -11.673620223999023
    5. '=' → logprob: -12.548620223999023
    6. ')==' → logprob: -12.673620223999023
    7. ']==' → logprob: -13.173620223999023
    8. '===' → logprob: -13.798620223999023
    9. '<|end|>' → logprob: -14.298620223999023
    10. '()==' → logprob: -14.798620223999023

Token 675: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.375035285949707
    3. '1' → logprob: -13.000035285949707
    4. '   ' → logprob: -13.500035285949707
    5. '           ' → logprob: -15.000035285949707
    6. '       ' → logprob: -16.375036239624023
    7. '	' → logprob: -16.875036239624023
    8. '    ' → logprob: -17.375036239624023
    9. '     ' → logprob: -17.500036239624023
    10. '  ' → logprob: -17.812536239624023

Token 676: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.77627644513268e-06
    2. ' ' → logprob: -12.125008583068848
    3. '1' → logprob: -13.000008583068848
    4. '   ' → logprob: -14.250008583068848
    5. '           ' → logprob: -15.625008583068848
    6. '       ' → logprob: -16.562509536743164
    7. '    ' → logprob: -17.750009536743164
    8. '2' → logprob: -17.875009536743164
    9. '۰' → logprob: -18.375009536743164
    10. '     ' → logprob: -18.687509536743164

Token 677: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3871666193008423
    2. ':
' → logprob: -1.1371666193008423
    3. '):
' → logprob: -9.262166976928711
    4. '           ' → logprob: -9.637166976928711
    5. ' and' → logprob: -9.762166976928711
    6. '               ' → logprob: -10.262166976928711
    7. ' :' → logprob: -11.637166976928711
    8. ' :
' → logprob: -11.762166976928711
    9. '):' → logprob: -11.762166976928711
    10. ':

' → logprob: -12.262166976928711

Token 678: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5297945141792297
    2. ' stack' → logprob: -1.279794454574585
    3. 'stack' → logprob: -2.154794454574585
    4. '           ' → logprob: -4.279794692993164
    5. '	stack' → logprob: -6.029794692993164
    6. ' if' → logprob: -8.029794692993164
    7. '
' → logprob: -8.404794692993164
    8. '(stack' → logprob: -8.779794692993164
    9. '   ' → logprob: -9.404794692993164
    10. '                   ' → logprob: -10.029794692993164

Token 679: ' if' (ID: 538)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.12783624231815338
    2. ' stack' → logprob: -2.752836227416992
    3. '               ' → logprob: -3.502836227416992
    4. 'if' (adapté à ' if') → logprob: -4.252836227416992
    5. ' if' → logprob: -4.502836227416992
    6. '                   ' → logprob: -7.627836227416992
    7. '   ' → logprob: -8.502836227416992
    8. '	stack' → logprob: -9.627836227416992
    9. '           ' → logprob: -9.752836227416992
    10. '```' → logprob: -11.627836227416992

Token 680: ' right' (ID: 1849)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0003167545364703983
    2. ' left' → logprob: -8.125316619873047
    3. 'v' → logprob: -10.875316619873047
    4. '   ' → logprob: -14.000316619873047
    5. '	left' → logprob: -14.625316619873047
    6. ' ' → logprob: -15.000316619873047
    7. '[left' → logprob: -16.625316619873047
    8. ' v' → logprob: -16.875316619873047
    9. '  ' → logprob: -16.875316619873047
    10. '    ' → logprob: -18.125316619873047

Token 681: ':' (ID: 25)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.09574302285909653
    2. ':' → logprob: -2.47074294090271
    3. '<|end|>' → logprob: -5.720743179321289
    4. 'is' → logprob: -7.220743179321289
    5. '[' → logprob: -7.470743179321289
    6. ':
' → logprob: -7.595743179321289
    7. ' ' → logprob: -8.220743179321289
    8. 'and' → logprob: -8.220743179321289
    9. ' and' → logprob: -8.595743179321289
    10. ',' → logprob: -8.970743179321289

Token 682: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.48186081647872925
    2. '                   ' → logprob: -1.606860876083374
    3. ' stack' → logprob: -1.731860876083374
    4. '   ' → logprob: -5.481860637664795
    5. '	stack' → logprob: -7.481860637664795
    6. '               ' → logprob: -9.481861114501953
    7. '(stack' → logprob: -10.356861114501953
    8. '           ' → logprob: -11.231861114501953
    9. '                       ' → logprob: -11.356861114501953
    10. ' ' → logprob: -11.606861114501953

Token 683: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0009190816199406981
    2. '.' → logprob: -7.000918865203857
    3. 'append' → logprob: -12.375919342041016
    4. ' .' → logprob: -13.250919342041016
    5. '.app' → logprob: -13.750919342041016
    6. '   ' → logprob: -15.250919342041016
    7. '.extend' → logprob: -16.125919342041016
    8. '.ap' → logprob: -16.375919342041016
    9. '.push' → logprob: -18.125919342041016
    10. '_append' → logprob: -18.125919342041016

Token 684: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.1199081540107727
    2. '(right' → logprob: -2.369908094406128
    3. '(' → logprob: -3.994908094406128
    4. '(v' → logprob: -7.244908332824707
    5. '([' → logprob: -7.994908332824707
    6. '(left' → logprob: -10.494908332824707
    7. '(root' → logprob: -11.994908332824707
    8. ' (' → logprob: -12.494908332824707
    9. '   ' → logprob: -13.119908332824707
    10. ' ' → logprob: -13.619908332824707

Token 685: 'right' (ID: 2460)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.39964619278907776
    2. 'right' → logprob: -1.1496461629867554
    3. '(right' → logprob: -4.524646282196045
    4. '(v' → logprob: -7.399646282196045
    5. ' right' → logprob: -7.524646282196045
    6. ' v' → logprob: -8.399645805358887
    7. '[right' → logprob: -8.524645805358887
    8. ' (' → logprob: -8.774645805358887
    9. 'left' → logprob: -10.024645805358887
    10. '   ' → logprob: -11.149645805358887

Token 686: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0325924449716695e-05
    2. ' ,' → logprob: -12.00001049041748
    3. '0' → logprob: -12.62501049041748
    4. ',
' → logprob: -15.12501049041748
    5. '1' → logprob: -15.62501049041748
    6. '[' → logprob: -16.000009536743164
    7. '   ' → logprob: -16.500009536743164
    8. '```' → logprob: -16.875009536743164
    9. '	' → logprob: -17.125009536743164
    10. 'v' → logprob: -18.000009536743164

Token 687: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.045823566731997e-05
    2. ' ' → logprob: -10.875020027160645
    3. '   ' → logprob: -14.125020027160645
    4. '1' → logprob: -14.250020027160645
    5. '  ' → logprob: -17.00002098083496
    6. '    ' → logprob: -17.00002098083496
    7. '     ' → logprob: -17.37502098083496
    8. '       ' → logprob: -17.87502098083496
    9. 'st' → logprob: -18.12502098083496
    10. '           ' → logprob: -18.25002098083496

Token 688: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001761272142175585
    2. '1' → logprob: -9.000176429748535
    3. ' ' → logprob: -9.875176429748535
    4. 'st' → logprob: -14.375176429748535
    5. '   ' → logprob: -15.125176429748535
    6. '2' → logprob: -15.500176429748535
    7. '  ' → logprob: -17.00017547607422
    8. '    ' → logprob: -17.62517547607422
    9. '-' → logprob: -18.12517547607422
    10. ' st' → logprob: -18.25017547607422

Token 689: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.4741792380809784
    2. '))' → logprob: -0.9741792678833008
    3. '));' → logprob: -9.4741792678833
    4. '))

' → logprob: -11.8491792678833
    5. '               ' → logprob: -12.3491792678833
    6. ')' → logprob: -12.4741792678833
    7. '))
' → logprob: -12.7241792678833
    8. '));
' → logprob: -13.0991792678833
    9. ' ))
' → logprob: -13.3491792678833
    10. ')
' → logprob: -14.0991792678833

Token 690: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012114259880036116
    2. '
' → logprob: -7.376211643218994
    3. '<|end|>' → logprob: -8.001211166381836
    4. ',' → logprob: -9.376211166381836
    5. '			' → logprob: -10.126211166381836
    6. '                
' → logprob: -10.501211166381836
    7. '		       ' → logprob: -11.001211166381836
    8. '```' → logprob: -11.501211166381836
    9. ',
' → logprob: -11.626211166381836
    10. '	           ' → logprob: -11.751211166381836

Token 691: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.15807171165943146
    2. ' stack' → logprob: -2.158071756362915
    3. '               ' → logprob: -3.533071756362915
    4. '   ' → logprob: -8.033071517944336
    5. '           ' → logprob: -8.158071517944336
    6. '	stack' → logprob: -8.408071517944336
    7. '       ' → logprob: -8.533071517944336
    8. 'if' → logprob: -8.533071517944336
    9. '(stack' → logprob: -9.783071517944336
    10. 'v' → logprob: -9.783071517944336

Token 692: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00012356207298580557
    2. '.' → logprob: -9.125123977661133
    3. 'append' → logprob: -11.375123977661133
    4. '           ' → logprob: -13.375123977661133
    5. ' .' → logprob: -14.125123977661133
    6. '       ' → logprob: -15.500123977661133
    7. '.app' → logprob: -16.000123977661133
    8. '          ' → logprob: -16.250123977661133
    9. '.insert' → logprob: -16.250123977661133
    10. '        ' → logprob: -16.375123977661133

Token 693: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.000816773681435734
    2. '(v' → logprob: -7.125816822052002
    3. '(' → logprob: -11.500816345214844
    4. ' (' → logprob: -13.625816345214844
    5. '   ' → logprob: -14.875816345214844
    6. ' ((' → logprob: -15.625816345214844
    7. ' ' → logprob: -15.625816345214844
    8. '               ' → logprob: -16.500816345214844
    9. '           ' → logprob: -17.000816345214844
    10. '                   ' → logprob: -17.125816345214844

Token 694: 'v' (ID: 85)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.00024168188974726945
    2. ' (' → logprob: -8.37524127960205
    3. '(' → logprob: -12.62524127960205
    4. 'v' → logprob: -12.75024127960205
    5. '(left' → logprob: -13.37524127960205
    6. '   ' → logprob: -13.62524127960205
    7. '       ' → logprob: -14.25024127960205
    8. 'left' → logprob: -14.75024127960205
    9. '(None' → logprob: -14.87524127960205
    10. ' ' → logprob: -15.25024127960205

Token 695: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.1782583391759545e-05
    2. ' ,' → logprob: -10.750031471252441
    3. '[' → logprob: -12.125031471252441
    4. '	' → logprob: -12.875031471252441
    5. ',
' → logprob: -13.875031471252441
    6. '0' → logprob: -14.500031471252441
    7. '(' → logprob: -15.375031471252441
    8. '1' → logprob: -16.000032424926758
    9. ' ' → logprob: -16.000032424926758
    10. ',(' → logprob: -16.000032424926758

Token 696: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.849109119386412e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -14.125009536743164
    4. '  ' → logprob: -17.625009536743164
    5. '       ' → logprob: -17.625009536743164
    6. '     ' → logprob: -17.750009536743164
    7. '    ' → logprob: -18.250009536743164
    8. '
' → logprob: -19.000009536743164
    9. '           ' → logprob: -19.000009536743164
    10. '         ' → logprob: -19.375009536743164

Token 697: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -17.62500762939453
    4. ')' → logprob: -17.62500762939453
    5. '2' → logprob: -17.81250762939453
    6. '-' → logprob: -17.81250762939453
    7. '۱' → logprob: -17.93750762939453
    8. '```' → logprob: -18.75000762939453
    9. 'st' → logprob: -19.06250762939453
    10. '
' → logprob: -19.62500762939453

Token 698: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014569253660738468
    2. '))' → logprob: -4.514569282531738
    3. ')
' → logprob: -6.264569282531738
    4. '               ' → logprob: -7.139569282531738
    5. '))
' → logprob: -7.139569282531738
    6. '<|end|>' → logprob: -12.139569282531738
    7. ' )' → logprob: -12.639569282531738
    8. '           ' → logprob: -12.639569282531738
    9. '));' → logprob: -12.764569282531738
    10. ')

' → logprob: -13.514569282531738

Token 699: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00308240600861609
    2. '           ' → logprob: -7.003082275390625
    3. 'else' → logprob: -7.003082275390625
    4. '			' → logprob: -7.753082275390625
    5. 'elif' → logprob: -8.378082275390625
    6. '	       ' → logprob: -9.378082275390625
    7. '		       ' → logprob: -9.378082275390625
    8. ' else' → logprob: -9.503082275390625
    9. '```' → logprob: -10.003082275390625
    10. '       ' → logprob: -10.003082275390625

Token 700: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3137030303478241
    2. '               ' → logprob: -1.3137030601501465
    3. ' if' → logprob: -7.9387030601501465
    4. '	if' → logprob: -10.313702583312988
    5. '   ' → logprob: -10.438702583312988
    6. '           ' → logprob: -11.313702583312988
    7. '			' → logprob: -12.313702583312988
    8. '       ' → logprob: -12.688702583312988
    9. '```' → logprob: -14.813702583312988
    10. '                   ' → logprob: -14.938702583312988

Token 701: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0006441685254685581
    2. ' left' → logprob: -7.375644207000732
    3. '   ' → logprob: -11.375643730163574
    4. '[left' → logprob: -12.500643730163574
    5. '	left' → logprob: -14.125643730163574
    6. '           ' → logprob: -14.625643730163574
    7. ' ' → logprob: -15.000643730163574
    8. 'v' → logprob: -15.500643730163574
    9. '               ' → logprob: -15.625643730163574
    10. '       ' → logprob: -15.750643730163574

Token 702: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005026675295084715
    2. ':
' → logprob: -5.505026817321777
    3. '):' → logprob: -7.255026817321777
    4. ')' → logprob: -9.505026817321777
    5. '):
' → logprob: -9.505026817321777
    6. '<|end|>' → logprob: -10.505026817321777
    7. '               ' → logprob: -11.130026817321777
    8. ' :' → logprob: -11.380026817321777
    9. ',' → logprob: -11.630026817321777
    10. ':

' → logprob: -12.130026817321777

Token 703: ' stack' (ID: 10825)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.34941568970680237
    2. '(stack' → logprob: -1.22441565990448
    3. ' stack' → logprob: -8.09941577911377
    4. '                   ' → logprob: -8.22441577911377
    5. '((' → logprob: -8.59941577911377
    6. '(' → logprob: -9.72441577911377
    7. 'stack' → logprob: -9.84941577911377
    8. '               ' → logprob: -10.59941577911377
    9. '(Stack' → logprob: -10.97441577911377
    10. '.append' → logprob: -11.34941577911377

Token 704: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.7835754988482222e-05
    2. '.' → logprob: -11.375018119812012
    3. 'append' → logprob: -12.125018119812012
    4. '<|end|>' → logprob: -15.250018119812012
    5. '           ' → logprob: -15.875018119812012
    6. '.app' → logprob: -16.750017166137695
    7. 'Append' → logprob: -16.750017166137695
    8. ' .' → logprob: -16.750017166137695
    9. '.Append' → logprob: -17.125017166137695
    10. '.setdefault' → logprob: -17.500017166137695

Token 705: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -2.816093228830141e-06
    2. '(left' → logprob: -13.12500286102295
    3. '(' → logprob: -14.37500286102295
    4. ' ((' → logprob: -17.375001907348633
    5. '(
' → logprob: -18.000001907348633
    6. '(('' → logprob: -18.750001907348633
    7. '(([' → logprob: -18.875001907348633
    8. '```' → logprob: -18.875001907348633
    9. '<|end|>' → logprob: -19.250001907348633
    10. '[(' → logprob: -19.250001907348633

Token 706: 'left' (ID: 4530)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.00013965457037556916
    2. '(' → logprob: -9.000139236450195
    3. 'left' → logprob: -11.500139236450195
    4. '[left' → logprob: -12.875139236450195
    5. ' (' → logprob: -13.000139236450195
    6. '(right' → logprob: -15.000139236450195
    7. '(next' → logprob: -15.125139236450195
    8. ',left' → logprob: -15.500139236450195
    9. ')' → logprob: -16.125139236450195
    10. ':left' → logprob: -16.125139236450195

Token 707: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.076218025758862e-05
    2. ' ,' → logprob: -9.625070571899414
    3. '<|end|>' → logprob: -13.250070571899414
    4. '),' → logprob: -14.125070571899414
    5. ',
' → logprob: -15.000070571899414
    6. '(),' → logprob: -15.125070571899414
    7. '0' → logprob: -15.250070571899414
    8. '(' → logprob: -15.375070571899414
    9. ' ' → logprob: -15.500070571899414
    10. ')' → logprob: -15.750070571899414

Token 708: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003178544342517853
    2. ' ' → logprob: -5.753178596496582
    3. '<|end|>' → logprob: -14.753178596496582
    4. ')' → logprob: -15.753178596496582
    5. '   ' → logprob: -16.378177642822266
    6. '1' → logprob: -16.628177642822266
    7. '  ' → logprob: -16.878177642822266
    8. ',' → logprob: -17.003177642822266
    9. '۰' → logprob: -17.878177642822266
    10. '    ' → logprob: -18.128177642822266

Token 709: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. ',' → logprob: -17.625085830688477
    4. '   ' → logprob: -17.875085830688477
    5. ')' → logprob: -18.000085830688477
    6. '1' → logprob: -18.625085830688477
    7. '۰' → logprob: -19.125085830688477
    8. '  ' → logprob: -19.250085830688477
    9. '[' → logprob: -20.125085830688477
    10. '<|end|>' → logprob: -20.125085830688477

Token 710: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.007086403202265501
    2. ')' → logprob: -5.132086277008057
    3. '))
' → logprob: -6.882086277008057
    4. '               ' → logprob: -9.632086753845215
    5. '));' → logprob: -10.882086753845215
    6. ')):
' → logprob: -11.382086753845215
    7. ')):' → logprob: -11.382086753845215
    8. ')))' → logprob: -12.132086753845215
    9. '           ' → logprob: -12.257086753845215
    10. ')
' → logprob: -12.882086753845215

Token 711: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019495749846100807
    2. '               ' → logprob: -4.394495964050293
    3. '       ' → logprob: -5.394495964050293
    4. '<|end|>' → logprob: -7.144495964050293
    5. 'else' → logprob: -8.019495964050293
    6. '	       ' → logprob: -8.269495964050293
    7. ' else' → logprob: -8.269495964050293
    8. 'elif' → logprob: -8.394495964050293
    9. '   ' → logprob: -9.144495964050293
    10. '		' → logprob: -9.394495964050293

Token 712: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10386291891336441
    2. '       ' → logprob: -3.603863000869751
    3. 'else' → logprob: -3.603863000869751
    4. 'elif' → logprob: -3.978863000869751
    5. '<|end|>' → logprob: -4.478862762451172
    6. ' else' → logprob: -4.978862762451172
    7. ' elif' → logprob: -5.603862762451172
    8. '   ' → logprob: -7.103862762451172
    9. '<|end|>' → logprob: -7.478862762451172
    10. '	elif' → logprob: -7.853862762451172

Token 713: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.04859009385108948
    2. ' st' → logprob: -3.0485901832580566
    3. '(st' → logprob: -13.798589706420898
    4. '	st' → logprob: -13.923589706420898
    5. 's' → logprob: -15.173589706420898
    6. ' ' → logprob: -15.673589706420898
    7. '   ' → logprob: -16.5485897064209
    8. '1' → logprob: -16.9235897064209
    9. '-st' → logprob: -17.0485897064209
    10. '0' → logprob: -17.0485897064209

Token 714: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.38692158460617065
    2. '==' → logprob: -1.1369216442108154
    3. '=' → logprob: -11.136921882629395
    4. '==
' → logprob: -11.511921882629395
    5. '1' → logprob: -11.636921882629395
    6. '[' → logprob: -11.886921882629395
    7. ' ' → logprob: -12.761921882629395
    8. ' =' → logprob: -13.511921882629395
    9. ':' → logprob: -14.011921882629395
    10. ' ==
' → logprob: -14.261921882629395

Token 715: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013269031187519431
    2. ' ' → logprob: -6.626327037811279
    3. '2' → logprob: -15.251326560974121
    4. '0' → logprob: -15.501326560974121
    5. '   ' → logprob: -15.501326560974121
    6. '  ' → logprob: -15.938826560974121
    7. '           ' → logprob: -17.251327514648438
    8. '(' → logprob: -17.376327514648438
    9. '    ' → logprob: -17.563827514648438
    10. '       ' → logprob: -17.563827514648438

Token 716: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.978233846486546e-05
    2. ' ' → logprob: -10.375049591064453
    3. '2' → logprob: -11.000049591064453
    4. '0' → logprob: -14.250049591064453
    5. '   ' → logprob: -14.812549591064453
    6. '  ' → logprob: -15.500049591064453
    7. '
' → logprob: -16.062549591064453
    8. '```' → logprob: -16.437549591064453
    9. '     ' → logprob: -17.000049591064453
    10. '    ' → logprob: -17.000049591064453

Token 717: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006371317431330681
    2. ':
' → logprob: -5.25637149810791
    3. '               ' → logprob: -6.88137149810791
    4. '           ' → logprob: -10.00637149810791
    5. ',' → logprob: -10.50637149810791
    6. ' and' → logprob: -11.75637149810791
    7. ' :' → logprob: -11.88137149810791
    8. '       ' → logprob: -12.25637149810791
    9. '):
' → logprob: -12.50637149810791
    10. '):' → logprob: -12.75637149810791

Token 718: ' elements' (ID: 8632)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8708602786064148
    2. 'elements' → logprob: -0.8708602786064148
    3. ' elements' → logprob: -1.8708603382110596
    4. '               ' → logprob: -4.9958600997924805
    5. '   ' → logprob: -7.1208600997924805
    6. '
' → logprob: -7.1208600997924805
    7. '       ' → logprob: -8.24586009979248
    8. '(elements' → logprob: -10.12086009979248
    9. '.elements' → logprob: -10.62086009979248
    10. ' ' → logprob: -10.74586009979248

Token 719: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.65101717156358e-05
    2. '.' → logprob: -9.250096321105957
    3. '.insert' → logprob: -15.250096321105957
    4. 'append' → logprob: -15.875096321105957
    5. '.ap' → logprob: -17.375097274780273
    6. '.app' → logprob: -17.500097274780273
    7. ' .' → logprob: -18.875097274780273
    8. '.extend' → logprob: -20.000097274780273
    9. '   ' → logprob: -20.500097274780273
    10. '           ' → logprob: -21.250097274780273

Token 720: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.0002330992283532396
    2. '(v' → logprob: -9.000232696533203
    3. 'k' → logprob: -9.375232696533203
    4. '(' → logprob: -10.750232696533203
    5. '((' → logprob: -13.000232696533203
    6. ' k' → logprob: -14.500232696533203
    7. '(
' → logprob: -15.000232696533203
    8. 'v' → logprob: -16.375232696533203
    9. '[k' → logprob: -16.750232696533203
    10. '	k' → logprob: -17.000232696533203

Token 721: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000509187753777951
    2. ')
' → logprob: -7.750509262084961
    3. ')return' → logprob: -9.500509262084961
    4. '       ' → logprob: -13.625509262084961
    5. ' )' → logprob: -14.125509262084961
    6. '<|end|>' → logprob: -14.375509262084961
    7. ');' → logprob: -14.875509262084961
    8. ')

' → logprob: -15.375509262084961
    9. ')#' → logprob: -15.625509262084961
    10. '),' → logprob: -16.37550926208496

Token 722: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 723: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23474407196044922
    2. '<|end|>' → logprob: -1.6097440719604492
    3. '[' → logprob: -5.984744071960449
    4. '           ' → logprob: -6.109744071960449
    5. 'return' (adapté à ' return') → logprob: -7.234744071960449
    6. ' ' → logprob: -7.359744071960449
    7. '        ' → logprob: -7.359744071960449
    8. '   ' → logprob: -7.859744071960449
    9. ')' → logprob: -7.859744071960449
    10. '	' → logprob: -8.48474407196045

Token 724: ' elements' (ID: 8632)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.011600980535149574
    2. 'list' → logprob: -4.511600971221924
    3. ' elements' → logprob: -7.761600971221924
    4. 're' → logprob: -9.511601448059082
    5. '[' → logprob: -10.886601448059082
    6. 'sorted' → logprob: -11.511601448059082
    7. ' list' → logprob: -11.761601448059082
    8. '(elements' → logprob: -12.136601448059082
    9. '[list' → logprob: -13.136601448059082
    10. 'element' → logprob: -13.386601448059082

Token 725: '
    
' (ID: 15698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 726: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2751481235027313
    2. '<|end|>' → logprob: -2.5251481533050537
    3. 'def' → logprob: -3.1501481533050537
    4. '    
' → logprob: -3.1501481533050537
    5. '
' → logprob: -3.4001481533050537
    6. '[' → logprob: -5.525147914886475
    7. '       ' → logprob: -5.525147914886475
    8. '        
' → logprob: -5.650147914886475
    9. '    ' → logprob: -5.650147914886475
    10. ' ' → logprob: -5.775147914886475

Token 727: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.29681503772735596
    2. '   ' → logprob: -1.421815037727356
    3. '    
' → logprob: -4.296814918518066
    4. ' def' → logprob: -7.171814918518066
    5. '
' → logprob: -7.671814918518066
    6. '        
' → logprob: -7.921814918518066
    7. '       ' → logprob: -10.296814918518066
    8. '            
' → logprob: -10.296814918518066
    9. ')' → logprob: -10.421814918518066
    10. '<|end|>' → logprob: -10.546814918518066

Token 728: ' bis' (ID: 7204)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.30546730756759644
    2. '_insert' → logprob: -2.430467367172241
    3. ' insert' → logprob: -2.680467367172241
    4. '_' → logprob: -2.930467367172241
    5. 'insert' → logprob: -4.180467128753662
    6. 'split' → logprob: -4.930467128753662
    7. ' split' → logprob: -5.180467128753662
    8. '_find' → logprob: -5.805467128753662
    9. '_split' → logprob: -6.055467128753662
    10. '_update' → logprob: -6.055467128753662

Token 729: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -4.8351892473874614e-05
    2. 'earch' → logprob: -11.000048637390137
    3. 'e' → logprob: -11.750048637390137
    4. '   ' → logprob: -12.625048637390137
    5. '
' → logprob: -12.875048637390137
    6. '\' → logprob: -13.000048637390137
    7. 'ected' → logprob: -13.250048637390137
    8. '_' → logprob: -13.500048637390137
    9. '```' → logprob: -13.500048637390137
    10. 'ection' → logprob: -13.625048637390137

Token 730: '(self' (ID: 2402)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.002419533906504512
    2. '(self' → logprob: -6.252419471740723
    3. '_right' → logprob: -8.377419471740723
    4. '_' → logprob: -9.502419471740723
    5. 'left' → logprob: -9.627419471740723
    6. '(' → logprob: -9.627419471740723
    7. '_key' → logprob: -10.752419471740723
    8. '_(' → logprob: -11.127419471740723
    9. '(left' → logprob: -12.627419471740723
    10. '(_' → logprob: -12.752419471740723

Token 731: ',' (ID: 11)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.006877341773360968
    2. '_key' → logprob: -5.381877422332764
    3. ')' → logprob: -7.006877422332764
    4. 'left' → logprob: -7.256877422332764
    5. ',' → logprob: -8.506876945495605
    6. '(self' → logprob: -8.881876945495605
    7. '_right' → logprob: -9.506876945495605
    8. ')(' → logprob: -9.506876945495605
    9. '(key' → logprob: -10.256876945495605
    10. ')_' → logprob: -10.631876945495605

Token 732: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.0625920221209526
    2. ' key' → logprob: -2.812592029571533
    3. 'x' → logprob: -7.937592029571533
    4. ')' → logprob: -9.312591552734375
    5. 'self' → logprob: -9.562591552734375
    6. ' x' → logprob: -9.812591552734375
    7. '   ' → logprob: -11.312591552734375
    8. 'k' → logprob: -11.562591552734375
    9. 'value' → logprob: -11.812591552734375
    10. '_key' → logprob: -12.312591552734375

Token 733: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0349288173019886
    2. '):' → logprob: -3.409928798675537
    3. '):
' → logprob: -7.534928798675537
    4. 'self' → logprob: -7.659928798675537
    5. ',key' → logprob: -9.409929275512695
    6. '   ' → logprob: -9.784929275512695
    7. '       ' → logprob: -9.909929275512695
    8. ')' → logprob: -10.284929275512695
    9. '):
' → logprob: -10.909929275512695
    10. ' ,' → logprob: -11.409929275512695

Token 734: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031504809856414795
    2. 'v' → logprob: -4.0315046310424805
    3. ' v' → logprob: -4.4065046310424805
    4. ' if' → logprob: -8.03150463104248
    5. '```' → logprob: -8.28150463104248
    6. '   ' → logprob: -8.40650463104248
    7. '
' → logprob: -8.65650463104248
    8. '	v' → logprob: -10.90650463104248
    9. 'if' → logprob: -11.03150463104248
    10. ' i' → logprob: -11.15650463104248

Token 735: ' bis' (ID: 7204)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9239144325256348
    2. ' v' → logprob: -1.1739144325256348
    3. 'v' → logprob: -1.6739144325256348
    4. '   ' → logprob: -2.4239144325256348
    5. 'def' → logprob: -4.923914432525635
    6. 'if' → logprob: -5.798914432525635
    7. ' if' → logprob: -5.923914432525635
    8. ' def' → logprob: -6.048914432525635
    9. '#' → logprob: -7.173914432525635
    10. '"""
' → logprob: -8.173913955688477

Token 736: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -6.2729995988775045e-06
    2. 'ects' → logprob: -12.375006675720215
    3. 'ected' → logprob: -13.500006675720215
    4. 'e' → logprob: -16.1250057220459
    5. 'ec' → logprob: -16.2500057220459
    6. 'ector' → logprob: -16.7500057220459
    7. 'ection' → logprob: -16.7500057220459
    8. '   ' → logprob: -16.7500057220459
    9. 'ecta' → logprob: -17.1250057220459
    10. 'ectl' → logprob: -17.1250057220459

Token 737: '_right' (ID: 24402)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.040483128279447556
    2. '_right' → logprob: -4.540482997894287
    3. '(self' → logprob: -4.665482997894287
    4. 'self' → logprob: -5.040482997894287
    5. 'left' → logprob: -5.165482997894287
    6. '_key' → logprob: -5.665482997894287
    7. '   ' → logprob: -6.540482997894287
    8. 'def' → logprob: -6.915482997894287
    9. '       ' → logprob: -7.540482997894287
    10. 'key' → logprob: -8.790483474731445

Token 738: '
' (ID: 198)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3578794598579407
    2. '(' → logprob: -1.732879400253296
    3. '       ' → logprob: -2.607879400253296
    4. '(v' → logprob: -3.607879400253296
    5. '(
' → logprob: -4.357879638671875
    6. '   ' → logprob: -4.982879638671875
    7. '=' → logprob: -6.357879638671875
    8. ' =' → logprob: -7.482879638671875
    9. ')' → logprob: -8.857879638671875
    10. '
' → logprob: -9.107879638671875

Token 739: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19932997226715088
    2. ':' → logprob: -2.5743298530578613
    3. '   ' → logprob: -2.5743298530578613
    4. ':
' → logprob: -4.324329853057861
    5. '
' → logprob: -4.949329853057861
    6. ' =' → logprob: -6.449329853057861
    7. ',' → logprob: -6.449329853057861
    8. '):
' → logprob: -6.949329853057861
    9. '        
' → logprob: -6.949329853057861
    10. '=' → logprob: -7.449329853057861

Token 740: ' if' (ID: 538)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.18133074045181274
    2. 'res' → logprob: -2.431330680847168
    3. 'pos' → logprob: -4.181330680847168
    4. 'cnt' → logprob: -4.181330680847168
    5. 'count' → logprob: -4.306330680847168
    6. 'idx' → logprob: -4.931330680847168
    7. 'i' → logprob: -5.181330680847168
    8. 'def' → logprob: -5.306330680847168
    9. 'r' → logprob: -5.431330680847168
    10. '   ' → logprob: -5.556330680847168

Token 741: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0467582568526268
    2. ' self' → logprob: -3.4217581748962402
    3. 'not' → logprob: -4.54675817489624
    4. ' not' → logprob: -6.04675817489624
    5. ' ' → logprob: -10.796758651733398
    6. 'key' → logprob: -10.921758651733398
    7. '   ' → logprob: -11.921758651733398
    8. '
' → logprob: -12.671758651733398
    9. '  ' → logprob: -12.921758651733398
    10. ' key' → logprob: -13.046758651733398

Token 742: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.0015865087043493986
    2. 'root' → logprob: -6.626586437225342
    3. '.' → logprob: -9.1265869140625
    4. ' .' → logprob: -9.6265869140625
    5. '   ' → logprob: -11.0015869140625
    6. '[' → logprob: -11.3765869140625
    7. '
' → logprob: -11.5015869140625
    8. ' is' → logprob: -11.8765869140625
    9. ' root' → logprob: -11.8765869140625
    10. '.
' → logprob: -11.8765869140625

Token 743: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.023252584040164948
    2. 'is' → logprob: -3.773252487182617
    3. ' ' → logprob: -12.398252487182617
    4. '   ' → logprob: -13.773252487182617
    5. '[' → logprob: -14.523252487182617
    6. '	is' → logprob: -14.773252487182617
    7. ':' → logprob: -15.648252487182617
    8. ')' → logprob: -15.898252487182617
    9. '==' → logprob: -16.148252487182617
    10. '.is' → logprob: -16.398252487182617

Token 744: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.03805377334356308
    2. ' None' → logprob: -3.2880537509918213
    3. '   ' → logprob: -11.913053512573242
    4. ' ' → logprob: -13.663053512573242
    5. 'not' → logprob: -13.913053512573242
    6. 'none' → logprob: -14.038053512573242
    7. 'False' → logprob: -14.163053512573242
    8. '  ' → logprob: -14.538053512573242
    9. ' not' → logprob: -14.788053512573242
    10. '    ' → logprob: -15.288053512573242

Token 745: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09018895030021667
    2. ':
' → logprob: -2.465188980102539
    3. '       ' → logprob: -7.465188980102539
    4. ':return' → logprob: -7.590188980102539
    5. '           ' → logprob: -9.590188980102539
    6. ':
' → logprob: -10.465188980102539
    7. '):
' → logprob: -10.840188980102539
    8. ',' → logprob: -11.090188980102539
    9. ' =' → logprob: -11.840188980102539
    10. ' :' → logprob: -11.965188980102539

Token 746: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9057541489601135
    2. 'return' → logprob: -1.1557540893554688
    3. '       ' → logprob: -2.4057540893554688
    4. ' return' → logprob: -2.6557540893554688
    5. 'count' → logprob: -2.9057540893554688
    6. 'v' → logprob: -3.5307540893554688
    7. '
' → logprob: -3.6557540893554688
    8. '0' → logprob: -5.905754089355469
    9. ' count' → logprob: -6.030754089355469
    10. ' v' → logprob: -6.780754089355469

Token 747: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020497082732617855
    2. ' ' → logprob: -8.500205039978027
    3. 'self' → logprob: -13.875205039978027
    4. '   ' → logprob: -16.12520408630371
    5. '       ' → logprob: -17.12520408630371
    6. 'None' → logprob: -17.18770408630371
    7. '
' → logprob: -17.25020408630371
    8. '           ' → logprob: -17.43770408630371
    9. ' self' → logprob: -17.62520408630371
    10. '     ' → logprob: -17.62520408630371

Token 748: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.625003814697266
    3. 'self' → logprob: -14.125003814697266
    4. 'None' → logprob: -16.625003814697266
    5. 'len' → logprob: -17.437503814697266
    6. '[' → logprob: -17.562503814697266
    7. '   ' → logprob: -17.875003814697266
    8. 'count' → logprob: -17.937503814697266
    9. '1' → logprob: -18.000003814697266
    10. '-' → logprob: -18.187503814697266

Token 749: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3159080445766449
    2. '
' → logprob: -1.3159080743789673
    3. 'v' → logprob: -6.815907955169678
    4. ',' → logprob: -7.065907955169678
    5. '
' → logprob: -8.315908432006836
    6. ',
' → logprob: -8.815908432006836
    7. '        
' → logprob: -9.315908432006836
    8. '   ' → logprob: -9.690908432006836
    9. '<|end|>' → logprob: -10.190908432006836
    10. ' v' → logprob: -11.315908432006836

Token 750: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0048441230319440365
    2. 'v' → logprob: -5.3798441886901855
    3. '   ' → logprob: -9.129843711853027
    4. ' v' → logprob: -10.129843711853027
    5. '
' → logprob: -10.504843711853027
    6. 'count' → logprob: -10.879843711853027
    7. ',' → logprob: -11.504843711853027
    8. 'n' → logprob: -11.754843711853027
    9. '	v' → logprob: -13.504843711853027
    10. '```' → logprob: -13.504843711853027

Token 751: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.21572650969028473
    2. 'res' → logprob: -2.840726613998413
    3. '       ' → logprob: -3.465726613998413
    4. 'pos' → logprob: -3.465726613998413
    5. 'ans' → logprob: -3.590726613998413
    6. 'cnt' → logprob: -4.465726375579834
    7. 'idx' → logprob: -4.590726375579834
    8. 'count' → logprob: -4.840726375579834
    9. 'i' → logprob: -4.965726375579834
    10. 'result' → logprob: -5.965726375579834

Token 752: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25222963094711304
    2. ' =' → logprob: -1.5022296905517578
    3. ',' → logprob: -8.377229690551758
    4. '   ' → logprob: -10.127229690551758
    5. '=v' → logprob: -11.377229690551758
    6. 'v' → logprob: -11.752229690551758
    7. '       ' → logprob: -12.627229690551758
    8. ' ' → logprob: -13.252229690551758
    9. '=
' → logprob: -13.752229690551758
    10. '    ' → logprob: -13.752229690551758

Token 753: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008066523587331176
    2. ' self' → logprob: -7.12580680847168
    3. '       ' → logprob: -13.62580680847168
    4. 'v' → logprob: -15.25080680847168
    5. '   ' → logprob: -15.25080680847168
    6. ' ' → logprob: -15.75080680847168
    7. '(self' → logprob: -16.62580680847168
    8. '[self' → logprob: -16.62580680847168
    9. '0' → logprob: -17.00080680847168
    10. '	self' → logprob: -17.62580680847168

Token 754: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.20222702622413635
    2. 'root' → logprob: -1.952226996421814
    3. 'self' → logprob: -3.2022271156311035
    4. '       ' → logprob: -8.577226638793945
    5. '
' → logprob: -8.952226638793945
    6. '   ' → logprob: -10.202226638793945
    7. '.self' → logprob: -10.327226638793945
    8. '[' → logprob: -10.952226638793945
    9. ' root' → logprob: -11.202226638793945
    10. '_root' → logprob: -11.577226638793945

Token 755: ';' (ID: 26)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10434137284755707
    2. ',' → logprob: -2.8543412685394287
    3. '       ' → logprob: -3.4793412685394287
    4. 'result' → logprob: -5.354341506958008
    5. 'count' → logprob: -6.104341506958008
    6. ',
' → logprob: -6.979341506958008
    7. 's' → logprob: -7.354341506958008
    8. '
' → logprob: -7.979341506958008
    9. 'n' → logprob: -8.479341506958008
    10. '#' → logprob: -8.729341506958008

Token 756: ' idx' (ID: 14016)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5664295554161072
    2. 'res' → logprob: -1.566429615020752
    3. 'idx' → logprob: -2.441429615020752
    4. 'ans' → logprob: -2.941429615020752
    5. 'i' → logprob: -3.566429615020752
    6. 'r' → logprob: -3.941429615020752
    7. 'result' → logprob: -4.441429615020752
    8. 'index' → logprob: -5.441429615020752
    9. 'count' → logprob: -5.566429615020752
    10. 'cnt' → logprob: -5.566429615020752

Token 757: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006716317031532526
    2. ' =' → logprob: -5.006716251373291
    3. '0' → logprob: -14.38171672821045
    4. '=
' → logprob: -16.256715774536133
    5. ',' → logprob: -16.381715774536133
    6. ' ' → logprob: -16.381715774536133
    7. '<|end|>' → logprob: -17.006715774536133
    8. '=}' → logprob: -18.006715774536133
    9. 's' → logprob: -18.881715774536133
    10. ')' → logprob: -19.006715774536133

Token 758: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.50001049041748
    3. 'self' → logprob: -15.37501049041748
    4. 'v' → logprob: -17.375009536743164
    5. '   ' → logprob: -18.750009536743164
    6. '۰' → logprob: -20.250009536743164
    7. '1' → logprob: -20.375009536743164
    8. '  ' → logprob: -20.500009536743164
    9. ' self' → logprob: -20.625009536743164
    10. '       ' → logprob: -20.875009536743164

Token 759: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2127087504486553e-05
    2. ' ' → logprob: -10.750021934509277
    3. 'self' → logprob: -14.750021934509277
    4. '   ' → logprob: -16.000022888183594
    5. 'v' → logprob: -16.250022888183594
    6. '۰' → logprob: -17.312522888183594
    7. '  ' → logprob: -18.187522888183594
    8. '=' → logprob: -19.250022888183594
    9. '1' → logprob: -19.250022888183594
    10. '00' → logprob: -19.312522888183594

Token 760: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0401025265455246
    2. '
' → logprob: -3.415102481842041
    3. ' while' → logprob: -5.540102481842041
    4. 'while' → logprob: -6.290102481842041
    5. '	while' → logprob: -8.6651029586792
    6. '```' → logprob: -8.6651029586792
    7. '        
' → logprob: -9.0401029586792
    8. '<|end|>' → logprob: -9.5401029586792
    9. '   ' → logprob: -9.7901029586792
    10. '``' → logprob: -11.6651029586792

Token 761: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03919027000665665
    2. '
' → logprob: -3.2891902923583984
    3. ' while' → logprob: -7.414190292358398
    4. '   ' → logprob: -9.164190292358398
    5. '	while' → logprob: -9.164190292358398
    6. 'while' → logprob: -9.539190292358398
    7. '```' → logprob: -9.539190292358398
    8. '        
' → logprob: -9.789190292358398
    9. '<|end|>' → logprob: -9.789190292358398
    10. '	' → logprob: -10.414190292358398

Token 762: ' count' (ID: 3605)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.007474586833268404
    2. '       ' → logprob: -5.257474422454834
    3. ' while' → logprob: -6.507474422454834
    4. '
' → logprob: -7.257474422454834
    5. '```' → logprob: -10.507474899291992
    6. '	while' → logprob: -12.007474899291992
    7. '   ' → logprob: -12.132474899291992
    8. '        
' → logprob: -13.632474899291992
    9. 'While' → logprob: -14.382474899291992
    10. '``' → logprob: -15.007474899291992

Token 763: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.058003827929496765
    2. '=' → logprob: -2.9330039024353027
    3. '=v' → logprob: -6.183003902435303
    4. '(v' → logprob: -7.683003902435303
    5. '<|end|>' → logprob: -7.808003902435303
    6. 'v' → logprob: -9.183003425598145
    7. ',' → logprob: -10.808003425598145
    8. ',v' → logprob: -11.183003425598145
    9. ' ' → logprob: -11.308003425598145
    10. '(' → logprob: -11.558003425598145

Token 764: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019979889038950205
    2. ' self' → logprob: -6.251997947692871
    3. 'lambda' → logprob: -10.251997947692871
    4. '       ' → logprob: -10.751997947692871
    5. '   ' → logprob: -12.126997947692871
    6. '
' → logprob: -13.126997947692871
    7. '	self' → logprob: -13.501997947692871
    8. 'v' → logprob: -13.751997947692871
    9. '(self' → logprob: -14.001997947692871
    10. 'Tre' → logprob: -14.626997947692871

Token 765: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -7.896309739408025e-07
    2. 'self' → logprob: -14.625000953674316
    3. '   ' → logprob: -16.0
    4. '_count' → logprob: -16.5
    5. 'def' → logprob: -17.25
    6. '
' → logprob: -17.25
    7. '.__' → logprob: -17.5
    8. '_self' → logprob: -17.625
    9. '.' → logprob: -18.375
    10. 'import' → logprob: -18.875

Token 766: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -8.895480277715251e-06
    2. '_count' → logprob: -12.125008583068848
    3. ' count' → logprob: -12.625008583068848
    4. 'Count' → logprob: -16.375009536743164
    5. '.count' → logprob: -16.625009536743164
    6. '   ' → logprob: -19.750009536743164
    7. 'ount' → logprob: -19.875009536743164
    8. ' ' → logprob: -19.875009536743164
    9. '	count' → logprob: -19.875009536743164
    10. '(count' → logprob: -20.125009536743164

Token 767: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005634859204292297
    2. '       ' → logprob: -5.505634784698486
    3. '        
' → logprob: -7.505634784698486
    4. '
' → logprob: -7.880634784698486
    5. '(v' → logprob: -8.630635261535645
    6. '<|end|>' → logprob: -8.755635261535645
    7. 'while' → logprob: -8.755635261535645
    8. ' while' → logprob: -11.255635261535645
    9. 'v' → logprob: -11.255635261535645
    10. '[v' → logprob: -11.380635261535645

Token 768: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02185884490609169
    2. ' while' → logprob: -4.3968586921691895
    3. '
' → logprob: -5.8968586921691895
    4. '	while' → logprob: -6.2718586921691895
    5. 'while' → logprob: -6.3968586921691895
    6. '<|end|>' → logprob: -6.6468586921691895
    7. '```' → logprob: -7.3968586921691895
    8. '        
' → logprob: -8.021859169006348
    9. '   ' → logprob: -8.146859169006348
    10. ' 
' → logprob: -9.396859169006348

Token 769: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.24965696036815643
    2. '       ' → logprob: -2.249656915664673
    3. ' while' → logprob: -2.249656915664673
    4. '
' → logprob: -4.624657154083252
    5. '	while' → logprob: -8.874656677246094
    6. '   ' → logprob: -9.874656677246094
    7. 'While' → logprob: -10.499656677246094
    8. '```' → logprob: -10.749656677246094
    9. '        
' → logprob: -11.749656677246094
    10. '``' → logprob: -13.249656677246094

Token 770: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00036667886888608336
    2. 'True' → logprob: -8.1253662109375
    3. ' v' → logprob: -9.8753662109375
    4. '   ' → logprob: -11.1253662109375
    5. ' True' → logprob: -13.1253662109375
    6. '	v' → logprob: -14.7503662109375
    7. ' ' → logprob: -15.0003662109375
    8. '       ' → logprob: -15.1253662109375
    9. '(True' → logprob: -15.2503662109375
    10. '  ' → logprob: -15.2503662109375

Token 771: ':
' (ID: 734)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4162944555282593
    2. ':
' → logprob: -1.5412944555282593
    3. ':' → logprob: -2.541294574737549
    4. ' and' → logprob: -3.166294574737549
    5. 'and' → logprob: -5.666294574737549
    6. '[' → logprob: -6.791294574737549
    7. '=' → logprob: -7.916294574737549
    8. '       ' → logprob: -9.29129409790039
    9. 'is' → logprob: -9.41629409790039
    10. 'v' → logprob: -9.41629409790039

Token 772: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004272123333066702
    2. '```' → logprob: -9.00042724609375
    3. ' if' → logprob: -9.12542724609375
    4. 'if' → logprob: -9.87542724609375
    5. '       ' → logprob: -10.50042724609375
    6. ',' → logprob: -10.62542724609375
    7. 'v' → logprob: -11.25042724609375
    8. '	       ' → logprob: -11.50042724609375
    9. '<|end|>' → logprob: -11.50042724609375
    10. '
' → logprob: -12.00042724609375

Token 773: ' left' (ID: 3561)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.03843870386481285
    2. '           ' → logprob: -3.9134387969970703
    3. 'if' → logprob: -4.03843879699707
    4. ' if' → logprob: -9.78843879699707
    5. ' k' → logprob: -10.03843879699707
    6. 'key' → logprob: -12.41343879699707
    7. '       ' → logprob: -13.41343879699707
    8. '```' → logprob: -13.66343879699707
    9. '   ' → logprob: -13.91343879699707
    10. '
' → logprob: -13.91343879699707

Token 774: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20339688658714294
    2. ' =' → logprob: -1.7033969163894653
    3. ',' → logprob: -6.953396797180176
    4. '_count' → logprob: -7.453396797180176
    5. 'count' → logprob: -8.828396797180176
    6. '<|end|>' → logprob: -9.578396797180176
    7. '           ' → logprob: -9.953396797180176
    8. '       ' → logprob: -10.078396797180176
    9. 'v' → logprob: -10.703396797180176
    10. '=None' → logprob: -11.203396797180176

Token 775: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.18802623450756073
    2. 'key' → logprob: -1.9380261898040771
    3. ' right' → logprob: -4.563026428222656
    4. ' key' → logprob: -4.688026428222656
    5. 'k' → logprob: -4.938026428222656
    6. '_,' → logprob: -8.438026428222656
    7. ' k' → logprob: -8.438026428222656
    8. 'v' → logprob: -9.688026428222656
    9. '   ' → logprob: -10.688026428222656
    10. '_right' → logprob: -11.563026428222656

Token 776: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.44226256012916565
    2. ' =' → logprob: -1.1922625303268433
    3. ',' → logprob: -2.942262649536133
    4. ',v' → logprob: -7.317262649536133
    5. 'v' → logprob: -8.817262649536133
    6. '=v' → logprob: -9.067262649536133
    7. '<|end|>' → logprob: -9.692262649536133
    8. '   ' → logprob: -10.442262649536133
    9. '           ' → logprob: -10.567262649536133
    10. '       ' → logprob: -11.317262649536133

Token 777: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.008806252852082253
    2. 'key' → logprob: -5.258806228637695
    3. ' k' → logprob: -6.008806228637695
    4. '_,' → logprob: -7.133806228637695
    5. ' key' → logprob: -8.758806228637695
    6. '_k' → logprob: -9.758806228637695
    7. '_key' → logprob: -10.633806228637695
    8. '   ' → logprob: -10.883806228637695
    9. '_' → logprob: -11.633806228637695
    10. ' ' → logprob: -11.758806228637695

Token 778: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.484813928604126
    2. ' =' → logprob: -0.984813928604126
    3. ',' → logprob: -4.609813690185547
    4. ',v' → logprob: -7.484813690185547
    5. '=v' → logprob: -8.984813690185547
    6. '   ' → logprob: -11.234813690185547
    7. '       ' → logprob: -11.859813690185547
    8. 'v' → logprob: -12.359813690185547
    9. ' ' → logprob: -12.484813690185547
    10. '           ' → logprob: -12.609813690185547

Token 779: ' _,' (ID: 18042)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.03894665092229843
    2. 'p' → logprob: -4.288946628570557
    3. 'priority' → logprob: -4.538946628570557
    4. 'prio' → logprob: -4.788946628570557
    5. '_' → logprob: -6.163946628570557
    6. '__,' → logprob: -6.788946628570557
    7. 'pri' → logprob: -7.163946628570557
    8. 'prior' → logprob: -7.288946628570557
    9. '_p' → logprob: -8.538947105407715
    10. 'pr' → logprob: -8.663947105407715

Token 780: ' _,' (ID: 18042)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.07338686287403107
    2. 'priority' → logprob: -3.0733869075775146
    3. 'prio' → logprob: -4.3233866691589355
    4. 'p' → logprob: -5.1983866691589355
    5. '_' → logprob: -6.3233866691589355
    6. '__,' → logprob: -6.4483866691589355
    7. 'pri' → logprob: -6.9483866691589355
    8. 'prior' → logprob: -8.073387145996094
    9. 'pr' → logprob: -8.323387145996094
    10. ' _,' → logprob: -9.198387145996094

Token 781: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9882248640060425
    2. 'sum' → logprob: -0.9882248640060425
    3. 'count' → logprob: -1.9882248640060425
    4. 'desc' → logprob: -2.988224983215332
    5. 'n' → logprob: -4.238224983215332
    6. '_=' → logprob: -4.488224983215332
    7. 's' → logprob: -4.738224983215332
    8. 'c' → logprob: -5.113224983215332
    9. 'cnt' → logprob: -5.113224983215332
    10. 'size' → logprob: -5.238224983215332

Token 782: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07891204208135605
    2. ' =' → logprob: -2.5789120197296143
    3. '           ' → logprob: -11.078911781311035
    4. ',' → logprob: -12.828911781311035
    5. '=v' → logprob: -12.953911781311035
    6. '               ' → logprob: -15.328911781311035
    7. ' ' → logprob: -15.578911781311035
    8. '		' → logprob: -15.578911781311035
    9. '       ' → logprob: -15.578911781311035
    10. 'v' → logprob: -15.703911781311035

Token 783: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0040882546454668045
    2. ' v' → logprob: -5.504088401794434
    3. '	v' → logprob: -12.254088401794434
    4. '   ' → logprob: -13.254088401794434
    5. '           ' → logprob: -13.379088401794434
    6. '*v' → logprob: -13.754088401794434
    7. '       ' → logprob: -15.129088401794434
    8. '[v' → logprob: -16.004087448120117
    9. '$v' → logprob: -16.629087448120117
    10. ' ' → logprob: -16.754087448120117

Token 784: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16085004806518555
    2. '
' → logprob: -1.9108500480651855
    3. '            
' → logprob: -8.910850524902344
    4. ',' → logprob: -9.035850524902344
    5. '       ' → logprob: -9.410850524902344
    6. ' =' → logprob: -9.910850524902344
    7. '=' → logprob: -10.035850524902344
    8. ',
' → logprob: -10.660850524902344
    9. '
' → logprob: -10.785850524902344
    10. '          ' → logprob: -10.910850524902344

Token 785: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00042412037146277726
    2. ' if' → logprob: -8.1254243850708
    3. '<|end|>' → logprob: -10.2504243850708
    4. ' ' → logprob: -10.7504243850708
    5. '
' → logprob: -10.8754243850708
    6. ' 
' → logprob: -11.1254243850708
    7. ',' → logprob: -11.6254243850708
    8. '            
' → logprob: -11.7504243850708
    9. '            ' → logprob: -12.5004243850708
    10. '```' → logprob: -13.2504243850708

Token 786: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.31889164447784424
    2. '           ' → logprob: -1.3188916444778442
    3. ' if' → logprob: -5.193891525268555
    4. '       ' → logprob: -10.693891525268555
    5. '   ' → logprob: -10.818891525268555
    6. ' ' → logprob: -12.068891525268555
    7. 'If' → logprob: -12.318891525268555
    8. '```' → logprob: -12.943891525268555
    9. '	if' → logprob: -13.193891525268555
    10. 'v' → logprob: -13.443891525268555

Token 787: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.11325254291296005
    2. 'k' → logprob: -2.238252639770508
    3. ' key' → logprob: -7.988252639770508
    4. '   ' → logprob: -10.238252639770508
    5. 'v' → logprob: -11.488252639770508
    6. ' k' → logprob: -11.738252639770508
    7. '           ' → logprob: -11.863252639770508
    8. ' ' → logprob: -12.238252639770508
    9. 'left' → logprob: -12.238252639770508
    10. '	key' → logprob: -12.925752639770508

Token 788: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.4355164170265198
    2. '>=' → logprob: -1.435516357421875
    3. ' >' → logprob: -3.310516357421875
    4. '>' → logprob: -3.435516357421875
    5. '<' → logprob: -3.810516357421875
    6. ' <' → logprob: -3.935516357421875
    7. '[' → logprob: -5.935516357421875
    8. ' ' → logprob: -7.310516357421875
    9. '   ' → logprob: -7.810516357421875
    10. ')>=' → logprob: -9.310516357421875

Token 789: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.002805821830406785
    2. ' k' → logprob: -5.877805709838867
    3. '           ' → logprob: -14.127805709838867
    4. '	k' → logprob: -16.252805709838867
    5. '   ' → logprob: -16.877805709838867
    6. ' ' → logprob: -17.252805709838867
    7. '_k' → logprob: -17.752805709838867
    8. '  ' → logprob: -18.377805709838867
    9. '               ' → logprob: -18.502805709838867
    10. '          ' → logprob: -18.877805709838867

Token 790: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22561033070087433
    2. ':
' → logprob: -1.600610375404358
    3. '           ' → logprob: -9.100610733032227
    4. '               ' → logprob: -10.850610733032227
    5. ' :' → logprob: -11.100610733032227
    6. '):
' → logprob: -11.600610733032227
    7. ' and' → logprob: -11.725610733032227
    8. ',' → logprob: -11.725610733032227
    9. ' :
' → logprob: -12.225610733032227
    10. ':

' → logprob: -12.225610733032227

Token 791: ' idx' (ID: 14016)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2512390613555908
    2. 'idx' → logprob: -2.001239061355591
    3. ' idx' → logprob: -2.501239061355591
    4. '           ' → logprob: -5.501238822937012
    5. '   ' → logprob: -7.876238822937012
    6. ' ' → logprob: -8.501238822937012
    7. 'index' → logprob: -9.251238822937012
    8. '	idx' → logprob: -9.626238822937012
    9. '
' → logprob: -10.126238822937012
    10. '[idx' → logprob: -11.001238822937012

Token 792: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5234490036964417
    2. '+=' → logprob: -0.8984490036964417
    3. ' =' → logprob: -8.648448944091797
    4. '=' → logprob: -9.023448944091797
    5. ']+=' → logprob: -11.523448944091797
    6. '   ' → logprob: -12.023448944091797
    7. '+' → logprob: -12.148448944091797
    8. ' +' → logprob: -13.023448944091797
    9. '[' → logprob: -13.773448944091797
    10. '	' → logprob: -13.898448944091797

Token 793: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.006291718687862158
    2. 'self' → logprob: -5.88129186630249
    3. ' count' → logprob: -6.50629186630249
    4. '1' → logprob: -6.63129186630249
    5. '(count' → logprob: -7.63129186630249
    6. '   ' → logprob: -9.756291389465332
    7. '(' → logprob: -9.881291389465332
    8. ' ' → logprob: -10.756291389465332
    9. ' self' → logprob: -10.756291389465332
    10. ' (' → logprob: -11.631291389465332

Token 794: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.0001049736310960725
    2. 'left' → logprob: -10.125104904174805
    3. '(v' → logprob: -10.125104904174805
    4. '(' → logprob: -11.250104904174805
    5. '[left' → logprob: -11.625104904174805
    6. '(right' → logprob: -13.750104904174805
    7. 'v' → logprob: -13.750104904174805
    8. '((' → logprob: -15.000104904174805
    9. ' left' → logprob: -16.500104904174805
    10. '([' → logprob: -16.500104904174805

Token 795: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009833062067627907
    2. ')+' → logprob: -4.634832859039307
    3. ' )' → logprob: -10.259833335876465
    4. '[' → logprob: -11.009833335876465
    5. '           ' → logprob: -12.634833335876465
    6. ')
' → logprob: -12.759833335876465
    7. '   ' → logprob: -12.759833335876465
    8. '+' → logprob: -13.009833335876465
    9. '())' → logprob: -13.384833335876465
    10. ')+(' → logprob: -13.384833335876465

Token 796: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38693955540657043
    2. '+' → logprob: -1.136939525604248
    3. '           ' → logprob: -10.136940002441406
    4. ')+' → logprob: -11.761940002441406
    5. '
' → logprob: -12.136940002441406
    6. '()+' → logprob: -12.511940002441406
    7. ')' → logprob: -12.636940002441406
    8. '+
' → logprob: -13.136940002441406
    9. '                   ' → logprob: -13.636940002441406
    10. ' plus' → logprob: -14.011940002441406

Token 797: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001577698567416519
    2. ' ' → logprob: -9.000157356262207
    3. '(' → logprob: -10.375157356262207
    4. ' (' → logprob: -13.750157356262207
    5. '   ' → logprob: -14.000157356262207
    6. '           ' → logprob: -14.625157356262207
    7. '+' → logprob: -15.500157356262207
    8. 'int' → logprob: -15.875157356262207
    9. '(int' → logprob: -16.125158309936523
    10. '       ' → logprob: -16.250158309936523

Token 798: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.250005722045898
    3. '(' → logprob: -13.875005722045898
    4. 'int' → logprob: -17.1250057220459
    5. '   ' → logprob: -18.2500057220459
    6. ' (' → logprob: -18.5000057220459
    7. '+' → logprob: -18.6250057220459
    8. '{' → logprob: -18.7500057220459
    9. 'v' → logprob: -18.7500057220459
    10. '[' → logprob: -19.0000057220459

Token 799: ';' (ID: 26)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14993524551391602
    2. '
' → logprob: -2.274935245513916
    3. ';' → logprob: -3.649935245513916
    4. 'v' → logprob: -4.649935245513916
    5. ',' → logprob: -8.149934768676758
    6. ',v' → logprob: -8.274934768676758
    7. ' v' → logprob: -9.524934768676758
    8. '[v' → logprob: -9.899934768676758
    9. '
' → logprob: -10.274934768676758
    10. '            
' → logprob: -10.399934768676758

Token 800: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0029642691370099783
    2. '           ' → logprob: -6.002964496612549
    3. ' v' → logprob: -7.627964496612549
    4. '	v' → logprob: -14.12796401977539
    5. '   ' → logprob: -14.62796401977539
    6. '       ' → logprob: -15.12796401977539
    7. '               ' → logprob: -16.37796401977539
    8. 've' → logprob: -17.00296401977539
    9. 'x' → logprob: -17.12796401977539
    10. ')v' → logprob: -17.12796401977539

Token 801: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0052350712940096855
    2. ' =' → logprob: -5.255235195159912
    3. '=v' → logprob: -13.755234718322754
    4. '[' → logprob: -16.13023567199707
    5. '=
' → logprob: -16.50523567199707
    6. 'v' → logprob: -18.75523567199707
    7. ',' → logprob: -18.75523567199707
    8. '.=' → logprob: -19.00523567199707
    9. '＝' → logprob: -19.50523567199707
    10. ']=' → logprob: -20.00523567199707

Token 802: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.00023846338444855064
    2. ' right' → logprob: -8.375238418579102
    3. 'v' → logprob: -11.875238418579102
    4. '	right' → logprob: -14.500238418579102
    5. '[right' → logprob: -15.750238418579102
    6. 'r' → logprob: -15.875238418579102
    7. '   ' → logprob: -16.6252384185791
    8. ' v' → logprob: -17.3752384185791
    9. '(right' → logprob: -17.5002384185791
    10. ' ' → logprob: -18.3752384185791

Token 803: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4430217444896698
    2. 'else' → logprob: -1.1930217742919922
    3. ' else' → logprob: -2.943021774291992
    4. '<|end|>' → logprob: -6.693021774291992
    5. '		' → logprob: -8.818021774291992
    6. '	else' → logprob: -8.943021774291992
    7. '	       ' → logprob: -9.318021774291992
    8. '       ' → logprob: -9.568021774291992
    9. '
' → logprob: -10.193021774291992
    10. ';' → logprob: -10.193021774291992

Token 804: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09442771226167679
    2. 'else' → logprob: -2.4694278240203857
    3. ' else' → logprob: -5.219427585601807
    4. '<|end|>' → logprob: -9.969428062438965
    5. '       ' → logprob: -12.719428062438965
    6. ';' → logprob: -13.094428062438965
    7. '		' → logprob: -13.094428062438965
    8. '   ' → logprob: -13.469428062438965
    9. 'elif' → logprob: -13.719428062438965
    10. '```' → logprob: -13.844428062438965

Token 805: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.05912550166249275
    2. ' else' → logprob: -3.0591254234313965
    3. '           ' → logprob: -4.5591254234313965
    4. '       ' → logprob: -12.434125900268555
    5. '	else' → logprob: -12.559125900268555
    6. '<|end|>' → logprob: -13.809125900268555
    7. 'elif' → logprob: -14.184125900268555
    8. '   ' → logprob: -14.309125900268555
    9. '_else' → logprob: -15.059125900268555
    10. '	       ' → logprob: -15.434125900268555

Token 806: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23553155362606049
    2. 'v' → logprob: -2.2355315685272217
    3. ' v' → logprob: -2.6105315685272217
    4. ':
' → logprob: -3.7355315685272217
    5. '               ' → logprob: -6.360531330108643
    6. '           ' → logprob: -6.860531330108643
    7. '=' → logprob: -7.360531330108643
    8. ' :' → logprob: -7.485531330108643
    9. ' =' → logprob: -7.735531330108643
    10. '[' → logprob: -8.3605318069458

Token 807: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2705034911632538
    2. ' v' → logprob: -2.145503520965576
    3. 'left' → logprob: -2.645503520965576
    4. ' left' → logprob: -3.020503520965576
    5. '           ' → logprob: -8.770503044128418
    6. '               ' → logprob: -10.145503044128418
    7. '            ' → logprob: -10.645503044128418
    8. '[left' → logprob: -12.145503044128418
    9. '	left' → logprob: -12.395503044128418
    10. '	v' → logprob: -12.895503044128418

Token 808: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02980232611298561
    2. ' =' → logprob: -3.5298023223876953
    3. '[' → logprob: -9.904802322387695
    4. '=
' → logprob: -14.279802322387695
    5. '=v' → logprob: -14.779802322387695
    6. ' ' → logprob: -15.279802322387695
    7. ',' → logprob: -15.779802322387695
    8. '=

' → logprob: -15.904802322387695
    9. '=[' → logprob: -16.029802322387695
    10. 'v' → logprob: -16.279802322387695

Token 809: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -3.2855416066013277e-05
    2. ' left' → logprob: -10.375032424926758
    3. '[left' → logprob: -14.250032424926758
    4. '   ' → logprob: -15.250032424926758
    5. '	left' → logprob: -15.375032424926758
    6. 'v' → logprob: -15.375032424926758
    7. '0' → logprob: -16.500032424926758
    8. '(left' → logprob: -16.500032424926758
    9. ' ' → logprob: -16.875032424926758
    10. '.left' → logprob: -17.375032424926758

Token 810: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 811: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 812: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05024946480989456
    2. 'return' (adapté à ' return') → logprob: -3.4252495765686035
    3. ' return' → logprob: -5.0502495765686035
    4. '   ' → logprob: -5.3002495765686035
    5. '	return' → logprob: -6.3002495765686035
    6. '<|end|>' → logprob: -6.3002495765686035
    7. '	' → logprob: -7.0502495765686035
    8. '	   ' → logprob: -9.425249099731445
    9. '  ' → logprob: -9.675249099731445
    10. ' ' → logprob: -9.800249099731445

Token 813: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -4.5491004129871726e-05
    2. ' idx' → logprob: -10.000045776367188
    3. 'index' → logprob: -17.500045776367188
    4. '	idx' → logprob: -18.500045776367188
    5. '(idx' → logprob: -18.875045776367188
    6. '[idx' → logprob: -19.625045776367188
    7. '0' → logprob: -20.375045776367188
    8. '_idx' → logprob: -22.125045776367188
    9. '
' → logprob: -22.500045776367188
    10. '   ' → logprob: -22.750045776367188

Token 814: '
    
' (ID: 15698)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.1628619134426117
    2. '<|end|>' → logprob: -2.9128618240356445
    3. '   ' → logprob: -3.0378618240356445
    4. '
' → logprob: -3.1628618240356445
    5. ' 
' → logprob: -5.9128618240356445
    6. '  
' → logprob: -6.9128618240356445
    7. '        
' → logprob: -7.1628618240356445
    8. '<|end|>' → logprob: -7.4128618240356445
    9. '   
' → logprob: -7.9128618240356445
    10. 'def' → logprob: -9.412861824035645

Token 815: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6882680058479309
    2. '    
' → logprob: -1.3132679462432861
    3. 'def' → logprob: -1.6882679462432861
    4. '
' → logprob: -3.188267946243286
    5. '        
' → logprob: -6.938268184661865
    6. ' def' → logprob: -7.188268184661865
    7. ' 
' → logprob: -7.938268184661865
    8. '   
' → logprob: -9.188267707824707
    9. '  
' → logprob: -9.563267707824707
    10. '     
' → logprob: -10.063267707824707

Token 816: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.011377071030437946
    2. '   ' → logprob: -4.636376857757568
    3. ' def' → logprob: -6.511376857757568
    4. '
' → logprob: -9.761377334594727
    5. '    
' → logprob: -9.886377334594727
    6. '_' → logprob: -11.636377334594727
    7. '	def' → logprob: -12.511377334594727
    8. '@' → logprob: -13.136377334594727
    9. '_def' → logprob: -13.261377334594727
    10. ' ' → logprob: -13.511377334594727

Token 817: ' insert' (ID: 10898)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.7916170954704285
    2. '_insert' → logprob: -0.9166170954704285
    3. ' insert' → logprob: -3.1666171550750732
    4. '_split' → logprob: -3.4166171550750732
    5. 'def' → logprob: -3.6666171550750732
    6. ' def' → logprob: -3.9166171550750732
    7. 'insert' → logprob: -4.666616916656494
    8. 'split' → logprob: -5.791616916656494
    9. '_' → logprob: -6.041616916656494
    10. ' split' → logprob: -6.166616916656494

Token 818: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.7697225252486533e-06
    2. ' (' → logprob: -13.125003814697266
    3. '(' → logprob: -14.125003814697266
    4. '(s' → logprob: -14.375003814697266
    5. 'self' → logprob: -15.375003814697266
    6. '(
' → logprob: -16.000003814697266
    7. '   ' → logprob: -16.875003814697266
    8. '(sel' → logprob: -17.250003814697266
    9. '(se' → logprob: -18.375003814697266
    10. 'def' → logprob: -18.375003814697266

Token 819: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.5822400857578032e-05
    2. 'self' → logprob: -11.000025749206543
    3. ' (' → logprob: -12.750025749206543
    4. '(' → logprob: -13.375025749206543
    5. ',' → logprob: -14.000025749206543
    6. '(s' → logprob: -14.000025749206543
    7. '(
' → logprob: -14.500025749206543
    8. 'def' → logprob: -14.500025749206543
    9. '   ' → logprob: -14.875025749206543
    10. '       ' → logprob: -15.375025749206543

Token 820: ' key' (ID: 2140)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20872434973716736
    2. 'key' → logprob: -1.8337243795394897
    3. ' self' → logprob: -4.208724498748779
    4. ' key' → logprob: -4.333724498748779
    5. '       ' → logprob: -8.208724021911621
    6. '   ' → logprob: -8.333724021911621
    7. '
' → logprob: -10.708724021911621
    8. ' ' → logprob: -11.583724021911621
    9. 'Key' → logprob: -11.958724021911621
    10. '    ' → logprob: -12.458724021911621

Token 821: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.24100270867347717
    2. '):
' → logprob: -1.6160026788711548
    3. ',' → logprob: -4.366002559661865
    4. '):
' → logprob: -6.116002559661865
    5. '   ' → logprob: -8.366003036499023
    6. '       ' → logprob: -8.491003036499023
    7. 'self' → logprob: -10.116003036499023
    8. ' ):' → logprob: -10.241003036499023
    9. '):

' → logprob: -10.866003036499023
    10. ')' → logprob: -11.491003036499023

Token 822: ' priority' (ID: 17621)
  Prédit: 'priority'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'priority' → logprob: -0.11425379663705826
    2. 'prio' → logprob: -2.7392537593841553
    3. ' priority' → logprob: -3.8642537593841553
    4. 'prior' → logprob: -4.739253997802734
    5. 'p' → logprob: -5.739253997802734
    6. 'pr' → logprob: -6.239253997802734
    7. '_priority' → logprob: -7.114253997802734
    8. 'node' → logprob: -7.364253997802734
    9. 'update' → logprob: -7.489253997802734
    10. 'force' → logprob: -7.739253997802734

Token 823: '=None' (ID: 12783)
  Prédit: '=None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=None' → logprob: -0.31573566794395447
    2. '=' → logprob: -1.4407356977462769
    3. '=random' → logprob: -3.4407355785369873
    4. ' =' → logprob: -7.190735816955566
    5. '):' → logprob: -7.315735816955566
    6. ',' → logprob: -8.565735816955566
    7. '   ' → logprob: -8.940735816955566
    8. 'None' → logprob: -9.315735816955566
    9. '=float' → logprob: -10.565735816955566
    10. '):
' → logprob: -11.065735816955566

Token 824: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07047928869724274
    2. '):
' → logprob: -2.695479393005371
    3. ',' → logprob: -8.070479393005371
    4. '=None' → logprob: -9.570479393005371
    5. '   ' → logprob: -9.945479393005371
    6. ' ):' → logprob: -10.195479393005371
    7. '):
' → logprob: -10.695479393005371
    8. '=' → logprob: -10.695479393005371
    9. ')' → logprob: -10.820479393005371
    10. ':' → logprob: -12.945479393005371

Token 825: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1720399409532547
    2. '
' → logprob: -2.4220399856567383
    3. ' if' → logprob: -3.7970399856567383
    4. ':' → logprob: -4.547039985656738
    5. '   ' → logprob: -4.547039985656738
    6. ',' → logprob: -5.047039985656738
    7. ':
' → logprob: -5.547039985656738
    8. 'v' → logprob: -6.047039985656738
    9. '):
' → logprob: -6.047039985656738
    10. '#' → logprob: -6.422039985656738

Token 826: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.42153486609458923
    2. '       ' → logprob: -1.5465348958969116
    3. ' if' → logprob: -2.171534776687622
    4. 'def' → logprob: -5.046535015106201
    5. 'priority' → logprob: -5.796535015106201
    6. 'import' → logprob: -6.046535015106201
    7. 'self' → logprob: -6.421535015106201
    8. '   ' → logprob: -7.171535015106201
    9. 'new' → logprob: -7.171535015106201
    10. ' new' → logprob: -7.421535015106201

Token 827: ' priority' (ID: 17621)
  Prédit: ' priority'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' priority' → logprob: -0.2896902561187744
    2. 'priority' → logprob: -1.4146902561187744
    3. ' key' → logprob: -5.914690017700195
    4. 'self' → logprob: -5.914690017700195
    5. ' self' → logprob: -6.664690017700195
    6. 'key' → logprob: -6.789690017700195
    7. ' not' → logprob: -7.789690017700195
    8. 'not' → logprob: -9.289690017700195
    9. ' None' → logprob: -9.664690017700195
    10. 'None' → logprob: -9.789690017700195

Token 828: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.20154578983783722
    2. 'is' → logprob: -1.7015458345413208
    3. '==' → logprob: -9.576545715332031
    4. ')' → logprob: -10.201545715332031
    5. '=' → logprob: -11.576545715332031
    6. '=None' → logprob: -12.326545715332031
    7. ')is' → logprob: -12.451545715332031
    8. ' ' → logprob: -13.201545715332031
    9. ' )' → logprob: -13.326545715332031
    10. ' =' → logprob: -13.701545715332031

Token 829: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.008619419299066067
    2. ' None' → logprob: -4.75861930847168
    3. ' not' → logprob: -13.00861930847168
    4. 'not' → logprob: -13.50861930847168
    5. '=None' → logprob: -14.38361930847168
    6. '_None' → logprob: -14.88361930847168
    7. '(None' → logprob: -15.75861930847168
    8. 'none' → logprob: -16.88361930847168
    9. ',None' → logprob: -17.50861930847168
    10. 'Not' → logprob: -17.75861930847168

Token 830: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00045617512660101056
    2. ':
' → logprob: -7.8754563331604
    3. ' :' → logprob: -9.625455856323242
    4. ',' → logprob: -12.750455856323242
    5. '       ' → logprob: -13.125455856323242
    6. ' =' → logprob: -13.250455856323242
    7. '=' → logprob: -13.625455856323242
    8. ' or' → logprob: -14.000455856323242
    9. '        ' → logprob: -15.125455856323242
    10. '):' → logprob: -15.500455856323242

Token 831: ' priority' (ID: 17621)
  Prédit: ' priority'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' priority' → logprob: -0.07014771550893784
    2. 'priority' → logprob: -2.695147752761841
    3. ' random' → logprob: -9.695147514343262
    4. '           ' → logprob: -10.070147514343262
    5. '       ' → logprob: -10.570147514343262
    6. '        ' → logprob: -10.570147514343262
    7. '(priority' → logprob: -11.195147514343262
    8. 'int' → logprob: -11.320147514343262
    9. 'random' → logprob: -12.070147514343262
    10. ' int' → logprob: -12.070147514343262

Token 832: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47408851981163025
    2. ' =' → logprob: -0.9740885496139526
    3. '=random' → logprob: -11.974088668823242
    4. '()' → logprob: -13.349088668823242
    5. '   ' → logprob: -13.974088668823242
    6. ' ' → logprob: -14.099088668823242
    7. ',' → logprob: -14.099088668823242
    8. 'import' → logprob: -15.349088668823242
    9. '(' → logprob: -15.474088668823242
    10. '=int' → logprob: -16.099088668823242

Token 833: ' random' (ID: 7526)
  Prédit: 'random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'random' → logprob: -0.043738290667533875
    2. ' random' → logprob: -3.91873836517334
    3. 'int' → logprob: -4.54373836517334
    4. '-r' → logprob: -4.66873836517334
    5. '-' → logprob: -6.41873836517334
    6. '-int' → logprob: -7.41873836517334
    7. ' int' → logprob: -7.91873836517334
    8. ' -' → logprob: -8.91873836517334
    9. '(random' → logprob: -9.66873836517334
    10. '1' → logprob: -10.54373836517334

Token 834: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00036799011286348104
    2. '()
' → logprob: -9.375368118286133
    3. '()*' → logprob: -9.750368118286133
    4. '()<' → logprob: -9.750368118286133
    5. '()<<' → logprob: -10.375368118286133
    6. '()]' → logprob: -10.500368118286133
    7. '()%' → logprob: -10.750368118286133
    8. '()>' → logprob: -10.750368118286133
    9. '()-' → logprob: -11.625368118286133
    10. '()+' → logprob: -11.750368118286133

Token 835: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1448243409395218
    2. '
' → logprob: -2.019824266433716
    3. 'v' → logprob: -7.644824504852295
    4. '        
' → logprob: -7.644824504852295
    5. ' if' → logprob: -7.769824504852295
    6. ',' → logprob: -8.644824028015137
    7. '
' → logprob: -8.769824028015137
    8. '   ' → logprob: -9.144824028015137
    9. 'def' → logprob: -9.644824028015137
    10. '#' → logprob: -10.394824028015137

Token 836: ' rotate' (ID: 31987)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.053452085703611374
    2. 'if' → logprob: -3.0534520149230957
    3. 'self' → logprob: -6.053452014923096
    4. 'new' → logprob: -6.803452014923096
    5. '       ' → logprob: -7.053452014923096
    6. 'v' → logprob: -8.053452491760254
    7. '   ' → logprob: -9.178452491760254
    8. 'node' → logprob: -9.803452491760254
    9. '
' → logprob: -10.803452491760254
    10. ' def' → logprob: -10.928452491760254

Token 837: ' =' (ID: 314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6514467000961304
    2. ' =' → logprob: -1.0264467000961304
    3. '_direction' → logprob: -2.52644681930542
    4. '_dir' → logprob: -4.27644681930542
    5. 'v' → logprob: -5.27644681930542
    6. '=' → logprob: -5.77644681930542
    7. '_left' → logprob: -6.15144681930542
    8. '_vertex' → logprob: -6.15144681930542
    9. '_v' → logprob: -6.40144681930542
    10. 'direction' → logprob: -6.65144681930542

Token 838: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05820809304714203
    2. ' self' → logprob: -3.4332079887390137
    3. 'lambda' → logprob: -3.8082079887390137
    4. ' lambda' → logprob: -6.808207988739014
    5. '   ' → logprob: -7.933207988739014
    6. '       ' → logprob: -8.808208465576172
    7. '
' → logprob: -9.433208465576172
    8. '	self' → logprob: -9.558208465576172
    9. 'True' → logprob: -9.558208465576172
    10. ' ' → logprob: -9.683208465576172

Token 839: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00029756641015410423
    2. '.insert' → logprob: -8.500297546386719
    3. '.root' → logprob: -10.625297546386719
    4. '_insert' → logprob: -10.625297546386719
    5. '_root' → logprob: -11.125297546386719
    6. 'root' → logprob: -12.000297546386719
    7. '.' → logprob: -12.375297546386719
    8. '
' → logprob: -12.750297546386719
    9. 'insert' → logprob: -12.875297546386719
    10. '.__' → logprob: -13.500297546386719

Token 840: 'rotate' (ID: 31296)
  Prédit: 'rotate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -0.011764278635382652
    2. 'insert' → logprob: -5.261764049530029
    3. '_rotate' → logprob: -5.511764049530029
    4. 'tre' → logprob: -7.386764049530029
    5. 'rot' → logprob: -7.636764049530029
    6. 'count' → logprob: -8.261764526367188
    7. 'contains' → logprob: -8.886764526367188
    8. '_' → logprob: -8.886764526367188
    9. '_insert' → logprob: -9.136764526367188
    10. 'split' → logprob: -9.261764526367188

Token 841: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03468484804034233
    2. 'def' → logprob: -3.909684896469116
    3. 'self' → logprob: -5.284684658050537
    4. '        
' → logprob: -5.534684658050537
    5. '
' → logprob: -6.159684658050537
    6. '       ' → logprob: -6.784684658050537
    7. '    
' → logprob: -7.909684658050537
    8. '  
' → logprob: -8.284685134887695
    9. '

' → logprob: -8.784685134887695
    10. ';' → logprob: -8.784685134887695

Token 842: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0131565872579813
    2. '       ' → logprob: -4.638156414031982
    3. 'def' → logprob: -5.888156414031982
    4. '        
' → logprob: -7.888156414031982
    5. '
' → logprob: -8.88815689086914
    6. '

' → logprob: -9.88815689086914
    7. '    
' → logprob: -10.63815689086914
    8. ' def' → logprob: -10.76315689086914
    9. '   ' → logprob: -12.51315689086914
    10. '```' → logprob: -13.51315689086914

Token 843: ' v' (ID: 323)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1141115054488182
    2. ' def' → logprob: -2.3641114234924316
    3. '       ' → logprob: -4.739111423492432
    4. '
' → logprob: -5.614111423492432
    5. 'if' → logprob: -7.614111423492432
    6. '   ' → logprob: -8.11411190032959
    7. 'v' (adapté à ' v') → logprob: -8.23911190032959
    8. ' v' → logprob: -8.61411190032959
    9. '        
' → logprob: -9.98911190032959
    10. 'new' → logprob: -10.11411190032959

Token 844: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5788814425468445
    2. ' =' → logprob: -0.8288814425468445
    3. 'def' → logprob: -6.57888126373291
    4. ',' → logprob: -7.45388126373291
    5. ' ' → logprob: -7.57888126373291
    6. 'f' → logprob: -9.32888126373291
    7. '=self' → logprob: -9.45388126373291
    8. '  ' → logprob: -9.70388126373291
    9. 'self' → logprob: -10.07888126373291
    10. '
' → logprob: -10.32888126373291

Token 845: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011783008463680744
    2. '[self' → logprob: -5.136783123016357
    3. '[' → logprob: -5.261783123016357
    4. 'None' → logprob: -8.6367826461792
    5. '(self' → logprob: -8.8867826461792
    6. '[T' → logprob: -9.6367826461792
    7. '   ' → logprob: -9.7617826461792
    8. ' self' → logprob: -9.7617826461792
    9. '[v' → logprob: -10.7617826461792
    10. 'def' → logprob: -11.3867826461792

Token 846: '.root' (ID: 25375)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.429907888174057
    2. '.root' → logprob: -1.0549079179763794
    3. '[' → logprob: -8.30490779876709
    4. '_root' → logprob: -8.55490779876709
    5. '[root' → logprob: -8.55490779876709
    6. 'self' → logprob: -8.80490779876709
    7. '._' → logprob: -9.30490779876709
    8. 'oot' → logprob: -9.42990779876709
    9. '   ' → logprob: -9.92990779876709
    10. ' root' → logprob: -10.30490779876709

Token 847: ';' (ID: 26)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4714862108230591
    2. '
' → logprob: -1.346486210823059
    3. '       ' → logprob: -2.5964860916137695
    4. ',' → logprob: -4.0964860916137695
    5. 'def' → logprob: -4.3464860916137695
    6. ' if' → logprob: -4.8464860916137695
    7. 'new' → logprob: -6.0964860916137695
    8. 'stack' → logprob: -7.7214860916137695
    9. '        
' → logprob: -8.22148609161377
    10. '   ' → logprob: -8.72148609161377

Token 848: ' p' (ID: 275)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -1.1497167348861694
    2. 'if' → logprob: -1.6497167348861694
    3. 'stack' → logprob: -1.7747167348861694
    4. 'path' → logprob: -2.024716854095459
    5. 'new' → logprob: -2.899716854095459
    6. 'p' → logprob: -2.899716854095459
    7. 'def' → logprob: -3.524716854095459
    8. '       ' → logprob: -3.649716854095459
    9. 'v' → logprob: -5.274716854095459
    10. 'node' → logprob: -5.399716854095459

Token 849: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05643695592880249
    2. 'v' → logprob: -3.4314370155334473
    3. 'ar' → logprob: -4.431437015533447
    4. 'rev' → logprob: -5.681437015533447
    5. ' =' → logprob: -5.806437015533447
    6. 'ath' → logprob: -6.431437015533447
    7. '=None' → logprob: -7.056437015533447
    8. 'r' → logprob: -7.181437015533447
    9. 're' → logprob: -7.431437015533447
    10. ',' → logprob: -9.431436538696289

Token 850: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.020956052467226982
    2. '[]' → logprob: -3.895956039428711
    3. '[]
' → logprob: -8.645956039428711
    4. ' None' → logprob: -8.895956039428711
    5. '[' → logprob: -9.395956039428711
    6. '[]

' → logprob: -12.395956039428711
    7. '(None' → logprob: -13.020956039428711
    8. 'v' → logprob: -13.145956039428711
    9. '   ' → logprob: -13.145956039428711
    10. ' []' → logprob: -13.270956039428711

Token 851: ';' (ID: 26)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7855033278465271
    2. '       ' → logprob: -0.9105033278465271
    3. '
' → logprob: -2.910503387451172
    4. ' while' → logprob: -3.035503387451172
    5. ',' → logprob: -3.660503387451172
    6. ';' → logprob: -5.160503387451172
    7. '        
' → logprob: -5.660503387451172
    8. '   ' → logprob: -7.035503387451172
    9. 'current' → logprob: -7.660503387451172
    10. '[' → logprob: -8.035503387451172

Token 852: ' direction' (ID: 9262)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.7867051959037781
    2. 'while' → logprob: -1.1617052555084229
    3. 'stack' → logprob: -2.661705255508423
    4. 'dir' → logprob: -3.036705255508423
    5. 'direction' → logprob: -3.536705255508423
    6. 'new' → logprob: -3.661705255508423
    7. '       ' → logprob: -4.036705017089844
    8. 'last' → logprob: -4.286705017089844
    9. 'side' → logprob: -4.411705017089844
    10. 'node' → logprob: -5.411705017089844

Token 853: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10023277252912521
    2. ' =' → logprob: -2.3502328395843506
    3. '=None' → logprob: -11.35023307800293
    4. ' ' → logprob: -11.72523307800293
    5. '<|end|>' → logprob: -12.85023307800293
    6. ',' → logprob: -13.85023307800293
    7. 's' → logprob: -14.10023307800293
    8. '=False' → logprob: -14.85023307800293
    9. '=[]' → logprob: -14.97523307800293
    10. ':' → logprob: -15.35023307800293

Token 854: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.26051589846611023
    2. 'None' → logprob: -1.5105159282684326
    3. '1' → logprob: -5.5105156898498535
    4. '-' → logprob: -5.6355156898498535
    5. 'False' → logprob: -7.6355156898498535
    6. 'True' → logprob: -8.135516166687012
    7. ' None' → logprob: -10.010516166687012
    8. ' ' → logprob: -10.635516166687012
    9. '2' → logprob: -10.760516166687012
    10. '   ' → logprob: -10.885516166687012

Token 855: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.03344858065247536
    2. '       ' → logprob: -3.9084486961364746
    3. ' while' → logprob: -4.783448696136475
    4. '
' → logprob: -6.283448696136475
    5. '<|end|>' → logprob: -6.658448696136475
    6. '#' → logprob: -7.908448696136475
    7. '        
' → logprob: -8.158448219299316
    8. 'While' → logprob: -8.533448219299316
    9. '	while' → logprob: -9.158448219299316
    10. '   ' → logprob: -9.283448219299316

Token 856: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11529961973428726
    2. 'while' → logprob: -2.615299701690674
    3. ' while' → logprob: -3.615299701690674
    4. '[' → logprob: -5.365299701690674
    5. '
' → logprob: -7.240299701690674
    6. '	while' → logprob: -7.365299701690674
    7. 'While' → logprob: -7.490299701690674
    8. '<|end|>' → logprob: -7.490299701690674
    9. ',' → logprob: -7.740299701690674
    10. '#' → logprob: -7.990299701690674

Token 857: ' stack' (ID: 10825)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0025480776093900204
    2. '       ' → logprob: -6.1275482177734375
    3. ' while' → logprob: -9.127548217773438
    4. 'node' → logprob: -9.627548217773438
    5. 'current' → logprob: -9.752548217773438
    6. 'new' → logprob: -9.752548217773438
    7. 'stack' (adapté à ' stack') → logprob: -10.377548217773438
    8. 'path' → logprob: -11.377548217773438
    9. 'curr' → logprob: -11.752548217773438
    10. '#' → logprob: -12.252548217773438

Token 858: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10040421038866043
    2. ' =' → logprob: -2.3504042625427246
    3. '=[]' → logprob: -8.600403785705566
    4. ',' → logprob: -11.975403785705566
    5. '.append' → logprob: -12.475403785705566
    6. '=[]
' → logprob: -13.225403785705566
    7. 'append' → logprob: -15.350403785705566
    8. '[' → logprob: -15.475403785705566
    9. '[]' → logprob: -15.475403785705566
    10. '=[' → logprob: -15.975403785705566

Token 859: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -9.209963900502771e-05
    2. '[]
' → logprob: -9.375092506408691
    3. '[(' → logprob: -12.125092506408691
    4. ' []' → logprob: -14.000092506408691
    5. '[]}' → logprob: -15.000092506408691
    6. '[]

' → logprob: -15.625092506408691
    7. '[],' → logprob: -15.750092506408691
    8. '[' → logprob: -16.125091552734375
    9. '[])' → logprob: -16.500091552734375
    10. 'deque' → logprob: -16.750091552734375

Token 860: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028001258615404367
    2. 'while' → logprob: -6.252799987792969
    3. ' while' → logprob: -7.502799987792969
    4. '<|end|>' → logprob: -9.002799987792969
    5. '        
' → logprob: -9.502799987792969
    6. '```' → logprob: -10.002799987792969
    7. '   ' → logprob: -10.752799987792969
    8. '
' → logprob: -11.252799987792969
    9. '	while' → logprob: -11.502799987792969
    10. 'While' → logprob: -11.627799987792969

Token 861: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.001243920880369842
    2. '       ' → logprob: -6.751244068145752
    3. ' while' → logprob: -9.626243591308594
    4. '   ' → logprob: -12.876243591308594
    5. 'While' → logprob: -12.876243591308594
    6. '	while' → logprob: -13.376243591308594
    7. '
' → logprob: -14.376243591308594
    8. '           ' → logprob: -16.001243591308594
    9. '#' → logprob: -16.376243591308594
    10. '```' → logprob: -16.751243591308594

Token 862: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00013464801304508
    2. 'True' → logprob: -9.500134468078613
    3. ' v' → logprob: -9.875134468078613
    4. '(v' → logprob: -12.125134468078613
    5. '   ' → logprob: -14.000134468078613
    6. ' ' → logprob: -14.000134468078613
    7. ' True' → logprob: -15.500134468078613
    8. '  ' → logprob: -15.750134468078613
    9. '	v' → logprob: -15.875134468078613
    10. '(True' → logprob: -16.25013542175293

Token 863: ':
' (ID: 734)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.548912763595581
    2. 'is' → logprob: -1.173912763595581
    3. 'and' → logprob: -2.423912763595581
    4. ':' → logprob: -4.04891300201416
    5. ' and' → logprob: -5.29891300201416
    6. ':
' → logprob: -6.17391300201416
    7. '!=' → logprob: -9.29891300201416
    8. 'v' → logprob: -10.29891300201416
    9. '{' → logprob: -11.17391300201416
    10. ',' → logprob: -11.67391300201416

Token 864: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030390409752726555
    2. '       ' → logprob: -4.03039026260376
    3. ':' → logprob: -5.03039026260376
    4. '[' → logprob: -6.53039026260376
    5. 'stack' → logprob: -7.03039026260376
    6. '   ' → logprob: -7.03039026260376
    7. ':
' → logprob: -7.65539026260376
    8. '#' → logprob: -8.030390739440918
    9. '):
' → logprob: -8.030390739440918
    10. '```' → logprob: -8.530390739440918

Token 865: ' direction' (ID: 9262)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.34842491149902344
    2. 'stack' → logprob: -1.7234249114990234
    3. 'k' → logprob: -2.4734249114990234
    4. '           ' → logprob: -3.9734249114990234
    5. 'if' → logprob: -5.098424911499023
    6. 'cmp' → logprob: -5.973424911499023
    7. 'c' → logprob: -6.598424911499023
    8. 'direction' (adapté à ' direction') → logprob: -7.473424911499023
    9. 'left' → logprob: -7.723424911499023
    10. '       ' → logprob: -7.973424911499023

Token 866: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011542649008333683
    2. ' =' → logprob: -5.011542797088623
    3. 'key' → logprob: -5.386542797088623
    4. 'int' → logprob: -10.136542320251465
    5. '=int' → logprob: -10.136542320251465
    6. ' key' → logprob: -10.261542320251465
    7. '=(' → logprob: -10.511542320251465
    8. '[key' → logprob: -10.636542320251465
    9. '1' → logprob: -11.261542320251465
    10. '0' → logprob: -11.261542320251465

Token 867: ' (' (ID: 350)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.005775562021881342
    2. ' key' → logprob: -6.005775451660156
    3. 'int' → logprob: -6.755775451660156
    4. '1' → logprob: -7.005775451660156
    5. 'v' → logprob: -7.380775451660156
    6. '(key' → logprob: -7.630775451660156
    7. '0' → logprob: -10.130775451660156
    8. '(' → logprob: -10.255775451660156
    9. '   ' → logprob: -11.755775451660156
    10. 'k' → logprob: -11.755775451660156

Token 868: 'key' (ID: 1898)
  Prédit: 'key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.00961230043321848
    2. '1' → logprob: -5.384612083435059
    3. 'v' → logprob: -5.509612083435059
    4. 'k' → logprob: -7.509612083435059
    5. ' key' → logprob: -8.134612083435059
    6. 'int' → logprob: -10.134612083435059
    7. '0' → logprob: -10.384612083435059
    8. '   ' → logprob: -12.009612083435059
    9. '(key' → logprob: -12.634612083435059
    10. 'p' → logprob: -13.134612083435059

Token 869: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2568526566028595
    2. '>' → logprob: -1.506852626800537
    3. ' >=' → logprob: -5.881852626800537
    4. '>=' → logprob: -6.381852626800537
    5. ' >
' → logprob: -8.506853103637695
    6. '>
' → logprob: -9.881853103637695
    7. ')' → logprob: -10.131853103637695
    8. '[' → logprob: -10.256853103637695
    9. ')>' → logprob: -10.631853103637695
    10. ' ' → logprob: -11.006853103637695

Token 870: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.173704271830502e-06
    2. ' v' → logprob: -12.75000286102295
    3. '   ' → logprob: -16.125003814697266
    4. ')v' → logprob: -17.250003814697266
    5. '	v' → logprob: -17.625003814697266
    6. ')' → logprob: -17.625003814697266
    7. '
' → logprob: -17.750003814697266
    8. '       ' → logprob: -17.875003814697266
    9. '(v' → logprob: -17.875003814697266
    10. '[' → logprob: -18.500003814697266

Token 871: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.5491004129871726e-05
    2. '2' → logprob: -10.250045776367188
    3. '   ' → logprob: -12.375045776367188
    4. '3' → logprob: -13.750045776367188
    5. ' [' → logprob: -13.875045776367188
    6. '```' → logprob: -14.000045776367188
    7. '[
' → logprob: -14.125045776367188
    8. '
' → logprob: -14.750045776367188
    9. '1' → logprob: -15.375045776367188
    10. '``' → logprob: -15.375045776367188

Token 872: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.531315314830863e-06
    2. '[' → logprob: -13.125003814697266
    3. '   ' → logprob: -14.125003814697266
    4. '
' → logprob: -15.125003814697266
    5. ' ' → logprob: -15.125003814697266
    6. '۲' → logprob: -16.875003814697266
    7. '```' → logprob: -16.875003814697266
    8. '  ' → logprob: -17.750003814697266
    9. '２' → logprob: -18.250003814697266
    10. '
' → logprob: -18.437503814697266

Token 873: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03046891838312149
    2. ')
' → logprob: -3.5304689407348633
    3. ' )' → logprob: -8.405468940734863
    4. '])' → logprob: -8.405468940734863
    5. ');' → logprob: -9.655468940734863
    6. '),' → logprob: -10.030468940734863
    7. ',' → logprob: -10.530468940734863
    8. ')]' → logprob: -10.780468940734863
    9. ' )
' → logprob: -11.030468940734863
    10. ']' → logprob: -11.405468940734863

Token 874: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008158236742019653
    2. '<|end|>' → logprob: -8.125815391540527
    3. '            
' → logprob: -9.375815391540527
    4. ',' → logprob: -9.375815391540527
    5. '       ' → logprob: -9.375815391540527
    6. '   ' → logprob: -9.750815391540527
    7. '[' → logprob: -10.250815391540527
    8. 'v' → logprob: -10.500815391540527
    9. '```' → logprob: -10.750815391540527
    10. ')' → logprob: -10.750815391540527

Token 875: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.05026363208889961
    2. '           ' → logprob: -3.0502636432647705
    3. 'p' → logprob: -6.675263404846191
    4. '       ' → logprob: -7.925263404846191
    5. ' stack' → logprob: -10.425263404846191
    6. '   ' → logprob: -11.050263404846191
    7. '               ' → logprob: -13.175263404846191
    8. '
' → logprob: -14.050263404846191
    9. '	stack' → logprob: -14.175263404846191
    10. ' p' → logprob: -14.300263404846191

Token 876: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.1557283111615106e-05
    2. '.' → logprob: -10.125041961669922
    3. 'append' → logprob: -14.000041961669922
    4. '.app' → logprob: -14.625041961669922
    5. '.ap' → logprob: -16.000041961669922
    6. ' .' → logprob: -18.500041961669922
    7. '.push' → logprob: -18.500041961669922
    8. '
' → logprob: -19.125041961669922
    9. ',' → logprob: -19.125041961669922
    10. '_append' → logprob: -19.125041961669922

Token 877: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.31329473853111267
    2. '(v' → logprob: -1.313294768333435
    3. '(' → logprob: -10.688294410705566
    4. 'v' → logprob: -11.813294410705566
    5. '([' → logprob: -13.688294410705566
    6. '(((' → logprob: -14.063294410705566
    7. '(
' → logprob: -15.313294410705566
    8. ' ((' → logprob: -16.438295364379883
    9. '(([' → logprob: -16.563295364379883
    10. '(p' → logprob: -16.688295364379883

Token 878: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00025657136575318873
    2. 'p' → logprob: -8.500256538391113
    3. '(v' → logprob: -10.250256538391113
    4. '   ' → logprob: -11.875256538391113
    5. ' v' → logprob: -12.000256538391113
    6. '(p' → logprob: -13.750256538391113
    7. '
' → logprob: -14.250256538391113
    8. '(' → logprob: -14.625256538391113
    9. 'direction' → logprob: -14.750256538391113
    10. '[v' → logprob: -15.125256538391113

Token 879: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020583465695381165
    2. ',d' → logprob: -3.895583391189575
    3. ',
' → logprob: -10.645583152770996
    4. ' ,' → logprob: -11.895583152770996
    5. '[' → logprob: -12.145583152770996
    6. 'direction' → logprob: -13.270583152770996
    7. ',[' → logprob: -13.645583152770996
    8. '   ' → logprob: -15.020583152770996
    9. '
' → logprob: -15.145583152770996
    10. ',v' → logprob: -15.395583152770996

Token 880: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.006732303183525801
    2. ' direction' → logprob: -5.00673246383667
    3. '   ' → logprob: -11.381731986999512
    4. '(direction' → logprob: -13.256731986999512
    5. ' ' → logprob: -13.631731986999512
    6. '  ' → logprob: -14.631731986999512
    7. '
' → logprob: -15.256731986999512
    8. ')' → logprob: -15.256731986999512
    9. 'dire' → logprob: -15.631731986999512
    10. '    ' → logprob: -15.756731986999512

Token 881: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.1604773849248886
    2. '))' → logprob: -1.9104773998260498
    3. '));' → logprob: -9.285477638244629
    4. ' ))
' → logprob: -9.660477638244629
    5. '           ' → logprob: -10.035477638244629
    6. ')' → logprob: -11.160477638244629
    7. '))
' → logprob: -11.285477638244629
    8. ',' → logprob: -11.535477638244629
    9. '))

' → logprob: -12.160477638244629
    10. ' ))' → logprob: -12.410477638244629

Token 882: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07020984590053558
    2. 'v' → logprob: -2.6952097415924072
    3. '       ' → logprob: -9.195209503173828
    4. '   ' → logprob: -9.445209503173828
    5. ' v' → logprob: -10.320209503173828
    6. '	v' → logprob: -11.195209503173828
    7. '[v' → logprob: -11.820209503173828
    8. '(v' → logprob: -12.070209503173828
    9. ',v' → logprob: -12.195209503173828
    10. '            
' → logprob: -12.195209503173828

Token 883: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -2.069664333248511e-05
    2. '           ' → logprob: -11.000020980834961
    3. ' v' → logprob: -12.625020980834961
    4. '	v' → logprob: -15.375020980834961
    5. '   ' → logprob: -15.750020980834961
    6. '       ' → logprob: -15.875020980834961
    7. 'p' → logprob: -16.50002098083496
    8. '            
' → logprob: -16.75002098083496
    9. 'if' → logprob: -18.37502098083496
    10. '               ' → logprob: -18.62502098083496

Token 884: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004118173383176327
    2. ' =' → logprob: -5.504117965698242
    3. '=v' → logprob: -10.254117965698242
    4. 'v' → logprob: -12.504117965698242
    5. ',' → logprob: -15.254117965698242
    6. '=
' → logprob: -15.879117965698242
    7. ',v' → logprob: -16.754117965698242
    8. '=[' → logprob: -16.754117965698242
    9. '.=' → logprob: -17.254117965698242
    10. ' ' → logprob: -17.254117965698242

Token 885: ' p' (ID: 275)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.3736712336540222
    2. 'v' → logprob: -1.623671293258667
    3. 'p' → logprob: -2.873671293258667
    4. '=' → logprob: -3.623671293258667
    5. ' direction' → logprob: -5.373671054840088
    6. 'key' → logprob: -5.623671054840088
    7. ')' → logprob: -5.998671054840088
    8. ' =' → logprob: -5.998671054840088
    9. '   ' → logprob: -6.248671054840088
    10. '0' → logprob: -6.498671054840088

Token 886: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004092766437679529
    2. ' =' → logprob: -5.504092693328857
    3. 'v' → logprob: -12.379093170166016
    4. ',' → logprob: -12.504093170166016
    5. '=v' → logprob: -12.504093170166016
    6. '<|end|>' → logprob: -14.629093170166016
    7. 'direction' → logprob: -15.004093170166016
    8. '[' → logprob: -15.254093170166016
    9. '=
' → logprob: -15.504093170166016
    10. ' ' → logprob: -15.754093170166016

Token 887: ' v' (ID: 323)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.23525837063789368
    2. 'v' → logprob: -1.6102583408355713
    3. ' (' → logprob: -5.73525857925415
    4. '(p' → logprob: -6.23525857925415
    5. '((' → logprob: -6.36025857925415
    6. '[v' → logprob: -6.73525857925415
    7. ' v' → logprob: -7.23525857925415
    8. '   ' → logprob: -8.235258102416992
    9. '[(' → logprob: -8.735258102416992
    10. 'p' → logprob: -9.235258102416992

Token 888: '[' (ID: 58)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.08220286667346954
    2. '[v' → logprob: -2.707202911376953
    3. '[' → logprob: -4.457202911376953
    4. '[(' → logprob: -7.957202911376953
    5. '   ' → logprob: -9.957202911376953
    6. '[p' → logprob: -10.207202911376953
    7. '
' → logprob: -10.957202911376953
    8. '(v' → logprob: -10.957202911376953
    9. '=v' → logprob: -10.957202911376953
    10. 'direction' → logprob: -11.457202911376953

Token 889: 'direction' (ID: 43278)
  Prédit: 'direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.017573237419128418
    2. '[' → logprob: -4.392573356628418
    3. '1' → logprob: -6.017573356628418
    4. ' direction' → logprob: -6.892573356628418
    5. '(direction' → logprob: -7.517573356628418
    6. 'p' → logprob: -8.142573356628418
    7. '   ' → logprob: -8.767573356628418
    8. '0' → logprob: -9.142573356628418
    9. 'v' → logprob: -9.267573356628418
    10. '(' → logprob: -9.892573356628418

Token 890: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.2884109616279602
    2. ']' → logprob: -1.9134109020233154
    3. ',' → logprob: -2.2884109020233154
    4. ' ],' → logprob: -8.038411140441895
    5. ' ,' → logprob: -8.038411140441895
    6. ',None' → logprob: -8.288411140441895
    7. '<|end|>' → logprob: -8.538411140441895
    8. '],[' → logprob: -9.288411140441895
    9. '[' → logprob: -9.788411140441895
    10. ' ]' → logprob: -10.163411140441895

Token 891: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0009367127786390483
    2. 'p' → logprob: -7.750936508178711
    3. 'stack' → logprob: -7.750936508178711
    4. 'None' → logprob: -10.125936508178711
    5. '(v' → logprob: -10.875936508178711
    6. ' v' → logprob: -12.000936508178711
    7. '(p' → logprob: -13.000936508178711
    8. '(stack' → logprob: -13.250936508178711
    9. '(None' → logprob: -14.125936508178711
    10. '(' → logprob: -14.125936508178711

Token 892: '
' (ID: 198)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.09345005452632904
    2. '[' → logprob: -2.7184500694274902
    3. 'stack' → logprob: -4.34345006942749
    4. 'p' → logprob: -5.46845006942749
    5. '<|end|>' → logprob: -6.21845006942749
    6. 'None' → logprob: -6.59345006942749
    7. '[v' → logprob: -7.84345006942749
    8. ' None' → logprob: -7.96845006942749
    9. '
' → logprob: -8.093449592590332
    10. ' ' → logprob: -8.718449592590332

Token 893: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000550887081772089
    2. 'if' → logprob: -8.375551223754883
    3. 'v' → logprob: -8.625551223754883
    4. '```' → logprob: -10.375551223754883
    5. '   ' → logprob: -10.750551223754883
    6. '        
' → logprob: -11.125551223754883
    7. ' if' → logprob: -11.250551223754883
    8. 'def' → logprob: -11.625551223754883
    9. 'while' → logprob: -11.625551223754883
    10. '[]' → logprob: -12.125551223754883

Token 894: ' v' (ID: 323)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.27080869674682617
    2. 'v' (adapté à ' v') → logprob: -1.7708086967468262
    3. 'node' → logprob: -2.770808696746826
    4. 'n' → logprob: -7.270808696746826
    5. 'np' → logprob: -7.395808696746826
    6. 'p' → logprob: -7.520808696746826
    7. 'stack' → logprob: -7.520808696746826
    8. '       ' → logprob: -8.020809173583984
    9. 'nv' → logprob: -8.020809173583984
    10. '   ' → logprob: -8.270809173583984

Token 895: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07038962841033936
    2. ' =' → logprob: -2.695389747619629
    3. '[' → logprob: -8.070389747619629
    4. '=[' → logprob: -9.570389747619629
    5. 'v' → logprob: -10.820389747619629
    6. 'new' → logprob: -11.320389747619629
    7. '   ' → logprob: -11.445389747619629
    8. ',' → logprob: -12.820389747619629
    9. ' =[' → logprob: -12.945389747619629
    10. '       ' → logprob: -12.945389747619629

Token 896: ' [' (ID: 723)
  Prédit: '[key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.1883225291967392
    2. '[' → logprob: -2.4383225440979004
    3. '[v' → logprob: -3.1883225440979004
    4. '[left' → logprob: -3.1883225440979004
    5. '[value' → logprob: -6.8133225440979
    6. '[node' → logprob: -8.563322067260742
    7. '[val' → logprob: -8.688322067260742
    8. '[p' → logprob: -8.938322067260742
    9. '[new' → logprob: -9.563322067260742
    10. '[right' → logprob: -10.438322067260742

Token 897: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -8.506661833962426e-05
    2. ' None' → logprob: -9.62508487701416
    3. '[' → logprob: -11.87508487701416
    4. '   ' → logprob: -12.00008487701416
    5. ',None' → logprob: -13.00008487701416
    6. '(None' → logprob: -13.12508487701416
    7. '[]' → logprob: -14.75008487701416
    8. '[],' → logprob: -15.25008487701416
    9. '
' → logprob: -15.75008487701416
    10. '_None' → logprob: -16.375085830688477

Token 898: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01984255760908127
    2. ',None' → logprob: -4.019842624664307
    3. 'None' → logprob: -6.394842624664307
    4. '(None' → logprob: -11.644842147827148
    5. ' None' → logprob: -12.269842147827148
    6. ',
' → logprob: -12.394842147827148
    7. ' ,' → logprob: -13.644842147827148
    8. '   ' → logprob: -14.144842147827148
    9. '=None' → logprob: -14.519842147827148
    10. '       ' → logprob: -15.019842147827148

Token 899: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0004390134708955884
    2. ' None' → logprob: -7.750439167022705
    3. '   ' → logprob: -11.875438690185547
    4. ',None' → logprob: -13.875438690185547
    5. '(None' → logprob: -15.750438690185547
    6. '  ' → logprob: -16.000438690185547
    7. '
' → logprob: -16.375438690185547
    8. 'No' → logprob: -16.875438690185547
    9. '_None' → logprob: -17.125438690185547
    10. '       ' → logprob: -17.250438690185547

Token 900: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10033714771270752
    2. ',key' → logprob: -2.350337028503418
    3. ' ,' → logprob: -9.225337028503418
    4. ',k' → logprob: -11.100337028503418
    5. ',
' → logprob: -11.850337028503418
    6. 'key' → logprob: -12.850337028503418
    7. ',None' → logprob: -12.850337028503418
    8. '   ' → logprob: -14.350337028503418
    9. ',v' → logprob: -14.350337028503418
    10. ' key' → logprob: -14.600337028503418

Token 901: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.04859009385108948
    2. ' key' → logprob: -3.0485901832580566
    3. '   ' → logprob: -13.923589706420898
    4. ' ' → logprob: -14.673589706420898
    5. '
' → logprob: -14.923589706420898
    6. '	key' → logprob: -14.923589706420898
    7. 'Key' → logprob: -16.2985897064209
    8. 'k' → logprob: -16.4235897064209
    9. '  ' → logprob: -16.4235897064209
    10. ',key' → logprob: -16.6735897064209

Token 902: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005144290626049042
    2. ' ,' → logprob: -7.625514507293701
    3. ',
' → logprob: -11.000514030456543
    4. '   ' → logprob: -13.000514030456543
    5. ',p' → logprob: -13.125514030456543
    6. ',float' → logprob: -13.125514030456543
    7. '
' → logprob: -14.250514030456543
    8. '       ' → logprob: -14.500514030456543
    9. 'priority' → logprob: -14.625514030456543
    10. ' ' → logprob: -15.000514030456543

Token 903: ' priority' (ID: 17621)
  Prédit: 'priority'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'priority' → logprob: -0.001936962129548192
    2. ' priority' → logprob: -6.251936912536621
    3. '   ' → logprob: -12.501936912536621
    4. '(priority' → logprob: -13.251936912536621
    5. 'prior' → logprob: -14.126936912536621
    6. '  ' → logprob: -14.751936912536621
    7. ' ' → logprob: -14.751936912536621
    8. 'random' → logprob: -15.001936912536621
    9. '    ' → logprob: -15.501936912536621
    10. 'float' → logprob: -16.376937866210938

Token 904: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.726595241460018e-05
    2. ' ,' → logprob: -10.62503719329834
    3. ',
' → logprob: -12.12503719329834
    4. '0' → logprob: -12.50003719329834
    5. '1' → logprob: -13.12503719329834
    6. ',None' → logprob: -14.37503719329834
    7. 'None' → logprob: -16.000038146972656
    8. ' ' → logprob: -16.000038146972656
    9. '7' → logprob: -16.125038146972656
    10. ',\
' → logprob: -16.250038146972656

Token 905: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.375004768371582
    3. '0' → logprob: -15.875004768371582
    4. '   ' → logprob: -16.500003814697266
    5. 'None' → logprob: -18.625003814697266
    6. '(' → logprob: -19.375003814697266
    7. ',' → logprob: -19.375003814697266
    8. '۱' → logprob: -19.875003814697266
    9. '2' → logprob: -20.000003814697266
    10. ']' → logprob: -20.437503814697266

Token 906: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.875000953674316
    3. '0' → logprob: -15.750000953674316
    4. '   ' → logprob: -17.000001907348633
    5. '2' → logprob: -19.875001907348633
    6. '```' → logprob: -19.875001907348633
    7. '۱' → logprob: -20.125001907348633
    8. 'None' → logprob: -20.437501907348633
    9. '
' → logprob: -20.625001907348633
    10. '(' → logprob: -20.625001907348633

Token 907: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.623244553338736e-05
    2. ' ,' → logprob: -10.625065803527832
    3. ',
' → logprob: -11.000065803527832
    4. '0' → logprob: -11.125065803527832
    5. ',key' → logprob: -13.000065803527832
    6. ',None' → logprob: -13.000065803527832
    7. ',v' → logprob: -14.000065803527832
    8. ')' → logprob: -14.500065803527832
    9. ',sum' → logprob: -14.500065803527832
    10. '<|end|>' → logprob: -14.625065803527832

Token 908: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.0004904801025986671
    2. ' key' → logprob: -7.625490665435791
    3. 'k' → logprob: -14.125490188598633
    4. '0' → logprob: -14.250490188598633
    5. '(key' → logprob: -15.125490188598633
    6. '   ' → logprob: -15.375490188598633
    7. 'None' → logprob: -15.750490188598633
    8. '_key' → logprob: -16.125490188598633
    9. '	key' → logprob: -16.125490188598633
    10. '
' → logprob: -16.750490188598633

Token 909: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003243798855692148
    2. ' ]' → logprob: -8.375324249267578
    3. ']
' → logprob: -9.375324249267578
    4. ']
' → logprob: -12.625324249267578
    5. ']

' → logprob: -13.500324249267578
    6. '()]' → logprob: -13.750324249267578
    7. ')]' → logprob: -14.125324249267578
    8. ')' → logprob: -14.500324249267578
    9. '[' → logprob: -14.625324249267578
    10. '   ' → logprob: -14.625324249267578

Token 910: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.486998975276947
    2. '       ' → logprob: -0.986998975276947
    3. ' while' → logprob: -4.736999034881592
    4. 'if' → logprob: -6.236999034881592
    5. 'stack' → logprob: -6.861999034881592
    6. 'p' → logprob: -7.486999034881592
    7. '   ' → logprob: -8.861998558044434
    8. '```' → logprob: -9.236998558044434
    9. 'v' → logprob: -9.736998558044434
    10. '#' → logprob: -9.861998558044434

Token 911: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.029460936784744263
    2. '       ' → logprob: -3.779460906982422
    3. 'for' → logprob: -5.404460906982422
    4. 'if' → logprob: -6.404460906982422
    5. ' while' → logprob: -10.779460906982422
    6. '   ' → logprob: -11.529460906982422
    7. 'stack' → logprob: -12.029460906982422
    8. 'While' → logprob: -12.404460906982422
    9. '	while' → logprob: -13.029460906982422
    10. '#' → logprob: -13.529460906982422

Token 912: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.0017728772945702076
    2. ' stack' → logprob: -6.376772880554199
    3. 'len' → logprob: -10.1267728805542
    4. '(stack' → logprob: -10.6267728805542
    5. 'True' → logprob: -12.8767728805542
    6. '   ' → logprob: -13.5017728805542
    7. '	stack' → logprob: -14.0017728805542
    8. ' len' → logprob: -14.5017728805542
    9. ' ' → logprob: -14.7517728805542
    10. '(len' → logprob: -15.7517728805542

Token 913: ':
' (ID: 734)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.17597369849681854
    2. ' and' → logprob: -2.300973653793335
    3. ':' → logprob: -2.800973653793335
    4. ':
' → logprob: -7.925973892211914
    5. 'stack' → logprob: -10.425973892211914
    6. '):' → logprob: -11.175973892211914
    7. '(stack' → logprob: -12.050973892211914
    8. '	and' → logprob: -12.175973892211914
    9. '   ' → logprob: -12.550973892211914
    10. '```' → logprob: -12.800973892211914

Token 914: '           ' (ID: 352)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4699602723121643
    2. 'p' → logprob: -1.3449602127075195
    3. '           ' → logprob: -2.2199602127075195
    4. 'parent' → logprob: -6.4699602127075195
    5. '(p' → logprob: -6.9699602127075195
    6. '(v' → logprob: -7.0949602127075195
    7. 'u' → logprob: -7.3449602127075195
    8. ' p' → logprob: -7.4699602127075195
    9. ' v' → logprob: -7.5949602127075195
    10. '(parent' → logprob: -8.46996021270752

Token 915: ' p' (ID: 275)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.01303892768919468
    2. 'p' (adapté à ' p') → logprob: -4.8880391120910645
    3. 'u' → logprob: -5.6380391120910645
    4. 'node' → logprob: -7.1380391120910645
    5. 'parent' → logprob: -8.013038635253906
    6. 'vp' → logprob: -8.888038635253906
    7. 'pv' → logprob: -9.138038635253906
    8. '(v' → logprob: -9.513038635253906
    9. 'w' → logprob: -9.513038635253906
    10. 'vv' → logprob: -10.138038635253906

Token 916: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.056286875158548355
    2. 'v' → logprob: -3.1812868118286133
    3. 'p' → logprob: -5.181286811828613
    4. '_,' → logprob: -5.556286811828613
    5. ',v' → logprob: -5.931286811828613
    6. ',p' → logprob: -7.931286811828613
    7. '[-' → logprob: -8.931286811828613
    8. 'op' → logprob: -9.306286811828613
    9. 'top' → logprob: -9.431286811828613
    10. '.pop' → logprob: -9.431286811828613

Token 917: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.00025192240718752146
    2. ' direction' → logprob: -9.000251770019531
    3. 'd' → logprob: -9.125251770019531
    4. '(direction' → logprob: -11.125251770019531
    5. 'dir' → logprob: -12.625251770019531
    6. 'p' → logprob: -14.250251770019531
    7. 'dire' → logprob: -15.125251770019531
    8. 'direct' → logprob: -15.875251770019531
    9. '   ' → logprob: -16.25025177001953
    10. ' ' → logprob: -16.25025177001953

Token 918: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3631351590156555
    2. ' =' → logprob: -1.2381350994110107
    3. '[' → logprob: -5.11313533782959
    4. ',' → logprob: -5.86313533782959
    5. 'v' → logprob: -5.86313533782959
    6. 'p' → logprob: -5.98813533782959
    7. ')' → logprob: -10.11313533782959
    8. '=p' → logprob: -10.23813533782959
    9. 'stack' → logprob: -10.48813533782959
    10. ' p' → logprob: -10.48813533782959

Token 919: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.003177952254191041
    2. ' stack' → logprob: -5.753178119659424
    3. '	stack' → logprob: -16.128177642822266
    4. '(stack' → logprob: -16.253177642822266
    5. '_stack' → logprob: -19.503177642822266
    6. '.stack' → logprob: -19.628177642822266
    7. ' ' → logprob: -19.753177642822266
    8. 'Stack' → logprob: -21.003177642822266
    9. 'stackoverflow' → logprob: -22.003177642822266
    10. '   ' → logprob: -22.378177642822266

Token 920: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -6.706686690449715e-05
    2. '.' → logprob: -9.750066757202148
    3. ' .' → logprob: -12.375066757202148
    4. 'pop' → logprob: -12.500066757202148
    5. '.p' → logprob: -15.250066757202148
    6. '   ' → logprob: -16.25006675720215
    7. '.Pop' → logprob: -16.50006675720215
    8. '_pop' → logprob: -16.62506675720215
    9. ' pop' → logprob: -16.75006675720215
    10. '[-' → logprob: -17.00006675720215

Token 921: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.27675119042396545
    2. '
' → logprob: -1.776751160621643
    3. '(p' → logprob: -3.9017512798309326
    4. ',' → logprob: -4.0267510414123535
    5. '       ' → logprob: -5.0267510414123535
    6. 'p' → logprob: -5.0267510414123535
    7. ' p' → logprob: -5.6517510414123535
    8. '            
' → logprob: -5.7767510414123535
    9. '
' → logprob: -6.4017510414123535
    10. ';' → logprob: -6.4017510414123535

Token 922: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006803352385759354
    2. 'p' → logprob: -5.006803512573242
    3. ' p' → logprob: -10.006803512573242
    4. '       ' → logprob: -10.631803512573242
    5. 'v' → logprob: -11.881803512573242
    6. '
' → logprob: -12.506803512573242
    7. '[p' → logprob: -13.506803512573242
    8. '```' → logprob: -13.506803512573242
    9. '   ' → logprob: -13.631803512573242
    10. '[' → logprob: -14.131803512573242

Token 923: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.09237480163574219
    2. 'if' → logprob: -3.092374801635742
    3. 'v' → logprob: -3.842374801635742
    4. '           ' → logprob: -4.217374801635742
    5. 'n' → logprob: -5.092374801635742
    6. 'count' → logprob: -8.717374801635742
    7. '       ' → logprob: -9.592374801635742
    8. '#' → logprob: -9.842374801635742
    9. 'new' → logprob: -9.842374801635742
    10. 'direction' → logprob: -9.967374801635742

Token 924: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.927930654550437e-05
    2. '   ' → logprob: -11.125029563903809
    3. '```' → logprob: -12.250029563903809
    4. 'p' → logprob: -13.625029563903809
    5. '1' → logprob: -13.625029563903809
    6. '[
' → logprob: -13.750029563903809
    7. 'direction' → logprob: -14.125029563903809
    8. '	' → logprob: -14.250029563903809
    9. '
' → logprob: -14.500029563903809
    10. ' ' → logprob: -14.500029563903809

Token 925: 'direction' (ID: 43278)
  Prédit: 'direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.0010338802821934223
    2. ' direction' → logprob: -7.251033782958984
    3. '4' → logprob: -8.876033782958984
    4. '   ' → logprob: -9.126033782958984
    5. '(direction' → logprob: -10.626033782958984
    6. '[' → logprob: -10.876033782958984
    7. '5' → logprob: -11.751033782958984
    8. '1' → logprob: -12.126033782958984
    9. '```' → logprob: -13.001033782958984
    10. 'dire' → logprob: -13.001033782958984

Token 926: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00327729107812047
    2. ']=' → logprob: -6.25327730178833
    3. '=' → logprob: -6.62827730178833
    4. ' =' → logprob: -10.753276824951172
    5. ' ]' → logprob: -13.128276824951172
    6. '],' → logprob: -14.003276824951172
    7. '[' → logprob: -15.128276824951172
    8. ')' → logprob: -15.378276824951172
    9. '
' → logprob: -15.753276824951172
    10. ',' → logprob: -15.878276824951172

Token 927: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019348275382071733
    2. ' =' → logprob: -6.251935005187988
    3. ']' → logprob: -12.376935005187988
    4. ']=' → logprob: -13.126935005187988
    5. ')' → logprob: -17.001934051513672
    6. ')=' → logprob: -17.126934051513672
    7. ',' → logprob: -17.251934051513672
    8. '=v' → logprob: -17.376934051513672
    9. '[' → logprob: -18.751934051513672
    10. 'v' → logprob: -19.126934051513672

Token 928: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0007631686748936772
    2. ' v' → logprob: -7.250762939453125
    3. 'self' → logprob: -9.875762939453125
    4. ' self' → logprob: -14.250762939453125
    5. '	v' → logprob: -14.875762939453125
    6. '[v' → logprob: -15.000762939453125
    7. 'None' → logprob: -16.000762939453125
    8. '[' → logprob: -16.250762939453125
    9. '(v' → logprob: -16.750762939453125
    10. '   ' → logprob: -16.938262939453125

Token 929: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030672864988446236
    2. 'v' → logprob: -3.655672788619995
    3. '
' → logprob: -5.905673027038574
    4. ',' → logprob: -7.905673027038574
    5. 'n' → logprob: -7.905673027038574
    6. '            
' → logprob: -8.030673027038574
    7. '       ' → logprob: -8.405673027038574
    8. 'p' → logprob: -9.155673027038574
    9. '   ' → logprob: -9.655673027038574
    10. '#' → logprob: -9.780673027038574

Token 930: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009674280881881714
    2. 'v' → logprob: -5.134674072265625
    3. '       ' → logprob: -5.634674072265625
    4. '   ' → logprob: -9.759674072265625
    5. 'p' → logprob: -10.134674072265625
    6. ' v' → logprob: -11.009674072265625
    7. ',' → logprob: -11.009674072265625
    8. '<|end|>' → logprob: -12.009674072265625
    9. '```' → logprob: -12.384674072265625
    10. '#' → logprob: -12.634674072265625

Token 931: ' p' (ID: 275)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7672845721244812
    2. '           ' → logprob: -1.267284631729126
    3. 'v' → logprob: -1.892284631729126
    4. 'if' → logprob: -2.642284631729126
    5. 'p' (adapté à ' p') → logprob: -3.892284631729126
    6. '#' → logprob: -4.517284393310547
    7. '       ' → logprob: -8.017284393310547
    8. 'count' → logprob: -8.517284393310547
    9. '   ' → logprob: -9.017284393310547
    10. 'self' → logprob: -9.267284393310547

Token 932: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.452426608419046e-05
    2. '4' → logprob: -10.75003433227539
    3. '5' → logprob: -12.50003433227539
    4. '=' → logprob: -13.25003433227539
    5. '
' → logprob: -13.62503433227539
    6. '   ' → logprob: -13.62503433227539
    7. '2' → logprob: -14.12503433227539
    8. 'p' → logprob: -14.25003433227539
    9. '#' → logprob: -14.37503433227539
    10. '```' → logprob: -14.75003433227539

Token 933: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -2.2007883671903983e-05
    2. '[' → logprob: -11.625021934509277
    3. '5' → logprob: -11.750021934509277
    4. 'direction' → logprob: -12.500021934509277
    5. '```' → logprob: -15.250021934509277
    6. '
' → logprob: -15.375021934509277
    7. '   ' → logprob: -15.625021934509277
    8. ']' → logprob: -15.750021934509277
    9. '][' → logprob: -16.500022888183594
    10. '``' → logprob: -16.625022888183594

Token 934: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4518473446369171
    2. '+=' → logprob: -1.2018473148345947
    3. ' +=' → logprob: -3.2018473148345947
    4. ' =' → logprob: -3.8268473148345947
    5. ']+=' → logprob: -8.201847076416016
    6. ']' → logprob: -8.826847076416016
    7. ']=' → logprob: -11.951847076416016
    8. ')' → logprob: -12.076847076416016
    9. ',' → logprob: -12.326847076416016
    10. ' ' → logprob: -13.326847076416016

Token 935: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048617567867040634
    2. '+=' → logprob: -3.1736176013946533
    3. ' =' → logprob: -5.298617362976074
    4. ' +=' → logprob: -7.423617362976074
    5. '=p' → logprob: -12.298617362976074
    6. '   ' → logprob: -14.423617362976074
    7. '.=' → logprob: -14.673617362976074
    8. ' ' → logprob: -14.798617362976074
    9. ']+=' → logprob: -14.798617362976074
    10. ',' → logprob: -14.923617362976074

Token 936: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. 'v' → logprob: -13.250003814697266
    3. ' ' → logprob: -13.250003814697266
    4. '   ' → logprob: -17.125003814697266
    5. 'p' → logprob: -18.375003814697266
    6. '۱' → logprob: -20.562503814697266
    7. '１' → logprob: -20.687503814697266
    8. '+' → logprob: -20.750003814697266
    9. '(' → logprob: -20.812503814697266
    10. ' v' → logprob: -21.250003814697266

Token 937: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. 'v' → logprob: -12.87500286102295
    3. ' ' → logprob: -14.50000286102295
    4. 'p' → logprob: -17.750003814697266
    5. '   ' → logprob: -17.875003814697266
    6. '
' → logprob: -19.687503814697266
    7. '+' → logprob: -19.687503814697266
    8. '１' → logprob: -19.687503814697266
    9. '۱' → logprob: -19.875003814697266
    10. '```' → logprob: -19.937503814697266

Token 938: ';' (ID: 26)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02217208407819271
    2. 'p' → logprob: -3.897171974182129
    3. '   ' → logprob: -7.272171974182129
    4. '       ' → logprob: -7.522171974182129
    5. 'v' → logprob: -8.647171974182129
    6. 'and' → logprob: -10.022171974182129
    7. ' and' → logprob: -10.022171974182129
    8. ',' → logprob: -10.397171974182129
    9. ' p' → logprob: -10.397171974182129
    10. '<|end|>' → logprob: -10.772171974182129

Token 939: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0001875671005109325
    2. '           ' → logprob: -9.375187873840332
    3. '   ' → logprob: -9.750187873840332
    4. ' p' → logprob: -10.250187873840332
    5. '       ' → logprob: -11.750187873840332
    6. ' ' → logprob: -14.375187873840332
    7. '  ' → logprob: -15.000187873840332
    8. '	p' → logprob: -16.875186920166016
    9. '     ' → logprob: -17.000186920166016
    10. '    ' → logprob: -17.500186920166016

Token 940: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012535012501757592
    2. '=' → logprob: -10.12512493133545
    3. '][' → logprob: -10.37512493133545
    4. ',' → logprob: -11.00012493133545
    5. ' [' → logprob: -12.37512493133545
    6. ']' → logprob: -12.50012493133545
    7. '   ' → logprob: -12.75012493133545
    8. '[
' → logprob: -12.75012493133545
    9. ')[' → logprob: -13.25012493133545
    10. 'def' → logprob: -13.25012493133545

Token 941: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.00013285996101330966
    2. '[' → logprob: -9.00013256072998
    3. '4' → logprob: -12.87513256072998
    4. '][' → logprob: -13.87513256072998
    5. '   ' → logprob: -13.87513256072998
    6. '```' → logprob: -14.00013256072998
    7. ']' → logprob: -14.37513256072998
    8. '1' → logprob: -14.62513256072998
    9. '(' → logprob: -14.62513256072998
    10. '
' → logprob: -15.25013256072998

Token 942: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.014195947907865047
    2. ' +=' → logprob: -4.264195919036865
    3. ']+=' → logprob: -10.889196395874023
    4. '=' → logprob: -11.764196395874023
    5. '+' → logprob: -12.139196395874023
    6. ')' → logprob: -16.014196395874023
    7. ' =' → logprob: -16.264196395874023
    8. ' +' → logprob: -16.264196395874023
    9. '+=(' → logprob: -16.264196395874023
    10. '```' → logprob: -16.389196395874023

Token 943: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.038204092532396317
    2. ' +=' → logprob: -3.2882041931152344
    3. '=' → logprob: -8.788204193115234
    4. '+' → logprob: -12.038204193115234
    5. ' =' → logprob: -12.538204193115234
    6. ' +' → logprob: -14.913204193115234
    7. ']+=' → logprob: -16.038204193115234
    8. '+=(' → logprob: -17.538204193115234
    9. '```' → logprob: -18.163204193115234
    10. ' ' → logprob: -18.163204193115234

Token 944: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -2.534558552724775e-05
    2. ' key' → logprob: -10.750025749206543
    3. 'v' → logprob: -12.625025749206543
    4. '	key' → logprob: -15.375025749206543
    5. 'p' → logprob: -16.250024795532227
    6. 'k' → logprob: -16.500024795532227
    7. '   ' → logprob: -16.750024795532227
    8. ' ' → logprob: -18.250024795532227
    9. '
' → logprob: -18.875024795532227
    10. '  ' → logprob: -19.125024795532227

Token 945: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6066893935203552
    2. '<|end|>' → logprob: -0.8566893935203552
    3. '           ' → logprob: -4.231689453125
    4. ' 
' → logprob: -4.856689453125
    5. '<|end|>' → logprob: -5.731689453125
    6. ' ' → logprob: -7.106689453125
    7. '  
' → logprob: -7.231689453125
    8. 'return' → logprob: -7.606689453125
    9. '
' → logprob: -7.856689453125
    10. '       ' → logprob: -7.856689453125

Token 946: ' update' (ID: 4027)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5546473860740662
    2. 'v' → logprob: -1.179647445678711
    3. 'while' → logprob: -3.054647445678711
    4. 'return' → logprob: -3.554647445678711
    5. '       ' → logprob: -4.179647445678711
    6. ' while' → logprob: -4.429647445678711
    7. ' return' → logprob: -5.429647445678711
    8. ' v' → logprob: -5.929647445678711
    9. 'key' → logprob: -6.679647445678711
    10. '<|end|>' → logprob: -6.679647445678711

Token 947: ' vertex' (ID: 25363)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 948: ''s' (ID: 885)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 949: ' information' (ID: 2164)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9128623008728027
    2. '5' → logprob: -1.0378623008728027
    3. 'value' → logprob: -2.0378623008728027
    4. 'key' → logprob: -2.9128623008728027
    5. '6' → logprob: -4.037862300872803
    6. 'sum' → logprob: -4.162862300872803
    7. ' value' → logprob: -4.787862300872803
    8. ' key' → logprob: -5.037862300872803
    9. '<|end|>' → logprob: -5.537862300872803
    10. '_key' → logprob: -7.037862300872803

Token 950: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0025530694983899593
    2. 'v' → logprob: -6.1275529861450195
    3. '<|end|>' → logprob: -8.75255298614502
    4. '       ' → logprob: -9.37755298614502
    5. ',' → logprob: -10.50255298614502
    6. ' if' → logprob: -11.00255298614502
    7. '   ' → logprob: -11.00255298614502
    8. ' v' → logprob: -11.37755298614502
    9. 'return' → logprob: -11.87755298614502
    10. 'if' → logprob: -12.00255298614502

Token 951: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011566569097340107
    2. 'v' → logprob: -4.636566638946533
    3. 'if' → logprob: -7.511566638946533
    4. ' if' → logprob: -7.511566638946533
    5. '       ' → logprob: -8.136566162109375
    6. ' v' → logprob: -8.636566162109375
    7. 'return' → logprob: -9.511566162109375
    8. '<|end|>' → logprob: -10.011566162109375
    9. '   ' → logprob: -10.636566162109375
    10. 'else' → logprob: -11.011566162109375

Token 952: ' if' (ID: 538)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.08627830445766449
    2. '           ' → logprob: -2.711278200149536
    3. 'if' (adapté à ' if') → logprob: -4.586278438568115
    4. '       ' → logprob: -5.211278438568115
    5. 'p' → logprob: -8.336277961730957
    6. 'direction' → logprob: -9.211277961730957
    7. 'key' → logprob: -9.711277961730957
    8. ' if' → logprob: -10.086277961730957
    9. ' v' → logprob: -10.086277961730957
    10. 'return' → logprob: -10.586277961730957

Token 953: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.16790880262851715
    2. 'v' → logprob: -2.6679089069366455
    3. 'priority' → logprob: -3.0429089069366455
    4. 'rotate' → logprob: -3.9179089069366455
    5. 'direction' → logprob: -4.167908668518066
    6. ' p' → logprob: -6.792908668518066
    7. '   ' → logprob: -8.292908668518066
    8. '(' → logprob: -8.917908668518066
    9. '(p' → logprob: -9.667908668518066
    10. 'not' → logprob: -9.792908668518066

Token 954: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.35706390615087e-05
    2. '   ' → logprob: -11.375033378601074
    3. '
' → logprob: -12.125033378601074
    4. 'p' → logprob: -12.500033378601074
    5. 'priority' → logprob: -12.875033378601074
    6. '       ' → logprob: -13.500033378601074
    7. ' is' → logprob: -13.750033378601074
    8. 'and' → logprob: -14.125033378601074
    9. ' ' → logprob: -14.375033378601074
    10. '           ' → logprob: -14.500033378601074

Token 955: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.11080001294612885
    2. 'direction' → logprob: -2.61080002784729
    3. '4' → logprob: -3.48580002784729
    4. '[' → logprob: -8.610799789428711
    5. '1' → logprob: -8.735799789428711
    6. ' direction' → logprob: -9.110799789428711
    7. '   ' → logprob: -9.485799789428711
    8. '5' → logprob: -10.235799789428711
    9. '```' → logprob: -10.235799789428711
    10. ' ' → logprob: -10.610799789428711

Token 956: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.12141504883766174
    2. '<' → logprob: -2.246415138244629
    3. ' >' → logprob: -5.746415138244629
    4. '<p' → logprob: -6.121415138244629
    5. '>' → logprob: -6.621415138244629
    6. '<v' → logprob: -7.496415138244629
    7. '[' → logprob: -7.996415138244629
    8. ')' → logprob: -7.996415138244629
    9. ' <=' → logprob: -8.496415138244629
    10. ']' → logprob: -8.746415138244629

Token 957: ' >=' (ID: 5064)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.12515203654766083
    2. ' <' → logprob: -2.625152111053467
    3. '>' → logprob: -3.250152111053467
    4. '<=' → logprob: -5.750152111053467
    5. ' >' → logprob: -6.125152111053467
    6. '>=' → logprob: -8.000151634216309
    7. ' <=' → logprob: -8.250151634216309
    8. '<p' → logprob: -8.250151634216309
    9. ' ' → logprob: -9.375151634216309
    10. '<v' → logprob: -9.500151634216309

Token 958: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.13108502328395844
    2. 'priority' → logprob: -2.13108491897583
    3. 'p' → logprob: -5.50608491897583
    4. ' priority' → logprob: -10.381085395812988
    5. ' v' → logprob: -10.631085395812988
    6. '   ' → logprob: -12.006085395812988
    7. '	v' → logprob: -12.006085395812988
    8. 'key' → logprob: -12.506085395812988
    9. '(priority' → logprob: -12.756085395812988
    10. 'prior' → logprob: -13.381085395812988

Token 959: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.60414821645827e-06
    2. '   ' → logprob: -13.375004768371582
    3. '       ' → logprob: -13.750004768371582
    4. '           ' → logprob: -14.500004768371582
    5. 'priority' → logprob: -14.500004768371582
    6. ' [' → logprob: -15.500004768371582
    7. '               ' → logprob: -15.875004768371582
    8. '3' → logprob: -16.000003814697266
    9. 'p' → logprob: -16.250003814697266
    10. 'v' → logprob: -16.375003814697266

Token 960: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.01605748012661934
    2. '[' → logprob: -4.14105749130249
    3. '   ' → logprob: -11.641057014465332
    4. '```' → logprob: -12.016057014465332
    5. '4' → logprob: -13.266057014465332
    6. ' ' → logprob: -13.516057014465332
    7. '2' → logprob: -13.766057014465332
    8. '
' → logprob: -13.891057014465332
    9. '``' → logprob: -14.516057014465332
    10. '`' → logprob: -14.516057014465332

Token 961: ']:' (ID: 12433)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013870105147361755
    2. ':
' → logprob: -5.1388702392578125
    3. '):' → logprob: -5.8888702392578125
    4. ' :' → logprob: -5.8888702392578125
    5. '           ' → logprob: -6.6388702392578125
    6. '       ' → logprob: -7.6388702392578125
    7. ':return' → logprob: -8.513870239257812
    8. '            ' → logprob: -9.513870239257812
    9. '               ' → logprob: -9.513870239257812
    10. ']:' → logprob: -9.638870239257812

Token 962: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.042881689965724945
    2. 'break' → logprob: -3.292881727218628
    3. ' break' → logprob: -5.417881488800049
    4. '           ' → logprob: -7.917881488800049
    5. '	break' → logprob: -11.292881965637207
    6. '   ' → logprob: -11.917881965637207
    7. '             ' → logprob: -12.542881965637207
    8. 'return' → logprob: -13.542881965637207
    9. '              ' → logprob: -13.667881965637207
    10. '                   ' → logprob: -14.042881965637207

Token 963: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5701242089271545
    2. 'v' → logprob: -1.0701241493225098
    3. 'else' → logprob: -2.6951241493225098
    4. 'if' → logprob: -3.8201241493225098
    5. '       ' → logprob: -6.69512414932251
    6. 'p' → logprob: -7.69512414932251
    7. '   ' → logprob: -8.820124626159668
    8. ' else' → logprob: -9.070124626159668
    9. ' if' → logprob: -9.820124626159668
    10. ' v' → logprob: -10.570124626159668

Token 964: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5821529626846313
    2. 'v' → logprob: -0.8321529626846313
    3. 'else' → logprob: -5.707152843475342
    4. '       ' → logprob: -6.332152843475342
    5. '   ' → logprob: -7.832152843475342
    6. ' v' → logprob: -8.2071533203125
    7. 'p' → logprob: -8.4571533203125
    8. ' else' → logprob: -9.4571533203125
    9. 'if' → logprob: -9.9571533203125
    10. '[' → logprob: -11.0821533203125

Token 965: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.08157821744680405
    2. 'direction' → logprob: -3.331578254699707
    3. ' v' → logprob: -4.206578254699707
    4. '           ' → logprob: -4.456578254699707
    5. ' direction' → logprob: -4.831578254699707
    6. '       ' → logprob: -5.581578254699707
    7. '
' → logprob: -6.831578254699707
    8. ' if' → logprob: -6.956578254699707
    9. 'p' → logprob: -6.956578254699707
    10. 'if' → logprob: -7.456578254699707

Token 966: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43798667192459106
    2. '=' → logprob: -1.0629866123199463
    3. ',' → logprob: -4.687986850738525
    4. '=p' → logprob: -11.812986373901367
    5. '=v' → logprob: -11.937986373901367
    6. ' ' → logprob: -12.312986373901367
    7. ' ,' → logprob: -12.437986373901367
    8. '   ' → logprob: -12.812986373901367
    9. ',p' → logprob: -13.312986373901367
    10. '[' → logprob: -13.687986373901367

Token 967: ' rotate' (ID: 31987)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -0.06650544703006744
    2. 'self' → logprob: -2.8165054321289062
    3. ' rotate' → logprob: -5.941505432128906
    4. ' self' → logprob: -6.441505432128906
    5. 'p' → logprob: -8.191505432128906
    6. ' p' → logprob: -11.441505432128906
    7. 'v' → logprob: -12.566505432128906
    8. 'rot' → logprob: -12.691505432128906
    9. '(' → logprob: -13.566505432128906
    10. '   ' → logprob: -13.691505432128906

Token 968: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -2.7610454708337784e-05
    2. 'p' → logprob: -11.125027656555176
    3. '(' → logprob: -11.375027656555176
    4. '(
' → logprob: -14.250027656555176
    5. ' (' → logprob: -15.000027656555176
    6. '(v' → logprob: -16.00002670288086
    7. '((' → logprob: -16.37502670288086
    8. ' p' → logprob: -17.12502670288086
    9. '```' → logprob: -17.62502670288086
    10. '(self' → logprob: -17.75002670288086

Token 969: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005630824714899063
    2. 'v' → logprob: -5.505630970001221
    3. ',v' → logprob: -6.755630970001221
    4. '(v' → logprob: -8.505630493164062
    5. ' ,' → logprob: -9.005630493164062
    6. '1' → logprob: -10.380630493164062
    7. ' v' → logprob: -11.505630493164062
    8. '(' → logprob: -11.630630493164062
    9. '0' → logprob: -12.505630493164062
    10. ')' → logprob: -13.505630493164062

Token 970: ' ' (ID: 220)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.1738099306821823
    2. '1' → logprob: -2.5488100051879883
    3. ' direction' → logprob: -2.5488100051879883
    4. '0' → logprob: -6.548810005187988
    5. ' ' → logprob: -7.048810005187988
    6. '   ' → logprob: -8.048810005187988
    7. '(direction' → logprob: -8.298810005187988
    8. 'int' → logprob: -8.798810005187988
    9. 'dire' → logprob: -9.923810005187988
    10. '!' → logprob: -10.798810005187988

Token 971: '1' (ID: 16)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.026235274970531464
    2. '1' → logprob: -4.276235103607178
    3. ' direction' → logprob: -4.526235103607178
    4. '   ' → logprob: -7.776235103607178
    5. '0' → logprob: -7.776235103607178
    6. '(direction' → logprob: -8.776235580444336
    7. ' ' → logprob: -9.776235580444336
    8. 'int' → logprob: -10.151235580444336
    9. 'dire' → logprob: -10.901235580444336
    10. '!' → logprob: -11.401235580444336

Token 972: ' -' (ID: 533)
  Prédit: '-direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-direction' → logprob: -0.5885583162307739
    2. ' -' → logprob: -1.338558316230774
    3. ')' → logprob: -2.0885581970214844
    4. '-' → logprob: -2.8385581970214844
    5. '-dire' → logprob: -9.463558197021484
    6. ' )' → logprob: -10.588558197021484
    7. '-directed' → logprob: -10.713558197021484
    8. '<|end|>' → logprob: -10.838558197021484
    9. ' if' → logprob: -11.088558197021484
    10. 'direction' → logprob: -11.088558197021484

Token 973: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.0009118211455643177
    2. ' direction' → logprob: -7.000911712646484
    3. '   ' → logprob: -15.375911712646484
    4. ' ' → logprob: -17.625911712646484
    5. '  ' → logprob: -18.125911712646484
    6. '(direction' → logprob: -18.500911712646484
    7. '方向' → logprob: -20.000911712646484
    8. 'directory' → logprob: -20.000911712646484
    9. 'dire' → logprob: -20.500911712646484
    10. 'Direction' → logprob: -20.625911712646484

Token 974: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013319060672074556
    2. ')
' → logprob: -6.626331806182861
    3. ' )' → logprob: -12.37633228302002
    4. ')
' → logprob: -14.50133228302002
    5. ')#' → logprob: -15.00133228302002
    6. ')v' → logprob: -15.62633228302002
    7. '<|end|>' → logprob: -15.75133228302002
    8. ')

' → logprob: -16.001331329345703
    9. '       ' → logprob: -16.001331329345703
    10. '   ' → logprob: -16.251331329345703

Token 975: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12016146630048752
    2. ' if' → logprob: -2.495161533355713
    3. 'if' → logprob: -3.745161533355713
    4. '           ' → logprob: -5.245161533355713
    5. 'return' → logprob: -6.620161533355713
    6. '   ' → logprob: -8.620161056518555
    7. ' return' → logprob: -9.120161056518555
    8. 'v' → logprob: -9.245161056518555
    9. 'else' → logprob: -11.120161056518555
    10. '[' → logprob: -11.245161056518555

Token 976: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2945840060710907
    2. 'if' → logprob: -1.794584035873413
    3. 'self' → logprob: -3.169584035873413
    4. 'else' (adapté à ' else') → logprob: -3.794584035873413
    5. ' if' → logprob: -4.294583797454834
    6. 'return' → logprob: -4.794583797454834
    7. '   ' → logprob: -7.294583797454834
    8. 'v' → logprob: -7.669583797454834
    9. '        
' → logprob: -8.044584274291992
    10. ' else' → logprob: -8.294584274291992

Token 977: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1083902046084404
    2. ':
' → logprob: -2.3583900928497314
    3. '        ' → logprob: -5.6083903312683105
    4. '           ' → logprob: -6.3583903312683105
    5. ' :' → logprob: -6.8583903312683105
    6. ' self' → logprob: -6.8583903312683105
    7. '       ' → logprob: -7.8583903312683105
    8. ':self' → logprob: -9.608389854431152
    9. ' :
' → logprob: -10.483389854431152
    10. '   ' → logprob: -10.608389854431152

Token 978: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.44553694128990173
    2. '       ' → logprob: -1.8205369710922241
    3. '   ' → logprob: -1.9455369710922241
    4. 'self' → logprob: -2.9455368518829346
    5. ' self' → logprob: -6.820537090301514
    6. ' ' → logprob: -7.195537090301514
    7. '	self' → logprob: -9.445536613464355
    8. '  ' → logprob: -10.070536613464355
    9. '     ' → logprob: -10.070536613464355
    10. '        ' → logprob: -10.445536613464355

Token 979: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.00047535591875202954
    2. 'root' → logprob: -8.00047492980957
    3. '.' → logprob: -9.12547492980957
    4. '[root' → logprob: -11.25047492980957
    5. ' .' → logprob: -11.62547492980957
    6. ' root' → logprob: -12.62547492980957
    7. '	root' → logprob: -13.00047492980957
    8. '_root' → logprob: -13.50047492980957
    9. '/root' → logprob: -14.12547492980957
    10. '._' → logprob: -14.87547492980957

Token 980: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38695937395095825
    2. ' =' → logprob: -1.1369593143463135
    3. '=v' → logprob: -9.386959075927734
    4. ',' → logprob: -12.636959075927734
    5. 'v' → logprob: -13.886959075927734
    6. ' v' → logprob: -16.261959075927734
    7. ' ' → logprob: -16.761959075927734
    8. '＝' → logprob: -16.886959075927734
    9. '=None' → logprob: -17.511959075927734
    10. ',v' → logprob: -17.761959075927734

Token 981: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.7610454708337784e-05
    2. ' v' → logprob: -10.500027656555176
    3. '(v' → logprob: -18.00002670288086
    4. '	v' → logprob: -18.00002670288086
    5. '[v' → logprob: -20.12502670288086
    6. '$v' → logprob: -20.12502670288086
    7. '_v' → logprob: -21.37502670288086
    8. '   ' → logprob: -21.50002670288086
    9. ')v' → logprob: -21.75002670288086
    10. '
' → logprob: -23.12502670288086

Token 982: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 983: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 984: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 985: ' p' (ID: 275)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.17003749310970306
    2. 'p' → logprob: -2.1700375080108643
    3. 'node' → logprob: -4.045037269592285
    4. 'parent' → logprob: -5.045037269592285
    5. 'i' → logprob: -5.295037269592285
    6. 'ancestor' → logprob: -6.045037269592285
    7. 'cur' → logprob: -6.670037269592285
    8. ' v' → logprob: -7.170037269592285
    9. 'direction' → logprob: -7.295037269592285
    10. 'c' → logprob: -7.295037269592285

Token 986: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04344739764928818
    2. ' in' → logprob: -3.293447494506836
    3. 'in' → logprob: -5.418447494506836
    4. ',d' → logprob: -7.543447494506836
    5. 'd' → logprob: -9.293447494506836
    6. 'direction' → logprob: -9.918447494506836
    7. ',_' → logprob: -10.043447494506836
    8. 'v' → logprob: -10.043447494506836
    9. 'p' → logprob: -10.168447494506836
    10. '_,' → logprob: -10.793447494506836

Token 987: ' _' (ID: 1175)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.03443840518593788
    2. ' direction' → logprob: -3.659438371658325
    3. 'None' → logprob: -5.534438610076904
    4. '_' → logprob: -6.909438610076904
    5. ' None' → logprob: -7.284438610076904
    6. 'True' → logprob: -7.284438610076904
    7. '   ' → logprob: -7.909438610076904
    8. 'False' → logprob: -8.034438133239746
    9. '0' → logprob: -8.284438133239746
    10. '_,' → logprob: -8.659438133239746

Token 988: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.16051799058914185
    2. ' in' → logprob: -1.910517930984497
    3. ',' → logprob: -9.285517692565918
    4. '   ' → logprob: -9.660517692565918
    5. '
' → logprob: -10.035517692565918
    6. '       ' → logprob: -10.160517692565918
    7. 'stack' → logprob: -10.535517692565918
    8. '           ' → logprob: -12.035517692565918
    9. '    ' → logprob: -12.035517692565918
    10. ' ' → logprob: -12.160517692565918

Token 989: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.00016682932619005442
    2. ' stack' → logprob: -8.875166893005371
    3. 're' → logprob: -11.000166893005371
    4. '   ' → logprob: -11.625166893005371
    5. '(stack' → logprob: -14.750166893005371
    6. '	stack' → logprob: -15.000166893005371
    7. '       ' → logprob: -15.750166893005371
    8. ' ' → logprob: -16.250165939331055
    9. '  ' → logprob: -16.500165939331055
    10. 'reverse' → logprob: -16.500165939331055

Token 990: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06344760209321976
    2. ':
' → logprob: -2.8134477138519287
    3. '           ' → logprob: -7.56344747543335
    4. '       ' → logprob: -7.81344747543335
    5. '[p' → logprob: -9.188447952270508
    6. '[' → logprob: -9.438447952270508
    7. '[::-' → logprob: -9.688447952270508
    8. ':p' → logprob: -9.688447952270508
    9. '   ' → logprob: -10.188447952270508
    10. '):
' → logprob: -10.313447952270508

Token 991: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.43645989894866943
    2. '           ' → logprob: -1.3114598989486694
    3. ' p' → logprob: -2.936460018157959
    4. '   ' → logprob: -3.561460018157959
    5. '       ' → logprob: -5.936460018157959
    6. ' ' → logprob: -9.6864595413208
    7. '	p' → logprob: -9.8114595413208
    8. '  ' → logprob: -10.9364595413208
    9. '               ' → logprob: -11.5614595413208
    10. ',p' → logprob: -11.9364595413208

Token 992: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.013041160069406033
    2. '.' → logprob: -4.388041019439697
    3. '   ' → logprob: -8.763041496276855
    4. '=' → logprob: -9.138041496276855
    5. '._' → logprob: -9.638041496276855
    6. '.update' → logprob: -10.388041496276855
    7. '.__' → logprob: -10.638041496276855
    8. '       ' → logprob: -10.763041496276855
    9. '][' → logprob: -11.013041496276855
    10. ' =' → logprob: -11.013041496276855

Token 993: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.3244975805282593
    2. '[' → logprob: -1.3244975805282593
    3. '=' → logprob: -5.074497699737549
    4. ' ' → logprob: -6.699497699737549
    5. '   ' → logprob: -7.074497699737549
    6. ']' → logprob: -7.074497699737549
    7. '][' → logprob: -7.574497699737549
    8. '5' → logprob: -8.07449722290039
    9. '
' → logprob: -8.69949722290039
    10. ',' → logprob: -8.69949722290039

Token 994: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2826482057571411
    2. ' +=' → logprob: -2.5326480865478516
    3. ']+=' → logprob: -2.5326480865478516
    4. '+=' → logprob: -2.7826480865478516
    5. ' -=' → logprob: -4.157648086547852
    6. '=' → logprob: -5.532648086547852
    7. '-=' → logprob: -5.782648086547852
    8. ' ]' → logprob: -7.157648086547852
    9. ',' → logprob: -7.532648086547852
    10. ' =' → logprob: -7.782648086547852

Token 995: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7053639888763428
    2. '+=' → logprob: -1.2053639888763428
    3. '-=' → logprob: -1.8303639888763428
    4. ' -=' → logprob: -3.7053639888763428
    5. ' +=' → logprob: -4.330364227294922
    6. ' =' → logprob: -4.830364227294922
    7. '-' → logprob: -8.580364227294922
    8. ' ' → logprob: -9.580364227294922
    9. ',' → logprob: -9.830364227294922
    10. '   ' → logprob: -10.830364227294922

Token 996: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004679560661315918
    2. '0' → logprob: -5.5046796798706055
    3. ' ' → logprob: -7.7546796798706055
    4. '-' → logprob: -8.754679679870605
    5. ' -' → logprob: -11.629679679870605
    6. '   ' → logprob: -13.129679679870605
    7. 'v' → logprob: -13.129679679870605
    8. '           ' → logprob: -14.879679679870605
    9. 'p' → logprob: -15.692179679870605
    10. '       ' → logprob: -15.879679679870605

Token 997: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005590294953435659
    2. '0' → logprob: -5.255590438842773
    3. '-' → logprob: -8.005590438842773
    4. ' ' → logprob: -11.630590438842773
    5. 'v' → logprob: -11.755590438842773
    6. 'p' → logprob: -12.630590438842773
    7. ' -' → logprob: -13.255590438842773
    8. '(' → logprob: -14.755590438842773
    9. 'len' → logprob: -14.755590438842773
    10. '(-' → logprob: -16.380590438842773

Token 998: ';' (ID: 26)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4242919087409973
    2. '           ' → logprob: -1.9242918491363525
    3. ' p' → logprob: -2.0492918491363525
    4. ',' → logprob: -3.7992918491363525
    5. '   ' → logprob: -4.049292087554932
    6. '<|end|>' → logprob: -4.049292087554932
    7. ' ' → logprob: -4.799292087554932
    8. ',p' → logprob: -5.924292087554932
    9. '<|end|>' → logprob: -7.424292087554932
    10. 'p' → logprob: -8.049291610717773

Token 999: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.5786139965057373
    2. 'p' → logprob: -0.8286139965057373
    3. '       ' → logprob: -5.953614234924316
    4. '           ' → logprob: -9.953614234924316
    5. '   ' → logprob: -10.703614234924316
    6. ' ' → logprob: -13.078614234924316
    7. '    ' → logprob: -14.453614234924316
    8. '        ' → logprob: -14.578614234924316
    9. '	p' → logprob: -14.578614234924316
    10. '  ' → logprob: -15.828614234924316

Token 1000: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00017267030489165336
    2. ' ' → logprob: -9.62517261505127
    3. ' [' → logprob: -9.87517261505127
    4. '   ' → logprob: -10.62517261505127
    5. ',' → logprob: -11.50017261505127
    6. ' +=' → logprob: -12.12517261505127
    7. '+=' → logprob: -12.62517261505127
    8. '	' → logprob: -13.12517261505127
    9. '```' → logprob: -13.12517261505127
    10. '  ' → logprob: -13.87517261505127

Token 1001: '5' (ID: 20)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.43736958503723145
    2. '5' → logprob: -1.0623695850372314
    3. '][' → logprob: -5.687369346618652
    4. '1' → logprob: -6.062369346618652
    5. ' ' → logprob: -6.062369346618652
    6. '   ' → logprob: -8.437369346618652
    7. ',' → logprob: -8.937369346618652
    8. ']' → logprob: -9.937369346618652
    9. ' [' → logprob: -10.187369346618652
    10. ' ][' → logprob: -10.562369346618652

Token 1002: ']' (ID: 60)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1435839831829071
    2. '+=' → logprob: -2.0185840129852295
    3. ' -=' → logprob: -7.14358377456665
    4. ']+=' → logprob: -9.643584251403809
    5. '+' → logprob: -10.393584251403809
    6. '-=' → logprob: -11.143584251403809
    7. ' +' → logprob: -12.768584251403809
    8. ',' → logprob: -13.643584251403809
    9. ' ' → logprob: -13.643584251403809
    10. ')' → logprob: -13.768584251403809

Token 1003: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10055061429738998
    2. ' +=' → logprob: -2.350550651550293
    3. '-=' → logprob: -8.475550651550293
    4. ' -=' → logprob: -9.100550651550293
    5. '+' → logprob: -11.225550651550293
    6. '=' → logprob: -12.600550651550293
    7. ']+=' → logprob: -12.850550651550293
    8. '-' → logprob: -14.225550651550293
    9. ' ' → logprob: -14.225550651550293
    10. ' +' → logprob: -14.475550651550293

Token 1004: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.001176893594674766
    2. ' key' → logprob: -6.751176834106445
    3. 'v' → logprob: -12.751176834106445
    4. '	key' → logprob: -13.876176834106445
    5. '   ' → logprob: -14.126176834106445
    6. 'k' → logprob: -14.626176834106445
    7. ' ' → logprob: -15.501176834106445
    8. '
' → logprob: -15.501176834106445
    9. 'value' → logprob: -15.501176834106445
    10. 'p' → logprob: -15.751176834106445

Token 1005: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1006: ' update' (ID: 4027)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1007: ' vertex' (ID: 25363)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1008: ''s' (ID: 885)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1009: ' information' (ID: 2164)
  Prédit: 'information'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'information' → logprob: -0.8378528952598572
    2. '<|end|>' → logprob: -1.212852954864502
    3. ' information' → logprob: -1.462852954864502
    4. 'value' → logprob: -4.462852954864502
    5. '...' → logprob: -5.462852954864502
    6. '
' → logprob: -5.712852954864502
    7. '<|end|>' → logprob: -5.962852954864502
    8. ' value' → logprob: -6.212852954864502
    9. '```' → logprob: -6.462852954864502
    10. 'info' → logprob: -6.587852954864502

Token 1010: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1011: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1012: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1013: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1014: '.root' (ID: 25375)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1015: '
    
' (ID: 15698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1016: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1017: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0036868900060653687
    2. '   ' → logprob: -5.628686904907227
    3. ' def' → logprob: -10.003686904907227
    4. '    
' → logprob: -11.128686904907227
    5. '<|end|>' → logprob: -11.378686904907227
    6. '
' → logprob: -11.628686904907227
    7. '	def' → logprob: -13.378686904907227
    8. '```' → logprob: -13.753686904907227
    9. '  ' → logprob: -13.878686904907227
    10. '        
' → logprob: -14.128686904907227

Token 1018: ' delete' (ID: 6168)
  Prédit: 'erase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'erase' → logprob: -0.8353529572486877
    2. 'remove' → logprob: -1.335352897644043
    3. 'delete' → logprob: -1.585352897644043
    4. 'merge' → logprob: -3.085352897644043
    5. '_remove' → logprob: -3.835352897644043
    6. '_' → logprob: -4.460352897644043
    7. '_delete' → logprob: -4.585352897644043
    8. 'split' → logprob: -5.960352897644043
    9. 'pop' → logprob: -5.960352897644043
    10. '_merge' → logprob: -6.335352897644043

Token 1019: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.547789674485102e-05
    2. '(' → logprob: -10.625035285949707
    3. 'self' → logprob: -11.500035285949707
    4. '   ' → logprob: -14.375035285949707
    5. 'def' → logprob: -15.625035285949707
    6. ' (' → logprob: -16.375036239624023
    7. '       ' → logprob: -16.500036239624023
    8. '(
' → logprob: -16.625036239624023
    9. '
' → logprob: -17.875036239624023
    10. 'from' → logprob: -18.000036239624023

Token 1020: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19277729094028473
    2. 'self' → logprob: -2.067777395248413
    3. '(self' → logprob: -3.192777395248413
    4. ' self' → logprob: -5.317777156829834
    5. '       ' → logprob: -6.692777156829834
    6. '   ' → logprob: -6.817777156829834
    7. ',self' → logprob: -8.817777633666992
    8. ')' → logprob: -9.067777633666992
    9. ' ,' → logprob: -9.567777633666992
    10. ' (' → logprob: -9.942777633666992

Token 1021: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.016173018142580986
    2. ' key' → logprob: -4.141172885894775
    3. 'self' → logprob: -9.141173362731934
    4. '   ' → logprob: -10.891173362731934
    5. '       ' → logprob: -12.266173362731934
    6. ' ' → logprob: -13.016173362731934
    7. 'v' → logprob: -13.766173362731934
    8. ' self' → logprob: -14.016173362731934
    9. 'index' → logprob: -14.266173362731934
    10. '	key' → logprob: -14.766173362731934

Token 1022: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0872386172413826
    2. '):
' → logprob: -3.2122385501861572
    3. '       ' → logprob: -3.5872385501861572
    4. '):' → logprob: -4.712238788604736
    5. 'self' → logprob: -5.462238788604736
    6. '   ' → logprob: -6.587238788604736
    7. '(self' → logprob: -7.212238788604736
    8. ' self' → logprob: -8.962238311767578
    9. ',self' → logprob: -9.712238311767578
    10. ',
' → logprob: -11.462238311767578

Token 1023: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017739501781761646
    2. 'v' → logprob: -7.001773834228516
    3. ' if' → logprob: -7.501773834228516
    4. ' v' → logprob: -8.376773834228516
    5. 'if' → logprob: -9.876773834228516
    6. '   ' → logprob: -11.001773834228516
    7. '```' → logprob: -12.001773834228516
    8. '#' → logprob: -13.376773834228516
    9. '	v' → logprob: -14.001773834228516
    10. '	' → logprob: -14.001773834228516

Token 1024: ' v' (ID: 323)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4099601209163666
    2. 'v' (adapté à ' v') → logprob: -1.159960150718689
    3. '       ' → logprob: -3.9099600315093994
    4. 'def' → logprob: -5.9099602699279785
    5. 'rotate' → logprob: -10.78495979309082
    6. ' if' → logprob: -10.90995979309082
    7. '   ' → logprob: -11.03495979309082
    8. '#' → logprob: -11.65995979309082
    9. ' v' → logprob: -12.53495979309082
    10. '```' → logprob: -13.65995979309082

Token 1025: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020555900409817696
    2. '=' → logprob: -3.8955559730529785
    3. ',' → logprob: -11.64555549621582
    4. '=self' → logprob: -13.02055549621582
    5. '   ' → logprob: -13.52055549621582
    6. '       ' → logprob: -14.39555549621582
    7. '=v' → logprob: -14.77055549621582
    8. ' ' → logprob: -14.89555549621582
    9. '	' → logprob: -15.89555549621582
    10. '    ' → logprob: -16.14555549621582

Token 1026: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004885728703811765
    2. ' self' → logprob: -7.625488758087158
    3. '[self' → logprob: -15.12548828125
    4. '(self' → logprob: -16.25048828125
    5. '
' → logprob: -17.37548828125
    6. '	self' → logprob: -17.62548828125
    7. ' ' → logprob: -17.87548828125
    8. '   ' → logprob: -18.12548828125
    9. '[' → logprob: -18.25048828125
    10. 'None' → logprob: -18.50048828125

Token 1027: '.root' (ID: 25375)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0013239304535090923
    2. ' self' → logprob: -7.001323699951172
    3. '       ' → logprob: -8.751323699951172
    4. 'root' → logprob: -8.876323699951172
    5. '=' → logprob: -10.251323699951172
    6. ' =' → logprob: -10.626323699951172
    7. '=self' → logprob: -10.626323699951172
    8. '
' → logprob: -10.876323699951172
    9. '[' → logprob: -12.626323699951172
    10. '[self' → logprob: -12.751323699951172

Token 1028: ';' (ID: 26)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45521169900894165
    2. '       ' → logprob: -1.4552116394042969
    3. ',' → logprob: -2.205211639404297
    4. ';' → logprob: -4.080211639404297
    5. '        
' → logprob: -6.455211639404297
    6. '
' → logprob: -7.080211639404297
    7. '[' → logprob: -7.205211639404297
    8. ' if' → logprob: -8.080211639404297
    9. '        ' → logprob: -8.705211639404297
    10. '   ' → logprob: -8.705211639404297

Token 1029: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.07967398315668106
    2. 'stack' → logprob: -2.704674005508423
    3. '       ' → logprob: -4.829673767089844
    4. 'if' → logprob: -6.579673767089844
    5. 'v' → logprob: -9.204673767089844
    6. 'while' → logprob: -9.454673767089844
    7. 'parent' → logprob: -10.079673767089844
    8. ' p' → logprob: -10.454673767089844
    9. 'path' → logprob: -10.704673767089844
    10. '   ' → logprob: -10.829673767089844

Token 1030: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17552010715007782
    2. ' =' → logprob: -2.175520181655884
    3. ',' → logprob: -3.050520181655884
    4. '=None' → logprob: -9.425519943237305
    5. ',p' → logprob: -11.800519943237305
    6. 'p' → logprob: -13.300519943237305
    7. ' ,' → logprob: -13.425519943237305
    8. '[' → logprob: -13.675519943237305
    9. 'None' → logprob: -14.175519943237305
    10. '   ' → logprob: -14.550519943237305

Token 1031: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -6.988221684878226e-06
    2. ' None' → logprob: -12.250006675720215
    3. '(None' → logprob: -13.125006675720215
    4. '[' → logprob: -17.00000762939453
    5. '   ' → logprob: -17.12500762939453
    6. 'self' → logprob: -17.50000762939453
    7. '[]' → logprob: -18.25000762939453
    8. 'v' → logprob: -18.75000762939453
    9. '_None' → logprob: -18.87500762939453
    10. '=None' → logprob: -18.87500762939453

Token 1032: ';' (ID: 26)
  Prédit: ';'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ';' → logprob: -0.11116231232881546
    2. ',' → logprob: -2.7361624240875244
    3. '       ' → logprob: -3.2361624240875244
    4. '
' → logprob: -8.111162185668945
    5. 'direction' → logprob: -8.861162185668945
    6. '   ' → logprob: -8.986162185668945
    7. '[' → logprob: -9.236162185668945
    8. '	' → logprob: -9.611162185668945
    9. '#' → logprob: -9.736162185668945
    10. ' direction' → logprob: -9.986162185668945

Token 1033: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.0004958406207151711
    2. 'stack' → logprob: -8.500495910644531
    3. 'while' → logprob: -8.500495910644531
    4. '       ' → logprob: -9.750495910644531
    5. ' direction' → logprob: -11.000495910644531
    6. '   ' → logprob: -12.125495910644531
    7. 'parent' → logprob: -13.000495910644531
    8. 'dir' → logprob: -13.250495910644531
    9. 'path' → logprob: -13.875495910644531
    10. 'd' → logprob: -14.125495910644531

Token 1034: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760210156440735
    2. ' =' → logprob: -0.8260210156440735
    3. '=None' → logprob: -9.576021194458008
    4. ',' → logprob: -11.701021194458008
    5. '=
' → logprob: -13.951021194458008
    6. ' ' → logprob: -14.076021194458008
    7. 'None' → logprob: -14.451021194458008
    8. ':' → logprob: -15.201021194458008
    9. '=[]' → logprob: -15.201021194458008
    10. '<|end|>' → logprob: -15.201021194458008

Token 1035: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -2.9040898880339228e-05
    2. ' None' → logprob: -10.625028610229492
    3. '0' → logprob: -12.375028610229492
    4. 'False' → logprob: -14.875028610229492
    5. 'none' → logprob: -17.375028610229492
    6. '(None' → logprob: -17.375028610229492
    7. '   ' → logprob: -17.500028610229492
    8. '_None' → logprob: -17.750028610229492
    9. 'True' → logprob: -18.250028610229492
    10. '=None' → logprob: -18.500028610229492

Token 1036: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11361108720302582
    2. 'while' → logprob: -2.2386109828948975
    3. ' while' → logprob: -7.863611221313477
    4. 'stack' → logprob: -8.238611221313477
    5. '   ' → logprob: -9.863611221313477
    6. '
' → logprob: -10.363611221313477
    7. '```' → logprob: -10.988611221313477
    8. 'if' → logprob: -11.238611221313477
    9. '	while' → logprob: -11.988611221313477
    10. '        
' → logprob: -12.363611221313477

Token 1037: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0072828843258321285
    2. '
' → logprob: -5.507282733917236
    3. 'while' → logprob: -5.882282733917236
    4. ' while' → logprob: -8.382283210754395
    5. '   ' → logprob: -9.757283210754395
    6. '        
' → logprob: -9.882283210754395
    7. '```' → logprob: -10.507283210754395
    8. '	while' → logprob: -11.382283210754395
    9. 'stack' → logprob: -11.507283210754395
    10. 'if' → logprob: -12.632283210754395

Token 1038: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.06219455227255821
    2. 'while' → logprob: -2.812194585800171
    3. '       ' → logprob: -8.43719482421875
    4. 'if' → logprob: -12.06219482421875
    5. 'path' → logprob: -13.31219482421875
    6. '   ' → logprob: -13.81219482421875
    7. ' stack' → logprob: -14.18719482421875
    8. '```' → logprob: -15.06219482421875
    9. '
' → logprob: -15.31219482421875
    10. ' while' → logprob: -15.56219482421875

Token 1039: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3142663836479187
    2. ' =' → logprob: -1.3142664432525635
    3. '=[]' → logprob: -6.939266204833984
    4. ',' → logprob: -11.189266204833984
    5. '[]' → logprob: -11.814266204833984
    6. '=[]
' → logprob: -12.064266204833984
    7. '[:]' → logprob: -12.939266204833984
    8. '.append' → logprob: -13.314266204833984
    9. '   ' → logprob: -13.939266204833984
    10. '[' → logprob: -14.189266204833984

Token 1040: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.38687369227409363
    2. '[]
' → logprob: -1.136873722076416
    3. '[(' → logprob: -13.261873245239258
    4. '[]

' → logprob: -14.886873245239258
    5. '[' → logprob: -15.261873245239258
    6. '[v' → logprob: -15.386873245239258
    7. ' []
' → logprob: -16.636873245239258
    8. ' []' → logprob: -17.136873245239258
    9. '[])' → logprob: -17.261873245239258
    10. '[])
' → logprob: -17.261873245239258

Token 1041: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008712020353414118
    2. 'while' → logprob: -8.125871658325195
    3. ' while' → logprob: -8.250871658325195
    4. '   ' → logprob: -9.625871658325195
    5. '
' → logprob: -9.625871658325195
    6. '        
' → logprob: -9.750871658325195
    7. '<|end|>' → logprob: -10.000871658325195
    8. '```' → logprob: -10.500871658325195
    9. '	while' → logprob: -11.250871658325195
    10. '[' → logprob: -11.375871658325195

Token 1042: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.001853315974585712
    2. '       ' → logprob: -6.5018534660339355
    3. ' while' → logprob: -8.001852989196777
    4. '   ' → logprob: -11.626852989196777
    5. 'While' → logprob: -12.751852989196777
    6. '
' → logprob: -13.126852989196777
    7. '	while' → logprob: -13.501852989196777
    8. '```' → logprob: -14.376852989196777
    9. '        
' → logprob: -15.126852989196777
    10. '``' → logprob: -16.376853942871094

Token 1043: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.004103454295545816
    2. ' v' → logprob: -5.504103660583496
    3. 'True' → logprob: -10.879103660583496
    4. '(v' → logprob: -12.629103660583496
    5. ' True' → logprob: -13.254103660583496
    6. '   ' → logprob: -15.504103660583496
    7. ' ' → logprob: -15.629103660583496
    8. '	v' → logprob: -15.629103660583496
    9. 'key' → logprob: -15.754103660583496
    10. '$v' → logprob: -16.00410270690918

Token 1044: ':
' (ID: 734)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.2520310878753662
    2. ' and' → logprob: -1.5020310878753662
    3. ':
' → logprob: -10.127031326293945
    4. '[' → logprob: -11.002031326293945
    5. ' is' → logprob: -11.002031326293945
    6. 'v' → logprob: -11.377031326293945
    7. 'is' → logprob: -12.002031326293945
    8. ':' → logprob: -12.502031326293945
    9. ' ' → logprob: -13.002031326293945
    10. '   ' → logprob: -13.377031326293945

Token 1045: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011840384686365724
    2. ' and' → logprob: -7.001183986663818
    3. 'and' → logprob: -9.251184463500977
    4. ',' → logprob: -10.251184463500977
    5. '[' → logprob: -10.251184463500977
    6. ':
' → logprob: -10.751184463500977
    7. '```' → logprob: -10.876184463500977
    8. ' if' → logprob: -11.376184463500977
    9. ':' → logprob: -11.376184463500977
    10. '
' → logprob: -12.251184463500977

Token 1046: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5572137236595154
    2. 'k' → logprob: -1.1822137832641602
    3. '           ' → logprob: -3.05721378326416
    4. 'v' → logprob: -3.80721378326416
    5. '(k' → logprob: -4.05721378326416
    6. 'direction' → logprob: -4.55721378326416
    7. 'key' → logprob: -4.80721378326416
    8. '(v' → logprob: -4.93221378326416
    9. '(key' → logprob: -5.55721378326416
    10. '(direction' → logprob: -5.80721378326416

Token 1047: ' key' (ID: 2140)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5238543748855591
    2. 'key' → logprob: -0.8988543748855591
    3. ' key' → logprob: -7.6488542556762695
    4. ' v' → logprob: -9.02385425567627
    5. '(key' → logprob: -9.14885425567627
    6. 'k' → logprob: -11.27385425567627
    7. '(v' → logprob: -12.02385425567627
    8. '(' → logprob: -12.64885425567627
    9. '   ' → logprob: -13.02385425567627
    10. '	key' → logprob: -13.89885425567627

Token 1048: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.22600866854190826
    2. '==' → logprob: -1.601008653640747
    3. '[' → logprob: -7.476008892059326
    4. '=' → logprob: -11.976008415222168
    5. ']==' → logprob: -12.226008415222168
    6. ' !=' → logprob: -12.351008415222168
    7. '           ' → logprob: -12.976008415222168
    8. ')==' → logprob: -13.351008415222168
    9. '==
' → logprob: -13.851008415222168
    10. ' <' → logprob: -13.976008415222168

Token 1049: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.130576806142926e-05
    2. ' v' → logprob: -10.375031471252441
    3. '
' → logprob: -17.375030517578125
    4. '	v' → logprob: -17.875030517578125
    5. '   ' → logprob: -19.375030517578125
    6. '[' → logprob: -19.750030517578125
    7. ')v' → logprob: -20.750030517578125
    8. '=' → logprob: -20.875030517578125
    9. '<|end|>' → logprob: -20.875030517578125
    10. ' ' → logprob: -21.000030517578125

Token 1050: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.7432603272027336e-06
    2. '   ' → logprob: -13.625001907348633
    3. '       ' → logprob: -15.500001907348633
    4. '           ' → logprob: -16.875001907348633
    5. '[
' → logprob: -17.125001907348633
    6. '
' → logprob: -17.500001907348633
    7. '#' → logprob: -17.500001907348633
    8. ' [' → logprob: -17.875001907348633
    9. '```' → logprob: -18.000001907348633
    10. '    ' → logprob: -18.125001907348633

Token 1051: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -13.250004768371582
    3. '   ' → logprob: -13.250004768371582
    4. '[' → logprob: -14.125004768371582
    5. '
' → logprob: -15.625004768371582
    6. '       ' → logprob: -16.6250057220459
    7. '  ' → logprob: -16.8750057220459
    8. '    ' → logprob: -16.8750057220459
    9. '      ' → logprob: -17.2500057220459
    10. '```' → logprob: -17.2500057220459

Token 1052: ']:' (ID: 12433)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009475805796682835
    2. ':
' → logprob: -4.8844757080078125
    3. '):' → logprob: -7.3844757080078125
    4. '           ' → logprob: -7.7594757080078125
    5. ':return' → logprob: -7.8844757080078125
    6. ' and' → logprob: -8.884475708007812
    7. '):
' → logprob: -9.509475708007812
    8. ' :' → logprob: -9.509475708007812
    9. ',' → logprob: -10.259475708007812
    10. ')' → logprob: -10.384475708007812

Token 1053: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12494248151779175
    2. '               ' → logprob: -2.3749425411224365
    3. ' break' → logprob: -3.7499425411224365
    4. 'break' → logprob: -7.999942302703857
    5. '            ' → logprob: -8.374942779541016
    6. ' v' → logprob: -8.624942779541016
    7. '            
' → logprob: -10.499942779541016
    8. '       ' → logprob: -10.874942779541016
    9. '```' → logprob: -10.874942779541016
    10. ' if' → logprob: -11.124942779541016

Token 1054: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08406962454319
    2. 'v' → logprob: -2.7090697288513184
    3. '       ' → logprob: -4.709069728851318
    4. '<|end|>' → logprob: -6.584069728851318
    5. ' v' → logprob: -7.084069728851318
    6. '
' → logprob: -7.334069728851318
    7. '        
' → logprob: -8.08406925201416
    8. '            
' → logprob: -8.20906925201416
    9. 'else' → logprob: -8.33406925201416
    10. ',' → logprob: -8.70906925201416

Token 1055: ' vertex' (ID: 25363)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10959871113300323
    2. 'direction' → logprob: -3.2345986366271973
    3. '       ' → logprob: -3.7345986366271973
    4. 'v' → logprob: -3.7345986366271973
    5. 'if' → logprob: -4.609598636627197
    6. 'stack' → logprob: -5.234598636627197
    7. ' direction' → logprob: -7.734598636627197
    8. '   ' → logprob: -7.984598636627197
    9. 'else' → logprob: -8.484599113464355
    10. ' if' → logprob: -8.609599113464355

Token 1056: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1057: ' be' (ID: 413)
  Prédit: 'delete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delete' → logprob: -0.0691717118024826
    2. 'remove' → logprob: -2.819171667098999
    3. 'v' → logprob: -5.319171905517578
    4. 'be' → logprob: -6.444171905517578
    5. ' delete' → logprob: -8.194171905517578
    6. 'replace' → logprob: -9.319171905517578
    7. ' be' → logprob: -9.444171905517578
    8. '_delete' → logprob: -10.319171905517578
    9. ' remove' → logprob: -10.569171905517578
    10. 'del' → logprob: -10.569171905517578

Token 1058: ' deleted' (ID: 20428)
  Prédit: 'deleted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deleted' → logprob: -0.01173234824091196
    2. ' deleted' → logprob: -5.011732578277588
    3. 'removed' → logprob: -5.386732578277588
    4. 'delete' → logprob: -8.13673210144043
    5. ' removed' → logprob: -10.13673210144043
    6. '_deleted' → logprob: -10.38673210144043
    7. 'del' → logprob: -11.13673210144043
    8. 'Deleted' → logprob: -11.38673210144043
    9. 'found' → logprob: -11.63673210144043
    10. '   ' → logprob: -11.63673210144043

Token 1059: ' has' (ID: 853)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2894216477870941
    2. 'v' → logprob: -2.039421558380127
    3. '       ' → logprob: -2.789421558380127
    4. '        
' → logprob: -4.164421558380127
    5. '            
' → logprob: -4.539421558380127
    6. '<|end|>' → logprob: -4.789421558380127
    7. '
' → logprob: -4.914421558380127
    8. ' v' → logprob: -5.164421558380127
    9. '  
' → logprob: -6.289421558380127
    10. '    
' → logprob: -6.414421558380127

Token 1060: ' been' (ID: 1339)
  Prédit: 'been'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'been' → logprob: -0.10118376463651657
    2. 'v' → logprob: -3.3511836528778076
    3. ' been' → logprob: -3.3511836528778076
    4. 'found' → logprob: -4.101183891296387
    5. 'children' → logprob: -5.976183891296387
    6. 'no' → logprob: -6.476183891296387
    7. 'stack' → logprob: -6.476183891296387
    8. '[' → logprob: -7.476183891296387
    9. 'not' → logprob: -7.601183891296387
    10. 'be' → logprob: -7.601183891296387

Token 1061: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.014353657141327858
    2. ' found' → logprob: -4.2643537521362305
    3. 'v' → logprob: -8.76435375213623
    4. 'located' → logprob: -11.76435375213623
    5. '```' → logprob: -11.76435375213623
    6. '_found' → logprob: -12.38935375213623
    7. '
' → logprob: -12.51435375213623
    8. 'visited' → logprob: -13.26435375213623
    9. '	found' → logprob: -13.63935375213623
    10. ' v' → logprob: -13.76435375213623

Token 1062: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.044804252684116364
    2. 'v' → logprob: -3.544804334640503
    3. '       ' → logprob: -5.294804096221924
    4. '
' → logprob: -5.294804096221924
    5. '        
' → logprob: -7.044804096221924
    6. '            
' → logprob: -7.294804096221924
    7. '  
' → logprob: -7.419804096221924
    8. ' v' → logprob: -7.544804096221924
    9. '<|end|>' → logprob: -7.669804096221924
    10. '   ' → logprob: -8.169804573059082

Token 1063: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.573556661605835
    2. '       ' → logprob: -0.948556661605835
    3. 'v' → logprob: -3.448556661605835
    4. '<|end|>' → logprob: -5.448556900024414
    5. ' v' → logprob: -5.948556900024414
    6. '        
' → logprob: -6.073556900024414
    7. '   ' → logprob: -6.198556900024414
    8. '```' → logprob: -6.698556900024414
    9. ' ' → logprob: -7.573556900024414
    10. ' if' → logprob: -7.573556900024414

Token 1064: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' (adapté à ' direction') → logprob: -0.13560958206653595
    2. '           ' → logprob: -2.1356096267700195
    3. 'stack' → logprob: -5.5106096267700195
    4. ' direction' → logprob: -6.2606096267700195
    5. '       ' → logprob: -6.5106096267700195
    6. '   ' → logprob: -7.2606096267700195
    7. 'v' → logprob: -8.13560962677002
    8. 'key' → logprob: -9.63560962677002
    9. 'd' → logprob: -10.13560962677002
    10. 'else' → logprob: -10.63560962677002

Token 1065: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193890929222107
    2. '=' → logprob: -1.5019389390945435
    3. '=(' → logprob: -12.626938819885254
    4. '=
' → logprob: -12.751938819885254
    5. ' =
' → logprob: -13.876938819885254
    6. ' =(' → logprob: -14.126938819885254
    7. '       ' → logprob: -15.126938819885254
    8. ' ' → logprob: -15.376938819885254
    9. '           ' → logprob: -15.376938819885254
    10. '   ' → logprob: -15.376938819885254

Token 1066: ' (' (ID: 350)
  Prédit: '(key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.10805235058069229
    2. ' (' → logprob: -2.6080522537231445
    3. ' key' → logprob: -3.7330522537231445
    4. 'key' → logprob: -5.3580522537231445
    5. 'int' → logprob: -10.108052253723145
    6. '(int' → logprob: -10.983052253723145
    7. '(' → logprob: -10.983052253723145
    8. '1' → logprob: -11.608052253723145
    9. ' int' → logprob: -11.608052253723145
    10. '0' → logprob: -12.358052253723145

Token 1067: 'key' (ID: 1898)
  Prédit: 'key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.02030816674232483
    2. '(key' → logprob: -4.020308017730713
    3. ' key' → logprob: -6.145308017730713
    4. ' (' → logprob: -11.770308494567871
    5. '$key' → logprob: -14.145308494567871
    6. '[key' → logprob: -14.270308494567871
    7. 'not' → logprob: -14.270308494567871
    8. '_key' → logprob: -14.895308494567871
    9. ' ' → logprob: -15.020308494567871
    10. '(' → logprob: -15.020308494567871

Token 1068: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3351823091506958
    2. ' >' → logprob: -1.4601823091506958
    3. '>=' → logprob: -3.3351821899414062
    4. ' >=' → logprob: -4.085182189941406
    5. '!=' → logprob: -9.585182189941406
    6. ' !=' → logprob: -10.085182189941406
    7. ' ' → logprob: -11.210182189941406
    8. '>
' → logprob: -11.335182189941406
    9. '[' → logprob: -11.460182189941406
    10. ' >
' → logprob: -11.710182189941406

Token 1069: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.02325642853975296
    2. ' v' → logprob: -3.773256540298462
    3. ')v' → logprob: -11.773256301879883
    4. '	v' → logprob: -13.023256301879883
    5. '
' → logprob: -15.023256301879883
    6. '[v' → logprob: -15.648256301879883
    7. ')' → logprob: -15.898256301879883
    8. '(v' → logprob: -16.398256301879883
    9. '=v' → logprob: -16.648256301879883
    10. '$v' → logprob: -17.273256301879883

Token 1070: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004232020117342472
    2. '2' → logprob: -5.504231929779053
    3. 'v' → logprob: -9.254232406616211
    4. '   ' → logprob: -10.254232406616211
    5. ' ' → logprob: -11.504232406616211
    6. '
' → logprob: -12.504232406616211
    7. ' v' → logprob: -13.254232406616211
    8. ' [' → logprob: -13.254232406616211
    9. ')' → logprob: -13.504232406616211
    10. '  ' → logprob: -13.629232406616211

Token 1071: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0014202340971678495
    2. '[' → logprob: -7.126420021057129
    3. ' ' → logprob: -7.501420021057129
    4. 'v' → logprob: -10.126420021057129
    5. '   ' → logprob: -11.626420021057129
    6. '  ' → logprob: -12.251420021057129
    7. '
' → logprob: -12.876420021057129
    8. '(' → logprob: -13.501420021057129
    9. ')' → logprob: -13.876420021057129
    10. 'k' → logprob: -14.501420021057129

Token 1072: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5233394503593445
    2. ')
' → logprob: -0.8983394503593445
    3. ')
' → logprob: -9.02333927154541
    4. '           ' → logprob: -10.02333927154541
    5. ' )
' → logprob: -10.89833927154541
    6. ' )' → logprob: -11.89833927154541
    7. ')

' → logprob: -12.14833927154541
    8. '       ' → logprob: -12.14833927154541
    9. ');' → logprob: -12.52333927154541
    10. ')v' → logprob: -13.02333927154541

Token 1073: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009827931644394994
    2. 'stack' → logprob: -7.625982761383057
    3. '       ' → logprob: -7.750982761383057
    4. '   ' → logprob: -10.625983238220215
    5. 'v' → logprob: -11.250983238220215
    6. '```' → logprob: -11.625983238220215
    7. '
' → logprob: -12.375983238220215
    8. ' stack' → logprob: -12.750983238220215
    9. '<|end|>' → logprob: -13.375983238220215
    10. '[' → logprob: -13.625983238220215

Token 1074: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.0005657802103087306
    2. '           ' → logprob: -7.500566005706787
    3. ' stack' → logprob: -12.125565528869629
    4. '       ' → logprob: -12.375565528869629
    5. 'v' → logprob: -12.750565528869629
    6. '	stack' → logprob: -16.000566482543945
    7. '```' → logprob: -17.000566482543945
    8. '   ' → logprob: -17.125566482543945
    9. '(stack' → logprob: -17.750566482543945
    10. '_stack' → logprob: -17.875566482543945

Token 1075: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.0325924449716695e-05
    2. '.' → logprob: -11.62501049041748
    3. 'append' → logprob: -14.12501049041748
    4. ' .' → logprob: -15.12501049041748
    5. '.app' → logprob: -15.62501049041748
    6. '           ' → logprob: -17.500009536743164
    7. 'Append' → logprob: -18.125009536743164
    8. '.ap' → logprob: -18.250009536743164
    9. '.Append' → logprob: -18.375009536743164
    10. ',' → logprob: -18.625009536743164

Token 1076: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0001239196863025427
    2. '(v' → logprob: -9.000123977661133
    3. '(
' → logprob: -15.125123977661133
    4. '(' → logprob: -15.750123977661133
    5. '[(' → logprob: -16.000123977661133
    6. '```' → logprob: -19.125123977661133
    7. ' (' → logprob: -20.000123977661133
    8. '   ' → logprob: -20.000123977661133
    9. '([' → logprob: -20.625123977661133
    10. ' ((' → logprob: -20.750123977661133

Token 1077: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0001246348983841017
    2. '(v' → logprob: -9.00012493133545
    3. ' v' → logprob: -13.87512493133545
    4. '[v' → logprob: -16.000123977661133
    5. '	v' → logprob: -16.625123977661133
    6. ')v' → logprob: -17.125123977661133
    7. ',v' → logprob: -19.000123977661133
    8. '<v' → logprob: -19.125123977661133
    9. '?v' → logprob: -19.250123977661133
    10. '```' → logprob: -20.000123977661133

Token 1078: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.8087270038668066e-05
    2. ',d' → logprob: -11.250027656555176
    3. '[' → logprob: -11.750027656555176
    4. ' ,' → logprob: -12.125027656555176
    5. ',
' → logprob: -13.500027656555176
    6. ',[' → logprob: -16.625028610229492
    7. '[],' → logprob: -16.750028610229492
    8. '
' → logprob: -16.875028610229492
    9. 'direction' → logprob: -17.250028610229492
    10. ',v' → logprob: -17.375028610229492

Token 1079: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.1002139002084732
    2. ' direction' → logprob: -2.3502140045166016
    3. '(direction' → logprob: -11.850214004516602
    4. '方向' → logprob: -16.9752140045166
    5. 'dire' → logprob: -17.7252140045166
    6. ')' → logprob: -18.2252140045166
    7. '   ' → logprob: -18.2252140045166
    8. '_direction' → logprob: -18.3502140045166
    9. ' ' → logprob: -18.3502140045166
    10. '.direction' → logprob: -18.6002140045166

Token 1080: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10039709508419037
    2. ')
' → logprob: -2.3503971099853516
    3. '           ' → logprob: -9.100397109985352
    4. '))
' → logprob: -10.350397109985352
    5. '))' → logprob: -10.350397109985352
    6. ')v' → logprob: -12.225397109985352
    7. ')`
' → logprob: -12.725397109985352
    8. '       ' → logprob: -12.850397109985352
    9. ')
' → logprob: -13.475397109985352
    10. ');' → logprob: -13.850397109985352

Token 1081: '           ' (ID: 352)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5764532089233398
    2. '           ' → logprob: -0.8264532089233398
    3. ' v' → logprob: -8.32645320892334
    4. '
' → logprob: -8.70145320892334
    5. '```' → logprob: -9.95145320892334
    6. '   ' → logprob: -10.57645320892334
    7. '       ' → logprob: -10.82645320892334
    8. '            
' → logprob: -12.45145320892334
    9. '	v' → logprob: -13.45145320892334
    10. '``' → logprob: -13.70145320892334

Token 1082: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -4.5014188799541444e-05
    2. '           ' → logprob: -10.375044822692871
    3. ' v' → logprob: -11.250044822692871
    4. '       ' → logprob: -15.125044822692871
    5. '
' → logprob: -15.750044822692871
    6. '   ' → logprob: -16.000045776367188
    7. '	v' → logprob: -16.125045776367188
    8. '```' → logprob: -17.000045776367188
    9. '            
' → logprob: -17.750045776367188
    10. '``' → logprob: -18.375045776367188

Token 1083: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.145284965634346
    2. ' =' → logprob: -2.02028489112854
    3. ',' → logprob: -6.270285129547119
    4. '=v' → logprob: -7.645285129547119
    5. ',v' → logprob: -8.645284652709961
    6. '[' → logprob: -10.520284652709961
    7. 'v' → logprob: -10.770284652709961
    8. '[v' → logprob: -12.020284652709961
    9. '=
' → logprob: -12.520284652709961
    10. ' v' → logprob: -14.270284652709961

Token 1084: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5774009823799133
    2. 'v' → logprob: -0.8274009823799133
    3. ' p' → logprob: -7.077401161193848
    4. ' v' → logprob: -7.577401161193848
    5. '(v' → logprob: -10.577401161193848
    6. '(' → logprob: -10.702401161193848
    7. '(p' → logprob: -11.452401161193848
    8. '	v' → logprob: -11.952401161193848
    9. '   ' → logprob: -12.077401161193848
    10. 'direction' → logprob: -12.202401161193848

Token 1085: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.024008197709918022
    2. ' =' → logprob: -3.774008274078369
    3. '=v' → logprob: -7.399008274078369
    4. 'v' → logprob: -9.149007797241211
    5. ' v' → logprob: -10.649007797241211
    6. ',v' → logprob: -11.524007797241211
    7. ',' → logprob: -12.524007797241211
    8. '[v' → logprob: -12.774007797241211
    9. '=
' → logprob: -13.649007797241211
    10. '[' → logprob: -14.399007797241211

Token 1086: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.01612551510334015
    2. ' v' → logprob: -4.141125679016113
    3. '(v' → logprob: -9.391125679016113
    4. '(' → logprob: -12.641125679016113
    5. ' (' → logprob: -13.141125679016113
    6. '	v' → logprob: -13.891125679016113
    7. '   ' → logprob: -14.391125679016113
    8. '[v' → logprob: -14.641125679016113
    9. 'p' → logprob: -16.016124725341797
    10. ' ' → logprob: -16.516124725341797

Token 1087: '[' (ID: 58)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.003597456030547619
    2. ' v' → logprob: -5.878597259521484
    3. '(v' → logprob: -7.878597259521484
    4. '   ' → logprob: -8.253597259521484
    5. '(' → logprob: -9.628597259521484
    6. '[v' → logprob: -10.378597259521484
    7. '[' → logprob: -11.003597259521484
    8. ' (' → logprob: -11.003597259521484
    9. '	v' → logprob: -11.753597259521484
    10. '  ' → logprob: -12.128597259521484

Token 1088: 'direction' (ID: 43278)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.20270799100399017
    2. 'direction' → logprob: -1.8277080059051514
    3. '(direction' → logprob: -4.452707767486572
    4. ' direction' → logprob: -5.327707767486572
    5. '(' → logprob: -5.702707767486572
    6. '[' → logprob: -6.452707767486572
    7. '(v' → logprob: -7.827707767486572
    8. ' v' → logprob: -8.57770824432373
    9. 'p' → logprob: -8.57770824432373
    10. '_direction' → logprob: -9.70270824432373

Token 1089: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0401153564453125
    2. '],' → logprob: -3.2901153564453125
    3. ']' → logprob: -6.4151153564453125
    4. ' ,' → logprob: -7.9151153564453125
    5. ',
' → logprob: -11.290115356445312
    6. ' ],' → logprob: -11.415115356445312
    7. '           ' → logprob: -11.665115356445312
    8. ',None' → logprob: -11.790115356445312
    9. '       ' → logprob: -11.915115356445312
    10. '<|end|>' → logprob: -12.040115356445312

Token 1090: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.5597102396423e-05
    2. ' v' → logprob: -10.250035285949707
    3. '	v' → logprob: -16.375036239624023
    4. 'p' → logprob: -16.875036239624023
    5. '   ' → logprob: -16.875036239624023
    6. '[v' → logprob: -18.500036239624023
    7. '       ' → logprob: -19.000036239624023
    8. 'None' → logprob: -19.750036239624023
    9. ')v' → logprob: -19.750036239624023
    10. '    ' → logprob: -20.000036239624023

Token 1091: '
' (ID: 198)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7451943755149841
    2. 'p' → logprob: -0.9951943755149841
    3. '
' → logprob: -2.620194435119629
    4. 'None' → logprob: -3.495194435119629
    5. '[' → logprob: -3.745194435119629
    6. ' p' → logprob: -3.995194435119629
    7. ' v' → logprob: -5.870194435119629
    8. 'key' → logprob: -6.370194435119629
    9. ' None' → logprob: -6.370194435119629
    10. '<|end|>' → logprob: -6.745194435119629

Token 1092: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01954064518213272
    2. '<|end|>' → logprob: -4.269540786743164
    3. 'if' → logprob: -6.269540786743164
    4. 'If' → logprob: -6.519540786743164
    5. ' if' → logprob: -7.019540786743164
    6. 'v' → logprob: -8.519540786743164
    7. '```' → logprob: -8.894540786743164
    8. 'None' → logprob: -9.019540786743164
    9. '[' → logprob: -9.269540786743164
    10. '[]' → logprob: -9.394540786743164

Token 1093: ' else' (ID: 1203)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10855384171009064
    2. 'if' → logprob: -2.358553886413574
    3. '       ' → logprob: -5.108553886413574
    4. ' else' → logprob: -6.983553886413574
    5. 'else' (adapté à ' else') → logprob: -7.733553886413574
    6. '```' → logprob: -7.733553886413574
    7. 'v' → logprob: -8.233553886413574
    8. '   ' → logprob: -9.858553886413574
    9. ' v' → logprob: -9.983553886413574
    10. '        
' → logprob: -10.358553886413574

Token 1094: ':' (ID: 25)
  Prédit: ':return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':return' → logprob: -0.3976079821586609
    2. ' return' → logprob: -2.1476080417633057
    3. '       ' → logprob: -2.3976080417633057
    4. 'return' → logprob: -3.1476080417633057
    5. '   ' → logprob: -3.5226080417633057
    6. '{return' → logprob: -3.6476080417633057
    7. '           ' → logprob: -4.772607803344727
    8. ':' → logprob: -4.897607803344727
    9. '	return' → logprob: -5.397607803344727
    10. ':
' → logprob: -7.397607803344727

Token 1095: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03852405399084091
    2. ' return' → logprob: -3.2885241508483887
    3. '           ' → logprob: -7.663524150848389
    4. '       ' → logprob: -12.16352367401123
    5. '   ' → logprob: -12.53852367401123
    6. '	return' → logprob: -13.53852367401123
    7. '{return' → logprob: -13.53852367401123
    8. '```' → logprob: -14.41352367401123
    9. ':return' → logprob: -15.03852367401123
    10. 'self' → logprob: -15.66352367401123

Token 1096: ' self' (ID: 1051)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.1607980728149414
    2. 'None' → logprob: -1.9107980728149414
    3. '
' → logprob: -8.035798072814941
    4. ' False' → logprob: -8.910798072814941
    5. 'self' → logprob: -10.035798072814941
    6. ' None' → logprob: -10.160798072814941
    7. '        
' → logprob: -10.910798072814941
    8. '0' → logprob: -12.535798072814941
    9. 'True' → logprob: -12.785798072814941
    10. 'false' → logprob: -13.535798072814941

Token 1097: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.008811923675239086
    2. 'root' → logprob: -4.758811950683594
    3. 'None' → logprob: -9.633811950683594
    4. '[root' → logprob: -10.133811950683594
    5. '
' → logprob: -10.383811950683594
    6. 'def' → logprob: -11.383811950683594
    7. '[' → logprob: -12.008811950683594
    8. '_root' → logprob: -12.008811950683594
    9. '.null' → logprob: -12.008811950683594
    10. '.' → logprob: -12.383811950683594

Token 1098: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39443856477737427
    2. 'if' → logprob: -1.1444385051727295
    3. 'v' → logprob: -5.394438743591309
    4. '   ' → logprob: -7.269438743591309
    5. ' if' → logprob: -7.269438743591309
    6. 'direction' → logprob: -7.519438743591309
    7. '#' → logprob: -7.769438743591309
    8. '
' → logprob: -8.144438743591309
    9. '        
' → logprob: -8.519438743591309
    10. '```' → logprob: -10.019438743591309

Token 1099: ' the' (ID: 290)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.28123223781585693
    2. 'v' → logprob: -1.781232237815857
    3. '#' → logprob: -3.2812323570251465
    4. 'None' → logprob: -3.9062323570251465
    5. 'return' → logprob: -4.2812323570251465
    6. '       ' → logprob: -5.6562323570251465
    7. 'p' → logprob: -7.5312323570251465
    8. '
' → logprob: -7.9062323570251465
    9. ' if' → logprob: -8.906231880187988
    10. 'self' → logprob: -9.156231880187988

Token 1100: ' given' (ID: 4335)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.02421743981540203
    2. 'v' → logprob: -5.02421760559082
    3. 'def' → logprob: -5.27421760559082
    4. '#' → logprob: -5.64921760559082
    5. 'None' → logprob: -5.64921760559082
    6. ' root' → logprob: -6.52421760559082
    7. 'key' → logprob: -6.77421760559082
    8. '
' → logprob: -6.89921760559082
    9. '.root' → logprob: -7.64921760559082
    10. 'return' → logprob: -8.52421760559082

Token 1101: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.007666721474379301
    2. ' key' → logprob: -4.88266658782959
    3. '
' → logprob: -10.13266658782959
    4. '_key' → logprob: -12.00766658782959
    5. 'value' → logprob: -13.13266658782959
    6. 'v' → logprob: -13.13266658782959
    7. 'token' → logprob: -13.25766658782959
    8. '#' → logprob: -13.50766658782959
    9. 'element' → logprob: -13.63266658782959
    10. 'code' → logprob: -13.63266658782959

Token 1102: ' is' (ID: 382)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.49812865257263184
    2. ' not' → logprob: -1.7481286525726318
    3. 'is' → logprob: -1.9981286525726318
    4. ' is' → logprob: -2.498128652572632
    5. 'does' → logprob: -8.498128890991211
    6. 'None' → logprob: -9.248128890991211
    7. ' None' → logprob: -10.498128890991211
    8. '	not' → logprob: -10.623128890991211
    9. ' does' → logprob: -11.248128890991211
    10. 'was' → logprob: -11.498128890991211

Token 1103: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.16195908188819885
    2. 'None' → logprob: -1.9119590520858765
    3. ' not' → logprob: -6.536959171295166
    4. ' None' → logprob: -9.161958694458008
    5. 'Not' → logprob: -9.536958694458008
    6. 'none' → logprob: -9.786958694458008
    7. 'v' → logprob: -10.911958694458008
    8. '_not' → logprob: -12.286958694458008
    9. '
' → logprob: -12.411958694458008
    10. '#' → logprob: -12.411958694458008

Token 1104: ' in' (ID: 306)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.09815393388271332
    2. 'in' → logprob: -2.598153829574585
    3. ' found' → logprob: -4.598154067993164
    4. 'None' → logprob: -4.973154067993164
    5. 'present' → logprob: -7.223154067993164
    6. ' None' → logprob: -7.723154067993164
    7. 'v' → logprob: -7.848154067993164
    8. ' in' → logprob: -8.098154067993164
    9. '
' → logprob: -9.598154067993164
    10. '	found' → logprob: -10.098154067993164

Token 1105: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014203350991010666
    2. 'v' → logprob: -4.5142035484313965
    3. 'the' → logprob: -6.0142035484313965
    4. ' self' → logprob: -8.014203071594238
    5. 'None' → logprob: -8.514203071594238
    6. ' the' → logprob: -9.264203071594238
    7. 'stack' → logprob: -10.139203071594238
    8. ' v' → logprob: -11.014203071594238
    9. '
' → logprob: -11.264203071594238
    10. ' None' → logprob: -12.514203071594238

Token 1106: ' tre' (ID: 4360)
  Prédit: 'tre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tre' → logprob: -0.009899521246552467
    2. 'self' → logprob: -5.634899616241455
    3. 'tree' → logprob: -5.759899616241455
    4. 'Tre' → logprob: -6.259899616241455
    5. 'root' → logprob: -6.884899616241455
    6. '
' → logprob: -9.009899139404297
    7. 'v' → logprob: -10.884899139404297
    8. 'None' → logprob: -11.009899139404297
    9. 't' → logprob: -11.509899139404297
    10. '```' → logprob: -12.009899139404297

Token 1107: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.007418509107083082
    2. 'e' → logprob: -5.007418632507324
    3. 'ep' → logprob: -7.382418632507324
    4. 'es' → logprob: -10.007418632507324
    5. '```' → logprob: -12.132418632507324
    6. '   ' → logprob: -12.257418632507324
    7. 'ef' → logprob: -12.507418632507324
    8. 'et' → logprob: -12.632418632507324
    9. 'ап' → logprob: -12.757418632507324
    10. 'er' → logprob: -12.757418632507324

Token 1108: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.37959277629852295
    2. 'direction' → logprob: -2.0045928955078125
    3. '       ' → logprob: -2.1295928955078125
    4. 'v' → logprob: -3.1295928955078125
    5. 'while' → logprob: -4.6295928955078125
    6. '#' → logprob: -5.7545928955078125
    7. '   ' → logprob: -6.1295928955078125
    8. '```' → logprob: -7.0045928955078125
    9. '``' → logprob: -7.2545928955078125
    10. 'p' → logprob: -7.5045928955078125

Token 1109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.679084300994873
    2. 'if' → logprob: -1.179084300994873
    3. 'v' → logprob: -2.554084300994873
    4. '```' → logprob: -3.054084300994873
    5. 'direction' → logprob: -3.054084300994873
    6. 'while' → logprob: -5.429084300994873
    7. '``' → logprob: -5.554084300994873
    8. '   ' → logprob: -5.929084300994873
    9. '#' → logprob: -7.554084300994873
    10. '[' → logprob: -7.804084300994873

Token 1110: ' rotate' (ID: 31987)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.05801788717508316
    2. 'if' → logprob: -3.3080179691314697
    3. '       ' → logprob: -4.183017730712891
    4. 'v' → logprob: -6.558017730712891
    5. 'direction' → logprob: -6.558017730712891
    6. 'def' → logprob: -6.808017730712891
    7. '```' → logprob: -8.43301773071289
    8. '#' → logprob: -8.80801773071289
    9. 'for' → logprob: -10.18301773071289
    10. '   ' → logprob: -10.18301773071289

Token 1111: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005945982877165079
    2. '=' → logprob: -5.130946159362793
    3. '   ' → logprob: -11.755946159362793
    4. '       ' → logprob: -12.755946159362793
    5. ',' → logprob: -13.005946159362793
    6. ' ' → logprob: -14.255946159362793
    7. '=self' → logprob: -14.505946159362793
    8. 's' → logprob: -14.630946159362793
    9. '=v' → logprob: -14.630946159362793
    10. '        ' → logprob: -14.880946159362793

Token 1112: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.676292231422849e-05
    2. ' self' → logprob: -11.000017166137695
    3. 'lambda' → logprob: -17.375017166137695
    4. '
' → logprob: -18.250017166137695
    5. '	self' → logprob: -18.250017166137695
    6. '(self' → logprob: -18.750017166137695
    7. '=self' → logprob: -20.250017166137695
    8. '       ' → logprob: -20.500017166137695
    9. '_self' → logprob: -20.625017166137695
    10. '[self' → logprob: -21.250017166137695

Token 1113: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0005906827282160521
    2. '_rotate' → logprob: -7.500590801239014
    3. '_root' → logprob: -11.250590324401855
    4. '.rotate' → logprob: -11.500590324401855
    5. '_insert' → logprob: -12.250590324401855
    6. '   ' → logprob: -12.500590324401855
    7. '_rot' → logprob: -13.250590324401855
    8. '_delete' → logprob: -13.250590324401855
    9. ' _' → logprob: -15.125590324401855
    10. '
' → logprob: -15.125590324401855

Token 1114: 'rotate' (ID: 31296)
  Prédit: 'rotate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -4.320199877838604e-07
    2. '_rotate' → logprob: -15.125
    3. '.rotate' → logprob: -17.375
    4. 'rot' → logprob: -17.375
    5. ' rotate' → logprob: -18.5
    6. 'move' → logprob: -18.625
    7. '```' → logprob: -19.625
    8. '   ' → logprob: -19.75
    9. 'def' → logprob: -19.75
    10. '
' → logprob: -19.875

Token 1115: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32128170132637024
    2. ' while' → logprob: -1.5712816715240479
    3. 'while' → logprob: -2.821281671524048
    4. 'v' → logprob: -6.446281909942627
    5. ' v' → logprob: -6.571281909942627
    6. ' if' → logprob: -6.946281909942627
    7. ' direction' → logprob: -7.071281909942627
    8. '   ' → logprob: -7.571281909942627
    9. '#' → logprob: -7.696281909942627
    10. '
' → logprob: -7.821281909942627

Token 1116: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7786324620246887
    2. '       ' → logprob: -0.9036324620246887
    3. 'while' → logprob: -2.028632402420044
    4. ' while' → logprob: -6.028632640838623
    5. '``' → logprob: -6.903632640838623
    6. 'v' → logprob: -7.903632640838623
    7. '   ' → logprob: -8.028632164001465
    8. '	while' → logprob: -9.528632164001465
    9. 'if' → logprob: -9.903632164001465
    10. 'direction' → logprob: -9.903632164001465

Token 1117: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.006771022453904152
    2. '       ' → logprob: -5.256771087646484
    3. ' while' → logprob: -6.756771087646484
    4. 'if' → logprob: -8.131771087646484
    5. '```' → logprob: -10.381771087646484
    6. 'v' → logprob: -10.631771087646484
    7. '	while' → logprob: -11.381771087646484
    8. 'direction' → logprob: -11.631771087646484
    9. '   ' → logprob: -13.631771087646484
    10. 'While' → logprob: -14.256771087646484

Token 1118: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0020983952563256025
    2. 'True' → logprob: -7.377098560333252
    3. 'len' → logprob: -7.752098560333252
    4. '(v' → logprob: -7.877098560333252
    5. 'not' → logprob: -8.252098083496094
    6. '(' → logprob: -9.002098083496094
    7. ' v' → logprob: -9.002098083496094
    8. 'any' → logprob: -9.627098083496094
    9. 'self' → logprob: -10.377098083496094
    10. 'None' → logprob: -11.252098083496094

Token 1119: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002382664941251278
    2. ' and' → logprob: -6.127382755279541
    3. 'and' → logprob: -8.627382278442383
    4. '   ' → logprob: -12.252382278442383
    5. ':' → logprob: -12.377382278442383
    6. '!=' → logprob: -12.877382278442383
    7. ' is' → logprob: -13.252382278442383
    8. ':
' → logprob: -14.002382278442383
    9. 'v' → logprob: -14.002382278442383
    10. '=' → logprob: -14.252382278442383

Token 1120: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.019606688991189003
    2. '1' → logprob: -4.394606590270996
    3. '[' → logprob: -5.144606590270996
    4. '4' → logprob: -7.644606590270996
    5. '   ' → logprob: -8.394606590270996
    6. '2' → logprob: -8.769606590270996
    7. '5' → logprob: -9.019606590270996
    8. ' ' → logprob: -9.394606590270996
    9. '3' → logprob: -9.769606590270996
    10. 'v' → logprob: -10.519606590270996

Token 1121: ']' (ID: 60)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.251858115196228
    2. ' and' → logprob: -1.751858115196228
    3. 'and' → logprob: -3.6268582344055176
    4. ' or' → logprob: -4.376858234405518
    5. 'is' → logprob: -4.751858234405518
    6. '[' → logprob: -7.251858234405518
    7. 'or' → logprob: -7.876858234405518
    8. ')' → logprob: -8.50185775756836
    9. '        ' → logprob: -10.87685775756836
    10. '       ' → logprob: -11.25185775756836

Token 1122: ' or' (ID: 503)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.5149368047714233
    2. 'is' → logprob: -1.3899368047714233
    3. ' is' → logprob: -2.389936923980713
    4. ' and' → logprob: -2.889936923980713
    5. 'or' → logprob: -5.514936923980713
    6. ' or' → logprob: -6.264936923980713
    7. '[' → logprob: -9.264936447143555
    8. '       ' → logprob: -10.264936447143555
    9. '   ' → logprob: -10.264936447143555
    10. ' ' → logprob: -11.264936447143555

Token 1123: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.02975083328783512
    2. ' v' → logprob: -3.5297508239746094
    3. '	v' → logprob: -15.77975082397461
    4. '       ' → logprob: -16.15475082397461
    5. '   ' → logprob: -16.52975082397461
    6. '$v' → logprob: -18.27975082397461
    7. ' ' → logprob: -18.52975082397461
    8. '    ' → logprob: -18.65475082397461
    9. '[' → logprob: -18.65475082397461
    10. '(v' → logprob: -18.77975082397461

Token 1124: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0564331205387134e-05
    2. 'v' → logprob: -12.62501049041748
    3. '1' → logprob: -12.87501049041748
    4. 'or' → logprob: -13.12501049041748
    5. 'and' → logprob: -14.12501049041748
    6. '   ' → logprob: -14.75001049041748
    7. '```' → logprob: -14.75001049041748
    8. '[
' → logprob: -14.87501049041748
    9. ' or' → logprob: -15.75001049041748
    10. '
' → logprob: -15.87501049041748

Token 1125: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016539888747502118
    2. '[' → logprob: -8.750164985656738
    3. ' ' → logprob: -12.250164985656738
    4. '```' → logprob: -14.625164985656738
    5. '
' → logprob: -14.875164985656738
    6. '0' → logprob: -15.375164985656738
    7. '[
' → logprob: -15.375164985656738
    8. '<|end|>' → logprob: -16.062665939331055
    9. '   ' → logprob: -16.125165939331055
    10. 'v' → logprob: -16.250165939331055

Token 1126: ']:' (ID: 12433)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16296319663524628
    2. ':
' → logprob: -2.0379631519317627
    3. ' and' → logprob: -4.287963390350342
    4. '):
' → logprob: -5.787963390350342
    5. '):' → logprob: -6.412963390350342
    6. 'and' → logprob: -7.662963390350342
    7. ']:' → logprob: -7.912963390350342
    8. ']:
' → logprob: -8.287962913513184
    9. '<|end|>' → logprob: -8.912962913513184
    10. ',' → logprob: -9.287962913513184

Token 1127: ' #' (ID: 1069)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.23055782914161682
    2. '           ' → logprob: -1.9805577993392944
    3. 'if' → logprob: -2.730557918548584
    4. 'd' → logprob: -6.480557918548584
    5. ' direction' → logprob: -7.230557918548584
    6. ' if' → logprob: -8.230557441711426
    7. 'dir' → logprob: -9.980557441711426
    8. '   ' → logprob: -9.980557441711426
    9. 'left' → logprob: -10.230557441711426
    10. '		' → logprob: -10.480557441711426

Token 1128: ' while' (ID: 2049)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7418080568313599
    2. 'direction' → logprob: -0.7418080568313599
    3. '           ' → logprob: -3.8668079376220703
    4. 'd' → logprob: -3.9918079376220703
    5. 'l' → logprob: -6.11680793762207
    6. 'left' → logprob: -6.36680793762207
    7. 'c' → logprob: -6.99180793762207
    8. 'v' → logprob: -7.36680793762207
    9. ' direction' → logprob: -7.49180793762207
    10. ' if' → logprob: -7.61680793762207

Token 1129: ' v' (ID: 323)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.261425256729126
    2. 'v' → logprob: -1.511425256729126
    3. ' True' → logprob: -5.261425018310547
    4. 'not' → logprob: -6.386425018310547
    5. '(True' → logprob: -6.511425018310547
    6. ' v' → logprob: -8.011425018310547
    7. ' not' → logprob: -8.136425018310547
    8. 'any' → logprob: -8.261425018310547
    9. 'None' → logprob: -9.511425018310547
    10. '(v' → logprob: -9.886425018310547

Token 1130: ' is' (ID: 382)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.45969876646995544
    2. '=' → logprob: -1.9596987962722778
    3. ' is' → logprob: -2.2096986770629883
    4. ' =' → logprob: -3.5846986770629883
    5. 'and' → logprob: -4.209698677062988
    6. 'is' → logprob: -4.334698677062988
    7. 'has' → logprob: -4.459698677062988
    8. ' has' → logprob: -4.709698677062988
    9. ':
' → logprob: -4.709698677062988
    10. '=None' → logprob: -4.834698677062988

Token 1131: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5781952738761902
    2. 'not' → logprob: -0.8281952738761902
    3. 'None' → logprob: -7.578195095062256
    4. 'True' → logprob: -7.578195095062256
    5. '[' → logprob: -7.703195095062256
    6. 'any' → logprob: -8.203195571899414
    7. 'v' → logprob: -8.578195571899414
    8. '   ' → logprob: -8.828195571899414
    9. ' ' → logprob: -10.078195571899414
    10. '(not' → logprob: -10.328195571899414

Token 1132: ' a' (ID: 261)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00037609596620313823
    2. ' None' → logprob: -8.000375747680664
    3. '(None' → logprob: -10.125375747680664
    4. '_None' → logprob: -15.250375747680664
    5. 'none' → logprob: -15.750375747680664
    6. '   ' → logprob: -16.500375747680664
    7. '(' → logprob: -16.750375747680664
    8. 'v' → logprob: -17.125375747680664
    9. '_none' → logprob: -17.750375747680664
    10. ',None' → logprob: -18.250375747680664

Token 1133: ' leaf' (ID: 25882)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.04662810638546944
    2. ' None' → logprob: -3.796627998352051
    3. 'leaf' → logprob: -3.796627998352051
    4. ' leaf' → logprob: -7.796627998352051
    5. '(None' → logprob: -9.42162799835205
    6. '   ' → logprob: -9.54662799835205
    7. '[' → logprob: -9.79662799835205
    8. ' ' → logprob: -11.17162799835205
    9. '
' → logprob: -11.79662799835205
    10. 'Leaf' → logprob: -11.92162799835205

Token 1134: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04541182518005371
    2. ' direction' → logprob: -3.9204118251800537
    3. '       ' → logprob: -4.670412063598633
    4. ' if' → logprob: -5.170412063598633
    5. 'direction' → logprob: -5.545412063598633
    6. '   ' → logprob: -5.795412063598633
    7. ',' → logprob: -6.795412063598633
    8. '(direction' → logprob: -7.670412063598633
    9. '<|end|>' → logprob: -8.420412063598633
    10. 'if' → logprob: -8.920412063598633

Token 1135: '           ' (ID: 352)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.45783621072769165
    2. 'd' → logprob: -2.207836151123047
    3. 'if' → logprob: -2.207836151123047
    4. '       ' → logprob: -2.707836151123047
    5. '           ' → logprob: -2.832836151123047
    6. ' direction' → logprob: -4.332836151123047
    7. '```' → logprob: -5.832836151123047
    8. ' if' → logprob: -6.207836151123047
    9. 'v' → logprob: -7.082836151123047
    10. '   ' → logprob: -7.332836151123047

Token 1136: ' left' (ID: 3561)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.06204924359917641
    2. 'd' → logprob: -3.687049150466919
    3. '           ' → logprob: -3.812049150466919
    4. 'if' → logprob: -4.437049388885498
    5. ' direction' → logprob: -7.687049388885498
    6. 'left' (adapté à ' left') → logprob: -8.18704891204834
    7. 'dir' → logprob: -8.68704891204834
    8. 'l' → logprob: -9.56204891204834
    9. '       ' → logprob: -10.31204891204834
    10. 'dire' → logprob: -10.81204891204834

Token 1137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13957326114177704
    2. '=' → logprob: -2.514573335647583
    3. ' =' → logprob: -3.514573335647583
    4. 'direction' → logprob: -4.764573097229004
    5. 'if' → logprob: -5.764573097229004
    6. '_direction' → logprob: -5.889573097229004
    7. 'v' → logprob: -6.889573097229004
    8. '   ' → logprob: -7.264573097229004
    9. 'dir' → logprob: -7.514573097229004
    10. 'or' → logprob: -8.014573097229004

Token 1138: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.009761401452124119
    2. ' right' → logprob: -4.634761333465576
    3. 'direction' → logprob: -12.884761810302734
    4. '	right' → logprob: -13.884761810302734
    5. '   ' → logprob: -14.009761810302734
    6. '
' → logprob: -15.509761810302734
    7. ' direction' → logprob: -16.009761810302734
    8. ' ' → logprob: -16.009761810302734
    9. ',right' → logprob: -16.134761810302734
    10. 'left' → logprob: -16.384761810302734

Token 1139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17541909217834473
    2. ' =' → logprob: -2.4254190921783447
    3. '=' → logprob: -2.6754190921783447
    4. ',v' → logprob: -5.925418853759766
    5. '           ' → logprob: -7.925418853759766
    6. '   ' → logprob: -8.800418853759766
    7. '=v' → logprob: -9.175418853759766
    8. ' ,' → logprob: -9.425418853759766
    9. '       ' → logprob: -10.050418853759766
    10. '[' → logprob: -10.175418853759766

Token 1140: ' _,' (ID: 18042)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.09796425700187683
    2. 'right' → logprob: -2.972964286804199
    3. ' v' → logprob: -3.222964286804199
    4. ' right' → logprob: -6.097964286804199
    5. '0' → logprob: -10.9729642868042
    6. 'direction' → logprob: -11.2229642868042
    7. '_' → logprob: -11.5979642868042
    8. ' direction' → logprob: -11.7229642868042
    9. ' ' → logprob: -11.8479642868042
    10. '_,' → logprob: -12.2229642868042

Token 1141: ' _,' (ID: 18042)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06194605678319931
    2. 'v' → logprob: -3.186946153640747
    3. 'right' → logprob: -4.811945915222168
    4. 'direction' → logprob: -5.186945915222168
    5. '_,' → logprob: -6.436945915222168
    6. '_' → logprob: -6.561945915222168
    7. 'priority' → logprob: -6.811945915222168
    8. 'p' → logprob: -8.311945915222168
    9. 'l' → logprob: -9.186945915222168
    10. ' ' → logprob: -9.311945915222168

Token 1142: ' _,' (ID: 18042)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.017649371176958084
    2. '_' → logprob: -4.142649173736572
    3. '_,' → logprob: -7.017649173736572
    4. '0' → logprob: -7.892649173736572
    5. ' right' → logprob: -8.51764965057373
    6. 'left' → logprob: -9.51764965057373
    7. ' ' → logprob: -11.01764965057373
    8. '   ' → logprob: -11.14264965057373
    9. '_right' → logprob: -11.89264965057373
    10. ',' → logprob: -12.01764965057373

Token 1143: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0701996237039566
    2. '_=' → logprob: -3.320199728012085
    3. '_,' → logprob: -4.195199489593506
    4. 'sum' → logprob: -4.695199489593506
    5. '=' → logprob: -5.820199489593506
    6. ' =' → logprob: -6.195199489593506
    7. 'v' → logprob: -6.820199489593506
    8. 'key' → logprob: -7.945199489593506
    9. 'priority' → logprob: -8.570199966430664
    10. 'left' → logprob: -9.070199966430664

Token 1144: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22340647876262665
    2. ' =' → logprob: -1.848406434059143
    3. '           ' → logprob: -3.2234065532684326
    4. '=v' → logprob: -6.2234063148498535
    5. 'v' → logprob: -7.8484063148498535
    6. 'if' → logprob: -8.848406791687012
    7. ',' → logprob: -9.098406791687012
    8. '       ' → logprob: -9.723406791687012
    9. '   ' → logprob: -9.973406791687012
    10. ' if' → logprob: -10.223406791687012

Token 1145: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0015222413931041956
    2. ' v' → logprob: -6.501522064208984
    3. '(v' → logprob: -11.626522064208984
    4. '   ' → logprob: -11.626522064208984
    5. 'random' → logprob: -14.376522064208984
    6. '	v' → logprob: -14.501522064208984
    7. '(' → logprob: -15.251522064208984
    8. ' (' → logprob: -15.626522064208984
    9. ' ' → logprob: -16.251522064208984
    10. '[v' → logprob: -16.251522064208984

Token 1146: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3102562725543976
    2. 'direction' → logprob: -1.5602562427520752
    3. 'if' → logprob: -3.060256242752075
    4. ' if' → logprob: -5.435256481170654
    5. ' direction' → logprob: -5.685256481170654
    6. 'v' → logprob: -7.310256481170654
    7. '   ' → logprob: -7.810256481170654
    8. '
' → logprob: -8.060256004333496
    9. ',' → logprob: -9.060256004333496
    10. '       ' → logprob: -9.060256004333496

Token 1147: '           ' (ID: 352)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.23304583132266998
    2. '           ' → logprob: -1.7330458164215088
    3. 'if' → logprob: -3.608045816421509
    4. ' direction' → logprob: -6.358046054840088
    5. 'd' → logprob: -7.108046054840088
    6. 'v' → logprob: -7.358046054840088
    7. ' if' → logprob: -7.858046054840088
    8. '0' → logprob: -8.98304557800293
    9. 'c' → logprob: -9.85804557800293
    10. '[' → logprob: -9.98304557800293

Token 1148: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' (adapté à ' direction') → logprob: -0.11615543067455292
    2. 'if' → logprob: -2.2411553859710693
    3. '           ' → logprob: -5.866155624389648
    4. 'd' → logprob: -8.741155624389648
    5. ' direction' → logprob: -8.866155624389648
    6. ' if' → logprob: -9.991155624389648
    7. '   ' → logprob: -10.116155624389648
    8. 'dir' → logprob: -10.616155624389648
    9. '       ' → logprob: -10.741155624389648
    10. '(direction' → logprob: -10.991155624389648

Token 1149: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47408318519592285
    2. ' =' → logprob: -0.9740831851959229
    3. '   ' → logprob: -12.724082946777344
    4. 'v' → logprob: -13.599082946777344
    5. '=v' → logprob: -14.849082946777344
    6. ' ' → logprob: -15.474082946777344
    7. '=int' → logprob: -15.474082946777344
    8. '=
' → logprob: -15.724082946777344
    9. '=(' → logprob: -15.849082946777344
    10. ',' → logprob: -16.224082946777344

Token 1150: ' (' (ID: 350)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.3649488389492035
    2. '0' → logprob: -2.2399487495422363
    3. 'left' → logprob: -2.4899487495422363
    4. '1' → logprob: -3.1149487495422363
    5. 'int' → logprob: -3.9899487495422363
    6. '(int' → logprob: -4.239948749542236
    7. '(right' → logprob: -4.364948749542236
    8. '(' → logprob: -4.489948749542236
    9. '(v' → logprob: -4.614948749542236
    10. 'right' → logprob: -6.989948749542236

Token 1151: 'left' (ID: 4530)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.2730652689933777
    2. 'left' → logprob: -1.6480653285980225
    3. '1' → logprob: -3.5230653285980225
    4. '0' → logprob: -4.898065090179443
    5. 'v' → logprob: -5.898065090179443
    6. '(right' → logprob: -6.023065090179443
    7. '(left' → logprob: -6.398065090179443
    8. 'int' → logprob: -6.898065090179443
    9. 'not' → logprob: -6.898065090179443
    10. 'bool' → logprob: -8.898065567016602

Token 1152: '[' (ID: 58)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.16840100288391113
    2. 'is' → logprob: -2.043401002883911
    3. '[' → logprob: -3.918401002883911
    4. ')' → logprob: -5.293400764465332
    5. ' ' → logprob: -8.418400764465332
    6. '
' → logprob: -8.918400764465332
    7. '==' → logprob: -10.043400764465332
    8. '=' → logprob: -10.293400764465332
    9. '[
' → logprob: -11.543400764465332
    10. ')
' → logprob: -11.793400764465332

Token 1153: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6954350471496582
    2. '0' → logprob: -0.9454350471496582
    3. 'None' → logprob: -2.945435047149658
    4. ' is' → logprob: -3.445435047149658
    5. 'is' → logprob: -4.570435047149658
    6. '
' → logprob: -4.695435047149658
    7. ']' → logprob: -5.820435047149658
    8. '```' → logprob: -6.570435047149658
    9. '2' → logprob: -6.820435047149658
    10. '==' → logprob: -6.945435047149658

Token 1154: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -1.1896708011627197
    2. '<' → logprob: -1.3146708011627197
    3. '>' → logprob: -2.3146708011627197
    4. '[' → logprob: -2.4396708011627197
    5. ']' → logprob: -2.5646708011627197
    6. '>=' → logprob: -3.1896708011627197
    7. ' >=' → logprob: -3.4396708011627197
    8. ' >' → logprob: -3.5646708011627197
    9. ' if' → logprob: -4.064670562744141
    10. 'if' → logprob: -4.439670562744141

Token 1155: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6298754811286926
    2. '<' → logprob: -0.8798754811286926
    3. ' >' → logprob: -3.629875421524048
    4. ' <' → logprob: -3.754875421524048
    5. 'if' → logprob: -6.754875659942627
    6. ' if' → logprob: -7.254875659942627
    7. '[' → logprob: -8.254875183105469
    8. '>=' → logprob: -8.754875183105469
    9. '```' → logprob: -9.379875183105469
    10. '<v' → logprob: -10.254875183105469

Token 1156: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0008142740116454661
    2. ' right' → logprob: -7.125814437866211
    3. '	right' → logprob: -12.625814437866211
    4. '   ' → logprob: -12.875814437866211
    5. '
' → logprob: -13.750814437866211
    6. '(right' → logprob: -14.000814437866211
    7. 'left' → logprob: -14.125814437866211
    8. 'v' → logprob: -15.250814437866211
    9. '[right' → logprob: -15.250814437866211
    10. '    
' → logprob: -15.625814437866211

Token 1157: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007542393868789077
    2. '3' → logprob: -7.250754356384277
    3. '   ' → logprob: -11.375754356384277
    4. '```' → logprob: -11.750754356384277
    5. ' [' → logprob: -12.500754356384277
    6. '
' → logprob: -12.750754356384277
    7. ',' → logprob: -12.875754356384277
    8. ')' → logprob: -12.875754356384277
    9. '  ' → logprob: -13.000754356384277
    10. '][' → logprob: -13.375754356384277

Token 1158: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.259079363080673e-05
    2. ' ' → logprob: -12.000012397766113
    3. '[' → logprob: -13.125012397766113
    4. '```' → logprob: -13.875012397766113
    5. '1' → logprob: -14.125012397766113
    6. '
' → logprob: -14.250012397766113
    7. '2' → logprob: -14.250012397766113
    8. '   ' → logprob: -14.500012397766113
    9. '0' → logprob: -15.125012397766113
    10. '  ' → logprob: -16.12501335144043

Token 1159: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.18709129095077515
    2. ')' → logprob: -2.18709135055542
    3. ']' → logprob: -3.06209135055542
    4. ' if' → logprob: -4.81209135055542
    5. '])
' → logprob: -6.43709135055542
    6. 'if' → logprob: -6.93709135055542
    7. '[' → logprob: -7.56209135055542
    8. ' )' → logprob: -9.187090873718262
    9. '0' → logprob: -9.687090873718262
    10. ' ])' → logprob: -9.937090873718262

Token 1160: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.22017747163772583
    2. '           ' → logprob: -1.970177412033081
    3. '0' → logprob: -3.470177412033081
    4. '1' → logprob: -4.09517765045166
    5. 'if' → logprob: -4.72017765045166
    6. ' or' → logprob: -7.59517765045166
    7. '
' → logprob: -7.97017765045166
    8. ' ' → logprob: -8.72017765045166
    9. '=' → logprob: -9.09517765045166
    10. '[' → logprob: -9.34517765045166

Token 1161: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.007938297465443611
    2. 'right' → logprob: -5.257938385009766
    3. ' left' → logprob: -6.132938385009766
    4. '(left' → logprob: -7.632938385009766
    5. ' right' → logprob: -11.007938385009766
    6. '(' → logprob: -11.632938385009766
    7. '(right' → logprob: -12.507938385009766
    8. '	left' → logprob: -12.507938385009766
    9. '   ' → logprob: -12.882938385009766
    10. ' (' → logprob: -12.882938385009766

Token 1162: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.9205814003944397
    2. 'and' → logprob: -0.9205814003944397
    3. 'else' → logprob: -2.170581340789795
    4. ' else' → logprob: -2.545581340789795
    5. ' is' → logprob: -4.920581340789795
    6. '[' → logprob: -5.795581340789795
    7. 'is' → logprob: -7.795581340789795
    8. '<|end|>' → logprob: -10.420581817626953
    9. 'if' → logprob: -10.670581817626953
    10. ' ' → logprob: -10.795581817626953

Token 1163: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0004904801025986671
    2. ' right' → logprob: -7.750490665435791
    3. 'left' → logprob: -9.875490188598633
    4. '(right' → logprob: -12.375490188598633
    5. 'not' → logprob: -13.000490188598633
    6. '	right' → logprob: -13.625490188598633
    7. '   ' → logprob: -15.250490188598633
    8. ' ' → logprob: -15.875490188598633
    9. '
' → logprob: -16.500490188598633
    10. '(' → logprob: -16.625490188598633

Token 1164: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6933555603027344
    2. 'else' → logprob: -0.6933555603027344
    3. '           ' → logprob: -9.068355560302734
    4. '            ' → logprob: -9.693355560302734
    5. '          ' → logprob: -11.693355560302734
    6. '        ' → logprob: -12.318355560302734
    7. '             ' → logprob: -12.443355560302734
    8. '         ' → logprob: -12.568355560302734
    9. '==' → logprob: -13.068355560302734
    10. '               ' → logprob: -13.318355560302734

Token 1165: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6958822011947632
    2. 'left' → logprob: -1.0708822011947632
    3. '1' → logprob: -2.4458823204040527
    4. '(' → logprob: -3.6958823204040527
    5. '(left' → logprob: -4.445882320404053
    6. ' left' → logprob: -4.570882320404053
    7. 'right' → logprob: -4.820882320404053
    8. ' ' → logprob: -5.445882320404053
    9. ' (' → logprob: -5.570882320404053
    10. 'int' → logprob: -5.570882320404053

Token 1166: 'right' (ID: 2460)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.07962168753147125
    2. 'right' → logprob: -2.7046217918395996
    3. ' left' → logprob: -5.3296217918396
    4. '1' → logprob: -6.7046217918396
    5. ' right' → logprob: -7.0796217918396
    6. 'v' → logprob: -7.0796217918396
    7. 'bool' → logprob: -7.3296217918396
    8. '0' → logprob: -7.4546217918396
    9. '(left' → logprob: -8.454621315002441
    10. 'True' → logprob: -8.704621315002441

Token 1167: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.14402729272842407
    2. 'is' → logprob: -2.7690272331237793
    3. '[' → logprob: -3.2690272331237793
    4. 'and' → logprob: -3.6440272331237793
    5. ' and' → logprob: -5.019027233123779
    6. 'if' → logprob: -8.769027709960938
    7. ')' → logprob: -8.894027709960938
    8. '<|end|>' → logprob: -9.019027709960938
    9. ' ' → logprob: -9.519027709960938
    10. '	is' → logprob: -10.394027709960938

Token 1168: ' None' (ID: 4662)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.006790205370634794
    2. 'None' → logprob: -5.6317901611328125
    3. ' not' → logprob: -5.7567901611328125
    4. ' None' → logprob: -11.256790161132812
    5. '	not' → logprob: -12.506790161132812
    6. 'none' → logprob: -12.881790161132812
    7. '   ' → logprob: -13.381790161132812
    8. 'False' → logprob: -14.881790161132812
    9. '
' → logprob: -15.006790161132812
    10. '[' → logprob: -15.006790161132812

Token 1169: ')
' (ID: 446)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5305449962615967
    2. ')' → logprob: -1.2805449962615967
    3. 'else' → logprob: -2.7805449962615967
    4. ' if' → logprob: -4.030545234680176
    5. ' and' → logprob: -4.405545234680176
    6. ' or' → logprob: -4.530545234680176
    7. ',' → logprob: -4.655545234680176
    8. '0' → logprob: -5.405545234680176
    9. '1' → logprob: -5.530545234680176
    10. ':' → logprob: -5.655545234680176

Token 1170: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009119934402406216
    2. '0' → logprob: -5.884119987487793
    3. '[' → logprob: -6.634119987487793
    4. '1' → logprob: -6.884119987487793
    5. '=' → logprob: -7.259119987487793
    6. ')' → logprob: -7.759119987487793
    7. ' if' → logprob: -8.009119987487793
    8. ',' → logprob: -8.134119987487793
    9. ' direction' → logprob: -8.384119987487793
    10. '<|end|>' → logprob: -8.384119987487793

Token 1171: ' p' (ID: 275)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.23642711341381073
    2. ' v' → logprob: -1.6114270687103271
    3. '           ' → logprob: -4.986427307128906
    4. '       ' → logprob: -6.236427307128906
    5. '```' → logprob: -6.611427307128906
    6. ' if' → logprob: -8.236427307128906
    7. '[' → logprob: -8.986427307128906
    8. ' direction' → logprob: -8.986427307128906
    9. 'direction' → logprob: -9.486427307128906
    10. '``' → logprob: -9.611427307128906

Token 1172: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11173825711011887
    2. ' =' → logprob: -2.7367382049560547
    3. '[' → logprob: -3.8617382049560547
    4. '=' → logprob: -4.861738204956055
    5. 'and' → logprob: -5.486738204956055
    6. ' and' → logprob: -5.736738204956055
    7. 'v' → logprob: -5.861738204956055
    8. ',v' → logprob: -6.611738204956055
    9. ' is' → logprob: -8.986738204956055
    10. 'p' → logprob: -9.611738204956055

Token 1173: ' rotate' (ID: 31987)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0022301904391497374
    2. ' v' → logprob: -6.127230167388916
    3. 'stack' → logprob: -11.002230644226074
    4. '(v' → logprob: -11.127230644226074
    5. 'None' → logprob: -12.002230644226074
    6. '(' → logprob: -12.752230644226074
    7. '	v' → logprob: -13.502230644226074
    8. '[v' → logprob: -14.002230644226074
    9. ' (' → logprob: -14.127230644226074
    10. '[' → logprob: -14.877230644226074

Token 1174: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -2.6656825866666622e-05
    2. 'v' → logprob: -10.87502670288086
    3. '(' → logprob: -12.00002670288086
    4. '(p' → logprob: -13.87502670288086
    5. '(direction' → logprob: -15.12502670288086
    6. '(
' → logprob: -15.25002670288086
    7. ' v' → logprob: -17.37502670288086
    8. ' (' → logprob: -18.12502670288086
    9. '((' → logprob: -19.00002670288086
    10. '	v' → logprob: -19.00002670288086

Token 1175: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003150027245283127
    2. ',d' → logprob: -6.12814998626709
    3. '(direction' → logprob: -7.00314998626709
    4. ',
' → logprob: -10.87814998626709
    5. '(' → logprob: -11.12814998626709
    6. ' ,' → logprob: -12.00314998626709
    7. '[' → logprob: -12.12814998626709
    8. 'direction' → logprob: -13.00314998626709
    9. '(d' → logprob: -13.62814998626709
    10. ',[' → logprob: -13.75314998626709

Token 1176: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.08203736692667007
    2. '1' → logprob: -2.8320374488830566
    3. ' direction' → logprob: -3.9570374488830566
    4. '   ' → logprob: -7.707037448883057
    5. ' ' → logprob: -8.582036972045898
    6. '(direction' → logprob: -9.457036972045898
    7. '0' → logprob: -11.207036972045898
    8. 'dire' → logprob: -11.832036972045898
    9. '  ' → logprob: -13.332036972045898
    10. 'dir' → logprob: -13.644536972045898

Token 1177: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07896183431148529
    2. ')
' → logprob: -2.5789618492126465
    3. '           ' → logprob: -10.203961372375488
    4. ')
' → logprob: -10.453961372375488
    5. ')[' → logprob: -13.703961372375488
    6. '       ' → logprob: -13.953961372375488
    7. '[' → logprob: -14.078961372375488
    8. ')

' → logprob: -14.328961372375488
    9. '   ' → logprob: -14.453961372375488
    10. ');' → logprob: -14.578961372375488

Token 1178: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4650481045246124
    2. '[' → logprob: -1.71504807472229
    3. '		' → logprob: -2.46504807472229
    4. 'v' → logprob: -3.34004807472229
    5. '<|end|>' → logprob: -4.090048313140869
    6. '       ' → logprob: -4.215048313140869
    7. '	v' → logprob: -4.715048313140869
    8. '	       ' → logprob: -5.590048313140869
    9. ' v' → logprob: -5.590048313140869
    10. '[v' → logprob: -6.090048313140869

Token 1179: ' stack' (ID: 10825)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.06276378035545349
    2. 'if' → logprob: -2.8127636909484863
    3. '       ' → logprob: -7.437763690948486
    4. ' if' → logprob: -9.187764167785645
    5. '           ' → logprob: -9.437764167785645
    6. ' v' → logprob: -11.062764167785645
    7. 'direction' → logprob: -12.187764167785645
    8. '   ' → logprob: -12.937764167785645
    9. '
' → logprob: -14.437764167785645
    10. '```' → logprob: -15.062764167785645

Token 1180: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.2603901015827432e-05
    2. '[-' → logprob: -10.875022888183594
    3. 'append' → logprob: -12.750022888183594
    4. '.pop' → logprob: -14.750022888183594
    5. '.' → logprob: -15.750022888183594
    6. ',' → logprob: -16.625022888183594
    7. '.app' → logprob: -18.250022888183594
    8. '.clear' → logprob: -18.250022888183594
    9. '
' → logprob: -18.375022888183594
    10. 'Append' → logprob: -18.875022888183594

Token 1181: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00034356804098933935
    2. '(p' → logprob: -8.125343322753906
    3. '(stack' → logprob: -10.125343322753906
    4. '(' → logprob: -11.875343322753906
    5. '([' → logprob: -15.125343322753906
    6. '(
' → logprob: -15.125343322753906
    7. '(v' → logprob: -17.250343322753906
    8. '   ' → logprob: -18.250343322753906
    9. '(Stack' → logprob: -18.375343322753906
    10. 'stack' → logprob: -18.625343322753906

Token 1182: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -7.541112427134067e-05
    2. '(p' → logprob: -10.125075340270996
    3. 'v' → logprob: -10.750075340270996
    4. ' p' → logprob: -12.125075340270996
    5. '[p' → logprob: -12.500075340270996
    6. 'stack' → logprob: -12.500075340270996
    7. '(v' → logprob: -15.000075340270996
    8. '   ' → logprob: -15.250075340270996
    9. '[' → logprob: -16.125076293945312
    10. '[v' → logprob: -16.375076293945312

Token 1183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.500108141452074e-05
    2. ',
' → logprob: -11.250035285949707
    3. '[' → logprob: -11.625035285949707
    4. ',d' → logprob: -12.000035285949707
    5. ' ,' → logprob: -12.500035285949707
    6. ',p' → logprob: -13.625035285949707
    7. '
' → logprob: -14.250035285949707
    8. '1' → logprob: -14.875035285949707
    9. 'p' → logprob: -15.125035285949707
    10. '0' → logprob: -16.12503433227539

Token 1184: ' direction' (ID: 9262)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.27879706025123596
    2. 'direction' → logprob: -1.5287970304489136
    3. '0' → logprob: -3.903797149658203
    4. ' direction' → logprob: -5.653797149658203
    5. ' ' → logprob: -6.153797149658203
    6. '(direction' → logprob: -8.028797149658203
    7. 'not' → logprob: -8.528797149658203
    8. '(' → logprob: -9.403797149658203
    9. '   ' → logprob: -10.966297149658203
    10. 'dire' → logprob: -11.091297149658203

Token 1185: '));' (ID: 11897)
  Prédit: '))
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.38719525933265686
    2. '))' → logprob: -1.1371952295303345
    3. '           ' → logprob: -8.387195587158203
    4. ')
' → logprob: -9.887195587158203
    5. '));' → logprob: -11.012195587158203
    6. ')' → logprob: -11.137195587158203
    7. '))
' → logprob: -12.512195587158203
    8. '))

' → logprob: -12.637195587158203
    9. '               ' → logprob: -13.387195587158203
    10. '       ' → logprob: -13.887195587158203

Token 1186: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.306760805164231e-05
    2. '           ' → logprob: -11.62501335144043
    3. ' v' → logprob: -13.12501335144043
    4. '       ' → logprob: -13.62501335144043
    5. '   ' → logprob: -14.37501335144043
    6. '```' → logprob: -16.25001335144043
    7. '	v' → logprob: -16.37501335144043
    8. '            
' → logprob: -17.12501335144043
    9. 'if' → logprob: -17.25001335144043
    10. '[v' → logprob: -18.00001335144043

Token 1187: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0028500445187091827
    2. ' =' → logprob: -5.87785005569458
    3. ',' → logprob: -10.127849578857422
    4. '[' → logprob: -12.752849578857422
    5. '=p' → logprob: -13.752849578857422
    6. '=v' → logprob: -14.502849578857422
    7. ',p' → logprob: -15.877849578857422
    8. '=
' → logprob: -15.877849578857422
    9. '=

' → logprob: -16.002849578857422
    10. '```' → logprob: -16.252849578857422

Token 1188: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.005170550663024187
    2. ' p' → logprob: -5.6301703453063965
    3. 'v' → logprob: -6.7551703453063965
    4. 'stack' → logprob: -8.380170822143555
    5. 'get' → logprob: -9.505170822143555
    6. ' v' → logprob: -10.630170822143555
    7. '(p' → logprob: -11.005170822143555
    8. '(' → logprob: -11.380170822143555
    9. '[' → logprob: -11.380170822143555
    10. ' stack' → logprob: -11.505170822143555

Token 1189: '[' (ID: 58)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1190: 'direction' (ID: 43278)
  Prédit: 'direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.06150045990943909
    2. '1' → logprob: -2.9365005493164062
    3. '0' → logprob: -5.311500549316406
    4. '[' → logprob: -7.186500549316406
    5. ' direction' → logprob: -8.186500549316406
    6. '(direction' → logprob: -8.311500549316406
    7. '(' → logprob: -8.436500549316406
    8. 'p' → logprob: -10.561500549316406
    9. 'not' → logprob: -10.686500549316406
    10. 'v' → logprob: -11.311500549316406

Token 1191: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06705429404973984
    2. ')' → logprob: -3.192054271697998
    3. '])' → logprob: -3.942054271697998
    4. ')]' → logprob: -5.817054271697998
    5. '[' → logprob: -6.942054271697998
    6. ']
' → logprob: -8.442054748535156
    7. ' ]' → logprob: -9.192054748535156
    8. ')
' → logprob: -11.442054748535156
    9. '()]' → logprob: -11.442054748535156
    10. '<|end|>' → logprob: -11.442054748535156

Token 1192: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21929959952831268
    2. '```' → logprob: -2.219299554824829
    3. '<|end|>' → logprob: -2.469299554824829
    4. '           ' → logprob: -6.469299793243408
    5. ')' → logprob: -7.594299793243408
    6. '...' → logprob: -8.21929931640625
    7. '[' → logprob: -8.84429931640625
    8. '#' → logprob: -9.09429931640625
    9. '<|end|>' → logprob: -9.09429931640625
    10. 'v' → logprob: -9.46929931640625

Token 1193: ' v' (ID: 323)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31393513083457947
    2. '       ' → logprob: -1.9389351606369019
    3. 'p' → logprob: -2.8139350414276123
    4. 'v' (adapté à ' v') → logprob: -3.3139350414276123
    5. ' if' → logprob: -3.9389350414276123
    6. '```' → logprob: -4.813935279846191
    7. ' p' → logprob: -7.188935279846191
    8. 'key' → logprob: -7.813935279846191
    9. ' v' → logprob: -8.688935279846191
    10. '   ' → logprob: -9.938935279846191

Token 1194: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0010411443654447794
    2. ' =' → logprob: -7.126040935516357
    3. ',' → logprob: -8.501041412353516
    4. '[' → logprob: -11.126041412353516
    5. '=None' → logprob: -11.501041412353516
    6. 'v' → logprob: -12.001041412353516
    7. '=v' → logprob: -14.626041412353516
    8. '=[' → logprob: -15.001041412353516
    9. '=
' → logprob: -15.126041412353516
    10. '0' → logprob: -15.376041412353516

Token 1195: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0005555360112339258
    2. ' None' → logprob: -7.500555515289307
    3. '(None' → logprob: -13.750555992126465
    4. 'v' → logprob: -14.125555992126465
    5. '[' → logprob: -14.375555992126465
    6. '[]' → logprob: -16.37555503845215
    7. 'none' → logprob: -17.75055503845215
    8. ',None' → logprob: -18.00055503845215
    9. '   ' → logprob: -18.12555503845215
    10. '=None' → logprob: -18.25055503845215

Token 1196: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033317103516310453
    2. 'if' → logprob: -6.378331661224365
    3. 'while' → logprob: -7.003331661224365
    4. ' if' → logprob: -7.878331661224365
    5. '   ' → logprob: -8.628332138061523
    6. ' while' → logprob: -10.003332138061523
    7. '
' → logprob: -10.378332138061523
    8. '```' → logprob: -11.128332138061523
    9. ',' → logprob: -11.378332138061523
    10. '<|end|>' → logprob: -11.378332138061523

Token 1197: ' delete' (ID: 6168)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.323419988155365
    2. 'while' → logprob: -1.6984200477600098
    3. '       ' → logprob: -2.8234200477600098
    4. 'for' → logprob: -3.5734200477600098
    5. ' if' → logprob: -5.94842004776001
    6. 'p' → logprob: -6.07342004776001
    7. ' while' → logprob: -7.69842004776001
    8. ' for' → logprob: -8.198419570922852
    9. '#' → logprob: -9.823419570922852
    10. '   ' → logprob: -9.948419570922852

Token 1198: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7614071369171143
    2. '       ' → logprob: -0.8864071369171143
    3. ' if' → logprob: -2.3864071369171143
    4. 'p' → logprob: -3.6364071369171143
    5. ' p' → logprob: -6.386406898498535
    6. '   ' → logprob: -8.511406898498535
    7. 'while' → logprob: -8.761406898498535
    8. '<|end|>' → logprob: -9.136406898498535
    9. ')' → logprob: -10.011406898498535
    10. '           ' → logprob: -10.136406898498535

Token 1199: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5648813247680664
    2. '       ' → logprob: -1.3148813247680664
    3. 'while' → logprob: -1.8148813247680664
    4. 'for' → logprob: -9.189881324768066
    5. '   ' → logprob: -10.189881324768066
    6. ' if' → logprob: -10.689881324768066
    7. '```' → logprob: -10.939881324768066
    8. 'p' → logprob: -11.189881324768066
    9. 'return' → logprob: -12.189881324768066
    10. ' while' → logprob: -12.314881324768066

Token 1200: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.435045450925827
    2. 'while' (adapté à ' while') → logprob: -1.1850454807281494
    3. '       ' → logprob: -3.1850454807281494
    4. 'if' → logprob: -5.18504524230957
    5. ' for' → logprob: -10.31004524230957
    6. '   ' → logprob: -11.68504524230957
    7. ' while' → logprob: -12.06004524230957
    8. '```' → logprob: -12.56004524230957
    9. 'p' → logprob: -13.06004524230957
    10. 'return' → logprob: -13.56004524230957

Token 1201: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -4.572941179503687e-05
    2. ' stack' → logprob: -10.000045776367188
    3. '	stack' → logprob: -16.000045776367188
    4. '(stack' → logprob: -16.125045776367188
    5. '   ' → logprob: -17.375045776367188
    6. 'True' → logprob: -17.375045776367188
    7. 'Stack' → logprob: -19.000045776367188
    8. 'len' → logprob: -19.750045776367188
    9. 'not' → logprob: -20.625045776367188
    10. 'v' → logprob: -20.750045776367188

Token 1202: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.38773828744888306
    2. ':' → logprob: -1.1377382278442383
    3. 'and' → logprob: -8.012738227844238
    4. '       ' → logprob: -8.387738227844238
    5. '):
' → logprob: -9.137738227844238
    6. '   ' → logprob: -10.012738227844238
    7. ':
' → logprob: -10.637738227844238
    8. ' and' → logprob: -10.762738227844238
    9. '=' → logprob: -11.137738227844238
    10. 'not' → logprob: -11.387738227844238

Token 1203: '           ' (ID: 352)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.003950644284486771
    2. ' p' → logprob: -5.628950595855713
    3. '   ' → logprob: -8.753951072692871
    4. '       ' → logprob: -8.753951072692871
    5. '           ' → logprob: -10.378951072692871
    6. '(p' → logprob: -13.753951072692871
    7. '	p' → logprob: -14.003951072692871
    8. 'v' → logprob: -14.128951072692871
    9. '```' → logprob: -14.253951072692871
    10. ' ' → logprob: -15.378951072692871

Token 1204: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -4.1557283111615106e-05
    2. 'v' → logprob: -10.250041961669922
    3. ' p' → logprob: -12.625041961669922
    4. '           ' → logprob: -12.875041961669922
    5. '       ' → logprob: -16.250041961669922
    6. '   ' → logprob: -16.250041961669922
    7. 'q' → logprob: -19.250041961669922
    8. 'node' → logprob: -19.375041961669922
    9. '(p' → logprob: -19.500041961669922
    10. 'x' → logprob: -19.750041961669922

Token 1205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001408805139362812
    2. ',p' → logprob: -7.001408576965332
    3. ',v' → logprob: -7.626408576965332
    4. '[' → logprob: -12.626408576965332
    5. ' ,' → logprob: -12.751408576965332
    6. ',
' → logprob: -14.001408576965332
    7. 'p' → logprob: -14.501408576965332
    8. 'v' → logprob: -14.626408576965332
    9. ',d' → logprob: -14.876408576965332
    10. ',t' → logprob: -15.001408576965332

Token 1206: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.00020354038861114532
    2. ' direction' → logprob: -8.500203132629395
    3. 'd' → logprob: -18.25020408630371
    4. '   ' → logprob: -18.75020408630371
    5. 'dir' → logprob: -19.00020408630371
    6. '(direction' → logprob: -20.25020408630371
    7. '_direction' → logprob: -20.25020408630371
    8. 'dire' → logprob: -20.62520408630371
    9. ' ' → logprob: -21.12520408630371
    10. '方向' → logprob: -21.75020408630371

Token 1207: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741484522819519
    2. '=' → logprob: -0.9741484522819519
    3. '=p' → logprob: -9.599148750305176
    4. ':' → logprob: -12.974148750305176
    5. ')' → logprob: -15.224148750305176
    6. 'p' → logprob: -15.224148750305176
    7. '   ' → logprob: -15.474148750305176
    8. ' ' → logprob: -15.849148750305176
    9. ' p' → logprob: -15.849148750305176
    10. '(p' → logprob: -16.34914779663086

Token 1208: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.014163863845169544
    2. ' stack' → logprob: -4.264163970947266
    3. '   ' → logprob: -15.389163970947266
    4. '	stack' → logprob: -16.014163970947266
    5. '(stack' → logprob: -17.014163970947266
    6. ' ' → logprob: -18.139163970947266
    7. '       ' → logprob: -18.639163970947266
    8. 'p' → logprob: -18.889163970947266
    9. '_stack' → logprob: -19.514163970947266
    10. '.stack' → logprob: -19.639163970947266

Token 1209: '.pop' (ID: 15746)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001503313542343676
    2. ' =' → logprob: -6.5015034675598145
    3. '.pop' → logprob: -14.626502990722656
    4. '=p' → logprob: -15.376502990722656
    5. '=
' → logprob: -15.626502990722656
    6. 'pop' → logprob: -16.376502990722656
    7. 'p' → logprob: -18.376502990722656
    8. '.=' → logprob: -19.376502990722656
    9. ' ' → logprob: -19.751502990722656
    10. '.' → logprob: -20.251502990722656

Token 1210: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013867054134607315
    2. ':' → logprob: -4.763866901397705
    3. ':
' → logprob: -5.763866901397705
    4. ',' → logprob: -7.263866901397705
    5. '       ' → logprob: -8.263867378234863
    6. '```' → logprob: -8.513867378234863
    7. ' p' → logprob: -8.763867378234863
    8. '
' → logprob: -8.888867378234863
    9. 'p' → logprob: -9.388867378234863
    10. '):
' → logprob: -9.388867378234863

Token 1211: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0025902886409312487
    2. '       ' → logprob: -6.377590179443359
    3. 'p' → logprob: -7.127590179443359
    4. '   ' → logprob: -9.50259017944336
    5. '```' → logprob: -12.37759017944336
    6. 'if' → logprob: -13.00259017944336
    7. ' p' → logprob: -13.12759017944336
    8. '               ' → logprob: -14.50259017944336
    9. ' ' → logprob: -15.50259017944336
    10. '          ' → logprob: -15.62759017944336

Token 1212: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.003236297983676195
    2. '           ' → logprob: -5.753236293792725
    3. 'if' → logprob: -10.003236770629883
    4. ' p' → logprob: -11.253236770629883
    5. '       ' → logprob: -16.253236770629883
    6. '   ' → logprob: -16.878236770629883
    7. 'prev' → logprob: -16.878236770629883
    8. '```' → logprob: -17.003236770629883
    9. ' if' → logprob: -17.253236770629883
    10. '               ' → logprob: -17.503236770629883

Token 1213: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5451681974809617e-05
    2. '   ' → logprob: -11.625015258789062
    3. 'direction' → logprob: -13.250015258789062
    4. '```' → logprob: -13.500015258789062
    5. '[
' → logprob: -14.375015258789062
    6. ')[' → logprob: -14.625015258789062
    7. '
' → logprob: -14.750015258789062
    8. ' ' → logprob: -15.125015258789062
    9. ',' → logprob: -15.250015258789062
    10. '=' → logprob: -15.375015258789062

Token 1214: 'direction' (ID: 43278)
  Prédit: 'direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.00011653638648567721
    2. '[' → logprob: -9.250116348266602
    3. ' direction' → logprob: -11.625116348266602
    4. '(direction' → logprob: -11.625116348266602
    5. 'dire' → logprob: -13.750116348266602
    6. '   ' → logprob: -13.875116348266602
    7. 'd' → logprob: -14.875116348266602
    8. '][' → logprob: -17.7501163482666
    9. ',' → logprob: -18.0001163482666
    10. '.direction' → logprob: -18.1251163482666

Token 1215: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.474128782749176
    2. ' =' → logprob: -0.974128782749176
    3. ']' → logprob: -10.974128723144531
    4. '=None' → logprob: -11.224128723144531
    5. 'None' → logprob: -11.724128723144531
    6. ']=' → logprob: -11.849128723144531
    7. ' None' → logprob: -12.724128723144531
    8. ')' → logprob: -13.349128723144531
    9. ')=' → logprob: -14.474128723144531
    10. '(None' → logprob: -14.849128723144531

Token 1216: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006716317031532526
    2. ' =' → logprob: -5.006716251373291
    3. '=None' → logprob: -13.88171672821045
    4. ',' → logprob: -16.881715774536133
    5. ')=' → logprob: -18.381715774536133
    6. '.=' → logprob: -18.756715774536133
    7. 'None' → logprob: -18.881715774536133
    8. '＝' → logprob: -19.381715774536133
    9. '=
' → logprob: -19.506715774536133
    10. ']=' → logprob: -19.756715774536133

Token 1217: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.368984107510187e-05
    2. ' v' → logprob: -10.750033378601074
    3. 'None' → logprob: -11.375033378601074
    4. ' None' → logprob: -14.375033378601074
    5. '	v' → logprob: -17.12503433227539
    6. '   ' → logprob: -19.12503433227539
    7. '```' → logprob: -20.37503433227539
    8. '$v' → logprob: -20.50003433227539
    9. '<|end|>' → logprob: -20.87503433227539
    10. ')v' → logprob: -21.12503433227539

Token 1218: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.721228368813172e-05
    2. '   ' → logprob: -10.125086784362793
    3. '       ' → logprob: -10.750086784362793
    4. 'p' → logprob: -10.875086784362793
    5. ',' → logprob: -12.625086784362793
    6. '<|end|>' → logprob: -13.875086784362793
    7. ';' → logprob: -14.625086784362793
    8. '          ' → logprob: -14.625086784362793
    9. '	       ' → logprob: -15.500086784362793
    10. '```' → logprob: -15.625086784362793

Token 1219: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010521204239921644
    2. '   ' → logprob: -10.000104904174805
    3. '       ' → logprob: -10.625104904174805
    4. 'p' → logprob: -10.625104904174805
    5. '```' → logprob: -11.875104904174805
    6. '<|end|>' → logprob: -13.500104904174805
    7. ' ' → logprob: -13.750104904174805
    8. 'v' → logprob: -14.500104904174805
    9. '          ' → logprob: -15.125104904174805
    10. ',' → logprob: -15.625104904174805

Token 1220: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.00017123986617662013
    2. 'if' → logprob: -9.250171661376953
    3. '           ' → logprob: -9.500171661376953
    4. ' p' → logprob: -15.625171661376953
    5. '   ' → logprob: -16.625171661376953
    6. '       ' → logprob: -17.250171661376953
    7. ' if' → logprob: -19.375171661376953
    8. '
' → logprob: -19.625171661376953
    9. '               ' → logprob: -19.875171661376953
    10. '            
' → logprob: -20.250171661376953

Token 1221: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.1008713702030946e-06
    2. '   ' → logprob: -13.625001907348633
    3. '           ' → logprob: -14.875001907348633
    4. '       ' → logprob: -15.500001907348633
    5. '=' → logprob: -16.625001907348633
    6. '][' → logprob: -16.750001907348633
    7. '
' → logprob: -16.875001907348633
    8. '4' → logprob: -17.375001907348633
    9. '```' → logprob: -17.375001907348633
    10. '#' → logprob: -17.625001907348633

Token 1222: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00043281487887725234
    2. '[' → logprob: -7.750432968139648
    3. '   ' → logprob: -14.625432968139648
    4. '(' → logprob: -14.750432968139648
    5. ' ' → logprob: -15.250432968139648
    6. '
' → logprob: -15.375432968139648
    7. '```' → logprob: -15.375432968139648
    8. '-' → logprob: -16.62543296813965
    9. '  ' → logprob: -16.93793296813965
    10. '=' → logprob: -17.00043296813965

Token 1223: ']' (ID: 60)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.09242904186248779
    2. ' -=' → logprob: -2.7174291610717773
    3. '-' → logprob: -3.8424291610717773
    4. '           ' → logprob: -7.717429161071777
    5. '=' → logprob: -8.467429161071777
    6. '   ' → logprob: -9.842429161071777
    7. '+=' → logprob: -10.092429161071777
    8. '       ' → logprob: -11.467429161071777
    9. '          ' → logprob: -11.967429161071777
    10. '[' → logprob: -12.217429161071777

Token 1224: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.005469605792313814
    2. ' -=' → logprob: -5.755469799041748
    3. '=' → logprob: -6.255469799041748
    4. '-' → logprob: -8.13046932220459
    5. '+=' → logprob: -9.63046932220459
    6. '   ' → logprob: -12.00546932220459
    7. '           ' → logprob: -13.25546932220459
    8. '```' → logprob: -14.75546932220459
    9. '       ' → logprob: -15.13046932220459
    10. ' =' → logprob: -15.50546932220459

Token 1225: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -19.750003814697266
    4. '           ' → logprob: -20.125003814697266
    5. '```' → logprob: -20.250003814697266
    6. '       ' → logprob: -20.625003814697266
    7. '2' → logprob: -21.875003814697266
    8. '[' → logprob: -22.125003814697266
    9. '<|end|>' → logprob: -22.375003814697266
    10. '0' → logprob: -22.500003814697266

Token 1226: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. 'key' → logprob: -17.125015258789062
    4. 'v' → logprob: -18.625015258789062
    5. '```' → logprob: -19.125015258789062
    6. '   ' → logprob: -19.625015258789062
    7. '(' → logprob: -19.750015258789062
    8. '[' → logprob: -19.750015258789062
    9. '۱' → logprob: -20.125015258789062
    10. 'value' → logprob: -20.187515258789062

Token 1227: ';' (ID: 26)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13031421601772308
    2. ';' → logprob: -2.2553141117095947
    3. ',' → logprob: -5.130314350128174
    4. '       ' → logprob: -5.630314350128174
    5. ';p' → logprob: -6.005314350128174
    6. 'p' → logprob: -6.380314350128174
    7. '   ' → logprob: -6.380314350128174
    8. ',p' → logprob: -7.880314350128174
    9. '```' → logprob: -8.255313873291016
    10. ' p' → logprob: -8.505313873291016

Token 1228: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00525284931063652
    2. ' p' → logprob: -5.255252838134766
    3. '           ' → logprob: -10.880252838134766
    4. '   ' → logprob: -16.005252838134766
    5. '	p' → logprob: -16.130252838134766
    6. '       ' → logprob: -17.130252838134766
    7. ' ' → logprob: -17.630252838134766
    8. '(p' → logprob: -18.505252838134766
    9. '          ' → logprob: -19.255252838134766
    10. '         ' → logprob: -19.755252838134766

Token 1229: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.180258191714529e-06
    2. '-' → logprob: -12.750008583068848
    3. '   ' → logprob: -13.625008583068848
    4. '```' → logprob: -14.250008583068848
    5. '=' → logprob: -14.500008583068848
    6. '[-' → logprob: -14.625008583068848
    7. ' ' → logprob: -15.000008583068848
    8. ' [' → logprob: -15.000008583068848
    9. '[
' → logprob: -15.125008583068848
    10. '5' → logprob: -15.625008583068848

Token 1230: '5' (ID: 20)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1606989949941635
    2. '5' → logprob: -1.9106990098953247
    3. '[' → logprob: -8.035698890686035
    4. '1' → logprob: -9.660698890686035
    5. ' ' → logprob: -10.410698890686035
    6. '   ' → logprob: -10.785698890686035
    7. '(' → logprob: -11.410698890686035
    8. '```' → logprob: -12.223198890686035
    9. '
' → logprob: -13.348198890686035
    10. '4' → logprob: -13.598198890686035

Token 1231: ']' (ID: 60)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.11641012877225876
    2. '-=' → logprob: -2.24141001701355
    3. '-' → logprob: -5.741410255432129
    4. '           ' → logprob: -8.241410255432129
    5. ' -' → logprob: -9.991410255432129
    6. '            ' → logprob: -10.491410255432129
    7. '=' → logprob: -11.741410255432129
    8. ' ' → logprob: -12.366410255432129
    9. '          ' → logprob: -12.491410255432129
    10. '   ' → logprob: -12.741410255432129

Token 1232: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.09095800668001175
    2. ' -=' → logprob: -2.4659581184387207
    3. '-' → logprob: -6.215958118438721
    4. '=' → logprob: -11.840957641601562
    5. '   ' → logprob: -12.215957641601562
    6. '+=' → logprob: -13.215957641601562
    7. ' -' → logprob: -13.340957641601562
    8. ' ' → logprob: -13.840957641601562
    9. '    ' → logprob: -14.215957641601562
    10. '```' → logprob: -14.965957641601562

Token 1233: ' (' (ID: 350)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -5.848420551046729e-05
    2. ' key' → logprob: -9.7500581741333
    3. '
' → logprob: -17.875059127807617
    4. '	key' → logprob: -17.875059127807617
    5. '   ' → logprob: -18.500059127807617
    6. '_key' → logprob: -18.625059127807617
    7. '(key' → logprob: -18.625059127807617
    8. '$key' → logprob: -18.875059127807617
    9. '1' → logprob: -19.125059127807617
    10. '[key' → logprob: -19.500059127807617

Token 1234: 'key' (ID: 1898)
  Prédit: 'key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -7.505351095460355e-05
    2. ' key' → logprob: -9.500075340270996
    3. '   ' → logprob: -17.12507438659668
    4. '
' → logprob: -17.25007438659668
    5. '           ' → logprob: -18.12507438659668
    6. '	key' → logprob: -18.25007438659668
    7. ' ' → logprob: -18.75007438659668
    8. '_key' → logprob: -19.00007438659668
    9. '       ' → logprob: -19.62507438659668
    10. 'value' → logprob: -19.75007438659668

Token 1235: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011175730265676975
    2. ')
' → logprob: -5.511175632476807
    3. '<|end|>' → logprob: -5.511175632476807
    4. ' )' → logprob: -6.011175632476807
    5. '<|end|>' → logprob: -8.761176109313965
    6. '       ' → logprob: -8.761176109313965
    7. ' )
' → logprob: -9.886176109313965
    8. '[' → logprob: -9.886176109313965
    9. '
' → logprob: -10.136176109313965
    10. ')return' → logprob: -10.761176109313965

Token 1236: ' key' (ID: 2140)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6408594250679016
    2. 'key' → logprob: -0.7658594250679016
    3. ' key' → logprob: -5.515859603881836
    4. 'v' → logprob: -5.765859603881836
    5. ' p' → logprob: -7.515859603881836
    6. 'k' → logprob: -8.515859603881836
    7. 'is' → logprob: -8.890859603881836
    8. '   ' → logprob: -10.015859603881836
    9. ' isinstance' → logprob: -10.390859603881836
    10. 'not' → logprob: -10.515859603881836

Token 1237: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.799789309501648
    2. ' else' → logprob: -0.924789309501648
    3. ' is' → logprob: -1.924789309501648
    4. '[' → logprob: -4.9247894287109375
    5. ')' → logprob: -8.174789428710938
    6. '!=' → logprob: -8.424789428710938
    7. 'is' → logprob: -9.049789428710938
    8. '   ' → logprob: -10.049789428710938
    9. ' ' → logprob: -10.674789428710938
    10. ' !=' → logprob: -10.799789428710938

Token 1238: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.39661481976509094
    2. 'p' → logprob: -1.2716147899627686
    3. 'key' → logprob: -3.5216147899627686
    4. 'None' → logprob: -5.271615028381348
    5. ' p' → logprob: -5.646615028381348
    6. ' ' → logprob: -5.646615028381348
    7. ' key' → logprob: -5.896615028381348
    8. 'v' → logprob: -6.396615028381348
    9. 'k' → logprob: -8.146615028381348
    10. '   ' → logprob: -8.396615028381348

Token 1239: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.36876964569091797
    2. 'key' → logprob: -1.618769645690918
    3. 'p' → logprob: -2.243769645690918
    4. 'None' → logprob: -5.868769645690918
    5. 'v' → logprob: -6.868769645690918
    6. ' key' → logprob: -9.493769645690918
    7. 'True' → logprob: -9.868769645690918
    8. ' ' → logprob: -10.118769645690918
    9. '1' → logprob: -10.243769645690918
    10. 'k' → logprob: -10.368769645690918

Token 1240: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25208309292793274
    2. ')
' → logprob: -1.5020830631256104
    3. ')
' → logprob: -9.377082824707031
    4. ');' → logprob: -10.502082824707031
    5. '       ' → logprob: -10.877082824707031
    6. ')

' → logprob: -11.377082824707031
    7. ')#' → logprob: -12.877082824707031
    8. ')return' → logprob: -13.002082824707031
    9. ' )' → logprob: -13.627082824707031
    10. '           ' → logprob: -14.127082824707031

Token 1241: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1242: ' update' (ID: 4027)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.45969292521476746
    2. 'return' → logprob: -1.2096929550170898
    3. ' return' → logprob: -3.08469295501709
    4. '       ' → logprob: -5.08469295501709
    5. 'continue' → logprob: -5.20969295501709
    6. 'p' → logprob: -5.58469295501709
    7. 'v' → logprob: -5.95969295501709
    8. ' for' → logprob: -6.83469295501709
    9. ' p' → logprob: -6.95969295501709
    10. 'key' → logprob: -7.08469295501709

Token 1243: ' vertex' (ID: 25363)
  Prédit: 'vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertex' → logprob: -0.36441513895988464
    2. ' vertex' → logprob: -1.864415168762207
    3. 'p' → logprob: -2.114415168762207
    4. ' p' → logprob: -3.614415168762207
    5. 'v' → logprob: -6.614415168762207
    6. ' key' → logprob: -7.364415168762207
    7. 'key' → logprob: -7.989415168762207
    8. '	vertex' → logprob: -8.739415168762207
    9. '<|end|>' → logprob: -9.489415168762207
    10. '(vertex' → logprob: -9.989415168762207

Token 1244: ''s' (ID: 885)
  Prédit: ''s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.004254811909049749
    2. '[' → logprob: -5.5042548179626465
    3. '<|end|>' → logprob: -10.129254341125488
    4. '   ' → logprob: -10.254254341125488
    5. ''' → logprob: -10.254254341125488
    6. '`s' → logprob: -10.629254341125488
    7. '’s' → logprob: -11.129254341125488
    8. 's' → logprob: -11.754254341125488
    9. '['' → logprob: -11.754254341125488
    10. ',' → logprob: -13.254254341125488

Token 1245: ' information' (ID: 2164)
  Prédit: 'information'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'information' → logprob: -0.03806788846850395
    2. ' information' → logprob: -3.2880678176879883
    3. '4' → logprob: -11.288067817687988
    4. '_information' → logprob: -11.538067817687988
    5. '[' → logprob: -13.038067817687988
    6. 'info' → logprob: -14.413067817687988
    7. ' ' → logprob: -14.788067817687988
    8. ''information' → logprob: -15.288067817687988
    9. '情報' → logprob: -15.538067817687988
    10. '5' → logprob: -15.663067817687988

Token 1246: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2747868001461029
    2. '       ' → logprob: -2.0247867107391357
    3. '<|end|>' → logprob: -2.2747867107391357
    4. ' return' → logprob: -6.149786949157715
    5. 'return' → logprob: -6.524786949157715
    6. '          ' → logprob: -8.024786949157715
    7. '<|end|>' → logprob: -8.399786949157715
    8. '        ' → logprob: -8.649786949157715
    9. '            ' → logprob: -8.649786949157715
    10. ' ' → logprob: -8.774786949157715

Token 1247: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1248: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.4041089713573456
    2. '           ' → logprob: -1.154109001159668
    3. 'return' → logprob: -4.904109001159668
    4. '       ' → logprob: -5.654109001159668
    5. 'if' → logprob: -5.779109001159668
    6. ' if' → logprob: -6.529109001159668
    7. ' v' → logprob: -6.779109001159668
    8. ' return' → logprob: -8.154109001159668
    9. '          ' → logprob: -9.904109001159668
    10. '        ' → logprob: -10.029109001159668

Token 1249: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029761260375380516
    2. ' =' → logprob: -3.52976131439209
    3. '=p' → logprob: -12.15476131439209
    4. ',' → logprob: -12.15476131439209
    5. '   ' → logprob: -16.404760360717773
    6. '=
' → logprob: -16.904760360717773
    7. 'p' → logprob: -16.904760360717773
    8. ' ' → logprob: -17.404760360717773
    9. ',p' → logprob: -18.529760360717773
    10. '=v' → logprob: -18.779760360717773

Token 1250: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -8.506661833962426e-05
    2. ' p' → logprob: -9.37508487701416
    3. '   ' → logprob: -16.125085830688477
    4. '	p' → logprob: -17.750085830688477
    5. '<p' → logprob: -18.875085830688477
    6. '       ' → logprob: -19.000085830688477
    7. ' ' → logprob: -19.000085830688477
    8. 'None' → logprob: -19.250085830688477
    9. '    ' → logprob: -19.375085830688477
    10. '  ' → logprob: -19.500085830688477

Token 1251: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1252: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48153120279312134
    2. '<|end|>' → logprob: -0.9815312027931213
    3. '	' → logprob: -5.606531143188477
    4. 'return' → logprob: -6.481531143188477
    5. '	return' → logprob: -7.481531143188477
    6. '   ' → logprob: -7.481531143188477
    7. '        ' → logprob: -8.231531143188477
    8. ' return' → logprob: -9.231531143188477
    9. '
' → logprob: -9.231531143188477
    10. '<|end|>' → logprob: -9.356531143188477

Token 1253: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06240803375840187
    2. '<|end|>' → logprob: -2.937407970428467
    3. 'return' → logprob: -5.062407970428467
    4. ' return' → logprob: -7.937407970428467
    5. ')' → logprob: -8.187408447265625
    6. '   ' → logprob: -8.562408447265625
    7. ' ' → logprob: -9.937408447265625
    8. 'self' (adapté à ' self') → logprob: -10.437408447265625
    9. 'v' → logprob: -10.437408447265625
    10. '	return' → logprob: -10.562408447265625

Token 1254: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.009941420517861843
    2. '.' → logprob: -4.634941577911377
    3. 'root' → logprob: -8.884941101074219
    4. ' .' → logprob: -11.509941101074219
    5. '[root' → logprob: -11.634941101074219
    6. '._' → logprob: -12.259941101074219
    7. '.ro' → logprob: -12.384941101074219
    8. '	root' → logprob: -12.384941101074219
    9. '_root' → logprob: -12.509941101074219
    10. '.
' → logprob: -12.884941101074219

Token 1255: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09281545877456665
    2. ' =' → logprob: -2.467815399169922
    3. '<|end|>' → logprob: -5.592815399169922
    4. '=
' → logprob: -9.592815399169922
    5. ' ' → logprob: -11.092815399169922
    6. ' =
' → logprob: -11.217815399169922
    7. '=None' → logprob: -11.467815399169922
    8. ',' → logprob: -11.592815399169922
    9. '<|end|>' → logprob: -11.592815399169922
    10. 'return' → logprob: -12.967815399169922

Token 1256: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0001584850688232109
    2. ' v' → logprob: -8.750158309936523
    3. '	v' → logprob: -19.000158309936523
    4. '   ' → logprob: -20.250158309936523
    5. 'vq' → logprob: -21.875158309936523
    6. '       ' → logprob: -22.125158309936523
    7. ')v' → logprob: -23.000158309936523
    8. '[v' → logprob: -24.125158309936523
    9. '(v' → logprob: -24.125158309936523
    10. '_v' → logprob: -24.250158309936523

Token 1257: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1258: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1259: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1260: ' self' (ID: 1051)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.029812397435307503
    2. 'self' → logprob: -3.5298123359680176
    3. ' v' → logprob: -10.029812812805176
    4. ' self' → logprob: -11.279812812805176
    5. 'None' → logprob: -12.279812812805176
    6. '<|end|>' → logprob: -15.154812812805176
    7. ' None' → logprob: -15.654812812805176
    8. '	v' → logprob: -16.52981185913086
    9. ')v' → logprob: -17.52981185913086
    10. '	self' → logprob: -18.27981185913086

Token 1261: '.root' (ID: 25375)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.34171295166015625
    2. '<|end|>' → logprob: -1.5917129516601562
    3. '.root' → logprob: -2.5917129516601562
    4. '
' → logprob: -4.966712951660156
    5. '[' → logprob: -6.591712951660156
    6. 'root' → logprob: -6.841712951660156
    7. '[root' → logprob: -7.716712951660156
    8. '.
' → logprob: -8.216712951660156
    9. '._' → logprob: -8.841712951660156
    10. '#' → logprob: -9.466712951660156

Token 1262: '
    
' (ID: 15698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1263: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1264: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0556056872010231
    2. '<|end|>' → logprob: -2.93060564994812
    3. '```' → logprob: -8.3056058883667
    4. '#' → logprob: -8.8056058883667
    5. '<|end|>' → logprob: -9.4306058883667
    6. '   ' → logprob: -9.8056058883667
    7. ')' → logprob: -10.0556058883667
    8. ' def' → logprob: -10.3056058883667
    9. '
' → logprob: -10.5556058883667
    10. 'None' → logprob: -11.5556058883667

Token 1265: ' merge' (ID: 20345)
  Prédit: 'merge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'merge' → logprob: -1.1383938789367676
    2. 'sum' → logprob: -1.6383938789367676
    3. '_sum' → logprob: -1.6383938789367676
    4. 'split' → logprob: -1.8883938789367676
    5. 'clear' → logprob: -3.8883938789367676
    6. 'find' → logprob: -4.013393878936768
    7. 'query' → logprob: -4.263393878936768
    8. '_merge' → logprob: -4.263393878936768
    9. 'get' → logprob: -4.388393878936768
    10. '_query' → logprob: -4.763393878936768

Token 1266: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.088346359931165e-07
    2. ' (' → logprob: -14.875000953674316
    3. '   ' → logprob: -15.750000953674316
    4. '(' → logprob: -16.5
    5. '(s' → logprob: -16.75
    6. 'self' → logprob: -16.75
    7. '(left' → logprob: -17.75
    8. '       ' → logprob: -18.375
    9. '(a' → logprob: -18.375
    10. '(se' → logprob: -18.625

Token 1267: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024787469301372766
    2. 'self' → logprob: -6.37747859954834
    3. '(self' → logprob: -7.37747859954834
    4. '   ' → logprob: -9.12747859954834
    5. ',self' → logprob: -10.75247859954834
    6. '       ' → logprob: -11.87747859954834
    7. 'left' → logprob: -12.75247859954834
    8. ')(' → logprob: -13.00247859954834
    9. ',
' → logprob: -13.50247859954834
    10. '):
' → logprob: -13.62747859954834

Token 1268: ' other' (ID: 1273)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01288654562085867
    2. 'other' → logprob: -5.2628865242004395
    3. 'left' → logprob: -5.5128865242004395
    4. ' self' → logprob: -5.8878865242004395
    5. 'v' → logprob: -8.012887001037598
    6. 'tre' → logprob: -8.387887001037598
    7. ' other' → logprob: -9.262887001037598
    8. ')' → logprob: -10.137887001037598
    9. '(self' → logprob: -10.512887001037598
    10. 'right' → logprob: -10.762887001037598

Token 1269: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.039230961352586746
    2. '):
' → logprob: -3.539231061935425
    3. '):' → logprob: -4.789230823516846
    4. 'self' → logprob: -7.164230823516846
    5. '   ' → logprob: -9.289231300354004
    6. '.root' → logprob: -9.539231300354004
    7. '):
' → logprob: -10.039231300354004
    8. ')' → logprob: -10.289231300354004
    9. '       ' → logprob: -10.414231300354004
    10. ',
' → logprob: -10.664231300354004

Token 1270: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00046856500557623804
    2. 'if' → logprob: -8.750468254089355
    3. 'v' → logprob: -9.000468254089355
    4. '   ' → logprob: -9.375468254089355
    5. 'def' → logprob: -9.375468254089355
    6. ' if' → logprob: -11.625468254089355
    7. 'self' → logprob: -12.125468254089355
    8. ' v' → logprob: -13.625468254089355
    9. '```' → logprob: -14.625468254089355
    10. 'from' → logprob: -15.625468254089355

Token 1271: ' r' (ID: 428)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.748631477355957
    2. 'def' → logprob: -0.748631477355957
    3. 'v' → logprob: -3.623631477355957
    4. 'self' → logprob: -4.123631477355957
    5. '       ' → logprob: -4.748631477355957
    6. '   ' → logprob: -6.623631477355957
    7. 'root' → logprob: -7.248631477355957
    8. 'left' → logprob: -9.748631477355957
    9. 'stack' → logprob: -9.748631477355957
    10. 'class' → logprob: -10.373631477355957

Token 1272: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09095332771539688
    2. '=' → logprob: -2.7159533500671387
    3. 'eturn' → logprob: -5.215953350067139
    4. '   ' → logprob: -5.465953350067139
    5. 'oot' → logprob: -5.590953350067139
    6. 'v' → logprob: -5.715953350067139
    7. 'def' → logprob: -6.965953350067139
    8. 'self' → logprob: -6.965953350067139
    9. '=self' → logprob: -8.09095287322998
    10. 'if' → logprob: -8.21595287322998

Token 1273: ' o' (ID: 293)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5836657285690308
    2. 'l' → logprob: -1.7086657285690308
    3. 'o' → logprob: -2.4586658477783203
    4. 's' → logprob: -3.0836658477783203
    5. 'v' → logprob: -3.0836658477783203
    6. 'other' → logprob: -3.0836658477783203
    7. 'r' → logprob: -3.9586658477783203
    8. 'p' → logprob: -5.20866584777832
    9. 'q' → logprob: -5.45866584777832
    10. 't' → logprob: -5.58366584777832

Token 1274: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13109098374843597
    2. ' =' → logprob: -2.1310908794403076
    3. 'oot' → logprob: -5.756091117858887
    4. '=root' → logprob: -8.006091117858887
    5. ',' → logprob: -8.256091117858887
    6. 'root' → logprob: -8.506091117858887
    7. 'r' → logprob: -9.381091117858887
    8. '=self' → logprob: -9.881091117858887
    9. 'v' → logprob: -11.631091117858887
    10. 'ot' → logprob: -11.756091117858887

Token 1275: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000330220878822729
    2. ' self' → logprob: -8.625329971313477
    3. '[self' → logprob: -9.625329971313477
    4. 'deep' → logprob: -9.875329971313477
    5. '(self' → logprob: -10.500329971313477
    6. '[' → logprob: -13.250329971313477
    7. ' deepcopy' → logprob: -13.375329971313477
    8. '   ' → logprob: -14.000329971313477
    9. '  ' → logprob: -14.875329971313477
    10. ' ' → logprob: -15.250329971313477

Token 1276: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -2.0219828002154827e-05
    2. '.' → logprob: -11.875020027160645
    3. 'root' → logprob: -12.000020027160645
    4. '[' → logprob: -13.250020027160645
    5. ' .' → logprob: -13.625020027160645
    6. '[root' → logprob: -13.875020027160645
    7. '.right' → logprob: -14.000020027160645
    8. '
' → logprob: -14.125020027160645
    9. ',' → logprob: -14.750020027160645
    10. 'oot' → logprob: -15.125020027160645

Token 1277: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001305950863752514
    2. '
' → logprob: -9.125130653381348
    3. ' ,' → logprob: -11.125130653381348
    4. '[' → logprob: -13.125130653381348
    5. ',o' → logprob: -14.000130653381348
    6. '   ' → logprob: -14.125130653381348
    7. ',self' → logprob: -14.125130653381348
    8. ',
' → logprob: -14.375130653381348
    9. ',r' → logprob: -14.375130653381348
    10. '       ' → logprob: -15.000130653381348

Token 1278: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.001705175032839179
    2. ' other' → logprob: -6.376705169677734
    3. '(other' → logprob: -13.251705169677734
    4. ' ' → logprob: -14.876705169677734
    5. '   ' → logprob: -15.626705169677734
    6. 'othe' → logprob: -15.876705169677734
    7. '       ' → logprob: -16.126705169677734
    8. 'deep' → logprob: -16.251705169677734
    9. 'oth' → logprob: -16.376705169677734
    10. '
' → logprob: -17.001705169677734

Token 1279: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.00014418430509977043
    2. 'root' → logprob: -8.875144004821777
    3. '.' → logprob: -12.625144004821777
    4. '[root' → logprob: -14.875144004821777
    5. '.ro' → logprob: -16.000144958496094
    6. '[' → logprob: -16.000144958496094
    7. ' .' → logprob: -16.250144958496094
    8. '
' → logprob: -16.750144958496094
    9. '.r' → logprob: -17.250144958496094
    10. '/root' → logprob: -17.500144958496094

Token 1280: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039183855056762695
    2. '
' → logprob: -3.4141838550567627
    3. 'if' → logprob: -5.789183616638184
    4. ' if' → logprob: -6.414183616638184
    5. ',' → logprob: -8.289183616638184
    6. '[' → logprob: -9.164183616638184
    7. '        
' → logprob: -9.539183616638184
    8. 'while' → logprob: -9.539183616638184
    9. '
' → logprob: -9.914183616638184
    10. 'def' → logprob: -9.914183616638184

Token 1281: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06550632417201996
    2. 'if' → logprob: -3.0655062198638916
    3. ' if' → logprob: -4.190506458282471
    4. '
' → logprob: -7.440506458282471
    5. 'while' → logprob: -8.065505981445312
    6. '```' → logprob: -8.440505981445312
    7. '[' → logprob: -8.565505981445312
    8. '#' → logprob: -9.065505981445312
    9. 'v' → logprob: -10.565505981445312
    10. 'None' → logprob: -10.565505981445312

Token 1282: ' temp' (ID: 5484)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005685599520802498
    2. 'while' → logprob: -5.255685806274414
    3. '       ' → logprob: -8.255685806274414
    4. 'def' → logprob: -9.505685806274414
    5. 'stack' → logprob: -9.505685806274414
    6. 'v' → logprob: -10.880685806274414
    7. ' if' → logprob: -11.380685806274414
    8. '
' → logprob: -12.255685806274414
    9. '   ' → logprob: -12.255685806274414
    10. '        
' → logprob: -13.755685806274414

Token 1283: '_v' (ID: 5390)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07217173278331757
    2. '=' → logprob: -2.697171688079834
    3. '=[]' → logprob: -7.197171688079834
    4. '_stack' → logprob: -7.822171688079834
    5. 'stack' → logprob: -8.072172164916992
    6. ',' → logprob: -8.197172164916992
    7. '=None' → logprob: -8.322172164916992
    8. '=[]
' → logprob: -9.447172164916992
    9. 'v' → logprob: -10.197172164916992
    10. 'def' → logprob: -10.447172164916992

Token 1284: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3142809271812439
    2. '=' → logprob: -1.3142809867858887
    3. '=None' → logprob: -7.314280986785889
    4. ',' → logprob: -8.06428050994873
    5. '=[]' → logprob: -11.18928050994873
    6. '=r' → logprob: -12.56428050994873
    7. '=
' → logprob: -12.68928050994873
    8. '=[]
' → logprob: -13.31428050994873
    9. '1' → logprob: -13.56428050994873
    10. '=[' → logprob: -13.68928050994873

Token 1285: ' [' (ID: 723)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.8744382262229919
    2. '[T' → logprob: -1.6244382858276367
    3. '[r' → logprob: -2.1244382858276367
    4. '[' → logprob: -2.2494382858276367
    5. 'self' → logprob: -2.8744382858276367
    6. '[self' → logprob: -3.1244382858276367
    7. 'r' → logprob: -3.4994382858276367
    8. '[o' → logprob: -4.374438285827637
    9. 'Tre' → logprob: -4.499438285827637
    10. '(None' → logprob: -6.374438285827637

Token 1286: 'r' (ID: 81)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0009313485352322459
    2. 'r' → logprob: -7.000931262969971
    3. ' None' → logprob: -11.375931739807129
    4. '(None' → logprob: -12.875931739807129
    5. 'o' → logprob: -13.000931739807129
    6. '[' → logprob: -13.125931739807129
    7. '[r' → logprob: -14.500931739807129
    8. '0' → logprob: -14.625931739807129
    9. 'temp' → logprob: -14.750931739807129
    10. '[o' → logprob: -16.125930786132812

Token 1287: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3325585722923279
    2. '[' → logprob: -1.7075586318969727
    3. 'None' → logprob: -2.7075586318969727
    4. ',None' → logprob: -3.5825586318969727
    5. '(None' → logprob: -5.457558631896973
    6. ' None' → logprob: -6.957558631896973
    7. '0' → logprob: -7.457558631896973
    8. 'if' → logprob: -8.207558631896973
    9. ' ,' → logprob: -8.457558631896973
    10. '   ' → logprob: -8.832558631896973

Token 1288: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.0034123710356652737
    2. ' o' → logprob: -5.753412246704102
    3. 'None' → logprob: -8.753412246704102
    4. 'r' → logprob: -9.753412246704102
    5. ' None' → logprob: -12.253412246704102
    6. '	o' → logprob: -12.253412246704102
    7. '   ' → logprob: -13.003412246704102
    8. '0' → logprob: -13.378412246704102
    9. ''o' → logprob: -13.628412246704102
    10. '[o' → logprob: -13.753412246704102

Token 1289: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05272417515516281
    2. ',None' → logprob: -3.4277241230010986
    3. 'None' → logprob: -4.052724361419678
    4. ']' → logprob: -7.552724361419678
    5. ' None' → logprob: -7.927724361419678
    6. '[' → logprob: -8.30272388458252
    7. '(None' → logprob: -8.42772388458252
    8. ' ,' → logprob: -9.05272388458252
    9. '][' → logprob: -12.05272388458252
    10. ',
' → logprob: -12.17772388458252

Token 1290: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0004261468129698187
    2. '0' → logprob: -8.000426292419434
    3. ' None' → logprob: -9.875426292419434
    4. 'float' → logprob: -11.250426292419434
    5. '(None' → logprob: -11.625426292419434
    6. 'r' → logprob: -11.875426292419434
    7. 'random' → logprob: -12.125426292419434
    8. ',None' → logprob: -13.500426292419434
    9. 'max' → logprob: -13.750426292419434
    10. 'False' → logprob: -14.000426292419434

Token 1291: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008523935684934258
    2. ',None' → logprob: -7.750852584838867
    3. 'None' → logprob: -8.500852584838867
    4. ' ,' → logprob: -8.625852584838867
    5. ' None' → logprob: -11.000852584838867
    6. ']' → logprob: -11.375852584838867
    7. '(None' → logprob: -12.375852584838867
    8. ',
' → logprob: -12.625852584838867
    9. '<|end|>' → logprob: -13.875852584838867
    10. ',null' → logprob: -14.625852584838867

Token 1292: ' float' (ID: 4428)
  Prédit: 'random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'random' → logprob: -0.9340676069259644
    2. 'float' → logprob: -1.4340676069259644
    3. '-' → logprob: -1.8090676069259644
    4. 'max' → logprob: -2.684067726135254
    5. '0' → logprob: -3.184067726135254
    6. '1' → logprob: -3.309067726135254
    7. '-r' → logprob: -3.559067726135254
    8. '-inf' → logprob: -4.809067726135254
    9. '(random' → logprob: -5.059067726135254
    10. ' float' → logprob: -5.684067726135254

Token 1293: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.07929017394781113
    2. '('-' → logprob: -2.5792901515960693
    3. ''-' → logprob: -8.829290390014648
    4. '("' → logprob: -9.204290390014648
    5. '("-' → logprob: -9.829290390014648
    6. ''' → logprob: -9.954290390014648
    7. '-' → logprob: -11.579290390014648
    8. 'inf' → logprob: -11.579290390014648
    9. '(' → logprob: -11.829290390014648
    10. '-inf' → logprob: -11.954290390014648

Token 1294: 'inf' (ID: 22226)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.1968332976102829
    2. ''-' → logprob: -2.196833372116089
    3. ''' → logprob: -3.071833372116089
    4. '-inf' → logprob: -4.07183313369751
    5. 'inf' → logprob: -6.07183313369751
    6. ''ins' → logprob: -8.446833610534668
    7. ''s' → logprob: -8.571833610534668
    8. ''t' → logprob: -8.696833610534668
    9. ''inc' → logprob: -8.946833610534668
    10. ''int' → logprob: -9.446833610534668

Token 1295: ''),' (ID: 10047)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.029026905074715614
    2. ')]' → logprob: -3.654026985168457
    3. ',' → logprob: -6.654026985168457
    4. ')' → logprob: -7.154026985168457
    5. ')],' → logprob: -8.154026985168457
    6. ' ),' → logprob: -8.904026985168457
    7. ''),' → logprob: -9.404026985168457
    8. '],' → logprob: -9.779026985168457
    9. '')]' → logprob: -10.154026985168457
    10. ''],' → logprob: -11.404026985168457

Token 1296: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8956924676895142
    2. '(' → logprob: -1.8956924676895142
    3. 'self' → logprob: -1.8956924676895142
    4. '(r' → logprob: -2.1456923484802246
    5. '(self' → logprob: -2.5206923484802246
    6. '(T' → logprob: -3.1456923484802246
    7. 'Tre' → logprob: -3.8956923484802246
    8. '1' → logprob: -4.645692348480225
    9. 'r' → logprob: -4.770692348480225
    10. '((' → logprob: -5.145692348480225

Token 1297: '1' (ID: 16)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.2482942342758179
    2. 'Tre' → logprob: -1.2482942342758179
    3. '(T' → logprob: -1.8732942342758179
    4. '0' → logprob: -2.2482943534851074
    5. '(r' → logprob: -2.7482943534851074
    6. '(self' → logprob: -2.8732943534851074
    7. '(' → logprob: -3.7482943534851074
    8. 'r' → logprob: -4.248294353485107
    9. '((' → logprob: -5.623294353485107
    10. '1' → logprob: -6.748294353485107

Token 1298: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00036715567694045603
    2. ' ,' → logprob: -8.125367164611816
    3. ',None' → logprob: -10.500367164611816
    4. ']' → logprob: -11.250367164611816
    5. '6' → logprob: -11.625367164611816
    6. '0' → logprob: -11.875367164611816
    7. '+' → logprob: -12.875367164611816
    8. 'None' → logprob: -13.125367164611816
    9. '1' → logprob: -13.625367164611816
    10. '2' → logprob: -13.750367164611816

Token 1299: ' r' (ID: 428)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.306638240814209
    2. '(self' → logprob: -1.806638240814209
    3. '(o' → logprob: -1.931638240814209
    4. 'Tre' → logprob: -1.931638240814209
    5. '(T' → logprob: -2.306638240814209
    6. '(' → logprob: -3.181638240814209
    7. '(max' → logprob: -3.806638240814209
    8. '(len' → logprob: -3.806638240814209
    9. 'len' → logprob: -3.806638240814209
    10. '(r' → logprob: -3.931638240814209

Token 1300: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014964618720114231
    2. '4' → logprob: -4.264964580535889
    3. ',' → logprob: -7.514964580535889
    4. '5' → logprob: -9.764965057373047
    5. 'and' → logprob: -9.889965057373047
    6. ' ' → logprob: -10.764965057373047
    7. '```' → logprob: -10.764965057373047
    8. '   ' → logprob: -11.514965057373047
    9. ' and' → logprob: -11.639965057373047
    10. '6' → logprob: -11.639965057373047

Token 1301: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -2.8802491215174086e-05
    2. '```' → logprob: -11.250028610229492
    3. ' ' → logprob: -12.000028610229492
    4. '[' → logprob: -12.500028610229492
    5. '
' → logprob: -13.250028610229492
    6. '``' → logprob: -14.375028610229492
    7. ',' → logprob: -14.625028610229492
    8. '   ' → logprob: -14.625028610229492
    9. '1' → logprob: -15.125028610229492
    10. '(' → logprob: -15.250028610229492

Token 1302: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3124822676181793
    2. ']' → logprob: -2.0624823570251465
    3. '+' → logprob: -2.8124823570251465
    4. '],' → logprob: -3.9374823570251465
    5. ' +' → logprob: -3.9374823570251465
    6. ']+' → logprob: -4.1874823570251465
    7. '[' → logprob: -4.9374823570251465
    8. ' if' → logprob: -4.9374823570251465
    9. ' ,' → logprob: -5.0624823570251465
    10. '][' → logprob: -5.8124823570251465

Token 1303: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3915635943412781
    2. '+' → logprob: -1.7665636539459229
    3. ' +' → logprob: -2.016563653945923
    4. '+r' → logprob: -4.016563415527344
    5. ' ,' → logprob: -7.266563415527344
    6. ' if' → logprob: -7.641563415527344
    7. '[' → logprob: -8.516563415527344
    8. ',r' → logprob: -8.891563415527344
    9. ',
' → logprob: -9.141563415527344
    10. ']' → logprob: -9.516563415527344

Token 1304: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.25233858823776245
    2. '(o' → logprob: -1.6273386478424072
    3. ' o' → logprob: -4.502338409423828
    4. '(' → logprob: -4.502338409423828
    5. ' (' → logprob: -5.627338409423828
    6. '0' → logprob: -7.502338409423828
    7. '   ' → logprob: -9.377338409423828
    8. ' ' → logprob: -9.502338409423828
    9. '	o' → logprob: -11.377338409423828
    10. '  ' → logprob: -11.627338409423828

Token 1305: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009418348199687898
    2. '4' → logprob: -7.125941753387451
    3. ',' → logprob: -9.87594223022461
    4. '   ' → logprob: -10.25094223022461
    5. '][' → logprob: -11.37594223022461
    6. ']' → logprob: -12.12594223022461
    7. '[
' → logprob: -12.25094223022461
    8. '5' → logprob: -12.50094223022461
    9. ' [' → logprob: -12.62594223022461
    10. ' ' → logprob: -12.62594223022461

Token 1306: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -2.7133641196996905e-05
    2. '[' → logprob: -11.12502670288086
    3. ' ' → logprob: -12.25002670288086
    4. '```' → logprob: -12.87502670288086
    5. '   ' → logprob: -13.12502670288086
    6. '1' → logprob: -14.00002670288086
    7. '5' → logprob: -15.18752670288086
    8. '(' → logprob: -15.50002670288086
    9. '' → logprob: -15.50002670288086
    10. '۴' → logprob: -15.56252670288086

Token 1307: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005549270659685135
    2. ' ,' → logprob: -5.380549430847168
    3. '],' → logprob: -7.505549430847168
    4. ']' → logprob: -8.505549430847168
    5. '   ' → logprob: -10.255549430847168
    6. ' -' → logprob: -10.505549430847168
    7. ',
' → logprob: -10.630549430847168
    8. '-' → logprob: -10.630549430847168
    9. ' if' → logprob: -11.005549430847168
    10. '[' → logprob: -11.630549430847168

Token 1308: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.010654677636921406
    2. '0' → logprob: -5.510654449462891
    3. 'None' → logprob: -5.760654449462891
    4. ' r' → logprob: -6.885654449462891
    5. 'o' → logprob: -7.010654449462891
    6. '(' → logprob: -7.385654449462891
    7. '(r' → logprob: -8.01065444946289
    8. '(None' → logprob: -8.38565444946289
    9. '(o' → logprob: -9.51065444946289
    10. ' (' → logprob: -10.26065444946289

Token 1309: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002251007128506899
    2. '5' → logprob: -6.127251148223877
    3. ',' → logprob: -11.002250671386719
    4. '```' → logprob: -11.502250671386719
    5. '   ' → logprob: -11.627250671386719
    6. ' [' → logprob: -12.252250671386719
    7. ' ' → logprob: -12.502250671386719
    8. '[
' → logprob: -12.689750671386719
    9. '
' → logprob: -12.752250671386719
    10. '#' → logprob: -13.377250671386719

Token 1310: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0006395269301719964
    2. '4' → logprob: -7.50063943862915
    3. '[' → logprob: -9.625639915466309
    4. '1' → logprob: -12.375639915466309
    5. ' ' → logprob: -12.875639915466309
    6. '```' → logprob: -13.000639915466309
    7. '   ' → logprob: -13.250639915466309
    8. '' → logprob: -13.750639915466309
    9. '
' → logprob: -13.875639915466309
    10. '(' → logprob: -14.000639915466309

Token 1311: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5234287977218628
    2. ' +' → logprob: -0.8984287977218628
    3. '[' → logprob: -8.398428916931152
    4. '+r' → logprob: -10.523428916931152
    5. '+
' → logprob: -11.023428916931152
    6. '+[' → logprob: -11.398428916931152
    7. ']+' → logprob: -11.898428916931152
    8. ']' → logprob: -12.648428916931152
    9. '+]' → logprob: -12.773428916931152
    10. ' ' → logprob: -13.023428916931152

Token 1312: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6326797604560852
    2. ' +' → logprob: -0.7576797604560852
    3. '+r' → logprob: -9.75767993927002
    4. '+
' → logprob: -11.88267993927002
    5. ',' → logprob: -12.25767993927002
    6. ' +
' → logprob: -13.13267993927002
    7. '[' → logprob: -13.50767993927002
    8. ' ' → logprob: -13.63267993927002
    9. '+,' → logprob: -14.25767993927002
    10. '   ' → logprob: -14.38267993927002

Token 1313: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.0013294065138325095
    2. ' o' → logprob: -6.62632942199707
    3. '(o' → logprob: -13.75132942199707
    4. '       ' → logprob: -14.37632942199707
    5. '	o' → logprob: -14.75132942199707
    6. '   ' → logprob: -14.87632942199707
    7. '[o' → logprob: -15.62632942199707
    8. 'os' → logprob: -15.62632942199707
    9. '0' → logprob: -15.75132942199707
    10. ''o' → logprob: -16.37632942199707

Token 1314: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004926258116029203
    2. '5' → logprob: -7.625492572784424
    3. '[
' → logprob: -13.375493049621582
    4. '```' → logprob: -13.750493049621582
    5. '   ' → logprob: -14.000493049621582
    6. '(' → logprob: -15.625493049621582
    7. ''[' → logprob: -15.875493049621582
    8. ' [' → logprob: -16.000492095947266
    9. '-' → logprob: -16.312992095947266
    10. '1' → logprob: -16.562992095947266

Token 1315: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.3663626305060461e-05
    2. '[' → logprob: -11.87501335144043
    3. ' ' → logprob: -13.50001335144043
    4. '1' → logprob: -13.87501335144043
    5. '   ' → logprob: -13.93751335144043
    6. '```' → logprob: -13.93751335144043
    7. '
' → logprob: -14.56251335144043
    8. '0' → logprob: -15.37501335144043
    9. '۵' → logprob: -15.62501335144043
    10. '4' → logprob: -15.68751335144043

Token 1316: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012142978608608246
    2. ',' → logprob: -4.512143135070801
    3. ' ]' → logprob: -7.137143135070801
    4. ']
' → logprob: -8.2621431350708
    5. '   ' → logprob: -11.0121431350708
    6. '       ' → logprob: -12.0121431350708
    7. ']

' → logprob: -12.6371431350708
    8. ' ,' → logprob: -12.7621431350708
    9. ']
' → logprob: -12.8871431350708
    10. '']' → logprob: -13.1371431350708

Token 1317: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1318: ' virtual' (ID: 7346)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.1846656799316406
    2. 'def' → logprob: -1.3096656799316406
    3. 'if' → logprob: -1.5596656799316406
    4. 'v' → logprob: -2.1846656799316406
    5. 'r' → logprob: -4.059665679931641
    6. 'left' → logprob: -4.184665679931641
    7. 'stack' → logprob: -4.184665679931641
    8. 'direction' → logprob: -4.309665679931641
    9. 'self' → logprob: -4.434665679931641
    10. '[' → logprob: -4.809665679931641

Token 1319: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38656875491142273
    2. '_v' → logprob: -2.386568784713745
    3. '=' → logprob: -2.636568784713745
    4. '_left' → logprob: -3.136568784713745
    5. 'left' → logprob: -3.761568784713745
    6. 'node' → logprob: -3.761568784713745
    7. '_node' → logprob: -3.886568784713745
    8. '[' → logprob: -4.386568546295166
    9. '_root' → logprob: -4.511568546295166
    10. 'v' → logprob: -5.011568546295166

Token 1320: ' self' (ID: 1051)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.8466742634773254
    2. '[' → logprob: -1.0966742038726807
    3. '[temp' → logprob: -1.4716742038726807
    4. ' [' → logprob: -5.09667444229126
    5. '[self' → logprob: -7.97167444229126
    6. ' temp' → logprob: -8.221673965454102
    7. '[T' → logprob: -8.346673965454102
    8. 'None' → logprob: -9.471673965454102
    9. '[t' → logprob: -9.471673965454102
    10. 'self' → logprob: -9.721673965454102

Token 1321: '._' (ID: 2697)
  Prédit: '.root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.78092360496521
    2. '._' → logprob: -1.40592360496521
    3. 'root' → logprob: -1.40592360496521
    4. 'class' → logprob: -3.90592360496521
    5. '.merge' → logprob: -4.405923843383789
    6. '[' → logprob: -5.280923843383789
    7. '   ' → logprob: -6.155923843383789
    8. 'def' → logprob: -6.280923843383789
    9. '
' → logprob: -6.280923843383789
    10. '[root' → logprob: -6.530923843383789

Token 1322: 'tre' (ID: 4086)
  Prédit: 'tre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tre' → logprob: -0.00033581978641450405
    2. 'Tre' → logprob: -8.375335693359375
    3. 'construct' → logprob: -10.000335693359375
    4. 'rotate' → logprob: -10.625335693359375
    5. 'class' → logprob: -11.875335693359375
    6. 'tree' → logprob: -12.125335693359375
    7. 'tro' → logprob: -12.750335693359375
    8. 'copy' → logprob: -12.875335693359375
    9. '_t' → logprob: -13.250335693359375
    10. 'rot' → logprob: -13.500335693359375

Token 1323: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.0002120038407156244
    2. 'p' → logprob: -9.125211715698242
    3. 'ep' → logprob: -10.625211715698242
    4. 'temp' → logprob: -11.000211715698242
    5. '
' → logprob: -11.875211715698242
    6. '   ' → logprob: -12.000211715698242
    7. '[' → logprob: -12.375211715698242
    8. '(temp' → logprob: -12.375211715698242
    9. '(ap' → logprob: -12.500211715698242
    10. '```' → logprob: -12.875211715698242

Token 1324: '(temp' (ID: 19094)
  Prédit: '(temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(temp' → logprob: -0.0010216168593615294
    2. 'temp' → logprob: -7.126021385192871
    3. '[temp' → logprob: -9.251021385192871
    4. '(r' → logprob: -9.501021385192871
    5. '([' → logprob: -11.376021385192871
    6. '(t' → logprob: -11.626021385192871
    7. '((' → logprob: -12.001021385192871
    8. '(tmp' → logprob: -12.126021385192871
    9. '(v' → logprob: -12.501021385192871
    10. '(' → logprob: -12.876021385192871

Token 1325: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.001224274281412363
    2. 'v' → logprob: -6.751224040985107
    3. 'temp' → logprob: -10.501224517822266
    4. 'node' → logprob: -11.126224517822266
    5. 'emp' → logprob: -12.626224517822266
    6. '[' → logprob: -13.876224517822266
    7. '
' → logprob: -13.876224517822266
    8. 'r' → logprob: -14.126224517822266
    9. '[v' → logprob: -14.251224517822266
    10. '_r' → logprob: -14.501224517822266

Token 1326: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20197349786758423
    2. ')
' → logprob: -1.7019734382629395
    3. ').' → logprob: -8.326973915100098
    4. ')
' → logprob: -9.326973915100098
    5. ');' → logprob: -9.951973915100098
    6. '.root' → logprob: -9.951973915100098
    7. '())' → logprob: -10.451973915100098
    8. '())
' → logprob: -10.576973915100098
    9. '   ' → logprob: -11.201973915100098
    10. '()' → logprob: -11.451973915100098

Token 1327: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01338021270930767
    2. '<|end|>' → logprob: -4.76338005065918
    3. '[' → logprob: -6.63838005065918
    4. 'return' → logprob: -7.13838005065918
    5. 'def' → logprob: -7.38838005065918
    6. ')' → logprob: -7.51338005065918
    7. ' if' → logprob: -7.88838005065918
    8. '
' → logprob: -8.63838005065918
    9. ' return' → logprob: -9.38838005065918
    10. '#' → logprob: -9.51338005065918

Token 1328: ' self' (ID: 1051)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6518147587776184
    2. 'temp' → logprob: -2.2768146991729736
    3. 'virtual' → logprob: -2.4018146991729736
    4. 'left' → logprob: -2.9018146991729736
    5. 'v' → logprob: -3.0268146991729736
    6. 'while' → logprob: -3.1518146991729736
    7. 'def' → logprob: -3.5268146991729736
    8. 'if' → logprob: -4.151814937591553
    9. 'l' → logprob: -4.151814937591553
    10. 'r' → logprob: -4.276814937591553

Token 1329: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.0006284446571953595
    2. 'root' → logprob: -8.000628471374512
    3. '._' → logprob: -8.375628471374512
    4. '.merge' → logprob: -10.375628471374512
    5. '.sort' → logprob: -11.750628471374512
    6. '=root' → logprob: -12.375628471374512
    7. ' =' → logprob: -13.000628471374512
    8. '.' → logprob: -13.000628471374512
    9. '[root' → logprob: -13.000628471374512
    10. '.rotate' → logprob: -13.375628471374512

Token 1330: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269739866256714
    2. ' =' → logprob: -2.126974105834961
    3. ',' → logprob: -10.126974105834961
    4. '[' → logprob: -12.751974105834961
    5. '   ' → logprob: -14.501974105834961
    6. ')' → logprob: -14.751974105834961
    7. '=None' → logprob: -15.126974105834961
    8. ' ' → logprob: -15.376974105834961
    9. '=r' → logprob: -15.376974105834961
    10. '=self' → logprob: -15.376974105834961

Token 1331: ' virtual' (ID: 7346)
  Prédit: 'virtual'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'virtual' → logprob: -0.027840539813041687
    2. 'temp' → logprob: -3.7778406143188477
    3. 'self' → logprob: -5.652840614318848
    4. ' virtual' → logprob: -7.277840614318848
    5. 'None' → logprob: -8.652840614318848
    6. ' temp' → logprob: -9.652840614318848
    7. 'temporary' → logprob: -9.777840614318848
    8. '	virtual' → logprob: -10.902840614318848
    9. ' self' → logprob: -11.152840614318848
    10. 'v' → logprob: -11.902840614318848

Token 1332: '.delete' (ID: 11951)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20324736833572388
    2. '<|end|>' → logprob: -1.703247308731079
    3. '<|end|>' → logprob: -7.078247547149658
    4. '
' → logprob: -8.4532470703125
    5. ' =' → logprob: -9.3282470703125
    6. '(None' → logprob: -9.4532470703125
    7. '.merge' → logprob: -9.8282470703125
    8. '.right' → logprob: -9.8282470703125
    9. '.' → logprob: -9.8282470703125
    10. '(' → logprob: -9.9532470703125

Token 1333: '(None' (ID: 65126)
  Prédit: '(None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(None' → logprob: -0.0026081178802996874
    2. 'None' → logprob: -6.002608299255371
    3. '(' → logprob: -9.002608299255371
    4. '(
' → logprob: -12.377608299255371
    5. ' None' → logprob: -12.627608299255371
    6. ' (' → logprob: -14.377608299255371
    7. '(N' → logprob: -14.627608299255371
    8. '   ' → logprob: -16.252607345581055
    9. '
' → logprob: -16.252607345581055
    10. '()' → logprob: -16.377607345581055

Token 1334: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002244227332994342
    2. '())' → logprob: -6.752243995666504
    3. ' )' → logprob: -7.002243995666504
    4. ')[' → logprob: -10.127243995666504
    5. ' ())' → logprob: -10.377243995666504
    6. '()' → logprob: -10.502243995666504
    7. ')
' → logprob: -10.627243995666504
    8. '[' → logprob: -11.127243995666504
    9. '(' → logprob: -11.252243995666504
    10. ')return' → logprob: -13.002243995666504

Token 1335: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1336: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1337: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0170206930488348
    2. 'virtual' → logprob: -4.5170207023620605
    3. ' self' → logprob: -5.1420207023620605
    4. ' virtual' → logprob: -9.392020225524902
    5. 'None' → logprob: -10.642020225524902
    6. ' None' → logprob: -13.642020225524902
    7. 'True' → logprob: -15.267020225524902
    8. '	self' → logprob: -15.642020225524902
    9. ' ' → logprob: -16.64202117919922
    10. '(self' → logprob: -16.89202117919922

Token 1338: '.root' (ID: 25375)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1339: '
    
' (ID: 15698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1340: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1341: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1342: ' split' (ID: 12648)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.03755500540137291
    2. ' split' → logprob: -4.03755521774292
    3. '_split' → logprob: -4.41255521774292
    4. 'sum' → logprob: -6.66255521774292
    5. 'copy' → logprob: -7.28755521774292
    6. '_sum' → logprob: -7.28755521774292
    7. 'merge' → logprob: -7.66255521774292
    8. 'find' → logprob: -7.78755521774292
    9. 'clear' → logprob: -7.91255521774292
    10. '_keys' → logprob: -8.162554740905762

Token 1343: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.531315314830863e-06
    2. ' (' → logprob: -13.125003814697266
    3. 'self' → logprob: -14.250003814697266
    4. 'def' → logprob: -15.000003814697266
    5. '(' → logprob: -15.250003814697266
    6. '(s' → logprob: -16.375003814697266
    7. '   ' → logprob: -16.750003814697266
    8. '(se' → logprob: -17.375003814697266
    9. '(sel' → logprob: -17.500003814697266
    10. ',' → logprob: -17.625003814697266

Token 1344: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5248950123786926
    2. '(self' → logprob: -1.0248949527740479
    3. 'self' → logprob: -3.024894952774048
    4. ')' → logprob: -7.774895191192627
    5. 'def' → logprob: -8.899894714355469
    6. '   ' → logprob: -9.399894714355469
    7. ',self' → logprob: -9.399894714355469
    8. ' (' → logprob: -10.024894714355469
    9. '       ' → logprob: -10.024894714355469
    10. ' self' → logprob: -10.274894714355469

Token 1345: ' i' (ID: 575)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.10084597021341324
    2. 'self' → logprob: -2.4758460521698
    3. ' key' → logprob: -4.475845813751221
    4. ' self' → logprob: -7.975845813751221
    5. 'index' → logprob: -9.475846290588379
    6. '   ' → logprob: -11.350846290588379
    7. '       ' → logprob: -12.850846290588379
    8. '_key' → logprob: -13.100846290588379
    9. '
' → logprob: -13.225846290588379
    10. 'Key' → logprob: -13.350846290588379

Token 1346: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014872431056573987
    2. 'self' → logprob: -6.7514872550964355
    3. '):
' → logprob: -8.626486778259277
    4. '   ' → logprob: -10.126486778259277
    5. '       ' → logprob: -10.251486778259277
    6. '):' → logprob: -10.626486778259277
    7. '(self' → logprob: -10.751486778259277
    8. ' self' → logprob: -11.876486778259277
    9. ' ,' → logprob: -12.001486778259277
    10. ',
' → logprob: -13.751486778259277

Token 1347: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000891332805622369
    2. 'v' → logprob: -7.125891208648682
    3. ' if' → logprob: -10.25089168548584
    4. 'count' → logprob: -10.62589168548584
    5. ' v' → logprob: -11.00089168548584
    6. 'if' → logprob: -12.50089168548584
    7. '	' → logprob: -13.37589168548584
    8. ' count' → logprob: -13.50089168548584
    9. '   ' → logprob: -13.62589168548584
    10. '#' → logprob: -14.12589168548584

Token 1348: ' count' (ID: 3605)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.18392448127269745
    2. 'if' → logprob: -2.558924436569214
    3. 'def' → logprob: -2.808924436569214
    4. 'v' → logprob: -4.058924674987793
    5. '       ' → logprob: -4.933924674987793
    6. 'less' → logprob: -6.683924674987793
    7. 'l' → logprob: -6.933924674987793
    8. 'root' → logprob: -7.183924674987793
    9. 'key' → logprob: -7.433924674987793
    10. 'result' → logprob: -7.808924674987793

Token 1349: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02056477777659893
    2. '=' → logprob: -3.8955647945404053
    3. '=self' → logprob: -10.895565032958984
    4. '   ' → logprob: -13.270565032958984
    5. '(self' → logprob: -14.145565032958984
    6. 'self' → logprob: -14.895565032958984
    7. '=count' → logprob: -14.895565032958984
    8. '    ' → logprob: -15.395565032958984
    9. ' ' → logprob: -15.395565032958984
    10. 'count' → logprob: -15.770565032958984

Token 1350: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0040952586568892
    2. ' self' → logprob: -5.504095077514648
    3. 'lambda' → logprob: -11.254095077514648
    4. '   ' → logprob: -13.504095077514648
    5. '(self' → logprob: -14.254095077514648
    6. '       ' → logprob: -14.504095077514648
    7. ' ' → logprob: -14.754095077514648
    8. '	self' → logprob: -15.254095077514648
    9. '
' → logprob: -15.379095077514648
    10. ' lambda' → logprob: -15.504095077514648

Token 1351: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -7.576873758807778e-05
    2. '_count' → logprob: -9.625075340270996
    3. '_root' → logprob: -12.500075340270996
    4. '   ' → logprob: -13.000075340270996
    5. 'self' → logprob: -13.500075340270996
    6. '_self' → logprob: -14.000075340270996
    7. ' _' → logprob: -14.750075340270996
    8. 'def' → logprob: -15.125075340270996
    9. '.count' → logprob: -15.750075340270996
    10. ' ' → logprob: -16.250076293945312

Token 1352: 'count' (ID: 5420)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.018151111900806427
    2. 'count' → logprob: -4.01815128326416
    3. 'def' → logprob: -14.51815128326416
    4. 'Count' → logprob: -16.018150329589844
    5. '```' → logprob: -16.018150329589844
    6. 'self' → logprob: -16.268150329589844
    7. ' count' → logprob: -16.268150329589844
    8. 'static' → logprob: -17.018150329589844
    9. '.count' → logprob: -17.268150329589844
    10. '__' → logprob: -17.393150329589844

Token 1353: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7121488451957703
    2. '
' → logprob: -1.212148904800415
    3. '(self' → logprob: -1.962148904800415
    4. 'self' → logprob: -3.587148904800415
    5. ' self' → logprob: -4.087148666381836
    6. '<|end|>' → logprob: -4.587148666381836
    7. ',' → logprob: -4.712148666381836
    8. '	self' → logprob: -6.337148666381836
    9. '[self' → logprob: -6.962148666381836
    10. 'def' → logprob: -7.087148666381836

Token 1354: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3994506597518921
    2. 'v' → logprob: -1.274450659751892
    3. ' v' → logprob: -3.7744507789611816
    4. ' if' → logprob: -3.8994507789611816
    5. 'if' → logprob: -5.899450778961182
    6. ' left' → logprob: -7.024450778961182
    7. 'left' → logprob: -7.399450778961182
    8. 'def' → logprob: -7.399450778961182
    9. '```' → logprob: -7.524450778961182
    10. ',' → logprob: -8.024450302124023

Token 1355: ' if' (ID: 538)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.7517663240432739
    2. 'v' → logprob: -1.126766324043274
    3. 'if' (adapté à ' if') → logprob: -2.2517662048339844
    4. 'def' → logprob: -2.5017662048339844
    5. 'l' → logprob: -4.876766204833984
    6. ' left' → logprob: -6.126766204833984
    7. 'result' → logprob: -6.501766204833984
    8. 'res' → logprob: -6.626766204833984
    9. 'less' → logprob: -7.126766204833984
    10. '   ' → logprob: -7.376766204833984

Token 1356: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.28587058186531067
    2. ' i' → logprob: -1.4108705520629883
    3. 'self' → logprob: -6.160870552062988
    4. ' not' → logprob: -6.910870552062988
    5. ' self' → logprob: -7.160870552062988
    6. 'not' → logprob: -7.660870552062988
    7. '   ' → logprob: -9.035870552062988
    8. 'count' → logprob: -9.035870552062988
    9. ' ' → logprob: -10.035870552062988
    10. '  ' → logprob: -10.535870552062988

Token 1357: ' <' (ID: 464)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4408983886241913
    2. ' <=' → logprob: -2.1908984184265137
    3. '==' → logprob: -2.3158984184265137
    4. ' <' → logprob: -2.5658984184265137
    5. ' =' → logprob: -3.6908984184265137
    6. '=' → logprob: -4.065898418426514
    7. '<=' → logprob: -4.315898418426514
    8. '<' → logprob: -4.690898418426514
    9. ' >' → logprob: -6.065898418426514
    10. '>' → logprob: -7.065898418426514

Token 1358: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00867945421487093
    2. ' ' → logprob: -4.758679389953613
    3. '=' → logprob: -10.508679389953613
    4. 'count' → logprob: -11.133679389953613
    5. '   ' → logprob: -11.383679389953613
    6. '1' → logprob: -12.133679389953613
    7. '       ' → logprob: -13.633679389953613
    8. '  ' → logprob: -13.883679389953613
    9. '
' → logprob: -14.258679389953613
    10. ' =' → logprob: -14.508679389953613

Token 1359: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00030924470047466457
    2. ' ' → logprob: -8.125308990478516
    3. '=' → logprob: -11.750308990478516
    4. 'count' → logprob: -12.500308990478516
    5. '   ' → logprob: -14.500308990478516
    6. '
' → logprob: -15.000308990478516
    7. ' =' → logprob: -15.500308990478516
    8. '       ' → logprob: -16.250308990478516
    9. '1' → logprob: -16.500308990478516
    10. 'self' → logprob: -16.750308990478516

Token 1360: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10548179596662521
    2. ' or' → logprob: -3.1054818630218506
    3. ':
' → logprob: -3.2304818630218506
    4. '       ' → logprob: -4.4804816246032715
    5. ':return' → logprob: -5.7304816246032715
    6. ' :' → logprob: -7.7304816246032715
    7. '           ' → logprob: -8.60548210144043
    8. '   ' → logprob: -8.85548210144043
    9. 'or' → logprob: -9.48048210144043
    10. ',' → logprob: -9.85548210144043

Token 1361: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.021367115899920464
    2. 'i' → logprob: -4.146367073059082
    3. '0' → logprob: -6.271367073059082
    4. ' return' → logprob: -6.396367073059082
    5. ' ' → logprob: -6.896367073059082
    6. 'return' → logprob: -7.646367073059082
    7. '           ' → logprob: -9.521367073059082
    8. 'count' → logprob: -10.021367073059082
    9. ' self' → logprob: -10.271367073059082
    10. '   ' → logprob: -10.271367073059082

Token 1362: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20163504779338837
    2. ' =' → logprob: -1.7016350030899048
    3. '+=' → logprob: -8.951635360717773
    4. ' +=' → logprob: -9.326635360717773
    5. '   ' → logprob: -14.076635360717773
    6. '=count' → logprob: -14.576635360717773
    7. '<' → logprob: -14.951635360717773
    8. '       ' → logprob: -15.076635360717773
    9. '*=' → logprob: -15.076635360717773
    10. ' ' → logprob: -15.451635360717773

Token 1363: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.23037123680114746
    2. '0' → logprob: -2.1053712368011475
    3. ' count' → logprob: -2.6053712368011475
    4. ' ' → logprob: -4.605371475219727
    5. 'self' → logprob: -9.980371475219727
    6. ' self' → logprob: -10.980371475219727
    7. 'max' → logprob: -12.105371475219727
    8. ' max' → logprob: -12.480371475219727
    9. '(count' → logprob: -12.605371475219727
    10. '   ' → logprob: -12.855371475219727

Token 1364: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.014684110297821e-06
    2. 'self' → logprob: -11.750008583068848
    3. '(' → logprob: -14.625008583068848
    4. ' (' → logprob: -15.000008583068848
    5. '(this' → logprob: -15.750008583068848
    6. ' self' → logprob: -16.250009536743164
    7. '(None' → logprob: -17.250009536743164
    8. '	self' → logprob: -18.125009536743164
    9. '[self' → logprob: -18.125009536743164
    10. '(root' → logprob: -18.250009536743164

Token 1365: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.00011677479778882116
    2. 'root' → logprob: -9.375116348266602
    3. 'self' → logprob: -10.500116348266602
    4. '.self' → logprob: -13.000116348266602
    5. '.' → logprob: -14.000116348266602
    6. '(root' → logprob: -15.000116348266602
    7. ' root' → logprob: -15.375116348266602
    8. '(self' → logprob: -16.0001163482666
    9. ')' → logprob: -16.1251163482666
    10. '.user' → logprob: -16.5001163482666

Token 1366: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020301116164773703
    2. ')+' → logprob: -6.252029895782471
    3. ' )' → logprob: -10.127030372619629
    4. ')
' → logprob: -10.377030372619629
    5. '[' → logprob: -11.877030372619629
    6. '
' → logprob: -12.252030372619629
    7. '()' → logprob: -12.877030372619629
    8. '   ' → logprob: -13.127030372619629
    9. '(root' → logprob: -13.377030372619629
    10. '())' → logprob: -13.502030372619629

Token 1367: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.9795847535133362
    2. '+' → logprob: -1.2295846939086914
    3. '
' → logprob: -2.6045846939086914
    4. ' if' → logprob: -2.8545846939086914
    5. '       ' → logprob: -3.2295846939086914
    6. 'if' → logprob: -3.3545846939086914
    7. ' -' → logprob: -3.7295846939086914
    8. '<|end|>' → logprob: -3.9795846939086914
    9. 'else' → logprob: -4.229584693908691
    10. 'def' → logprob: -4.479584693908691

Token 1368: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004078758880496025
    2. ' i' → logprob: -5.5040788650512695
    3. '
' → logprob: -15.75407886505127
    4. ' ' → logprob: -16.004077911376953
    5. '1' → logprob: -16.379077911376953
    6. '```' → logprob: -18.129077911376953
    7. '	i' → logprob: -18.254077911376953
    8. '   ' → logprob: -18.379077911376953
    9. '(i' → logprob: -18.629077911376953
    10. '[i' → logprob: -19.379077911376953

Token 1369: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7578085660934448
    2. '
' → logprob: -1.3828085660934448
    3. '<|end|>' → logprob: -1.3828085660934448
    4. ' if' → logprob: -3.8828086853027344
    5. '<|end|>' → logprob: -5.757808685302734
    6. '[' → logprob: -6.757808685302734
    7. '        
' → logprob: -7.257808685302734
    8. '```' → logprob: -7.382808685302734
    9. ' 
' → logprob: -7.757808685302734
    10. ' ' → logprob: -8.007808685302734

Token 1370: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2560175657272339
    2. ' if' → logprob: -1.5060175657272339
    3. 'if' → logprob: -6.131017684936523
    4. '<|end|>' → logprob: -6.881017684936523
    5. '```' → logprob: -7.881017684936523
    6. '   ' → logprob: -9.131017684936523
    7. '<|end|>' → logprob: -9.631017684936523
    8. ' or' → logprob: -10.006017684936523
    9. '[' → logprob: -10.006017684936523
    10. ',' → logprob: -10.131017684936523

Token 1371: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.05176043137907982
    2. 'if' (adapté à ' if') → logprob: -3.05176043510437
    3. ' v' → logprob: -6.176760196685791
    4. 'v' → logprob: -7.801760196685791
    5. '       ' → logprob: -7.926760196685791
    6. ' left' → logprob: -8.42676067352295
    7. ' self' → logprob: -10.80176067352295
    8. '   ' → logprob: -11.30176067352295
    9. 'left' → logprob: -11.55176067352295
    10. ' root' → logprob: -11.67676067352295

Token 1372: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11687181144952774
    2. 'i' → logprob: -2.2418718338012695
    3. ' not' → logprob: -5.6168718338012695
    4. 'not' → logprob: -8.24187183380127
    5. '   ' → logprob: -9.49187183380127
    6. '  ' → logprob: -10.49187183380127
    7. '(i' → logprob: -11.11687183380127
    8. ' ' → logprob: -11.49187183380127
    9. '0' → logprob: -12.49187183380127
    10. '	i' → logprob: -12.86687183380127

Token 1373: ' >=' (ID: 5064)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.439208060503006
    2. '<' → logprob: -1.0642080307006836
    3. '<|end|>' → logprob: -5.189208030700684
    4. ' >' → logprob: -6.439208030700684
    5. '=' → logprob: -6.814208030700684
    6. '[' → logprob: -7.189208030700684
    7. ' =' → logprob: -8.064208030700684
    8. '>' → logprob: -8.439208030700684
    9. ' ' → logprob: -8.564208030700684
    10. ' ==' → logprob: -9.439208030700684

Token 1374: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.01361601147800684
    2. '0' → logprob: -5.01361608505249
    3. ' count' → logprob: -5.01361608505249
    4. ' ' → logprob: -8.388615608215332
    5. '   ' → logprob: -13.763615608215332
    6. '(count' → logprob: -15.263615608215332
    7. '	count' → logprob: -15.388615608215332
    8. 'self' → logprob: -15.388615608215332
    9. '
' → logprob: -15.513615608215332
    10. '1' → logprob: -15.763615608215332

Token 1375: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0802738870552275e-05
    2. 'self' → logprob: -12.00001049041748
    3. '       ' → logprob: -13.12501049041748
    4. '[self' → logprob: -13.75001049041748
    5. ' (' → logprob: -14.50001049041748
    6. '
' → logprob: -15.00001049041748
    7. ')' → logprob: -15.25001049041748
    8. '   ' → logprob: -15.37501049041748
    9. '(
' → logprob: -16.500011444091797
    10. '```' → logprob: -16.750011444091797

Token 1376: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.5862765312194824
    2. '(self' → logprob: -0.8362765312194824
    3. 'self' → logprob: -4.711276531219482
    4. '(root' → logprob: -7.211276531219482
    5. 'root' → logprob: -7.961276531219482
    6. '.self' → logprob: -9.21127700805664
    7. ' self' → logprob: -10.83627700805664
    8. '[self' → logprob: -10.96127700805664
    9. ',self' → logprob: -11.33627700805664
    10. '   ' → logprob: -11.58627700805664

Token 1377: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2490340620279312
    2. ' or' → logprob: -1.74903404712677
    3. ':' → logprob: -3.1240341663360596
    4. ')' → logprob: -7.1240339279174805
    5. 'or' → logprob: -7.8740339279174805
    6. '):
' → logprob: -7.8740339279174805
    7. ':return' → logprob: -7.9990339279174805
    8. '       ' → logprob: -8.49903392791748
    9. ':
' → logprob: -9.37403392791748
    10. ',' → logprob: -9.37403392791748

Token 1378: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030180959030985832
    2. ':return' → logprob: -4.155180931091309
    3. ' or' → logprob: -4.530180931091309
    4. ':
' → logprob: -5.905180931091309
    5. '       ' → logprob: -7.780180931091309
    6. 'return' → logprob: -10.405180931091309
    7. ' return' → logprob: -10.905180931091309
    8. '           ' → logprob: -11.030180931091309
    9. 'or' → logprob: -11.155180931091309
    10. ' :' → logprob: -11.405180931091309

Token 1379: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5759826898574829
    2. 'i' → logprob: -0.8259826898574829
    3. '0' → logprob: -10.450983047485352
    4. ' ' → logprob: -12.200983047485352
    5. ' not' → logprob: -13.325983047485352
    6. '  ' → logprob: -13.450983047485352
    7. '   ' → logprob: -13.575983047485352
    8. '
' → logprob: -13.700983047485352
    9. '       ' → logprob: -13.825983047485352
    10. 'not' → logprob: -14.325983047485352

Token 1380: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.278624951839447
    2. '<' → logprob: -1.5286250114440918
    3. ':' → logprob: -5.028625011444092
    4. '<|end|>' → logprob: -5.528625011444092
    5. ' =' → logprob: -6.028625011444092
    6. '=' → logprob: -6.028625011444092
    7. ' ' → logprob: -6.528625011444092
    8. '[' → logprob: -6.778625011444092
    9. ' is' → logprob: -6.903625011444092
    10. ' return' → logprob: -7.153625011444092

Token 1381: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07890763878822327
    2. ' ' → logprob: -2.5789077281951904
    3. '
' → logprob: -12.20390796661377
    4. '-' → logprob: -12.32890796661377
    5. 'count' → logprob: -12.95390796661377
    6. ' -' → logprob: -13.32890796661377
    7. '1' → logprob: -13.45390796661377
    8. '2' → logprob: -14.20390796661377
    9. '   ' → logprob: -14.32890796661377
    10. '  ' → logprob: -14.45390796661377

Token 1382: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002453662164043635
    2. ' ' → logprob: -8.375245094299316
    3. '-' → logprob: -12.250245094299316
    4. 'count' → logprob: -12.750245094299316
    5. '
' → logprob: -12.875245094299316
    6. '1' → logprob: -13.000245094299316
    7. '=' → logprob: -14.250245094299316
    8. '   ' → logprob: -14.500245094299316
    9. '2' → logprob: -15.812745094299316
    10. '  ' → logprob: -16.062746047973633

Token 1383: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003941025584936142
    2. ':return' → logprob: -5.753941059112549
    3. ':
' → logprob: -7.378941059112549
    4. '       ' → logprob: -9.25394058227539
    5. ' :' → logprob: -10.50394058227539
    6. ' return' → logprob: -12.00394058227539
    7. ' or' → logprob: -13.12894058227539
    8. 'return' → logprob: -13.25394058227539
    9. '):' → logprob: -13.50394058227539
    10. ',' → logprob: -13.87894058227539

Token 1384: ' raise' (ID: 9338)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.13281074166297913
    2. ' raise' → logprob: -2.2578108310699463
    3. 'return' → logprob: -4.257810592651367
    4. 'raise' → logprob: -5.632810592651367
    5. '           ' → logprob: -6.257810592651367
    6. '	raise' → logprob: -9.757810592651367
    7. '
' → logprob: -9.882810592651367
    8. ':return' → logprob: -11.757810592651367
    9. '{return' → logprob: -12.132810592651367
    10. '	return' → logprob: -12.632810592651367

Token 1385: ' Index' (ID: 14580)
  Prédit: 'Index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Index' → logprob: -0.0015047440538182855
    2. ' Index' → logprob: -6.501504898071289
    3. '(Index' → logprob: -13.376504898071289
    4. 'Value' → logprob: -15.001504898071289
    5. ' ' → logprob: -15.626504898071289
    6. '_index' → logprob: -16.12650489807129
    7. '_Index' → logprob: -16.75150489807129
    8. 'Indexer' → logprob: -16.75150489807129
    9. 'index' → logprob: -17.12650489807129
    10. 'Assertion' → logprob: -17.25150489807129

Token 1386: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -4.320199877838604e-07
    2. '
' → logprob: -15.75
    3. 'Index' → logprob: -15.75
    4. 'error' → logprob: -18.25
    5. 'Out' → logprob: -18.625
    6. 'rror' → logprob: -18.625
    7. 'Warning' → logprob: -18.625
    8. 'Erro' → logprob: -18.625
    9. ' Error' → logprob: -18.75
    10. '```' → logprob: -18.75

Token 1387: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7102752327919006
    2. '       ' → logprob: -0.7102752327919006
    3. '<|end|>' → logprob: -4.585275173187256
    4. '        
' → logprob: -6.460275173187256
    5. '[' → logprob: -7.210275173187256
    6. ',' → logprob: -7.585275173187256
    7. '<|end|>' → logprob: -7.835275173187256
    8. '   ' → logprob: -7.960275173187256
    9. ':
' → logprob: -7.960275173187256
    10. '    
' → logprob: -7.960275173187256

Token 1388: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13591578602790833
    2. 'v' → logprob: -2.135915756225586
    3. ' v' → logprob: -5.260915756225586
    4. ',' → logprob: -6.510915756225586
    5. '<|end|>' → logprob: -7.510915756225586
    6. '        
' → logprob: -8.260915756225586
    7. 'def' → logprob: -8.510915756225586
    8. 'left' → logprob: -8.635915756225586
    9. ' left' → logprob: -8.760915756225586
    10. '```' → logprob: -8.885915756225586

Token 1389: ' rotate' (ID: 31987)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.044347427785396576
    2. 'v' → logprob: -3.9193475246429443
    3. 'def' → logprob: -4.419347286224365
    4. 'if' → logprob: -5.169347286224365
    5. 'l' → logprob: -6.544347286224365
    6. '#' → logprob: -6.669347286224365
    7. 'less' → logprob: -6.669347286224365
    8. 'res' → logprob: -7.669347286224365
    9. 'key' → logprob: -8.169347763061523
    10. 'result' → logprob: -8.544347763061523

Token 1390: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002867281436920166
    2. '=' → logprob: -5.877867221832275
    3. ',' → logprob: -10.377867698669434
    4. '   ' → logprob: -11.752867698669434
    5. ' ' → logprob: -12.002867698669434
    6. 'd' → logprob: -12.252867698669434
    7. '=self' → logprob: -12.877867698669434
    8. '  ' → logprob: -13.627867698669434
    9. 'direction' → logprob: -13.627867698669434
    10. 'def' → logprob: -13.752867698669434

Token 1391: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02325083687901497
    2. ' self' → logprob: -3.7732508182525635
    3. '   ' → logprob: -13.398250579833984
    4. '       ' → logprob: -13.523250579833984
    5. ' ' → logprob: -14.023250579833984
    6. '
' → logprob: -14.523250579833984
    7. '	self' → logprob: -15.023250579833984
    8. 'lambda' → logprob: -15.023250579833984
    9. '  ' → logprob: -15.648250579833984
    10. '(self' → logprob: -16.148250579833984

Token 1392: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.15069285035133362
    2. '_rotate' → logprob: -2.025692939758301
    3. '_split' → logprob: -5.275692939758301
    4. '_merge' → logprob: -6.150692939758301
    5. '.rotate' → logprob: -7.650692939758301
    6. '   ' → logprob: -9.9006929397583
    7. '_rot' → logprob: -10.1506929397583
    8. '_insert' → logprob: -10.7756929397583
    9. '_rotation' → logprob: -10.7756929397583
    10. 'def' → logprob: -10.9006929397583

Token 1393: 'rotate' (ID: 31296)
  Prédit: 'rotate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -0.0015218837652355433
    2. 'count' → logprob: -6.501522064208984
    3. 'tre' → logprob: -11.626522064208984
    4. 'rot' → logprob: -12.126522064208984
    5. '_rotate' → logprob: -12.876522064208984
    6. ' rotate' → logprob: -13.751522064208984
    7. '.rotate' → logprob: -15.001522064208984
    8. 'rotation' → logprob: -15.751522064208984
    9. 'contains' → logprob: -15.876522064208984
    10. '
' → logprob: -16.001522064208984

Token 1394: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13250142335891724
    2. '
' → logprob: -2.5075013637542725
    3. 'v' → logprob: -3.5075013637542725
    4. ' v' → logprob: -4.882501602172852
    5. ',' → logprob: -5.507501602172852
    6. 'def' → logprob: -8.507501602172852
    7. '<|end|>' → logprob: -8.757501602172852
    8. '   ' → logprob: -9.007501602172852
    9. '        
' → logprob: -9.132501602172852
    10. ',
' → logprob: -9.507501602172852

Token 1395: '       ' (ID: 309)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7451828122138977
    2. ' v' → logprob: -1.120182752609253
    3. '       ' → logprob: -1.745182752609253
    4. '```' → logprob: -4.995182991027832
    5. 'stack' → logprob: -5.495182991027832
    6. ' left' → logprob: -5.495182991027832
    7. ' stack' → logprob: -5.995182991027832
    8. 'split' → logprob: -6.245182991027832
    9. ' if' → logprob: -6.745182991027832
    10. 'left' → logprob: -6.870182991027832

Token 1396: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.19139783084392548
    2. 'left' → logprob: -2.3163979053497314
    3. 'def' → logprob: -2.6913979053497314
    4. 'root' → logprob: -6.316397666931152
    5. 'l' → logprob: -6.816397666931152
    6. 'res' → logprob: -6.941397666931152
    7. 'result' → logprob: -7.191397666931152
    8. ' v' → logprob: -7.316397666931152
    9. ' left' → logprob: -7.691397666931152
    10. '#' → logprob: -8.191397666931152

Token 1397: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09922190010547638
    2. ' =' → logprob: -2.84922194480896
    3. ',' → logprob: -3.34922194480896
    4. '[' → logprob: -7.099221706390381
    5. '=
' → logprob: -8.849222183227539
    6. '=v' → logprob: -8.974222183227539
    7. ',v' → logprob: -9.099222183227539
    8. '=self' → logprob: -9.724222183227539
    9. '=root' → logprob: -9.849222183227539
    10. 'v' → logprob: -10.349222183227539

Token 1398: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03811998292803764
    2. ' self' → logprob: -3.2881200313568115
    3. ' deepcopy' → logprob: -10.03812026977539
    4. 'deep' → logprob: -10.78812026977539
    5. 'v' → logprob: -12.66312026977539
    6. '[self' → logprob: -12.66312026977539
    7. '       ' → logprob: -13.28812026977539
    8. '[' → logprob: -13.53812026977539
    9. '(self' → logprob: -14.03812026977539
    10. ' v' → logprob: -14.03812026977539

Token 1399: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.051873959600925446
    2. 'root' → logprob: -3.0518739223480225
    3. 'self' → logprob: -5.801874160766602
    4. '[root' → logprob: -9.676874160766602
    5. '   ' → logprob: -9.801874160766602
    6. '[' → logprob: -10.301874160766602
    7. '
' → logprob: -10.551874160766602
    8. '.self' → logprob: -10.801874160766602
    9. '_root' → logprob: -11.176874160766602
    10. '	root' → logprob: -11.676874160766602

Token 1400: ';' (ID: 26)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6390107870101929
    2. ';' → logprob: -1.2640107870101929
    3. ',' → logprob: -2.0140109062194824
    4. 'stack' → logprob: -3.7640109062194824
    5. '
' → logprob: -3.8890109062194824
    6. ' stack' → logprob: -5.514010906219482
    7. '[' → logprob: -5.639010906219482
    8. '#' → logprob: -7.139010906219482
    9. 'while' → logprob: -7.139010906219482
    10. ' while' → logprob: -7.389010906219482

Token 1401: ' p' (ID: 275)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.07735477387905121
    2. 'p' → logprob: -3.327354669570923
    3. ' stack' → logprob: -4.077354907989502
    4. 'left' → logprob: -4.452354907989502
    5. ' p' → logprob: -5.827354907989502
    6. ' left' → logprob: -6.452354907989502
    7. 'v' → logprob: -7.077354907989502
    8. 's' → logprob: -7.077354907989502
    9. 'direction' → logprob: -7.452354907989502
    10. 'l' → logprob: -7.577354907989502

Token 1402: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.044851791113615036
    2. ' =' → logprob: -3.169851779937744
    3. ',' → logprob: -6.294851779937744
    4. '=None' → logprob: -12.794852256774902
    5. '[' → logprob: -14.044852256774902
    6. '=
' → logprob: -14.044852256774902
    7. ' ' → logprob: -15.919852256774902
    8. '   ' → logprob: -16.794851303100586
    9. ',
' → logprob: -17.169851303100586
    10. 'v' → logprob: -17.169851303100586

Token 1403: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00017243190086446702
    2. '[]' → logprob: -9.12517261505127
    3. ' None' → logprob: -10.87517261505127
    4. 'v' → logprob: -11.12517261505127
    5. '(None' → logprob: -11.25017261505127
    6. '[]
' → logprob: -11.75017261505127
    7. 'p' → logprob: -12.00017261505127
    8. '[' → logprob: -14.12517261505127
    9. '   ' → logprob: -14.12517261505127
    10. 'deque' → logprob: -15.12517261505127

Token 1404: ';' (ID: 26)
  Prédit: ';'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ';' → logprob: -0.23016659915447235
    2. '       ' → logprob: -1.6051665544509888
    3. ' direction' → logprob: -6.230166435241699
    4. ',' → logprob: -7.105166435241699
    5. 'direction' → logprob: -7.480166435241699
    6. '   ' → logprob: -7.855166435241699
    7. '[' → logprob: -8.1051664352417
    8. '#' → logprob: -8.9801664352417
    9. ' while' → logprob: -9.1051664352417
    10. '
' → logprob: -9.4801664352417

Token 1405: ' direction' (ID: 9262)
  Prédit: ' direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.891254723072052
    2. 'direction' → logprob: -0.891254723072052
    3. 'stack' → logprob: -1.8912546634674072
    4. ' stack' → logprob: -3.6412546634674072
    5. '   ' → logprob: -6.391254901885986
    6. '       ' → logprob: -7.641254901885986
    7. '    ' → logprob: -10.266254425048828
    8. 'while' → logprob: -10.453754425048828
    9. 'dir' → logprob: -10.516254425048828
    10. '	stack' → logprob: -10.641254425048828

Token 1406: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759730339050293
    2. ' =' → logprob: -0.8259730339050293
    3. '=None' → logprob: -10.325973510742188
    4. '=
' → logprob: -15.450973510742188
    5. ' ' → logprob: -15.700973510742188
    6. 'None' → logprob: -15.825973510742188
    7. ',' → logprob: -16.200973510742188
    8. '=[]' → logprob: -16.950973510742188
    9. '   ' → logprob: -17.200973510742188
    10. '=False' → logprob: -17.200973510742188

Token 1407: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.03448367491364479
    2. ' None' → logprob: -3.4094836711883545
    3. '0' → logprob: -7.409483909606934
    4. 'False' → logprob: -8.659483909606934
    5. '(None' → logprob: -10.284483909606934
    6. 'True' → logprob: -11.534483909606934
    7. '   ' → logprob: -12.284483909606934
    8. ' ' → logprob: -12.784483909606934
    9. '1' → logprob: -13.284483909606934
    10. '(' → logprob: -13.534483909606934

Token 1408: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6426858901977539
    2. 'stack' → logprob: -0.8926858901977539
    3. ' stack' → logprob: -2.767685890197754
    4. '	stack' → logprob: -7.267685890197754
    5. '```' → logprob: -8.017685890197754
    6. '   ' → logprob: -8.142685890197754
    7. '
' → logprob: -8.517685890197754
    8. ' while' → logprob: -9.642685890197754
    9. 'while' → logprob: -9.767685890197754
    10. 'split' → logprob: -10.767685890197754

Token 1409: '       ' (ID: 309)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.6367673277854919
    2. ' stack' → logprob: -1.3867673873901367
    3. '       ' → logprob: -1.5117673873901367
    4. '   ' → logprob: -7.886767387390137
    5. '	stack' → logprob: -9.261767387390137
    6. '
' → logprob: -10.136767387390137
    7. ' while' → logprob: -10.511767387390137
    8. 'while' → logprob: -10.761767387390137
    9. 'split' → logprob: -11.386767387390137
    10. '```' → logprob: -11.636767387390137

Token 1410: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.0017322985222563148
    2. 'left' → logprob: -6.501732349395752
    3. 'while' → logprob: -8.876731872558594
    4. 'split' → logprob: -10.126731872558594
    5. ' stack' → logprob: -11.001731872558594
    6. 'key' → logprob: -12.001731872558594
    7. 'l' → logprob: -12.251731872558594
    8. 'v' → logprob: -12.376731872558594
    9. 'result' → logprob: -13.001731872558594
    10. 'keys' → logprob: -13.001731872558594

Token 1411: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14690744876861572
    2. '=' → logprob: -2.021907329559326
    3. '=[]' → logprob: -5.521907329559326
    4. '.append' → logprob: -8.771907806396484
    5. '=[]
' → logprob: -10.146907806396484
    6. '[]' → logprob: -11.146907806396484
    7. ',' → logprob: -12.396907806396484
    8. '.clear' → logprob: -12.771907806396484
    9. ')' → logprob: -12.896907806396484
    10. '[:]' → logprob: -13.396907806396484

Token 1412: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.011752263642847538
    2. '[]
' → logprob: -4.511752128601074
    3. '[(' → logprob: -7.261752128601074
    4. ' []' → logprob: -13.511752128601074
    5. '[' → logprob: -15.136752128601074
    6. '[]}' → logprob: -15.636752128601074
    7. '[]

' → logprob: -15.761752128601074
    8. '[])' → logprob: -16.26175308227539
    9. '[v' → logprob: -16.26175308227539
    10. '[],' → logprob: -17.38675308227539

Token 1413: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004516277462244034
    2. 'while' → logprob: -5.629516124725342
    3. ' while' → logprob: -7.504516124725342
    4. '   ' → logprob: -9.1295166015625
    5. '           ' → logprob: -9.5045166015625
    6. '```' → logprob: -9.6295166015625
    7. '
' → logprob: -10.3795166015625
    8. '        
' → logprob: -10.8795166015625
    9. '[' → logprob: -11.1295166015625
    10. '	while' → logprob: -11.5045166015625

Token 1414: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.058575671166181564
    2. '       ' → logprob: -2.9335756301879883
    3. ' while' → logprob: -5.683575630187988
    4. 'count' → logprob: -8.808575630187988
    5. '
' → logprob: -10.183575630187988
    6. 'i' → logprob: -10.683575630187988
    7. '```' → logprob: -10.808575630187988
    8. 'current' → logprob: -11.183575630187988
    9. '   ' → logprob: -11.558575630187988
    10. 'v' → logprob: -11.933575630187988

Token 1415: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.01042735856026411
    2. ' v' → logprob: -4.885427474975586
    3. 'True' → logprob: -6.010427474975586
    4. ' True' → logprob: -8.260427474975586
    5. 'i' → logprob: -9.510427474975586
    6. ' ' → logprob: -12.135427474975586
    7. ' i' → logprob: -12.260427474975586
    8. '(v' → logprob: -12.260427474975586
    9. '   ' → logprob: -12.635427474975586
    10. '(True' → logprob: -12.760427474975586

Token 1416: ':
' (ID: 734)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.6417827606201172
    2. ' and' → logprob: -0.8917827606201172
    3. '[' → logprob: -3.516782760620117
    4. ' is' → logprob: -4.141782760620117
    5. ':' → logprob: -4.641782760620117
    6. ':
' → logprob: -5.016782760620117
    7. 'is' → logprob: -6.641782760620117
    8. 'v' → logprob: -9.016782760620117
    9. ',' → logprob: -9.391782760620117
    10. '   ' → logprob: -9.641782760620117

Token 1417: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022436028346419334
    2. '(direction' → logprob: -4.647436141967773
    3. '(' → logprob: -5.897436141967773
    4. ' direction' → logprob: -6.022436141967773
    5. '{
' → logprob: -6.022436141967773
    6. '       ' → logprob: -6.647436141967773
    7. 'direction' → logprob: -6.647436141967773
    8. '[' → logprob: -7.522436141967773
    9. ' (' → logprob: -7.647436141967773
    10. '```' → logprob: -8.022436141967773

Token 1418: ' n' (ID: 297)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.6744817495346069
    2. 'n' (adapté à ' n') → logprob: -1.049481749534607
    3. 'count' → logprob: -2.6744818687438965
    4. '           ' → logprob: -2.7994818687438965
    5. 'k' → logprob: -4.6744818687438965
    6. 'if' → logprob: -7.2994818687438965
    7. 'key' → logprob: -8.549481391906738
    8. ' left' → logprob: -8.924481391906738
    9. '```' → logprob: -9.299481391906738
    10. '               ' → logprob: -10.174481391906738

Token 1419: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.07590184360742569
    2. 'left' → logprob: -2.700901746749878
    3. 'v' → logprob: -5.200901985168457
    4. '=' → logprob: -8.700901985168457
    5. '=v' → logprob: -8.700901985168457
    6. 'count' → logprob: -10.950901985168457
    7. ' =' → logprob: -10.950901985168457
    8. '(v' → logprob: -11.075901985168457
    9. '   ' → logprob: -11.325901985168457
    10. '[v' → logprob: -11.450901985168457

Token 1420: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07003268599510193
    2. ' =' → logprob: -2.6950325965881348
    3. '=v' → logprob: -9.570033073425293
    4. ',' → logprob: -11.070033073425293
    5. 'v' → logprob: -11.945033073425293
    6. 'left' → logprob: -13.695033073425293
    7. '[' → logprob: -13.820033073425293
    8. ',v' → logprob: -14.695033073425293
    9. '(v' → logprob: -15.070033073425293
    10. '[v' → logprob: -15.695033073425293

Token 1421: ' count' (ID: 3605)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2036803960800171
    2. 'self' → logprob: -1.703680396080017
    3. 'count' → logprob: -6.453680515289307
    4. 'Tre' → logprob: -7.953680515289307
    5. '(v' → logprob: -9.078680038452148
    6. 'len' → logprob: -9.953680038452148
    7. '0' → logprob: -10.203680038452148
    8. ' v' → logprob: -10.328680038452148
    9. ' self' → logprob: -10.703680038452148
    10. '(self' → logprob: -11.078680038452148

Token 1422: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -6.392202976712724e-06
    2. 'v' → logprob: -12.125006675720215
    3. '(' → logprob: -15.500006675720215
    4. '=v' → logprob: -15.500006675720215
    5. '```' → logprob: -16.2500057220459
    6. 'def' → logprob: -16.5000057220459
    7. '[v' → logprob: -16.6250057220459
    8. ')v' → logprob: -16.6250057220459
    9. '(
' → logprob: -17.0000057220459
    10. '0' → logprob: -17.2500057220459

Token 1423: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0035549316089600325
    2. '(' → logprob: -6.128554821014404
    3. '0' → logprob: -6.878554821014404
    4. 'v' → logprob: -8.503555297851562
    5. ')' → logprob: -9.753555297851562
    6. '(v' → logprob: -10.128555297851562
    7. '   ' → logprob: -11.628555297851562
    8. '```' → logprob: -11.753555297851562
    9. '#' → logprob: -12.878555297851562
    10. '[
' → logprob: -13.253555297851562

Token 1424: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.375000953674316
    3. ' ' → logprob: -15.500000953674316
    4. '   ' → logprob: -16.500001907348633
    5. '           ' → logprob: -17.750001907348633
    6. '       ' → logprob: -17.875001907348633
    7. '     ' → logprob: -20.625001907348633
    8. '               ' → logprob: -20.875001907348633
    9. '         ' → logprob: -20.875001907348633
    10. '(' → logprob: -21.250001907348633

Token 1425: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5239024758338928
    2. ')' → logprob: -0.8989024758338928
    3. '           ' → logprob: -7.273902416229248
    4. ');' → logprob: -10.523902893066406
    5. ')
' → logprob: -10.648902893066406
    6. '),' → logprob: -11.023902893066406
    7. ')#' → logprob: -12.648902893066406
    8. '       ' → logprob: -12.898902893066406
    9. ')

' → logprob: -13.398902893066406
    10. '[' → logprob: -13.648902893066406

Token 1426: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011477179359644651
    2. '```' → logprob: -8.126147270202637
    3. '<|end|>' → logprob: -8.376147270202637
    4. '       ' → logprob: -8.501147270202637
    5. '[' → logprob: -9.501147270202637
    6. '               ' → logprob: -9.626147270202637
    7. ',' → logprob: -9.751147270202637
    8. '
' → logprob: -9.876147270202637
    9. '            ' → logprob: -10.626147270202637
    10. '          ' → logprob: -10.626147270202637

Token 1427: ' direction' (ID: 9262)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6349779367446899
    2. '           ' → logprob: -0.8849779367446899
    3. ' if' → logprob: -2.8849778175354004
    4. 'direction' (adapté à ' direction') → logprob: -6.6349778175354
    5. ' direction' → logprob: -10.134978294372559
    6. '```' → logprob: -10.634978294372559
    7. '       ' → logprob: -10.759978294372559
    8. '[' → logprob: -10.884978294372559
    9. '<|end|>' → logprob: -11.384978294372559
    10. 'If' → logprob: -11.509978294372559

Token 1428: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197541579604149
    2. '=' → logprob: -2.8119754791259766
    3. '=
' → logprob: -12.936975479125977
    4. ' =
' → logprob: -13.311975479125977
    5. '=v' → logprob: -13.436975479125977
    6. '           ' → logprob: -14.561975479125977
    7. '   ' → logprob: -15.186975479125977
    8. '=int' → logprob: -15.311975479125977
    9. '=(' → logprob: -15.311975479125977
    10. ',' → logprob: -15.686975479125977

Token 1429: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.01165858842432499
    2. 'i' → logprob: -5.136658668518066
    3. '(' → logprob: -6.011658668518066
    4. ' (' → logprob: -6.636658668518066
    5. '0' → logprob: -6.886658668518066
    6. ' i' → logprob: -7.761658668518066
    7. '1' → logprob: -8.511658668518066
    8. '(int' → logprob: -8.886658668518066
    9. 'int' → logprob: -9.261658668518066
    10. ' ' → logprob: -10.636658668518066

Token 1430: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00884205661714077
    2. 'n' → logprob: -5.7588419914245605
    3. ' i' → logprob: -5.8838419914245605
    4. '(i' → logprob: -5.8838419914245605
    5. '(n' → logprob: -10.633842468261719
    6. ' n' → logprob: -10.883842468261719
    7. ' (' → logprob: -11.383842468261719
    8. '(' → logprob: -11.883842468261719
    9. ' ' → logprob: -12.133842468261719
    10. '   ' → logprob: -12.258842468261719

Token 1431: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.060139380395412445
    2. ' >' → logprob: -2.9351394176483154
    3. '>=' → logprob: -5.435139179229736
    4. ' >=' → logprob: -7.435139179229736
    5. '>
' → logprob: -8.435139656066895
    6. '<=' → logprob: -10.810139656066895
    7. ' >
' → logprob: -11.185139656066895
    8. '<' → logprob: -11.185139656066895
    9. '```' → logprob: -12.435139656066895
    10. ' <=' → logprob: -12.685139656066895

Token 1432: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001333932508714497
    2. ' n' → logprob: -6.626333713531494
    3. '	n' → logprob: -12.626334190368652
    4. '0' → logprob: -13.876334190368652
    5. '(n' → logprob: -13.876334190368652
    6. ')n' → logprob: -14.376334190368652
    7. 'v' → logprob: -14.876334190368652
    8. '   ' → logprob: -15.001334190368652
    9. '=n' → logprob: -15.126334190368652
    10. '=' → logprob: -15.126334190368652

Token 1433: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.00043007321073673666
    2. 'left' → logprob: -8.2504301071167
    3. 'n' → logprob: -9.0004301071167
    4. '_right' → logprob: -10.6254301071167
    5. '_LEFT' → logprob: -12.6254301071167
    6. '   ' → logprob: -13.0004301071167
    7. '```' → logprob: -13.3754301071167
    8. '_count' → logprob: -13.3754301071167
    9. 'Left' → logprob: -13.5004301071167
    10. '[' → logprob: -13.6254301071167

Token 1434: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07928862422704697
    2. ')
' → logprob: -2.5792887210845947
    3. '           ' → logprob: -8.954288482666016
    4. ')v' → logprob: -9.204288482666016
    5. ' )' → logprob: -9.704288482666016
    6. '       ' → logprob: -10.329288482666016
    7. ' )
' → logprob: -10.829288482666016
    8. ')
' → logprob: -12.204288482666016
    9. '),' → logprob: -12.204288482666016
    10. '[' → logprob: -12.329288482666016

Token 1435: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12556816637516022
    2. 'v' → logprob: -3.250568151473999
    3. '```' → logprob: -3.875568151473999
    4. '
' → logprob: -4.125568389892578
    5. ' v' → logprob: -4.375568389892578
    6. '(v' → logprob: -4.875568389892578
    7. ',' → logprob: -5.000568389892578
    8. ';' → logprob: -5.750568389892578
    9. '       ' → logprob: -6.000568389892578
    10. ',v' → logprob: -6.375568389892578

Token 1436: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.053448472172021866
    2. 'v' → logprob: -3.428448438644409
    3. ' stack' → logprob: -4.678448677062988
    4. '           ' → logprob: -4.803448677062988
    5. 'if' → logprob: -6.803448677062988
    6. '       ' → logprob: -7.178448677062988
    7. ' v' → logprob: -8.803448677062988
    8. ' if' → logprob: -9.803448677062988
    9. '(stack' → logprob: -11.553448677062988
    10. '	stack' → logprob: -11.928448677062988

Token 1437: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.8550976164988242e-05
    2. 'append' → logprob: -11.000018119812012
    3. '[-' → logprob: -13.875018119812012
    4. '.' → logprob: -14.250018119812012
    5. 'Append' → logprob: -16.000019073486328
    6. ' .' → logprob: -16.500019073486328
    7. '           ' → logprob: -17.750019073486328
    8. '.app' → logprob: -17.875019073486328
    9. ' append' → logprob: -18.125019073486328
    10. '       ' → logprob: -18.625019073486328

Token 1438: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0003385614836588502
    2. '(v' → logprob: -8.000338554382324
    3. '(' → logprob: -13.250338554382324
    4. '[(' → logprob: -14.000338554382324
    5. '(
' → logprob: -15.375338554382324
    6. ' (' → logprob: -16.00033950805664
    7. ' ((' → logprob: -17.25033950805664
    8. '```' → logprob: -17.62533950805664
    9. ',' → logprob: -18.00033950805664
    10. '   ' → logprob: -18.25033950805664

Token 1439: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0024781543761491776
    2. '(v' → logprob: -6.002478122711182
    3. ' v' → logprob: -13.25247859954834
    4. '[v' → logprob: -14.50247859954834
    5. ')v' → logprob: -15.75247859954834
    6. '	v' → logprob: -16.252477645874023
    7. '<v' → logprob: -18.377477645874023
    8. ',v' → logprob: -18.877477645874023
    9. '?v' → logprob: -19.002477645874023
    10. '$v' → logprob: -19.252477645874023

Token 1440: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038455575122497976
    2. '[' → logprob: -8.250384330749512
    3. ',d' → logprob: -9.125384330749512
    4. ',
' → logprob: -11.375384330749512
    5. ' ,' → logprob: -13.875384330749512
    6. '
' → logprob: -14.375384330749512
    7. ',v' → logprob: -15.500384330749512
    8. ',[' → logprob: -15.500384330749512
    9. '	' → logprob: -16.000385284423828
    10. '   ' → logprob: -16.125385284423828

Token 1441: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.04859452322125435
    2. ' direction' → logprob: -3.0485944747924805
    3. '(direction' → logprob: -12.67359447479248
    4. '1' → logprob: -13.04859447479248
    5. '   ' → logprob: -13.42359447479248
    6. ' ' → logprob: -16.423595428466797
    7. '0' → logprob: -16.673595428466797
    8. '```' → logprob: -17.298595428466797
    9. '       ' → logprob: -17.798595428466797
    10. '    ' → logprob: -17.923595428466797

Token 1442: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1609184443950653
    2. ')
' → logprob: -1.9109184741973877
    3. '))
' → logprob: -8.035918235778809
    4. '))' → logprob: -8.285918235778809
    5. '           ' → logprob: -9.535918235778809
    6. ')v' → logprob: -10.660918235778809
    7. ');' → logprob: -11.785918235778809
    8. '       ' → logprob: -12.285918235778809
    9. ',' → logprob: -12.785918235778809
    10. ')`
' → logprob: -13.285918235778809

Token 1443: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012314554303884506
    2. 'v' → logprob: -5.012314319610596
    3. '
' → logprob: -5.387314319610596
    4. '```' → logprob: -8.012314796447754
    5. '            
' → logprob: -9.012314796447754
    6. ',' → logprob: -9.137314796447754
    7. '       ' → logprob: -9.387314796447754
    8. '<|end|>' → logprob: -9.887314796447754
    9. ',v' → logprob: -10.137314796447754
    10. '[' → logprob: -10.387314796447754

Token 1444: ' if' (ID: 538)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00036204091156832874
    2. '           ' → logprob: -8.000362396240234
    3. ' v' → logprob: -11.000362396240234
    4. '   ' → logprob: -12.750362396240234
    5. '
' → logprob: -13.000362396240234
    6. '            
' → logprob: -13.250362396240234
    7. 'i' → logprob: -13.875362396240234
    8. '       ' → logprob: -14.250362396240234
    9. '	v' → logprob: -14.625362396240234
    10. 'if' (adapté à ' if') → logprob: -14.875362396240234

Token 1445: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.17680443823337555
    2. 'i' → logprob: -1.9268044233322144
    3. ' direction' → logprob: -4.176804542541504
    4. ' i' → logprob: -7.176804542541504
    5. '   ' → logprob: -8.676804542541504
    6. 'not' → logprob: -10.176804542541504
    7. '(direction' → logprob: -10.426804542541504
    8. ' ' → logprob: -10.551804542541504
    9. 'v' → logprob: -10.551804542541504
    10. '  ' → logprob: -11.176804542541504

Token 1446: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.40118780732154846
    2. '=' → logprob: -2.0261878967285156
    3. '==' → logprob: -2.1511878967285156
    4. ':
' → logprob: -3.7761878967285156
    5. ' =' → logprob: -4.151187896728516
    6. ' ==' → logprob: -4.276187896728516
    7. '=v' → logprob: -4.276187896728516
    8. 'v' → logprob: -5.151187896728516
    9. ':=' → logprob: -5.526187896728516
    10. ',v' → logprob: -6.776187896728516

Token 1447: ' i' (ID: 575)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.44147518277168274
    2. 'v' → logprob: -1.1914751529693604
    3. 'i' → logprob: -3.5664751529693604
    4. ' i' → logprob: -3.8164751529693604
    5. '           ' → logprob: -5.9414753913879395
    6. '               ' → logprob: -8.941474914550781
    7. 'n' → logprob: -10.316474914550781
    8. '
' → logprob: -10.441474914550781
    9. '```' → logprob: -11.691474914550781
    10. '	v' → logprob: -11.816474914550781

Token 1448: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.1131003126502037
    2. ' -=' → logprob: -2.238100290298462
    3. '-' → logprob: -8.488100051879883
    4. '=' → logprob: -9.988100051879883
    5. '   ' → logprob: -11.113100051879883
    6. '           ' → logprob: -11.863100051879883
    7. '+=' → logprob: -14.113100051879883
    8. '       ' → logprob: -14.238100051879883
    9. '```' → logprob: -14.238100051879883
    10. ' =' → logprob: -14.613100051879883

Token 1449: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00010151672904612496
    2. '(n' → logprob: -9.750101089477539
    3. ' n' → logprob: -10.250101089477539
    4. '   ' → logprob: -12.750101089477539
    5. '           ' → logprob: -13.250101089477539
    6. '1' → logprob: -13.500101089477539
    7. '(' → logprob: -14.500101089477539
    8. '               ' → logprob: -15.125101089477539
    9. '       ' → logprob: -15.125101089477539
    10. '	n' → logprob: -15.250101089477539

Token 1450: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.026651138439774513
    2. '1' → logprob: -3.77665114402771
    3. 'n' → logprob: -6.776650905609131
    4. 'left' → logprob: -6.901650905609131
    5. 'v' → logprob: -7.151650905609131
    6. '0' → logprob: -8.901651382446289
    7. '[' → logprob: -9.776651382446289
    8. 'count' → logprob: -10.276651382446289
    9. '_LEFT' → logprob: -10.401651382446289
    10. ' ' → logprob: -10.526651382446289

Token 1451: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25194624066352844
    2. '+' → logprob: -1.501946210861206
    3. '           ' → logprob: -12.001946449279785
    4. ' -' → logprob: -12.251946449279785
    5. '1' → logprob: -12.376946449279785
    6. '-' → logprob: -14.001946449279785
    7. '
' → logprob: -15.126946449279785
    8. '   ' → logprob: -15.501946449279785
    9. ' plus' → logprob: -15.876946449279785
    10. ' ' → logprob: -15.876946449279785

Token 1452: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -16.75
    4. '   ' → logprob: -18.875
    5. '           ' → logprob: -18.875
    6. '       ' → logprob: -20.125
    7. '
' → logprob: -20.125
    8. '                   ' → logprob: -21.0
    9. '0' → logprob: -21.375
    10. '               ' → logprob: -22.0

Token 1453: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -17.625
    4. '
' → logprob: -18.375
    5. '   ' → logprob: -19.75
    6. '<|end|>' → logprob: -20.0
    7. '0' → logprob: -20.125
    8. '[' → logprob: -21.5
    9. '{
' → logprob: -21.8125
    10. '۱' → logprob: -22.125

Token 1454: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020429296419024467
    2. 'v' → logprob: -4.3954291343688965
    3. ';' → logprob: -5.2704291343688965
    4. ' v' → logprob: -6.7704291343688965
    5. '
' → logprob: -7.5204291343688965
    6. ',' → logprob: -7.5204291343688965
    7. ',v' → logprob: -8.645429611206055
    8. ' else' → logprob: -9.145429611206055
    9. 'else' → logprob: -9.145429611206055
    10. '   ' → logprob: -10.270429611206055

Token 1455: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021531516686081886
    2. 'v' → logprob: -3.896531581878662
    3. ' v' → logprob: -7.521531581878662
    4. ',' → logprob: -8.396531105041504
    5. ',v' → logprob: -9.146531105041504
    6. ' else' → logprob: -9.896531105041504
    7. 'else' → logprob: -10.271531105041504
    8. '   ' → logprob: -11.896531105041504
    9. '
' → logprob: -12.396531105041504
    10. '```' → logprob: -12.396531105041504

Token 1456: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.48195523023605347
    2. '           ' → logprob: -0.9819552302360535
    3. ' v' → logprob: -5.106955051422119
    4. 'else' → logprob: -6.606955051422119
    5. ' else' → logprob: -7.856955051422119
    6. ',' → logprob: -10.731955528259277
    7. ',v' → logprob: -10.981955528259277
    8. '
' → logprob: -12.481955528259277
    9. '       ' → logprob: -12.981955528259277
    10. '   ' → logprob: -13.231955528259277

Token 1457: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3877711296081543
    2. ' =' → logprob: -1.1377711296081543
    3. '=v' → logprob: -7.387771129608154
    4. ',' → logprob: -8.262771606445312
    5. ',v' → logprob: -11.012771606445312
    6. 'v' → logprob: -12.762771606445312
    7. ' v' → logprob: -13.262771606445312
    8. ' ' → logprob: -14.887771606445312
    9. ')' → logprob: -15.137771606445312
    10. '=
' → logprob: -15.262771606445312

Token 1458: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.02331605926156044
    2. ' p' → logprob: -3.7733161449432373
    3. 'v' → logprob: -9.898316383361816
    4. '   ' → logprob: -12.523316383361816
    5. ' v' → logprob: -12.773316383361816
    6. 'None' → logprob: -12.773316383361816
    7. 'direction' → logprob: -13.148316383361816
    8. ' direction' → logprob: -13.523316383361816
    9. ' ' → logprob: -13.648316383361816
    10. ' None' → logprob: -13.648316383361816

Token 1459: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2018861174583435
    2. ' =' → logprob: -1.7018861770629883
    3. '=v' → logprob: -7.701886177062988
    4. '=p' → logprob: -11.576886177062988
    5. 'v' → logprob: -11.701886177062988
    6. ' v' → logprob: -13.701886177062988
    7. 'p' → logprob: -14.451886177062988
    8. ',' → logprob: -14.826886177062988
    9. ' ' → logprob: -14.951886177062988
    10. '=
' → logprob: -15.576886177062988

Token 1460: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.14201445877552032
    2. 'p' → logprob: -2.517014503479004
    3. ' v' → logprob: -3.267014503479004
    4. ' p' → logprob: -4.392014503479004
    5. '(p' → logprob: -8.392014503479004
    6. '(' → logprob: -8.392014503479004
    7. 'stack' → logprob: -8.642014503479004
    8. ' (' → logprob: -8.892014503479004
    9. '(v' → logprob: -9.017014503479004
    10. 'None' → logprob: -9.517014503479004

Token 1461: '[' (ID: 58)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.05574020743370056
    2. '(' → logprob: -3.0557401180267334
    3. '(v' → logprob: -6.3057403564453125
    4. 'p' → logprob: -6.4307403564453125
    5. ' (' → logprob: -7.4307403564453125
    6. '[' → logprob: -7.4307403564453125
    7. '(p' → logprob: -7.5557403564453125
    8. ' v' → logprob: -7.5557403564453125
    9. '(None' → logprob: -7.6807403564453125
    10. 'direction' → logprob: -7.8057403564453125

Token 1462: 'direction' (ID: 43278)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.09945957362651825
    2. '(' → logprob: -3.099459648132324
    3. 'direction' → logprob: -3.724459648132324
    4. '0' → logprob: -4.599459648132324
    5. 'p' → logprob: -5.599459648132324
    6. '(None' → logprob: -5.849459648132324
    7. 'None' → logprob: -5.974459648132324
    8. '[' → logprob: -6.474459648132324
    9. '1' → logprob: -6.724459648132324
    10. ' v' → logprob: -7.099459648132324

Token 1463: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0457516685128212
    2. ',v' → logprob: -3.6707515716552734
    3. ',p' → logprob: -4.295751571655273
    4. 'v' → logprob: -6.295751571655273
    5. '],' → logprob: -6.795751571655273
    6. ']' → logprob: -7.170751571655273
    7. 'p' → logprob: -7.295751571655273
    8. ',None' → logprob: -7.545751571655273
    9. ' p' → logprob: -8.045751571655273
    10. ' ,' → logprob: -9.295751571655273

Token 1464: ' v' (ID: 323)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.019580863416194916
    2. ' p' → logprob: -4.519580841064453
    3. 'v' → logprob: -4.769580841064453
    4. ' v' → logprob: -11.269580841064453
    5. '   ' → logprob: -17.269580841064453
    6. '	p' → logprob: -17.644580841064453
    7. ' ' → logprob: -18.269580841064453
    8. 'None' → logprob: -19.144580841064453
    9. '    ' → logprob: -19.269580841064453
    10. '(p' → logprob: -20.269580841064453

Token 1465: '
' (ID: 198)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.023251768201589584
    2. 'v' → logprob: -3.77325177192688
    3. ' p' → logprob: -12.0232515335083
    4. 'None' → logprob: -15.3982515335083
    5. ' v' → logprob: -16.273252487182617
    6. '[' → logprob: -18.273252487182617
    7. '   ' → logprob: -19.273252487182617
    8. '
' → logprob: -19.398252487182617
    9. '```' → logprob: -19.523252487182617
    10. '	p' → logprob: -20.023252487182617

Token 1466: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003571565030142665
    2. '<|end|>' → logprob: -5.753571510314941
    3. '```' → logprob: -9.253571510314941
    4. 'v' → logprob: -9.253571510314941
    5. '[]' → logprob: -9.503571510314941
    6. ')' → logprob: -10.378571510314941
    7. '        
' → logprob: -11.003571510314941
    8. 'None' → logprob: -11.753571510314941
    9. '   ' → logprob: -11.753571510314941
    10. '<|end|>' → logprob: -12.003571510314941

Token 1467: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.6772728562355042
    2. '       ' → logprob: -0.9272728562355042
    3. 'left' → logprob: -2.9272727966308594
    4. 'new' → logprob: -4.927272796630859
    5. 'right' → logprob: -5.177272796630859
    6. 'l' → logprob: -5.427272796630859
    7. 'u' → logprob: -5.677272796630859
    8. 'split' → logprob: -5.677272796630859
    9. 'rest' → logprob: -5.802272796630859
    10. '#' → logprob: -5.927272796630859

Token 1468: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6403465867042542
    2. ',' → logprob: -1.2653465270996094
    3. ' =' → logprob: -1.7653465270996094
    4. '[' → logprob: -4.890346527099609
    5. '#' → logprob: -5.515346527099609
    6. '=None' → logprob: -5.890346527099609
    7. 'v' → logprob: -6.265346527099609
    8. ';' → logprob: -6.390346527099609
    9. 'p' → logprob: -7.890346527099609
    10. 'None' → logprob: -8.14034652709961

Token 1469: ' [' (ID: 723)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.26967528462409973
    2. '[' → logprob: -2.3946752548217773
    3. 'stack' → logprob: -2.6446752548217773
    4. ' None' → logprob: -2.8946752548217773
    5. '(None' → logprob: -5.144675254821777
    6. ' stack' → logprob: -5.269675254821777
    7. ' [' → logprob: -5.769675254821777
    8. 'v' → logprob: -5.894675254821777
    9. ' v' → logprob: -7.769675254821777
    10. 'p' → logprob: -8.144675254821777

Token 1470: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.004698188044130802
    2. 'v' → logprob: -5.379698276519775
    3. ' None' → logprob: -9.629697799682617
    4. '(None' → logprob: -11.754697799682617
    5. '   ' → logprob: -13.504697799682617
    6. ',None' → logprob: -14.004697799682617
    7. ' v' → logprob: -14.504697799682617
    8. '0' → logprob: -15.004697799682617
    9. '[' → logprob: -15.129697799682617
    10. '       ' → logprob: -15.379697799682617

Token 1471: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005649457452818751
    2. ',None' → logprob: -7.500565052032471
    3. ',
' → logprob: -12.750564575195312
    4. ' ,' → logprob: -12.875564575195312
    5. 'None' → logprob: -13.250564575195312
    6. '   ' → logprob: -13.250564575195312
    7. '[' → logprob: -14.250564575195312
    8. '(None' → logprob: -14.250564575195312
    9. '<|end|>' → logprob: -14.250564575195312
    10. '       ' → logprob: -14.875564575195312

Token 1472: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.04860338568687439
    2. ' None' → logprob: -3.0486032962799072
    3. ',None' → logprob: -11.798603057861328
    4. '(None' → logprob: -11.923603057861328
    5. '_None' → logprob: -14.048603057861328
    6. '.None' → logprob: -15.173603057861328
    7. '[' → logprob: -15.423603057861328
    8. '=None' → logprob: -15.798603057861328
    9. '```' → logprob: -16.048603057861328
    10. '   ' → logprob: -16.173603057861328

Token 1473: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005413165781646967
    2. ',None' → logprob: -5.255413055419922
    3. 'None' → logprob: -9.130413055419922
    4. '(None' → logprob: -10.505413055419922
    5. ' ,' → logprob: -11.130413055419922
    6. ',
' → logprob: -11.505413055419922
    7. '<|end|>' → logprob: -11.880413055419922
    8. ' None' → logprob: -13.130413055419922
    9. '[' → logprob: -13.130413055419922
    10. '[],' → logprob: -13.380413055419922

Token 1474: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.004534795880317688
    2. ' None' → logprob: -5.504534721374512
    3. 'v' → logprob: -8.629534721374512
    4. 'self' → logprob: -8.629534721374512
    5. '0' → logprob: -9.879534721374512
    6. '(None' → logprob: -11.504534721374512
    7. ' v' → logprob: -12.004534721374512
    8. '...' → logprob: -12.379534721374512
    9. 'key' → logprob: -12.504534721374512
    10. 'sys' → logprob: -12.754534721374512

Token 1475: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038944309926591814
    2. ',None' → logprob: -8.000389099121094
    3. ' ,' → logprob: -10.750389099121094
    4. '<|end|>' → logprob: -11.250389099121094
    5. 'None' → logprob: -12.125389099121094
    6. ',
' → logprob: -12.125389099121094
    7. ']' → logprob: -12.750389099121094
    8. '(None' → logprob: -14.125389099121094
    9. '	' → logprob: -14.625389099121094
    10. '       ' → logprob: -14.750389099121094

Token 1476: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.01283652987331152
    2. ' float' → logprob: -4.512836456298828
    3. 'random' → logprob: -6.387836456298828
    4. ' random' → logprob: -10.512836456298828
    5. '0' → logprob: -11.137836456298828
    6. '1' → logprob: -11.262836456298828
    7. '-' → logprob: -11.262836456298828
    8. 'max' → logprob: -11.637836456298828
    9. ' -' → logprob: -12.137836456298828
    10. 'None' → logprob: -12.512836456298828

Token 1477: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00010902655776590109
    2. 'inf' → logprob: -10.12510871887207
    3. ''in' → logprob: -10.25010871887207
    4. '('-' → logprob: -11.37510871887207
    5. ''' → logprob: -11.62510871887207
    6. '(in' → logprob: -12.12510871887207
    7. '(' → logprob: -12.62510871887207
    8. ''s' → logprob: -13.37510871887207
    9. '("' → logprob: -14.12510871887207
    10. '['' → logprob: -14.87510871887207

Token 1478: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.00029518234077841043
    2. '1' → logprob: -8.875295639038086
    3. '-inf' → logprob: -9.000295639038086
    4. '-' → logprob: -10.875295639038086
    5. '6' → logprob: -12.750295639038086
    6. ''' → logprob: -13.000295639038086
    7. '0' → logprob: -13.375295639038086
    8. '2' → logprob: -13.375295639038086
    9. ''in' → logprob: -13.625295639038086
    10. ' inf' → logprob: -13.875295639038086

Token 1479: ''),' (ID: 10047)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027599023655056953
    2. '],' → logprob: -4.152598857879639
    3. '',' → logprob: -4.652598857879639
    4. '),' → logprob: -7.527598857879639
    5. '       ' → logprob: -7.777598857879639
    6. ']' → logprob: -7.777598857879639
    7. ' ,' → logprob: -8.277599334716797
    8. ''],' → logprob: -9.402599334716797
    9. ')]' → logprob: -9.777599334716797
    10. '   ' → logprob: -10.402599334716797

Token 1480: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1074654832482338
    2. 'count' → logprob: -2.8574655055999756
    3. '1' → logprob: -3.7324655055999756
    4. ' ' → logprob: -5.1074652671813965
    5. '2' → logprob: -5.2324652671813965
    6. 'v' → logprob: -6.1074652671813965
    7. '(count' → logprob: -6.8574652671813965
    8. 'i' → logprob: -7.1074652671813965
    9. 'self' → logprob: -7.1074652671813965
    10. 'None' → logprob: -7.2324652671813965

Token 1481: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0660209134221077
    2. '1' → logprob: -3.066020965576172
    3. 'count' → logprob: -4.941020965576172
    4. '2' → logprob: -5.316020965576172
    5. 'stack' → logprob: -5.941020965576172
    6. 'None' → logprob: -7.691020965576172
    7. '(count' → logprob: -7.816020965576172
    8. 'v' → logprob: -8.191020965576172
    9. '(' → logprob: -8.191020965576172
    10. 'len' → logprob: -8.316020965576172

Token 1482: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012527309590950608
    2. ' ,' → logprob: -7.7512526512146
    3. '-' → logprob: -7.8762526512146
    4. ',None' → logprob: -8.501253128051758
    5. ' -' → logprob: -9.001253128051758
    6. '<|end|>' → logprob: -10.626253128051758
    7. '       ' → logprob: -11.126253128051758
    8. ',
' → logprob: -11.251253128051758
    9. ')' → logprob: -11.376253128051758
    10. ']' → logprob: -11.376253128051758

Token 1483: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08349812775850296
    2. 'None' → logprob: -2.583498239517212
    3. ' ' → logprob: -5.708498001098633
    4. ' None' → logprob: -6.708498001098633
    5. '(None' → logprob: -10.708498001098633
    6. '   ' → logprob: -11.583498001098633
    7. '1' → logprob: -11.833498001098633
    8. '  ' → logprob: -12.708498001098633
    9. '(' → logprob: -12.833498001098633
    10. 'v' → logprob: -13.020998001098633

Token 1484: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2520923316478729
    2. 'None' → logprob: -1.5020923614501953
    3. '1' → logprob: -9.877092361450195
    4. ' None' → logprob: -10.127092361450195
    5. ' ' → logprob: -10.502092361450195
    6. '(None' → logprob: -10.877092361450195
    7. 'float' → logprob: -12.127092361450195
    8. 'none' → logprob: -12.377092361450195
    9. '-' → logprob: -12.377092361450195
    10. '   ' → logprob: -13.127092361450195

Token 1485: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003047104924917221
    2. ',' → logprob: -6.253046989440918
    3. '       ' → logprob: -7.503046989440918
    4. ']
' → logprob: -7.878046989440918
    5. ' ]' → logprob: -9.253046989440918
    6. '   ' → logprob: -9.628046989440918
    7. ',
' → logprob: -12.128046989440918
    8. '           ' → logprob: -12.253046989440918
    9. ')' → logprob: -13.003046989440918
    10. '<|end|>' → logprob: -13.003046989440918

Token 1486: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7262641191482544
    2. '<|end|>' → logprob: -0.8512641191482544
    3. ',' → logprob: -3.351263999938965
    4. ')' → logprob: -3.851263999938965
    5. '[' → logprob: -3.976263999938965
    6. '```' → logprob: -5.351263999938965
    7. '   ' → logprob: -5.976263999938965
    8. '<|end|>' → logprob: -6.351263999938965
    9. '        
' → logprob: -7.226263999938965
    10. '           ' → logprob: -7.726263999938965

Token 1487: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5837807059288025
    2. 'while' (adapté à ' while') → logprob: -0.8337807059288025
    3. 'stack' → logprob: -5.458780765533447
    4. ' while' → logprob: -6.208780765533447
    5. 'for' → logprob: -7.083780765533447
    6. 'p' → logprob: -8.208780288696289
    7. 'v' → logprob: -8.833780288696289
    8. '   ' → logprob: -9.333780288696289
    9. '```' → logprob: -9.583780288696289
    10. 'While' → logprob: -10.458780288696289

Token 1488: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -2.8802491215174086e-05
    2. ' stack' → logprob: -10.500028610229492
    3. 'v' → logprob: -14.625028610229492
    4. 'True' → logprob: -14.625028610229492
    5. '(stack' → logprob: -15.875028610229492
    6. 'len' → logprob: -16.625028610229492
    7. '	stack' → logprob: -16.875028610229492
    8. 'not' → logprob: -17.000028610229492
    9. '   ' → logprob: -17.875028610229492
    10. '
' → logprob: -18.000028610229492

Token 1489: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009859384037554264
    2. ':
' → logprob: -4.634859561920166
    3. ' and' → logprob: -10.009859085083008
    4. '.pop' → logprob: -10.134859085083008
    5. 'and' → logprob: -11.884859085083008
    6. '):' → logprob: -13.384859085083008
    7. ',' → logprob: -13.634859085083008
    8. 'not' → logprob: -13.884859085083008
    9. '!=' → logprob: -14.009859085083008
    10. '):
' → logprob: -14.134859085083008

Token 1490: '           ' (ID: 352)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.016434794291853905
    2. '   ' → logprob: -4.516434669494629
    3. ' p' → logprob: -5.391434669494629
    4. '       ' → logprob: -7.516434669494629
    5. '           ' → logprob: -8.891434669494629
    6. '```' → logprob: -9.391434669494629
    7. '(p' → logprob: -10.391434669494629
    8. '	p' → logprob: -11.141434669494629
    9. ' ' → logprob: -12.891434669494629
    10. '``' → logprob: -13.766434669494629

Token 1491: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.048623811453580856
    2. ' p' → logprob: -3.04862380027771
    3. '           ' → logprob: -10.298624038696289
    4. '   ' → logprob: -13.673624038696289
    5. '       ' → logprob: -13.798624038696289
    6. '(p' → logprob: -14.798624038696289
    7. '	p' → logprob: -15.798624038696289
    8. '```' → logprob: -17.29862403869629
    9. ')p' → logprob: -17.42362403869629
    10. ' ' → logprob: -17.67362403869629

Token 1492: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008619539439678192
    2. ',d' → logprob: -4.75861930847168
    3. ',p' → logprob: -13.13361930847168
    4. ',v' → logprob: -13.75861930847168
    5. ',
' → logprob: -13.88361930847168
    6. ' ,' → logprob: -14.75861930847168
    7. ',s' → logprob: -15.75861930847168
    8. '_,' → logprob: -16.13361930847168
    9. ',[' → logprob: -16.13361930847168
    10. '```' → logprob: -16.75861930847168

Token 1493: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.03804344683885574
    2. ' direction' → logprob: -3.28804349899292
    3. '(direction' → logprob: -14.288043022155762
    4. '           ' → logprob: -14.413043022155762
    5. '   ' → logprob: -14.663043022155762
    6. '       ' → logprob: -16.163043975830078
    7. '_direction' → logprob: -16.163043975830078
    8. ' ' → logprob: -16.788043975830078
    9. 'dire' → logprob: -17.288043975830078
    10. '方向' → logprob: -17.538043975830078

Token 1494: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38690388202667236
    2. '=' → logprob: -1.1369038820266724
    3. '=
' → logprob: -11.511903762817383
    4. '       ' → logprob: -12.011903762817383
    5. ',' → logprob: -12.386903762817383
    6. ')' → logprob: -12.636903762817383
    7. ' =
' → logprob: -12.761903762817383
    8. '           ' → logprob: -13.011903762817383
    9. ')=' → logprob: -14.261903762817383
    10. '=p' → logprob: -14.636903762817383

Token 1495: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.10020990669727325
    2. ' stack' → logprob: -2.350209951400757
    3. '	stack' → logprob: -13.350210189819336
    4. '   ' → logprob: -14.225210189819336
    5. '(stack' → logprob: -14.225210189819336
    6. '       ' → logprob: -16.350210189819336
    7. '           ' → logprob: -16.350210189819336
    8. '.stack' → logprob: -17.350210189819336
    9. ' ' → logprob: -17.600210189819336
    10. '    ' → logprob: -17.850210189819336

Token 1496: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.020000791177153587
    2. 'pop' → logprob: -4.52000093460083
    3. '=' → logprob: -4.77000093460083
    4. ' =' → logprob: -8.770000457763672
    5. '.' → logprob: -9.520000457763672
    6. '	pop' → logprob: -9.645000457763672
    7. '(pop' → logprob: -9.770000457763672
    8. ' pop' → logprob: -10.895000457763672
    9. '.append' → logprob: -11.020000457763672
    10. ' .' → logprob: -11.145000457763672

Token 1497: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.789008378982544
    2. '           ' → logprob: -0.789008378982544
    3. ':
' → logprob: -2.789008378982544
    4. '()
' → logprob: -4.539008140563965
    5. '(p' → logprob: -5.039008140563965
    6. '()' → logprob: -5.414008140563965
    7. '```' → logprob: -6.414008140563965
    8. ',' → logprob: -6.539008140563965
    9. '):
' → logprob: -7.289008140563965
    10. '():
' → logprob: -7.539008140563965

Token 1498: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0054353391751646996
    2. 'p' → logprob: -5.255435466766357
    3. ' p' → logprob: -9.2554349899292
    4. '```' → logprob: -9.5054349899292
    5. 'v' → logprob: -10.6304349899292
    6. '       ' → logprob: -12.8804349899292
    7. '               ' → logprob: -13.6304349899292
    8. '   ' → logprob: -14.2554349899292
    9. '[' → logprob: -14.3804349899292
    10. '          ' → logprob: -14.7554349899292

Token 1499: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.1660810112953186
    2. '           ' → logprob: -1.9160809516906738
    3. 'v' → logprob: -5.166080951690674
    4. ' p' → logprob: -9.041081428527832
    5. 'if' → logprob: -12.666081428527832
    6. '       ' → logprob: -12.791081428527832
    7. '```' → logprob: -12.791081428527832
    8. '   ' → logprob: -13.166081428527832
    9. ' v' → logprob: -13.416081428527832
    10. '          ' → logprob: -14.416081428527832

Token 1500: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003672748862300068
    2. '   ' → logprob: -9.000367164611816
    3. ' =' → logprob: -9.500367164611816
    4. ',' → logprob: -9.750367164611816
    5. '=' → logprob: -10.000367164611816
    6. '```' → logprob: -11.375367164611816
    7. 'direction' → logprob: -11.500367164611816
    8. ' ' → logprob: -11.750367164611816
    9. '       ' → logprob: -11.750367164611816
    10. '	' → logprob: -12.500367164611816

Token 1501: 'direction' (ID: 43278)
  Prédit: 'direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.05723803862929344
    2. '[' → logprob: -2.9322381019592285
    3. '1' → logprob: -7.1822381019592285
    4. '(direction' → logprob: -7.5572381019592285
    5. ' direction' → logprob: -7.8072381019592285
    6. '   ' → logprob: -7.9322381019592285
    7. '4' → logprob: -8.93223762512207
    8. '```' → logprob: -10.05723762512207
    9. '(' → logprob: -11.05723762512207
    10. '0' → logprob: -11.30723762512207

Token 1502: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.37360861897468567
    2. '=' → logprob: -1.2486085891723633
    3. ']' → logprob: -3.8736085891723633
    4. '[' → logprob: -6.248608589172363
    5. ',' → logprob: -6.873608589172363
    6. ']=' → logprob: -7.623608589172363
    7. ')' → logprob: -8.248608589172363
    8. '=None' → logprob: -9.248608589172363
    9. '],' → logprob: -9.623608589172363
    10. ' ]' → logprob: -9.748608589172363

Token 1503: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4742374122142792
    2. ' =' → logprob: -0.9742374420166016
    3. ',' → logprob: -8.974237442016602
    4. '=v' → logprob: -10.474237442016602
    5. ',v' → logprob: -13.474237442016602
    6. '[' → logprob: -13.599237442016602
    7. 'v' → logprob: -13.849237442016602
    8. ' ' → logprob: -14.849237442016602
    9. ' ,' → logprob: -15.224237442016602
    10. ' v' → logprob: -15.224237442016602

Token 1504: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -4.024604277219623e-05
    2. ' v' → logprob: -10.125040054321289
    3. '   ' → logprob: -16.75004005432129
    4. 'None' → logprob: -17.12504005432129
    5. '	v' → logprob: -17.62504005432129
    6. 'p' → logprob: -18.12504005432129
    7. '[v' → logprob: -18.25004005432129
    8. '[' → logprob: -18.87504005432129
    9. '       ' → logprob: -20.00004005432129
    10. '(v' → logprob: -20.12504005432129

Token 1505: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14956752955913544
    2. 'v' → logprob: -2.0245676040649414
    3. '```' → logprob: -6.274567604064941
    4. '       ' → logprob: -6.899567604064941
    5. ' v' → logprob: -7.274567604064941
    6. ';' → logprob: -7.274567604064941
    7. '<|end|>' → logprob: -7.274567604064941
    8. ',' → logprob: -7.774567604064941
    9. 'p' → logprob: -7.899567604064941
    10. '   ' → logprob: -8.649567604064941

Token 1506: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.945094355614856e-05
    2. 'v' → logprob: -10.125069618225098
    3. 'p' → logprob: -10.750069618225098
    4. '```' → logprob: -12.625069618225098
    5. '       ' → logprob: -13.625069618225098
    6. '   ' → logprob: -13.750069618225098
    7. ',' → logprob: -14.125069618225098
    8. '          ' → logprob: -14.625069618225098
    9. ' p' → logprob: -15.375069618225098
    10. ' ' → logprob: -15.750069618225098

Token 1507: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.016187217086553574
    2. '           ' → logprob: -4.1411871910095215
    3. ' p' → logprob: -8.89118766784668
    4. '       ' → logprob: -11.76618766784668
    5. '```' → logprob: -12.76618766784668
    6. '   ' → logprob: -13.26618766784668
    7. 'v' → logprob: -14.14118766784668
    8. '          ' → logprob: -14.51618766784668
    9. '         ' → logprob: -14.51618766784668
    10. ' ' → logprob: -14.64118766784668

Token 1508: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.895480277715251e-06
    2. '   ' → logprob: -12.750008583068848
    3. '=' → logprob: -13.375008583068848
    4. '#' → logprob: -14.375008583068848
    5. '4' → logprob: -14.375008583068848
    6. '
' → logprob: -14.500008583068848
    7. '```' → logprob: -14.750008583068848
    8. '           ' → logprob: -15.250008583068848
    9. ' =' → logprob: -15.375008583068848
    10. 'p' → logprob: -15.375008583068848

Token 1509: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00018887832993641496
    2. '[' → logprob: -8.625188827514648
    3. 'p' → logprob: -12.750188827514648
    4. '5' → logprob: -13.000188827514648
    5. '   ' → logprob: -13.250188827514648
    6. ' ' → logprob: -14.500188827514648
    7. '
' → logprob: -15.000188827514648
    8. 'direction' → logprob: -15.250188827514648
    9. '(' → logprob: -15.500188827514648
    10. '۴' → logprob: -15.625188827514648

Token 1510: ']' (ID: 60)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.7868196964263916
    2. '-=' → logprob: -1.0368196964263916
    3. '-' → logprob: -2.1618196964263916
    4. '+=' → logprob: -2.9118196964263916
    5. '=' → logprob: -4.6618194580078125
    6. ' +=' → logprob: -5.0368194580078125
    7. '           ' → logprob: -5.6618194580078125
    8. '            ' → logprob: -7.2868194580078125
    9. ' -' → logprob: -8.036819458007812
    10. ' =' → logprob: -10.036819458007812

Token 1511: ' +=' (ID: 2757)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.024664966389536858
    2. ' -=' → logprob: -3.774664878845215
    3. '+=' → logprob: -7.524664878845215
    4. '-' → logprob: -7.774664878845215
    5. '=' → logprob: -7.774664878845215
    6. '           ' → logprob: -10.274664878845215
    7. ' +=' → logprob: -13.274664878845215
    8. '            ' → logprob: -14.274664878845215
    9. '   ' → logprob: -15.024664878845215
    10. ' =' → logprob: -15.524664878845215

Token 1512: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38823047280311584
    2. '-' → logprob: -1.1382304430007935
    3. ' -' → logprob: -6.888230323791504
    4. ' ' → logprob: -8.513230323791504
    5. 'direction' → logprob: -10.138230323791504
    6. '(-' → logprob: -10.763230323791504
    7. '(' → logprob: -11.013230323791504
    8. '0' → logprob: -11.013230323791504
    9. 'p' → logprob: -11.388230323791504
    10. 'v' → logprob: -11.513230323791504

Token 1513: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.038619253784418106
    2. '1' → logprob: -3.28861927986145
    3. ' -' → logprob: -7.663619041442871
    4. 'p' → logprob: -10.038619041442871
    5. 'i' → logprob: -11.413619041442871
    6. 'len' → logprob: -11.538619041442871
    7. '(-' → logprob: -11.663619041442871
    8. '(' → logprob: -11.913619041442871
    9. '0' → logprob: -12.038619041442871
    10. '-(' → logprob: -12.413619041442871

Token 1514: ';' (ID: 26)
  Prédit: ';'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ';' → logprob: -0.5420787930488586
    2. '           ' → logprob: -0.9170787930488586
    3. ';p' → logprob: -4.667078971862793
    4. 'p' → logprob: -5.042078971862793
    5. ',' → logprob: -6.417078971862793
    6. '       ' → logprob: -7.917078971862793
    7. ' p' → logprob: -8.417078971862793
    8. 'v' → logprob: -8.542078971862793
    9. '   ' → logprob: -9.292078971862793
    10. ',p' → logprob: -9.417078971862793

Token 1515: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.07074721902608871
    2. ' p' → logprob: -3.070747137069702
    3. '           ' → logprob: -3.820747137069702
    4. '       ' → logprob: -13.445747375488281
    5. 'v' → logprob: -13.695747375488281
    6. '```' → logprob: -14.320747375488281
    7. '   ' → logprob: -14.445747375488281
    8. '               ' → logprob: -14.695747375488281
    9. '          ' → logprob: -15.695747375488281
    10. ' ' → logprob: -16.07074737548828

Token 1516: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.048079535365104675
    2. ' +=' → logprob: -4.173079490661621
    3. '+=' → logprob: -4.173079490661621
    4. ' ' → logprob: -4.548079490661621
    5. 'p' → logprob: -5.548079490661621
    6. ',' → logprob: -8.048079490661621
    7. ' p' → logprob: -8.298079490661621
    8. '   ' → logprob: -8.298079490661621
    9. '+' → logprob: -8.673079490661621
    10. '=' → logprob: -8.798079490661621

Token 1517: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0038513822946697474
    2. 'p' → logprob: -5.628851413726807
    3. ' ' → logprob: -9.253850936889648
    4. '[' → logprob: -9.628850936889648
    5. ' p' → logprob: -9.753850936889648
    6. '4' → logprob: -10.753850936889648
    7. 'v' → logprob: -12.628850936889648
    8. '0' → logprob: -13.253850936889648
    9. '1' → logprob: -13.503850936889648
    10. '```' → logprob: -14.253850936889648

Token 1518: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12715698778629303
    2. ' +=' → logprob: -2.127156972885132
    3. '+' → logprob: -9.252157211303711
    4. ']+=' → logprob: -9.252157211303711
    5. '           ' → logprob: -10.877157211303711
    6. '=' → logprob: -12.002157211303711
    7. '            ' → logprob: -12.377157211303711
    8. ' +' → logprob: -13.127157211303711
    9. ')' → logprob: -13.502157211303711
    10. '          ' → logprob: -14.002157211303711

Token 1519: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04861370474100113
    2. ' +=' → logprob: -3.0486137866973877
    3. '+' → logprob: -10.673613548278809
    4. ']+=' → logprob: -13.298613548278809
    5. '=' → logprob: -14.423613548278809
    6. '+=(' → logprob: -14.423613548278809
    7. ' +' → logprob: -15.673613548278809
    8. '+='' → logprob: -16.548614501953125
    9. '-=' → logprob: -16.923614501953125
    10. '           ' → logprob: -17.173614501953125

Token 1520: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22455114126205444
    2. 'v' → logprob: -2.349551200866699
    3. 'None' → logprob: -3.224551200866699
    4. 'p' → logprob: -3.349551200866699
    5. ' ' → logprob: -4.599551200866699
    6. ' v' → logprob: -4.849551200866699
    7. ' p' → logprob: -5.099551200866699
    8. ' None' → logprob: -5.849551200866699
    9. '(' → logprob: -7.099551200866699
    10. 'key' → logprob: -7.599551200866699

Token 1521: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5029039978981018
    2. 'None' → logprob: -1.502903938293457
    3. 'v' → logprob: -2.127903938293457
    4. 'p' → logprob: -4.127903938293457
    5. '(None' → logprob: -4.377903938293457
    6. '(p' → logprob: -4.627903938293457
    7. '(v' → logprob: -5.002903938293457
    8. '(' → logprob: -5.127903938293457
    9. ' None' → logprob: -7.127903938293457
    10. ' (' → logprob: -7.377903938293457

Token 1522: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004934750497341156
    2. '<|end|>' → logprob: -5.629934787750244
    3. '
' → logprob: -7.754934787750244
    4. '		' → logprob: -9.129934310913086
    5. '#' → logprob: -9.129934310913086
    6. 'v' → logprob: -9.379934310913086
    7. '       ' → logprob: -9.504934310913086
    8. 'return' → logprob: -9.629934310913086
    9. ' return' → logprob: -9.879934310913086
    10. ' ' → logprob: -10.004934310913086

Token 1523: ' update' (ID: 4027)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7624022364616394
    2. 'v' → logprob: -0.7624022364616394
    3. 'return' → logprob: -2.887402296066284
    4. ' v' → logprob: -5.262402057647705
    5. '           ' → logprob: -5.637402057647705
    6. '       ' → logprob: -6.762402057647705
    7. ' return' → logprob: -6.887402057647705
    8. '```' → logprob: -9.262402534484863
    9. '#' → logprob: -9.887402534484863
    10. ' ' → logprob: -10.387402534484863

Token 1524: ' vertex' (ID: 25363)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.07924677431583405
    2. 'v' → logprob: -3.204246759414673
    3. 'key' → logprob: -4.079246997833252
    4. ' p' → logprob: -4.579246997833252
    5. '           ' → logprob: -5.329246997833252
    6. 'direction' → logprob: -6.329246997833252
    7. ' key' → logprob: -7.704246997833252
    8. '<|end|>' → logprob: -8.079246520996094
    9. '(p' → logprob: -8.704246520996094
    10. '
' → logprob: -9.079246520996094

Token 1525: ''s' (ID: 885)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.19677181541919708
    2. '           ' → logprob: -2.5717718601226807
    3. '<|end|>' → logprob: -2.6967718601226807
    4. ',' → logprob: -3.5717718601226807
    5. ''s' → logprob: -6.446771621704102
    6. ')' → logprob: -7.196771621704102
    7. '<|end|>' → logprob: -7.196771621704102
    8. '[]' → logprob: -7.696771621704102
    9. '       ' → logprob: -7.821771621704102
    10. ']' → logprob: -8.196771621704102

Token 1526: ' information' (ID: 2164)
  Prédit: 'information'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'information' → logprob: -0.03735889121890068
    2. '```' → logprob: -4.16235876083374
    3. '[' → logprob: -4.66235876083374
    4. ' information' → logprob: -5.03735876083374
    5. 'key' → logprob: -6.78735876083374
    6. ' ' → logprob: -7.16235876083374
    7. '_information' → logprob: -7.28735876083374
    8. '   ' → logprob: -7.66235876083374
    9. '#' → logprob: -8.162359237670898
    10. 'direction' → logprob: -8.287359237670898

Token 1527: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004158652853220701
    2. 'v' → logprob: -5.6291584968566895
    3. '<|end|>' → logprob: -7.8791584968566895
    4. '       ' → logprob: -9.879158973693848
    5. '          ' → logprob: -10.004158973693848
    6. ' v' → logprob: -10.379158973693848
    7. '            ' → logprob: -11.004158973693848
    8. '```' → logprob: -11.504158973693848
    9. '               ' → logprob: -11.879158973693848
    10. '   ' → logprob: -11.879158973693848

Token 1528: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005132370279170573
    2. 'v' → logprob: -7.625513076782227
    3. '       ' → logprob: -11.625513076782227
    4. '<|end|>' → logprob: -12.125513076782227
    5. '```' → logprob: -12.250513076782227
    6. '          ' → logprob: -12.750513076782227
    7. '   ' → logprob: -13.750513076782227
    8. ' v' → logprob: -14.500513076782227
    9. '               ' → logprob: -15.500513076782227
    10. '            ' → logprob: -15.750513076782227

Token 1529: ' v' (ID: 323)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5186156034469604
    2. 'if' → logprob: -1.0186156034469604
    3. 'v' (adapté à ' v') → logprob: -3.14361572265625
    4. ' if' → logprob: -8.01861572265625
    5. 'p' → logprob: -10.14361572265625
    6. '       ' → logprob: -10.39361572265625
    7. '   ' → logprob: -11.01861572265625
    8. '```' → logprob: -11.26861572265625
    9. 'return' → logprob: -13.64361572265625
    10. ' v' → logprob: -13.64361572265625

Token 1530: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038043901324272156
    2. ' =' → logprob: -3.288043975830078
    3. '   ' → logprob: -13.288043975830078
    4. '=p' → logprob: -14.788043975830078
    5. '       ' → logprob: -15.663043975830078
    6. '=
' → logprob: -16.788043975830078
    7. ' ' → logprob: -16.913043975830078
    8. '           ' → logprob: -17.038043975830078
    9. '[' → logprob: -17.163043975830078
    10. '=v' → logprob: -17.663043975830078

Token 1531: ' rotate' (ID: 31987)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -9.925185440806672e-05
    2. ' p' → logprob: -9.500099182128906
    3. 'rotate' → logprob: -10.750099182128906
    4. 'self' → logprob: -13.500099182128906
    5. '	p' → logprob: -14.500099182128906
    6. '   ' → logprob: -15.250099182128906
    7. ' ' → logprob: -15.375099182128906
    8. ' rotate' → logprob: -16.125099182128906
    9. '[' → logprob: -16.750099182128906
    10. 'deep' → logprob: -16.750099182128906

Token 1532: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -7.44574936106801e-05
    2. 'p' → logprob: -10.00007438659668
    3. '(' → logprob: -10.75007438659668
    4. '(v' → logprob: -11.87507438659668
    5. '(
' → logprob: -15.87507438659668
    6. ' (' → logprob: -15.87507438659668
    7. 'v' → logprob: -16.37507438659668
    8. ' p' → logprob: -16.62507438659668
    9. '   ' → logprob: -16.87507438659668
    10. '	p' → logprob: -18.00007438659668

Token 1533: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.796184723294573e-06
    2. ',
' → logprob: -13.000005722045898
    3. ' ,' → logprob: -13.875005722045898
    4. '[' → logprob: -14.500005722045898
    5. ')' → logprob: -15.000005722045898
    6. '   ' → logprob: -15.000005722045898
    7. '0' → logprob: -15.250005722045898
    8. '	' → logprob: -15.375005722045898
    9. '<|end|>' → logprob: -15.375005722045898
    10. '(' → logprob: -15.500005722045898

Token 1534: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.522067129611969
    2. 'direction' → logprob: -1.1470670700073242
    3. '0' → logprob: -2.522067070007324
    4. ' direction' → logprob: -4.897067070007324
    5. '   ' → logprob: -7.147067070007324
    6. ' ' → logprob: -7.647067070007324
    7. '(direction' → logprob: -9.522067070007324
    8. '
' → logprob: -12.334567070007324
    9. '    
' → logprob: -12.459567070007324
    10. '       ' → logprob: -12.522067070007324

Token 1535: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10074540972709656
    2. 'direction' → logprob: -2.350745439529419
    3. '0' → logprob: -8.47574520111084
    4. ' direction' → logprob: -8.60074520111084
    5. '   ' → logprob: -9.47574520111084
    6. ' ' → logprob: -10.22574520111084
    7. '(' → logprob: -11.60074520111084
    8. '(direction' → logprob: -11.72574520111084
    9. 'not' → logprob: -13.28824520111084
    10. 'dire' → logprob: -13.35074520111084

Token 1536: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.33070623874664307
    2. ' -' → logprob: -1.580706238746643
    3. '-direction' → logprob: -2.5807061195373535
    4. '-
' → logprob: -11.330706596374512
    5. '   ' → logprob: -11.830706596374512
    6. '-dire' → logprob: -12.705706596374512
    7. '-directed' → logprob: -13.080706596374512
    8. '-dir' → logprob: -13.455706596374512
    9. ' ' → logprob: -14.205706596374512
    10. '
' → logprob: -14.205706596374512

Token 1537: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.0002615742268972099
    2. ' direction' → logprob: -8.250261306762695
    3. '   ' → logprob: -15.250261306762695
    4. '(direction' → logprob: -17.750261306762695
    5. 'dire' → logprob: -19.125261306762695
    6. ' ' → logprob: -19.125261306762695
    7. '方向' → logprob: -19.375261306762695
    8. '       ' → logprob: -19.375261306762695
    9. '
' → logprob: -19.750261306762695
    10. '  ' → logprob: -20.250261306762695

Token 1538: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008071291376836598
    2. ')
' → logprob: -7.125807285308838
    3. '   ' → logprob: -14.25080680847168
    4. ')return' → logprob: -14.62580680847168
    5. ')v' → logprob: -14.75080680847168
    6. ')#' → logprob: -15.50080680847168
    7. '       ' → logprob: -16.00080680847168
    8. ' )' → logprob: -16.12580680847168
    9. ')
' → logprob: -16.25080680847168
    10. ')

' → logprob: -16.25080680847168

Token 1539: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07238155603408813
    2. '<|end|>' → logprob: -3.0723814964294434
    3. 'return' → logprob: -4.197381496429443
    4. ' return' → logprob: -5.822381496429443
    5. '	' → logprob: -6.072381496429443
    6. '        ' → logprob: -7.447381496429443
    7. '[' → logprob: -7.697381496429443
    8. '```' → logprob: -7.697381496429443
    9. '	return' → logprob: -7.697381496429443
    10. 'v' → logprob: -8.822381973266602

Token 1540: ' l' (ID: 305)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5155588388442993
    2. '       ' → logprob: -1.3905588388442993
    3. 'return' → logprob: -1.8905588388442993
    4. 'v' → logprob: -6.51555871963501
    5. ' self' → logprob: -8.015559196472168
    6. '[' → logprob: -8.765559196472168
    7. '```' → logprob: -8.765559196472168
    8. ' return' → logprob: -9.015559196472168
    9. 's' → logprob: -9.140559196472168
    10. '[self' → logprob: -9.265559196472168

Token 1541: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03865297511219978
    2. ' =' → logprob: -3.5386528968811035
    3. '=' → logprob: -4.7886528968811035
    4. '[' → logprob: -8.163653373718262
    5. ',v' → logprob: -9.413653373718262
    6. 'v' → logprob: -9.538653373718262
    7. ' ,' → logprob: -9.913653373718262
    8. ',
' → logprob: -11.538653373718262
    9. 'e' → logprob: -11.913653373718262
    10. '<|end|>' → logprob: -12.288653373718262

Token 1542: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5306456685066223
    2. 'v' → logprob: -0.9056456685066223
    3. ' r' → logprob: -5.530645847320557
    4. ' v' → logprob: -5.655645847320557
    5. '   ' → logprob: -11.280645370483398
    6. 'l' → logprob: -12.155645370483398
    7. '    ' → logprob: -12.780645370483398
    8. '	v' → logprob: -12.905645370483398
    9. '[' → logprob: -13.280645370483398
    10. '       ' → logprob: -13.405645370483398

Token 1543: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03673212230205536
    2. ' =' → logprob: -3.4117321968078613
    3. ',' → logprob: -5.786732196807861
    4. '[' → logprob: -12.286731719970703
    5. '=v' → logprob: -12.536731719970703
    6. ',v' → logprob: -12.911731719970703
    7. 'v' → logprob: -13.286731719970703
    8. ' v' → logprob: -14.786731719970703
    9. '<|end|>' → logprob: -15.536731719970703
    10. ')' → logprob: -15.911731719970703

Token 1544: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.42997047305107117
    2. ' v' → logprob: -1.0549705028533936
    3. '(v' → logprob: -7.4299702644348145
    4. ' self' → logprob: -8.054970741271973
    5. 'self' → logprob: -9.054970741271973
    6. ' (' → logprob: -9.304970741271973
    7. '   ' → logprob: -9.429970741271973
    8. ' ' → logprob: -10.554970741271973
    9. '[v' → logprob: -10.929970741271973
    10. '	v' → logprob: -12.179970741271973

Token 1545: '[:' (ID: 7808)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005526507738977671
    2. ',' → logprob: -5.505526542663574
    3. '
' → logprob: -7.255526542663574
    4. ' =' → logprob: -7.505526542663574
    5. '=' → logprob: -9.005526542663574
    6. 'v' → logprob: -10.130526542663574
    7. '       ' → logprob: -11.755526542663574
    8. '
' → logprob: -12.755526542663574
    9. '        
' → logprob: -12.880526542663574
    10. '   ' → logprob: -13.130526542663574

Token 1546: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015512866666540504
    2. '1' → logprob: -7.876551151275635
    3. '3' → logprob: -8.251551628112793
    4. ']' → logprob: -8.251551628112793
    5. ',' → logprob: -8.376551628112793
    6. '6' → logprob: -9.126551628112793
    7. '],' → logprob: -9.251551628112793
    8. 'None' → logprob: -9.751551628112793
    9. '-' → logprob: -10.376551628112793
    10. ' ' → logprob: -10.626551628112793

Token 1547: ']
' (ID: 1592)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034021515399217606
    2. ']' → logprob: -3.4090216159820557
    3. ',v' → logprob: -8.534021377563477
    4. ' ,' → logprob: -10.159021377563477
    5. '   ' → logprob: -10.409021377563477
    6. '[' → logprob: -10.659021377563477
    7. ',l' → logprob: -11.034021377563477
    8. ',
' → logprob: -11.159021377563477
    9. 'v' → logprob: -11.159021377563477
    10. ',None' → logprob: -11.284021377563477

Token 1548: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006470817606896162
    2. 'return' → logprob: -5.631470680236816
    3. ' return' → logprob: -5.881470680236816
    4. '	' → logprob: -10.381470680236816
    5. 'self' → logprob: -11.631470680236816
    6. ',' → logprob: -11.631470680236816
    7. '	return' → logprob: -11.756470680236816
    8. '<|end|>' → logprob: -12.381470680236816
    9. '   ' → logprob: -12.506470680236816
    10. ' self' → logprob: -12.756470680236816

Token 1549: ' self' (ID: 1051)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.47778841853141785
    2. 'self' (adapté à ' self') → logprob: -0.9777884483337402
    3. '       ' → logprob: -5.60278844833374
    4. 'r' → logprob: -11.977787971496582
    5. ' return' → logprob: -12.352787971496582
    6. ' self' → logprob: -13.102787971496582
    7. 'l' → logprob: -13.227787971496582
    8. '```' → logprob: -13.727787971496582
    9. 'v' → logprob: -14.477787971496582
    10. '   ' → logprob: -15.477787971496582

Token 1550: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.0028729885816574097
    2. 'root' → logprob: -5.877872943878174
    3. ' root' → logprob: -10.877873420715332
    4. '[root' → logprob: -10.877873420715332
    5. '_root' → logprob: -11.377873420715332
    6. '.' → logprob: -12.127873420715332
    7. '	root' → logprob: -12.252873420715332
    8. '._' → logprob: -12.502873420715332
    9. '
' → logprob: -13.377873420715332
    10. '=root' → logprob: -13.627873420715332

Token 1551: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018154270946979523
    2. ' =' → logprob: -4.018154144287109
    3. ',' → logprob: -12.51815414428711
    4. '=
' → logprob: -14.14315414428711
    5. ' =
' → logprob: -17.51815414428711
    6. '=r' → logprob: -18.14315414428711
    7. '＝' → logprob: -18.26815414428711
    8. '=

' → logprob: -18.51815414428711
    9. '=v' → logprob: -19.39315414428711
    10. '=None' → logprob: -19.76815414428711

Token 1552: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.007204659283161163
    2. 'r' → logprob: -5.007204532623291
    3. ' l' → logprob: -7.632204532623291
    4. ' r' → logprob: -12.88220500946045
    5. '	l' → logprob: -13.38220500946045
    6. '   ' → logprob: -15.25720500946045
    7. 'v' → logprob: -15.88220500946045
    8. '```' → logprob: -17.257204055786133
    9. '[l' → logprob: -18.007204055786133
    10. '	r' → logprob: -18.257204055786133

Token 1553: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014186544343829155
    2. 'return' → logprob: -4.389186382293701
    3. ';' → logprob: -6.764186382293701
    4. '	' → logprob: -8.63918685913086
    5. '
' → logprob: -9.38918685913086
    6. ' return' → logprob: -9.76418685913086
    7. 'r' → logprob: -9.88918685913086
    8. ',' → logprob: -9.88918685913086
    9. '<|end|>' → logprob: -10.51418685913086
    10. '   ' → logprob: -10.76418685913086

Token 1554: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018313821405172348
    2. 'return' → logprob: -4.018313884735107
    3. ' return' → logprob: -8.76831340789795
    4. 'r' → logprob: -12.89331340789795
    5. '	' → logprob: -12.89331340789795
    6. '   ' → logprob: -13.26831340789795
    7. '	return' → logprob: -14.01831340789795
    8. ',' → logprob: -15.26831340789795
    9. 'self' → logprob: -16.143314361572266
    10. '           ' → logprob: -16.393314361572266

Token 1555: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0025093089789152145
    2. '       ' → logprob: -6.002509117126465
    3. ' return' → logprob: -10.627509117126465
    4. 'r' → logprob: -11.627509117126465
    5. '	return' → logprob: -15.252509117126465
    6. '   ' → logprob: -16.00251007080078
    7. 'self' → logprob: -17.00251007080078
    8. '```' → logprob: -17.25251007080078
    9. '	' → logprob: -17.87751007080078
    10. '
' → logprob: -18.87751007080078

Token 1556: ' self' (ID: 1051)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01826992817223072
    2. 'Tre' → logprob: -4.018270015716553
    3. 'self' → logprob: -9.768269538879395
    4. '(r' → logprob: -10.268269538879395
    5. 'T' → logprob: -11.643269538879395
    6. 'tre' → logprob: -12.018269538879395
    7. '(T' → logprob: -12.143269538879395
    8. ' r' → logprob: -12.768269538879395
    9. ' Tre' → logprob: -12.893269538879395
    10. 'Treas' → logprob: -14.143269538879395

Token 1557: '._' (ID: 2697)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08633582293987274
    2. ' ,' → logprob: -3.3363358974456787
    3. 'root' → logprob: -3.8363358974456787
    4. '[' → logprob: -4.5863356590271
    5. '.root' → logprob: -5.3363356590271
    6. '
' → logprob: -5.3363356590271
    7. ',
' → logprob: -6.3363356590271
    8. '_root' → logprob: -6.9613356590271
    9. '[root' → logprob: -7.0863356590271
    10. ',[' → logprob: -7.9613356590271

Token 1558: 'tre' (ID: 4086)
  Prédit: 'tre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tre' → logprob: -1.981667537620524e-06
    2. 'Tre' → logprob: -13.250001907348633
    3. 'class' → logprob: -16.875001907348633
    4. 'tro' → logprob: -17.500001907348633
    5. ' tre' → logprob: -18.000001907348633
    6. 'split' → logprob: -18.000001907348633
    7. 'tree' → logprob: -18.250001907348633
    8. '```' → logprob: -18.625001907348633
    9. 'classmethod' → logprob: -18.875001907348633
    10. '_t' → logprob: -18.875001907348633

Token 1559: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -5.3954463510308415e-05
    2. 'p' → logprob: -10.000054359436035
    3. '(ap' → logprob: -12.250054359436035
    4. '(p' → logprob: -14.250054359436035
    5. 'rap' → logprob: -14.500054359436035
    6. 'pr' → logprob: -14.625054359436035
    7. 'ап' → logprob: -15.250054359436035
    8. '(r' → logprob: -15.625054359436035
    9. '	ap' → logprob: -15.750054359436035
    10. '[' → logprob: -15.875054359436035

Token 1560: '(r' (ID: 4729)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3869404196739197
    2. '(r' → logprob: -1.1369404792785645
    3. '(' → logprob: -10.136940002441406
    4. ' r' → logprob: -10.761940002441406
    5. '[r' → logprob: -12.511940002441406
    6. '```' → logprob: -12.886940002441406
    7. '
' → logprob: -14.261940002441406
    8. '(v' → logprob: -14.511940002441406
    9. '(
' → logprob: -15.136940002441406
    10. '	r' → logprob: -15.261940002441406

Token 1561: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.79811754100956e-05
    2. '())' → logprob: -10.375038146972656
    3. ')
' → logprob: -13.375038146972656
    4. ' )' → logprob: -13.625038146972656
    5. '()' → logprob: -14.125038146972656
    6. '[' → logprob: -14.125038146972656
    7. '<|end|>' → logprob: -14.250038146972656
    8. '   ' → logprob: -15.375038146972656
    9. '),' → logprob: -15.625038146972656
    10. '[])' → logprob: -15.625038146972656

Token 1562: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1563: ' print' (ID: 2123)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.1885305643081665
    2. ' solve' → logprob: -3.438530445098877
    3. ' sort' → logprob: -3.938530445098877
    4. ' merge' → logprob: -4.063530445098877
    5. ' insert' → logprob: -4.188530445098877
    6. ' test' → logprob: -4.438530445098877
    7. ' reverse' → logprob: -4.813530445098877
    8. ' tre' → logprob: -5.188530445098877
    9. ' split' → logprob: -5.313530445098877
    10. ' sorted' → logprob: -5.438530445098877

Token 1564: '_t' (ID: 838)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06729015707969666
    2. '()' → logprob: -3.1922900676727295
    3. '('' → logprob: -5.692290306091309
    4. '_' → logprob: -5.942290306091309
    5. '(len' → logprob: -6.067290306091309
    6. '("")' → logprob: -6.692290306091309
    7. 's' → logprob: -6.817290306091309
    8. '_items' → logprob: -6.942290306091309
    9. '_list' → logprob: -6.942290306091309
    10. '((' → logprob: -6.942290306091309

Token 1565: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.00020330198458395898
    2. 'ree' → logprob: -9.125203132629395
    3. 'rep' → logprob: -10.250203132629395
    4. 'repr' → logprob: -10.750203132629395
    5. '(re' → logprob: -11.500203132629395
    6. '``' → logprob: -12.750203132629395
    7. '(' → logprob: -12.875203132629395
    8. 'r' → logprob: -12.875203132629395
    9. '```' → logprob: -12.875203132629395
    10. '()' → logprob: -13.375203132629395

Token 1566: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -1.0280383548888494e-06
    2. '(ap' → logprob: -15.250000953674316
    3. 'a' → logprob: -15.375000953674316
    4. 'e' → logprob: -16.125001907348633
    5. 'aps' → logprob: -16.125001907348633
    6. 'print' → logprob: -16.250001907348633
    7. 'p' → logprob: -16.750001907348633
    8. 'ep' → logprob: -17.125001907348633
    9. 'ап' → logprob: -17.250001907348633
    10. '_ap' → logprob: -17.375001907348633

Token 1567: '(tr' (ID: 14363)
  Prédit: '(root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(root' → logprob: -0.45117607712745667
    2. '(t' → logprob: -1.0761760473251343
    3. '(self' → logprob: -4.576176166534424
    4. '(' → logprob: -5.576176166534424
    5. '():' → logprob: -5.701176166534424
    6. '(T' → logprob: -6.201176166534424
    7. '(tree' → logprob: -7.201176166534424
    8. '(node' → logprob: -7.826176166534424
    9. '(s' → logprob: -7.826176166534424
    10. '(_' → logprob: -8.326175689697266

Token 1568: '):
' (ID: 1883)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.0003192578151356429
    2. 'e' → logprob: -8.250319480895996
    3. 'ep' → logprob: -9.875319480895996
    4. 'a' → logprob: -12.750319480895996
    5. 'ee' → logprob: -13.625319480895996
    6. 'print' → logprob: -14.250319480895996
    7. '```' → logprob: -15.000319480895996
    8. 'ef' → logprob: -15.500319480895996
    9. '(ap' → logprob: -15.625319480895996
    10. 'def' → logprob: -15.625319480895996

Token 1569: '   ' (ID: 271)
  Prédit: '(tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tr' → logprob: -0.666429340839386
    2. '   ' → logprob: -0.791429340839386
    3. '(' → logprob: -4.29142951965332
    4. '):
' → logprob: -5.54142951965332
    5. '```' → logprob: -5.91642951965332
    6. '(s' → logprob: -6.41642951965332
    7. '(root' → logprob: -6.79142951965332
    8. '[' → logprob: -7.04142951965332
    9. '    
' → logprob: -7.16642951965332
    10. ':' → logprob: -7.16642951965332

Token 1570: ' preorder' (ID: 152292)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09941079467535019
    2. 'if' → logprob: -2.4744107723236084
    3. 'q' → logprob: -4.9744110107421875
    4. 'print' → logprob: -6.4744110107421875
    5. 'stack' → logprob: -7.0994110107421875
    6. '   ' → logprob: -7.8494110107421875
    7. 'elements' → logprob: -8.349411010742188
    8. 'queue' → logprob: -8.724411010742188
    9. 'for' → logprob: -9.349411010742188
    10. ' if' → logprob: -9.974411010742188

Token 1571: ' =' (ID: 314)
  Prédit: '(tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tr' → logprob: -0.06174200028181076
    2. '(' → logprob: -2.936742067337036
    3. '(
' → logprob: -5.686741828918457
    4. 'def' → logprob: -6.436741828918457
    5. ' =' → logprob: -7.436741828918457
    6. '_tr' → logprob: -7.561741828918457
    7. '(tree' → logprob: -8.936741828918457
    8. '=' → logprob: -9.436741828918457
    9. ',tr' → logprob: -9.436741828918457
    10. '((' → logprob: -9.686741828918457

Token 1572: ' ['' (ID: 5140)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.376106321811676
    2. '[]
' → logprob: -1.2511062622070312
    3. 'tr' → logprob: -4.501106262207031
    4. '[(' → logprob: -4.626106262207031
    5. '[' → logprob: -6.001106262207031
    6. 'lambda' → logprob: -6.376106262207031
    7. '[]

' → logprob: -6.876106262207031
    8. 'deque' → logprob: -7.751106262207031
    9. '[](' → logprob: -8.251106262207031
    10. '(lambda' → logprob: -8.876106262207031

Token 1573: '']
' (ID: 9756)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.6589193344116211
    2. '[' → logprob: -1.783919334411621
    3. '('' → logprob: -2.283919334411621
    4. '']' → logprob: -2.408919334411621
    5. '(' → logprob: -3.783919334411621
    6. 'def' → logprob: -4.033919334411621
    7. 'print' → logprob: -4.658919334411621
    8. 'None' → logprob: -4.658919334411621
    9. '['' → logprob: -4.783919334411621
    10. 'root' → logprob: -5.033919334411621

Token 1574: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15614908933639526
    2. '   ' → logprob: -3.15614914894104
    3. '[]' → logprob: -3.15614914894104
    4. '[' → logprob: -3.28114914894104
    5. ' =' → logprob: -5.531148910522461
    6. 'for' → logprob: -5.531148910522461
    7. '=' → logprob: -5.531148910522461
    8. '(' → logprob: -6.281148910522461
    9. 'tr' → logprob: -6.281148910522461
    10. '['' → logprob: -6.406148910522461

Token 1575: ' inorder' (ID: 139692)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.219262624857947e-05
    2. ' def' → logprob: -10.125072479248047
    3. 'stack' → logprob: -11.000072479248047
    4. '   ' → logprob: -11.125072479248047
    5. 'deque' → logprob: -15.375072479248047
    6. ' stack' → logprob: -16.000072479248047
    7. '[]' → logprob: -16.250072479248047
    8. '[' → logprob: -16.500072479248047
    9. '```' → logprob: -16.625072479248047
    10. 'v' → logprob: -17.125072479248047

Token 1576: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11689778417348862
    2. '=' → logprob: -2.2418978214263916
    3. '=[]' → logprob: -5.8668975830078125
    4. ',' → logprob: -7.6168975830078125
    5. '.append' → logprob: -8.366897583007812
    6. 'def' → logprob: -8.491897583007812
    7. '=['' → logprob: -9.241897583007812
    8. '<|end|>' → logprob: -9.866897583007812
    9. '=[' → logprob: -10.241897583007812
    10. ')' → logprob: -10.491897583007812

Token 1577: ' ['' (ID: 5140)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6435627341270447
    2. '['' → logprob: -0.7685627341270447
    3. '[]
' → logprob: -5.0185627937316895
    4. '[' → logprob: -5.6435627937316895
    5. '[]

' → logprob: -8.643562316894531
    6. 'lambda' → logprob: -9.018562316894531
    7. '''' → logprob: -9.143562316894531
    8. 'def' → logprob: -9.268562316894531
    9. 'tr' → logprob: -9.393562316894531
    10. '[]}' → logprob: -10.393562316894531

Token 1578: '']
' (ID: 9756)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.026679925620555878
    2. ''' → logprob: -4.026679992675781
    3. '''' → logprob: -5.026679992675781
    4. '']
' → logprob: -6.651679992675781
    5. '',' → logprob: -9.151679992675781
    6. '[]' → logprob: -9.401679992675781
    7. 'tr' → logprob: -9.401679992675781
    8. '']

' → logprob: -9.776679992675781
    9. 'def' → logprob: -9.901679992675781
    10. ']' → logprob: -10.026679992675781

Token 1579: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0001382241171086207
    2. 'stack' → logprob: -9.625138282775879
    3. '   ' → logprob: -9.875138282775879
    4. ' def' → logprob: -10.875138282775879
    5. '```' → logprob: -14.000138282775879
    6. 'pre' → logprob: -14.750138282775879
    7. '	def' → logprob: -15.375138282775879
    8. 'tr' → logprob: -16.625137329101562
    9. '
' → logprob: -16.875137329101562
    10. '       ' → logprob: -17.125137329101562

Token 1580: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0002394170151092112
    2. '   ' → logprob: -8.500239372253418
    3. 'stack' → logprob: -10.375239372253418
    4. ' def' → logprob: -12.375239372253418
    5. '
' → logprob: -15.750239372253418
    6. '```' → logprob: -15.750239372253418
    7. '       ' → logprob: -16.625240325927734
    8. ' stack' → logprob: -18.125240325927734
    9. 'v' → logprob: -18.125240325927734
    10. '    
' → logprob: -18.625240325927734

Token 1581: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.04674995318055153
    2. 'tr' → logprob: -3.296750068664551
    3. '_tr' → logprob: -4.796750068664551
    4. ' dfs' → logprob: -8.54675006866455
    5. 'rec' → logprob: -10.17175006866455
    6. '_d' → logprob: -10.17175006866455
    7. '_visit' → logprob: -10.67175006866455
    8. 'helper' → logprob: -10.67175006866455
    9. 'visit' → logprob: -10.79675006866455
    10. '_helper' → logprob: -11.04675006866455

Token 1582: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.01121887844055891
    2. '(node' → logprob: -4.511219024658203
    3. '(n' → logprob: -9.136219024658203
    4. '(u' → logprob: -10.386219024658203
    5. '(root' → logprob: -11.511219024658203
    6. '(tr' → logprob: -11.761219024658203
    7. '(t' → logprob: -12.136219024658203
    8. '(x' → logprob: -12.511219024658203
    9. '(' → logprob: -13.136219024658203
    10. '(vertex' → logprob: -13.386219024658203

Token 1583: 'tx' (ID: 6874)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6907556056976318
    2. '       ' → logprob: -1.6907556056976318
    3. '):' → logprob: -1.9407556056976318
    4. ',' → logprob: -1.9407556056976318
    5. '   ' → logprob: -3.690755605697632
    6. '(v' → logprob: -7.440755844116211
    7. '):
' → logprob: -8.065755844116211
    8. '(node' → logprob: -8.440755844116211
    9. '(' → logprob: -8.815755844116211
    10. ':' → logprob: -8.940755844116211

Token 1584: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015602814964950085
    2. '(v' → logprob: -4.5156025886535645
    3. ',v' → logprob: -6.0156025886535645
    4. '):
' → logprob: -7.2656025886535645
    5. '   ' → logprob: -7.5156025886535645
    6. '):' → logprob: -7.7656025886535645
    7. '       ' → logprob: -8.265603065490723
    8. '[' → logprob: -10.390603065490723
    9. '(node' → logprob: -10.390603065490723
    10. ',
' → logprob: -10.640603065490723

Token 1585: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028174154460430145
    2. '    ' → logprob: -4.903173923492432
    3. '
' → logprob: -5.278173923492432
    4. '<|end|>' → logprob: -5.653173923492432
    5. ' if' → logprob: -6.403173923492432
    6. '	   ' → logprob: -6.403173923492432
    7. '[' → logprob: -6.403173923492432
    8. '   ' → logprob: -6.653173923492432
    9. '        
' → logprob: -7.153173923492432
    10. '    
' → logprob: -7.403173923492432

Token 1586: ' v' (ID: 323)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.025396466255188
    2. '\n' → logprob: -1.525396466255188
    3. ''\' → logprob: -1.900396466255188
    4. ' if' → logprob: -3.0253963470458984
    5. '       ' → logprob: -3.2753963470458984
    6. '	
' → logprob: -3.5253963470458984
    7. '```' → logprob: -3.5253963470458984
    8. '	if' → logprob: -3.6503963470458984
    9. 'if' → logprob: -4.150396347045898
    10. '"\' → logprob: -4.525396347045898

Token 1587: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8219464421272278
    2. ' =' → logprob: -1.071946382522583
    3. '=' → logprob: -2.071946382522583
    4. ',' → logprob: -3.196946382522583
    5. '   ' → logprob: -3.821946382522583
    6. '	' → logprob: -4.571946620941162
    7. '       ' → logprob: -5.071946620941162
    8. ',v' → logprob: -5.446946620941162
    9. '	if' → logprob: -6.446946620941162
    10. '=[' → logprob: -6.446946620941162

Token 1588: ' str' (ID: 989)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.018146894872188568
    2. ' v' → logprob: -4.393146991729736
    3. 'None' → logprob: -5.268146991729736
    4. ' None' → logprob: -8.393146514892578
    5. '[]' → logprob: -9.268146514892578
    6. 'lambda' → logprob: -10.518146514892578
    7. 'tr' → logprob: -10.768146514892578
    8. '   ' → logprob: -10.768146514892578
    9. '[' → logprob: -10.768146514892578
    10. '[v' → logprob: -11.143146514892578

Token 1589: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -5.955703818472102e-05
    2. '((' → logprob: -10.500059127807617
    3. '(tr' → logprob: -11.625059127807617
    4. '(' → logprob: -11.625059127807617
    5. '(type' → logprob: -12.250059127807617
    6. 'v' → logprob: -12.375059127807617
    7. 'tr' → logprob: -14.375059127807617
    8. 'type' → logprob: -14.375059127807617
    9. '(id' → logprob: -14.375059127807617
    10. '(tuple' → logprob: -14.375059127807617

Token 1590: 'tx' (ID: 6874)
  Prédit: 'tx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tx' → logprob: -0.13187390565872192
    2. '[' → logprob: -2.256873846054077
    3. 'x' → logprob: -4.756874084472656
    4. '[v' → logprob: -5.131874084472656
    5. '(v' → logprob: -6.006874084472656
    6. ')' → logprob: -6.881874084472656
    7. '   ' → logprob: -7.881874084472656
    8. '(tx' → logprob: -9.006874084472656
    9. '
' → logprob: -9.881874084472656
    10. '(' → logprob: -10.256874084472656

Token 1591: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.26714828610420227
    2. ')' → logprob: -1.5171482563018799
    3. ')
' → logprob: -4.517148494720459
    4. ')+' → logprob: -6.142148494720459
    5. '   ' → logprob: -6.892148494720459
    6. ')+'' → logprob: -7.267148494720459
    7. '       ' → logprob: -9.0171480178833
    8. ')[' → logprob: -10.3921480178833
    9. ')+"' → logprob: -10.6421480178833
    10. '    ' → logprob: -11.3921480178833

Token 1592: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2522084414958954
    2. '2' → logprob: -1.5022084712982178
    3. '[' → logprob: -8.877208709716797
    4. '1' → logprob: -9.502208709716797
    5. '   ' → logprob: -10.502208709716797
    6. ' ' → logprob: -11.752208709716797
    7. '(' → logprob: -11.752208709716797
    8. ''' → logprob: -12.002208709716797
    9. '3' → logprob: -13.064708709716797
    10. '#' → logprob: -13.252208709716797

Token 1593: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.021231049671769142
    2. '])
' → logprob: -3.896230936050415
    3. '])+' → logprob: -8.146230697631836
    4. ')' → logprob: -9.271230697631836
    5. '       ' → logprob: -9.271230697631836
    6. ']' → logprob: -9.521230697631836
    7. ']);' → logprob: -10.271230697631836
    8. ']+' → logprob: -10.521230697631836
    9. ' ])' → logprob: -10.896230697631836
    10. 'if' → logprob: -11.146230697631836

Token 1594: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008682413026690483
    2. ')' → logprob: -5.3836822509765625
    3. ' +' → logprob: -7.1336822509765625
    4. '<|end|>' → logprob: -7.1336822509765625
    5. '
' → logprob: -7.5086822509765625
    6. '+' → logprob: -7.6336822509765625
    7. ')
' → logprob: -7.7586822509765625
    8. ' if' → logprob: -8.008682250976562
    9. ',' → logprob: -8.883682250976562
    10. 'if' → logprob: -9.383682250976562

Token 1595: ' preorder' (ID: 152292)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8569350242614746
    2. '   ' → logprob: -0.9819350242614746
    3. 'if' → logprob: -2.1069350242614746
    4. ' preorder' → logprob: -2.9819350242614746
    5. 'pre' → logprob: -4.731935024261475
    6. ' inorder' → logprob: -4.981935024261475
    7. 'in' → logprob: -5.106935024261475
    8. '
' → logprob: -5.981935024261475
    9. ' pre' → logprob: -6.856935024261475
    10. 'for' → logprob: -7.356935024261475

Token 1596: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.003067314624786377
    2. '+=' → logprob: -6.628067493438721
    3. '+' → logprob: -6.753067493438721
    4. '+='' → logprob: -8.128067016601562
    5. ' +=' → logprob: -8.878067016601562
    6. '.extend' → logprob: -10.253067016601562
    7. '[-' → logprob: -10.253067016601562
    8. ' +' → logprob: -10.753067016601562
    9. 'append' → logprob: -11.003067016601562
    10. '+="' → logprob: -11.378067016601562

Token 1597: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.02054772712290287
    2. 'v' → logprob: -4.270547866821289
    3. '('' → logprob: -5.270547866821289
    4. '(' → logprob: -7.520547866821289
    5. '(f' → logprob: -7.645547866821289
    6. ''' → logprob: -8.770547866821289
    7. 'f' → logprob: -11.020547866821289
    8. '("("' → logprob: -11.895547866821289
    9. '((' → logprob: -12.270547866821289
    10. '(pre' → logprob: -12.770547866821289

Token 1598: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12818634510040283
    2. ')
' → logprob: -2.2531862258911133
    3. '+' → logprob: -4.378186225891113
    4. ' +' → logprob: -6.378186225891113
    5. ');' → logprob: -7.128186225891113
    6. '+'' → logprob: -10.003186225891113
    7. '+)' → logprob: -10.378186225891113
    8. ')
' → logprob: -11.003186225891113
    9. '+')' → logprob: -11.003186225891113
    10. '+
' → logprob: -11.378186225891113

Token 1599: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.255449116230011
    2. '   ' → logprob: -1.5054490566253662
    3. '
' → logprob: -5.880449295043945
    4. 'def' → logprob: -8.130449295043945
    5. '```' → logprob: -9.130449295043945
    6. '<|end|>' → logprob: -9.505449295043945
    7. ' if' → logprob: -9.880449295043945
    8. '        
' → logprob: -10.005449295043945
    9. ',' → logprob: -10.630449295043945
    10. '    
' → logprob: -10.630449295043945

Token 1600: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.09695401042699814
    2. 'dfs' → logprob: -2.471954107284546
    3. ' if' → logprob: -5.721953868865967
    4. 'in' → logprob: -6.096953868865967
    5. '   ' → logprob: -6.471953868865967
    6. ' dfs' → logprob: -7.346953868865967
    7. 'def' → logprob: -8.596954345703125
    8. '       ' → logprob: -10.346954345703125
    9. ' inorder' → logprob: -11.471954345703125
    10. '```' → logprob: -11.721954345703125

Token 1601: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00011093381908722222
    2. ' v' → logprob: -9.125110626220703
    3. '   ' → logprob: -13.750110626220703
    4. 'not' → logprob: -14.250110626220703
    5. 'len' → logprob: -16.750110626220703
    6. '	v' → logprob: -16.875110626220703
    7. ' not' → logprob: -17.000110626220703
    8. '  ' → logprob: -17.000110626220703
    9. ' ' → logprob: -17.125110626220703
    10. '    
' → logprob: -17.875110626220703

Token 1602: 'tx' (ID: 6874)
  Prédit: 'tx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tx' → logprob: -0.011871719732880592
    2. '[' → logprob: -4.886871814727783
    3. 'x' → logprob: -5.636871814727783
    4. 't' → logprob: -7.886871814727783
    5. '_tx' → logprob: -9.011871337890625
    6. ' in' → logprob: -10.636871337890625
    7. '   ' → logprob: -10.886871337890625
    8. '.tx' → logprob: -10.886871337890625
    9. ':' → logprob: -11.011871337890625
    10. 'txt' → logprob: -11.386871337890625

Token 1603: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.982165698194876e-05
    2. ':' → logprob: -9.625080108642578
    3. 'and' → logprob: -12.125080108642578
    4. ' and' → logprob: -12.500080108642578
    5. ' is' → logprob: -13.500080108642578
    6. ':
' → logprob: -14.375080108642578
    7. '0' → logprob: -14.625080108642578
    8. '   ' → logprob: -15.000080108642578
    9. ' [' → logprob: -15.000080108642578
    10. '```' → logprob: -15.000080108642578

Token 1604: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00024953833781182766
    2. '[' → logprob: -8.750249862670898
    3. 'None' → logprob: -9.750249862670898
    4. ' ' → logprob: -10.875249862670898
    5. '1' → logprob: -12.250249862670898
    6. '
' → logprob: -13.375249862670898
    7. '   ' → logprob: -13.500249862670898
    8. '```' → logprob: -13.750249862670898
    9. ':' → logprob: -14.250249862670898
    10. '`' → logprob: -14.500249862670898

Token 1605: ']:' (ID: 12433)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.16662871837615967
    2. ':' → logprob: -2.666628837585449
    3. ':
' → logprob: -2.791628837585449
    4. '):
' → logprob: -4.416628837585449
    5. '[' → logprob: -4.916628837585449
    6. '):' → logprob: -6.291628837585449
    7. ')' → logprob: -7.291628837585449
    8. 'is' → logprob: -8.04162883758545
    9. ']' → logprob: -9.29162883758545
    10. ']:' → logprob: -9.54162883758545

Token 1606: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.20145173370838165
    2. 'dfs' → logprob: -1.7014517784118652
    3. '       ' → logprob: -11.326451301574707
    4. ' preorder' → logprob: -11.701451301574707
    5. '   ' → logprob: -11.951451301574707
    6. '```' → logprob: -13.326451301574707
    7. 'd' → logprob: -13.451451301574707
    8. '
' → logprob: -13.451451301574707
    9. '           ' → logprob: -13.576451301574707
    10. ' DFS' → logprob: -14.076451301574707

Token 1607: '(v' (ID: 6932)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.004282111767679453
    2. '(v' → logprob: -5.504281997680664
    3. ' v' → logprob: -8.504281997680664
    4. ')v' → logprob: -14.754281997680664
    5. '	v' → logprob: -15.129281997680664
    6. '[v' → logprob: -15.754281997680664
    7. 'vq' → logprob: -16.379281997680664
    8. '(' → logprob: -17.004281997680664
    9. ',v' → logprob: -17.254281997680664
    10. '   ' → logprob: -17.379281997680664

Token 1608: 'tx' (ID: 6874)
  Prédit: 'tx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tx' → logprob: -0.3873029053211212
    2. '[' → logprob: -1.1373028755187988
    3. 'x' → logprob: -8.387303352355957
    4. '0' → logprob: -9.012303352355957
    5. 'xt' → logprob: -11.262303352355957
    6. 't' → logprob: -11.512303352355957
    7. '(' → logprob: -11.762303352355957
    8. '```' → logprob: -11.887303352355957
    9. 'txt' → logprob: -12.012303352355957
    10. '[
' → logprob: -12.262303352355957

Token 1609: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.15441757265944e-05
    2. '0' → logprob: -10.625031471252441
    3. '][' → logprob: -13.000031471252441
    4. '   ' → logprob: -13.625031471252441
    5. 'v' → logprob: -14.250031471252441
    6. ' [' → logprob: -14.375031471252441
    7. '
' → logprob: -14.625031471252441
    8. ')' → logprob: -15.125031471252441
    9. '```' → logprob: -15.125031471252441
    10. '1' → logprob: -15.625031471252441

Token 1610: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001422770437784493
    2. '[' → logprob: -8.875142097473145
    3. ' ' → logprob: -13.625142097473145
    4. '(' → logprob: -15.000142097473145
    5. 'v' → logprob: -15.375142097473145
    6. '   ' → logprob: -16.00014305114746
    7. '][' → logprob: -16.87514305114746
    8. ')' → logprob: -16.93764305114746
    9. '2' → logprob: -17.00014305114746
    10. ']' → logprob: -17.12514305114746

Token 1611: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.25224554538726807
    2. ')' → logprob: -1.502245545387268
    3. '       ' → logprob: -8.627245903015137
    4. ');' → logprob: -9.377245903015137
    5. ')
' → logprob: -11.002245903015137
    6. '())
' → logprob: -11.877245903015137
    7. ' )
' → logprob: -11.877245903015137
    8. ')`
' → logprob: -12.127245903015137
    9. '[' → logprob: -12.627245903015137
    10. '   ' → logprob: -12.752245903015137

Token 1612: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08082717657089233
    2. ' if' → logprob: -2.705827236175537
    3. '   ' → logprob: -4.580827236175537
    4. '```' → logprob: -8.455826759338379
    5. 'if' → logprob: -8.955826759338379
    6. '<|end|>' → logprob: -9.455826759338379
    7. '           ' → logprob: -10.205826759338379
    8. '	if' → logprob: -10.455826759338379
    9. ' ' → logprob: -10.580826759338379
    10. '
' → logprob: -11.455826759338379

Token 1613: ' inorder' (ID: 139692)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3305577337741852
    2. ' if' → logprob: -1.3305577039718628
    3. '   ' → logprob: -4.080557823181152
    4. '       ' → logprob: -8.330557823181152
    5. '```' → logprob: -12.330557823181152
    6. '	if' → logprob: -13.205557823181152
    7. ' ' → logprob: -13.705557823181152
    8. 'pre' → logprob: -14.955557823181152
    9. '``' → logprob: -15.830557823181152
    10. '
' → logprob: -16.205556869506836

Token 1614: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.3213025744771585e-05
    2. '.' → logprob: -10.625033378601074
    3. ' .' → logprob: -11.875033378601074
    4. 'append' → logprob: -13.375033378601074
    5. '.insert' → logprob: -15.625033378601074
    6. '.extend' → logprob: -16.625032424926758
    7. '[' → logprob: -16.750032424926758
    8. '   ' → logprob: -17.375032424926758
    9. '_append' → logprob: -17.875032424926758
    10. '.setdefault' → logprob: -18.250032424926758

Token 1615: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.1286630779504776
    2. '(str' → logprob: -2.1286630630493164
    3. '('' → logprob: -6.628663063049316
    4. '(' → logprob: -8.253663063049316
    5. '("("' → logprob: -9.253663063049316
    6. 'str' → logprob: -10.003663063049316
    7. '((' → logprob: -13.003663063049316
    8. 'v' → logprob: -13.128663063049316
    9. ''' → logprob: -13.628663063049316
    10. '(
' → logprob: -14.503663063049316

Token 1616: ')
' (ID: 446)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.24179229140281677
    2. ')' → logprob: -1.6167923212051392
    3. 'tx' → logprob: -4.61679220199585
    4. '(tx' → logprob: -6.49179220199585
    5. '(' → logprob: -6.74179220199585
    6. 'x' → logprob: -6.86679220199585
    7. '[' → logprob: -6.99179220199585
    8. '(x' → logprob: -7.61679220199585
    9. 'v' → logprob: -8.366792678833008
    10. 't' → logprob: -8.366792678833008

Token 1617: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005617315880954266
    2. '   ' → logprob: -5.255617141723633
    3. ' if' → logprob: -8.505617141723633
    4. '<|end|>' → logprob: -9.505617141723633
    5. '```' → logprob: -9.755617141723633
    6. '           ' → logprob: -11.380617141723633
    7. '
' → logprob: -11.630617141723633
    8. 'if' → logprob: -11.755617141723633
    9. '	' → logprob: -12.255617141723633
    10. '	if' → logprob: -12.255617141723633

Token 1618: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.001261663855984807
    2. '       ' → logprob: -7.0012617111206055
    3. ' if' → logprob: -8.001261711120605
    4. '```' → logprob: -11.251261711120605
    5. '	if' → logprob: -13.251261711120605
    6. '   ' → logprob: -15.501261711120605
    7. 'If' → logprob: -16.87626075744629
    8. '``' → logprob: -17.00126075744629
    9. ';if' → logprob: -17.37626075744629
    10. '	' → logprob: -17.87626075744629

Token 1619: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.10023751109838486
    2. 'v' → logprob: -2.3502376079559326
    3. '(v' → logprob: -10.475237846374512
    4. '	v' → logprob: -14.475237846374512
    5. '[v' → logprob: -15.100237846374512
    6. ')v' → logprob: -15.225237846374512
    7. ' (' → logprob: -15.225237846374512
    8. ' ' → logprob: -15.225237846374512
    9. '$v' → logprob: -15.475237846374512
    10. '   ' → logprob: -15.600237846374512

Token 1620: 'tx' (ID: 6874)
  Prédit: 'tx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tx' → logprob: -4.008129963040119e-06
    2. '[' → logprob: -12.875003814697266
    3. ' tx' → logprob: -15.000003814697266
    4. '(tx' → logprob: -15.250003814697266
    5. '_tx' → logprob: -15.625003814697266
    6. 'x' → logprob: -16.000003814697266
    7. '   ' → logprob: -16.125003814697266
    8. '.tx' → logprob: -16.375003814697266
    9. 't' → logprob: -16.500003814697266
    10. '	tx' → logprob: -16.625003814697266

Token 1621: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.088346359931165e-07
    2. 'x' → logprob: -15.125000953674316
    3. '   ' → logprob: -15.875000953674316
    4. ':' → logprob: -15.875000953674316
    5. '[
' → logprob: -16.5
    6. ' [' → logprob: -16.875
    7. '<|end|>' → logprob: -16.875
    8. '       ' → logprob: -17.125
    9. 'v' → logprob: -17.125
    10. '```' → logprob: -17.25

Token 1622: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009148012613877654
    2. '[' → logprob: -7.000914573669434
    3. '```' → logprob: -13.500914573669434
    4. ' ' → logprob: -14.750914573669434
    5. '   ' → logprob: -14.875914573669434
    6. '0' → logprob: -15.000914573669434
    7. '`' → logprob: -15.500914573669434
    8. '``' → logprob: -15.750914573669434
    9. '(' → logprob: -16.00091552734375
    10. '
' → logprob: -16.68841552734375

Token 1623: ']:' (ID: 12433)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.19681528210639954
    2. ':' → logprob: -2.071815252304077
    3. ']:' → logprob: -3.071815252304077
    4. '):
' → logprob: -5.446815490722656
    5. '[' → logprob: -7.571815490722656
    6. '>:' → logprob: -7.571815490722656
    7. '}:' → logprob: -7.821815490722656
    8. ':
' → logprob: -8.571815490722656
    9. ']:
' → logprob: -8.946815490722656
    10. ' ):' → logprob: -9.321815490722656

Token 1624: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.5759401917457581
    2. 'dfs' → logprob: -0.8259401917457581
    3. 'd' → logprob: -15.825940132141113
    4. 'df' → logprob: -15.825940132141113
    5. ' DFS' → logprob: -15.950940132141113
    6. 'DFS' → logprob: -16.32594108581543
    7. '   ' → logprob: -16.45094108581543
    8. 'def' → logprob: -16.82594108581543
    9. '
' → logprob: -17.20094108581543
    10. '	d' → logprob: -17.32594108581543

Token 1625: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.25
    3. '((' → logprob: -18.125
    4. 'v' → logprob: -18.625
    5. ' (' → logprob: -18.625
    6. '(
' → logprob: -19.5
    7. '(tr' → logprob: -20.0
    8. '[v' → logprob: -20.25
    9. 't' → logprob: -21.125
    10. '?v' → logprob: -21.125

Token 1626: 'tx' (ID: 6874)
  Prédit: 'tx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tx' → logprob: -0.007454114966094494
    2. '(v' → logprob: -5.382453918457031
    3. 'x' → logprob: -6.507453918457031
    4. '[' → logprob: -7.132453918457031
    5. '(tx' → logprob: -8.257453918457031
    6. '[v' → logprob: -9.007453918457031
    7. 't' → logprob: -10.257453918457031
    8. 'v' → logprob: -10.257453918457031
    9. '(' → logprob: -10.382453918457031
    10. '(x' → logprob: -11.632453918457031

Token 1627: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9862216504407115e-05
    2. '(' → logprob: -11.000020027160645
    3. 'v' → logprob: -13.875020027160645
    4. '1' → logprob: -14.125020027160645
    5. 'x' → logprob: -14.875020027160645
    6. '0' → logprob: -15.500020027160645
    7. '```' → logprob: -15.750020027160645
    8. 'tx' → logprob: -16.125019073486328
    9. '[
' → logprob: -16.125019073486328
    10. ' [' → logprob: -16.375019073486328

Token 1628: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001149867384810932
    2. '[' → logprob: -9.125115394592285
    3. 'v' → logprob: -13.000115394592285
    4. '0' → logprob: -13.625115394592285
    5. '   ' → logprob: -14.000115394592285
    6. ' ' → logprob: -14.625115394592285
    7. '(' → logprob: -15.312615394592285
    8. '```' → logprob: -15.312615394592285
    9. ')' → logprob: -15.812615394592285
    10. ']' → logprob: -16.18761444091797

Token 1629: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019591135787777603
    2. '())' → logprob: -9.250195503234863
    3. '()' → logprob: -10.875195503234863
    4. '[' → logprob: -10.875195503234863
    5. ')
' → logprob: -10.875195503234863
    6. '       ' → logprob: -11.000195503234863
    7. '<|end|>' → logprob: -11.750195503234863
    8. ')}' → logprob: -12.500195503234863
    9. ' )' → logprob: -12.625195503234863
    10. ')]' → logprob: -12.875195503234863

Token 1630: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1631: ' dfs' (ID: 51252)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08406370878219604
    2. ')' → logprob: -3.209063768386841
    3. 'def' → logprob: -4.459063529968262
    4. '<|end|>' → logprob: -4.709063529968262
    5. ' dfs' → logprob: -4.959063529968262
    6. ' def' → logprob: -5.584063529968262
    7. '       ' → logprob: -6.084063529968262
    8. ' return' → logprob: -6.834063529968262
    9. '```' → logprob: -7.334063529968262
    10. ' v' → logprob: -7.334063529968262

Token 1632: '(tr' (ID: 14363)
  Prédit: '(tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tr' → logprob: -0.03216380998492241
    2. '(user' → logprob: -4.407163619995117
    3. '(' → logprob: -4.782163619995117
    4. '(t' → logprob: -4.907163619995117
    5. '(T' → logprob: -6.657163619995117
    6. 'tr' → logprob: -7.157163619995117
    7. '(root' → logprob: -7.282163619995117
    8. '(self' → logprob: -8.032163619995117
    9. '(def' → logprob: -8.907163619995117
    10. '((' → logprob: -9.407163619995117

Token 1633: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -3.941161776310764e-05
    2. 'root' → logprob: -10.750039100646973
    3. ')' → logprob: -11.500039100646973
    4. '[' → logprob: -12.750039100646973
    5. '.' → logprob: -13.250039100646973
    6. ' .' → logprob: -13.375039100646973
    7. '[root' → logprob: -14.375039100646973
    8. '(root' → logprob: -15.375039100646973
    9. ').' → logprob: -15.625039100646973
    10. '
' → logprob: -16.00004005432129

Token 1634: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2246291337069124e-05
    2. '[' → logprob: -11.250021934509277
    3. '   ' → logprob: -11.875021934509277
    4. ' )' → logprob: -14.500021934509277
    5. ')
' → logprob: -14.625021934509277
    6. '))' → logprob: -14.875021934509277
    7. '<|end|>' → logprob: -15.750021934509277
    8. '       ' → logprob: -15.875021934509277
    9. ')#' → logprob: -16.250022888183594
    10. ')]' → logprob: -16.500022888183594

Token 1635: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.262752503156662
    2. '   ' → logprob: -1.8877525329589844
    3. '<|end|>' → logprob: -2.7627525329589844
    4. ')
' → logprob: -5.012752532958984
    5. '```' → logprob: -5.887752532958984
    6. '
' → logprob: -6.887752532958984
    7. 'def' → logprob: -7.137752532958984
    8. '#' → logprob: -7.262752532958984
    9. '\' → logprob: -7.512752532958984
    10. '[' → logprob: -7.512752532958984

Token 1636: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025151479989290237
    2. 'print' (adapté à ' print') → logprob: -4.650151252746582
    3. 'return' → logprob: -5.025151252746582
    4. 'pre' → logprob: -6.025151252746582
    5. ' return' → logprob: -6.150151252746582
    6. ' print' → logprob: -7.150151252746582
    7. ')' → logprob: -7.150151252746582
    8. '<|end|>' → logprob: -7.400151252746582
    9. 'def' → logprob: -7.525151252746582
    10. ' preorder' → logprob: -7.650151252746582

Token 1637: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.6753193736076355
    2. '()' → logprob: -0.9253193736076355
    3. '(pre' → logprob: -3.1753194332122803
    4. '(' → logprob: -3.4253194332122803
    5. '(*' → logprob: -4.300319194793701
    6. '('\' → logprob: -5.800319194793701
    7. '(
' → logprob: -6.925319194793701
    8. 'pre' → logprob: -7.050319194793701
    9. '()
' → logprob: -7.675319194793701
    10. '("("' → logprob: -8.30031967163086

Token 1638: ' '.' (ID: 12662)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.35457465052604675
    2. 'pre' → logprob: -1.6045746803283691
    3. ' '' → logprob: -3.479574680328369
    4. 'Pre' → logprob: -3.729574680328369
    5. ''.' → logprob: -4.229574680328369
    6. ' preorder' → logprob: -5.354574680328369
    7. '"' → logprob: -5.729574680328369
    8. '
' → logprob: -5.729574680328369
    9. '')' → logprob: -5.979574680328369
    10. '''.' → logprob: -6.354574680328369

Token 1639: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.8908587662735954e-05
    2. 'print' → logprob: -11.750019073486328
    3. '(join' → logprob: -11.750019073486328
    4. '('' → logprob: -13.750019073486328
    5. '```' → logprob: -14.750019073486328
    6. '.join' → logprob: -15.000019073486328
    7. ')' → logprob: -15.125019073486328
    8. ''.' → logprob: -15.375019073486328
    9. 'jo' → logprob: -15.625019073486328
    10. ' join' → logprob: -15.875019073486328

Token 1640: '(in' (ID: 9573)
  Prédit: '(pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pre' → logprob: -0.0004309076175559312
    2. 'pre' → logprob: -7.750431060791016
    3. ' preorder' → logprob: -16.250431060791016
    4. '(' → logprob: -16.875431060791016
    5. '(
' → logprob: -16.875431060791016
    6. '	pre' → logprob: -17.875431060791016
    7. ')' → logprob: -18.125431060791016
    8. '
' → logprob: -18.250431060791016
    9. '   ' → logprob: -18.500431060791016
    10. '(['' → logprob: -18.750431060791016

Token 1641: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.04067990556359291
    2. '(pre' → logprob: -3.540679931640625
    3. 'ode' → logprob: -5.540679931640625
    4. 'ore' → logprob: -5.915679931640625
    5. 'pre' → logprob: -6.915679931640625
    6. 'o' → logprob: -7.540679931640625
    7. 'ored' → logprob: -7.540679931640625
    8. 'it' → logprob: -7.790679931640625
    9. 't' → logprob: -8.165679931640625
    10. ' preorder' → logprob: -8.415679931640625

Token 1642: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07323908805847168
    2. '))' → logprob: -2.6982390880584717
    3. '+' → logprob: -6.323239326477051
    4. ' +' → logprob: -7.198239326477051
    5. '())' → logprob: -8.07323932647705
    6. '[' → logprob: -8.69823932647705
    7. ' )' → logprob: -9.32323932647705
    8. '),' → logprob: -10.32323932647705
    9. ')+' → logprob: -10.57323932647705
    10. ')))' → logprob: -10.69823932647705

Token 1643: '   ' (ID: 271)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.6458584070205688
    2. '<|end|>' → logprob: -1.0208584070205688
    3. 'print' → logprob: -2.3958582878112793
    4. ')' → logprob: -5.145858287811279
    5. '   ' → logprob: -5.395858287811279
    6. '
' → logprob: -5.645858287811279
    7. 'def' → logprob: -6.395858287811279
    8. '```' → logprob: -6.645858287811279
    9. 'Pre' → logprob: -6.895858287811279
    10. '[' → logprob: -7.145858287811279

Token 1644: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.43139776587486267
    2. 'pre' → logprob: -1.056397795677185
    3. 'def' → logprob: -7.431397914886475
    4. '   ' → logprob: -7.556397914886475
    5. '```' → logprob: -8.181397438049316
    6. '<|end|>' → logprob: -8.306397438049316
    7. ')' → logprob: -8.556397438049316
    8. 'return' → logprob: -8.806397438049316
    9. 'Pre' → logprob: -9.181397438049316
    10. '    ' → logprob: -9.556397438049316

Token 1645: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9309428930282593
    2. '(pre' → logprob: -1.1809428930282593
    3. '()' → logprob: -2.055943012237549
    4. '<|end|>' → logprob: -2.430943012237549
    5. 'def' → logprob: -3.305943012237549
    6. 'pre' → logprob: -3.930943012237549
    7. '('' → logprob: -4.555943012237549
    8. ')' → logprob: -4.680943012237549
    9. '#' → logprob: -6.305943012237549
    10. '_pre' → logprob: -6.555943012237549

Token 1646: ' '.' (ID: 12662)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.013900915160775185
    2. 'pre' → logprob: -4.3889007568359375
    3. ' '' → logprob: -6.8889007568359375
    4. ''\' → logprob: -9.013900756835938
    5. '
' → logprob: -9.513900756835938
    6. ' preorder' → logprob: -10.263900756835938
    7. ' pre' → logprob: -10.763900756835938
    8. ''s' → logprob: -10.763900756835938
    9. ''ex' → logprob: -11.388900756835938
    10. ')' → logprob: -11.388900756835938

Token 1647: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.00014692598779220134
    2. 'pre' → logprob: -9.125146865844727
    3. ''' → logprob: -10.875146865844727
    4. ''.' → logprob: -11.125146865844727
    5. ' join' → logprob: -14.125146865844727
    6. 'get' → logprob: -14.625146865844727
    7. '''.' → logprob: -14.750146865844727
    8. '')' → logprob: -14.875146865844727
    9. '(join' → logprob: -14.875146865844727
    10. '.join' → logprob: -14.875146865844727

Token 1648: '(pre' (ID: 48018)
  Prédit: '(pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pre' → logprob: -0.0019288709154352546
    2. 'pre' → logprob: -6.251928806304932
    3. '(['' → logprob: -16.251928329467773
    4. '
' → logprob: -17.876928329467773
    5. '('' → logprob: -17.876928329467773
    6. '(' → logprob: -18.001928329467773
    7. ' preorder' → logprob: -18.501928329467773
    8. '_pre' → logprob: -18.626928329467773
    9. '	pre' → logprob: -19.001928329467773
    10. '([' → logprob: -19.251928329467773

Token 1649: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -7.941850526549388e-06
    2. 'fix' → logprob: -12.250007629394531
    3. 'view' → logprob: -13.375007629394531
    4. 'def' → logprob: -14.875007629394531
    5. 'print' → logprob: -15.500007629394531
    6. 'o' → logprob: -15.875007629394531
    7. '
' → logprob: -16.12500762939453
    8. '```' → logprob: -16.37500762939453
    9. 'pre' → logprob: -16.75000762939453
    10. '   ' → logprob: -16.75000762939453

Token 1650: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02976311184465885
    2. '))' → logprob: -3.5297632217407227
    3. '   ' → logprob: -12.154763221740723
    4. ')
' → logprob: -13.154763221740723
    5. '')' → logprob: -13.404763221740723
    6. ')))' → logprob: -13.779763221740723
    7. '())' → logprob: -14.154763221740723
    8. ')")' → logprob: -14.529763221740723
    9. '()' → logprob: -15.529763221740723
    10. '[' → logprob: -15.654763221740723

Token 1651: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1652: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1653: '
    
' (ID: 15698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1654: 'm' (ID: 76)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.28464052081108093
    2. 'tr' → logprob: -2.7846405506134033
    3. 'for' → logprob: -3.1596405506134033
    4. '<|end|>' → logprob: -3.2846405506134033
    5. '[' → logprob: -3.7846405506134033
    6. 'if' → logprob: -4.034640312194824
    7. 'n' → logprob: -4.409640312194824
    8. '```' → logprob: -4.534640312194824
    9. 'root' → logprob: -4.659640312194824
    10. 'while' → logprob: -5.284640312194824

Token 1655: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0370074138045311
    2. ' =' → logprob: -4.1620073318481445
    3. 'ain' → logprob: -5.1620073318481445
    4. 'm' → logprob: -5.5370073318481445
    5. 'def' → logprob: -5.6620073318481445
    6. '=input' → logprob: -6.2870073318481445
    7. '=m' → logprob: -6.6620073318481445
    8. '=[]' → logprob: -6.9120073318481445
    9. '   ' → logprob: -8.412007331848145
    10. 'ethod' → logprob: -8.537007331848145

Token 1656: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.433413565158844
    2. '10' → logprob: -2.183413505554199
    3. '0' → logprob: -2.558413505554199
    4. '100' → logprob: -2.933413505554199
    5. '[]' → logprob: -3.058413505554199
    6. '[int' → logprob: -4.058413505554199
    7. 'Tre' → logprob: -4.683413505554199
    8. '5' → logprob: -4.683413505554199
    9. '1' → logprob: -5.183413505554199
    10. ' int' → logprob: -5.683413505554199

Token 1657: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00613296078518033
    2. '()' → logprob: -5.381133079528809
    3. 'input' → logprob: -6.631133079528809
    4. '(' → logprob: -9.506133079528809
    5. '('' → logprob: -9.756133079528809
    6. '=input' → logprob: -10.006133079528809
    7. '(sys' → logprob: -12.131133079528809
    8. ' ()' → logprob: -13.256133079528809
    9. ' (' → logprob: -13.381133079528809
    10. '(
' → logprob: -14.006133079528809

Token 1658: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1009771078824997
    2. '()' → logprob: -2.3509771823883057
    3. '().' → logprob: -7.475976943969727
    4. ')' → logprob: -8.725976943969727
    5. '(' → logprob: -10.850976943969727
    6. '())
' → logprob: -11.600976943969727
    7. '();)' → logprob: -13.100976943969727
    8. ' ())' → logprob: -13.225976943969727
    9. '();' → logprob: -13.350976943969727
    10. '('' → logprob: -13.350976943969727

Token 1659: 'tr' (ID: 371)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07578989863395691
    2. 'tr' → logprob: -3.7007899284362793
    3. 'arr' → logprob: -3.7007899284362793
    4. 'tre' → logprob: -4.450789928436279
    5. 'q' → logprob: -5.575789928436279
    6. 'a' → logprob: -6.325789928436279
    7. 'queries' → logprob: -7.075789928436279
    8. 'lst' → logprob: -7.075789928436279
    9. 'results' → logprob: -7.200789928436279
    10. 'n' → logprob: -7.325789928436279

Token 1660: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2136659175157547
    2. ' =' → logprob: -1.9636659622192383
    3. 'ap' → logprob: -3.2136659622192383
    4. 'e' → logprob: -5.213665962219238
    5. 'ee' → logprob: -5.213665962219238
    6. ',' → logprob: -8.963665962219238
    7. 'eep' → logprob: -9.338665962219238
    8. 'ep' → logprob: -9.463665962219238
    9. 's' → logprob: -9.463665962219238
    10. '=
' → logprob: -9.588665962219238

Token 1661: ' Tre' (ID: 14031)
  Prédit: 'Tre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tre' → logprob: -2.6656825866666622e-05
    2. ' Tre' → logprob: -10.62502670288086
    3. 'T' → logprob: -13.00002670288086
    4. 'Tr' → logprob: -17.25002670288086
    5. 'Treas' → logprob: -17.37502670288086
    6. '
' → logprob: -18.75002670288086
    7. 'tre' → logprob: -18.87502670288086
    8. 'Trie' → logprob: -19.00002670288086
    9. 'Ter' → logprob: -19.12502670288086
    10. '_T' → logprob: -19.50002670288086

Token 1662: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -2.696889623621246e-06
    2. 'p' → logprob: -14.12500286102295
    3. '(ap' → logprob: -14.75000286102295
    4. 'ап' → logprob: -14.93750286102295
    5. '	ap' → logprob: -15.62500286102295
    6. 'a' → logprob: -15.87500286102295
    7. 'ep' → logprob: -16.000001907348633
    8. 'aps' → logprob: -16.312501907348633
    9. '
' → logprob: -16.687501907348633
    10. '[' → logprob: -17.062501907348633

Token 1663: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0050642830319702625
    2. '()
' → logprob: -5.630064487457275
    3. '([]' → logprob: -7.130064487457275
    4. '([' → logprob: -7.505064487457275
    5. '(m' → logprob: -9.880064010620117
    6. '(list' → logprob: -11.005064010620117
    7. '[]' → logprob: -11.505064010620117
    8. '(range' → logprob: -11.880064010620117
    9. '([])
' → logprob: -12.255064010620117
    10. '()\' → logprob: -12.630064010620117

Token 1664: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00018411019118502736
    2. 'arr' → logprob: -9.250184059143066
    3. 'a' → logprob: -10.125184059143066
    4. 'results' → logprob: -11.375184059143066
    5. 'keys' → logprob: -11.750184059143066
    6. 'res' → logprob: -12.000184059143066
    7. 'queries' → logprob: -12.500184059143066
    8. 'commands' → logprob: -12.750184059143066
    9. 'tr' → logprob: -12.750184059143066
    10. 'result' → logprob: -12.875184059143066

Token 1665: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0019298245897516608
    2. ' _' → logprob: -6.251929759979248
    3. '_i' → logprob: -14.126930236816406
    4. ' i' → logprob: -15.126930236816406
    5. ' ' → logprob: -16.126930236816406
    6. 'i' → logprob: -16.876930236816406
    7. ' in' → logprob: -17.126930236816406
    8. '_=' → logprob: -17.376930236816406
    9. 'range' → logprob: -17.501930236816406
    10. ' ' → logprob: -17.626930236816406

Token 1666: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04559794068336487
    2. ' range' → logprob: -3.795598030090332
    3. 'in' → logprob: -4.420598030090332
    4. '_' → logprob: -5.170598030090332
    5. ' in' → logprob: -5.545598030090332
    6. 'm' → logprob: -8.045598030090332
    7. 'tr' → logprob: -9.795598030090332
    8. '(range' → logprob: -10.670598030090332
    9. '()' → logprob: -11.170598030090332
    10. '_range' → logprob: -11.420598030090332

Token 1667: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0021915410179644823
    2. ' range' → logprob: -6.127191543579102
    3. 'm' → logprob: -13.002191543579102
    4. 'r' → logprob: -14.502191543579102
    5. '_' → logprob: -14.752191543579102
    6. '(range' → logprob: -14.752191543579102
    7. 'rang' → logprob: -14.877191543579102
    8. 'map' → logprob: -15.002191543579102
    9. '	range' → logprob: -15.002191543579102
    10. 'tr' → logprob: -15.127191543579102

Token 1668: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.00048298496403731406
    2. '(' → logprob: -8.500482559204102
    3. 'm' → logprob: -8.875482559204102
    4. '(int' → logprob: -9.000482559204102
    5. ' (' → logprob: -11.375482559204102
    6. '(
' → logprob: -13.000482559204102
    7. '()' → logprob: -13.500482559204102
    8. '(range' → logprob: -14.500482559204102
    9. ' m' → logprob: -14.875482559204102
    10. 'int' → logprob: -16.1254825592041

Token 1669: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15267667174339294
    2. '):
' → logprob: -3.027676582336426
    3. ':
' → logprob: -3.152676582336426
    4. '):' → logprob: -3.277676582336426
    5. ' :' → logprob: -5.402676582336426
    6. '():
' → logprob: -5.652676582336426
    7. '   ' → logprob: -6.527676582336426
    8. ',' → logprob: -7.027676582336426
    9. '():' → logprob: -7.527676582336426
    10. '<|end|>' → logprob: -7.902676582336426

Token 1670: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11734110116958618
    2. '	line' → logprob: -2.9923410415649414
    3. 'line' → logprob: -4.242341041564941
    4. ' line' → logprob: -4.742341041564941
    5. '	op' → logprob: -4.992341041564941
    6. '	command' → logprob: -5.117341041564941
    7. 't' → logprob: -5.492341041564941
    8. 'command' → logprob: -5.742341041564941
    9. '	cmd' → logprob: -6.117341041564941
    10. ' op' → logprob: -6.242341041564941

Token 1671: ' query' (ID: 5703)
  Prédit: 'cmd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmd' → logprob: -0.23275908827781677
    2. 'line' → logprob: -2.2327589988708496
    3. 'command' → logprob: -3.4827589988708496
    4. 'op' → logprob: -3.9827589988708496
    5. 'q' → logprob: -4.35775899887085
    6. 't' → logprob: -4.48275899887085
    7. 'a' → logprob: -4.48275899887085
    8. 's' → logprob: -5.35775899887085
    9. 'l' → logprob: -6.23275899887085
    10. 'query' (adapté à ' query') → logprob: -6.35775899887085

Token 1672: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16117669641971588
    2. '=' → logprob: -1.9111766815185547
    3. ',' → logprob: -7.411176681518555
    4. '=line' → logprob: -8.911176681518555
    5. '   ' → logprob: -9.286176681518555
    6. ' ' → logprob: -10.036176681518555
    7. 'line' → logprob: -11.036176681518555
    8. '_line' → logprob: -11.286176681518555
    9. '_' → logprob: -11.411176681518555
    10. '	' → logprob: -11.786176681518555

Token 1673: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.054855093359947205
    2. '*x' → logprob: -4.304854869842529
    3. '*v' → logprob: -4.679854869842529
    4. '*a' → logprob: -4.929854869842529
    5. 'key' → logprob: -5.179854869842529
    6. '*k' → logprob: -5.554854869842529
    7. 'rest' → logprob: -6.304854869842529
    8. 'data' → logprob: -6.554854869842529
    9. '*l' → logprob: -6.554854869842529
    10. '=' → logprob: -6.679854869842529

Token 1674: 'args' (ID: 4285)
  Prédit: 'args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.024736028164625168
    2. 'rest' → logprob: -4.274735927581787
    3. 'params' → logprob: -5.274735927581787
    4. 'data' → logprob: -5.274735927581787
    5. 'arr' → logprob: -10.024736404418945
    6. 'vals' → logprob: -10.024736404418945
    7. ' args' → logprob: -10.399736404418945
    8. 'values' → logprob: -10.524736404418945
    9. 'tokens' → logprob: -10.649736404418945
    10. 'keys' → logprob: -10.774736404418945

Token 1675: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3155598044395447
    2. ' =' → logprob: -1.3155598640441895
    3. '=input' → logprob: -6.4405598640441895
    4. '   ' → logprob: -7.8155598640441895
    5. '=line' → logprob: -8.565559387207031
    6. '=int' → logprob: -9.815559387207031
    7. ' ' → logprob: -11.440559387207031
    8. '=query' → logprob: -12.065559387207031
    9. '=sys' → logprob: -12.440559387207031
    10. 'input' → logprob: -12.440559387207031

Token 1676: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014353068545460701
    2. ' =' → logprob: -4.389353275299072
    3. '_' → logprob: -6.514353275299072
    4. '_=' → logprob: -8.514352798461914
    5. '*' → logprob: -9.014352798461914
    6. '=input' → logprob: -12.014352798461914
    7. ' ' → logprob: -12.014352798461914
    8. '   ' → logprob: -12.514352798461914
    9. '\n' → logprob: -12.514352798461914
    10. '=line' → logprob: -13.014352798461914

Token 1677: ' input' (ID: 3422)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.16244712471961975
    2. 'input' → logprob: -1.9124470949172974
    3. ' map' → logprob: -6.412446975708008
    4. 'list' → logprob: -8.037446975708008
    5. ' input' → logprob: -8.287446975708008
    6. '[input' → logprob: -12.912446975708008
    7. '[' → logprob: -13.537446975708008
    8. '(map' → logprob: -15.037446975708008
    9. ' list' → logprob: -15.287446975708008
    10. '(input' → logprob: -15.787446975708008

Token 1678: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.003178782993927598
    2. '()' → logprob: -5.753178596496582
    3. '()
' → logprob: -14.128178596496582
    4. '()[' → logprob: -16.0031795501709
    5. '(' → logprob: -16.2531795501709
    6. ' ().' → logprob: -16.8781795501709
    7. '()
' → logprob: -17.8781795501709
    8. '()

' → logprob: -18.2531795501709
    9. '()\' → logprob: -18.8781795501709
    10. '().'' → logprob: -19.2531795501709

Token 1679: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.07898078113794327
    2. 'strip' → logprob: -2.5789806842803955
    3. 'rstrip' → logprob: -9.328980445861816
    4. ' split' → logprob: -13.203980445861816
    5. '(split' → logprob: -15.578980445861816
    6. ' strip' → logprob: -16.203981399536133
    7. 'spl' → logprob: -16.828981399536133
    8. '_split' → logprob: -17.703981399536133
    9. 'str' → logprob: -19.078981399536133
    10. '().' → logprob: -19.203981399536133

Token 1680: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31641751527786255
    2. '
' → logprob: -2.0664174556732178
    3. '<|end|>' → logprob: -2.1914174556732178
    4. '    
' → logprob: -4.066417694091797
    5. '<|end|>' → logprob: -5.316417694091797
    6. ' 
' → logprob: -5.691417694091797
    7. '\n' → logprob: -6.066417694091797
    8. '  
' → logprob: -6.941417694091797
    9. '	
' → logprob: -7.316417694091797
    10. '[' → logprob: -7.441417694091797

Token 1681: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5198836326599121
    2. ' if' → logprob: -1.644883632659912
    3. '<|end|>' → logprob: -2.769883632659912
    4. '    
' → logprob: -3.394883632659912
    5. '	if' → logprob: -3.769883632659912
    6. ' 
' → logprob: -4.019883632659912
    7. '    ' → logprob: -4.019883632659912
    8. '\' → logprob: -4.644883632659912
    9. '	
' → logprob: -4.769883632659912
    10. '```' → logprob: -4.894883632659912

Token 1682: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04284410923719406
    2. ' if' → logprob: -3.29284405708313
    3. '   ' → logprob: -6.417844295501709
    4. 'i' → logprob: -6.542844295501709
    5. '_' → logprob: -7.667844295501709
    6. '[' → logprob: -8.54284381866455
    7. '```' → logprob: -8.79284381866455
    8. 'tr' → logprob: -9.04284381866455
    9. '    ' → logprob: -9.41784381866455
    10. '__' → logprob: -9.41784381866455

Token 1683: ' query' (ID: 5703)
  Prédit: ' query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' query' → logprob: -0.3132902979850769
    2. 'query' → logprob: -1.3132903575897217
    3. '(query' → logprob: -11.1882905960083
    4. '=query' → logprob: -11.5632905960083
    5. '	query' → logprob: -12.6882905960083
    6. 'len' → logprob: -14.1882905960083
    7. '$query' → logprob: -14.5632905960083
    8. '   ' → logprob: -14.9382905960083
    9. ' ' → logprob: -15.4382905960083
    10. ' len' → logprob: -15.5632905960083

Token 1684: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.021816857159137726
    2. '==' → logprob: -3.8968169689178467
    3. '[' → logprob: -7.271816730499268
    4. '=='' → logprob: -8.021817207336426
    5. ' =='' → logprob: -8.646817207336426
    6. '=="' → logprob: -10.771817207336426
    7. ' =="' → logprob: -11.646817207336426
    8. '==
' → logprob: -11.646817207336426
    9. ' =' → logprob: -11.771817207336426
    10. '[]' → logprob: -12.271817207336426

Token 1685: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02683534286916256
    2. '"' → logprob: -3.9018354415893555
    3. ''ins' → logprob: -5.1518354415893555
    4. ''s' → logprob: -8.651835441589355
    5. ' '' → logprob: -9.651835441589355
    6. ''in' → logprob: -9.901835441589355
    7. ''a' → logprob: -10.651835441589355
    8. ''I' → logprob: -10.651835441589355
    9. ''b' → logprob: -10.776835441589355
    10. ''import' → logprob: -11.276835441589355

Token 1686: 'insert' (ID: 14813)
  Prédit: 'insert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'insert' → logprob: -0.3036162257194519
    2. ''' → logprob: -1.5536162853240967
    3. 'I' → logprob: -3.9286162853240967
    4. ''I' → logprob: -5.303616046905518
    5. 'INSERT' → logprob: -5.303616046905518
    6. ''ins' → logprob: -5.553616046905518
    7. ''i' → logprob: -5.553616046905518
    8. ''in' → logprob: -5.803616046905518
    9. 'i' → logprob: -6.303616046905518
    10. '"' → logprob: -6.553616046905518

Token 1687: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.03393843397498131
    2. '':
' → logprob: -3.408938407897949
    3. ''' → logprob: -8.90893840789795
    4. '':
' → logprob: -10.03393840789795
    5. '(':' → logprob: -10.03393840789795
    6. '':'' → logprob: -10.90893840789795
    7. ':' → logprob: -11.53393840789795
    8. ''):' → logprob: -11.65893840789795
    9. ''):
' → logprob: -11.65893840789795
    10. '':

' → logprob: -12.28393840789795

Token 1688: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14776277542114258
    2. ' key' → logprob: -2.0227627754211426
    3. '   ' → logprob: -6.147762775421143
    4. ' tr' → logprob: -6.522762775421143
    5. '
' → logprob: -8.272762298583984
    6. '	tr' → logprob: -8.272762298583984
    7. '	' → logprob: -8.397762298583984
    8. 'tr' → logprob: -9.022762298583984
    9. 'key' → logprob: -9.147762298583984
    10. '	key' → logprob: -9.647762298583984

Token 1689: ' k' (ID: 372)
  Prédit: ' tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tr' → logprob: -0.7861493229866028
    2. 'tr' → logprob: -1.036149263381958
    3. ' key' → logprob: -1.786149263381958
    4. 'key' → logprob: -3.911149263381958
    5. '       ' → logprob: -6.286149501800537
    6. '   ' → logprob: -10.286149024963379
    7. '	tr' → logprob: -11.411149024963379
    8. 'k' (adapté à ' k') → logprob: -11.661149024963379
    9. '        
' → logprob: -11.661149024963379
    10. 'x' → logprob: -12.036149024963379

Token 1690: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07077598571777344
    2. '=' → logprob: -2.8207759857177734
    3. '=int' → logprob: -4.945775985717773
    4. ',' → logprob: -6.445775985717773
    5. 'int' → logprob: -10.195775985717773
    6. ',int' → logprob: -10.820775985717773
    7. ',tr' → logprob: -13.070775985717773
    8. 'tr' → logprob: -13.570775985717773
    9. '=args' → logprob: -13.820775985717773
    10. ' int' → logprob: -13.820775985717773

Token 1691: ' p' (ID: 275)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8612016439437866
    2. ' =' → logprob: -1.4862016439437866
    3. 'int' → logprob: -1.7362016439437866
    4. 'p' → logprob: -2.611201763153076
    5. '=int' → logprob: -3.361201763153076
    6. 'priority' → logprob: -3.611201763153076
    7. ' p' → logprob: -4.736201763153076
    8. 't' → logprob: -5.361201763153076
    9. 'v' → logprob: -5.486201763153076
    10. 'i' → logprob: -5.611201763153076

Token 1692: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03392137959599495
    2. ' =' → logprob: -3.408921480178833
    3. ',' → logprob: -8.658921241760254
    4. '=int' → logprob: -9.283921241760254
    5. 'int' → logprob: -12.783921241760254
    6. ' ' → logprob: -13.908921241760254
    7. '=
' → logprob: -14.408921241760254
    8. '=float' → logprob: -14.658921241760254
    9. '<|end|>' → logprob: -14.658921241760254
    10. '=

' → logprob: -14.908921241760254

Token 1693: ' map' (ID: 4014)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00013440960901789367
    2. 'map' → logprob: -9.125134468078613
    3. ' int' → logprob: -10.750134468078613
    4. 'float' → logprob: -13.000134468078613
    5. '(int' → logprob: -14.125134468078613
    6. 'args' → logprob: -14.375134468078613
    7. '[int' → logprob: -15.000134468078613
    8. ' map' → logprob: -16.500133514404297
    9. 'list' → logprob: -18.375133514404297
    10. '	int' → logprob: -18.500133514404297

Token 1694: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.16022931039333344
    2. 'int' → logprob: -1.9102293252944946
    3. '[int' → logprob: -12.910229682922363
    4. '(float' → logprob: -13.660229682922363
    5. 'str' → logprob: -14.410229682922363
    6. 'float' → logprob: -15.035229682922363
    7. '(str' → logprob: -15.285229682922363
    8. '=int' → logprob: -15.660229682922363
    9. ',int' → logprob: -16.285228729248047
    10. ' int' → logprob: -17.285228729248047

Token 1695: ',' (ID: 11)
  Prédit: '(args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(args' → logprob: -0.0009937490103766322
    2. 'args' → logprob: -7.500993728637695
    3. ',args' → logprob: -8.000993728637695
    4. ',' → logprob: -10.000993728637695
    5. '(' → logprob: -10.375993728637695
    6. '(
' → logprob: -11.250993728637695
    7. ')' → logprob: -12.000993728637695
    8. '=args' → logprob: -13.000993728637695
    9. '	args' → logprob: -13.625993728637695
    10. '   ' → logprob: -13.750993728637695

Token 1696: ' args' (ID: 4966)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.0005059692775830626
    2. ' args' → logprob: -7.7505059242248535
    3. '(args' → logprob: -9.500506401062012
    4. '	args' → logprob: -16.000505447387695
    5. 'input' → logprob: -16.125505447387695
    6. ',args' → logprob: -16.250505447387695
    7. '$args' → logprob: -16.875505447387695
    8. '=args' → logprob: -17.125505447387695
    9. '   ' → logprob: -17.500505447387695
    10. '
' → logprob: -18.625505447387695

Token 1697: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20433121919631958
    2. ')
' → logprob: -1.9543311595916748
    3. '()' → logprob: -3.704331159591675
    4. '()
' → logprob: -4.954331398010254
    5. ');' → logprob: -5.079331398010254
    6. '       ' → logprob: -6.329331398010254
    7. '())' → logprob: -6.704331398010254
    8. '())
' → logprob: -7.829331398010254
    9. '
' → logprob: -7.954331398010254
    10. '(' → logprob: -8.204331398010254

Token 1698: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002478694950696081
    2. 'tr' → logprob: -9.125247955322266
    3. '   ' → logprob: -9.500247955322266
    4. '	tr' → logprob: -10.375247955322266
    5. '
' → logprob: -10.625247955322266
    6. '	' → logprob: -12.250247955322266
    7. '```' → logprob: -14.500247955322266
    8. ' ' → logprob: -14.625247955322266
    9. ',tr' → logprob: -14.625247955322266
    10. ' tr' → logprob: -14.875247955322266

Token 1699: ' tr' (ID: 498)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' (adapté à ' tr') → logprob: -0.00040540905320085585
    2. ' tr' → logprob: -8.375405311584473
    3. '       ' → logprob: -8.750405311584473
    4. '   ' → logprob: -11.250405311584473
    5. '	tr' → logprob: -12.750405311584473
    6. 'print' → logprob: -15.500405311584473
    7. '
' → logprob: -15.750405311584473
    8. 'try' → logprob: -17.12540626525879
    9. 'tre' → logprob: -17.12540626525879
    10. ' ' → logprob: -17.37540626525879

Token 1700: '.insert' (ID: 13222)
  Prédit: '.insert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.insert' → logprob: -0.00018089536752086133
    2. '.' → logprob: -8.625181198120117
    3. '.in' → logprob: -13.875181198120117
    4. 'insert' → logprob: -15.625181198120117
    5. '\.' → logprob: -16.875181198120117
    6. ' .' → logprob: -17.375181198120117
    7. '.append' → logprob: -17.625181198120117
    8. '.Insert' → logprob: -18.750181198120117
    9. '.merge' → logprob: -18.875181198120117
    10. '.put' → logprob: -19.125181198120117

Token 1701: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -1.0087516784551553e-05
    2. '(' → logprob: -11.62501049041748
    3. 'k' → logprob: -13.75001049041748
    4. ' (' → logprob: -17.750009536743164
    5. '((' → logprob: -18.250009536743164
    6. ' k' → logprob: -18.625009536743164
    7. '(
' → logprob: -18.750009536743164
    8. '(p' → logprob: -19.625009536743164
    9. '(key' → logprob: -19.875009536743164
    10. '(int' → logprob: -20.250009536743164

Token 1702: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010932860895991325
    2. ',p' → logprob: -4.635932922363281
    3. ' ,' → logprob: -6.760932922363281
    4. ')' → logprob: -11.260932922363281
    5. ',k' → logprob: -12.635932922363281
    6. 'p' → logprob: -14.635932922363281
    7. ',
' → logprob: -14.635932922363281
    8. ',int' → logprob: -14.760932922363281
    9. ' p' → logprob: -15.885932922363281
    10. ',q' → logprob: -16.88593292236328

Token 1703: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.000492268183734268
    2. ' p' → logprob: -7.875492095947266
    3. 'float' → logprob: -9.125492095947266
    4. ' float' → logprob: -13.875492095947266
    5. 'random' → logprob: -14.125492095947266
    6. '  ' → logprob: -14.500492095947266
    7. '    ' → logprob: -15.250492095947266
    8. '1' → logprob: -15.625492095947266
    9. '   ' → logprob: -15.625492095947266
    10. ' ' → logprob: -15.750492095947266

Token 1704: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.73314929776825e-05
    2. ')
' → logprob: -9.50008773803711
    3. '<|end|>' → logprob: -12.00008773803711
    4. ' )' → logprob: -12.87508773803711
    5. '   ' → logprob: -13.25008773803711
    6. '       ' → logprob: -13.50008773803711
    7. ')return' → logprob: -15.87508773803711
    8. '),' → logprob: -16.87508773803711
    9. ' ' → logprob: -17.12508773803711
    10. ')}' → logprob: -17.25008773803711

Token 1705: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017162498086690903
    2. '<|end|>' → logprob: -4.267162322998047
    3. 'elif' → logprob: -5.892162322998047
    4. '```' → logprob: -9.392162322998047
    5. '<|end|>' → logprob: -10.642162322998047
    6. '	elif' → logprob: -10.642162322998047
    7. '
' → logprob: -10.767162322998047
    8. ' elif' → logprob: -10.892162322998047
    9. '...' → logprob: -11.142162322998047
    10. ')' → logprob: -11.267162322998047

Token 1706: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.7178254723548889
    2. '   ' → logprob: -0.8428254723548889
    3. '<|end|>' → logprob: -2.592825412750244
    4. ' elif' → logprob: -5.717825412750244
    5. ' ' → logprob: -6.217825412750244
    6. '```' → logprob: -8.092825889587402
    7. '...' → logprob: -8.342825889587402
    8. '	elif' → logprob: -8.467825889587402
    9. 'if' → logprob: -8.842825889587402
    10. '
' → logprob: -8.967825889587402

Token 1707: ' query' (ID: 5703)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.12699592113494873
    2. ' query' → logprob: -2.1269960403442383
    3. '(query' → logprob: -9.751996040344238
    4. '=query' → logprob: -11.626996040344238
    5. '$query' → logprob: -14.876996040344238
    6. '	query' → logprob: -15.251996040344238
    7. 'tr' → logprob: -16.626995086669922
    8. 'args' → logprob: -17.376995086669922
    9. '.query' → logprob: -17.626995086669922
    10. ' ' → logprob: -18.251995086669922

Token 1708: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08897370845079422
    2. '==' → logprob: -2.4639737606048584
    3. '=' → logprob: -11.213973999023438
    4. ' =' → logprob: -11.463973999023438
    5. '[' → logprob: -12.088973999023438
    6. '=='' → logprob: -13.213973999023438
    7. '===' → logprob: -14.088973999023438
    8. '==
' → logprob: -14.338973999023438
    9. ' =='' → logprob: -15.463973999023438
    10. ' ' → logprob: -15.588973999023438

Token 1709: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0025374903343617916
    2. ' '' → logprob: -6.252537727355957
    3. ''s' → logprob: -7.752537727355957
    4. ''d' → logprob: -9.377537727355957
    5. '('' → logprob: -10.377537727355957
    6. ''ex' → logprob: -11.502537727355957
    7. '   ' → logprob: -11.627537727355957
    8. ' ' → logprob: -11.627537727355957
    9. ''ins' → logprob: -11.627537727355957
    10. '"' → logprob: -11.752537727355957

Token 1710: 'find' (ID: 6555)
  Prédit: 'delete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delete' → logprob: -0.4407947361469269
    2. ''' → logprob: -1.0657947063446045
    3. 'print' → logprob: -4.565794944763184
    4. ''s' → logprob: -7.565794944763184
    5. ''ex' → logprob: -8.565794944763184
    6. 'merge' → logprob: -8.690794944763184
    7. 'contains' → logprob: -8.815794944763184
    8. ''d' → logprob: -8.940794944763184
    9. ''b' → logprob: -9.065794944763184
    10. 'remove' → logprob: -9.565794944763184

Token 1711: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.26203984022140503
    2. '':' → logprob: -2.88703989982605
    3. '__':
' → logprob: -2.88703989982605
    4. ':
' → logprob: -3.01203989982605
    5. '<|end|>' → logprob: -3.63703989982605
    6. ''' → logprob: -4.637039661407471
    7. ':' → logprob: -4.637039661407471
    8. ' =' → logprob: -5.387039661407471
    9. ''):
' → logprob: -6.012039661407471
    10. '   ' → logprob: -6.012039661407471

Token 1712: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25714537501335144
    2. 'k' → logprob: -2.257145404815674
    3. ' k' → logprob: -2.632145404815674
    4. '   ' → logprob: -3.007145404815674
    5. 'key' → logprob: -8.132144927978516
    6. ' key' → logprob: -8.507144927978516
    7. '	k' → logprob: -9.632144927978516
    8. '```' → logprob: -10.382144927978516
    9. '
' → logprob: -10.507144927978516
    10. '#' → logprob: -10.757144927978516

Token 1713: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.0015035520773380995
    2. ' k' → logprob: -7.1265034675598145
    3. 'print' → logprob: -7.3765034675598145
    4. '   ' → logprob: -9.751503944396973
    5. '       ' → logprob: -12.126503944396973
    6. 'x' → logprob: -12.501503944396973
    7. 'key' → logprob: -12.876503944396973
    8. ' print' → logprob: -13.126503944396973
    9. 'v' → logprob: -14.626503944396973
    10. '	k' → logprob: -16.001502990722656

Token 1714: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.387684166431427
    2. '=' → logprob: -1.1376841068267822
    3. ',' → logprob: -7.262684345245361
    4. '=int' → logprob: -9.387683868408203
    5. '   ' → logprob: -11.137683868408203
    6. ' ' → logprob: -12.387683868408203
    7. ' in' → logprob: -13.012683868408203
    8. '    ' → logprob: -13.387683868408203
    9. ',k' → logprob: -14.012683868408203
    10. 'in' → logprob: -14.012683868408203

Token 1715: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.320199877838604e-07
    2. ' int' → logprob: -14.75
    3. '   ' → logprob: -20.875
    4. 'args' → logprob: -21.0
    5. '
' → logprob: -22.625
    6. '(int' → logprob: -22.75
    7. 'ints' → logprob: -23.125
    8. '	int' → logprob: -23.125
    9. '[int' → logprob: -23.125
    10. '=int' → logprob: -23.75

Token 1716: '(args' (ID: 14885)
  Prédit: '(args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(args' → logprob: -0.0002614550176076591
    2. 'args' → logprob: -8.250261306762695
    3. ' args' → logprob: -16.875261306762695
    4. '(*' → logprob: -17.750261306762695
    5. '	args' → logprob: -18.000261306762695
    6. ',args' → logprob: -18.375261306762695
    7. '=args' → logprob: -18.500261306762695
    8. '(' → logprob: -18.750261306762695
    9. '$args' → logprob: -18.875261306762695
    10. '(k' → logprob: -21.250261306762695

Token 1717: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2664456789934775e-06
    2. '0' → logprob: -13.625000953674316
    3. ')' → logprob: -18.500001907348633
    4. '   ' → logprob: -18.625001907348633
    5. '(' → logprob: -19.125001907348633
    6. ')
' → logprob: -19.625001907348633
    7. '[
' → logprob: -20.375001907348633
    8. '
' → logprob: -20.625001907348633
    9. '```' → logprob: -20.875001907348633
    10. '1' → logprob: -21.125001907348633

Token 1718: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. '[' → logprob: -12.625003814697266
    3. '
' → logprob: -18.875003814697266
    4. ' ' → logprob: -19.000003814697266
    5. '   ' → logprob: -19.750003814697266
    6. '])' → logprob: -21.000003814697266
    7. ')' → logprob: -21.500003814697266
    8. '```' → logprob: -22.125003814697266
    9. '-' → logprob: -22.875003814697266
    10. '(' → logprob: -23.125003814697266

Token 1719: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.04863539710640907
    2. ')' → logprob: -3.048635482788086
    3. '       ' → logprob: -10.423635482788086
    4. ')
' → logprob: -11.798635482788086
    5. '   ' → logprob: -11.923635482788086
    6. ' )
' → logprob: -13.298635482788086
    7. ')`
' → logprob: -13.673635482788086
    8. ');' → logprob: -14.173635482788086
    9. ')

' → logprob: -15.423635482788086
    10. ')return' → logprob: -16.673635482788086

Token 1720: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008718342520296574
    2. 'print' → logprob: -5.383718490600586
    3. '   ' → logprob: -5.508718490600586
    4. '```' → logprob: -11.133718490600586
    5. ' print' → logprob: -11.508718490600586
    6. '
' → logprob: -12.633718490600586
    7. 'if' → logprob: -13.008718490600586
    8. '	' → logprob: -13.758718490600586
    9. 'result' → logprob: -13.883718490600586
    10. '	print' → logprob: -14.008718490600586

Token 1721: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.3915141355246305e-05
    2. ' print' → logprob: -11.12502384185791
    3. 'if' → logprob: -12.37502384185791
    4. '   ' → logprob: -13.50002384185791
    5. '
' → logprob: -13.75002384185791
    6. '```' → logprob: -13.87502384185791
    7. 'try' → logprob: -14.12502384185791
    8. '       ' → logprob: -14.37502384185791
    9. 'pr' → logprob: -16.750024795532227
    10. '``' → logprob: -18.000024795532227

Token 1722: '('' (ID: 706)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.7279335856437683
    2. '(k' → logprob: -1.227933645248413
    3. '('' → logprob: -2.477933645248413
    4. '(' → logprob: -2.727933645248413
    5. '(tr' → logprob: -2.727933645248413
    6. '("' → logprob: -5.102933406829834
    7. '(True' → logprob: -6.602933406829834
    8. '((' → logprob: -7.102933406829834
    9. 'int' → logprob: -8.227933883666992
    10. '1' → logprob: -8.352933883666992

Token 1723: 'yes' (ID: 6763)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2569965720176697
    2. 'True' → logprob: -2.2569966316223145
    3. '"' → logprob: -2.5069966316223145
    4. 'Yes' → logprob: -4.5069966316223145
    5. '1' → logprob: -4.6319966316223145
    6. 'k' → logprob: -5.7569966316223145
    7. 'YES' → logprob: -6.0069966316223145
    8. ''T' → logprob: -6.2569966316223145
    9. 'key' → logprob: -6.5069966316223145
    10. 'int' → logprob: -6.6319966316223145

Token 1724: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4037621021270752
    2. 'if' → logprob: -1.1537621021270752
    3. ' if' → logprob: -4.153761863708496
    4. '"' → logprob: -7.278761863708496
    5. '')' → logprob: -8.653761863708496
    6. ')' → logprob: -9.278761863708496
    7. ''''' → logprob: -10.778761863708496
    8. ')'' → logprob: -11.153761863708496
    9. '```' → logprob: -11.778761863708496
    10. 'print' → logprob: -11.903761863708496

Token 1725: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3883741497993469
    2. ' if' → logprob: -1.1383740901947021
    3. ')' → logprob: -6.513374328613281
    4. '   ' → logprob: -11.388374328613281
    5. ''' → logprob: -13.263374328613281
    6. '       ' → logprob: -13.388374328613281
    7. '```' → logprob: -13.888374328613281
    8. ',' → logprob: -14.388374328613281
    9. '')' → logprob: -14.513374328613281
    10. '    ' → logprob: -14.638374328613281

Token 1726: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.004081247374415398
    2. ' k' → logprob: -5.5040812492370605
    3. '(k' → logprob: -13.254080772399902
    4. 'tr' → logprob: -14.504080772399902
    5. '   ' → logprob: -15.754080772399902
    6. '
' → logprob: -16.00408172607422
    7. ' ' → logprob: -16.37908172607422
    8. ' (' → logprob: -16.62908172607422
    9. '(' → logprob: -17.25408172607422
    10. 'key' → logprob: -17.25408172607422

Token 1727: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25193139910697937
    2. 'in' → logprob: -1.5019314289093018
    3. '<|end|>' → logprob: -14.126931190490723
    4. ' ' → logprob: -15.001931190490723
    5. '[' → logprob: -15.376931190490723
    6. ')' → logprob: -15.501931190490723
    7. '	in' → logprob: -15.626931190490723
    8. '
' → logprob: -15.876931190490723
    9. 'In' → logprob: -16.50193214416504
    10. ' ' → logprob: -16.62693214416504

Token 1728: ' tr' (ID: 498)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -7.505351095460355e-05
    2. ' tr' → logprob: -9.500075340270996
    3. '
' → logprob: -16.87507438659668
    4. '(tr' → logprob: -18.00007438659668
    5. '<tr' → logprob: -18.62507438659668
    6. '	tr' → logprob: -18.75007438659668
    7. '   ' → logprob: -19.75007438659668
    8. ' ' → logprob: -20.12507438659668
    9. 'tre' → logprob: -21.00007438659668
    10. ' ' → logprob: -21.25007438659668

Token 1729: ' else' (ID: 1203)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.019359542056918144
    2. '.root' → logprob: -4.144359588623047
    3. 'tr' → logprob: -5.894359588623047
    4. ')' → logprob: -8.394359588623047
    5. 'else' → logprob: -8.519359588623047
    6. ' root' → logprob: -9.644359588623047
    7. ' else' → logprob: -9.894359588623047
    8. '.tr' → logprob: -11.644359588623047
    9. '(root' → logprob: -12.269359588623047
    10. '
' → logprob: -12.644359588623047

Token 1730: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00037383107701316476
    2. ''ny' → logprob: -8.000373840332031
    3. ' '' → logprob: -10.625373840332031
    4. '   ' → logprob: -12.625373840332031
    5. '"' → logprob: -12.875373840332031
    6. ''any' → logprob: -13.000373840332031
    7. ''ok' → logprob: -13.500373840332031
    8. ''ho' → logprob: -13.625373840332031
    9. ''n' → logprob: -14.000373840332031
    10. ''y' → logprob: -14.000373840332031

Token 1731: 'no' (ID: 1750)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00027718624914996326
    2. 'no' → logprob: -8.250277519226074
    3. ''ny' → logprob: -11.250277519226074
    4. '   ' → logprob: -13.750277519226074
    5. '	no' → logprob: -14.125277519226074
    6. ''n' → logprob: -14.625277519226074
    7. ' '' → logprob: -15.750277519226074
    8. ''any' → logprob: -16.125276565551758
    9. '(no' → logprob: -16.500276565551758
    10. ''ho' → logprob: -16.750276565551758

Token 1732: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006349642761051655
    2. '')' → logprob: -5.381349563598633
    3. ' else' → logprob: -6.881349563598633
    4. 'else' → logprob: -7.381349563598633
    5. ')
' → logprob: -10.506349563598633
    6. ' )' → logprob: -10.881349563598633
    7. '<|end|>' → logprob: -10.881349563598633
    8. '")' → logprob: -12.756349563598633
    9. '   ' → logprob: -13.256349563598633
    10. '`)' → logprob: -13.381349563598633

Token 1733: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1145881786942482
    2. '<|end|>' → logprob: -2.4895882606506348
    3. 'elif' → logprob: -3.7395882606506348
    4. 'else' → logprob: -7.614588260650635
    5. '	elif' → logprob: -7.739588260650635
    6. ' elif' → logprob: -7.989588260650635
    7. '<|end|>' → logprob: -9.239587783813477
    8. '...' → logprob: -9.614587783813477
    9. '```' → logprob: -10.239587783813477
    10. ' else' → logprob: -10.489587783813477

Token 1734: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.005872386507689953
    2. '   ' → logprob: -5.2558722496032715
    3. ' elif' → logprob: -8.00587272644043
    4. '	elif' → logprob: -8.13087272644043
    5. ' ' → logprob: -12.88087272644043
    6. '<|end|>' → logprob: -12.88087272644043
    7. '#elif' → logprob: -13.25587272644043
    8. 'else' → logprob: -13.75587272644043
    9. '```' → logprob: -13.88087272644043
    10. '  ' → logprob: -13.88087272644043

Token 1735: ' query' (ID: 5703)
  Prédit: ' query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' query' → logprob: -0.0554303303360939
    2. 'query' → logprob: -2.9304304122924805
    3. '(query' → logprob: -8.30543041229248
    4. '=query' → logprob: -9.05543041229248
    5. ' args' → logprob: -10.18043041229248
    6. ' len' → logprob: -10.30543041229248
    7. '	query' → logprob: -10.43043041229248
    8. 'args' → logprob: -10.68043041229248
    9. ' q' → logprob: -11.68043041229248
    10. '$query' → logprob: -11.80543041229248

Token 1736: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.023347849026322365
    2. '==' → logprob: -3.773347854614258
    3. '=='' → logprob: -9.773347854614258
    4. '=' → logprob: -11.523347854614258
    5. ' =' → logprob: -11.523347854614258
    6. '[' → logprob: -11.773347854614258
    7. ' =='' → logprob: -12.898347854614258
    8. ' ' → logprob: -13.023347854614258
    9. '_' → logprob: -13.023347854614258
    10. '=="' → logprob: -13.398347854614258

Token 1737: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.12765391170978546
    2. ''s' → logprob: -2.1276538372039795
    3. ' '' → logprob: -9.002654075622559
    4. ''d' → logprob: -9.002654075622559
    5. ''post' → logprob: -9.252654075622559
    6. ''ins' → logprob: -9.377654075622559
    7. ''ex' → logprob: -9.752654075622559
    8. ''b' → logprob: -10.127654075622559
    9. ''in' → logprob: -10.627654075622559
    10. '('' → logprob: -10.752654075622559

Token 1738: 'delete' (ID: 8509)
  Prédit: 'delete'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delete' → logprob: -0.318678617477417
    2. 'print' → logprob: -1.568678617477417
    3. 'split' → logprob: -3.443678617477417
    4. 'sort' → logprob: -4.193678855895996
    5. 'size' → logprob: -5.193678855895996
    6. 'get' → logprob: -5.943678855895996
    7. 'in' → logprob: -6.068678855895996
    8. 'remove' → logprob: -6.693678855895996
    9. '__' → logprob: -7.193678855895996
    10. 'getitem' → logprob: -7.193678855895996

Token 1739: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4055805206298828
    2. '':
' → logprob: -1.4055805206298828
    3. ':' → logprob: -3.405580520629883
    4. '       ' → logprob: -3.780580520629883
    5. '':' → logprob: -4.280580520629883
    6. '   ' → logprob: -4.780580520629883
    7. '__':
' → logprob: -5.780580520629883
    8. '):
' → logprob: -6.655580520629883
    9. '<|end|>' → logprob: -7.030580520629883
    10. ''):
' → logprob: -7.530580520629883

Token 1740: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022649899125099182
    2. ' k' → logprob: -3.8976500034332275
    3. '   ' → logprob: -6.397649765014648
    4. 'k' → logprob: -7.897649765014648
    5. '```' → logprob: -10.272649765014648
    6. '	k' → logprob: -10.772649765014648
    7. '
' → logprob: -12.772649765014648
    8. '	   ' → logprob: -13.022649765014648
    9. ',k' → logprob: -13.647649765014648
    10. '	' → logprob: -13.772649765014648

Token 1741: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.04882944002747536
    2. ' k' → logprob: -3.0488295555114746
    3. '       ' → logprob: -8.423829078674316
    4. '   ' → logprob: -11.173829078674316
    5. '	k' → logprob: -12.298829078674316
    6. '_k' → logprob: -12.923829078674316
    7. '{k' → logprob: -14.673829078674316
    8. ',k' → logprob: -14.673829078674316
    9. '
' → logprob: -15.423829078674316
    10. '```' → logprob: -15.673829078674316

Token 1742: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021314769983292
    2. '=' → logprob: -2.350213050842285
    3. '=int' → logprob: -12.100213050842285
    4. ',' → logprob: -14.600213050842285
    5. ' ' → logprob: -14.850213050842285
    6. '<|end|>' → logprob: -16.6002140045166
    7. 'int' → logprob: -17.1002140045166
    8. '   ' → logprob: -17.6002140045166
    9. '=
' → logprob: -17.9752140045166
    10. '  ' → logprob: -18.4752140045166

Token 1743: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0015023599844425917
    2. ' int' → logprob: -6.501502513885498
    3. '=int' → logprob: -18.626502990722656
    4. '(int' → logprob: -19.126502990722656
    5. '	int' → logprob: -20.126502990722656
    6. '[int' → logprob: -20.626502990722656
    7. '<int' → logprob: -21.376502990722656
    8. '   ' → logprob: -21.876502990722656
    9. 'ints' → logprob: -22.751502990722656
    10. ':int' → logprob: -23.001502990722656

Token 1744: '(args' (ID: 14885)
  Prédit: '(args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(args' → logprob: -2.339278580620885e-06
    2. 'args' → logprob: -13.000001907348633
    3. '=args' → logprob: -19.375001907348633
    4. ',args' → logprob: -20.500001907348633
    5. '(int' → logprob: -21.625001907348633
    6. ' args' → logprob: -21.875001907348633
    7. '$args' → logprob: -22.250001907348633
    8. '	args' → logprob: -22.375001907348633
    9. '(' → logprob: -22.750001907348633
    10. '(argv' → logprob: -22.750001907348633

Token 1745: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0033420445397496223
    2. '(args' → logprob: -5.878342151641846
    3. '()[' → logprob: -8.753341674804688
    4. '0' → logprob: -8.753341674804688
    5. 'args' → logprob: -8.753341674804688
    6. '(' → logprob: -9.753341674804688
    7. '([' → logprob: -12.753341674804688
    8. ')[' → logprob: -14.003341674804688
    9. '][' → logprob: -14.878341674804688
    10. '   ' → logprob: -15.753341674804688

Token 1746: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003015001420862973
    2. 'args' → logprob: -8.125301361083984
    3. '[' → logprob: -12.125301361083984
    4. '(args' → logprob: -15.750301361083984
    5. ' args' → logprob: -17.250301361083984
    6. '(' → logprob: -17.375301361083984
    7. ' ' → logprob: -17.625301361083984
    8. '   ' → logprob: -18.125301361083984
    9. '
' → logprob: -18.250301361083984
    10. '	args' → logprob: -19.250301361083984

Token 1747: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12704527378082275
    2. ')' → logprob: -2.127045154571533
    3. ')
' → logprob: -9.252045631408691
    4. '       ' → logprob: -11.502045631408691
    5. '   ' → logprob: -11.877045631408691
    6. ')

' → logprob: -14.002045631408691
    7. ' )
' → logprob: -14.127045631408691
    8. ');' → logprob: -14.127045631408691
    9. ')`
' → logprob: -14.752045631408691
    10. '')
' → logprob: -15.627045631408691

Token 1748: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022608789149671793
    2. 'tr' → logprob: -6.502260684967041
    3. '   ' → logprob: -7.627260684967041
    4. 'k' → logprob: -8.2522611618042
    5. ' k' → logprob: -12.1272611618042
    6. '	tr' → logprob: -13.1272611618042
    7. ' ' → logprob: -14.2522611618042
    8. '
' → logprob: -14.3772611618042
    9. ' tr' → logprob: -14.5022611618042
    10. '           ' → logprob: -14.8772611618042

Token 1749: ' tr' (ID: 498)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' (adapté à ' tr') → logprob: -3.128163257315464e-07
    2. '   ' → logprob: -15.125
    3. ' tr' → logprob: -17.625
    4. 'if' → logprob: -18.375
    5. '       ' → logprob: -19.25
    6. '	tr' → logprob: -20.0
    7. 'try' → logprob: -20.125
    8. 'print' → logprob: -21.75
    9. '```' → logprob: -22.625
    10. '
' → logprob: -22.625

Token 1750: '.delete' (ID: 11951)
  Prédit: '.delete'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.delete' → logprob: -2.696889623621246e-06
    2. '.' → logprob: -13.12500286102295
    3. 'delete' → logprob: -14.50000286102295
    4. '.remove' → logprob: -16.375001907348633
    5. ' .' → logprob: -17.875001907348633
    6. '   ' → logprob: -18.250001907348633
    7. '.Delete' → logprob: -19.000001907348633
    8. '.erase' → logprob: -19.125001907348633
    9. '	delete' → logprob: -19.375001907348633
    10. '.insert' → logprob: -19.375001907348633

Token 1751: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -1.1472419600977446e-06
    2. 'k' → logprob: -14.500000953674316
    3. '(' → logprob: -15.250000953674316
    4. '(int' → logprob: -15.875000953674316
    5. '(
' → logprob: -16.500001907348633
    6. ' (' → logprob: -16.750001907348633
    7. '((' → logprob: -17.125001907348633
    8. '(key' → logprob: -17.375001907348633
    9. '[k' → logprob: -18.750001907348633
    10. ' k' → logprob: -18.875001907348633

Token 1752: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.176947600673884e-05
    2. ')
' → logprob: -10.750021934509277
    3. '<|end|>' → logprob: -16.00002098083496
    4. '))' → logprob: -17.12502098083496
    5. ')return' → logprob: -17.50002098083496
    6. ' )' → logprob: -17.62502098083496
    7. ')
' → logprob: -17.87502098083496
    8. '       ' → logprob: -18.00002098083496
    9. ')`' → logprob: -18.25002098083496
    10. '())' → logprob: -18.37502098083496

Token 1753: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1754: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.2041843980550766
    2. '<|end|>' → logprob: -1.7041844129562378
    3. ' elif' → logprob: -6.579184532165527
    4. 'else' (adapté à ' else') → logprob: -6.829184532165527
    5. '	elif' → logprob: -9.329184532165527
    6. '<|end|>' → logprob: -10.079184532165527
    7. 'print' → logprob: -10.329184532165527
    8. '```' → logprob: -10.329184532165527
    9. '#elif' → logprob: -10.454184532165527
    10. '#' → logprob: -11.204184532165527

Token 1755: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23192809522151947
    2. ' ==' → logprob: -1.8569281101226807
    3. ':
' → logprob: -4.106927871704102
    4. ' =' → logprob: -4.231927871704102
    5. '==' → logprob: -4.731927871704102
    6. '   ' → logprob: -5.606927871704102
    7. '=' → logprob: -5.981927871704102
    8. ' if' → logprob: -6.481927871704102
    9. ' :' → logprob: -7.356927871704102
    10. '       ' → logprob: -7.481927871704102

Token 1756: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009660819545388222
    2. '   ' → logprob: -4.884660720825195
    3. '#' → logprob: -7.634660720825195
    4. '```' → logprob: -7.634660720825195
    5. '<|end|>' → logprob: -8.634660720825195
    6. '        
' → logprob: -9.009660720825195
    7. ' k' → logprob: -9.009660720825195
    8. '
' → logprob: -9.134660720825195
    9. 'k' → logprob: -9.134660720825195
    10. '...' → logprob: -9.384660720825195

Token 1757: ' print' (ID: 2123)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03187726065516472
    2. 'k' → logprob: -4.281877040863037
    3. ' i' → logprob: -4.531877040863037
    4. 'print' (adapté à ' print') → logprob: -6.281877040863037
    5. '       ' → logprob: -6.656877040863037
    6. 'idx' → logprob: -7.156877040863037
    7. '   ' → logprob: -7.531877040863037
    8. '#' → logprob: -7.531877040863037
    9. 'n' → logprob: -8.281877517700195
    10. 'raise' → logprob: -8.281877517700195

Token 1758: '_t' (ID: 838)
  Prédit: '(tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(tr' → logprob: -0.17677508294582367
    2. '('' → logprob: -2.3017749786376953
    3. '(len' → logprob: -3.5517749786376953
    4. '()' → logprob: -4.551774978637695
    5. '(*' → logprob: -4.551774978637695
    6. '(-' → logprob: -4.926774978637695
    7. '(' → logprob: -5.801774978637695
    8. '("' → logprob: -6.926774978637695
    9. '((' → logprob: -8.426774978637695
    10. '(sorted' → logprob: -8.551774978637695

Token 1759: 're' (ID: 264)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.28510549664497375
    2. '(tr' → logprob: -2.4101054668426514
    3. 're' → logprob: -2.5351054668426514
    4. 'r' → logprob: -3.2851054668426514
    5. '_t' → logprob: -4.4101057052612305
    6. 't' → logprob: -4.6601057052612305
    7. 'tre' → logprob: -4.7851057052612305
    8. '_tr' → logprob: -5.0351057052612305
    9. 'er' → logprob: -6.6601057052612305
    10. '(t' → logprob: -6.6601057052612305

Token 1760: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -5.037835580878891e-05
    2. 'tr' → logprob: -10.62505054473877
    3. '(tr' → logprob: -11.62505054473877
    4. '(ap' → logprob: -12.75005054473877
    5. 'a' → logprob: -13.12505054473877
    6. '
' → logprob: -13.50005054473877
    7. 'p' → logprob: -13.50005054473877
    8. 'ep' → logprob: -13.62505054473877
    9. 'aps' → logprob: -14.50005054473877
    10. '(t' → logprob: -14.56255054473877

Token 1761: '(tr' (ID: 14363)
  Prédit: '(tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tr' → logprob: -0.007858346216380596
    2. '(' → logprob: -4.8828582763671875
    3. 'tr' → logprob: -8.757858276367188
    4. '(
' → logprob: -9.632858276367188
    5. ')' → logprob: -11.257858276367188
    6. ')(' → logprob: -12.882858276367188
    7. ' (' → logprob: -13.007858276367188
    8. '(query' → logprob: -13.382858276367188
    9. '(t' → logprob: -13.632858276367188
    10. '((' → logprob: -13.632858276367188

Token 1762: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3425219549390022e-05
    2. ')
' → logprob: -11.87501335144043
    3. '())' → logprob: -12.50001335144043
    4. '))' → logprob: -14.25001335144043
    5. '(' → logprob: -14.87501335144043
    6. '   ' → logprob: -15.12501335144043
    7. '[' → logprob: -15.50001335144043
    8. ')`' → logprob: -15.62501335144043
    9. ')}}' → logprob: -15.62501335144043
    10. ')}' → logprob: -15.87501335144043


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1760
Tokens correctement prédits (1ère position, stricte): 627
Tokens correctement prédits (1ère position, avec adaptation): 703
Tokens correctement prédits (top 10): 1436
Précision stricte (1ère position): 35.62%
Précision adaptée (1ère position): 39.94%
Précision (top 10): 81.59%
================================================================================
