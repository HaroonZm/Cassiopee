================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import deque
import sys
readline = sys.stdin.readline
write = sys.stdout.write

def rotate(nd, d):
    c = nd[d]
    if d:
        nd[1] = c[0]
        c[0] = nd
    else:
        nd[0] = c[1]
        c[1] = nd
    return c

root = None
def insert(val, pri):
    global root
    st = []
    dr = []
    x = root
    while x:
        st.append(x)
        if x[2] == val:
            return
        d = (x[2] < val)
        dr.append(d)
        x = x[d]
    nd = [None, None, val, pri]
    while st:
        x = st.pop(); d = dr.pop()
        c = x[d] = nd
        if x[3] >= c[3]:
            break
        rotate(x, d)
    else:
        root = nd

def __delete(nd):
    st = []; dr = []
    while nd[0] or nd[1]:
        l = nd[0]; r = nd[1]
        d = (l[3] <= r[3]) if l and r else (l is None)
        st.append(rotate(nd, d))
        dr.append(d ^ 1)
    nd = x = None
    while st:
        nd = x; x = st.pop(); d = dr.pop()
        x[d] = nd
    return x

def delete(val):
    global root
    x = root

    y = None
    while x:
        if val == x[2]:
            break
        y = x; d = (x[2] < val)
        x = x[d]
    else:
        return

    if y:
        y[d] = __delete(x)
    else:
        root = __delete(x)

def find(val):
    x = root
    while x:
        if val == x[2]:
            return 1
        x = x[x[2] < val]
    return 0

def debug():
    s0 = [""]
    s1 = [""]

    def dfs(nd):
        v = str(nd[2])
        s0.append(v)
        if nd[0]:
            dfs(nd[0])
        s1.append(v)
        if nd[1]:
            dfs(nd[1])
    dfs(root)
    return " ".join(s1), " ".join(s0)

M = int(readline())
ans = []
for m in range(M):
    cmd, *V, = readline().split()
    if cmd == "print":
        ans.extend(debug())
    elif cmd == "find":
        ans.append("yes" if find(int(V[0])) else "no")
    elif cmd == "delete":
        delete(int(V[0]))
    else:
        val, pri = map(int, V)
        insert(val, pri)
write("\n".join(ans))
write("\n")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.0460870265960693
    2. 'default' → logprob: -1.1710870265960693
    3. 'abc' → logprob: -1.7960870265960693
    4. 'Counter' → logprob: -2.4210870265960693
    5. ' defaultdict' → logprob: -2.6710870265960693
    6. 'named' → logprob: -5.421087265014648
    7. ' Counter' → logprob: -5.546087265014648
    8. ' abc' → logprob: -6.046087265014648
    9. ' deque' → logprob: -6.421087265014648
    10. '```' → logprob: -6.796087265014648

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014316747896373272
    2. '.' → logprob: -5.014316558837891
    3. '\(' → logprob: -5.764316558837891
    4. '```' → logprob: -6.889316558837891
    5. '\' → logprob: -7.014316558837891
    6. '\n' → logprob: -7.264316558837891
    7. '[' → logprob: -8.01431655883789
    8. '(
' → logprob: -8.26431655883789
    9. 'import' → logprob: -8.38931655883789
    10. 'newline' → logprob: -8.38931655883789

Token 5: 'import' (ID: 561)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5365747809410095
    2. 'd' → logprob: -1.5365748405456543
    3. 'a' → logprob: -2.6615748405456543
    4. '\n' → logprob: -3.5365748405456543
    5. '\' → logprob: -3.7865748405456543
    6. '[' → logprob: -4.536574840545654
    7. 'newline' → logprob: -4.786574840545654
    8. '
' → logprob: -4.786574840545654
    9. ',' → logprob: -5.161574840545654
    10. '.' → logprob: -5.411574840545654

Token 6: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.12110650539398193
    2. ' os' → logprob: -2.3711066246032715
    3. ' collections' → logprob: -3.9961066246032715
    4. ' itertools' → logprob: -7.6211066246032715
    5. ' queue' → logprob: -7.8711066246032715
    6. ' re' → logprob: -7.8711066246032715
    7. ' ' → logprob: -7.9961066246032715
    8. ' math' → logprob: -8.746106147766113
    9. ' space' → logprob: -8.996106147766113
    10. ' json' → logprob: -9.246106147766113

Token 7: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.19729650020599365
    2. '\' → logprob: -2.572296619415283
    3. '.' → logprob: -2.947296619415283
    4. 'newline' → logprob: -4.072296619415283
    5. '
' → logprob: -4.197296619415283
    6. '.readline' → logprob: -4.822296619415283
    7. '<|end|>' → logprob: -6.072296619415283
    8. '```' → logprob: -6.322296619415283
    9. '

' → logprob: -6.447296619415283
    10. 'import' → logprob: -7.197296619415283

Token 8: 'read' (ID: 1293)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2970806956291199
    2. '.' → logprob: -1.9220807552337646
    3. '\' → logprob: -2.4220807552337646
    4. '
' → logprob: -5.5470805168151855
    5. 'input' → logprob: -5.7970805168151855
    6. 'newline' → logprob: -6.1720805168151855
    7. '```' → logprob: -6.1720805168151855
    8. 'for' → logprob: -6.2970805168151855
    9. '#' → logprob: -6.7970805168151855
    10. 'def' → logprob: -7.1720805168151855

Token 9: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -6.599403423024341e-05
    2. '_line' → logprob: -10.375065803527832
    3. 'ine' → logprob: -10.625065803527832
    4. 'lines' → logprob: -12.000065803527832
    5. 'l' → logprob: -13.750065803527832
    6. 'Line' → logprob: -13.750065803527832
    7. ' =' → logprob: -14.500065803527832
    8. '()' → logprob: -14.875065803527832
    9. 'ing' → logprob: -15.000065803527832
    10. 'lin' → logprob: -15.750065803527832

Token 10: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12571609020233154
    2. '()' → logprob: -2.750716209411621
    3. '=' → logprob: -3.125716209411621
    4. ' =' → logprob: -5.125716209411621
    5. '.' → logprob: -7.000716209411621
    6. '```' → logprob: -7.375716209411621
    7. '(
' → logprob: -7.500716209411621
    8. 'import' → logprob: -7.625716209411621
    9. ')' → logprob: -7.750716209411621
    10. '('' → logprob: -8.125716209411621

Token 11: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.20141859352588654
    2. 'sys' → logprob: -1.7014186382293701
    3. '=sys' → logprob: -13.20141887664795
    4. '	sys' → logprob: -13.32641887664795
    5. 'input' → logprob: -14.20141887664795
    6. '(sys' → logprob: -14.45141887664795
    7. ' input' → logprob: -14.82641887664795
    8. ' ' → logprob: -16.451417922973633
    9. '/sys' → logprob: -17.451417922973633
    10. ' lambda' → logprob: -17.451417922973633

Token 12: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0005462417611852288
    2. '.' → logprob: -8.3755464553833
    3. '.stdout' → logprob: -8.7505464553833
    4. '.readline' → logprob: -8.8755464553833
    5. '.argv' → logprob: -12.0005464553833
    6. '.std' → logprob: -12.2505464553833
    7. ' .' → logprob: -12.7505464553833
    8. '.input' → logprob: -14.2505464553833
    9. 'stdin' → logprob: -14.5005464553833
    10. '.path' → logprob: -14.7505464553833

Token 13: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.009951811283826828
    2. '.' → logprob: -4.634951591491699
    3. '.read' → logprob: -8.6349515914917
    4. '<|end|>' → logprob: -12.0099515914917
    5. '.Read' → logprob: -12.6349515914917
    6. 'read' → logprob: -12.7599515914917
    7. '.readlines' → logprob: -13.1349515914917
    8. '.buffer' → logprob: -13.5099515914917
    9. '```' → logprob: -14.6349515914917
    10. '.​' → logprob: -14.6349515914917

Token 14: '
' (ID: 198)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.0364502668380737
    2. '
' → logprob: -2.1614503860473633
    3. '\n' → logprob: -2.2864503860473633
    4. '()' → logprob: -2.4114503860473633
    5. '\' → logprob: -2.6614503860473633
    6. '(
' → logprob: -2.9114503860473633
    7. '(' → logprob: -3.0364503860473633
    8. 'def' → logprob: -3.2864503860473633
    9. 'd' → logprob: -3.5364503860473633
    10. '```' → logprob: -3.6614503860473633

Token 15: 'write' (ID: 9566)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12930527329444885
    2. '()' → logprob: -2.129305362701416
    3. '(
' → logprob: -6.504305362701416
    4. 'def' → logprob: -7.629305362701416
    5. '()
' → logprob: -8.879304885864258
    6. 'deque' → logprob: -10.004304885864258
    7. '()

' → logprob: -10.129304885864258
    8. '(

' → logprob: -10.754304885864258
    9. 'for' → logprob: -11.004304885864258
    10. 'data' → logprob: -11.129304885864258

Token 16: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00026169343618676066
    2. ' (' → logprob: -9.500261306762695
    3. '()' → logprob: -9.750261306762695
    4. ')' → logprob: -10.000261306762695
    5. '('' → logprob: -10.125261306762695
    6. '=' → logprob: -11.500261306762695
    7. '("' → logprob: -12.125261306762695
    8. 's' → logprob: -12.625261306762695
    9. ' =' → logprob: -13.000261306762695
    10. '("")' → logprob: -13.000261306762695

Token 17: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.07537045329809189
    2. ' sys' → logprob: -2.8253705501556396
    3. 'print' → logprob: -4.3253703117370605
    4. '(sys' → logprob: -10.450370788574219
    5. '=sys' → logprob: -10.700370788574219
    6. 'open' → logprob: -11.325370788574219
    7. '	sys' → logprob: -11.950370788574219
    8. 'stdout' → logprob: -12.075370788574219
    9. ' print' → logprob: -12.200370788574219
    10. 'lambda' → logprob: -13.325370788574219

Token 18: '.stdout' (ID: 59462)
  Prédit: '.stdout'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdout' → logprob: -0.0006690711015835404
    2. '.stdin' → logprob: -7.750669002532959
    3. '.' → logprob: -9.000669479370117
    4. '.write' → logprob: -9.250669479370117
    5. '.stderr' → logprob: -11.500669479370117
    6. 'stdout' → logprob: -12.500669479370117
    7. '<|end|>' → logprob: -13.625669479370117
    8. ' .' → logprob: -14.000669479370117
    9. '.std' → logprob: -14.125669479370117
    10. '.out' → logprob: -14.750669479370117

Token 19: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -0.008292094804346561
    2. '.' → logprob: -4.883292198181152
    3. '<|end|>' → logprob: -8.133292198181152
    4. 'write' → logprob: -8.633292198181152
    5. '.readline' → logprob: -9.133292198181152
    6. '.Write' → logprob: -10.883292198181152
    7. '.w' → logprob: -11.508292198181152
    8. ' .' → logprob: -11.508292198181152
    9. '```' → logprob: -11.508292198181152
    10. '.buffer' → logprob: -11.633292198181152

Token 20: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4448815584182739
    2. '

' → logprob: -1.694881558418274
    3. '(' → logprob: -2.6948814392089844
    4. 'def' → logprob: -2.9448814392089844
    5. '\n' → logprob: -4.069881439208984
    6. '(
' → logprob: -4.319881439208984
    7. '()' → logprob: -5.194881439208984
    8. '()

' → logprob: -5.569881439208984
    9. '


' → logprob: -5.569881439208984
    10. '\' → logprob: -5.944881439208984

Token 21: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5895822048187256
    2. 'def' → logprob: -1.0895822048187256
    3. 'd' → logprob: -2.9645822048187256
    4. 'N' → logprob: -3.8395822048187256
    5. '\' → logprob: -4.589582443237305
    6. 'q' → logprob: -4.839582443237305
    7. 'deque' → logprob: -5.464582443237305
    8. 'queue' → logprob: -5.964582443237305
    9. '\n' → logprob: -6.339582443237305
    10. 'class' → logprob: -6.839582443237305

Token 22: ' rotate' (ID: 31987)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2348698228597641
    2. ' bfs' → logprob: -1.8598698377609253
    3. ' main' → logprob: -3.8598697185516357
    4. ' solve' → logprob: -4.984869956970215
    5. ' BFS' → logprob: -5.484869956970215
    6. ' shortest' → logprob: -5.609869956970215
    7. ' process' → logprob: -5.859869956970215
    8. ' max' → logprob: -5.984869956970215
    9. ' top' → logprob: -6.359869956970215
    10. ' reverse' → logprob: -6.984869956970215

Token 23: '(nd' (ID: 131841)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008224117569625378
    2. '(queue' → logprob: -5.883224010467529
    3. ' (' → logprob: -7.008224010467529
    4. '_left' → logprob: -7.258224010467529
    5. '(line' → logprob: -7.758224010467529
    6. '(left' → logprob: -8.258224487304688
    7. '(_' → logprob: -8.383224487304688
    8. '(x' → logprob: -8.383224487304688
    9. '(stack' → logprob: -8.508224487304688
    10. '(a' → logprob: -8.633224487304688

Token 24: ',' (ID: 11)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.007993537001311779
    2. 'q' → logprob: -5.507993698120117
    3. 'eq' → logprob: -7.257993698120117
    4. 'ex' → logprob: -7.382993698120117
    5. 'array' → logprob: -7.632993698120117
    6. 'ec' → logprob: -8.132993698120117
    7. 's' → logprob: -8.132993698120117
    8. 'eg' → logprob: -8.257993698120117
    9. 'deque' → logprob: -8.382993698120117
    10. 'x' → logprob: -8.757993698120117

Token 25: ' d' (ID: 272)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.4956165552139282
    2. 'd' → logprob: -1.6206165552139282
    3. ' d' → logprob: -1.7456165552139282
    4. 'k' → logprob: -1.9956165552139282
    5. ' direction' → logprob: -2.6206164360046387
    6. 'direction' → logprob: -3.6206164360046387
    7. 'steps' → logprob: -3.6206164360046387
    8. ' dir' → logprob: -4.120616436004639
    9. 'dir' → logprob: -4.245616436004639
    10. ' steps' → logprob: -4.620616436004639

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09174680709838867
    2. ',' → logprob: -3.2167468070983887
    3. 'ir' → logprob: -3.5917468070983887
    4. 'irection' → logprob: -4.341746807098389
    5. 'e' → logprob: -5.716746807098389
    6. 'eg' → logprob: -6.716746807098389
    7. ')' → logprob: -6.716746807098389
    8. '):
' → logprob: -7.966746807098389
    9. 'irections' → logprob: -8.591747283935547
    10. 'x' → logprob: -9.091747283935547

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012217526324093342
    2. ':' → logprob: -5.1372175216674805
    3. '[' → logprob: -6.3872175216674805
    4. ' return' → logprob: -6.8872175216674805
    5. ' ' → logprob: -7.6372175216674805
    6. '(' → logprob: -7.6372175216674805
    7. '(n' → logprob: -8.01221752166748
    8. '    ' → logprob: -8.01221752166748
    9. '  ' → logprob: -8.51221752166748
    10. ',' → logprob: -8.51221752166748

Token 28: ' c' (ID: 274)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9120448231697083
    2. ' return' → logprob: -1.1620447635650635
    3. '   ' → logprob: -1.7870447635650635
    4. ' nd' → logprob: -3.5370447635650635
    5. ' new' → logprob: -3.5370447635650635
    6. 'return' → logprob: -4.037045001983643
    7. 'if' → logprob: -4.162045001983643
    8. ' n' → logprob: -5.037045001983643
    9. ' for' → logprob: -5.662045001983643
    10. 'n' → logprob: -5.662045001983643

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.174912691116333
    2. 'ount' → logprob: -1.424912691116333
    3. 'ounter' → logprob: -1.924912691116333
    4. '=' → logprob: -2.049912691116333
    5. 'nt' → logprob: -2.174912691116333
    6. 'ol' → logprob: -3.299912691116333
    7. 'w' → logprob: -4.924912452697754
    8. 'ur' → logprob: -6.049912452697754
    9. 'lock' → logprob: -6.174912452697754
    10. 'ont' → logprob: -6.674912452697754

Token 30: ' nd' (ID: 5914)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5283767580986023
    2. 'deque' → logprob: -2.153376817703247
    3. ' d' → logprob: -2.278376817703247
    4. 'nd' → logprob: -3.028376817703247
    5. '(' → logprob: -3.653376817703247
    6. ' deque' → logprob: -3.778376817703247
    7. ' (' → logprob: -4.028376579284668
    8. '1' → logprob: -4.028376579284668
    9. ' nd' → logprob: -4.278376579284668
    10. '[' → logprob: -4.903376579284668

Token 31: '[d' (ID: 48377)
  Prédit: 'ounter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ounter' → logprob: -0.46083980798721313
    2. 'ount' → logprob: -1.5858397483825684
    3. 'opy' → logprob: -2.2108397483825684
    4. '[' → logprob: -3.3358397483825684
    5. 'ol' → logprob: -5.710839748382568
    6. 'nt' → logprob: -5.835839748382568
    7. '.copy' → logprob: -5.960839748382568
    8. 'opleft' → logprob: -6.210839748382568
    9. '[:]' → logprob: -6.835839748382568
    10. '.' → logprob: -6.960839748382568

Token 32: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012410052120685577
    2. '][' → logprob: -5.3874101638793945
    3. '])' → logprob: -6.1374101638793945
    4. '-' → logprob: -6.6374101638793945
    5. '[' → logprob: -7.0124101638793945
    6. ']%' → logprob: -7.1374101638793945
    7. ':]' → logprob: -7.3874101638793945
    8. '].' → logprob: -8.012410163879395
    9. '%' → logprob: -8.012410163879395
    10. '+' → logprob: -8.262410163879395

Token 33: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6489061713218689
    2. '[' → logprob: -2.1489062309265137
    3. '-' → logprob: -2.3989062309265137
    4. '%' → logprob: -2.7739062309265137
    5. '=' → logprob: -3.3989062309265137
    6. ']' → logprob: -3.8989062309265137
    7. 'd' → logprob: -4.023906230926514
    8. ' =' → logprob: -4.148906230926514
    9. ' +' → logprob: -4.148906230926514
    10. '+=' → logprob: -4.273906230926514

Token 34: ' if' (ID: 538)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.24085496366024017
    2. ' nd' → logprob: -1.9908549785614014
    3. '   ' → logprob: -2.6158549785614014
    4. ' for' → logprob: -6.365854740142822
    5. 'for' → logprob: -6.865854740142822
    6. '_nd' → logprob: -8.11585521697998
    7. ' =' → logprob: -8.24085521697998
    8. ' ' → logprob: -8.86585521697998
    9. '(nd' → logprob: -8.99085521697998
    10. 'n' → logprob: -8.99085521697998

Token 35: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.13622477650642395
    2. 'd' → logprob: -2.1362247467041016
    3. ' c' → logprob: -5.261224746704102
    4. ' len' → logprob: -6.636224746704102
    5. ' not' → logprob: -7.136224746704102
    6. 'c' → logprob: -7.636224746704102
    7. ' nd' → logprob: -7.636224746704102
    8. 'len' → logprob: -8.011224746704102
    9. 'nd' → logprob: -8.261224746704102
    10. '   ' → logprob: -8.636224746704102

Token 36: ':
' (ID: 734)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4752347469329834
    2. '==' → logprob: -1.2252347469329834
    3. ':' → logprob: -2.8502347469329834
    4. ' <' → logprob: -4.3502349853515625
    5. '+' → logprob: -5.2252349853515625
    6. '<' → logprob: -6.8502349853515625
    7. '=' → logprob: -6.8502349853515625
    8. '>' → logprob: -6.9752349853515625
    9. ']' → logprob: -7.2252349853515625
    10. ' >' → logprob: -7.3502349853515625

Token 37: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.5363197326660156
    2. '       ' → logprob: -1.6613197326660156
    3. ' =' → logprob: -1.9113197326660156
    4. ' ==' → logprob: -2.0363197326660156
    5. '   ' → logprob: -2.9113197326660156
    6. ' else' → logprob: -3.1613197326660156
    7. '=' → logprob: -3.4113197326660156
    8. '    ' → logprob: -3.4113197326660156
    9. ' :' → logprob: -3.4113197326660156
    10. '==' → logprob: -3.6613197326660156

Token 38: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.10435543209314346
    2. '       ' → logprob: -2.6043553352355957
    3. '   ' → logprob: -5.229355335235596
    4. '    ' → logprob: -5.354355335235596
    5. 'nd' (adapté à ' nd') → logprob: -5.354355335235596
    6. ' for' → logprob: -5.604355335235596
    7. ' return' → logprob: -6.604355335235596
    8. ' c' → logprob: -7.104355335235596
    9. ' n' → logprob: -7.104355335235596
    10. '```' → logprob: -7.916855335235596

Token 39: '[' (ID: 58)
  Prédit: '.rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rotate' → logprob: -0.934406042098999
    2. '.append' → logprob: -1.059406042098999
    3. '[d' → logprob: -2.059406042098999
    4. '.pop' → logprob: -2.809406042098999
    5. '[:-' → logprob: -4.309406280517578
    6. '[' → logprob: -4.309406280517578
    7. '.insert' → logprob: -4.684406280517578
    8. '.' → logprob: -5.059406280517578
    9. '.reverse' → logprob: -5.184406280517578
    10. '[:]' → logprob: -5.184406280517578

Token 40: '1' (ID: 16)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5323747992515564
    2. '1' → logprob: -2.532374858856201
    3. '[d' → logprob: -2.782374858856201
    4. '].' → logprob: -2.907374858856201
    5. ':d' → logprob: -3.032374858856201
    6. ']' → logprob: -3.282374858856201
    7. ':]' → logprob: -3.407374858856201
    8. '0' → logprob: -3.657374858856201
    9. '][' → logprob: -4.532374858856201
    10. ':' → logprob: -4.532374858856201

Token 41: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.37665027379989624
    2. '].' → logprob: -1.751650333404541
    3. '][' → logprob: -2.751650333404541
    4. '],' → logprob: -2.876650333404541
    5. ']=' → logprob: -4.376650333404541
    6. ']+=' → logprob: -6.251650333404541
    7. '-' → logprob: -6.376650333404541
    8. '][-' → logprob: -7.001650333404541
    9. ':]' → logprob: -7.126650333404541
    10. '][:' → logprob: -7.126650333404541

Token 42: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23935090005397797
    2. '.append' → logprob: -2.6143507957458496
    3. ' =' → logprob: -2.8643507957458496
    4. '.rotate' → logprob: -3.1143507957458496
    5. '+=' → logprob: -4.98935079574585
    6. '-=' → logprob: -5.11435079574585
    7. '.pop' → logprob: -5.36435079574585
    8. '.p' → logprob: -5.61435079574585
    9. '.' → logprob: -5.73935079574585
    10. '-' → logprob: -6.48935079574585

Token 43: ' c' (ID: 274)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.6979185342788696
    2. 'c' → logprob: -0.8229185342788696
    3. ' nd' → logprob: -3.44791841506958
    4. '0' → logprob: -4.82291841506958
    5. ' c' → logprob: -4.94791841506958
    6. '(nd' → logprob: -5.44791841506958
    7. '(c' → logprob: -5.69791841506958
    8. '[' → logprob: -6.44791841506958
    9. '[c' → logprob: -6.57291841506958
    10. ' ' → logprob: -6.57291841506958

Token 44: '[' (ID: 58)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6377397179603577
    2. '+' → logprob: -1.387739658355713
    3. '[' → logprob: -2.637739658355713
    4. ' -' → logprob: -3.012739658355713
    5. ' +' → logprob: -3.137739658355713
    6. '<<' → logprob: -4.262739658355713
    7. '>>' → logprob: -4.887739658355713
    8. '[-' → logprob: -5.387739658355713
    9. ',' → logprob: -5.887739658355713
    10. '2' → logprob: -6.012739658355713

Token 45: '0' (ID: 15)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.5699610710144043
    2. '[' → logprob: -1.6949610710144043
    3. '1' → logprob: -2.6949610710144043
    4. '-' → logprob: -2.8199610710144043
    5. '[:-' → logprob: -3.0699610710144043
    6. '[:]' → logprob: -3.5699610710144043
    7. ':]' → logprob: -4.444961071014404
    8. ':-' → logprob: -4.944961071014404
    9. '[::-' → logprob: -5.069961071014404
    10. '[:' → logprob: -5.444961071014404

Token 46: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3200630843639374
    2. ':]' → logprob: -1.4450631141662598
    3. '][' → logprob: -4.32006311416626
    4. '[' → logprob: -5.32006311416626
    5. '][]' → logprob: -5.94506311416626
    6. '2' → logprob: -6.07006311416626
    7. ':' → logprob: -6.19506311416626
    8. '[]' → logprob: -6.32006311416626
    9. '()]' → logprob: -6.44506311416626
    10. ' :]' → logprob: -6.44506311416626

Token 47: '       ' (ID: 309)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.295841783285141
    2. '[' → logprob: -1.7958418130874634
    3. ']' → logprob: -3.170841693878174
    4. ':' → logprob: -4.420841693878174
    5. ',' → logprob: -4.545841693878174
    6. ')' → logprob: -4.795841693878174
    7. '[]' → logprob: -5.295841693878174
    8. ':]' → logprob: -5.920841693878174
    9. '[:' → logprob: -6.545841693878174
    10. 'c' → logprob: -6.795841693878174

Token 48: ' c' (ID: 274)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.8786972165107727
    2. '[' → logprob: -1.003697156906128
    3. 'c' (adapté à ' c') → logprob: -2.378697156906128
    4. ']' → logprob: -3.503697156906128
    5. ':' → logprob: -3.628697156906128
    6. '[]' → logprob: -4.378697395324707
    7. ':c' → logprob: -4.753697395324707
    8. ')' → logprob: -4.753697395324707
    9. '[c' → logprob: -4.878697395324707
    10. ' c' → logprob: -5.128697395324707

Token 49: '[' (ID: 58)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0569433756172657
    2. ' =' → logprob: -3.431943416595459
    3. '.pop' → logprob: -3.806943416595459
    4. '.append' → logprob: -8.4319429397583
    5. '=c' → logprob: -8.6819429397583
    6. '[:]' → logprob: -8.8069429397583
    7. '.p' → logprob: -10.0569429397583
    8. 'pop' → logprob: -10.4319429397583
    9. '=p' → logprob: -10.4319429397583
    10. '[' → logprob: -10.5569429397583

Token 50: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4697544574737549
    2. ':]' → logprob: -1.8447544574737549
    3. ']' → logprob: -2.594754457473755
    4. '0' → logprob: -2.719754457473755
    5. ':' → logprob: -3.344754457473755
    6. '=' → logprob: -3.719754457473755
    7. ']=' → logprob: -4.844754219055176
    8. '2' → logprob: -6.219754219055176
    9. '[:]' → logprob: -7.219754219055176
    10. '3' → logprob: -7.594754219055176

Token 51: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.029284175485372543
    2. ']=' → logprob: -4.5292840003967285
    3. '=' → logprob: -4.6542840003967285
    4. '[' → logprob: -5.9042840003967285
    5. ',' → logprob: -6.4042840003967285
    6. ' =' → logprob: -7.1542840003967285
    7. '].' → logprob: -7.2792840003967285
    8. '],' → logprob: -7.2792840003967285
    9. '[:]' → logprob: -7.4042840003967285
    10. ':]' → logprob: -7.7792840003967285

Token 52: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.058187730610370636
    2. ' =' → logprob: -3.05818772315979
    3. '.' → logprob: -5.683187961578369
    4. '.pop' → logprob: -5.933187961578369
    5. '.append' → logprob: -6.683187961578369
    6. ',' → logprob: -7.308187961578369
    7. '.rotate' → logprob: -7.933187961578369
    8. '.=' → logprob: -8.308187484741211
    9. '.p' → logprob: -8.433187484741211
    10. '+=' → logprob: -8.683187484741211

Token 53: ' nd' (ID: 5914)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.016807498410344124
    2. 'nd' → logprob: -4.266807556152344
    3. '0' → logprob: -7.266807556152344
    4. '[' → logprob: -7.641807556152344
    5. 'deque' → logprob: -7.766807556152344
    6. '[]' → logprob: -7.891807556152344
    7. ' c' → logprob: -8.516807556152344
    8. 'd' → logprob: -9.016807556152344
    9. ' nd' → logprob: -9.891807556152344
    10. '   ' → logprob: -10.141807556152344

Token 54: '
' (ID: 198)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08875960111618042
    2. '0' → logprob: -2.963759660720825
    3. '[' → logprob: -3.588759660720825
    4. '2' → logprob: -5.338759422302246
    5. 'd' → logprob: -8.088759422302246
    6. '<|end|>' → logprob: -9.088759422302246
    7. '[d' → logprob: -9.338759422302246
    8. ' ' → logprob: -9.338759422302246
    9. '<|end|>' → logprob: -9.588759422302246
    10. '3' → logprob: -9.963759422302246

Token 55: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014076526276767254
    2. '[d' → logprob: -4.8890767097473145
    3. '2' → logprob: -5.5140767097473145
    4. '1' → logprob: -6.8890767097473145
    5. '.' → logprob: -7.1390767097473145
    6. '<|end|>' → logprob: -9.014076232910156
    7. ']' → logprob: -9.139076232910156
    8. 'd' → logprob: -9.639076232910156
    9. ' ' → logprob: -9.889076232910156
    10. '```' → logprob: -9.889076232910156

Token 56: ' else' (ID: 1203)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.24486692249774933
    2. '[d' → logprob: -1.619866967201233
    3. '2' → logprob: -4.369866847991943
    4. '1' → logprob: -6.369866847991943
    5. '0' → logprob: -6.744866847991943
    6. '   ' → logprob: -7.369866847991943
    7. 'd' → logprob: -7.494866847991943
    8. ' ' → logprob: -7.744866847991943
    9. ')' → logprob: -7.869866847991943
    10. ']' → logprob: -7.994866847991943

Token 57: ':
' (ID: 734)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04774363711476326
    2. '       ' → logprob: -3.797743558883667
    3. ':' → logprob: -4.422743797302246
    4. '    ' → logprob: -5.797743797302246
    5. '   ' → logprob: -6.172743797302246
    6. ' [' → logprob: -6.547743797302246
    7. ' ' → logprob: -6.672743797302246
    8. ',' → logprob: -7.922743797302246
    9. '[n' → logprob: -8.172743797302246
    10. ':
' → logprob: -8.297743797302246

Token 58: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9934772849082947
    2. '       ' → logprob: -0.9934772849082947
    3. ' c' → logprob: -2.6184773445129395
    4. 'nd' → logprob: -2.8684773445129395
    5. ' nd' → logprob: -3.2434773445129395
    6. '   ' → logprob: -3.3684773445129395
    7. '    ' → logprob: -3.9934773445129395
    8. ' [' → logprob: -4.7434773445129395
    9. ' d' → logprob: -5.4934773445129395
    10. 'd' → logprob: -5.4934773445129395

Token 59: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.7860047221183777
    2. 'nd' (adapté à ' nd') → logprob: -0.9110047221183777
    3. ' c' → logprob: -2.4110047817230225
    4. 'c' → logprob: -3.9110047817230225
    5. '[' → logprob: -4.161004543304443
    6. 'd' → logprob: -4.786004543304443
    7. ' d' → logprob: -5.536004543304443
    8. '   ' → logprob: -6.286004543304443
    9. 'n' → logprob: -7.911004543304443
    10. '       ' → logprob: -8.036005020141602

Token 60: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01282981876283884
    2. '[d' → logprob: -5.137829780578613
    3. ' =' → logprob: -5.762829780578613
    4. '=' → logprob: -5.762829780578613
    5. '[:]' → logprob: -9.012829780578613
    6. ',' → logprob: -9.637829780578613
    7. '=[' → logprob: -9.637829780578613
    8. '[]' → logprob: -9.762829780578613
    9. '=d' → logprob: -10.262829780578613
    10. ',d' → logprob: -10.762829780578613

Token 61: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07289591431617737
    2. '0' → logprob: -3.0728960037231445
    3. '1' → logprob: -4.3228960037231445
    4. '[d' → logprob: -5.1978960037231445
    5. ']' → logprob: -6.6978960037231445
    6. '2' → logprob: -6.6978960037231445
    7. 'd' → logprob: -7.1978960037231445
    8. '][' → logprob: -7.8228960037231445
    9. '=' → logprob: -8.322896003723145
    10. ',' → logprob: -8.322896003723145

Token 62: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006912283133715391
    2. '][' → logprob: -8.000691413879395
    3. ']=' → logprob: -9.000691413879395
    4. ' ]' → logprob: -9.250691413879395
    5. ' =' → logprob: -9.875691413879395
    6. '[' → logprob: -10.125691413879395
    7. '=' → logprob: -10.250691413879395
    8. '].' → logprob: -13.000691413879395
    9. '   ' → logprob: -13.375691413879395
    10. '],' → logprob: -13.875691413879395

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6349205374717712
    2. '=' → logprob: -0.7599205374717712
    3. '[' → logprob: -6.634920597076416
    4. ']' → logprob: -7.009920597076416
    5. ',' → logprob: -10.634920120239258
    6. ']=' → logprob: -10.759920120239258
    7. '[:]' → logprob: -10.884920120239258
    8. '   ' → logprob: -11.259920120239258
    9. '=[' → logprob: -12.134920120239258
    10. '][' → logprob: -12.884920120239258

Token 64: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01852576620876789
    2. ' c' → logprob: -4.01852560043335
    3. '[' → logprob: -8.393526077270508
    4. 'deque' → logprob: -9.893526077270508
    5. '[c' → logprob: -9.893526077270508
    6. ' [' → logprob: -11.393526077270508
    7. 'd' → logprob: -11.768526077270508
    8. '[]' → logprob: -12.143526077270508
    9. '   ' → logprob: -12.393526077270508
    10. ' ' → logprob: -12.518526077270508

Token 65: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004181329160928726
    2. '<|end|>' → logprob: -5.879181385040283
    3. '1' → logprob: -7.004181385040283
    4. '0' → logprob: -8.879180908203125
    5. '<|end|>' → logprob: -9.754180908203125
    6. '[:]' → logprob: -9.879180908203125
    7. '2' → logprob: -10.129180908203125
    8. '[next' → logprob: -10.629180908203125
    9. '[-' → logprob: -11.004180908203125
    10. '.' → logprob: -11.004180908203125

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1832377314567566
    2. '-' → logprob: -1.8082377910614014
    3. '[' → logprob: -6.933237552642822
    4. '0' → logprob: -7.683237552642822
    5. ']' → logprob: -7.808237552642822
    6. ' -' → logprob: -7.933237552642822
    7. 'len' → logprob: -8.05823802947998
    8. ' ' → logprob: -8.18323802947998
    9. '2' → logprob: -8.30823802947998
    10. '[-' → logprob: -8.43323802947998

Token 67: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12831301987171173
    2. ')' → logprob: -2.1283130645751953
    3. '<|end|>' → logprob: -7.378313064575195
    4. ']
' → logprob: -8.128313064575195
    5. ')
' → logprob: -8.253313064575195
    6. '   ' → logprob: -10.128313064575195
    7. '[' → logprob: -10.128313064575195
    8. ')]' → logprob: -10.378313064575195
    9. ' ]' → logprob: -10.628313064575195
    10. '       ' → logprob: -10.628313064575195

Token 68: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.0012845216551795602
    2. '[' → logprob: -7.376284599304199
    3. ' c' → logprob: -7.626284599304199
    4. 'nd' → logprob: -9.2512845993042
    5. 'd' → logprob: -10.0012845993042
    6. '0' → logprob: -11.5012845993042
    7. '   ' → logprob: -11.8762845993042
    8. '1' → logprob: -12.6262845993042
    9. '       ' → logprob: -13.1262845993042
    10. '[]' → logprob: -13.6262845993042

Token 70: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.135819760151207e-05
    2. '<|end|>' → logprob: -10.37507152557373
    3. ']' → logprob: -11.12507152557373
    4. '1' → logprob: -11.37507152557373
    5. '=' → logprob: -12.12507152557373
    6. '][' → logprob: -13.12507152557373
    7. ')' → logprob: -13.37507152557373
    8. '<|end|>' → logprob: -13.62507152557373
    9. '[
' → logprob: -14.12507152557373
    10. ')[' → logprob: -14.50007152557373

Token 71: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5873976945877075
    2. '1' → logprob: -0.8373976945877075
    3. '[' → logprob: -4.712397575378418
    4. ']' → logprob: -6.712397575378418
    5. ' ' → logprob: -7.087397575378418
    6. '<|end|>' → logprob: -9.087397575378418
    7. ')' → logprob: -9.837397575378418
    8. '  ' → logprob: -10.462397575378418
    9. '   ' → logprob: -10.837397575378418
    10. '-' → logprob: -10.837397575378418

Token 72: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004894073354080319
    2. ']=' → logprob: -8.125489234924316
    3. '[' → logprob: -9.500489234924316
    4. ' ]' → logprob: -9.875489234924316
    5. '=' → logprob: -10.750489234924316
    6. '<|end|>' → logprob: -11.000489234924316
    7. '][' → logprob: -11.250489234924316
    8. ' =' → logprob: -12.250489234924316
    9. ')' → logprob: -12.375489234924316
    10. '0' → logprob: -13.375489234924316

Token 73: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018151111900806427
    2. ' =' → logprob: -4.01815128326416
    3. '[' → logprob: -14.39315128326416
    4. '=c' → logprob: -15.26815128326416
    5. '<|end|>' → logprob: -15.89315128326416
    6. '=None' → logprob: -16.268150329589844
    7. ')' → logprob: -16.643150329589844
    8. ']' → logprob: -16.893150329589844
    9. '=[]' → logprob: -17.393150329589844
    10. '＝' → logprob: -17.518150329589844

Token 74: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.0024768433067947626
    2. ' nd' → logprob: -6.002476692199707
    3. '[' → logprob: -14.377476692199707
    4. '0' → logprob: -15.877476692199707
    5. 'n' → logprob: -16.127477645874023
    6. '_nd' → logprob: -16.252477645874023
    7. '(nd' → logprob: -16.627477645874023
    8. 'd' → logprob: -17.002477645874023
    9. '.nd' → logprob: -17.377477645874023
    10. ' ' → logprob: -17.377477645874023

Token 75: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7521693110466003
    2. '<|end|>' → logprob: -1.1271693706512451
    3. '
' → logprob: -2.627169370651245
    4. ')' → logprob: -2.627169370651245
    5. '   ' → logprob: -3.877169370651245
    6. ' ' → logprob: -4.502169132232666
    7. ']' → logprob: -5.252169132232666
    8. '[
' → logprob: -6.002169132232666
    9. '<|end|>' → logprob: -6.252169132232666
    10. '[]' → logprob: -6.252169132232666

Token 76: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8087974190711975
    2. '<|end|>' → logprob: -1.4337973594665527
    3. ')' → logprob: -2.0587973594665527
    4. '   ' → logprob: -2.6837973594665527
    5. ' ' → logprob: -3.3087973594665527
    6. '
' → logprob: -3.3087973594665527
    7. '.' → logprob: -4.808797359466553
    8. '\n' → logprob: -5.558797359466553
    9. 'return' → logprob: -5.558797359466553
    10. ']' → logprob: -5.808797359466553

Token 77: ' return' (ID: 622)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5718218088150024
    2. '[' → logprob: -1.6968218088150024
    3. '<|end|>' → logprob: -2.196821689605713
    4. '   ' → logprob: -3.696821689605713
    5. '\n' → logprob: -3.821821689605713
    6. '(' → logprob: -4.071821689605713
    7. '
' → logprob: -4.196821689605713
    8. '.' → logprob: -4.696821689605713
    9. '[:]' → logprob: -4.821821689605713
    10. ' ' → logprob: -4.821821689605713

Token 78: ' c' (ID: 274)
  Prédit: ' nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.2879928648471832
    2. ' None' → logprob: -2.5379929542541504
    3. ' c' → logprob: -2.7879929542541504
    4. ' ' → logprob: -3.4129929542541504
    5. '<|end|>' → logprob: -3.9129929542541504
    6. ' d' → logprob: -4.03799295425415
    7. 'None' → logprob: -4.53799295425415
    8. 'd' → logprob: -5.03799295425415
    9. 'nd' → logprob: -5.28799295425415
    10. 'c' → logprob: -5.28799295425415

Token 79: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: 'root' (ID: 5488)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0917973518371582
    2. ' =' → logprob: -1.0917973518371582
    3. '[' → logprob: -1.3417973518371582
    4. '=' → logprob: -3.091797351837158
    5. ' .' → logprob: -4.591797351837158
    6. ' ' → logprob: -5.966797351837158
    7. '[:]' → logprob: -6.091797351837158
    8. '[]' → logprob: -6.341797351837158
    9. '<|end|>' → logprob: -6.716797351837158
    10. ')' → logprob: -6.966797351837158

Token 82: ' None' (ID: 4662)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05588552728295326
    2. 'deque' → logprob: -3.5558855533599854
    3. '{'' → logprob: -4.930885314941406
    4. ' [' → logprob: -5.305885314941406
    5. '[]' → logprob: -5.805885314941406
    6. '{}' → logprob: -5.930885314941406
    7. '['' → logprob: -6.180885314941406
    8. '{' → logprob: -6.680885314941406
    9. 'None' → logprob: -6.680885314941406
    10. '[[' → logprob: -7.305885314941406

Token 83: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.176279902458191
    2. '=' → logprob: -1.426279902458191
    3. 'if' → logprob: -1.801279902458191
    4. '<|end|>' → logprob: -2.5512800216674805
    5. 'def' → logprob: -3.0512800216674805
    6. ',' → logprob: -3.6762800216674805
    7. '[' → logprob: -3.8012800216674805
    8. ' =' → logprob: -3.8012800216674805
    9. ' if' → logprob: -4.3012800216674805
    10. '#' → logprob: -4.5512800216674805

Token 84: 'def' (ID: 1314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1946207284927368
    2. 'if' → logprob: -1.8196207284927368
    3. 'def' → logprob: -2.1946206092834473
    4. 'deque' → logprob: -2.1946206092834473
    5. 'for' → logprob: -2.8196206092834473
    6. '
' → logprob: -3.3196206092834473
    7. '#' → logprob: -3.6946206092834473
    8. '[' → logprob: -3.8196206092834473
    9. '[]' → logprob: -3.8196206092834473
    10. ',' → logprob: -3.8196206092834473

Token 85: ' insert' (ID: 10898)
  Prédit: ' build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' build' → logprob: -0.8495510816574097
    2. ' insert' → logprob: -0.9745510816574097
    3. ' create' → logprob: -2.349551200866699
    4. ' node' → logprob: -3.474551200866699
    5. ' add' → logprob: -4.099551200866699
    6. ' make' → logprob: -4.349551200866699
    7. ' init' → logprob: -4.974551200866699
    8. ' Node' → logprob: -5.224551200866699
    9. ' new' → logprob: -5.599551200866699
    10. ' main' → logprob: -5.599551200866699

Token 86: '(val' (ID: 17391)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.3725222647190094
    2. '(root' → logprob: -1.622522234916687
    3. ' (' → logprob: -2.4975223541259766
    4. '(' → logprob: -4.122522354125977
    5. '(value' → logprob: -4.497522354125977
    6. '(val' → logprob: -6.622522354125977
    7. '(nd' → logprob: -7.122522354125977
    8. '(key' → logprob: -7.622522354125977
    9. '(data' → logprob: -7.622522354125977
    10. '(n' → logprob: -8.122522354125977

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006927904207259417
    2. '):' → logprob: -5.256927967071533
    3. ' ,' → logprob: -6.756927967071533
    4. ',node' → logprob: -7.756927967071533
    5. ' ):' → logprob: -10.006927490234375
    6. '):
' → logprob: -10.506927490234375
    7. ',n' → logprob: -11.881927490234375
    8. ')' → logprob: -12.131927490234375
    9. ',val' → logprob: -13.131927490234375
    10. ':' → logprob: -13.381927490234375

Token 88: ' pri' (ID: 12874)
  Prédit: ' nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.6813607215881348
    2. 'nd' → logprob: -1.4313607215881348
    3. ' node' → logprob: -1.8063607215881348
    4. 'node' → logprob: -2.5563607215881348
    5. ' root' → logprob: -4.931360721588135
    6. 'root' → logprob: -5.806360721588135
    7. ' cur' → logprob: -7.431360721588135
    8. 'cur' → logprob: -7.556360721588135
    9. ' parent' → logprob: -7.931360721588135
    10. 'n' → logprob: -8.556360244750977

Token 89: '):
' (ID: 1883)
  Prédit: 'ority'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ority' → logprob: -0.021314488723874092
    2. '):' → logprob: -5.52131462097168
    3. ',' → logprob: -5.64631462097168
    4. 'ort' → logprob: -5.77131462097168
    5. 'ORITY' → logprob: -5.89631462097168
    6. 'nt' → logprob: -6.02131462097168
    7. 'or' → logprob: -6.39631462097168
    8. 'o' → logprob: -6.77131462097168
    9. 'nty' → logprob: -6.77131462097168
    10. '):
' → logprob: -7.77131462097168

Token 90: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05366033688187599
    2. '):' → logprob: -3.9286603927612305
    3. ',node' → logprob: -4.1786603927612305
    4. '   ' → logprob: -4.8036603927612305
    5. ' ,' → logprob: -5.6786603927612305
    6. ' node' → logprob: -6.4286603927612305
    7. '):
' → logprob: -6.9286603927612305
    8. ' root' → logprob: -7.0536603927612305
    9. ':' → logprob: -7.5536603927612305
    10. ' :' → logprob: -8.55366039276123

Token 91: ' global' (ID: 5466)
  Prédit: ' global'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' global' → logprob: -0.053489264100790024
    2. 'global' (adapté à ' global') → logprob: -3.0534892082214355
    3. ' new' → logprob: -5.8034892082214355
    4. ' node' → logprob: -7.8034892082214355
    5. ' if' → logprob: -7.8034892082214355
    6. '   ' → logprob: -8.303489685058594
    7. '	global' → logprob: -8.428489685058594
    8. ' class' → logprob: -9.053489685058594
    9. 'class' → logprob: -9.428489685058594
    10. ' root' → logprob: -9.428489685058594

Token 92: ' root' (ID: 6577)
  Prédit: ' root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' root' → logprob: -0.005234475247561932
    2. 'root' → logprob: -5.255234241485596
    3. ' ' → logprob: -15.130234718322754
    4. '	root' → logprob: -15.505234718322754
    5. '(root' → logprob: -17.005233764648438
    6. '[root' → logprob: -17.380233764648438
    7. '_root' → logprob: -17.505233764648438
    8. '   ' → logprob: -18.005233764648438
    9. '=root' → logprob: -18.005233764648438
    10. '  ' → logprob: -18.630233764648438

Token 93: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.15238529443740845
    2. '
' → logprob: -3.0273852348327637
    3. 'if' → logprob: -3.6523852348327637
    4. '<|end|>' → logprob: -3.7773852348327637
    5. ' new' → logprob: -4.277385234832764
    6. ',' → logprob: -4.277385234832764
    7. ',node' → logprob: -5.527385234832764
    8. ' node' → logprob: -6.152385234832764
    9. 'new' → logprob: -6.277385234832764
    10. 'node' → logprob: -6.777385234832764

Token 94: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4651068449020386
    2. ' new' → logprob: -1.2151068449020386
    3. ' node' → logprob: -3.090106964111328
    4. 'new' → logprob: -5.090106964111328
    5. ' nd' → logprob: -5.590106964111328
    6. 'if' → logprob: -5.590106964111328
    7. 'nd' → logprob: -5.715106964111328
    8. '<|end|>' → logprob: -5.715106964111328
    9. 'node' → logprob: -6.215106964111328
    10. '
' → logprob: -6.590106964111328

Token 95: ' st' (ID: 420)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11730155348777771
    2. 'if' → logprob: -2.9923014640808105
    3. ' new' → logprob: -3.2423014640808105
    4. ' node' → logprob: -3.9923014640808105
    5. 'new' → logprob: -6.9923014640808105
    6. 'node' → logprob: -6.9923014640808105
    7. ' nd' → logprob: -7.3673014640808105
    8. ' from' → logprob: -9.242301940917969
    9. 'nd' → logprob: -9.242301940917969
    10. 'from' → logprob: -9.492301940917969

Token 96: ' =' (ID: 314)
  Prédit: 'ack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ack' → logprob: -0.01659202016890049
    2. ' =' → logprob: -4.141592025756836
    3. '=' → logprob: -7.766592025756836
    4. '=[]' → logprob: -9.516592025756836
    5. 'k' → logprob: -11.016592025756836
    6. 'acks' → logprob: -11.266592025756836
    7. 'ac' → logprob: -11.766592025756836
    8. '=[]
' → logprob: -11.891592025756836
    9. 'ak' → logprob: -12.641592025756836
    10. ' ' → logprob: -13.266592025756836

Token 97: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.707944929599762
    2. ' []' → logprob: -0.707944929599762
    3. ' [(' → logprob: -5.082944869995117
    4. 'deque' → logprob: -5.082944869995117
    5. '[(' → logprob: -6.457944869995117
    6. ' deque' → logprob: -7.332944869995117
    7. ' [' → logprob: -10.707944869995117
    8. '[]
' → logprob: -11.332944869995117
    9. ' []
' → logprob: -11.457944869995117
    10. '[' → logprob: -11.707944869995117

Token 98: '   ' (ID: 271)
  Prédit: ' nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.12090983241796494
    2. ' node' → logprob: -2.9959099292755127
    3. ' cur' → logprob: -3.8709099292755127
    4. 'nd' → logprob: -4.120909690856934
    5. ' if' → logprob: -4.370909690856934
    6. 'node' → logprob: -5.870909690856934
    7. 'cur' → logprob: -6.245909690856934
    8. '   ' → logprob: -6.620909690856934
    9. ' n' → logprob: -6.620909690856934
    10. ' new' → logprob: -6.620909690856934

Token 99: ' dr' (ID: 1498)
  Prédit: ' nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.968049168586731
    2. ' node' → logprob: -1.218049168586731
    3. 'node' → logprob: -2.3430490493774414
    4. ' cur' → logprob: -2.5930490493774414
    5. 'nd' → logprob: -2.7180490493774414
    6. 'cur' → logprob: -3.2180490493774414
    7. ' new' → logprob: -4.343049049377441
    8. 'curr' → logprob: -4.843049049377441
    9. ' curr' → logprob: -4.968049049377441
    10. ' if' → logprob: -5.468049049377441

Token 100: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34719640016555786
    2. 'op' → logprob: -1.847196340560913
    3. ' =' → logprob: -3.472196340560913
    4. 'aw' → logprob: -3.597196340560913
    5. '=[]' → logprob: -3.972196340560913
    6. 'ift' → logprob: -4.472196578979492
    7. 'c' → logprob: -4.722196578979492
    8. 'ag' → logprob: -5.472196578979492
    9. 'ow' → logprob: -5.722196578979492
    10. 'aft' → logprob: -5.722196578979492

Token 101: ' []
' (ID: 8911)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.30394861102104187
    2. ' root' → logprob: -1.8039486408233643
    3. 'None' → logprob: -2.8039486408233643
    4. ' None' → logprob: -3.9289486408233643
    5. '(root' → logprob: -5.928948402404785
    6. '[]' → logprob: -5.928948402404785
    7. '[' → logprob: -6.053948402404785
    8. 'deque' → logprob: -6.053948402404785
    9. ' [' → logprob: -6.553948402404785
    10. 'False' → logprob: -6.678948402404785

Token 102: '   ' (ID: 271)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -1.5375096797943115
    2. ' nd' → logprob: -1.7875096797943115
    3. ' if' → logprob: -2.2875096797943115
    4. ' cur' → logprob: -2.2875096797943115
    5. 'node' → logprob: -2.5375096797943115
    6. '   ' → logprob: -2.7875096797943115
    7. 'nd' → logprob: -2.9125096797943115
    8. ' new' → logprob: -3.5375096797943115
    9. 'cur' → logprob: -3.6625096797943115
    10. 'if' → logprob: -3.7875096797943115

Token 103: ' x' (ID: 1215)
  Prédit: ' nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nd' → logprob: -1.1940488815307617
    2. ' node' → logprob: -1.4440488815307617
    3. 'nd' → logprob: -1.9440488815307617
    4. 'node' → logprob: -1.9440488815307617
    5. ' new' → logprob: -2.9440488815307617
    6. 'new' → logprob: -3.6940488815307617
    7. 'if' → logprob: -3.8190488815307617
    8. 'cur' → logprob: -3.9440488815307617
    9. ' cur' → logprob: -4.069048881530762
    10. ' if' → logprob: -4.069048881530762

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1273941844701767
    2. '=' → logprob: -2.127394199371338
    3. ',' → logprob: -8.00239372253418
    4. '=root' → logprob: -9.00239372253418
    5. ' ' → logprob: -12.62739372253418
    6. 'root' → logprob: -13.75239372253418
    7. '=None' → logprob: -14.12739372253418
    8. ' ,' → logprob: -14.50239372253418
    9. 'x' → logprob: -15.25239372253418
    10. ' root' → logprob: -15.75239372253418

Token 105: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.003208372974768281
    2. '{'' → logprob: -6.753208160400391
    3. 'None' → logprob: -7.128208160400391
    4. '(root' → logprob: -7.878208160400391
    5. 'deque' → logprob: -8.00320816040039
    6. '{' → logprob: -8.62820816040039
    7. ' root' → logprob: -8.87820816040039
    8. '[root' → logprob: -9.50320816040039
    9. '[' → logprob: -10.00320816040039
    10. '{"' → logprob: -10.25320816040039

Token 106: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4170660078525543
    2. '
' → logprob: -1.542065978050232
    3. ' while' → logprob: -2.5420660972595215
    4. '<|end|>' → logprob: -4.4170660972595215
    5. 'if' → logprob: -4.5420660972595215
    6. ',' → logprob: -4.9170660972595215
    7. 'None' → logprob: -4.9170660972595215
    8. ' None' → logprob: -5.7920660972595215
    9. '[' → logprob: -6.4170660972595215
    10. ' if' → logprob: -6.5420660972595215

Token 107: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.75051349401474
    2. 'while' → logprob: -0.75051349401474
    3. ',' → logprob: -3.7505135536193848
    4. '   ' → logprob: -4.125513553619385
    5. ' if' → logprob: -5.250513553619385
    6. 'if' → logprob: -5.625513553619385
    7. '
' → logprob: -6.375513553619385
    8. '<|end|>' → logprob: -6.375513553619385
    9. '	while' → logprob: -7.250513553619385
    10. ' ' → logprob: -7.375513553619385

Token 108: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.7162308096885681
    2. 'while' (adapté à ' while') → logprob: -0.7162308096885681
    3. ' None' → logprob: -4.466230869293213
    4. 'None' → logprob: -5.466230869293213
    5. 'prev' → logprob: -6.466230869293213
    6. 'if' → logprob: -6.841230869293213
    7. ' new' → logprob: -7.216230869293213
    8. 'nd' → logprob: -7.341230869293213
    9. ' last' → logprob: -7.716230869293213
    10. ' prev' → logprob: -7.966230869293213

Token 109: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.01233175303786993
    2. 'x' → logprob: -4.512331962585449
    3. ' True' → logprob: -6.762331962585449
    4. 'True' → logprob: -9.63733196258545
    5. '(x' → logprob: -10.51233196258545
    6. '(True' → logprob: -11.38733196258545
    7. ' ' → logprob: -11.51233196258545
    8. '	x' → logprob: -11.88733196258545
    9. ' not' → logprob: -13.01233196258545
    10. '(' → logprob: -14.01233196258545

Token 110: ':
' (ID: 734)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.6829603314399719
    2. ' and' → logprob: -0.8079603314399719
    3. ' is' → logprob: -3.182960271835327
    4. 'is' → logprob: -5.182960510253906
    5. ':' → logprob: -6.557960510253906
    6. ' or' → logprob: -8.307960510253906
    7. ' ' → logprob: -9.182960510253906
    8. 'or' → logprob: -9.557960510253906
    9. '[' → logprob: -9.932960510253906
    10. '!=' → logprob: -9.932960510253906

Token 111: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.21709688007831573
    2. 'and' → logprob: -1.8420969247817993
    3. '   ' → logprob: -3.5920968055725098
    4. ' x' → logprob: -5.34209680557251
    5. '<|end|>' → logprob: -6.71709680557251
    6. ' if' → logprob: -6.84209680557251
    7. 'x' → logprob: -7.46709680557251
    8. ' st' → logprob: -7.84209680557251
    9. 'st' → logprob: -8.342097282409668
    10. '<|end|>' → logprob: -8.717097282409668

Token 112: ' st' (ID: 420)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3317272663116455
    2. ' st' → logprob: -2.2067272663116455
    3. 'st' (adapté à ' st') → logprob: -2.4567272663116455
    4. 'if' → logprob: -2.7067272663116455
    5. '   ' → logprob: -4.081727027893066
    6. ' dr' → logprob: -6.831727027893066
    7. 'dr' → logprob: -6.831727027893066
    8. 'x' → logprob: -9.206727027893066
    9. ' write' → logprob: -9.206727027893066
    10. ' x' → logprob: -9.331727027893066

Token 113: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00030590701499022543
    2. '.' → logprob: -8.250306129455566
    3. 'append' → logprob: -10.500306129455566
    4. '.app' → logprob: -11.250306129455566
    5. '.ap' → logprob: -12.875306129455566
    6. ' .' → logprob: -14.250306129455566
    7. ' append' → logprob: -14.625306129455566
    8. '.push' → logprob: -15.625306129455566
    9. '	append' → logprob: -16.25030517578125
    10. '.pop' → logprob: -16.87530517578125

Token 114: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0008198728901334107
    2. '(' → logprob: -7.125819683074951
    3. 'x' → logprob: -11.37582015991211
    4. '((' → logprob: -12.50082015991211
    5. '(
' → logprob: -15.75082015991211
    6. ' x' → logprob: -16.50082015991211
    7. ' (' → logprob: -17.12582015991211
    8. '(

' → logprob: -18.37582015991211
    9. '(val' → logprob: -18.62582015991211
    10. '	x' → logprob: -19.00082015991211

Token 115: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014080289751291275
    2. ' )' → logprob: -4.51408052444458
    3. ')
' → logprob: -5.88908052444458
    4. ' )
' → logprob: -8.639080047607422
    5. ',' → logprob: -10.014080047607422
    6. ')
' → logprob: -11.889080047607422
    7. ' if' → logprob: -12.264080047607422
    8. '),' → logprob: -12.389080047607422
    9. ')

' → logprob: -12.639080047607422
    10. '[' → logprob: -12.764080047607422

Token 116: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7128272652626038
    2. 'if' → logprob: -0.9628272652626038
    3. '       ' → logprob: -2.837827205657959
    4. 'dr' → logprob: -3.087827205657959
    5. '   ' → logprob: -4.587827205657959
    6. 'd' → logprob: -4.837827205657959
    7. 'x' → logprob: -5.962827205657959
    8. ' x' → logprob: -7.087827205657959
    9. ' dr' → logprob: -7.087827205657959
    10. ',' → logprob: -7.587827205657959

Token 117: ' if' (ID: 538)
  Prédit: 'dr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dr' → logprob: -0.33022868633270264
    2. 'if' (adapté à ' if') → logprob: -1.4552286863327026
    3. 'x' → logprob: -3.455228805541992
    4. '   ' → logprob: -4.705228805541992
    5. ' if' → logprob: -5.330228805541992
    6. ' x' → logprob: -6.955228805541992
    7. ' dr' → logprob: -7.330228805541992
    8. '       ' → logprob: -7.955228805541992
    9. 'st' → logprob: -8.705228805541992
    10. 'd' → logprob: -9.205228805541992

Token 118: ' x' (ID: 1215)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.010670590214431286
    2. ' val' → logprob: -5.1356706619262695
    3. 'x' → logprob: -5.3856706619262695
    4. ' x' → logprob: -9.01067066192627
    5. '(val' → logprob: -11.26067066192627
    6. '	val' → logprob: -11.88567066192627
    7. '   ' → logprob: -12.76067066192627
    8. ' ' → logprob: -14.01067066192627
    9. '(x' → logprob: -14.51067066192627
    10. '(' → logprob: -14.76067066192627

Token 119: '[' (ID: 58)
  Prédit: '.val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.val' → logprob: -0.5204405784606934
    2. '.' → logprob: -1.5204405784606934
    3. '[' → logprob: -1.8954405784606934
    4. 'val' → logprob: -3.5204405784606934
    5. '.value' → logprob: -6.520440578460693
    6. '>' → logprob: -6.770440578460693
    7. '.left' → logprob: -7.270440578460693
    8. ' is' → logprob: -7.395440578460693
    9. '<' → logprob: -7.770440578460693
    10. '_val' → logprob: -8.520441055297852

Token 120: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006772888009436429
    2. '1' → logprob: -7.500677108764648
    3. 'val' → logprob: -9.875677108764648
    4. ' ' → logprob: -10.875677108764648
    5. '2' → logprob: -11.125677108764648
    6. '
' → logprob: -11.375677108764648
    7. '[' → logprob: -11.750677108764648
    8. ']' → logprob: -12.938177108764648
    9. '   ' → logprob: -13.000677108764648
    10. '>' → logprob: -13.625677108764648

Token 121: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9257503747940063
    2. '][' → logprob: -1.1757503747940063
    3. ']>' → logprob: -2.050750255584717
    4. '>' → logprob: -2.175750255584717
    5. '[' → logprob: -3.675750255584717
    6. ' >' → logprob: -5.175750255584717
    7. ']<' → logprob: -5.175750255584717
    8. '<' → logprob: -5.925750255584717
    9. ']>=' → logprob: -6.050750255584717
    10. '0' → logprob: -6.425750255584717

Token 122: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6976398229598999
    2. '<' → logprob: -1.3226398229599
    3. ' >' → logprob: -1.8226398229599
    4. ' <' → logprob: -3.1976399421691895
    5. '[' → logprob: -4.0726399421691895
    6. 'val' → logprob: -5.8226399421691895
    7. '==' → logprob: -6.0726399421691895
    8. '>=' → logprob: -6.3226399421691895
    9. '[val' → logprob: -6.4476399421691895
    10. '<|end|>' → logprob: -6.9476399421691895

Token 123: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0017948969034478068
    2. ' val' → logprob: -6.376794815063477
    3. '	val' → logprob: -10.751794815063477
    4. ''' → logprob: -10.876794815063477
    5. '1' → logprob: -11.001794815063477
    6. '0' → logprob: -11.501794815063477
    7. '   ' → logprob: -12.501794815063477
    8. '(val' → logprob: -12.751794815063477
    9. ' ' → logprob: -13.001794815063477
    10. 'None' → logprob: -13.001794815063477

Token 124: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6441740989685059
    2. ' and' → logprob: -1.0191740989685059
    3. ' <' → logprob: -3.394174098968506
    4. ':
' → logprob: -3.519174098968506
    5. 'and' → logprob: -4.519174098968506
    6. '<' → logprob: -4.769174098968506
    7. '<|end|>' → logprob: -4.894174098968506
    8. '>' → logprob: -5.019174098968506
    9. ' >' → logprob: -5.269174098968506
    10. ' <=' → logprob: -5.894174098968506

Token 125: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.47453078627586365
    2. '       ' → logprob: -1.599530816078186
    3. '0' → logprob: -2.9745306968688965
    4. ' ' → logprob: -3.0995306968688965
    5. ' x' → logprob: -3.3495306968688965
    6. 'if' → logprob: -3.8495306968688965
    7. '    ' → logprob: -4.8495306968688965
    8. '1' → logprob: -5.2245306968688965
    9. '   ' → logprob: -5.9745306968688965
    10. '        ' → logprob: -6.3495306968688965

Token 126: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.24110724031925201
    2. ' return' → logprob: -1.8661072254180908
    3. 'x' → logprob: -3.366107225418091
    4. ' x' → logprob: -3.866107225418091
    5. '       ' → logprob: -6.36610746383667
    6. 'break' → logprob: -6.99110746383667
    7. '   ' → logprob: -7.74110746383667
    8. ' break' → logprob: -8.366106986999512
    9. '
' → logprob: -8.991106986999512
    10. ' ' → logprob: -9.116106986999512

Token 127: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17673394083976746
    2. 'False' → logprob: -2.17673397064209
    3. '0' → logprob: -4.42673397064209
    4. ' False' → logprob: -4.55173397064209
    5. 'None' → logprob: -4.55173397064209
    6. 'x' → logprob: -5.17673397064209
    7. ' None' → logprob: -5.42673397064209
    8. ' 
' → logprob: -6.42673397064209
    9. ' ' → logprob: -6.80173397064209
    10. ' x' → logprob: -7.42673397064209

Token 128: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04122617095708847
    2. ' x' → logprob: -3.7912261486053467
    3. ' )' → logprob: -5.541226387023926
    4. ' 
' → logprob: -5.541226387023926
    5. '<|end|>' → logprob: -5.916226387023926
    6. '[' → logprob: -6.041226387023926
    7. '    ' → logprob: -7.291226387023926
    8. 'x' → logprob: -7.416226387023926
    9. ' elif' → logprob: -7.666226387023926
    10. ' else' → logprob: -7.666226387023926

Token 129: ' d' (ID: 272)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6973544359207153
    2. ' if' → logprob: -0.9473544359207153
    3. ' ' → logprob: -2.822354316711426
    4. ' elif' → logprob: -3.447354316711426
    5. 'if' → logprob: -4.822354316711426
    6. 'x' → logprob: -5.322354316711426
    7. '    ' → logprob: -5.947354316711426
    8. '[' → logprob: -6.072354316711426
    9. 'elif' → logprob: -6.572354316711426
    10. ' 
' → logprob: -6.947354316711426

Token 130: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133186995983124
    2. '=' → logprob: -1.3133187294006348
    3. '=int' → logprob: -10.938318252563477
    4. ' ' → logprob: -10.938318252563477
    5. 'f' → logprob: -11.188318252563477
    6. '0' → logprob: -13.063318252563477
    7. '1' → logprob: -13.938318252563477
    8. 'ef' → logprob: -14.188318252563477
    9. ',' → logprob: -14.563318252563477
    10. 'if' → logprob: -14.938318252563477

Token 131: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2684226036071777
    2. ' val' → logprob: -1.5184226036071777
    3. 'val' → logprob: -1.5184226036071777
    4. '0' → logprob: -1.7684226036071777
    5. ' ' → logprob: -2.6434226036071777
    6. ' x' → logprob: -4.268422603607178
    7. 'x' → logprob: -4.518422603607178
    8. ' int' → logprob: -4.768422603607178
    9. 'int' → logprob: -5.643422603607178
    10. '(' → logprob: -7.268422603607178

Token 132: 'x' (ID: 87)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.2660885453224182
    2. 'x' → logprob: -2.1410884857177734
    3. '1' → logprob: -2.6410884857177734
    4. ' val' → logprob: -3.2660884857177734
    5. ' x' → logprob: -5.141088485717773
    6. '0' → logprob: -8.141088485717773
    7. ' ' → logprob: -8.391088485717773
    8. 'int' → logprob: -9.391088485717773
    9. '	val' → logprob: -10.391088485717773
    10. '   ' → logprob: -10.766088485717773

Token 133: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00017076305812224746
    2. 'val' → logprob: -9.875170707702637
    3. '2' → logprob: -10.000170707702637
    4. ',' → logprob: -11.000170707702637
    5. '>' → logprob: -11.625170707702637
    6. '#' → logprob: -12.000170707702637
    7. '3' → logprob: -12.625170707702637
    8. '   ' → logprob: -12.625170707702637
    9. 'def' → logprob: -12.750170707702637
    10. ')' → logprob: -12.875170707702637

Token 134: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.203409844194539e-05
    2. '0' → logprob: -10.500041961669922
    3. '1' → logprob: -12.500041961669922
    4. '[' → logprob: -13.000041961669922
    5. '
' → logprob: -13.125041961669922
    6. 'val' → logprob: -13.687541961669922
    7. '

' → logprob: -13.750041961669922
    8. '```' → logprob: -14.125041961669922
    9. ' ' → logprob: -14.250041961669922
    10. '۲' → logprob: -14.875041961669922

Token 135: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -1.1292057037353516
    2. '>' → logprob: -1.2542057037353516
    3. ' >' → logprob: -1.2542057037353516
    4. ' <' → logprob: -2.2542057037353516
    5. ' ' → logprob: -7.879205703735352
    6. ')' → logprob: -8.379205703735352
    7. 'val' → logprob: -8.504205703735352
    8. ' val' → logprob: -9.379205703735352
    9. ',val' → logprob: -10.004205703735352
    10. '><' → logprob: -10.879205703735352

Token 136: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -1.147193193435669
    2. ' >' → logprob: -1.147193193435669
    3. '<' → logprob: -1.397193193435669
    4. '>' → logprob: -2.147193193435669
    5. 'val' → logprob: -8.14719295501709
    6. ' ' → logprob: -8.27219295501709
    7. ' val' → logprob: -8.64719295501709
    8. '[val' → logprob: -10.64719295501709
    9. ',val' → logprob: -11.39719295501709
    10. '[' → logprob: -11.77219295501709

Token 137: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.20142045617103577
    2. ' val' → logprob: -1.7014204263687134
    3. '	val' → logprob: -12.326420783996582
    4. ' ' → logprob: -13.451420783996582
    5. '[val' → logprob: -15.076420783996582
    6. '(val' → logprob: -15.826420783996582
    7. ')' → logprob: -16.076419830322266
    8. '.val' → logprob: -16.326419830322266
    9. 'v' → logprob: -16.326419830322266
    10. ',val' → logprob: -16.451419830322266

Token 138: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012304904870688915
    2. ' )' → logprob: -4.637304782867432
    3. ')
' → logprob: -6.012304782867432
    4. ' )
' → logprob: -9.63730525970459
    5. ',' → logprob: -11.51230525970459
    6. ')

' → logprob: -12.38730525970459
    7. '),' → logprob: -12.76230525970459
    8. '<|end|>' → logprob: -13.01230525970459
    9. ')#' → logprob: -13.26230525970459
    10. ' ' → logprob: -13.26230525970459

Token 139: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07648640125989914
    2. '<|end|>' → logprob: -2.826486349105835
    3. '<|end|>' → logprob: -5.076486587524414
    4. ')' → logprob: -5.576486587524414
    5. '
' → logprob: -6.451486587524414
    6. '[' → logprob: -7.326486587524414
    7. '   ' → logprob: -7.701486587524414
    8. ' x' → logprob: -8.326486587524414
    9. ' ' → logprob: -8.701486587524414
    10. ')
' → logprob: -8.826486587524414

Token 140: ' dr' (ID: 1498)
  Prédit: 'dr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dr' (adapté à ' dr') → logprob: -0.5475473999977112
    2. ' dr' → logprob: -0.9225473999977112
    3. 'x' → logprob: -4.922547340393066
    4. ' x' → logprob: -5.297547340393066
    5. ' st' → logprob: -5.297547340393066
    6. 'st' → logprob: -5.672547340393066
    7. '   ' → logprob: -5.797547340393066
    8. 'd' → logprob: -9.047547340393066
    9. '       ' → logprob: -9.547547340393066
    10. ' if' → logprob: -9.922547340393066

Token 141: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007170771714299917
    2. '.' → logprob: -7.2507171630859375
    3. ' .' → logprob: -12.625717163085938
    4. '.app' → logprob: -13.000717163085938
    5. '.ap' → logprob: -14.125717163085938
    6. '.push' → logprob: -15.500717163085938
    7. 'append' → logprob: -15.625717163085938
    8. '].' → logprob: -15.875717163085938
    9. '.pop' → logprob: -15.875717163085938
    10. ').' → logprob: -16.000717163085938

Token 142: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.010701841674745083
    2. '(' → logprob: -4.635701656341553
    3. 'd' → logprob: -7.010701656341553
    4. ' d' → logprob: -10.635702133178711
    5. ' (' → logprob: -11.260702133178711
    6. '(
' → logprob: -12.385702133178711
    7. '((' → logprob: -13.885702133178711
    8. '	d' → logprob: -15.760702133178711
    9. '(int' → logprob: -15.885702133178711
    10. ')d' → logprob: -16.01070213317871

Token 143: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00048775310278870165
    2. ')
' → logprob: -7.750487804412842
    3. ' )' → logprob: -9.875487327575684
    4. '   ' → logprob: -12.875487327575684
    5. '<|end|>' → logprob: -14.125487327575684
    6. '       ' → logprob: -14.250487327575684
    7. ')d' → logprob: -14.750487327575684
    8. ' )
' → logprob: -15.625487327575684
    9. ')

' → logprob: -15.875487327575684
    10. '),' → logprob: -15.875487327575684

Token 144: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01860417053103447
    2. ' x' → logprob: -5.143604278564453
    3. '   ' → logprob: -5.643604278564453
    4. '<|end|>' → logprob: -5.768604278564453
    5. 'x' → logprob: -5.893604278564453
    6. '
' → logprob: -7.143604278564453
    7. '[' → logprob: -7.143604278564453
    8. '        
' → logprob: -7.518604278564453
    9. '<|end|>' → logprob: -7.768604278564453
    10. ' ' → logprob: -9.393604278564453

Token 145: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.014164448715746403
    2. ' x' → logprob: -4.264164447784424
    3. '   ' → logprob: -14.264164924621582
    4. '	x' → logprob: -15.764164924621582
    5. 'if' → logprob: -16.389163970947266
    6. '
' → logprob: -16.764163970947266
    7. ' ' → logprob: -16.889163970947266
    8. ' if' → logprob: -17.389163970947266
    9. '  ' → logprob: -17.764163970947266
    10. '    
' → logprob: -18.389163970947266

Token 146: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22541490197181702
    2. ' =' → logprob: -1.6004148721694946
    3. '[' → logprob: -13.350415229797363
    4. '＝' → logprob: -15.850415229797363
    5. ' ' → logprob: -15.975415229797363
    6. '=x' → logprob: -16.350414276123047
    7. ',' → logprob: -16.350414276123047
    8. 'x' → logprob: -16.600414276123047
    9. '<|end|>' → logprob: -16.850414276123047
    10. '.=' → logprob: -17.475414276123047

Token 147: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.428741991519928
    2. ' x' → logprob: -1.0537419319152832
    3. 'root' → logprob: -11.928742408752441
    4. '(x' → logprob: -11.928742408752441
    5. '(' → logprob: -12.428742408752441
    6. ' None' → logprob: -12.553742408752441
    7. '	x' → logprob: -12.553742408752441
    8. 'None' → logprob: -12.991242408752441
    9. '0' → logprob: -13.178742408752441
    10. ' root' → logprob: -13.241242408752441

Token 148: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.0160469189286232
    2. '[' → logprob: -4.14104700088501
    3. '[x' → logprob: -12.141046524047852
    4. 'd' → logprob: -12.266046524047852
    5. '[
' → logprob: -13.891046524047852
    6. ' [' → logprob: -14.766046524047852
    7. '```' → logprob: -15.641046524047852
    8. ' ' → logprob: -16.14104652404785
    9. '[int' → logprob: -16.14104652404785
    10. '[(' → logprob: -16.14104652404785

Token 149: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008852534228935838
    2. '])' → logprob: -7.375885486602783
    3. ' ]' → logprob: -8.625885009765625
    4. ')' → logprob: -10.250885009765625
    5. ']
' → logprob: -10.875885009765625
    6. '1' → logprob: -11.625885009765625
    7. ']

' → logprob: -12.250885009765625
    8. '<|end|>' → logprob: -12.875885009765625
    9. ')]' → logprob: -13.125885009765625
    10. '2' → logprob: -13.500885009765625

Token 150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8870149254798889
    2. '<|end|>' → logprob: -1.1370148658752441
    3. ' 
' → logprob: -2.262014865875244
    4. ' ' → logprob: -3.012014865875244
    5. '    
' → logprob: -3.512014865875244
    6. '
' → logprob: -3.512014865875244
    7. '  
' → logprob: -3.887014865875244
    8. ')' → logprob: -4.762014865875244
    9. '   
' → logprob: -5.137014865875244
    10. '[' → logprob: -5.387014865875244

Token 151: ' nd' (ID: 5914)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.5985284447669983
    2. 'x' → logprob: -1.2235283851623535
    3. '[' → logprob: -2.5985283851623535
    4. '[node' → logprob: -3.4735283851623535
    5. '[n' → logprob: -4.2235283851623535
    6. 'new' → logprob: -4.8485283851623535
    7. 'nd' (adapté à ' nd') → logprob: -5.0985283851623535
    8. '[root' → logprob: -5.4735283851623535
    9. ' x' → logprob: -5.5985283851623535
    10. ' [' → logprob: -5.8485283851623535

Token 152: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759498476982117
    2. ' =' → logprob: -0.8259498476982117
    3. '=[' → logprob: -11.825949668884277
    4. '[' → logprob: -13.950949668884277
    5. ' =[' → logprob: -14.450949668884277
    6. '=[]' → logprob: -14.575949668884277
    7. ' ' → logprob: -14.950949668884277
    8. ']' → logprob: -15.450949668884277
    9. '   ' → logprob: -15.575949668884277
    10. 'x' → logprob: -16.700950622558594

Token 153: ' [' (ID: 723)
  Prédit: '[val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[val' → logprob: -0.014976602047681808
    2. '[' → logprob: -4.264976501464844
    3. ' [' → logprob: -7.514976501464844
    4. '[[' → logprob: -9.139976501464844
    5. '[value' → logprob: -9.764976501464844
    6. '[root' → logprob: -9.889976501464844
    7. '[node' → logprob: -10.514976501464844
    8. '[list' → logprob: -11.764976501464844
    9. '[np' → logprob: -13.514976501464844
    10. '[array' → logprob: -13.514976501464844

Token 154: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.015864722430706024
    2. '[' → logprob: -5.265864849090576
    3. 'pri' → logprob: -5.265864849090576
    4. ' None' → logprob: -6.265864849090576
    5. 'val' → logprob: -6.390864849090576
    6. 'deque' → logprob: -7.140864849090576
    7. '0' → logprob: -8.265864372253418
    8. '[],' → logprob: -8.640864372253418
    9. 'prio' → logprob: -9.140864372253418
    10. '   ' → logprob: -9.265864372253418

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03841450437903404
    2. ',None' → logprob: -3.288414478302002
    3. 'None' → logprob: -8.53841495513916
    4. ' ,' → logprob: -9.03841495513916
    5. ' None' → logprob: -10.78841495513916
    6. ',
' → logprob: -11.03841495513916
    7. ',null' → logprob: -11.66341495513916
    8. '(None' → logprob: -11.78841495513916
    9. ',val' → logprob: -13.16341495513916
    10. '=None' → logprob: -14.41341495513916

Token 156: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0040952586568892
    2. ' None' → logprob: -5.504095077514648
    3. ',None' → logprob: -11.129095077514648
    4. '   ' → logprob: -14.254095077514648
    5. '(None' → logprob: -14.379095077514648
    6. '_None' → logprob: -15.004095077514648
    7. '  ' → logprob: -15.254095077514648
    8. '=None' → logprob: -16.12909507751465
    9. '    ' → logprob: -16.62909507751465
    10. ' ' → logprob: -16.75409507751465

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029042765498161316
    2. ',val' → logprob: -3.6540427207946777
    3. ' ,' → logprob: -5.904042720794678
    4. ',None' → logprob: -12.779043197631836
    5. 'val' → logprob: -12.904043197631836
    6. ',int' → logprob: -12.904043197631836
    7. ',
' → logprob: -15.029043197631836
    8. '‌,' → logprob: -15.154043197631836
    9. ' val' → logprob: -15.404043197631836
    10. '<|end|>' → logprob: -15.404043197631836

Token 158: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.5759592652320862
    2. ' val' → logprob: -0.8259592652320862
    3. 'pri' → logprob: -11.950959205627441
    4. ' pri' → logprob: -12.575959205627441
    5. '	val' → logprob: -12.575959205627441
    6. ',val' → logprob: -13.325959205627441
    7. 'pr' → logprob: -13.450959205627441
    8. '(val' → logprob: -14.075959205627441
    9. '[val' → logprob: -14.825959205627441
    10. ' ' → logprob: -14.950959205627441

Token 159: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001517238444648683
    2. ' ,' → logprob: -6.501517295837402
    3. ',
' → logprob: -11.501517295837402
    4. ',None' → logprob: -13.376517295837402
    5. ',val' → logprob: -13.876517295837402
    6. ']' → logprob: -14.376517295837402
    7. ',int' → logprob: -14.376517295837402
    8. ',p' → logprob: -15.376517295837402
    9. ' ,
' → logprob: -15.876517295837402
    10. ' ' → logprob: -16.126516342163086

Token 160: ' pri' (ID: 12874)
  Prédit: ' pri'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pri' → logprob: -0.20151928067207336
    2. 'pri' → logprob: -1.701519250869751
    3. 'pr' → logprob: -9.826519012451172
    4. ' pr' → logprob: -11.326519012451172
    5. 'prio' → logprob: -11.701519012451172
    6. ' None' → logprob: -11.826519012451172
    7. 'prior' → logprob: -12.326519012451172
    8. ' ' → logprob: -12.576519012451172
    9. ' priori' → logprob: -12.826519012451172
    10. '0' → logprob: -12.951519012451172

Token 161: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004135630559176207
    2. ',' → logprob: -6.129135608673096
    3. ' ]' → logprob: -6.254135608673096
    4. '   ' → logprob: -11.504136085510254
    5. ']
' → logprob: -11.754136085510254
    6. ' ,' → logprob: -13.129136085510254
    7. ']

' → logprob: -13.254136085510254
    8. ']
' → logprob: -14.254136085510254
    9. ')' → logprob: -14.504136085510254
    10. '}' → logprob: -14.879136085510254

Token 162: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.5761373043060303
    2. '   ' → logprob: -1.5761373043060303
    3. ' if' → logprob: -1.5761373043060303
    4. 'if' → logprob: -2.4511373043060303
    5. ' x' → logprob: -2.5761373043060303
    6. 'nd' → logprob: -3.2011373043060303
    7. ' while' → logprob: -3.3261373043060303
    8. 'st' → logprob: -3.4511373043060303
    9. 'while' → logprob: -3.8261373043060303
    10. ']' → logprob: -4.076137542724609

Token 163: ' while' (ID: 2049)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.029766689985990524
    2. 'x' → logprob: -4.40476655960083
    3. 'while' (adapté à ' while') → logprob: -4.40476655960083
    4. ' if' → logprob: -5.77976655960083
    5. 'for' → logprob: -8.029767036437988
    6. '   ' → logprob: -8.029767036437988
    7. 'st' → logprob: -8.404767036437988
    8. 'd' → logprob: -8.529767036437988
    9. ' while' → logprob: -8.654767036437988
    10. 'root' → logprob: -9.154767036437988

Token 164: ' st' (ID: 420)
  Prédit: ' st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' st' → logprob: -0.2263793647289276
    2. 'st' → logprob: -1.60137939453125
    3. '(st' → logprob: -7.85137939453125
    4. 'len' → logprob: -8.60137939453125
    5. ' dr' → logprob: -8.85137939453125
    6. ' len' → logprob: -9.35137939453125
    7. '(' → logprob: -9.97637939453125
    8. 'dr' → logprob: -10.47637939453125
    9. '(len' → logprob: -10.72637939453125
    10. 'True' → logprob: -11.35137939453125

Token 165: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2254415601491928
    2. 'and' → logprob: -1.600441575050354
    3. '   ' → logprob: -11.975441932678223
    4. ' ' → logprob: -12.350441932678223
    5. '    ' → logprob: -12.975441932678223
    6. '>' → logprob: -13.100441932678223
    7. '	and' → logprob: -13.100441932678223
    8. ')' → logprob: -13.225441932678223
    9. '           ' → logprob: -13.725441932678223
    10. '[-' → logprob: -13.725441932678223

Token 166: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1213211864233017
    2. 'and' → logprob: -2.871321201324463
    3. ' x' → logprob: -3.996321201324463
    4. 'x' → logprob: -4.996321201324463
    5. '   ' → logprob: -4.996321201324463
    6. ' if' → logprob: -5.496321201324463
    7. 'nd' → logprob: -5.496321201324463
    8. ' nd' → logprob: -5.621321201324463
    9. 'd' → logprob: -5.746321201324463
    10. ',' → logprob: -6.121321201324463

Token 167: ' x' (ID: 1215)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04444902390241623
    2. 'x' (adapté à ' x') → logprob: -3.4194490909576416
    3. ' d' → logprob: -4.6694488525390625
    4. 'p' → logprob: -7.6694488525390625
    5. ' x' → logprob: -7.7944488525390625
    6. 'if' → logprob: -8.669448852539062
    7. ' if' → logprob: -9.294448852539062
    8. 'c' → logprob: -9.544448852539062
    9. 'u' → logprob: -10.044448852539062
    10. 'nd' → logprob: -10.294448852539062

Token 168: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18925702571868896
    2. ' =' → logprob: -1.939257025718689
    3. ',' → logprob: -3.5642571449279785
    4. '.pop' → logprob: -9.68925666809082
    5. '<|end|>' → logprob: -10.06425666809082
    6. ' ,' → logprob: -10.43925666809082
    7. '<|end|>' → logprob: -10.68925666809082
    8. '.append' → logprob: -10.93925666809082
    9. ']' → logprob: -11.06425666809082
    10. '[' → logprob: -11.31425666809082

Token 169: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.0036035135854035616
    2. ' st' → logprob: -5.628603458404541
    3. 'nd' → logprob: -13.7536039352417
    4. ' ' → logprob: -14.8786039352417
    5. '	st' → logprob: -15.0036039352417
    6. 'rotate' → logprob: -15.1286039352417
    7. '<|end|>' → logprob: -15.2536039352417
    8. 'stack' → logprob: -15.2536039352417
    9. 'rot' → logprob: -15.6286039352417
    10. '   ' → logprob: -15.6286039352417

Token 170: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0003212805895600468
    2. 'pop' → logprob: -8.625321388244629
    3. '[-' → logprob: -8.875321388244629
    4. '.' → logprob: -13.625321388244629
    5. '.append' → logprob: -15.125321388244629
    6. '.p' → logprob: -15.625321388244629
    7. ' pop' → logprob: -16.125320434570312
    8. '-pop' → logprob: -16.500320434570312
    9. ' .' → logprob: -17.000320434570312
    10. '   ' → logprob: -18.625320434570312

Token 171: '();' (ID: 4177)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.029782656580209732
    2. '()
' → logprob: -3.529782772064209
    3. '()
' → logprob: -11.02978229522705
    4. '()

' → logprob: -11.52978229522705
    5. '(' → logprob: -13.15478229522705
    6. '();' → logprob: -13.90478229522705
    7. '()\' → logprob: -14.15478229522705
    8. '(),' → logprob: -14.40478229522705
    9. '()]' → logprob: -14.65478229522705
    10. '())' → logprob: -15.02978229522705

Token 172: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.004235224332660437
    2. ' d' → logprob: -5.50423526763916
    3. 'if' → logprob: -9.12923526763916
    4. ' if' → logprob: -10.87923526763916
    5. 'dr' → logprob: -12.12923526763916
    6. '   ' → logprob: -12.75423526763916
    7. '       ' → logprob: -13.00423526763916
    8. ' ' → logprob: -13.00423526763916
    9. '    ' → logprob: -13.50423526763916
    10. 'x' → logprob: -13.62923526763916

Token 173: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5231342911720276
    2. '=' → logprob: -0.8981342911720276
    3. ' ' → logprob: -12.273134231567383
    4. '=d' → logprob: -13.023134231567383
    5. ',' → logprob: -13.773134231567383
    6. '<|end|>' → logprob: -14.648134231567383
    7. ')' → logprob: -14.898134231567383
    8. ']' → logprob: -14.898134231567383
    9. '=_' → logprob: -15.398134231567383
    10. 'd' → logprob: -15.648134231567383

Token 174: ' dr' (ID: 1498)
  Prédit: 'dr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dr' → logprob: -0.25193631649017334
    2. ' dr' → logprob: -1.5019363164901733
    3. 'd' → logprob: -12.001935958862305
    4. '	dr' → logprob: -14.251935958862305
    5. '(dr' → logprob: -15.501935958862305
    6. ' ' → logprob: -16.876935958862305
    7. '   ' → logprob: -17.001935958862305
    8. '_dr' → logprob: -17.626935958862305
    9. 'Dr' → logprob: -17.876935958862305
    10. '0' → logprob: -18.001935958862305

Token 175: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -3.7697225252486533e-06
    2. '.' → logprob: -13.125003814697266
    3. 'pop' → logprob: -13.375003814697266
    4. ' .' → logprob: -15.750003814697266
    5. '().' → logprob: -17.125003814697266
    6. '.p' → logprob: -19.250003814697266
    7. '(pop' → logprob: -19.250003814697266
    8. '.Pop' → logprob: -20.000003814697266
    9. '	pop' → logprob: -21.375003814697266
    10. ' pop' → logprob: -21.500003814697266

Token 176: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0012141639599576592
    2. '()
' → logprob: -6.751214027404785
    3. '();' → logprob: -10.626214027404785
    4. '(' → logprob: -11.751214027404785
    5. '()

' → logprob: -12.751214027404785
    6. '())' → logprob: -13.376214027404785
    7. ' ()' → logprob: -13.376214027404785
    8. ')' → logprob: -13.376214027404785
    9. '()`' → logprob: -13.376214027404785
    10. '()
' → logprob: -13.751214027404785

Token 177: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08093492686748505
    2. '       ' → logprob: -2.955935001373291
    3. ' if' → logprob: -3.705935001373291
    4. '   ' → logprob: -6.830935001373291
    5. '```' → logprob: -10.580934524536133
    6. 'nd' → logprob: -11.580934524536133
    7. ' ' → logprob: -11.830934524536133
    8. '	if' → logprob: -12.080934524536133
    9. ' nd' → logprob: -13.455934524536133
    10. '[' → logprob: -13.455934524536133

Token 178: ' c' (ID: 274)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.001430355361662805
    2. ' if' → logprob: -7.001430511474609
    3. '       ' → logprob: -7.751430511474609
    4. '   ' → logprob: -9.37643051147461
    5. 'nd' → logprob: -13.62643051147461
    6. '	if' → logprob: -13.87643051147461
    7. ' ' → logprob: -15.12643051147461
    8. '           ' → logprob: -15.12643051147461
    9. 'If' → logprob: -15.25143051147461
    10. '  ' → logprob: -15.87643051147461

Token 179: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07117539644241333
    2. '=' → logprob: -3.0711753368377686
    3. '=d' → logprob: -4.196175575256348
    4. '[d' → logprob: -5.321175575256348
    5. '=c' → logprob: -7.071175575256348
    6. ' ' → logprob: -7.946175575256348
    7. '   ' → logprob: -8.321175575256348
    8. '[' → logprob: -8.446175575256348
    9. '[c' → logprob: -8.696175575256348
    10. '=[' → logprob: -8.946175575256348

Token 180: ' x' (ID: 1215)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -0.33774182200431824
    2. 'nd' → logprob: -1.8377418518066406
    3. 'x' → logprob: -2.0877418518066406
    4. ' rotate' → logprob: -6.712741851806641
    5. ' nd' → logprob: -7.712741851806641
    6. ' x' → logprob: -7.712741851806641
    7. '[' → logprob: -8.21274185180664
    8. 'insert' → logprob: -8.21274185180664
    9. 'None' → logprob: -8.33774185180664
    10. 'd' → logprob: -9.08774185180664

Token 181: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -1.4140441635390744e-05
    2. 'd' → logprob: -11.250014305114746
    3. '[' → logprob: -14.500014305114746
    4. ' [' → logprob: -15.750014305114746
    5. ' d' → logprob: -16.25001335144043
    6. '```' → logprob: -16.37501335144043
    7. '(d' → logprob: -17.00001335144043
    8. '=d' → logprob: -17.62501335144043
    9. '
' → logprob: -17.87501335144043
    10. '[
' → logprob: -18.37501335144043

Token 182: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08097516745328903
    2. ']
' → logprob: -2.58097505569458
    3. ']

' → logprob: -6.95597505569458
    4. ']=' → logprob: -7.83097505569458
    5. ' ]' → logprob: -8.205975532531738
    6. ']
' → logprob: -8.580975532531738
    7. '
' → logprob: -9.580975532531738
    8. ' ]
' → logprob: -9.830975532531738
    9. '=' → logprob: -10.455975532531738
    10. '];' → logprob: -11.080975532531738

Token 183: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6172314882278442
    2. '[' → logprob: -1.6172314882278442
    3. ' =' → logprob: -1.7422314882278442
    4. '
' → logprob: -2.9922313690185547
    5. 'nd' → logprob: -4.492231369018555
    6. '<|end|>' → logprob: -4.992231369018555
    7. ']' → logprob: -5.492231369018555
    8. '   ' → logprob: -5.742231369018555
    9. '    ' → logprob: -5.992231369018555
    10. 'if' → logprob: -6.867231369018555

Token 184: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.386890709400177
    2. 'nd' → logprob: -1.1368906497955322
    3. '(nd' → logprob: -11.261890411376953
    4. '[' → logprob: -13.136890411376953
    5. ' nde' → logprob: -13.761890411376953
    6. '_nd' → logprob: -14.386890411376953
    7. '  ' → logprob: -14.636890411376953
    8. ' ' → logprob: -15.011890411376953
    9. '   ' → logprob: -15.136890411376953
    10. '.nd' → logprob: -15.136890411376953

Token 185: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04545988515019417
    2. '       ' → logprob: -3.5454599857330322
    3. '[' → logprob: -4.920459747314453
    4. '        
' → logprob: -6.045459747314453
    5. '<|end|>' → logprob: -6.795459747314453
    6. '
' → logprob: -6.920459747314453
    7. ' if' → logprob: -6.920459747314453
    8. ';' → logprob: -8.045459747314453
    9. ',' → logprob: -8.170459747314453
    10. '[::-' → logprob: -8.295459747314453

Token 186: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07618886232376099
    2. ' if' → logprob: -2.951188802719116
    3. 'if' → logprob: -3.951188802719116
    4. '   ' → logprob: -7.076189041137695
    5. '        
' → logprob: -8.201189041137695
    6. '
' → logprob: -8.451189041137695
    7. ',' → logprob: -8.951189041137695
    8. '<|end|>' → logprob: -9.451189041137695
    9. '           ' → logprob: -9.701189041137695
    10. ' ' → logprob: -9.701189041137695

Token 187: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.030420931056141853
    2. '       ' → logprob: -4.155420780181885
    3. ' if' → logprob: -4.405420780181885
    4. '   ' → logprob: -6.405420780181885
    5. 'nd' → logprob: -8.155421257019043
    6. 'c' → logprob: -10.030421257019043
    7. 'while' → logprob: -11.155421257019043
    8. '	if' → logprob: -11.405421257019043
    9. 'import' → logprob: -11.405421257019043
    10. 'def' → logprob: -11.655421257019043

Token 188: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0552188158035278
    2. 'c' → logprob: -1.3052188158035278
    3. ' c' → logprob: -1.9302188158035278
    4. 'nd' → logprob: -2.1802186965942383
    5. ' x' → logprob: -2.3052186965942383
    6. ' nd' → logprob: -4.055218696594238
    7. '   ' → logprob: -6.055218696594238
    8. ' ' → logprob: -7.055218696594238
    9. '(nd' → logprob: -7.430218696594238
    10. '  ' → logprob: -7.680218696594238

Token 189: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0018352300394326448
    2. ' and' → logprob: -6.751835346221924
    3. 'and' → logprob: -8.501834869384766
    4. ' is' → logprob: -8.626834869384766
    5. '[d' → logprob: -8.626834869384766
    6. '4' → logprob: -10.001834869384766
    7. '   ' → logprob: -10.251834869384766
    8. ' ' → logprob: -11.751834869384766
    9. 'd' → logprob: -12.251834869384766
    10. '][' → logprob: -12.501834869384766

Token 190: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.2620258033275604
    2. 'd' → logprob: -1.7620258331298828
    3. '4' → logprob: -3.637025833129883
    4. '[' → logprob: -4.387025833129883
    5. ']' → logprob: -5.137025833129883
    6. '2' → logprob: -5.387025833129883
    7. '[d' → logprob: -5.762025833129883
    8. '][' → logprob: -5.887025833129883
    9. '
' → logprob: -6.887025833129883
    10. ' ' → logprob: -7.387025833129883

Token 191: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6538227200508118
    2. ' <' → logprob: -1.278822660446167
    3. '[' → logprob: -1.653822660446167
    4. '>' → logprob: -5.278822898864746
    5. ']' → logprob: -6.153822898864746
    6. '   ' → logprob: -7.153822898864746
    7. ' >' → logprob: -7.278822898864746
    8. ' is' → logprob: -7.778822898864746
    9. ' ' → logprob: -8.278822898864746
    10. ']<' → logprob: -8.903822898864746

Token 192: ' >=' (ID: 5064)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.16157181560993195
    2. ' <' → logprob: -1.9115718603134155
    3. '>' → logprob: -7.286571979522705
    4. '[' → logprob: -7.786571979522705
    5. ' >' → logprob: -9.411571502685547
    6. '>=' → logprob: -10.161571502685547
    7. ' ' → logprob: -10.161571502685547
    8. '   ' → logprob: -11.161571502685547
    9. '<c' → logprob: -11.286571502685547
    10. ' >=' → logprob: -11.661571502685547

Token 193: ' c' (ID: 274)
  Prédit: 'pri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pri' → logprob: -0.3607993423938751
    2. 'c' → logprob: -2.2357993125915527
    3. ' pri' → logprob: -2.4857993125915527
    4. 'nd' → logprob: -2.6107993125915527
    5. ' nd' → logprob: -3.8607993125915527
    6. ' c' → logprob: -4.360799312591553
    7. 'pr' → logprob: -6.360799312591553
    8. 'prio' → logprob: -6.860799312591553
    9. 'prior' → logprob: -6.985799312591553
    10. ' ' → logprob: -8.173299789428711

Token 194: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004840915556997061
    2. '.' → logprob: -6.379840850830078
    3. '3' → logprob: -6.504840850830078
    4. '4' → logprob: -6.629840850830078
    5. 'pri' → logprob: -9.129840850830078
    6. '.pr' → logprob: -10.129840850830078
    7. '   ' → logprob: -10.254840850830078
    8. ' ' → logprob: -11.004840850830078
    9. '```' → logprob: -11.004840850830078
    10. ' [' → logprob: -11.004840850830078

Token 195: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.894790981779806e-05
    2. ' ' → logprob: -10.250048637390137
    3. '
' → logprob: -12.750048637390137
    4. '[' → logprob: -12.875048637390137
    5. '2' → logprob: -12.937548637390137
    6. '   ' → logprob: -13.125048637390137
    7. '```' → logprob: -13.437548637390137
    8. ']' → logprob: -14.750048637390137
    9. '4' → logprob: -15.187548637390137
    10. '-' → logprob: -15.375048637390137

Token 196: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1860056221485138
    2. ':
' → logprob: -1.8110055923461914
    3. '           ' → logprob: -5.811005592346191
    4. ' :' → logprob: -6.561005592346191
    5. '       ' → logprob: -7.186005592346191
    6. ':return' → logprob: -7.561005592346191
    7. ' :
' → logprob: -8.311005592346191
    8. '):
' → logprob: -9.061005592346191
    9. '):' → logprob: -9.311005592346191
    10. '   ' → logprob: -10.811005592346191

Token 197: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00016837897419463843
    2. ' break' → logprob: -8.875168800354004
    3. '       ' → logprob: -11.250168800354004
    4. 'break' → logprob: -11.500168800354004
    5. '   ' → logprob: -13.000168800354004
    6. '               ' → logprob: -13.750168800354004
    7. '          ' → logprob: -14.250168800354004
    8. '```' → logprob: -15.125168800354004
    9. '         ' → logprob: -15.250168800354004
    10. '	break' → logprob: -15.750168800354004

Token 198: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24323402345180511
    2. ' break' → logprob: -1.7432340383529663
    3. 'break' (adapté à ' break') → logprob: -3.2432339191436768
    4. 'return' → logprob: -6.868234157562256
    5. ' return' → logprob: -7.868234157562256
    6. '	break' → logprob: -8.493233680725098
    7. '               ' → logprob: -8.993233680725098
    8. '       ' → logprob: -9.618233680725098
    9. '   ' → logprob: -10.243233680725098
    10. '```' → logprob: -10.868233680725098

Token 199: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06189810112118721
    2. '       ' → logprob: -2.9368979930877686
    3. 'if' → logprob: -6.311898231506348
    4. ' if' → logprob: -7.061898231506348
    5. 'nd' → logprob: -7.311898231506348
    6. '
' → logprob: -7.436898231506348
    7. 'c' → logprob: -7.686898231506348
    8. 'else' → logprob: -7.811898231506348
    9. 'rotate' → logprob: -8.311898231506348
    10. 'while' → logprob: -8.561898231506348

Token 200: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037659937515854836
    2. '       ' → logprob: -6.503766059875488
    3. '
' → logprob: -6.878766059875488
    4. ' else' → logprob: -8.253766059875488
    5. 'else' → logprob: -8.253766059875488
    6. ' if' → logprob: -8.753766059875488
    7. 'if' → logprob: -9.003766059875488
    8. 'nd' → logprob: -9.628766059875488
    9. ')' → logprob: -9.878766059875488
    10. ' ' → logprob: -9.878766059875488

Token 201: ' rotate' (ID: 31987)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.11251108348369598
    2. 'c' → logprob: -3.737511157989502
    3. 'x' → logprob: -3.862511157989502
    4. '   ' → logprob: -3.987511157989502
    5. ' nd' → logprob: -4.612511157989502
    6. 'rotate' (adapté à ' rotate') → logprob: -4.612511157989502
    7. 'if' → logprob: -4.862511157989502
    8. 'root' → logprob: -5.487511157989502
    9. 'else' → logprob: -5.612511157989502
    10. 'rot' → logprob: -6.737511157989502

Token 202: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.007488669361919165
    2. '(' → logprob: -5.63248872756958
    3. '(st' → logprob: -5.88248872756958
    4. ' (' → logprob: -7.25748872756958
    5. 'x' → logprob: -8.257488250732422
    6. '((' → logprob: -9.882488250732422
    7. '(s' → logprob: -10.757488250732422
    8. '(nd' → logprob: -10.882488250732422
    9. ' x' → logprob: -11.757488250732422
    10. '(
' → logprob: -12.132488250732422

Token 203: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0991358757019043
    2. ',d' → logprob: -2.4741358757019043
    3. ' ,' → logprob: -4.599135875701904
    4. '[d' → logprob: -10.224136352539062
    5. '(d' → logprob: -11.224136352539062
    6. 'd' → logprob: -11.224136352539062
    7. '   ' → logprob: -11.599136352539062
    8. ' d' → logprob: -12.599136352539062
    9. ',[' → logprob: -13.474136352539062
    10. ' ' → logprob: -13.849136352539062

Token 204: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1799619197845459
    2. ' d' → logprob: -1.804961919784546
    3. '   ' → logprob: -9.179962158203125
    4. ' ' → logprob: -10.179962158203125
    5. '  ' → logprob: -10.929962158203125
    6. '       ' → logprob: -11.179962158203125
    7. '    ' → logprob: -11.304962158203125
    8. '	d' → logprob: -12.179962158203125
    9. '1' → logprob: -12.429962158203125
    10. '      ' → logprob: -12.929962158203125

Token 205: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02977108582854271
    2. ')
' → logprob: -3.529771089553833
    3. ')
' → logprob: -11.279770851135254
    4. ' )' → logprob: -12.154770851135254
    5. ')

' → logprob: -13.654770851135254
    6. ' )
' → logprob: -14.279770851135254
    7. '   ' → logprob: -14.779770851135254
    8. '       ' → logprob: -16.02977180480957
    9. ');' → logprob: -16.15477180480957
    10. ')#' → logprob: -16.52977180480957

Token 206: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 207: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5572876334190369
    2. '<|end|>' → logprob: -1.8072876930236816
    3. 'nd' → logprob: -2.8072876930236816
    4. ' if' → logprob: -2.9322876930236816
    5. 'root' → logprob: -2.9322876930236816
    6. '       ' → logprob: -3.6822876930236816
    7. ' ' → logprob: -4.182287693023682
    8. ' root' → logprob: -4.307287693023682
    9. '[' → logprob: -4.807287693023682
    10. '[root' → logprob: -5.182287693023682

Token 208: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2520328462123871
    2. ':' → logprob: -1.5020328760147095
    3. ' :
' → logprob: -10.002033233642578
    4. ' :' → logprob: -10.502033233642578
    5. ':

' → logprob: -10.877033233642578
    6. '   ' → logprob: -11.877033233642578
    7. ':
' → logprob: -13.002033233642578
    8. '{
' → logprob: -13.877033233642578
    9. '{' → logprob: -14.002033233642578
    10. '  ' → logprob: -15.252033233642578

Token 209: '       ' (ID: 309)
  Prédit: ' root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' root' → logprob: -0.4111739695072174
    2. 'root' → logprob: -1.411173939704895
    3. '   ' → logprob: -2.5361740589141846
    4. '       ' → logprob: -4.2861738204956055
    5. '	root' → logprob: -8.661173820495605
    6. '[root' → logprob: -9.536173820495605
    7. '```' → logprob: -10.286173820495605
    8. ':' → logprob: -11.161173820495605
    9. '_root' → logprob: -11.286173820495605
    10. ':
' → logprob: -11.911173820495605

Token 210: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' (adapté à ' root') → logprob: -0.000712670327629894
    2. ' root' → logprob: -7.250712871551514
    3. '   ' → logprob: -13.125712394714355
    4. '	root' → logprob: -14.750712394714355
    5. '[root' → logprob: -16.250713348388672
    6. '
' → logprob: -16.375713348388672
    7. 'nd' → logprob: -17.625713348388672
    8. 'roots' → logprob: -17.750713348388672
    9. '_root' → logprob: -17.875713348388672
    10. 'global' → logprob: -18.125713348388672

Token 211: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020710527896881
    2. ' =' → logprob: -2.3502070903778076
    3. ',' → logprob: -15.475207328796387
    4. '＝' → logprob: -16.97520637512207
    5. '=root' → logprob: -17.10020637512207
    6. '=n' → logprob: -17.35020637512207
    7. '=

' → logprob: -17.35020637512207
    8. '=node' → logprob: -17.47520637512207
    9. '=}' → logprob: -17.60020637512207
    10. '=c' → logprob: -17.60020637512207

Token 212: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.029776642099022865
    2. ' nd' → logprob: -3.5297765731811523
    3. '(nd' → logprob: -11.779776573181152
    4. 'nds' → logprob: -13.279776573181152
    5. ' ' → logprob: -13.404776573181152
    6. 'c' → logprob: -13.404776573181152
    7. '   ' → logprob: -13.404776573181152
    8. 'n' → logprob: -13.654776573181152
    9. '  ' → logprob: -13.654776573181152
    10. 'ndi' → logprob: -13.904776573181152

Token 213: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 214: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 215: ' __' (ID: 2516)
  Prédit: ' inorder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' inorder' → logprob: -0.566814124584198
    2. ' search' → logprob: -1.8168141841888428
    3. 'search' → logprob: -2.4418141841888428
    4. ' delete' → logprob: -2.9418141841888428
    5. ' erase' → logprob: -3.6918141841888428
    6. 'in' → logprob: -4.066813945770264
    7. 'delete' → logprob: -4.191813945770264
    8. ' find' → logprob: -4.316813945770264
    9. 'erase' → logprob: -5.066813945770264
    10. ' in' → logprob: -5.191813945770264

Token 216: 'delete' (ID: 8509)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.4380708932876587
    2. 'len' → logprob: -2.063070774078369
    3. 'name' → logprob: -2.313070774078369
    4. 'main' → logprob: -2.688070774078369
    5. 'contains' → logprob: -3.438070774078369
    6. 'iter' → logprob: -3.813070774078369
    7. 'next' → logprob: -6.438070774078369
    8. 'call' → logprob: -6.938070774078369
    9. 'repr' → logprob: -7.063070774078369
    10. '_' → logprob: -7.313070774078369

Token 217: '(nd' (ID: 131841)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10987965017557144
    2. '(root' → logprob: -2.484879732131958
    3. '(val' → logprob: -4.484879493713379
    4. '(nd' → logprob: -5.734879493713379
    5. '(node' → logprob: -6.609879493713379
    6. '(x' → logprob: -6.734879493713379
    7. '(_' → logprob: -6.859879493713379
    8. '(n' → logprob: -7.734879493713379
    9. ' (' → logprob: -8.234879493713379
    10. '_' → logprob: -8.484879493713379

Token 218: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.468279752880335e-05
    2. ' ,' → logprob: -10.625064849853516
    3. ',d' → logprob: -10.625064849853516
    4. '):' → logprob: -11.250064849853516
    5. '   ' → logprob: -14.250064849853516
    6. '[' → logprob: -14.250064849853516
    7. ',
' → logprob: -15.000064849853516
    8. '[],' → logprob: -15.250064849853516
    9. ')' → logprob: -15.375064849853516
    10. '):
' → logprob: -15.500064849853516

Token 219: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0737880989909172
    2. '   ' → logprob: -2.6987881660461426
    3. 'if' → logprob: -5.698788166046143
    4. '    ' → logprob: -8.448787689208984
    5. '	if' → logprob: -9.448787689208984
    6. ' None' → logprob: -9.823787689208984
    7. ' d' → logprob: -10.448787689208984
    8. ' while' → logprob: -10.698787689208984
    9. ' pass' → logprob: -11.198787689208984
    10. 'd' → logprob: -11.573787689208984

Token 220: ' st' (ID: 420)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.22592772543430328
    2. 'if' → logprob: -1.600927710533142
    3. '   ' → logprob: -8.600927352905273
    4. ' while' → logprob: -8.850927352905273
    5. ' pass' → logprob: -9.725927352905273
    6. 'while' → logprob: -9.975927352905273
    7. '	if' → logprob: -10.725927352905273
    8. ' None' → logprob: -11.225927352905273
    9. ' return' → logprob: -11.850927352905273
    10. 'None' → logprob: -12.225927352905273

Token 221: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.098131462931633
    2. '=' → logprob: -2.4731314182281494
    3. '=[]' → logprob: -5.0981316566467285
    4. '.append' → logprob: -5.8481316566467285
    5. '=[]
' → logprob: -10.22313117980957
    6. '.pop' → logprob: -10.59813117980957
    7. '[]' → logprob: -10.72313117980957
    8. ',' → logprob: -11.34813117980957
    9. '[' → logprob: -11.47313117980957
    10. '=[' → logprob: -11.84813117980957

Token 222: ' [];' (ID: 103967)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.15014342963695526
    2. '[' → logprob: -2.0251433849334717
    3. '[]
' → logprob: -5.525143623352051
    4. '[n' → logprob: -6.025143623352051
    5. '[(' → logprob: -7.900143623352051
    6. 'nd' → logprob: -8.52514362335205
    7. 'deque' → logprob: -8.77514362335205
    8. ' []' → logprob: -9.15014362335205
    9. '[node' → logprob: -9.90014362335205
    10. '(nd' → logprob: -10.27514362335205

Token 223: ' dr' (ID: 1498)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.574606716632843
    2. 'while' → logprob: -1.4496066570281982
    3. 'd' → logprob: -2.3246066570281982
    4. ' d' → logprob: -3.0746066570281982
    5. 'x' → logprob: -3.9496066570281982
    6. ' if' → logprob: -4.074606895446777
    7. ' x' → logprob: -4.449606895446777
    8. 'dr' → logprob: -5.449606895446777
    9. 'if' → logprob: -5.449606895446777
    10. ' dr' → logprob: -7.324606895446777

Token 224: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38724809885025024
    2. ' =' → logprob: -1.1372480392456055
    3. '=[]' → logprob: -7.8872480392456055
    4. '=[]
' → logprob: -14.887248039245605
    5. ' ' → logprob: -15.012248039245605
    6. '[]' → logprob: -15.387248039245605
    7. '.append' → logprob: -15.762248039245605
    8. '={}' → logprob: -16.387248992919922
    9. '<|end|>' → logprob: -16.762248992919922
    10. '[' → logprob: -16.887248992919922

Token 225: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0020422483794391155
    2. '[]
' → logprob: -6.252042293548584
    3. ' []' → logprob: -9.252041816711426
    4. '[]}' → logprob: -11.877041816711426
    5. '[]

' → logprob: -12.127041816711426
    6. '[' → logprob: -12.877041816711426
    7. '=[]' → logprob: -13.752041816711426
    8. '([]' → logprob: -14.377041816711426
    9. ' []
' → logprob: -14.627041816711426
    10. '[]=' → logprob: -15.752041816711426

Token 226: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14530876278877258
    2. ' while' → logprob: -2.64530873298645
    3. 'while' → logprob: -3.02030873298645
    4. 'x' → logprob: -4.770308971405029
    5. ' x' → logprob: -5.770308971405029
    6. ' if' → logprob: -6.520308971405029
    7. 'if' → logprob: -7.020308971405029
    8. '<|end|>' → logprob: -7.645308971405029
    9. '
' → logprob: -8.020308494567871
    10. 'def' → logprob: -8.645308494567871

Token 227: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.7059512138366699
    2. 'while' (adapté à ' while') → logprob: -1.45595121383667
    3. 'x' → logprob: -2.20595121383667
    4. '   ' → logprob: -2.70595121383667
    5. ' if' → logprob: -3.20595121383667
    6. 'if' → logprob: -3.95595121383667
    7. ' x' → logprob: -4.20595121383667
    8. 'd' → logprob: -4.70595121383667
    9. 'c' → logprob: -4.95595121383667
    10. ' c' → logprob: -6.20595121383667

Token 228: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.20358549058437347
    2. ' nd' → logprob: -1.7035855054855347
    3. '(nd' → logprob: -6.328585624694824
    4. ' not' → logprob: -8.203585624694824
    5. 'not' → logprob: -9.703585624694824
    6. ' True' → logprob: -11.453585624694824
    7. 'True' → logprob: -11.453585624694824
    8. '(' → logprob: -11.453585624694824
    9. ' (' → logprob: -12.828585624694824
    10. 'root' → logprob: -13.203585624694824

Token 229: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6176192760467529
    2. ' and' → logprob: -0.9926192760467529
    3. ':' → logprob: -2.992619276046753
    4. ' is' → logprob: -4.117619514465332
    5. ':
' → logprob: -4.492619514465332
    6. 'and' → logprob: -4.742619514465332
    7. '[d' → logprob: -5.992619514465332
    8. '<|end|>' → logprob: -7.492619514465332
    9. ' ' → logprob: -8.742619514465332
    10. '<|end|>' → logprob: -8.992619514465332

Token 230: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.054655320942401886
    2. '1' → logprob: -3.0546553134918213
    3. '2' → logprob: -5.9296555519104
    4. ' ' → logprob: -6.5546555519104
    5. 'd' → logprob: -7.1796555519104
    6. 'None' → logprob: -7.1796555519104
    7. '3' → logprob: -8.929655075073242
    8. '[' → logprob: -9.429655075073242
    9. '
' → logprob: -10.554655075073242
    10. 'not' → logprob: -10.679655075073242

Token 231: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010303078452125192
    2. ']!=' → logprob: -7.376030445098877
    3. ' is' → logprob: -8.751029968261719
    4. ']:
' → logprob: -9.626029968261719
    5. ' ]' → logprob: -9.751029968261719
    6. ']==' → logprob: -10.376029968261719
    7. 'is' → logprob: -10.626029968261719
    8. '[' → logprob: -10.626029968261719
    9. ']:' → logprob: -10.876029968261719
    10. ' and' → logprob: -13.126029968261719

Token 232: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.403982013463974
    2. 'and' → logprob: -1.5289820432662964
    3. ' is' → logprob: -2.278981924057007
    4. ':' → logprob: -5.278982162475586
    5. 'is' → logprob: -5.278982162475586
    6. ' or' → logprob: -6.028982162475586
    7. '[' → logprob: -8.278982162475586
    8. 'or' → logprob: -9.403982162475586
    9. ' ' → logprob: -9.528982162475586
    10. '<|end|>' → logprob: -9.653982162475586

Token 233: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.22560423612594604
    2. ' nd' → logprob: -1.6006042957305908
    3. '(nd' → logprob: -9.725604057312012
    4. '1' → logprob: -9.850604057312012
    5. '   ' → logprob: -10.100604057312012
    6. ' ' → logprob: -11.725604057312012
    7. '    ' → logprob: -11.725604057312012
    8. '  ' → logprob: -11.975604057312012
    9. '[' → logprob: -13.225604057312012
    10. '.nd' → logprob: -13.600604057312012

Token 234: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00010628487507347018
    2. '1' → logprob: -9.875105857849121
    3. '[
' → logprob: -11.000105857849121
    4. ' ' → logprob: -11.875105857849121
    5. ' [' → logprob: -11.875105857849121
    6. '][' → logprob: -12.000105857849121
    7. '```' → logprob: -12.875105857849121
    8. '   ' → logprob: -13.000105857849121
    9. '<|end|>' → logprob: -13.250105857849121
    10. '=' → logprob: -13.500105857849121

Token 235: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.500017166137695
    3. '[' → logprob: -12.250017166137695
    4. '0' → logprob: -14.625017166137695
    5. ']' → logprob: -14.750017166137695
    6. '   ' → logprob: -15.125017166137695
    7. '```' → logprob: -15.250017166137695
    8. '(' → logprob: -17.187517166137695
    9. '2' → logprob: -17.187517166137695
    10. '])' → logprob: -17.375017166137695

Token 236: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.5864741206169128
    2. ']:
' → logprob: -0.8364741206169128
    3. ']' → logprob: -5.5864739418029785
    4. ':' → logprob: -5.7114739418029785
    5. ']>' → logprob: -7.2114739418029785
    6. ']:
' → logprob: -7.5864739418029785
    7. ':
' → logprob: -7.5864739418029785
    8. '[' → logprob: -8.086474418640137
    9. ' ]' → logprob: -8.086474418640137
    10. '<|end|>' → logprob: -8.336474418640137

Token 237: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19398438930511475
    2. ' d' → logprob: -1.8189843893051147
    3. '   ' → logprob: -5.068984508514404
    4. ',' → logprob: -6.193984508514404
    5. 'd' → logprob: -6.568984508514404
    6. '<|end|>' → logprob: -6.568984508514404
    7. ' if' → logprob: -6.693984508514404
    8. '[' → logprob: -8.193984031677246
    9. ',d' → logprob: -8.193984031677246
    10. ' for' → logprob: -8.693984031677246

Token 238: ' l' (ID: 305)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.035879116505384445
    2. ' if' → logprob: -4.160879135131836
    3. 'if' → logprob: -4.285879135131836
    4. ' d' → logprob: -5.285879135131836
    5. '   ' → logprob: -7.160879135131836
    6. 'c' → logprob: -11.035879135131836
    7. ' ' → logprob: -11.660879135131836
    8. '	d' → logprob: -11.910879135131836
    9. '       ' → logprob: -12.160879135131836
    10. 'for' → logprob: -12.910879135131836

Token 239: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2379239946603775
    2. '=' → logprob: -2.487924098968506
    3. ',' → logprob: -2.612924098968506
    4. 'd' → logprob: -3.362924098968506
    5. ',d' → logprob: -5.737924098968506
    6. 'st' → logprob: -5.987924098968506
    7. 'eft' → logprob: -6.112924098968506
    8. '=d' → logprob: -6.112924098968506
    9. ',r' → logprob: -6.237924098968506
    10. 'f' → logprob: -6.487924098968506

Token 240: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.4496559500694275
    2. ' nd' → logprob: -1.6996560096740723
    3. '0' → logprob: -1.9496560096740723
    4. ' ' → logprob: -4.699656009674072
    5. '1' → logprob: -4.949656009674072
    6. '(nd' → logprob: -5.074656009674072
    7. '[' → logprob: -5.449656009674072
    8. 'not' → logprob: -5.699656009674072
    9. '(' → logprob: -5.699656009674072
    10. ' not' → logprob: -6.699656009674072

Token 241: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08707516640424728
    2. ' =' → logprob: -2.7120752334594727
    3. ',' → logprob: -4.962075233459473
    4. '=' → logprob: -5.337075233459473
    5. '<|end|>' → logprob: -5.587075233459473
    6. 'import' → logprob: -8.462075233459473
    7. ' ' → logprob: -8.712075233459473
    8. ' [' → logprob: -8.837075233459473
    9. 'def' → logprob: -8.962075233459473
    10. '0' → logprob: -9.087075233459473

Token 242: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2327798753976822
    2. '1' → logprob: -1.857779860496521
    3. '[' → logprob: -3.1077799797058105
    4. ' ' → logprob: -5.3577799797058105
    5. ']' → logprob: -7.3577799797058105
    6. ',' → logprob: -7.9827799797058105
    7. '   ' → logprob: -8.482779502868652
    8. '][' → logprob: -8.670279502868652
    9. ' [' → logprob: -9.170279502868652
    10. ')' → logprob: -9.357779502868652

Token 243: '];' (ID: 11464)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11229683458805084
    2. ']
' → logprob: -2.3622968196868896
    3. ' if' → logprob: -5.987297058105469
    4. '[' → logprob: -6.112297058105469
    5. ' ]' → logprob: -6.237297058105469
    6. ' or' → logprob: -6.737297058105469
    7. 'if' → logprob: -6.862297058105469
    8. '],' → logprob: -7.112297058105469
    9. ' ]
' → logprob: -7.612297058105469
    10. '<|end|>' → logprob: -7.987297058105469

Token 244: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0018279805080965161
    2. ' r' → logprob: -6.376828193664551
    3. '   ' → logprob: -9.50182819366455
    4. 'if' → logprob: -10.00182819366455
    5. ' if' → logprob: -12.75182819366455
    6. '       ' → logprob: -13.75182819366455
    7. 'd' → logprob: -13.75182819366455
    8. '    ' → logprob: -16.126827239990234
    9. '
' → logprob: -16.251827239990234
    10. 'c' → logprob: -16.251827239990234

Token 245: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014138251543045
    2. ' =' → logprob: -1.701413869857788
    3. 'r' → logprob: -16.201414108276367
    4. '[' → logprob: -16.451414108276367
    5. ',' → logprob: -16.576414108276367
    6. ' ' → logprob: -16.701414108276367
    7. '=r' → logprob: -17.201414108276367
    8. ']' → logprob: -17.576414108276367
    9. '=}' → logprob: -17.951414108276367
    10. ')' → logprob: -18.076414108276367

Token 246: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.22546084225177765
    2. ' nd' → logprob: -1.6004608869552612
    3. '[' → logprob: -10.60046100616455
    4. '(nd' → logprob: -11.35046100616455
    5. '_nd' → logprob: -12.97546100616455
    6. '.nd' → logprob: -13.10046100616455
    7. 'rd' → logprob: -13.72546100616455
    8. 'ndl' → logprob: -13.85046100616455
    9. 'ng' → logprob: -14.72546100616455
    10. '   ' → logprob: -14.85046100616455

Token 247: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07933035492897034
    2. '1' → logprob: -2.5793304443359375
    3. ']' → logprob: -8.329330444335938
    4. ' ' → logprob: -10.079330444335938
    5. '][' → logprob: -10.204330444335938
    6. '=' → logprob: -10.579330444335938
    7. ' [' → logprob: -11.079330444335938
    8. '```' → logprob: -11.204330444335938
    9. '<|end|>' → logprob: -11.704330444335938
    10. ',' → logprob: -11.829330444335938

Token 248: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -13.125004768371582
    3. '[' → logprob: -13.375004768371582
    4. '0' → logprob: -15.000004768371582
    5. 'r' → logprob: -15.125004768371582
    6. ']' → logprob: -15.125004768371582
    7. '```' → logprob: -16.0000057220459
    8. '   ' → logprob: -16.5625057220459
    9. '۱' → logprob: -17.7500057220459
    10. '-' → logprob: -18.2500057220459

Token 249: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007436246611177921
    2. ']
' → logprob: -5.132436275482178
    3. '];' → logprob: -7.382436275482178
    4. ' ]' → logprob: -7.882436275482178
    5. '<|end|>' → logprob: -7.882436275482178
    6. ']

' → logprob: -10.50743579864502
    7. '[' → logprob: -10.63243579864502
    8. '<|end|>' → logprob: -11.00743579864502
    9. 'def' → logprob: -11.13243579864502
    10. ' ]
' → logprob: -12.25743579864502

Token 250: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04134640097618103
    2. 'd' → logprob: -4.541346549987793
    3. ' if' → logprob: -4.541346549987793
    4. ' d' → logprob: -4.791346549987793
    5. '<|end|>' → logprob: -5.541346549987793
    6. '   ' → logprob: -6.166346549987793
    7. ',' → logprob: -6.666346549987793
    8. '        ' → logprob: -7.166346549987793
    9. ' ' → logprob: -7.291346549987793
    10. ',d' → logprob: -7.541346549987793

Token 251: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.180694118142128
    2. ' d' → logprob: -2.305694103240967
    3. ' if' → logprob: -2.805694103240967
    4. 'if' → logprob: -5.305694103240967
    5. '   ' → logprob: -9.680694580078125
    6. ' ' → logprob: -9.930694580078125
    7. 'l' → logprob: -11.305694580078125
    8. '<|end|>' → logprob: -11.430694580078125
    9. '[' → logprob: -11.805694580078125
    10. '       ' → logprob: -12.055694580078125

Token 252: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5232014060020447
    2. ' =' → logprob: -0.8982014060020447
    3. 'f' → logprob: -10.023200988769531
    4. '=(' → logprob: -10.898200988769531
    5. ' ' → logprob: -12.773200988769531
    6. ' =(' → logprob: -13.398200988769531
    7. '=((' → logprob: -13.398200988769531
    8. ',' → logprob: -13.523200988769531
    9. '=int' → logprob: -13.648200988769531
    10. 'if' → logprob: -14.148200988769531

Token 253: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6901225447654724
    2. '1' → logprob: -1.8151226043701172
    3. '(l' → logprob: -2.315122604370117
    4. '(r' → logprob: -2.940122604370117
    5. '(' → logprob: -3.065122604370117
    6. '(int' → logprob: -3.190122604370117
    7. ' (' → logprob: -3.815122604370117
    8. 'int' → logprob: -3.940122604370117
    9. ' ' → logprob: -4.065122604370117
    10. 'l' → logprob: -4.190122604370117

Token 254: 'l' (ID: 75)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7574447989463806
    2. 'l' → logprob: -0.8824447989463806
    3. '1' → logprob: -2.2574448585510254
    4. '0' → logprob: -4.882444858551025
    5. ' l' → logprob: -6.507444858551025
    6. ' r' → logprob: -6.882444858551025
    7. 'not' → logprob: -7.132444858551025
    8. '(r' → logprob: -7.882444858551025
    9. '(l' → logprob: -7.882444858551025
    10. 'int' → logprob: -8.257444381713867

Token 255: '[' (ID: 58)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.028727298602461815
    2. '[' → logprob: -4.1537275314331055
    3. 'is' → logprob: -4.5287275314331055
    4. ' ' → logprob: -6.6537275314331055
    5. '==' → logprob: -8.403727531433105
    6. ')' → logprob: -9.403727531433105
    7. ' ==' → logprob: -9.778727531433105
    8. ' and' → logprob: -10.028727531433105
    9. 'and' → logprob: -10.153727531433105
    10. '=' → logprob: -11.153727531433105

Token 256: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13674166798591614
    2. '0' → logprob: -2.3867416381835938
    3. ']' → logprob: -4.136741638183594
    4. ' is' → logprob: -4.386741638183594
    5. ' ' → logprob: -5.886741638183594
    6. 'None' → logprob: -6.761741638183594
    7. 'is' → logprob: -6.886741638183594
    8. '[' → logprob: -7.261741638183594
    9. ']==' → logprob: -8.136741638183594
    10. '!=' → logprob: -8.261741638183594

Token 257: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4872124493122101
    2. '>' → logprob: -1.4872124195098877
    3. '[' → logprob: -2.4872124195098877
    4. ']' → logprob: -3.3622124195098877
    5. ' <' → logprob: -3.4872124195098877
    6. ' >' → logprob: -5.112212657928467
    7. ']<' → logprob: -5.862212657928467
    8. ']>' → logprob: -7.237212657928467
    9. '][' → logprob: -7.362212657928467
    10. ' if' → logprob: -8.112212181091309

Token 258: ' <=' (ID: 5017)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.10964196920394897
    2. ' <' → logprob: -2.7346420288085938
    3. '>' → logprob: -3.3596420288085938
    4. ' >' → logprob: -5.609642028808594
    5. ' if' → logprob: -8.359642028808594
    6. 'if' → logprob: -8.984642028808594
    7. '[' → logprob: -9.484642028808594
    8. ' ' → logprob: -10.734642028808594
    9. '```' → logprob: -11.984642028808594
    10. '   ' → logprob: -12.609642028808594

Token 259: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.033647891134023666
    2. ' r' → logprob: -3.4086477756500244
    3. ' ' → logprob: -14.158647537231445
    4. '(r' → logprob: -14.783647537231445
    5. '	r' → logprob: -14.908647537231445
    6. '   ' → logprob: -15.283647537231445
    7. '  ' → logprob: -15.783647537231445
    8. '
' → logprob: -16.283647537231445
    9. '[r' → logprob: -16.408647537231445
    10. ')' → logprob: -16.658647537231445

Token 260: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00021891399228479713
    2. '3' → logprob: -8.875219345092773
    3. ' [' → logprob: -10.625219345092773
    4. 'and' → logprob: -11.625219345092773
    5. '```' → logprob: -11.625219345092773
    6. '][' → logprob: -11.875219345092773
    7. '
' → logprob: -12.687719345092773
    8. 'd' → logprob: -12.750219345092773
    9. '   ' → logprob: -12.875219345092773
    10. ' and' → logprob: -12.937719345092773

Token 261: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -6.480199954239652e-05
    2. '[' → logprob: -9.750064849853516
    3. ' ' → logprob: -12.625064849853516
    4. '1' → logprob: -14.000064849853516
    5. ']' → logprob: -14.625064849853516
    6. '```' → logprob: -14.625064849853516
    7. '0' → logprob: -14.875064849853516
    8. '
' → logprob: -15.250064849853516
    9. '   ' → logprob: -15.250064849853516
    10. '2' → logprob: -16.187564849853516

Token 262: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.048894379287958145
    2. ')' → logprob: -3.9238944053649902
    3. '])
' → logprob: -4.04889440536499
    4. ']' → logprob: -5.42389440536499
    5. ' if' → logprob: -5.54889440536499
    6. ' ])' → logprob: -6.79889440536499
    7. ' )' → logprob: -7.67389440536499
    8. 'if' → logprob: -9.048893928527832
    9. ')
' → logprob: -9.298893928527832
    10. ' ])
' → logprob: -9.923893928527832

Token 263: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0013898775214329362
    2. 'if' → logprob: -6.626389980316162
    3. '0' → logprob: -10.376389503479004
    4. '<|end|>' → logprob: -11.001389503479004
    5. ' or' → logprob: -11.876389503479004
    6. '[' → logprob: -12.876389503479004
    7. ' ' → logprob: -13.001389503479004
    8. '       ' → logprob: -13.876389503479004
    9. '?' → logprob: -14.126389503479004
    10. ')' → logprob: -14.251389503479004

Token 264: ' l' (ID: 305)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5267373323440552
    2. ' r' → logprob: -1.4017373323440552
    3. ' l' → logprob: -2.4017372131347656
    4. 'l' → logprob: -2.6517372131347656
    5. '(r' → logprob: -6.901737213134766
    6. '(l' → logprob: -7.651737213134766
    7. ' (' → logprob: -7.901737213134766
    8. '(' → logprob: -9.026737213134766
    9. 'nd' → logprob: -9.901737213134766
    10. ' not' → logprob: -10.026737213134766

Token 265: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.49284878373146057
    2. 'and' → logprob: -1.7428487539291382
    3. 'else' → logprob: -2.1178488731384277
    4. ' else' → logprob: -2.3678488731384277
    5. ' is' → logprob: -9.61784839630127
    6. '[' → logprob: -11.24284839630127
    7. ' ' → logprob: -11.36784839630127
    8. 'if' → logprob: -11.61784839630127
    9. 'is' → logprob: -11.99284839630127
    10. '        ' → logprob: -12.11784839630127

Token 266: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.10033930093050003
    2. ' r' → logprob: -2.350339412689209
    3. 'l' → logprob: -9.60033893585205
    4. ' l' → logprob: -11.10033893585205
    5. ' not' → logprob: -11.22533893585205
    6. 'not' → logprob: -11.72533893585205
    7. ' ' → logprob: -11.85033893585205
    8. '(r' → logprob: -11.85033893585205
    9. ' (' → logprob: -12.72533893585205
    10. 'd' → logprob: -13.10033893585205

Token 267: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0297523383051157
    2. 'else' → logprob: -3.529752254486084
    3. '        ' → logprob: -13.904752731323242
    4. '       ' → logprob: -14.779752731323242
    5. '	else' → logprob: -15.529752731323242
    6. '         ' → logprob: -16.154752731323242
    7. ' ' → logprob: -16.404752731323242
    8. '           ' → logprob: -16.654752731323242
    9. '    ' → logprob: -17.404752731323242
    10. '   ' → logprob: -17.529752731323242

Token 268: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3341724872589111
    2. '0' → logprob: -1.5841724872589111
    3. ' l' → logprob: -1.5841724872589111
    4. '1' → logprob: -2.209172487258911
    5. ' (' → logprob: -2.459172487258911
    6. ' r' → logprob: -2.834172487258911
    7. 'l' → logprob: -3.709172487258911
    8. 'r' → logprob: -4.084172248840332
    9. '(' → logprob: -4.334172248840332
    10. ' d' → logprob: -5.209172248840332

Token 269: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7965115308761597
    2. '0' → logprob: -1.2965115308761597
    3. '1' → logprob: -2.421511650085449
    4. ' l' → logprob: -2.546511650085449
    5. 'r' → logprob: -2.921511650085449
    6. ' not' → logprob: -3.921511650085449
    7. ' ' → logprob: -4.546511650085449
    8. 'not' → logprob: -4.671511650085449
    9. ' r' → logprob: -4.796511650085449
    10. 'd' → logprob: -5.921511650085449

Token 270: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.027257097885012627
    2. 'is' → logprob: -3.652257204055786
    3. '[' → logprob: -7.277256965637207
    4. ')' → logprob: -9.027256965637207
    5. '<|end|>' → logprob: -9.652256965637207
    6. ' ' → logprob: -10.652256965637207
    7. 'and' → logprob: -11.152256965637207
    8. ' and' → logprob: -11.777256965637207
    9. '<|end|>' → logprob: -11.902256965637207
    10. '==' → logprob: -12.027256965637207

Token 271: ' None' (ID: 4662)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.12176329642534256
    2. ' not' → logprob: -2.746763229370117
    3. 'None' → logprob: -2.996763229370117
    4. ' None' → logprob: -7.496763229370117
    5. '	not' → logprob: -13.871763229370117
    6. 'True' → logprob: -13.996763229370117
    7. 'none' → logprob: -14.371763229370117
    8. 'Not' → logprob: -14.996763229370117
    9. 'False' → logprob: -14.996763229370117
    10. '(None' → logprob: -15.871763229370117

Token 272: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2300145924091339
    2. ' or' → logprob: -1.8550145626068115
    3. ',' → logprob: -3.7300145626068115
    4. 'or' → logprob: -5.605014801025391
    5. ' and' → logprob: -5.730014801025391
    6. ' is' → logprob: -5.730014801025391
    7. '<|end|>' → logprob: -5.730014801025391
    8. '0' → logprob: -6.105014801025391
    9. ' )' → logprob: -6.355014801025391
    10. ' ' → logprob: -6.480014801025391

Token 273: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5137519240379333
    2. '0' → logprob: -1.7637519836425781
    3. ' =' → logprob: -2.888751983642578
    4. '<|end|>' → logprob: -3.138751983642578
    5. ' if' → logprob: -3.513751983642578
    6. ' ' → logprob: -3.763751983642578
    7. '=' → logprob: -4.013751983642578
    8. 'd' → logprob: -4.263751983642578
    9. '   ' → logprob: -4.513751983642578
    10. '[' → logprob: -5.013751983642578

Token 274: ' st' (ID: 420)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2929409742355347
    2. ' d' → logprob: -1.2929409742355347
    3. 'd' → logprob: -1.7929409742355347
    4. '       ' → logprob: -2.167941093444824
    5. ' if' → logprob: -2.292941093444824
    6. ' ' → logprob: -4.042941093444824
    7. 'if' → logprob: -4.542941093444824
    8. '[' → logprob: -4.667941093444824
    9. 'nd' → logprob: -4.792941093444824
    10. ' nd' → logprob: -5.292941093444824

Token 275: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0004263852315489203
    2. '.' → logprob: -7.875426292419434
    3. ' .' → logprob: -10.125426292419434
    4. '.app' → logprob: -13.000426292419434
    5. 'append' → logprob: -13.250426292419434
    6. '.pop' → logprob: -13.875426292419434
    7. '.ap' → logprob: -14.375426292419434
    8. '.push' → logprob: -16.00042724609375
    9. '.extend' → logprob: -16.00042724609375
    10. 'Append' → logprob: -16.25042724609375

Token 276: '(' (ID: 7)
  Prédit: '(nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nd' → logprob: -1.2233183042553719e-05
    2. 'nd' → logprob: -11.375012397766113
    3. '((' → logprob: -15.125012397766113
    4. '(' → logprob: -15.250012397766113
    5. '(d' → logprob: -16.000011444091797
    6. '(n' → logprob: -16.875011444091797
    7. ' nd' → logprob: -18.375011444091797
    8. '(sd' → logprob: -18.875011444091797
    9. '(nx' → logprob: -19.000011444091797
    10. '(nb' → logprob: -19.375011444091797

Token 277: 'rotate' (ID: 31296)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.00015359772078227252
    2. '(nd' → logprob: -9.000153541564941
    3. ' nd' → logprob: -11.000153541564941
    4. 'd' → logprob: -11.875153541564941
    5. '(' → logprob: -12.750153541564941
    6. '   ' → logprob: -13.875153541564941
    7. '[' → logprob: -14.125153541564941
    8. ' (' → logprob: -15.500153541564941
    9. '(d' → logprob: -15.625153541564941
    10. '  ' → logprob: -15.625153541564941

Token 278: '(nd' (ID: 131841)
  Prédit: '(nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nd' → logprob: -3.893480243277736e-05
    2. '(' → logprob: -10.250039100646973
    3. 'nd' → logprob: -13.750039100646973
    4. '(rd' → logprob: -14.250039100646973
    5. '(n' → logprob: -14.750039100646973
    6. ' (' → logprob: -15.000039100646973
    7. '(
' → logprob: -15.250039100646973
    8. ')' → logprob: -15.625039100646973
    9. ' nd' → logprob: -15.750039100646973
    10. '(nt' → logprob: -16.000038146972656

Token 279: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6944085955619812
    2. ',d' → logprob: -0.6944085955619812
    3. 'd' → logprob: -6.944408416748047
    4. '(d' → logprob: -9.069408416748047
    5. ' ,' → logprob: -9.444408416748047
    6. '(' → logprob: -9.694408416748047
    7. ',
' → logprob: -11.069408416748047
    8. ' d' → logprob: -12.444408416748047
    9. '1' → logprob: -12.444408416748047
    10. '[' → logprob: -12.694408416748047

Token 280: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1269996017217636
    2. ' d' → logprob: -2.126999616622925
    3. '1' → logprob: -10.126999855041504
    4. ' ' → logprob: -11.251999855041504
    5. '   ' → logprob: -11.501999855041504
    6. '	d' → logprob: -12.876999855041504
    7. ' not' → logprob: -13.376999855041504
    8. '    ' → logprob: -13.626999855041504
    9. '  ' → logprob: -14.376999855041504
    10. '
' → logprob: -14.501999855041504

Token 281: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.20224998891353607
    2. '))
' → logprob: -1.7022500038146973
    3. ')' → logprob: -7.452250003814697
    4. ' ))' → logprob: -9.077249526977539
    5. ' ))
' → logprob: -9.577249526977539
    6. ')
' → logprob: -10.577249526977539
    7. '))

' → logprob: -11.202249526977539
    8. '))
' → logprob: -11.327249526977539
    9. '));' → logprob: -12.077249526977539
    10. ' ' → logprob: -12.452249526977539

Token 282: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33644500374794006
    2. 'd' → logprob: -2.2114450931549072
    3. '<|end|>' → logprob: -2.5864450931549072
    4. '[' → logprob: -2.7114450931549072
    5. 'nd' → logprob: -4.961444854736328
    6. '   ' → logprob: -4.961444854736328
    7. ' d' → logprob: -5.211444854736328
    8. ')' → logprob: -5.586444854736328
    9. '
' → logprob: -5.836444854736328
    10. '[d' → logprob: -6.461444854736328

Token 283: ' dr' (ID: 1498)
  Prédit: 'dr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dr' (adapté à ' dr') → logprob: -0.06776227802038193
    2. 'd' → logprob: -2.8177623748779297
    3. ' dr' → logprob: -5.56776237487793
    4. 'nd' → logprob: -6.81776237487793
    5. '   ' → logprob: -7.44276237487793
    6. ' d' → logprob: -8.94276237487793
    7. '       ' → logprob: -9.94276237487793
    8. 'def' → logprob: -10.31776237487793
    9. '    ' → logprob: -10.81776237487793
    10. '	dr' → logprob: -11.31776237487793

Token 284: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.01820051483809948
    2. '.' → logprob: -4.018200397491455
    3. ' .' → logprob: -10.143200874328613
    4. 'append' → logprob: -12.268200874328613
    5. '.pop' → logprob: -12.643200874328613
    6. '.ap' → logprob: -13.643200874328613
    7. '.push' → logprob: -13.768200874328613
    8. '.app' → logprob: -14.268200874328613
    9. ').' → logprob: -16.518199920654297
    10. '.extend' → logprob: -16.518199920654297

Token 285: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.003105226904153824
    2. 'd' → logprob: -6.503105163574219
    3. '(' → logprob: -6.628105163574219
    4. '(not' → logprob: -8.503105163574219
    5. '((' → logprob: -10.253105163574219
    6. ' d' → logprob: -11.003105163574219
    7. '(len' → logprob: -11.503105163574219
    8. ' (' → logprob: -12.378105163574219
    9. '	d' → logprob: -12.878105163574219
    10. 'not' → logprob: -13.253105163574219

Token 286: ' ^' (ID: 7602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009800242260098457
    2. ')
' → logprob: -4.634800434112549
    3. '   ' → logprob: -10.38479995727539
    4. ' )' → logprob: -11.75979995727539
    5. '       ' → logprob: -12.75979995727539
    6. ')

' → logprob: -13.88479995727539
    7. ' )
' → logprob: -14.88479995727539
    8. ')
' → logprob: -15.00979995727539
    9. '
' → logprob: -15.38479995727539
    10. ')d' → logprob: -15.63479995727539

Token 287: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013273799559101462
    2. ' ' → logprob: -6.6263275146484375
    3. '   ' → logprob: -14.001327514648438
    4. '0' → logprob: -15.376327514648438
    5. 'True' → logprob: -15.501327514648438
    6. ' True' → logprob: -16.626327514648438
    7. '  ' → logprob: -18.376327514648438
    8. '１' → logprob: -19.126327514648438
    9. '
' → logprob: -20.063827514648438
    10. 'd' → logprob: -20.313827514648438

Token 288: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.804671233519912e-05
    2. ' ' → logprob: -9.37508773803711
    3. 'True' → logprob: -12.87508773803711
    4. '   ' → logprob: -14.87508773803711
    5. ' True' → logprob: -15.75008773803711
    6. '0' → logprob: -16.87508773803711
    7. '  ' → logprob: -18.12508773803711
    8. '１' → logprob: -19.50008773803711
    9. '       ' → logprob: -19.50008773803711
    10. '(True' → logprob: -19.75008773803711

Token 289: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04324786365032196
    2. ')
' → logprob: -3.168247938156128
    3. '   ' → logprob: -8.418248176574707
    4. '       ' → logprob: -11.418248176574707
    5. ' )' → logprob: -11.668248176574707
    6. ')

' → logprob: -12.543248176574707
    7. ' )
' → logprob: -13.668248176574707
    8. ')
' → logprob: -14.418248176574707
    9. '<|end|>' → logprob: -14.418248176574707
    10. '
' → logprob: -14.543248176574707

Token 290: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2543306052684784
    2. '   ' → logprob: -1.8793306350708008
    3. '<|end|>' → logprob: -3.254330635070801
    4. 'nd' → logprob: -4.629330635070801
    5. 'def' → logprob: -4.629330635070801
    6. '[' → logprob: -4.754330635070801
    7. '<|end|>' → logprob: -6.254330635070801
    8. ')' → logprob: -7.504330635070801
    9. '```' → logprob: -7.879330635070801
    10. ' nd' → logprob: -8.1293306350708

Token 291: ' nd' (ID: 5914)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40616169571876526
    2. '<|end|>' → logprob: -1.9061616659164429
    3. '[' → logprob: -2.9061617851257324
    4. ' nd' → logprob: -3.5311617851257324
    5. 'nd' (adapté à ' nd') → logprob: -3.6561617851257324
    6. ' x' → logprob: -3.6561617851257324
    7. ' if' → logprob: -4.031161785125732
    8. 'x' → logprob: -5.156161785125732
    9. ',' → logprob: -5.156161785125732
    10. ')' → logprob: -5.531161785125732

Token 292: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1822369247674942
    2. '=' → logprob: -2.432236909866333
    3. ' =' → logprob: -2.682236909866333
    4. ',' → logprob: -5.557237148284912
    5. '[:]' → logprob: -6.307237148284912
    6. '.clear' → logprob: -7.307237148284912
    7. '=None' → logprob: -7.557237148284912
    8. '.append' → logprob: -7.932237148284912
    9. 'def' → logprob: -8.057236671447754
    10. 'return' → logprob: -8.182236671447754

Token 293: ' x' (ID: 1215)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.33831068873405457
    2. 'st' → logprob: -1.338310718536377
    3. ' None' → logprob: -3.838310718536377
    4. ' st' → logprob: -6.463310718536377
    5. 'root' → logprob: -6.838310718536377
    6. '(None' → logprob: -8.963310241699219
    7. 'deque' → logprob: -9.088310241699219
    8. '   ' → logprob: -9.213310241699219
    9. '[' → logprob: -10.213310241699219
    10. 'stack' → logprob: -10.338310241699219

Token 294: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47449496388435364
    2. '=' → logprob: -1.9744949340820312
    3. 'st' → logprob: -2.3494949340820312
    4. '<|end|>' → logprob: -2.4744949340820312
    5. '[' → logprob: -2.9744949340820312
    6. 's' → logprob: -5.849494934082031
    7. '
' → logprob: -6.599494934082031
    8. '<|end|>' → logprob: -7.349494934082031
    9. '=None' → logprob: -7.474494934082031
    10. ' ' → logprob: -7.724494934082031

Token 295: ' None' (ID: 4662)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.1379956603050232
    2. 'None' → logprob: -2.262995719909668
    3. 'root' → logprob: -5.012995719909668
    4. ' None' → logprob: -5.262995719909668
    5. '__' → logprob: -5.512995719909668
    6. 'nd' → logprob: -5.512995719909668
    7. ' st' → logprob: -5.762995719909668
    8. '[' → logprob: -7.887995719909668
    9. 'deque' → logprob: -7.887995719909668
    10. 'rotate' → logprob: -8.887995719909668

Token 296: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 297: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 298: ' while' (ID: 2049)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 299: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.06213909387588501
    2. ' st' → logprob: -2.8121390342712402
    3. 'dr' → logprob: -9.062139511108398
    4. ' dr' → logprob: -10.062139511108398
    5. 'len' → logprob: -11.562139511108398
    6. ' len' → logprob: -13.062139511108398
    7. '(st' → logprob: -14.812139511108398
    8. ' ' → logprob: -14.937139511108398
    9. '   ' → logprob: -16.0621395111084
    10. '	st' → logprob: -16.0621395111084

Token 300: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016284210607409477
    2. ':
' → logprob: -4.641283988952637
    3. '.pop' → logprob: -5.516283988952637
    4. '=' → logprob: -7.016283988952637
    5. ' and' → logprob: -7.141283988952637
    6. 'and' → logprob: -7.891283988952637
    7. 'pop' → logprob: -9.141283988952637
    8. '.append' → logprob: -9.516283988952637
    9. ':=' → logprob: -9.891283988952637
    10. '):
' → logprob: -10.891283988952637

Token 301: '       ' (ID: 309)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.013787459582090378
    2. 'x' → logprob: -4.888787269592285
    3. '   ' → logprob: -6.013787269592285
    4. '       ' → logprob: -6.388787269592285
    5. '```' → logprob: -6.888787269592285
    6. ' nd' → logprob: -7.013787269592285
    7. '    ' → logprob: -10.138787269592285
    8. '	x' → logprob: -10.513787269592285
    9. 'nd' → logprob: -11.138787269592285
    10. '(nd' → logprob: -12.138787269592285

Token 302: ' nd' (ID: 5914)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.023572247475385666
    2. ' x' → logprob: -3.7735722064971924
    3. 'nd' (adapté à ' nd') → logprob: -8.398571968078613
    4. ' nd' → logprob: -9.523571968078613
    5. '   ' → logprob: -11.273571968078613
    6. 'd' → logprob: -12.273571968078613
    7. '       ' → logprob: -13.023571968078613
    8. '	x' → logprob: -13.023571968078613
    9. '(nd' → logprob: -13.273571968078613
    10. 'n' → logprob: -13.398571968078613

Token 303: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.474091112613678
    2. ' =' → logprob: -0.974091112613678
    3. ',' → logprob: -11.224091529846191
    4. ' ' → logprob: -15.599091529846191
    5. '[' → logprob: -16.224090576171875
    6. '.=' → logprob: -16.724090576171875
    7. '=
' → logprob: -16.849090576171875
    8. '=x' → logprob: -16.849090576171875
    9. '＝' → logprob: -17.099090576171875
    10. 'st' → logprob: -17.349090576171875

Token 304: ' x' (ID: 1215)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.07899278402328491
    2. ' st' → logprob: -2.5789928436279297
    3. 'x' → logprob: -9.82899284362793
    4. ' x' → logprob: -11.20399284362793
    5. '   ' → logprob: -11.45399284362793
    6. '(st' → logprob: -12.07899284362793
    7. 'dr' → logprob: -12.70399284362793
    8. '	st' → logprob: -12.82899284362793
    9. 'rotate' → logprob: -12.95399284362793
    10. 's' → logprob: -13.45399284362793

Token 305: ';' (ID: 26)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7520152926445007
    2. '=' → logprob: -1.0020153522491455
    3. 'st' → logprob: -1.8770153522491455
    4. '.pop' → logprob: -5.752015113830566
    5. '[' → logprob: -6.002015113830566
    6. 'dr' → logprob: -6.627015113830566
    7. 'pop' → logprob: -8.002015113830566
    8. ' st' → logprob: -8.127015113830566
    9. 'stack' → logprob: -8.252015113830566
    10. 's' → logprob: -8.752015113830566

Token 306: ' x' (ID: 1215)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.1672871708869934
    2. 'd' → logprob: -1.9172871112823486
    3. ' x' → logprob: -5.417287349700928
    4. 'x' → logprob: -6.542287349700928
    5. ' dr' → logprob: -7.667287349700928
    6. ' nd' → logprob: -7.917287349700928
    7. 'dr' → logprob: -8.41728687286377
    8. 'nd' → logprob: -10.04228687286377
    9. ' st' → logprob: -10.16728687286377
    10. '   ' → logprob: -12.29228687286377

Token 307: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011053952388465405
    2. ' =' → logprob: -4.511054039001465
    3. ',' → logprob: -12.761054039001465
    4. '[' → logprob: -13.261054039001465
    5. '<|end|>' → logprob: -15.386054039001465
    6. '=user' → logprob: -15.511054039001465
    7. 'st' → logprob: -15.511054039001465
    8. '=end' → logprob: -15.886054039001465
    9. '=}' → logprob: -15.886054039001465
    10. ' ' → logprob: -16.13605308532715

Token 308: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.023255378007888794
    2. ' st' → logprob: -3.7732553482055664
    3. '	st' → logprob: -13.023255348205566
    4. '(st' → logprob: -13.148255348205566
    5. 'dr' → logprob: -13.398255348205566
    6. 'rotate' → logprob: -13.523255348205566
    7. ' ' → logprob: -14.648255348205566
    8. '_st' → logprob: -14.648255348205566
    9. '   ' → logprob: -14.773255348205566
    10. ' rotate' → logprob: -15.398255348205566

Token 309: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -2.6776029699249193e-05
    2. 'pop' → logprob: -10.62502670288086
    3. '.append' → logprob: -13.37502670288086
    4. '.' → logprob: -14.00002670288086
    5. '.Pop' → logprob: -17.75002670288086
    6. '	pop' → logprob: -18.00002670288086
    7. ' pop' → logprob: -18.75002670288086
    8. '_pop' → logprob: -18.75002670288086
    9. '<|end|>' → logprob: -19.25002670288086
    10. '.poll' → logprob: -19.37502670288086

Token 310: '();' (ID: 4177)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09177868068218231
    2. '();' → logprob: -2.7167787551879883
    3. '()
' → logprob: -3.8417787551879883
    4. '(),' → logprob: -10.466778755187988
    5. '()

' → logprob: -10.716778755187988
    6. '()\' → logprob: -10.716778755187988
    7. '();
' → logprob: -10.841778755187988
    8. '()
' → logprob: -11.466778755187988
    9. ' ();' → logprob: -11.591778755187988
    10. ' ()' → logprob: -11.966778755187988

Token 311: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5800013542175293
    2. 'd' → logprob: -0.8300013542175293
    3. 'dr' → logprob: -6.080001354217529
    4. ' dr' → logprob: -6.455001354217529
    5. 'x' → logprob: -9.830001831054688
    6. 'nd' → logprob: -10.080001831054688
    7. ' nd' → logprob: -10.705001831054688
    8. ' x' → logprob: -10.830001831054688
    9. '   ' → logprob: -11.330001831054688
    10. '	d' → logprob: -11.330001831054688

Token 312: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407710552215576
    2. ' =' → logprob: -0.9740771055221558
    3. ' ' → logprob: -17.099077224731445
    4. '=}' → logprob: -18.599077224731445
    5. ' =)' → logprob: -18.724077224731445
    6. ' =
' → logprob: -19.224077224731445
    7. '=
' → logprob: -19.349077224731445
    8. '=

' → logprob: -20.349077224731445
    9. '=d' → logprob: -20.474077224731445
    10. '＝' → logprob: -20.724077224731445

Token 313: ' dr' (ID: 1498)
  Prédit: ' dr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dr' → logprob: -0.47409793734550476
    2. 'dr' → logprob: -0.9740979671478271
    3. '	dr' → logprob: -11.224098205566406
    4. '   ' → logprob: -12.349098205566406
    5. 'd' → logprob: -13.349098205566406
    6. '(dr' → logprob: -13.974098205566406
    7. '_dr' → logprob: -15.224098205566406
    8. ' ' → logprob: -15.349098205566406
    9. ' ' → logprob: -16.849098205566406
    10. '  ' → logprob: -16.849098205566406

Token 314: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -2.6656825866666622e-05
    2. 'pop' → logprob: -11.00002670288086
    3. '.' → logprob: -11.87502670288086
    4. '(pop' → logprob: -13.12502670288086
    5. '.append' → logprob: -14.50002670288086
    6. ' .' → logprob: -14.87502670288086
    7. '().' → logprob: -17.75002670288086
    8. '	pop' → logprob: -18.12502670288086
    9. '.Pop' → logprob: -18.62502670288086
    10. '.p' → logprob: -19.25002670288086

Token 315: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02121541276574135
    2. '()
' → logprob: -3.8962154388427734
    3. '(x' → logprob: -8.271215438842773
    4. '(' → logprob: -8.771215438842773
    5. '();' → logprob: -8.896215438842773
    6. '   ' → logprob: -10.771215438842773
    7. ')' → logprob: -10.896215438842773
    8. '(d' → logprob: -11.021215438842773
    9. '       ' → logprob: -11.271215438842773
    10. '()]' → logprob: -11.396215438842773

Token 316: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06551448255777359
    2. '   ' → logprob: -3.56551456451416
    3. 'x' → logprob: -4.44051456451416
    4. ' x' → logprob: -4.44051456451416
    5. '[' → logprob: -4.94051456451416
    6. '[x' → logprob: -6.31551456451416
    7. '=' → logprob: -7.06551456451416
    8. ' =' → logprob: -7.56551456451416
    9. '<|end|>' → logprob: -8.44051456451416
    10. 'd' → logprob: -8.56551456451416

Token 317: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0001334559783572331
    2. ' x' → logprob: -9.500133514404297
    3. '   ' → logprob: -10.250133514404297
    4. 'if' → logprob: -11.500133514404297
    5. '       ' → logprob: -12.000133514404297
    6. '=' → logprob: -13.250133514404297
    7. 'nd' → logprob: -13.375133514404297
    8. 'd' → logprob: -14.000133514404297
    9. '  ' → logprob: -14.250133514404297
    10. '[' → logprob: -14.500133514404297

Token 318: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.0035823723301291466
    2. '=' → logprob: -6.37858247756958
    3. 'd' → logprob: -6.87858247756958
    4. '=d' → logprob: -7.25358247756958
    5. '[' → logprob: -9.128582000732422
    6. ' =' → logprob: -11.128582000732422
    7. ',d' → logprob: -12.128582000732422
    8. '(d' → logprob: -12.628582000732422
    9. ',' → logprob: -13.128582000732422
    10. '[
' → logprob: -13.378582000732422

Token 319: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.19405075907707214
    2. '=' → logprob: -1.8190507888793945
    3. ']=' → logprob: -4.6940507888793945
    4. ' =' → logprob: -5.3190507888793945
    5. ' ]' → logprob: -9.194050788879395
    6. '[' → logprob: -10.569050788879395
    7. ')' → logprob: -10.694050788879395
    8. ')=' → logprob: -12.819050788879395
    9. '][' → logprob: -14.819050788879395
    10. ']
' → logprob: -14.819050788879395

Token 320: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889441400766373
    2. ' =' → logprob: -2.5788943767547607
    3. ',' → logprob: -13.20389461517334
    4. '=None' → logprob: -14.20389461517334
    5. ' ' → logprob: -14.32889461517334
    6. '[' → logprob: -14.95389461517334
    7. '=c' → logprob: -15.07889461517334
    8. ')' → logprob: -15.95389461517334
    9. '==' → logprob: -15.95389461517334
    10. '=x' → logprob: -16.703893661499023

Token 321: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.0015046248445287347
    2. ' nd' → logprob: -6.501504421234131
    3. '(nd' → logprob: -13.626504898071289
    4. '_nd' → logprob: -15.751504898071289
    5. 'nt' → logprob: -15.876504898071289
    6. '  ' → logprob: -16.12650489807129
    7. '   ' → logprob: -16.12650489807129
    8. ' ' → logprob: -16.25150489807129
    9. ' ' → logprob: -16.25150489807129
    10. 'n' → logprob: -16.25150489807129

Token 322: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 323: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03770437836647034
    2. '<|end|>' → logprob: -3.4127044677734375
    3. '       ' → logprob: -5.9127044677734375
    4. 'return' → logprob: -7.6627044677734375
    5. ' return' → logprob: -8.162704467773438
    6. '    ' → logprob: -9.037704467773438
    7. ')' → logprob: -9.537704467773438
    8. '  ' → logprob: -9.662704467773438
    9. '<|end|>' → logprob: -9.662704467773438
    10. 'def' → logprob: -9.787704467773438

Token 324: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 325: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.4711610078811646
    2. 'nd' → logprob: -1.7211610078811646
    3. ' nd' → logprob: -1.7211610078811646
    4. 'None' → logprob: -1.8461610078811646
    5. 'x' → logprob: -1.9711610078811646
    6. ' None' → logprob: -2.596160888671875
    7. 'root' → logprob: -3.846160888671875
    8. ' root' → logprob: -4.471160888671875
    9. '<|end|>' → logprob: -5.971160888671875
    10. '(nd' → logprob: -6.096160888671875

Token 326: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 327: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.265633419388905e-05
    2. '<|end|>' → logprob: -10.500062942504883
    3. ' def' → logprob: -11.500062942504883
    4. 'root' → logprob: -11.625062942504883
    5. '```' → logprob: -12.000062942504883
    6. '_' → logprob: -13.125062942504883
    7. '_def' → logprob: -13.750062942504883
    8. '#' → logprob: -13.750062942504883
    9. 'ndef' → logprob: -13.750062942504883
    10. ')' → logprob: -14.625062942504883

Token 328: ' delete' (ID: 6168)
  Prédit: 'delete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delete' → logprob: -0.044916749000549316
    2. ' delete' → logprob: -3.7949166297912598
    3. 'erase' → logprob: -4.16991662979126
    4. 'remove' → logprob: -5.41991662979126
    5. ' erase' → logprob: -6.91991662979126
    6. '_delete' → logprob: -8.044917106628418
    7. ' remove' → logprob: -9.044917106628418
    8. 'find' → logprob: -10.169917106628418
    9. 'del' → logprob: -10.294917106628418
    10. 'search' → logprob: -10.919917106628418

Token 329: '(val' (ID: 17391)
  Prédit: '(nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nd' → logprob: -0.26605236530303955
    2. '(' → logprob: -2.01605224609375
    3. '(val' → logprob: -2.39105224609375
    4. '(root' → logprob: -4.89105224609375
    5. '(node' → logprob: -6.89105224609375
    6. '(x' → logprob: -8.64105224609375
    7. ' (' → logprob: -10.14105224609375
    8. '(_' → logprob: -11.51605224609375
    9. '(def' → logprob: -11.51605224609375
    10. '(rd' → logprob: -11.51605224609375

Token 330: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6944626569747925
    2. '):' → logprob: -0.6944626569747925
    3. ',' → logprob: -6.819462776184082
    4. '):
' → logprob: -9.444462776184082
    5. ')' → logprob: -9.569462776184082
    6. '   ' → logprob: -9.944462776184082
    7. '):

' → logprob: -11.819462776184082
    8. ' ):' → logprob: -12.069462776184082
    9. ' ):
' → logprob: -12.694462776184082
    10. '(nd' → logprob: -12.819462776184082

Token 331: '   ' (ID: 271)
  Prédit: 'global'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'global' → logprob: -0.027397803962230682
    2. '   ' → logprob: -3.777397871017456
    3. ' global' → logprob: -5.527397632598877
    4. '	global' → logprob: -9.277398109436035
    5. 'def' → logprob: -9.777398109436035
    6. '(global' → logprob: -11.527398109436035
    7. '
' → logprob: -12.527398109436035
    8. 'x' → logprob: -13.652398109436035
    9. '_global' → logprob: -13.902398109436035
    10. '.global' → logprob: -14.027398109436035

Token 332: ' global' (ID: 5466)
  Prédit: 'global'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'global' (adapté à ' global') → logprob: -0.1698891520500183
    2. ' global' → logprob: -1.919889211654663
    3. 'x' → logprob: -4.919888973236084
    4. 'def' → logprob: -6.794888973236084
    5. ' x' → logprob: -6.919888973236084
    6. '   ' → logprob: -8.669889450073242
    7. '	global' → logprob: -10.544889450073242
    8. 'nd' → logprob: -12.919889450073242
    9. ' def' → logprob: -13.169889450073242
    10. 'if' → logprob: -13.294889450073242

Token 333: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.47407710552215576
    2. ' root' → logprob: -0.9740771055221558
    3. ' ' → logprob: -17.224077224731445
    4. '	root' → logprob: -18.474077224731445
    5. '   ' → logprob: -18.724077224731445
    6. '(root' → logprob: -19.474077224731445
    7. '=root' → logprob: -20.724077224731445
    8. '[root' → logprob: -20.849077224731445
    9. '_root' → logprob: -21.224077224731445
    10. '
' → logprob: -21.849077224731445

Token 334: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07083550840616226
    2. ' x' → logprob: -3.070835590362549
    3. ' nd' → logprob: -5.195835590362549
    4. ' =' → logprob: -5.445835590362549
    5. '
' → logprob: -5.695835590362549
    6. '(nd' → logprob: -6.070835590362549
    7. 'x' → logprob: -6.570835590362549
    8. 'nd' → logprob: -6.570835590362549
    9. '=' → logprob: -6.945835590362549
    10. ' if' → logprob: -6.945835590362549

Token 335: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.702140748500824
    2. ' x' → logprob: -0.702140748500824
    3. ' if' → logprob: -5.577140808105469
    4. 'if' → logprob: -6.452140808105469
    5. '   ' → logprob: -6.452140808105469
    6. ' nd' → logprob: -6.702140808105469
    7. 'nd' → logprob: -7.827140808105469
    8. ' node' → logprob: -8.452140808105469
    9. ' def' → logprob: -9.827140808105469
    10. 'node' → logprob: -9.952140808105469

Token 336: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.005597645416855812
    2. 'if' → logprob: -5.5055975914001465
    3. 'nd' → logprob: -6.7555975914001465
    4. ' x' → logprob: -8.505598068237305
    5. 'def' → logprob: -9.880598068237305
    6. 'st' → logprob: -9.880598068237305
    7. 'node' → logprob: -10.505598068237305
    8. 'cur' → logprob: -11.505598068237305
    9. ' if' → logprob: -12.380598068237305
    10. 'p' → logprob: -12.755598068237305

Token 337: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5788909792900085
    2. '=' → logprob: -0.8288909792900085
    3. '=root' → logprob: -5.828890800476074
    4. ',' → logprob: -12.328890800476074
    5. '[root' → logprob: -14.828890800476074
    6. '=head' → logprob: -15.328890800476074
    7. ' ' → logprob: -15.703890800476074
    8. 'root' → logprob: -15.703890800476074
    9. '```' → logprob: -16.07889175415039
    10. '=
' → logprob: -16.32889175415039

Token 338: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.011048289015889168
    2. ' root' → logprob: -4.511048316955566
    3. '	root' → logprob: -16.01104736328125
    4. '[root' → logprob: -16.13604736328125
    5. '(root' → logprob: -16.26104736328125
    6. '=root' → logprob: -16.51104736328125
    7. '_root' → logprob: -17.13604736328125
    8. '   ' → logprob: -17.63604736328125
    9. 'roots' → logprob: -17.88604736328125
    10. ' ' → logprob: -17.88604736328125

Token 339: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006531699560582638
    2. '<|end|>' → logprob: -6.256531715393066
    3. 'def' → logprob: -6.506531715393066
    4. 'if' → logprob: -7.131531715393066
    5. 'while' → logprob: -7.381531715393066
    6. ',' → logprob: -7.756531715393066
    7. ' =' → logprob: -7.756531715393066
    8. '   ' → logprob: -8.756531715393066
    9. '=' → logprob: -9.131531715393066
    10. '[' → logprob: -9.256531715393066

Token 340: '   ' (ID: 271)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.5297027230262756
    2. 'while' → logprob: -1.0297026634216309
    3. '   ' → logprob: -3.029702663421631
    4. ' while' → logprob: -6.029702663421631
    5. 'stack' → logprob: -6.654702663421631
    6. ' st' → logprob: -7.154702663421631
    7. 'prev' → logprob: -7.779702663421631
    8. '
' → logprob: -8.154703140258789
    9. 'parent' → logprob: -8.279703140258789
    10. '	st' → logprob: -9.154703140258789

Token 341: ' y' (ID: 342)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.00040123690268956125
    2. 'while' → logprob: -8.000401496887207
    3. 'stack' → logprob: -9.750401496887207
    4. ' st' → logprob: -12.000401496887207
    5. 'parent' → logprob: -14.500401496887207
    6. '   ' → logprob: -15.875401496887207
    7. 'if' → logprob: -15.875401496887207
    8. ' while' → logprob: -16.00040054321289
    9. 'x' → logprob: -16.25040054321289
    10. '```' → logprob: -16.37540054321289

Token 342: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45561927556991577
    2. '=' → logprob: -1.0806193351745605
    3. ',' → logprob: -3.8306193351745605
    4. '=None' → logprob: -5.5806193351745605
    5. '=[]' → logprob: -7.8306193351745605
    6. 'while' → logprob: -8.830618858337402
    7. 'prev' → logprob: -9.455618858337402
    8. '[' → logprob: -9.580618858337402
    9. '   ' → logprob: -10.330618858337402
    10. 'def' → logprob: -10.330618858337402

Token 343: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.04584479704499245
    2. 'root' → logprob: -3.920844793319702
    3. ' None' → logprob: -4.295845031738281
    4. 'x' → logprob: -4.545845031738281
    5. ' x' → logprob: -7.920845031738281
    6. ' root' → logprob: -8.170845031738281
    7. '[]' → logprob: -9.670845031738281
    8. '(None' → logprob: -11.295845031738281
    9. '
' → logprob: -12.295845031738281
    10. '[' → logprob: -12.420845031738281

Token 344: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09089922159910202
    2. 'while' → logprob: -2.8408992290496826
    3. '
' → logprob: -3.7158992290496826
    4. ' while' → logprob: -5.5908989906311035
    5. '    
' → logprob: -8.465899467468262
    6. '	while' → logprob: -9.090899467468262
    7. ',' → logprob: -10.715899467468262
    8. ' 
' → logprob: -11.215899467468262
    9. 'While' → logprob: -11.465899467468262
    10. '  
' → logprob: -11.465899467468262

Token 345: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05148418992757797
    2. 'while' → logprob: -3.0514841079711914
    3. '
' → logprob: -6.176484107971191
    4. ' while' → logprob: -7.551484107971191
    5. 'st' → logprob: -8.301484107971191
    6. 'stack' → logprob: -11.051484107971191
    7. '    
' → logprob: -11.676484107971191
    8. '	while' → logprob: -12.426484107971191
    9. '       ' → logprob: -12.926484107971191
    10. 'prev' → logprob: -13.176484107971191

Token 346: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0816967561841011
    2. 'st' → logprob: -2.5816967487335205
    3. ' while' → logprob: -6.5816969871521
    4. 'stack' → logprob: -7.2066969871521
    5. 'parent' → logprob: -7.9566969871521
    6. '   ' → logprob: -8.206696510314941
    7. ' st' → logprob: -11.581696510314941
    8. 'prev' → logprob: -11.706696510314941
    9. 'path' → logprob: -11.956696510314941
    10. 'p' → logprob: -12.206696510314941

Token 347: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0004311460361350328
    2. ' x' → logprob: -7.750431060791016
    3. '(x' → logprob: -15.500431060791016
    4. 'True' → logprob: -15.875431060791016
    5. ' ' → logprob: -16.625431060791016
    6. '   ' → logprob: -16.625431060791016
    7. ' True' → logprob: -17.750431060791016
    8. '	x' → logprob: -18.375431060791016
    9. '  ' → logprob: -19.125431060791016
    10. '
' → logprob: -19.875431060791016

Token 348: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.38689517974853516
    2. 'and' → logprob: -1.1368951797485352
    3. '[' → logprob: -11.261895179748535
    4. '   ' → logprob: -12.636895179748535
    5. ' ' → logprob: -12.761895179748535
    6. '	and' → logprob: -13.136895179748535
    7. ' is' → logprob: -13.636895179748535
    8. ':
' → logprob: -14.636895179748535
    9. 'is' → logprob: -14.761895179748535
    10. ' и' → logprob: -15.136895179748535

Token 349: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008381948806345463
    2. ' and' → logprob: -5.7583818435668945
    3. '<|end|>' → logprob: -6.1333818435668945
    4. ' if' → logprob: -6.2583818435668945
    5. ',' → logprob: -8.133381843566895
    6. 'and' → logprob: -8.633381843566895
    7. 'if' → logprob: -8.758381843566895
    8. '   ' → logprob: -8.883381843566895
    9. 'd' → logprob: -9.383381843566895
    10. '	' → logprob: -10.258381843566895

Token 350: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.025923779234290123
    2. 'st' → logprob: -4.400923728942871
    3. 'd' → logprob: -4.650923728942871
    4. '   ' → logprob: -6.650923728942871
    5. '       ' → logprob: -6.900923728942871
    6. ' if' → logprob: -6.900923728942871
    7. 'y' → logprob: -7.900923728942871
    8. 'c' → logprob: -10.150923728942871
    9. 'x' → logprob: -11.275923728942871
    10. '	if' → logprob: -11.400923728942871

Token 351: ' val' (ID: 1459)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.014222975820302963
    2. ' x' → logprob: -4.264223098754883
    3. 'val' → logprob: -9.889223098754883
    4. ' val' → logprob: -11.889223098754883
    5. '(x' → logprob: -13.764223098754883
    6. '	x' → logprob: -14.889223098754883
    7. '   ' → logprob: -15.514223098754883
    8. ' ' → logprob: -15.889223098754883
    9. '(' → logprob: -16.139223098754883
    10. '  ' → logprob: -17.764223098754883

Token 352: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.33821266889572144
    2. '==' → logprob: -1.3382127285003662
    3. '[' → logprob: -3.713212728500366
    4. ' ' → logprob: -8.588212966918945
    5. '=' → logprob: -10.838212966918945
    6. ')' → logprob: -11.963212966918945
    7. ')==' → logprob: -12.713212966918945
    8. '   ' → logprob: -12.963212966918945
    9. '==(' → logprob: -12.963212966918945
    10. '!=' → logprob: -13.088212966918945

Token 353: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0019286326132714748
    2. ' x' → logprob: -6.251928806304932
    3. ' ' → logprob: -18.501928329467773
    4. '   ' → logprob: -18.626928329467773
    5. '(x' → logprob: -19.376928329467773
    6. '	x' → logprob: -20.626928329467773
    7. '
' → logprob: -21.501928329467773
    8. '[' → logprob: -21.501928329467773
    9. '  ' → logprob: -21.626928329467773
    10. ')x' → logprob: -22.001928329467773

Token 354: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.438573680294212e-06
    2. '   ' → logprob: -12.500005722045898
    3. '       ' → logprob: -15.250005722045898
    4. ' ' → logprob: -15.750005722045898
    5. '	' → logprob: -16.0000057220459
    6. ' [' → logprob: -16.0000057220459
    7. '    ' → logprob: -16.1250057220459
    8. ':' → logprob: -16.1250057220459
    9. ',' → logprob: -16.3750057220459
    10. '     ' → logprob: -16.8125057220459

Token 355: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00026050140149891376
    2. '[' → logprob: -8.375260353088379
    3. ' ' → logprob: -10.625260353088379
    4. '   ' → logprob: -12.250260353088379
    5. '  ' → logprob: -15.250260353088379
    6. '```' → logprob: -15.250260353088379
    7. '(' → logprob: -16.250261306762695
    8. '۲' → logprob: -16.500261306762695
    9. '    ' → logprob: -16.625261306762695
    10. '
' → logprob: -17.000261306762695

Token 356: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.49053627252578735
    2. ':
' → logprob: -0.9905362725257874
    3. '):
' → logprob: -4.490536212921143
    4. '):' → logprob: -5.865536212921143
    5. ':return' → logprob: -6.615536212921143
    6. ']:
' → logprob: -7.990536212921143
    7. ']:' → logprob: -8.4905366897583
    8. '       ' → logprob: -8.9905366897583
    9. '():
' → logprob: -9.2405366897583
    10. ' :' → logprob: -10.2405366897583

Token 357: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006789381615817547
    2. ' break' → logprob: -5.006789207458496
    3. 'break' → logprob: -10.131789207458496
    4. '       ' → logprob: -11.506789207458496
    5. ',' → logprob: -11.881789207458496
    6. ' return' → logprob: -12.131789207458496
    7. '          ' → logprob: -13.131789207458496
    8. '<|end|>' → logprob: -13.256789207458496
    9. '
' → logprob: -13.631789207458496
    10. '		' → logprob: -14.381789207458496

Token 358: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -1.0985649824142456
    2. ' break' → logprob: -1.2235649824142456
    3. '       ' → logprob: -1.5985649824142456
    4. 'if' → logprob: -2.598565101623535
    5. ' if' → logprob: -2.973565101623535
    6. '           ' → logprob: -3.723565101623535
    7. 'x' → logprob: -4.723565101623535
    8. 'root' → logprob: -5.473565101623535
    9. ' x' → logprob: -5.598565101623535
    10. ' y' → logprob: -6.848565101623535

Token 359: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08624626696109772
    2. '
' → logprob: -2.5862462520599365
    3. '        
' → logprob: -5.461246490478516
    4. '<|end|>' → logprob: -6.086246490478516
    5. '   ' → logprob: -8.711246490478516
    6. '  
' → logprob: -8.836246490478516
    7. '    
' → logprob: -9.211246490478516
    8. ' 
' → logprob: -9.961246490478516
    9. ' x' → logprob: -9.961246490478516
    10. '<|end|>' → logprob: -10.086246490478516

Token 360: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02134587988257408
    2. 'd' → logprob: -4.521346092224121
    3. ' d' → logprob: -5.271346092224121
    4. '
' → logprob: -6.146346092224121
    5. '   ' → logprob: -6.146346092224121
    6. '```' → logprob: -8.021346092224121
    7. 'if' → logprob: -8.271346092224121
    8. ' if' → logprob: -9.271346092224121
    9. 'x' → logprob: -10.146346092224121
    10. '        
' → logprob: -10.396346092224121

Token 361: ' y' (ID: 342)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.03431769832968712
    2. ' d' → logprob: -3.4093177318573
    3. '   ' → logprob: -7.659317493438721
    4. '       ' → logprob: -8.534317970275879
    5. '```' → logprob: -13.659317970275879
    6. ' ' → logprob: -14.159317970275879
    7. '  ' → logprob: -14.909317970275879
    8. '    ' → logprob: -15.284317970275879
    9. '
' → logprob: -15.534317970275879
    10. 'if' → logprob: -15.784317970275879

Token 362: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5131311416625977
    2. ' =' → logprob: -1.0131311416625977
    3. ',' → logprob: -3.6381311416625977
    4. 'd' → logprob: -5.013131141662598
    5. 'x' → logprob: -6.763131141662598
    6. '<|end|>' → logprob: -6.888131141662598
    7. '[' → logprob: -7.013131141662598
    8. ' ' → logprob: -8.013131141662598
    9. '=d' → logprob: -8.388131141662598
    10. ',d' → logprob: -8.388131141662598

Token 363: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002198676229454577
    2. ' x' → logprob: -8.50022029876709
    3. '(x' → logprob: -11.62522029876709
    4. '(' → logprob: -12.62522029876709
    5. ' (' → logprob: -12.75022029876709
    6. '   ' → logprob: -14.12522029876709
    7. ' ' → logprob: -15.37522029876709
    8. '[' → logprob: -15.87522029876709
    9. '  ' → logprob: -17.125219345092773
    10. '((' → logprob: -17.625219345092773

Token 364: ';' (ID: 26)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7987762093544006
    2. 'd' → logprob: -1.0487761497497559
    3. '       ' → logprob: -1.6737761497497559
    4. '   ' → logprob: -5.548776149749756
    5. '[' → logprob: -5.673776149749756
    6. '[d' → logprob: -6.298776149749756
    7. 'x' → logprob: -7.173776149749756
    8. ' d' → logprob: -7.173776149749756
    9. 'if' → logprob: -7.923776149749756
    10. '        
' → logprob: -8.173776626586914

Token 365: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.014168561436235905
    2. ' d' → logprob: -4.264168739318848
    3. '   ' → logprob: -13.514168739318848
    4. 'x' → logprob: -13.514168739318848
    5. '       ' → logprob: -14.139168739318848
    6. '
' → logprob: -14.639168739318848
    7. ' ' → logprob: -15.014168739318848
    8. '    ' → logprob: -15.764168739318848
    9. '```' → logprob: -15.889168739318848
    10. ' x' → logprob: -16.26416778564453

Token 366: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741753935813904
    2. ' =' → logprob: -0.9741753935813904
    3. '=(' → logprob: -9.474175453186035
    4. '<|end|>' → logprob: -11.849175453186035
    5. ' =(' → logprob: -12.349175453186035
    6. '(' → logprob: -12.349175453186035
    7. ' ' → logprob: -13.599175453186035
    8. '0' → logprob: -14.224175453186035
    9. 'x' → logprob: -14.724175453186035
    10. ',' → logprob: -14.849175453186035

Token 367: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6471154093742371
    2. '(x' → logprob: -0.8971154093742371
    3. ' x' → logprob: -3.272115468978882
    4. 'x' → logprob: -3.772115468978882
    5. ' val' → logprob: -5.522115230560303
    6. '(val' → logprob: -6.147115230560303
    7. '(' → logprob: -7.272115230560303
    8. 'val' → logprob: -7.522115230560303
    9. '1' → logprob: -8.772115707397461
    10. ' int' → logprob: -9.397115707397461

Token 368: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0012539229355752468
    2. 'val' → logprob: -6.751254081726074
    3. ' x' → logprob: -9.751254081726074
    4. 'y' → logprob: -10.751254081726074
    5. '(x' → logprob: -12.751254081726074
    6. ' val' → logprob: -14.001254081726074
    7. '(val' → logprob: -15.751254081726074
    8. '   ' → logprob: -16.626253128051758
    9. '(' → logprob: -16.876253128051758
    10. 'v' → logprob: -17.251253128051758

Token 369: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002064257161691785
    2. '2' → logprob: -6.627064228057861
    3. 'd' → logprob: -7.502064228057861
    4. '3' → logprob: -9.25206470489502
    5. '
' → logprob: -10.25206470489502
    6. '(' → logprob: -11.37706470489502
    7. ' ' → logprob: -11.87706470489502
    8. '=' → logprob: -12.50206470489502
    9. '```' → logprob: -12.50206470489502
    10. ' d' → logprob: -12.87706470489502

Token 370: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000104616025055293
    2. ' ' → logprob: -9.500104904174805
    3. '[' → logprob: -10.875104904174805
    4. '   ' → logprob: -12.125104904174805
    5. '  ' → logprob: -13.187604904174805
    6. '
' → logprob: -14.750104904174805
    7. '3' → logprob: -15.062604904174805
    8. '```' → logprob: -15.125104904174805
    9. '(' → logprob: -15.187604904174805
    10. '>' → logprob: -15.625104904174805

Token 371: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3485282361507416
    2. ' <' → logprob: -1.223528265953064
    3. '>' → logprob: -10.348527908325195
    4. ' >' → logprob: -10.348527908325195
    5. ' ' → logprob: -11.598527908325195
    6. '[' → logprob: -11.973527908325195
    7. '<int' → logprob: -14.473527908325195
    8. '<data' → logprob: -14.723527908325195
    9. '<x' → logprob: -14.723527908325195
    10. '<len' → logprob: -14.973527908325195

Token 372: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.20144549012184143
    2. ' <' → logprob: -1.701445460319519
    3. '[' → logprob: -11.826445579528809
    4. '>' → logprob: -12.201445579528809
    5. ' >' → logprob: -12.451445579528809
    6. '<int' → logprob: -12.701445579528809
    7. ' ' → logprob: -12.826445579528809
    8. '<bool' → logprob: -13.451445579528809
    9. '<len' → logprob: -13.576445579528809
    10. '<x' → logprob: -13.576445579528809

Token 373: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.04858771339058876
    2. ' val' → logprob: -3.0485877990722656
    3. '	val' → logprob: -15.923587799072266
    4. 'x' → logprob: -16.548587799072266
    5. '[val' → logprob: -17.048587799072266
    6. '(val' → logprob: -17.673587799072266
    7. ' ' → logprob: -18.298587799072266
    8. ',val' → logprob: -18.548587799072266
    9. '.val' → logprob: -18.923587799072266
    10. '   ' → logprob: -19.298587799072266

Token 374: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005744267720729113
    2. ')
' → logprob: -5.255744457244873
    3. ' )' → logprob: -7.630744457244873
    4. ' )
' → logprob: -11.380743980407715
    5. ');' → logprob: -11.380743980407715
    6. ')
' → logprob: -14.380743980407715
    7. '   ' → logprob: -14.755743980407715
    8. ')

' → logprob: -14.755743980407715
    9. ')d' → logprob: -15.005743980407715
    10. ' ' → logprob: -15.630743980407715

Token 375: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6648494005203247
    2. ' x' → logprob: -1.0398494005203247
    3. '<|end|>' → logprob: -2.539849281311035
    4. 'x' → logprob: -3.414849281311035
    5. '   ' → logprob: -4.539849281311035
    6. '
' → logprob: -5.664849281311035
    7. '<|end|>' → logprob: -5.664849281311035
    8. '```' → logprob: -6.789849281311035
    9. '        
' → logprob: -7.289849281311035
    10. ' ' → logprob: -8.789849281311035

Token 376: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0008520359406247735
    2. ' x' → logprob: -7.125852108001709
    3. '   ' → logprob: -10.00085163116455
    4. '       ' → logprob: -13.50085163116455
    5. 'y' → logprob: -14.37585163116455
    6. '	x' → logprob: -16.500852584838867
    7. '```' → logprob: -16.875852584838867
    8. ' ' → logprob: -17.625852584838867
    9. '
' → logprob: -17.875852584838867
    10. '  ' → logprob: -18.000852584838867

Token 377: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28115350008010864
    2. ' =' → logprob: -1.4061534404754639
    3. '=x' → logprob: -14.031153678894043
    4. '[' → logprob: -14.156153678894043
    5. '=d' → logprob: -14.531153678894043
    6. 'd' → logprob: -14.781153678894043
    7. '=
' → logprob: -15.406153678894043
    8. ',' → logprob: -15.406153678894043
    9. ' ' → logprob: -15.656153678894043
    10. 'x' → logprob: -16.656152725219727

Token 378: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06196846812963486
    2. ' x' → logprob: -2.8119685649871826
    3. '(x' → logprob: -14.811968803405762
    4. '	x' → logprob: -15.811968803405762
    5. ' ' → logprob: -16.186967849731445
    6. '<|end|>' → logprob: -16.561967849731445
    7. ')x' → logprob: -17.686967849731445
    8. '"x' → logprob: -17.936967849731445
    9. '>x' → logprob: -17.936967849731445
    10. '{x' → logprob: -18.061967849731445

Token 379: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -5.512236498361744e-07
    2. 'd' → logprob: -14.875000953674316
    3. '[' → logprob: -15.750000953674316
    4. '	d' → logprob: -19.5
    5. ' d' → logprob: -19.625
    6. '[
' → logprob: -19.875
    7. ' ' → logprob: -20.25
    8. ' [' → logprob: -20.5
    9. '(d' → logprob: -21.5
    10. '   ' → logprob: -21.75

Token 380: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002165299083571881
    2. ']
' → logprob: -9.125216484069824
    3. ' ]' → logprob: -9.375216484069824
    4. ')' → logprob: -10.875216484069824
    5. ']

' → logprob: -13.500216484069824
    6. '   ' → logprob: -13.500216484069824
    7. ')]' → logprob: -15.125216484069824
    8. '<|end|>' → logprob: -15.625216484069824
    9. '']' → logprob: -16.37521743774414
    10. ' ' → logprob: -16.50021743774414

Token 381: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05193496495485306
    2. 'else' → logprob: -3.5519349575042725
    3. ' else' → logprob: -4.051935195922852
    4. '<|end|>' → logprob: -5.801935195922852
    5. '```' → logprob: -7.801935195922852
    6. '    
' → logprob: -7.801935195922852
    7. ' if' → logprob: -8.051935195922852
    8. 'if' → logprob: -8.801935195922852
    9. '  
' → logprob: -9.801935195922852
    10. '   
' → logprob: -10.176935195922852

Token 382: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.6711451411247253
    2. '   ' → logprob: -1.4211452007293701
    3. ' else' → logprob: -1.9211452007293701
    4. 'if' → logprob: -2.79614520072937
    5. '```' → logprob: -3.54614520072937
    6. ' if' → logprob: -4.546144962310791
    7. '    
' → logprob: -8.67114543914795
    8. 'If' → logprob: -9.54614543914795
    9. '	else' → logprob: -9.67114543914795
    10. '``' → logprob: -9.92114543914795

Token 383: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7533605694770813
    2. '       ' → logprob: -0.8783605694770813
    3. ':
' → logprob: -2.7533605098724365
    4. '   ' → logprob: -4.003360748291016
    5. ':return' → logprob: -4.003360748291016
    6. ' return' → logprob: -5.003360748291016
    7. '    ' → logprob: -5.628360748291016
    8. '{' → logprob: -7.253360748291016
    9. '           ' → logprob: -7.753360748291016
    10. 'return' → logprob: -8.128360748291016

Token 384: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6375900506973267
    2. 'return' → logprob: -0.8875900506973267
    3. '   ' → logprob: -2.887589931488037
    4. ' return' → logprob: -5.512589931488037
    5. '	return' → logprob: -10.762590408325195
    6. '{return' → logprob: -11.637590408325195
    7. '```' → logprob: -12.137590408325195
    8. ' ' → logprob: -13.012590408325195
    9. '           ' → logprob: -13.637590408325195
    10. ':return' → logprob: -13.637590408325195

Token 385: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -3.8219583075260743e-05
    2. '   ' → logprob: -10.750038146972656
    3. ' return' → logprob: -11.000038146972656
    4. '	return' → logprob: -18.750038146972656
    5. '       ' → logprob: -19.000038146972656
    6. ':return' → logprob: -19.125038146972656
    7. '{return' → logprob: -19.125038146972656
    8. '
' → logprob: -19.250038146972656
    9. '```' → logprob: -19.875038146972656
    10. '    
' → logprob: -21.250038146972656

Token 386: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7293413281440735
    2. '   ' → logprob: -1.3543412685394287
    3. ' if' → logprob: -1.3543412685394287
    4. ' y' → logprob: -7.354341506958008
    5. 'y' → logprob: -7.729341506958008
    6. 'd' → logprob: -8.729341506958008
    7. '```' → logprob: -8.979341506958008
    8. ' d' → logprob: -10.104341506958008
    9. '    
' → logprob: -10.229341506958008
    10. 'x' → logprob: -10.354341506958008

Token 387: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02380252629518509
    2. '   ' → logprob: -3.7738025188446045
    3. ' if' → logprob: -7.773802757263184
    4. '```' → logprob: -9.898802757263184
    5. 'x' → logprob: -10.273802757263184
    6. 'nd' → logprob: -10.648802757263184
    7. '
' → logprob: -11.898802757263184
    8. '    
' → logprob: -12.273802757263184
    9. 'd' → logprob: -12.398802757263184
    10. 'y' → logprob: -12.523802757263184

Token 388: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0018904341850429773
    2. '   ' → logprob: -7.501890659332275
    3. 'nd' → logprob: -7.876890659332275
    4. 'z' → logprob: -8.001890182495117
    5. 'c' → logprob: -8.126890182495117
    6. 'x' → logprob: -8.751890182495117
    7. 'def' → logprob: -9.251890182495117
    8. ' if' → logprob: -10.126890182495117
    9. '
' → logprob: -11.876890182495117
    10. 'new' → logprob: -12.251890182495117

Token 389: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16476401686668396
    2. 'not' → logprob: -2.414763927459717
    3. ' not' → logprob: -3.289763927459717
    4. ' x' → logprob: -3.914763927459717
    5. 'root' → logprob: -5.789763927459717
    6. '__' → logprob: -6.914763927459717
    7. '(x' → logprob: -7.414763927459717
    8. '(not' → logprob: -8.289764404296875
    9. ' root' → logprob: -8.664764404296875
    10. '   ' → logprob: -9.414764404296875

Token 390: ':
' (ID: 734)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.11351032555103302
    2. 'is' → logprob: -2.2385103702545166
    3. '[' → logprob: -7.9885101318359375
    4. 'and' → logprob: -8.613510131835938
    5. '==' → logprob: -9.363510131835938
    6. ' and' → logprob: -10.363510131835938
    7. '   ' → logprob: -10.613510131835938
    8. ' ' → logprob: -11.988510131835938
    9. '	is' → logprob: -12.113510131835938
    10. ' ==' → logprob: -12.613510131835938

Token 391: '       ' (ID: 309)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.02927282825112343
    2. '   ' → logprob: -3.6542727947235107
    3. 'if' → logprob: -6.77927303314209
    4. ' d' → logprob: -7.02927303314209
    5. '       ' → logprob: -7.15427303314209
    6. ' if' → logprob: -9.40427303314209
    7. '```' → logprob: -10.02927303314209
    8. 'for' → logprob: -11.77927303314209
    9. '	d' → logprob: -12.02927303314209
    10. 'y' → logprob: -12.27927303314209

Token 392: ' y' (ID: 342)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6995338797569275
    2. 'y' (adapté à ' y') → logprob: -0.6995338797569275
    3. 'if' → logprob: -5.699533939361572
    4. '   ' → logprob: -6.574533939361572
    5. ' y' → logprob: -6.824533939361572
    6. ' d' → logprob: -7.949533939361572
    7. '       ' → logprob: -9.824533462524414
    8. ' if' → logprob: -10.949533462524414
    9. 'dy' → logprob: -10.949533462524414
    10. 'c' → logprob: -11.199533462524414

Token 393: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.4414794147014618
    2. 'd' → logprob: -1.6914794445037842
    3. '[y' → logprob: -2.191479444503784
    4. '[' → logprob: -3.066479444503784
    5. 'y' → logprob: -5.066479206085205
    6. ' =' → logprob: -6.941479206085205
    7. '=d' → logprob: -7.191479206085205
    8. '[x' → logprob: -7.316479206085205
    9. '=' → logprob: -7.566479206085205
    10. '```' → logprob: -7.816479206085205

Token 394: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.112575002014637
    2. '=' → logprob: -2.862575054168701
    3. ' =' → logprob: -3.612575054168701
    4. ']=' → logprob: -4.112575054168701
    5. ' ]' → logprob: -5.612575054168701
    6. ']==' → logprob: -6.612575054168701
    7. '[' → logprob: -7.737575054168701
    8. ' ==' → logprob: -8.487574577331543
    9. '==' → logprob: -8.737574577331543
    10. '][' → logprob: -10.362574577331543

Token 395: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07010826468467712
    2. ' =' → logprob: -2.69510817527771
    3. '=None' → logprob: -9.570108413696289
    4. '==' → logprob: -9.945108413696289
    5. '[' → logprob: -11.070108413696289
    6. ']' → logprob: -11.570108413696289
    7. ']=' → logprob: -11.945108413696289
    8. '=False' → logprob: -12.445108413696289
    9. ',' → logprob: -12.570108413696289
    10. '=[' → logprob: -13.070108413696289

Token 396: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0008121283026412129
    2. ' __' → logprob: -7.12581205368042
    3. 'delete' → logprob: -12.625812530517578
    4. '   ' → logprob: -13.250812530517578
    5. '__(' → logprob: -13.500812530517578
    6. '___' → logprob: -15.500812530517578
    7. '(__' → logprob: -15.750812530517578
    8. ' ' → logprob: -15.750812530517578
    9. '__[' → logprob: -15.875812530517578
    10. ' delete' → logprob: -16.500812530517578

Token 397: 'delete' (ID: 8509)
  Prédit: 'delete'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delete' → logprob: -1.7432603272027336e-06
    2. '_delete' → logprob: -13.375001907348633
    3. ' delete' → logprob: -16.625001907348633
    4. '	delete' → logprob: -17.875001907348633
    5. '(delete' → logprob: -18.875001907348633
    6. '.delete' → logprob: -19.250001907348633
    7. '__' → logprob: -20.500001907348633
    8. 'replace' → logprob: -20.875001907348633
    9. '```' → logprob: -21.500001907348633
    10. 'rotate' → logprob: -22.375001907348633

Token 398: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -6.146429223008454e-05
    2. 'x' → logprob: -9.75006103515625
    3. '(' → logprob: -12.75006103515625
    4. ' (' → logprob: -16.75006103515625
    5. '(
' → logprob: -17.37506103515625
    6. ' x' → logprob: -17.75006103515625
    7. '```' → logprob: -18.12506103515625
    8. '[x' → logprob: -18.25006103515625
    9. ',x' → logprob: -19.87506103515625
    10. '((' → logprob: -20.62506103515625

Token 399: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012752347392961383
    2. '(' → logprob: -7.376275062561035
    3. ')
' → logprob: -8.626275062561035
    4. '(x' → logprob: -8.751275062561035
    5. ' )' → logprob: -9.501275062561035
    6. '))' → logprob: -9.501275062561035
    7. '[' → logprob: -9.626275062561035
    8. '(val' → logprob: -10.126275062561035
    9. ')`' → logprob: -11.126275062561035
    10. '])' → logprob: -12.001275062561035

Token 400: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5764729380607605
    2. 'else' → logprob: -0.8264729380607605
    3. ' else' → logprob: -7.826472759246826
    4. '```' → logprob: -9.701473236083984
    5. 'def' → logprob: -10.951473236083984
    6. '       ' → logprob: -11.326473236083984
    7. '<|end|>' → logprob: -11.451473236083984
    8. 'root' → logprob: -11.826473236083984
    9. '	else' → logprob: -11.951473236083984
    10. '
' → logprob: -12.701473236083984

Token 401: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.004995720461010933
    2. '   ' → logprob: -5.504995822906494
    3. ' else' → logprob: -7.004995822906494
    4. '	else' → logprob: -11.879995346069336
    5. '```' → logprob: -13.754995346069336
    6. 'def' → logprob: -15.129995346069336
    7. 'root' → logprob: -15.254995346069336
    8. '
' → logprob: -15.879995346069336
    9. '[root' → logprob: -16.004995346069336
    10. '       ' → logprob: -16.129995346069336

Token 402: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17764388024806976
    2. ':
' → logprob: -2.4276437759399414
    3. ':' → logprob: -2.8026437759399414
    4. ' root' → logprob: -4.677643775939941
    5. 'root' → logprob: -5.552643775939941
    6. '   ' → logprob: -8.177643775939941
    7. '):
' → logprob: -9.427643775939941
    8. ',' → logprob: -9.552643775939941
    9. '(root' → logprob: -10.177643775939941
    10. '=root' → logprob: -10.552643775939941

Token 403: '       ' (ID: 309)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.3869048058986664
    2. ' root' → logprob: -1.1369048357009888
    3. '   ' → logprob: -10.5119047164917
    4. '	root' → logprob: -12.6369047164917
    5. '       ' → logprob: -12.8869047164917
    6. '_root' → logprob: -15.1369047164917
    7. ' roots' → logprob: -15.7619047164917
    8. '[root' → logprob: -15.7619047164917
    9. '=root' → logprob: -16.136905670166016
    10. '(root' → logprob: -16.386905670166016

Token 404: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' (adapté à ' root') → logprob: -7.493430894101039e-05
    2. ' root' → logprob: -9.500075340270996
    3. '   ' → logprob: -16.62507438659668
    4. '	root' → logprob: -18.25007438659668
    5. 'global' → logprob: -19.62507438659668
    6. '
' → logprob: -20.75007438659668
    7. '_root' → logprob: -21.12507438659668
    8. 'roots' → logprob: -21.37507438659668
    9. '(root' → logprob: -21.75007438659668
    10. '    
' → logprob: -22.37507438659668

Token 405: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07888978719711304
    2. ' =' → logprob: -2.578889846801758
    3. '=root' → logprob: -17.203889846801758
    4. '.=' → logprob: -18.953889846801758
    5. '＝' → logprob: -19.703889846801758
    6. '_=' → logprob: -19.953889846801758
    7. ',' → logprob: -20.328889846801758
    8. ')' → logprob: -20.953889846801758
    9. '=}' → logprob: -21.453889846801758
    10. '=

' → logprob: -21.453889846801758

Token 406: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0009115827269852161
    2. ' __' → logprob: -7.000911712646484
    3. '___' → logprob: -18.000911712646484
    4. ' ' → logprob: -18.250911712646484
    5. '(__' → logprob: -18.250911712646484
    6. '.__' → logprob: -18.375911712646484
    7. '   ' → logprob: -18.500911712646484
    8. '__(' → logprob: -19.250911712646484
    9. 'None' → logprob: -20.000911712646484
    10. '____' → logprob: -20.000911712646484

Token 407: 'delete' (ID: 8509)
  Prédit: 'delete'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delete' → logprob: -1.3425219549390022e-05
    2. '_delete' → logprob: -11.25001335144043
    3. '	delete' → logprob: -15.62501335144043
    4. ' delete' → logprob: -16.00001335144043
    5. '.delete' → logprob: -16.75001335144043
    6. '(delete' → logprob: -17.37501335144043
    7. '__' → logprob: -17.62501335144043
    8. '```' → logprob: -19.62501335144043
    9. 'deleted' → logprob: -19.87501335144043
    10. 'replace' → logprob: -20.00001335144043

Token 408: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00017553119687363505
    2. '(root' → logprob: -8.750175476074219
    3. '(' → logprob: -11.500175476074219
    4. 'root' → logprob: -12.125175476074219
    5. 'x' → logprob: -13.500175476074219
    6. ' (' → logprob: -18.12517547607422
    7. '(
' → logprob: -19.62517547607422
    8. ' root' → logprob: -20.00017547607422
    9. '```' → logprob: -20.12517547607422
    10. ' x' → logprob: -20.37517547607422

Token 409: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011442946270108223
    2. '(root' → logprob: -4.511443138122559
    3. 'root' → logprob: -8.261443138122559
    4. '(x' → logprob: -10.261443138122559
    5. ')
' → logprob: -10.636443138122559
    6. ')x' → logprob: -11.011443138122559
    7. '(' → logprob: -11.261443138122559
    8. '<|end|>' → logprob: -11.386443138122559
    9. '[root' → logprob: -11.636443138122559
    10. '       ' → logprob: -12.011443138122559

Token 410: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 411: ' find' (ID: 1646)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.29201623797416687
    2. '():
' → logprob: -2.7920162677764893
    3. 'main' → logprob: -2.9170162677764893
    4. ' main' → logprob: -3.2920162677764893
    5. 'def' → logprob: -3.5420162677764893
    6. 'int' → logprob: -3.7920162677764893
    7. '()' → logprob: -4.16701602935791
    8. 'insert' → logprob: -4.54201602935791
    9. '__' → logprob: -5.66701602935791
    10. 'read' → logprob: -5.91701602935791

Token 412: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.0005980697460472584
    2. '(' → logprob: -7.500597953796387
    3. '(root' → logprob: -11.375597953796387
    4. '(x' → logprob: -11.375597953796387
    5. '(var' → logprob: -11.875597953796387
    6. '(value' → logprob: -12.750597953796387
    7. '(node' → logprob: -13.000597953796387
    8. '(key' → logprob: -13.250597953796387
    9. 'val' → logprob: -13.500597953796387
    10. ',val' → logprob: -13.625597953796387

Token 413: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014242012053728104
    2. '):
' → logprob: -4.264242172241211
    3. ',' → logprob: -10.014242172241211
    4. ')' → logprob: -11.139242172241211
    5. '):
' → logprob: -12.139242172241211
    6. '(root' → logprob: -12.264242172241211
    7. ',val' → logprob: -13.264242172241211
    8. '(x' → logprob: -13.264242172241211
    9. ':' → logprob: -13.639242172241211
    10. ' ):' → logprob: -13.889242172241211

Token 414: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.23956499993801117
    2. ' x' → logprob: -2.489564895629883
    3. 'global' → logprob: -2.489564895629883
    4. ' global' → logprob: -3.489564895629883
    5. '   ' → logprob: -4.739564895629883
    6. 'def' → logprob: -4.864564895629883
    7. '
' → logprob: -9.614564895629883
    8. ' def' → logprob: -10.114564895629883
    9. 'node' → logprob: -10.614564895629883
    10. 'current' → logprob: -11.239564895629883

Token 415: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -3.190178904333152e-05
    2. 'global' → logprob: -10.500031471252441
    3. 'def' → logprob: -13.625031471252441
    4. 'nd' → logprob: -13.625031471252441
    5. 'cur' → logprob: -13.750031471252441
    6. 'node' → logprob: -14.750031471252441
    7. ' x' → logprob: -15.250031471252441
    8. '   ' → logprob: -15.625031471252441
    9. 'current' → logprob: -17.500032424926758
    10. 'd' → logprob: -18.125032424926758

Token 416: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38724663853645325
    2. ' =' → logprob: -1.1372466087341309
    3. '=root' → logprob: -7.887246608734131
    4. '[root' → logprob: -17.13724708557129
    5. ' root' → logprob: -18.13724708557129
    6. '=
' → logprob: -18.38724708557129
    7. 'root' → logprob: -18.51224708557129
    8. '(root' → logprob: -19.01224708557129
    9. '=head' → logprob: -19.13724708557129
    10. ' ' → logprob: -19.88724708557129

Token 417: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.03804149478673935
    2. ' root' → logprob: -3.288041591644287
    3. '	root' → logprob: -18.663042068481445
    4. '(root' → logprob: -19.038042068481445
    5. '_root' → logprob: -19.538042068481445
    6. '[root' → logprob: -19.788042068481445
    7. '=root' → logprob: -20.163042068481445
    8. ' ' → logprob: -21.288042068481445
    9. '   ' → logprob: -21.413042068481445
    10. '
' → logprob: -21.538042068481445

Token 418: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5937080383300781
    2. '   ' → logprob: -0.8437080383300781
    3. 'while' → logprob: -4.093708038330078
    4. '    
' → logprob: -7.343708038330078
    5. ' while' → logprob: -9.218708038330078
    6. '```' → logprob: -9.718708038330078
    7. ' 
' → logprob: -10.593708038330078
    8. '	while' → logprob: -10.593708038330078
    9. '  
' → logprob: -10.718708038330078
    10. '
' → logprob: -11.093708038330078

Token 419: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17073659598827362
    2. 'while' → logprob: -1.92073655128479
    3. '
' → logprob: -4.920736789703369
    4. ' while' → logprob: -5.795736789703369
    5. '	while' → logprob: -9.420736312866211
    6. '```' → logprob: -10.295736312866211
    7. '    
' → logprob: -12.045736312866211
    8. '``' → logprob: -14.295736312866211
    9. ' 
' → logprob: -15.045736312866211
    10. '<|end|>' → logprob: -15.295736312866211

Token 420: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.000531467841938138
    2. '   ' → logprob: -8.250531196594238
    3. ' while' → logprob: -8.250531196594238
    4. '
' → logprob: -11.750531196594238
    5. '	while' → logprob: -13.875531196594238
    6. '```' → logprob: -15.875531196594238
    7. 'While' → logprob: -17.625532150268555
    8. '    
' → logprob: -18.375532150268555
    9. '``' → logprob: -18.375532150268555
    10. '       ' → logprob: -20.875532150268555

Token 421: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.493430894101039e-05
    2. ' x' → logprob: -9.500075340270996
    3. 'True' → logprob: -19.75007438659668
    4. '(x' → logprob: -20.37507438659668
    5. '   ' → logprob: -21.12507438659668
    6. '	x' → logprob: -21.62507438659668
    7. ' ' → logprob: -21.62507438659668
    8. ')x' → logprob: -22.87507438659668
    9. 'root' → logprob: -23.00007438659668
    10. 'val' → logprob: -23.62507438659668

Token 422: ':
' (ID: 734)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.12699708342552185
    2. ' and' → logprob: -2.1269969940185547
    3. '   ' → logprob: -10.251996994018555
    4. ':
' → logprob: -10.876996994018555
    5. '[' → logprob: -11.501996994018555
    6. 'x' → logprob: -13.126996994018555
    7. ':' → logprob: -13.876996994018555
    8. ' ' → logprob: -14.376996994018555
    9. '	and' → logprob: -15.001996994018555
    10. '!=' → logprob: -15.501996994018555

Token 423: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03083949163556099
    2. '   ' → logprob: -3.780839443206787
    3. ' if' → logprob: -5.530839443206787
    4. 'if' → logprob: -6.030839443206787
    5. 'd' → logprob: -6.780839443206787
    6. '	if' → logprob: -11.155839920043945
    7. ' d' → logprob: -11.405839920043945
    8. ' ' → logprob: -11.780839920043945
    9. '	' → logprob: -12.155839920043945
    10. '```' → logprob: -12.155839920043945

Token 424: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.18582238256931305
    2. '       ' → logprob: -1.9358223676681519
    3. 'd' → logprob: -3.9358224868774414
    4. ' if' → logprob: -5.435822486877441
    5. '   ' → logprob: -6.685822486877441
    6. '	if' → logprob: -9.185822486877441
    7. ' d' → logprob: -10.935822486877441
    8. '```' → logprob: -12.060822486877441
    9. '           ' → logprob: -12.685822486877441
    10. ' ' → logprob: -12.810822486877441

Token 425: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.4660854637622833
    2. ' val' → logprob: -1.466085433959961
    3. 'x' → logprob: -2.341085433959961
    4. ' x' → logprob: -3.091085433959961
    5. '   ' → logprob: -10.341085433959961
    6. '	val' → logprob: -12.216085433959961
    7. ' ' → logprob: -13.091085433959961
    8. '    ' → logprob: -13.841085433959961
    9. '	x' → logprob: -14.341085433959961
    10. '       ' → logprob: -14.341085433959961

Token 426: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25196754932403564
    2. '==' → logprob: -1.5019675493240356
    3. ' <' → logprob: -10.876967430114746
    4. '=' → logprob: -11.501967430114746
    5. '<' → logprob: -12.126967430114746
    6. '[' → logprob: -13.501967430114746
    7. ' =' → logprob: -13.626967430114746
    8. '===' → logprob: -14.876967430114746
    9. ' ' → logprob: -15.376967430114746
    10. '==
' → logprob: -15.376967430114746

Token 427: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02324547804892063
    2. ' x' → logprob: -3.7732455730438232
    3. '   ' → logprob: -18.273244857788086
    4. '       ' → logprob: -18.273244857788086
    5. '	x' → logprob: -19.023244857788086
    6. ' ' → logprob: -19.398244857788086
    7. '(x' → logprob: -20.398244857788086
    8. '
' → logprob: -21.398244857788086
    9. '0' → logprob: -21.523244857788086
    10. ')x' → logprob: -22.148244857788086

Token 428: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.1008713702030946e-06
    2. '   ' → logprob: -14.500001907348633
    3. '[
' → logprob: -14.625001907348633
    4. '       ' → logprob: -14.750001907348633
    5. '```' → logprob: -15.250001907348633
    6. ' ' → logprob: -16.500001907348633
    7. ':' → logprob: -16.625001907348633
    8. '2' → logprob: -16.750001907348633
    9. '<|end|>' → logprob: -17.375001907348633
    10. ' [' → logprob: -17.375001907348633

Token 429: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008772454224526882
    2. '[' → logprob: -4.758772373199463
    3. 'x' → logprob: -9.008772850036621
    4. ' ' → logprob: -11.133772850036621
    5. '   ' → logprob: -11.133772850036621
    6. ' x' → logprob: -12.383772850036621
    7. '       ' → logprob: -14.008772850036621
    8. '```' → logprob: -14.883772850036621
    9. '  ' → logprob: -15.258772850036621
    10. '    ' → logprob: -15.383772850036621

Token 430: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.41528967022895813
    2. ':' → logprob: -1.1652896404266357
    3. ':return' → logprob: -3.6652896404266357
    4. '):
' → logprob: -6.290289878845215
    5. '):' → logprob: -8.665289878845215
    6. '       ' → logprob: -8.915289878845215
    7. '():
' → logprob: -9.415289878845215
    8. ' return' → logprob: -10.040289878845215
    9. 'return' → logprob: -10.040289878845215
    10. ' :
' → logprob: -11.290289878845215

Token 431: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03548480197787285
    2. ' return' → logprob: -3.785484790802002
    3. 'return' → logprob: -4.410484790802002
    4. '		' → logprob: -12.16048526763916
    5. '
' → logprob: -12.78548526763916
    6. '	return' → logprob: -13.03548526763916
    7. ':return' → logprob: -13.53548526763916
    8. '               ' → logprob: -13.78548526763916
    9. '       ' → logprob: -14.28548526763916
    10. '   ' → logprob: -14.66048526763916

Token 432: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.28164878487586975
    2. ' return' → logprob: -1.5316487550735474
    3. '           ' → logprob: -3.531648874282837
    4. 'break' → logprob: -11.031648635864258
    5. '	return' → logprob: -13.156648635864258
    6. '       ' → logprob: -13.281648635864258
    7. '   ' → logprob: -13.406648635864258
    8. ' break' → logprob: -13.531648635864258
    9. '               ' → logprob: -13.531648635864258
    10. '
' → logprob: -14.281648635864258

Token 433: ' ' (ID: 220)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.31376469135284424
    2. 'True' → logprob: -1.3137646913528442
    3. ' True' → logprob: -7.938764572143555
    4. ' x' → logprob: -8.938764572143555
    5. '1' → logprob: -11.688764572143555
    6. '(True' → logprob: -13.188764572143555
    7. 'val' → logprob: -13.688764572143555
    8. 'true' → logprob: -14.313764572143555
    9. '   ' → logprob: -14.313764572143555
    10. 'print' → logprob: -14.688764572143555

Token 434: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.018151700496673584
    2. 'True' → logprob: -4.018151760101318
    3. ' x' → logprob: -14.14315128326416
    4. ' True' → logprob: -14.39315128326416
    5. '1' → logprob: -15.89315128326416
    6. '(True' → logprob: -16.268152236938477
    7. 'true' → logprob: -16.893152236938477
    8. '(x' → logprob: -17.268152236938477
    9. '   ' → logprob: -17.768152236938477
    10. '	x' → logprob: -18.268152236938477

Token 435: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004703530576080084
    2. 'd' → logprob: -8.500470161437988
    3. 'elif' → logprob: -8.500470161437988
    4. '
' → logprob: -10.000470161437988
    5. '   ' → logprob: -12.125470161437988
    6. '<|end|>' → logprob: -12.625470161437988
    7. 'x' → logprob: -13.000470161437988
    8. ' elif' → logprob: -13.875470161437988
    9. '	' → logprob: -14.000470161437988
    10. 'import' → logprob: -14.000470161437988

Token 436: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0068111727014184
    2. 'd' → logprob: -5.006811141967773
    3. 'elif' → logprob: -9.881811141967773
    4. '
' → logprob: -10.881811141967773
    5. '   ' → logprob: -11.381811141967773
    6. ' d' → logprob: -11.756811141967773
    7. 'x' → logprob: -12.881811141967773
    8. 'if' → logprob: -13.631811141967773
    9. '	' → logprob: -14.256811141967773
    10. 'import' → logprob: -15.381811141967773

Token 437: ' x' (ID: 1215)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.20178186893463135
    2. ' d' → logprob: -1.7017818689346313
    3. '       ' → logprob: -8.3267822265625
    4. '   ' → logprob: -9.7017822265625
    5. 'x' (adapté à ' x') → logprob: -10.0767822265625
    6. ' x' → logprob: -11.2017822265625
    7. 'elif' → logprob: -12.5767822265625
    8. '    ' → logprob: -13.3267822265625
    9. '	d' → logprob: -13.3267822265625
    10. ' elif' → logprob: -13.7017822265625

Token 438: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026370316743850708
    2. ' =' → logprob: -3.6513702869415283
    3. '=d' → logprob: -10.52637004852295
    4. '[' → logprob: -11.15137004852295
    5. 'val' → logprob: -11.52637004852295
    6. 'd' → logprob: -12.40137004852295
    7. '=x' → logprob: -12.40137004852295
    8. '[val' → logprob: -13.02637004852295
    9. 'else' → logprob: -13.65137004852295
    10. '=(' → logprob: -13.77637004852295

Token 439: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011048642918467522
    2. ' x' → logprob: -4.511048793792725
    3. '0' → logprob: -14.136048316955566
    4. '(x' → logprob: -16.386049270629883
    5. '(' → logprob: -17.886049270629883
    6. '[' → logprob: -18.136049270629883
    7. ' ' → logprob: -18.261049270629883
    8. '   ' → logprob: -18.511049270629883
    9. '1' → logprob: -18.636049270629883
    10. '	x' → logprob: -19.011049270629883

Token 440: '[x' (ID: 17295)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3812887966632843
    2. '[val' → logprob: -1.381288766860962
    3. '[(' → logprob: -3.881288766860962
    4. '0' → logprob: -3.881288766860962
    5. '[x' → logprob: -4.631289005279541
    6. 'val' → logprob: -4.881289005279541
    7. '(' → logprob: -5.631289005279541
    8. '[int' → logprob: -6.756289005279541
    9. 'x' → logprob: -7.006289005279541
    10. '1' → logprob: -7.506289005279541

Token 441: '[' (ID: 58)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04059840738773346
    2. '(' → logprob: -3.6655983924865723
    3. '[' → logprob: -4.290598392486572
    4. '(x' → logprob: -7.915598392486572
    5. ' ' → logprob: -10.16559886932373
    6. '
' → logprob: -10.66559886932373
    7. '```' → logprob: -10.79059886932373
    8. '[x' → logprob: -11.29059886932373
    9. ' (' → logprob: -12.04059886932373
    10. '#' → logprob: -12.41559886932373

Token 442: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02691204659640789
    2. '(' → logprob: -3.651911973953247
    3. '(x' → logprob: -7.776912212371826
    4. '0' → logprob: -9.776911735534668
    5. 'val' → logprob: -9.776911735534668
    6. '(val' → logprob: -10.776911735534668
    7. '[' → logprob: -10.901911735534668
    8. 'int' → logprob: -11.901911735534668
    9. ' ' → logprob: -11.901911735534668
    10. '
' → logprob: -12.151911735534668

Token 443: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.18002037703990936
    2. ' <' → logprob: -1.8050203323364258
    3. ' ' → logprob: -8.805020332336426
    4. '>' → logprob: -9.805020332336426
    5. '<v' → logprob: -11.805020332336426
    6. '<x' → logprob: -11.805020332336426
    7. '2' → logprob: -12.055020332336426
    8. ' >' → logprob: -12.055020332336426
    9. '<int' → logprob: -12.180020332336426
    10. '[' → logprob: -12.180020332336426

Token 444: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.06297815591096878
    2. '2' → logprob: -3.3129782676696777
    3. '[' → logprob: -4.562978267669678
    4. ' <' → logprob: -4.562978267669678
    5. '1' → logprob: -6.812978267669678
    6. '3' → logprob: -7.312978267669678
    7. '<x' → logprob: -7.562978267669678
    8. '0' → logprob: -8.18797779083252
    9. ' ' → logprob: -8.18797779083252
    10. '```' → logprob: -9.18797779083252

Token 445: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.12692810595035553
    2. ' val' → logprob: -2.1269280910491943
    3. '	val' → logprob: -17.001928329467773
    4. '(val' → logprob: -18.501928329467773
    5. ' ' → logprob: -18.876928329467773
    6. '[val' → logprob: -19.376928329467773
    7. '.val' → logprob: -19.626928329467773
    8. '_val' → logprob: -19.876928329467773
    9. ',val' → logprob: -19.876928329467773
    10. '```' → logprob: -20.501928329467773

Token 446: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01764199137687683
    2. '1' → logprob: -4.267642021179199
    3. '()]' → logprob: -6.767642021179199
    4. ' ]' → logprob: -6.892642021179199
    5. '(' → logprob: -7.267642021179199
    6. '[' → logprob: -7.642642021179199
    7. ']
' → logprob: -10.1426420211792
    8. ')]' → logprob: -10.6426420211792
    9. '   ' → logprob: -10.8926420211792
    10. '0' → logprob: -11.3926420211792

Token 447: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6836146116256714
    2. '0' → logprob: -1.1836146116256714
    3. 'return' → logprob: -1.6836146116256714
    4. ' return' → logprob: -6.308614730834961
    5. '1' → logprob: -7.183614730834961
    6. '  ' → logprob: -8.558614730834961
    7. 'None' → logprob: -8.683614730834961
    8. '000' → logprob: -9.183614730834961
    9. '2' → logprob: -9.558614730834961
    10. 'def' → logprob: -9.808614730834961

Token 448: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01819067820906639
    2. 'return' (adapté à ' return') → logprob: -4.018190860748291
    3. '   ' → logprob: -10.893190383911133
    4. ' return' → logprob: -10.893190383911133
    5. '000' → logprob: -13.768190383911133
    6. 'None' → logprob: -13.893190383911133
    7. ' ' → logprob: -14.268190383911133
    8. '```' → logprob: -15.268190383911133
    9. '1' → logprob: -15.393190383911133
    10. '  ' → logprob: -15.518190383911133

Token 449: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011708177626132965
    2. ' ' → logprob: -6.751170635223389
    3. 'False' → logprob: -14.501171112060547
    4. ' False' → logprob: -17.126171112060547
    5. 'None' → logprob: -20.001171112060547
    6. '   ' → logprob: -20.126171112060547
    7. ' None' → logprob: -22.001171112060547
    8. '000' → logprob: -22.626171112060547
    9. '00' → logprob: -22.876171112060547
    10. '０' → logprob: -23.001171112060547

Token 450: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.153795766294934e-06
    2. ' ' → logprob: -12.250005722045898
    3. 'False' → logprob: -14.000005722045898
    4. 'None' → logprob: -15.000005722045898
    5. '-' → logprob: -16.5000057220459
    6. '   ' → logprob: -18.6250057220459
    7. '000' → logprob: -19.7500057220459
    8. '00' → logprob: -20.2500057220459
    9. '
' → logprob: -20.6250057220459
    10. ' False' → logprob: -20.7500057220459

Token 451: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3077293336391449
    2. 'def' → logprob: -1.8077293634414673
    3. '<|end|>' → logprob: -2.9327292442321777
    4. 'n' → logprob: -3.6827292442321777
    5. 'for' → logprob: -4.807729244232178
    6. '[' → logprob: -6.057729244232178
    7. '.' → logprob: -6.432729244232178
    8. 'if' → logprob: -6.807729244232178
    9. ')' → logprob: -6.807729244232178
    10. '
' → logprob: -7.182729244232178

Token 452: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25090500712394714
    2. 'n' → logprob: -2.0009050369262695
    3. '#' → logprob: -3.3759050369262695
    4. 'while' → logprob: -3.5009050369262695
    5. 'def' → logprob: -4.3759050369262695
    6. 'if' → logprob: -5.1259050369262695
    7. 'q' → logprob: -6.1259050369262695
    8. 'pass' → logprob: -8.50090503692627
    9. 'import' → logprob: -8.75090503692627
    10. '```' → logprob: -8.75090503692627

Token 453: ' debug' (ID: 15199)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.23678822815418243
    2. 'in' → logprob: -1.736788272857666
    3. 'print' → logprob: -4.236788272857666
    4. 'solve' → logprob: -4.611788272857666
    5. 'split' → logprob: -6.361788272857666
    6. 'tr' → logprob: -6.361788272857666
    7. 'insert' → logprob: -6.986788272857666
    8. 'build' → logprob: -7.111788272857666
    9. 'input' → logprob: -7.361788272857666
    10. 'k' → logprob: -7.611788272857666

Token 454: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0011649841908365488
    2. '():
' → logprob: -6.87616491317749
    3. ' ():' → logprob: -9.376165390014648
    4. '()' → logprob: -10.126165390014648
    5. '(' → logprob: -12.126165390014648
    6. 'print' → logprob: -14.626165390014648
    7. ' ()' → logprob: -14.876165390014648
    8. '():
' → logprob: -15.251165390014648
    9. 'def' → logprob: -15.751165390014648
    10. '(":' → logprob: -15.876165390014648

Token 455: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25757429003715515
    2. ' q' → logprob: -1.8825743198394775
    3. ' def' → logprob: -3.2575743198394775
    4. ' from' → logprob: -4.007574081420898
    5. ' import' → logprob: -4.757574081420898
    6. 'q' → logprob: -6.132574081420898
    7. 'def' → logprob: -6.382574081420898
    8. ' queue' → logprob: -6.632574081420898
    9. 'import' → logprob: -6.757574081420898
    10. ' global' → logprob: -7.632574081420898

Token 456: ' s' (ID: 265)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3014982342720032
    2. 'q' → logprob: -1.5514981746673584
    3. 'from' → logprob: -3.1764981746673584
    4. 'print' → logprob: -6.3014984130859375
    5. 'dq' → logprob: -6.5514984130859375
    6. 'import' → logprob: -6.8014984130859375
    7. 'if' → logprob: -7.3014984130859375
    8. 'write' → logprob: -7.3014984130859375
    9. 'queue' → logprob: -7.4264984130859375
    10. 'd' → logprob: -10.176498413085938

Token 457: '0' (ID: 15)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10572323948144913
    2. 't' → logprob: -2.9807231426239014
    3. '=' → logprob: -3.1057231426239014
    4. 'td' → logprob: -6.1057233810424805
    5. '=[]' → logprob: -7.2307233810424805
    6. 'tr' → logprob: -7.4807233810424805
    7. 'tar' → logprob: -8.10572338104248
    8. '=[]
' → logprob: -8.48072338104248
    9. '   ' → logprob: -8.73072338104248
    10. 'def' → logprob: -8.73072338104248

Token 458: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11066137999296188
    2. '=' → logprob: -2.485661268234253
    3. 't' → logprob: -4.860661506652832
    4. '=[]' → logprob: -4.985661506652832
    5. 'ys' → logprob: -5.985661506652832
    6. 'tr' → logprob: -6.610661506652832
    7. '=""' → logprob: -6.860661506652832
    8. 'td' → logprob: -8.235661506652832
    9. '=sys' → logprob: -8.235661506652832
    10. '=[]
' → logprob: -8.360661506652832

Token 459: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6013119220733643
    2. 'deque' → logprob: -1.4763119220733643
    3. '[]
' → logprob: -2.1013119220733643
    4. 'root' → logprob: -3.6013119220733643
    5. '''' → logprob: -3.8513119220733643
    6. '[' → logprob: -3.9763119220733643
    7. '""' → logprob: -4.101311683654785
    8. '[root' → logprob: -4.976311683654785
    9. 'str' → logprob: -5.851311683654785
    10. '[(' → logprob: -6.351311683654785

Token 460: '""' (ID: 6371)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.002269681775942445
    2. '(root' → logprob: -6.127269744873047
    3. '[root' → logprob: -10.002269744873047
    4. '[' → logprob: -11.252269744873047
    5. ' root' → logprob: -11.877269744873047
    6. '(' → logprob: -12.127269744873047
    7. ']' → logprob: -12.377269744873047
    8. '0' → logprob: -13.127269744873047
    9. '[]' → logprob: -13.502269744873047
    10. '([' → logprob: -14.002269744873047

Token 461: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.549383282661438
    2. ']
' → logprob: -1.424383282661438
    3. ',' → logprob: -1.799383282661438
    4. 'for' → logprob: -4.674383163452148
    5. ' for' → logprob: -5.549383163452148
    6. ']+' → logprob: -7.549383163452148
    7. ']

' → logprob: -7.549383163452148
    8. ']*' → logprob: -7.549383163452148
    9. 'root' → logprob: -7.674383163452148
    10. '];' → logprob: -8.174383163452148

Token 462: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22571316361427307
    2. 'def' → logprob: -2.2257132530212402
    3. ' def' → logprob: -2.4757132530212402
    4. ' if' → logprob: -5.10071325302124
    5. ' s' → logprob: -6.10071325302124
    6. '
' → logprob: -7.10071325302124
    7. ' queue' → logprob: -8.975712776184082
    8. ' for' → logprob: -9.100712776184082
    9. ' ' → logprob: -9.225712776184082
    10. 's' → logprob: -9.225712776184082

Token 463: ' s' (ID: 265)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0009164590737782419
    2. ' def' → logprob: -7.875916481018066
    3. '   ' → logprob: -8.375916481018066
    4. 'if' → logprob: -8.875916481018066
    5. 's' (adapté à ' s') → logprob: -9.125916481018066
    6. 'from' → logprob: -10.750916481018066
    7. 'q' → logprob: -11.375916481018066
    8. '
' → logprob: -11.625916481018066
    9. 'stack' → logprob: -11.625916481018066
    10. 'x' → logprob: -13.375916481018066

Token 464: '1' (ID: 16)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4413047730922699
    2. ' =' → logprob: -1.3163048028945923
    3. '0' → logprob: -2.9413046836853027
    4. '=' → logprob: -4.191304683685303
    5. '   ' → logprob: -4.816304683685303
    6. '[' → logprob: -5.441304683685303
    7. '=[]' → logprob: -5.816304683685303
    8. ' def' → logprob: -6.566304683685303
    9. '=[' → logprob: -6.941304683685303
    10. 'x' → logprob: -7.316304683685303

Token 465: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5767502784729004
    2. '=' → logprob: -0.8267502784729004
    3. '=[]' → logprob: -7.2017502784729
    4. '=[' → logprob: -10.576749801635742
    5. '.append' → logprob: -11.701749801635742
    6. 'def' → logprob: -11.701749801635742
    7. ',' → logprob: -11.951749801635742
    8. '=[]
' → logprob: -12.201749801635742
    9. '   ' → logprob: -12.951749801635742
    10. ' ' → logprob: -13.201749801635742

Token 466: ' ["' (ID: 9129)
  Prédit: '[root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[root' → logprob: -1.093899130821228
    2. '["' → logprob: -1.218899130821228
    3. '[]' → logprob: -1.718899130821228
    4. '[' → logprob: -2.0938992500305176
    5. '[s' → logprob: -3.5938992500305176
    6. 'deque' → logprob: -3.8438992500305176
    7. '[(' → logprob: -4.968899250030518
    8. 'root' → logprob: -5.218899250030518
    9. '[]
' → logprob: -6.593899250030518
    10. ' [' → logprob: -6.843899250030518

Token 467: '"]

' (ID: 57728)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.3922668397426605
    2. '"]' → logprob: -2.7672667503356934
    3. '   ' → logprob: -3.0172667503356934
    4. ' root' → logprob: -3.3922667503356934
    5. '[' → logprob: -3.6422667503356934
    6. ' "' → logprob: -4.142266750335693
    7. '(root' → logprob: -4.142266750335693
    8. '",' → logprob: -4.642266750335693
    9. '"]
' → logprob: -4.642266750335693
    10. ' "]' → logprob: -4.642266750335693

Token 468: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.028344741091132164
    2. '   ' → logprob: -3.7783446311950684
    3. ' def' → logprob: -6.528344631195068
    4. 'q' → logprob: -6.653344631195068
    5. 'from' → logprob: -6.778344631195068
    6. '
' → logprob: -7.153344631195068
    7. 'x' → logprob: -8.903345108032227
    8. ' from' → logprob: -9.653345108032227
    9. 'if' → logprob: -9.903345108032227
    10. 'stack' → logprob: -10.028345108032227

Token 469: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2415289580821991
    2. 'if' → logprob: -1.8665289878845215
    3. 'q' → logprob: -3.7415289878845215
    4. 'x' → logprob: -4.1165289878845215
    5. 'from' → logprob: -4.3665289878845215
    6. 'queue' → logprob: -5.9915289878845215
    7. 'stack' → logprob: -6.1165289878845215
    8. 's' → logprob: -6.7415289878845215
    9. 'while' → logprob: -8.491528511047363
    10. 'node' → logprob: -8.491528511047363

Token 470: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.10101697593927383
    2. ' dfs' → logprob: -2.7260169982910156
    3. 'rec' → logprob: -4.601016998291016
    4. '_' → logprob: -4.851016998291016
    5. 'go' → logprob: -6.101016998291016
    6. 're' → logprob: -6.226016998291016
    7. 'print' → logprob: -6.351016998291016
    8. ' rec' → logprob: -6.476016998291016
    9. '_d' → logprob: -6.976016998291016
    10. 'f' → logprob: -7.226016998291016

Token 471: '(nd' (ID: 131841)
  Prédit: '(nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nd' → logprob: -0.07582636922597885
    2. '(node' → logprob: -3.200826406478882
    3. '(n' → logprob: -3.825826406478882
    4. '(x' → logprob: -4.575826168060303
    5. '(' → logprob: -9.450826644897461
    6. '(u' → logprob: -9.950826644897461
    7. '(root' → logprob: -10.700826644897461
    8. ' (' → logprob: -10.950826644897461
    9. '(nx' → logprob: -11.200826644897461
    10. '(v' → logprob: -12.575826644897461

Token 472: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04116302356123924
    2. '(nd' → logprob: -4.291162967681885
    3. '):' → logprob: -4.541162967681885
    4. '):
' → logprob: -4.916162967681885
    5. '(n' → logprob: -6.041162967681885
    6. '(node' → logprob: -6.166162967681885
    7. ',node' → logprob: -6.166162967681885
    8. '   ' → logprob: -6.666162967681885
    9. ',n' → logprob: -8.041163444519043
    10. '       ' → logprob: -8.166163444519043

Token 473: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3808523118495941
    2. '       ' → logprob: -1.6308523416519165
    3. '   ' → logprob: -2.130852222442627
    4. 'if' → logprob: -6.130852222442627
    5. '	if' → logprob: -10.005852699279785
    6. '	   ' → logprob: -13.630852699279785
    7. '     ' → logprob: -14.630852699279785
    8. '    ' → logprob: -14.755852699279785
    9. ' ' → logprob: -15.505852699279785
    10. ',' → logprob: -16.25585174560547

Token 474: ' v' (ID: 323)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.013804510235786438
    2. '   ' → logprob: -4.7638044357299805
    3. ' if' → logprob: -5.2638044357299805
    4. '	if' → logprob: -13.88880443572998
    5. '       ' → logprob: -16.888805389404297
    6. 's' → logprob: -19.263805389404297
    7. ' ' → logprob: -19.638805389404297
    8. '  ' → logprob: -20.263805389404297
    9. '    ' → logprob: -20.263805389404297
    10. '```' → logprob: -20.638805389404297

Token 475: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7703405618667603
    2. 'al' → logprob: -1.3953405618667603
    3. ' =' → logprob: -2.0203404426574707
    4. 'if' → logprob: -2.6453404426574707
    5. '   ' → logprob: -3.2703404426574707
    6. ',' → logprob: -3.5203404426574707
    7. ' if' → logprob: -4.520340442657471
    8. '[' → logprob: -6.145340442657471
    9. '       ' → logprob: -6.770340442657471
    10. 'alid' → logprob: -7.145340442657471

Token 476: ' str' (ID: 989)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.1802641749382019
    2. 'str' → logprob: -2.0552642345428467
    3. '""' → logprob: -4.430263996124268
    4. '"' → logprob: -4.430263996124268
    5. 'f' → logprob: -5.180263996124268
    6. ' nd' → logprob: -6.305263996124268
    7. 's' → logprob: -6.305263996124268
    8. ' str' → logprob: -7.430263996124268
    9. '"\' → logprob: -7.805263996124268
    10. 'None' → logprob: -8.180264472961426

Token 477: '(nd' (ID: 131841)
  Prédit: '(nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nd' → logprob: -6.704273118884885e-07
    2. 'nd' → logprob: -14.875000953674316
    3. '(n' → logprob: -17.125
    4. '(' → logprob: -17.25
    5. '((' → logprob: -18.0
    6. '(nx' → logprob: -18.75
    7. '```' → logprob: -18.75
    8. '(nb' → logprob: -18.875
    9. '(rd' → logprob: -19.0
    10. '
' → logprob: -19.125

Token 478: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.983476436696947e-05
    2. '(' → logprob: -9.875089645385742
    3. ')' → logprob: -10.375089645385742
    4. '   ' → logprob: -13.250089645385742
    5. ')
' → logprob: -13.250089645385742
    6. '()[' → logprob: -13.375089645385742
    7. '
' → logprob: -14.500089645385742
    8. '```' → logprob: -14.625089645385742
    9. '()' → logprob: -15.875089645385742
    10. ')[' → logprob: -16.000089645385742

Token 479: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3306015716807451e-05
    2. ' ' → logprob: -12.00001335144043
    3. '[' → logprob: -12.12501335144043
    4. '   ' → logprob: -14.50001335144043
    5. '(' → logprob: -15.25001335144043
    6. '0' → logprob: -15.62501335144043
    7. '
' → logprob: -15.87501335144043
    8. '```' → logprob: -16.00001335144043
    9. 'None' → logprob: -16.12501335144043
    10. '-' → logprob: -16.56251335144043

Token 480: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0003992104611825198
    2. '])
' → logprob: -8.750399589538574
    3. '])+' → logprob: -8.750399589538574
    4. '[' → logprob: -10.250399589538574
    5. ')' → logprob: -10.750399589538574
    6. ' ])' → logprob: -11.625399589538574
    7. ']' → logprob: -11.875399589538574
    8. ']);' → logprob: -12.375399589538574
    9. ']+' → logprob: -13.625399589538574
    10. ' if' → logprob: -13.750399589538574

Token 481: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 482: ' s' (ID: 265)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16228264570236206
    2. ' if' → logprob: -2.662282705307007
    3. 's' (adapté à ' s') → logprob: -2.912282705307007
    4. '   ' → logprob: -4.287282466888428
    5. 'l' → logprob: -5.037282466888428
    6. ' s' → logprob: -5.537282466888428
    7. 'for' → logprob: -6.912282466888428
    8. ' l' → logprob: -8.662282943725586
    9. ' for' → logprob: -8.662282943725586
    10. 'left' → logprob: -10.287282943725586

Token 483: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011011862196028233
    2. '[' → logprob: -5.011012077331543
    3. ' =' → logprob: -6.136012077331543
    4. '=' → logprob: -6.636012077331543
    5. '1' → logprob: -8.136012077331543
    6. 'def' → logprob: -8.261012077331543
    7. 's' → logprob: -9.636012077331543
    8. '   ' → logprob: -9.886012077331543
    9. 'v' → logprob: -10.886012077331543
    10. 'ize' → logprob: -11.261012077331543

Token 484: '.append' (ID: 3709)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8270824551582336
    2. '.append' → logprob: -0.8270824551582336
    3. '[-' → logprob: -2.077082395553589
    4. 'append' → logprob: -9.952082633972168
    5. '=' → logprob: -12.827082633972168
    6. '0' → logprob: -13.327082633972168
    7. '.extend' → logprob: -13.452082633972168
    8. '.' → logprob: -13.577082633972168
    9. 'Append' → logprob: -14.452082633972168
    10. '-' → logprob: -14.827082633972168

Token 485: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.6422803401947021
    2. '("' → logprob: -1.5172803401947021
    3. '("("' → logprob: -2.267280340194702
    4. '('' → logprob: -2.892280340194702
    5. '(' → logprob: -3.017280340194702
    6. '"' → logprob: -3.767280340194702
    7. '(s' → logprob: -4.517280578613281
    8. '(f' → logprob: -5.892280578613281
    9. ''' → logprob: -6.267280578613281
    10. 'v' → logprob: -6.642280578613281

Token 486: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026018798351287842
    2. ')
' → logprob: -4.1510186195373535
    3. '+' → logprob: -5.0260186195373535
    4. ' +' → logprob: -5.9010186195373535
    5. ');' → logprob: -7.9010186195373535
    6. '<|end|>' → logprob: -9.776019096374512
    7. 'if' → logprob: -10.401019096374512
    8. '+)' → logprob: -10.526019096374512
    9. ')+' → logprob: -10.526019096374512
    10. ' if' → logprob: -10.901019096374512

Token 487: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18911899626255035
    2. '<|end|>' → logprob: -2.5641191005706787
    3. ' if' → logprob: -2.8141191005706787
    4. '
' → logprob: -4.0641188621521
    5. '       ' → logprob: -5.8141188621521
    6. 's' → logprob: -5.9391188621521
    7. 'if' → logprob: -5.9391188621521
    8. '[' → logprob: -6.0641188621521
    9. '	if' → logprob: -6.1891188621521
    10. '    
' → logprob: -6.6891188621521

Token 488: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.22955133020877838
    2. ' if' → logprob: -1.8545513153076172
    3. 's' → logprob: -3.354551315307617
    4. ' s' → logprob: -4.604551315307617
    5. '   ' → logprob: -6.229551315307617
    6. 'for' → logprob: -7.604551315307617
    7. '
' → logprob: -8.229551315307617
    8. ' for' → logprob: -8.354551315307617
    9. 'dfs' → logprob: -8.479551315307617
    10. ' dfs' → logprob: -9.229551315307617

Token 489: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.0010092307347804308
    2. ' nd' → logprob: -7.001009464263916
    3. 'not' → logprob: -9.501008987426758
    4. '(nd' → logprob: -11.376008987426758
    5. ' not' → logprob: -11.501008987426758
    6. '   ' → logprob: -14.501008987426758
    7. 'len' → logprob: -14.876008987426758
    8. ' ' → logprob: -15.501008987426758
    9. '  ' → logprob: -15.876008987426758
    10. 'ndl' → logprob: -16.876008987426758

Token 490: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008772692643105984
    2. ':' → logprob: -5.008772850036621
    3. ' is' → logprob: -6.883772850036621
    4. 'and' → logprob: -7.633772850036621
    5. ' and' → logprob: -8.133772850036621
    6. ':
' → logprob: -9.133772850036621
    7. ' ' → logprob: -10.383772850036621
    8. 'is' → logprob: -10.633772850036621
    9. '.' → logprob: -11.508772850036621
    10. 'else' → logprob: -11.508772850036621

Token 491: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0059726424515247345
    2. 'None' → logprob: -5.880972862243652
    3. '1' → logprob: -6.380972862243652
    4. '[' → logprob: -6.630972862243652
    5. ' ' → logprob: -9.630972862243652
    6. '2' → logprob: -10.880972862243652
    7. 'not' → logprob: -11.130972862243652
    8. ' None' → logprob: -11.505972862243652
    9. ']' → logprob: -11.880972862243652
    10. ')' → logprob: -12.255972862243652

Token 492: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6441076993942261
    2. ' is' → logprob: -1.269107699394226
    3. '):' → logprob: -1.769107699394226
    4. ')' → logprob: -5.269107818603516
    5. '[' → logprob: -5.394107818603516
    6. ']:' → logprob: -5.519107818603516
    7. ' and' → logprob: -6.269107818603516
    8. 'is' → logprob: -6.394107818603516
    9. 'and' → logprob: -6.394107818603516
    10. '):
' → logprob: -6.394107818603516

Token 493: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5873228311538696
    2. '       ' → logprob: -1.0873228311538696
    3. ' s' → logprob: -2.46232271194458
    4. ' dfs' → logprob: -4.33732271194458
    5. '	       ' → logprob: -5.96232271194458
    6. '   ' → logprob: -6.96232271194458
    7. ',' → logprob: -7.08732271194458
    8. '<|end|>' → logprob: -7.08732271194458
    9. '	   ' → logprob: -7.33732271194458
    10. '        ' → logprob: -7.46232271194458

Token 494: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -0.1798924058675766
    2. ' dfs' → logprob: -2.3048923015594482
    3. 's' → logprob: -3.0548923015594482
    4. ' s' → logprob: -4.179892539978027
    5. '       ' → logprob: -6.804892539978027
    6. '   ' → logprob: -7.429892539978027
    7. 'def' → logprob: -8.179892539978027
    8. '           ' → logprob: -8.929892539978027
    9. '
' → logprob: -10.054892539978027
    10. 'v' → logprob: -10.179892539978027

Token 495: '(nd' (ID: 131841)
  Prédit: '(nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nd' → logprob: -7.896309739408025e-07
    2. 'nd' → logprob: -14.875000953674316
    3. '(n' → logprob: -15.875000953674316
    4. '(' → logprob: -15.875000953674316
    5. ' (' → logprob: -17.0
    6. '(nx' → logprob: -18.25
    7. '(nt' → logprob: -18.25
    8. '(ns' → logprob: -18.75
    9. '(nb' → logprob: -18.875
    10. '(
' → logprob: -19.25

Token 496: '[' (ID: 58)
  Prédit: '(nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nd' → logprob: -0.22643829882144928
    2. '[' → logprob: -1.601438283920288
    3. 'nd' → logprob: -7.601438522338867
    4. '(' → logprob: -8.226438522338867
    5. '(n' → logprob: -9.726438522338867
    6. ' (' → logprob: -9.851438522338867
    7. '0' → logprob: -10.101438522338867
    8. ' nd' → logprob: -10.476438522338867
    9. ')' → logprob: -11.226438522338867
    10. ',' → logprob: -11.226438522338867

Token 497: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001468067930545658
    2. '[' → logprob: -8.875146865844727
    3. ' ' → logprob: -12.625146865844727
    4. 'nd' → logprob: -12.750146865844727
    5. '(' → logprob: -15.250146865844727
    6. '   ' → logprob: -16.125146865844727
    7. ']' → logprob: -16.625146865844727
    8. ')' → logprob: -16.875146865844727
    9. '(nd' → logprob: -16.875146865844727
    10. '.' → logprob: -17.000146865844727

Token 498: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10028485208749771
    2. ')' → logprob: -2.3502848148345947
    3. ')
' → logprob: -10.475284576416016
    4. '())
' → logprob: -10.600284576416016
    5. ' )
' → logprob: -11.475284576416016
    6. ')

' → logprob: -12.225284576416016
    7. '       ' → logprob: -12.850284576416016
    8. '   ' → logprob: -13.100284576416016
    9. ');' → logprob: -13.600284576416016
    10. '())' → logprob: -14.100284576416016

Token 499: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007070897612720728
    2. ' else' → logprob: -5.882071018218994
    3. ' if' → logprob: -6.257071018218994
    4. ' s' → logprob: -7.382071018218994
    5. '<|end|>' → logprob: -7.382071018218994
    6. 'else' → logprob: -7.757071018218994
    7. '   ' → logprob: -8.507070541381836
    8. 's' → logprob: -8.632070541381836
    9. '           ' → logprob: -9.507070541381836
    10. '
' → logprob: -9.757070541381836

Token 500: ' s' (ID: 265)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.010328016243875027
    2. ' if' → logprob: -5.5103278160095215
    3. 's' (adapté à ' s') → logprob: -6.0103278160095215
    4. '       ' → logprob: -6.2603278160095215
    5. '   ' → logprob: -6.5103278160095215
    6. 'else' → logprob: -8.01032829284668
    7. ' s' → logprob: -11.38532829284668
    8. '```' → logprob: -11.51032829284668
    9. ' else' → logprob: -11.63532829284668
    10. '
' → logprob: -11.76032829284668

Token 501: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.26907163858413696
    2. '.append' → logprob: -1.8940715789794922
    3. '0' → logprob: -3.144071578979492
    4. '[' → logprob: -3.394071578979492
    5. '   ' → logprob: -5.769071578979492
    6. '       ' → logprob: -6.269071578979492
    7. '=' → logprob: -7.144071578979492
    8. '(' → logprob: -7.519071578979492
    9. ' ' → logprob: -7.894071578979492
    10. 'if' → logprob: -8.269071578979492

Token 502: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -7.123899558791891e-05
    2. '.' → logprob: -9.62507152557373
    3. ' .' → logprob: -12.75007152557373
    4. '.app' → logprob: -14.12507152557373
    5. 'append' → logprob: -14.12507152557373
    6. '[' → logprob: -14.50007152557373
    7. '.extend' → logprob: -15.75007152557373
    8. '[-' → logprob: -16.000070571899414
    9. '   ' → logprob: -16.750070571899414
    10. ' append' → logprob: -18.500070571899414

Token 503: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.005192605312913656
    2. 'v' → logprob: -6.130192756652832
    3. '("' → logprob: -6.880192756652832
    4. '("("' → logprob: -7.255192756652832
    5. '('' → logprob: -7.505192756652832
    6. '(' → logprob: -8.880192756652832
    7. '(".' → logprob: -9.130192756652832
    8. '"' → logprob: -9.130192756652832
    9. '(str' → logprob: -9.380192756652832
    10. '("+' → logprob: -9.880192756652832

Token 504: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030150657519698143
    2. ')
' → logprob: -3.5301506519317627
    3. '       ' → logprob: -8.155150413513184
    4. '<|end|>' → logprob: -9.655150413513184
    5. ' )' → logprob: -11.905150413513184
    6. '   ' → logprob: -11.905150413513184
    7. ')\' → logprob: -12.155150413513184
    8. ')return' → logprob: -12.405150413513184
    9. ')#' → logprob: -12.405150413513184
    10. ');' → logprob: -12.655150413513184

Token 505: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12787947058677673
    2. '   ' → logprob: -2.1278793811798096
    3. 'if' → logprob: -7.127879619598389
    4. ' if' → logprob: -9.00287914276123
    5. '```' → logprob: -11.37787914276123
    6. '<|end|>' → logprob: -12.12787914276123
    7. '           ' → logprob: -12.50287914276123
    8. 'def' → logprob: -13.00287914276123
    9. '	if' → logprob: -14.12787914276123
    10. '
' → logprob: -14.50287914276123

Token 506: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.005639601498842239
    2. '       ' → logprob: -5.255639553070068
    3. ' if' → logprob: -8.505640029907227
    4. '   ' → logprob: -8.505640029907227
    5. '	if' → logprob: -14.130640029907227
    6. '```' → logprob: -15.130640029907227
    7. '           ' → logprob: -16.505640029907227
    8. '
' → logprob: -17.630640029907227
    9. '    ' → logprob: -18.505640029907227
    10. '      ' → logprob: -18.755640029907227

Token 507: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.25198403000831604
    2. 'nd' → logprob: -1.5019840002059937
    3. '(nd' → logprob: -9.876983642578125
    4. '   ' → logprob: -12.876983642578125
    5. '.nd' → logprob: -15.626983642578125
    6. '  ' → logprob: -15.751983642578125
    7. 'ndl' → logprob: -15.751983642578125
    8. '    ' → logprob: -16.126983642578125
    9. 'n' → logprob: -16.251983642578125
    10. ' ' → logprob: -16.501983642578125

Token 508: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6240566083070007e-06
    2. '```' → logprob: -14.875001907348633
    3. '1' → logprob: -15.000001907348633
    4. '   ' → logprob: -15.125001907348633
    5. '[
' → logprob: -15.750001907348633
    6. ' [' → logprob: -15.875001907348633
    7. 'and' → logprob: -16.000001907348633
    8. 'def' → logprob: -16.375001907348633
    9. ':' → logprob: -17.375001907348633
    10. '.' → logprob: -17.750001907348633

Token 509: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6931732892990112
    2. '[' → logprob: -0.6931732892990112
    3. ' ' → logprob: -11.8181734085083
    4. '(' → logprob: -12.0681734085083
    5. '0' → logprob: -12.0681734085083
    6. '   ' → logprob: -12.8181734085083
    7. '```' → logprob: -13.0681734085083
    8. '#' → logprob: -15.3181734085083
    9. '[
' → logprob: -15.3181734085083
    10. '`' → logprob: -15.5681734085083

Token 510: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3053979277610779
    2. ']:' → logprob: -2.0553979873657227
    3. '):
' → logprob: -2.8053979873657227
    4. ':' → logprob: -2.9303979873657227
    5. '[' → logprob: -4.305397987365723
    6. ']:
' → logprob: -5.680397987365723
    7. '>:' → logprob: -6.680397987365723
    8. ':
' → logprob: -7.180397987365723
    9. '```' → logprob: -7.180397987365723
    10. '<|end|>' → logprob: -7.805397987365723

Token 511: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010091898031532764
    2. ' dfs' → logprob: -5.135091781616211
    3. '       ' → logprob: -5.635091781616211
    4. 'dfs' → logprob: -7.635091781616211
    5. '   ' → logprob: -9.385091781616211
    6. '          ' → logprob: -11.885091781616211
    7. '               ' → logprob: -12.635091781616211
    8. '         ' → logprob: -13.510091781616211
    9. '        ' → logprob: -13.760091781616211
    10. 'd' → logprob: -14.010091781616211

Token 512: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -0.004081247374415398
    2. ' dfs' → logprob: -5.5040812492370605
    3. '       ' → logprob: -13.504080772399902
    4. '           ' → logprob: -14.129080772399902
    5. '   ' → logprob: -14.629080772399902
    6. 'df' → logprob: -16.37908172607422
    7. 'd' → logprob: -16.50408172607422
    8. '
' → logprob: -16.87908172607422
    9. '```' → logprob: -17.37908172607422
    10. '               ' → logprob: -18.12908172607422

Token 513: '(nd' (ID: 131841)
  Prédit: '(nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nd' → logprob: -1.9361264946837764e-07
    2. 'nd' → logprob: -16.625
    3. '(' → logprob: -17.875
    4. '(rd' → logprob: -18.25
    5. '(nx' → logprob: -18.5
    6. '(nn' → logprob: -18.5
    7. '(nt' → logprob: -19.0
    8. '(n' → logprob: -19.375
    9. '(ns' → logprob: -20.125
    10. '(nb' → logprob: -20.625

Token 514: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2127087504486553e-05
    2. '(' → logprob: -11.625021934509277
    3. '(nd' → logprob: -11.625021934509277
    4. 'nd' → logprob: -13.000021934509277
    5. '1' → logprob: -13.500021934509277
    6. ')' → logprob: -15.500021934509277
    7. '```' → logprob: -16.125022888183594
    8. ')[' → logprob: -16.500022888183594
    9. '[
' → logprob: -16.750022888183594
    10. '   ' → logprob: -17.125022888183594

Token 515: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003608505241572857
    2. '[' → logprob: -5.628608703613281
    3. 'nd' → logprob: -12.003608703613281
    4. '(' → logprob: -14.378608703613281
    5. ' ' → logprob: -14.503608703613281
    6. '   ' → logprob: -15.003608703613281
    7. ')' → logprob: -15.628608703613281
    8. ']' → logprob: -15.878608703613281
    9. '(nd' → logprob: -16.12860870361328
    10. '```' → logprob: -16.37860870361328

Token 516: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004309076175559312
    2. '[' → logprob: -9.000431060791016
    3. '(nd' → logprob: -9.250431060791016
    4. ')
' → logprob: -9.500431060791016
    5. '(' → logprob: -10.250431060791016
    6. '])' → logprob: -10.375431060791016
    7. ')])' → logprob: -10.750431060791016
    8. '       ' → logprob: -11.250431060791016
    9. '))' → logprob: -11.375431060791016
    10. ')]' → logprob: -12.125431060791016

Token 517: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14582416415214539
    2. 'dfs' → logprob: -2.8958241939544678
    3. 'debug' → logprob: -3.2708241939544678
    4. 's' → logprob: -3.2708241939544678
    5. '<|end|>' → logprob: -6.895823955535889
    6. '
' → logprob: -7.020823955535889
    7. '       ' → logprob: -7.145823955535889
    8. 'read' → logprob: -8.395824432373047
    9. 'root' → logprob: -8.395824432373047
    10. 'def' → logprob: -8.645824432373047

Token 518: ' dfs' (ID: 51252)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 519: '(root' (ID: 17410)
  Prédit: '(root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(root' → logprob: -0.00015860427811276168
    2. 'root' → logprob: -8.750158309936523
    3. ' root' → logprob: -16.750158309936523
    4. '[root' → logprob: -17.625158309936523
    5. '=root' → logprob: -19.375158309936523
    6. '(' → logprob: -20.000158309936523
    7. '	root' → logprob: -20.125158309936523
    8. '(ROOT' → logprob: -20.125158309936523
    9. '/root' → logprob: -20.875158309936523
    10. '_root' → logprob: -21.375158309936523

Token 520: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028093906585127115
    2. ')
' → logprob: -5.877809524536133
    3. ')return' → logprob: -13.252809524536133
    4. '   ' → logprob: -14.002809524536133
    5. ' )' → logprob: -14.252809524536133
    6. ')#' → logprob: -15.002809524536133
    7. '))' → logprob: -15.377809524536133
    8. '())' → logprob: -15.502809524536133
    9. ')
' → logprob: -16.002809524536133
    10. ')

' → logprob: -16.502809524536133

Token 521: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009858791716396809
    2. 'write' → logprob: -5.75985860824585
    3. ' write' → logprob: -6.00985860824585
    4. '<|end|>' → logprob: -6.50985860824585
    5. '
' → logprob: -7.25985860824585
    6. 's' → logprob: -7.63485860824585
    7. ')' → logprob: -8.009859085083008
    8. ' return' → logprob: -8.009859085083008
    9. 'return' → logprob: -8.634859085083008
    10. 'print' → logprob: -8.884859085083008

Token 522: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5697451829910278
    2. 'write' → logprob: -1.3197451829910278
    3. 'print' → logprob: -1.9447451829910278
    4. 's' → logprob: -4.194745063781738
    5. ' return' → logprob: -5.694745063781738
    6. '   ' → logprob: -5.694745063781738
    7. 'for' → logprob: -7.069745063781738
    8. ' write' → logprob: -7.194745063781738
    9. 'assert' → logprob: -8.319745063781738
    10. 'if' → logprob: -9.319745063781738

Token 523: ' "' (ID: 392)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.21116146445274353
    2. '(s' → logprob: -1.961161494255066
    3. 'len' → logprob: -4.3361616134643555
    4. '"' → logprob: -4.5861616134643555
    5. '"\' → logprob: -4.8361616134643555
    6. '(len' → logprob: -5.0861616134643555
    7. '"s' → logprob: -5.7111616134643555
    8. '''.' → logprob: -6.0861616134643555
    9. '[s' → logprob: -6.5861616134643555
    10. '(' → logprob: -7.0861616134643555

Token 524: ' ".' (ID: 11730)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.19055499136447906
    2. ''' → logprob: -2.8155550956726074
    3. '",".' → logprob: -3.0655550956726074
    4. 's' → logprob: -3.9405550956726074
    5. '",' → logprob: -4.565555095672607
    6. '".' → logprob: -4.690555095672607
    7. '''.' → logprob: -5.065555095672607
    8. ' "' → logprob: -5.315555095672607
    9. '"s' → logprob: -5.565555095672607
    10. ' "".' → logprob: -6.065555095672607

Token 525: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -4.36574100604048e-06
    2. ' join' → logprob: -12.750004768371582
    3. '".' → logprob: -14.500004768371582
    4. '.join' → logprob: -15.500004768371582
    5. '.' → logprob: -15.750004768371582
    6. '"' → logprob: -16.000003814697266
    7. 'j' → logprob: -16.125003814697266
    8. 'jo' → logprob: -16.500003814697266
    9. ''.' → logprob: -16.750003814697266
    10. '''.' → logprob: -17.625003814697266

Token 526: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.000433291686931625
    2. 's' → logprob: -7.750433444976807
    3. '(' → logprob: -13.500432968139648
    4. '([' → logprob: -14.000432968139648
    5. '((' → logprob: -15.375432968139648
    6. '   ' → logprob: -17.00043296813965
    7. '(
' → logprob: -17.12543296813965
    8. ' (' → logprob: -17.62543296813965
    9. '(map' → logprob: -17.62543296813965
    10. '(sorted' → logprob: -17.75043296813965

Token 527: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026920633390545845
    2. '(s' → logprob: -4.276920795440674
    3. '1' → logprob: -4.401920795440674
    4. '(' → logprob: -8.026920318603516
    5. '([' → logprob: -9.401920318603516
    6. '[' → logprob: -12.776920318603516
    7. ')' → logprob: -13.651920318603516
    8. '01' → logprob: -13.651920318603516
    9. '(str' → logprob: -13.776920318603516
    10. '())' → logprob: -14.026920318603516

Token 528: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003323388285934925
    2. '())' → logprob: -5.878323554992676
    3. ')+' → logprob: -8.628323554992676
    4. '()' → logprob: -8.878323554992676
    5. ' )' → logprob: -9.378323554992676
    6. '+' → logprob: -10.128323554992676
    7. '[' → logprob: -10.128323554992676
    8. ' +' → logprob: -12.128323554992676
    9. '()+' → logprob: -12.253323554992676
    10. '[::-' → logprob: -12.628323554992676

Token 529: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.015239152126014233
    2. ' "' → logprob: -4.265239238739014
    3. 's' → logprob: -7.140239238739014
    4. '"s' → logprob: -8.890238761901855
    5. ' s' → logprob: -9.140238761901855
    6. 'None' → logprob: -11.890238761901855
    7. '("' → logprob: -11.890238761901855
    8. ' None' → logprob: -12.515238761901855
    9. ' ' → logprob: -12.515238761901855
    10. ''' → logprob: -12.890238761901855

Token 530: ' ".' (ID: 11730)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0069417450577020645
    2. 's' → logprob: -5.381941795349121
    3. ' "' → logprob: -6.256941795349121
    4. '"s' → logprob: -8.131941795349121
    5. ' s' → logprob: -9.256941795349121
    6. ''' → logprob: -12.381941795349121
    7. '0' → logprob: -13.006941795349121
    8. '
' → logprob: -13.506941795349121
    9. '"\' → logprob: -14.256941795349121
    10. ''s' → logprob: -14.256941795349121

Token 531: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -2.935296834039036e-06
    2. ' join' → logprob: -13.12500286102295
    3. '(join' → logprob: -14.75000286102295
    4. '.join' → logprob: -15.00000286102295
    5. 'jo' → logprob: -17.500003814697266
    6. '".' → logprob: -17.750003814697266
    7. '"' → logprob: -18.250003814697266
    8. '```' → logprob: -18.375003814697266
    9. '0' → logprob: -19.000003814697266
    10. '.' → logprob: -19.125003814697266

Token 532: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -3.1424973713001236e-05
    2. 's' → logprob: -10.375031471252441
    3. '(' → logprob: -16.625030517578125
    4. ' (' → logprob: -16.750030517578125
    5. '   ' → logprob: -18.000030517578125
    6. '([' → logprob: -18.125030517578125
    7. '```' → logprob: -19.000030517578125
    8. '((' → logprob: -19.250030517578125
    9. '(
' → logprob: -19.875030517578125
    10. ' ' → logprob: -19.875030517578125

Token 533: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. '(s' → logprob: -15.000000953674316
    3. 's' → logprob: -15.625000953674316
    4. '[' → logprob: -17.25
    5. '(' → logprob: -17.75
    6. '1' → logprob: -19.625
    7. ')' → logprob: -21.0
    8. 'o' → logprob: -21.125
    9. '۰' → logprob: -21.375
    10. '
' → logprob: -21.5

Token 534: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001214237418025732
    2. '())' → logprob: -9.250121116638184
    3. '))' → logprob: -11.500121116638184
    4. '[' → logprob: -12.000121116638184
    5. ')+' → logprob: -12.750121116638184
    6. '()' → logprob: -13.125121116638184
    7. ')
' → logprob: -14.000121116638184
    8. ')[' → logprob: -14.375121116638184
    9. '<|end|>' → logprob: -14.500121116638184
    10. ' )' → logprob: -14.625121116638184

Token 535: 'M' (ID: 44)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 536: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0562557689845562
    2. ' =' → logprob: -3.05625581741333
    3. '=int' → logprob: -6.18125581741333
    4. '=input' → logprob: -6.55625581741333
    5. '=sys' → logprob: -6.93125581741333
    6. ',' → logprob: -7.43125581741333
    7. '=[]' → logprob: -7.93125581741333
    8. '=None' → logprob: -8.431255340576172
    9. 'ain' → logprob: -8.431255340576172
    10. 'A' → logprob: -8.806255340576172

Token 537: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0042868610471487045
    2. '0' → logprob: -6.379286766052246
    3. '10' → logprob: -7.004286766052246
    4. '100' → logprob: -7.254286766052246
    5. '[]' → logprob: -7.504286766052246
    6. '[int' → logprob: -8.754286766052246
    7. '1' → logprob: -9.129286766052246
    8. ' int' → logprob: -9.754286766052246
    9. 'deque' → logprob: -10.629286766052246
    10. '{}' → logprob: -11.504286766052246

Token 538: '(read' (ID: 45738)
  Prédit: '(read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.6755269169807434
    2. '(input' → logprob: -0.9255269169807434
    3. '()' → logprob: -3.0505268573760986
    4. 'read' → logprob: -3.3005268573760986
    5. 'input' → logprob: -4.675527095794678
    6. '(sys' → logprob: -6.925527095794678
    7. '=input' → logprob: -9.42552661895752
    8. '.readline' → logprob: -9.55052661895752
    9. 'sys' → logprob: -10.30052661895752
    10. ' readline' → logprob: -10.80052661895752

Token 539: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00698732677847147
    2. 'ine' → logprob: -5.13198709487915
    3. '())' → logprob: -7.63198709487915
    4. '().' → logprob: -8.381987571716309
    5. '.readline' → logprob: -8.631987571716309
    6. '()' → logprob: -9.506987571716309
    7. '()
' → logprob: -10.756987571716309
    8. 'input' → logprob: -10.881987571716309
    9. 'LINE' → logprob: -11.381987571716309
    10. 'in' → logprob: -12.006987571716309

Token 540: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.012073731049895287
    2. '().' → logprob: -5.012073516845703
    3. '()' → logprob: -5.262073516845703
    4. '())
' → logprob: -8.887073516845703
    5. ')' → logprob: -11.512073516845703
    6. '()
' → logprob: -12.387073516845703
    7. '(' → logprob: -12.887073516845703
    8. '())

' → logprob: -13.137073516845703
    9. ' ())' → logprob: -13.262073516845703
    10. '())
' → logprob: -15.637073516845703

Token 541: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00028159678913652897
    2. 'root' → logprob: -8.62528133392334
    3. 'import' → logprob: -10.12528133392334
    4. ' for' → logprob: -11.00028133392334
    5. 'results' → logprob: -11.00028133392334
    6. 'res' → logprob: -11.50028133392334
    7. 'result' → logprob: -11.62528133392334
    8. 'from' → logprob: -12.87528133392334
    9. 'ans' → logprob: -13.12528133392334
    10. 'output' → logprob: -13.75028133392334

Token 542: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3165273368358612
    2. ' =' → logprob: -1.3165273666381836
    3. '=[]' → logprob: -6.066527366638184
    4. 's' → logprob: -7.066527366638184
    5. '=[]
' → logprob: -9.941527366638184
    6. '[]' → logprob: -11.691527366638184
    7. '={}' → logprob: -12.316527366638184
    8. '_' → logprob: -12.691527366638184
    9. ',' → logprob: -12.691527366638184
    10. ' ' → logprob: -12.941527366638184

Token 543: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.03833797946572304
    2. '0' → logprob: -3.4133379459381104
    3. '""' → logprob: -5.5383381843566895
    4. '[]
' → logprob: -7.6633381843566895
    5. '"' → logprob: -9.663337707519531
    6. 'deque' → logprob: -9.788337707519531
    7. '[' → logprob: -9.913337707519531
    8. '''' → logprob: -9.913337707519531
    9. ' []' → logprob: -11.038337707519531
    10. '["' → logprob: -11.538337707519531

Token 544: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00017362393555231392
    2. 'root' → logprob: -8.750173568725586
    3. 'import' → logprob: -12.125173568725586
    4. 'from' → logprob: -12.500173568725586
    5. 'stack' → logprob: -13.625173568725586
    6. 'q' → logprob: -14.250173568725586
    7. ' for' → logprob: -14.500173568725586
    8. 'tre' → logprob: -14.500173568725586
    9. 'tree' → logprob: -14.500173568725586
    10. 'queries' → logprob: -14.625173568725586

Token 545: ' m' (ID: 284)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06273232400417328
    2. ' _' → logprob: -2.812732219696045
    3. ' i' → logprob: -7.562732219696045
    4. '_i' → logprob: -8.437732696533203
    5. 'i' → logprob: -10.687732696533203
    6. ' line' → logprob: -13.062732696533203
    7. '_line' → logprob: -13.312732696533203
    8. ' ' → logprob: -13.562732696533203
    9. '_=' → logprob: -15.062732696533203
    10. ' range' → logprob: -16.437732696533203

Token 546: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0903216153383255
    2. 'in' → logprob: -2.4653215408325195
    3. '_' → logprob: -6.7153215408325195
    4. 'range' → logprob: -9.59032154083252
    5. ' ' → logprob: -9.71532154083252
    6. ' _' → logprob: -10.84032154083252
    7. 's' → logprob: -11.96532154083252
    8. 'm' → logprob: -12.84032154083252
    9. ' range' → logprob: -13.09032154083252
    10. 'n' → logprob: -13.09032154083252

Token 547: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005541055579669774
    2. ' range' → logprob: -7.500554084777832
    3. '_' → logprob: -14.750554084777832
    4. 'M' → logprob: -14.875554084777832
    5. 'in' → logprob: -16.00055503845215
    6. '(range' → logprob: -16.37555503845215
    7. '	range' → logprob: -16.87555503845215
    8. 'read' → logprob: -17.87555503845215
    9. ' ' → logprob: -18.00055503845215
    10. 'r' → logprob: -18.25055503845215

Token 548: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.11597520858049393
    2. 'M' → logprob: -3.2409751415252686
    3. ' M' → logprob: -3.4909751415252686
    4. '(' → logprob: -3.9909751415252686
    5. ' range' → logprob: -4.615975379943848
    6. 'range' → logprob: -5.115975379943848
    7. ' in' → logprob: -5.990975379943848
    8. 'in' → logprob: -6.615975379943848
    9. ' (' → logprob: -6.865975379943848
    10. '(range' → logprob: -7.990975379943848

Token 549: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05610385909676552
    2. ' ):' → logprob: -3.9311039447784424
    3. ',' → logprob: -4.306103706359863
    4. ':' → logprob: -4.806103706359863
    5. '):
' → logprob: -5.056103706359863
    6. ')' → logprob: -5.431103706359863
    7. '(' → logprob: -7.056103706359863
    8. ' :' → logprob: -7.681103706359863
    9. '():' → logprob: -8.056103706359863
    10. '=' → logprob: -8.556103706359863

Token 550: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24989542365074158
    2. '	line' → logprob: -2.3748953342437744
    3. 'line' → logprob: -2.9998953342437744
    4. 'cmd' → logprob: -3.3748953342437744
    5. ' line' → logprob: -4.8748955726623535
    6. 'a' → logprob: -5.1248955726623535
    7. 't' → logprob: -5.4998955726623535
    8. 'l' → logprob: -5.4998955726623535
    9. '	cmd' → logprob: -5.7498955726623535
    10. 's' → logprob: -5.8748955726623535

Token 551: ' cmd' (ID: 11704)
  Prédit: 'cmd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmd' (adapté à ' cmd') → logprob: -0.13075695931911469
    2. 'line' → logprob: -3.2557568550109863
    3. 'q' → logprob: -3.3807568550109863
    4. 'op' → logprob: -3.8807568550109863
    5. 'l' → logprob: -4.255756855010986
    6. 't' → logprob: -4.880756855010986
    7. 'a' → logprob: -6.755756855010986
    8. 'Q' → logprob: -6.755756855010986
    9. 'tmp' → logprob: -7.005756855010986
    10. 's' → logprob: -7.380756855010986

Token 552: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5286785364151001
    2. ' =' → logprob: -1.5286785364151
    3. '=' → logprob: -1.6536785364151
    4. '   ' → logprob: -6.7786784172058105
    5. '=line' → logprob: -7.6536784172058105
    6. ',line' → logprob: -8.153678894042969
    7. ' ,' → logprob: -8.528678894042969
    8. 'line' → logprob: -9.528678894042969
    9. ' ' → logprob: -9.903678894042969
    10. '[' → logprob: -10.278678894042969

Token 553: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.40544208884239197
    2. '*v' → logprob: -1.1554421186447144
    3. '*k' → logprob: -5.405442237854004
    4. 'val' → logprob: -5.405442237854004
    5. '*x' → logprob: -5.780442237854004
    6. '*s' → logprob: -6.280442237854004
    7. '*n' → logprob: -7.280442237854004
    8. '*a' → logprob: -7.530442237854004
    9. ' *' → logprob: -7.655442237854004
    10. '*l' → logprob: -8.030442237854004

Token 554: 'V' (ID: 53)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.022305579856038094
    2. 'arg' → logprob: -4.272305488586426
    3. 'rest' → logprob: -5.272305488586426
    4. 'vals' → logprob: -6.897305488586426
    5. 'line' → logprob: -7.022305488586426
    6. 'argv' → logprob: -8.397305488586426
    7. 'val' → logprob: -8.647305488586426
    8. 'params' → logprob: -9.022305488586426
    9. 'a' → logprob: -9.022305488586426
    10. ' args' → logprob: -9.272305488586426

Token 555: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015105740167200565
    2. ' =' → logprob: -6.5015106201171875
    3. 'al' → logprob: -12.751510620117188
    4. '=line' → logprob: -12.751510620117188
    5. 's' → logprob: -13.876510620117188
    6. '=input' → logprob: -14.876510620117188
    7. 'als' → logprob: -15.251510620117188
    8. '=sys' → logprob: -15.376510620117188
    9. '   ' → logprob: -15.751510620117188
    10. '_=' → logprob: -16.001510620117188

Token 556: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05456220358610153
    2. ' =' → logprob: -3.0545620918273926
    3. '_' → logprob: -5.304562091827393
    4. '_=' → logprob: -7.054562091827393
    5. '=line' → logprob: -10.05456256866455
    6. '*' → logprob: -11.05456256866455
    7. '\n' → logprob: -11.55456256866455
    8. '
' → logprob: -11.67956256866455
    9. ' ' → logprob: -11.92956256866455
    10. ' 
' → logprob: -12.42956256866455

Token 557: ' readline' (ID: 179561)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.062048573046922684
    2. 'map' → logprob: -2.8120486736297607
    3. ' readline' → logprob: -9.56204891204834
    4. 'list' → logprob: -11.81204891204834
    5. ' map' → logprob: -13.31204891204834
    6. '(read' → logprob: -13.68704891204834
    7. ' read' → logprob: -16.187047958374023
    8. '.readline' → logprob: -16.562047958374023
    9. 'readonly' → logprob: -16.937047958374023
    10. '[' → logprob: -17.062047958374023

Token 558: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.5716304410016164e-05
    2. '()' → logprob: -10.250035285949707
    3. ' ().' → logprob: -15.500035285949707
    4. '.strip' → logprob: -18.125036239624023
    5. '()[' → logprob: -19.000036239624023
    6. '()
' → logprob: -19.250036239624023
    7. '(' → logprob: -19.500036239624023
    8. '.rstrip' → logprob: -20.750036239624023
    9. '()\' → logprob: -20.875036239624023
    10. '[:-' → logprob: -21.875036239624023

Token 559: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.38749217987060547
    2. 'split' → logprob: -1.1374921798706055
    3. 'rstrip' → logprob: -7.3874921798706055
    4. ' strip' → logprob: -13.637492179870605
    5. ' split' → logprob: -14.262492179870605
    6. '(split' → logprob: -16.512493133544922
    7. 'decode' → logprob: -17.637493133544922
    8. '(strip' → logprob: -18.262493133544922
    9. 'spl' → logprob: -18.762493133544922
    10. '-strip' → logprob: -19.637493133544922

Token 560: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2122683823108673
    2. '
' → logprob: -2.337268352508545
    3. '    
' → logprob: -3.462268352508545
    4. '<|end|>' → logprob: -3.462268352508545
    5. ' 
' → logprob: -4.837268352508545
    6. '  
' → logprob: -5.087268352508545
    7. ' ' → logprob: -5.337268352508545
    8. '  ' → logprob: -5.712268352508545
    9. '   
' → logprob: -6.087268352508545
    10. '<|end|>' → logprob: -6.462268352508545

Token 561: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.739676833152771
    2. ' if' → logprob: -0.864676833152771
    3. '<|end|>' → logprob: -2.8646769523620605
    4. 'if' → logprob: -3.6146769523620605
    5. '
' → logprob: -4.6146769523620605
    6. ' 
' → logprob: -5.9896769523620605
    7. ' ' → logprob: -6.1146769523620605
    8. '    
' → logprob: -6.7396769523620605
    9. '  ' → logprob: -7.6146769523620605
    10. '  
' → logprob: -7.9896769523620605

Token 562: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3266035318374634
    2. ' if' → logprob: -1.7016035318374634
    3. 'v' → logprob: -3.076603412628174
    4. ' val' → logprob: -3.701603412628174
    5. 'val' → logprob: -3.701603412628174
    6. ' v' → logprob: -7.326603412628174
    7. '   ' → logprob: -10.576603889465332
    8. ' ' → logprob: -11.201603889465332
    9. 'd' → logprob: -11.326603889465332
    10. 'i' → logprob: -11.451603889465332

Token 563: ' cmd' (ID: 11704)
  Prédit: 'cmd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmd' → logprob: -0.2519310414791107
    2. ' cmd' → logprob: -1.501931071281433
    3. '(cmd' → logprob: -13.751931190490723
    4. '	cmd' → logprob: -14.251931190490723
    5. '   ' → logprob: -16.876930236816406
    6. ' ' → logprob: -17.126930236816406
    7. '.cmd' → logprob: -17.876930236816406
    8. '  ' → logprob: -17.876930236816406
    9. 'command' → logprob: -20.001930236816406
    10. '    ' → logprob: -20.501930236816406

Token 564: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14491695165634155
    2. ' ==' → logprob: -2.0199170112609863
    3. '=='' → logprob: -6.894917011260986
    4. '=="' → logprob: -7.394917011260986
    5. '[' → logprob: -7.769917011260986
    6. '=' → logprob: -9.394916534423828
    7. '==
' → logprob: -10.269916534423828
    8. 'in' → logprob: -10.519916534423828
    9. '===' → logprob: -11.144916534423828
    10. ' =='' → logprob: -11.894916534423828

Token 565: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.06162499263882637
    2. '"' → logprob: -3.8116250038146973
    3. ''I' → logprob: -3.9366250038146973
    4. ''i' → logprob: -4.436625003814697
    5. ''ins' → logprob: -5.936625003814697
    6. '"I' → logprob: -6.311625003814697
    7. ''b' → logprob: -7.061625003814697
    8. ''a' → logprob: -7.561625003814697
    9. ''+' → logprob: -9.561624526977539
    10. 'I' → logprob: -9.811624526977539

Token 566: 'print' (ID: 1598)
  Prédit: 'insert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'insert' → logprob: -0.07122346758842468
    2. '"' → logprob: -3.946223497390747
    3. 'I' → logprob: -4.071223258972168
    4. 'i' → logprob: -4.196223258972168
    5. 'ins' → logprob: -5.571223258972168
    6. 'INSERT' → logprob: -5.821223258972168
    7. 'add' → logprob: -6.071223258972168
    8. 'find' → logprob: -6.196223258972168
    9. '+' → logprob: -6.821223258972168
    10. ''' → logprob: -7.071223258972168

Token 567: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.5375204682350159
    2. '":
' → logprob: -0.9125204682350159
    3. '"' → logprob: -4.412520408630371
    4. '()' → logprob: -7.412520408630371
    5. '():
' → logprob: -8.037520408630371
    6. '":
' → logprob: -8.287520408630371
    7. '(":' → logprob: -8.287520408630371
    8. ':' → logprob: -8.412520408630371
    9. '("' → logprob: -9.037520408630371
    10. '__":
' → logprob: -9.412520408630371

Token 568: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11833545565605164
    2. ' write' → logprob: -2.743335485458374
    3. ' print' → logprob: -4.493335247039795
    4. ':
' → logprob: -4.618335247039795
    5. ':' → logprob: -4.618335247039795
    6. ' s' → logprob: -5.243335247039795
    7. '
' → logprob: -5.618335247039795
    8. ',' → logprob: -6.368335247039795
    9. ' if' → logprob: -6.493335247039795
    10. 'write' → logprob: -6.618335247039795

Token 569: ' ans' (ID: 3345)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2988901436328888
    2. 'a' → logprob: -1.7988901138305664
    3. 'in' → logprob: -4.173890113830566
    4. 'p' → logprob: -4.548890113830566
    5. 'l' → logprob: -4.673890113830566
    6. 'out' → logprob: -4.798890113830566
    7. 'r' → logprob: -4.923890113830566
    8. 'o' → logprob: -5.048890113830566
    9. 'pre' → logprob: -5.048890113830566
    10. 'ans' (adapté à ' ans') → logprob: -5.423890113830566

Token 570: '.extend' (ID: 34151)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0030449775513261557
    2. '.' → logprob: -6.503045082092285
    3. '.extend' → logprob: -6.503045082092285
    4. '+=' → logprob: -10.378045082092285
    5. 'append' → logprob: -12.128045082092285
    6. ' +=' → logprob: -12.378045082092285
    7. ' .' → logprob: -14.628045082092285
    8. '.=' → logprob: -15.003045082092285
    9. '_append' → logprob: -15.003045082092285
    10. '.ap' → logprob: -15.503045082092285

Token 571: '(debug' (ID: 94971)
  Prédit: '(debug'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(debug' → logprob: -0.0021190927363932133
    2. '([' → logprob: -7.127119064331055
    3. 'debug' → logprob: -7.127119064331055
    4. '(list' → logprob: -8.627119064331055
    5. '(["' → logprob: -9.127119064331055
    6. '((' → logprob: -9.252119064331055
    7. '(' → logprob: -9.627119064331055
    8. '([
' → logprob: -10.877119064331055
    9. '(("' → logprob: -11.377119064331055
    10. '(
' → logprob: -11.627119064331055

Token 572: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.014678861014544964
    2. '()' → logprob: -4.264678955078125
    3. '())
' → logprob: -7.764678955078125
    4. '()))' → logprob: -9.889678955078125
    5. ')' → logprob: -11.139678955078125
    6. '()
' → logprob: -11.389678955078125
    7. '()]' → logprob: -12.639678955078125
    8. ' ())' → logprob: -12.764678955078125
    9. '();)' → logprob: -13.014678955078125
    10. '()[' → logprob: -13.139678955078125

Token 573: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006880098371766508
    2. '       ' → logprob: -7.625688076019287
    3. '<|end|>' → logprob: -9.125687599182129
    4. '
' → logprob: -10.125687599182129
    5. 'elif' → logprob: -11.125687599182129
    6. ' elif' → logprob: -11.875687599182129
    7. 'continue' → logprob: -12.250687599182129
    8. '```' → logprob: -12.375687599182129
    9. '    
' → logprob: -12.625687599182129
    10. ',' → logprob: -12.750687599182129

Token 574: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.17571642994880676
    2. '   ' → logprob: -2.3007164001464844
    3. ' elif' → logprob: -2.8007164001464844
    4. '	elif' → logprob: -9.800716400146484
    5. ' ' → logprob: -10.175716400146484
    6. 'else' → logprob: -10.300716400146484
    7. 'if' → logprob: -11.050716400146484
    8. ' if' → logprob: -11.425716400146484
    9. '
' → logprob: -11.675716400146484
    10. 'el' → logprob: -12.050716400146484

Token 575: ' cmd' (ID: 11704)
  Prédit: ' cmd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cmd' → logprob: -0.1602357029914856
    2. 'cmd' → logprob: -1.9102356433868408
    3. '(cmd' → logprob: -11.785235404968262
    4. '	cmd' → logprob: -13.160235404968262
    5. ' len' → logprob: -14.410235404968262
    6. '.cmd' → logprob: -15.035235404968262
    7. 'len' → logprob: -15.285235404968262
    8. ' ' → logprob: -15.410235404968262
    9. ' cmds' → logprob: -15.535235404968262
    10. ' V' → logprob: -15.785235404968262

Token 576: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31383445858955383
    2. '==' → logprob: -1.3138344287872314
    3. ' in' → logprob: -8.313834190368652
    4. 'in' → logprob: -9.313834190368652
    5. '=' → logprob: -9.438834190368652
    6. '[' → logprob: -9.688834190368652
    7. ' =' → logprob: -10.563834190368652
    8. '=="' → logprob: -10.688834190368652
    9. '===' → logprob: -11.063834190368652
    10. '=='' → logprob: -11.688834190368652

Token 577: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04467693343758583
    2. ' "' → logprob: -3.1696770191192627
    3. '"in' → logprob: -6.794676780700684
    4. '"value' → logprob: -8.294676780700684
    5. ''' → logprob: -8.669676780700684
    6. ' '' → logprob: -10.169676780700684
    7. ' ' → logprob: -10.919676780700684
    8. '"x' → logprob: -11.794676780700684
    9. '"display' → logprob: -11.794676780700684
    10. '"io' → logprob: -12.044676780700684

Token 578: 'find' (ID: 6555)
  Prédit: 'insert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'insert' → logprob: -0.33805379271507263
    2. '"' → logprob: -1.588053822517395
    3. 'find' → logprob: -2.5880537033081055
    4. ''' → logprob: -5.9630537033081055
    5. 'add' → logprob: -6.9630537033081055
    6. 'V' → logprob: -7.3380537033081055
    7. 'I' → logprob: -7.4630537033081055
    8. '"in' → logprob: -7.4630537033081055
    9. 'in' → logprob: -7.7130537033081055
    10. 'i' → logprob: -7.7130537033081055

Token 579: '":
' (ID: 9213)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.1631304025650024
    2. ' V' → logprob: -1.1631304025650024
    3. ' int' → logprob: -1.6631304025650024
    4. '(V' → logprob: -2.663130283355713
    5. '(int' → logprob: -2.913130283355713
    6. '"' → logprob: -3.413130283355713
    7. 'V' → logprob: -4.163130283355713
    8. '(*' → logprob: -5.788130283355713
    9. '":' → logprob: -5.913130283355713
    10. '(' → logprob: -6.538130283355713

Token 580: '       ' (ID: 309)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.7187036871910095
    2. '       ' → logprob: -0.8437036871910095
    3. '   ' → logprob: -3.2187037467956543
    4. 'val' → logprob: -4.718703746795654
    5. '
' → logprob: -4.843703746795654
    6. ' v' → logprob: -4.968703746795654
    7. ' x' → logprob: -5.093703746795654
    8. ' write' → logprob: -5.843703746795654
    9. 'v' → logprob: -6.218703746795654
    10. ' ans' → logprob: -6.718703746795654

Token 581: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.7260943055152893
    2. ' val' → logprob: -1.7260942459106445
    3. 'ans' (adapté à ' ans') → logprob: -2.3510942459106445
    4. 'write' → logprob: -2.6010942459106445
    5. ' write' → logprob: -2.7260942459106445
    6. 'val' → logprob: -2.7260942459106445
    7. '   ' → logprob: -4.1010942459106445
    8. 'v' → logprob: -4.3510942459106445
    9. ' v' → logprob: -4.9760942459106445
    10. ' V' → logprob: -7.7260942459106445

Token 582: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00039039674447849393
    2. '.' → logprob: -8.00039005279541
    3. '.extend' → logprob: -9.87539005279541
    4. 'append' → logprob: -13.37539005279541
    5. ' .' → logprob: -13.50039005279541
    6. '   ' → logprob: -14.75039005279541
    7. '.ap' → logprob: -16.500391006469727
    8. '+=' → logprob: -16.625391006469727
    9. '.app' → logprob: -17.500391006469727
    10. '.write' → logprob: -18.375391006469727

Token 583: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.02544299140572548
    2. '('' → logprob: -4.525443077087402
    3. '(str' → logprob: -4.775443077087402
    4. '(' → logprob: -5.275443077087402
    5. '"' → logprob: -7.525443077087402
    6. '(("' → logprob: -9.275443077087402
    7. 'str' → logprob: -9.650443077087402
    8. ' ("' → logprob: -11.275443077087402
    9. ''' → logprob: -11.275443077087402
    10. '(find' → logprob: -11.775443077087402

Token 584: 'yes' (ID: 6763)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06605272740125656
    2. '1' → logprob: -3.6910526752471924
    3. 'YES' → logprob: -4.0660529136657715
    4. 'yes' → logprob: -4.4410529136657715
    5. 'Yes' → logprob: -5.6910529136657715
    6. ''' → logprob: -5.9410529136657715
    7. 'str' → logprob: -6.3160529136657715
    8. 'find' → logprob: -6.6910529136657715
    9. 'found' → logprob: -7.6910529136657715
    10. 'Y' → logprob: -8.691052436828613

Token 585: '"' (ID: 1)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.16024088859558105
    2. '"' → logprob: -1.910240888595581
    3. 'n' → logprob: -11.41024112701416
    4. '
' → logprob: -12.78524112701416
    5. ' "' → logprob: -13.53524112701416
    6. ''' → logprob: -14.53524112701416
    7. '```' → logprob: -14.91024112701416
    8. '")' → logprob: -15.03524112701416
    9. 'if' → logprob: -16.410240173339844
    10. '

' → logprob: -16.410240173339844

Token 586: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06618650257587433
    2. '\n' → logprob: -3.3161864280700684
    3. 'if' → logprob: -3.9411864280700684
    4. '"' → logprob: -5.191186428070068
    5. '
' → logprob: -6.191186428070068
    6. '   ' → logprob: -8.816186904907227
    7. ')' → logprob: -8.816186904907227
    8. ' else' → logprob: -9.066186904907227
    9. '```' → logprob: -9.066186904907227
    10. '
' → logprob: -9.941186904907227

Token 587: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.25193992257118225
    2. 'find' → logprob: -1.5019398927688599
    3. '(find' → logprob: -11.62693977355957
    4. '
' → logprob: -14.12693977355957
    5. '	find' → logprob: -14.25193977355957
    6. ')find' → logprob: -15.37693977355957
    7. '=find' → logprob: -16.25193977355957
    8. ' 
' → logprob: -16.25193977355957
    9. ' ' → logprob: -17.00193977355957
    10. ' ' → logprob: -17.00193977355957

Token 588: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00870793778449297
    2. '(V' → logprob: -5.1337080001831055
    3. 'int' → logprob: -6.2587080001831055
    4. ' int' → logprob: -7.8837080001831055
    5. '(' → logprob: -8.008708000183105
    6. ' (' → logprob: -9.008708000183105
    7. ' V' → logprob: -10.883708000183105
    8. '(
' → logprob: -12.883708000183105
    9. '('' → logprob: -13.508708000183105
    10. 'V' → logprob: -13.508708000183105

Token 589: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -6.0629870858974755e-05
    2. 'V' → logprob: -9.75006103515625
    3. '(' → logprob: -14.25006103515625
    4. '(*' → logprob: -14.37506103515625
    5. ')(' → logprob: -15.00006103515625
    6. '((' → logprob: -15.50006103515625
    7. '
' → logprob: -15.50006103515625
    8. '(
' → logprob: -15.75006103515625
    9. ' (' → logprob: -16.00006103515625
    10. ')V' → logprob: -16.87506103515625

Token 590: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.873571692267433e-05
    2. '0' → logprob: -9.625068664550781
    3. '(' → logprob: -13.125068664550781
    4. ' [' → logprob: -16.00006866455078
    5. '[
' → logprob: -16.00006866455078
    6. '
' → logprob: -16.37506866455078
    7. ' ' → logprob: -16.62506866455078
    8. '   ' → logprob: -17.12506866455078
    9. '()[' → logprob: -17.87506866455078
    10. ')' → logprob: -18.00006866455078

Token 591: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2723104848410003e-05
    2. ' ' → logprob: -10.750022888183594
    3. '   ' → logprob: -14.500022888183594
    4. '[' → logprob: -14.750022888183594
    5. '
' → logprob: -16.125022888183594
    6. ')' → logprob: -16.500022888183594
    7. '  ' → logprob: -16.875022888183594
    8. '(' → logprob: -17.000022888183594
    9. '-' → logprob: -18.125022888183594
    10. ']' → logprob: -18.500022888183594

Token 592: ']))' (ID: 20259)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06647075712680817
    2. '()))' → logprob: -2.8164708614349365
    3. ']))' → logprob: -5.441470623016357
    4. ')))' → logprob: -9.941471099853516
    5. '()' → logprob: -10.066471099853516
    6. '])' → logprob: -10.191471099853516
    7. '[' → logprob: -11.941471099853516
    8. ')' → logprob: -12.066471099853516
    9. ' ))' → logprob: -12.066471099853516
    10. '   ' → logprob: -12.316471099853516

Token 593: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0015041481237858534
    2. 'else' → logprob: -6.501503944396973
    3. ' ' → logprob: -13.376503944396973
    4. '==' → logprob: -16.50150489807129
    5. ')' → logprob: -16.62650489807129
    6. '   ' → logprob: -17.12650489807129
    7. ' 
' → logprob: -17.25150489807129
    8. '()' → logprob: -17.87650489807129
    9. ' ' → logprob: -18.12650489807129
    10. '	else' → logprob: -18.25150489807129

Token 594: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.000556012790184468
    2. ' "' → logprob: -7.500555992126465
    3. '"No' → logprob: -13.000555992126465
    4. ''' → logprob: -15.375555992126465
    5. '   ' → logprob: -15.500555992126465
    6. '("' → logprob: -16.75055694580078
    7. '	' → logprob: -16.75055694580078
    8. ' ' → logprob: -17.25055694580078
    9. '"\' → logprob: -18.00055694580078
    10. '"os' → logprob: -18.00055694580078

Token 595: 'no' (ID: 1750)
  Prédit: 'no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.062020231038331985
    2. '"' → logprob: -2.8120203018188477
    3. '	no' → logprob: -10.937020301818848
    4. ''' → logprob: -11.187020301818848
    5. ' no' → logprob: -11.812020301818848
    6. '"No' → logprob: -11.937020301818848
    7. 'NO' → logprob: -13.437020301818848
    8. '   ' → logprob: -13.687020301818848
    9. 'nos' → logprob: -14.187020301818848
    10. '(no' → logprob: -14.437020301818848

Token 596: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.007769289892166853
    2. ')' → logprob: -5.0077691078186035
    3. '\n' → logprob: -7.0077691078186035
    4. '")
' → logprob: -9.382769584655762
    5. '"' → logprob: -10.507769584655762
    6. '')' → logprob: -10.632769584655762
    7. '<|end|>' → logprob: -12.257769584655762
    8. '```' → logprob: -13.382769584655762
    9. ')
' → logprob: -13.507769584655762
    10. '`)' → logprob: -13.882769584655762

Token 597: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4663988947868347
    2. 'elif' → logprob: -1.5913989543914795
    3. '<|end|>' → logprob: -2.0913989543914795
    4. ' elif' → logprob: -3.4663989543914795
    5. '	elif' → logprob: -5.4663987159729
    6. 'else' → logprob: -5.4663987159729
    7. ' ' → logprob: -6.2163987159729
    8. '  ' → logprob: -6.3413987159729
    9. '<|end|>' → logprob: -7.0913987159729
    10. ' else' → logprob: -7.3413987159729

Token 598: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.6465290784835815
    2. ' elif' → logprob: -0.7715290784835815
    3. 'else' → logprob: -5.146529197692871
    4. ' else' → logprob: -5.396529197692871
    5. '   ' → logprob: -5.896529197692871
    6. '	elif' → logprob: -7.646529197692871
    7. ' ' → logprob: -8.396529197692871
    8. '  ' → logprob: -11.271529197692871
    9. '<|end|>' → logprob: -12.396529197692871
    10. '```' → logprob: -12.521529197692871

Token 599: ' cmd' (ID: 11704)
  Prédit: ' cmd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cmd' → logprob: -0.10024257749319077
    2. 'cmd' → logprob: -2.3502426147460938
    3. '(cmd' → logprob: -10.350242614746094
    4. '	cmd' → logprob: -12.600242614746094
    5. '   ' → logprob: -15.350242614746094
    6. '.cmd' → logprob: -15.600242614746094
    7. '_cmd' → logprob: -16.225242614746094
    8. ' ' → logprob: -16.850242614746094
    9. ' cmds' → logprob: -16.850242614746094
    10. '    ' → logprob: -17.850242614746094

Token 600: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03832489997148514
    2. '==' → logprob: -3.2883248329162598
    3. ' =' → logprob: -9.288325309753418
    4. '[' → logprob: -9.288325309753418
    5. '=' → logprob: -9.663325309753418
    6. ' ' → logprob: -11.288325309753418
    7. ' =="' → logprob: -11.788325309753418
    8. '=="' → logprob: -12.288325309753418
    9. ' ===' → logprob: -13.163325309753418
    10. '===' → logprob: -13.288325309753418

Token 601: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00017600801947992295
    2. ' "' → logprob: -8.875176429748535
    3. 'insert' → logprob: -11.000176429748535
    4. '"in' → logprob: -11.125176429748535
    5. ''' → logprob: -13.500176429748535
    6. ' ' → logprob: -13.625176429748535
    7. '   ' → logprob: -14.500176429748535
    8. ' insert' → logprob: -14.625176429748535
    9. '"value' → logprob: -15.000176429748535
    10. '("' → logprob: -15.250176429748535

Token 602: 'delete' (ID: 8509)
  Prédit: 'insert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'insert' → logprob: -2.951771421066951e-05
    2. '"' → logprob: -11.000029563903809
    3. 'ins' → logprob: -12.000029563903809
    4. ' insert' → logprob: -12.625029563903809
    5. 'add' → logprob: -12.875029563903809
    6. 'Insert' → logprob: -15.250029563903809
    7. '_insert' → logprob: -16.000028610229492
    8. 'delete' → logprob: -16.125028610229492
    9. '	insert' → logprob: -16.625028610229492
    10. '.insert' → logprob: -16.625028610229492

Token 603: '":
' (ID: 9213)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.08479500561952591
    2. 'int' → logprob: -3.3347949981689453
    3. ':
' → logprob: -4.084794998168945
    4. ' (' → logprob: -4.209794998168945
    5. ' int' → logprob: -5.334794998168945
    6. '   ' → logprob: -5.709794998168945
    7. '"' → logprob: -6.834794998168945
    8. '(' → logprob: -7.334794998168945
    9. '":
' → logprob: -7.334794998168945
    10. ' =' → logprob: -7.709794998168945

Token 604: '       ' (ID: 309)
  Prédit: 'delete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delete' → logprob: -0.06931665539741516
    2. '   ' → logprob: -2.8193166255950928
    3. ' delete' → logprob: -5.069316864013672
    4. '       ' → logprob: -6.944316864013672
    5. 'insert' → logprob: -9.819316864013672
    6. '	delete' → logprob: -11.194316864013672
    7. '  ' → logprob: -13.819316864013672
    8. ' ' → logprob: -14.194316864013672
    9. '(delete' → logprob: -14.444316864013672
    10. '```' → logprob: -15.819316864013672

Token 605: ' delete' (ID: 6168)
  Prédit: 'delete'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delete' (adapté à ' delete') → logprob: -0.0002694416616577655
    2. ' delete' → logprob: -8.250269889831543
    3. '   ' → logprob: -11.750269889831543
    4. 'insert' → logprob: -16.250268936157227
    5. '
' → logprob: -16.625268936157227
    6. '	delete' → logprob: -17.000268936157227
    7. 'root' → logprob: -17.375268936157227
    8. '       ' → logprob: -18.500268936157227
    9. '  ' → logprob: -18.750268936157227
    10. ' ' → logprob: -19.250268936157227

Token 606: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0005532711511477828
    2. 'int' → logprob: -7.500553131103516
    3. '[int' → logprob: -16.500553131103516
    4. ' int' → logprob: -16.500553131103516
    5. ' (' → logprob: -17.125553131103516
    6. '<int' → logprob: -18.000553131103516
    7. '=int' → logprob: -18.625553131103516
    8. '(' → logprob: -18.750553131103516
    9. '(
' → logprob: -19.750553131103516
    10. ':int' → logprob: -20.375553131103516

Token 607: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -9.088346359931165e-07
    2. ' (' → logprob: -14.875000953674316
    3. '(' → logprob: -15.125000953674316
    4. 'V' → logprob: -15.625000953674316
    5. '((' → logprob: -17.25
    6. ')(' → logprob: -17.875
    7. '(
' → logprob: -18.75
    8. '   ' → logprob: -20.375
    9. ' ' → logprob: -20.375
    10. ')V' → logprob: -20.625

Token 608: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8074162653647363e-05
    2. '0' → logprob: -11.000018119812012
    3. '(' → logprob: -13.875018119812012
    4. '[
' → logprob: -16.000017166137695
    5. ')' → logprob: -16.750017166137695
    6. '()[' → logprob: -16.875017166137695
    7. ' [' → logprob: -17.625017166137695
    8. '][' → logprob: -18.125017166137695
    9. '<|end|>' → logprob: -18.375017166137695
    10. '1' → logprob: -18.625017166137695

Token 609: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.1928003813372925e-05
    2. '[' → logprob: -9.875051498413086
    3. ' ' → logprob: -16.000051498413086
    4. '(' → logprob: -16.250051498413086
    5. '   ' → logprob: -16.750051498413086
    6. ')' → logprob: -18.125051498413086
    7. '1' → logprob: -18.500051498413086
    8. '
' → logprob: -19.250051498413086
    9. '][' → logprob: -19.500051498413086
    10. '```' → logprob: -19.750051498413086

Token 610: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.014354472979903221
    2. '])' → logprob: -4.514354705810547
    3. ']))' → logprob: -5.889354705810547
    4. ')' → logprob: -8.264354705810547
    5. '()))' → logprob: -8.764354705810547
    6. '))
' → logprob: -9.639354705810547
    7. ')])' → logprob: -11.139354705810547
    8. '[' → logprob: -11.264354705810547
    9. ')]' → logprob: -11.389354705810547
    10. '()' → logprob: -12.139354705810547

Token 611: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023518456146121025
    2. 'elif' → logprob: -4.0235185623168945
    3. 'else' → logprob: -5.2735185623168945
    4. ' elif' → logprob: -8.773518562316895
    5. ' else' → logprob: -9.648518562316895
    6. '```' → logprob: -12.398518562316895
    7. ' ' → logprob: -13.523518562316895
    8. '	elif' → logprob: -13.523518562316895
    9. '<|end|>' → logprob: -13.523518562316895
    10. '  ' → logprob: -14.648518562316895

Token 612: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.11717794090509415
    2. 'else' (adapté à ' else') → logprob: -2.367177963256836
    3. '   ' → logprob: -4.117177963256836
    4. ' elif' → logprob: -7.617177963256836
    5. ' else' → logprob: -10.242177963256836
    6. ' ' → logprob: -12.367177963256836
    7. '	elif' → logprob: -12.867177963256836
    8. '  ' → logprob: -13.242177963256836
    9. 'elseif' → logprob: -13.992177963256836
    10. '```' → logprob: -14.867177963256836

Token 613: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14111578464508057
    2. ':
' → logprob: -2.391115665435791
    3. '   ' → logprob: -3.391115665435791
    4. '       ' → logprob: -5.266115665435791
    5. ' :' → logprob: -7.641115665435791
    6. '  ' → logprob: -8.89111614227295
    7. ' :
' → logprob: -8.89111614227295
    8. ' if' → logprob: -9.26611614227295
    9. '    ' → logprob: -9.39111614227295
    10. ' =' → logprob: -9.64111614227295

Token 614: '       ' (ID: 309)
  Prédit: 'insert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'insert' → logprob: -0.47895240783691406
    2. '   ' → logprob: -0.9789524078369141
    3. ' insert' → logprob: -5.853952407836914
    4. '       ' → logprob: -6.228952407836914
    5. '	insert' → logprob: -10.978952407836914
    6. '```' → logprob: -13.728952407836914
    7. ' ' → logprob: -13.853952407836914
    8. '_insert' → logprob: -14.228952407836914
    9. '
' → logprob: -14.478952407836914
    10. '(insert' → logprob: -14.603952407836914

Token 615: ' val' (ID: 1459)
  Prédit: 'insert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'insert' → logprob: -0.0001499060745118186
    2. '   ' → logprob: -9.500149726867676
    3. 'val' (adapté à ' val') → logprob: -9.750149726867676
    4. ' insert' → logprob: -11.125149726867676
    5. 'root' → logprob: -14.625149726867676
    6. '
' → logprob: -15.000149726867676
    7. '	insert' → logprob: -15.125149726867676
    8. '#' → logprob: -15.250149726867676
    9. '    
' → logprob: -16.250150680541992
    10. 'ans' → logprob: -16.250150680541992

Token 616: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3101338744163513
    2. '=' → logprob: -1.435133934020996
    3. ',' → logprob: -3.560133934020996
    4. '=int' → logprob: -9.935133934020996
    5. ' ' → logprob: -10.185133934020996
    6. ' ,' → logprob: -10.310133934020996
    7. '<|end|>' → logprob: -12.310133934020996
    8. '   ' → logprob: -13.685133934020996
    9. ' ' → logprob: -13.810133934020996
    10. ')' → logprob: -13.810133934020996

Token 617: ' pri' (ID: 12874)
  Prédit: 'pri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pri' → logprob: -0.11323241889476776
    2. ' pri' → logprob: -2.238232374191284
    3. ' =' → logprob: -8.113232612609863
    4. '   ' → logprob: -10.488232612609863
    5. 'pr' → logprob: -10.738232612609863
    6. '=' → logprob: -11.238232612609863
    7. ' ' → logprob: -11.238232612609863
    8. ' ' → logprob: -11.363232612609863
    9. '  ' → logprob: -12.238232612609863
    10. '    ' → logprob: -12.613232612609863

Token 618: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42877936363220215
    2. '=' → logprob: -1.0537793636322021
    3. ',' → logprob: -9.928779602050781
    4. '=int' → logprob: -10.678779602050781
    5. ' ' → logprob: -13.053779602050781
    6. 'int' → logprob: -13.678779602050781
    7. ')' → logprob: -13.803779602050781
    8. '＝' → logprob: -14.803779602050781
    9. '	' → logprob: -15.303779602050781
    10. '<|end|>' → logprob: -15.428779602050781

Token 619: ' map' (ID: 4014)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03163105249404907
    2. ' int' → logprob: -3.5316309928894043
    3. 'map' → logprob: -6.531630992889404
    4. ' map' → logprob: -7.781630992889404
    5. '[int' → logprob: -13.031631469726562
    6. '   ' → logprob: -13.906631469726562
    7. '(int' → logprob: -14.031631469726562
    8. '=int' → logprob: -15.031631469726562
    9. '<int' → logprob: -15.531631469726562
    10. ' ' → logprob: -15.656631469726562

Token 620: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.008617881685495377
    2. 'int' → logprob: -4.758617877960205
    3. '[int' → logprob: -13.633618354797363
    4. '   ' → logprob: -14.008618354797363
    5. '=int' → logprob: -14.883618354797363
    6. ',int' → logprob: -15.383618354797363
    7. '(
' → logprob: -15.508618354797363
    8. '<int' → logprob: -16.258617401123047
    9. '```' → logprob: -16.258617401123047
    10. ' int' → logprob: -16.383617401123047

Token 621: ',' (ID: 11)
  Prédit: '(V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.43953609466552734
    2. ',' → logprob: -1.0645360946655273
    3. ',V' → logprob: -4.689536094665527
    4. 'V' → logprob: -7.064536094665527
    5. ',(' → logprob: -7.939536094665527
    6. ')(' → logprob: -9.064536094665527
    7. ' ,' → logprob: -9.439536094665527
    8. ')' → logprob: -10.189536094665527
    9. ',int' → logprob: -10.439536094665527
    10. '   ' → logprob: -10.439536094665527

Token 622: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.0002258277963846922
    2. '(V' → logprob: -8.500226020812988
    3. ' V' → logprob: -10.750226020812988
    4. 'map' → logprob: -14.750226020812988
    5. '[V' → logprob: -15.375226020812988
    6. ')V' → logprob: -15.625226020812988
    7. '   ' → logprob: -16.125225067138672
    8. ',V' → logprob: -18.125225067138672
    9. '           ' → logprob: -18.500225067138672
    10. ' ' → logprob: -18.750225067138672

Token 623: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024256646633148193
    2. ')
' → logprob: -3.774256706237793
    3. '())' → logprob: -7.149256706237793
    4. ');' → logprob: -9.274256706237793
    5. '())
' → logprob: -9.649256706237793
    6. '()' → logprob: -10.649256706237793
    7. '(' → logprob: -11.649256706237793
    8. ')
' → logprob: -11.899256706237793
    9. '))' → logprob: -12.024256706237793
    10. ')`' → logprob: -12.024256706237793

Token 624: '       ' (ID: 309)
  Prédit: 'insert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'insert' → logprob: -0.10933809727430344
    2. '   ' → logprob: -2.3593380451202393
    3. '       ' → logprob: -5.234338283538818
    4. ' insert' → logprob: -5.609338283538818
    5. '	insert' → logprob: -9.60933780670166
    6. '.insert' → logprob: -11.73433780670166
    7. '(insert' → logprob: -12.48433780670166
    8. '  ' → logprob: -12.48433780670166
    9. ' ' → logprob: -12.60933780670166
    10. '
' → logprob: -12.98433780670166

Token 625: ' insert' (ID: 10898)
  Prédit: 'insert'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'insert' (adapté à ' insert') → logprob: -0.00010247035970678553
    2. ' insert' → logprob: -9.250102043151855
    3. '   ' → logprob: -12.375102043151855
    4. 'import' → logprob: -13.625102043151855
    5. 'root' → logprob: -14.500102043151855
    6. '       ' → logprob: -16.125102996826172
    7. 'pr' → logprob: -16.500102996826172
    8. '	insert' → logprob: -16.625102996826172
    9. 'if' → logprob: -17.375102996826172
    10. 'pri' → logprob: -18.000102996826172

Token 626: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -4.47757811343763e-05
    2. ',val' → logprob: -11.000044822692871
    3. '(int' → logprob: -11.125044822692871
    4. 'val' → logprob: -12.000044822692871
    5. ' (' → logprob: -12.875044822692871
    6. '[val' → logprob: -13.000044822692871
    7. '(' → logprob: -13.250044822692871
    8. ' val' → logprob: -14.875044822692871
    9. '((' → logprob: -16.875043869018555
    10. 'int' → logprob: -16.875043869018555

Token 627: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003196727717295289
    2. ' ,' → logprob: -5.753196716308594
    3. '(pr' → logprob: -11.503196716308594
    4. ',val' → logprob: -12.378196716308594
    5. ',
' → logprob: -13.378196716308594
    6. ')' → logprob: -13.878196716308594
    7. '[' → logprob: -14.503196716308594
    8. ',int' → logprob: -14.753196716308594
    9. '   ' → logprob: -15.003196716308594
    10. 'pri' → logprob: -16.128196716308594

Token 628: ' pri' (ID: 12874)
  Prédit: 'pri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pri' → logprob: -0.018161648884415627
    2. ' pri' → logprob: -4.018161773681641
    3. 'pr' → logprob: -12.26816177368164
    4. 'prior' → logprob: -12.39316177368164
    5. 'prio' → logprob: -13.39316177368164
    6. '   ' → logprob: -14.26816177368164
    7. ' ' → logprob: -14.76816177368164
    8. '  ' → logprob: -16.39316177368164
    9. '
' → logprob: -17.26816177368164
    10. '    ' → logprob: -17.26816177368164

Token 629: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ')
' → logprob: -13.750001907348633
    3. ' )' → logprob: -14.125001907348633
    4. '())' → logprob: -16.125001907348633
    5. '))' → logprob: -16.500001907348633
    6. '<|end|>' → logprob: -18.000001907348633
    7. '   ' → logprob: -18.375001907348633
    8. ')}' → logprob: -18.625001907348633
    9. '[' → logprob: -18.750001907348633
    10. ')return' → logprob: -19.000001907348633

Token 630: 'write' (ID: 9566)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 631: '("\' (ID: 9730)
  Prédit: '("\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("\' → logprob: -0.1273212432861328
    2. '('\' → logprob: -2.127321243286133
    3. '(' → logprob: -7.877321243286133
    4. ' ("\' → logprob: -12.002321243286133
    5. '"\' → logprob: -12.627321243286133
    6. '("' → logprob: -13.127321243286133
    7. '((' → logprob: -13.377321243286133
    8. '(("' → logprob: -15.002321243286133
    9. ''\' → logprob: -15.627321243286133
    10. '('' → logprob: -16.127321243286133

Token 632: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.10797154903411865
    2. 'n' → logprob: -2.857971668243408
    3. '"\' → logprob: -3.107971668243408
    4. '
' → logprob: -8.48297119140625
    5. ''\' → logprob: -9.85797119140625
    6. ' "\' → logprob: -12.60797119140625
    7. '`\' → logprob: -12.98297119140625
    8. '"' → logprob: -13.23297119140625
    9. '\' → logprob: -13.60797119140625
    10. '
' → logprob: -14.48297119140625

Token 633: '".' (ID: 4050)
  Prédit: '".'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '".' → logprob: -0.00014931005716789514
    2. '.join' → logprob: -9.250149726867676
    3. '.' → logprob: -11.000149726867676
    4. '"' → logprob: -11.125149726867676
    5. 'join' → logprob: -11.125149726867676
    6. ''.' → logprob: -12.750149726867676
    7. '").' → logprob: -13.000149726867676
    8. '")' → logprob: -15.125149726867676
    9. '```' → logprob: -15.125149726867676
    10. '.write' → logprob: -15.250149726867676

Token 634: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.9361264946837764e-07
    2. ' join' → logprob: -16.75
    3. 'write' → logprob: -16.75
    4. 'jo' → logprob: -18.0
    5. 'j' → logprob: -19.5
    6. '.join' → logprob: -19.625
    7. '(join' → logprob: -20.25
    8. 'print' → logprob: -21.5
    9. 'joint' → logprob: -22.75
    10. 'w' → logprob: -23.875

Token 635: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.006715967319905758
    2. 'ans' → logprob: -5.006715774536133
    3. ' ans' → logprob: -14.756715774536133
    4. '	ans' → logprob: -15.756715774536133
    5. '(map' → logprob: -16.256715774536133
    6. '(
' → logprob: -16.881715774536133
    7. '(str' → logprob: -17.506715774536133
    8. 'Ans' → logprob: -17.756715774536133
    9. '(' → logprob: -18.506715774536133
    10. '_ans' → logprob: -18.631715774536133

Token 636: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6659327149391174
    2. '+' → logprob: -1.4159326553344727
    3. '+"\' → logprob: -1.7909326553344727
    4. '()' → logprob: -3.4159326553344727
    5. '))' → logprob: -3.7909326553344727
    6. ' +' → logprob: -5.290932655334473
    7. '("\' → logprob: -5.290932655334473
    8. '()+"' → logprob: -5.915932655334473
    9. '())' → logprob: -5.915932655334473
    10. '+'\' → logprob: -6.040932655334473

Token 637: 'write' (ID: 9566)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.29500895738601685
    2. '<|end|>' → logprob: -1.420008897781372
    3. ')' → logprob: -4.920009136199951
    4. '
' → logprob: -5.920009136199951
    5. '```' → logprob: -6.170009136199951
    6. '\' → logprob: -6.670009136199951
    7. '<|end|>' → logprob: -8.670008659362793
    8. '+' → logprob: -10.295008659362793
    9. '"\' → logprob: -10.670008659362793
    10. '#' → logprob: -10.670008659362793

Token 638: '("\' (ID: 9730)
  Prédit: '("\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("\' → logprob: -0.00011713240382960066
    2. '('\' → logprob: -9.125117301940918
    3. '(' → logprob: -12.000117301940918
    4. '"\' → logprob: -13.625117301940918
    5. '("")' → logprob: -14.500117301940918
    6. '()' → logprob: -15.875117301940918
    7. '("' → logprob: -17.2501163482666
    8. ' ("\' → logprob: -17.6251163482666
    9. '(b' → logprob: -17.7501163482666
    10. '(
' → logprob: -18.0001163482666

Token 639: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.0036181241739541292
    2. 'n' → logprob: -5.628618240356445
    3. '"\' → logprob: -12.003618240356445
    4. '\' → logprob: -12.253618240356445
    5. '
' → logprob: -12.378618240356445
    6. ')' → logprob: -14.378618240356445
    7. ''\' → logprob: -14.628618240356445
    8. 'newline' → logprob: -14.628618240356445
    9. '```' → logprob: -14.628618240356445
    10. '<|end|>' → logprob: -15.253618240356445

Token 640: '")' (ID: 1405)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00662418594583869
    2. '")' → logprob: -5.131624221801758
    3. '<|end|>' → logprob: -7.506624221801758
    4. '\n' → logprob: -9.506624221801758
    5. '')' → logprob: -9.881624221801758
    6. '```' → logprob: -11.881624221801758
    7. '
' → logprob: -12.631624221801758
    8. '<|end|>' → logprob: -12.631624221801758
    9. '())' → logprob: -13.131624221801758
    10. ')
' → logprob: -13.631624221801758


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 638
Tokens correctement prédits (1ère position, stricte): 220
Tokens correctement prédits (1ère position, avec adaptation): 256
Tokens correctement prédits (top 10): 524
Précision stricte (1ère position): 34.48%
Précision adaptée (1ère position): 40.13%
Précision (top 10): 82.13%
================================================================================
