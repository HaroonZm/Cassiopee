================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
#!usr/bin/env python3
from collections import defaultdict
from collections import deque
from heapq import heappush, heappop
import sys
import math
import bisect
import random
def LI(): return list(map(int, sys.stdin.readline().split()))
def I(): return int(sys.stdin.readline())
def LS():return list(map(list, sys.stdin.readline().split()))
def S(): return list(sys.stdin.readline())[:-1]
def IR(n):
    l = [None for i in range(n)]
    for i in range(n):l[i] = I()
    return l
def LIR(n):
    l = [None for i in range(n)]
    for i in range(n):l[i] = LI()
    return l
def SR(n):
    l = [None for i in range(n)]
    for i in range(n):l[i] = S()
    return l
def LSR(n):
    l = [None for i in range(n)]
    for i in range(n):l[i] = LS()
    return l
sys.setrecursionlimit(1000000)
mod = 1000000007

#1:combinatorial
#1_A
"""
n, m = map(int, input().split())
c = list(map(int, input().split()))
dp = [float("inf") for i in range(n+1)]
dp[0] = 0
for i in range(n):
    for j in c:
        if i+j <= n:
            dp[i+j] = min(dp[i+j], dp[i]+1)
print(dp[n])
"""
#1_B
"""
n,w = map(int,input().split())
b = [list(map(int, input().split())) for i in range(n)]
dp = [0 for i in range(w+1)]
memo = [[] for i in range(w+1)]
for i in range(w):
    for j in range(n):
        if i+b[j][1] <= w and j not in memo[i]:
            if dp[i+b[j][1]] > dp[i]+b[j][0]:
                continue
            else:
                memo[i+b[j][1]] = memo[i]+[j]
                dp[i+b[j][1]] = dp[i]+b[j][0]

print(max(dp))
"""
#1_C
"""
n,w = map(int,input().split())
b = [list(map(int, input().split())) for i in range(n)]
dp = [0 for i in range(w+1)]
for i in range(w):
    for j in b:
        if i+j[1] <= w:
            dp[i+j[1]] = max(dp[i+j[1]], dp[i]+j[0])
print(dp[w])
"""
#1_D
"""
import bisect

n = int(input())
s = [int(input()) for i in range(n)]
dp = [float("INF") for i in range(n)]
for i in range(n):
    dp[bisect.bisect_left(dp,s[i])] = s[i]
print(bisect.bisect_left(dp,100000000000000))
"""

#1_E
"""
s1 = input()
s2 = input()
n = len(s1)
m = len(s2)
dp = [[0 for j in range(m+1)] for i in range(n+1)]
for i in range(n+1):
    dp[i][0] = i
for j in range(m+1):
    dp[0][j] = j
for i in range(1,n+1):
    for j in range(1,m+1):
        cost = 0 if s1[i-1] == s2[j-1] else 1
        dp[i][j] = min(dp[i-1][j]+1,dp[i][j-1]+1,dp[i-1][j-1]+cost)
print(dp[n][m])
"""
#1_F
"""
import bisect

n,W = map(int,input().split())
b = [list(map(int, input().split())) for i in range(n)]
dp = [float("INF") for i in range(10001)]
dp[0] = 0
for v,w in b:
    for i in range(10001):
        if 10000-i+v < 10001:
            dp[10000-i+v] = min(dp[10000-i+v], dp[10000-i]+w)
for i in range(1,10000):
    dp[10000-i] = min(dp[10000-i], dp[10001-i])
print(bisect.bisect_right(dp,W)-1)
"""

#1_G
"""
n,W = LI()
g = LIR(n)
"""

#1_H
n,W = LI()
v = [None for i in range(n)]
w = [None for i in range(n)]
for i in range(n):
    v[i],w[i] = LI()
a = [[0,0]]
b = [[0,0]]
m = n//2
for i in range(m):
    for j in range(1<<i):
        a.append([a[j][0]+v[i],a[j][1]+w[i]])
for i in range(n-m):
    for j in range(1<<i):
        b.append([b[j][0]+v[i+m],b[j][1]+w[i+m]])
a.sort(key = lambda x:x[1])
b.sort(key = lambda x:x[1])
ma = b[0][0]
for i in range(1,len(b)):
    if ma > b[i][0]:
        b[i][0] = ma
    else:
        ma = b[i][0]
ans = 0
i = len(b)-1
for v,w in a:
    rem = W-w
    while b[i][1] > rem:
        if i == 0:break
        i -= 1
    if b[i][1] <= rem:
        ans = max(ans,v+b[i][0])
print(ans)
#2:permutaion/path
#2_A
"""
n,e = LI()
v = [[] for i in range(n)]
f = [-1 for i in range(n)]
for i in range(e):
    s,t,d = LI()
    v[s].append([t,d])
    if t == 0:
        f[s] = d
po = [1 for i in range(n+1)]
for i in range(n):
    po[i+1] = po[i]*2
dp = [[float("inf") for i in range(po[n])] for j in range(n)]
dp[0][1] = 0
for j in range(po[n]):
    for x in range(n):
        if po[x]&j:
            for y,d in v[x]:
                if not po[y]&j:
                    dp[y][j|po[y]] = min(dp[y][j|po[y]],dp[x][j]+d)
ans = float("inf")
for i in range(n):
    if f[i] != -1:
        ans = min(ans,dp[i][-1]+f[i])
if ans == float("inf"):
    print(-1)
else:
    print(ans)
"""
#3:pattern

#3_A
"""
h,w = map(int, input().split())
c = [list(map(int, input().split())) for i in range(h)]
dp = [[0 for i in range(w)] for j in range(h)]
for i in range(h):
    dp[i][0] = 1 if c[i][0] == 0 else 0
for i in range(w):
    dp[0][i] = 1 if c[0][i] == 0 else 0
for i in range(1,h):
    for j in range(1,w):
        if c[i][j] == 0:
            dp[i][j] = min(dp[i-1][j-1], dp[i-1][j], dp[i][j-1])+1
ans = 0
for i in dp:
    for j in i:
        ans = max(ans, j)
print(ans**2)
"""

#3_B

#4:counting
#4_A
"""
n,v = LI()
a = LI()
b = LI()
c = LI()
d = LI()
p = defaultdict(int)
q = defaultdict(int)
for i in a:
    for j in b:
        if i+j <= v-2:
            p[i+j] += 1
for i in c:
    for j in d:
        if i+j <= v-2:
            q[i+j] += 1
ans = 0
for i,j in p.items():
    ans += j*q[v-i]
print(ans)
"""

#5:Twelvedfold_Way

#5_A
"""
n,k = map(int, input().split())
ans = k
for i in range(n-1):
    ans *= k
    ans %= 1000000007
print(ans)
"""

#5_B
"""
import sys
sys.setrecursionlimit(10000)
memo = [1,1]
def fact(a):
    if len(memo) > a:
        return memo[a]
    b = a*fact(a-1)
    memo.append(b)
    return b
n,k = map(int, input().split())
if n > k:
    ans = 0
else:
    ans = fact(k)//fact(k-n)
print(ans%1000000007)
"""

#5_C
"""
def comb(a,b):
    return fac[a]*inv[b]*inv[a-b]%mod
n,k = LI()
if n < k:
    print(0)
    quit()
fac = [1 for i in range(k+1)]
for i in range(k):
    fac[i+1] = fac[i]*(i+1)%mod
inv = [None for i in range(k+1)]
inv[k] = pow(fac[k],mod-2,mod)
for i in range(k)[::-1]:
    inv[i] = inv[i+1]*(i+1)%mod
ans = 0
for i in range(k+1):
    if i%2:
        ans -= comb(k,i)*pow(k-i,n,mod)%mod
    else:
        ans += comb(k,i)*pow(k-i,n,mod)%mod
    ans %= mod
print(ans)
"""

#5_D
"""
n,k = map(int, input().split())
import sys
sys.setrecursionlimit(10000)
memo = [1,1]
def fact(a):
    if len(memo) > a:
        return memo[a]
    b = a*fact(a-1)
    memo.append(b)
    return b
ans = fact(n+k-1)//(fact(n)*fact(k-1))%1000000007
print(ans)
"""

#5_E
"""
def comb(a,b):
    return fac[a]*inv[b]*inv[a-b]%mod
n,k = LI()
if n > k:
    print(0)
    quit()
fac = [1 for i in range(k+1)]
for i in range(k):
    fac[i+1] = fac[i]*(i+1)%mod
inv = [None for i in range(k+1)]
inv[k] = pow(fac[k],mod-2,mod)
for i in range(k)[::-1]:
    inv[i] = inv[i+1]*(i+1)%mod
print(comb(k,n))
"""

#5_F
"""
def comb(a,b):
    return fac[a]*inv[b]*inv[a-b]%mod
n,k = LI()
if n < k:
    print(0)
    quit()
fac = [1 for i in range(n+1)]
for i in range(n):
    fac[i+1] = fac[i]*(i+1)%mod
inv = [None for i in range(n+1)]
inv[n] = pow(fac[n],mod-2,mod)
for i in range(n)[::-1]:
    inv[i] = inv[i+1]*(i+1)%mod
print(comb(n-1,n-k))
"""
#5_G

#5_H

#5_I

#5_J

#5_K

#5_L
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#!' (ID: 18666)
  → Token d'amorce (pas de prédiction)

Token 1: 'usr' (ID: 15943)
  → Token d'amorce (pas de prédiction)

Token 2: '/bin' (ID: 20950)
  → Token d'amorce (pas de prédiction)

Token 3: '/env' (ID: 34630)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.0010228052269667387
    2. '/bin' → logprob: -7.376022815704346
    3. '/python' → logprob: -8.251022338867188
    4. '/env' → logprob: -9.251022338867188
    5. '/bash' → logprob: -11.126022338867188
    6. '/b' → logprob: -11.751022338867188
    7. '/usr' → logprob: -11.751022338867188
    8. '#!/' → logprob: -12.626022338867188
    9. '/dev' → logprob: -13.376022338867188
    10. '/n' → logprob: -13.751022338867188

Token 4: ' python' (ID: 22752)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'python' → logprob: -0.49886083602905273
    2. '/python' → logprob: -1.4988608360290527
    3. ' python' → logprob: -1.8738608360290527
    4. '/' → logprob: -4.248860836029053
    5. ' ' → logprob: -7.748860836029053
    6. '```' → logprob: -8.373861312866211
    7. '-python' → logprob: -8.623861312866211
    8. '/bin' → logprob: -8.998861312866211
    9. '+' → logprob: -8.998861312866211
    10. 'p' → logprob: -9.498861312866211

Token 5: '3' (ID: 18)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8000779747962952
    2. '+' → logprob: -1.3000779151916504
    3. '-' → logprob: -2.1750779151916504
    4. '>' → logprob: -2.9250779151916504
    5. '\' → logprob: -3.5500779151916504
    6. '```' → logprob: -3.6750779151916504
    7. '#!/' → logprob: -3.9250779151916504
    8. '!' → logprob: -4.92507791519165
    9. '﻿' → logprob: -5.17507791519165
    10. '_' → logprob: -5.42507791519165

Token 6: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.13486787676811218
    2. '\n' → logprob: -3.3848679065704346
    3. '```' → logprob: -3.5098679065704346
    4. '\' → logprob: -3.7598679065704346
    5. '#!/' → logprob: -4.3848676681518555
    6. '>' → logprob: -5.2598676681518555
    7. '-' → logprob: -5.2598676681518555
    8. '!' → logprob: -6.3848676681518555
    9. '<|end|>' → logprob: -6.3848676681518555
    10. '#!' → logprob: -6.3848676681518555

Token 7: 'from' (ID: 2845)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.39625978469848633
    2. '```' → logprob: -2.1462597846984863
    3. '#!/' → logprob: -2.5212597846984863
    4. '!' → logprob: -3.1462597846984863
    5. '>' → logprob: -3.6462597846984863
    6. '\' → logprob: -4.021259784698486
    7. '#!' → logprob: -4.271259784698486
    8. '-' → logprob: -4.896259784698486
    9. '/bin' → logprob: -5.771259784698486
    10. '/' → logprob: -6.146259784698486

Token 8: ' collections' (ID: 22690)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1735077053308487
    2. ' os' → logprob: -1.9235076904296875
    3. ' import' → logprob: -5.1735076904296875
    4. ' sys' → logprob: -6.0485076904296875
    5. ' python' → logprob: -6.0485076904296875
    6. ' collections' → logprob: -7.2985076904296875
    7. ' math' → logprob: -7.4235076904296875
    8. ' space' → logprob: -7.9235076904296875
    9. ' functools' → logprob: -8.548507690429688
    10. ' subprocess' → logprob: -9.173507690429688

Token 9: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.2893039286136627
    2. 'import' → logprob: -1.4143038988113403
    3. '.' → logprob: -4.914303779602051
    4. '.Counter' → logprob: -8.28930377960205
    5. '```' → logprob: -8.66430377960205
    6. '.import' → logprob: -9.03930377960205
    7. '_import' → logprob: -9.78930377960205
    8. '_' → logprob: -9.78930377960205
    9. '<|end|>' → logprob: -10.53930377960205
    10. ' defaultdict' → logprob: -10.78930377960205

Token 10: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.017119018360972404
    2. ' deque' → logprob: -4.39211893081665
    3. ' Counter' → logprob: -5.89211893081665
    4. 'deque' → logprob: -7.76711893081665
    5. ' abc' → logprob: -8.142119407653809
    6. ' collections' → logprob: -8.267119407653809
    7. 'default' → logprob: -8.392119407653809
    8. ' ' → logprob: -8.517119407653809
    9. ' counter' → logprob: -8.642119407653809
    10. ' default' → logprob: -8.892119407653809

Token 11: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3406790792942047
    2. '
' → logprob: -2.715679168701172
    3. '' → logprob: -2.715679168701172
    4. ' 
' → logprob: -3.340679168701172
    5. ' 

' → logprob: -3.465679168701172
    6. '

' → logprob: -3.590679168701172
    7. '```' → logprob: -4.215679168701172
    8. '<|end|>' → logprob: -4.215679168701172
    9. '\' → logprob: -4.965679168701172
    10. '  
' → logprob: -5.840679168701172

Token 12: 'from' (ID: 2845)
  Prédit: ' 

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 

' → logprob: -0.7730509638786316
    2. '
' → logprob: -1.2730510234832764
    3. 'd' → logprob: -2.1480510234832764
    4. '

' → logprob: -2.5230510234832764
    5. ' 
' → logprob: -4.273050785064697
    6. 'default' → logprob: -4.398050785064697
    7. 'def' → logprob: -4.898050785064697
    8. '```' → logprob: -5.523050785064697
    9. '
' → logprob: -5.648050785064697
    10. ' 
 
' → logprob: -5.773050785064697

Token 13: ' collections' (ID: 22690)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.015653511509299278
    2. ' itertools' → logprob: -5.390653610229492
    3. ' collections' → logprob: -5.765653610229492
    4. ' sys' → logprob: -5.890653610229492
    5. ' os' → logprob: -6.015653610229492
    6. ' math' → logprob: -6.765653610229492
    7. ' typing' → logprob: -7.890653610229492
    8. ' datetime' → logprob: -8.015653610229492
    9. ' functools' → logprob: -8.765653610229492
    10. ' pathlib' → logprob: -9.015653610229492

Token 14: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.44971105456352234
    2. ' import' → logprob: -1.1997110843658447
    3. '.' → logprob: -2.8247110843658447
    4. '.import' → logprob: -6.699710845947266
    5. '_import' → logprob: -9.199710845947266
    6. '	import' → logprob: -9.449710845947266
    7. 'ort' → logprob: -10.949710845947266
    8. '```' → logprob: -10.949710845947266
    9. '-import' → logprob: -11.074710845947266
    10. 'port' → logprob: -11.199710845947266

Token 15: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.005346651654690504
    2. ' ' → logprob: -5.505346775054932
    3. ' abc' → logprob: -7.130346775054932
    4. ' default' → logprob: -8.755346298217773
    5. ' deque' → logprob: -9.255346298217773
    6. 'default' → logprob: -9.755346298217773
    7. ' ' → logprob: -9.880346298217773
    8. ' itertools' → logprob: -10.005346298217773
    9. ' space' → logprob: -10.880346298217773
    10. 'deque' → logprob: -11.630346298217773

Token 16: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.2152242809534073
    2. '
' → logprob: -1.715224266052246
    3. '


' → logprob: -4.965224266052246
    4. '\n' → logprob: -6.090224266052246
    5. ' 

' → logprob: -6.840224266052246
    6. '<|end|>' → logprob: -6.840224266052246
    7. '```' → logprob: -7.465224266052246
    8. '



' → logprob: -8.340224266052246
    9. '
' → logprob: -8.715224266052246
    10. '' → logprob: -8.715224266052246

Token 17: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.11037798225879669
    2. '
' → logprob: -2.4853780269622803
    3. 'import' → logprob: -4.485377788543701
    4. '```' → logprob: -5.985377788543701
    5. '<|end|>' → logprob: -5.985377788543701
    6. 'd' → logprob: -6.610377788543701
    7. '


' → logprob: -7.110377788543701
    8. ' 

' → logprob: -7.735377788543701
    9. '' → logprob: -7.985377788543701
    10. '\n' → logprob: -8.11037826538086

Token 18: ' heap' (ID: 37237)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.5046815872192383
    2. ' typing' → logprob: -1.8796815872192383
    3. ' queue' → logprob: -2.1296815872192383
    4. ' heap' → logprob: -2.5046815872192383
    5. ' sys' → logprob: -3.7546815872192383
    6. ' threading' → logprob: -4.754681587219238
    7. ' collections' → logprob: -6.129681587219238
    8. 'typing' → logprob: -6.504681587219238
    9. 'queue' → logprob: -6.754681587219238
    10. ' ' → logprob: -6.754681587219238

Token 19: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -7.896309739408025e-07
    2. '.' → logprob: -14.750000953674316
    3. 'import' → logprob: -16.0
    4. 's' → logprob: -16.75
    5. 'queue' → logprob: -16.75
    6. 'space' → logprob: -16.875
    7. 'p' → logprob: -17.625
    8. '_' → logprob: -17.75
    9. 'n' → logprob: -18.0
    10. 'a' → logprob: -18.25

Token 20: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.002102440921589732
    2. 'import' → logprob: -6.752102375030518
    3. ' ' → logprob: -7.002102375030518
    4. '.' → logprob: -11.252102851867676
    5. '<|end|>' → logprob: -13.002102851867676
    6. ' .' → logprob: -13.252102851867676
    7. ' imports' → logprob: -13.752102851867676
    8. '	import' → logprob: -14.377102851867676
    9. ' im' → logprob: -14.502102851867676
    10. '.import' → logprob: -15.002102851867676

Token 21: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.07927056401968002
    2. 'he' → logprob: -2.579270601272583
    3. 'heap' → logprob: -8.454270362854004
    4. ' n' → logprob: -9.704270362854004
    5. ' heap' → logprob: -9.829270362854004
    6. ' ' → logprob: -11.329270362854004
    7. 'n' → logprob: -11.454270362854004
    8. 'nl' → logprob: -11.454270362854004
    9. '.he' → logprob: -11.829270362854004
    10. 'merge' → logprob: -12.454270362854004

Token 22: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.006724602542817593
    2. 'ap' → logprob: -5.006724834442139
    3. 'a' → logprob: -11.63172435760498
    4. '```' → logprob: -16.006725311279297
    5. 'ап' → logprob: -16.381725311279297
    6. 'aq' → logprob: -17.006725311279297
    7. 'appen' → logprob: -17.131725311279297
    8. '[' → logprob: -17.381725311279297
    9. 'appt' → logprob: -17.881725311279297
    10. 'apl' → logprob: -18.006725311279297

Token 23: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0028053484857082367
    2. 'op' → logprob: -5.877805233001709
    3. 'u' → logprob: -15.877805709838867
    4. 'ut' → logprob: -15.877805709838867
    5. 'us' → logprob: -16.377805709838867
    6. '```' → logprob: -17.127805709838867
    7. '   ' → logprob: -17.752805709838867
    8. 'o' → logprob: -17.877805709838867
    9. 'push' → logprob: -18.502805709838867
    10. '[' → logprob: -18.752805709838867

Token 24: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2555784583091736
    2. '<|end|>' → logprob: -1.6305785179138184
    3. 'he' → logprob: -4.380578517913818
    4. ' he' → logprob: -5.005578517913818
    5. ',' → logprob: -5.005578517913818
    6. '<|end|>' → logprob: -6.755578517913818
    7. '  ' → logprob: -7.380578517913818
    8. 'import' → logprob: -7.755578517913818
    9. ' and' → logprob: -8.00557804107666
    10. '(' → logprob: -8.38057804107666

Token 25: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.2255079448223114
    2. 'he' → logprob: -1.6005079746246338
    3. 'heap' → logprob: -9.600507736206055
    4. ' ' → logprob: -11.725507736206055
    5. ' heap' → logprob: -11.850507736206055
    6. '.he' → logprob: -12.350507736206055
    7. '```' → logprob: -13.475507736206055
    8. '_he' → logprob: -13.850507736206055
    9. '<|end|>' → logprob: -13.850507736206055
    10. 'h' → logprob: -14.788007736206055

Token 26: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0009120595059357584
    2. 'ap' → logprob: -7.000912189483643
    3. ' app' → logprob: -15.625911712646484
    4. 'appen' → logprob: -16.625911712646484
    5. 'sp' → logprob: -16.750911712646484
    6. 'ап' → logprob: -16.875911712646484
    7. '_app' → logprob: -17.000911712646484
    8. 'APP' → logprob: -17.000911712646484
    9. 'a' → logprob: -17.375911712646484
    10. 'pp' → logprob: -17.625911712646484

Token 27: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -9.13388703338569e-06
    2. 'ush' → logprob: -12.000009536743164
    3. 'p' → logprob: -13.750009536743164
    4. 'o' → logprob: -14.500009536743164
    5. 'opp' → logprob: -14.875009536743164
    6. 'opleft' → logprob: -15.125009536743164
    7. '```' → logprob: -15.875009536743164
    8. 'оп' → logprob: -15.875009536743164
    9. '   ' → logprob: -16.250009536743164
    10. 'opl' → logprob: -16.625009536743164

Token 28: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.38956597447395325
    2. '
' → logprob: -1.1395659446716309
    3. '\n' → logprob: -7.514565944671631
    4. '<|end|>' → logprob: -7.639565944671631
    5. '```' → logprob: -7.889565944671631
    6. '' → logprob: -8.014566421508789
    7. '


' → logprob: -8.264566421508789
    8. '
' → logprob: -8.514566421508789
    9. 'n' → logprob: -9.139566421508789
    10. 'import' → logprob: -9.389566421508789

Token 29: 'import' (ID: 561)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.3162643611431122
    2. '
' → logprob: -1.3162643909454346
    3. '
' → logprob: -7.0662641525268555
    4. 'import' → logprob: -7.3162641525268555
    5. 'def' → logprob: -7.9412641525268555
    6. '


' → logprob: -7.9412641525268555
    7. '' → logprob: -8.441264152526855
    8. '```' → logprob: -9.191264152526855
    9. ' 

' → logprob: -9.441264152526855
    10. '#' → logprob: -9.441264152526855

Token 30: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.06973855942487717
    2. ' os' → logprob: -2.9447386264801025
    3. ' itertools' → logprob: -4.819738388061523
    4. ' math' → logprob: -5.569738388061523
    5. ' collections' → logprob: -6.069738388061523
    6. ' heap' → logprob: -8.444738388061523
    7. ' json' → logprob: -9.569738388061523
    8. ' ' → logprob: -9.694738388061523
    9. ' random' → logprob: -9.944738388061523
    10. ' re' → logprob: -10.069738388061523

Token 31: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1326630413532257
    2. '

' → logprob: -2.1326630115509033
    3. '\n' → logprob: -6.007663249969482
    4. '' → logprob: -6.632663249969482
    5. '
' → logprob: -7.882663249969482
    6. '\' → logprob: -8.132662773132324
    7. '```' → logprob: -8.257662773132324
    8. 'import' → logprob: -8.257662773132324
    9. 'def' → logprob: -8.632662773132324
    10. '


' → logprob: -9.007662773132324

Token 32: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04914499819278717
    2. '

' → logprob: -3.174144983291626
    3. 'def' → logprob: -5.424145221710205
    4. '' → logprob: -7.174145221710205
    5. '#' → logprob: -8.174144744873047
    6. '
' → logprob: -8.299144744873047
    7. 'class' → logprob: -9.174144744873047
    8. 'd' → logprob: -9.299144744873047
    9. '```' → logprob: -10.049144744873047
    10. 'import' → logprob: -10.549144744873047

Token 33: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0008802578668110073
    2. ' itertools' → logprob: -8.000880241394043
    3. ' collections' → logprob: -8.250880241394043
    4. ' math' → logprob: -8.625880241394043
    5. ' argparse' → logprob: -10.000880241394043
    6. ' o' → logprob: -10.750880241394043
    7. 'os' → logprob: -12.000880241394043
    8. ' threading' → logprob: -12.125880241394043
    9. ' io' → logprob: -12.125880241394043
    10. ' heap' → logprob: -12.250880241394043

Token 34: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24208955466747284
    2. '

' → logprob: -1.7420895099639893
    3. '\n' → logprob: -3.6170895099639893
    4. '\' → logprob: -5.242089748382568
    5. 'def' → logprob: -5.992089748382568
    6. '#' → logprob: -5.992089748382568
    7. '' → logprob: -6.742089748382568
    8. '```' → logprob: -7.742089748382568
    9. 'n' → logprob: -8.11708927154541
    10. '
' → logprob: -8.99208927154541

Token 35: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6474008560180664
    2. '

' → logprob: -0.7724008560180664
    3. 'def' → logprob: -5.022400856018066
    4. '' → logprob: -5.772400856018066
    5. '#' → logprob: -6.272400856018066
    6. 'd' → logprob: -7.022400856018066
    7. '```' → logprob: -7.897400856018066
    8. '\n' → logprob: -8.022400856018066
    9. '\' → logprob: -8.147400856018066
    10. '
' → logprob: -8.147400856018066

Token 36: ' bis' (ID: 7204)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.4829851984977722
    2. ' os' → logprob: -1.232985258102417
    3. ' random' → logprob: -2.982985258102417
    4. ' collections' → logprob: -3.732985258102417
    5. ' heap' → logprob: -4.857985019683838
    6. ' functools' → logprob: -5.732985019683838
    7. ' operator' → logprob: -6.607985019683838
    8. ' bis' → logprob: -6.982985019683838
    9. ' time' → logprob: -7.232985019683838
    10. ' threading' → logprob: -7.357985019683838

Token 37: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.7432603272027336e-06
    2. 'ected' → logprob: -14.125001907348633
    3. 't' → logprob: -14.625001907348633
    4. 'e' → logprob: -15.500001907348633
    5. 'ec' → logprob: -16.375001907348633
    6. 'ector' → logprob: -16.500001907348633
    7. 'ection' → logprob: -16.750001907348633
    8. '```' → logprob: -17.250001907348633
    9. 'ects' → logprob: -17.375001907348633
    10. 'ectl' → logprob: -17.625001907348633

Token 38: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7078600525856018
    2. '

' → logprob: -0.7078600525856018
    3. '' → logprob: -4.957859992980957
    4. '#' → logprob: -6.082859992980957
    5. '
' → logprob: -6.707859992980957
    6. '


' → logprob: -6.707859992980957
    7. '\n' → logprob: -6.957859992980957
    8. 'n' → logprob: -7.957859992980957
    9. 'def' → logprob: -7.957859992980957
    10. '```' → logprob: -8.207859992980957

Token 39: 'import' (ID: 561)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6416602730751038
    2. '
' → logprob: -0.7666602730751038
    3. '
' → logprob: -5.891660213470459
    4. '' → logprob: -6.016660213470459
    5. '#' → logprob: -6.266660213470459
    6. 'def' → logprob: -7.516660213470459
    7. '```' → logprob: -8.016660690307617
    8. '


' → logprob: -8.641660690307617
    9. '\n' → logprob: -8.641660690307617
    10. 'd' → logprob: -9.016660690307617

Token 40: ' random' (ID: 7526)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.014562796801328659
    2. ' heap' → logprob: -4.639562606811523
    3. ' threading' → logprob: -6.264562606811523
    4. ' random' → logprob: -7.014562606811523
    5. ' collections' → logprob: -7.514562606811523
    6. 'it' → logprob: -7.889562606811523
    7. ' functools' → logprob: -8.014562606811523
    8. ' os' → logprob: -8.764562606811523
    9. 'random' → logprob: -9.014562606811523
    10. 'collections' → logprob: -9.139562606811523

Token 41: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5489372611045837
    2. '
' → logprob: -1.0489373207092285
    3. '\n' → logprob: -3.2989373207092285
    4. '<|end|>' → logprob: -4.2989373207092285
    5. '#' → logprob: -4.6739373207092285
    6. '' → logprob: -5.0489373207092285
    7. '\' → logprob: -6.1739373207092285
    8. 'import' → logprob: -6.9239373207092285
    9. '


' → logprob: -7.1739373207092285
    10. ' 

' → logprob: -7.6739373207092285

Token 42: 'def' (ID: 1314)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.4310767948627472
    2. '
' → logprob: -1.0560767650604248
    3. '#' → logprob: -7.556077003479004
    4. '\n' → logprob: -7.806077003479004
    5. '
' → logprob: -7.931077003479004
    6. '<|end|>' → logprob: -8.056077003479004
    7. '```' → logprob: -8.681077003479004
    8. 'def' → logprob: -8.806077003479004
    9. 'import' → logprob: -9.056077003479004
    10. '


' → logprob: -9.181077003479004

Token 43: ' LI' (ID: 14875)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.43717876076698303
    2. '_' → logprob: -1.0621787309646606
    3. '<|end|>' → logprob: -6.312178611755371
    4. ' main' → logprob: -7.187178611755371
    5. ' space' → logprob: -7.562178611755371
    6. '_space' → logprob: -7.687178611755371
    7. ' process' → logprob: -7.812178611755371
    8. ' solve' → logprob: -7.812178611755371
    9. ' dfs' → logprob: -8.062178611755371
    10. ' _' → logprob: -8.062178611755371

Token 44: '():' (ID: 9442)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.4959181845188141
    2. 'st' → logprob: -1.6209181547164917
    3. 'ST' → logprob: -2.1209182739257812
    4. 'n' → logprob: -4.245918273925781
    5. '():' → logprob: -4.495918273925781
    6. 'NE' → logprob: -4.495918273925781
    7. '()' → logprob: -4.745918273925781
    8. 'NT' → logprob: -4.995918273925781
    9. 'ne' → logprob: -5.120918273925781
    10. 'nt' → logprob: -5.370918273925781

Token 45: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.010132847353816032
    2. 'return' → logprob: -5.135132789611816
    3. ' ' → logprob: -6.135132789611816
    4. ' []' → logprob: -7.385132789611816
    5. 'eturn' → logprob: -7.510132789611816
    6. ' list' → logprob: -7.885132789611816
    7. '[]' → logprob: -9.010132789611816
    8. ' map' → logprob: -9.135132789611816
    9. '    ' → logprob: -9.260132789611816
    10. ' input' → logprob: -10.010132789611816

Token 46: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3873784840106964
    2. ' list' → logprob: -1.137378454208374
    3. 'map' → logprob: -7.887378692626953
    4. 'int' → logprob: -9.637378692626953
    5. ' map' → logprob: -9.762378692626953
    6. '[' → logprob: -13.262378692626953
    7. '[list' → logprob: -13.387378692626953
    8. '[int' → logprob: -13.512378692626953
    9. ' int' → logprob: -14.262378692626953
    10. '	list' → logprob: -14.512378692626953

Token 47: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0009256341145373881
    2. '(' → logprob: -7.000925540924072
    3. '(int' → logprob: -11.37592601776123
    4. '(input' → logprob: -13.50092601776123
    5. '()' → logprob: -14.62592601776123
    6. '(range' → logprob: -15.37592601776123
    7. '	map' → logprob: -15.75092601776123
    8. 'map' → logprob: -15.87592601776123
    9. ' map' → logprob: -15.87592601776123
    10. '(
' → logprob: -16.625925064086914

Token 48: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00021843716967850924
    2. 'int' → logprob: -8.500218391418457
    3. '(' → logprob: -11.875218391418457
    4. '<int' → logprob: -12.125218391418457
    5. '[int' → logprob: -14.250218391418457
    6. ',int' → logprob: -14.375218391418457
    7. '=int' → logprob: -14.375218391418457
    8. ' int' → logprob: -15.250218391418457
    9. ']int' → logprob: -15.375218391418457
    10. '	int' → logprob: -16.500219345092773

Token 49: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.49686354398727417
    2. '(input' → logprob: -1.121863603591919
    3. ',' → logprob: -3.496863603591919
    4. 'input' → logprob: -4.12186336517334
    5. '(sys' → logprob: -4.24686336517334
    6. '(' → logprob: -5.62186336517334
    7. ' input' → logprob: -7.24686336517334
    8. 'sys' → logprob: -7.99686336517334
    9. ')' → logprob: -8.37186336517334
    10. ' sys' → logprob: -10.24686336517334

Token 50: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.044523369520902634
    2. ' input' → logprob: -3.2945234775543213
    3. 'sys' → logprob: -5.294523239135742
    4. ' sys' → logprob: -6.544523239135742
    5. ',input' → logprob: -14.044523239135742
    6. 'stdin' → logprob: -14.169523239135742
    7. ')' → logprob: -14.669523239135742
    8. 'in' → logprob: -14.919523239135742
    9. '	input' → logprob: -15.044523239135742
    10. '=sys' → logprob: -15.044523239135742

Token 51: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0041960482485592365
    2. '.' → logprob: -5.5041961669921875
    3. '.readline' → logprob: -9.379196166992188
    4. '.argv' → logprob: -11.004196166992188
    5. '.stdout' → logprob: -11.629196166992188
    6. '.std' → logprob: -12.754196166992188
    7. '.input' → logprob: -13.004196166992188
    8. '(stdin' → logprob: -14.504196166992188
    9. ' .' → logprob: -14.629196166992188
    10. '.st' → logprob: -14.629196166992188

Token 52: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0003034074034076184
    2. '.read' → logprob: -8.250303268432617
    3. '.' → logprob: -10.125303268432617
    4. '.readlines' → logprob: -13.875303268432617
    5. '.stdin' → logprob: -14.500303268432617
    6. ' .' → logprob: -15.375303268432617
    7. ' readline' → logprob: -15.500303268432617
    8. '.buffer' → logprob: -15.750303268432617
    9. ').' → logprob: -17.000303268432617
    10. '.re' → logprob: -17.375303268432617

Token 53: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.885492621222511e-05
    2. '()' → logprob: -9.875068664550781
    3. '()))' → logprob: -11.250068664550781
    4. ' ().' → logprob: -12.750068664550781
    5. '())' → logprob: -13.750068664550781
    6. '))' → logprob: -16.50006866455078
    7. ')' → logprob: -16.87506866455078
    8. '())))' → logprob: -16.87506866455078
    9. '(' → logprob: -17.37506866455078
    10. '()));' → logprob: -17.50006866455078

Token 54: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.24195478856563568
    2. 'rstrip' → logprob: -1.7419548034667969
    3. 'split' → logprob: -3.241954803466797
    4. 'read' → logprob: -7.366954803466797
    5. ' strip' → logprob: -12.491954803466797
    6. 'decode' → logprob: -12.491954803466797
    7. 'rs' → logprob: -12.616954803466797
    8. ' split' → logprob: -15.366954803466797
    9. ')' → logprob: -15.491954803466797
    10. 'rst' → logprob: -16.741954803466797

Token 55: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.314959853887558
    2. '))' → logprob: -1.3149598836898804
    3. '()' → logprob: -6.68996000289917
    4. '())' → logprob: -7.93996000289917
    5. ')' → logprob: -10.314959526062012
    6. '()))
' → logprob: -10.439959526062012
    7. ')))' → logprob: -10.939959526062012
    8. '(' → logprob: -11.939959526062012
    9. '())))' → logprob: -12.564959526062012
    10. '()))

' → logprob: -12.814959526062012

Token 56: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014997147023677826
    2. '
' → logprob: -4.2649970054626465
    3. '\n' → logprob: -8.639997482299805
    4. '\' → logprob: -8.764997482299805
    5. '#' → logprob: -9.264997482299805
    6. '' → logprob: -9.639997482299805
    7. '```' → logprob: -9.639997482299805
    8. ' def' → logprob: -9.889997482299805
    9. '
' → logprob: -10.014997482299805
    10. '

' → logprob: -10.514997482299805

Token 57: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.01838930882513523
    2. ' I' → logprob: -4.1433892250061035
    3. 'II' → logprob: -6.1433892250061035
    4. ' II' → logprob: -9.393389701843262
    5. 'int' → logprob: -10.268389701843262
    6. 'IS' → logprob: -10.768389701843262
    7. 'S' → logprob: -11.143389701843262
    8. 'input' → logprob: -11.518389701843262
    9. 'MI' → logprob: -11.893389701843262
    10. 'IN' → logprob: -12.018389701843262

Token 58: '():' (ID: 9442)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6116726994514465
    2. 'nt' → logprob: -1.1116726398468018
    3. '()' → logprob: -2.7366726398468018
    4. 'N' → logprob: -2.9866726398468018
    5. '():' → logprob: -4.611672878265381
    6. 'nit' → logprob: -5.861672878265381
    7. 'NT' → logprob: -8.236672401428223
    8. 'np' → logprob: -10.236672401428223
    9. ' nt' → logprob: -10.486672401428223
    10. '```' → logprob: -10.861672401428223

Token 59: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.23901014029979706
    2. ' int' → logprob: -1.9890100955963135
    3. 'int' → logprob: -2.8640100955963135
    4. 'return' → logprob: -3.9890100955963135
    5. ' ' → logprob: -8.739009857177734
    6. '=int' → logprob: -10.239009857177734
    7. '(int' → logprob: -12.239009857177734
    8. '<int' → logprob: -14.239009857177734
    9. ' ' → logprob: -14.239009857177734
    10. '    ' → logprob: -14.364009857177734

Token 60: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01815006136894226
    2. ' int' → logprob: -4.0181498527526855
    3. '(int' → logprob: -16.393150329589844
    4. ' ' → logprob: -16.768150329589844
    5. '	int' → logprob: -16.893150329589844
    6. '  ' → logprob: -18.143150329589844
    7. 'nt' → logprob: -18.393150329589844
    8. '=int' → logprob: -18.393150329589844
    9. '<int' → logprob: -18.643150329589844
    10. 'in' → logprob: -18.893150329589844

Token 61: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931813359260559
    2. '(sys' → logprob: -0.6931813359260559
    3. ' (' → logprob: -11.193181037902832
    4. '(input' → logprob: -12.443181037902832
    5. '(
' → logprob: -12.693181037902832
    6. 'sys' → logprob: -13.068181037902832
    7. '(system' → logprob: -13.068181037902832
    8. '(Sys' → logprob: -13.068181037902832
    9. '(int' → logprob: -13.193181037902832
    10. '(System' → logprob: -13.693181037902832

Token 62: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -3.762356209335849e-05
    2. 'stdin' → logprob: -10.37503719329834
    3. '.stdout' → logprob: -13.00003719329834
    4. '.' → logprob: -13.37503719329834
    5. '.readline' → logprob: -13.87503719329834
    6. '.std' → logprob: -13.87503719329834
    7. ' stdin' → logprob: -15.37503719329834
    8. '(stdin' → logprob: -16.000038146972656
    9. '.argv' → logprob: -16.500038146972656
    10. ' .' → logprob: -17.375038146972656

Token 63: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00017350474081467837
    2. '().' → logprob: -10.000173568725586
    3. '.stdin' → logprob: -10.000173568725586
    4. '.' → logprob: -10.500173568725586
    5. 'read' → logprob: -10.750173568725586
    6. ' readline' → logprob: -11.250173568725586
    7. '.read' → logprob: -12.250173568725586
    8. ')' → logprob: -12.375173568725586
    9. 'stdin' → logprob: -12.625173568725586
    10. '(stdin' → logprob: -12.875173568725586

Token 64: '())
' (ID: 4574)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.6985411047935486
    2. '())' → logprob: -0.6985411047935486
    3. '()))' → logprob: -5.448541164398193
    4. '()' → logprob: -6.948541164398193
    5. '.readline' → logprob: -9.698540687561035
    6. ')' → logprob: -10.698540687561035
    7. ' ())' → logprob: -10.823540687561035
    8. '))' → logprob: -13.198540687561035
    9. '())
' → logprob: -13.198540687561035
    10. '()[' → logprob: -13.573540687561035

Token 65: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0063645667396485806
    2. '
' → logprob: -5.256364345550537
    3. '\n' → logprob: -8.131364822387695
    4. '\' → logprob: -8.131364822387695
    5. 'd' → logprob: -9.131364822387695
    6. '#' → logprob: -9.131364822387695
    7. '<|end|>' → logprob: -9.506364822387695
    8. ' def' → logprob: -9.756364822387695
    9. '

' → logprob: -10.506364822387695
    10. '' → logprob: -10.756364822387695

Token 66: ' LS' (ID: 60790)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.014042684808373451
    2. 'LS' → logprob: -4.514042854309082
    3. 'L' → logprob: -6.639042854309082
    4. ' S' → logprob: -6.764042854309082
    5. 'LI' → logprob: -8.764042854309082
    6. 'SI' → logprob: -8.764042854309082
    7. 's' → logprob: -9.889042854309082
    8. 'input' → logprob: -10.014042854309082
    9. ' LS' → logprob: -10.139042854309082
    10. 'SL' → logprob: -11.514042854309082

Token 67: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.005943018011748791
    2. '()' → logprob: -5.1309428215026855
    3. '():
' → logprob: -12.255943298339844
    4. ' ():' → logprob: -12.380943298339844
    5. ' ()' → logprob: -13.255943298339844
    6. '().' → logprob: -13.630943298339844
    7. '()>' → logprob: -13.755943298339844
    8. '():

' → logprob: -15.255943298339844
    9. '(){' → logprob: -15.880943298339844
    10. '(' → logprob: -16.005943298339844

Token 68: 'return' (ID: 1034)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7216529250144958
    2. 'return' → logprob: -1.8466529846191406
    3. ' lambda' → logprob: -2.0966529846191406
    4. ' sys' → logprob: -2.3466529846191406
    5. 'sys' → logprob: -2.7216529846191406
    6. '()' → logprob: -3.4716529846191406
    7. 'lambda' → logprob: -3.7216529846191406
    8. '(sys' → logprob: -5.221652984619141
    9. '().' → logprob: -5.721652984619141
    10. '=sys' → logprob: -5.971652984619141

Token 69: ' list' (ID: 1562)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -1.2498884201049805
    2. 'sys' → logprob: -1.2498884201049805
    3. ' list' → logprob: -1.3748884201049805
    4. 'list' → logprob: -1.7498884201049805
    5. '(sys' → logprob: -9.62488842010498
    6. '[' → logprob: -9.62488842010498
    7. ' [' → logprob: -9.74988842010498
    8. '[list' → logprob: -9.99988842010498
    9. '=sys' → logprob: -11.37488842010498
    10. 'input' → logprob: -12.12488842010498

Token 70: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.06448431313037872
    2. '(' → logprob: -2.9394843578338623
    3. '(sys' → logprob: -5.064484119415283
    4. '(str' → logprob: -5.814484119415283
    5. ' (' → logprob: -9.564484596252441
    6. '()' → logprob: -10.064484596252441
    7. '(strip' → logprob: -10.189484596252441
    8. 'map' → logprob: -10.689484596252441
    9. '(input' → logprob: -11.439484596252441
    10. '(system' → logprob: -11.564484596252441

Token 71: '(list' (ID: 13116)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.00026300468016415834
    2. 'str' → logprob: -8.250263214111328
    3. '(' → logprob: -14.000263214111328
    4. '=str' → logprob: -14.375263214111328
    5. '(lambda' → logprob: -16.000263214111328
    6. '	str' → logprob: -17.000263214111328
    7. ',str' → logprob: -17.000263214111328
    8. ' str' → logprob: -17.625263214111328
    9. '[str' → logprob: -17.750263214111328
    10. '(int' → logprob: -18.125263214111328

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5358712673187256
    2. '(sys' → logprob: -0.9108712673187256
    3. ',input' → logprob: -4.535871505737305
    4. ',str' → logprob: -7.410871505737305
    5. 'sys' → logprob: -7.535871505737305
    6. ' ,' → logprob: -8.410871505737305
    7. '=sys' → logprob: -8.660871505737305
    8. '(' → logprob: -8.910871505737305
    9. ',(' → logprob: -9.535871505737305
    10. '(input' → logprob: -9.535871505737305

Token 73: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0007248217007145286
    2. ' sys' → logprob: -7.250724792480469
    3. '(sys' → logprob: -11.625724792480469
    4. 'input' → logprob: -12.375724792480469
    5. 'str' → logprob: -13.375724792480469
    6. '=sys' → logprob: -15.875724792480469
    7. 'map' → logprob: -16.62572479248047
    8. '	sys' → logprob: -17.12572479248047
    9. ' ' → logprob: -18.37572479248047
    10. ' input' → logprob: -18.50072479248047

Token 74: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.006560005713254213
    2. 'stdin' → logprob: -5.6315598487854
    3. '.readline' → logprob: -6.0065598487854
    4. '(stdin' → logprob: -8.381560325622559
    5. '().' → logprob: -8.631560325622559
    6. '.' → logprob: -9.756560325622559
    7. '.stdout' → logprob: -11.881560325622559
    8. 'sys' → logprob: -12.006560325622559
    9. '```' → logprob: -12.006560325622559
    10. ')' → logprob: -13.006560325622559

Token 75: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.3153644800186157
    2. '().' → logprob: -1.3153644800186157
    3. '()))' → logprob: -6.815364360809326
    4. '()' → logprob: -7.690364360809326
    5. '.readlines' → logprob: -9.440364837646484
    6. '())))' → logprob: -9.440364837646484
    7. '())' → logprob: -9.565364837646484
    8. '().__' → logprob: -9.565364837646484
    9. '))' → logprob: -9.940364837646484
    10. ')))' → logprob: -10.190364837646484

Token 76: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.868328920158092e-05
    2. '()))' → logprob: -10.750028610229492
    3. '()' → logprob: -12.125028610229492
    4. ' ().' → logprob: -13.875028610229492
    5. '))' → logprob: -14.625028610229492
    6. '().__' → logprob: -15.625028610229492
    7. '.readline' → logprob: -16.875028610229492
    8. '())' → logprob: -17.250028610229492
    9. '()[' → logprob: -17.250028610229492
    10. '().'' → logprob: -17.375028610229492

Token 77: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.14556953310966492
    2. 'rstrip' → logprob: -2.3955695629119873
    3. 'split' → logprob: -3.1455695629119873
    4. 'read' → logprob: -6.645569324493408
    5. ' strip' → logprob: -12.020569801330566
    6. 'decode' → logprob: -14.270569801330566
    7. 'replace' → logprob: -15.520569801330566
    8. ' split' → logprob: -15.520569801330566
    9. 'str' → logprob: -16.39556884765625
    10. 'rs' → logprob: -17.02056884765625

Token 78: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0021412204951047897
    2. '())' → logprob: -6.752140998840332
    3. '()' → logprob: -7.002140998840332
    4. '))' → logprob: -10.377140998840332
    5. '()))
' → logprob: -10.627140998840332
    6. '())))' → logprob: -13.502140998840332
    7. '()))

' → logprob: -13.752140998840332
    8. '()));' → logprob: -13.877140998840332
    9. '(' → logprob: -14.127140998840332
    10. '()),' → logprob: -14.752140998840332

Token 79: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00266983057372272
    2. '()' → logprob: -6.752669811248779
    3. 'd' → logprob: -7.252669811248779
    4. '\' → logprob: -7.752669811248779
    5. ')' → logprob: -9.502670288085938
    6. '#' → logprob: -9.877670288085938
    7. '()
' → logprob: -9.877670288085938
    8. '\n' → logprob: -10.002670288085938
    9. '```' → logprob: -10.252670288085938
    10. '(' → logprob: -10.377670288085938

Token 80: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00887797586619854
    2. 'L' → logprob: -5.133877754211426
    3. ' S' → logprob: -6.008877754211426
    4. 'LS' → logprob: -8.008877754211426
    5. ' L' → logprob: -9.883877754211426
    6. 'input' → logprob: -10.133877754211426
    7. '()' → logprob: -10.883877754211426
    8. 'I' → logprob: -11.133877754211426
    9. 's' → logprob: -11.758877754211426
    10. 'LI' → logprob: -12.133877754211426

Token 81: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0028109403792768717
    2. '()' → logprob: -5.877810955047607
    3. ' ():' → logprob: -12.87781047821045
    4. '()>' → logprob: -13.87781047821045
    5. '():
' → logprob: -14.50281047821045
    6. '().' → logprob: -14.50281047821045
    7. ' ()' → logprob: -14.62781047821045
    8. '())' → logprob: -14.75281047821045
    9. '()]' → logprob: -15.37781047821045
    10. '();' → logprob: -16.502811431884766

Token 82: ' return' (ID: 622)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.34769201278686523
    2. 'return' → logprob: -1.4726920127868652
    3. ' sys' → logprob: -2.9726920127868652
    4. ' return' → logprob: -4.347692012786865
    5. '(sys' → logprob: -8.972692489624023
    6. '=sys' → logprob: -9.597692489624023
    7. '	sys' → logprob: -10.347692489624023
    8. 'eturn' → logprob: -11.722692489624023
    9. 's' → logprob: -11.847692489624023
    10. 'input' → logprob: -11.972692489624023

Token 83: ' list' (ID: 1562)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00012082771718269214
    2. 'input' → logprob: -9.250121116638184
    3. ' sys' → logprob: -11.000121116638184
    4. 'str' → logprob: -11.750121116638184
    5. '(sys' → logprob: -16.500120162963867
    6. '	sys' → logprob: -18.000120162963867
    7. '=sys' → logprob: -18.500120162963867
    8. ' input' → logprob: -19.000120162963867
    9. 'string' → logprob: -19.625120162963867
    10. 's' → logprob: -20.000120162963867

Token 84: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.03250740095973015
    2. '(' → logprob: -4.282507419586182
    3. '()' → logprob: -4.407507419586182
    4. '(input' → logprob: -5.907507419586182
    5. '(str' → logprob: -6.282507419586182
    6. '(strip' → logprob: -7.657507419586182
    7. '(system' → logprob: -8.282506942749023
    8. '(stdin' → logprob: -8.407506942749023
    9. '().' → logprob: -9.657506942749023
    10. '(System' → logprob: -9.907506942749023

Token 85: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -2.4272752852994017e-05
    2. '.stdout' → logprob: -11.25002384185791
    3. 'stdin' → logprob: -11.50002384185791
    4. '.' → logprob: -14.87502384185791
    5. '.std' → logprob: -15.37502384185791
    6. '.readline' → logprob: -16.000024795532227
    7. '.argv' → logprob: -16.125024795532227
    8. ' stdin' → logprob: -16.250024795532227
    9. '(stdin' → logprob: -16.250024795532227
    10. '.stderr' → logprob: -17.250024795532227

Token 86: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.024645311757922173
    2. '().' → logprob: -3.7746453285217285
    3. '(stdin' → logprob: -7.6496453285217285
    4. '.stdin' → logprob: -8.02464485168457
    5. 'stdin' → logprob: -8.39964485168457
    6. ' readline' → logprob: -9.02464485168457
    7. '()' → logprob: -9.77464485168457
    8. ')' → logprob: -9.77464485168457
    9. '())' → logprob: -10.02464485168457
    10. '```' → logprob: -11.02464485168457

Token 87: '())' (ID: 3516)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.001706367009319365
    2. '())' → logprob: -6.501706600189209
    3. '()' → logprob: -8.50170612335205
    4. '()[' → logprob: -15.37670612335205
    5. ' ().' → logprob: -15.37670612335205
    6. ')' → logprob: -16.251707077026367
    7. '();)' → logprob: -16.376707077026367
    8. '().__' → logprob: -16.501707077026367
    9. '()]' → logprob: -17.251707077026367
    10. '()-' → logprob: -17.376707077026367

Token 88: '[:-' (ID: 63556)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8958341479301453
    2. '.strip' → logprob: -0.8958341479301453
    3. '().' → logprob: -2.77083420753479
    4. '(' → logprob: -3.27083420753479
    5. 'strip' → logprob: -4.020833969116211
    6. 'rstrip' → logprob: -4.395833969116211
    7. '()\' → logprob: -4.520833969116211
    8. '.readline' → logprob: -4.645833969116211
    9. '.rstrip' → logprob: -5.020833969116211
    10. '(strip' → logprob: -5.270833969116211

Token 89: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. '```' → logprob: -19.875
    4. '
' → logprob: -20.25
    5. '   ' → logprob: -21.25
    6. '\n' → logprob: -21.375
    7. '  ' → logprob: -22.0
    8. '\' → logprob: -22.0
    9. '１' → logprob: -22.5
    10. '"\' → logprob: -22.875

Token 90: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.759734732331708e-05
    2. ']' → logprob: -11.500017166137695
    3. ')
' → logprob: -12.750017166137695
    4. '）' → logprob: -14.000017166137695
    5. '>' → logprob: -14.250017166137695
    6. '<|end|>' → logprob: -14.250017166137695
    7. '()' → logprob: -14.500017166137695
    8. '')' → logprob: -15.125017166137695
    9. '`)' → logprob: -15.250017166137695
    10. '))' → logprob: -15.250017166137695

Token 91: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4409347474575043
    2. '
' → logprob: -1.1909347772598267
    3. '#' → logprob: -3.440934658050537
    4. '\n' → logprob: -5.190934658050537
    5. '<|end|>' → logprob: -5.315934658050537
    6. '\' → logprob: -5.690934658050537
    7. 'd' → logprob: -6.190934658050537
    8. ' 
' → logprob: -7.315934658050537
    9. 'n' → logprob: -7.440934658050537
    10. '```' → logprob: -7.440934658050537

Token 92: ' IR' (ID: 23712)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.3180147409439087
    2. 'R' → logprob: -1.5680147409439087
    3. '_' → logprob: -2.693014621734619
    4. 'T' → logprob: -2.818014621734619
    5. 'print' → logprob: -3.068014621734619
    6. ' input' → logprob: -3.193014621734619
    7. ' main' → logprob: -3.193014621734619
    8. 'r' → logprob: -3.193014621734619
    9. 's' → logprob: -3.318014621734619
    10. ' ' → logprob: -3.318014621734619

Token 93: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.062311604619026184
    2. '()' → logprob: -2.8123116493225098
    3. 'A' → logprob: -9.437311172485352
    4. 'ead' → logprob: -9.687311172485352
    5. 'ange' → logprob: -10.187311172485352
    6. 'E' → logprob: -10.687311172485352
    7. '():
' → logprob: -10.937311172485352
    8. ' ()' → logprob: -11.437311172485352
    9. 'N' → logprob: -11.562311172485352
    10. 'e' → logprob: -11.687311172485352

Token 94: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -8.006006828509271e-05
    2. ')' → logprob: -9.500080108642578
    3. ' ):' → logprob: -12.625080108642578
    4. '):
' → logprob: -13.250080108642578
    5. ')：' → logprob: -17.000080108642578
    6. ''):' → logprob: -17.875080108642578
    7. '）：' → logprob: -17.875080108642578
    8. ')):' → logprob: -18.000080108642578
    9. '):

' → logprob: -18.375080108642578
    10. '():' → logprob: -18.375080108642578

Token 95: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016318554989993572
    2. ':
' → logprob: -6.876631736755371
    3. ':return' → logprob: -8.126631736755371
    4. '   ' → logprob: -8.376631736755371
    5. ' :' → logprob: -10.876631736755371
    6. ' return' → logprob: -10.876631736755371
    7. '):' → logprob: -12.001631736755371
    8. ' ' → logprob: -12.126631736755371
    9. ' for' → logprob: -12.376631736755371
    10. 'for' → logprob: -12.501631736755371

Token 96: ' l' (ID: 305)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.15603385865688324
    2. 'return' → logprob: -2.031033754348755
    3. ' for' → logprob: -5.281033992767334
    4. '   ' → logprob: -5.406033992767334
    5. ' r' → logprob: -6.656033992767334
    6. 'for' → logprob: -7.406033992767334
    7. 'r' → logprob: -7.531033992767334
    8. '    ' → logprob: -7.906033992767334
    9. ' ' → logprob: -8.156033515930176
    10. ' [' → logprob: -9.281033515930176

Token 97: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12607420980930328
    2. ' =' → logprob: -2.2510743141174316
    3. '=[]' → logprob: -4.876074314117432
    4. 'ist' → logprob: -6.001074314117432
    5. 'is' → logprob: -6.751074314117432
    6. 'ine' → logprob: -7.376074314117432
    7. 'st' → logprob: -7.376074314117432
    8. 'i' → logprob: -7.501074314117432
    9. '=[]
' → logprob: -10.501073837280273
    10. 'ines' → logprob: -10.876073837280273

Token 98: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0003076950670219958
    2. ' []' → logprob: -8.2503080368042
    3. '[' → logprob: -10.3753080368042
    4. '[]
' → logprob: -11.7503080368042
    5. '[int' → logprob: -13.2503080368042
    6. '[list' → logprob: -13.6253080368042
    7. '[n' → logprob: -13.7503080368042
    8. '[line' → logprob: -14.0003080368042
    9. '[I' → logprob: -14.7503080368042
    10. 'list' → logprob: -15.0003080368042

Token 99: 'None' (ID: 8505)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0009317061631008983
    2. 'int' → logprob: -7.000931739807129
    3. 'LI' → logprob: -11.625931739807129
    4. ' I' → logprob: -11.750931739807129
    5. '0' → logprob: -13.250931739807129
    6. ']' → logprob: -14.625931739807129
    7. '
' → logprob: -14.750931739807129
    8. '_I' → logprob: -15.500931739807129
    9. '   ' → logprob: -16.125930786132812
    10. '	I' → logprob: -16.375930786132812

Token 100: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03406921774148941
    2. 'for' → logprob: -4.034069061279297
    3. ']' → logprob: -4.784069061279297
    4. ']*' → logprob: -5.034069061279297
    5. '	for' → logprob: -7.409069061279297
    6. '   ' → logprob: -8.909069061279297
    7. '()' → logprob: -9.909069061279297
    8. ' ]' → logprob: -9.909069061279297
    9. ']*(' → logprob: -10.659069061279297
    10. ' ' → logprob: -11.159069061279297

Token 101: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10072772204875946
    2. ' _' → logprob: -2.3507277965545654
    3. ' ' → logprob: -7.975727558135986
    4. ' i' → logprob: -8.725728034973145
    5. 'i' → logprob: -11.850728034973145
    6. '_i' → logprob: -12.225728034973145
    7. ' in' → logprob: -13.475728034973145
    8. '  ' → logprob: -15.350728034973145
    9. '_range' → logprob: -15.350728034973145
    10. 'range' → logprob: -15.975728034973145

Token 102: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5250808596611023
    2. 'in' → logprob: -0.9000808596611023
    3. 'range' → logprob: -6.650080680847168
    4. ' ' → logprob: -8.025080680847168
    5. 'n' → logprob: -9.025080680847168
    6. '_' → logprob: -9.400080680847168
    7. ' range' → logprob: -10.150080680847168
    8. '<|end|>' → logprob: -10.150080680847168
    9. 's' → logprob: -11.275080680847168
    10. 'i' → logprob: -12.150080680847168

Token 103: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2519449293613434
    2. ' range' → logprob: -1.501944899559021
    3. '	range' → logprob: -11.876944541931152
    4. ' ' → logprob: -12.001944541931152
    5. 'rang' → logprob: -14.501944541931152
    6. '  ' → logprob: -14.501944541931152
    7. '   ' → logprob: -14.751944541931152
    8. '(range' → logprob: -15.126944541931152
    9. 'r' → logprob: -15.251944541931152
    10. 'ra' → logprob: -15.251944541931152

Token 104: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -8.180258191714529e-06
    2. '(' → logprob: -11.750008583068848
    3. ' (' → logprob: -16.25000762939453
    4. 'n' → logprob: -17.00000762939453
    5. ' n' → logprob: -17.75000762939453
    6. '(
' → logprob: -17.75000762939453
    7. '	n' → logprob: -19.75000762939453
    8. ')n' → logprob: -20.12500762939453
    9. ']' → logprob: -20.37500762939453
    10. '((' → logprob: -20.50000762939453

Token 105: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0019391077803447843
    2. ']' → logprob: -6.251939296722412
    3. ')' → logprob: -12.376938819885254
    4. ')]
' → logprob: -12.751938819885254
    5. ' ]' → logprob: -13.501938819885254
    6. ']
' → logprob: -14.126938819885254
    7. '])' → logprob: -14.376938819885254
    8. '}]' → logprob: -16.00193977355957
    9. '])]' → logprob: -16.12693977355957
    10. '>]' → logprob: -16.37693977355957

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2909524738788605
    2. '
' → logprob: -1.915952444076538
    3. '<|end|>' → logprob: -2.790952444076538
    4. '	for' → logprob: -3.915952444076538
    5. ' for' → logprob: -4.165952682495117
    6. 'for' → logprob: -5.415952682495117
    7. '    
' → logprob: -7.040952682495117
    8. '' → logprob: -7.165952682495117
    9. '\n' → logprob: -7.290952682495117
    10. '<|end|>' → logprob: -8.040952682495117

Token 107: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8339627981185913
    2. 'for' (adapté à ' for') → logprob: -1.0839627981185913
    3. '   ' → logprob: -2.083962917327881
    4. '	for' → logprob: -2.333962917327881
    5. '<|end|>' → logprob: -5.208962917327881
    6. ' ' → logprob: -8.083962440490723
    7. '<|end|>' → logprob: -9.958962440490723
    8. 'i' → logprob: -9.958962440490723
    9. '
' → logprob: -10.208962440490723
    10. '    
' → logprob: -10.333962440490723

Token 108: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0025018174201250076
    2. 'i' → logprob: -6.002501964569092
    3. ' ' → logprob: -11.127501487731934
    4. '_' → logprob: -12.002501487731934
    5. ' _' → logprob: -12.752501487731934
    6. '	i' → logprob: -13.502501487731934
    7. '_i' → logprob: -13.877501487731934
    8. '  ' → logprob: -17.87750244140625
    9. ' I' → logprob: -18.37750244140625
    10. ' x' → logprob: -18.62750244140625

Token 109: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11380303651094437
    2. 'in' → logprob: -2.2388031482696533
    3. ' ' → logprob: -6.988802909851074
    4. 'n' → logprob: -11.363802909851074
    5. ' i' → logprob: -11.488802909851074
    6. '	in' → logprob: -11.488802909851074
    7. 'range' → logprob: -11.863802909851074
    8. 'i' → logprob: -11.988802909851074
    9. ',' → logprob: -12.363802909851074
    10. '  ' → logprob: -13.613802909851074

Token 110: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4740792512893677
    2. 'range' → logprob: -0.9740792512893677
    3. '	range' → logprob: -14.224079132080078
    4. '(range' → logprob: -14.349079132080078
    5. ' ' → logprob: -14.849079132080078
    6. 'ra' → logprob: -15.974079132080078
    7. 'rang' → logprob: -16.099079132080078
    8. 'r' → logprob: -16.224079132080078
    9. ' ra' → logprob: -16.599079132080078
    10. ' rang' → logprob: -17.099079132080078

Token 111: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.048611097037792206
    2. '(' → logprob: -3.0486111640930176
    3. '(
' → logprob: -11.17361068725586
    4. ' (' → logprob: -12.42361068725586
    5. '()' → logprob: -13.42361068725586
    6. 'n' → logprob: -13.67361068725586
    7. '(

' → logprob: -14.42361068725586
    8. '<|end|>' → logprob: -14.67361068725586
    9. ' n' → logprob: -15.42361068725586
    10. '	n' → logprob: -15.67361068725586

Token 112: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005413581384345889
    2. '):
' → logprob: -7.7505412101745605
    3. ')' → logprob: -9.750541687011719
    4. ' ):' → logprob: -10.000541687011719
    5. ']:' → logprob: -12.625541687011719
    6. ':' → logprob: -13.125541687011719
    7. ' ' → logprob: -14.375541687011719
    8. '):
' → logprob: -14.875541687011719
    9. '   ' → logprob: -15.500541687011719
    10. '):(' → logprob: -15.500541687011719

Token 113: 'l' (ID: 75)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029547398909926414
    2. ' l' → logprob: -4.154547214508057
    3. ' 
' → logprob: -5.029547214508057
    4. ' ' → logprob: -6.279547214508057
    5. '<|end|>' → logprob: -6.404547214508057
    6. '   ' → logprob: -6.779547214508057
    7. '	' → logprob: -7.404547214508057
    8. '        
' → logprob: -8.279547691345215
    9. '    
' → logprob: -8.404547691345215
    10. '    ' → logprob: -8.404547691345215

Token 114: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.8802491215174086e-05
    2. '[' → logprob: -10.500028610229492
    3. '[int' → logprob: -14.875028610229492
    4. '[I' → logprob: -15.250028610229492
    5. 'i' → logprob: -15.750028610229492
    6. '```' → logprob: -16.375028610229492
    7. '\[' → logprob: -16.750028610229492
    8. '__[' → logprob: -16.875028610229492
    9. '[
' → logprob: -17.125028610229492
    10. '[input' → logprob: -17.375028610229492

Token 115: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003645568387582898
    2. ' =' → logprob: -5.628645420074463
    3. ']' → logprob: -10.753645896911621
    4. ']=' → logprob: -11.378645896911621
    5. ')' → logprob: -12.128645896911621
    6. ')=' → logprob: -12.253645896911621
    7. '=int' → logprob: -14.128645896911621
    8. '=

' → logprob: -14.503645896911621
    9. '=input' → logprob: -15.378645896911621
    10. ',' → logprob: -15.503645896911621

Token 116: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0025078821927309036
    2. ' =' → logprob: -6.00250768661499
    3. '=int' → logprob: -10.877508163452148
    4. '=sys' → logprob: -11.627508163452148
    5. '=input' → logprob: -13.627508163452148
    6. '=
' → logprob: -14.377508163452148
    7. '=

' → logprob: -14.502508163452148
    8. '=s' → logprob: -15.252508163452148
    9. '=random' → logprob: -15.377508163452148
    10. '=in' → logprob: -15.502508163452148

Token 117: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0971117615699768
    2. ' I' → logprob: -2.472111701965332
    3. 'LI' → logprob: -5.097111701965332
    4. 'int' → logprob: -6.347111701965332
    5. ' LI' → logprob: -8.722111701965332
    6. ' int' → logprob: -9.347111701965332
    7. ' ' → logprob: -11.347111701965332
    8. '	I' → logprob: -12.847111701965332
    9. '_I' → logprob: -13.847111701965332
    10. '   ' → logprob: -13.847111701965332

Token 118: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0004043361986987293
    2. '(' → logprob: -7.875404357910156
    3. '()
' → logprob: -10.875404357910156
    4. '()

' → logprob: -13.250404357910156
    5. '()]' → logprob: -13.875404357910156
    6. '()`' → logprob: -14.250404357910156
    7. ' ()' → logprob: -14.375404357910156
    8. '();' → logprob: -14.875404357910156
    9. '())' → logprob: -15.500404357910156
    10. '().' → logprob: -15.625404357910156

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016345973126590252
    2. '
' → logprob: -7.00163459777832
    3. 'return' → logprob: -8.37663459777832
    4. ' return' → logprob: -8.50163459777832
    5. '<|end|>' → logprob: -8.62663459777832
    6. '    
' → logprob: -10.62663459777832
    7. 'r' → logprob: -10.62663459777832
    8. ' ' → logprob: -10.75163459777832
    9. '	return' → logprob: -11.00163459777832
    10. '  ' → logprob: -12.75163459777832

Token 120: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7436603903770447
    2. ' return' → logprob: -1.3686604499816895
    3. '   ' → logprob: -1.4936604499816895
    4. '
' → logprob: -3.2436604499816895
    5. '	return' → logprob: -5.6186604499816895
    6. ' ' → logprob: -6.7436604499816895
    7. 'r' → logprob: -6.9936604499816895
    8. '<|end|>' → logprob: -8.368659973144531
    9. ' 
' → logprob: -8.993659973144531
    10. ':return' → logprob: -9.243659973144531

Token 121: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.47407910227775574
    2. 'l' → logprob: -0.9740791320800781
    3. '(l' → logprob: -13.599079132080078
    4. '	l' → logprob: -14.474079132080078
    5. ' ' → logprob: -15.224079132080078
    6. '[l' → logprob: -18.599079132080078
    7. '_l' → logprob: -18.599079132080078
    8. ' л' → logprob: -19.224079132080078
    9. ' ' → logprob: -19.474079132080078
    10. '(' → logprob: -19.599079132080078

Token 122: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06001388281583786
    2. 'def' → logprob: -3.060013771057129
    3. '<|end|>' → logprob: -4.560013771057129
    4. ' 
' → logprob: -8.810013771057129
    5. '

' → logprob: -9.060013771057129
    6. '\n' → logprob: -9.435013771057129
    7. '  
' → logprob: -9.435013771057129
    8. '#' → logprob: -9.560013771057129
    9. '    
' → logprob: -9.560013771057129
    10. '' → logprob: -9.560013771057129

Token 123: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23166100680828094
    2. '
' → logprob: -1.6066609621047974
    3. '#' → logprob: -6.481660842895508
    4. 'd' → logprob: -6.856660842895508
    5. ' 
' → logprob: -6.856660842895508
    6. '<|end|>' → logprob: -7.356660842895508
    7. '  
' → logprob: -8.106660842895508
    8. '\n' → logprob: -8.106660842895508
    9. '    
' → logprob: -8.231660842895508
    10. '' → logprob: -8.231660842895508

Token 124: ' L' (ID: 451)
  Prédit: 'IR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'IR' → logprob: -1.2643529176712036
    2. ' IR' → logprob: -1.3893529176712036
    3. ' main' → logprob: -2.389352798461914
    4. 'IS' → logprob: -2.889352798461914
    5. 'I' → logprob: -3.014352798461914
    6. ' DR' → logprob: -3.264352798461914
    7. 'DR' → logprob: -3.514352798461914
    8. 'LS' → logprob: -3.514352798461914
    9. 'main' → logprob: -3.639352798461914
    10. ' IS' → logprob: -3.889352798461914

Token 125: 'IR' (ID: 4368)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.005509788170456886
    2. 'R' → logprob: -6.005509853363037
    3. 'IR' → logprob: -6.505509853363037
    4. 'S' → logprob: -7.380509853363037
    5. '()' → logprob: -7.630509853363037
    6. 'ist' → logprob: -9.630509376525879
    7. 'IST' → logprob: -9.880509376525879
    8. '()
' → logprob: -10.005509376525879
    9. '():' → logprob: -10.380509376525879
    10. 'L' → logprob: -10.505509376525879

Token 126: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.11996734328568e-05
    2. '(' → logprob: -10.125041007995605
    3. '(N' → logprob: -14.375041007995605
    4. ' (' → logprob: -15.625041007995605
    5. '(i' → logprob: -16.500041961669922
    6. '(num' → logprob: -16.875041961669922
    7. '(a' → logprob: -17.500041961669922
    8. '(nn' → logprob: -17.625041961669922
    9. '(nb' → logprob: -17.875041961669922
    10. '(size' → logprob: -18.500041961669922

Token 127: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002251125843031332
    2. '):
' → logprob: -8.625225067138672
    3. ')' → logprob: -10.250225067138672
    4. '(n' → logprob: -12.125225067138672
    5. ' ):' → logprob: -12.750225067138672
    6. '):
' → logprob: -13.375225067138672
    7. '):

' → logprob: -15.750225067138672
    8. ')：' → logprob: -17.375225067138672
    9. ')):' → logprob: -17.625225067138672
    10. '():' → logprob: -17.625225067138672

Token 128: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6334049701690674
    2. '   ' → logprob: -1.5084049701690674
    3. 'return' → logprob: -2.3834049701690674
    4. '[]' → logprob: -2.8834049701690674
    5. '[' → logprob: -3.7584049701690674
    6. '():' → logprob: -4.008404731750488
    7. ' l' → logprob: -4.383404731750488
    8. ' list' → logprob: -4.758404731750488
    9. ' [' → logprob: -5.008404731750488
    10. ' []' → logprob: -5.508404731750488

Token 129: ' l' (ID: 305)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2059222310781479
    2. 'return' → logprob: -2.0809221267700195
    3. ' [' → logprob: -2.9559221267700195
    4. '[' → logprob: -5.3309221267700195
    5. '   ' → logprob: -6.3309221267700195
    6. '[list' → logprob: -6.9559221267700195
    7. '[]' → logprob: -7.5809221267700195
    8. ' l' → logprob: -7.8309221267700195
    9. '[l' → logprob: -8.33092212677002
    10. ' list' → logprob: -8.45592212677002

Token 130: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38716602325439453
    2. ' =' → logprob: -1.1371660232543945
    3. '=[]' → logprob: -8.387166023254395
    4. '()' → logprob: -9.887166023254395
    5. '():' → logprob: -12.262166023254395
    6. ' ' → logprob: -13.012166023254395
    7. ':' → logprob: -13.012166023254395
    8. '=[]
' → logprob: -13.512166023254395
    9. '[]' → logprob: -13.637166023254395
    10. '(' → logprob: -13.637166023254395

Token 131: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.6948587894439697
    2. '[' → logprob: -1.5698587894439697
    3. ' [' → logprob: -1.6948587894439697
    4. '[]' → logprob: -2.3198587894439697
    5. '[List' → logprob: -5.444858551025391
    6. ' []' → logprob: -5.444858551025391
    7. '[L' → logprob: -8.06985855102539
    8. 'list' → logprob: -8.06985855102539
    9. '[I' → logprob: -8.19485855102539
    10. '[l' → logprob: -8.81985855102539

Token 132: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.23063091933727264
    2. 'list' → logprob: -2.105630874633789
    3. 'LI' → logprob: -2.480630874633789
    4. '0' → logprob: -8.605630874633789
    5. '[' → logprob: -8.855630874633789
    6. '[]' → logprob: -9.105630874633789
    7. ' None' → logprob: -11.105630874633789
    8. ' list' → logprob: -11.105630874633789
    9. 'li' → logprob: -11.855630874633789
    10. 'I' → logprob: -11.980630874633789

Token 133: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5759674310684204
    2. 'for' → logprob: -0.8259674310684204
    3. '	for' → logprob: -10.950967788696289
    4. ' ' → logprob: -12.075967788696289
    5. '
' → logprob: -13.575967788696289
    6. '(' → logprob: -13.950967788696289
    7. '   ' → logprob: -14.200967788696289
    8. '(for' → logprob: -14.325967788696289
    9. '  ' → logprob: -14.825967788696289
    10. ' (' → logprob: -15.450967788696289

Token 134: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.9030144810676575
    2. 'i' → logprob: -1.2780144214630127
    3. ' in' → logprob: -1.9030144214630127
    4. ' i' → logprob: -2.0280144214630127
    5. ' range' → logprob: -3.7780144214630127
    6. 'in' → logprob: -5.028014659881592
    7. '_' → logprob: -6.778014659881592
    8. '(range' → logprob: -6.778014659881592
    9. '(i' → logprob: -6.903014659881592
    10. '<|end|>' → logprob: -7.153014659881592

Token 135: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5444197058677673
    2. 'range' → logprob: -1.794419765472412
    3. ' in' → logprob: -2.294419765472412
    4. '(range' → logprob: -2.419419765472412
    5. '(' → logprob: -2.919419765472412
    6. ' range' → logprob: -4.919419765472412
    7. '(n' → logprob: -6.169419765472412
    8. ' (' → logprob: -9.044419288635254
    9. '<|end|>' → logprob: -9.669419288635254
    10. '(in' → logprob: -9.669419288635254

Token 136: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001817297888919711
    2. '(range' → logprob: -9.000182151794434
    3. ' range' → logprob: -9.750182151794434
    4. '(n' → logprob: -17.875181198120117
    5. '	range' → logprob: -19.000181198120117
    6. '(' → logprob: -19.375181198120117
    7. 'ran' → logprob: -21.375181198120117
    8. '.range' → logprob: -21.625181198120117
    9. 'rang' → logprob: -21.625181198120117
    10. 'n' → logprob: -22.250181198120117

Token 137: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.7968066206085496e-05
    2. 'n' → logprob: -10.500027656555176
    3. '(' → logprob: -15.250027656555176
    4. ' n' → logprob: -15.875027656555176
    5. '	n' → logprob: -18.625028610229492
    6. ' (' → logprob: -19.375028610229492
    7. 'int' → logprob: -20.250028610229492
    8. 's' → logprob: -20.250028610229492
    9. 'range' → logprob: -20.750028610229492
    10. 'l' → logprob: -20.875028610229492

Token 138: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.33118125796318054
    2. ']' → logprob: -1.581181287765503
    3. ')' → logprob: -2.581181287765503
    4. '])' → logprob: -7.706181049346924
    5. ']
' → logprob: -10.331181526184082
    6. ')
' → logprob: -11.581181526184082
    7. ')]
' → logprob: -11.956181526184082
    8. ' ]' → logprob: -12.706181526184082
    9. ' )' → logprob: -13.081181526184082
    10. ')])' → logprob: -14.206181526184082

Token 139: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 140: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.050930798053741455
    2. 'for' (adapté à ' for') → logprob: -3.1759307384490967
    3. '	for' → logprob: -5.425930976867676
    4. '   ' → logprob: -5.800930976867676
    5. '<|end|>' → logprob: -8.050930976867676
    6. ' ' → logprob: -9.050930976867676
    7. '
' → logprob: -11.050930976867676
    8. ' 
' → logprob: -12.050930976867676
    9. '    
' → logprob: -12.300930976867676
    10. '[' → logprob: -12.300930976867676

Token 141: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10022251307964325
    2. ' i' → logprob: -2.350222587585449
    3. '	i' → logprob: -11.47522258758545
    4. '<|end|>' → logprob: -12.60022258758545
    5. '_i' → logprob: -14.60022258758545
    6. ' ' → logprob: -14.72522258758545
    7. '   ' → logprob: -14.85022258758545
    8. '<|end|>' → logprob: -15.47522258758545
    9. '(i' → logprob: -15.72522258758545
    10. 'I' → logprob: -16.600221633911133

Token 142: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11289088428020477
    2. 'in' → logprob: -2.2378909587860107
    3. 'n' → logprob: -10.86289119720459
    4. 'range' → logprob: -10.98789119720459
    5. ' ' → logprob: -11.11289119720459
    6. ')' → logprob: -11.98789119720459
    7. '	in' → logprob: -13.23789119720459
    8. 'In' → logprob: -13.61289119720459
    9. 's' → logprob: -13.61289119720459
    10. '(' → logprob: -14.36289119720459

Token 143: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015153385465964675
    2. ' range' → logprob: -6.5015153884887695
    3. '(range' → logprob: -11.25151538848877
    4. '	range' → logprob: -18.126514434814453
    5. '(' → logprob: -19.501514434814453
    6. ' ' → logprob: -20.126514434814453
    7. 'ange' → logprob: -20.501514434814453
    8. 'rang' → logprob: -20.626514434814453
    9. 'ran' → logprob: -20.876514434814453
    10. '.range' → logprob: -21.376514434814453

Token 144: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.014352714642882347
    2. 'n' → logprob: -4.264352798461914
    3. 'range' → logprob: -8.639352798461914
    4. '(' → logprob: -11.639352798461914
    5. ' n' → logprob: -12.889352798461914
    6. ' range' → logprob: -15.139352798461914
    7. '(range' → logprob: -15.139352798461914
    8. '	n' → logprob: -16.264352798461914
    9. 'int' → logprob: -16.514352798461914
    10. 'l' → logprob: -16.764352798461914

Token 145: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07936108112335205
    2. ':' → logprob: -2.5793609619140625
    3. '):
' → logprob: -8.079360961914062
    4. ']:' → logprob: -9.579360961914062
    5. ':l' → logprob: -10.329360961914062
    6. ')' → logprob: -10.579360961914062
    7. ':
' → logprob: -11.454360961914062
    8. '   ' → logprob: -11.954360961914062
    9. ' ):' → logprob: -12.079360961914062
    10. ':i' → logprob: -12.579360961914062

Token 146: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.10109304636716843
    2. ' l' → logprob: -2.351093053817749
    3. '	l' → logprob: -7.35109281539917
    4. '   ' → logprob: -8.351093292236328
    5. '       ' → logprob: -12.351093292236328
    6. 'li' → logprob: -13.101093292236328
    7. ' ' → logprob: -14.601093292236328
    8. ' li' → logprob: -15.476093292236328
    9. 's' → logprob: -15.726093292236328
    10. '    ' → logprob: -15.726093292236328

Token 147: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.759734732331708e-05
    2. '[' → logprob: -11.000017166137695
    3. '[I' → logprob: -14.625017166137695
    4. ' [' → logprob: -15.625017166137695
    5. 'i' → logprob: -16.125017166137695
    6. '<|end|>' → logprob: -16.875017166137695
    7. '[
' → logprob: -17.000017166137695
    8. '```' → logprob: -17.500017166137695
    9. '\[' → logprob: -17.875017166137695
    10. ')[' → logprob: -18.250017166137695

Token 148: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5187098383903503
    2. ']' → logprob: -1.0187098979949951
    3. '()' → logprob: -4.018709659576416
    4. ']=' → logprob: -4.143709659576416
    5. ' =' → logprob: -5.393709659576416
    6. ')' → logprob: -5.643709659576416
    7. '()]' → logprob: -7.018709659576416
    8. '[' → logprob: -8.393710136413574
    9. '(' → logprob: -8.518710136413574
    10. ')=' → logprob: -9.018710136413574

Token 149: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31328123807907104
    2. ' =' → logprob: -1.3132812976837158
    3. ' ' → logprob: -11.313281059265137
    4. ')' → logprob: -13.313281059265137
    5. ']=' → logprob: -13.813281059265137
    6. '[' → logprob: -14.063281059265137
    7. ']' → logprob: -14.063281059265137
    8. '＝' → logprob: -14.188281059265137
    9. ')=' → logprob: -14.313281059265137
    10. '()' → logprob: -14.938281059265137

Token 150: ' LI' (ID: 14875)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.0002631238894537091
    2. ' LI' → logprob: -8.250263214111328
    3. 'I' → logprob: -13.625263214111328
    4. 'L' → logprob: -15.625263214111328
    5. ' ' → logprob: -15.750263214111328
    6. 'li' → logprob: -15.750263214111328
    7. 'list' → logprob: -16.875263214111328
    8. '  ' → logprob: -17.125263214111328
    9. 'Li' → logprob: -17.375263214111328
    10. 'int' → logprob: -18.375263214111328

Token 151: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.3795937522663735e-05
    2. '()
' → logprob: -11.37502384185791
    3. '()]' → logprob: -11.75002384185791
    4. ' ()' → logprob: -14.00002384185791
    5. '()`' → logprob: -14.12502384185791
    6. '(' → logprob: -14.37502384185791
    7. '())' → logprob: -14.37502384185791
    8. '()[' → logprob: -14.75002384185791
    9. '()

' → logprob: -15.00002384185791
    10. '()\' → logprob: -15.25002384185791

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005519277416169643
    2. ' return' → logprob: -5.380519390106201
    3. 'return' → logprob: -7.380519390106201
    4. '
' → logprob: -8.880518913269043
    5. '	return' → logprob: -10.505518913269043
    6. '<|end|>' → logprob: -10.505518913269043
    7. ' ' → logprob: -10.630518913269043
    8. '()' → logprob: -10.755518913269043
    9. '    
' → logprob: -11.380518913269043
    10. '(return' → logprob: -12.005518913269043

Token 153: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1638190746307373
    2. ' return' → logprob: -1.9138190746307373
    3. '   ' → logprob: -5.663819313049316
    4. '
' → logprob: -9.663819313049316
    5. '	return' → logprob: -10.663819313049316
    6. ' ' → logprob: -11.038819313049316
    7. 'eturn' → logprob: -12.163819313049316
    8. ':return' → logprob: -12.288819313049316
    9. '<|end|>' → logprob: -12.538819313049316
    10. '{return' → logprob: -14.663819313049316

Token 154: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.014194532297551632
    2. ' l' → logprob: -4.264194488525391
    3. '(l' → logprob: -10.38919448852539
    4. '	l' → logprob: -15.13919448852539
    5. ' ' → logprob: -17.88919448852539
    6. '[l' → logprob: -18.88919448852539
    7. '​' → logprob: -19.01419448852539
    8. '_l' → logprob: -19.13919448852539
    9. '(' → logprob: -19.26419448852539
    10. ' (' → logprob: -19.76419448852539

Token 155: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08692919462919235
    2. '
' → logprob: -2.8369290828704834
    3. '<|end|>' → logprob: -3.8369290828704834
    4. '()' → logprob: -6.7119293212890625
    5. ')' → logprob: -7.0869293212890625
    6. '#' → logprob: -7.4619293212890625
    7. '```' → logprob: -8.961929321289062
    8. ' def' → logprob: -9.461929321289062
    9. '()
' → logprob: -9.586929321289062
    10. '<|end|>' → logprob: -10.086929321289062

Token 156: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006755394395440817
    2. 'class' → logprob: -5.881755352020264
    3. '#' → logprob: -6.006755352020264
    4. 'd' → logprob: -6.881755352020264
    5. 'n' → logprob: -8.881755828857422
    6. '
' → logprob: -9.381755828857422
    7. '```' → logprob: -10.131755828857422
    8. '\' → logprob: -10.631755828857422
    9. '    
' → logprob: -10.881755828857422
    10. 'from' → logprob: -11.506755828857422

Token 157: ' SR' (ID: 30704)
  Prédit: 'IR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'IR' → logprob: -0.7049218416213989
    2. 'main' → logprob: -1.454921841621399
    3. 'SR' → logprob: -2.0799217224121094
    4. 'LS' → logprob: -2.7049217224121094
    5. 'RS' → logprob: -3.8299217224121094
    6. 'IS' → logprob: -4.204921722412109
    7. 'I' → logprob: -4.829921722412109
    8. 'DR' → logprob: -5.204921722412109
    9. 'D' → logprob: -5.329921722412109
    10. 'LR' → logprob: -5.579921722412109

Token 158: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.01712089404463768
    2. '(n' → logprob: -4.392120838165283
    3. '():
' → logprob: -5.517120838165283
    4. '()' → logprob: -7.517120838165283
    5. ' ():' → logprob: -11.517121315002441
    6. '()(' → logprob: -12.267121315002441
    7. '():

' → logprob: -12.392121315002441
    8. '(' → logprob: -12.517121315002441
    9. '(size' → logprob: -12.892121315002441
    10. '(N' → logprob: -13.017121315002441

Token 159: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07894861698150635
    2. '):
' → logprob: -2.578948497772217
    3. '):
' → logprob: -10.453948974609375
    4. ')' → logprob: -10.578948974609375
    5. '):

' → logprob: -12.578948974609375
    6. ' ):' → logprob: -14.203948974609375
    7. '):(' → logprob: -16.203948974609375
    8. '(n' → logprob: -16.703948974609375
    9. ')：' → logprob: -17.078948974609375
    10. 'def' → logprob: -17.078948974609375

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021194503642618656
    2. ' l' → logprob: -7.127119541168213
    3. 's' → logprob: -7.502119541168213
    4. 'l' → logprob: -7.627119541168213
    5. ' s' → logprob: -8.877119064331055
    6. '	l' → logprob: -9.377119064331055
    7. '	s' → logprob: -10.377119064331055
    8. '   ' → logprob: -11.877119064331055
    9. ' ' → logprob: -12.627119064331055
    10. '    ' → logprob: -13.127119064331055

Token 161: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.008332178927958012
    2. ' l' → logprob: -5.008332252502441
    3. '   ' → logprob: -6.758332252502441
    4. 's' → logprob: -8.008332252502441
    5. ' ' → logprob: -10.383332252502441
    6. '	l' → logprob: -10.383332252502441
    7. 'r' → logprob: -11.008332252502441
    8. 'a' → logprob: -11.258332252502441
    9. ' s' → logprob: -12.008332252502441
    10. '
' → logprob: -12.008332252502441

Token 162: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20156867802143097
    2. ' =' → logprob: -1.7015687227249146
    3. '=[]' → logprob: -8.826568603515625
    4. '=[]
' → logprob: -12.451568603515625
    5. '=[' → logprob: -12.701568603515625
    6. ' ' → logprob: -14.451568603515625
    7. '=list' → logprob: -15.076568603515625
    8. ' =[' → logprob: -15.201568603515625
    9. '=
' → logprob: -15.451568603515625
    10. '   ' → logprob: -16.076568603515625

Token 163: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01246750820428133
    2. '[S' → logprob: -5.262467384338379
    3. ' [' → logprob: -6.262467384338379
    4. 'set' → logprob: -6.762467384338379
    5. '[list' → logprob: -6.887467384338379
    6. '[]' → logprob: -6.887467384338379
    7. '['' → logprob: -7.637467384338379
    8. '[s' → logprob: -7.637467384338379
    9. '[string' → logprob: -8.012467384338379
    10. 'S' → logprob: -8.387467384338379

Token 164: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.019406896084547043
    2. 'S' → logprob: -4.644406795501709
    3. 'sys' → logprob: -4.894406795501709
    4. '""' → logprob: -7.269406795501709
    5. '[]' → logprob: -7.644406795501709
    6. '''' → logprob: -7.894406795501709
    7. 'list' → logprob: -8.519407272338867
    8. 'input' → logprob: -8.894407272338867
    9. 'set' → logprob: -9.769407272338867
    10. '[' → logprob: -10.269407272338867

Token 165: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002515135332942009
    2. ' for' → logprob: -6.0025153160095215
    3. '(for' → logprob: -10.752514839172363
    4. '(' → logprob: -11.002514839172363
    5. 'def' → logprob: -14.752514839172363
    6. '(n' → logprob: -15.252514839172363
    7. ')' → logprob: -15.252514839172363
    8. '	for' → logprob: -15.252514839172363
    9. ' (' → logprob: -16.62751579284668
    10. '.for' → logprob: -16.75251579284668

Token 166: ' i' (ID: 575)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.49337032437324524
    2. 'n' → logprob: -0.9933702945709229
    3. 'range' → logprob: -3.993370294570923
    4. 'int' → logprob: -7.618370532989502
    5. ' n' → logprob: -8.868370056152344
    6. ' range' → logprob: -11.118370056152344
    7. 'i' → logprob: -12.118370056152344
    8. '(range' → logprob: -12.243370056152344
    9. '(' → logprob: -12.368370056152344
    10. 'input' → logprob: -12.993370056152344

Token 167: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7170286774635315
    2. '(n' → logprob: -1.2170286178588867
    3. 'in' → logprob: -1.5920286178588867
    4. '(' → logprob: -4.967028617858887
    5. ' (' → logprob: -6.092028617858887
    6. '(range' → logprob: -6.092028617858887
    7. 'range' → logprob: -7.842028617858887
    8. 'for' → logprob: -9.092028617858887
    9. 'def' → logprob: -9.592028617858887
    10. ' ' → logprob: -9.717028617858887

Token 168: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001037815964082256
    2. ' range' → logprob: -9.750103950500488
    3. '(range' → logprob: -10.000103950500488
    4. '(n' → logprob: -17.750102996826172
    5. '	range' → logprob: -20.125102996826172
    6. 'in' → logprob: -20.250102996826172
    7. '(' → logprob: -20.375102996826172
    8. 'ran' → logprob: -20.750102996826172
    9. 'rang' → logprob: -20.750102996826172
    10. 'n' → logprob: -21.000102996826172

Token 169: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0036889128386974335
    2. 'n' → logprob: -6.253688812255859
    3. 'range' → logprob: -6.378688812255859
    4. '(range' → logprob: -10.12868881225586
    5. '(' → logprob: -11.00368881225586
    6. ' range' → logprob: -13.12868881225586
    7. 'def' → logprob: -13.75368881225586
    8. 's' → logprob: -13.75368881225586
    9. 'int' → logprob: -15.37868881225586
    10. ' n' → logprob: -16.00368881225586

Token 170: ')]
' (ID: 11587)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1319967657327652
    2. '):' → logprob: -2.3819968700408936
    3. '])' → logprob: -4.3819966316223145
    4. ')]' → logprob: -4.6319966316223145
    5. ']' → logprob: -4.8819966316223145
    6. '):
' → logprob: -7.5069966316223145
    7. ')
' → logprob: -7.8819966316223145
    8. ']:' → logprob: -7.8819966316223145
    9. ']):' → logprob: -9.256997108459473
    10. ')])' → logprob: -10.756997108459473

Token 171: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.27848517894744873
    2. '   ' → logprob: -1.6534851789474487
    3. 'for' → logprob: -3.1534852981567383
    4. 'def' → logprob: -5.028485298156738
    5. '
' → logprob: -6.903485298156738
    6. ' ' → logprob: -7.653485298156738
    7. '	for' → logprob: -7.903485298156738
    8. '<|end|>' → logprob: -7.903485298156738
    9. '  ' → logprob: -9.903485298156738
    10. ' def' → logprob: -10.153485298156738

Token 172: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7329986095428467
    2. ' for' → logprob: -1.2329986095428467
    3. 'for' (adapté à ' for') → logprob: -1.4829986095428467
    4. '	for' → logprob: -6.857998847961426
    5. ' ' → logprob: -9.357998847961426
    6. '
' → logprob: -11.357998847961426
    7. 'def' → logprob: -12.107998847961426
    8. '  ' → logprob: -13.107998847961426
    9. '    
' → logprob: -13.107998847961426
    10. '    ' → logprob: -14.232998847961426

Token 173: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005235648714005947
    2. ' i' → logprob: -5.25523567199707
    3. '_' → logprob: -14.00523567199707
    4. '_i' → logprob: -14.75523567199707
    5. ' in' → logprob: -15.75523567199707
    6. ' ' → logprob: -15.75523567199707
    7. ' _' → logprob: -16.13023567199707
    8. '	i' → logprob: -16.25523567199707
    9. '  ' → logprob: -16.63023567199707
    10. 'in' → logprob: -18.13023567199707

Token 174: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11299215257167816
    2. 'in' → logprob: -2.23799204826355
    3. 'i' → logprob: -8.862992286682129
    4. ' i' → logprob: -11.487992286682129
    5. ' ' → logprob: -12.362992286682129
    6. 'import' → logprob: -12.862992286682129
    7. 's' → logprob: -12.987992286682129
    8. '  ' → logprob: -13.237992286682129
    9. 'In' → logprob: -13.862992286682129
    10. 'n' → logprob: -13.862992286682129

Token 175: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006719991099089384
    2. ' range' → logprob: -5.006720066070557
    3. '(range' → logprob: -12.381719589233398
    4. 'sys' → logprob: -14.756719589233398
    5. 's' → logprob: -18.0067195892334
    6. '	range' → logprob: -18.3817195892334
    7. ' ' → logprob: -18.7567195892334
    8. ' sys' → logprob: -19.1317195892334
    9. '(sys' → logprob: -19.5067195892334
    10. '   ' → logprob: -19.8817195892334

Token 176: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.003186147892847657
    2. 'n' → logprob: -5.753186225891113
    3. '(' → logprob: -11.753186225891113
    4. 'range' → logprob: -15.753186225891113
    5. 'def' → logprob: -16.003185272216797
    6. 'int' → logprob: -16.253185272216797
    7. 's' → logprob: -16.503185272216797
    8. 'l' → logprob: -16.878185272216797
    9. '(s' → logprob: -17.378185272216797
    10. '(int' → logprob: -17.503185272216797

Token 177: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007941396324895322
    2. ':' → logprob: -7.250793933868408
    3. ':l' → logprob: -10.000794410705566
    4. '):
' → logprob: -10.500794410705566
    5. ']:' → logprob: -11.875794410705566
    6. ')' → logprob: -12.875794410705566
    7. 'l' → logprob: -13.625794410705566
    8. '}:' → logprob: -15.750794410705566
    9. ');' → logprob: -16.12579345703125
    10. ',l' → logprob: -16.37579345703125

Token 178: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.05500077083706856
    2. 'S' → logprob: -3.1800007820129395
    3. 's' → logprob: -4.6800007820129395
    4. ' l' → logprob: -6.1800007820129395
    5. '   ' → logprob: -7.8050007820129395
    6. ' S' → logprob: -8.930000305175781
    7. ' s' → logprob: -11.430000305175781
    8. '	l' → logprob: -11.930000305175781
    9. ' ' → logprob: -12.055000305175781
    10. '    ' → logprob: -12.055000305175781

Token 179: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.584239938296378e-06
    2. '[' → logprob: -12.000007629394531
    3. '[
' → logprob: -14.875007629394531
    4. '(i' → logprob: -15.625007629394531
    5. '[I' → logprob: -15.750007629394531
    6. 's' → logprob: -15.750007629394531
    7. '```' → logprob: -15.750007629394531
    8. '<|end|>' → logprob: -16.50000762939453
    9. 'i' → logprob: -16.75000762939453
    10. '\[' → logprob: -17.00000762939453

Token 180: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026248283684253693
    2. ' =' → logprob: -3.9012482166290283
    3. ']' → logprob: -5.401248455047607
    4. ']=' → logprob: -7.026248455047607
    5. ')' → logprob: -8.40124797821045
    6. ')=' → logprob: -10.90124797821045
    7. '[' → logprob: -11.15124797821045
    8. '=S' → logprob: -11.15124797821045
    9. 's' → logprob: -12.52624797821045
    10. '=
' → logprob: -12.77624797821045

Token 181: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0485999770462513
    2. ' =' → logprob: -3.0485999584198
    3. '=S' → logprob: -11.423600196838379
    4. '=
' → logprob: -14.423600196838379
    5. 'S' → logprob: -15.798600196838379
    6. ' =
' → logprob: -15.923600196838379
    7. '=

' → logprob: -15.923600196838379
    8. '=s' → logprob: -16.048599243164062
    9. ' ' → logprob: -16.048599243164062
    10. ')' → logprob: -16.048599243164062

Token 182: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0002998312993440777
    2. ' S' → logprob: -8.125299453735352
    3. 'sys' → logprob: -12.750299453735352
    4. ' ' → logprob: -15.625299453735352
    5. 'input' → logprob: -15.625299453735352
    6. 'list' → logprob: -15.750299453735352
    7. ' sys' → logprob: -16.00029945373535
    8. '   ' → logprob: -16.37529945373535
    9. '  ' → logprob: -16.50029945373535
    10. '	S' → logprob: -16.75029945373535

Token 183: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0239531509578228
    2. '()]' → logprob: -3.7739531993865967
    3. '()
' → logprob: -7.273952960968018
    4. ' ()' → logprob: -12.148953437805176
    5. '()`' → logprob: -12.898953437805176
    6. '()

' → logprob: -13.273953437805176
    7. '()[' → logprob: -13.398953437805176
    8. '()<' → logprob: -14.023953437805176
    9. '(' → logprob: -14.523953437805176
    10. '())' → logprob: -15.273953437805176

Token 184: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026449791621416807
    2. 'return' → logprob: -6.002645015716553
    3. ' return' → logprob: -8.877644538879395
    4. '	return' → logprob: -11.002644538879395
    5. '
' → logprob: -11.502644538879395
    6. ':return' → logprob: -13.502644538879395
    7. '<|end|>' → logprob: -14.877644538879395
    8. ' ' → logprob: -15.002644538879395
    9. '       ' → logprob: -15.627644538879395
    10. ')return' → logprob: -16.12764549255371

Token 185: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.14302197098731995
    2. ' return' → logprob: -2.143022060394287
    3. '   ' → logprob: -4.143022060394287
    4. ' ' → logprob: -10.268021583557129
    5. '	return' → logprob: -10.518021583557129
    6. '
' → logprob: -11.268021583557129
    7. 'eturn' → logprob: -11.768021583557129
    8. ':return' → logprob: -12.768021583557129
    9. '  ' → logprob: -13.143021583557129
    10. '<|end|>' → logprob: -14.643021583557129

Token 186: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.01416350994259119
    2. ' l' → logprob: -4.264163494110107
    3. '	l' → logprob: -17.139163970947266
    4. ' ' → logprob: -17.764163970947266
    5. ' ' → logprob: -19.139163970947266
    6. 'list' → logprob: -19.389163970947266
    7. '[' → logprob: -19.889163970947266
    8. '[l' → logprob: -19.889163970947266
    9. '(l' → logprob: -20.139163970947266
    10. 'L' → logprob: -20.389163970947266

Token 187: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22544783353805542
    2. '
' → logprob: -1.7254478931427002
    3. '<|end|>' → logprob: -4.100447654724121
    4. '#' → logprob: -5.850447654724121
    5. '\n' → logprob: -6.100447654724121
    6. '\' → logprob: -7.725447654724121
    7. 'newline' → logprob: -8.225447654724121
    8. ' def' → logprob: -8.850447654724121
    9. '```' → logprob: -8.850447654724121
    10. '(' → logprob: -8.975447654724121

Token 188: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04834546521306038
    2. '#' → logprob: -3.7983455657958984
    3. 'd' → logprob: -3.9233455657958984
    4. '<|end|>' → logprob: -6.173345565795898
    5. '
' → logprob: -6.923345565795898
    6. 'n' → logprob: -7.548345565795898
    7. '\' → logprob: -8.298345565795898
    8. '\n' → logprob: -8.298345565795898
    9. 'a' → logprob: -8.548345565795898
    10. '```' → logprob: -9.173345565795898

Token 189: ' L' (ID: 451)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.08206263184547424
    2. ' main' → logprob: -2.8320627212524414
    3. 'D' → logprob: -5.332062721252441
    4. 'DR' → logprob: -5.582062721252441
    5. 'LS' → logprob: -5.582062721252441
    6. 'IR' → logprob: -6.457062721252441
    7. 'SR' → logprob: -6.832062721252441
    8. 'DS' → logprob: -6.832062721252441
    9. 'RS' → logprob: -8.082062721252441
    10. 'solve' → logprob: -8.082062721252441

Token 190: 'SR' (ID: 22892)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.012449721805751324
    2. 'IR' → logprob: -5.012449741363525
    3. 'S' → logprob: -5.512449741363525
    4. 'R' → logprob: -6.512449741363525
    5. 'IS' → logprob: -9.762449264526367
    6. 'SR' → logprob: -10.387449264526367
    7. 'def' → logprob: -11.012449264526367
    8. 'E' → logprob: -11.137449264526367
    9. 'IST' → logprob: -11.887449264526367
    10. 'ISR' → logprob: -12.137449264526367

Token 191: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.0802738870552275e-05
    2. '(' → logprob: -12.12501049041748
    3. '():' → logprob: -12.50001049041748
    4. '()(' → logprob: -14.12501049041748
    5. ' (' → logprob: -14.25001049041748
    6. '()' → logprob: -15.75001049041748
    7. 'def' → logprob: -17.125011444091797
    8. '(N' → logprob: -17.375011444091797
    9. '():
' → logprob: -17.625011444091797
    10. '```' → logprob: -18.375011444091797

Token 192: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016939952969551086
    2. '):
' → logprob: -5.141940116882324
    3. '():' → logprob: -5.266940116882324
    4. '()' → logprob: -5.891940116882324
    5. '(n' → logprob: -5.891940116882324
    6. '():
' → logprob: -8.891940116882324
    7. ')' → logprob: -9.766940116882324
    8. 'def' → logprob: -10.891940116882324
    9. ' ):' → logprob: -11.016940116882324
    10. '()):
' → logprob: -11.266940116882324

Token 193: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021948188543319702
    2. ' l' → logprob: -4.021948337554932
    3. '(l' → logprob: -5.771948337554932
    4. ' ' → logprob: -7.896948337554932
    5. '(n' → logprob: -10.021947860717773
    6. ' return' → logprob: -10.271947860717773
    7. ' (' → logprob: -10.396947860717773
    8. '  ' → logprob: -10.521947860717773
    9. 'def' → logprob: -10.646947860717773
    10. ' list' → logprob: -10.646947860717773

Token 194: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.20169644057750702
    2. ' l' → logprob: -1.7016963958740234
    3. '[l' → logprob: -8.826696395874023
    4. '   ' → logprob: -9.076696395874023
    5. 'ls' → logprob: -12.201696395874023
    6. ' [' → logprob: -12.326696395874023
    7. '	l' → logprob: -12.576696395874023
    8. '[' → logprob: -12.701696395874023
    9. 'def' → logprob: -12.951696395874023
    10. 'return' → logprob: -13.951696395874023

Token 195: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693114578723907
    2. ' =' → logprob: -2.1269311904907227
    3. '=[]' → logprob: -13.001931190490723
    4. '=[' → logprob: -14.876931190490723
    5. '=list' → logprob: -16.001930236816406
    6. '=
' → logprob: -16.001930236816406
    7. '(' → logprob: -16.376930236816406
    8. '=[]
' → logprob: -16.626930236816406
    9. '＝' → logprob: -16.751930236816406
    10. '   ' → logprob: -17.376930236816406

Token 196: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00010402000043541193
    2. ' [' → logprob: -9.500103950500488
    3. '[List' → logprob: -11.375103950500488
    4. '[list' → logprob: -11.375103950500488
    5. '[[' → logprob: -12.250103950500488
    6. '[]' → logprob: -14.750103950500488
    7. '[len' → logprob: -15.625103950500488
    8. '[Any' → logprob: -15.750103950500488
    9. '[String' → logprob: -16.125104904174805
    10. '[n' → logprob: -16.625104904174805

Token 197: 'None' (ID: 8505)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.023252932354807854
    2. 'None' → logprob: -3.7732529640197754
    3. '(None' → logprob: -12.023252487182617
    4. ' None' → logprob: -14.023252487182617
    5. ' [' → logprob: -15.398252487182617
    6. '[[' → logprob: -15.773252487182617
    7. '_None' → logprob: -16.273252487182617
    8. '[]' → logprob: -16.523252487182617
    9. ',None' → logprob: -17.148252487182617
    10. 'def' → logprob: -17.648252487182617

Token 198: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12692862749099731
    2. ' for' → logprob: -2.1269285678863525
    3. '	for' → logprob: -15.126928329467773
    4. '(for' → logprob: -15.751928329467773
    5. ' ' → logprob: -17.626928329467773
    6. '(n' → logprob: -18.001928329467773
    7. '(' → logprob: -18.501928329467773
    8. 'def' → logprob: -19.376928329467773
    9. ' (' → logprob: -19.376928329467773
    10. ')' → logprob: -19.751928329467773

Token 199: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0020879271905869246
    2. '(range' → logprob: -6.2520880699157715
    3. ' range' → logprob: -9.002087593078613
    4. 'int' → logprob: -10.502087593078613
    5. '(n' → logprob: -12.252087593078613
    6. '(int' → logprob: -13.127087593078613
    7. '(' → logprob: -13.877087593078613
    8. 'for' → logprob: -15.002087593078613
    9. '	range' → logprob: -15.752087593078613
    10. '_range' → logprob: -15.877087593078613

Token 200: ' in' (ID: 306)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.006041727494448423
    2. ' (' → logprob: -5.506041526794434
    3. '(' → logprob: -6.631041526794434
    4. ' in' → logprob: -8.256041526794434
    5. '(range' → logprob: -8.756041526794434
    6. 'range' → logprob: -9.256041526794434
    7. 'for' → logprob: -9.381041526794434
    8. 'in' → logprob: -11.006041526794434
    9. ' for' → logprob: -11.131041526794434
    10. ' range' → logprob: -12.631041526794434

Token 201: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00103995599783957
    2. ' range' → logprob: -7.501039981842041
    3. '(n' → logprob: -7.751039981842041
    4. '(range' → logprob: -9.876039505004883
    5. 'int' → logprob: -13.001039505004883
    6. 'for' → logprob: -13.501039505004883
    7. 'n' → logprob: -14.001039505004883
    8. 'list' → logprob: -15.251039505004883
    9. 'return' → logprob: -15.876039505004883
    10. '(' → logprob: -16.251039505004883

Token 202: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.624555291840807e-05
    2. 'n' → logprob: -9.500076293945312
    3. ' (' → logprob: -14.625076293945312
    4. '(' → logprob: -14.625076293945312
    5. ' n' → logprob: -15.125076293945312
    6. 'def' → logprob: -16.375076293945312
    7. ')' → logprob: -18.750076293945312
    8. 'range' → logprob: -18.875076293945312
    9. 'int' → logprob: -19.250076293945312
    10. '   ' → logprob: -19.375076293945312

Token 203: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.08085928857326508
    2. ')]
' → logprob: -2.5808591842651367
    3. ')' → logprob: -6.455859184265137
    4. '):' → logprob: -8.955859184265137
    5. '):
' → logprob: -9.080859184265137
    6. ']' → logprob: -9.580859184265137
    7. ')]
' → logprob: -9.830859184265137
    8. ')
' → logprob: -11.205859184265137
    9. ')]

' → logprob: -11.830859184265137
    10. ']
' → logprob: -11.830859184265137

Token 204: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49854356050491333
    2. 'for' → logprob: -1.2485435009002686
    3. ' for' → logprob: -2.2485435009002686
    4. '	for' → logprob: -9.498543739318848
    5. ' ' → logprob: -11.123543739318848
    6. '
' → logprob: -11.748543739318848
    7. 'def' → logprob: -12.123543739318848
    8. ')' → logprob: -12.498543739318848
    9. '  ' → logprob: -13.623543739318848
    10. '    
' → logprob: -15.248543739318848

Token 205: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16298891603946686
    2. ' for' → logprob: -1.9129889011383057
    3. '   ' → logprob: -5.912989139556885
    4. '	for' → logprob: -9.787988662719727
    5. ' ' → logprob: -14.412988662719727
    6. '
' → logprob: -16.037988662719727
    7. 'def' → logprob: -16.537988662719727
    8. '  ' → logprob: -17.537988662719727
    9. ' ' → logprob: -18.662988662719727
    10. '    ' → logprob: -19.412988662719727

Token 206: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005530327325686812
    2. ' i' → logprob: -7.500553131103516
    3. '   ' → logprob: -17.750553131103516
    4. ' ' → logprob: -18.500553131103516
    5. ' in' → logprob: -18.750553131103516
    6. '...' → logprob: -18.750553131103516
    7. '```' → logprob: -18.875553131103516
    8. '
' → logprob: -19.125553131103516
    9. '_i' → logprob: -19.375553131103516
    10. 'in' → logprob: -19.375553131103516

Token 207: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20146001875400543
    2. 'in' → logprob: -1.7014600038528442
    3. '   ' → logprob: -11.201459884643555
    4. '	in' → logprob: -12.076459884643555
    5. 'n' → logprob: -12.326459884643555
    6. ' ' → logprob: -12.576459884643555
    7. 'range' → logprob: -12.576459884643555
    8. '    ' → logprob: -12.701459884643555
    9. '  ' → logprob: -13.201459884643555
    10. 'import' → logprob: -13.326459884643555

Token 208: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020377879263833165
    2. ' range' → logprob: -8.500204086303711
    3. '(range' → logprob: -15.250204086303711
    4. 'ran' → logprob: -18.37520408630371
    5. 'rang' → logprob: -18.75020408630371
    6. 'ra' → logprob: -19.12520408630371
    7. '	range' → logprob: -19.50020408630371
    8. 'r' → logprob: -20.37520408630371
    9. ' ' → logprob: -20.87520408630371
    10. '   ' → logprob: -21.50020408630371

Token 209: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004300388041883707
    2. 'range' → logprob: -5.504300594329834
    3. 'n' → logprob: -9.004300117492676
    4. '(range' → logprob: -9.504300117492676
    5. '(' → logprob: -10.754300117492676
    6. ' range' → logprob: -13.504300117492676
    7. 'def' → logprob: -14.379300117492676
    8. 'in' → logprob: -14.629300117492676
    9. 'for' → logprob: -14.879300117492676
    10. ' (' → logprob: -15.129300117492676

Token 210: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00017302791820839047
    2. '):
' → logprob: -8.75017261505127
    3. '(n' → logprob: -11.75017261505127
    4. 'n' → logprob: -13.12517261505127
    5. ',n' → logprob: -13.62517261505127
    6. ')' → logprob: -14.37517261505127
    7. ');' → logprob: -14.50017261505127
    8. '   ' → logprob: -14.50017261505127
    9. ' ):' → logprob: -14.50017261505127
    10. 'def' → logprob: -15.00017261505127

Token 211: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -6.158350151963532e-05
    2. ' l' → logprob: -9.875061988830566
    3. '	l' → logprob: -12.125061988830566
    4. '   ' → logprob: -12.375061988830566
    5. 'ls' → logprob: -15.000061988830566
    6. '       ' → logprob: -17.00006103515625
    7. '  ' → logprob: -17.87506103515625
    8. ' ' → logprob: -18.50006103515625
    9. 'LS' → logprob: -18.62506103515625
    10. '    ' → logprob: -18.62506103515625

Token 212: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -15.000000953674316
    3. '(i' → logprob: -15.500000953674316
    4. '[
' → logprob: -17.375
    5. '=' → logprob: -17.5
    6. '[n' → logprob: -17.625
    7. '[I' → logprob: -17.75
    8. '```' → logprob: -17.875
    9. 'i' → logprob: -18.0
    10. '[...]' → logprob: -19.0

Token 213: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24631638824939728
    2. '[i' → logprob: -1.7463164329528809
    3. ']' → logprob: -3.996316432952881
    4. ' =' → logprob: -4.246316432952881
    5. ']=' → logprob: -4.871316432952881
    6. ')' → logprob: -6.996316432952881
    7. '[' → logprob: -7.246316432952881
    8. '()' → logprob: -7.621316432952881
    9. ')=' → logprob: -8.371315956115723
    10. '[n' → logprob: -8.371315956115723

Token 214: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859180003404617
    2. ' =' → logprob: -3.0485918521881104
    3. ')' → logprob: -14.048591613769531
    4. ')=' → logprob: -14.173591613769531
    5. ']=' → logprob: -14.173591613769531
    6. '=
' → logprob: -14.673591613769531
    7. '=l' → logprob: -14.673591613769531
    8. ']' → logprob: -15.048591613769531
    9. '＝' → logprob: -15.423591613769531
    10. '[' → logprob: -16.04859161376953

Token 215: ' LS' (ID: 60790)
  Prédit: 'LS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LS' → logprob: -0.00020354038861114532
    2. ' LS' → logprob: -8.500203132629395
    3. 'S' → logprob: -17.37520408630371
    4. 'LI' → logprob: -19.37520408630371
    5. 'list' → logprob: -20.00020408630371
    6. 'ls' → logprob: -20.00020408630371
    7. 'L' → logprob: -20.00020408630371
    8. 'SS' → logprob: -21.37520408630371
    9. 'SL' → logprob: -21.37520408630371
    10. ' ' → logprob: -21.75020408630371

Token 216: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.029902171343564987
    2. '()]' → logprob: -3.779902219772339
    3. '()
' → logprob: -5.02990198135376
    4. '())' → logprob: -9.529902458190918
    5. '()]
' → logprob: -11.404902458190918
    6. '()

' → logprob: -12.654902458190918
    7. '()`' → logprob: -12.904902458190918
    8. '()[' → logprob: -13.404902458190918
    9. ' ()' → logprob: -13.529902458190918
    10. '()
' → logprob: -13.779902458190918

Token 217: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010418595047667623
    2. 'return' → logprob: -7.126041889190674
    3. ' return' → logprob: -8.501041412353516
    4. '	return' → logprob: -10.376041412353516
    5. '
' → logprob: -14.126041412353516
    6. ' ' → logprob: -14.126041412353516
    7. ':return' → logprob: -14.626041412353516
    8. '    
' → logprob: -15.126041412353516
    9. '<|end|>' → logprob: -15.376041412353516
    10. '  ' → logprob: -16.001041412353516

Token 218: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0015109316445887089
    2. ' return' → logprob: -6.751511096954346
    3. '   ' → logprob: -8.001510620117188
    4. '
' → logprob: -12.751510620117188
    5. '	return' → logprob: -13.251510620117188
    6. 'ret' → logprob: -15.126510620117188
    7. 'eturn' → logprob: -15.251510620117188
    8. ':return' → logprob: -15.501510620117188
    9. ' ' → logprob: -15.626510620117188
    10. '{return' → logprob: -17.251510620117188

Token 219: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0015053401002660394
    2. ' l' → logprob: -6.501505374908447
    3. '(l' → logprob: -12.751504898071289
    4. 'list' → logprob: -16.25150489807129
    5. 'ls' → logprob: -17.00150489807129
    6. '	l' → logprob: -17.75150489807129
    7. '[l' → logprob: -18.62650489807129
    8. '(n' → logprob: -19.25150489807129
    9. '(' → logprob: -19.37650489807129
    10. 'n' → logprob: -20.25150489807129

Token 220: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 221: 'sys' (ID: 17324)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.26898372173309326
    2. 'n' → logprob: -2.018983840942383
    3. '#' → logprob: -2.393983840942383
    4. 'd' → logprob: -5.018983840942383
    5. '<|end|>' → logprob: -6.393983840942383
    6. 'a' → logprob: -7.393983840942383
    7. ' ' → logprob: -7.518983840942383
    8. '
' → logprob: -8.018983840942383
    9. '\n' → logprob: -8.143983840942383
    10. '.' → logprob: -8.268983840942383

Token 222: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3501681983470917
    2. '.stdout' → logprob: -1.975168228149414
    3. '.exit' → logprob: -2.100168228149414
    4. '.stdin' → logprob: -3.475168228149414
    5. '.stderr' → logprob: -6.350168228149414
    6. '.argv' → logprob: -6.975168228149414
    7. '.setdefault' → logprob: -8.350168228149414
    8. '.readline' → logprob: -8.850168228149414
    9. '.write' → logprob: -9.350168228149414
    10. '.set' → logprob: -9.975168228149414

Token 223: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -8.208653162000701e-05
    2. 'limit' → logprob: -10.625082015991211
    3. '_rec' → logprob: -10.750082015991211
    4. 'set' → logprob: -11.375082015991211
    5. 're' → logprob: -11.500082015991211
    6. ' recursion' → logprob: -11.625082015991211
    7. 'ursion' → logprob: -13.375082015991211
    8. 'r' → logprob: -14.125082015991211
    9. 'execution' → logprob: -14.250082015991211
    10. 'sys' → logprob: -14.250082015991211

Token 224: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00011045700375689194
    2. 'urs' → logprob: -10.125110626220703
    3. 'limit' → logprob: -10.125110626220703
    4. 'ursive' → logprob: -11.000110626220703
    5. 'rs' → logprob: -12.000110626220703
    6. 'ur' → logprob: -12.875110626220703
    7. 'usion' → logprob: -13.250110626220703
    8. 'ursor' → logprob: -13.625110626220703
    9. '(' → logprob: -14.875110626220703
    10. '_limit' → logprob: -15.125110626220703

Token 225: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -6.704273118884885e-07
    2. ' limit' → logprob: -15.125000953674316
    3. '_limit' → logprob: -15.750000953674316
    4. 'lim' → logprob: -16.125
    5. 'depth' → logprob: -16.375
    6. 'Limit' → logprob: -19.125
    7. '(limit' → logprob: -20.375
    8. '-limit' → logprob: -20.5
    9. 'limits' → logprob: -21.0
    10. 'LIMIT' → logprob: -21.75

Token 226: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.512236498361744e-07
    2. '(
' → logprob: -15.500000953674316
    3. ' (' → logprob: -16.25
    4. '((' → logprob: -16.5
    5. '(int' → logprob: -18.375
    6. '100' → logprob: -19.625
    7. '()' → logprob: -20.75
    8. '250' → logprob: -20.75
    9. '(

' → logprob: -21.25
    10. '(pow' → logprob: -21.25

Token 227: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00043698702938854694
    2. '100' → logprob: -7.750436782836914
    3. '200' → logprob: -13.250436782836914
    4. '300' → logprob: -13.500436782836914
    5. '500' → logprob: -14.125436782836914
    6. '(' → logprob: -14.125436782836914
    7. 'pow' → logprob: -14.375436782836914
    8. ' ' → logprob: -14.875436782836914
    9. '250' → logprob: -15.625436782836914
    10. '999' → logprob: -15.750436782836914

Token 228: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.0008473869529552758
    2. '00' → logprob: -7.125847339630127
    3. '010' → logprob: -10.500847816467285
    4. '007' → logprob: -12.375847816467285
    5. '0' → logprob: -12.500847816467285
    6. '001' → logprob: -12.500847816467285
    7. '10' → logprob: -12.875847816467285
    8. '_' → logprob: -14.500847816467285
    9. '100' → logprob: -15.875847816467285
    10. '009' → logprob: -16.00084686279297

Token 229: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00021998681768309325
    2. ')' → logprob: -8.62522029876709
    3. '00' → logprob: -10.12522029876709
    4. '000' → logprob: -15.37522029876709
    5. ' ' → logprob: -17.000219345092773
    6. '(' → logprob: -17.500219345092773
    7. '1' → logprob: -17.625219345092773
    8. ' )' → logprob: -17.750219345092773
    9. ')
' → logprob: -18.375219345092773
    10. '   ' → logprob: -18.875219345092773

Token 230: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -14.875000953674316
    3. ' )' → logprob: -15.875000953674316
    4. ')`' → logprob: -18.625
    5. '),' → logprob: -19.125
    6. '))' → logprob: -19.75
    7. ')

' → logprob: -20.0
    8. ')}' → logprob: -20.125
    9. ')
' → logprob: -20.375
    10. ');' → logprob: -20.375

Token 231: 'mod' (ID: 4847)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4281972050666809
    2. '
' → logprob: -1.8031971454620361
    3. 'def' → logprob: -1.8031971454620361
    4. 'class' → logprob: -4.803197383880615
    5. '#' → logprob: -5.428197383880615
    6. 'N' → logprob: -6.053197383880615
    7. '

' → logprob: -6.428197383880615
    8. '\n' → logprob: -7.303197383880615
    9. '(n' → logprob: -7.678197383880615
    10. ' 
' → logprob: -8.053196907043457

Token 232: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04315744340419769
    2. '=' → logprob: -3.1681573390960693
    3. ' ' → logprob: -9.043157577514648
    4. '_' → logprob: -10.418157577514648
    5. ' =
' → logprob: -12.543157577514648
    6. ',' → logprob: -12.668157577514648
    7. ' =)' → logprob: -13.668157577514648
    8. '  ' → logprob: -14.918157577514648
    9. ' ,' → logprob: -15.293157577514648
    10. ' _' → logprob: -15.293157577514648

Token 233: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10041747242212296
    2. '10' → logprob: -2.350417375564575
    3. '100' → logprob: -8.475417137145996
    4. '1' → logprob: -13.100417137145996
    5. ' ' → logprob: -15.975417137145996
    6. '998' → logprob: -16.725418090820312
    7. 'int' → logprob: -17.100418090820312
    8. '109' → logprob: -17.725418090820312
    9. ' int' → logprob: -18.100418090820312
    10. '9' → logprob: -18.975418090820312

Token 234: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.003381722839549184
    2. '100' → logprob: -5.753381729125977
    3. '998' → logprob: -8.503381729125977
    4. '1' → logprob: -14.003381729125977
    5. ' ' → logprob: -15.128381729125977
    6. 'int' → logprob: -16.128381729125977
    7. '999' → logprob: -17.753381729125977
    8. '１０' → logprob: -18.253381729125977
    9. 'pow' → logprob: -18.503381729125977
    10. '(' → logprob: -18.753381729125977

Token 235: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -1.2233183042553719e-05
    2. '+' → logprob: -12.625012397766113
    3. '9' → logprob: -12.625012397766113
    4. '0' → logprob: -13.375012397766113
    5. '_' → logprob: -13.500012397766113
    6. '007' → logprob: -13.625012397766113
    7. '```' → logprob: -14.375012397766113
    8. '00' → logprob: -15.000012397766113
    9. '009' → logprob: -15.625012397766113
    10. '7' → logprob: -15.750012397766113

Token 236: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.00023250321100931615
    2. '007' → logprob: -9.000232696533203
    3. '7' → logprob: -9.500232696533203
    4. '19' → logprob: -10.875232696533203
    5. '+' → logprob: -12.000232696533203
    6. '07' → logprob: -12.250232696533203
    7. '0' → logprob: -12.875232696533203
    8. '00' → logprob: -14.375232696533203
    9. '9' → logprob: -14.375232696533203
    10. '009' → logprob: -15.625232696533203

Token 237: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -9.088346359931165e-07
    2. '+' → logprob: -14.500000953674316
    3. '07' → logprob: -14.875000953674316
    4. '9' → logprob: -17.25
    5. '```' → logprob: -18.875
    6. '007' → logprob: -20.875
    7. ' ' → logprob: -21.25
    8. ' +' → logprob: -21.625
    9. '19' → logprob: -21.75
    10. '79' → logprob: -21.75

Token 238: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0017094480572268367
    2. 'def' → logprob: -7.376709461212158
    3. '

' → logprob: -7.751709461212158
    4. '
' → logprob: -8.126708984375
    5. '\n' → logprob: -9.126708984375
    6. 'n' → logprob: -9.626708984375
    7. '' → logprob: -9.626708984375
    8. 'class' → logprob: -10.001708984375
    9. '#' → logprob: -11.001708984375
    10. ' 
' → logprob: -11.626708984375

Token 239: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5909628868103027
    2. 'def' → logprob: -0.8409628868103027
    3. 'class' → logprob: -4.590962886810303
    4. 'N' → logprob: -6.215962886810303
    5. 'd' → logprob: -6.340962886810303
    6. '#' → logprob: -7.090962886810303
    7. 'a' → logprob: -9.590963363647461
    8. '
' → logprob: -10.840963363647461
    9. '\' → logprob: -11.465963363647461
    10. 'D' → logprob: -11.590963363647461

Token 240: '1' (ID: 16)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05032395198941231
    2. 'd' → logprob: -3.425323963165283
    3. '#' → logprob: -4.675323963165283
    4. 'class' → logprob: -5.550323963165283
    5. 'n' → logprob: -6.175323963165283
    6. 's' → logprob: -7.925323963165283
    7. 'de' → logprob: -8.425323486328125
    8. ' ' → logprob: -9.050323486328125
    9. '_' → logprob: -9.300323486328125
    10. '(' → logprob: -9.550323486328125

Token 241: ':' (ID: 25)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06613137573003769
    2. 'def' → logprob: -3.566131353378296
    3. '_' → logprob: -4.941131591796875
    4. ')' → logprob: -5.316131591796875
    5. '#' → logprob: -5.441131591796875
    6. '0' → logprob: -5.566131591796875
    7. '<|end|>' → logprob: -5.691131591796875
    8. 'a' → logprob: -6.066131591796875
    9. ':' → logprob: -6.191131591796875
    10. ' def' → logprob: -6.691131591796875

Token 242: 'com' (ID: 639)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1719485968351364
    2. 'def' → logprob: -2.2969486713409424
    3. 'n' → logprob: -3.4219486713409424
    4. ' def' → logprob: -4.671948432922363
    5. ' n' → logprob: -4.671948432922363
    6. 'a' → logprob: -6.796948432922363
    7. 'd' → logprob: -6.921948432922363
    8. '#' → logprob: -6.921948432922363
    9. 't' → logprob: -8.171948432922363
    10. 's' → logprob: -8.171948432922363

Token 243: 'bin' (ID: 11893)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.5453145503997803
    2. 'ments' → logprob: -2.6703145503997803
    3. 'p' → logprob: -2.7953145503997803
    4. 'mand' → logprob: -3.1703145503997803
    5. 'press' → logprob: -3.4203145503997803
    6. 'ponent' → logprob: -3.6703145503997803
    7. 'pass' → logprob: -3.6703145503997803
    8. 'mit' → logprob: -3.7953145503997803
    9. 'pute' → logprob: -3.7953145503997803
    10. 'pare' → logprob: -4.045314788818359

Token 244: 'atorial' (ID: 68745)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.38419950008392334
    2. 'ation' → logprob: -1.7591995000839233
    3. 'a' → logprob: -2.759199619293213
    4. '_factor' → logprob: -4.384199619293213
    5. 'fac' → logprob: -4.509199619293213
    6. 'b' → logprob: -4.634199619293213
    7. '(' → logprob: -4.759199619293213
    8. 'from' → logprob: -5.134199619293213
    9. '_' → logprob: -5.384199619293213
    10. '#' → logprob: -5.884199619293213

Token 245: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1594616323709488
    2. 'class' → logprob: -2.534461736679077
    3. '(' → logprob: -3.784461736679077
    4. ' ' → logprob: -4.159461498260498
    5. 'n' → logprob: -5.034461498260498
    6. '_' → logprob: -5.034461498260498
    7. '(n' → logprob: -5.409461498260498
    8. ' def' → logprob: -6.159461498260498
    9. ',' → logprob: -6.409461498260498
    10. '()' → logprob: -6.534461498260498

Token 246: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008040240965783596
    2. 'class' → logprob: -5.508040428161621
    3. '#' → logprob: -7.133040428161621
    4. 'from' → logprob: -7.133040428161621
    5. ' def' → logprob: -7.508040428161621
    6. '_' → logprob: -7.883040428161621
    7. 'n' → logprob: -8.133040428161621
    8. ' ' → logprob: -8.258040428161621
    9. 'import' → logprob: -8.258040428161621
    10. '(' → logprob: -8.383040428161621

Token 247: '1' (ID: 16)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01874036155641079
    2. 'from' → logprob: -4.393740177154541
    3. 'class' → logprob: -6.268740177154541
    4. 'n' → logprob: -6.393740177154541
    5. 'factor' → logprob: -7.018740177154541
    6. 'import' → logprob: -7.643740177154541
    7. ' def' → logprob: -7.768740177154541
    8. 'fact' → logprob: -8.5187406539917
    9. ' from' → logprob: -8.6437406539917
    10. 'fac' → logprob: -9.5187406539917

Token 248: '_A' (ID: 6829)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.18318821489810944
    2. 'def' → logprob: -2.4331881999969482
    3. ':' → logprob: -3.3081881999969482
    4. ',' → logprob: -3.9331881999969482
    5. ' ' → logprob: -4.433188438415527
    6. ')' → logprob: -5.933188438415527
    7. '#' → logprob: -5.933188438415527
    8. ' def' → logprob: -6.558188438415527
    9. '=' → logprob: -6.808188438415527
    10. 'import' → logprob: -7.308188438415527

Token 249: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1659662127494812
    2. '#' → logprob: -3.415966272354126
    3. ' def' → logprob: -3.540966272354126
    4. 'n' → logprob: -3.540966272354126
    5. ' ' → logprob: -3.790966272354126
    6. ':' → logprob: -4.165966033935547
    7. 's' → logprob: -5.290966033935547
    8. 'import' → logprob: -5.790966033935547
    9. '_' → logprob: -5.790966033935547
    10. 'from' → logprob: -6.290966033935547

Token 250: '"""
' (ID: 15611)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1009223684668541
    2. 'n' → logprob: -2.4759223461151123
    3. 'class' → logprob: -4.850922584533691
    4. 'N' → logprob: -6.600922584533691
    5. 'from' → logprob: -6.600922584533691
    6. '#' → logprob: -7.475922584533691
    7. 'import' → logprob: -8.475922584533691
    8. ' def' → logprob: -8.725922584533691
    9. ' n' → logprob: -9.100922584533691
    10. '(n' → logprob: -9.725922584533691

Token 251: 'n' (ID: 77)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005106745287775993
    2. 'from' → logprob: -5.7551069259643555
    3. 'n' → logprob: -6.5051069259643555
    4. 'import' → logprob: -8.255106925964355
    5. 'd' → logprob: -9.380106925964355
    6. 'class' → logprob: -10.755106925964355
    7. ' def' → logprob: -11.130106925964355
    8. 'de' → logprob: -11.255106925964355
    9. '#' → logprob: -11.505106925964355
    10. '"""' → logprob: -11.755106925964355

Token 252: ',' (ID: 11)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.6747310161590576
    2. ',' → logprob: -0.7997310161590576
    3. ' =' → logprob: -4.299731254577637
    4. 'C' → logprob: -4.424731254577637
    5. ' ' → logprob: -5.174731254577637
    6. '!' → logprob: -5.799731254577637
    7. '-' → logprob: -6.049731254577637
    8. '=' → logprob: -6.424731254577637
    9. ',C' → logprob: -7.674731254577637
    10. '+' → logprob: -7.799731254577637

Token 253: ' m' (ID: 284)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07868321239948273
    2. 'm' → logprob: -2.9536831378936768
    3. 'r' → logprob: -3.8286831378936768
    4. 'K' → logprob: -7.453683376312256
    5. 'a' → logprob: -7.578683376312256
    6. ' k' → logprob: -8.328682899475098
    7. 'p' → logprob: -8.703682899475098
    8. 'x' → logprob: -9.453682899475098
    9. ' m' → logprob: -10.453682899475098
    10. 'q' → logprob: -10.453682899475098

Token 254: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22631129622459412
    2. ' =' → logprob: -1.6013113260269165
    3. ',' → logprob: -7.101311206817627
    4. ' ' → logprob: -10.851311683654785
    5. '=input' → logprob: -10.851311683654785
    6. ')' → logprob: -11.476311683654785
    7. '=n' → logprob: -11.476311683654785
    8. ')=' → logprob: -12.851311683654785
    9. ',n' → logprob: -12.976311683654785
    10. ',k' → logprob: -13.976311683654785

Token 255: ' map' (ID: 4014)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.3607683479785919
    2. ' LI' → logprob: -1.8607683181762695
    3. ' map' → logprob: -2.4857683181762695
    4. 'I' → logprob: -3.3607683181762695
    5. 'map' → logprob: -3.8607683181762695
    6. ' I' → logprob: -4.8607683181762695
    7. 'L' → logprob: -8.48576831817627
    8. ' ' → logprob: -9.36076831817627
    9. ' L' → logprob: -9.73576831817627
    10. ' list' → logprob: -10.48576831817627

Token 256: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -6.909333023941144e-05
    2. '(' → logprob: -10.500068664550781
    3. '=int' → logprob: -11.000068664550781
    4. 'int' → logprob: -11.750068664550781
    5. '(in' → logprob: -11.875068664550781
    6. '[int' → logprob: -12.750068664550781
    7. '<int' → logprob: -13.375068664550781
    8. '(input' → logprob: -13.375068664550781
    9. '(str' → logprob: -13.500068664550781
    10. '(
' → logprob: -14.500068664550781

Token 257: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.574104905128479
    2. ',input' → logprob: -0.949104905128479
    3. '(),' → logprob: -4.4491047859191895
    4. ')' → logprob: -4.5741047859191895
    5. '()' → logprob: -4.9491047859191895
    6. 'input' → logprob: -5.1991047859191895
    7. ',int' → logprob: -5.3241047859191895
    8. '().' → logprob: -5.6991047859191895
    9. '(input' → logprob: -6.4491047859191895
    10. ',str' → logprob: -6.8241047859191895

Token 258: ' input' (ID: 3422)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.6987199783325195
    2. ' sys' → logprob: -1.3237199783325195
    3. 'input' → logprob: -1.6987199783325195
    4. ' input' → logprob: -2.9487199783325195
    5. '(sys' → logprob: -7.1987199783325195
    6. ')' → logprob: -7.9487199783325195
    7. ' ' → logprob: -9.82371997833252
    8. ' )' → logprob: -10.19871997833252
    9. '```' → logprob: -10.32371997833252
    10. '=sys' → logprob: -10.82371997833252

Token 259: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0050044977106153965
    2. '()' → logprob: -5.380004405975342
    3. '())' → logprob: -7.880004405975342
    4. '()
' → logprob: -13.0050048828125
    5. '(' → logprob: -13.8800048828125
    6. '()[' → logprob: -14.1300048828125
    7. '()]' → logprob: -15.1300048828125
    8. ')' → logprob: -15.2550048828125
    9. '():' → logprob: -15.2550048828125
    10. '(),' → logprob: -15.8800048828125

Token 260: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.054500666621607e-06
    2. 'strip' → logprob: -13.00000286102295
    3. ' split' → logprob: -14.87500286102295
    4. '(split' → logprob: -15.25000286102295
    5. ')' → logprob: -16.250003814697266
    6. 'spl' → logprob: -16.875003814697266
    7. '```' → logprob: -17.625003814697266
    8. 'rstrip' → logprob: -18.125003814697266
    9. 's' → logprob: -18.625003814697266
    10. '()' → logprob: -18.750003814697266

Token 261: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.014951115474104881
    2. ')' → logprob: -4.514951229095459
    3. '()' → logprob: -5.639951229095459
    4. '())
' → logprob: -8.7649507522583
    5. '(' → logprob: -9.5149507522583
    6. '('' → logprob: -9.6399507522583
    7. '(','' → logprob: -11.3899507522583
    8. '()
' → logprob: -12.2649507522583
    9. '")' → logprob: -12.2649507522583
    10. '()))' → logprob: -12.3899507522583

Token 262: 'c' (ID: 66)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.12273561954498291
    2. 'factor' → logprob: -3.3727355003356934
    3. 'f' → logprob: -4.122735500335693
    4. ')' → logprob: -4.372735500335693
    5. 'def' → logprob: -4.497735500335693
    6. 'n' → logprob: -4.622735500335693
    7. '#' → logprob: -4.747735500335693
    8. '
' → logprob: -4.872735500335693
    9. 'fac' → logprob: -4.872735500335693
    10. 'facts' → logprob: -6.497735500335693

Token 263: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2452891767024994
    2. '=' → logprob: -2.1202890872955322
    3. 'omb' → logprob: -2.6202890872955322
    4. 'nt' → logprob: -4.620289325714111
    5. 'ount' → logprob: -5.745289325714111
    6. 'o' → logprob: -5.995289325714111
    7. 'mb' → logprob: -6.745289325714111
    8. 'nts' → logprob: -6.745289325714111
    9. 'om' → logprob: -7.120289325714111
    10. '=[]' → logprob: -7.245289325714111

Token 264: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11248829215765
    2. ' [' → logprob: -3.237488269805908
    3. '[n' → logprob: -3.237488269805908
    4. '[m' → logprob: -4.487488269805908
    5. '[min' → logprob: -5.362488269805908
    6. '1' → logprob: -5.487488269805908
    7. '[[' → logprob: -5.862488269805908
    8. '0' → logprob: -6.612488269805908
    9. '[int' → logprob: -6.862488269805908
    10. '[]' → logprob: -7.487488269805908

Token 265: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.013840599916875362
    2. '(range' → logprob: -4.638840675354004
    3. '(' → logprob: -5.763840675354004
    4. 'map' → logprob: -7.263840675354004
    5. '(int' → logprob: -9.388840675354004
    6. '()' → logprob: -9.888840675354004
    7. '(input' → logprob: -10.138840675354004
    8. '(com' → logprob: -10.888840675354004
    9. '(
' → logprob: -11.263840675354004
    10. '(math' → logprob: -11.513840675354004

Token 266: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0001499060745118186
    2. '(' → logprob: -9.000149726867676
    3. 'int' → logprob: -11.875149726867676
    4. '[int' → logprob: -12.000149726867676
    5. '(
' → logprob: -12.375149726867676
    6. '=int' → logprob: -13.000149726867676
    7. '<|end|>' → logprob: -13.125149726867676
    8. '<int' → logprob: -13.625149726867676
    9. ',int' → logprob: -13.875149726867676
    10. 'def' → logprob: -13.875149726867676

Token 267: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7136404514312744
    2. '(input' → logprob: -0.9636404514312744
    3. '(int' → logprob: -2.5886404514312744
    4. ',' → logprob: -3.5886404514312744
    5. '(),' → logprob: -4.463640213012695
    6. '(sys' → logprob: -5.588640213012695
    7. ',input' → logprob: -5.713640213012695
    8. '(range' → logprob: -5.963640213012695
    9. '(list' → logprob: -7.088640213012695
    10. '(None' → logprob: -7.588640213012695

Token 268: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04916394501924515
    2. ' input' → logprob: -3.049164056777954
    3. 'sys' → logprob: -8.174163818359375
    4. 'range' → logprob: -8.674163818359375
    5. ' sys' → logprob: -9.174163818359375
    6. ' range' → logprob: -11.674163818359375
    7. '(input' → logprob: -12.674163818359375
    8. ' ' → logprob: -12.924163818359375
    9. ')' → logprob: -13.424163818359375
    10. 'stdin' → logprob: -13.799163818359375

Token 269: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0007992653991095722
    2. '()' → logprob: -7.625799179077148
    3. '()))' → logprob: -8.375799179077148
    4. '())' → logprob: -9.500799179077148
    5. '()[' → logprob: -12.375799179077148
    6. '(' → logprob: -13.875799179077148
    7. '()));' → logprob: -15.500799179077148
    8. '())))' → logprob: -15.875799179077148
    9. ' ().' → logprob: -16.50079917907715
    10. '()]' → logprob: -16.87579917907715

Token 270: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.5776860184123507e-06
    2. ' split' → logprob: -13.37500286102295
    3. '(split' → logprob: -14.75000286102295
    4. 'strip' → logprob: -15.00000286102295
    5. 'spl' → logprob: -16.500001907348633
    6. 'rstrip' → logprob: -16.875001907348633
    7. ')' → logprob: -17.375001907348633
    8. '```' → logprob: -17.625001907348633
    9. '.split' → logprob: -17.875001907348633
    10. 's' → logprob: -18.000001907348633

Token 271: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.01233728602528572
    2. '()' → logprob: -4.5123372077941895
    3. '()))
' → logprob: -7.5123372077941895
    4. '())' → logprob: -7.6373372077941895
    5. '))' → logprob: -9.262337684631348
    6. '(' → logprob: -9.637337684631348
    7. '()));' → logprob: -9.637337684631348
    8. '().' → logprob: -11.012337684631348
    9. '()
' → logprob: -11.762337684631348
    10. '()))

' → logprob: -13.012337684631348

Token 272: 'dp' (ID: 19037)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7459718585014343
    2. '#' → logprob: -0.9959718585014343
    3. ')' → logprob: -2.745971918106079
    4. 'for' → logprob: -3.745971918106079
    5. '
' → logprob: -3.870971918106079
    6. 'def' → logprob: -4.4959716796875
    7. 'dp' → logprob: -4.9959716796875
    8. '"""' → logprob: -5.4959716796875
    9. 't' → logprob: -5.6209716796875
    10. 'a' → logprob: -5.9959716796875

Token 273: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.429309219121933
    2. ' =' → logprob: -1.0543092489242554
    3. '=[' → logprob: -7.554309368133545
    4. '[' → logprob: -9.679308891296387
    5. '=[[' → logprob: -11.429308891296387
    6. '=[]' → logprob: -12.804308891296387
    7. ' =[' → logprob: -13.179308891296387
    8. ']' → logprob: -13.804308891296387
    9. ' ' → logprob: -14.179308891296387
    10. ' ' → logprob: -14.679308891296387

Token 274: ' [' (ID: 723)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.12722626328468323
    2. '[' → logprob: -2.1272263526916504
    3. 'default' → logprob: -8.502225875854492
    4. ' [[' → logprob: -10.377225875854492
    5. '[-' → logprob: -10.752225875854492
    6. '[n' → logprob: -11.252225875854492
    7. '{}' → logprob: -11.627225875854492
    8. ' [' → logprob: -12.252225875854492
    9. '{' → logprob: -12.377225875854492
    10. '[{' → logprob: -12.877225875854492

Token 275: 'float' (ID: 7829)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.35200291872024536
    2. '[' → logprob: -1.2270028591156006
    3. '[-' → logprob: -6.72700309753418
    4. '-' → logprob: -6.85200309753418
    5. '[m' → logprob: -7.60200309753418
    6. 'False' → logprob: -7.97700309753418
    7. 'float' → logprob: -8.60200309753418
    8. ' [' → logprob: -9.97700309753418
    9. '[int' → logprob: -9.97700309753418
    10. '-[' → logprob: -10.22700309753418

Token 276: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.01305481418967247
    2. '('-' → logprob: -4.388054847717285
    3. '("' → logprob: -7.638054847717285
    4. '(' → logprob: -10.513054847717285
    5. '("-' → logprob: -11.263054847717285
    6. '(in' → logprob: -11.638054847717285
    7. '(-' → logprob: -11.763054847717285
    8. ''' → logprob: -13.263054847717285
    9. ''-' → logprob: -13.513054847717285
    10. 'inf' → logprob: -13.638054847717285

Token 277: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.5910549759864807
    2. ''in' → logprob: -1.091054916381836
    3. '"' → logprob: -2.716054916381836
    4. '-inf' → logprob: -3.591054916381836
    5. ''' → logprob: -4.216054916381836
    6. '"in' → logprob: -6.591054916381836
    7. ''i' → logprob: -9.341054916381836
    8. ''ins' → logprob: -9.466054916381836
    9. ''-' → logprob: -9.466054916381836
    10. '-i' → logprob: -9.716054916381836

Token 278: '")' (ID: 1405)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.1322513222694397
    2. '")]' → logprob: -2.632251262664795
    3. ')' → logprob: -3.132251262664795
    4. ']' → logprob: -5.257251262664795
    5. '")' → logprob: -5.882251262664795
    6. '')]' → logprob: -9.007251739501953
    7. '"]' → logprob: -9.382251739501953
    8. '"' → logprob: -10.132251739501953
    9. '),' → logprob: -10.507251739501953
    10. ',' → logprob: -11.257251739501953

Token 279: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0160544291138649
    2. ']*' → logprob: -4.641054630279541
    3. ']*(' → logprob: -5.391054630279541
    4. ' for' → logprob: -6.766054630279541
    5. 'for' → logprob: -7.641054630279541
    6. ' ]' → logprob: -9.891054153442383
    7. ']+' → logprob: -10.391054153442383
    8. ')' → logprob: -12.766054153442383
    9. ' ' → logprob: -13.766054153442383
    10. '*' → logprob: -13.891054153442383

Token 280: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6506368517875671
    2. 'range' → logprob: -1.150636911392212
    3. ' range' → logprob: -1.900636911392212
    4. '_range' → logprob: -5.150636672973633
    5. '(range' → logprob: -5.775636672973633
    6. 'i' → logprob: -6.025636672973633
    7. ' i' → logprob: -8.400636672973633
    8. '_i' → logprob: -8.525636672973633
    9. ' _' → logprob: -8.525636672973633
    10. '(' → logprob: -9.650636672973633

Token 281: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04196832701563835
    2. 'in' → logprob: -3.29196834564209
    3. ' range' → logprob: -5.91696834564209
    4. 'range' → logprob: -7.29196834564209
    5. '(range' → logprob: -7.91696834564209
    6. '(' → logprob: -9.41696834564209
    7. ')' → logprob: -10.54196834564209
    8. ']' → logprob: -10.54196834564209
    9. ' ' → logprob: -10.79196834564209
    10. ' ]' → logprob: -12.04196834564209

Token 282: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005234475247561932
    2. ' range' → logprob: -5.255234241485596
    3. '(range' → logprob: -15.130234718322754
    4. 'r' → logprob: -15.880234718322754
    5. '	range' → logprob: -15.880234718322754
    6. 'rang' → logprob: -16.505233764648438
    7. '   ' → logprob: -16.630233764648438
    8. ' ' → logprob: -17.380233764648438
    9. '  ' → logprob: -18.130233764648438
    10. 'ran' → logprob: -18.755233764648438

Token 283: '(n' (ID: 2406)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.30685099959373474
    2. 'range' → logprob: -1.5568510293960571
    3. '(range' → logprob: -2.9318509101867676
    4. '(' → logprob: -9.306851387023926
    5. '(m' → logprob: -10.431851387023926
    6. '(r' → logprob: -12.306851387023926
    7. ' (' → logprob: -12.556851387023926
    8. ']' → logprob: -12.556851387023926
    9. '	range' → logprob: -12.556851387023926
    10. '_range' → logprob: -12.931851387023926

Token 284: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0013122594682499766
    2. ' +' → logprob: -7.626312255859375
    3. ')])' → logprob: -7.626312255859375
    4. ')]' → logprob: -8.126312255859375
    5. '+
' → logprob: -11.126312255859375
    6. ')' → logprob: -11.751312255859375
    7. '+n' → logprob: -12.626312255859375
    8. '])]' → logprob: -12.626312255859375
    9. '])' → logprob: -12.876312255859375
    10. ' )' → logprob: -13.376312255859375

Token 285: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003218230325728655
    2. '+' → logprob: -6.378218173980713
    3. '2' → logprob: -6.878218173980713
    4. '(' → logprob: -8.753218650817871
    5. ')]' → logprob: -9.253218650817871
    6. '])' → logprob: -9.628218650817871
    7. ' ' → logprob: -9.628218650817871
    8. '(m' → logprob: -10.503218650817871
    9. ')])' → logprob: -10.878218650817871
    10. ')' → logprob: -11.753218650817871

Token 286: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0006252297898754478
    2. ']' → logprob: -7.750625133514404
    3. ')' → logprob: -9.000625610351562
    4. ')]
' → logprob: -10.125625610351562
    5. '])' → logprob: -11.000625610351562
    6. '])]' → logprob: -11.625625610351562
    7. ')])' → logprob: -13.000625610351562
    8. ')]
' → logprob: -13.625625610351562
    9. ' )' → logprob: -15.000625610351562
    10. ')]

' → logprob: -15.250625610351562

Token 287: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.016137711703777313
    2. '
' → logprob: -4.391137599945068
    3. ' dp' → logprob: -5.641137599945068
    4. ' 
' → logprob: -10.391138076782227
    5. '(dp' → logprob: -10.891138076782227
    6. '	dp' → logprob: -11.766138076782227
    7. '\n' → logprob: -12.016138076782227
    8. '_dp' → logprob: -12.391138076782227
    9. '
' → logprob: -13.516138076782227
    10. '[' → logprob: -14.016138076782227

Token 288: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. ']' → logprob: -15.625000953674316
    3. '][' → logprob: -15.875000953674316
    4. '\[' → logprob: -16.875
    5. '[n' → logprob: -17.5
    6. '[
' → logprob: -17.5
    7. ' [' → logprob: -17.625
    8. '0' → logprob: -17.875
    9. '=' → logprob: -18.125
    10. ')[' → logprob: -18.375

Token 289: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.253713218029588e-05
    2. '[' → logprob: -10.000062942504883
    3. ' ' → logprob: -11.250062942504883
    4. ']' → logprob: -13.000062942504883
    5. '1' → logprob: -14.375062942504883
    6. '(' → logprob: -15.000062942504883
    7. ')' → logprob: -16.000062942504883
    8. '
' → logprob: -16.250062942504883
    9. '```' → logprob: -16.250062942504883
    10. '][' → logprob: -16.375062942504883

Token 290: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.096126576769166e-05
    2. ' ]' → logprob: -10.750041007995605
    3. ']=' → logprob: -10.875041007995605
    4. '=' → logprob: -15.000041007995605
    5. ']
' → logprob: -16.12504005432129
    6. '`]' → logprob: -17.62504005432129
    7. '']' → logprob: -17.87504005432129
    8. ']

' → logprob: -17.87504005432129
    9. ']==' → logprob: -18.50004005432129
    10. '"]' → logprob: -18.50004005432129

Token 291: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0160356592386961
    2. ' =' → logprob: -4.141035556793213
    3. ']=' → logprob: -14.516036033630371
    4. ']' → logprob: -15.266036033630371
    5. ')=' → logprob: -15.391036033630371
    6. ')' → logprob: -16.141035079956055
    7. '＝' → logprob: -16.516035079956055
    8. '<|end|>' → logprob: -16.516035079956055
    9. '=
' → logprob: -16.641035079956055
    10. '=}' → logprob: -17.016035079956055

Token 292: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. ' ' → logprob: -20.250003814697266
    4. '1' → logprob: -20.750003814697266
    5. '00' → logprob: -21.125003814697266
    6. '۰' → logprob: -21.250003814697266
    7. '   ' → logprob: -21.500003814697266
    8. '  ' → logprob: -21.750003814697266
    9. '０' → logprob: -21.875003814697266
    10. '000' → logprob: -22.500003814697266

Token 293: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '1' → logprob: -19.812501907348633
    4. '00' → logprob: -19.875001907348633
    5. '۰' → logprob: -19.937501907348633
    6. ' ' → logprob: -20.125001907348633
    7. 'zero' → logprob: -20.187501907348633
    8. '０' → logprob: -20.250001907348633
    9. '   ' → logprob: -20.375001907348633
    10. '  ' → logprob: -20.750001907348633

Token 294: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011663536541163921
    2. 'for' → logprob: -4.886663436889648
    3. ' for' → logprob: -6.511663436889648
    4. ')' → logprob: -6.761663436889648
    5. '
' → logprob: -7.761663436889648
    6. '\n' → logprob: -8.136663436889648
    7. ' 
' → logprob: -8.261663436889648
    8. '' → logprob: -8.761663436889648
    9. '<|end|>' → logprob: -9.511663436889648
    10. 'n' → logprob: -10.386663436889648

Token 295: 'for' (ID: 1938)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3575066030025482
    2. 'for' → logprob: -1.9825066328048706
    3. ' for' → logprob: -1.9825066328048706
    4. ' 
' → logprob: -4.35750675201416
    5. '\n' → logprob: -4.48250675201416
    6. '' → logprob: -8.10750675201416
    7. '
' → logprob: -8.98250675201416
    8. ' ' → logprob: -8.98250675201416
    9. ')' → logprob: -9.23250675201416
    10. 'n' → logprob: -9.73250675201416

Token 296: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4209471046924591
    2. ' i' → logprob: -1.2959470748901367
    3. 'coin' → logprob: -4.045947074890137
    4. 'j' → logprob: -4.420947074890137
    5. ' cost' → logprob: -4.920947074890137
    6. 'x' → logprob: -4.920947074890137
    7. 'cost' → logprob: -4.920947074890137
    8. ' j' → logprob: -5.045947074890137
    9. ' coin' → logprob: -5.045947074890137
    10. ' x' → logprob: -6.295947074890137

Token 297: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.227459117770195
    2. 'in' → logprob: -1.6024590730667114
    3. '+' → logprob: -6.227458953857422
    4. ' ' → logprob: -11.102458953857422
    5. '	in' → logprob: -11.602458953857422
    6. '1' → logprob: -11.727458953857422
    7. ',' → logprob: -11.977458953857422
    8. 'n' → logprob: -12.102458953857422
    9. 'import' → logprob: -12.227458953857422
    10. ' i' → logprob: -12.477458953857422

Token 298: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.23918142914772034
    2. ' range' → logprob: -1.614181399345398
    3. 'c' → logprob: -4.3641815185546875
    4. ' c' → logprob: -6.9891815185546875
    5. '(range' → logprob: -11.864181518554688
    6. '[' → logprob: -12.364181518554688
    7. ' ' → logprob: -12.989181518554688
    8. 'r' → logprob: -13.114181518554688
    9. 'm' → logprob: -13.239181518554688
    10. '   ' → logprob: -13.364181518554688

Token 299: '(n' (ID: 2406)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.4968414306640625
    2. '(range' → logprob: -1.9968414306640625
    3. '(c' → logprob: -2.1218414306640625
    4. '(' → logprob: -2.6218414306640625
    5. 'range' → logprob: -2.8718414306640625
    6. ' range' → logprob: -5.1218414306640625
    7. 'm' → logprob: -7.9968414306640625
    8. 'c' → logprob: -8.371841430664062
    9. '(n' → logprob: -9.996841430664062
    10. '(M' → logprob: -10.621841430664062

Token 300: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002970453118905425
    2. ' +' → logprob: -6.127970218658447
    3. '):' → logprob: -7.377970218658447
    4. '):
' → logprob: -9.127970695495605
    5. '+
' → logprob: -10.377970695495605
    6. '
' → logprob: -11.752970695495605
    7. '   ' → logprob: -12.627970695495605
    8. '1' → logprob: -13.252970695495605
    9. '+:' → logprob: -13.252970695495605
    10. ')' → logprob: -13.877970695495605

Token 301: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.663244366645813
    2. '   ' → logprob: -1.163244366645813
    3. ' ' → logprob: -1.788244366645813
    4. ' if' → logprob: -6.288244247436523
    5. '	for' → logprob: -7.038244247436523
    6. ' 
' → logprob: -7.663244247436523
    7. 'for' → logprob: -7.913244247436523
    8. '  ' → logprob: -8.163244247436523
    9. ' ' → logprob: -8.538244247436523
    10. '    ' → logprob: -8.788244247436523

Token 302: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01580348052084446
    2. 'if' → logprob: -4.390803337097168
    3. ' for' → logprob: -5.765803337097168
    4. ' if' → logprob: -9.265803337097168
    5. '   ' → logprob: -9.765803337097168
    6. 'j' → logprob: -13.265803337097168
    7. ' ' → logprob: -13.765803337097168
    8. '
' → logprob: -14.890803337097168
    9. '	for' → logprob: -15.765803337097168
    10. '    
' → logprob: -16.140804290771484

Token 303: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.8344762325286865
    2. 'coin' → logprob: -1.3344762325286865
    3. ' j' → logprob: -1.8344762325286865
    4. ' coin' → logprob: -2.0844762325286865
    5. 'x' → logprob: -4.834476470947266
    6. 'cost' → logprob: -5.459476470947266
    7. ' x' → logprob: -6.584476470947266
    8. ' cost' → logprob: -7.084476470947266
    9. 'cc' → logprob: -7.334476470947266
    10. 'v' → logprob: -7.334476470947266

Token 304: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0797535628080368
    2. 'in' → logprob: -2.5797536373138428
    3. '+' → logprob: -8.704753875732422
    4. ' ' → logprob: -8.954753875732422
    5. '	in' → logprob: -9.079753875732422
    6. ':' → logprob: -9.454753875732422
    7. 'c' → logprob: -9.704753875732422
    8. '   ' → logprob: -9.704753875732422
    9. 'range' → logprob: -9.829753875732422
    10. ',' → logprob: -10.829753875732422

Token 305: ' c' (ID: 274)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.24902541935443878
    2. 'c' → logprob: -1.7490254640579224
    3. ' range' → logprob: -3.124025344848633
    4. ' c' → logprob: -6.124025344848633
    5. '(range' → logprob: -9.249025344848633
    6. '[' → logprob: -9.499025344848633
    7. '[c' → logprob: -9.624025344848633
    8. '   ' → logprob: -10.374025344848633
    9. '(c' → logprob: -10.749025344848633
    10. ')' → logprob: -12.249025344848633

Token 306: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000889067945536226
    2. '):' → logprob: -7.625889301300049
    3. ']:' → logprob: -8.25088882446289
    4. ':
' → logprob: -9.12588882446289
    5. ' :' → logprob: -11.62588882446289
    6. '):
' → logprob: -11.87588882446289
    7. '>:' → logprob: -12.62588882446289
    8. '[' → logprob: -13.12588882446289
    9. '[:' → logprob: -13.75088882446289
    10. '}:' → logprob: -13.87588882446289

Token 307: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17187219858169556
    2. ':' → logprob: -2.421872138977051
    3. '   ' → logprob: -3.421872138977051
    4. '    ' → logprob: -4.046872138977051
    5. ',' → logprob: -5.296872138977051
    6. ' ' → logprob: -5.671872138977051
    7. ' :' → logprob: -5.921872138977051
    8. ' if' → logprob: -6.171872138977051
    9. '     ' → logprob: -7.171872138977051
    10. '    
' → logprob: -7.421872138977051

Token 308: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.009821140207350254
    2. '       ' → logprob: -5.134820938110352
    3. '   ' → logprob: -5.884820938110352
    4. '    ' → logprob: -7.384820938110352
    5. 'if' (adapté à ' if') → logprob: -8.259820938110352
    6. ' ' → logprob: -8.634820938110352
    7. '	if' → logprob: -11.134820938110352
    8. '        ' → logprob: -12.134820938110352
    9. ' dp' → logprob: -12.384820938110352
    10. ' i' → logprob: -12.759820938110352

Token 309: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06200353056192398
    2. 'i' → logprob: -2.8120036125183105
    3. '   ' → logprob: -10.937003135681152
    4. ' ' → logprob: -11.937003135681152
    5. ' ' → logprob: -12.312003135681152
    6. '  ' → logprob: -12.937003135681152
    7. '(i' → logprob: -13.187003135681152
    8. '	i' → logprob: -14.187003135681152
    9. 'j' → logprob: -14.312003135681152
    10. ' (' → logprob: -14.812003135681152

Token 310: '+j' (ID: 71365)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04051095247268677
    2. ' +' → logprob: -3.415510892868042
    3. '+j' → logprob: -5.040511131286621
    4. '>=' → logprob: -8.290511131286621
    5. '+
' → logprob: -9.290511131286621
    6. ' >=' → logprob: -11.665511131286621
    7. '＋' → logprob: -13.040511131286621
    8. ' +
' → logprob: -13.040511131286621
    9. '+=' → logprob: -13.165511131286621
    10. '   ' → logprob: -13.290511131286621

Token 311: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.04302019998431206
    2. ' <=' → logprob: -3.168020248413086
    3. '```' → logprob: -12.168020248413086
    4. ']<=' → logprob: -12.168020248413086
    5. ')<=' → logprob: -12.668020248413086
    6. '<' → logprob: -12.793020248413086
    7. '<n' → logprob: -13.418020248413086
    8. '>' → logprob: -13.543020248413086
    9. ')' → logprob: -14.793020248413086
    10. ' ' → logprob: -14.918020248413086

Token 312: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12693093717098236
    2. ' n' → logprob: -2.1269309520721436
    3. '	n' → logprob: -12.876931190490723
    4. ')n' → logprob: -15.751931190490723
    5. '_n' → logprob: -16.001930236816406
    6. '<|end|>' → logprob: -17.251930236816406
    7. ' ' → logprob: -17.626930236816406
    8. ' ' → logprob: -17.751930236816406
    9. ',n' → logprob: -18.501930236816406
    10. 'n't' → logprob: -18.626930236816406

Token 313: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1812470257282257
    2. ':' → logprob: -2.1812469959259033
    3. ':
' → logprob: -3.0562469959259033
    4. 'and' → logprob: -5.181247234344482
    5. ' :' → logprob: -9.681246757507324
    6. '           ' → logprob: -10.056246757507324
    7. ' :
' → logprob: -10.306246757507324
    8. '       ' → logprob: -11.306246757507324
    9. '   ' → logprob: -11.931246757507324
    10. 'dp' → logprob: -12.181246757507324

Token 314: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01105359848588705
    2. ' and' → logprob: -4.636053562164307
    3. ':' → logprob: -7.386053562164307
    4. ' dp' → logprob: -8.136054039001465
    5. ',' → logprob: -9.136054039001465
    6. '       ' → logprob: -9.636054039001465
    7. 'dp' → logprob: -10.261054039001465
    8. '               ' → logprob: -10.511054039001465
    9. '          ' → logprob: -10.761054039001465
    10. '<|end|>' → logprob: -10.761054039001465

Token 315: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.25201043486595154
    2. ' dp' → logprob: -1.502010464668274
    3. '	dp' → logprob: -9.502010345458984
    4. '   ' → logprob: -12.752010345458984
    5. '           ' → logprob: -13.877010345458984
    6. ' if' → logprob: -14.252010345458984
    7. 'if' → logprob: -14.627010345458984
    8. '(dp' → logprob: -15.002010345458984
    9. '.dp' → logprob: -15.127010345458984
    10. '_dp' → logprob: -15.127010345458984

Token 316: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.9153885558771435e-06
    2. '[' → logprob: -12.125005722045898
    3. '[min' → logprob: -15.250005722045898
    4. '[
' → logprob: -16.6250057220459
    5. '[j' → logprob: -17.0000057220459
    6. 'i' → logprob: -17.8750057220459
    7. ' [' → logprob: -18.3750057220459
    8. 'min' → logprob: -19.1250057220459
    9. '   ' → logprob: -19.2500057220459
    10. '[I' → logprob: -19.3750057220459

Token 317: '+j' (ID: 71365)
  Prédit: '+j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+j' → logprob: -0.20283685624599457
    2. '+' → logprob: -1.7028368711471558
    3. ' +' → logprob: -6.577836990356445
    4. '[' → logprob: -11.702836990356445
    5. '+
' → logprob: -12.077836990356445
    6. '+i' → logprob: -12.202836990356445
    7. '+x' → logprob: -12.952836990356445
    8. ']+' → logprob: -13.452836990356445
    9. '+t' → logprob: -13.577836990356445
    10. '[j' → logprob: -13.827836990356445

Token 318: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005671018268913031
    2. ']=' → logprob: -5.25567102432251
    3. ' ]' → logprob: -8.505670547485352
    4. ' =' → logprob: -8.755670547485352
    5. '=' → logprob: -9.505670547485352
    6. '=min' → logprob: -13.505670547485352
    7. ']+=' → logprob: -14.755670547485352
    8. ']
' → logprob: -15.505670547485352
    9. '
' → logprob: -15.505670547485352
    10. ')' → logprob: -16.63067054748535

Token 319: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12708821892738342
    2. '=' → logprob: -2.1270883083343506
    3. '=min' → logprob: -8.75208854675293
    4. 'min' → logprob: -13.37708854675293
    5. ']=' → logprob: -16.37708854675293
    6. ']' → logprob: -16.62708854675293
    7. '=max' → logprob: -17.00208854675293
    8. ',' → logprob: -17.25208854675293
    9. ' min' → logprob: -17.37708854675293
    10. '=
' → logprob: -17.50208854675293

Token 320: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.011047935113310814
    2. ' min' → logprob: -4.511047840118408
    3. '	min' → logprob: -16.13604736328125
    4. 'mini' → logprob: -18.38604736328125
    5. 'max' → logprob: -18.51104736328125
    6. 'mi' → logprob: -18.51104736328125
    7. '   ' → logprob: -18.51104736328125
    8. '(min' → logprob: -19.38604736328125
    9. '=min' → logprob: -19.38604736328125
    10. '[min' → logprob: -19.63604736328125

Token 321: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.00020413640595506877
    2. '(' → logprob: -8.500204086303711
    3. '(
' → logprob: -14.750204086303711
    4. 'dp' → logprob: -15.625204086303711
    5. '(d' → logprob: -16.62520408630371
    6. ' (' → logprob: -17.62520408630371
    7. '	dp' → logprob: -18.12520408630371
    8. '(

' → logprob: -18.87520408630371
    9. ' dp' → logprob: -19.37520408630371
    10. '(df' → logprob: -19.50020408630371

Token 322: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2842308680992573e-05
    2. '[' → logprob: -10.750022888183594
    3. '[
' → logprob: -14.500022888183594
    4. '[j' → logprob: -14.500022888183594
    5. ' [' → logprob: -15.500022888183594
    6. 'i' → logprob: -17.750022888183594
    7. '(i' → logprob: -18.375022888183594
    8. ']' → logprob: -19.000022888183594
    9. '{i' → logprob: -19.250022888183594
    10. ' ' → logprob: -19.625022888183594

Token 323: '+j' (ID: 71365)
  Prédit: '+j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+j' → logprob: -0.0005053732893429697
    2. '[j' → logprob: -8.000505447387695
    3. '+' → logprob: -9.000505447387695
    4. 'j' → logprob: -11.250505447387695
    5. ']+' → logprob: -11.250505447387695
    6. ']' → logprob: -11.500505447387695
    7. '+
' → logprob: -12.750505447387695
    8. '
' → logprob: -12.875505447387695
    9. '[' → logprob: -13.375505447387695
    10. '+i' → logprob: -13.875505447387695

Token 324: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004234866704791784
    2. ' ,' → logprob: -5.504234790802002
    3. '],' → logprob: -9.37923526763916
    4. ',
' → logprob: -9.75423526763916
    5. 'dp' → logprob: -12.25423526763916
    6. ' ,
' → logprob: -13.00423526763916
    7. '),' → logprob: -13.87923526763916
    8. '(dp' → logprob: -14.00423526763916
    9. ' dp' → logprob: -14.12923526763916
    10. '
' → logprob: -14.25423526763916

Token 325: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06197306513786316
    2. ' dp' → logprob: -2.8119730949401855
    3. '	dp' → logprob: -12.561972618103027
    4. '(dp' → logprob: -13.561972618103027
    5. '   ' → logprob: -15.061972618103027
    6. ' ' → logprob: -16.686973571777344
    7. '_dp' → logprob: -16.936973571777344
    8. '1' → logprob: -16.936973571777344
    9. '           ' → logprob: -17.186973571777344
    10. 'd' → logprob: -17.311973571777344

Token 326: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.081584716506768e-05
    2. 'i' → logprob: -11.250020980834961
    3. '[' → logprob: -12.250020980834961
    4. '[
' → logprob: -13.250020980834961
    5. '[j' → logprob: -14.875020980834961
    6. ' i' → logprob: -15.750020980834961
    7. ' [' → logprob: -15.875020980834961
    8. ']' → logprob: -16.37502098083496
    9. '[I' → logprob: -16.50002098083496
    10. '
' → logprob: -17.00002098083496

Token 327: ']+' (ID: 15344)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.05988960340619087
    2. ']+' → logprob: -3.809889554977417
    3. 'i' → logprob: -3.934889554977417
    4. ']' → logprob: -4.684889793395996
    5. '[j' → logprob: -5.809889793395996
    6. '+i' → logprob: -5.934889793395996
    7. '])' → logprob: -7.059889793395996
    8. '+j' → logprob: -7.684889793395996
    9. '[' → logprob: -9.309889793395996
    10. '+' → logprob: -9.809889793395996

Token 328: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. 'dp' → logprob: -17.750009536743164
    4. '   ' → logprob: -17.875009536743164
    5. ')' → logprob: -20.125009536743164
    6. '```' → logprob: -20.375009536743164
    7. 'cost' → logprob: -20.937509536743164
    8. '  ' → logprob: -21.062509536743164
    9. '
' → logprob: -21.250009536743164
    10. '       ' → logprob: -21.500009536743164

Token 329: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022165567497722805
    2. ')
' → logprob: -8.500221252441406
    3. ' )' → logprob: -11.500221252441406
    4. '<|end|>' → logprob: -12.500221252441406
    5. '       ' → logprob: -13.875221252441406
    6. ')#' → logprob: -14.125221252441406
    7. '
' → logprob: -14.625221252441406
    8. ')return' → logprob: -14.625221252441406
    9. '#' → logprob: -15.500221252441406
    10. '`)' → logprob: -15.875221252441406

Token 330: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 331: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.00015943869948387146
    2. '(' → logprob: -8.75015926361084
    3. '(n' → logprob: -15.00015926361084
    4. '(
' → logprob: -15.25015926361084
    5. ' (' → logprob: -15.62515926361084
    6. 'dp' → logprob: -16.750160217285156
    7. '(d' → logprob: -18.000160217285156
    8. '(df' → logprob: -18.125160217285156
    9. '((' → logprob: -18.375160217285156
    10. '(

' → logprob: -18.750160217285156

Token 332: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -3.297462171758525e-05
    2. '[-' → logprob: -10.500033378601074
    3. '[' → logprob: -12.625033378601074
    4. 'n' → logprob: -14.375033378601074
    5. ')' → logprob: -14.500033378601074
    6. '[
' → logprob: -14.750033378601074
    7. '(n' → logprob: -15.375033378601074
    8. '
' → logprob: -15.625033378601074
    9. '[N' → logprob: -16.375032424926758
    10. ']' → logprob: -17.125032424926758

Token 333: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.12717010080814362
    2. ')' → logprob: -2.1271700859069824
    3. '))' → logprob: -9.00217056274414
    4. '])
' → logprob: -10.50217056274414
    5. ')
' → logprob: -10.62717056274414
    6. '})' → logprob: -10.75217056274414
    7. ']' → logprob: -10.87717056274414
    8. ')]' → logprob: -11.87717056274414
    9. '>)' → logprob: -12.25217056274414
    10. ')])' → logprob: -12.62717056274414

Token 334: '"""
' (ID: 15611)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03264021500945091
    2. '"""' → logprob: -4.532639980316162
    3. '```' → logprob: -4.657639980316162
    4. '<|end|>' → logprob: -4.782639980316162
    5. '#' → logprob: -6.157639980316162
    6. '
' → logprob: -7.157639980316162
    7. '")' → logprob: -9.28264045715332
    8. '\n' → logprob: -9.28264045715332
    9. '"' → logprob: -9.28264045715332
    10. ')
' → logprob: -9.65764045715332

Token 335: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 336: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.015240795910358429
    2. '#' → logprob: -4.390240669250488
    3. '\n' → logprob: -7.140240669250488
    4. 'd' → logprob: -8.140240669250488
    5. '\' → logprob: -8.515240669250488
    6. ' ' → logprob: -8.640240669250488
    7. ')' → logprob: -8.765240669250488
    8. '[' → logprob: -9.015240669250488
    9. '(n' → logprob: -9.265240669250488
    10. '(' → logprob: -9.265240669250488

Token 337: '_B' (ID: 3201)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 338: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11779160052537918
    2. '"""
' → logprob: -2.2427916526794434
    3. '"""' → logprob: -5.742791652679443
    4. 'def' → logprob: -6.992791652679443
    5. '
' → logprob: -7.492791652679443
    6. 'import' → logprob: -9.367791175842285
    7. '#' → logprob: -10.117791175842285
    8. 'from' → logprob: -10.117791175842285
    9. '(n' → logprob: -10.242791175842285
    10. '```' → logprob: -10.867791175842285

Token 339: '"""
' (ID: 15611)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20525488257408142
    2. '"""
' → logprob: -1.7052549123764038
    3. '"""' → logprob: -6.330255031585693
    4. 'def' → logprob: -6.705255031585693
    5. 'from' → logprob: -7.830255031585693
    6. '#' → logprob: -8.580254554748535
    7. 'import' → logprob: -9.205254554748535
    8. 'N' → logprob: -10.455254554748535
    9. ''''
' → logprob: -10.705254554748535
    10. '"""

' → logprob: -10.830254554748535

Token 340: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.010428189300000668
    2. 'def' → logprob: -5.135427951812744
    3. 'from' → logprob: -5.635427951812744
    4. '#' → logprob: -8.010428428649902
    5. 'import' → logprob: -8.385428428649902
    6. '
' → logprob: -9.010428428649902
    7. 's' → logprob: -9.885428428649902
    8. 'd' → logprob: -10.010428428649902
    9. '"""
' → logprob: -10.260428428649902
    10. 'a' → logprob: -11.260428428649902

Token 341: ',w' (ID: 49598)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023867106065154076
    2. ',m' → logprob: -6.127386569976807
    3. '=' → logprob: -8.877387046813965
    4. 'm' → logprob: -10.502387046813965
    5. ' ,' → logprob: -10.877387046813965
    6. ' =' → logprob: -11.627387046813965
    7. ' m' → logprob: -13.377387046813965
    8. ',k' → logprob: -13.752387046813965
    9. ',M' → logprob: -13.877387046813965
    10. ',n' → logprob: -14.002387046813965

Token 342: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26829153299331665
    2. ' =' → logprob: -1.8932914733886719
    3. ',' → logprob: -2.768291473388672
    4. ',m' → logprob: -4.018291473388672
    5. ',c' → logprob: -6.893291473388672
    6. ',k' → logprob: -7.643291473388672
    7. ',s' → logprob: -7.643291473388672
    8. ',v' → logprob: -7.768291473388672
    9. ',p' → logprob: -8.643291473388672
    10. ',r' → logprob: -8.643291473388672

Token 343: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.5762951970100403
    2. 'map' → logprob: -0.8262951970100403
    3. 'list' → logprob: -8.576294898986816
    4. ' list' → logprob: -9.451294898986816
    5. 'LI' → logprob: -10.201294898986816
    6. ' LI' → logprob: -11.201294898986816
    7. 'I' → logprob: -11.451294898986816
    8. 'input' → logprob: -11.951294898986816
    9. '	map' → logprob: -12.076294898986816
    10. ' ' → logprob: -12.326294898986816

Token 344: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0006190311978571117
    2. '(' → logprob: -8.125618934631348
    3. 'int' → logprob: -8.625618934631348
    4. '=int' → logprob: -9.875618934631348
    5. '(lambda' → logprob: -10.875618934631348
    6. ' (' → logprob: -10.875618934631348
    7. '(input' → logprob: -11.250618934631348
    8. '(in' → logprob: -11.375618934631348
    9. '(
' → logprob: -12.250618934631348
    10. ' int' → logprob: -12.375618934631348

Token 345: ',input' (ID: 123014)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05750773847103119
    2. ',int' → logprob: -3.9325077533721924
    3. ',input' → logprob: -4.182507514953613
    4. '(' → logprob: -4.932507514953613
    5. '(),' → logprob: -5.057507514953613
    6. '()' → logprob: -5.682507514953613
    7. ')' → logprob: -7.057507514953613
    8. '(int' → logprob: -7.432507514953613
    9. '=' → logprob: -7.557507514953613
    10. '=input' → logprob: -7.682507514953613

Token 346: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.999452772201039e-05
    2. '()' → logprob: -10.500029563903809
    3. '())' → logprob: -13.500029563903809
    4. ' ().' → logprob: -15.125029563903809
    5. '=' → logprob: -15.250029563903809
    6. 'split' → logprob: -16.125030517578125
    7. '()[' → logprob: -16.375030517578125
    8. '()
' → logprob: -16.750030517578125
    9. '(' → logprob: -16.875030517578125
    10. ')' → logprob: -17.000030517578125

Token 347: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.896309739408025e-07
    2. 'spl' → logprob: -15.625000953674316
    3. 'strip' → logprob: -16.0
    4. '(split' → logprob: -16.125
    5. '())' → logprob: -16.375
    6. ')' → logprob: -16.625
    7. 's' → logprob: -16.875
    8. '2' → logprob: -17.125
    9. ' split' → logprob: -17.625
    10. '()' → logprob: -17.625

Token 348: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03065829910337925
    2. '()' → logprob: -3.53065824508667
    3. ')' → logprob: -7.15565824508667
    4. '())
' → logprob: -9.030658721923828
    5. '()
' → logprob: -12.780658721923828
    6. ' ())' → logprob: -13.655658721923828
    7. '())
' → logprob: -14.155658721923828
    8. '(' → logprob: -14.405658721923828
    9. '())

' → logprob: -14.405658721923828
    10. '()]' → logprob: -14.655658721923828

Token 349: 'b' (ID: 65)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'weights' → logprob: -0.8370319604873657
    2. 'c' → logprob: -1.5870319604873657
    3. 'w' → logprob: -1.8370319604873657
    4. 'a' → logprob: -2.962031841278076
    5. 'v' → logprob: -3.337031841278076
    6. 'W' → logprob: -4.212031841278076
    7. ' weights' → logprob: -4.337031841278076
    8. 'weight' → logprob: -4.462031841278076
    9. 'dp' → logprob: -4.837031841278076
    10. 'items' → logprob: -4.962031841278076

Token 350: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48086968064308167
    2. '=' → logprob: -0.9808696508407593
    3. 'w' → logprob: -5.355869770050049
    4. '=[' → logprob: -7.355869770050049
    5. ',' → logprob: -7.980869770050049
    6. '=[]' → logprob: -8.23086929321289
    7. '=list' → logprob: -8.73086929321289
    8. 'c' → logprob: -9.23086929321289
    9. 's' → logprob: -9.23086929321289
    10. 'weights' → logprob: -9.35586929321289

Token 351: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.005574286449700594
    2. ' list' → logprob: -5.2555742263793945
    3. '[list' → logprob: -8.505574226379395
    4. '[]' → logprob: -9.380574226379395
    5. '[' → logprob: -10.255574226379395
    6. 'LI' → logprob: -12.755574226379395
    7. '=list' → logprob: -12.755574226379395
    8. '[]
' → logprob: -12.880574226379395
    9. ' [' → logprob: -12.880574226379395
    10. 'lis' → logprob: -13.505574226379395

Token 352: 'list' (ID: 2641)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.35037708282470703
    2. '0' → logprob: -1.725377082824707
    3. 'list' → logprob: -2.600377082824707
    4. 'tuple' → logprob: -3.475377082824707
    5. 'float' → logprob: -5.725377082824707
    6. 'None' → logprob: -5.850377082824707
    7. ']' → logprob: -6.350377082824707
    8. '[int' → logprob: -6.725377082824707
    9. '[]' → logprob: -7.475377082824707
    10. '(int' → logprob: -7.600377082824707

Token 353: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.002013932913541794
    2. 'map' → logprob: -6.50201416015625
    3. '(range' → logprob: -7.62701416015625
    4. '(' → logprob: -11.62701416015625
    5. ']' → logprob: -12.00201416015625
    6. 'range' → logprob: -12.62701416015625
    7. '()' → logprob: -13.12701416015625
    8. '(input' → logprob: -13.37701416015625
    9. '()]' → logprob: -14.00201416015625
    10. '(
' → logprob: -14.25201416015625

Token 354: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.043671779334545135
    2. 'int' → logprob: -3.1686718463897705
    3. ']int' → logprob: -7.793671607971191
    4. ',int' → logprob: -9.043671607971191
    5. '=int' → logprob: -9.543671607971191
    6. '[int' → logprob: -9.793671607971191
    7. '<int' → logprob: -12.668671607971191
    8. ' int' → logprob: -12.793671607971191
    9. 'lambda' → logprob: -13.293671607971191
    10. ']' → logprob: -13.543671607971191

Token 355: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.2266474962234497
    2. ',' → logprob: -1.6016474962234497
    3. ',int' → logprob: -6.85164737701416
    4. '(input' → logprob: -9.97664737701416
    5. ',list' → logprob: -10.35164737701416
    6. ' ,' → logprob: -10.35164737701416
    7. ',line' → logprob: -11.47664737701416
    8. ',(' → logprob: -11.72664737701416
    9. '   ' → logprob: -11.97664737701416
    10. 'input' → logprob: -12.10164737701416

Token 356: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0012398716062307358
    2. 'sys' → logprob: -7.126239776611328
    3. ' input' → logprob: -7.751239776611328
    4. ' sys' → logprob: -13.001239776611328
    5. 'stdin' → logprob: -13.876239776611328
    6. 'int' → logprob: -14.376239776611328
    7. ' ' → logprob: -14.876239776611328
    8. 'str' → logprob: -15.126239776611328
    9. 'list' → logprob: -15.501239776611328
    10. ')' → logprob: -15.751239776611328

Token 357: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.6240566083070007e-06
    2. '()' → logprob: -14.250001907348633
    3. '.split' → logprob: -15.125001907348633
    4. '()))' → logprob: -15.875001907348633
    5. ' ().' → logprob: -16.125001907348633
    6. '()[' → logprob: -16.375001907348633
    7. '))' → logprob: -16.375001907348633
    8. 'split' → logprob: -16.625001907348633
    9. '.readline' → logprob: -17.250001907348633
    10. '().__' → logprob: -17.500001907348633

Token 358: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.512236498361744e-07
    2. ' split' → logprob: -14.500000953674316
    3. 'strip' → logprob: -16.75
    4. '(split' → logprob: -19.125
    5. 'rstrip' → logprob: -19.125
    6. '.split' → logprob: -20.125
    7. 'spl' → logprob: -20.25
    8. 'read' → logprob: -20.625
    9. 'sys' → logprob: -20.875
    10. ' ' → logprob: -22.125

Token 359: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0006279678200371563
    2. '()' → logprob: -7.8756279945373535
    3. '))' → logprob: -8.625627517700195
    4. '()))
' → logprob: -10.250627517700195
    5. '())' → logprob: -10.750627517700195
    6. '().' → logprob: -12.625627517700195
    7. '()
' → logprob: -13.000627517700195
    8. '())))' → logprob: -13.500627517700195
    9. '(' → logprob: -13.875627517700195
    10. '()))
' → logprob: -14.000627517700195

Token 360: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004074720665812492
    2. 'for' → logprob: -5.629074573516846
    3. '()]' → logprob: -8.504075050354004
    4. ')' → logprob: -9.129075050354004
    5. ' for' → logprob: -9.254075050354004
    6. ']' → logprob: -10.629075050354004
    7. '())' → logprob: -10.754075050354004
    8. '(' → logprob: -12.129075050354004
    9. '()]
' → logprob: -12.629075050354004
    10. '(n' → logprob: -12.754075050354004

Token 361: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6656314730644226
    2. '_' → logprob: -1.4156315326690674
    3. ' range' → logprob: -1.4156315326690674
    4. '_range' → logprob: -8.415631294250488
    5. ' _' → logprob: -9.290631294250488
    6. '_r' → logprob: -9.415631294250488
    7. 'r' → logprob: -10.165631294250488
    8. '(range' → logprob: -10.415631294250488
    9. 'i' → logprob: -11.290631294250488
    10. ' in' → logprob: -11.415631294250488

Token 362: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5521293878555298
    2. '(range' → logprob: -1.4271293878555298
    3. ' in' → logprob: -2.0521292686462402
    4. ' range' → logprob: -3.6771292686462402
    5. '(n' → logprob: -3.8021292686462402
    6. 'in' → logprob: -4.92712926864624
    7. '(r' → logprob: -7.42712926864624
    8. '(' → logprob: -8.552129745483398
    9. ' (' → logprob: -10.177129745483398
    10. 'n' → logprob: -10.427129745483398

Token 363: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00671584764495492
    2. ' range' → logprob: -5.006715774536133
    3. '(range' → logprob: -14.881715774536133
    4. 'r' → logprob: -17.631715774536133
    5. '	range' → logprob: -17.756715774536133
    6. 'rang' → logprob: -18.131715774536133
    7. ' ' → logprob: -19.006715774536133
    8. '   ' → logprob: -20.006715774536133
    9. '  ' → logprob: -20.006715774536133
    10. 'ra' → logprob: -21.631715774536133

Token 364: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.25416120886802673
    2. '(w' → logprob: -1.5041612386703491
    3. 'n' → logprob: -6.504161357879639
    4. 'w' → logprob: -7.379161357879639
    5. '
' → logprob: -10.25416088104248
    6. '(' → logprob: -10.50416088104248
    7. 'range' → logprob: -10.87916088104248
    8. '(m' → logprob: -11.25416088104248
    9. '(
' → logprob: -12.50416088104248
    10. '(N' → logprob: -13.25416088104248

Token 365: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.6457742175552994e-05
    2. ')]
' → logprob: -10.500056266784668
    3. '])' → logprob: -11.500056266784668
    4. ')' → logprob: -11.625056266784668
    5. ']' → logprob: -12.375056266784668
    6. ')]
' → logprob: -13.250056266784668
    7. '])]' → logprob: -13.375056266784668
    8. ' )' → logprob: -14.000056266784668
    9. ')])' → logprob: -14.250056266784668
    10. ')],' → logprob: -15.750056266784668

Token 366: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.006074436940252781
    2. 'w' → logprob: -6.63107442855835
    3. '
' → logprob: -6.75607442855835
    4. '"""' → logprob: -6.75607442855835
    5. '#' → logprob: -7.13107442855835
    6. 'W' → logprob: -7.75607442855835
    7. 'max' → logprob: -8.381074905395508
    8. 'def' → logprob: -8.881074905395508
    9. 'capacity' → logprob: -8.881074905395508
    10. ' dp' → logprob: -9.006074905395508

Token 367: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2529451549053192
    2. ' =' → logprob: -1.5029451847076416
    3. '=[' → logprob: -7.0029449462890625
    4. '=[[' → logprob: -9.252944946289062
    5. ' =[' → logprob: -12.002944946289062
    6. 'w' → logprob: -13.752944946289062
    7. '=
' → logprob: -14.252944946289062
    8. '=[]' → logprob: -14.377944946289062
    9. '=[]
' → logprob: -14.502944946289062
    10. '＝' → logprob: -14.752944946289062

Token 368: ' [' (ID: 723)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.1388036608695984
    2. '[' → logprob: -2.513803720474243
    3. '[-' → logprob: -3.388803720474243
    4. ' [[' → logprob: -4.388803482055664
    5. ' [' → logprob: -6.263803482055664
    6. '[w' → logprob: -9.013803482055664
    7. ' [-' → logprob: -9.013803482055664
    8. '[{' → logprob: -9.388803482055664
    9. '[b' → logprob: -9.638803482055664
    10. '{' → logprob: -9.763803482055664

Token 369: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09122365713119507
    2. '0' → logprob: -2.96622371673584
    3. '[-' → logprob: -4.21622371673584
    4. '[w' → logprob: -4.59122371673584
    5. 'float' → logprob: -4.84122371673584
    6. '-' → logprob: -6.71622371673584
    7. '(' → logprob: -7.84122371673584
    8. ' [' → logprob: -8.21622371673584
    9. '[[' → logprob: -8.21622371673584
    10. '[int' → logprob: -9.09122371673584

Token 370: ' for' (ID: 395)
  Prédit: ']*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.1689058542251587
    2. ' for' → logprob: -2.418905735015869
    3. ']' → logprob: -3.293905735015869
    4. 'for' → logprob: -3.543905735015869
    5. ']*' → logprob: -7.918905735015869
    6. ' ]' → logprob: -11.918906211853027
    7. '*(' → logprob: -12.043906211853027
    8. ']+' → logprob: -13.043906211853027
    9. 'w' → logprob: -13.293906211853027
    10. ' ' → logprob: -14.043906211853027

Token 371: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9290958046913147
    2. 'range' → logprob: -1.17909574508667
    3. '_' → logprob: -1.92909574508667
    4. ' range' → logprob: -2.05409574508667
    5. ' i' → logprob: -4.30409574508667
    6. 'w' → logprob: -6.17909574508667
    7. '_range' → logprob: -6.30409574508667
    8. ' _' → logprob: -6.30409574508667
    9. '_i' → logprob: -6.55409574508667
    10. '_j' → logprob: -7.05409574508667

Token 372: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1310739368200302
    2. 'in' → logprob: -2.1310739517211914
    3. 'range' → logprob: -5.631073951721191
    4. ' range' → logprob: -7.631073951721191
    5. '(range' → logprob: -9.756073951721191
    6. '(' → logprob: -13.381073951721191
    7. 'n' → logprob: -13.506073951721191
    8. ' i' → logprob: -13.506073951721191
    9. '(n' → logprob: -14.506073951721191
    10. 'i' → logprob: -14.506073951721191

Token 373: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029753267765045166
    2. ' range' → logprob: -3.5297532081604004
    3. ' ' → logprob: -13.779753684997559
    4. 'r' → logprob: -14.404753684997559
    5. '(range' → logprob: -14.654753684997559
    6. '  ' → logprob: -15.154753684997559
    7. 'rang' → logprob: -15.529753684997559
    8. 'ra' → logprob: -16.404752731323242
    9. 'ran' → logprob: -16.529752731323242
    10. '   ' → logprob: -16.654752731323242

Token 374: '(w' (ID: 7420)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.0695912316441536
    2. '(w' → logprob: -3.0695912837982178
    3. ' range' → logprob: -4.569591045379639
    4. 'range' → logprob: -4.569591045379639
    5. '(' → logprob: -10.569591522216797
    6. '(W' → logprob: -10.819591522216797
    7. ' (' → logprob: -11.694591522216797
    8. '(r' → logprob: -12.194591522216797
    9. 'Range' → logprob: -15.194591522216797
    10. '	range' → logprob: -15.194591522216797

Token 375: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0015083164907991886
    2. ' +' → logprob: -6.5015082359313965
    3. '+w' → logprob: -12.376508712768555
    4. '＋' → logprob: -14.751508712768555
    5. '+
' → logprob: -15.126508712768555
    6. '1' → logprob: -15.251508712768555
    7. ')+' → logprob: -15.501508712768555
    8. '()+' → logprob: -16.001508712768555
    9. 'w' → logprob: -16.876508712768555
    10. '2' → logprob: -16.876508712768555

Token 376: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004303116293158382
    2. 'range' → logprob: -8.2504301071167
    3. ' ' → logprob: -8.8754301071167
    4. '(w' → logprob: -11.6254301071167
    5. '100' → logprob: -12.0004301071167
    6. 'w' → logprob: -12.5004301071167
    7. ' range' → logprob: -12.5004301071167
    8. '(' → logprob: -12.6254301071167
    9. '(range' → logprob: -13.3754301071167
    10. '+' → logprob: -15.2504301071167

Token 377: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.05600219964981079
    2. ']' → logprob: -2.931002140045166
    3. ')' → logprob: -7.056002140045166
    4. '+' → logprob: -9.056002616882324
    5. ')]
' → logprob: -9.556002616882324
    6. ' ]' → logprob: -10.556002616882324
    7. ']
' → logprob: -11.431002616882324
    8. '])' → logprob: -11.556002616882324
    9. '+]' → logprob: -12.181002616882324
    10. ' )' → logprob: -12.306002616882324

Token 378: 'memo' (ID: 113822)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003827676991932094
    2. ' for' → logprob: -7.875382900238037
    3. '
' → logprob: -14.250382423400879
    4. 'f' → logprob: -14.500382423400879
    5. '   ' → logprob: -14.625382423400879
    6. '#' → logprob: -15.000382423400879
    7. 'dp' → logprob: -16.000383377075195
    8. ']' → logprob: -16.125383377075195
    9. '"""' → logprob: -16.125383377075195
    10. '"""
' → logprob: -16.375383377075195

Token 379: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3883849084377289
    2. '=' → logprob: -1.1383849382400513
    3. '=[' → logprob: -7.388384819030762
    4. '={}' → logprob: -8.263384819030762
    5. '=[]' → logprob: -8.763384819030762
    6. '={' → logprob: -9.013384819030762
    7. '[' → logprob: -9.513384819030762
    8. 'for' → logprob: -9.638384819030762
    9. '_' → logprob: -10.138384819030762
    10. ' ' → logprob: -10.888384819030762

Token 380: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31652340292930603
    2. '{}' → logprob: -1.9415234327316284
    3. '[-' → logprob: -2.316523313522339
    4. 'default' → logprob: -4.691523551940918
    5. ' [' → logprob: -4.691523551940918
    6. '[[' → logprob: -5.066523551940918
    7. '{' → logprob: -5.941523551940918
    8. ' [-' → logprob: -7.566523551940918
    9. ' {}' → logprob: -7.941523551940918
    10. '{-' → logprob: -8.691523551940918

Token 381: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25199589133262634
    2. ' for' → logprob: -1.5019959211349487
    3. ']' → logprob: -10.126996040344238
    4. ')' → logprob: -12.126996040344238
    5. '
' → logprob: -12.126996040344238
    6. '	for' → logprob: -12.251996040344238
    7. '    ' → logprob: -13.001996040344238
    8. ' ' → logprob: -13.376996040344238
    9. '   ' → logprob: -13.626996040344238
    10. '        ' → logprob: -13.876996040344238

Token 382: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.26620712876319885
    2. ' range' → logprob: -1.5162070989608765
    3. '_' → logprob: -4.391207218170166
    4. 'i' → logprob: -6.516207218170166
    5. '_range' → logprob: -9.266206741333008
    6. '(range' → logprob: -9.641206741333008
    7. ' i' → logprob: -9.891206741333008
    8. '_w' → logprob: -10.641206741333008
    9. '(w' → logprob: -10.766206741333008
    10. ' _' → logprob: -11.016206741333008

Token 383: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06693043559789658
    2. 'in' → logprob: -2.8169305324554443
    3. '(w' → logprob: -5.691930294036865
    4. 'range' → logprob: -6.566930294036865
    5. ' range' → logprob: -9.691930770874023
    6. '(range' → logprob: -9.941930770874023
    7. '(i' → logprob: -10.566930770874023
    8. '(in' → logprob: -11.691930770874023
    9. ' (' → logprob: -11.816930770874023
    10. '(' → logprob: -12.441930770874023

Token 384: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12768875062465668
    2. ' range' → logprob: -2.1276886463165283
    3. '(range' → logprob: -7.252688884735107
    4. '(w' → logprob: -9.87768840789795
    5. '(r' → logprob: -15.25268840789795
    6. '   ' → logprob: -15.37768840789795
    7. ' ' → logprob: -16.502689361572266
    8. ' (' → logprob: -16.627689361572266
    9. '(W' → logprob: -17.127689361572266
    10. '	range' → logprob: -17.377689361572266

Token 385: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.004307514522224665
    2. 'range' → logprob: -5.629307746887207
    3. ' range' → logprob: -8.004307746887207
    4. '(range' → logprob: -8.004307746887207
    5. 'w' → logprob: -11.004307746887207
    6. ' (' → logprob: -11.254307746887207
    7. '(' → logprob: -12.629307746887207
    8. '   ' → logprob: -12.879307746887207
    9. '(W' → logprob: -13.379307746887207
    10. 'dp' → logprob: -14.129307746887207

Token 386: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.6405310816480778e-05
    2. ' +' → logprob: -11.750016212463379
    3. '+
' → logprob: -11.875016212463379
    4. '1' → logprob: -14.375016212463379
    5. '])' → logprob: -16.000017166137695
    6. '+i' → logprob: -16.125017166137695
    7. ')' → logprob: -16.250017166137695
    8. ')])' → logprob: -16.375017166137695
    9. ']+' → logprob: -16.500017166137695
    10. ')+' → logprob: -16.750017166137695

Token 387: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.347765181795694e-05
    2. ' ' → logprob: -10.000053405761719
    3. '2' → logprob: -13.250053405761719
    4. '
' → logprob: -13.812553405761719
    5. '   ' → logprob: -14.000053405761719
    6. '+' → logprob: -14.062553405761719
    7. '```' → logprob: -14.375053405761719
    8. ')' → logprob: -14.937553405761719
    9. '(' → logprob: -15.250053405761719
    10. '

' → logprob: -15.375053405761719

Token 388: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.10041780024766922
    2. ']' → logprob: -2.3504178524017334
    3. ')' → logprob: -8.975418090820312
    4. ']
' → logprob: -10.350418090820312
    5. ')]
' → logprob: -10.600418090820312
    6. '])' → logprob: -11.100418090820312
    7. '])]' → logprob: -11.975418090820312
    8. '()]' → logprob: -12.975418090820312
    9. '>]' → logprob: -13.600418090820312
    10. '}]' → logprob: -14.350418090820312

Token 389: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007531665614806116
    2. ' for' → logprob: -7.250753402709961
    3. 'dp' → logprob: -10.750753402709961
    4. '
' → logprob: -11.250753402709961
    5. '#' → logprob: -13.125753402709961
    6. '"""
' → logprob: -13.750753402709961
    7. ']' → logprob: -14.125753402709961
    8. '"""' → logprob: -14.375753402709961
    9. ')' → logprob: -14.500753402709961
    10. '   ' → logprob: -14.500753402709961

Token 390: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05509001761674881
    2. ' i' → logprob: -3.1800899505615234
    3. 'weight' → logprob: -4.805089950561523
    4. ' weight' → logprob: -6.680089950561523
    5. 'item' → logprob: -7.055089950561523
    6. 'v' → logprob: -7.680089950561523
    7. 'j' → logprob: -8.680089950561523
    8. 'value' → logprob: -8.805089950561523
    9. 'wt' → logprob: -8.930089950561523
    10. ' item' → logprob: -9.180089950561523

Token 391: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12948311865329742
    2. 'in' → logprob: -2.129483222961426
    3. 'range' → logprob: -6.754483222961426
    4. ',' → logprob: -6.879483222961426
    5. 'n' → logprob: -9.379483222961426
    6. ',n' → logprob: -9.879483222961426
    7. 'w' → logprob: -10.129483222961426
    8. ' range' → logprob: -10.129483222961426
    9. 'b' → logprob: -10.504483222961426
    10. ' ,' → logprob: -11.004483222961426

Token 392: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04916883260011673
    2. ' range' → logprob: -3.049168825149536
    3. 'b' → logprob: -7.549169063568115
    4. ' b' → logprob: -10.299168586730957
    5. ' ' → logprob: -11.924168586730957
    6. 'r' → logprob: -12.049168586730957
    7. '   ' → logprob: -13.424168586730957
    8. 'w' → logprob: -13.424168586730957
    9. '  ' → logprob: -13.924168586730957
    10. '(range' → logprob: -14.049168586730957

Token 393: '(w' (ID: 7420)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6799644827842712
    2. 'n' → logprob: -0.8049644827842712
    3. 'range' → logprob: -3.179964542388916
    4. '(' → logprob: -5.679964542388916
    5. ' range' → logprob: -7.179964542388916
    6. ' n' → logprob: -8.429964065551758
    7. '(range' → logprob: -8.804964065551758
    8. ' (' → logprob: -9.929964065551758
    9. '1' → logprob: -11.054964065551758
    10. '(w' → logprob: -11.179964065551758

Token 394: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007238718098960817
    2. 'w' → logprob: -8.500723838806152
    3. '):
' → logprob: -8.625723838806152
    4. '):' → logprob: -8.750723838806152
    5. ' +' → logprob: -9.625723838806152
    6. '1' → logprob: -9.750723838806152
    7. 'n' → logprob: -11.000723838806152
    8. '-' → logprob: -11.875723838806152
    9. '   ' → logprob: -12.125723838806152
    10. '+w' → logprob: -12.125723838806152

Token 395: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9124041795730591
    2. ' for' → logprob: -1.162404179573059
    3. ' if' → logprob: -1.787404179573059
    4. ' dp' → logprob: -2.7874040603637695
    5. 'for' → logprob: -3.5374040603637695
    6. 'dp' → logprob: -4.0374040603637695
    7. 'if' → logprob: -4.9124040603637695
    8. '	dp' → logprob: -7.2874040603637695
    9. '	for' → logprob: -7.4124040603637695
    10. ' ' → logprob: -8.28740406036377

Token 396: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5550484657287598
    2. '   ' → logprob: -1.6800484657287598
    3. 'for' (adapté à ' for') → logprob: -2.0550484657287598
    4. ' if' → logprob: -2.4300484657287598
    5. 'dp' → logprob: -4.55504846572876
    6. ' for' → logprob: -4.68004846572876
    7. ' dp' → logprob: -6.55504846572876
    8. 'memo' → logprob: -6.93004846572876
    9. ' memo' → logprob: -7.93004846572876
    10. '       ' → logprob: -8.430047988891602

Token 397: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03603494539856911
    2. ' j' → logprob: -4.286035060882568
    3. 'weight' → logprob: -5.286035060882568
    4. 'x' → logprob: -5.411035060882568
    5. 'v' → logprob: -5.911035060882568
    6. 'w' → logprob: -6.161035060882568
    7. 'b' → logprob: -6.411035060882568
    8. 'c' → logprob: -6.911035060882568
    9. 'val' → logprob: -7.286035060882568
    10. 'item' → logprob: -7.411035060882568

Token 398: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05082271993160248
    2. 'range' → logprob: -3.6758227348327637
    3. 'in' → logprob: -3.8008227348327637
    4. ' range' → logprob: -7.675822734832764
    5. '   ' → logprob: -8.175822257995605
    6. 'n' → logprob: -8.550822257995605
    7. 'ange' → logprob: -8.550822257995605
    8. ',' → logprob: -9.050822257995605
    9. ' ' → logprob: -9.175822257995605
    10. 'w' → logprob: -9.675822257995605

Token 399: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02350914105772972
    2. ' range' → logprob: -3.8985090255737305
    3. 'b' → logprob: -5.8985090255737305
    4. 'r' → logprob: -9.77350902557373
    5. ' b' → logprob: -9.89850902557373
    6. '[b' → logprob: -10.77350902557373
    7. 'dp' → logprob: -10.77350902557373
    8. '[' → logprob: -11.14850902557373
    9. 'memo' → logprob: -11.27350902557373
    10. '(range' → logprob: -12.02350902557373

Token 400: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.26808860898017883
    2. 'n' → logprob: -1.6430885791778564
    3. 'range' → logprob: -3.8930885791778564
    4. '(w' → logprob: -4.3930888175964355
    5. '(len' → logprob: -6.1430888175964355
    6. 'w' → logprob: -6.1430888175964355
    7. '(i' → logprob: -6.5180888175964355
    8. 'len' → logprob: -7.1430888175964355
    9. '(' → logprob: -7.5180888175964355
    10. 'b' → logprob: -8.143088340759277

Token 401: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020848993211984634
    2. '):
' → logprob: -3.8958489894866943
    3. ']:' → logprob: -9.145849227905273
    4. ':' → logprob: -9.520849227905273
    5. '+' → logprob: -10.020849227905273
    6. ']):' → logprob: -10.895849227905273
    7. '   ' → logprob: -11.020849227905273
    8. ')' → logprob: -11.395849227905273
    9. ' ):' → logprob: -11.520849227905273
    10. '       ' → logprob: -12.270849227905273

Token 402: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01093498058617115
    2. '   ' → logprob: -4.760934829711914
    3. ' if' → logprob: -7.135934829711914
    4. ',' → logprob: -8.385934829711914
    5. '	   ' → logprob: -8.385934829711914
    6. '    ' → logprob: -8.635934829711914
    7. ' ' → logprob: -8.760934829711914
    8. ':' → logprob: -8.760934829711914
    9. '     ' → logprob: -8.885934829711914
    10. '	' → logprob: -8.885934829711914

Token 403: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6924760937690735
    2. '   ' → logprob: -0.8174760937690735
    3. 'if' (adapté à ' if') → logprob: -2.9424760341644287
    4. '       ' → logprob: -5.442476272583008
    5. '	if' → logprob: -7.692476272583008
    6. ' ' → logprob: -8.942476272583008
    7. '	   ' → logprob: -8.942476272583008
    8. '  ' → logprob: -9.192476272583008
    9. '           ' → logprob: -10.067476272583008
    10. '    ' → logprob: -10.192476272583008

Token 404: ' i' (ID: 575)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01019386388361454
    2. 'w' → logprob: -4.760193824768066
    3. ' b' → logprob: -7.010193824768066
    4. 'i' → logprob: -7.635193824768066
    5. '   ' → logprob: -9.135193824768066
    6. 'j' → logprob: -10.260193824768066
    7. ' w' → logprob: -10.385193824768066
    8. '(b' → logprob: -12.260193824768066
    9. ' i' → logprob: -12.385193824768066
    10. '	b' → logprob: -13.260193824768066

Token 405: '+b' (ID: 76609)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.031032614409923553
    2. ' +' → logprob: -3.7810325622558594
    3. '+b' → logprob: -6.156032562255859
    4. '>=' → logprob: -6.406032562255859
    5. '-' → logprob: -6.656032562255859
    6. '+j' → logprob: -7.031032562255859
    7. '+
' → logprob: -7.156032562255859
    8. '+w' → logprob: -8.15603256225586
    9. ' -' → logprob: -8.40603256225586
    10. ' ' → logprob: -9.28103256225586

Token 406: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.02138613536953926
    2. '][' → logprob: -4.64638614654541
    3. 'j' → logprob: -4.77138614654541
    4. '[' → logprob: -7.27138614654541
    5. 'w' → logprob: -7.39638614654541
    6. ']' → logprob: -8.39638614654541
    7. '+j' → logprob: -8.89638614654541
    8. '0' → logprob: -9.02138614654541
    9. ' j' → logprob: -9.14638614654541
    10. ' ' → logprob: -9.39638614654541

Token 407: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001895935565698892
    2. '][' → logprob: -9.125189781188965
    3. '<=' → logprob: -10.375189781188965
    4. '0' → logprob: -10.500189781188965
    5. ' [' → logprob: -12.250189781188965
    6. '[
' → logprob: -12.625189781188965
    7. '<' → logprob: -12.875189781188965
    8. ' <=' → logprob: -13.625189781188965
    9. ')[' → logprob: -13.750189781188965
    10. ' ' → logprob: -14.000189781188965

Token 408: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8670179997570813e-05
    2. '1' → logprob: -11.375019073486328
    3. ' ' → logprob: -11.875019073486328
    4. '   ' → logprob: -16.125019073486328
    5. '
' → logprob: -18.125019073486328
    6. '```' → logprob: -18.875019073486328
    7. ':' → logprob: -20.125019073486328
    8. '  ' → logprob: -20.250019073486328
    9. '[' → logprob: -20.250019073486328
    10. '#' → logprob: -20.375019073486328

Token 409: ']' (ID: 60)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.6509156823158264
    2. ' <=' → logprob: -1.2759156227111816
    3. ']' → logprob: -2.1509156227111816
    4. ']<=' → logprob: -2.6509156227111816
    5. ']>=' → logprob: -5.900915622711182
    6. '[' → logprob: -6.025915622711182
    7. '+' → logprob: -6.275915622711182
    8. '<' → logprob: -6.650915622711182
    9. ' ]' → logprob: -6.900915622711182
    10. ')<=' → logprob: -7.525915622711182

Token 410: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.10067027807235718
    2. ' <=' → logprob: -2.350670337677002
    3. '<' → logprob: -7.975670337677002
    4. ']<=' → logprob: -10.600669860839844
    5. '<w' → logprob: -10.850669860839844
    6. ' <' → logprob: -10.850669860839844
    7. ')<=' → logprob: -11.100669860839844
    8. '+' → logprob: -11.225669860839844
    9. '[' → logprob: -11.475669860839844
    10. ')' → logprob: -12.600669860839844

Token 411: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.01104935072362423
    2. ' w' → logprob: -4.511049270629883
    3. '	w' → logprob: -13.511049270629883
    4. '   ' → logprob: -16.011049270629883
    5. '>w' → logprob: -17.136049270629883
    6. ' ' → logprob: -17.136049270629883
    7. '  ' → logprob: -18.011049270629883
    8. '=w' → logprob: -18.011049270629883
    9. '<w' → logprob: -18.136049270629883
    10. 'W' → logprob: -18.136049270629883

Token 412: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18876048922538757
    2. ':
' → logprob: -2.06376051902771
    3. ' and' → logprob: -3.18876051902771
    4. 'and' → logprob: -6.813760280609131
    5. ']:' → logprob: -6.938760280609131
    6. ']:
' → logprob: -7.438760280609131
    7. ']' → logprob: -7.813760280609131
    8. ' :' → logprob: -7.813760280609131
    9. ' :
' → logprob: -8.563760757446289
    10. '   ' → logprob: -10.313760757446289

Token 413: ' j' (ID: 441)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.029946256428956985
    2. ' dp' → logprob: -3.5299463272094727
    3. '(dp' → logprob: -9.904946327209473
    4. '   ' → logprob: -9.904946327209473
    5. '	dp' → logprob: -10.279946327209473
    6. 'len' → logprob: -10.404946327209473
    7. '       ' → logprob: -12.404946327209473
    8. 'd' → logprob: -12.404946327209473
    9. '           ' → logprob: -12.529946327209473
    10. 'max' → logprob: -12.529946327209473

Token 414: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.26175588369369507
    2. 'not' → logprob: -1.5117559432983398
    3. ' in' → logprob: -5.01175594329834
    4. 'in' → logprob: -6.76175594329834
    5. ']' → logprob: -7.63675594329834
    6. ')' → logprob: -7.63675594329834
    7. '+' → logprob: -8.51175594329834
    8. '!=' → logprob: -8.76175594329834
    9. '<|end|>' → logprob: -9.38675594329834
    10. 'and' → logprob: -9.63675594329834

Token 415: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1269756704568863
    2. 'in' → logprob: -2.1269757747650146
    3. '
' → logprob: -11.001976013183594
    4. ' ' → logprob: -12.001976013183594
    5. '   ' → logprob: -12.251976013183594
    6. '  ' → logprob: -12.751976013183594
    7. '	in' → logprob: -12.751976013183594
    8. ')' → logprob: -13.376976013183594
    9. ']' → logprob: -13.501976013183594
    10. '+' → logprob: -13.626976013183594

Token 416: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.04303744062781334
    2. ' memo' → logprob: -3.1680374145507812
    3. 'm' → logprob: -10.543037414550781
    4. 'dp' → logprob: -12.418037414550781
    5. '   ' → logprob: -13.543037414550781
    6. '
' → logprob: -13.543037414550781
    7. '[m' → logprob: -13.793037414550781
    8. 'set' → logprob: -13.793037414550781
    9. ' ' → logprob: -13.918037414550781
    10. 'memory' → logprob: -14.793037414550781

Token 417: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00014823723176959902
    2. '[' → logprob: -8.875147819519043
    3. '[j' → logprob: -12.375147819519043
    4. '[I' → logprob: -13.125147819519043
    5. '[w' → logprob: -14.750147819519043
    6. '
' → logprob: -15.250147819519043
    7. ' [' → logprob: -15.375147819519043
    8. '[
' → logprob: -15.375147819519043
    9. '[[' → logprob: -15.500147819519043
    10. '[m' → logprob: -15.750147819519043

Token 418: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.031717684119939804
    2. '[i' → logprob: -4.156717777252197
    3. '[j' → logprob: -4.906717777252197
    4. ']:
' → logprob: -5.031717777252197
    5. ']' → logprob: -7.281717777252197
    6. ':' → logprob: -7.906717777252197
    7. '   ' → logprob: -8.656717300415039
    8. '[' → logprob: -9.531717300415039
    9. '       ' → logprob: -10.156717300415039
    10. ']:

' → logprob: -10.156717300415039

Token 419: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0991588681936264
    2. ':' → logprob: -2.474158763885498
    3. '               ' → logprob: -5.724158763885498
    4. ':
' → logprob: -5.724158763885498
    5. ' and' → logprob: -7.224158763885498
    6. '       ' → logprob: -7.349158763885498
    7. ',' → logprob: -7.849158763885498
    8. '<|end|>' → logprob: -8.099159240722656
    9. '          ' → logprob: -8.349159240722656
    10. '[' → logprob: -8.849159240722656

Token 420: ' if' (ID: 538)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.4633161723613739
    2. '           ' → logprob: -1.4633162021636963
    3. ' if' → logprob: -2.7133162021636963
    4. '               ' → logprob: -3.0883162021636963
    5. '       ' → logprob: -4.838315963745117
    6. 'dp' → logprob: -5.088315963745117
    7. '	       ' → logprob: -5.588315963745117
    8. ' new' → logprob: -5.963315963745117
    9. '   ' → logprob: -6.713315963745117
    10. '	dp' → logprob: -6.713315963745117

Token 421: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04864118620753288
    2. ' dp' → logprob: -3.0486412048339844
    3. '           ' → logprob: -10.923641204833984
    4. '	dp' → logprob: -11.298641204833984
    5. '(dp' → logprob: -11.548641204833984
    6. '               ' → logprob: -12.173641204833984
    7. '   ' → logprob: -12.798641204833984
    8. 'max' → logprob: -13.548641204833984
    9. ' ' → logprob: -13.923641204833984
    10. 'd' → logprob: -14.048641204833984

Token 422: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.107425062713446e-06
    2. '[' → logprob: -12.625006675720215
    3. 'i' → logprob: -13.750006675720215
    4. ' [' → logprob: -13.875006675720215
    5. '[j' → logprob: -14.250006675720215
    6. '   ' → logprob: -14.500006675720215
    7. ' i' → logprob: -16.12500762939453
    8. '[
' → logprob: -16.25000762939453
    9. '           ' → logprob: -16.25000762939453
    10. ' ' → logprob: -16.87500762939453

Token 423: '+b' (ID: 76609)
  Prédit: '+b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+b' → logprob: -0.054381467401981354
    2. ']+' → logprob: -3.6793813705444336
    3. '+j' → logprob: -4.679381370544434
    4. '+' → logprob: -4.804381370544434
    5. ']' → logprob: -5.429381370544434
    6. ' +' → logprob: -5.929381370544434
    7. ']<' → logprob: -7.054381370544434
    8. '[j' → logprob: -7.304381370544434
    9. '[' → logprob: -7.429381370544434
    10. '[i' → logprob: -8.304381370544434

Token 424: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.27099974633893e-05
    2. '[' → logprob: -12.250012397766113
    3. '
' → logprob: -13.375012397766113
    4. 'j' → logprob: -13.500012397766113
    5. '```' → logprob: -14.000012397766113
    6. '[i' → logprob: -14.250012397766113
    7. '][' → logprob: -14.500012397766113
    8. '[
' → logprob: -14.750012397766113
    9. '   ' → logprob: -14.875012397766113
    10. '           ' → logprob: -15.125012397766113

Token 425: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.43324893712997437
    2. '[j' → logprob: -1.4332489967346191
    3. '[' → logprob: -2.183248996734619
    4. ']' → logprob: -8.683248519897461
    5. '1' → logprob: -9.308248519897461
    6. '   ' → logprob: -10.183248519897461
    7. '0' → logprob: -11.433248519897461
    8. '```' → logprob: -11.433248519897461
    9. 'j' → logprob: -11.683248519897461
    10. ' ][' → logprob: -11.933248519897461

Token 426: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.350386295001954e-05
    2. '[' → logprob: -10.500073432922363
    3. '0' → logprob: -11.500073432922363
    4. ' ' → logprob: -11.625073432922363
    5. '   ' → logprob: -12.312573432922363
    6. '
' → logprob: -12.562573432922363
    7. 'j' → logprob: -12.562573432922363
    8. '```' → logprob: -12.562573432922363
    9. ']' → logprob: -13.125073432922363
    10. '
' → logprob: -13.312573432922363

Token 427: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4293438792228699
    2. ']<' → logprob: -1.0543439388275146
    3. '<' → logprob: -7.6793437004089355
    4. ']<=' → logprob: -9.179344177246094
    5. ' ]' → logprob: -10.179344177246094
    6. '']' → logprob: -12.054344177246094
    7. ']==' → logprob: -12.429344177246094
    8. '"]' → logprob: -12.554344177246094
    9. ' <' → logprob: -13.116844177246094
    10. ']
' → logprob: -13.179344177246094

Token 428: ' >' (ID: 1424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.020604483783245087
    2. ' <' → logprob: -3.895604372024536
    3. '<int' → logprob: -11.145604133605957
    4. '<=' → logprob: -12.020604133605957
    5. '<p' → logprob: -12.145604133605957
    6. '<len' → logprob: -12.520604133605957
    7. 'max' → logprob: -12.645604133605957
    8. '<std' → logprob: -12.645604133605957
    9. ']<' → logprob: -12.645604133605957
    10. '<v' → logprob: -13.145604133605957

Token 429: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.048688195645809174
    2. ' dp' → logprob: -3.0486881732940674
    3. '	dp' → logprob: -9.673687934875488
    4. '(dp' → logprob: -10.798687934875488
    5. '   ' → logprob: -11.923687934875488
    6. ' ' → logprob: -12.673687934875488
    7. '  ' → logprob: -13.548687934875488
    8. 'max' → logprob: -13.923687934875488
    9. 'd' → logprob: -14.173687934875488
    10. '           ' → logprob: -14.423687934875488

Token 430: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.012639490887522697
    2. 'i' → logprob: -4.38763952255249
    3. '[' → logprob: -9.262639045715332
    4. ' i' → logprob: -10.762639045715332
    5. '[
' → logprob: -12.387639045715332
    6. '[j' → logprob: -12.512639045715332
    7. ' [' → logprob: -12.637639045715332
    8. '][' → logprob: -14.637639045715332
    9. ' ' → logprob: -14.887639045715332
    10. '	i' → logprob: -15.137639045715332

Token 431: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16074468195438385
    2. ']+' → logprob: -1.9107446670532227
    3. 'i' → logprob: -8.535744667053223
    4. '[i' → logprob: -8.910744667053223
    5. ' ]' → logprob: -9.410744667053223
    6. '+i' → logprob: -9.785744667053223
    7. '[' → logprob: -10.785744667053223
    8. '[j' → logprob: -12.035744667053223
    9. '+j' → logprob: -12.160744667053223
    10. '+' → logprob: -12.410744667053223

Token 432: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0003851517685689032
    2. ' b' → logprob: -7.875385284423828
    3. '   ' → logprob: -13.500385284423828
    4. '1' → logprob: -13.750385284423828
    5. 'c' → logprob: -14.000385284423828
    6. ' ' → logprob: -14.625385284423828
    7. 'bj' → logprob: -15.750385284423828
    8. '	b' → logprob: -15.875385284423828
    9. '  ' → logprob: -16.000385284423828
    10. '    ' → logprob: -16.000385284423828

Token 433: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.4498052223643754e-05
    2. 'j' → logprob: -11.250014305114746
    3. '[' → logprob: -13.625014305114746
    4. '[i' → logprob: -16.000015258789062
    5. '[
' → logprob: -17.000015258789062
    6. '
' → logprob: -17.250015258789062
    7. '	j' → logprob: -17.500015258789062
    8. '```' → logprob: -17.500015258789062
    9. '[[' → logprob: -17.625015258789062
    10. ' j' → logprob: -18.375015258789062

Token 434: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09478767216205597
    2. '[j' → logprob: -2.46978759765625
    3. '][' → logprob: -5.21978759765625
    4. '0' → logprob: -7.84478759765625
    5. 'j' → logprob: -11.59478759765625
    6. ' [' → logprob: -12.59478759765625
    7. '
' → logprob: -12.71978759765625
    8. '   ' → logprob: -12.84478759765625
    9. '[i' → logprob: -12.96978759765625
    10. '```' → logprob: -13.34478759765625

Token 435: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8193366486229934e-05
    2. 'j' → logprob: -11.000018119812012
    3. '1' → logprob: -13.750018119812012
    4. '[j' → logprob: -15.125018119812012
    5. 'i' → logprob: -16.875019073486328
    6. '[' → logprob: -16.875019073486328
    7. ' ' → logprob: -17.000019073486328
    8. '2' → logprob: -17.375019073486328
    9. '```' → logprob: -17.750019073486328
    10. '	j' → logprob: -18.000019073486328

Token 436: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01851324364542961
    2. ']:' → logprob: -4.643513202667236
    3. ':
' → logprob: -5.143513202667236
    4. '+' → logprob: -6.393513202667236
    5. '+:' → logprob: -7.518513202667236
    6. '):' → logprob: -7.893513202667236
    7. ' +' → logprob: -9.268513679504395
    8. ' :' → logprob: -9.518513679504395
    9. ']:
' → logprob: -10.018513679504395
    10. ']+' → logprob: -11.268513679504395

Token 437: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6870554685592651
    2. '               ' → logprob: -0.8120554685592651
    3. ' :' → logprob: -3.8120555877685547
    4. ':
' → logprob: -4.937055587768555
    5. '                ' → logprob: -4.937055587768555
    6. '                       ' → logprob: -5.187055587768555
    7. ' :
' → logprob: -6.312055587768555
    8. '            ' → logprob: -6.687055587768555
    9. '+' → logprob: -7.062055587768555
    10. ' and' → logprob: -7.187055587768555

Token 438: ' continue' (ID: 4901)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.25992101430892944
    2. ' dp' → logprob: -1.5099210739135742
    3. '               ' → logprob: -5.009921073913574
    4. '                   ' → logprob: -6.884921073913574
    5. '	dp' → logprob: -8.759921073913574
    6. '                       ' → logprob: -10.134921073913574
    7. '           ' → logprob: -10.509921073913574
    8. '(dp' → logprob: -11.134921073913574
    9. '
' → logprob: -11.759921073913574
    10. '                ' → logprob: -12.634921073913574

Token 439: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 440: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.534731924533844
    2. '                ' → logprob: -2.159731864929199
    3. '<|end|>' → logprob: -2.534731864929199
    4. '           ' → logprob: -2.659731864929199
    5. 'dp' → logprob: -3.159731864929199
    6. '                   ' → logprob: -3.659731864929199
    7. '            ' → logprob: -4.159731864929199
    8. ' dp' → logprob: -4.784731864929199
    9. '              ' → logprob: -4.909731864929199
    10. ' ' → logprob: -5.409731864929199

Token 441: ' else' (ID: 1203)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.284136027097702
    2. '               ' → logprob: -1.9091360569000244
    3. ' dp' → logprob: -2.6591360569000244
    4. '           ' → logprob: -4.159135818481445
    5. '                   ' → logprob: -4.534135818481445
    6. '	dp' → logprob: -7.409135818481445
    7. '   ' → logprob: -8.159135818481445
    8. '       ' → logprob: -8.159135818481445
    9. '                       ' → logprob: -8.284135818481445
    10. '+' → logprob: -8.409135818481445

Token 442: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05958124250173569
    2. '                   ' → logprob: -3.6845812797546387
    3. ':
' → logprob: -4.184581279754639
    4. ' dp' → logprob: -4.934581279754639
    5. '                       ' → logprob: -5.559581279754639
    6. ':' → logprob: -5.809581279754639
    7. 'dp' → logprob: -6.684581279754639
    8. '           ' → logprob: -7.559581279754639
    9. ' :
' → logprob: -7.934581279754639
    10. ',' → logprob: -8.18458080291748

Token 443: '               ' (ID: 506)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4209826588630676
    2. ' dp' → logprob: -1.4209825992584229
    3. '               ' → logprob: -2.295982599258423
    4. '                   ' → logprob: -7.045982837677002
    5. '           ' → logprob: -8.545982360839844
    6. '	dp' → logprob: -8.670982360839844
    7. '                       ' → logprob: -9.795982360839844
    8. '(dp' → logprob: -10.420982360839844
    9. 'import' → logprob: -10.670982360839844
    10. '   ' → logprob: -10.670982360839844

Token 444: ' memo' (ID: 46393)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0266644936054945
    2. ' dp' → logprob: -3.6516644954681396
    3. '               ' → logprob: -8.151664733886719
    4. '                   ' → logprob: -10.276664733886719
    5. '	dp' → logprob: -11.276664733886719
    6. '           ' → logprob: -11.651664733886719
    7. 'memo' (adapté à ' memo') → logprob: -12.651664733886719
    8. '                ' → logprob: -12.901664733886719
    9. 'd' → logprob: -13.026664733886719
    10. '
' → logprob: -13.276664733886719

Token 445: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.030150072649121284
    2. '[' → logprob: -3.5301501750946045
    3. '[I' → logprob: -7.905149936676025
    4. '[j' → logprob: -11.280150413513184
    5. '[
' → logprob: -11.905150413513184
    6. '[int' → logprob: -12.280150413513184
    7. '[n' → logprob: -13.905150413513184
    8. '[s' → logprob: -14.530150413513184
    9. '[u' → logprob: -14.655150413513184
    10. '[b' → logprob: -14.780150413513184

Token 446: '+b' (ID: 76609)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6037612557411194
    2. '[i' → logprob: -1.3537611961364746
    3. ']=' → logprob: -1.8537611961364746
    4. '][' → logprob: -3.6037611961364746
    5. '[j' → logprob: -5.478761196136475
    6. '].' → logprob: -5.478761196136475
    7. ']+=' → logprob: -6.728761196136475
    8. '[' → logprob: -7.228761196136475
    9. '[b' → logprob: -8.978761672973633
    10. '+' → logprob: -8.978761672973633

Token 447: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0002973280206788331
    2. '{' → logprob: -9.375297546386719
    3. '[' → logprob: -9.500297546386719
    4. '_j' → logprob: -10.125297546386719
    5. '           ' → logprob: -11.125297546386719
    6. '][' → logprob: -11.125297546386719
    7. '[{' → logprob: -11.500297546386719
    8. '```' → logprob: -11.500297546386719
    9. '
' → logprob: -11.625297546386719
    10. '[
' → logprob: -11.875297546386719

Token 448: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7008227109909058
    2. '][' → logprob: -0.7008227109909058
    3. '[j' → logprob: -5.075822830200195
    4. ']' → logprob: -7.950822830200195
    5. '+' → logprob: -8.075822830200195
    6. '1' → logprob: -8.575822830200195
    7. '   ' → logprob: -9.075822830200195
    8. '           ' → logprob: -9.200822830200195
    9. ']][' → logprob: -9.950822830200195
    10. '+j' → logprob: -9.950822830200195

Token 449: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006819340633228421
    2. '0' → logprob: -8.00068187713623
    3. '
' → logprob: -8.75068187713623
    4. 'j' → logprob: -9.50068187713623
    5. 'i' → logprob: -9.87568187713623
    6. '[' → logprob: -11.00068187713623
    7. '   ' → logprob: -11.12568187713623
    8. ' ' → logprob: -12.31318187713623
    9. '[j' → logprob: -12.62568187713623
    10. '```' → logprob: -12.68818187713623

Token 450: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04599827900528908
    2. '].' → logprob: -3.7959983348846436
    3. ']=' → logprob: -3.7959983348846436
    4. ']+=' → logprob: -11.295998573303223
    5. ']=(' → logprob: -12.295998573303223
    6. ' ]' → logprob: -12.920998573303223
    7. ']

' → logprob: -13.170998573303223
    8. ']={' → logprob: -13.170998573303223
    9. ']
' → logprob: -13.295998573303223
    10. ']==' → logprob: -13.295998573303223

Token 451: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0003199730417691171
    2. ' =' → logprob: -8.125320434570312
    3. '=b' → logprob: -11.375320434570312
    4. '=m' → logprob: -12.000320434570312
    5. '=list' → logprob: -12.500320434570312
    6. '+=' → logprob: -14.125320434570312
    7. '=[' → logprob: -14.375320434570312
    8. '=set' → logprob: -15.875320434570312
    9. '=

' → logprob: -15.875320434570312
    10. '=j' → logprob: -16.000320434570312

Token 452: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.001171056181192398
    2. '[m' → logprob: -7.501171112060547
    3. 'list' → logprob: -8.251171112060547
    4. ' memo' → logprob: -8.501171112060547
    5. '[' → logprob: -9.251171112060547
    6. 'm' → logprob: -11.001171112060547
    7. 'copy' → logprob: -11.376171112060547
    8. 'deque' → logprob: -11.751171112060547
    9. 'mem' → logprob: -12.001171112060547
    10. '   ' → logprob: -12.751171112060547

Token 453: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9981420336989686e-05
    2. '[' → logprob: -11.000020027160645
    3. '[I' → logprob: -13.375020027160645
    4. '[j' → logprob: -14.500020027160645
    5. '[
' → logprob: -14.750020027160645
    6. ' [' → logprob: -15.750020027160645
    7. '```' → logprob: -16.125019073486328
    8. 'i' → logprob: -16.250019073486328
    9. '[u' → logprob: -16.375019073486328
    10. '[s' → logprob: -17.250019073486328

Token 454: ']+' (ID: 15344)
  Prédit: '][:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][:' → logprob: -0.7743344902992249
    2. ']' → logprob: -1.39933443069458
    3. '[:]' → logprob: -1.89933443069458
    4. '[:' → logprob: -2.64933443069458
    5. ']+' → logprob: -3.14933443069458
    6. '].' → logprob: -4.27433443069458
    7. '][' → logprob: -4.52433443069458
    8. '[' → logprob: -6.02433443069458
    9. '[]' → logprob: -7.52433443069458
    10. '[i' → logprob: -7.64933443069458

Token 455: '[' (ID: 58)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0005674490821547806
    2. '[' → logprob: -7.500567436218262
    3. '[b' → logprob: -11.750567436218262
    4. '[i' → logprob: -12.625567436218262
    5. '[js' → logprob: -14.000567436218262
    6. ' [' → logprob: -14.250567436218262
    7. '[f' → logprob: -14.750567436218262
    8. '[str' → logprob: -15.000567436218262
    9. '[
' → logprob: -15.625567436218262
    10. '[w' → logprob: -15.750567436218262

Token 456: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00041220002458430827
    2. 'str' → logprob: -8.500411987304688
    3. '[j' → logprob: -8.875411987304688
    4. ' j' → logprob: -9.750411987304688
    5. '[' → logprob: -12.125411987304688
    6. 'b' → logprob: -13.125411987304688
    7. '   ' → logprob: -14.000411987304688
    8. '
' → logprob: -14.625411987304688
    9. '(j' → logprob: -15.000411987304688
    10. '	j' → logprob: -15.375411987304688

Token 457: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013104787794873118
    2. ' ]' → logprob: -7.001310348510742
    3. '<|end|>' → logprob: -8.251310348510742
    4. ']
' → logprob: -9.001310348510742
    5. '<|end|>' → logprob: -13.001310348510742
    6. ']+' → logprob: -13.001310348510742
    7. '       ' → logprob: -13.126310348510742
    8. ']

' → logprob: -13.626310348510742
    9. '[' → logprob: -14.126310348510742
    10. '   ' → logprob: -14.251310348510742

Token 458: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -9.102680633077398e-05
    2. '<|end|>' → logprob: -10.500090599060059
    3. '       ' → logprob: -11.250090599060059
    4. '              ' → logprob: -11.625090599060059
    5. '			' → logprob: -11.875090599060059
    6. '           ' → logprob: -12.125090599060059
    7. '                ' → logprob: -12.125090599060059
    8. '		       ' → logprob: -12.625090599060059
    9. 'dp' → logprob: -13.125090599060059
    10. '                   ' → logprob: -13.125090599060059

Token 459: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0019448186503723264
    2. ' dp' → logprob: -6.2519450187683105
    3. '               ' → logprob: -11.376944541931152
    4. '	dp' → logprob: -13.126944541931152
    5. '           ' → logprob: -13.376944541931152
    6. '
' → logprob: -15.001944541931152
    7. '                   ' → logprob: -15.126944541931152
    8. '(dp' → logprob: -15.626944541931152
    9. '   ' → logprob: -15.876944541931152
    10. '_dp' → logprob: -16.62694549560547

Token 460: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.7159857786027715e-05
    2. '[' → logprob: -10.000046730041504
    3. 'i' → logprob: -13.500046730041504
    4. '[
' → logprob: -15.750046730041504
    5. '[j' → logprob: -16.00004768371582
    6. '=' → logprob: -17.37504768371582
    7. ' [' → logprob: -17.62504768371582
    8. '=i' → logprob: -17.87504768371582
    9. '[...]' → logprob: -18.00004768371582
    10. '(i' → logprob: -18.00004768371582

Token 461: '+b' (ID: 76609)
  Prédit: '+b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+b' → logprob: -0.002128491410985589
    2. '+j' → logprob: -6.752128601074219
    3. '+' → logprob: -7.502128601074219
    4. '[b' → logprob: -8.877128601074219
    5. '[j' → logprob: -9.377128601074219
    6. '[' → logprob: -9.502128601074219
    7. 'b' → logprob: -10.127128601074219
    8. ']+' → logprob: -11.377128601074219
    9. ' +' → logprob: -11.377128601074219
    10. '+[' → logprob: -11.627128601074219

Token 462: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.008134136907756329
    2. '+j' → logprob: -5.008134365081787
    3. '[' → logprob: -7.633134365081787
    4. '][' → logprob: -8.133133888244629
    5. 'j' → logprob: -8.508133888244629
    6. '+' → logprob: -8.883133888244629
    7. ']' → logprob: -9.758133888244629
    8. '```' → logprob: -10.383133888244629
    9. '+[' → logprob: -10.508133888244629
    10. '_j' → logprob: -10.633133888244629

Token 463: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.29049763083457947
    2. '[j' → logprob: -2.0404975414276123
    3. '1' → logprob: -2.2904975414276123
    4. ']' → logprob: -4.665497779846191
    5. '0' → logprob: -5.165497779846191
    6. ']+' → logprob: -5.915497779846191
    7. '][' → logprob: -6.165497779846191
    8. '   ' → logprob: -8.165497779846191
    9. '+j' → logprob: -8.540497779846191
    10. '+' → logprob: -8.790497779846191

Token 464: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010962842497974634
    2. '0' → logprob: -7.001096248626709
    3. '[j' → logprob: -9.501096725463867
    4. '[' → logprob: -9.626096725463867
    5. 'j' → logprob: -11.126096725463867
    6. '
' → logprob: -11.751096725463867
    7. '```' → logprob: -12.313596725463867
    8. ']' → logprob: -12.501096725463867
    9. '   ' → logprob: -12.813596725463867
    10. ' ' → logprob: -13.126096725463867

Token 465: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0020937572699040174
    2. ' ]' → logprob: -6.75209379196167
    3. ']=' → logprob: -7.00209379196167
    4. ']+=' → logprob: -11.877093315124512
    5. ']
' → logprob: -13.127093315124512
    6. '=' → logprob: -13.502093315124512
    7. ']+' → logprob: -13.877093315124512
    8. ']]' → logprob: -14.877093315124512
    9. '],' → logprob: -14.877093315124512
    10. ']>' → logprob: -15.252093315124512

Token 466: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692894041538239
    2. ' =' → logprob: -2.1269290447235107
    3. '+=' → logprob: -16.126928329467773
    4. ' ' → logprob: -16.251928329467773
    5. '=min' → logprob: -16.376928329467773
    6. '＝' → logprob: -16.626928329467773
    7. '=max' → logprob: -16.876928329467773
    8. '=

' → logprob: -17.001928329467773
    9. '=d' → logprob: -17.126928329467773
    10. '=b' → logprob: -17.126928329467773

Token 467: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01815345324575901
    2. ' dp' → logprob: -4.018153667449951
    3. 'd' → logprob: -13.518153190612793
    4. '	dp' → logprob: -14.018153190612793
    5. ' ' → logprob: -14.268153190612793
    6. '(dp' → logprob: -14.893153190612793
    7. '   ' → logprob: -15.268153190612793
    8. '  ' → logprob: -16.26815414428711
    9. '.dp' → logprob: -18.01815414428711
    10. 'min' → logprob: -18.39315414428711

Token 468: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.070975071750581e-05
    2. '[' → logprob: -10.500030517578125
    3. 'i' → logprob: -13.000030517578125
    4. '[I' → logprob: -14.625030517578125
    5. ' ' → logprob: -16.000030517578125
    6. '[j' → logprob: -16.625030517578125
    7. ' [' → logprob: -17.000030517578125
    8. '[
' → logprob: -17.125030517578125
    9. '```' → logprob: -18.000030517578125
    10. '][' → logprob: -18.375030517578125

Token 469: ']+' (ID: 15344)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3284980058670044
    2. ']+' → logprob: -1.9534980058670044
    3. ']' → logprob: -2.453497886657715
    4. 'i' → logprob: -3.703497886657715
    5. '[' → logprob: -4.203497886657715
    6. '+i' → logprob: -4.953497886657715
    7. '+' → logprob: -5.328497886657715
    8. ' i' → logprob: -8.328497886657715
    9. ' ' → logprob: -9.203497886657715
    10. ' ]' → logprob: -9.328497886657715

Token 470: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -7.941850526549388e-06
    2. ' b' → logprob: -11.750007629394531
    3. '1' → logprob: -18.25000762939453
    4. 'bj' → logprob: -18.37500762939453
    5. '	b' → logprob: -19.62500762939453
    6. '0' → logprob: -20.37500762939453
    7. 'j' → logprob: -20.50000762939453
    8. '[b' → logprob: -21.37500762939453
    9. '   ' → logprob: -21.75000762939453
    10. '+b' → logprob: -21.75000762939453

Token 471: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.0087516784551553e-05
    2. 'j' → logprob: -11.87501049041748
    3. '[' → logprob: -13.50001049041748
    4. ' [' → logprob: -13.87501049041748
    5. '[i' → logprob: -14.75001049041748
    6. '
' → logprob: -16.000009536743164
    7. '[
' → logprob: -16.750009536743164
    8. '```' → logprob: -16.750009536743164
    9. '0' → logprob: -17.250009536743164
    10. ' j' → logprob: -17.375009536743164

Token 472: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004471065942198038
    2. '0' → logprob: -5.504471302032471
    3. '][' → logprob: -8.504470825195312
    4. '[j' → logprob: -8.629470825195312
    5. ' [' → logprob: -11.879470825195312
    6. '   ' → logprob: -13.629470825195312
    7. '
' → logprob: -14.504470825195312
    8. ' ' → logprob: -14.629470825195312
    9. '```' → logprob: -14.629470825195312
    10. ')[' → logprob: -15.254470825195312

Token 473: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. '1' → logprob: -15.625001907348633
    4. '[' → logprob: -17.750001907348633
    5. '   ' → logprob: -18.312501907348633
    6. '
' → logprob: -18.375001907348633
    7. '00' → logprob: -19.562501907348633
    8. '```' → logprob: -19.875001907348633
    9. '۰' → logprob: -19.875001907348633
    10. '2' → logprob: -20.062501907348633

Token 474: ']

' (ID: 3144)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 475: 'print' (ID: 1598)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.5729925036430359
    2. '<|end|>' → logprob: -1.5729925632476807
    3. '```' → logprob: -1.5729925632476807
    4. '#' → logprob: -5.072992324829102
    5. ')' → logprob: -5.197992324829102
    6. 'print' → logprob: -5.947992324829102
    7. ']' → logprob: -6.197992324829102
    8. '<|end|>' → logprob: -7.072992324829102
    9. '}' → logprob: -7.197992324829102
    10. '""' → logprob: -7.197992324829102

Token 476: '(max' (ID: 17178)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.005305146332830191
    2. '(' → logprob: -5.255305290222168
    3. '(max' → logprob: -10.005305290222168
    4. ' (' → logprob: -11.130305290222168
    5. '(min' → logprob: -12.130305290222168
    6. '(sum' → logprob: -13.005305290222168
    7. '()' → logprob: -13.630305290222168
    8. 'dp' → logprob: -14.630305290222168
    9. '(
' → logprob: -14.755305290222168
    10. '(len' → logprob: -14.755305290222168

Token 477: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.008909051306545734
    2. '([' → logprob: -5.633909225463867
    3. '(' → logprob: -5.758909225463867
    4. '(i' → logprob: -6.633909225463867
    5. '(range' → logprob: -7.508909225463867
    6. ')' → logprob: -9.758909225463867
    7. 'dp' → logprob: -9.883909225463867
    8. '(w' → logprob: -10.258909225463867
    9. '(
' → logprob: -10.258909225463867
    10. '_dp' → logprob: -10.758909225463867

Token 478: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.008733942173421383
    2. ')' → logprob: -4.758733749389648
    3. ').' → logprob: -10.008733749389648
    4. ' ))' → logprob: -10.508733749389648
    5. ')))' → logprob: -10.883733749389648
    6. '.index' → logprob: -11.508733749389648
    7. '[:' → logprob: -12.508733749389648
    8. ')-' → logprob: -12.883733749389648
    9. '),' → logprob: -13.383733749389648
    10. '.keys' → logprob: -13.508733749389648

Token 479: '"""
' (ID: 15611)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09394882619380951
    2. '<|end|>' → logprob: -2.7189488410949707
    3. '[' → logprob: -4.843948841094971
    4. '
' → logprob: -5.343948841094971
    5. ']' → logprob: -5.968948841094971
    6. ' ' → logprob: -6.343948841094971
    7. '#' → logprob: -6.343948841094971
    8. '```' → logprob: -6.593948841094971
    9. '"""' → logprob: -7.468948841094971
    10. '<|end|>' → logprob: -7.593948841094971

Token 480: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4935080409049988
    2. '"""' → logprob: -1.7435081005096436
    3. '<|end|>' → logprob: -1.9935081005096436
    4. ')' → logprob: -3.2435081005096436
    5. ' ' → logprob: -4.7435078620910645
    6. '```' → logprob: -5.2435078620910645
    7. '"' → logprob: -5.3685078620910645
    8. 'n' → logprob: -5.6185078620910645
    9. 'a' → logprob: -5.6185078620910645
    10. '<|end|>' → logprob: -5.8685078620910645

Token 481: '1' (ID: 16)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7829480767250061
    2. '<|end|>' → logprob: -1.6579480171203613
    3. '<|end|>' → logprob: -1.6579480171203613
    4. '```' → logprob: -3.1579480171203613
    5. '1' → logprob: -3.4079480171203613
    6. ' ' → logprob: -3.7829480171203613
    7. '"""' → logprob: -4.157948017120361
    8. '
' → logprob: -4.657948017120361
    9. '[' → logprob: -4.782948017120361
    10. ' 
' → logprob: -5.657948017120361

Token 482: '_C' (ID: 1720)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4730249345302582
    2. '_A' → logprob: -1.8480249643325806
    3. '_B' → logprob: -2.098024845123291
    4. '_C' → logprob: -2.348024845123291
    5. '_D' → logprob: -8.09802532196045
    6. ' _' → logprob: -8.22302532196045
    7. '_
' → logprob: -8.72302532196045
    8. '__' → logprob: -10.09802532196045
    9. '_E' → logprob: -10.09802532196045
    10. '#' → logprob: -10.72302532196045

Token 483: '
' (ID: 198)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.24740584194660187
    2. 'n' → logprob: -2.247405767440796
    3. '"""' → logprob: -2.247405767440796
    4. '(n' → logprob: -5.247406005859375
    5. 'def' → logprob: -6.622406005859375
    6. '```' → logprob: -8.122406005859375
    7. '#' → logprob: -8.497406005859375
    8. '
' → logprob: -9.122406005859375
    9. '""' → logprob: -9.372406005859375
    10. '"' → logprob: -9.497406005859375

Token 484: '"""
' (ID: 15611)
  Prédit: '"""
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.019946448504924774
    2. 'n' → logprob: -4.019946575164795
    3. '"""' → logprob: -6.519946575164795
    4. ''''
' → logprob: -9.144946098327637
    5. 'def' → logprob: -9.519946098327637
    6. '"""
' → logprob: -10.394946098327637
    7. '"""

' → logprob: -10.769946098327637
    8. '"' → logprob: -10.894946098327637
    9. '"
' → logprob: -10.894946098327637
    10. 'import' → logprob: -11.144946098327637

Token 485: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002608952345326543
    2. 'def' → logprob: -6.752608776092529
    3. 'from' → logprob: -7.127608776092529
    4. '"""
' → logprob: -8.627609252929688
    5. 'import' → logprob: -9.127609252929688
    6. '
' → logprob: -9.252609252929688
    7. '#' → logprob: -9.752609252929688
    8. 'w' → logprob: -10.127609252929688
    9. 's' → logprob: -10.252609252929688
    10. 'd' → logprob: -11.002609252929688

Token 486: ',w' (ID: 49598)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16277731955051422
    2. ',w' → logprob: -1.912777304649353
    3. ',m' → logprob: -6.537777423858643
    4. ',k' → logprob: -7.537777423858643
    5. ' ,' → logprob: -8.412776947021484
    6. 'w' → logprob: -9.412776947021484
    7. ',W' → logprob: -9.412776947021484
    8. ',d' → logprob: -10.412776947021484
    9. ',s' → logprob: -10.662776947021484
    10. ' =' → logprob: -10.787776947021484

Token 487: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5278574228286743
    2. ' =' → logprob: -1.5278574228286743
    3. ',' → logprob: -1.6528574228286743
    4. ',k' → logprob: -7.777857303619385
    5. ',m' → logprob: -8.152857780456543
    6. ',w' → logprob: -8.152857780456543
    7. ' ,' → logprob: -9.152857780456543
    8. ',c' → logprob: -9.277857780456543
    9. ',n' → logprob: -9.402857780456543
    10. ',b' → logprob: -10.152857780456543

Token 488: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.3871062099933624
    2. ' map' → logprob: -1.13710618019104
    3. 'list' → logprob: -8.637105941772461
    4. ' list' → logprob: -10.387105941772461
    5. 'input' → logprob: -11.887105941772461
    6. 'LI' → logprob: -12.512105941772461
    7. ' ' → logprob: -12.887105941772461
    8. 'I' → logprob: -13.012105941772461
    9. '	map' → logprob: -13.012105941772461
    10. ' input' → logprob: -13.137105941772461

Token 489: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.002271343255415559
    2. '(' → logprob: -6.3772711753845215
    3. '(input' → logprob: -8.12727165222168
    4. ' (' → logprob: -9.00227165222168
    5. ',int' → logprob: -9.75227165222168
    6. 'int' → logprob: -10.62727165222168
    7. '(
' → logprob: -10.75227165222168
    8. ',' → logprob: -10.75227165222168
    9. '=int' → logprob: -10.87727165222168
    10. ' int' → logprob: -13.50227165222168

Token 490: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.09004418551921844
    2. ',int' → logprob: -3.0900442600250244
    3. ',' → logprob: -3.2150442600250244
    4. '=input' → logprob: -8.590044021606445
    5. '(input' → logprob: -9.090044021606445
    6. '(' → logprob: -9.840044021606445
    7. '(int' → logprob: -10.090044021606445
    8. ' ,' → logprob: -10.340044021606445
    9. 'input' → logprob: -11.590044021606445
    10. '(),' → logprob: -11.965044021606445

Token 491: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.703443770878948e-06
    2. '()' → logprob: -12.250007629394531
    3. '(),' → logprob: -13.500007629394531
    4. '())' → logprob: -14.625007629394531
    5. '=' → logprob: -15.125007629394531
    6. '()
' → logprob: -15.750007629394531
    7. ',' → logprob: -15.875007629394531
    8. '().
' → logprob: -16.00000762939453
    9. ' ().' → logprob: -16.50000762939453
    10. '(' → logprob: -16.50000762939453

Token 492: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.173704271830502e-06
    2. ' split' → logprob: -12.87500286102295
    3. 'spl' → logprob: -15.62500286102295
    4. 's' → logprob: -16.125003814697266
    5. '().' → logprob: -16.875003814697266
    6. 'sp' → logprob: -17.000003814697266
    7. '(split' → logprob: -17.125003814697266
    8. ')' → logprob: -17.375003814697266
    9. 'strip' → logprob: -17.625003814697266
    10. '()' → logprob: -17.625003814697266

Token 493: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06532945483922958
    2. '())
' → logprob: -3.0653295516967773
    3. '()' → logprob: -4.315329551696777
    4. ')' → logprob: -5.940329551696777
    5. '()
' → logprob: -7.565329551696777
    6. ')
' → logprob: -9.565329551696777
    7. '())
' → logprob: -11.065329551696777
    8. '(' → logprob: -13.940329551696777
    9. '())

' → logprob: -13.940329551696777
    10. ' ())' → logprob: -14.440329551696777

Token 494: 'b' (ID: 65)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3199385404586792
    2. 'b' → logprob: -1.5699385404586792
    3. 'items' → logprob: -3.8199386596679688
    4. 'w' → logprob: -4.319938659667969
    5. 'v' → logprob: -4.819938659667969
    6. 'c' → logprob: -4.819938659667969
    7. 'weights' → logprob: -4.944938659667969
    8. '
' → logprob: -6.319938659667969
    9. ' dp' → logprob: -6.569938659667969
    10. 'a' → logprob: -7.069938659667969

Token 495: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868996500968933
    2. '=' → logprob: -1.136899709701538
    3. '[' → logprob: -12.011899948120117
    4. ',' → logprob: -12.261899948120117
    5. '=[]' → logprob: -12.386899948120117
    6. '=[' → logprob: -12.761899948120117
    7. ' ' → logprob: -12.761899948120117
    8. 'for' → logprob: -13.886899948120117
    9. '   ' → logprob: -14.011899948120117
    10. '=
' → logprob: -14.011899948120117

Token 496: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.26825982332229614
    2. '[list' → logprob: -1.7682597637176514
    3. ' [' → logprob: -2.7682597637176514
    4. '[[' → logprob: -7.7682600021362305
    5. '[L' → logprob: -8.01826000213623
    6. '[]' → logprob: -8.01826000213623
    7. '[List' → logprob: -8.26826000213623
    8. '[l' → logprob: -9.14326000213623
    9. '[len' → logprob: -9.76826000213623
    10. '[b' → logprob: -10.01826000213623

Token 497: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0006179584306664765
    2. ' list' → logprob: -8.000617980957031
    3. '[list' → logprob: -8.375617980957031
    4. '(list' → logprob: -10.625617980957031
    5. '[' → logprob: -10.875617980957031
    6. ' [' → logprob: -13.000617980957031
    7. 'map' → logprob: -13.500617980957031
    8. '[int' → logprob: -13.625617980957031
    9. 'tuple' → logprob: -13.875617980957031
    10. '	list' → logprob: -15.125617980957031

Token 498: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -3.8219583075260743e-05
    2. 'map' → logprob: -10.250038146972656
    3. '(range' → logprob: -13.250038146972656
    4. ',map' → logprob: -15.000038146972656
    5. '(' → logprob: -15.375038146972656
    6. '(list' → logprob: -15.875038146972656
    7. ' (' → logprob: -16.250038146972656
    8. ' map' → logprob: -17.000038146972656
    9. '(int' → logprob: -17.000038146972656
    10. '(
' → logprob: -17.375038146972656

Token 499: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00026848804554902017
    2. 'int' → logprob: -8.250268936157227
    3. ',int' → logprob: -12.750268936157227
    4. '<int' → logprob: -13.125268936157227
    5. '=int' → logprob: -14.125268936157227
    6. '(' → logprob: -14.750268936157227
    7. '[int' → logprob: -14.750268936157227
    8. '   ' → logprob: -15.125268936157227
    9. ']int' → logprob: -16.375268936157227
    10. ' (' → logprob: -16.500268936157227

Token 500: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00537842558696866
    2. ',input' → logprob: -5.255378246307373
    3. ',int' → logprob: -9.255378723144531
    4. ' ,' → logprob: -10.880378723144531
    5. '(input' → logprob: -11.505378723144531
    6. '(int' → logprob: -11.880378723144531
    7. '(' → logprob: -12.130378723144531
    8. 'input' → logprob: -13.755378723144531
    9. ' (' → logprob: -13.755378723144531
    10. ',(' → logprob: -13.755378723144531

Token 501: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.008675076998770237
    2. ' input' → logprob: -4.7586750984191895
    3. 'sys' → logprob: -9.758674621582031
    4. ' sys' → logprob: -13.133674621582031
    5. 'int' → logprob: -15.383674621582031
    6. '(input' → logprob: -15.383674621582031
    7. 'import' → logprob: -16.63367462158203
    8. ' ' → logprob: -17.00867462158203
    9. '<input' → logprob: -17.25867462158203
    10. ',input' → logprob: -17.25867462158203

Token 502: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.429896944202483e-05
    2. '()' → logprob: -10.125043869018555
    3. '.split' → logprob: -13.375043869018555
    4. '()[' → logprob: -14.250043869018555
    5. '())' → logprob: -14.750043869018555
    6. '().__' → logprob: -15.375043869018555
    7. '()
' → logprob: -15.500043869018555
    8. ' ().' → logprob: -15.750043869018555
    9. '()-' → logprob: -16.000043869018555
    10. '()))' → logprob: -16.000043869018555

Token 503: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.7697225252486533e-06
    2. 'sys' → logprob: -12.750003814697266
    3. ' split' → logprob: -14.500003814697266
    4. '(split' → logprob: -15.875003814697266
    5. 'strip' → logprob: -15.875003814697266
    6. 'spl' → logprob: -16.875003814697266
    7. 'skip' → logprob: -17.125003814697266
    8. '().' → logprob: -17.750003814697266
    9. '.split' → logprob: -18.000003814697266
    10. 'read' → logprob: -19.000003814697266

Token 504: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.002770286286249757
    2. '())' → logprob: -6.00277042388916
    3. '))' → logprob: -9.37777042388916
    4. '().' → logprob: -9.37777042388916
    5. '()' → logprob: -9.62777042388916
    6. '()))
' → logprob: -10.12777042388916
    7. '()));' → logprob: -12.25277042388916
    8. '()[' → logprob: -12.62777042388916
    9. '())).' → logprob: -12.75277042388916
    10. '())))' → logprob: -12.87777042388916

Token 505: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7176223993301392
    2. '()' → logprob: -0.9676223993301392
    3. 'for' → logprob: -2.0926222801208496
    4. ' for' → logprob: -4.84262228012085
    5. '())' → logprob: -7.21762228012085
    6. '   ' → logprob: -10.467622756958008
    7. '))' → logprob: -10.717622756958008
    8. ' ' → logprob: -11.217622756958008
    9. '(' → logprob: -11.217622756958008
    10. '])' → logprob: -11.467622756958008

Token 506: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.017186744138598442
    2. 'range' → logprob: -4.267186641693115
    3. ' i' → logprob: -6.267186641693115
    4. ' range' → logprob: -7.392186641693115
    5. '(i' → logprob: -7.642186641693115
    6. 'in' → logprob: -11.267187118530273
    7. ' in' → logprob: -12.017187118530273
    8. '(range' → logprob: -12.892187118530273
    9. 'for' → logprob: -13.892187118530273
    10. '_i' → logprob: -14.142187118530273

Token 507: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2014438360929489
    2. 'in' → logprob: -1.7014437913894653
    3. 'range' → logprob: -11.201443672180176
    4. '   ' → logprob: -12.451443672180176
    5. 'n' → logprob: -12.576443672180176
    6. 'i' → logprob: -12.701443672180176
    7. 'for' → logprob: -13.576443672180176
    8. 'import' → logprob: -13.576443672180176
    9. ' ' → logprob: -13.951443672180176
    10. 'inthe' → logprob: -14.576443672180176

Token 508: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001176416757516563
    2. ' range' → logprob: -6.751176357269287
    3. '(range' → logprob: -12.001176834106445
    4. '
' → logprob: -19.001176834106445
    5. '	range' → logprob: -19.876176834106445
    6. 'rang' → logprob: -20.501176834106445
    7. 'r' → logprob: -20.876176834106445
    8. 'ran' → logprob: -21.001176834106445
    9. 'for' → logprob: -21.126176834106445
    10. 'n' → logprob: -21.501176834106445

Token 509: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.40090298652648926
    2. '(range' → logprob: -1.1509029865264893
    3. ' range' → logprob: -4.40090274810791
    4. '(n' → logprob: -6.40090274810791
    5. '(' → logprob: -12.65090274810791
    6. 'n' → logprob: -13.15090274810791
    7. '	range' → logprob: -14.15090274810791
    8. '
' → logprob: -14.40090274810791
    9. '_range' → logprob: -14.65090274810791
    10. 'Range' → logprob: -14.77590274810791

Token 510: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.07910877466201782
    2. ')]
' → logprob: -2.579108715057373
    3. ')]
' → logprob: -8.954109191894531
    4. ']' → logprob: -9.954109191894531
    5. ')' → logprob: -10.704109191894531
    6. ']
' → logprob: -11.704109191894531
    7. '])' → logprob: -12.079109191894531
    8. ')]

' → logprob: -13.079109191894531
    9. ' )' → logprob: -13.829109191894531
    10. '])]' → logprob: -14.454109191894531

Token 511: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0001439459010725841
    2. '"""
' → logprob: -9.750144004821777
    3. '
' → logprob: -10.250144004821777
    4. '"""' → logprob: -11.375144004821777
    5. ' dp' → logprob: -11.500144004821777
    6. 'b' → logprob: -11.875144004821777
    7. 'w' → logprob: -12.250144004821777
    8. '#' → logprob: -12.625144004821777
    9. 'def' → logprob: -12.875144004821777
    10. 'import' → logprob: -13.125144004821777

Token 512: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25289303064346313
    2. '=' → logprob: -1.5028929710388184
    3. '=[' → logprob: -7.002892971038818
    4. '=[[' → logprob: -10.252893447875977
    5. ' =[' → logprob: -11.127893447875977
    6. ' ' → logprob: -13.627893447875977
    7. '=[]' → logprob: -14.377893447875977
    8. '[' → logprob: -14.627893447875977
    9. '＝' → logprob: -14.752893447875977
    10. '=[]
' → logprob: -14.752893447875977

Token 513: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14795196056365967
    2. '[[' → logprob: -2.022952079772949
    3. '[-' → logprob: -5.522952079772949
    4. ' [' → logprob: -7.897952079772949
    5. '[w' → logprob: -8.02295207977295
    6. '[b' → logprob: -8.77295207977295
    7. ' [[' → logprob: -9.14795207977295
    8. '[(' → logprob: -9.52295207977295
    9. '{' → logprob: -9.89795207977295
    10. '[value' → logprob: -10.27295207977295

Token 514: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.897993266582489
    2. '[' → logprob: -1.2729933261871338
    3. 'float' → logprob: -1.2729933261871338
    4. '[-' → logprob: -4.897993087768555
    5. '[w' → logprob: -5.022993087768555
    6. '(' → logprob: -5.272993087768555
    7. '-' → logprob: -5.522993087768555
    8. '(float' → logprob: -5.647993087768555
    9. 'w' → logprob: -6.522993087768555
    10. '[[' → logprob: -6.772993087768555

Token 515: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25211837887763977
    2. ' for' → logprob: -1.5021183490753174
    3. ']*(' → logprob: -8.877118110656738
    4. '	for' → logprob: -10.752118110656738
    5. ']' → logprob: -11.252118110656738
    6. '   ' → logprob: -11.752118110656738
    7. ' ' → logprob: -12.627118110656738
    8. '  ' → logprob: -13.877118110656738
    9. ']*' → logprob: -14.127118110656738
    10. '
' → logprob: -14.502118110656738

Token 516: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00603106152266264
    2. ' i' → logprob: -5.131031036376953
    3. 'w' → logprob: -9.881031036376953
    4. 'range' → logprob: -11.006031036376953
    5. ' range' → logprob: -11.131031036376953
    6. 'j' → logprob: -12.381031036376953
    7. '_' → logprob: -12.756031036376953
    8. ' w' → logprob: -12.881031036376953
    9. '_i' → logprob: -13.006031036376953
    10. '(i' → logprob: -13.006031036376953

Token 517: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011108653619885445
    2. 'in' → logprob: -4.511108875274658
    3. 'range' → logprob: -9.8861083984375
    4. ' ' → logprob: -12.8861083984375
    5. '   ' → logprob: -13.0111083984375
    6. ' i' → logprob: -13.6361083984375
    7. 'i' → logprob: -13.6361083984375
    8. ' range' → logprob: -13.7611083984375
    9. '(i' → logprob: -14.6361083984375
    10. '  ' → logprob: -15.2611083984375

Token 518: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16038253903388977
    2. ' range' → logprob: -1.9103825092315674
    3. '(range' → logprob: -8.785382270812988
    4. '(w' → logprob: -12.660382270812988
    5. '
' → logprob: -14.535382270812988
    6. '	range' → logprob: -15.160382270812988
    7. '   ' → logprob: -15.535382270812988
    8. 'r' → logprob: -15.660382270812988
    9. ' ' → logprob: -15.910382270812988
    10. 'in' → logprob: -15.910382270812988

Token 519: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.33997276425361633
    2. '(range' → logprob: -1.339972734451294
    3. 'range' → logprob: -3.839972734451294
    4. ' range' → logprob: -5.339972972869873
    5. '(W' → logprob: -10.214972496032715
    6. '(r' → logprob: -10.964972496032715
    7. '(' → logprob: -11.964972496032715
    8. ' (' → logprob: -12.339972496032715
    9. '((' → logprob: -14.214972496032715
    10. '   ' → logprob: -14.464972496032715

Token 520: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.6789137084269896e-05
    2. ' +' → logprob: -10.87503719329834
    3. ')]' → logprob: -12.00003719329834
    4. '+
' → logprob: -12.00003719329834
    5. ')' → logprob: -13.37503719329834
    6. '
' → logprob: -14.25003719329834
    7. '+w' → logprob: -14.37503719329834
    8. ')])' → logprob: -14.62503719329834
    9. '])' → logprob: -15.00003719329834
    10. ')]
' → logprob: -15.25003719329834

Token 521: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11763745546340942
    2. 'range' → logprob: -2.3676373958587646
    3. '+' → logprob: -4.742637634277344
    4. ' range' → logprob: -4.867637634277344
    5. '(range' → logprob: -7.117637634277344
    6. '2' → logprob: -11.242637634277344
    7. 'Range' → logprob: -11.867637634277344
    8. '[' → logprob: -12.117637634277344
    9. ']+' → logprob: -12.242637634277344
    10. '(' → logprob: -12.242637634277344

Token 522: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13356681168079376
    2. ')]' → logprob: -2.1335668563842773
    3. ']
' → logprob: -5.133566856384277
    4. ')' → logprob: -7.758566856384277
    5. ')]
' → logprob: -8.258566856384277
    6. '])' → logprob: -11.383566856384277
    7. ']
' → logprob: -11.633566856384277
    8. ' ]' → logprob: -12.133566856384277
    9. ')
' → logprob: -12.633566856384277
    10. ']

' → logprob: -13.633566856384277

Token 523: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.9153885558771435e-06
    2. ' for' → logprob: -12.750005722045898
    3. '   ' → logprob: -13.750005722045898
    4. '
' → logprob: -14.000005722045898
    5. 'f' → logprob: -15.250005722045898
    6. '	for' → logprob: -15.625005722045898
    7. 'fo' → logprob: -15.750005722045898
    8. 'memo' → logprob: -15.750005722045898
    9. '#' → logprob: -16.3750057220459
    10. '"""
' → logprob: -16.5000057220459

Token 524: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05873474106192589
    2. ' i' → logprob: -3.058734655380249
    3. 'j' → logprob: -4.808734893798828
    4. 'weight' → logprob: -6.933734893798828
    5. ' j' → logprob: -7.558734893798828
    6. ' weight' → logprob: -9.058734893798828
    7. 'w' → logprob: -9.183734893798828
    8. 'item' → logprob: -9.933734893798828
    9. '   ' → logprob: -10.308734893798828
    10. 'x' → logprob: -10.558734893798828

Token 525: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1799798309803009
    2. 'in' → logprob: -1.8049798011779785
    3. '+' → logprob: -9.054980278015137
    4. ',' → logprob: -9.679980278015137
    5. ' ' → logprob: -11.679980278015137
    6. 'range' → logprob: -11.804980278015137
    7. 'w' → logprob: -11.804980278015137
    8. '1' → logprob: -12.554980278015137
    9. '
' → logprob: -12.804980278015137
    10. 'import' → logprob: -12.929980278015137

Token 526: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018604639917612076
    2. ' range' → logprob: -4.018604755401611
    3. 'b' → logprob: -7.768604755401611
    4. 'r' → logprob: -11.018604278564453
    5. ' b' → logprob: -11.768604278564453
    6. 'w' → logprob: -12.643604278564453
    7. '(range' → logprob: -14.143604278564453
    8. 'ra' → logprob: -14.518604278564453
    9. 'ran' → logprob: -14.768604278564453
    10. 'rang' → logprob: -15.018604278564453

Token 527: '(w' (ID: 7420)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4674457907676697
    2. ' range' → logprob: -1.4674458503723145
    3. 'n' → logprob: -2.2174458503723145
    4. 'b' → logprob: -3.9674458503723145
    5. ' n' → logprob: -5.0924458503723145
    6. 'w' → logprob: -5.3424458503723145
    7. ' b' → logprob: -5.8424458503723145
    8. '(n' → logprob: -7.5924458503723145
    9. ' in' → logprob: -8.467445373535156
    10. ' w' → logprob: -8.592445373535156

Token 528: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.012423118576407433
    2. '):
' → logprob: -4.762423038482666
    3. '):' → logprob: -5.637423038482666
    4. ' +' → logprob: -9.512423515319824
    5. '   ' → logprob: -10.262423515319824
    6. ')' → logprob: -10.262423515319824
    7. '-' → logprob: -10.762423515319824
    8. '
' → logprob: -10.762423515319824
    9. ')]' → logprob: -10.887423515319824
    10. '):
' → logprob: -11.512423515319824

Token 529: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001544737839139998
    2. ' for' → logprob: -6.876544952392578
    3. '	for' → logprob: -7.626544952392578
    4. 'for' → logprob: -10.751544952392578
    5. '   ' → logprob: -13.001544952392578
    6. ' ' → logprob: -14.376544952392578
    7. '       ' → logprob: -16.251544952392578
    8. '\t' → logprob: -16.751544952392578
    9. '  ' → logprob: -16.876544952392578
    10. '   ' → logprob: -17.376544952392578

Token 530: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23021745681762695
    2. ' for' → logprob: -2.105217456817627
    3. 'for' (adapté à ' for') → logprob: -2.480217456817627
    4. '	for' → logprob: -10.105216979980469
    5. ' ' → logprob: -10.230216979980469
    6. ' if' → logprob: -12.355216979980469
    7. 'if' → logprob: -12.355216979980469
    8. '       ' → logprob: -12.980216979980469
    9. '   ' → logprob: -13.230216979980469
    10. '  ' → logprob: -13.605216979980469

Token 531: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.10046932846307755
    2. ' j' → logprob: -2.3504693508148193
    3. 'b' → logprob: -8.475469589233398
    4. ' b' → logprob: -10.350469589233398
    5. 'range' → logprob: -11.850469589233398
    6. ' range' → logprob: -11.975469589233398
    7. '[j' → logprob: -13.100469589233398
    8. 'w' → logprob: -13.225469589233398
    9. '	j' → logprob: -13.725469589233398
    10. ',j' → logprob: -14.475469589233398

Token 532: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04862063005566597
    2. 'in' → logprob: -3.0486207008361816
    3. 'n' → logprob: -11.173620223999023
    4. ',' → logprob: -12.298620223999023
    5. 'range' → logprob: -12.423620223999023
    6. '   ' → logprob: -12.923620223999023
    7. ',n' → logprob: -12.923620223999023
    8. ' ' → logprob: -13.423620223999023
    9. 'b' → logprob: -14.298620223999023
    10. 's' → logprob: -14.798620223999023

Token 533: ' b' (ID: 287)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.016118710860610008
    2. ' range' → logprob: -4.14111852645874
    3. 'b' → logprob: -9.641119003295898
    4. 'n' → logprob: -11.141119003295898
    5. ' b' → logprob: -13.516119003295898
    6. 'r' → logprob: -13.766119003295898
    7. '(range' → logprob: -14.141119003295898
    8. 'ran' → logprob: -14.391119003295898
    9. ' ' → logprob: -15.391119003295898
    10. '   ' → logprob: -15.516119003295898

Token 534: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7133315801620483
    2. ':
' → logprob: -0.7133315801620483
    3. '[j' → logprob: -4.338331699371338
    4. '       ' → logprob: -6.338331699371338
    5. '):
' → logprob: -6.463331699371338
    6. ']:
' → logprob: -7.088331699371338
    7. '[i' → logprob: -7.838331699371338
    8. '   ' → logprob: -7.838331699371338
    9. ']:' → logprob: -7.838331699371338
    10. '):' → logprob: -7.838331699371338

Token 535: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012447552289813757
    2. ',' → logprob: -7.62624454498291
    3. ' if' → logprob: -7.75124454498291
    4. '	   ' → logprob: -9.87624454498291
    5. '+' → logprob: -10.00124454498291
    6. ':' → logprob: -10.37624454498291
    7. '<|end|>' → logprob: -10.50124454498291
    8. '      ' → logprob: -10.50124454498291
    9. '   ' → logprob: -10.75124454498291
    10. '	' → logprob: -11.00124454498291

Token 536: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6828521490097046
    2. '       ' → logprob: -0.8078521490097046
    3. 'if' (adapté à ' if') → logprob: -3.682852268218994
    4. '   ' → logprob: -3.932852268218994
    5. '	   ' → logprob: -6.182852268218994
    6. '           ' → logprob: -7.307852268218994
    7. '	if' → logprob: -7.807852268218994
    8. ' ' → logprob: -8.057851791381836
    9. '    ' → logprob: -8.557851791381836
    10. '	' → logprob: -8.682851791381836

Token 537: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.015416641719639301
    2. ' i' → logprob: -4.265416622161865
    3. 'j' → logprob: -6.765416622161865
    4. '   ' → logprob: -10.390417098999023
    5. ' j' → logprob: -10.765417098999023
    6. '(i' → logprob: -11.015417098999023
    7. 'b' → logprob: -11.390417098999023
    8. 'w' → logprob: -11.890417098999023
    9. ' ' → logprob: -12.890417098999023
    10. 'len' → logprob: -13.265417098999023

Token 538: '+j' (ID: 71365)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4301150441169739
    2. '+j' → logprob: -1.055114984512329
    3. ' +' → logprob: -7.430115222930908
    4. '[' → logprob: -8.05511474609375
    5. '+[' → logprob: -8.55511474609375
    6. '[j' → logprob: -8.68011474609375
    7. 'j' → logprob: -10.05511474609375
    8. '+
' → logprob: -10.30511474609375
    9. '+w' → logprob: -10.55511474609375
    10. '+b' → logprob: -11.93011474609375

Token 539: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.7372048862162046e-05
    2. '[j' → logprob: -11.500027656555176
    3. '1' → logprob: -13.375027656555176
    4. '#' → logprob: -13.500027656555176
    5. '][' → logprob: -13.500027656555176
    6. '0' → logprob: -13.625027656555176
    7. 'j' → logprob: -13.750027656555176
    8. '>' → logprob: -14.000027656555176
    9. '[
' → logprob: -14.125027656555176
    10. '```' → logprob: -14.125027656555176

Token 540: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.2020991056924686e-05
    2. '[' → logprob: -11.125032424926758
    3. '0' → logprob: -11.625032424926758
    4. '
' → logprob: -12.125032424926758
    5. ' ' → logprob: -14.375032424926758
    6. '   ' → logprob: -14.625032424926758
    7. '

' → logprob: -14.937532424926758
    8. '
' → logprob: -15.125032424926758
    9. '#' → logprob: -15.437532424926758
    10. '```' → logprob: -15.687532424926758

Token 541: ']' (ID: 60)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.29357901215553284
    2. '<=' → logprob: -1.4185789823532104
    3. ']' → logprob: -4.7935791015625
    4. ']<=' → logprob: -5.5435791015625
    5. ' ]' → logprob: -9.6685791015625
    6. ')<=' → logprob: -9.9185791015625
    7. ' ' → logprob: -11.0435791015625
    8. ')' → logprob: -11.9185791015625
    9. '>' → logprob: -12.6685791015625
    10. '```' → logprob: -12.6685791015625

Token 542: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.07889242470264435
    2. ' <=' → logprob: -2.578892469406128
    3. '<' → logprob: -13.703892707824707
    4. '>' → logprob: -13.953892707824707
    5. ')<=' → logprob: -15.703892707824707
    6. ' ' → logprob: -15.828892707824707
    7. '>=' → logprob: -16.07889175415039
    8. ']<=' → logprob: -16.20389175415039
    9. '```' → logprob: -16.82889175415039
    10. ' <' → logprob: -17.20389175415039

Token 543: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.01815006136894226
    2. ' w' → logprob: -4.0181498527526855
    3. '	w' → logprob: -16.268150329589844
    4. '   ' → logprob: -19.018150329589844
    5. 'n' → logprob: -19.018150329589844
    6. ' ' → logprob: -19.143150329589844
    7. 'W' → logprob: -19.268150329589844
    8. '>w' → logprob: -20.268150329589844
    9. '#w' → logprob: -20.768150329589844
    10. '<w' → logprob: -20.893150329589844

Token 544: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18780456483364105
    2. ':
' → logprob: -2.5628044605255127
    3. ' and' → logprob: -2.6878044605255127
    4. '           ' → logprob: -3.6878044605255127
    5. 'and' → logprob: -6.937804698944092
    6. '       ' → logprob: -10.187804222106934
    7. ',' → logprob: -11.437804222106934
    8. '          ' → logprob: -11.437804222106934
    9. '	       ' → logprob: -11.687804222106934
    10. '               ' → logprob: -11.937804222106934

Token 545: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0029932744801044464
    2. '	       ' → logprob: -6.627993106842041
    3. ':' → logprob: -6.877993106842041
    4. '		' → logprob: -8.2529935836792
    5. '		   ' → logprob: -9.5029935836792
    6. '    	   ' → logprob: -9.5029935836792
    7. 'dp' → logprob: -9.6279935836792
    8. ':
' → logprob: -10.3779935836792
    9. '       ' → logprob: -10.8779935836792
    10. '          ' → logprob: -11.0029935836792

Token 546: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.009831057861447334
    2. ' dp' → logprob: -4.634830951690674
    3. '           ' → logprob: -9.759831428527832
    4. '	dp' → logprob: -11.509831428527832
    5. '               ' → logprob: -12.509831428527832
    6. '   ' → logprob: -13.884831428527832
    7. 'if' → logprob: -14.259831428527832
    8. '(dp' → logprob: -14.509831428527832
    9. '
' → logprob: -14.634831428527832
    10. '       ' → logprob: -15.384831428527832

Token 547: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.644463479053229e-05
    2. '[' → logprob: -10.000046730041504
    3. '[max' → logprob: -14.500046730041504
    4. '[j' → logprob: -15.625046730041504
    5. '[
' → logprob: -15.625046730041504
    6. 'max' → logprob: -16.250045776367188
    7. 'i' → logprob: -16.625045776367188
    8. ' [' → logprob: -18.000045776367188
    9. '   ' → logprob: -18.500045776367188
    10. '

' → logprob: -18.500045776367188

Token 548: '+j' (ID: 71365)
  Prédit: '+j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+j' → logprob: -0.014903784729540348
    2. '+' → logprob: -4.264904022216797
    3. ']+' → logprob: -7.639904022216797
    4. ']' → logprob: -8.639904022216797
    5. ' +' → logprob: -10.139904022216797
    6. '[' → logprob: -10.889904022216797
    7. ']+=' → logprob: -11.639904022216797
    8. '+[' → logprob: -12.764904022216797
    9. '+]' → logprob: -12.889904022216797
    10. '[j' → logprob: -12.889904022216797

Token 549: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008885911083780229
    2. '1' → logprob: -7.250888824462891
    3. '][' → logprob: -9.62588882446289
    4. ']' → logprob: -9.75088882446289
    5. '+' → logprob: -10.25088882446289
    6. '       ' → logprob: -12.75088882446289
    7. '           ' → logprob: -12.75088882446289
    8. '   ' → logprob: -13.25088882446289
    9. '[j' → logprob: -13.50088882446289
    10. '[
' → logprob: -13.62588882446289

Token 550: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.03521392197581e-05
    2. '[' → logprob: -10.750030517578125
    3. '0' → logprob: -12.500030517578125
    4. ' ' → logprob: -13.250030517578125
    5. 'j' → logprob: -14.000030517578125
    6. ']' → logprob: -14.125030517578125
    7. '   ' → logprob: -14.500030517578125
    8. '```' → logprob: -14.750030517578125
    9. '[j' → logprob: -16.312530517578125
    10. '
' → logprob: -16.312530517578125

Token 551: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0031838975846767426
    2. ']=' → logprob: -5.753183841705322
    3. ' ]' → logprob: -12.37818431854248
    4. 'max' → logprob: -14.25318431854248
    5. ']
' → logprob: -15.00318431854248
    6. ']+=' → logprob: -15.12818431854248
    7. '=' → logprob: -15.50318431854248
    8. '=max' → logprob: -16.003183364868164
    9. '']' → logprob: -16.253183364868164
    10. '
' → logprob: -16.878183364868164

Token 552: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16416755318641663
    2. ' =' → logprob: -1.9141675233840942
    3. '=max' → logprob: -5.539167404174805
    4. 'max' → logprob: -12.414167404174805
    5. '>' → logprob: -14.289167404174805
    6. ' max' → logprob: -14.539167404174805
    7. ',max' → logprob: -15.164167404174805
    8. '+=' → logprob: -16.789167404174805
    9. '=
' → logprob: -17.039167404174805
    10. ']=' → logprob: -17.039167404174805

Token 553: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -2.15310683415737e-05
    2. ' max' → logprob: -10.750021934509277
    3. '	max' → logprob: -19.12502098083496
    4. 'min' → logprob: -21.12502098083496
    5. '   ' → logprob: -21.25002098083496
    6. '(max' → logprob: -21.37502098083496
    7. 'ma' → logprob: -22.00002098083496
    8. 'm' → logprob: -22.25002098083496
    9. '
' → logprob: -23.25002098083496
    10. '=max' → logprob: -23.37502098083496

Token 554: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -1.3306015716807451e-05
    2. '(' → logprob: -11.25001335144043
    3. 'dp' → logprob: -15.75001335144043
    4. '(
' → logprob: -16.62501335144043
    5. '	dp' → logprob: -18.37501335144043
    6. ' dp' → logprob: -18.37501335144043
    7. '(d' → logprob: -19.50001335144043
    8. ' (' → logprob: -20.00001335144043
    9. '(

' → logprob: -20.62501335144043
    10. '(df' → logprob: -21.12501335144043

Token 555: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.277553620748222e-05
    2. 'i' → logprob: -9.875062942504883
    3. '[' → logprob: -11.875062942504883
    4. ' ' → logprob: -14.000062942504883
    5. '[j' → logprob: -14.375062942504883
    6. '(i' → logprob: -14.375062942504883
    7. ' [' → logprob: -14.750062942504883
    8. ']' → logprob: -15.125062942504883
    9. '{i' → logprob: -15.125062942504883
    10. ' i' → logprob: -15.250062942504883

Token 556: '+j' (ID: 71365)
  Prédit: '+j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+j' → logprob: -0.16821110248565674
    2. ']+' → logprob: -2.418210983276367
    3. '[j' → logprob: -2.918210983276367
    4. '[' → logprob: -5.043210983276367
    5. ']' → logprob: -6.293210983276367
    6. '+' → logprob: -6.293210983276367
    7. '[i' → logprob: -6.668210983276367
    8. '+i' → logprob: -8.918210983276367
    9. '+[' → logprob: -9.543210983276367
    10. '][' → logprob: -10.668210983276367

Token 557: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03230036422610283
    2. '1' → logprob: -3.5323004722595215
    3. '0' → logprob: -6.6573004722595215
    4. ']+' → logprob: -7.4073004722595215
    5. '+' → logprob: -8.032299995422363
    6. ']' → logprob: -8.532299995422363
    7. '   ' → logprob: -10.407299995422363
    8. '
' → logprob: -10.407299995422363
    9. '][' → logprob: -10.907299995422363
    10. '[
' → logprob: -11.657299995422363

Token 558: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22588805854320526
    2. '1' → logprob: -1.6008880138397217
    3. '[' → logprob: -8.3508882522583
    4. '
' → logprob: -9.1008882522583
    5. '   ' → logprob: -10.3508882522583
    6. ' ' → logprob: -10.4758882522583
    7. ']' → logprob: -11.1008882522583
    8. 'j' → logprob: -11.6008882522583
    9. '```' → logprob: -11.8508882522583
    10. ']+' → logprob: -12.2258882522583

Token 559: ']],' (ID: 37171)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '],' → logprob: -0.00013500562636181712
    2. ']' → logprob: -9.37513542175293
    3. ',' → logprob: -10.12513542175293
    4. ' ],' → logprob: -11.75013542175293
    5. '],
' → logprob: -13.50013542175293
    6. ''],' → logprob: -15.00013542175293
    7. '   ' → logprob: -16.75013542175293
    8. 'j' → logprob: -16.75013542175293
    9. '"],' → logprob: -17.12513542175293
    10. 's' → logprob: -17.12513542175293

Token 560: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.011071753688156605
    2. ' dp' → logprob: -4.511071681976318
    3. '           ' → logprob: -11.761072158813477
    4. '   ' → logprob: -12.386072158813477
    5. '	dp' → logprob: -12.511072158813477
    6. '       ' → logprob: -12.886072158813477
    7. 'd' → logprob: -13.386072158813477
    8. 'i' → logprob: -14.261072158813477
    9. ' ' → logprob: -14.511072158813477
    10. '(dp' → logprob: -14.511072158813477

Token 561: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.008129963040119e-06
    2. 'i' → logprob: -12.875003814697266
    3. '[' → logprob: -13.625003814697266
    4. '[
' → logprob: -17.250003814697266
    5. ' i' → logprob: -17.500003814697266
    6. '[j' → logprob: -17.500003814697266
    7. '(i' → logprob: -19.000003814697266
    8. '[I' → logprob: -19.125003814697266
    9. '   ' → logprob: -19.375003814697266
    10. '```' → logprob: -19.625003814697266

Token 562: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.25194641947746277
    2. ']' → logprob: -1.5019464492797852
    3. '[' → logprob: -11.501946449279785
    4. ' ]' → logprob: -12.751946449279785
    5. '[j' → logprob: -13.126946449279785
    6. ']
' → logprob: -14.376946449279785
    7. '+j' → logprob: -14.501946449279785
    8. ']+=' → logprob: -14.626946449279785
    9. '])+' → logprob: -15.376946449279785
    10. 'j' → logprob: -15.751946449279785

Token 563: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00103352265432477
    2. ' j' → logprob: -6.876033306121826
    3. '   ' → logprob: -15.001033782958984
    4. '	j' → logprob: -15.251033782958984
    5. ' ' → logprob: -16.126033782958984
    6. '
' → logprob: -17.376033782958984
    7. '  ' → logprob: -17.376033782958984
    8. '    ' → logprob: -18.001033782958984
    9. '       ' → logprob: -18.126033782958984
    10. '[j' → logprob: -18.251033782958984

Token 564: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004083385691046715
    2. '0' → logprob: -5.504083156585693
    3. '[
' → logprob: -13.004083633422852
    4. ' [' → logprob: -13.754083633422852
    5. ' ' → logprob: -14.254083633422852
    6. '   ' → logprob: -15.129083633422852
    7. '
' → logprob: -16.00408363342285
    8. '][' → logprob: -16.12908363342285
    9. '```' → logprob: -16.25408363342285
    10. '    
' → logprob: -16.75408363342285

Token 565: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.625001907348633
    3. '[' → logprob: -14.500001907348633
    4. '   ' → logprob: -15.750001907348633
    5. '```' → logprob: -17.437501907348633
    6. '1' → logprob: -17.562501907348633
    7. '000' → logprob: -17.750001907348633
    8. '
' → logprob: -17.937501907348633
    9. '۰' → logprob: -18.187501907348633
    10. '00' → logprob: -18.375001907348633

Token 566: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1010691374540329
    2. '))' → logprob: -2.351069211959839
    3. ')
' → logprob: -7.35106897354126
    4. '])' → logprob: -8.726069450378418
    5. '))
' → logprob: -9.976069450378418
    6. ' )' → logprob: -12.851069450378418
    7. '})' → logprob: -12.851069450378418
    8. ')")' → logprob: -13.226069450378418
    9. '       ' → logprob: -14.101069450378418
    10. '   ' → logprob: -14.351069450378418

Token 567: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8509806990623474
    2. '<|end|>' → logprob: -1.4759807586669922
    3. '
' → logprob: -2.350980758666992
    4. '"""' → logprob: -2.475980758666992
    5. '```' → logprob: -2.725980758666992
    6. '\n' → logprob: -2.850980758666992
    7. ')' → logprob: -3.225980758666992
    8. '<|end|>' → logprob: -8.225980758666992
    9. '""' → logprob: -8.350980758666992
    10. 'newline' → logprob: -8.475980758666992

Token 568: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.001705771079286933
    2. '(max' → logprob: -6.501705646514893
    3. '(' → logprob: -8.50170612335205
    4. ' (' → logprob: -15.62670612335205
    5. '(
' → logprob: -16.376705169677734
    6. 'max' → logprob: -17.501705169677734
    7. 'dp' → logprob: -17.626705169677734
    8. '((' → logprob: -17.876705169677734
    9. '(sum' → logprob: -18.126705169677734
    10. '(df' → logprob: -18.251705169677734

Token 569: '[w' (ID: 94341)
  Prédit: '[w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -0.00027897433028556406
    2. '[' → logprob: -8.500279426574707
    3. '[-' → logprob: -9.500279426574707
    4. 'w' → logprob: -14.875279426574707
    5. ')' → logprob: -15.375279426574707
    6. '[n' → logprob: -17.12527847290039
    7. ']' → logprob: -17.37527847290039
    8. '(w' → logprob: -17.75027847290039
    9. '	w' → logprob: -18.00027847290039
    10. '[
' → logprob: -18.37527847290039

Token 570: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.001959678716957569
    2. ')' → logprob: -6.251959800720215
    3. '))' → logprob: -11.626959800720215
    4. ']' → logprob: -12.001959800720215
    5. '])
' → logprob: -12.001959800720215
    6. ')])' → logprob: -12.251959800720215
    7. ')]' → logprob: -12.751959800720215
    8. ']))' → logprob: -14.251959800720215
    9. ''])' → logprob: -14.501959800720215
    10. ' ])' → logprob: -15.001959800720215

Token 571: '"""
' (ID: 15611)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.06433174014091492
    2. ')' → logprob: -2.8143317699432373
    3. '"""
' → logprob: -6.814331531524658
    4. '")' → logprob: -7.564331531524658
    5. '""' → logprob: -7.564331531524658
    6. '```' → logprob: -9.189332008361816
    7. '#' → logprob: -9.439332008361816
    8. ')
' → logprob: -11.064332008361816
    9. '"""

' → logprob: -12.189332008361816
    10. ''''' → logprob: -12.189332008361816

Token 572: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2235134392976761
    2. ')' → logprob: -2.59851336479187
    3. '<|end|>' → logprob: -3.34851336479187
    4. '"""' → logprob: -3.47351336479187
    5. '```' → logprob: -3.84851336479187
    6. 'n' → logprob: -3.84851336479187
    7. '\n' → logprob: -5.598513603210449
    8. '
' → logprob: -5.848513603210449
    9. 'w' → logprob: -5.973513603210449
    10. 'a' → logprob: -6.973513603210449

Token 573: '1' (ID: 16)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3144245445728302
    2. '"""' → logprob: -2.189424514770508
    3. 'n' → logprob: -2.314424514770508
    4. 'def' → logprob: -3.439424514770508
    5. '#!' → logprob: -5.689424514770508
    6. ')' → logprob: -5.939424514770508
    7. 'w' → logprob: -5.939424514770508
    8. '```' → logprob: -6.064424514770508
    9. '<|end|>' → logprob: -6.189424514770508
    10. '#!/' → logprob: -6.314424514770508

Token 574: '_D' (ID: 2958)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0923888310790062
    2. '_C' → logprob: -2.717388868331909
    3. '_A' → logprob: -4.21738862991333
    4. '<|end|>' → logprob: -6.46738862991333
    5. '#' → logprob: -6.59238862991333
    6. '```' → logprob: -6.84238862991333
    7. '_B' → logprob: -6.96738862991333
    8. ')' → logprob: -7.59238862991333
    9. '<|end|>' → logprob: -7.96738862991333
    10. 'C' → logprob: -8.092389106750488

Token 575: '
' (ID: 198)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.10156766325235367
    2. '"""' → logprob: -2.3515677452087402
    3. 'n' → logprob: -6.85156774520874
    4. '""' → logprob: -9.351567268371582
    5. '"""
' → logprob: -9.601567268371582
    6. '```' → logprob: -10.351567268371582
    7. '(n' → logprob: -10.601567268371582
    8. '"""

' → logprob: -10.601567268371582
    9. ''''
' → logprob: -11.101567268371582
    10. '#' → logprob: -11.601567268371582

Token 576: '"""
' (ID: 15611)
  Prédit: '"""
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.35675492882728577
    2. '"""' → logprob: -1.7317548990249634
    3. 'n' → logprob: -2.106755018234253
    4. 'def' → logprob: -7.106754779815674
    5. '""' → logprob: -8.856755256652832
    6. 'from' → logprob: -9.106755256652832
    7. '#' → logprob: -9.356755256652832
    8. '"""
' → logprob: -9.356755256652832
    9. '
' → logprob: -10.106755256652832
    10. '```' → logprob: -10.356755256652832

Token 577: 'import' (ID: 561)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006757290568202734
    2. '"""
' → logprob: -5.8817572593688965
    3. '"""' → logprob: -6.3817572593688965
    4. 'def' → logprob: -6.7567572593688965
    5. 'from' → logprob: -7.3817572593688965
    6. 'import' → logprob: -8.756757736206055
    7. 'w' → logprob: -9.256757736206055
    8. '#' → logprob: -9.381757736206055
    9. '""' → logprob: -10.006757736206055
    10. '"' → logprob: -10.756757736206055

Token 578: ' bis' (ID: 7204)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.6058289408683777
    2. 'sys' → logprob: -0.8558289408683777
    3. 'heap' → logprob: -3.8558290004730225
    4. 'bis' → logprob: -5.355828762054443
    5. 'collections' → logprob: -6.230828762054443
    6. 'it' → logprob: -6.605828762054443
    7. 'copy' → logprob: -9.355829238891602
    8. 'fra' → logprob: -9.355829238891602
    9. 'cmath' → logprob: -10.605829238891602
    10. 'random' → logprob: -10.730829238891602

Token 579: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -3.128163257315464e-07
    2. 'ec' → logprob: -15.375
    3. 'e' → logprob: -17.25
    4. 'ected' → logprob: -18.125
    5. 'ext' → logprob: -18.75
    6. 'ectin' → logprob: -19.125
    7. 'ects' → logprob: -19.375
    8. 'ectl' → logprob: -19.5
    9. 'ecta' → logprob: -19.5
    10. '```' → logprob: -19.875

Token 580: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1783836930990219
    2. 'n' → logprob: -1.928383708000183
    3. 'def' → logprob: -5.053383827209473
    4. 'import' → logprob: -5.178383827209473
    5. '"""
' → logprob: -6.553383827209473
    6. '

' → logprob: -6.928383827209473
    7. '
' → logprob: -7.053383827209473
    8. 'from' → logprob: -7.428383827209473
    9. 'w' → logprob: -7.678383827209473
    10. '#' → logprob: -8.178383827209473

Token 581: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05550363287329674
    2. 'def' → logprob: -3.5555036067962646
    3. 'from' → logprob: -4.180503845214844
    4. 'class' → logprob: -5.930503845214844
    5. '"""
' → logprob: -6.055503845214844
    6. 'w' → logprob: -6.180503845214844
    7. '"""' → logprob: -6.680503845214844
    8. '#' → logprob: -7.430503845214844
    9. 'import' → logprob: -7.555503845214844
    10. 'W' → logprob: -9.180503845214844

Token 582: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07058804482221603
    2. ',w' → logprob: -2.6955881118774414
    3. ',W' → logprob: -8.445588111877441
    4. ',m' → logprob: -8.445588111877441
    5. ',k' → logprob: -8.945588111877441
    6. ' ,' → logprob: -10.570588111877441
    7. ',s' → logprob: -11.070588111877441
    8. '=' → logprob: -11.570588111877441
    9. 'w' → logprob: -12.070588111877441
    10. ',n' → logprob: -12.195588111877441

Token 583: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06253872066736221
    2. ' int' → logprob: -2.8125386238098145
    3. 'I' → logprob: -7.5625386238098145
    4. '[int' → logprob: -11.062539100646973
    5. ' I' → logprob: -11.312539100646973
    6. ' ' → logprob: -12.062539100646973
    7. '=int' → logprob: -12.187539100646973
    8. '10' → logprob: -12.937539100646973
    9. '(int' → logprob: -13.562539100646973
    10. 'i' → logprob: -13.812539100646973

Token 584: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.01713624596595764
    2. 'input' → logprob: -4.767136096954346
    3. '()' → logprob: -5.142136096954346
    4. '(sys' → logprob: -6.017136096954346
    5. '(' → logprob: -9.392136573791504
    6. '=input' → logprob: -10.392136573791504
    7. '(raw' → logprob: -11.017136573791504
    8. ',input' → logprob: -11.017136573791504
    9. '(s' → logprob: -11.517136573791504
    10. ' input' → logprob: -11.892136573791504

Token 585: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0014001181116327643
    2. '()' → logprob: -6.876399993896484
    3. '())
' → logprob: -8.126399993896484
    4. ')' → logprob: -9.751399993896484
    5. '()
' → logprob: -11.751399993896484
    6. '(' → logprob: -13.251399993896484
    7. ' ())' → logprob: -13.626399993896484
    8. '();)' → logprob: -14.376399993896484
    9. '());' → logprob: -14.501399993896484
    10. '())

' → logprob: -15.126399993896484

Token 586: 's' (ID: 82)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09102221578359604
    2. 'x' → logprob: -3.841022253036499
    3. 'h' → logprob: -4.21602201461792
    4. 'A' → logprob: -4.21602201461792
    5. 'l' → logprob: -4.84102201461792
    6. 's' → logprob: -4.96602201461792
    7. 'arr' → logprob: -5.09102201461792
    8. 'lst' → logprob: -5.46602201461792
    9. 'q' → logprob: -6.34102201461792
    10. 'd' → logprob: -6.34102201461792

Token 587: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6332679390907288
    2. '=' → logprob: -0.7582679390907288
    3. '=input' → logprob: -7.508267879486084
    4. 's' → logprob: -9.883268356323242
    5. ' ' → logprob: -10.633268356323242
    6. '_' → logprob: -11.008268356323242
    7. ',' → logprob: -12.258268356323242
    8. '=list' → logprob: -12.258268356323242
    9. '=[]' → logprob: -12.758268356323242
    10. '=set' → logprob: -13.008268356323242

Token 588: ' [' (ID: 723)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.013575461693108082
    2. 'list' → logprob: -4.513575553894043
    3. '[input' → logprob: -6.263575553894043
    4. 'S' → logprob: -8.138575553894043
    5. 's' → logprob: -9.263575553894043
    6. 'sorted' → logprob: -9.638575553894043
    7. ' input' → logprob: -10.013575553894043
    8. '[' → logprob: -10.388575553894043
    9. '[]
' → logprob: -10.888575553894043
    10. 'str' → logprob: -10.888575553894043

Token 589: 'int' (ID: 491)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.010334976017475128
    2. 'int' → logprob: -4.6353349685668945
    3. 'list' → logprob: -7.8853349685668945
    4. 'S' → logprob: -10.510334968566895
    5. 'sys' → logprob: -10.510334968566895
    6. '(input' → logprob: -10.510334968566895
    7. ' input' → logprob: -10.635334968566895
    8. '0' → logprob: -10.885334968566895
    9. 's' → logprob: -11.010334968566895
    10. 'str' → logprob: -11.135334968566895

Token 590: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.03318868577480316
    2. '()' → logprob: -3.658188581466675
    3. '(x' → logprob: -5.283188819885254
    4. '()]' → logprob: -6.533188819885254
    5. '(i' → logprob: -8.408188819885254
    6. '(' → logprob: -10.283188819885254
    7. '(_)' → logprob: -11.033188819885254
    8. '()
' → logprob: -11.158188819885254
    9. 'input' → logprob: -11.283188819885254
    10. '(sys' → logprob: -11.908188819885254

Token 591: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.015201344154775143
    2. '()' → logprob: -4.265201568603516
    3. ')' → logprob: -6.890201568603516
    4. '())
' → logprob: -11.390201568603516
    5. '()]' → logprob: -13.015201568603516
    6. '().' → logprob: -13.265201568603516
    7. ' ())' → logprob: -13.390201568603516
    8. '()
' → logprob: -13.640201568603516
    9. '(' → logprob: -14.640201568603516
    10. '")' → logprob: -15.390201568603516

Token 592: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31329524517059326
    2. 'for' → logprob: -1.3132952451705933
    3. '	for' → logprob: -11.313295364379883
    4. '()' → logprob: -11.438295364379883
    5. ']' → logprob: -11.938295364379883
    6. '   ' → logprob: -12.813295364379883
    7. ' ' → logprob: -14.688295364379883
    8. ')' → logprob: -14.688295364379883
    9. '```' → logprob: -15.438295364379883
    10. ']
' → logprob: -17.063295364379883

Token 593: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0726717934012413
    2. 'i' → logprob: -2.697671890258789
    3. '_i' → logprob: -6.447671890258789
    4. 'in' → logprob: -7.822671890258789
    5. '_range' → logprob: -7.947671890258789
    6. 'range' → logprob: -8.447671890258789
    7. ' in' → logprob: -9.572671890258789
    8. '_in' → logprob: -10.572671890258789
    9. ' range' → logprob: -10.947671890258789
    10. '
' → logprob: -11.072671890258789

Token 594: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018194425851106644
    2. 'in' → logprob: -4.018194198608398
    3. 'range' → logprob: -10.768194198608398
    4. '()' → logprob: -11.143194198608398
    5. 'n' → logprob: -12.393194198608398
    6. ' range' → logprob: -13.018194198608398
    7. '(' → logprob: -13.893194198608398
    8. '(range' → logprob: -14.768194198608398
    9. 'for' → logprob: -15.143194198608398
    10. '_' → logprob: -15.393194198608398

Token 595: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.517272024415433e-05
    2. ' range' → logprob: -9.500075340270996
    3. '(range' → logprob: -16.62507438659668
    4. ' ' → logprob: -16.87507438659668
    5. '
' → logprob: -17.37507438659668
    6. '  ' → logprob: -18.12507438659668
    7. '   ' → logprob: -18.25007438659668
    8. 'n' → logprob: -18.37507438659668
    9. 'r' → logprob: -18.87507438659668
    10. '	range' → logprob: -19.87507438659668

Token 596: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.09355926513671875
    2. '(n' → logprob: -2.5935592651367188
    3. 'n' → logprob: -4.343559265136719
    4. ' range' → logprob: -6.843559265136719
    5. '(range' → logprob: -7.593559265136719
    6. '(' → logprob: -13.468559265136719
    7. ' n' → logprob: -14.843559265136719
    8. 's' → logprob: -16.09355926513672
    9. '_range' → logprob: -16.34355926513672
    10. '	range' → logprob: -16.46855926513672

Token 597: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0003334393841214478
    2. ')' → logprob: -8.250333786010742
    3. ')]
' → logprob: -10.125333786010742
    4. ']' → logprob: -10.625333786010742
    5. '])' → logprob: -13.125333786010742
    6. ')])' → logprob: -13.125333786010742
    7. '])]' → logprob: -13.250333786010742
    8. ')]
' → logprob: -14.500333786010742
    9. ')
' → logprob: -14.500333786010742
    10. ')],' → logprob: -15.375333786010742

Token 598: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9095678329467773
    2. 's' → logprob: -1.0345678329467773
    3. 'ans' → logprob: -2.5345678329467773
    4. 'lis' → logprob: -3.0345678329467773
    5. 'res' → logprob: -3.9095678329467773
    6. 'for' → logprob: -4.284567832946777
    7. 'd' → logprob: -4.409567832946777
    8. 'l' → logprob: -5.159567832946777
    9. 'a' → logprob: -5.159567832946777
    10. 'sorted' → logprob: -5.534567832946777

Token 599: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2022576928138733
    2. '=' → logprob: -1.7022576332092285
    3. '=[' → logprob: -7.8272576332092285
    4. '=[]' → logprob: -8.077258110046387
    5. '[' → logprob: -9.077258110046387
    6. ' =[' → logprob: -12.202258110046387
    7. '=[]
' → logprob: -12.702258110046387
    8. 's' → logprob: -13.327258110046387
    9. ',' → logprob: -13.452258110046387
    10. '[]' → logprob: -13.702258110046387

Token 600: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.026592520996928215
    2. '[s' → logprob: -3.776592493057251
    3. '[n' → logprob: -5.77659273147583
    4. '[len' → logprob: -9.151592254638672
    5. '[]' → logprob: -9.401592254638672
    6. '[-' → logprob: -11.026592254638672
    7. '[int' → logprob: -11.526592254638672
    8. ' [' → logprob: -12.026592254638672
    9. '[length' → logprob: -12.651592254638672
    10. '[list' → logprob: -12.901592254638672

Token 601: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.21693232655525208
    2. '1' → logprob: -2.3419322967529297
    3. '0' → logprob: -2.8419322967529297
    4. 's' → logprob: -3.8419322967529297
    5. '-' → logprob: -4.71693229675293
    6. '10' → logprob: -5.21693229675293
    7. 'math' → logprob: -6.21693229675293
    8. '(' → logprob: -7.34193229675293
    9. '(float' → logprob: -7.46693229675293
    10. '[' → logprob: -8.21693229675293

Token 602: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.023671558126807213
    2. '('' → logprob: -3.7736716270446777
    3. '("-' → logprob: -8.14867115020752
    4. '"' → logprob: -9.14867115020752
    5. '(' → logprob: -11.39867115020752
    6. '('-' → logprob: -11.52367115020752
    7. '(
' → logprob: -12.27367115020752
    8. '"in' → logprob: -13.39867115020752
    9. '"-' → logprob: -13.77367115020752
    10. ''' → logprob: -14.64867115020752

Token 603: 'INF' (ID: 64358)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.5814005136489868
    2. '"' → logprob: -0.8314005136489868
    3. ''' → logprob: -6.456400394439697
    4. '"in' → logprob: -6.456400394439697
    5. '"-' → logprob: -6.831400394439697
    6. ''in' → logprob: -7.331400394439697
    7. '-inf' → logprob: -8.581400871276855
    8. ''-' → logprob: -9.456400871276855
    9. '"s' → logprob: -9.706400871276855
    10. ''i' → logprob: -10.081400871276855

Token 604: '")' (ID: 1405)
  Prédit: '")]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")]' → logprob: -0.11385420709848404
    2. '")' → logprob: -2.363854169845581
    3. ')]' → logprob: -4.73885440826416
    4. '")]
' → logprob: -6.48885440826416
    5. '')]' → logprob: -6.48885440826416
    6. 'n' → logprob: -7.23885440826416
    7. ')' → logprob: -7.98885440826416
    8. ']' → logprob: -8.73885440826416
    9. '"' → logprob: -8.73885440826416
    10. 'inf' → logprob: -9.36385440826416

Token 605: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04867639020085335
    2. ' for' → logprob: -3.7986764907836914
    3. 'for' → logprob: -4.423676490783691
    4. ']*' → logprob: -4.548676490783691
    5. ']*(' → logprob: -6.423676490783691
    6. '()]' → logprob: -8.298676490783691
    7. ' ]' → logprob: -8.423676490783691
    8. ')]' → logprob: -9.798676490783691
    9. '32' → logprob: -9.798676490783691
    10. ')' → logprob: -10.173676490783691

Token 606: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.022635096684098244
    2. '_i' → logprob: -4.022634983062744
    3. 'i' → logprob: -5.522634983062744
    4. ' i' → logprob: -7.772634983062744
    5. ' _' → logprob: -10.147635459899902
    6. '_range' → logprob: -11.772635459899902
    7. ']' → logprob: -12.647635459899902
    8. '_in' → logprob: -13.272635459899902
    9. '_j' → logprob: -13.397635459899902
    10. ' range' → logprob: -13.897635459899902

Token 607: ' in' (ID: 306)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.05004344880580902
    2. '(range' → logprob: -3.9250433444976807
    3. '(' → logprob: -4.17504358291626
    4. ' in' → logprob: -5.05004358291626
    5. '(len' → logprob: -6.55004358291626
    6. 'for' → logprob: -6.67504358291626
    7. 'range' → logprob: -6.80004358291626
    8. ' for' → logprob: -7.42504358291626
    9. ' range' → logprob: -7.55004358291626
    10. ' (' → logprob: -7.55004358291626

Token 608: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015040287980809808
    2. ' range' → logprob: -6.501503944396973
    3. '(range' → logprob: -14.251503944396973
    4. '_range' → logprob: -14.251503944396973
    5. 's' → logprob: -15.376503944396973
    6. '	range' → logprob: -16.37650489807129
    7. '_' → logprob: -16.50150489807129
    8. '
' → logprob: -18.62650489807129
    9. 'r' → logprob: -19.12650489807129
    10. 'rang' → logprob: -19.25150489807129

Token 609: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.012711887247860432
    2. '(n' → logprob: -5.012712001800537
    3. '(range' → logprob: -5.512712001800537
    4. ' range' → logprob: -6.387712001800537
    5. 'n' → logprob: -8.637711524963379
    6. 's' → logprob: -9.637711524963379
    7. '(s' → logprob: -11.387711524963379
    8. '(' → logprob: -12.262711524963379
    9. '_range' → logprob: -14.262711524963379
    10. '	range' → logprob: -14.512711524963379

Token 610: ')]
' (ID: 11587)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.037213489413261414
    2. ')]' → logprob: -3.6622135639190674
    3. ')]
' → logprob: -4.537213325500488
    4. ' +' → logprob: -10.037213325500488
    5. ')]
' → logprob: -10.412213325500488
    6. ')' → logprob: -10.662213325500488
    7. '+
' → logprob: -10.912213325500488
    8. ')]

' → logprob: -11.537213325500488
    9. ')])' → logprob: -12.662213325500488
    10. '+n' → logprob: -13.037213325500488

Token 611: 'for' (ID: 1938)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00827968493103981
    2. 'for' → logprob: -5.508279800415039
    3. '0' → logprob: -5.883279800415039
    4. ']' → logprob: -7.258279800415039
    5. ' dp' → logprob: -8.008279800415039
    6. '
' → logprob: -9.133279800415039
    7. ']
' → logprob: -9.383279800415039
    8. ')' → logprob: -10.008279800415039
    9. '(dp' → logprob: -10.008279800415039
    10. ' for' → logprob: -10.508279800415039

Token 612: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006260605878196657
    2. ' i' → logprob: -7.500626087188721
    3. 'x' → logprob: -10.750625610351562
    4. '_' → logprob: -10.750625610351562
    5. '_i' → logprob: -11.125625610351562
    6. '0' → logprob: -12.625625610351562
    7. 's' → logprob: -13.125625610351562
    8. ' ' → logprob: -13.375625610351562
    9. '1' → logprob: -13.375625610351562
    10. 'a' → logprob: -13.375625610351562

Token 613: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2814849615097046
    2. 'in' → logprob: -1.4064849615097046
    3. 'i' → logprob: -9.406484603881836
    4. ',' → logprob: -9.531484603881836
    5. ' ' → logprob: -9.656484603881836
    6. ' i' → logprob: -10.406484603881836
    7. '	in' → logprob: -10.531484603881836
    8. 'n' → logprob: -11.156484603881836
    9. '  ' → logprob: -11.781484603881836
    10. 'range' → logprob: -12.031484603881836

Token 614: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005936028435826302
    2. ' range' → logprob: -5.130936145782471
    3. 's' → logprob: -13.255935668945312
    4. 'r' → logprob: -13.755935668945312
    5. ' ' → logprob: -13.755935668945312
    6. '[' → logprob: -14.130935668945312
    7. 'in' → logprob: -14.255935668945312
    8. 'ra' → logprob: -14.755935668945312
    9. '   ' → logprob: -14.755935668945312
    10. 'rang' → logprob: -15.130935668945312

Token 615: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0012178556062281132
    2. ' range' → logprob: -6.751217842102051
    3. 'in' → logprob: -10.87621784210205
    4. 's' → logprob: -11.37621784210205
    5. 'n' → logprob: -11.87621784210205
    6. '_' → logprob: -12.75121784210205
    7. ')' → logprob: -13.00121784210205
    8. ' ' → logprob: -13.87621784210205
    9. '   ' → logprob: -14.25121784210205
    10. '(range' → logprob: -14.25121784210205

Token 616: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38756895065307617
    2. '):
' → logprob: -1.1375689506530762
    3. '-' → logprob: -7.887568950653076
    4. '+' → logprob: -8.762569427490234
    5. '):
' → logprob: -9.387569427490234
    6. ')' → logprob: -10.262569427490234
    7. ')]' → logprob: -11.262569427490234
    8. ']):' → logprob: -11.512569427490234
    9. ']:' → logprob: -12.012569427490234
    10. '   ' → logprob: -12.637569427490234

Token 617: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17006012797355652
    2. 'dp' → logprob: -2.545060157775879
    3. 'for' → logprob: -3.670060157775879
    4. ' dp' → logprob: -3.795060157775879
    5. ' for' → logprob: -4.420060157775879
    6. ' if' → logprob: -4.545060157775879
    7. 'if' → logprob: -5.295060157775879
    8. ' j' → logprob: -7.045060157775879
    9. 'j' → logprob: -7.420060157775879
    10. 'import' → logprob: -8.295060157775879

Token 618: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.7197791337966919
    2. 'for' → logprob: -0.8447791337966919
    3. 'if' → logprob: -2.7197790145874023
    4. 'j' → logprob: -4.219779014587402
    5. '   ' → logprob: -6.719779014587402
    6. 'pos' → logprob: -7.594779014587402
    7. 'idx' → logprob: -7.719779014587402
    8. 'import' → logprob: -8.094779014587402
    9. ' for' → logprob: -9.219779014587402
    10. 'bis' → logprob: -9.844779014587402

Token 619: '[' (ID: 58)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01614205352962017
    2. '[' → logprob: -4.141141891479492
    3. ' =' → logprob: -9.641141891479492
    4. '=' → logprob: -10.516141891479492
    5. ']' → logprob: -12.016141891479492
    6. '[
' → logprob: -13.141141891479492
    7. '=i' → logprob: -13.766141891479492
    8. '0' → logprob: -14.141141891479492
    9. '[j' → logprob: -14.141141891479492
    10. 'i' → logprob: -14.391141891479492

Token 620: 'bis' (ID: 38042)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.026830347254872322
    2. '0' → logprob: -3.6518304347991943
    3. ']' → logprob: -7.901830196380615
    4. ' i' → logprob: -9.776830673217773
    5. '-' → logprob: -10.526830673217773
    6. 's' → logprob: -10.651830673217773
    7. ')' → logprob: -11.026830673217773
    8. '])' → logprob: -11.401830673217773
    9. ' ' → logprob: -12.026830673217773
    10. 'n' → logprob: -12.776830673217773

Token 621: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -2.7610454708337784e-05
    2. 'sect' → logprob: -11.375027656555176
    3. 'ct' → logprob: -11.375027656555176
    4. '```' → logprob: -13.375027656555176
    5. 'ext' → logprob: -13.750027656555176
    6. 'e' → logprob: -14.375027656555176
    7. 'ec' → logprob: -14.625027656555176
    8. 'c' → logprob: -15.625027656555176
    9. 'ects' → logprob: -16.00002670288086
    10. 'ectl' → logprob: -16.12502670288086

Token 622: '.b' (ID: 1292)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.6458131670951843
    2. '.b' → logprob: -0.7708131670951843
    3. '(s' → logprob: -5.14581298828125
    4. '_right' → logprob: -5.39581298828125
    5. 's' → logprob: -6.39581298828125
    6. '.ins' → logprob: -7.52081298828125
    7. 'bis' → logprob: -8.64581298828125
    8. ']' → logprob: -9.27081298828125
    9. 'Left' → logprob: -9.89581298828125
    10. 'left' → logprob: -10.02081298828125

Token 623: 'is' (ID: 276)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.013436209410429
    2. 's' → logprob: -4.513436317443848
    3. 'ect' → logprob: -6.138436317443848
    4. 'st' → logprob: -10.013436317443848
    5. 'sect' → logprob: -10.013436317443848
    6. 'cts' → logprob: -10.138436317443848
    7. 'n' → logprob: -10.638436317443848
    8. 'ns' → logprob: -10.763436317443848
    9. 'is' → logprob: -11.513436317443848
    10. '```' → logprob: -11.513436317443848

Token 624: 'ect' (ID: 534)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.0028486251831054688
    2. 'ect' → logprob: -5.8778486251831055
    3. '```' → logprob: -11.127848625183105
    4. 'c' → logprob: -11.627848625183105
    5. 't' → logprob: -11.877848625183105
    6. 's' → logprob: -13.002848625183105
    7. '(ct' → logprob: -13.377848625183105
    8. 'n' → logprob: -13.752848625183105
    9. 'sect' → logprob: -14.127848625183105
    10. '#' → logprob: -14.252848625183105

Token 625: '_left' (ID: 22189)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.02922189235687256
    2. '(s' → logprob: -4.154222011566162
    3. 'dp' → logprob: -4.779222011566162
    4. 's' → logprob: -5.904222011566162
    5. '_left' → logprob: -6.779222011566162
    6. 'left' → logprob: -7.904222011566162
    7. 'right' → logprob: -9.279221534729004
    8. '_right' → logprob: -9.404221534729004
    9. 'l' → logprob: -9.904221534729004
    10. '
' → logprob: -10.154221534729004

Token 626: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0008142740116454661
    2. '(s' → logprob: -7.125814437866211
    3. 'dp' → logprob: -11.875814437866211
    4. '(' → logprob: -14.375814437866211
    5. '
' → logprob: -14.750814437866211
    6. ' (' → logprob: -14.750814437866211
    7. ']' → logprob: -14.875814437866211
    8. '(d' → logprob: -15.375814437866211
    9. '```' → logprob: -15.500814437866211
    10. '(
' → logprob: -15.625814437866211

Token 627: ',s' (ID: 20379)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2052464336156845
    2. ',s' → logprob: -1.7052464485168457
    3. '(s' → logprob: -5.705246448516846
    4. ' ,' → logprob: -8.580245971679688
    5. 's' → logprob: -9.080245971679688
    6. ',i' → logprob: -10.205245971679688
    7. ',S' → logprob: -10.455245971679688
    8. ',
' → logprob: -10.830245971679688
    9. '(' → logprob: -10.955245971679688
    10. ',int' → logprob: -11.205245971679688

Token 628: '[i' (ID: 1768)
  Prédit: ',i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',i' → logprob: -0.30435046553611755
    2. '[i' → logprob: -1.55435049533844
    3. '
' → logprob: -4.30435037612915
    4. ',' → logprob: -4.30435037612915
    5. 'i' → logprob: -4.55435037612915
    6. ')]' → logprob: -5.42935037612915
    7. '][' → logprob: -5.92935037612915
    8. ')][' → logprob: -6.17935037612915
    9. ')i' → logprob: -6.55435037612915
    10. ']' → logprob: -6.92935037612915

Token 629: '])]' (ID: 178925)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.7875387668609619
    2. ',' → logprob: -0.9125387668609619
    3. ',i' → logprob: -2.037538766860962
    4. ' ,' → logprob: -5.162538528442383
    5. ')])' → logprob: -5.662538528442383
    6. ',s' → logprob: -6.412538528442383
    7. ')' → logprob: -7.287538528442383
    8. '])]' → logprob: -7.537538528442383
    9. ')]
' → logprob: -8.287538528442383
    10. ' )' → logprob: -8.912538528442383

Token 630: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18112440407276154
    2. ' =' → logprob: -1.8061244487762451
    3. '=i' → logprob: -7.181124210357666
    4. ']' → logprob: -7.806124210357666
    5. '=s' → logprob: -9.431124687194824
    6. ']=' → logprob: -9.681124687194824
    7. ' =
' → logprob: -10.931124687194824
    8. '=j' → logprob: -11.431124687194824
    9. '=
' → logprob: -11.681124687194824
    10. '=n' → logprob: -11.681124687194824

Token 631: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.15310683415737e-05
    2. ' s' → logprob: -10.750021934509277
    3. '	s' → logprob: -20.75002098083496
    4. '   ' → logprob: -22.50002098083496
    5. '_s' → logprob: -23.00002098083496
    6. '<s' → logprob: -23.00002098083496
    7. '`s' → logprob: -23.25002098083496
    8. '(s' → logprob: -23.37502098083496
    9. 'S' → logprob: -24.00002098083496
    10. ' ' → logprob: -24.37502098083496

Token 632: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.652451464906335e-05
    2. '[' → logprob: -11.375016212463379
    3. 'i' → logprob: -12.750016212463379
    4. '[
' → logprob: -13.125016212463379
    5. '(i' → logprob: -17.500017166137695
    6. '[I' → logprob: -18.000017166137695
    7. '```' → logprob: -18.250017166137695
    8. '[j' → logprob: -18.500017166137695
    9. ']' → logprob: -18.500017166137695
    10. '[int' → logprob: -18.625017166137695

Token 633: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009883344173431396
    2. ']' → logprob: -5.259883403778076
    3. '<|end|>' → logprob: -5.509883403778076
    4. ')
' → logprob: -8.384882926940918
    5. ')]' → logprob: -8.384882926940918
    6. '<|end|>' → logprob: -9.759882926940918
    7. '])' → logprob: -10.134882926940918
    8. '}' → logprob: -12.009882926940918
    9. ' )' → logprob: -12.384882926940918
    10. '#' → logprob: -12.509882926940918

Token 634: 'print' (ID: 1598)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40448692440986633
    2. '<|end|>' → logprob: -1.279486894607544
    3. ')' → logprob: -3.154486894607544
    4. 'print' → logprob: -5.029487133026123
    5. '```' → logprob: -6.029487133026123
    6. ']' → logprob: -7.154487133026123
    7. '\n' → logprob: -7.154487133026123
    8. '#' → logprob: -8.404486656188965
    9. ' ' → logprob: -8.779486656188965
    10. '<|end|>' → logprob: -8.779486656188965

Token 635: '(b' (ID: 3229)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.023972585797309875
    2. '(sum' → logprob: -4.148972511291504
    3. '(b' → logprob: -5.148972511291504
    4. '(min' → logprob: -6.773972511291504
    5. '(' → logprob: -8.023972511291504
    6. '(next' → logprob: -8.148972511291504
    7. '(max' → logprob: -8.273972511291504
    8. '(n' → logprob: -10.273972511291504
    9. 'len' → logprob: -11.273972511291504
    10. '(abs' → logprob: -11.398972511291504

Token 636: 'is' (ID: 276)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.27646446228027344
    2. 'st' → logprob: -2.0264644622802734
    3. 'p' → logprob: -3.0264644622802734
    4. 's' → logprob: -3.1514644622802734
    5. 'len' → logprob: -4.276464462280273
    6. 'np' → logprob: -6.901464462280273
    7. 'dp' → logprob: -7.276464462280273
    8. '[len' → logprob: -7.526464462280273
    9. '(len' → logprob: -7.901464462280273
    10. 'i' → logprob: -8.276464462280273

Token 637: 'ect' (ID: 534)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -1.318681188422488e-05
    2. 'ect' → logprob: -11.75001335144043
    3. 'c' → logprob: -12.50001335144043
    4. 'pt' → logprob: -14.87501335144043
    5. 'ction' → logprob: -15.25001335144043
    6. '```' → logprob: -15.87501335144043
    7. 'cd' → logprob: -16.00001335144043
    8. '(ct' → logprob: -16.00001335144043
    9. 't' → logprob: -16.25001335144043
    10. 'sect' → logprob: -16.62501335144043

Token 638: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.0025449818931519985
    2. '.' → logprob: -7.00254487991333
    3. '_right' → logprob: -7.50254487991333
    4. '_left' → logprob: -7.75254487991333
    5. ')' → logprob: -8.002545356750488
    6. '_length' → logprob: -9.127545356750488
    7. '.len' → logprob: -9.252545356750488
    8. '_len' → logprob: -10.377545356750488
    9. 'len' → logprob: -11.002545356750488
    10. '.ins' → logprob: -11.127545356750488

Token 639: 'is' (ID: 276)
  Prédit: 'ect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.8767409324645996
    2. 'left' → logprob: -1.0017409324645996
    3. '_left' → logprob: -2.2517409324645996
    4. 'is' → logprob: -2.7517409324645996
    5. 'sect' → logprob: -3.5017409324645996
    6. 'ct' → logprob: -5.3767409324646
    7. 's' → logprob: -5.6267409324646
    8. 'e' → logprob: -6.1267409324646
    9. 'eft' → logprob: -6.2517409324646
    10. 'pt' → logprob: -7.0017409324646

Token 640: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.01828455924987793
    2. 'ct' → logprob: -4.018284797668457
    3. 'sect' → logprob: -9.143284797668457
    4. 'c' → logprob: -11.143284797668457
    5. 'ce' → logprob: -12.893284797668457
    6. 'n' → logprob: -13.018284797668457
    7. 'e' → logprob: -13.018284797668457
    8. 'с' → logprob: -13.518284797668457
    9. '```' → logprob: -14.018284797668457
    10. 't' → logprob: -14.643284797668457

Token 641: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.001970150275155902
    2. '_right' → logprob: -6.251970291137695
    3. 'left' → logprob: -10.376970291137695
    4. '(dp' → logprob: -11.751970291137695
    5. 'dp' → logprob: -13.876970291137695
    6. 'len' → logprob: -14.626970291137695
    7. '_len' → logprob: -15.001970291137695
    8. 'Left' → logprob: -15.501970291137695
    9. '_length' → logprob: -15.626970291137695
    10. 'right' → logprob: -15.626970291137695

Token 642: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -2.339278580620885e-06
    2. 'dp' → logprob: -13.500001907348633
    3. ' (' → logprob: -14.625001907348633
    4. ')' → logprob: -15.250001907348633
    5. '(' → logprob: -15.750001907348633
    6. ' dp' → logprob: -18.000001907348633
    7. '(
' → logprob: -18.000001907348633
    8. '(df' → logprob: -18.125001907348633
    9. '
' → logprob: -18.375001907348633
    10. '	dp' → logprob: -19.125001907348633

Token 643: ',' (ID: 11)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0012304692063480616
    2. ',' → logprob: -7.126230239868164
    3. '([' → logprob: -8.876230239868164
    4. '(' → logprob: -9.001230239868164
    5. ',[' → logprob: -9.501230239868164
    6. ' (' → logprob: -10.751230239868164
    7. ',(' → logprob: -10.876230239868164
    8. ')' → logprob: -11.251230239868164
    9. '(len' → logprob: -12.126230239868164
    10. '(df' → logprob: -12.126230239868164

Token 644: '100' (ID: 1353)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0015985334757715464
    2. ' float' → logprob: -7.126598358154297
    3. '0' → logprob: -8.001598358154297
    4. 'max' → logprob: -8.376598358154297
    5. 's' → logprob: -9.126598358154297
    6. '100' → logprob: -10.126598358154297
    7. '10' → logprob: -10.876598358154297
    8. 'n' → logprob: -11.126598358154297
    9. '(float' → logprob: -11.626598358154297
    10. 'min' → logprob: -11.626598358154297

Token 645: '000' (ID: 1302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0980396270751953
    2. '(' → logprob: -1.2230396270751953
    3. ')' → logprob: -1.3480396270751953
    4. '000' → logprob: -2.5980396270751953
    5. '(float' → logprob: -4.598039627075195
    6. '(s' → logprob: -5.223039627075195
    7. '00' → logprob: -5.223039627075195
    8. '))' → logprob: -5.348039627075195
    9. '100' → logprob: -6.223039627075195
    10. 'float' → logprob: -6.598039627075195

Token 646: '000' (ID: 1302)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005438778083771467
    2. '))' → logprob: -5.505438804626465
    3. '+' → logprob: -7.380438804626465
    4. '0' → logprob: -8.130438804626465
    5. ')+' → logprob: -8.380438804626465
    6. '000' → logprob: -9.880438804626465
    7. '(' → logprob: -10.130438804626465
    8. ')")' → logprob: -10.380438804626465
    9. ')))' → logprob: -11.130438804626465
    10. '1' → logprob: -11.380438804626465

Token 647: '000' (ID: 1302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.851872980594635
    2. ')' → logprob: -0.976872980594635
    3. '))' → logprob: -1.9768729209899902
    4. '7' → logprob: -2.9768729209899902
    5. '000' → logprob: -5.97687292098999
    6. '00' → logprob: -6.47687292098999
    7. '(' → logprob: -6.72687292098999
    8. ')))' → logprob: -7.47687292098999
    9. '+' → logprob: -8.351873397827148
    10. '1' → logprob: -8.351873397827148

Token 648: '000' (ID: 1302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19111871719360352
    2. '))' → logprob: -2.1911187171936035
    3. ')' → logprob: -2.9411187171936035
    4. '000' → logprob: -5.1911187171936035
    5. '7' → logprob: -6.0661187171936035
    6. '00' → logprob: -7.8161187171936035
    7. '1' → logprob: -8.066118240356445
    8. '+' → logprob: -8.691118240356445
    9. '"' → logprob: -8.816118240356445
    10. ')+' → logprob: -9.566118240356445

Token 649: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10527355968952179
    2. ')' → logprob: -2.855273485183716
    3. '0' → logprob: -3.230273485183716
    4. '000' → logprob: -6.855273723602295
    5. '(' → logprob: -7.230273723602295
    6. ')))' → logprob: -8.355273246765137
    7. '))
' → logprob: -8.730273246765137
    8. '00' → logprob: -8.855273246765137
    9. ' ))' → logprob: -9.105273246765137
    10. '))+' → logprob: -9.605273246765137

Token 650: '"""

' (ID: 34508)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.5837835669517517
    2. ')' → logprob: -0.8337835669517517
    3. '")' → logprob: -5.7087836265563965
    4. '```' → logprob: -5.7087836265563965
    5. '""' → logprob: -7.2087836265563965
    6. '"' → logprob: -8.708783149719238
    7. '"""
' → logprob: -8.708783149719238
    8. '<|end|>' → logprob: -9.958783149719238
    9. ')
' → logprob: -10.958783149719238
    10. ''''' → logprob: -11.958783149719238

Token 651: '#' (ID: 2)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.4515356421470642
    2. '#' → logprob: -1.451535701751709
    3. 'n' → logprob: -2.701535701751709
    4. '#!/' → logprob: -3.951535701751709
    5. '"' → logprob: -4.201535701751709
    6. '!' → logprob: -4.451535701751709
    7. '"""' → logprob: -4.951535701751709
    8. '#!' → logprob: -5.826535701751709
    9. 'u' → logprob: -7.076535701751709
    10. ')' → logprob: -7.576535701751709

Token 652: '1' (ID: 16)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2120075523853302
    2. ' ' → logprob: -2.712007522583008
    3. ')' → logprob: -2.962007522583008
    4. '<|end|>' → logprob: -3.712007522583008
    5. 'n' → logprob: -4.337007522583008
    6. ' """' → logprob: -4.962007522583008
    7. '"""' → logprob: -5.337007522583008
    8. ' #' → logprob: -5.462007522583008
    9. '"' → logprob: -5.962007522583008
    10. '/' → logprob: -6.212007522583008

Token 653: '_E' (ID: 6584)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8708962798118591
    2. '<|end|>' → logprob: -1.495896339416504
    3. ')' → logprob: -1.620896339416504
    4. '_' → logprob: -2.620896339416504
    5. '<|end|>' → logprob: -3.870896339416504
    6. 'D' → logprob: -4.370896339416504
    7. '"""' → logprob: -4.370896339416504
    8. '[' → logprob: -4.620896339416504
    9. '```' → logprob: -4.620896339416504
    10. '
' → logprob: -5.870896339416504

Token 654: '
' (ID: 198)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.4943774342536926
    2. '"""
' → logprob: -0.9943774342536926
    3. 'n' → logprob: -3.994377374649048
    4. '#' → logprob: -7.119377613067627
    5. 'def' → logprob: -8.244377136230469
    6. '""' → logprob: -8.244377136230469
    7. '```' → logprob: -8.869377136230469
    8. '"""

' → logprob: -9.369377136230469
    9. 'import' → logprob: -10.494377136230469
    10. 'from' → logprob: -10.619377136230469

Token 655: '"""
' (ID: 15611)
  Prédit: '"""
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.24060852825641632
    2. '"""' → logprob: -1.9906085729599
    3. 'n' → logprob: -2.6156084537506104
    4. 'def' → logprob: -6.3656086921691895
    5. 'from' → logprob: -7.2406086921691895
    6. '#' → logprob: -7.3656086921691895
    7. 'import' → logprob: -7.4906086921691895
    8. '""' → logprob: -8.490608215332031
    9. '"""

' → logprob: -9.365608215332031
    10. '"""
' → logprob: -9.615608215332031

Token 656: 's' (ID: 82)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10054609179496765
    2. '"""
' → logprob: -3.35054612159729
    3. 'from' → logprob: -3.72554612159729
    4. 'def' → logprob: -3.97554612159729
    5. 'import' → logprob: -4.725545883178711
    6. '"""' → logprob: -5.100545883178711
    7. '#' → logprob: -6.600545883178711
    8. 'w' → logprob: -7.350545883178711
    9. '
' → logprob: -8.975545883178711
    10. 's' → logprob: -9.100545883178711

Token 657: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5264879465103149
    2. '=' → logprob: -0.9014879465103149
    3. 's' → logprob: -6.526487827301025
    4. '="""' → logprob: -6.901487827301025
    5. '=""' → logprob: -7.901487827301025
    6. '"""' → logprob: -8.901488304138184
    7. ',' → logprob: -9.776488304138184
    8. '="' → logprob: -10.276488304138184
    9. '_' → logprob: -10.401488304138184
    10. 'tr' → logprob: -10.401488304138184

Token 658: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5287482738494873
    2. '=' → logprob: -1.4037482738494873
    3. ',' → logprob: -1.9037482738494873
    4. ',s' → logprob: -4.653748512268066
    5. ' ,' → logprob: -6.153748512268066
    6. '1' → logprob: -6.153748512268066
    7. 's' → logprob: -7.403748512268066
    8. ',n' → logprob: -8.403748512268066
    9. '=s' → logprob: -8.403748512268066
    10. ',p' → logprob: -8.528748512268066

Token 659: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.21079851686954498
    2. '"' → logprob: -2.210798501968384
    3. '"S' → logprob: -3.460798501968384
    4. 'list' → logprob: -3.835798501968384
    5. '""' → logprob: -4.960798740386963
    6. 'S' → logprob: -4.960798740386963
    7. ''' → logprob: -5.835798740386963
    8. 's' → logprob: -5.960798740386963
    9. ''S' → logprob: -6.210798740386963
    10. ' input' → logprob: -6.585798740386963

Token 660: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009246084839105606
    2. '()
' → logprob: -5.134245872497559
    3. ' =' → logprob: -6.009245872497559
    4. '=' → logprob: -7.759245872497559
    5. '().' → logprob: -9.384245872497559
    6. 's' → logprob: -9.759245872497559
    7. ')' → logprob: -9.884245872497559
    8. '(' → logprob: -9.884245872497559
    9. '()
' → logprob: -10.509245872497559
    10. '())' → logprob: -10.634245872497559

Token 661: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.179569077678025e-05
    2. ' s' → logprob: -11.125041961669922
    3. 'from' → logprob: -11.125041961669922
    4. 'for' → logprob: -11.875041961669922
    5. '
' → logprob: -13.875041961669922
    6. 'print' → logprob: -14.625041961669922
    7. '"""
' → logprob: -14.875041961669922
    8. '=' → logprob: -15.000041961669922
    9. '#' → logprob: -15.125041961669922
    10. 't' → logprob: -15.250041961669922

Token 662: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00013977376511320472
    2. '1' → logprob: -9.000140190124512
    3. 's' → logprob: -11.500140190124512
    4. '
' → logprob: -13.250140190124512
    5. ' =' → logprob: -13.500140190124512
    6. '=' → logprob: -14.500140190124512
    7. '_' → logprob: -15.000140190124512
    8. 't' → logprob: -15.125140190124512
    9. 'a' → logprob: -15.500140190124512
    10. 'r' → logprob: -15.812640190124512

Token 663: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06995099037885666
    2. ' =' → logprob: -2.694951057434082
    3. '=input' → logprob: -11.444951057434082
    4. 's' → logprob: -13.194951057434082
    5. '=s' → logprob: -14.694951057434082
    6. ' ' → logprob: -14.819951057434082
    7. '=
' → logprob: -15.319951057434082
    8. '  ' → logprob: -15.444951057434082
    9. '   ' → logprob: -15.569951057434082
    10. ',' → logprob: -15.569951057434082

Token 664: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0046509611420333385
    2. ' input' → logprob: -5.379651069641113
    3. 's' → logprob: -10.754651069641113
    4. '""' → logprob: -12.254651069641113
    5. '(input' → logprob: -14.379651069641113
    6. '=input' → logprob: -14.504651069641113
    7. 'int' → logprob: -14.629651069641113
    8. 'str' → logprob: -14.629651069641113
    9. '<input' → logprob: -14.879651069641113
    10. ' ' → logprob: -15.004651069641113

Token 665: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.4791738986968994
    2. '()' → logprob: -0.9791738986968994
    3. 's' → logprob: -5.35417366027832
    4. '
' → logprob: -9.10417366027832
    5. '()

' → logprob: -9.35417366027832
    6. ')' → logprob: -10.22917366027832
    7. '()
' → logprob: -10.47917366027832
    8. ' =' → logprob: -11.10417366027832
    9. '#' → logprob: -11.22917366027832
    10. '=' → logprob: -11.60417366027832

Token 666: 'n' (ID: 77)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06569422036409378
    2. 'n' → logprob: -3.4406943321228027
    3. 'm' → logprob: -4.690694332122803
    4. 'l' → logprob: -4.690694332122803
    5. 'from' → logprob: -4.815694332122803
    6. 'def' → logprob: -6.315694332122803
    7. '
' → logprob: -6.815694332122803
    8. 'for' → logprob: -7.690694332122803
    9. '#' → logprob: -8.190693855285645
    10. 'a' → logprob: -8.440693855285645

Token 667: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5906122922897339
    2. '1' → logprob: -0.8406122922897339
    3. '=len' → logprob: -4.715612411499023
    4. ',' → logprob: -5.715612411499023
    5. '=' → logprob: -6.340612411499023
    6. 's' → logprob: -8.340612411499023
    7. ',m' → logprob: -8.465612411499023
    8. ',len' → logprob: -10.215612411499023
    9. ',s' → logprob: -11.090612411499023
    10. 'len' → logprob: -11.090612411499023

Token 668: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00012821101699955761
    2. ' len' → logprob: -9.000127792358398
    3. 'min' → logprob: -12.500127792358398
    4. 'int' → logprob: -14.000127792358398
    5. '(len' → logprob: -15.875127792358398
    6. 'max' → logprob: -16.2501277923584
    7. '[len' → logprob: -17.2501277923584
    8. '=len' → logprob: -19.5001277923584
    9. ' ' → logprob: -20.1251277923584
    10. '   ' → logprob: -20.7501277923584

Token 669: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0015154577558860183
    2. 's' → logprob: -6.5015153884887695
    3. '(' → logprob: -11.25151538848877
    4. '(
' → logprob: -15.87651538848877
    5. ' (' → logprob: -18.251516342163086
    6. ' s' → logprob: -18.251516342163086
    7. 'S' → logprob: -18.876516342163086
    8. '_s' → logprob: -19.251516342163086
    9. '(S' → logprob: -19.751516342163086
    10. 'a' → logprob: -20.751516342163086

Token 670: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007449613884091377
    2. '2' → logprob: -5.382449626922607
    3. '(s' → logprob: -6.257449626922607
    4. 's' → logprob: -7.007449626922607
    5. ')' → logprob: -13.38244915008545
    6. ')s' → logprob: -14.13244915008545
    7. ' s' → logprob: -14.13244915008545
    8. 'r' → logprob: -15.50744915008545
    9. '(' → logprob: -16.257450103759766
    10. '```' → logprob: -16.257450103759766

Token 671: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20531167089939117
    2. ')' → logprob: -1.70531165599823
    3. 's' → logprob: -6.3303117752075195
    4. '+' → logprob: -7.2053117752075195
    5. 'n' → logprob: -7.2053117752075195
    6. ')n' → logprob: -8.33031177520752
    7. ')+' → logprob: -8.45531177520752
    8. '
' → logprob: -9.33031177520752
    9. ')s' → logprob: -10.08031177520752
    10. ')
' → logprob: -11.45531177520752

Token 672: 'm' (ID: 76)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0008879951201379299
    2. 'l' → logprob: -8.125887870788574
    3. 'm' → logprob: -8.250887870788574
    4. 's' → logprob: -8.750887870788574
    5. 'for' → logprob: -10.000887870788574
    6. '#' → logprob: -10.500887870788574
    7. 'd' → logprob: -11.000887870788574
    8. 'n' → logprob: -11.375887870788574
    9. 'def' → logprob: -11.875887870788574
    10. 'a' → logprob: -11.875887870788574

Token 673: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5788719654083252
    2. '=' → logprob: -0.8288719654083252
    3. ' ' → logprob: -6.453871726989746
    4. ',' → logprob: -7.078871726989746
    5. 's' → logprob: -8.453871726989746
    6. ')' → logprob: -8.953871726989746
    7. '=int' → logprob: -9.828871726989746
    8. '<|end|>' → logprob: -10.453871726989746
    9. '=len' → logprob: -11.078871726989746
    10. ' s' → logprob: -11.328871726989746

Token 674: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0067176250740885735
    2. ' len' → logprob: -5.006717681884766
    3. '[len' → logprob: -13.756717681884766
    4. '(len' → logprob: -14.381717681884766
    5. '=len' → logprob: -15.131717681884766
    6. 'int' → logprob: -15.631717681884766
    7. '<len' → logprob: -16.256717681884766
    8. ',len' → logprob: -16.506717681884766
    9. ' ' → logprob: -17.256717681884766
    10. '	len' → logprob: -18.381717681884766

Token 675: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00012415809032972902
    2. 's' → logprob: -9.000123977661133
    3. '(' → logprob: -14.250123977661133
    4. '(
' → logprob: -18.125123977661133
    5. ' s' → logprob: -19.000123977661133
    6. ' (' → logprob: -20.875123977661133
    7. '(str' → logprob: -21.000123977661133
    8. '[s' → logprob: -21.000123977661133
    9. '```' → logprob: -21.125123977661133
    10. '{s' → logprob: -21.750123977661133

Token 676: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.961759259458631e-06
    2. 's' → logprob: -12.250004768371582
    3. '1' → logprob: -16.1250057220459
    4. ')' → logprob: -19.1250057220459
    5. '```' → logprob: -19.1250057220459
    6. ' s' → logprob: -19.5000057220459
    7. 'm' → logprob: -20.2500057220459
    8. ' ' → logprob: -20.3750057220459
    9. '"""' → logprob: -20.5000057220459
    10. '"""
' → logprob: -20.7500057220459

Token 677: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02635928802192211
    2. ')
' → logprob: -3.6513593196868896
    3. 's' → logprob: -10.526359558105469
    4. '#' → logprob: -11.276359558105469
    5. ')n' → logprob: -12.151359558105469
    6. 'n' → logprob: -12.776359558105469
    7. '")' → logprob: -13.276359558105469
    8. ')s' → logprob: -13.276359558105469
    9. '
' → logprob: -13.401359558105469
    10. '+' → logprob: -13.651359558105469

Token 678: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.6405310816480778e-05
    2. '#' → logprob: -12.125016212463379
    3. '"""
' → logprob: -12.250016212463379
    4. 'l' → logprob: -13.500016212463379
    5. 'd' → logprob: -13.875016212463379
    6. ' dp' → logprob: -14.250016212463379
    7. '"""' → logprob: -14.250016212463379
    8. '
' → logprob: -14.750016212463379
    9. 'def' → logprob: -14.875016212463379
    10. 'dt' → logprob: -15.750016212463379

Token 679: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5769243240356445
    2. ' =' → logprob: -0.8269243240356445
    3. '=[[' → logprob: -6.9519243240356445
    4. '=[' → logprob: -10.576924324035645
    5. '[[' → logprob: -13.451924324035645
    6. '=[]' → logprob: -15.326924324035645
    7. ' =[' → logprob: -16.201923370361328
    8. '=
' → logprob: -16.326923370361328
    9. '＝' → logprob: -16.576923370361328
    10. '=[]
' → logprob: -16.576923370361328

Token 680: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -3.547789674485102e-05
    2. ' [[' → logprob: -10.250035285949707
    3. '[' → logprob: -17.000036239624023
    4. '([[' → logprob: -18.875036239624023
    5. '[['' → logprob: -19.250036239624023
    6. '[n' → logprob: -20.250036239624023
    7. '   ' → logprob: -21.625036239624023
    8. '[(' → logprob: -22.500036239624023
    9. ' ' → logprob: -22.500036239624023
    10. '[m' → logprob: -22.625036239624023

Token 681: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.800739018013701e-05
    2. 'n' → logprob: -10.3750581741333
    3. 'm' → logprob: -10.8750581741333
    4. 'False' → logprob: -12.1250581741333
    5. '(n' → logprob: -14.1250581741333
    6. '(' → logprob: -14.3750581741333
    7. '(m' → logprob: -14.8750581741333
    8. '-' → logprob: -15.0000581741333
    9. ' ' → logprob: -16.125057220458984
    10. '
' → logprob: -16.375057220458984

Token 682: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.028669601306319237
    2. ' for' → logprob: -4.278669834136963
    3. ']*(' → logprob: -4.278669834136963
    4. ']' → logprob: -7.903669834136963
    5. '(n' → logprob: -8.903669357299805
    6. '
' → logprob: -11.028669357299805
    7. ']*' → logprob: -12.403669357299805
    8. '	for' → logprob: -12.403669357299805
    9. '*(' → logprob: -12.528669357299805
    10. 'n' → logprob: -13.278669357299805

Token 683: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.0163758993148804
    2. '_' → logprob: -1.7663758993148804
    3. ' in' → logprob: -1.7663758993148804
    4. ' range' → logprob: -2.51637601852417
    5. ' j' → logprob: -2.51637601852417
    6. 'range' → logprob: -2.64137601852417
    7. '_j' → logprob: -3.26637601852417
    8. 'in' → logprob: -4.26637601852417
    9. 'i' → logprob: -5.26637601852417
    10. '_range' → logprob: -5.76637601852417

Token 684: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.20195509493350983
    2. ' in' → logprob: -1.7019550800323486
    3. 'range' → logprob: -7.576955318450928
    4. 'for' → logprob: -10.82695484161377
    5. '(range' → logprob: -13.07695484161377
    6. '	in' → logprob: -13.45195484161377
    7. '(in' → logprob: -13.57695484161377
    8. 'n' → logprob: -13.82695484161377
    9. ' ' → logprob: -14.20195484161377
    10. ' range' → logprob: -14.45195484161377

Token 685: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007099286303855479
    2. ' range' → logprob: -7.2507100105285645
    3. '(range' → logprob: -17.000709533691406
    4. ' ' → logprob: -18.750709533691406
    5. 'in' → logprob: -18.875709533691406
    6. 'm' → logprob: -19.250709533691406
    7. 'ran' → logprob: -20.375709533691406
    8. '	range' → logprob: -20.625709533691406
    9. '   ' → logprob: -20.750709533691406
    10. ')' → logprob: -20.750709533691406

Token 686: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.01108484622091055
    2. 'm' → logprob: -4.511085033416748
    3. ' (' → logprob: -10.51108455657959
    4. '[m' → logprob: -12.26108455657959
    5. '(' → logprob: -12.63608455657959
    6. '   ' → logprob: -14.76108455657959
    7. ' m' → logprob: -14.88608455657959
    8. '(M' → logprob: -15.88608455657959
    9. '
' → logprob: -16.136085510253906
    10. '{' → logprob: -16.261085510253906

Token 687: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.4987974029500037e-05
    2. ')]' → logprob: -10.750024795532227
    3. ' +' → logprob: -13.000024795532227
    4. '+n' → logprob: -14.500024795532227
    5. ')' → logprob: -14.750024795532227
    6. '1' → logprob: -16.125024795532227
    7. '+m' → logprob: -16.625024795532227
    8. ')])' → logprob: -17.000024795532227
    9. '+j' → logprob: -17.750024795532227
    10. '+
' → logprob: -17.875024795532227

Token 688: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. '+' → logprob: -13.87500286102295
    3. ' ' → logprob: -14.00000286102295
    4. '2' → logprob: -14.25000286102295
    5. '
' → logprob: -14.62500286102295
    6. '   ' → logprob: -16.812503814697266
    7. '0' → logprob: -17.062503814697266
    8. ')' → logprob: -17.062503814697266
    9. '```' → logprob: -17.500003814697266
    10. 'm' → logprob: -17.562503814697266

Token 689: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.20572739839553833
    2. ']' → logprob: -1.7057273387908936
    3. ')' → logprob: -5.455727577209473
    4. '+' → logprob: -11.080727577209473
    5. ']]' → logprob: -11.455727577209473
    6. ' ]' → logprob: -13.080727577209473
    7. ')]
' → logprob: -13.205727577209473
    8. '])' → logprob: -13.455727577209473
    9. ']
' → logprob: -14.080727577209473
    10. '}]' → logprob: -15.830727577209473

Token 690: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5759889483451843
    2. 'for' → logprob: -0.8259889483451843
    3. ']' → logprob: -10.32598876953125
    4. ' ' → logprob: -11.70098876953125
    5. ' in' → logprob: -12.45098876953125
    6. 'in' → logprob: -13.20098876953125
    7. '	for' → logprob: -13.70098876953125
    8. '   ' → logprob: -13.95098876953125
    9. ' ]' → logprob: -14.70098876953125
    10. '  ' → logprob: -15.95098876953125

Token 691: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1921611875295639
    2. 'i' → logprob: -2.4421610832214355
    3. ' range' → logprob: -2.4421610832214355
    4. ' i' → logprob: -7.1921610832214355
    5. ' in' → logprob: -9.567161560058594
    6. 'in' → logprob: -9.817161560058594
    7. ' ' → logprob: -13.317161560058594
    8. '_' → logprob: -13.817161560058594
    9. '(range' → logprob: -15.317161560058594
    10. '  ' → logprob: -15.317161560058594

Token 692: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.160366490483284
    2. 'in' → logprob: -1.9103665351867676
    3. 'range' → logprob: -8.91036605834961
    4. ' range' → logprob: -13.41036605834961
    5. 'for' → logprob: -13.66036605834961
    6. ' ' → logprob: -13.66036605834961
    7. '(range' → logprob: -13.78536605834961
    8. 'n' → logprob: -14.03536605834961
    9. '(n' → logprob: -14.41036605834961
    10. '	in' → logprob: -15.28536605834961

Token 693: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03861340507864952
    2. ' range' → logprob: -3.2886133193969727
    3. '(n' → logprob: -7.788613319396973
    4. '(range' → logprob: -8.788613319396973
    5. 'n' → logprob: -12.288613319396973
    6. ' ' → logprob: -15.913613319396973
    7. '[n' → logprob: -16.28861427307129
    8. ' (' → logprob: -16.78861427307129
    9. ' in' → logprob: -18.03861427307129
    10. '   ' → logprob: -18.03861427307129

Token 694: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00033784625702537596
    2. 'n' → logprob: -8.000337600708008
    3. '(' → logprob: -13.250337600708008
    4. ' (' → logprob: -15.000337600708008
    5. '
' → logprob: -16.125337600708008
    6. '[n' → logprob: -16.375337600708008
    7. '   ' → logprob: -17.375337600708008
    8. ' n' → logprob: -17.375337600708008
    9. '```' → logprob: -17.750337600708008
    10. '(len' → logprob: -18.250337600708008

Token 695: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.9027791495318525e-05
    2. '1' → logprob: -11.500019073486328
    3. ')]' → logprob: -12.375019073486328
    4. '+
' → logprob: -12.500019073486328
    5. ' +' → logprob: -14.875019073486328
    6. ')])' → logprob: -15.000019073486328
    7. '
' → logprob: -15.750019073486328
    8. ')]
' → logprob: -17.000019073486328
    9. ')][' → logprob: -17.125019073486328
    10. ')],' → logprob: -17.750019073486328

Token 696: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -12.625004768371582
    3. '2' → logprob: -14.500004768371582
    4. 'n' → logprob: -15.812504768371582
    5. '
' → logprob: -16.187503814697266
    6. '0' → logprob: -16.437503814697266
    7. '   ' → logprob: -16.687503814697266
    8. '۱' → logprob: -16.875003814697266
    9. '１' → logprob: -16.875003814697266
    10. '```' → logprob: -17.562503814697266

Token 697: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10041649639606476
    2. ')]' → logprob: -2.350416421890259
    3. ']
' → logprob: -8.85041618347168
    4. ' ]' → logprob: -10.22541618347168
    5. ')' → logprob: -11.47541618347168
    6. ')]
' → logprob: -11.60041618347168
    7. ']]' → logprob: -12.72541618347168
    8. '])' → logprob: -13.35041618347168
    9. '>]' → logprob: -13.47541618347168
    10. '   ' → logprob: -13.97541618347168

Token 698: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00033593899570405483
    2. ' for' → logprob: -8.000335693359375
    3. 'i' → logprob: -14.500335693359375
    4. '   ' → logprob: -17.250335693359375
    5. '	for' → logprob: -17.500335693359375
    6. '```' → logprob: -19.375335693359375
    7. 'f' → logprob: -19.750335693359375
    8. '
' → logprob: -20.375335693359375
    9. '#' → logprob: -22.250335693359375
    10. ' i' → logprob: -22.375335693359375

Token 699: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2519306540489197
    2. ' i' → logprob: -1.5019307136535645
    3. '	i' → logprob: -13.501930236816406
    4. ' in' → logprob: -16.376930236816406
    5. '_i' → logprob: -17.126930236816406
    6. '   ' → logprob: -17.376930236816406
    7. ' ' → logprob: -17.626930236816406
    8. 'I' → logprob: -18.501930236816406
    9. '_' → logprob: -18.876930236816406
    10. 'range' → logprob: -18.876930236816406

Token 700: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1002492681145668
    2. 'in' → logprob: -2.3502492904663086
    3. 'range' → logprob: -10.725249290466309
    4. ' ' → logprob: -11.975249290466309
    5. 'n' → logprob: -12.850249290466309
    6. '  ' → logprob: -12.975249290466309
    7. '	in' → logprob: -12.975249290466309
    8. '1' → logprob: -12.975249290466309
    9. '   ' → logprob: -13.475249290466309
    10. ' i' → logprob: -14.225249290466309

Token 701: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00861456897109747
    2. ' range' → logprob: -4.758614540100098
    3. ' ' → logprob: -17.133615493774414
    4. 'in' → logprob: -17.883615493774414
    5. '(range' → logprob: -18.258615493774414
    6. '1' → logprob: -18.758615493774414
    7. ' in' → logprob: -18.758615493774414
    8. '	range' → logprob: -19.508615493774414
    9. '  ' → logprob: -19.633615493774414
    10. '   ' → logprob: -19.758615493774414

Token 702: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005728152114897966
    2. ' range' → logprob: -5.255728244781494
    3. '(n' → logprob: -8.005727767944336
    4. '(range' → logprob: -8.755727767944336
    5. 'n' → logprob: -13.255727767944336
    6. '(' → logprob: -13.630727767944336
    7. 'in' → logprob: -16.255727767944336
    8. '	range' → logprob: -16.880727767944336
    9. '1' → logprob: -17.005727767944336
    10. ' ' → logprob: -17.880727767944336

Token 703: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0001483564410591498
    2. ' +' → logprob: -9.75014877319336
    3. '):
' → logprob: -10.25014877319336
    4. '1' → logprob: -11.00014877319336
    5. '):' → logprob: -11.12514877319336
    6. '+
' → logprob: -11.62514877319336
    7. '   ' → logprob: -12.37514877319336
    8. ')' → logprob: -12.62514877319336
    9. '
' → logprob: -12.75014877319336
    10. ' ' → logprob: -12.87514877319336

Token 704: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. 'm' → logprob: -14.750000953674316
    3. '0' → logprob: -15.125000953674316
    4. ' ' → logprob: -15.375000953674316
    5. '+' → logprob: -15.500000953674316
    6. '2' → logprob: -15.875000953674316
    7. 'range' → logprob: -16.625001907348633
    8. ')' → logprob: -17.125001907348633
    9. 'n' → logprob: -17.500001907348633
    10. '   ' → logprob: -17.750001907348633

Token 705: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2520771324634552
    2. '):' → logprob: -1.5020771026611328
    3. ':' → logprob: -9.877077102661133
    4. '):
' → logprob: -10.127077102661133
    5. 'for' → logprob: -11.002077102661133
    6. '   ' → logprob: -11.127077102661133
    7. ')' → logprob: -11.377077102661133
    8. ':
' → logprob: -12.502077102661133
    9. ' ):
' → logprob: -12.877077102661133
    10. ']:' → logprob: -13.627077102661133

Token 706: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0438736192882061
    2. ' for' → logprob: -3.2938735485076904
    3. '	for' → logprob: -5.5438737869262695
    4. 'for' → logprob: -6.6688737869262695
    5. ' j' → logprob: -7.6688737869262695
    6. '	j' → logprob: -9.16887378692627
    7. ' ' → logprob: -10.54387378692627
    8. 'j' → logprob: -11.54387378692627
    9. ' range' → logprob: -12.16887378692627
    10. ' s' → logprob: -12.66887378692627

Token 707: ' dp' (ID: 21546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007928838022053242
    2. '   ' → logprob: -5.007928848266602
    3. ' for' → logprob: -6.757928848266602
    4. 'range' → logprob: -10.007928848266602
    5. ' range' → logprob: -12.882928848266602
    6. 'print' → logprob: -13.257928848266602
    7. '	for' → logprob: -13.632928848266602
    8. ' ' → logprob: -15.132928848266602
    9. '       ' → logprob: -15.632928848266602
    10. 'i' → logprob: -17.2579288482666

Token 708: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.580929347255733e-05
    2. 'i' → logprob: -12.125016212463379
    3. '][' → logprob: -12.500016212463379
    4. '[' → logprob: -12.625016212463379
    5. 'for' → logprob: -13.125016212463379
    6. '   ' → logprob: -15.125016212463379
    7. ' [' → logprob: -15.375016212463379
    8. ' i' → logprob: -15.625016212463379
    9. '
' → logprob: -15.875016212463379
    10. '[
' → logprob: -16.000015258789062

Token 709: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006176044698804617
    2. '[' → logprob: -7.750617504119873
    3. ']' → logprob: -9.375617980957031
    4. '[i' → logprob: -9.625617980957031
    5. ')][' → logprob: -11.875617980957031
    6. ')[' → logprob: -12.500617980957031
    7. '][:' → logprob: -12.875617980957031
    8. '][-' → logprob: -12.875617980957031
    9. '][]' → logprob: -13.000617980957031
    10. ' ][' → logprob: -13.000617980957031

Token 710: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02492174506187439
    2. 'm' → logprob: -4.149921894073486
    3. 'j' → logprob: -4.774921894073486
    4. '1' → logprob: -7.899921894073486
    5. 'range' → logprob: -11.024921417236328
    6. 'i' → logprob: -11.524921417236328
    7. '   ' → logprob: -12.774921417236328
    8. ' ' → logprob: -13.149921417236328
    9. '
' → logprob: -13.524921417236328
    10. ']' → logprob: -13.524921417236328

Token 711: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03391976282000542
    2. '=' → logprob: -4.033919811248779
    3. ']=' → logprob: -4.158919811248779
    4. ' =' → logprob: -11.033919334411621
    5. ' ]' → logprob: -12.783919334411621
    6. '0' → logprob: -13.533919334411621
    7. ')' → logprob: -14.658919334411621
    8. '[' → logprob: -15.658919334411621
    9. '   ' → logprob: -15.908919334411621
    10. ']+=' → logprob: -16.408920288085938

Token 712: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007100477814674377
    2. ' =' → logprob: -7.2507100105285645
    3. '=
' → logprob: -17.000709533691406
    4. '=i' → logprob: -17.000709533691406
    5. '0' → logprob: -19.750709533691406
    6. ']=' → logprob: -19.750709533691406
    7. ' =
' → logprob: -20.500709533691406
    8. '[' → logprob: -20.625709533691406
    9. ')=' → logprob: -20.625709533691406
    10. ' ' → logprob: -20.875709533691406

Token 713: ' i' (ID: 575)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6932064294815063
    2. 'i' → logprob: -0.6932064294815063
    3. ' i' → logprob: -10.068206787109375
    4. ' ' → logprob: -11.068206787109375
    5. '	i' → logprob: -14.443206787109375
    6. '1' → logprob: -15.318206787109375
    7. ''i' → logprob: -16.693206787109375
    8. '{i' → logprob: -16.693206787109375
    9. '[i' → logprob: -16.943206787109375
    10. '_i' → logprob: -17.068206787109375

Token 714: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 715: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16027672588825226
    2. ' for' → logprob: -1.9102767705917358
    3. '<|end|>' → logprob: -10.660276412963867
    4. ' ' → logprob: -10.785276412963867
    5. '
' → logprob: -12.410276412963867
    6. '   ' → logprob: -13.285276412963867
    7. '```' → logprob: -14.410276412963867
    8. ' 
' → logprob: -14.410276412963867
    9. '	for' → logprob: -15.160276412963867
    10. 'i' → logprob: -15.660276412963867

Token 716: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6141610741615295
    2. 'range' → logprob: -0.8641610741615295
    3. ' j' → logprob: -3.8641610145568848
    4. ' range' → logprob: -4.114161014556885
    5. ' in' → logprob: -9.614161491394043
    6. 'in' → logprob: -9.739161491394043
    7. 'i' → logprob: -9.989161491394043
    8. 'm' → logprob: -12.239161491394043
    9. 's' → logprob: -13.614161491394043
    10. ' ' → logprob: -14.864161491394043

Token 717: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0365808866918087
    2. ' in' → logprob: -3.661580801010132
    3. 'range' → logprob: -4.661581039428711
    4. '(' → logprob: -7.411581039428711
    5. ' range' → logprob: -9.161581039428711
    6. '(range' → logprob: -10.536581039428711
    7. 'n' → logprob: -11.536581039428711
    8. ' ' → logprob: -11.911581039428711
    9. '   ' → logprob: -12.036581039428711
    10. '
' → logprob: -12.411581039428711

Token 718: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.037966884672641754
    2. '(m' → logprob: -3.7879669666290283
    3. '(range' → logprob: -4.287966728210449
    4. ' range' → logprob: -7.037966728210449
    5. 'm' → logprob: -12.91296672821045
    6. '(' → logprob: -15.53796672821045
    7. ' (' → logprob: -16.162967681884766
    8. 'Range' → logprob: -16.787967681884766
    9. '
' → logprob: -17.162967681884766
    10. 'rang' → logprob: -17.412967681884766

Token 719: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.004511173814535141
    2. 'range' → logprob: -5.50451135635376
    3. '(range' → logprob: -8.004510879516602
    4. '(' → logprob: -9.379510879516602
    5. ' range' → logprob: -11.629510879516602
    6. 'm' → logprob: -12.379510879516602
    7. ' (' → logprob: -14.504510879516602
    8. '1' → logprob: -15.004510879516602
    9. 'Range' → logprob: -15.879510879516602
    10. '
' → logprob: -16.3795108795166

Token 720: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.7835754988482222e-05
    2. '1' → logprob: -11.000018119812012
    3. ' +' → logprob: -14.750018119812012
    4. '+
' → logprob: -15.250018119812012
    5. '```' → logprob: -15.375018119812012
    6. '(' → logprob: -16.000017166137695
    7. '()+' → logprob: -16.875017166137695
    8. '+j' → logprob: -17.375017166137695
    9. '0' → logprob: -18.000017166137695
    10. '﻿' → logprob: -18.625017166137695

Token 721: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014132341311778873
    2. '+' → logprob: -8.875141143798828
    3. ' ' → logprob: -14.250141143798828
    4. '0' → logprob: -15.000141143798828
    5. '```' → logprob: -16.250141143798828
    6. 'j' → logprob: -16.750141143798828
    7. '   ' → logprob: -17.500141143798828
    8. '
' → logprob: -17.500141143798828
    9. '+
' → logprob: -18.000141143798828
    10. '+)' → logprob: -18.125141143798828

Token 722: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.38778388500213623
    2. '):' → logprob: -1.1377838850021362
    3. ':' → logprob: -7.262784004211426
    4. ':
' → logprob: -9.512784004211426
    5. '):
' → logprob: -9.637784004211426
    6. ')' → logprob: -10.762784004211426
    7. ']:' → logprob: -11.262784004211426
    8. '   ' → logprob: -11.512784004211426
    9. ']:
' → logprob: -11.762784004211426
    10. ' ' → logprob: -12.137784004211426

Token 723: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008478998206555843
    2. ' dp' → logprob: -5.258479118347168
    3. 'dp' → logprob: -6.258479118347168
    4. '	dp' → logprob: -6.633479118347168
    5. '(dp' → logprob: -12.383479118347168
    6. '       ' → logprob: -12.383479118347168
    7. ' ' → logprob: -14.008479118347168
    8. '_dp' → logprob: -14.758479118347168
    9. '  ' → logprob: -15.133479118347168
    10. '    ' → logprob: -15.758479118347168

Token 724: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -9.698698704596609e-05
    2. ' dp' → logprob: -9.250097274780273
    3. '   ' → logprob: -15.000097274780273
    4. '	dp' → logprob: -15.375097274780273
    5. 'j' → logprob: -15.750097274780273
    6. 'dj' → logprob: -16.750097274780273
    7. '0' → logprob: -17.375097274780273
    8. '(dp' → logprob: -17.750097274780273
    9. '[' → logprob: -18.000097274780273
    10. '[j' → logprob: -18.125097274780273

Token 725: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00038407891406677663
    2. '[j' → logprob: -7.8753838539123535
    3. '0' → logprob: -13.125384330749512
    4. '][' → logprob: -13.375384330749512
    5. 'j' → logprob: -15.875384330749512
    6. ' [' → logprob: -16.500383377075195
    7. '[
' → logprob: -16.875383377075195
    8. '```' → logprob: -17.250383377075195
    9. '[m' → logprob: -17.500383377075195
    10. '   ' → logprob: -17.750383377075195

Token 726: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25604957342147827
    2. 'j' → logprob: -1.506049633026123
    3. '[' → logprob: -5.881049633026123
    4. '[j' → logprob: -6.631049633026123
    5. ' j' → logprob: -14.381049156188965
    6. '
' → logprob: -15.131049156188965
    7. ' ' → logprob: -15.881049156188965
    8. '][' → logprob: -16.25605010986328
    9. '   ' → logprob: -16.75605010986328
    10. ' [' → logprob: -16.88105010986328

Token 727: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.008447675965726376
    2. '][' → logprob: -5.008447647094727
    3. '[' → logprob: -6.383447647094727
    4. '[js' → logprob: -10.883447647094727
    5. ')[' → logprob: -12.133447647094727
    6. '>[' → logprob: -12.883447647094727
    7. '[i' → logprob: -13.008447647094727
    8. '[user' → logprob: -13.008447647094727
    9. '"][' → logprob: -13.383447647094727
    10. '<|end|>' → logprob: -14.008447647094727

Token 728: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.7697225252486533e-06
    2. '[j' → logprob: -12.625003814697266
    3. ' j' → logprob: -15.000003814697266
    4. '(j' → logprob: -18.625003814697266
    5. '   ' → logprob: -18.875003814697266
    6. ':j' → logprob: -18.875003814697266
    7. '$j' → logprob: -19.000003814697266
    8. '
' → logprob: -19.125003814697266
    9. ' ' → logprob: -19.125003814697266
    10. '	j' → logprob: -19.500003814697266

Token 729: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.047662608325481415
    2. '=' → logprob: -3.1726624965667725
    3. ']=' → logprob: -5.672662734985352
    4. ' =' → logprob: -6.797662734985352
    5. ' ]' → logprob: -9.672662734985352
    6. '=j' → logprob: -10.922662734985352
    7. ')' → logprob: -11.422662734985352
    8. '<|end|>' → logprob: -13.922662734985352
    9. '']' → logprob: -14.172662734985352
    10. ' ' → logprob: -14.422662734985352

Token 730: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0025716139934957027
    2. ' =' → logprob: -6.0025715827941895
    3. '=j' → logprob: -9.252572059631348
    4. '=
' → logprob: -18.12757110595703
    5. '=i' → logprob: -18.87757110595703
    6. '＝' → logprob: -19.50257110595703
    7. '=k' → logprob: -19.62757110595703
    8. '=int' → logprob: -19.87757110595703
    9. '=s' → logprob: -20.00257110595703
    10. '=b' → logprob: -20.25257110595703

Token 731: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.5491004129871726e-05
    2. ' j' → logprob: -10.000045776367188
    3. '	j' → logprob: -18.500045776367188
    4. '0' → logprob: -19.250045776367188
    5. '[j' → logprob: -21.500045776367188
    6. '$j' → logprob: -21.875045776367188
    7. '_j' → logprob: -22.625045776367188
    8. ',j' → logprob: -22.750045776367188
    9. 'jm' → logprob: -23.125045776367188
    10. ' ' → logprob: -23.250045776367188

Token 732: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013300929218530655
    2. ' for' → logprob: -4.388300895690918
    3. '
' → logprob: -7.513300895690918
    4. '<|end|>' → logprob: -8.888300895690918
    5. '	for' → logprob: -9.513300895690918
    6. '   ' → logprob: -10.388300895690918
    7. ' 
' → logprob: -14.513300895690918
    8. ' ' → logprob: -14.888300895690918
    9. '    
' → logprob: -15.013300895690918
    10. '\n' → logprob: -15.013300895690918

Token 733: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008631822653114796
    2. ' for' → logprob: -4.758631706237793
    3. '
' → logprob: -12.508631706237793
    4. '   ' → logprob: -12.633631706237793
    5. ' ' → logprob: -12.883631706237793
    6. '	for' → logprob: -13.008631706237793
    7. 'i' → logprob: -13.008631706237793
    8. '```' → logprob: -13.008631706237793
    9. 'f' → logprob: -14.883631706237793
    10. ' 
' → logprob: -15.258631706237793

Token 734: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014387380331754684
    2. ' i' → logprob: -4.264387607574463
    3. ' range' → logprob: -8.764387130737305
    4. 'range' → logprob: -10.139387130737305
    5. ' in' → logprob: -10.764387130737305
    6. 'in' → logprob: -11.889387130737305
    7. '1' → logprob: -16.389387130737305
    8. ' ' → logprob: -16.764387130737305
    9. '   ' → logprob: -18.764387130737305
    10. 'int' → logprob: -19.264387130737305

Token 735: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3132856786251068
    2. 'in' → logprob: -1.3132857084274292
    3. '1' → logprob: -11.313285827636719
    4. ' ' → logprob: -12.188285827636719
    5. 'range' → logprob: -12.438285827636719
    6. '	in' → logprob: -14.688285827636719
    7. '  ' → logprob: -14.813285827636719
    8. '```' → logprob: -15.188285827636719
    9. '   ' → logprob: -15.313285827636719
    10. '
' → logprob: -15.313285827636719

Token 736: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011833232128992677
    2. ' range' → logprob: -6.75118350982666
    3. '(range' → logprob: -11.62618350982666
    4. '1' → logprob: -12.62618350982666
    5. '(n' → logprob: -14.12618350982666
    6. '(' → logprob: -15.62618350982666
    7. 'n' → logprob: -18.001182556152344
    8. 'rang' → logprob: -18.376182556152344
    9. ' ' → logprob: -19.251182556152344
    10. '	range' → logprob: -19.376182556152344

Token 737: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007157695363275707
    2. '(n' → logprob: -7.250715732574463
    3. '1' → logprob: -12.125716209411621
    4. 'range' → logprob: -15.250716209411621
    5. 'n' → logprob: -17.250715255737305
    6. ' (' → logprob: -17.375715255737305
    7. '(range' → logprob: -17.875715255737305
    8. ' ' → logprob: -19.750715255737305
    9. '
' → logprob: -20.250715255737305
    10. '(
' → logprob: -20.250715255737305

Token 738: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04932191222906113
    2. '1' → logprob: -3.0493218898773193
    3. 'range' → logprob: -7.299322128295898
    4. '(n' → logprob: -10.049322128295898
    5. ' n' → logprob: -11.299322128295898
    6. ' range' → logprob: -13.674322128295898
    7. '(' → logprob: -14.049322128295898
    8. ' ' → logprob: -14.799322128295898
    9. '   ' → logprob: -16.2993221282959
    10. '
' → logprob: -17.0493221282959

Token 739: ',n' (ID: 18103)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03989052027463913
    2. 'range' → logprob: -3.6648905277252197
    3. 'in' → logprob: -4.914890289306641
    4. 'n' → logprob: -6.664890289306641
    5. ' range' → logprob: -6.789890289306641
    6. ' in' → logprob: -7.039890289306641
    7. 'for' → logprob: -7.289890289306641
    8. ',n' → logprob: -7.664890289306641
    9. '(' → logprob: -7.789890289306641
    10. '
' → logprob: -8.03989028930664

Token 740: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.0219828002154827e-05
    2. '1' → logprob: -11.250020027160645
    3. '+
' → logprob: -12.625020027160645
    4. ' +' → logprob: -12.750020027160645
    5. '+)' → logprob: -14.750020027160645
    6. ')+' → logprob: -15.625020027160645
    7. '+j' → logprob: -16.12502098083496
    8. '+i' → logprob: -16.37502098083496
    9. '+m' → logprob: -17.37502098083496
    10. ')' → logprob: -17.50002098083496

Token 741: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.625000953674316
    3. ')' → logprob: -15.625000953674316
    4. '
' → logprob: -15.750000953674316
    5. '+' → logprob: -16.250001907348633
    6. '   ' → logprob: -16.250001907348633
    7. '```' → logprob: -17.125001907348633
    8. 'j' → logprob: -18.125001907348633
    9. '):
' → logprob: -18.250001907348633
    10. '2' → logprob: -18.875001907348633

Token 742: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.33133116364479065
    2. ':' → logprob: -1.3313311338424683
    3. '):
' → logprob: -4.081331253051758
    4. '   ' → logprob: -7.831331253051758
    5. ':
' → logprob: -7.956331253051758
    6. ')' → logprob: -8.831331253051758
    7. ']:' → logprob: -10.331331253051758
    8. ',' → logprob: -10.331331253051758
    9. ' :' → logprob: -11.206331253051758
    10. ' ' → logprob: -11.581331253051758

Token 743: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3159809708595276
    2. ' for' → logprob: -1.3159809112548828
    3. 'for' → logprob: -5.940980911254883
    4. '	for' → logprob: -9.440980911254883
    5. ' ' → logprob: -12.065980911254883
    6. '```' → logprob: -15.690980911254883
    7. '<|end|>' → logprob: -15.940980911254883
    8. '       ' → logprob: -16.065980911254883
    9. '   ' → logprob: -16.190980911254883
    10. '_for' → logprob: -16.690980911254883

Token 744: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005414231214672327
    2. ' for' → logprob: -5.255414009094238
    3. '   ' → logprob: -8.630414009094238
    4. '	for' → logprob: -13.380414009094238
    5. ' ' → logprob: -15.630414009094238
    6. 'j' → logprob: -18.755414962768555
    7. '_for' → logprob: -18.880414962768555
    8. '  ' → logprob: -18.880414962768555
    9. '```' → logprob: -20.255414962768555
    10. 'f' → logprob: -20.505414962768555

Token 745: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.006727445870637894
    2. ' j' → logprob: -5.00672721862793
    3. '1' → logprob: -12.00672721862793
    4. 'range' → logprob: -12.38172721862793
    5. '   ' → logprob: -14.38172721862793
    6. ' ' → logprob: -14.75672721862793
    7. ' range' → logprob: -15.13172721862793
    8. '	j' → logprob: -15.25672721862793
    9. '0' → logprob: -16.50672721862793
    10. ' in' → logprob: -16.63172721862793

Token 746: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.48724937438964844
    2. ' in' → logprob: -0.9872493743896484
    3. '(' → logprob: -4.362249374389648
    4. 'range' → logprob: -8.612249374389648
    5. ' (' → logprob: -9.237249374389648
    6. ' range' → logprob: -10.237249374389648
    7. '   ' → logprob: -11.862249374389648
    8. ' ' → logprob: -11.862249374389648
    9. 'for' → logprob: -13.487249374389648
    10. '(in' → logprob: -13.487249374389648

Token 747: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006838156376034021
    2. ' range' → logprob: -5.006838321685791
    3. '(' → logprob: -9.256837844848633
    4. '(range' → logprob: -10.506837844848633
    5. '   ' → logprob: -18.381837844848633
    6. '1' → logprob: -18.756837844848633
    7. '	range' → logprob: -19.506837844848633
    8. '(m' → logprob: -20.006837844848633
    9. ' ' → logprob: -20.381837844848633
    10. '
' → logprob: -20.381837844848633

Token 748: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010282796574756503
    2. '(m' → logprob: -9.500102996826172
    3. '1' → logprob: -10.500102996826172
    4. 'range' → logprob: -15.375102996826172
    5. 'm' → logprob: -15.875102996826172
    6. ' (' → logprob: -16.750102996826172
    7. '   ' → logprob: -17.750102996826172
    8. '(
' → logprob: -18.750102996826172
    9. ' range' → logprob: -19.375102996826172
    10. '
' → logprob: -19.625102996826172

Token 749: '1' (ID: 16)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.007637273985892534
    2. '1' → logprob: -4.8826375007629395
    3. '(m' → logprob: -10.882637023925781
    4. '   ' → logprob: -11.757637023925781
    5. ' m' → logprob: -12.757637023925781
    6. '
' → logprob: -14.382637023925781
    7. '(' → logprob: -14.507637023925781
    8. '	m' → logprob: -15.882637023925781
    9. ' ' → logprob: -16.00763702392578
    10. '0' → logprob: -16.25763702392578

Token 750: ',m' (ID: 26648)
  Prédit: ',m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',m' → logprob: -0.7682285308837891
    2. '(m' → logprob: -1.018228530883789
    3. 'm' → logprob: -1.768228530883789
    4. ',' → logprob: -5.518228530883789
    5. '   ' → logprob: -8.768228530883789
    6. 'range' → logprob: -9.893228530883789
    7. ',(' → logprob: -11.268228530883789
    8. '
' → logprob: -11.268228530883789
    9. '[m' → logprob: -11.268228530883789
    10. ':m' → logprob: -11.518228530883789

Token 751: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.723973582556937e-05
    2. '1' → logprob: -11.625017166137695
    3. '+j' → logprob: -12.250017166137695
    4. ' +' → logprob: -13.875017166137695
    5. 'j' → logprob: -14.125017166137695
    6. '+)' → logprob: -14.750017166137695
    7. '+
' → logprob: -14.875017166137695
    8. '+m' → logprob: -14.875017166137695
    9. ')+' → logprob: -15.000017166137695
    10. ')' → logprob: -15.625017166137695

Token 752: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00037144700763747096
    2. '+' → logprob: -8.000370979309082
    3. 'j' → logprob: -10.250370979309082
    4. ' ' → logprob: -14.875370979309082
    5. '   ' → logprob: -15.875370979309082
    6. '```' → logprob: -16.2503719329834
    7. ')' → logprob: -17.2503719329834
    8. '
' → logprob: -17.2503719329834
    9. '+j' → logprob: -18.2503719329834
    10. ' +' → logprob: -18.2503719329834

Token 753: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016633879393339157
    2. '       ' → logprob: -4.391633987426758
    3. '):' → logprob: -6.016633987426758
    4. ':
' → logprob: -6.766633987426758
    5. '):
' → logprob: -8.641633987426758
    6. ',' → logprob: -8.891633987426758
    7. '<|end|>' → logprob: -9.641633987426758
    8. ' :' → logprob: -10.016633987426758
    9. '   ' → logprob: -10.766633987426758
    10. ')' → logprob: -10.766633987426758

Token 754: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011160066351294518
    2. '	' → logprob: -4.886159896850586
    3. ' if' → logprob: -6.386159896850586
    4. '   ' → logprob: -7.511159896850586
    5. '     ' → logprob: -7.886159896850586
    6. '    ' → logprob: -8.011159896850586
    7. '	   ' → logprob: -8.261159896850586
    8. '           ' → logprob: -8.886159896850586
    9. '        ' → logprob: -10.136159896850586
    10. '      ' → logprob: -10.136159896850586

Token 755: ' cost' (ID: 3097)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0004049322451464832
    2. ' if' → logprob: -8.250405311584473
    3. '   ' → logprob: -9.250405311584473
    4. 'dp' → logprob: -10.125405311584473
    5. '       ' → logprob: -11.875405311584473
    6. '	if' → logprob: -15.750405311584473
    7. ' ' → logprob: -16.250404357910156
    8. '           ' → logprob: -16.250404357910156
    9. '     ' → logprob: -16.625404357910156
    10. '    ' → logprob: -17.000404357910156

Token 756: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693944573402405
    2. ' =' → logprob: -2.126939535140991
    3. 'if' → logprob: -12.87693977355957
    4. '_' → logprob: -13.37693977355957
    5. ' if' → logprob: -13.37693977355957
    6. '	' → logprob: -13.50193977355957
    7. '=int' → logprob: -14.25193977355957
    8. '	if' → logprob: -14.75193977355957
    9. '=
' → logprob: -14.87693977355957
    10. ' =
' → logprob: -14.87693977355957

Token 757: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0038158686365932226
    2. ' ' → logprob: -5.628815650939941
    3. '1' → logprob: -8.503815650939941
    4. '(' → logprob: -11.878815650939941
    5. ' (' → logprob: -13.128815650939941
    6. 'int' → logprob: -13.503815650939941
    7. 's' → logprob: -13.878815650939941
    8. '   ' → logprob: -14.128815650939941
    9. '  ' → logprob: -15.628815650939941
    10. '(int' → logprob: -15.878815650939941

Token 758: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001566876657307148
    2. '1' → logprob: -6.6265668869018555
    3. ' ' → logprob: -8.376566886901855
    4. '(' → logprob: -12.251566886901855
    5. 'int' → logprob: -13.001566886901855
    6. 's' → logprob: -13.626566886901855
    7. 'dp' → logprob: -14.001566886901855
    8. '   ' → logprob: -15.001566886901855
    9. '
' → logprob: -15.376566886901855
    10. ' (' → logprob: -15.626566886901855

Token 759: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03124188631772995
    2. 'if' → logprob: -3.7812418937683105
    3. '<|end|>' → logprob: -5.2812418937683105
    4. '
' → logprob: -6.5312418937683105
    5. '	if' → logprob: -6.9062418937683105
    6. '       ' → logprob: -8.406241416931152
    7. ' ' → logprob: -9.531241416931152
    8. '   ' → logprob: -11.031241416931152
    9. ';if' → logprob: -11.406241416931152
    10. '<|end|>' → logprob: -11.406241416931152

Token 760: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0003410647332202643
    2. ' s' → logprob: -8.000341415405273
    3. '(s' → logprob: -12.125341415405273
    4. ' ' → logprob: -16.375341415405273
    5. '   ' → logprob: -17.000341415405273
    6. '<s' → logprob: -18.750341415405273
    7. '{s' → logprob: -18.875341415405273
    8. '  ' → logprob: -19.125341415405273
    9. '	s' → logprob: -19.250341415405273
    10. '_s' → logprob: -19.375341415405273

Token 761: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. 's' → logprob: -13.875000953674316
    3. '2' → logprob: -17.250001907348633
    4. '[i' → logprob: -19.000001907348633
    5. '１' → logprob: -19.375001907348633
    6. ' s' → logprob: -19.625001907348633
    7. '
' → logprob: -19.750001907348633
    8. '_s' → logprob: -20.750001907348633
    9. '[s' → logprob: -20.750001907348633
    10. '```' → logprob: -20.750001907348633

Token 762: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.7432603272027336e-06
    2. '[j' → logprob: -14.250001907348633
    3. 'i' → logprob: -14.750001907348633
    4. '[
' → logprob: -14.750001907348633
    5. '[' → logprob: -16.125001907348633
    6. '[I' → logprob: -16.875001907348633
    7. '
' → logprob: -17.125001907348633
    8. '```' → logprob: -17.250001907348633
    9. '==' → logprob: -19.500001907348633
    10. '{i' → logprob: -20.000001907348633

Token 763: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001105762057704851
    2. ' -' → logprob: -9.125110626220703
    3. ']' → logprob: -14.000110626220703
    4. '[' → logprob: -15.625110626220703
    5. '[j' → logprob: -15.750110626220703
    6. '][' → logprob: -16.250110626220703
    7. ']==' → logprob: -16.250110626220703
    8. '-
' → logprob: -16.625110626220703
    9. '−' → logprob: -16.875110626220703
    10. '[i' → logprob: -16.875110626220703

Token 764: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. 'j' → logprob: -13.62500286102295
    3. ' ' → logprob: -13.62500286102295
    4. '```' → logprob: -17.375001907348633
    5. '   ' → logprob: -17.750001907348633
    6. ']' → logprob: -18.000001907348633
    7. ' j' → logprob: -18.750001907348633
    8. '
' → logprob: -19.625001907348633
    9. '１' → logprob: -19.750001907348633
    10. '-' → logprob: -19.750001907348633

Token 765: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0029374060686677694
    2. ' ==' → logprob: -5.877937316894531
    3. '!=' → logprob: -9.377937316894531
    4. '=' → logprob: -10.877937316894531
    5. ']==' → logprob: -11.002937316894531
    6. '==
' → logprob: -11.377937316894531
    7. ')==' → logprob: -15.252937316894531
    8. ' !=' → logprob: -15.377937316894531
    9. '[' → logprob: -16.12793731689453
    10. ']' → logprob: -16.12793731689453

Token 766: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0004160145472269505
    2. ' ==' → logprob: -8.000415802001953
    3. '==
' → logprob: -10.125415802001953
    4. '!=' → logprob: -10.750415802001953
    5. '=' → logprob: -10.875415802001953
    6. ']==' → logprob: -16.375415802001953
    7. 'else' → logprob: -17.500415802001953
    8. '==(' → logprob: -17.625415802001953
    9. '[' → logprob: -17.750415802001953
    10. '===' → logprob: -17.875415802001953

Token 767: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -5.836499985889532e-05
    2. ' s' → logprob: -9.7500581741333
    3. ' ' → logprob: -18.000059127807617
    4. '<|end|>' → logprob: -20.250059127807617
    5. '   ' → logprob: -21.250059127807617
    6. '`s' → logprob: -21.375059127807617
    7. '  ' → logprob: -21.625059127807617
    8. '
' → logprob: -21.625059127807617
    9. '(s' → logprob: -21.875059127807617
    10. '_s' → logprob: -22.125059127807617

Token 768: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.4121114822482923e-06
    2. 's' → logprob: -13.125003814697266
    3. '-' → logprob: -14.000003814697266
    4. ' ' → logprob: -15.375003814697266
    5. '1' → logprob: -16.000003814697266
    6. '   ' → logprob: -16.500003814697266
    7. 'j' → logprob: -16.875003814697266
    8. '```' → logprob: -16.875003814697266
    9. '２' → logprob: -18.375003814697266
    10. 'user' → logprob: -18.750003814697266

Token 769: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0007600766839459538
    2. 'j' → logprob: -7.250760078430176
    3. '[' → logprob: -10.000760078430176
    4. '][' → logprob: -13.750760078430176
    5. ',j' → logprob: -13.875760078430176
    6. ' j' → logprob: -14.375760078430176
    7. '[
' → logprob: -14.500760078430176
    8. '	j' → logprob: -14.875760078430176
    9. '```' → logprob: -15.000760078430176
    10. '-' → logprob: -15.250760078430176

Token 770: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.696889623621246e-06
    2. '[' → logprob: -13.12500286102295
    3. ' -' → logprob: -14.62500286102295
    4. '1' → logprob: -16.000001907348633
    5. ']' → logprob: -17.750001907348633
    6. ' ' → logprob: -18.125001907348633
    7. '   ' → logprob: -18.625001907348633
    8. ']-' → logprob: -18.750001907348633
    9. '[-' → logprob: -18.875001907348633
    10. '−' → logprob: -19.000001907348633

Token 771: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001446611131541431
    2. '-' → logprob: -8.875144958496094
    3. ' ' → logprob: -12.625144958496094
    4. ']' → logprob: -14.625144958496094
    5. '   ' → logprob: -14.750144958496094
    6. '```' → logprob: -15.625144958496094
    7. '
' → logprob: -16.625144958496094
    8. '<|end|>' → logprob: -17.500144958496094
    9. '2' → logprob: -17.625144958496094
    10. '  ' → logprob: -17.750144958496094

Token 772: ']' (ID: 60)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.3134860098361969
    2. 'else' → logprob: -1.3134859800338745
    3. ')' → logprob: -8.813486099243164
    4. ']' → logprob: -9.813486099243164
    5. '        ' → logprob: -12.188486099243164
    6. '	else' → logprob: -12.313486099243164
    7. '<|end|>' → logprob: -12.813486099243164
    8. '       ' → logprob: -13.188486099243164
    9. ' ' → logprob: -13.688486099243164
    10. '
' → logprob: -13.813486099243164

Token 773: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.16028636693954468
    2. 'else' → logprob: -1.9102864265441895
    3. '       ' → logprob: -10.160285949707031
    4. '	else' → logprob: -11.035285949707031
    5. '        ' → logprob: -13.035285949707031
    6. '<|end|>' → logprob: -13.160285949707031
    7. ' ' → logprob: -14.535285949707031
    8. '	' → logprob: -14.785285949707031
    9. '		' → logprob: -15.035285949707031
    10. '0' → logprob: -15.160285949707031

Token 774: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004307884373702109
    2. ' ' → logprob: -7.750430583953857
    3. '   ' → logprob: -16.875431060791016
    4. '
' → logprob: -17.875431060791016
    5. 'cost' → logprob: -18.125431060791016
    6. '<|end|>' → logprob: -18.625431060791016
    7. ' ' → logprob: -18.875431060791016
    8. 's' → logprob: -19.125431060791016
    9. '  ' → logprob: -19.250431060791016
    10. '0' → logprob: -19.500431060791016

Token 775: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. 'cost' → logprob: -18.2500057220459
    4. '   ' → logprob: -19.0000057220459
    5. '+' → logprob: -20.0000057220459
    6. '
' → logprob: -20.1250057220459
    7. '１' → logprob: -20.1250057220459
    8. '2' → logprob: -20.6250057220459
    9. 'c' → logprob: -22.0625057220459
    10. '  ' → logprob: -22.1875057220459

Token 776: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005137692671269178
    2. '<|end|>' → logprob: -5.880137920379639
    3. '
' → logprob: -6.130137920379639
    4. ',' → logprob: -10.38013744354248
    5. '<|end|>' → logprob: -10.75513744354248
    6. ',
' → logprob: -10.88013744354248
    7. ' else' → logprob: -11.13013744354248
    8. '        
' → logprob: -11.25513744354248
    9. '	' → logprob: -11.50513744354248
    10. 'else' → logprob: -11.63013744354248

Token 777: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.7848862373502925e-05
    2. '<|end|>' → logprob: -11.125027656555176
    3. '           ' → logprob: -12.500027656555176
    4. '        ' → logprob: -12.875027656555176
    5. ',' → logprob: -13.500027656555176
    6. '      ' → logprob: -13.750027656555176
    7. '	' → logprob: -14.000027656555176
    8. '#' → logprob: -14.625027656555176
    9. '```' → logprob: -14.750027656555176
    10. '     ' → logprob: -14.750027656555176

Token 778: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.06302528083324432
    2. '       ' → logprob: -2.8130252361297607
    3. ' dp' → logprob: -6.93802547454834
    4. '	dp' → logprob: -9.43802547454834
    5. '(dp' → logprob: -12.68802547454834
    6. '   ' → logprob: -12.81302547454834
    7. '	' → logprob: -14.81302547454834
    8. '_dp' → logprob: -14.93802547454834
    9. '.dp' → logprob: -15.56302547454834
    10. '           ' → logprob: -16.438024520874023

Token 779: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.978233846486546e-05
    2. '<|end|>' → logprob: -10.250049591064453
    3. '[I' → logprob: -11.875049591064453
    4. '[' → logprob: -11.875049591064453
    5. '[
' → logprob: -16.375049591064453
    6. 'i' → logprob: -16.375049591064453
    7. '<|end|>' → logprob: -16.500049591064453
    8. '[int' → logprob: -16.750049591064453
    9. '[ind' → logprob: -17.000049591064453
    10. '[j' → logprob: -17.875049591064453

Token 780: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.019074445590376854
    2. '[j' → logprob: -4.019074440002441
    3. '[i' → logprob: -7.019074440002441
    4. ' ][' → logprob: -11.644074440002441
    5. '-' → logprob: -12.019074440002441
    6. '[' → logprob: -12.269074440002441
    7. ']' → logprob: -12.519074440002441
    8. '   ' → logprob: -12.644074440002441
    9. '       ' → logprob: -14.144074440002441
    10. '
' → logprob: -14.769074440002441

Token 781: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.6240566083070007e-06
    2. ' j' → logprob: -13.750001907348633
    3. '[j' → logprob: -15.125001907348633
    4. '   ' → logprob: -16.000001907348633
    5. '	j' → logprob: -16.000001907348633
    6. '```' → logprob: -17.250001907348633
    7. ',j' → logprob: -17.625001907348633
    8. '
' → logprob: -17.750001907348633
    9. ' ' → logprob: -18.000001907348633
    10. '  ' → logprob: -18.500001907348633

Token 782: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19006162881851196
    2. '=' → logprob: -1.9400615692138672
    3. ']' → logprob: -3.565061569213867
    4. ']=' → logprob: -7.065061569213867
    5. '   ' → logprob: -8.440061569213867
    6. '       ' → logprob: -11.940061569213867
    7. ' ]' → logprob: -11.940061569213867
    8. '           ' → logprob: -12.315061569213867
    9. '    ' → logprob: -12.565061569213867
    10. ')' → logprob: -13.440061569213867

Token 783: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868766129016876
    2. ' =' → logprob: -1.1368765830993652
    3. '=min' → logprob: -12.136877059936523
    4. '＝' → logprob: -16.511877059936523
    5. '=max' → logprob: -16.636877059936523
    6. '=
' → logprob: -18.136877059936523
    7. 'min' → logprob: -18.386877059936523
    8. '   ' → logprob: -18.386877059936523
    9. '=int' → logprob: -18.511877059936523
    10. '```' → logprob: -18.511877059936523

Token 784: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -8.061054359131958e-06
    2. ' min' → logprob: -11.750007629394531
    3. '	min' → logprob: -16.50000762939453
    4. 'minimum' → logprob: -19.87500762939453
    5. '   ' → logprob: -20.75000762939453
    6. 'max' → logprob: -21.00000762939453
    7. '(min' → logprob: -21.12500762939453
    8. '[min' → logprob: -22.12500762939453
    9. ',min' → logprob: -22.25000762939453
    10. '.min' → logprob: -22.25000762939453

Token 785: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.051637597382068634
    2. '(' → logprob: -3.051637649536133
    3. '(
' → logprob: -5.801637649536133
    4. '([' → logprob: -11.051637649536133
    5. 'dp' → logprob: -12.551637649536133
    6. '(

' → logprob: -13.551637649536133
    7. '(
' → logprob: -14.051637649536133
    8. '([
' → logprob: -14.176637649536133
    9. '(min' → logprob: -14.676637649536133
    10. ' (' → logprob: -16.551637649536133

Token 786: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[I' → logprob: -14.75
    3. '```' → logprob: -16.875
    4. 'i' → logprob: -18.0
    5. '
' → logprob: -18.25
    6. '[
' → logprob: -18.375
    7. '[j' → logprob: -18.625
    8. '][' → logprob: -18.75
    9. '(i' → logprob: -19.0
    10. '[' → logprob: -19.25

Token 787: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.018382767215371132
    2. '][' → logprob: -4.018382549285889
    3. '[i' → logprob: -8.768383026123047
    4. ' -' → logprob: -9.643383026123047
    5. '[j' → logprob: -12.518383026123047
    6. '[' → logprob: -12.643383026123047
    7. '   ' → logprob: -13.518383026123047
    8. '-[' → logprob: -14.393383026123047
    9. ' ][' → logprob: -14.518383026123047
    10. '[-' → logprob: -14.893383026123047

Token 788: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5332478142227046e-05
    2. ' ' → logprob: -11.375015258789062
    3. '-' → logprob: -13.500015258789062
    4. '```' → logprob: -14.062515258789062
    5. '   ' → logprob: -14.437515258789062
    6. '
' → logprob: -15.500015258789062
    7. ']' → logprob: -16.812515258789062
    8. '     ' → logprob: -17.125015258789062
    9. ')' → logprob: -17.250015258789062
    10. '...' → logprob: -17.375015258789062

Token 789: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00045795587357133627
    2. '[j' → logprob: -8.000457763671875
    3. '[' → logprob: -9.500457763671875
    4. ']' → logprob: -11.250457763671875
    5. '"][' → logprob: -11.250457763671875
    6. ' ][' → logprob: -11.625457763671875
    7. ''][' → logprob: -12.250457763671875
    8. '<|end|>' → logprob: -13.000457763671875
    9. '}[' → logprob: -13.250457763671875
    10. '>[' → logprob: -13.375457763671875

Token 790: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.080963092041202e-06
    2. ' j' → logprob: -12.625004768371582
    3. '[j' → logprob: -13.500004768371582
    4. '   ' → logprob: -15.625004768371582
    5. '	j' → logprob: -16.6250057220459
    6. ')' → logprob: -17.8750057220459
    7. ',j' → logprob: -18.0000057220459
    8. '```' → logprob: -18.3750057220459
    9. ' ' → logprob: -18.5000057220459
    10. '(j' → logprob: -18.6250057220459

Token 791: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3141441345214844
    2. ']+' → logprob: -1.3141441345214844
    3. '-' → logprob: -7.314144134521484
    4. ' ]' → logprob: -8.814144134521484
    5. '],' → logprob: -10.439144134521484
    6. '   ' → logprob: -11.064144134521484
    7. ' ' → logprob: -11.189144134521484
    8. ']-' → logprob: -12.564144134521484
    9. ' -' → logprob: -13.689144134521484
    10. ']
' → logprob: -14.064144134521484

Token 792: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '   ' → logprob: -19.125
    4. '
' → logprob: -21.25
    5. '```' → logprob: -21.25
    6. '       ' → logprob: -23.375
    7. ')' → logprob: -23.5
    8. '     ' → logprob: -23.5
    9. '  ' → logprob: -23.75
    10. '+' → logprob: -24.125

Token 793: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004152993205934763
    2. ',
' → logprob: -7.875415325164795
    3. ' ,' → logprob: -10.375414848327637
    4. ',d' → logprob: -13.125414848327637
    5. ',\
' → logprob: -14.125414848327637
    6. ',

' → logprob: -14.875414848327637
    7. '(dp' → logprob: -15.625414848327637
    8. ',p' → logprob: -15.875414848327637
    9. ',
' → logprob: -16.000415802001953
    10. ' ,
' → logprob: -16.500415802001953

Token 794: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.31329822540283203
    2. ' dp' → logprob: -1.313298225402832
    3. '	dp' → logprob: -10.438298225402832
    4. '(dp' → logprob: -11.938298225402832
    5. '    ' → logprob: -15.438298225402832
    6. '   ' → logprob: -16.313297271728516
    7. '_dp' → logprob: -16.438297271728516
    8. '       ' → logprob: -16.688297271728516
    9. '.dp' → logprob: -16.688297271728516
    10. ' ' → logprob: -16.813297271728516

Token 795: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. 'i' → logprob: -14.750000953674316
    3. '[' → logprob: -16.25
    4. '[I' → logprob: -17.5
    5. '```' → logprob: -17.75
    6. '[j' → logprob: -18.375
    7. '[
' → logprob: -18.5
    8. '   ' → logprob: -18.875
    9. ' [' → logprob: -19.125
    10. '
' → logprob: -20.125

Token 796: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.20148195326328278
    2. '-' → logprob: -1.7014819383621216
    3. '[i' → logprob: -10.076481819152832
    4. '[j' → logprob: -11.326481819152832
    5. ' ][' → logprob: -12.201481819152832
    6. '   ' → logprob: -12.451481819152832
    7. ' -' → logprob: -12.576481819152832
    8. '[' → logprob: -13.951481819152832
    9. ']' → logprob: -15.326481819152832
    10. ' ' → logprob: -15.701481819152832

Token 797: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.531315314830863e-06
    2. ' j' → logprob: -13.250003814697266
    3. '[j' → logprob: -13.500003814697266
    4. 'i' → logprob: -15.375003814697266
    5. '   ' → logprob: -16.875003814697266
    6. '	j' → logprob: -18.000003814697266
    7. '```' → logprob: -18.250003814697266
    8. '-' → logprob: -18.500003814697266
    9. ' ' → logprob: -18.500003814697266
    10. '][' → logprob: -19.250003814697266

Token 798: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.512236498361744e-07
    2. ' -' → logprob: -15.375000953674316
    3. '[' → logprob: -16.25
    4. '1' → logprob: -16.25
    5. '[j' → logprob: -19.0
    6. '−' → logprob: -19.0
    7. ']-' → logprob: -19.75
    8. '-
' → logprob: -20.375
    9. ']' → logprob: -20.625
    10. '```' → logprob: -21.25

Token 799: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0445127372804563e-05
    2. '-' → logprob: -11.50001049041748
    3. ' ' → logprob: -16.125009536743164
    4. '   ' → logprob: -16.750009536743164
    5. '```' → logprob: -17.625009536743164
    6. '  ' → logprob: -19.500009536743164
    7. ']' → logprob: -19.875009536743164
    8. '
' → logprob: -20.000009536743164
    9. ')' → logprob: -21.000009536743164
    10. '１' → logprob: -21.062509536743164

Token 800: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005592276575043797
    2. ']+' → logprob: -7.875559329986572
    3. ' +' → logprob: -9.250558853149414
    4. ')+' → logprob: -10.000558853149414
    5. '+j' → logprob: -10.875558853149414
    6. '}+' → logprob: -11.000558853149414
    7. '()+' → logprob: -14.625558853149414
    8. ']' → logprob: -14.875558853149414
    9. '<|end|>' → logprob: -15.500558853149414
    10. '   ' → logprob: -15.500558853149414

Token 801: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '```' → logprob: -18.25
    4. '+' → logprob: -19.5
    5. '<|end|>' → logprob: -20.25
    6. '
' → logprob: -20.625
    7. '   ' → logprob: -20.75
    8. ')' → logprob: -22.0
    9. '`' → logprob: -22.1875
    10. '``' → logprob: -22.5625

Token 802: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004878723411820829
    2. ')' → logprob: -8.00048828125
    3. ',
' → logprob: -9.25048828125
    4. ' ,' → logprob: -10.37548828125
    5. '+' → logprob: -11.12548828125
    6. '   ' → logprob: -12.62548828125
    7. '(dp' → logprob: -13.37548828125
    8. ',d' → logprob: -14.12548828125
    9. '),' → logprob: -14.37548828125
    10. '```' → logprob: -14.37548828125

Token 803: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.306760805164231e-05
    2. ' dp' → logprob: -11.25001335144043
    3. '	dp' → logprob: -17.50001335144043
    4. '(dp' → logprob: -19.12501335144043
    5. '       ' → logprob: -21.00001335144043
    6. '           ' → logprob: -22.62501335144043
    7. '      ' → logprob: -23.00001335144043
    8. '   ' → logprob: -23.50001335144043
    9. '_dp' → logprob: -23.62501335144043
    10. '          ' → logprob: -23.75001335144043

Token 804: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.45848218582978e-06
    2. 'i' → logprob: -13.25000286102295
    3. '-' → logprob: -14.75000286102295
    4. '```' → logprob: -16.375001907348633
    5. '[j' → logprob: -17.250001907348633
    6. '][' → logprob: -17.375001907348633
    7. '[
' → logprob: -17.750001907348633
    8. '[I' → logprob: -18.000001907348633
    9. '(i' → logprob: -18.625001907348633
    10. '[' → logprob: -18.750001907348633

Token 805: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.5048530030981055e-06
    2. '][' → logprob: -14.000001907348633
    3. ' -' → logprob: -14.500001907348633
    4. '[' → logprob: -15.875001907348633
    5. '1' → logprob: -16.875001907348633
    6. '```' → logprob: -17.500001907348633
    7. '−' → logprob: -18.250001907348633
    8. '[i' → logprob: -18.750001907348633
    9. '[j' → logprob: -18.750001907348633
    10. '   ' → logprob: -19.250001907348633

Token 806: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. 'j' → logprob: -14.500001907348633
    3. '```' → logprob: -14.875001907348633
    4. ' ' → logprob: -15.125001907348633
    5. '   ' → logprob: -15.375001907348633
    6. '
' → logprob: -16.250001907348633
    7. '-' → logprob: -18.000001907348633
    8. '[j' → logprob: -18.250001907348633
    9. '１' → logprob: -19.187501907348633
    10. '[' → logprob: -19.250001907348633

Token 807: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.4298901855945587
    2. '][' → logprob: -1.0548901557922363
    3. ')[' → logprob: -7.429890155792236
    4. '[' → logprob: -7.679890155792236
    5. '}[' → logprob: -10.679890632629395
    6. '"][' → logprob: -10.804890632629395
    7. ']' → logprob: -11.179890632629395
    8. '[i' → logprob: -11.304890632629395
    9. '[
' → logprob: -11.304890632629395
    10. ''][' → logprob: -11.679890632629395

Token 808: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.531315314830863e-06
    2. ' j' → logprob: -12.750003814697266
    3. '[j' → logprob: -14.750003814697266
    4. '   ' → logprob: -15.625003814697266
    5. ' ' → logprob: -17.625003814697266
    6. '(j' → logprob: -17.875003814697266
    7. '	j' → logprob: -18.375003814697266
    8. '  ' → logprob: -19.125003814697266
    9. ']' → logprob: -19.500003814697266
    10. ',j' → logprob: -19.500003814697266

Token 809: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.816093228830141e-06
    2. ' -' → logprob: -12.87500286102295
    3. '−' → logprob: -16.500001907348633
    4. '-
' → logprob: -16.750001907348633
    5. '1' → logprob: -17.000001907348633
    6. ']' → logprob: -18.000001907348633
    7. '[' → logprob: -18.375001907348633
    8. ']-' → logprob: -18.375001907348633
    9. '```' → logprob: -18.625001907348633
    10. '–' → logprob: -18.750001907348633

Token 810: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '-' → logprob: -15.875
    3. '```' → logprob: -16.875
    4. ' ' → logprob: -17.125
    5. '   ' → logprob: -18.0
    6. '
' → logprob: -18.5
    7. ']' → logprob: -18.625
    8. '１' → logprob: -20.75
    9. '۱' → logprob: -20.875
    10. ')' → logprob: -21.1875

Token 811: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20258280634880066
    2. ']+' → logprob: -1.702582836151123
    3. ')+' → logprob: -7.702582836151123
    4. ']' → logprob: -7.827582836151123
    5. ' +' → logprob: -8.577582359313965
    6. '}+' → logprob: -9.577582359313965
    7. '+]' → logprob: -11.327582359313965
    8. '+j' → logprob: -11.452582359313965
    9. '()+' → logprob: -11.452582359313965
    10. '+p' → logprob: -12.702582359313965

Token 812: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -4.842555426876061e-06
    2. ' cost' → logprob: -12.250004768371582
    3. '(cost' → logprob: -17.2500057220459
    4. '1' → logprob: -19.3750057220459
    5. 'cos' → logprob: -21.1250057220459
    6. 'code' → logprob: -22.0000057220459
    7. '```' → logprob: -22.1250057220459
    8. '   ' → logprob: -22.6250057220459
    9. '.cost' → logprob: -23.6250057220459
    10. 'color' → logprob: -24.0000057220459

Token 813: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002980432182084769
    2. ')
' → logprob: -8.125298500061035
    3. ' )' → logprob: -13.500298500061035
    4. ')return' → logprob: -16.00029754638672
    5. ')
' → logprob: -16.25029754638672
    6. '<|end|>' → logprob: -17.37529754638672
    7. ')#' → logprob: -17.50029754638672
    8. '),' → logprob: -17.62529754638672
    9. ')

' → logprob: -17.62529754638672
    10. '   ' → logprob: -17.62529754638672

Token 814: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 815: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -13.500001907348633
    3. '(
' → logprob: -17.250001907348633
    4. 'dp' → logprob: -17.875001907348633
    5. ' (' → logprob: -18.375001907348633
    6. '(df' → logprob: -18.625001907348633
    7. '(max' → logprob: -19.375001907348633
    8. '((' → logprob: -19.625001907348633
    9. '(dm' → logprob: -20.375001907348633
    10. '(dx' → logprob: -20.500001907348633

Token 816: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.018191616982221603
    2. '[-' → logprob: -4.018191814422607
    3. '[len' → logprob: -10.26819133758545
    4. '[m' → logprob: -12.26819133758545
    5. '[' → logprob: -13.89319133758545
    6. '[N' → logprob: -14.76819133758545
    7. '
' → logprob: -15.76819133758545
    8. '[
' → logprob: -15.76819133758545
    9. '[num' → logprob: -15.89319133758545
    10. '[i' → logprob: -15.89319133758545

Token 817: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -6.861651490908116e-05
    2. ']' → logprob: -9.875068664550781
    3. '])' → logprob: -11.750068664550781
    4. '][-' → logprob: -11.875068664550781
    5. ' ][' → logprob: -13.875068664550781
    6. '[n' → logprob: -15.125068664550781
    7. ']
' → logprob: -15.500068664550781
    8. '[m' → logprob: -15.500068664550781
    9. '[' → logprob: -16.00006866455078
    10. '][:' → logprob: -16.50006866455078

Token 818: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -2.339278580620885e-06
    2. ' m' → logprob: -13.000001907348633
    3. ' ' → logprob: -16.875001907348633
    4. '   ' → logprob: -18.000001907348633
    5. '  ' → logprob: -18.875001907348633
    6. '```' → logprob: -19.250001907348633
    7. 'j' → logprob: -19.500001907348633
    8. '
' → logprob: -20.000001907348633
    9. '	m' → logprob: -20.125001907348633
    10. ')m' → logprob: -20.375001907348633

Token 819: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.73314929776825e-05
    2. '])' → logprob: -9.62508773803711
    3. '})' → logprob: -11.75008773803711
    4. ')
' → logprob: -11.75008773803711
    5. '))' → logprob: -12.37508773803711
    6. '())' → logprob: -14.87508773803711
    7. ' )' → logprob: -15.37508773803711
    8. '）' → logprob: -15.87508773803711
    9. '}' → logprob: -16.25008773803711
    10. '`)' → logprob: -16.37508773803711

Token 820: '"""
' (ID: 15611)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01896333135664463
    2. '
' → logprob: -4.26896333694458
    3. '```' → logprob: -6.26896333694458
    4. '"""' → logprob: -6.39396333694458
    5. '<|end|>' → logprob: -6.89396333694458
    6. '\n' → logprob: -9.643962860107422
    7. ')
' → logprob: -10.018962860107422
    8. '#' → logprob: -10.143962860107422
    9. '")' → logprob: -11.768962860107422
    10. ' 
' → logprob: -11.768962860107422

Token 821: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.03570222482085228
    2. '"""' → logprob: -4.535702228546143
    3. '/' → logprob: -4.660702228546143
    4. '<|end|>' → logprob: -4.785702228546143
    5. ')' → logprob: -7.160702228546143
    6. ' ' → logprob: -7.285702228546143
    7. 'n' → logprob: -7.285702228546143
    8. ' """' → logprob: -7.410702228546143
    9. '"' → logprob: -7.410702228546143
    10. '#!' → logprob: -7.535702228546143

Token 822: '1' (ID: 16)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.28424128890037537
    2. '"""' → logprob: -2.034241199493408
    3. '<|end|>' → logprob: -2.659241199493408
    4. ')' → logprob: -4.534241199493408
    5. '#!' → logprob: -5.159241199493408
    6. '"' → logprob: -5.284241199493408
    7. '```' → logprob: -5.284241199493408
    8. ' ' → logprob: -5.284241199493408
    9. ''' → logprob: -5.659241199493408
    10. '!' → logprob: -5.909241199493408

Token 823: '_F' (ID: 2729)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.055421870201826096
    2. '_E' → logprob: -3.305421829223633
    3. '_A' → logprob: -5.055421829223633
    4. '_D' → logprob: -5.430421829223633
    5. '<|end|>' → logprob: -6.555421829223633
    6. '#' → logprob: -6.930421829223633
    7. '<|end|>' → logprob: -7.055421829223633
    8. '_C' → logprob: -7.305421829223633
    9. '"""' → logprob: -7.680421829223633
    10. '```' → logprob: -7.805421829223633

Token 824: '
' (ID: 198)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.12719979882240295
    2. '"""' → logprob: -2.12719988822937
    3. '("""' → logprob: -9.50220012664795
    4. '"""

' → logprob: -9.75220012664795
    5. '"""
' → logprob: -10.00220012664795
    6. '("""
' → logprob: -10.12720012664795
    7. '""' → logprob: -10.62720012664795
    8. '="""' → logprob: -12.12720012664795
    9. '"' → logprob: -12.25220012664795
    10. ''''
' → logprob: -12.50220012664795

Token 825: '"""
' (ID: 15611)
  Prédit: '"""
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.007867928594350815
    2. '"""' → logprob: -5.007867813110352
    3. 'n' → logprob: -7.007867813110352
    4. 's' → logprob: -9.007867813110352
    5. '"""
' → logprob: -9.507867813110352
    6. '"""

' → logprob: -11.382867813110352
    7. 'import' → logprob: -11.382867813110352
    8. '""' → logprob: -12.007867813110352
    9. ''''
' → logprob: -12.132867813110352
    10. '"' → logprob: -12.382867813110352

Token 826: 'import' (ID: 561)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04509931430220604
    2. 'def' → logprob: -3.7950992584228516
    3. 'import' → logprob: -4.920099258422852
    4. 's' → logprob: -5.295099258422852
    5. '"""
' → logprob: -5.420099258422852
    6. 'from' → logprob: -5.670099258422852
    7. '
' → logprob: -7.545099258422852
    8. '#' → logprob: -8.295099258422852
    9. '"""' → logprob: -8.420099258422852
    10. 'a' → logprob: -9.295099258422852

Token 827: ' bis' (ID: 7204)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.8385331034660339
    2. 'heap' → logprob: -1.0885331630706787
    3. 'math' → logprob: -1.5885331630706787
    4. 'bis' → logprob: -4.3385329246521
    5. 'collections' → logprob: -4.3385329246521
    6. 'it' → logprob: -8.213533401489258
    7. 'fra' → logprob: -9.713533401489258
    8. 'random' → logprob: -9.713533401489258
    9. 'copy' → logprob: -9.963533401489258
    10. 'cmath' → logprob: -10.088533401489258

Token 828: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -3.128163257315464e-07
    2. 'ec' → logprob: -16.25
    3. 'ext' → logprob: -16.25
    4. 'e' → logprob: -16.875
    5. 'sect' → logprob: -17.625
    6. 'ects' → logprob: -18.25
    7. 'ected' → logprob: -18.5
    8. 'ectl' → logprob: -18.875
    9. '#' → logprob: -19.0
    10. '```' → logprob: -19.0

Token 829: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.043847713619470596
    2. '

' → logprob: -3.6688477993011475
    3. '<|end|>' → logprob: -4.793847560882568
    4. 'n' → logprob: -5.043847560882568
    5. '<|end|>' → logprob: -7.168847560882568
    6. '\n' → logprob: -7.793847560882568
    7. '
' → logprob: -7.793847560882568
    8. '[' → logprob: -7.918847560882568
    9. 's' → logprob: -8.668848037719727
    10. 'from' → logprob: -8.918848037719727

Token 830: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.019247297197580338
    2. '"""
' → logprob: -4.894247531890869
    3. 'def' → logprob: -5.269247531890869
    4. 's' → logprob: -5.519247531890869
    5. '
' → logprob: -6.644247531890869
    6. '"""' → logprob: -8.019247055053711
    7. 'from' → logprob: -8.769247055053711
    8. 'a' → logprob: -9.019247055053711
    9. 'l' → logprob: -9.394247055053711
    10. 'arr' → logprob: -9.644247055053711

Token 831: ',W' (ID: 117252)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7529232501983643
    2. '=' → logprob: -0.8779232501983643
    3. ',' → logprob: -2.5029232501983643
    4. ',w' → logprob: -3.8779232501983643
    5. '=int' → logprob: -4.877923011779785
    6. ',s' → logprob: -7.377923011779785
    7. ',m' → logprob: -7.627923011779785
    8. ',k' → logprob: -7.877923011779785
    9. '=input' → logprob: -8.377923011779785
    10. ',n' → logprob: -8.377923011779785

Token 832: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20041415095329285
    2. ' =' → logprob: -1.8254141807556152
    3. ',w' → logprob: -4.075414180755615
    4. ',' → logprob: -6.075414180755615
    5. ',v' → logprob: -7.950414180755615
    6. ',k' → logprob: -8.200413703918457
    7. '=w' → logprob: -8.700413703918457
    8. 'w' → logprob: -9.200413703918457
    9. ',m' → logprob: -9.325413703918457
    10. ',W' → logprob: -9.700413703918457

Token 833: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.11288917809724808
    2. ' map' → logprob: -2.237889289855957
    3. 'list' → logprob: -10.487889289855957
    4. ' ' → logprob: -10.987889289855957
    5. '	map' → logprob: -12.487889289855957
    6. 'LI' → logprob: -13.112889289855957
    7. '   ' → logprob: -13.237889289855957
    8. ' list' → logprob: -13.237889289855957
    9. '10' → logprob: -13.362889289855957
    10. '1' → logprob: -13.612889289855957

Token 834: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -2.8325677703833207e-05
    2. 'int' → logprob: -11.000028610229492
    3. '=int' → logprob: -11.875028610229492
    4. ' (' → logprob: -13.375028610229492
    5. ',int' → logprob: -13.875028610229492
    6. '[int' → logprob: -14.000028610229492
    7. '(' → logprob: -14.625028610229492
    8. '(in' → logprob: -15.000028610229492
    9. '<int' → logprob: -15.500028610229492
    10. ':int' → logprob: -16.500028610229492

Token 835: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.03398948162794113
    2. ',int' → logprob: -3.658989429473877
    3. ',' → logprob: -5.033989429473877
    4. '(),' → logprob: -7.158989429473877
    5. 'input' → logprob: -9.158989906311035
    6. '=input' → logprob: -9.283989906311035
    7. '(' → logprob: -10.033989906311035
    8. '()' → logprob: -10.158989906311035
    9. '(input' → logprob: -10.283989906311035
    10. '(int' → logprob: -10.533989906311035

Token 836: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0006109290407039225
    2. '()' → logprob: -7.750610828399658
    3. '())' → logprob: -9.375611305236816
    4. '(),' → logprob: -9.625611305236816
    5. '=' → logprob: -11.125611305236816
    6. '()
' → logprob: -12.875611305236816
    7. '(' → logprob: -13.125611305236816
    8. ',' → logprob: -13.625611305236816
    9. '()[' → logprob: -13.625611305236816
    10. '()>' → logprob: -13.875611305236816

Token 837: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.6240566083070007e-06
    2. ')' → logprob: -15.000001907348633
    3. 's' → logprob: -15.000001907348633
    4. 'spl' → logprob: -15.250001907348633
    5. ' split' → logprob: -15.875001907348633
    6. 'sp' → logprob: -16.125001907348633
    7. '.split' → logprob: -16.250001907348633
    8. '().' → logprob: -16.375001907348633
    9. '```' → logprob: -16.625001907348633
    10. '
' → logprob: -16.750001907348633

Token 838: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.000635235570371151
    2. '()' → logprob: -7.625635147094727
    3. ')' → logprob: -9.125635147094727
    4. '())
' → logprob: -10.250635147094727
    5. ' ())' → logprob: -13.125635147094727
    6. '())
' → logprob: -15.000635147094727
    7. '())

' → logprob: -15.250635147094727
    8. '(' → logprob: -15.750635147094727
    9. '();)' → logprob: -16.250635147094727
    10. '()
' → logprob: -16.375635147094727

Token 839: 'b' (ID: 65)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.5548068881034851
    2. 'dp' → logprob: -0.9298068881034851
    3. 'v' → logprob: -3.92980694770813
    4. 'weights' → logprob: -5.429806709289551
    5. 'values' → logprob: -6.179806709289551
    6. 'value' → logprob: -7.054806709289551
    7. 'W' → logprob: -7.304806709289551
    8. ' w' → logprob: -7.429806709289551
    9. 'def' → logprob: -7.554806709289551
    10. 'weight' → logprob: -7.804806709289551

Token 840: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0013557136990129948
    2. ' =' → logprob: -6.6263556480407715
    3. '=[]' → logprob: -10.62635612487793
    4. '=[' → logprob: -13.25135612487793
    5. '[' → logprob: -14.00135612487793
    6. 'b' → logprob: -14.25135612487793
    7. 'n' → logprob: -15.00135612487793
    8. 's' → logprob: -15.25135612487793
    9. 'a' → logprob: -15.75135612487793
    10. '=list' → logprob: -15.87635612487793

Token 841: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01203274354338646
    2. '[list' → logprob: -4.512032508850098
    3. '[]' → logprob: -8.262032508850098
    4. '[L' → logprob: -8.512032508850098
    5. ' [' → logprob: -8.637032508850098
    6. '[n' → logprob: -9.262032508850098
    7. '[List' → logprob: -9.512032508850098
    8. '[b' → logprob: -10.012032508850098
    9. '[[' → logprob: -10.387032508850098
    10. '[l' → logprob: -10.637032508850098

Token 842: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00046546570956707
    2. 'int' → logprob: -7.750465393066406
    3. 'tuple' → logprob: -11.125465393066406
    4. '(list' → logprob: -11.875465393066406
    5. '[int' → logprob: -12.125465393066406
    6. '(int' → logprob: -12.250465393066406
    7. ' list' → logprob: -13.875465393066406
    8. 'li' → logprob: -14.500465393066406
    9. 'map' → logprob: -15.000465393066406
    10. '[list' → logprob: -15.375465393066406

Token 843: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.021170005202293396
    2. 'map' → logprob: -3.896169900894165
    3. '(range' → logprob: -7.896170139312744
    4. 'for' → logprob: -8.896169662475586
    5. 'import' → logprob: -9.396169662475586
    6. '(int' → logprob: -11.146169662475586
    7. ',map' → logprob: -12.396169662475586
    8. 'range' → logprob: -12.771169662475586
    9. '.map' → logprob: -13.396169662475586
    10. '	map' → logprob: -13.396169662475586

Token 844: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10136044025421143
    2. '(int' → logprob: -2.351360321044922
    3. ',int' → logprob: -6.851360321044922
    4. '[int' → logprob: -10.101360321044922
    5. ']int' → logprob: -10.976360321044922
    6. '```' → logprob: -11.476360321044922
    7. '=int' → logprob: -11.601360321044922
    8. '<int' → logprob: -12.476360321044922
    9. ',' → logprob: -12.851360321044922
    10. 'lambda' → logprob: -12.976360321044922

Token 845: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38789188861846924
    2. ',input' → logprob: -1.1378918886184692
    3. '(input' → logprob: -7.51289176940918
    4. 'input' → logprob: -8.01289176940918
    5. '(' → logprob: -9.76289176940918
    6. ',int' → logprob: -10.51289176940918
    7. ' ,' → logprob: -11.38789176940918
    8. '   ' → logprob: -11.88789176940918
    9. ',(' → logprob: -12.13789176940918
    10. '=input' → logprob: -12.26289176940918

Token 846: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0009694644249975681
    2. ' input' → logprob: -7.125969409942627
    3. 'int' → logprob: -8.750969886779785
    4. 'sys' → logprob: -12.000969886779785
    5. 'str' → logprob: -15.000969886779785
    6. ' sys' → logprob: -15.625969886779785
    7. 'lambda' → logprob: -17.75096893310547
    8. '<input' → logprob: -18.00096893310547
    9. 'stdin' → logprob: -18.12596893310547
    10. 'in' → logprob: -18.25096893310547

Token 847: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0007869947585277259
    2. '()' → logprob: -7.500786781311035
    3. '())' → logprob: -8.625786781311035
    4. '()))' → logprob: -10.625786781311035
    5. 'split' → logprob: -11.625786781311035
    6. '.split' → logprob: -12.125786781311035
    7. '()]' → logprob: -12.250786781311035
    8. '()[' → logprob: -13.375786781311035
    9. '(split' → logprob: -13.500786781311035
    10. '()==' → logprob: -14.375786781311035

Token 848: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.107425062713446e-06
    2. 'sys' → logprob: -12.000006675720215
    3. ' split' → logprob: -14.375006675720215
    4. 'spl' → logprob: -15.750006675720215
    5. '(split' → logprob: -17.25000762939453
    6. '
' → logprob: -17.37500762939453
    7. 'read' → logprob: -17.50000762939453
    8. 'input' → logprob: -17.50000762939453
    9. 'skip' → logprob: -17.62500762939453
    10. 'strip' → logprob: -17.75000762939453

Token 849: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.017528025433421135
    2. '))' → logprob: -4.142528057098389
    3. '())' → logprob: -6.642528057098389
    4. '().' → logprob: -9.26752758026123
    5. '()' → logprob: -9.64252758026123
    6. '()))
' → logprob: -11.26752758026123
    7. ')' → logprob: -12.64252758026123
    8. '())))' → logprob: -13.14252758026123
    9. '))]
' → logprob: -13.51752758026123
    10. '(' → logprob: -13.51752758026123

Token 850: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04977206885814667
    2. '()' → logprob: -3.299772024154663
    3. ' for' → logprob: -4.549772262573242
    4. ')' → logprob: -6.924772262573242
    5. '(' → logprob: -10.174772262573242
    6. '
' → logprob: -10.549772262573242
    7. ']' → logprob: -11.549772262573242
    8. '```' → logprob: -11.799772262573242
    9. '	for' → logprob: -12.299772262573242
    10. '   ' → logprob: -12.424772262573242

Token 851: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.09282707422971725
    2. ' range' → logprob: -2.592827081680298
    3. 'i' → logprob: -4.842826843261719
    4. '(i' → logprob: -6.092826843261719
    5. ' in' → logprob: -6.217826843261719
    6. 'in' → logprob: -6.717826843261719
    7. '(range' → logprob: -8.217826843261719
    8. 'import' → logprob: -9.467826843261719
    9. 'for' → logprob: -9.467826843261719
    10. ' i' → logprob: -9.842826843261719

Token 852: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6960359215736389
    2. ' in' → logprob: -0.6960359215736389
    3. 'range' → logprob: -5.946035861968994
    4. 'for' → logprob: -8.571036338806152
    5. 'n' → logprob: -10.321036338806152
    6. '(n' → logprob: -10.696036338806152
    7. '(range' → logprob: -11.821036338806152
    8. '
' → logprob: -12.321036338806152
    9. ' range' → logprob: -12.696036338806152
    10. 'import' → logprob: -13.071036338806152

Token 853: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.886803359724581e-05
    2. ' range' → logprob: -9.500079154968262
    3. '(range' → logprob: -12.500079154968262
    4. 'for' → logprob: -16.375078201293945
    5. '
' → logprob: -16.625078201293945
    6. 'r' → logprob: -18.000078201293945
    7. 'n' → logprob: -18.250078201293945
    8. 'in' → logprob: -18.250078201293945
    9. 'rang' → logprob: -18.250078201293945
    10. ' ' → logprob: -18.375078201293945

Token 854: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31424635648727417
    2. '(range' → logprob: -1.814246416091919
    3. ' range' → logprob: -2.814246416091919
    4. '(n' → logprob: -3.064246416091919
    5. 'n' → logprob: -10.43924617767334
    6. '
' → logprob: -11.06424617767334
    7. '(' → logprob: -11.93924617767334
    8. '	range' → logprob: -13.31424617767334
    9. 'for' → logprob: -13.68924617767334
    10. 'in' → logprob: -13.68924617767334

Token 855: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.05016353353857994
    2. ')]
' → logprob: -3.050163507461548
    3. ']' → logprob: -6.675163745880127
    4. ')]
' → logprob: -9.050163269042969
    5. ')' → logprob: -9.300163269042969
    6. ']
' → logprob: -9.425163269042969
    7. '])' → logprob: -11.550163269042969
    8. ')]

' → logprob: -11.925163269042969
    9. ']
' → logprob: -13.675163269042969
    10. '])]' → logprob: -13.800163269042969

Token 856: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.012584410607814789
    2. 'w' → logprob: -5.387584209442139
    3. 'value' → logprob: -6.012584209442139
    4. 'b' → logprob: -6.512584209442139
    5. 'v' → logprob: -6.762584209442139
    6. 'max' → logprob: -7.137584209442139
    7. 'W' → logprob: -8.012584686279297
    8. 'def' → logprob: -8.262584686279297
    9. '"""' → logprob: -8.262584686279297
    10. 'weight' → logprob: -8.387584686279297

Token 857: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.474870890378952
    2. ' =' → logprob: -0.9748709201812744
    3. '=[' → logprob: -7.224870681762695
    4. '=[[' → logprob: -10.224870681762695
    5. '=[]' → logprob: -11.474870681762695
    6. '[' → logprob: -11.724870681762695
    7. ' =[' → logprob: -13.474870681762695
    8. '=[]
' → logprob: -13.599870681762695
    9. 'w' → logprob: -13.599870681762695
    10. ' ' → logprob: -14.099870681762695

Token 858: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11742749065160751
    2. '[[' → logprob: -2.6174275875091553
    3. '[-' → logprob: -3.3674275875091553
    4. '[(' → logprob: -6.617427349090576
    5. '[b' → logprob: -7.492427349090576
    6. 'default' → logprob: -7.992427349090576
    7. '{' → logprob: -8.492427825927734
    8. ' [' → logprob: -8.867427825927734
    9. '[n' → logprob: -9.117427825927734
    10. '[max' → logprob: -9.367427825927734

Token 859: 'float' (ID: 7829)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.41917186975479126
    2. 'float' → logprob: -1.2941718101501465
    3. '-' → logprob: -3.9191718101501465
    4. '(' → logprob: -4.2941718101501465
    5. '[' → logprob: -4.2941718101501465
    6. '(float' → logprob: -5.0441718101501465
    7. '-f' → logprob: -5.4191718101501465
    8. '-(' → logprob: -5.9191718101501465
    9. '[-' → logprob: -6.2941718101501465
    10. '-W' → logprob: -6.9191718101501465

Token 860: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.06696856766939163
    2. '('' → logprob: -2.8169686794281006
    3. '("-' → logprob: -5.6919684410095215
    4. '"' → logprob: -7.3169684410095215
    5. '('-' → logprob: -7.4419684410095215
    6. '(' → logprob: -8.81696891784668
    7. '"-' → logprob: -9.31696891784668
    8. '(-' → logprob: -9.81696891784668
    9. '-' → logprob: -11.31696891784668
    10. ''' → logprob: -11.69196891784668

Token 861: 'INF' (ID: 64358)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.609727680683136
    2. 'inf' → logprob: -0.984727680683136
    3. ''in' → logprob: -3.234727621078491
    4. 'INF' → logprob: -3.859727621078491
    5. '-inf' → logprob: -4.35972785949707
    6. ''' → logprob: -5.35972785949707
    7. '"in' → logprob: -5.98472785949707
    8. '"-' → logprob: -6.60972785949707
    9. ''-' → logprob: -8.10972785949707
    10. '-INF' → logprob: -8.35972785949707

Token 862: '")' (ID: 1405)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012250741943717003
    2. ')]' → logprob: -4.637250900268555
    3. '")' → logprob: -6.137250900268555
    4. '"' → logprob: -9.137250900268555
    5. ']' → logprob: -9.512250900268555
    6. ')"' → logprob: -10.137250900268555
    7. '")]' → logprob: -10.137250900268555
    8. ')
' → logprob: -10.887250900268555
    9. ' )' → logprob: -11.762250900268555
    10. '
' → logprob: -12.012250900268555

Token 863: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16611644625663757
    2. 'for' → logprob: -1.91611647605896
    3. ']' → logprob: -5.166116237640381
    4. ']*(' → logprob: -9.791116714477539
    5. '	for' → logprob: -10.166116714477539
    6. '
' → logprob: -10.416116714477539
    7. ']*' → logprob: -10.791116714477539
    8. ' ' → logprob: -12.166116714477539
    9. ')' → logprob: -12.291116714477539
    10. ']+' → logprob: -12.666116714477539

Token 864: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6243534684181213
    2. ' range' → logprob: -1.7493534088134766
    3. ' i' → logprob: -1.8743534088134766
    4. 'range' → logprob: -1.9993534088134766
    5. ' in' → logprob: -7.124353408813477
    6. 'in' → logprob: -8.374353408813477
    7. '(i' → logprob: -8.749353408813477
    8. '(range' → logprob: -8.874353408813477
    9. '_' → logprob: -9.499353408813477
    10. ' _' → logprob: -9.624353408813477

Token 865: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10968566685914993
    2. 'in' → logprob: -2.3596856594085693
    3. 'range' → logprob: -4.734685897827148
    4. '(range' → logprob: -7.484685897827148
    5. ' range' → logprob: -9.609685897827148
    6. ' i' → logprob: -12.734685897827148
    7. ' ' → logprob: -12.859685897827148
    8. 'i' → logprob: -12.984685897827148
    9. '(i' → logprob: -13.234685897827148
    10. '
' → logprob: -13.234685897827148

Token 866: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0052384985610842705
    2. ' range' → logprob: -5.2552385330200195
    3. '(range' → logprob: -12.50523853302002
    4. 'r' → logprob: -14.00523853302002
    5. '   ' → logprob: -16.630237579345703
    6. ' ' → logprob: -17.130237579345703
    7. 'rang' → logprob: -17.255237579345703
    8. '	range' → logprob: -17.255237579345703
    9. 'ran' → logprob: -17.755237579345703
    10. '
' → logprob: -17.880237579345703

Token 867: '(' (ID: 7)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.32558774948120117
    2. 'range' → logprob: -1.5755877494812012
    3. ' range' → logprob: -2.825587749481201
    4. '(W' → logprob: -4.450587749481201
    5. '(w' → logprob: -10.45058822631836
    6. '(R' → logprob: -11.20058822631836
    7. '(r' → logprob: -12.07558822631836
    8. '(' → logprob: -12.20058822631836
    9. '((' → logprob: -12.20058822631836
    10. '	range' → logprob: -12.82558822631836

Token 868: '100' (ID: 1353)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.027034342288970947
    2. 'W' → logprob: -4.152034282684326
    3. '(W' → logprob: -4.652034282684326
    4. ' range' → logprob: -6.652034282684326
    5. '(range' → logprob: -9.402034759521484
    6. 'w' → logprob: -11.152034759521484
    7. '[' → logprob: -13.777034759521484
    8. '(w' → logprob: -13.902034759521484
    9. '   ' → logprob: -14.027034759521484
    10. ' W' → logprob: -14.277034759521484

Token 869: '01' (ID: 2290)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.6683139204978943
    2. '001' → logprob: -1.168313980102539
    3. '1' → logprob: -2.418313980102539
    4. '+' → logprob: -3.668313980102539
    5. '01' → logprob: -3.668313980102539
    6. '*' → logprob: -4.043313980102539
    7. '0' → logprob: -4.918313980102539
    8. '00' → logprob: -5.543313980102539
    9. '005' → logprob: -6.793313980102539
    10. ')]' → logprob: -6.918313980102539

Token 870: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4752494692802429
    2. ')]' → logprob: -0.9752494692802429
    3. ')]
' → logprob: -7.350249290466309
    4. ']
' → logprob: -7.850249290466309
    5. ')]
' → logprob: -10.350249290466309
    6. ')' → logprob: -10.350249290466309
    7. ' ]' → logprob: -10.475249290466309
    8. ']
' → logprob: -10.600249290466309
    9. ']]' → logprob: -12.225249290466309
    10. '])' → logprob: -12.225249290466309

Token 871: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0001584850688232109
    2. '"""
' → logprob: -9.125158309936523
    3. 'for' → logprob: -10.500158309936523
    4. '"""' → logprob: -11.125158309936523
    5. '0' → logprob: -13.250158309936523
    6. ' dp' → logprob: -13.375158309936523
    7. '
' → logprob: -13.500158309936523
    8. '	dp' → logprob: -14.250158309936523
    9. ']' → logprob: -15.500158309936523
    10. '"""

' → logprob: -15.625158309936523

Token 872: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.7729658540920354e-05
    2. '0' → logprob: -10.625027656555176
    3. '[
' → logprob: -13.750027656555176
    4. '=' → logprob: -14.875027656555176
    5. '
' → logprob: -15.125027656555176
    6. '[:' → logprob: -15.250027656555176
    7. 'dp' → logprob: -15.375027656555176
    8. 's' → logprob: -15.500027656555176
    9. '```' → logprob: -16.375028610229492
    10. ']' → logprob: -16.500028610229492

Token 873: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015040287980809808
    2. '[' → logprob: -6.501503944396973
    3. ' ' → logprob: -14.126503944396973
    4. ']' → logprob: -15.376503944396973
    5. '000' → logprob: -16.00150489807129
    6. '1' → logprob: -16.37650489807129
    7. 's' → logprob: -16.62650489807129
    8. '00' → logprob: -16.75150489807129
    9. '-' → logprob: -16.87650489807129
    10. '(' → logprob: -17.00150489807129

Token 874: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005310012027621269
    2. ']=' → logprob: -5.25531005859375
    3. '=' → logprob: -9.63031005859375
    4. ' ]' → logprob: -11.50531005859375
    5. ']
' → logprob: -15.38031005859375
    6. ']==' → logprob: -16.13031005859375
    7. ')' → logprob: -17.38031005859375
    8. ']=-' → logprob: -17.50531005859375
    9. ']+=' → logprob: -17.50531005859375
    10. ']={' → logprob: -17.88031005859375

Token 875: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0004307884373702109
    2. ' =' → logprob: -7.750430583953857
    3. '=
' → logprob: -17.250431060791016
    4. ' ' → logprob: -17.875431060791016
    5. '0' → logprob: -17.875431060791016
    6. '=int' → logprob: -18.250431060791016
    7. '＝' → logprob: -19.375431060791016
    8. ']=' → logprob: -19.750431060791016
    9. ')=' → logprob: -20.125431060791016
    10. '=}' → logprob: -20.375431060791016

Token 876: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '00' → logprob: -18.937501907348633
    4. '   ' → logprob: -19.187501907348633
    5. '1' → logprob: -19.375001907348633
    6. '000' → logprob: -19.562501907348633
    7. '[' → logprob: -19.750001907348633
    8. '۰' → logprob: -20.312501907348633
    9. '  ' → logprob: -20.562501907348633
    10. '    ' → logprob: -20.687501907348633

Token 877: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '(' → logprob: -20.875
    4. '00' → logprob: -21.0
    5. '1' → logprob: -21.5
    6. '۰' → logprob: -21.5
    7. '000' → logprob: -21.875
    8. '[' → logprob: -21.875
    9. '０' → logprob: -22.5
    10. '{' → logprob: -23.0

Token 878: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02983749657869339
    2. '
' → logprob: -3.6548376083374023
    3. ' for' → logprob: -5.654837608337402
    4. '\n' → logprob: -11.279837608337402
    5. '	for' → logprob: -12.029837608337402
    6. '
' → logprob: -12.904837608337402
    7. '' → logprob: -12.904837608337402
    8. '   ' → logprob: -13.529837608337402
    9. '<|end|>' → logprob: -13.654837608337402
    10. ')' → logprob: -13.779837608337402

Token 879: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00011272187111899257
    2. ' for' → logprob: -9.375112533569336
    3. '
' → logprob: -10.500112533569336
    4. 'f' → logprob: -16.625112533569336
    5. 'w' → logprob: -17.125112533569336
    6. '	for' → logprob: -17.250112533569336
    7. 'i' → logprob: -17.500112533569336
    8. 'n' → logprob: -17.500112533569336
    9. '   ' → logprob: -18.000112533569336
    10. 'W' → logprob: -18.375112533569336

Token 880: ' v' (ID: 323)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005884591024369001
    2. 'w' → logprob: -6.130884647369385
    3. ' i' → logprob: -6.130884647369385
    4. 'v' → logprob: -7.505884647369385
    5. 'j' → logprob: -7.755884647369385
    6. 'b' → logprob: -8.630884170532227
    7. 'weight' → logprob: -8.630884170532227
    8. 'cost' → logprob: -9.755884170532227
    9. 'value' → logprob: -10.755884170532227
    10. 'x' → logprob: -11.005884170532227

Token 881: ',w' (ID: 49598)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6490276455879211
    2. ' in' → logprob: -1.6490275859832764
    3. 'w' → logprob: -2.0240275859832764
    4. ',w' → logprob: -2.6490275859832764
    5. 'in' → logprob: -3.2740275859832764
    6. 'i' → logprob: -4.0240278244018555
    7. ',i' → logprob: -4.7740278244018555
    8. ',b' → logprob: -6.1490278244018555
    9. ',val' → logprob: -6.1490278244018555
    10. 'c' → logprob: -6.6490278244018555

Token 882: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03033350594341755
    2. 'in' → logprob: -3.7803335189819336
    3. ',' → logprob: -5.530333518981934
    4. ',v' → logprob: -6.405333518981934
    5. ',b' → logprob: -7.780333518981934
    6. 'b' → logprob: -8.155333518981934
    7. '
' → logprob: -9.405333518981934
    8. ',j' → logprob: -9.530333518981934
    9. ',w' → logprob: -9.530333518981934
    10. '   ' → logprob: -9.655333518981934

Token 883: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00023071514442563057
    2. ' b' → logprob: -8.37523078918457
    3. 'zip' → logprob: -16.50023078918457
    4. '	b' → logprob: -17.62523078918457
    5. '[b' → logprob: -18.87523078918457
    6. 'range' → logprob: -19.00023078918457
    7. '
' → logprob: -19.12523078918457
    8. ' ' → logprob: -19.25023078918457
    9. ')b' → logprob: -19.37523078918457
    10. '
' → logprob: -19.37523078918457

Token 884: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3484613597393036
    2. ':
' → logprob: -1.223461389541626
    3. ':
' → logprob: -12.473461151123047
    4. ' :' → logprob: -12.723461151123047
    5. ' :
' → logprob: -12.723461151123047
    6. '):
' → logprob: -12.973461151123047
    7. '   ' → logprob: -13.723461151123047
    8. ':

' → logprob: -14.098461151123047
    9. ',' → logprob: -14.098461151123047
    10. '):' → logprob: -14.598461151123047

Token 885: '   ' (ID: 271)
  Prédit: '	for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	for' → logprob: -0.13668522238731384
    2. '   ' → logprob: -2.3866851329803467
    3. ' for' → logprob: -3.3866851329803467
    4. '	v' → logprob: -6.636685371398926
    5. '	' → logprob: -8.636685371398926
    6. '       ' → logprob: -9.136685371398926
    7. '	   ' → logprob: -9.636685371398926
    8. '	if' → logprob: -9.636685371398926
    9. '	while' → logprob: -9.761685371398926
    10. '	range' → logprob: -10.261685371398926

Token 886: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0150900324806571
    2. '   ' → logprob: -4.515089988708496
    3. ' for' → logprob: -5.515089988708496
    4. '	for' → logprob: -11.765089988708496
    5. ' ' → logprob: -14.390089988708496
    6. '```' → logprob: -16.265090942382812
    7. '  ' → logprob: -16.515090942382812
    8. '
' → logprob: -17.390090942382812
    9. '    
' → logprob: -18.890090942382812
    10. '   ' → logprob: -19.265090942382812

Token 887: ' i' (ID: 575)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.6829119920730591
    2. 'weight' → logprob: -1.182911992073059
    3. 'range' → logprob: -1.807911992073059
    4. 'i' → logprob: -4.6829118728637695
    5. 'j' → logprob: -5.0579118728637695
    6. 'value' → logprob: -5.4329118728637695
    7. 'v' → logprob: -6.3079118728637695
    8. 'val' → logprob: -6.6829118728637695
    9. 'x' → logprob: -7.9329118728637695
    10. 'wv' → logprob: -8.05791187286377

Token 888: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.10256192833185196
    2. ' in' → logprob: -2.3525619506835938
    3. 'range' → logprob: -6.102561950683594
    4. '(' → logprob: -9.602561950683594
    5. '(range' → logprob: -10.977561950683594
    6. ' range' → logprob: -11.977561950683594
    7. 'w' → logprob: -12.102561950683594
    8. '
' → logprob: -12.602561950683594
    9. '(w' → logprob: -12.977561950683594
    10. ' ' → logprob: -13.102561950683594

Token 889: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.847109812544659e-05
    2. ' range' → logprob: -10.000048637390137
    3. 're' → logprob: -12.750048637390137
    4. '
' → logprob: -17.62504768371582
    5. '   ' → logprob: -17.62504768371582
    6. 'reverse' → logprob: -18.12504768371582
    7. '

' → logprob: -18.37504768371582
    8. 'r' → logprob: -18.87504768371582
    9. 'ran' → logprob: -19.50004768371582
    10. '  ' → logprob: -19.62504768371582

Token 890: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16139410436153412
    2. '100' → logprob: -1.9113941192626953
    3. '(len' → logprob: -6.911394119262695
    4. 'len' → logprob: -8.786394119262695
    5. '999' → logprob: -11.911394119262695
    6. 'W' → logprob: -12.911394119262695
    7. '
' → logprob: -13.286394119262695
    8. ' ' → logprob: -13.286394119262695
    9. '(v' → logprob: -13.411394119262695
    10. '(W' → logprob: -13.536394119262695

Token 891: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.002383495680987835
    2. '999' → logprob: -6.502383708953857
    3. 'W' → logprob: -7.127383708953857
    4. 'len' → logprob: -9.8773832321167
    5. 'w' → logprob: -12.5023832321167
    6. '10' → logprob: -12.5023832321167
    7. '(' → logprob: -12.5023832321167
    8. ' ' → logprob: -12.6273832321167
    9. '1' → logprob: -12.6273832321167
    10. '(W' → logprob: -12.8773832321167

Token 892: '01' (ID: 2290)
  Prédit: '01'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -0.07902969419956207
    2. '00' → logprob: -2.5790297985076904
    3. '02' → logprob: -9.45403003692627
    4. '0' → logprob: -10.70403003692627
    5. '1' → logprob: -10.82903003692627
    6. '001' → logprob: -11.07903003692627
    7. '000' → logprob: -12.95403003692627
    8. '```' → logprob: -14.82903003692627
    9. '05' → logprob: -15.64153003692627
    10. '002' → logprob: -15.70403003692627

Token 893: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10599283874034882
    2. '-w' → logprob: -2.6059927940368652
    3. ' -' → logprob: -3.9809927940368652
    4. '):
' → logprob: -5.730992794036865
    5. 'w' → logprob: -5.855992794036865
    6. '-v' → logprob: -6.730992794036865
    7. '):' → logprob: -7.605992794036865
    8. 'v' → logprob: -8.980993270874023
    9. '
' → logprob: -10.480993270874023
    10. '1' → logprob: -10.480993270874023

Token 894: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04351188242435455
    2. '	if' → logprob: -3.6685118675231934
    3. 'if' → logprob: -4.918511867523193
    4. '       ' → logprob: -5.168511867523193
    5. ' if' → logprob: -5.543511867523193
    6. '	   ' → logprob: -9.918512344360352
    7. '   ' → logprob: -10.543512344360352
    8. '  ' → logprob: -10.668512344360352
    9. '    ' → logprob: -11.043512344360352
    10. ' ' → logprob: -11.418512344360352

Token 895: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.46523863077163696
    2. ' if' → logprob: -1.4652385711669922
    3. '   ' → logprob: -1.9652385711669922
    4. '	if' → logprob: -7.090238571166992
    5. '       ' → logprob: -10.590238571166992
    6. 'dp' → logprob: -12.965238571166992
    7. '    ' → logprob: -12.965238571166992
    8. ' ' → logprob: -13.715238571166992
    9. '   ' → logprob: -13.715238571166992
    10. '  ' → logprob: -13.965238571166992

Token 896: ' ' (ID: 220)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.006691225338727236
    2. 'i' → logprob: -5.2566914558410645
    3. 'w' → logprob: -6.8816914558410645
    4. ' dp' → logprob: -8.006690979003906
    5. 'v' → logprob: -10.006690979003906
    6. '   ' → logprob: -10.506690979003906
    7. ' i' → logprob: -12.131690979003906
    8. '	dp' → logprob: -12.381690979003906
    9. '0' → logprob: -12.506690979003906
    10. 'd' → logprob: -12.756690979003906

Token 897: '100' (ID: 1353)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.031267181038856506
    2. 'i' → logprob: -3.5312671661376953
    3. 'w' → logprob: -6.656267166137695
    4. 'v' → logprob: -9.156267166137695
    5. ' dp' → logprob: -9.781267166137695
    6. '   ' → logprob: -10.656267166137695
    7. 'd' → logprob: -11.656267166137695
    8. '0' → logprob: -11.906267166137695
    9. '	dp' → logprob: -12.156267166137695
    10. '(dp' → logprob: -12.656267166137695

Token 898: '00' (ID: 504)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8317956328392029
    2. '01' → logprob: -0.8317956328392029
    3. '0' → logprob: -3.2067956924438477
    4. '00' → logprob: -3.4567956924438477
    5. '001' → logprob: -3.9567956924438477
    6. ' -' → logprob: -4.706795692443848
    7. '000' → logprob: -4.956795692443848
    8. '>=' → logprob: -5.081795692443848
    9. 'i' → logprob: -5.331795692443848
    10. '-i' → logprob: -5.831795692443848

Token 899: '-i' (ID: 18499)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.090276837348938
    2. '-i' → logprob: -1.090276837348938
    3. '-v' → logprob: -2.0902767181396484
    4. '>=' → logprob: -2.4652767181396484
    5. '-w' → logprob: -2.7152767181396484
    6. ' -' → logprob: -2.9652767181396484
    7. '>' → logprob: -8.215276718139648
    8. ' >=' → logprob: -8.465276718139648
    9. '
' → logprob: -8.715276718139648
    10. '+' → logprob: -8.715276718139648

Token 900: '+' (ID: 10)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.004949816502630711
    2. ' >=' → logprob: -5.379950046539307
    3. '-' → logprob: -8.754949569702148
    4. '
' → logprob: -9.879949569702148
    5. '>' → logprob: -10.254949569702148
    6. ')>=' → logprob: -10.629949569702148
    7. ']>=' → logprob: -11.129949569702148
    8. '≥' → logprob: -11.379949569702148
    9. ' -' → logprob: -11.754949569702148
    10. 'w' → logprob: -12.004949569702148

Token 901: 'v' (ID: 85)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0024925414472818375
    2. ' w' → logprob: -6.127492427825928
    3. '>w' → logprob: -9.252492904663086
    4. '1' → logprob: -9.377492904663086
    5. 'v' → logprob: -10.752492904663086
    6. 'W' → logprob: -10.752492904663086
    7. '>' → logprob: -10.877492904663086
    8. '<w' → logprob: -11.502492904663086
    9. '=w' → logprob: -11.502492904663086
    10. '	w' → logprob: -11.627492904663086

Token 902: ' <' (ID: 464)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.5995126366615295
    2. '<=' → logprob: -1.5995125770568848
    3. ' >=' → logprob: -2.3495125770568848
    4. '<' → logprob: -2.5995125770568848
    5. ' <=' → logprob: -2.8495125770568848
    6. ' <' → logprob: -4.224512577056885
    7. '>' → logprob: -5.974512577056885
    8. '0' → logprob: -6.349512577056885
    9. ' >' → logprob: -7.974512577056885
    10. '<|end|>' → logprob: -8.474513053894043

Token 903: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.012487873435020447
    2. ' ' → logprob: -4.637487888336182
    3. '0' → logprob: -6.262487888336182
    4. '=' → logprob: -7.512487888336182
    5. 'len' → logprob: -8.637487411499023
    6. '1' → logprob: -10.012487411499023
    7. '101' → logprob: -11.012487411499023
    8. '
' → logprob: -11.262487411499023
    9. ' =' → logprob: -11.762487411499023
    10. ' len' → logprob: -12.512487411499023

Token 904: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0022232949268072844
    2. '0' → logprob: -6.627223491668701
    3. 'len' → logprob: -7.127223491668701
    4. '=' → logprob: -9.502223014831543
    5. ' ' → logprob: -11.502223014831543
    6. 'dp' → logprob: -12.127223014831543
    7. '1' → logprob: -13.627223014831543
    8. ' =' → logprob: -14.502223014831543
    9. ' len' → logprob: -15.127223014831543
    10. '
' → logprob: -15.252223014831543

Token 905: '01' (ID: 2290)
  Prédit: '01'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -0.0008727516396902502
    2. '1' → logprob: -7.125872611999512
    3. '00' → logprob: -10.250872611999512
    4. '02' → logprob: -11.000872611999512
    5. '0' → logprob: -11.750872611999512
    6. ' ' → logprob: -12.625872611999512
    7. '001' → logprob: -13.250872611999512
    8. '   ' → logprob: -14.500872611999512
    9. '```' → logprob: -14.563372611999512
    10. '2' → logprob: -14.688372611999512

Token 906: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1814308762550354
    2. 'and' → logprob: -1.8064308166503906
    3. ':
' → logprob: -6.806430816650391
    4. ':' → logprob: -7.681430816650391
    5. '	and' → logprob: -9.93143081665039
    6. '   ' → logprob: -10.80643081665039
    7. '):
' → logprob: -11.68143081665039
    8. '       ' → logprob: -11.93143081665039
    9. ')' → logprob: -12.05643081665039
    10. ']' → logprob: -12.43143081665039

Token 907: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10040981322526932
    2. '           ' → logprob: -3.100409746170044
    3. '        ' → logprob: -4.475409984588623
    4. '	' → logprob: -4.475409984588623
    5. '   ' → logprob: -5.350409984588623
    6. '    ' → logprob: -5.350409984588623
    7. '	       ' → logprob: -5.350409984588623
    8. '<|end|>' → logprob: -5.850409984588623
    9. '		' → logprob: -6.350409984588623
    10. ' ' → logprob: -6.725409984588623

Token 908: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.012658914551138878
    2. ' dp' → logprob: -4.762659072875977
    3. 'if' → logprob: -5.637659072875977
    4. '           ' → logprob: -8.137659072875977
    5. ' if' → logprob: -9.637659072875977
    6. '	dp' → logprob: -9.637659072875977
    7. '               ' → logprob: -10.012659072875977
    8. '   ' → logprob: -13.137659072875977
    9. '_dp' → logprob: -13.887659072875977
    10. '(dp' → logprob: -13.887659072875977

Token 909: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005984609015285969
    2. '[min' → logprob: -5.755984783172607
    3. '[i' → logprob: -5.880984783172607
    4. '[int' → logprob: -12.88098430633545
    5. '[max' → logprob: -13.00598430633545
    6. '[w' → logprob: -13.25598430633545
    7. ' [' → logprob: -13.63098430633545
    8. 'min' → logprob: -14.13098430633545
    9. '
' → logprob: -15.38098430633545
    10. '[np' → logprob: -15.50598430633545

Token 910: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.05523981899023056
    2. 'i' → logprob: -2.9302399158477783
    3. 'min' → logprob: -8.9302396774292
    4. 'max' → logprob: -9.8052396774292
    5. 'w' → logprob: -10.4302396774292
    6. '1' → logprob: -10.6802396774292
    7. ' ' → logprob: -10.8052396774292
    8. '
' → logprob: -11.1802396774292
    9. ' i' → logprob: -11.3052396774292
    10. '(' → logprob: -11.6802396774292

Token 911: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.0011541512794792652
    2. '01' → logprob: -6.876153945922852
    3. '0' → logprob: -9.876153945922852
    4. '000' → logprob: -10.001153945922852
    5. '001' → logprob: -10.751153945922852
    6. '
' → logprob: -14.126153945922852
    7. '04' → logprob: -15.063653945922852
    8. '۰۰' → logprob: -15.251153945922852
    9. ' ' → logprob: -15.313653945922852
    10. '{' → logprob: -15.376153945922852

Token 912: '-i' (ID: 18499)
  Prédit: '-i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.031911902129650116
    2. '-' → logprob: -4.156911849975586
    3. ' -' → logprob: -4.156911849975586
    4. '-ip' → logprob: -11.031911849975586
    5. 'i' → logprob: -11.156911849975586
    6. '-in' → logprob: -11.281911849975586
    7. '-v' → logprob: -12.031911849975586
    8. '-I' → logprob: -12.406911849975586
    9. '-
' → logprob: -12.781911849975586
    10. '```' → logprob: -12.781911849975586

Token 913: '+' (ID: 10)
  Prédit: '-v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-v' → logprob: -0.36998552083969116
    2. '+' → logprob: -1.369985580444336
    3. ']' → logprob: -2.994985580444336
    4. ']=' → logprob: -6.119985580444336
    5. '-' → logprob: -6.619985580444336
    6. ' -' → logprob: -7.619985580444336
    7. ']-' → logprob: -8.494985580444336
    8. 'v' → logprob: -8.619985580444336
    9. '-w' → logprob: -8.619985580444336
    10. '+w' → logprob: -8.744985580444336

Token 914: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4287339746952057
    2. 'w' → logprob: -1.0537339448928833
    3. '<|end|>' → logprob: -11.678733825683594
    4. ' w' → logprob: -12.428733825683594
    5. '0' → logprob: -12.803733825683594
    6. ' v' → logprob: -12.928733825683594
    7. 'vw' → logprob: -13.428733825683594
    8. ''w' → logprob: -13.428733825683594
    9. '```' → logprob: -13.928733825683594
    10. '	v' → logprob: -13.928733825683594

Token 915: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1836867481470108
    2. '=' → logprob: -2.5586867332458496
    3. ' =' → logprob: -2.9336867332458496
    4. ']=' → logprob: -3.3086867332458496
    5. '=min' → logprob: -7.55868673324585
    6. ')' → logprob: -10.058687210083008
    7. ' ]' → logprob: -10.558687210083008
    8. 'min' → logprob: -11.308687210083008
    9. '>' → logprob: -11.933687210083008
    10. ')=' → logprob: -12.183687210083008

Token 916: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04957265406847
    2. ' =' → logprob: -3.049572706222534
    3. '=min' → logprob: -6.924572467803955
    4. '=max' → logprob: -14.049572944641113
    5. '=
' → logprob: -15.549572944641113
    6. 'min' → logprob: -15.924572944641113
    7. ']=' → logprob: -15.924572944641113
    8. '=

' → logprob: -16.424571990966797
    9. ')=' → logprob: -17.174571990966797
    10. '>' → logprob: -17.799571990966797

Token 917: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.3306015716807451e-05
    2. ' min' → logprob: -11.25001335144043
    3. 'max' → logprob: -15.37501335144043
    4. '	min' → logprob: -18.12501335144043
    5. '
' → logprob: -20.75001335144043
    6. 'mini' → logprob: -21.37501335144043
    7. '(min' → logprob: -22.12501335144043
    8. '=min' → logprob: -22.12501335144043
    9. 'mi' → logprob: -22.37501335144043
    10. 'minimum' → logprob: -22.62501335144043

Token 918: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -2.534558552724775e-05
    2. '(' → logprob: -11.250025749206543
    3. 'dp' → logprob: -11.750025749206543
    4. '(
' → logprob: -12.375025749206543
    5. '	dp' → logprob: -16.750024795532227
    6. '(d' → logprob: -17.750024795532227
    7. ' dp' → logprob: -17.875024795532227
    8. ' (' → logprob: -18.125024795532227
    9. '(

' → logprob: -18.750024795532227
    10. '(
' → logprob: -19.375024795532227

Token 919: '[' (ID: 58)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23374934494495392
    2. '[' → logprob: -1.6087493896484375
    3. '([' → logprob: -4.8587493896484375
    4. '(dp' → logprob: -7.9837493896484375
    5. '(
' → logprob: -8.858749389648438
    6. 'dp' → logprob: -11.108749389648438
    7. '100' → logprob: -11.233749389648438
    8. '[
' → logprob: -11.483749389648438
    9. '(

' → logprob: -12.108749389648438
    10. '((' → logprob: -12.858749389648438

Token 920: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0018266693223267794
    2. '[' → logprob: -6.626826763153076
    3. '(' → logprob: -8.376826286315918
    4. 'dp' → logprob: -8.626826286315918
    5. 'i' → logprob: -9.626826286315918
    6. ' ' → logprob: -11.501826286315918
    7. '[
' → logprob: -12.751826286315918
    8. '   ' → logprob: -12.876826286315918
    9. '
' → logprob: -13.001826286315918
    10. '{' → logprob: -13.751826286315918

Token 921: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.003307824023067951
    2. '01' → logprob: -5.753307819366455
    3. '001' → logprob: -10.253308296203613
    4. '```' → logprob: -10.503308296203613
    5. 'i' → logprob: -10.878308296203613
    6. '000' → logprob: -11.003308296203613
    7. '
' → logprob: -11.253308296203613
    8. '   ' → logprob: -13.128308296203613
    9. '``' → logprob: -13.378308296203613
    10. '{i' → logprob: -13.378308296203613

Token 922: '-i' (ID: 18499)
  Prédit: '-i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.004922531545162201
    2. '+i' → logprob: -5.504922389984131
    3. '+' → logprob: -7.379922389984131
    4. 'i' → logprob: -10.004922866821289
    5. '[i' → logprob: -10.254922866821289
    6. ' -' → logprob: -10.379922866821289
    7. '[' → logprob: -10.629922866821289
    8. '-' → logprob: -10.754922866821289
    9. '-v' → logprob: -11.254922866821289
    10. '   ' → logprob: -11.879922866821289

Token 923: '+' (ID: 10)
  Prédit: '+w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+w' → logprob: -0.8360069394111633
    2. '+' → logprob: -0.9610069394111633
    3. '],' → logprob: -1.9610068798065186
    4. ']' → logprob: -3.8360068798065186
    5. ']+' → logprob: -3.9610068798065186
    6. 'w' → logprob: -6.461007118225098
    7. '][' → logprob: -8.211007118225098
    8. 'v' → logprob: -8.461007118225098
    9. '-v' → logprob: -9.336007118225098
    10. '],
' → logprob: -9.586007118225098

Token 924: 'v' (ID: 85)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.35249006748199463
    2. 'v' → logprob: -1.2274900674819946
    3. '1' → logprob: -6.227489948272705
    4. 'w' → logprob: -6.352489948272705
    5. ' i' → logprob: -8.977490425109863
    6. ']' → logprob: -9.102490425109863
    7. 'dp' → logprob: -11.102490425109863
    8. ' v' → logprob: -11.102490425109863
    9. '```' → logprob: -12.102490425109863
    10. '])' → logprob: -12.227490425109863

Token 925: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06317570060491562
    2. '],' → logprob: -2.813175678253174
    3. ' ,' → logprob: -6.813175678253174
    4. 'dp' → logprob: -10.063176155090332
    5. ']' → logprob: -11.188176155090332
    6. '(dp' → logprob: -11.563176155090332
    7. '),' → logprob: -11.938176155090332
    8. ' ],' → logprob: -12.063176155090332
    9. ',w' → logprob: -12.563176155090332
    10. ',
' → logprob: -12.688176155090332

Token 926: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -5.157039049663581e-05
    2. ' dp' → logprob: -10.125051498413086
    3. '100' → logprob: -11.500051498413086
    4. '	dp' → logprob: -13.875051498413086
    5. '(dp' → logprob: -15.625051498413086
    6. '   ' → logprob: -15.875051498413086
    7. 'd' → logprob: -16.625051498413086
    8. ' ' → logprob: -17.500051498413086
    9. '           ' → logprob: -18.375051498413086
    10. '```' → logprob: -18.625051498413086

Token 927: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.027452772483229637
    2. '[i' → logprob: -3.6524527072906494
    3. '100' → logprob: -6.7774529457092285
    4. '[
' → logprob: -12.65245246887207
    5. ' [' → logprob: -12.90245246887207
    6. 'i' → logprob: -13.27745246887207
    7. ' ' → logprob: -13.52745246887207
    8. '[(' → logprob: -14.15245246887207
    9. '(' → logprob: -14.27745246887207
    10. '[int' → logprob: -14.27745246887207

Token 928: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0003017385315615684
    2. 'i' → logprob: -8.125301361083984
    3. ' ' → logprob: -12.750301361083984
    4. '
' → logprob: -14.000301361083984
    5. '   ' → logprob: -14.375301361083984
    6. '1' → logprob: -15.250301361083984
    7. '```' → logprob: -15.875301361083984
    8. '[i' → logprob: -16.000301361083984
    9. '[' → logprob: -16.250301361083984
    10. ' i' → logprob: -16.375301361083984

Token 929: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.012473865412175655
    2. ']' → logprob: -4.762474060058594
    3. '```' → logprob: -7.137474060058594
    4. '[' → logprob: -7.387474060058594
    5. '0' → logprob: -8.012474060058594
    6. '][' → logprob: -8.137474060058594
    7. ']]' → logprob: -8.262474060058594
    8. ']+' → logprob: -8.387474060058594
    9. ']]
' → logprob: -8.387474060058594
    10. '000' → logprob: -9.137474060058594

Token 930: '-i' (ID: 18499)
  Prédit: '-i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.004295045975595713
    2. ' -' → logprob: -5.5042948722839355
    3. '-' → logprob: -8.879295349121094
    4. 'i' → logprob: -10.129295349121094
    5. '-ip' → logprob: -11.129295349121094
    6. '-ai' → logprob: -12.254295349121094
    7. '-
' → logprob: -13.379295349121094
    8. '
' → logprob: -13.754295349121094
    9. '<|end|>' → logprob: -13.754295349121094
    10. ' ' → logprob: -13.754295349121094

Token 931: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.42913925647735596
    2. ']' → logprob: -1.054139256477356
    3. '-w' → logprob: -8.304139137268066
    4. ' ]' → logprob: -9.804139137268066
    5. ']-' → logprob: -10.429139137268066
    6. 'w' → logprob: -10.804139137268066
    7. '+w' → logprob: -10.804139137268066
    8. '])' → logprob: -11.054139137268066
    9. '+' → logprob: -11.054139137268066
    10. ']
' → logprob: -11.554139137268066

Token 932: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00011331788846291602
    2. ' w' → logprob: -9.125113487243652
    3. '   ' → logprob: -13.375113487243652
    4. '	w' → logprob: -14.250113487243652
    5. '+w' → logprob: -14.250113487243652
    6. ' ' → logprob: -14.875113487243652
    7. '+' → logprob: -16.000112533569336
    8. '  ' → logprob: -16.125112533569336
    9. '    ' → logprob: -16.250112533569336
    10. 'v' → logprob: -16.250112533569336

Token 933: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1269487887620926
    2. ')
' → logprob: -2.126948833465576
    3. '"""' → logprob: -11.626948356628418
    4. ' )' → logprob: -12.501948356628418
    5. ')
' → logprob: -13.001948356628418
    6. ' )
' → logprob: -13.501948356628418
    7. '```' → logprob: -13.501948356628418
    8. '
' → logprob: -13.751948356628418
    9. ')

' → logprob: -14.251948356628418
    10. '"""
' → logprob: -15.001948356628418

Token 934: 'for' (ID: 1938)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19294439256191254
    2. '<|end|>' → logprob: -1.9429444074630737
    3. ' 
' → logprob: -3.942944288253784
    4. '
' → logprob: -4.567944526672363
    5. ')' → logprob: -7.442944526672363
    6. '\n' → logprob: -7.817944526672363
    7. '' → logprob: -7.942944526672363
    8. ' )' → logprob: -8.442944526672363
    9. '<|end|>' → logprob: -8.817944526672363
    10. '  ' → logprob: -8.817944526672363

Token 935: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11679638922214508
    2. ' i' → logprob: -2.4917964935302734
    3. 'v' → logprob: -3.7417964935302734
    4. ' v' → logprob: -6.616796493530273
    5. '_' → logprob: -6.866796493530273
    6. '100' → logprob: -7.116796493530273
    7. 'w' → logprob: -8.491796493530273
    8. ' ' → logprob: -9.491796493530273
    9. 'j' → logprob: -9.616796493530273
    10. '	i' → logprob: -10.116796493530273

Token 936: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4742348790168762
    2. 'in' → logprob: -0.9742348790168762
    3. 'range' → logprob: -8.974234580993652
    4. ' i' → logprob: -11.849234580993652
    5. ' range' → logprob: -11.849234580993652
    6. '100' → logprob: -12.099234580993652
    7. ' ' → logprob: -12.224234580993652
    8. 'n' → logprob: -12.849234580993652
    9. 'i' → logprob: -13.099234580993652
    10. '  ' → logprob: -14.599234580993652

Token 937: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.817902173381299e-05
    2. ' range' → logprob: -9.25009822845459
    3. 're' → logprob: -14.62509822845459
    4. '   ' → logprob: -15.12509822845459
    5. '100' → logprob: -15.12509822845459
    6. 'ran' → logprob: -15.50009822845459
    7. 'r' → logprob: -15.75009822845459
    8. '
' → logprob: -15.87509822845459
    9. '(range' → logprob: -15.87509822845459
    10. ' ' → logprob: -16.000097274780273

Token 938: '(' (ID: 7)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.002857416868209839
    2. '(' → logprob: -5.877857208251953
    3. '1' → logprob: -10.877857208251953
    4. '999' → logprob: -11.627857208251953
    5. 'W' → logprob: -12.002857208251953
    6. '(W' → logprob: -12.377857208251953
    7. ' ' → logprob: -12.502857208251953
    8. '0' → logprob: -12.752857208251953
    9. '10' → logprob: -12.752857208251953
    10. 'w' → logprob: -13.627857208251953

Token 939: '1' (ID: 16)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -5.5861724831629544e-05
    2. 'len' → logprob: -10.500056266784668
    3. '1' → logprob: -11.625056266784668
    4. ' ' → logprob: -11.750056266784668
    5. 'W' → logprob: -13.125056266784668
    6. '0' → logprob: -13.250056266784668
    7. 'mod' → logprob: -13.375056266784668
    8. '
' → logprob: -13.500056266784668
    9. 'dp' → logprob: -13.625056266784668
    10. '999' → logprob: -14.250056266784668

Token 940: ',' (ID: 11)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.23099830746650696
    2. '100' → logprob: -1.7309982776641846
    3. '(' → logprob: -4.105998516082764
    4. '0' → logprob: -4.730998516082764
    5. ',' → logprob: -6.730998516082764
    6. '00' → logprob: -7.105998516082764
    7. ' ' → logprob: -7.730998516082764
    8. '1' → logprob: -8.230998039245605
    9. '
' → logprob: -8.480998039245605
    10. '010' → logprob: -8.855998039245605

Token 941: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -9.782141569303349e-05
    2. ' ' → logprob: -9.37509822845459
    3. 'len' → logprob: -12.00009822845459
    4. '10' → logprob: -13.12509822845459
    5. '
' → logprob: -13.62509822845459
    6. '   ' → logprob: -14.00009822845459
    7. '1' → logprob: -14.00009822845459
    8. 'w' → logprob: -14.50009822845459
    9. 'W' → logprob: -15.12509822845459
    10. '  ' → logprob: -15.12509822845459

Token 942: '00' (ID: 504)
  Prédit: '01'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -7.584239938296378e-06
    2. '001' → logprob: -12.500007629394531
    3. '00' → logprob: -12.875007629394531
    4. '1' → logprob: -14.125007629394531
    5. '02' → logprob: -14.500007629394531
    6. '```' → logprob: -17.75000762939453
    7. '05' → logprob: -17.87500762939453
    8. '0' → logprob: -18.12500762939453
    9. '000' → logprob: -18.37500762939453
    10. ')' → logprob: -19.50000762939453

Token 943: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03460562601685524
    2. '1' → logprob: -3.5346057415008545
    3. '):
' → logprob: -6.284605503082275
    4. '):' → logprob: -6.409605503082275
    5. ' +' → logprob: -7.409605503082275
    6. ')' → logprob: -7.909605503082275
    7. '01' → logprob: -8.534605979919434
    8. '0' → logprob: -9.659605979919434
    9. ',' → logprob: -10.784605979919434
    10. '001' → logprob: -10.909605979919434

Token 944: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15030857920646667
    2. 'if' → logprob: -2.400308609008789
    3. ' if' → logprob: -3.025308609008789
    4. '	if' → logprob: -8.400308609008789
    5. ' ' → logprob: -9.775308609008789
    6. '<|end|>' → logprob: -10.525308609008789
    7. '  ' → logprob: -11.650308609008789
    8. 'If' → logprob: -13.275308609008789
    9. '<|end|>' → logprob: -13.775308609008789
    10. '   ' → logprob: -14.150308609008789

Token 945: ' dp' (ID: 21546)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.414290189743042
    2. 'if' → logprob: -1.664290189743042
    3. '   ' → logprob: -1.914290189743042
    4. '	if' → logprob: -6.039290428161621
    5. ' ' → logprob: -11.539290428161621
    6. 'i' → logprob: -11.664290428161621
    7. '```' → logprob: -12.164290428161621
    8. '       ' → logprob: -12.664290428161621
    9. '  ' → logprob: -13.289290428161621
    10. 'If' → logprob: -13.664290428161621

Token 946: '[' (ID: 58)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.975612187583465e-05
    2. '[' → logprob: -10.500029563903809
    3. '100' → logprob: -13.625029563903809
    4. 'i' → logprob: -15.500029563903809
    5. '=' → logprob: -15.625029563903809
    6. 'print' → logprob: -15.875029563903809
    7. '(i' → logprob: -16.750030517578125
    8. '=i' → logprob: -16.750030517578125
    9. '```' → logprob: -17.375030517578125
    10. ' =' → logprob: -17.500030517578125

Token 947: '100' (ID: 1353)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.0100624169572257e-05
    2. '100' → logprob: -10.875020027160645
    3. ' i' → logprob: -13.875020027160645
    4. '(i' → logprob: -16.75002098083496
    5. '[i' → logprob: -18.00002098083496
    6. '	i' → logprob: -18.12502098083496
    7. ' ' → logprob: -18.50002098083496
    8. '0' → logprob: -18.50002098083496
    9. '   ' → logprob: -18.62502098083496
    10. '1' → logprob: -18.75002098083496

Token 948: '00' (ID: 504)
  Prédit: '01'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -0.007693813648074865
    2. '00' → logprob: -4.882693767547607
    3. '001' → logprob: -9.757694244384766
    4. '0' → logprob: -10.757694244384766
    5. '1' → logprob: -12.257694244384766
    6. '02' → logprob: -13.632694244384766
    7. '
' → logprob: -13.882694244384766
    8. '000' → logprob: -14.007694244384766
    9. ' ' → logprob: -15.132694244384766
    10. '```' → logprob: -15.757694244384766

Token 949: '-i' (ID: 18499)
  Prédit: '-i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.04432530701160431
    2. '-' → logprob: -3.169325351715088
    3. ' -' → logprob: -7.294325351715088
    4. '+i' → logprob: -7.794325351715088
    5. ']' → logprob: -9.04432487487793
    6. '+' → logprob: -10.04432487487793
    7. '-=' → logprob: -11.29432487487793
    8. ']-' → logprob: -11.79432487487793
    9. '-
' → logprob: -11.91932487487793
    10. '-I' → logprob: -11.91932487487793

Token 950: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0034944696817547083
    2. ']=' → logprob: -6.1284942626953125
    3. '+' → logprob: -7.3784942626953125
    4. ' ]' → logprob: -8.378494262695312
    5. ']+=' → logprob: -8.378494262695312
    6. '-' → logprob: -9.003494262695312
    7. ']+' → logprob: -10.253494262695312
    8. ']==' → logprob: -11.378494262695312
    9. ']=-' → logprob: -11.628494262695312
    10. '+]' → logprob: -12.003494262695312

Token 951: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005245733540505171
    2. ' =' → logprob: -5.255245685577393
    3. '+=' → logprob: -11.88024616241455
    4. '>' → logprob: -13.00524616241455
    5. '>=' → logprob: -14.00524616241455
    6. '=min' → logprob: -14.25524616241455
    7. '=float' → logprob: -15.00524616241455
    8. ']=' → logprob: -15.38024616241455
    9. ']' → logprob: -16.255245208740234
    10. ' +=' → logprob: -16.380245208740234

Token 952: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.005377830006182194
    2. 'dp' → logprob: -5.380377769470215
    3. ' min' → logprob: -7.255377769470215
    4. 'max' → logprob: -11.380377769470215
    5. 'float' → logprob: -11.630377769470215
    6. ' dp' → logprob: -12.005377769470215
    7. 'mi' → logprob: -12.255377769470215
    8. '	min' → logprob: -12.255377769470215
    9. 'mini' → logprob: -12.380377769470215
    10. 'minimum' → logprob: -12.380377769470215

Token 953: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -2.176947600673884e-05
    2. '(' → logprob: -10.750021934509277
    3. '(
' → logprob: -15.250021934509277
    4. '(d' → logprob: -18.75002098083496
    5. '(min' → logprob: -19.12502098083496
    6. 'dp' → logprob: -19.75002098083496
    7. ' (' → logprob: -19.75002098083496
    8. '	dp' → logprob: -20.37502098083496
    9. '(dt' → logprob: -20.62502098083496
    10. '(df' → logprob: -20.62502098083496

Token 954: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.2524021157296374e-05
    2. '(' → logprob: -10.000052452087402
    3. '100' → logprob: -12.125052452087402
    4. '[
' → logprob: -13.625052452087402
    5. '[(' → logprob: -15.750052452087402
    6. '   ' → logprob: -16.75005340576172
    7. ' [' → logprob: -17.12505340576172
    8. '	' → logprob: -17.25005340576172
    9. '([' → logprob: -17.37505340576172
    10. '[i' → logprob: -17.50005340576172

Token 955: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -14.125001907348633
    3. '(' → logprob: -14.875001907348633
    4. '   ' → logprob: -15.875001907348633
    5. '1' → logprob: -15.875001907348633
    6. '[' → logprob: -16.125001907348633
    7. '１００' → logprob: -17.625001907348633
    8. '
' → logprob: -18.000001907348633
    9. '10' → logprob: -18.000001907348633
    10. '0' → logprob: -18.500001907348633

Token 956: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.00654081255197525
    2. '001' → logprob: -5.756540775299072
    3. '01' → logprob: -5.881540775299072
    4. '000' → logprob: -8.25654125213623
    5. '-i' → logprob: -8.88154125213623
    6. '100' → logprob: -10.25654125213623
    7. '1' → logprob: -10.88154125213623
    8. '(' → logprob: -11.00654125213623
    9. '[i' → logprob: -11.00654125213623
    10. '```' → logprob: -11.00654125213623

Token 957: '-i' (ID: 18499)
  Prédit: '-i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.0021480002906173468
    2. '[i' → logprob: -6.877148151397705
    3. '00' → logprob: -7.252148151397705
    4. '100' → logprob: -9.252147674560547
    5. '+i' → logprob: -9.502147674560547
    6. '0' → logprob: -9.502147674560547
    7. '[' → logprob: -10.002147674560547
    8. ']' → logprob: -10.877147674560547
    9. '```' → logprob: -10.877147674560547
    10. '[-' → logprob: -11.127147674560547

Token 958: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06565023958683014
    2. '],' → logprob: -2.815650224685669
    3. ' ,' → logprob: -5.690650463104248
    4. 'dp' → logprob: -9.81564998626709
    5. ',d' → logprob: -10.06564998626709
    6. ']' → logprob: -10.19064998626709
    7. '+' → logprob: -10.19064998626709
    8. ',p' → logprob: -10.56564998626709
    9. '   ' → logprob: -10.81564998626709
    10. '(dp' → logprob: -10.81564998626709

Token 959: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01815626211464405
    2. ' dp' → logprob: -4.018156051635742
    3. '	dp' → logprob: -12.268156051635742
    4. '(dp' → logprob: -13.643156051635742
    5. '   ' → logprob: -15.143156051635742
    6. 'd' → logprob: -16.393156051635742
    7. '_dp' → logprob: -17.143156051635742
    8. ' ' → logprob: -17.143156051635742
    9. '.dp' → logprob: -18.143156051635742
    10. '    ' → logprob: -18.393156051635742

Token 960: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002808798337355256
    2. '100' → logprob: -5.877808570861816
    3. '[(' → logprob: -13.252808570861816
    4. '[
' → logprob: -13.627808570861816
    5. ' ' → logprob: -15.502808570861816
    6. '[[' → logprob: -15.502808570861816
    7. ' [' → logprob: -16.002809524536133
    8. '[int' → logprob: -16.377809524536133
    9. '   ' → logprob: -16.627809524536133
    10. '[...]' → logprob: -17.127809524536133

Token 961: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0001093841710826382
    2. '(' → logprob: -9.750109672546387
    3. ' ' → logprob: -10.375109672546387
    4. '999' → logprob: -11.750109672546387
    5. '[' → logprob: -12.125109672546387
    6. '   ' → logprob: -12.500109672546387
    7. '1' → logprob: -13.875109672546387
    8. '
' → logprob: -15.625109672546387
    9. '  ' → logprob: -15.625109672546387
    10. '0' → logprob: -15.750109672546387

Token 962: '01' (ID: 2290)
  Prédit: '01'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -0.5234013795852661
    2. '00' → logprob: -0.8984013795852661
    3. '001' → logprob: -8.273401260375977
    4. '1' → logprob: -12.023401260375977
    5. '000' → logprob: -12.273401260375977
    6. ' ' → logprob: -12.773401260375977
    7. '-' → logprob: -13.023401260375977
    8. '   ' → logprob: -13.148401260375977
    9. '0' → logprob: -13.773401260375977
    10. ' -' → logprob: -14.023401260375977

Token 963: '-i' (ID: 18499)
  Prédit: '-i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.06056481972336769
    2. ' -' → logprob: -3.0605647563934326
    3. '-' → logprob: -4.435564994812012
    4. '-(' → logprob: -10.185564994812012
    5. '1' → logprob: -11.935564994812012
    6. '2' → logprob: -12.560564994812012
    7. '0' → logprob: -13.435564994812012
    8. '-I' → logprob: -13.560564994812012
    9. '()-' → logprob: -14.310564994812012
    10. 'i' → logprob: -14.685564994812012

Token 964: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.004786345642060041
    2. '+' → logprob: -5.629786491394043
    3. '-' → logprob: -7.629786491394043
    4. ']+' → logprob: -8.129786491394043
    5. ']' → logprob: -8.504786491394043
    6. '])
' → logprob: -8.629786491394043
    7. ')' → logprob: -12.629786491394043
    8. ')])' → logprob: -12.754786491394043
    9. ' ])' → logprob: -12.754786491394043
    10. '])+' → logprob: -12.754786491394043

Token 965: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20310932397842407
    2. '   ' → logprob: -2.4531092643737793
    3. ' ' → logprob: -4.203109264373779
    4. '"""' → logprob: -4.578109264373779
    5. ' dp' → logprob: -4.703109264373779
    6. '  ' → logprob: -4.703109264373779
    7. ' 
' → logprob: -4.953109264373779
    8. 'dp' → logprob: -4.953109264373779
    9. '<|end|>' → logprob: -5.078109264373779
    10. ' )' → logprob: -5.328109264373779

Token 966: '(b' (ID: 3229)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.991868257522583
    2. '(max' → logprob: -1.241868257522583
    3. '(min' → logprob: -1.241868257522583
    4. '(' → logprob: -3.616868257522583
    5. '([' → logprob: -4.241868019104004
    6. '(next' → logprob: -4.741868019104004
    7. '(sum' → logprob: -7.116868019104004
    8. '(len' → logprob: -8.491868019104004
    9. '((' → logprob: -8.866868019104004
    10. '(w' → logprob: -9.991868019104004

Token 967: 'is' (ID: 276)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.027191555127501488
    2. '100' → logprob: -3.652191638946533
    3. '[-' → logprob: -8.277191162109375
    4. ')' → logprob: -8.777191162109375
    5. '[max' → logprob: -9.152191162109375
    6. '[n' → logprob: -10.277191162109375
    7. ')
' → logprob: -10.277191162109375
    8. '0' → logprob: -10.277191162109375
    9. '[w' → logprob: -10.402191162109375
    10. '[len' → logprob: -10.527191162109375

Token 968: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -6.988221684878226e-06
    2. 'ec' → logprob: -12.125006675720215
    3. 'e' → logprob: -13.625006675720215
    4. 'ext' → logprob: -15.750006675720215
    5. 'ectl' → logprob: -16.00000762939453
    6. 'sect' → logprob: -17.75000762939453
    7. 'ecta' → logprob: -17.87500762939453
    8. '```' → logprob: -18.37500762939453
    9. 'ects' → logprob: -18.62500762939453
    10. 'ex' → logprob: -19.87500762939453

Token 969: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.004553423263132572
    2. '_left' → logprob: -5.629553318023682
    3. '.' → logprob: -7.004553318023682
    4. ')' → logprob: -11.00455379486084
    5. '_right' → logprob: -11.00455379486084
    6. '(' → logprob: -13.12955379486084
    7. '(dp' → logprob: -13.12955379486084
    8. '_' → logprob: -13.75455379486084
    9. ' .' → logprob: -14.12955379486084
    10. '(b' → logprob: -14.12955379486084

Token 970: 'is' (ID: 276)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.26662421226501465
    2. 'sect' → logprob: -1.6416242122650146
    3. 'ct' → logprob: -4.516624450683594
    4. 'n' → logprob: -4.516624450683594
    5. 'sc' → logprob: -4.641624450683594
    6. 'spect' → logprob: -5.391624450683594
    7. '```' → logprob: -6.516624450683594
    8. 'sp' → logprob: -7.641624450683594
    9. 'st' → logprob: -7.891624450683594
    10. 'sce' → logprob: -8.266624450683594

Token 971: 'ect' (ID: 534)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.3869028687477112
    2. 'ect' → logprob: -1.1369028091430664
    3. 'c' → logprob: -11.261902809143066
    4. '```' → logprob: -11.636902809143066
    5. 'n' → logprob: -12.886902809143066
    6. 'с' → logprob: -13.386902809143066
    7. 't' → logprob: -13.386902809143066
    8. 'sect' → logprob: -14.011902809143066
    9. '#' → logprob: -14.386902809143066
    10. 'e' → logprob: -14.511902809143066

Token 972: '_right' (ID: 24402)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.32273486256599426
    2. '(dp' → logprob: -1.3227348327636719
    3. 'left' → logprob: -4.947734832763672
    4. '_right' → logprob: -6.822734832763672
    5. ')' → logprob: -7.322734832763672
    6. 'dp' → logprob: -8.322734832763672
    7. 'Left' → logprob: -8.447734832763672
    8. 'right' → logprob: -9.697734832763672
    9. '(' → logprob: -10.572734832763672
    10. 'Right' → logprob: -12.072734832763672

Token 973: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.375001907348633
    3. ')' → logprob: -14.500001907348633
    4. ' (' → logprob: -15.125001907348633
    5. '(df' → logprob: -17.875001907348633
    6. '(
' → logprob: -18.125001907348633
    7. '(dm' → logprob: -18.625001907348633
    8. ')(' → logprob: -19.750001907348633
    9. '(dc' → logprob: -20.125001907348633
    10. 'dp' → logprob: -20.500001907348633

Token 974: ',W' (ID: 117252)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0027976299170404673
    2. ',' → logprob: -6.502797603607178
    3. '(len' → logprob: -7.377797603607178
    4. '(W' → logprob: -8.252798080444336
    5. ' (' → logprob: -8.752798080444336
    6. ',(' → logprob: -9.877798080444336
    7. '(max' → logprob: -10.002798080444336
    8. '(w' → logprob: -10.002798080444336
    9. '((' → logprob: -10.502798080444336
    10. '(int' → logprob: -11.002798080444336

Token 975: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0747019425034523
    2. '))' → logprob: -2.699702024459839
    3. '-' → logprob: -5.94970178604126
    4. '(' → logprob: -6.94970178604126
    5. ')-' → logprob: -7.69970178604126
    6. ',' → logprob: -8.074702262878418
    7. '100' → logprob: -8.949702262878418
    8. ')
' → logprob: -9.324702262878418
    9. ')+' → logprob: -9.949702262878418
    10. '))
' → logprob: -10.449702262878418

Token 976: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004990590969100595
    2. '100' → logprob: -7.625499248504639
    3. ' ' → logprob: -12.00049877166748
    4. '2' → logprob: -12.50049877166748
    5. '   ' → logprob: -15.00049877166748
    6. '(' → logprob: -15.37549877166748
    7. '10' → logprob: -15.62549877166748
    8. ')' → logprob: -15.75049877166748
    9. '```' → logprob: -16.500499725341797
    10. '0' → logprob: -17.000499725341797

Token 977: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.7530574849806726e-05
    2. ')
' → logprob: -9.875057220458984
    3. ' )' → logprob: -12.625057220458984
    4. '+' → logprob: -13.625057220458984
    5. '
' → logprob: -14.625057220458984
    6. '```' → logprob: -15.000057220458984
    7. '))' → logprob: -15.750057220458984
    8. '+)' → logprob: -16.125057220458984
    9. '())' → logprob: -16.500057220458984
    10. '")' → logprob: -16.625057220458984

Token 978: '"""

' (ID: 34508)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013078350573778152
    2. '"""' → logprob: -5.263078212738037
    3. '
' → logprob: -6.013078212738037
    4. '<|end|>' → logprob: -6.138078212738037
    5. '```' → logprob: -6.388078212738037
    6. '#' → logprob: -7.388078212738037
    7. '\n' → logprob: -9.013078689575195
    8. '"' → logprob: -9.138078689575195
    9. ']' → logprob: -9.263078689575195
    10. '")' → logprob: -9.263078689575195

Token 979: '#' (ID: 2)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.5158897638320923
    2. '#' → logprob: -1.1408897638320923
    3. ' ' → logprob: -3.5158896446228027
    4. '"""' → logprob: -4.390889644622803
    5. '<|end|>' → logprob: -4.515889644622803
    6. '"' → logprob: -4.515889644622803
    7. ' """' → logprob: -5.515889644622803
    8. '!' → logprob: -5.765889644622803
    9. 'n' → logprob: -6.265889644622803
    10. ''' → logprob: -6.515889644622803

Token 980: '1' (ID: 16)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.2627119719982147
    2. '#' → logprob: -1.637712001800537
    3. '!' → logprob: -4.387712001800537
    4. 'n' → logprob: -5.012712001800537
    5. '#!/' → logprob: -5.262712001800537
    6. ' ' → logprob: -5.887712001800537
    7. '#!' → logprob: -6.137712001800537
    8. 'u' → logprob: -6.637712001800537
    9. 'p' → logprob: -7.012712001800537
    10. '"' → logprob: -7.387712001800537

Token 981: '_G' (ID: 5459)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 982: '
' (ID: 198)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.13400322198867798
    2. '"""
' → logprob: -2.134003162384033
    3. 'n' → logprob: -5.134003162384033
    4. '```' → logprob: -7.759003162384033
    5. '""' → logprob: -7.884003162384033
    6. '#' → logprob: -8.384003639221191
    7. '"""

' → logprob: -10.134003639221191
    8. 'def' → logprob: -11.009003639221191
    9. '"' → logprob: -11.134003639221191
    10. '""""' → logprob: -11.259003639221191

Token 983: '"""
' (ID: 15611)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.25581708550453186
    2. '"""
' → logprob: -1.5058170557022095
    3. 'n' → logprob: -5.63081693649292
    4. '""' → logprob: -9.130817413330078
    5. '"' → logprob: -9.880817413330078
    6. '#' → logprob: -10.255817413330078
    7. '```' → logprob: -10.380817413330078
    8. 'import' → logprob: -10.630817413330078
    9. '"""
' → logprob: -11.130817413330078
    10. '"""

' → logprob: -11.630817413330078

Token 984: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.020529866218566895
    2. '"""' → logprob: -4.145529747009277
    3. '"""
' → logprob: -6.020529747009277
    4. 'import' → logprob: -7.270529747009277
    5. 'def' → logprob: -7.520529747009277
    6. '
' → logprob: -8.520529747009277
    7. 's' → logprob: -9.020529747009277
    8. '(n' → logprob: -9.145529747009277
    9. '""' → logprob: -9.395529747009277
    10. '```' → logprob: -9.520529747009277

Token 985: ',W' (ID: 117252)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4974798858165741
    2. ',w' → logprob: -0.9974799156188965
    3. ',W' → logprob: -4.1224799156188965
    4. ',k' → logprob: -5.4974799156188965
    5. ',m' → logprob: -6.9974799156188965
    6. ' =' → logprob: -7.9974799156188965
    7. ',
' → logprob: -8.622479438781738
    8. 'w' → logprob: -8.622479438781738
    9. ',K' → logprob: -8.622479438781738
    10. ',s' → logprob: -8.872479438781738

Token 986: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05339908227324486
    2. ',' → logprob: -3.428399085998535
    3. ' =' → logprob: -4.053399085998535
    4. ',w' → logprob: -6.178399085998535
    5. ',m' → logprob: -10.178399085998535
    6. '=w' → logprob: -11.053399085998535
    7. ',W' → logprob: -11.428399085998535
    8. '=
' → logprob: -11.678399085998535
    9. ' ,' → logprob: -11.803399085998535
    10. ',n' → logprob: -12.178399085998535

Token 987: ' LI' (ID: 14875)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.026441946625709534
    2. ' map' → logprob: -3.651442050933838
    3. 'list' → logprob: -8.90144157409668
    4. ' list' → logprob: -13.02644157409668
    5. 'int' → logprob: -13.15144157409668
    6. 'm' → logprob: -15.40144157409668
    7. '	map' → logprob: -15.52644157409668
    8. 'input' → logprob: -15.65144157409668
    9. '
' → logprob: -15.90144157409668
    10. ' ' → logprob: -16.27644157409668

Token 988: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00016992862219922245
    2. '()
' → logprob: -8.75016975402832
    3. '();' → logprob: -12.25016975402832
    4. '()
' → logprob: -12.75016975402832
    5. ' ()' → logprob: -13.25016975402832
    6. ')' → logprob: -14.25016975402832
    7. '(' → logprob: -14.87516975402832
    8. '())' → logprob: -14.87516975402832
    9. '()"' → logprob: -16.25016975402832
    10. '()]' → logprob: -16.37516975402832

Token 989: 'g' (ID: 70)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9002155065536499
    2. ',' → logprob: -1.02521550655365
    3. ' =' → logprob: -2.4002156257629395
    4. '[' → logprob: -3.2752156257629395
    5. 'w' → logprob: -3.6502156257629395
    6. ',w' → logprob: -3.7752156257629395
    7. ')' → logprob: -4.1502156257629395
    8. '[n' → logprob: -5.0252156257629395
    9. ',n' → logprob: -5.0252156257629395
    10. ',W' → logprob: -5.4002156257629395

Token 990: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3944869339466095
    2. ' =' → logprob: -1.144486904144287
    3. '=[]' → logprob: -5.769486904144287
    4. '=[' → logprob: -6.019486904144287
    5. '[' → logprob: -7.144486904144287
    6. 'enerate' → logprob: -8.644487380981445
    7. 'raph' → logprob: -8.769487380981445
    8. ',' → logprob: -8.769487380981445
    9. '=g' → logprob: -9.269487380981445
    10. '[]' → logprob: -9.394487380981445

Token 991: ' L' (ID: 451)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.38829055428504944
    2. '[L' → logprob: -2.1382906436920166
    3. '[]' → logprob: -3.2632906436920166
    4. '[n' → logprob: -3.3882906436920166
    5. 'LS' → logprob: -3.5132906436920166
    6. 'L' → logprob: -3.5132906436920166
    7. ' [' → logprob: -3.6382906436920166
    8. '[S' → logprob: -4.0132904052734375
    9. '[I' → logprob: -4.5132904052734375
    10. ' L' → logprob: -5.1382904052734375

Token 992: 'IR' (ID: 4368)
  Prédit: 'SR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SR' → logprob: -0.0008197537390515208
    2. 'IR' → logprob: -7.125819683074951
    3. 'sr' → logprob: -12.00082015991211
    4. 'R' → logprob: -12.62582015991211
    5. '(IR' → logprob: -13.87582015991211
    6. 'S' → logprob: -14.12582015991211
    7. '(n' → logprob: -14.50082015991211
    8. '[' → logprob: -14.50082015991211
    9. 'ISR' → logprob: -14.75082015991211
    10. 'W' → logprob: -15.00082015991211

Token 993: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0052360063418745995
    2. '(' → logprob: -5.2552361488342285
    3. '(len' → logprob: -13.88023567199707
    4. '(int' → logprob: -14.25523567199707
    5. 'n' → logprob: -15.38023567199707
    6. '(N' → logprob: -16.00523567199707
    7. '((' → logprob: -16.00523567199707
    8. ' (' → logprob: -16.25523567199707
    9. '()' → logprob: -16.50523567199707
    10. '(m' → logprob: -18.38023567199707

Token 994: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1334504932165146
    2. ')
' → logprob: -2.133450508117676
    3. ')[' → logprob: -5.633450508117676
    4. '())' → logprob: -6.883450508117676
    5. '()' → logprob: -7.633450508117676
    6. '())
' → logprob: -7.633450508117676
    7. '(W' → logprob: -7.883450508117676
    8. '(' → logprob: -8.258450508117676
    9. '(n' → logprob: -9.133450508117676
    10. 'W' → logprob: -10.633450508117676

Token 995: '"""

' (ID: 34508)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.22244371473789215
    2. '"""' → logprob: -2.3474438190460205
    3. 'for' → logprob: -2.5974438190460205
    4. '"""
' → logprob: -3.9724438190460205
    5. 'w' → logprob: -5.472443580627441
    6. '
' → logprob: -6.222443580627441
    7. 'W' → logprob: -6.597443580627441
    8. '""' → logprob: -7.222443580627441
    9. 'g' → logprob: -7.347443580627441
    10. 'n' → logprob: -7.722443580627441

Token 996: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0942318439483643
    2. 'for' → logprob: -1.2192318439483643
    3. '#' → logprob: -1.9692318439483643
    4. 'dp' → logprob: -3.0942318439483643
    5. 'def' → logprob: -3.2192318439483643
    6. '<|end|>' → logprob: -3.3442318439483643
    7. '```' → logprob: -4.094231605529785
    8. '
' → logprob: -4.219231605529785
    9. '"""' → logprob: -4.219231605529785
    10. 'w' → logprob: -4.844231605529785

Token 997: '1' (ID: 16)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34992802143096924
    2. '#' → logprob: -2.3499279022216797
    3. 'n' → logprob: -2.4749279022216797
    4. '<|end|>' → logprob: -3.0999279022216797
    5. '\n' → logprob: -3.8499279022216797
    6. '"""' → logprob: -3.8499279022216797
    7. 'for' → logprob: -4.47492790222168
    8. '[n' → logprob: -5.22492790222168
    9. '```' → logprob: -5.84992790222168
    10. '[' → logprob: -6.47492790222168

Token 998: '_H' (ID: 4391)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2777980864048004
    2. '<|end|>' → logprob: -2.6527981758117676
    3. 'n' → logprob: -2.7777981758117676
    4. '
' → logprob: -3.1527981758117676
    5. '"""' → logprob: -3.9027981758117676
    6. ')' → logprob: -4.027798175811768
    7. 'def' → logprob: -4.902798175811768
    8. '```' → logprob: -5.277798175811768
    9. '\n' → logprob: -5.902798175811768
    10. '[n' → logprob: -6.027798175811768

Token 999: '
' (ID: 198)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.4761379063129425
    2. '"""' → logprob: -0.9761378765106201
    3. 'n' → logprob: -7.476138114929199
    4. '""' → logprob: -8.1011381149292
    5. '("""' → logprob: -8.2261381149292
    6. '```' → logprob: -8.2261381149292
    7. '()' → logprob: -9.2261381149292
    8. '"' → logprob: -9.4761381149292
    9. '("""
' → logprob: -9.4761381149292
    10. '="""' → logprob: -9.6011381149292

Token 1000: 'n' (ID: 77)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.039813317358493805
    2. '"""' → logprob: -3.289813280105591
    3. 'n' → logprob: -6.53981351852417
    4. '""' → logprob: -8.914813041687012
    5. '"' → logprob: -9.664813041687012
    6. '(n' → logprob: -10.164813041687012
    7. 's' → logprob: -10.414813041687012
    8. '"""
' → logprob: -11.164813041687012
    9. '"""

' → logprob: -11.539813041687012
    10. '#' → logprob: -11.914813041687012

Token 1001: ',W' (ID: 117252)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35496267676353455
    2. ',W' → logprob: -1.604962706565857
    3. ',w' → logprob: -2.4799625873565674
    4. '=' → logprob: -4.8549628257751465
    5. ',m' → logprob: -5.6049628257751465
    6. ' =' → logprob: -6.8549628257751465
    7. ',k' → logprob: -6.8549628257751465
    8. ',n' → logprob: -9.354962348937988
    9. ',s' → logprob: -9.354962348937988
    10. ',a' → logprob: -9.479962348937988

Token 1002: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006367293652147055
    2. ' =' → logprob: -5.256367206573486
    3. ',' → logprob: -6.881367206573486
    4. ',W' → logprob: -10.756367683410645
    5. ',w' → logprob: -11.006367683410645
    6. ',g' → logprob: -11.381367683410645
    7. '=g' → logprob: -11.506367683410645
    8. ',L' → logprob: -11.631367683410645
    9. '=
' → logprob: -12.131367683410645
    10. ',k' → logprob: -12.631367683410645

Token 1003: ' LI' (ID: 14875)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.004216709174215794
    2. 'map' → logprob: -6.00421667098999
    3. ' LI' → logprob: -6.37921667098999
    4. ' map' → logprob: -10.379217147827148
    5. 'list' → logprob: -12.129217147827148
    6. 'I' → logprob: -12.504217147827148
    7. 'L' → logprob: -13.504217147827148
    8. ' ' → logprob: -15.004217147827148
    9. 'li' → logprob: -15.504217147827148
    10. 'LS' → logprob: -15.879217147827148

Token 1004: '()
' (ID: 1234)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0035126451402902603
    2. '
' → logprob: -6.503512859344482
    3. 'w' → logprob: -6.503512859344482
    4. 'G' → logprob: -8.503512382507324
    5. 'W' → logprob: -9.628512382507324
    6. 'h' → logprob: -9.753512382507324
    7. ',g' → logprob: -10.128512382507324
    8. 'd' → logprob: -10.253512382507324
    9. 'c' → logprob: -11.253512382507324
    10. 'a' → logprob: -11.378512382507324

Token 1005: 'v' (ID: 85)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0029044896364212036
    2. 'G' → logprob: -6.127904415130615
    3. 'dp' → logprob: -7.627904415130615
    4. 'graph' → logprob: -10.502904891967773
    5. 'for' → logprob: -10.627904891967773
    6. 'a' → logprob: -10.877904891967773
    7. 'w' → logprob: -10.877904891967773
    8. 'from' → logprob: -11.127904891967773
    9. 'items' → logprob: -11.127904891967773
    10. 'v' → logprob: -11.127904891967773

Token 1006: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9878880381584167
    2. ',w' → logprob: -1.1128880977630615
    3. ',g' → logprob: -2.3628880977630615
    4. ',W' → logprob: -2.4878880977630615
    5. ',v' → logprob: -3.2378880977630615
    6. ',a' → logprob: -3.9878880977630615
    7. ' =' → logprob: -3.9878880977630615
    8. ',G' → logprob: -4.612887859344482
    9. ',l' → logprob: -4.987887859344482
    10. ',s' → logprob: -5.362887859344482

Token 1007: ' [' (ID: 723)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0019910898990929127
    2. 'LI' → logprob: -7.251991271972656
    3. ' L' → logprob: -7.626991271972656
    4. 'LS' → logprob: -8.001991271972656
    5. '[]' → logprob: -8.126991271972656
    6. '[L' → logprob: -9.001991271972656
    7. '[' → logprob: -10.501991271972656
    8. ' []' → logprob: -12.751991271972656
    9. 'LR' → logprob: -13.126991271972656
    10. '[]
' → logprob: -13.251991271972656

Token 1008: 'None' (ID: 8505)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09474125504493713
    2. 'None' → logprob: -3.0947413444519043
    3. 'int' → logprob: -3.9697413444519043
    4. '*' → logprob: -4.969741344451904
    5. 'I' → logprob: -5.094741344451904
    6. 'x' → logprob: -5.219741344451904
    7. 'v' → logprob: -5.969741344451904
    8. 'i' → logprob: -6.219741344451904
    9. ']' → logprob: -7.219741344451904
    10. 'list' → logprob: -7.844741344451904

Token 1009: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005602261051535606
    2. ' for' → logprob: -5.2556023597717285
    3. ']' → logprob: -8.13060188293457
    4. 'None' → logprob: -10.75560188293457
    5. ']*' → logprob: -11.13060188293457
    6. '
' → logprob: -11.88060188293457
    7. '   ' → logprob: -11.88060188293457
    8. '	for' → logprob: -12.00560188293457
    9. '_' → logprob: -12.25560188293457
    10. '0' → logprob: -12.75560188293457

Token 1010: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008067441172897816
    2. '_' → logprob: -5.008067607879639
    3. '_i' → logprob: -7.008067607879639
    4. 'in' → logprob: -7.883067607879639
    5. ' i' → logprob: -9.88306713104248
    6. ' in' → logprob: -11.75806713104248
    7. 'range' → logprob: -11.88306713104248
    8. '(i' → logprob: -13.50806713104248
    9. '_range' → logprob: -13.88306713104248
    10. ' ' → logprob: -14.63306713104248

Token 1011: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.07892470806837082
    2. ' in' → logprob: -2.5789246559143066
    3. 'range' → logprob: -10.953925132751465
    4. 'i' → logprob: -11.578925132751465
    5. ' ' → logprob: -12.703925132751465
    6. 'n' → logprob: -13.203925132751465
    7. '   ' → logprob: -14.453925132751465
    8. '
' → logprob: -14.578925132751465
    9. 'for' → logprob: -14.703925132751465
    10. '	in' → logprob: -14.828925132751465

Token 1012: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.3425219549390022e-05
    2. ' range' → logprob: -11.25001335144043
    3. '(range' → logprob: -14.75001335144043
    4. '
' → logprob: -20.00001335144043
    5. '	range' → logprob: -20.00001335144043
    6. 'r' → logprob: -20.50001335144043
    7. 'in' → logprob: -20.62501335144043
    8. 'ran' → logprob: -21.62501335144043
    9. 'ra' → logprob: -21.62501335144043
    10. 'rang' → logprob: -21.75001335144043

Token 1013: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6326513290405273
    2. '(n' → logprob: -0.7576513290405273
    3. '(' → logprob: -10.132651329040527
    4. '
' → logprob: -12.257651329040527
    5. ' n' → logprob: -13.882651329040527
    6. 'W' → logprob: -14.257651329040527
    7. '	n' → logprob: -14.382651329040527
    8. '_n' → logprob: -14.507651329040527
    9. ']' → logprob: -14.882651329040527
    10. '(
' → logprob: -14.882651329040527

Token 1014: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0024609139654785395
    2. ')]
' → logprob: -6.127460956573486
    3. ']' → logprob: -8.252460479736328
    4. ')' → logprob: -11.627460479736328
    5. ']
' → logprob: -12.502460479736328
    6. ')]
' → logprob: -14.002460479736328
    7. '])' → logprob: -14.502460479736328
    8. ')]

' → logprob: -15.127460479736328
    9. ']]' → logprob: -15.252460479736328
    10. ')],' → logprob: -15.502460479736328

Token 1015: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.06328760087490082
    2. 'for' → logprob: -2.8132874965667725
    3. '_w' → logprob: -7.688287734985352
    4. 'W' → logprob: -7.938287734985352
    5. '_' → logprob: -9.063287734985352
    6. 'v' → logprob: -9.188287734985352
    7. 'weight' → logprob: -10.063287734985352
    8. 'wt' → logprob: -10.438287734985352
    9. ' for' → logprob: -10.563287734985352
    10. ' w' → logprob: -10.563287734985352

Token 1016: ' =' (ID: 314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23392511904239655
    2. '=' → logprob: -2.1089251041412354
    3. ' for' → logprob: -2.7339251041412354
    4. ' =' → logprob: -3.8589251041412354
    5. '[' → logprob: -7.2339253425598145
    6. ' ' → logprob: -8.733924865722656
    7. '	for' → logprob: -10.233924865722656
    8. 'in' → logprob: -10.483924865722656
    9. 'or' → logprob: -10.608924865722656
    10. ' in' → logprob: -10.733924865722656

Token 1017: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009070320054888725
    2. 'range' → logprob: -5.00907039642334
    3. '[n' → logprob: -7.00907039642334
    4. '[L' → logprob: -7.25907039642334
    5. '[i' → logprob: -7.50907039642334
    6. 'LI' → logprob: -9.63407039642334
    7. ' [' → logprob: -10.13407039642334
    8. ' range' → logprob: -10.25907039642334
    9. '[I' → logprob: -10.50907039642334
    10. '[N' → logprob: -11.50907039642334

Token 1018: 'None' (ID: 8505)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5388971567153931
    2. 'None' → logprob: -1.038897156715393
    3. 'i' → logprob: -3.2888970375061035
    4. 'range' → logprob: -3.7888970375061035
    5. 'for' → logprob: -6.1638970375061035
    6. '(n' → logprob: -7.7888970375061035
    7. '(i' → logprob: -8.538897514343262
    8. 'none' → logprob: -10.288897514343262
    9. '[i' → logprob: -10.413897514343262
    10. 'LI' → logprob: -10.538897514343262

Token 1019: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005532711511477828
    2. ' for' → logprob: -7.500553131103516
    3. '
' → logprob: -16.000553131103516
    4. '	for' → logprob: -16.250553131103516
    5. 'i' → logprob: -19.000553131103516
    6. 'n' → logprob: -19.125553131103516
    7. '   ' → logprob: -19.750553131103516
    8. '(for' → logprob: -20.125553131103516
    9. ' ' → logprob: -20.375553131103516
    10. '(n' → logprob: -20.625553131103516

Token 1020: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01424072589725256
    2. 'range' → logprob: -4.264240741729736
    3. 'n' → logprob: -10.014240264892578
    4. ' range' → logprob: -10.764240264892578
    5. ' i' → logprob: -12.014240264892578
    6. 'in' → logprob: -12.514240264892578
    7. '(i' → logprob: -13.514240264892578
    8. '(n' → logprob: -15.764240264892578
    9. '(range' → logprob: -17.764240264892578
    10. 'int' → logprob: -17.764240264892578

Token 1021: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.003335394663736224
    2. ' in' → logprob: -5.753335475921631
    3. 'range' → logprob: -8.878334999084473
    4. 'n' → logprob: -11.253334999084473
    5. '(n' → logprob: -12.503334999084473
    6. 'i' → logprob: -14.378334999084473
    7. '
' → logprob: -15.128334999084473
    8. '(' → logprob: -15.378334999084473
    9. 'for' → logprob: -15.878334999084473
    10. '(range' → logprob: -15.878334999084473

Token 1022: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.088346359931165e-07
    2. ' range' → logprob: -14.250000953674316
    3. '(range' → logprob: -15.750000953674316
    4. 'n' → logprob: -16.5
    5. '(n' → logprob: -19.75
    6. '
' → logprob: -22.75
    7. 'rang' → logprob: -24.125
    8. '   ' → logprob: -24.125
    9. '(' → logprob: -24.375
    10. 'for' → logprob: -24.5

Token 1023: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02568480744957924
    2. '(n' → logprob: -3.7756848335266113
    3. 'range' → logprob: -6.025684833526611
    4. ' n' → logprob: -11.650684356689453
    5. '(' → logprob: -12.025684356689453
    6. ' range' → logprob: -12.400684356689453
    7. '
' → logprob: -14.275684356689453
    8. '(range' → logprob: -15.525684356689453
    9. '	n' → logprob: -15.650684356689453
    10. ' (' → logprob: -15.900684356689453

Token 1024: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -7.684157026233152e-05
    2. ')]
' → logprob: -9.625077247619629
    3. ')' → logprob: -11.750077247619629
    4. ']' → logprob: -13.250077247619629
    5. ' )' → logprob: -14.500077247619629
    6. ')]

' → logprob: -15.125077247619629
    7. ')]
' → logprob: -16.000076293945312
    8. ')],' → logprob: -16.500076293945312
    9. ')][' → logprob: -17.250076293945312
    10. ')].' → logprob: -17.375076293945312

Token 1025: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.696889623621246e-06
    2. ' for' → logprob: -12.87500286102295
    3. '#' → logprob: -18.500001907348633
    4. '<|end|>' → logprob: -18.500001907348633
    5. '	for' → logprob: -19.125001907348633
    6. 'i' → logprob: -20.750001907348633
    7. 'v' → logprob: -20.875001907348633
    8. 'f' → logprob: -21.125001907348633
    9. '_for' → logprob: -21.625001907348633
    10. 'For' → logprob: -21.875001907348633

Token 1026: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0024779161904007196
    2. ' i' → logprob: -6.002478122711182
    3. '	i' → logprob: -13.377477645874023
    4. '_' → logprob: -15.502477645874023
    5. '_i' → logprob: -15.502477645874023
    6. 'x' → logprob: -15.752477645874023
    7. 'I' → logprob: -16.252477645874023
    8. ' ' → logprob: -16.877477645874023
    9. 'a' → logprob: -17.877477645874023
    10. 'k' → logprob: -18.377477645874023

Token 1027: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043027278035879135
    2. 'in' → logprob: -3.16802716255188
    3. ' ' → logprob: -11.4180269241333
    4. 'range' → logprob: -11.4180269241333
    5. ' i' → logprob: -13.6680269241333
    6. 'i' → logprob: -13.6680269241333
    7. '	in' → logprob: -13.7930269241333
    8. ',' → logprob: -14.2930269241333
    9. '_' → logprob: -14.5430269241333
    10. 's' → logprob: -14.6680269241333

Token 1028: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.0484450437361374e-05
    2. ' range' → logprob: -10.125040054321289
    3. 'ra' → logprob: -15.750040054321289
    4. 'r' → logprob: -16.00004005432129
    5. 'ran' → logprob: -17.00004005432129
    6. '(range' → logprob: -17.87504005432129
    7. 'rang' → logprob: -18.00004005432129
    8. 'in' → logprob: -18.37504005432129
    9. '0' → logprob: -18.50004005432129
    10. ' ' → logprob: -18.87504005432129

Token 1029: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07892845571041107
    2. 'n' → logprob: -2.5789284706115723
    3. ' range' → logprob: -10.203927993774414
    4. '(n' → logprob: -13.828927993774414
    5. ' n' → logprob: -14.578927993774414
    6. '(range' → logprob: -15.953927993774414
    7. '0' → logprob: -17.328927993774414
    8. 'r' → logprob: -17.703927993774414
    9. 'in' → logprob: -18.703927993774414
    10. '
' → logprob: -18.828927993774414

Token 1030: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10025066882371902
    2. '):
' → logprob: -2.350250720977783
    3. '):
' → logprob: -10.350250244140625
    4. ']:' → logprob: -12.225250244140625
    5. ')' → logprob: -12.600250244140625
    6. ' ):' → logprob: -13.975250244140625
    7. ':' → logprob: -13.975250244140625
    8. '
' → logprob: -14.100250244140625
    9. ']):' → logprob: -15.225250244140625
    10. '}:' → logprob: -15.475250244140625

Token 1031: '   ' (ID: 271)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.012838292866945267
    2. ' v' → logprob: -4.512838363647461
    3. '	v' → logprob: -6.637838363647461
    4. 'vw' → logprob: -8.762838363647461
    5. 'x' → logprob: -9.262838363647461
    6. 'a' → logprob: -9.512838363647461
    7. 'vv' → logprob: -9.762838363647461
    8. '   ' → logprob: -9.887838363647461
    9. 'w' → logprob: -11.137838363647461
    10. 'vi' → logprob: -11.762838363647461

Token 1032: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.007967747747898102
    2. 'vw' → logprob: -5.382967948913574
    3. 'vv' → logprob: -6.007967948913574
    4. 'vi' → logprob: -8.632967948913574
    5. 'x' → logprob: -8.632967948913574
    6. '_v' → logprob: -8.757967948913574
    7. 'vp' → logprob: -9.757967948913574
    8. 'vs' → logprob: -10.007967948913574
    9. 'vx' → logprob: -10.007967948913574
    10. 'w' → logprob: -10.382967948913574

Token 1033: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.570319702499546e-05
    2. '[' → logprob: -11.000025749206543
    3. ',' → logprob: -12.500025749206543
    4. ',i' → logprob: -13.375025749206543
    5. '[I' → logprob: -13.875025749206543
    6. '[
' → logprob: -14.250025749206543
    7. '][' → logprob: -14.625025749206543
    8. 'i' → logprob: -15.000025749206543
    9. ' [' → logprob: -15.625025749206543
    10. '=' → logprob: -15.625025749206543

Token 1034: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.12064054608345032
    2. ',' → logprob: -2.370640516281128
    3. ']' → logprob: -4.120640754699707
    4. ',w' → logprob: -6.620640754699707
    5. ']=' → logprob: -6.995640754699707
    6. '=' → logprob: -6.995640754699707
    7. '),' → logprob: -7.870640754699707
    8. ',i' → logprob: -8.620640754699707
    9. ',j' → logprob: -9.120640754699707
    10. ',v' → logprob: -10.745640754699707

Token 1035: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.005234121344983578
    2. ' w' → logprob: -5.255234241485596
    3. 'W' → logprob: -15.380233764648438
    4. '   ' → logprob: -17.130233764648438
    5. ' ' → logprob: -17.505233764648438
    6. '	w' → logprob: -17.630233764648438
    7. '_w' → logprob: -19.130233764648438
    8. ' ' → logprob: -19.255233764648438
    9. '    ' → logprob: -19.380233764648438
    10. 's' → logprob: -19.380233764648438

Token 1036: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -13.375001907348633
    3. 'i' → logprob: -14.875001907348633
    4. '=' → logprob: -15.750001907348633
    5. '(i' → logprob: -16.375001907348633
    6. ' [' → logprob: -16.625001907348633
    7. '[
' → logprob: -16.750001907348633
    8. ' =' → logprob: -17.000001907348633
    9. '[I' → logprob: -17.625001907348633
    10. '=i' → logprob: -18.250001907348633

Token 1037: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003541035810485482
    2. ']=' → logprob: -5.753540992736816
    3. '=' → logprob: -8.253540992736816
    4. ')' → logprob: -9.253540992736816
    5. ' ]' → logprob: -12.878540992736816
    6. ')=' → logprob: -13.378540992736816
    7. ' =' → logprob: -14.128540992736816
    8. '[i' → logprob: -14.253540992736816
    9. ')]' → logprob: -14.628540992736816
    10. 'i' → logprob: -15.128540992736816

Token 1038: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -5.228561349213123e-05
    2. ' =' → logprob: -9.875052452087402
    3. '=i' → logprob: -14.875052452087402
    4. '[i' → logprob: -16.125051498413086
    5. '=
' → logprob: -16.250051498413086
    6. '=input' → logprob: -16.625051498413086
    7. '[' → logprob: -17.375051498413086
    8. '=user' → logprob: -17.625051498413086
    9. '=line' → logprob: -18.000051498413086
    10. ')' → logprob: -18.125051498413086

Token 1039: ' LI' (ID: 14875)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.3631868362426758
    2. 'LI' → logprob: -1.3631868362426758
    3. ' map' → logprob: -3.113186836242676
    4. ' LI' → logprob: -5.488186836242676
    5. 'L' → logprob: -9.863186836242676
    6. 'LS' → logprob: -10.363186836242676
    7. ' L' → logprob: -11.613186836242676
    8. 'list' → logprob: -12.988186836242676
    9. 'li' → logprob: -13.113186836242676
    10. ' ' → logprob: -13.738186836242676

Token 1040: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1041: 'a' (ID: 64)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -8.458980300929397e-05
    2. 'ans' → logprob: -9.87508487701416
    3. 'items' → logprob: -11.37508487701416
    4. 'from' → logprob: -12.00008487701416
    5. '#' → logprob: -12.12508487701416
    6. ' dp' → logprob: -13.12508487701416
    7. 'max' → logprob: -13.37508487701416
    8. 'def' → logprob: -13.62508487701416
    9. 'res' → logprob: -14.25008487701416
    10. 'inf' → logprob: -14.37508487701416

Token 1042: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1756877452135086
    2. '=' → logprob: -2.300687789916992
    3. 'pp' → logprob: -3.425687789916992
    4. 's' → logprob: -5.425687789916992
    5. ' ' → logprob: -5.550687789916992
    6. 'b' → logprob: -6.050687789916992
    7. '[i' → logprob: -6.425687789916992
    8. 'rray' → logprob: -6.425687789916992
    9. 'ss' → logprob: -6.675687789916992
    10. ')' → logprob: -6.925687789916992

Token 1043: ' [[' (ID: 9237)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.11426901817321777
    2. '[' → logprob: -2.6142690181732178
    3. 'default' → logprob: -4.739269256591797
    4. '[[' → logprob: -4.989269256591797
    5. '[(' → logprob: -4.989269256591797
    6. ' []' → logprob: -5.489269256591797
    7. ' [' → logprob: -6.114269256591797
    8. '[v' → logprob: -7.114269256591797
    9. '[min' → logprob: -7.114269256591797
    10. 'deque' → logprob: -7.239269256591797

Token 1044: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003390521975234151
    2. 'False' → logprob: -6.253390312194824
    3. '(' → logprob: -6.878390312194824
    4. 'float' → logprob: -7.878390312194824
    5. '-' → logprob: -10.753390312194824
    6. 'None' → logprob: -11.753390312194824
    7. '[' → logprob: -11.753390312194824
    8. '[]' → logprob: -13.003390312194824
    9. 'W' → logprob: -13.128390312194824
    10. '(float' → logprob: -13.128390312194824

Token 1045: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.049081433564424515
    2. ']*(' → logprob: -3.674081325531006
    3. ' for' → logprob: -3.924081325531006
    4. ']' → logprob: -5.924081325531006
    5. ']*' → logprob: -10.424081802368164
    6. ']+' → logprob: -10.799081802368164
    7. '
' → logprob: -11.174081802368164
    8. '0' → logprob: -11.674081802368164
    9. ' ' → logprob: -12.049081802368164
    10. 'if' → logprob: -12.174081802368164

Token 1046: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00024132427643053234
    2. ' ' → logprob: -8.37524127960205
    3. '100' → logprob: -13.00024127960205
    4. 'w' → logprob: -13.12524127960205
    5. 'W' → logprob: -13.87524127960205
    6. '1' → logprob: -14.00024127960205
    7. '(' → logprob: -14.00024127960205
    8. ']' → logprob: -14.12524127960205
    9. 'False' → logprob: -14.12524127960205
    10. 'float' → logprob: -14.62524127960205

Token 1047: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006470344495028257
    2. ']]' → logprob: -5.256470203399658
    3. 'for' → logprob: -7.006470203399658
    4. ' for' → logprob: -8.756470680236816
    5. ' ]' → logprob: -10.131470680236816
    6. ',' → logprob: -10.756470680236816
    7. ')' → logprob: -10.881470680236816
    8. ']*(' → logprob: -11.006470680236816
    9. ']]
' → logprob: -11.131470680236816
    10. ']+' → logprob: -11.381470680236816

Token 1048: 'b' (ID: 65)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.65707261255011e-06
    2. '
' → logprob: -12.875008583068848
    3. 'from' → logprob: -12.875008583068848
    4. ' for' → logprob: -13.250008583068848
    5. 'import' → logprob: -13.875008583068848
    6. 'dp' → logprob: -14.500008583068848
    7. 'f' → logprob: -15.875008583068848
    8. 'fo' → logprob: -17.500009536743164
    9. 'a' → logprob: -17.625009536743164
    10. '```' → logprob: -18.250009536743164

Token 1049: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5241854786872864
    2. '=' → logprob: -0.8991854786872864
    3. '=[]' → logprob: -7.524185657501221
    4. '=[' → logprob: -8.649185180664062
    5. 'for' → logprob: -9.274185180664062
    6. 'a' → logprob: -9.774185180664062
    7. '=[[' → logprob: -9.774185180664062
    8. '[' → logprob: -9.774185180664062
    9. '.append' → logprob: -10.774185180664062
    10. 'b' → logprob: -10.899185180664062

Token 1050: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.5868191123008728
    2. '[]' → logprob: -0.8368191123008728
    3. '[' → logprob: -5.086819171905518
    4. ' [[' → logprob: -6.461819171905518
    5. ' []' → logprob: -6.961819171905518
    6. '[(' → logprob: -7.086819171905518
    7. 'a' → logprob: -7.586819171905518
    8. '[]
' → logprob: -8.58681869506836
    9. '[a' → logprob: -8.71181869506836
    10. '[]}' → logprob: -8.83681869506836

Token 1051: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020289253443479538
    2. '(' → logprob: -4.020289421081543
    3. '[' → logprob: -6.395289421081543
    4. ']' → logprob: -8.895289421081543
    5. '1' → logprob: -9.270289421081543
    6. 'w' → logprob: -10.020289421081543
    7. '100' → logprob: -10.395289421081543
    8. 'W' → logprob: -10.770289421081543
    9. '(n' → logprob: -10.770289421081543
    10. 'n' → logprob: -11.020289421081543

Token 1052: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0034628675784915686
    2. '0' → logprob: -5.753462791442871
    3. 'for' → logprob: -8.503462791442871
    4. ' ,' → logprob: -10.753462791442871
    5. ']' → logprob: -11.128462791442871
    6. ']]' → logprob: -11.503462791442871
    7. ']]
' → logprob: -11.753462791442871
    8. '1' → logprob: -11.878462791442871
    9. ' for' → logprob: -12.253462791442871
    10. ',
' → logprob: -12.628462791442871

Token 1053: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.061054359131958e-06
    2. 'w' → logprob: -12.500007629394531
    3. 'W' → logprob: -13.625007629394531
    4. '1' → logprob: -13.625007629394531
    5. '(' → logprob: -14.625007629394531
    6. ' ' → logprob: -15.375007629394531
    7. ']' → logprob: -15.500007629394531
    8. 'a' → logprob: -15.625007629394531
    9. 'n' → logprob: -15.625007629394531
    10. '
' → logprob: -15.750007629394531

Token 1054: ']]
' (ID: 29446)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.0664743185043335
    2. ']' → logprob: -3.441474437713623
    3. ']]
' → logprob: -3.441474437713623
    4. ']
' → logprob: -9.191473960876465
    5. ']]

' → logprob: -9.316473960876465
    6. '],' → logprob: -10.441473960876465
    7. ')]' → logprob: -11.316473960876465
    8. ' ]]' → logprob: -11.441473960876465
    9. '],[' → logprob: -11.816473960876465
    10. '"]]' → logprob: -11.941473960876465

Token 1055: 'm' (ID: 76)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.988221684878226e-06
    2. ' for' → logprob: -12.500006675720215
    3. '
' → logprob: -13.250006675720215
    4. 'f' → logprob: -13.750006675720215
    5. 'i' → logprob: -15.500006675720215
    6. '	for' → logprob: -16.25000762939453
    7. 'fo' → logprob: -17.37500762939453
    8. 'from' → logprob: -18.25000762939453
    9. '```' → logprob: -18.25000762939453
    10. '   ' → logprob: -18.87500762939453

Token 1056: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04452621191740036
    2. ' =' → logprob: -3.6695261001586914
    3. 'ax' → logprob: -4.669526100158691
    4. 'a' → logprob: -5.294526100158691
    5. '=len' → logprob: -6.919526100158691
    6. ',' → logprob: -7.294526100158691
    7. '=a' → logprob: -8.044526100158691
    8. '=n' → logprob: -8.294526100158691
    9. '1' → logprob: -8.294526100158691
    10. '=m' → logprob: -8.794526100158691

Token 1057: ' n' (ID: 297)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19738154113292694
    2. 'n' → logprob: -2.0723814964294434
    3. '1' → logprob: -3.4473814964294434
    4. ' n' → logprob: -4.572381496429443
    5. ' ' → logprob: -5.072381496429443
    6. '(n' → logprob: -6.947381496429443
    7. '(' → logprob: -7.072381496429443
    8. '[(' → logprob: -7.572381496429443
    9. 'len' → logprob: -7.822381496429443
    10. '[n' → logprob: -8.197381973266602

Token 1058: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.0007460216875188053
    2. ' //' → logprob: -7.750746250152588
    3. '2' → logprob: -8.37574577331543
    4. '
' → logprob: -9.87574577331543
    5. '1' → logprob: -11.50074577331543
    6. '/' → logprob: -11.50074577331543
    7. '#' → logprob: -12.00074577331543
    8. '>>' → logprob: -13.62574577331543
    9. '0' → logprob: -13.75074577331543
    10. 'int' → logprob: -14.37574577331543

Token 1059: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.5577775128767826e-06
    2. '4' → logprob: -12.250005722045898
    3. '3' → logprob: -14.625005722045898
    4. ' ' → logprob: -15.875005722045898
    5. '
' → logprob: -16.5000057220459
    6. '1' → logprob: -16.8750057220459
    7. '２' → logprob: -16.8750057220459
    8. 'two' → logprob: -18.5000057220459
    9. '```' → logprob: -18.6250057220459
    10. '

' → logprob: -19.1250057220459

Token 1060: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018675073981285095
    2. 'def' → logprob: -4.143674850463867
    3. '
' → logprob: -6.018674850463867
    4. '#' → logprob: -10.393674850463867
    5. 'from' → logprob: -10.518674850463867
    6. 'import' → logprob: -10.643674850463867
    7. 'c' → logprob: -10.768674850463867
    8. 'ans' → logprob: -10.893674850463867
    9. ' for' → logprob: -10.893674850463867
    10. 'i' → logprob: -11.643674850463867

Token 1061: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04519890248775482
    2. 'def' → logprob: -3.170198917388916
    3. 'from' → logprob: -6.545198917388916
    4. 'import' → logprob: -7.670198917388916
    5. '#' → logprob: -8.670198440551758
    6. 'a' → logprob: -10.795198440551758
    7. '
' → logprob: -10.920198440551758
    8. 'ans' → logprob: -11.295198440551758
    9. 'i' → logprob: -11.420198440551758
    10. 'c' → logprob: -11.545198440551758

Token 1062: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06215544790029526
    2. ' i' → logprob: -2.8121554851531982
    3. 'x' → logprob: -9.687155723571777
    4. 'j' → logprob: -9.937155723571777
    5. '0' → logprob: -11.062155723571777
    6. '_i' → logprob: -11.187155723571777
    7. '_' → logprob: -11.687155723571777
    8. '(i' → logprob: -11.812155723571777
    9. 'k' → logprob: -12.062155723571777
    10. ' j' → logprob: -12.437155723571777

Token 1063: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1607746183872223
    2. 'in' → logprob: -1.9107745885849
    3. 'n' → logprob: -9.285774230957031
    4. ' ' → logprob: -9.535774230957031
    5. 'range' → logprob: -9.535774230957031
    6. '   ' → logprob: -9.785774230957031
    7. '  ' → logprob: -9.910774230957031
    8. ',' → logprob: -10.535774230957031
    9. '0' → logprob: -10.535774230957031
    10. '1' → logprob: -10.785774230957031

Token 1064: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005764422472566366
    2. ' range' → logprob: -5.380764484405518
    3. 'm' → logprob: -7.380764484405518
    4. '0' → logprob: -7.755764484405518
    5. '1' → logprob: -9.88076400756836
    6. '(' → logprob: -10.75576400756836
    7. '(range' → logprob: -12.00576400756836
    8. '2' → logprob: -12.75576400756836
    9. '(m' → logprob: -13.00576400756836
    10. '[' → logprob: -13.13076400756836

Token 1065: '(m' (ID: 2145)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.002921256935223937
    2. '0' → logprob: -6.002921104431152
    3. '(m' → logprob: -8.252921104431152
    4. ' m' → logprob: -9.127921104431152
    5. '1' → logprob: -10.877921104431152
    6. '(' → logprob: -11.002921104431152
    7. 'n' → logprob: -11.627921104431152
    8. 'a' → logprob: -11.877921104431152
    9. '2' → logprob: -11.877921104431152
    10. '
' → logprob: -12.127921104431152

Token 1066: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09247979521751404
    2. '):' → logprob: -2.717479705810547
    3. '):
' → logprob: -3.842479705810547
    4. ' +' → logprob: -7.342479705810547
    5. '1' → logprob: -9.592479705810547
    6. ',' → logprob: -10.217479705810547
    7. '):
' → logprob: -10.342479705810547
    8. '   ' → logprob: -11.092479705810547
    9. ')' → logprob: -11.217479705810547
    10. '-' → logprob: -11.467479705810547

Token 1067: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0051295082084834576
    2. 'for' → logprob: -6.005129337310791
    3. 'a' → logprob: -6.755129337310791
    4. 'temp' → logprob: -8.25512981414795
    5. 'new' → logprob: -8.75512981414795
    6. 'b' → logprob: -8.75512981414795
    7. 'c' → logprob: -8.75512981414795
    8. 'tmp' → logprob: -8.88012981414795
    9. ' for' → logprob: -9.13012981414795
    10. 'x' → logprob: -9.88012981414795

Token 1068: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.49179714918136597
    2. 'a' → logprob: -1.2417972087860107
    3. 'new' → logprob: -3.4917972087860107
    4. 'na' → logprob: -3.9917972087860107
    5. 'temp' → logprob: -4.616796970367432
    6. 'tmp' → logprob: -4.991796970367432
    7. 'c' → logprob: -5.116796970367432
    8. 'x' → logprob: -5.241796970367432
    9. '   ' → logprob: -5.616796970367432
    10. 'b' → logprob: -5.741796970367432

Token 1069: ' j' (ID: 441)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8918426036834717
    2. 'j' → logprob: -1.2668426036834717
    3. '0' → logprob: -2.5168426036834717
    4. 'a' → logprob: -2.7668426036834717
    5. 'len' → logprob: -2.8918426036834717
    6. 'mask' → logprob: -3.1418426036834717
    7. 'k' → logprob: -4.016842842102051
    8. 's' → logprob: -4.266842842102051
    9. 'v' → logprob: -5.766842842102051
    10. '_' → logprob: -5.766842842102051

Token 1070: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.40228474140167236
    2. 'range' → logprob: -1.6522847414016724
    3. ' in' → logprob: -2.027284622192383
    4. ' range' → logprob: -5.527284622192383
    5. '(range' → logprob: -7.027284622192383
    6. '(len' → logprob: -7.152284622192383
    7. '   ' → logprob: -7.527284622192383
    8. 'len' → logprob: -7.652284622192383
    9. 'a' → logprob: -7.902284622192383
    10. '(' → logprob: -8.027284622192383

Token 1071: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011587966000661254
    2. ' range' → logprob: -6.876158714294434
    3. '[' → logprob: -9.126158714294434
    4. 'b' → logprob: -11.626158714294434
    5. 'a' → logprob: -12.251158714294434
    6. '(range' → logprob: -14.126158714294434
    7. '[[' → logprob: -14.376158714294434
    8. 'len' → logprob: -14.376158714294434
    9. '(' → logprob: -14.626158714294434
    10. '[a' → logprob: -15.126158714294434

Token 1072: '(' (ID: 7)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0042876917868852615
    2. '(' → logprob: -6.0042877197265625
    3. '(range' → logprob: -6.8792877197265625
    4. ' range' → logprob: -7.5042877197265625
    5. 'len' → logprob: -9.754287719726562
    6. 'a' → logprob: -9.754287719726562
    7. '[' → logprob: -10.129287719726562
    8. 'b' → logprob: -10.629287719726562
    9. '(a' → logprob: -10.879287719726562
    10. '(len' → logprob: -10.879287719726562

Token 1073: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6756673455238342
    2. '2' → logprob: -0.9256673455238342
    3. '(' → logprob: -3.1756672859191895
    4. 'len' → logprob: -3.1756672859191895
    5. '0' → logprob: -4.8006672859191895
    6. 'range' → logprob: -6.6756672859191895
    7. 'a' → logprob: -6.8006672859191895
    8. '4' → logprob: -8.175667762756348
    9. 'b' → logprob: -8.675667762756348
    10. '(len' → logprob: -8.925667762756348

Token 1074: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.10108884423971176
    2. ' <<' → logprob: -2.351088762283325
    3. '<<(' → logprob: -7.101089000701904
    4. ',' → logprob: -10.476088523864746
    5. '<<<' → logprob: -11.476088523864746
    6. '<' → logprob: -12.601088523864746
    7. '1' → logprob: -12.851088523864746
    8. '<<"' → logprob: -13.101088523864746
    9. '>>' → logprob: -13.351088523864746
    10. '
' → logprob: -13.476088523864746

Token 1075: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07479308545589447
    2. 'm' → logprob: -2.8247931003570557
    3. '(i' → logprob: -5.074792861938477
    4. '(' → logprob: -5.949792861938477
    5. 'j' → logprob: -6.199792861938477
    6. '(m' → logprob: -7.574792861938477
    7. 'n' → logprob: -7.699792861938477
    8. '(n' → logprob: -7.699792861938477
    9. '2' → logprob: -8.324792861938477
    10. '1' → logprob: -9.824792861938477

Token 1076: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30184870958328247
    2. '):
' → logprob: -2.4268486499786377
    3. 's' → logprob: -3.1768486499786377
    4. 'n' → logprob: -3.3018486499786377
    5. '):' → logprob: -3.6768486499786377
    6. '+' → logprob: -3.9268486499786377
    7. '   ' → logprob: -4.426848888397217
    8. '<|end|>' → logprob: -4.551848888397217
    9. '       ' → logprob: -5.926848888397217
    10. ' ' → logprob: -6.051848888397217

Token 1077: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5315216779708862
    2. '<|end|>' → logprob: -2.031521797180176
    3. ' (' → logprob: -3.156521797180176
    4. '    ' → logprob: -3.156521797180176
    5. '+' → logprob: -3.281521797180176
    6. ' for' → logprob: -3.406521797180176
    7. ' ' → logprob: -3.531521797180176
    8. '   ' → logprob: -3.781521797180176
    9. ':' → logprob: -4.531521797180176
    10. '        ' → logprob: -4.906521797180176

Token 1078: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.9156942367553711
    2. 'a' (adapté à ' a') → logprob: -1.290694236755371
    3. '       ' → logprob: -2.415694236755371
    4. '   ' → logprob: -3.040694236755371
    5. ' for' → logprob: -3.290694236755371
    6. ' b' → logprob: -3.415694236755371
    7. '    ' → logprob: -3.915694236755371
    8. 'b' → logprob: -3.915694236755371
    9. ' if' → logprob: -3.915694236755371
    10. '+' → logprob: -4.665694236755371

Token 1079: '.append' (ID: 3709)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.7844224572181702
    2. '[i' → logprob: -1.0344223976135254
    3. '[-' → logprob: -2.1594223976135254
    4. '.append' → logprob: -2.6594223976135254
    5. '[' → logprob: -6.909422397613525
    6. 'append' → logprob: -7.534422397613525
    7. '
' → logprob: -7.659422397613525
    8. '[a' → logprob: -8.409422874450684
    9. '[
' → logprob: -9.034422874450684
    10. '[len' → logprob: -9.284422874450684

Token 1080: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.017643043771386147
    2. '[' → logprob: -4.767642974853516
    3. '[a' → logprob: -5.892642974853516
    4. '([
' → logprob: -5.892642974853516
    5. '(' → logprob: -6.892642974853516
    6. '(a' → logprob: -7.642642974853516
    7. '((' → logprob: -7.642642974853516
    8. '([(' → logprob: -7.767642974853516
    9. '(
' → logprob: -7.892642974853516
    10. '[(' → logprob: -8.017642974853516

Token 1081: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3525032103061676
    2. 'v' → logprob: -1.2275031805038452
    3. '0' → logprob: -5.602503299713135
    4. 'j' → logprob: -9.102502822875977
    5. 'i' → logprob: -10.102502822875977
    6. '(a' → logprob: -10.852502822875977
    7. 'w' → logprob: -10.852502822875977
    8. '(v' → logprob: -10.852502822875977
    9. ' v' → logprob: -11.102502822875977
    10. '(' → logprob: -11.102502822875977

Token 1082: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.14318817853927612
    2. '[j' → logprob: -2.268188238143921
    3. '[-' → logprob: -3.518188238143921
    4. '[' → logprob: -9.1431884765625
    5. '[a' → logprob: -9.6431884765625
    6. 'i' → logprob: -11.1431884765625
    7. '
' → logprob: -11.2681884765625
    8. '[
' → logprob: -11.2681884765625
    9. '[m' → logprob: -11.3931884765625
    10. '][' → logprob: -11.6431884765625

Token 1083: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0022496995516121387
    2. '[' → logprob: -6.127249717712402
    3. '0' → logprob: -10.752249717712402
    4. '   ' → logprob: -11.627249717712402
    5. ']' → logprob: -11.752249717712402
    6. 'a' → logprob: -12.502249717712402
    7. '
' → logprob: -12.627249717712402
    8. '+' → logprob: -12.627249717712402
    9. '1' → logprob: -12.752249717712402
    10. '[i' → logprob: -13.002249717712402

Token 1084: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. '
' → logprob: -12.625003814697266
    3. '1' → logprob: -14.625003814697266
    4. '   ' → logprob: -16.000003814697266
    5. ' ' → logprob: -16.375003814697266
    6. '[' → logprob: -16.500003814697266
    7. 'i' → logprob: -18.125003814697266
    8. '    
' → logprob: -18.562503814697266
    9. ':' → logprob: -18.875003814697266
    10. ' 
' → logprob: -19.000003814697266

Token 1085: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01909690722823143
    2. ']+' → logprob: -4.144096851348877
    3. ' +' → logprob: -6.019096851348877
    4. '
' → logprob: -8.519097328186035
    5. '+
' → logprob: -8.894097328186035
    6. '+a' → logprob: -9.269097328186035
    7. ']' → logprob: -9.769097328186035
    8. '|' → logprob: -10.644097328186035
    9. '+b' → logprob: -11.394097328186035
    10. '][' → logprob: -11.394097328186035

Token 1086: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -8.537868779967539e-06
    2. ' v' → logprob: -11.750008583068848
    3. '   ' → logprob: -14.750008583068848
    4. '	v' → logprob: -15.750008583068848
    5. 'w' → logprob: -17.00000762939453
    6. ' ' → logprob: -17.37500762939453
    7. '  ' → logprob: -17.50000762939453
    8. 'vj' → logprob: -18.62500762939453
    9. '[v' → logprob: -18.87500762939453
    10. '0' → logprob: -19.00000762939453

Token 1087: '[i' (ID: 1768)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.027063820511102676
    2. '[i' → logprob: -3.6520638465881348
    3. 'm' → logprob: -7.402063846588135
    4. '[m' → logprob: -9.527063369750977
    5. 'j' → logprob: -10.777063369750977
    6. '[' → logprob: -10.777063369750977
    7. ' i' → logprob: -11.777063369750977
    8. 'a' → logprob: -12.152063369750977
    9. '[
' → logprob: -12.652063369750977
    10. '2' → logprob: -12.652063369750977

Token 1088: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.001074611209332943
    2. '],
' → logprob: -8.12607479095459
    3. ']' → logprob: -8.25107479095459
    4. '][' → logprob: -8.25107479095459
    5. '],[' → logprob: -8.62607479095459
    6. '[i' → logprob: -10.50107479095459
    7. ' ],' → logprob: -10.50107479095459
    8. '[j' → logprob: -11.37607479095459
    9. '   ' → logprob: -13.00107479095459
    10. '],

' → logprob: -13.50107479095459

Token 1089: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.003178544342517853
    2. ' a' → logprob: -5.753178596496582
    3. ' ' → logprob: -15.378178596496582
    4. '   ' → logprob: -15.378178596496582
    5. '    ' → logprob: -15.753178596496582
    6. '	a' → logprob: -16.378177642822266
    7. '     ' → logprob: -16.503177642822266
    8. '  ' → logprob: -16.753177642822266
    9. '       ' → logprob: -17.753177642822266
    10. '
' → logprob: -17.753177642822266

Token 1090: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00014358828775584698
    2. 'j' → logprob: -8.875144004821777
    3. '[' → logprob: -12.625144004821777
    4. '[i' → logprob: -15.625144004821777
    5. '_j' → logprob: -17.00014305114746
    6. '[m' → logprob: -17.12514305114746
    7. '(j' → logprob: -17.25014305114746
    8. ',j' → logprob: -17.62514305114746
    9. '	j' → logprob: -17.87514305114746
    10. '[
' → logprob: -18.12514305114746

Token 1091: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00017684244085103273
    2. '[' → logprob: -8.875176429748535
    3. ']' → logprob: -10.750176429748535
    4. '0' → logprob: -12.375176429748535
    5. ' ][' → logprob: -12.375176429748535
    6. '   ' → logprob: -12.875176429748535
    7. '1' → logprob: -13.750176429748535
    8. '
' → logprob: -13.750176429748535
    9. '"][' → logprob: -15.000176429748535
    10. ''][' → logprob: -15.125176429748535

Token 1092: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22579599916934967
    2. '0' → logprob: -1.6007959842681885
    3. '[' → logprob: -8.85079574584961
    4. '][' → logprob: -8.85079574584961
    5. 'i' → logprob: -10.35079574584961
    6. ' ' → logprob: -10.47579574584961
    7. '
' → logprob: -10.97579574584961
    8. '   ' → logprob: -11.85079574584961
    9. '#' → logprob: -12.60079574584961
    10. 'w' → logprob: -12.97579574584961

Token 1093: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.011305990628898144
    2. '+w' → logprob: -4.636305809020996
    3. ']' → logprob: -6.636305809020996
    4. '+' → logprob: -8.386305809020996
    5. 'w' → logprob: -13.136305809020996
    6. '][' → logprob: -13.636305809020996
    7. ' ]' → logprob: -13.636305809020996
    8. '[' → logprob: -13.761305809020996
    9. ' +' → logprob: -14.011305809020996
    10. ')+' → logprob: -14.511305809020996

Token 1094: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00020818933262489736
    2. ' w' → logprob: -8.500207901000977
    3. '   ' → logprob: -13.500207901000977
    4. '    ' → logprob: -14.375207901000977
    5. '       ' → logprob: -14.500207901000977
    6. '
' → logprob: -14.750207901000977
    7. '     ' → logprob: -15.250207901000977
    8. ' ' → logprob: -15.250207901000977
    9. '  ' → logprob: -15.625207901000977
    10. '	w' → logprob: -15.625207901000977

Token 1095: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.029869431629776955
    2. 'i' → logprob: -3.529869318008423
    3. '])' → logprob: -9.529869079589844
    4. '[' → logprob: -11.154869079589844
    5. '(i' → logprob: -11.404869079589844
    6. '[j' → logprob: -12.654869079589844
    7. '1' → logprob: -12.904869079589844
    8. ']])' → logprob: -13.029869079589844
    9. '_i' → logprob: -13.154869079589844
    10. ' i' → logprob: -13.404869079589844

Token 1096: ']])
' (ID: 62818)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0132164740934968
    2. ']])' → logprob: -4.388216495513916
    3. '])
' → logprob: -7.388216495513916
    4. ')])' → logprob: -10.513216018676758
    5. ']' → logprob: -10.888216018676758
    6. ' ])' → logprob: -11.263216018676758
    7. ']])
' → logprob: -11.263216018676758
    8. '])]' → logprob: -12.388216018676758
    9. ')' → logprob: -12.763216018676758
    10. ']);' → logprob: -12.888216018676758

Token 1097: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6525276899337769
    2. '   ' → logprob: -1.4025276899337769
    3. '<|end|>' → logprob: -2.2775278091430664
    4. ' for' → logprob: -2.4025278091430664
    5. ' ' → logprob: -3.7775278091430664
    6. ')' → logprob: -5.277527809143066
    7. '       ' → logprob: -5.652527809143066
    8. '#' → logprob: -6.027527809143066
    9. '
' → logprob: -6.527527809143066
    10. '+' → logprob: -6.777527809143066

Token 1098: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2208886593580246
    2. ' i' → logprob: -1.720888614654541
    3. ' range' → logprob: -4.345888614654541
    4. 'range' → logprob: -5.095888614654541
    5. ' j' → logprob: -9.2208890914917
    6. 'j' → logprob: -9.9708890914917
    7. ' in' → logprob: -10.4708890914917
    8. ' ' → logprob: -11.7208890914917
    9. 'in' → logprob: -12.3458890914917
    10. '   ' → logprob: -12.8458890914917

Token 1099: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3924102485179901
    2. 'in' → logprob: -1.1424102783203125
    3. 'range' → logprob: -5.2674102783203125
    4. ' range' → logprob: -8.392410278320312
    5. 'm' → logprob: -9.517410278320312
    6. 'n' → logprob: -10.642410278320312
    7. '   ' → logprob: -11.267410278320312
    8. '(m' → logprob: -11.767410278320312
    9. '
' → logprob: -11.892410278320312
    10. ' ' → logprob: -12.267410278320312

Token 1100: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019312551012262702
    2. ' range' → logprob: -6.251931190490723
    3. '(range' → logprob: -12.876931190490723
    4. 'm' → logprob: -16.75193214416504
    5. '
' → logprob: -17.25193214416504
    6. 'r' → logprob: -17.87693214416504
    7. 're' → logprob: -19.00193214416504
    8. 'ra' → logprob: -19.37693214416504
    9. '(m' → logprob: -19.37693214416504
    10. '	range' → logprob: -19.37693214416504

Token 1101: '(n' (ID: 2406)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.1382410228252411
    2. 'range' → logprob: -2.1382410526275635
    3. 'm' → logprob: -4.638240814208984
    4. '(range' → logprob: -6.638240814208984
    5. ' range' → logprob: -8.263240814208984
    6. '(' → logprob: -12.638240814208984
    7. '(n' → logprob: -13.388240814208984
    8. '
' → logprob: -13.638240814208984
    9. ' m' → logprob: -14.513240814208984
    10. '[m' → logprob: -15.263240814208984

Token 1102: '-m' (ID: 2126)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.1560925841331482
    2. '-m' → logprob: -2.406092643737793
    3. '#' → logprob: -4.781092643737793
    4. '
' → logprob: -5.031092643737793
    5. '<|end|>' → logprob: -5.031092643737793
    6. 'n' → logprob: -5.156092643737793
    7. '<|end|>' → logprob: -5.156092643737793
    8. 'W' → logprob: -5.531092643737793
    9. '//' → logprob: -5.656092643737793
    10. 'w' → logprob: -6.406092643737793

Token 1103: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.006934166885912418
    2. '):' → logprob: -5.75693416595459
    3. ':
' → logprob: -5.88193416595459
    4. ':' → logprob: -7.25693416595459
    5. 'for' → logprob: -9.63193416595459
    6. '   ' → logprob: -9.75693416595459
    7. '):
' → logprob: -10.00693416595459
    8. ']:
' → logprob: -10.75693416595459
    9. ')' → logprob: -11.25693416595459
    10. 'n' → logprob: -11.50693416595459

Token 1104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22281821072101593
    2. 'for' → logprob: -2.09781813621521
    3. '	for' → logprob: -2.84781813621521
    4. ' for' → logprob: -3.97281813621521
    5. 'b' → logprob: -8.972818374633789
    6. '       ' → logprob: -9.722818374633789
    7. ' ' → logprob: -10.722818374633789
    8. '	b' → logprob: -11.347818374633789
    9. '  ' → logprob: -13.847818374633789
    10. '```' → logprob: -14.472818374633789

Token 1105: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00017183588352054358
    2. ' for' → logprob: -8.750171661376953
    3. '   ' → logprob: -11.375171661376953
    4. '	for' → logprob: -13.375171661376953
    5. 'b' → logprob: -15.750171661376953
    6. '       ' → logprob: -17.250171661376953
    7. 'import' → logprob: -17.750171661376953
    8. 'from' → logprob: -17.875171661376953
    9. '_for' → logprob: -18.125171661376953
    10. ' ' → logprob: -18.375171661376953

Token 1106: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.20141704380512238
    2. ' j' → logprob: -1.701417088508606
    3. 'range' → logprob: -13.451416969299316
    4. ' range' → logprob: -14.076416969299316
    5. '   ' → logprob: -14.451416969299316
    6. 'b' → logprob: -14.826416969299316
    7. ' ' → logprob: -15.701416969299316
    8. '  ' → logprob: -16.201417922973633
    9. '_j' → logprob: -16.326417922973633
    10. '	j' → logprob: -16.826417922973633

Token 1107: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6817749738693237
    2. ' in' → logprob: -0.9317749738693237
    3. 'range' → logprob: -2.9317750930786133
    4. '(' → logprob: -3.1817750930786133
    5. ' range' → logprob: -5.306775093078613
    6. ' (' → logprob: -7.556775093078613
    7. '(range' → logprob: -9.306775093078613
    8. ' ' → logprob: -10.681775093078613
    9. '   ' → logprob: -11.931775093078613
    10. '1' → logprob: -13.431775093078613

Token 1108: ' range' (ID: 3352)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1653366982936859
    2. 'range' → logprob: -1.9153367280960083
    3. ' range' → logprob: -5.290336608886719
    4. '(range' → logprob: -10.165336608886719
    5. ' (' → logprob: -11.290336608886719
    6. '1' → logprob: -11.790336608886719
    7. ' ' → logprob: -15.165336608886719
    8. '0' → logprob: -15.915336608886719
    9. '   ' → logprob: -16.29033660888672
    10. '
' → logprob: -16.66533660888672

Token 1109: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.2007883671903983e-05
    2. '1' → logprob: -10.750021934509277
    3. ' (' → logprob: -14.625021934509277
    4. '   ' → logprob: -16.500022888183594
    5. '0' → logprob: -17.000022888183594
    6. 'b' → logprob: -18.000022888183594
    7. '((' → logprob: -18.625022888183594
    8. ' ' → logprob: -19.000022888183594
    9. 'range' → logprob: -19.125022888183594
    10. '(b' → logprob: -20.500022888183594

Token 1110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20141372084617615
    2. '(' → logprob: -1.7014137506484985
    3. ' (' → logprob: -15.451414108276367
    4. '0' → logprob: -16.201414108276367
    5. ' ' → logprob: -16.201414108276367
    6. '   ' → logprob: -16.951414108276367
    7. '2' → logprob: -18.201414108276367
    8. '[' → logprob: -19.076414108276367
    9. '
' → logprob: -19.201414108276367
    10. '{' → logprob: -20.076414108276367

Token 1111: '<<' (ID: 5354)
  Prédit: '<<('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<(' → logprob: -0.6517961025238037
    2. '<<' → logprob: -1.1517961025238037
    3. '(' → logprob: -2.7767961025238037
    4. '(n' → logprob: -2.9017961025238037
    5. '(i' → logprob: -3.1517961025238037
    6. '(j' → logprob: -6.151796340942383
    7. '(w' → logprob: -8.401796340942383
    8. '(m' → logprob: -9.526796340942383
    9. '{' → logprob: -9.651796340942383
    10. '<n' → logprob: -10.276796340942383

Token 1112: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.003693539882078767
    2. 'j' → logprob: -5.878693580627441
    3. '(i' → logprob: -7.128693580627441
    4. '(n' → logprob: -11.003693580627441
    5. '(' → logprob: -11.128693580627441
    6. ' i' → logprob: -11.878693580627441
    7. '   ' → logprob: -11.878693580627441
    8. '_i' → logprob: -11.878693580627441
    9. 'w' → logprob: -12.003693580627441
    10. 'n' → logprob: -12.128693580627441

Token 1113: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07949255406856537
    2. '   ' → logprob: -3.3294925689697266
    3. 'b' → logprob: -4.329492568969727
    4. '       ' → logprob: -4.579492568969727
    5. ':
' → logprob: -4.579492568969727
    6. ']:
' → logprob: -5.704492568969727
    7. ':' → logprob: -6.079492568969727
    8. '):' → logprob: -7.829492568969727
    9. '):
' → logprob: -8.204492568969727
    10. ')b' → logprob: -8.954492568969727

Token 1114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04012246057391167
    2. '   ' → logprob: -4.0401225090026855
    3. 'b' → logprob: -4.4151225090026855
    4. ' b' → logprob: -4.6651225090026855
    5. '	b' → logprob: -9.665122032165527
    6. '           ' → logprob: -10.165122032165527
    7. '```' → logprob: -10.415122032165527
    8. '     ' → logprob: -10.540122032165527
    9. '    ' → logprob: -10.665122032165527
    10. '      ' → logprob: -11.415122032165527

Token 1115: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.00013083349040243775
    2. ' b' → logprob: -9.000130653381348
    3. '   ' → logprob: -12.500130653381348
    4. '       ' → logprob: -12.750130653381348
    5. '	b' → logprob: -14.125130653381348
    6. '    ' → logprob: -18.875131607055664
    7. 'c' → logprob: -18.875131607055664
    8. '           ' → logprob: -19.000131607055664
    9. ')b' → logprob: -19.000131607055664
    10. '>b' → logprob: -19.750131607055664

Token 1116: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -8.756989700486884e-05
    2. 'b' → logprob: -10.25008773803711
    3. 'append' → logprob: -10.37508773803711
    4. '[b' → logprob: -11.75008773803711
    5. '.' → logprob: -12.12508773803711
    6. '.app' → logprob: -12.62508773803711
    7. 'Append' → logprob: -13.62508773803711
    8. '.Append' → logprob: -14.25008773803711
    9. '_append' → logprob: -14.37508773803711
    10. '[j' → logprob: -14.50008773803711

Token 1117: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -1.0280383548888494e-06
    2. '(b' → logprob: -14.250000953674316
    3. '[b' → logprob: -15.250000953674316
    4. 'b' → logprob: -17.000001907348633
    5. '(' → logprob: -18.000001907348633
    6. '((' → logprob: -18.750001907348633
    7. '[' → logprob: -19.625001907348633
    8. ' ([' → logprob: -19.750001907348633
    9. '([
' → logprob: -20.000001907348633
    10. '   ' → logprob: -20.375001907348633

Token 1118: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.4855663721391466e-05
    2. '[b' → logprob: -11.250015258789062
    3. '[' → logprob: -13.875015258789062
    4. ' b' → logprob: -14.125015258789062
    5. '   ' → logprob: -16.250015258789062
    6. 'v' → logprob: -17.000015258789062
    7. '[v' → logprob: -17.625015258789062
    8. '	b' → logprob: -18.000015258789062
    9. '  ' → logprob: -18.500015258789062
    10. '    ' → logprob: -18.875015258789062

Token 1119: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.4849443838757e-06
    2. 'j' → logprob: -12.500004768371582
    3. '[' → logprob: -14.500004768371582
    4. '[i' → logprob: -17.000003814697266
    5. '[b' → logprob: -17.000003814697266
    6. '   ' → logprob: -17.625003814697266
    7. '[a' → logprob: -18.625003814697266
    8. ' [' → logprob: -18.750003814697266
    9. '       ' → logprob: -18.875003814697266
    10. '[m' → logprob: -19.625003814697266

Token 1120: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6336564421653748
    2. '][' → logprob: -0.7586564421653748
    3. '0' → logprob: -7.1336565017700195
    4. '   ' → logprob: -8.88365650177002
    5. 'i' → logprob: -10.75865650177002
    6. '       ' → logprob: -11.38365650177002
    7. ' ][' → logprob: -11.50865650177002
    8. '
' → logprob: -11.63365650177002
    9. '[j' → logprob: -11.88365650177002
    10. '[i' → logprob: -12.00865650177002

Token 1121: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.2994620242971e-06
    2. 'i' → logprob: -12.375008583068848
    3. '1' → logprob: -13.750008583068848
    4. '[' → logprob: -13.875008583068848
    5. ' ' → logprob: -14.625008583068848
    6. '   ' → logprob: -14.750008583068848
    7. 'j' → logprob: -15.000008583068848
    8. '
' → logprob: -15.125008583068848
    9. '][' → logprob: -15.937508583068848
    10. 'n' → logprob: -16.12500762939453

Token 1122: ']+' (ID: 15344)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.33043327927589417
    2. '[' → logprob: -1.7054332494735718
    3. '0' → logprob: -2.7054333686828613
    4. '+' → logprob: -3.7054333686828613
    5. ']+' → logprob: -4.955433368682861
    6. ']' → logprob: -7.455433368682861
    7. '   ' → logprob: -9.080432891845703
    8. '+j' → logprob: -9.455432891845703
    9. '+[' → logprob: -9.955432891845703
    10. ' ][' → logprob: -10.080432891845703

Token 1123: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -5.200166469876422e-06
    2. ' v' → logprob: -12.375004768371582
    3. 'w' → logprob: -14.000004768371582
    4. '   ' → logprob: -16.2500057220459
    5. '	v' → logprob: -17.8750057220459
    6. '[v' → logprob: -18.1250057220459
    7. 'b' → logprob: -18.5000057220459
    8. 'vj' → logprob: -18.8750057220459
    9. '  ' → logprob: -19.1250057220459
    10. ' ' → logprob: -19.3750057220459

Token 1124: '[i' (ID: 1768)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.011544537730515003
    2. 'm' → logprob: -4.511544704437256
    3. '[n' → logprob: -8.011544227600098
    4. '[i' → logprob: -9.011544227600098
    5. '[j' → logprob: -10.511544227600098
    6. '(m' → logprob: -11.636544227600098
    7. '[' → logprob: -12.636544227600098
    8. 'n' → logprob: -13.761544227600098
    9. '{' → logprob: -14.011544227600098
    10. '   ' → logprob: -15.011544227600098

Token 1125: '+m' (ID: 139456)
  Prédit: '+m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+m' → logprob: -0.0078207328915596
    2. '+' → logprob: -5.5078206062316895
    3. 'm' → logprob: -5.7578206062316895
    4. '][' → logprob: -8.757821083068848
    5. '],' → logprob: -8.882821083068848
    6. '[m' → logprob: -8.882821083068848
    7. '   ' → logprob: -9.507821083068848
    8. ' +' → logprob: -10.007821083068848
    9. '+n' → logprob: -12.757821083068848
    10. ']][' → logprob: -12.882821083068848

Token 1126: '],' (ID: 2155)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.04979498311877251
    2. '],' → logprob: -3.049794912338257
    3. '],[' → logprob: -7.174795150756836
    4. ']' → logprob: -8.674795150756836
    5. ',' → logprob: -9.549795150756836
    6. '],
' → logprob: -9.924795150756836
    7. '[' → logprob: -10.424795150756836
    8. ']][' → logprob: -10.674795150756836
    9. '   ' → logprob: -10.799795150756836
    10. ' ][' → logprob: -10.924795150756836

Token 1127: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -4.56102097814437e-05
    2. ' b' → logprob: -10.000045776367188
    3. '   ' → logprob: -16.250045776367188
    4. '    ' → logprob: -18.000045776367188
    5. '       ' → logprob: -18.500045776367188
    6. '     ' → logprob: -18.625045776367188
    7. '  ' → logprob: -19.250045776367188
    8. '	b' → logprob: -19.375045776367188
    9. 'w' → logprob: -19.875045776367188
    10. '      ' → logprob: -20.250045776367188

Token 1128: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.023249322548508644
    2. 'j' → logprob: -3.773249387741089
    3. '[' → logprob: -13.898249626159668
    4. '[m' → logprob: -13.898249626159668
    5. '
' → logprob: -14.398249626159668
    6. '	j' → logprob: -14.523249626159668
    7. '[i' → logprob: -15.023249626159668
    8. '[
' → logprob: -15.773249626159668
    9. '+j' → logprob: -16.14824867248535
    10. ' j' → logprob: -16.14824867248535

Token 1129: '][' (ID: 2696)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6428322792053223
    2. '][' → logprob: -0.7678322792053223
    3. '[' → logprob: -4.642832279205322
    4. '+' → logprob: -8.642831802368164
    5. '0' → logprob: -9.017831802368164
    6. 'm' → logprob: -9.392831802368164
    7. '-' → logprob: -10.642831802368164
    8. ''][' → logprob: -10.767831802368164
    9. '   ' → logprob: -10.892831802368164
    10. ')[' → logprob: -11.017831802368164

Token 1130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. '0' → logprob: -12.375006675720215
    3. '[' → logprob: -14.250006675720215
    4. '
' → logprob: -14.375006675720215
    5. 'm' → logprob: -15.000006675720215
    6. ' ' → logprob: -16.0000057220459
    7. 'j' → logprob: -16.1250057220459
    8. '   ' → logprob: -16.1250057220459
    9. '[j' → logprob: -17.1250057220459
    10. '[m' → logprob: -17.3750057220459

Token 1131: ']+' (ID: 15344)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.037744324654340744
    2. '][' → logprob: -3.5377442836761475
    3. ']+' → logprob: -5.412744522094727
    4. '1' → logprob: -6.662744522094727
    5. '[' → logprob: -6.662744522094727
    6. ']' → logprob: -7.412744522094727
    7. '+' → logprob: -8.162744522094727
    8. '   ' → logprob: -10.912744522094727
    9. '+j' → logprob: -11.537744522094727
    10. '#' → logprob: -12.287744522094727

Token 1132: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -4.36574100604048e-06
    2. 'v' → logprob: -12.875004768371582
    3. ' w' → logprob: -13.375004768371582
    4. '
' → logprob: -16.250003814697266
    5. '[w' → logprob: -16.875003814697266
    6. '   ' → logprob: -17.125003814697266
    7. '0' → logprob: -17.500003814697266
    8. '	w' → logprob: -18.625003814697266
    9. '       ' → logprob: -19.125003814697266
    10. 'W' → logprob: -19.250003814697266

Token 1133: '[i' (ID: 1768)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4347180724143982
    2. '[j' → logprob: -1.934718132019043
    3. 'i' → logprob: -2.309718132019043
    4. '[i' → logprob: -2.684718132019043
    5. 'm' → logprob: -3.684718132019043
    6. '[m' → logprob: -4.184718132019043
    7. '+j' → logprob: -9.934718132019043
    8. '   ' → logprob: -10.434718132019043
    9. '{i' → logprob: -10.559718132019043
    10. ']' → logprob: -10.684718132019043

Token 1134: '+m' (ID: 139456)
  Prédit: ']])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']])' → logprob: -0.06722830981016159
    2. '+j' → logprob: -3.442228317260742
    3. ']])
' → logprob: -3.817228317260742
    4. 'j' → logprob: -5.192228317260742
    5. '+m' → logprob: -6.317228317260742
    6. ']' → logprob: -6.942228317260742
    7. 'm' → logprob: -7.442228317260742
    8. '[j' → logprob: -7.567228317260742
    9. ']]' → logprob: -7.692228317260742
    10. '+' → logprob: -7.692228317260742

Token 1135: ']])
' (ID: 62818)
  Prédit: ']])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']])' → logprob: -0.0030138343572616577
    2. '])' → logprob: -6.253013610839844
    3. ']' → logprob: -7.378013610839844
    4. ')])' → logprob: -8.253013610839844
    5. ']])
' → logprob: -8.628013610839844
    6. '])]' → logprob: -12.378013610839844
    7. ']))' → logprob: -12.378013610839844
    8. '   ' → logprob: -13.128013610839844
    9. ']]' → logprob: -13.503013610839844
    10. 'j' → logprob: -13.628013610839844

Token 1136: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -8.506661833962426e-05
    2. 'b' → logprob: -10.00008487701416
    3. 'for' → logprob: -10.87508487701416
    4. 'import' → logprob: -11.62508487701416
    5. '#' → logprob: -12.00008487701416
    6. '
' → logprob: -13.25008487701416
    7. 'from' → logprob: -13.50008487701416
    8. ' a' → logprob: -13.75008487701416
    9. '```' → logprob: -14.37508487701416
    10. '#a' → logprob: -15.00008487701416

Token 1137: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.017043547704815865
    2. '=' → logprob: -4.142043590545654
    3. '.' → logprob: -7.892043590545654
    4. ' =' → logprob: -8.142043113708496
    5. 'sort' → logprob: -8.517043113708496
    6. ',' → logprob: -9.392043113708496
    7. '[' → logprob: -11.642043113708496
    8. '_sorted' → logprob: -11.767043113708496
    9. '<|end|>' → logprob: -11.892043113708496
    10. ')' → logprob: -12.142043113708496

Token 1138: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.47119829058647156
    2. 'key' → logprob: -1.221198320388794
    3. ',key' → logprob: -2.721198320388794
    4. '()' → logprob: -4.471198081970215
    5. '(reverse' → logprob: -6.471198081970215
    6. ',' → logprob: -7.096198081970215
    7. ' key' → logprob: -7.721198081970215
    8. 'reverse' → logprob: -7.971198081970215
    9. '(lambda' → logprob: -8.846198081970215
    10. '()
' → logprob: -9.096198081970215

Token 1139: ' =' (ID: 314)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0006246338016353548
    2. 'lambda' → logprob: -8.125624656677246
    3. '=' → logprob: -8.250624656677246
    4. '=a' → logprob: -10.250624656677246
    5. '(lambda' → logprob: -11.000624656677246
    6. 'a' → logprob: -11.250624656677246
    7. '=b' → logprob: -13.875624656677246
    8. '```' → logprob: -14.750624656677246
    9. '=item' → logprob: -15.250624656677246
    10. 'b' → logprob: -15.750624656677246

Token 1140: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -3.7385154428193346e-05
    2. '=lambda' → logprob: -11.00003719329834
    3. '(lambda' → logprob: -11.50003719329834
    4. ' lambda' → logprob: -11.50003719329834
    5. 'operator' → logprob: -16.000038146972656
    6. '   ' → logprob: -17.000038146972656
    7. 'l' → logprob: -17.250038146972656
    8. '_lambda' → logprob: -17.625038146972656
    9. '```' → logprob: -18.500038146972656
    10. 'lam' → logprob: -18.500038146972656

Token 1141: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.010396208614110947
    2. 'x' → logprob: -4.7603960037231445
    3. ' lambda' → logprob: -6.7603960037231445
    4. 'a' → logprob: -7.5103960037231445
    5. ' x' → logprob: -10.885396003723145
    6. '(lambda' → logprob: -11.135396003723145
    7. '=lambda' → logprob: -11.260396003723145
    8. '   ' → logprob: -11.385396003723145
    9. 'l' → logprob: -12.010396003723145
    10. 'b' → logprob: -12.760396003723145

Token 1142: ':x' (ID: 73587)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029826046898961067
    2. ':x' → logprob: -3.7798261642456055
    3. 'lambda' → logprob: -5.6548261642456055
    4. ' :' → logprob: -6.9048261642456055
    5. 'x' → logprob: -7.1548261642456055
    6. '=lambda' → logprob: -7.7798261642456055
    7. 'a' → logprob: -8.279826164245605
    8. ':
' → logprob: -8.404826164245605
    9. '[' → logprob: -9.029826164245605
    10. '1' → logprob: -9.154826164245605

Token 1143: '[' (ID: 58)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2948159873485565
    2. '[' → logprob: -1.419816017150879
    3. '1' → logprob: -4.794816017150879
    4. ' ' → logprob: -5.794816017150879
    5. ':' → logprob: -6.669816017150879
    6. ' [' → logprob: -8.044816017150879
    7. 'lambda' → logprob: -8.044816017150879
    8. ' lambda' → logprob: -8.669816017150879
    9. 'x' → logprob: -9.794816017150879
    10. ' :' → logprob: -10.169816017150879

Token 1144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023858259373810142
    2. '[' → logprob: -9.000238418579102
    3. '0' → logprob: -9.125238418579102
    4. '
' → logprob: -12.500238418579102
    5. '-' → logprob: -14.625238418579102
    6. ':' → logprob: -15.000238418579102
    7. '::-' → logprob: -15.250238418579102
    8. '```' → logprob: -15.375238418579102
    9. '(' → logprob: -15.625238418579102
    10. '   ' → logprob: -15.750238418579102

Token 1145: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09679809957742691
    2. '])' → logprob: -2.5967981815338135
    3. ',' → logprob: -4.346797943115234
    4. ')
' → logprob: -5.471797943115234
    5. '])
' → logprob: -8.971797943115234
    6. '),' → logprob: -9.221797943115234
    7. ')])' → logprob: -9.346797943115234
    8. '>)' → logprob: -9.596797943115234
    9. '})' → logprob: -9.596797943115234
    10. '))' → logprob: -10.221797943115234

Token 1146: 'b' (ID: 65)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.749589741230011
    2. 'na' → logprob: -1.3745896816253662
    3. 'for' → logprob: -3.124589681625366
    4. 'a' → logprob: -3.374589681625366
    5. 'res' → logprob: -3.374589681625366
    6. 'b' → logprob: -3.624589681625366
    7. 'i' → logprob: -3.749589681625366
    8. 'filtered' → logprob: -3.749589681625366
    9. 'new' → logprob: -3.874589681625366
    10. 'ra' → logprob: -4.624589920043945

Token 1147: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0005219352315180004
    2. '.' → logprob: -7.625522136688232
    3. 'sort' → logprob: -11.125521659851074
    4. '=' → logprob: -11.125521659851074
    5. '.s' → logprob: -13.500521659851074
    6. '.reverse' → logprob: -13.750521659851074
    7. ' =' → logprob: -14.250521659851074
    8. ' .' → logprob: -14.625521659851074
    9. 's' → logprob: -15.875521659851074
    10. ',' → logprob: -16.37552261352539

Token 1148: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.0004907185211777687
    2. '=' → logprob: -8.75049114227295
    3. '(lambda' → logprob: -9.25049114227295
    4. '=lambda' → logprob: -9.25049114227295
    5. '(' → logprob: -9.62549114227295
    6. 'key' → logprob: -10.25049114227295
    7. ',key' → logprob: -11.12549114227295
    8. '()' → logprob: -11.25049114227295
    9. '(reverse' → logprob: -11.75049114227295
    10. ' =' → logprob: -14.12549114227295

Token 1149: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6589518189430237
    2. '=lambda' → logprob: -0.9089518189430237
    3. '=' → logprob: -2.658951759338379
    4. 'lambda' → logprob: -4.658951759338379
    5. ' lambda' → logprob: -8.783951759338379
    6. '(lambda' → logprob: -12.908951759338379
    7. 'key' → logprob: -12.908951759338379
    8. '   ' → logprob: -13.908951759338379
    9. 'ambda' → logprob: -14.158951759338379
    10. 'b' → logprob: -14.408951759338379

Token 1150: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.0004984631086699665
    2. ' lambda' → logprob: -7.625498294830322
    3. '=lambda' → logprob: -11.75049877166748
    4. 'lam' → logprob: -13.50049877166748
    5. '(lambda' → logprob: -14.00049877166748
    6. 'key' → logprob: -16.000497817993164
    7. 'None' → logprob: -16.625497817993164
    8. '1' → logprob: -17.125497817993164
    9. '   ' → logprob: -17.250497817993164
    10. 'l' → logprob: -17.625497817993164

Token 1151: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.0018036997644230723
    2. ' lambda' → logprob: -6.376803874969482
    3. '=lambda' → logprob: -9.251803398132324
    4. 'lam' → logprob: -13.251803398132324
    5. '(lambda' → logprob: -13.251803398132324
    6. '1' → logprob: -14.626803398132324
    7. '```' → logprob: -15.251803398132324
    8. 'a' → logprob: -15.251803398132324
    9. 'l' → logprob: -15.501803398132324
    10. '.lambda' → logprob: -16.00180435180664

Token 1152: ':x' (ID: 73587)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0006360700353980064
    2. '=' → logprob: -7.375636100769043
    3. ' =' → logprob: -11.750636100769043
    4. '=len' → logprob: -13.875636100769043
    5. 'lambda' → logprob: -15.375636100769043
    6. '=
' → logprob: -15.750636100769043
    7. '=l' → logprob: -16.000635147094727
    8. '=None' → logprob: -16.500635147094727
    9. '=int' → logprob: -17.125635147094727
    10. '=x' → logprob: -17.875635147094727

Token 1153: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.018575729802250862
    2. '1' → logprob: -4.018575668334961
    3. ',' → logprob: -9.143575668334961
    4. '```' → logprob: -9.393575668334961
    5. '0' → logprob: -9.518575668334961
    6. 'lambda' → logprob: -10.018575668334961
    7. '=lambda' → logprob: -10.393575668334961
    8. '][' → logprob: -11.268575668334961
    9. ' ' → logprob: -11.393575668334961
    10. '=' → logprob: -11.518575668334961

Token 1154: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10029736161231995
    2. '1' → logprob: -2.350297451019287
    3. 'lambda' → logprob: -10.225296974182129
    4. ' ' → logprob: -10.475296974182129
    5. '[' → logprob: -11.350296974182129
    6. '   ' → logprob: -12.412796974182129
    7. '
' → logprob: -12.537796974182129
    8. '
' → logprob: -13.600296974182129
    9. '```' → logprob: -13.975296974182129
    10. '	' → logprob: -14.600296974182129

Token 1155: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.03797032684087753
    2. ')' → logprob: -3.5379703044891357
    3. '])
' → logprob: -4.912970542907715
    4. ')
' → logprob: -7.287970542907715
    5. ')])' → logprob: -9.912970542907715
    6. ',' → logprob: -10.287970542907715
    7. ')]' → logprob: -11.037970542907715
    8. ']' → logprob: -11.412970542907715
    9. '>)' → logprob: -11.912970542907715
    10. ' ])' → logprob: -12.537970542907715

Token 1156: 'ma' (ID: 809)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18589425086975098
    2. 'i' → logprob: -3.060894250869751
    3. 'ai' → logprob: -3.435894250869751
    4. 'a' → logprob: -3.810894250869751
    5. '#' → logprob: -4.185894012451172
    6. 'c' → logprob: -4.810894012451172
    7. 'prev' → logprob: -4.810894012451172
    8. 'max' → logprob: -5.310894012451172
    9. 'new' → logprob: -5.560894012451172
    10. 'tmp' → logprob: -5.685894012451172

Token 1157: ' =' (ID: 314)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.954393079970032e-05
    2. 'p' → logprob: -10.125049591064453
    3. '#' → logprob: -13.125049591064453
    4. '=' → logprob: -13.125049591064453
    5. 'm' → logprob: -13.750049591064453
    6. ' =' → logprob: -13.875049591064453
    7. 'n' → logprob: -14.000049591064453
    8. 'max' → logprob: -14.625049591064453
    9. 'def' → logprob: -14.875049591064453
    10. '
' → logprob: -15.250049591064453

Token 1158: ' b' (ID: 287)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13181635737419128
    2. '[' → logprob: -2.2568163871765137
    3. 'a' → logprob: -4.631816387176514
    4. 'b' → logprob: -6.256816387176514
    5. '[a' → logprob: -6.256816387176514
    6. ' ' → logprob: -6.381816387176514
    7. 'float' → logprob: -7.256816387176514
    8. '[]' → logprob: -7.256816387176514
    9. '[-' → logprob: -7.756816387176514
    10. ' [' → logprob: -8.006815910339355

Token 1159: '[' (ID: 58)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.7849603295326233
    2. 'len' → logprob: -1.9099602699279785
    3. '_len' → logprob: -2.1599602699279785
    4. '_idx' → logprob: -2.4099602699279785
    5. '<|end|>' → logprob: -3.0349602699279785
    6. '_index' → logprob: -3.2849602699279785
    7. '_length' → logprob: -4.5349602699279785
    8. 'x' → logprob: -4.6599602699279785
    9. 'idx' → logprob: -4.6599602699279785
    10. '[' → logprob: -4.6599602699279785

Token 1160: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06263703852891922
    2. '-' → logprob: -2.8126370906829834
    3. 'len' → logprob: -9.187637329101562
    4. '[-' → logprob: -9.687637329101562
    5. ' -' → logprob: -9.687637329101562
    6. '000' → logprob: -9.687637329101562
    7. ']' → logprob: -9.937637329101562
    8. '[' → logprob: -10.062637329101562
    9. '][' → logprob: -10.187637329101562
    10. '__' → logprob: -10.437637329101562

Token 1161: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.003936987370252609
    2. ']' → logprob: -6.128936767578125
    3. '[' → logprob: -6.378936767578125
    4. '0' → logprob: -10.753936767578125
    5. ' ][' → logprob: -11.753936767578125
    6. ']
' → logprob: -11.878936767578125
    7. '#' → logprob: -12.753936767578125
    8. '=' → logprob: -13.503936767578125
    9. '
' → logprob: -13.753936767578125
    10. ']][' → logprob: -13.753936767578125

Token 1162: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000946472748182714
    2. '1' → logprob: -7.000946521759033
    3. '
' → logprob: -10.375946044921875
    4. '-' → logprob: -14.563446044921875
    5. '

' → logprob: -14.938446044921875
    6. '[' → logprob: -15.063446044921875
    7. '```' → logprob: -15.250946044921875
    8. '
' → logprob: -15.625946044921875
    9. '][' → logprob: -15.750946044921875
    10. '2' → logprob: -15.813446044921875

Token 1163: ']
' (ID: 1592)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2877923548221588
    2. ')' → logprob: -1.9127923250198364
    3. ']' → logprob: -2.912792444229126
    4. '<|end|>' → logprob: -3.287792444229126
    5. 'max' → logprob: -5.287792205810547
    6. ')
' → logprob: -6.412792205810547
    7. '<|end|>' → logprob: -7.787792205810547
    8. ']
' → logprob: -7.912792205810547
    9. ',max' → logprob: -8.037792205810547
    10. 'import' → logprob: -8.037792205810547

Token 1164: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.021287528797984123
    2. 'ma' → logprob: -4.271287441253662
    3. 'i' → logprob: -6.771287441253662
    4. 'ai' → logprob: -6.771287441253662
    5. 'mi' → logprob: -6.896287441253662
    6. 'idx' → logprob: -7.396287441253662
    7. 'mb' → logprob: -7.646287441253662
    8. ' for' → logprob: -7.771287441253662
    9. 'b' → logprob: -8.14628791809082
    10. 'm' → logprob: -8.14628791809082

Token 1165: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007673407671973109
    2. ' i' → logprob: -7.250767230987549
    3. 'k' → logprob: -10.750767707824707
    4. 'x' → logprob: -11.125767707824707
    5. 'j' → logprob: -12.375767707824707
    6. '	i' → logprob: -12.750767707824707
    7. '_i' → logprob: -12.875767707824707
    8. 'ai' → logprob: -12.875767707824707
    9. 'a' → logprob: -13.000767707824707
    10. '   ' → logprob: -13.875767707824707

Token 1166: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14656230807304382
    2. 'in' → logprob: -2.021562337875366
    3. ',' → logprob: -5.896562099456787
    4. '1' → logprob: -8.396562576293945
    5. ' ,' → logprob: -8.521562576293945
    6. ' ' → logprob: -8.646562576293945
    7. ',j' → logprob: -9.521562576293945
    8. '   ' → logprob: -9.646562576293945
    9. 'a' → logprob: -9.771562576293945
    10. ' i' → logprob: -9.896562576293945

Token 1167: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0032805022783577442
    2. ' range' → logprob: -5.7532806396484375
    3. 'a' → logprob: -9.253280639648438
    4. 'b' → logprob: -12.128280639648438
    5. 'in' → logprob: -15.253280639648438
    6. ' a' → logprob: -15.503280639648438
    7. 'ran' → logprob: -15.628280639648438
    8. ' b' → logprob: -15.628280639648438
    9. ' ' → logprob: -15.753280639648438
    10. 'ra' → logprob: -15.878280639648438

Token 1168: '(' (ID: 7)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.03378700464963913
    2. '(' → logprob: -3.4087870121002197
    3. '1' → logprob: -9.53378677368164
    4. 'len' → logprob: -10.40878677368164
    5. '(
' → logprob: -11.40878677368164
    6. '(m' → logprob: -11.53378677368164
    7. '(a' → logprob: -11.90878677368164
    8. '(ma' → logprob: -12.78378677368164
    9. '((' → logprob: -12.90878677368164
    10. '(le' → logprob: -13.90878677368164

Token 1169: '1' (ID: 16)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.05629982799291611
    2. '1' → logprob: -2.931299924850464
    3. 'range' → logprob: -6.681299686431885
    4. '(len' → logprob: -9.056300163269043
    5. 'a' → logprob: -11.181300163269043
    6. 'min' → logprob: -11.931300163269043
    7. '(' → logprob: -12.056300163269043
    8. ' len' → logprob: -12.431300163269043
    9. 'm' → logprob: -12.931300163269043
    10. '100' → logprob: -13.306300163269043

Token 1170: ',len' (ID: 73338)
  Prédit: ',len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',len' → logprob: -0.15041638910770416
    2. ',' → logprob: -2.150416374206543
    3. '(len' → logprob: -4.025416374206543
    4. 'len' → logprob: -5.275416374206543
    5. '(' → logprob: -9.525416374206543
    6. ' ,' → logprob: -9.775416374206543
    7. '1' → logprob: -10.400416374206543
    8. ',i' → logprob: -10.525416374206543
    9. ',m' → logprob: -11.650416374206543
    10. ',b' → logprob: -11.775416374206543

Token 1171: '(b' (ID: 3229)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00803101621568203
    2. 'a' → logprob: -4.883030891418457
    3. '(b' → logprob: -7.883030891418457
    4. 'b' → logprob: -10.008030891418457
    5. '(ma' → logprob: -13.633030891418457
    6. '[a' → logprob: -14.633030891418457
    7. '_a' → logprob: -15.633030891418457
    8. 'ma' → logprob: -15.758030891418457
    9. '	a' → logprob: -16.008031845092773
    10. ')a' → logprob: -16.008031845092773

Token 1172: ')):
' (ID: 22530)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.7592459917068481
    2. ')' → logprob: -1.1342459917068481
    3. ')][' → logprob: -2.3842458724975586
    4. ')):
' → logprob: -3.2592458724975586
    5. '[i' → logprob: -3.3842458724975586
    6. ']):' → logprob: -4.509245872497559
    7. ')])' → logprob: -4.634245872497559
    8. ')):' → logprob: -4.759245872497559
    9. ']):
' → logprob: -5.634245872497559
    10. '):
' → logprob: -5.759245872497559

Token 1173: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022657830268144608
    2. 'b' → logprob: -4.522657871246338
    3. ' if' → logprob: -5.147657871246338
    4. 'if' → logprob: -5.397657871246338
    5. '	if' → logprob: -7.147657871246338
    6. ' b' → logprob: -8.52265739440918
    7. '```' → logprob: -9.14765739440918
    8. '	b' → logprob: -9.77265739440918
    9. '   ' → logprob: -10.89765739440918
    10. ' ' → logprob: -10.89765739440918

Token 1174: ' if' (ID: 538)
  Prédit: 'ma'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ma' → logprob: -0.10740873962640762
    2. 'b' → logprob: -2.6074087619781494
    3. 'if' (adapté à ' if') → logprob: -3.6074087619781494
    4. '   ' → logprob: -7.48240852355957
    5. ' ma' → logprob: -7.98240852355957
    6. ' if' → logprob: -9.85740852355957
    7. 'a' → logprob: -11.35740852355957
    8. ' b' → logprob: -11.48240852355957
    9. ' ' → logprob: -12.10740852355957
    10. '_ma' → logprob: -13.48240852355957

Token 1175: ' ma' (ID: 831)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.008355467580258846
    2. ' b' → logprob: -5.133355617523193
    3. 'ma' → logprob: -6.258355617523193
    4. '   ' → logprob: -8.383355140686035
    5. 'a' → logprob: -8.633355140686035
    6. ' ma' → logprob: -9.383355140686035
    7. '	b' → logprob: -11.758355140686035
    8. ' a' → logprob: -12.383355140686035
    9. ' ' → logprob: -12.633355140686035
    10. '  ' → logprob: -13.383355140686035

Token 1176: ' >' (ID: 1424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.33326366543769836
    2. '>=' → logprob: -2.083263635635376
    3. ' <' → logprob: -2.208263635635376
    4. ' >=' → logprob: -4.208263874053955
    5. '>' → logprob: -4.708263874053955
    6. '=' → logprob: -4.708263874053955
    7. 'max' → logprob: -5.708263874053955
    8. ' =' → logprob: -5.833263874053955
    9. '<int' → logprob: -6.708263874053955
    10. '[' → logprob: -6.958263874053955

Token 1177: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0001366744691040367
    2. ' b' → logprob: -9.500136375427246
    3. '   ' → logprob: -10.500136375427246
    4. '-' → logprob: -10.875136375427246
    5. '-b' → logprob: -11.625136375427246
    6. ' -' → logprob: -12.625136375427246
    7. 'ma' → logprob: -13.875136375427246
    8. '-ma' → logprob: -14.125136375427246
    9. '	b' → logprob: -14.375136375427246
    10. '  ' → logprob: -15.250136375427246

Token 1178: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1994775377388578e-05
    2. 'i' → logprob: -11.750012397766113
    3. '```' → logprob: -13.125012397766113
    4. '
' → logprob: -13.375012397766113
    5. '[' → logprob: -15.625012397766113
    6. ' [' → logprob: -16.750011444091797
    7. '``' → logprob: -16.750011444091797
    8. '[
' → logprob: -16.750011444091797
    9. '`' → logprob: -16.750011444091797
    10. '[j' → logprob: -17.125011444091797

Token 1179: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.008356059901416302
    2. '[' → logprob: -5.008356094360352
    3. '-' → logprob: -6.633356094360352
    4. '0' → logprob: -8.633356094360352
    5. ' ][' → logprob: -9.383356094360352
    6. ']' → logprob: -11.133356094360352
    7. '   ' → logprob: -11.258356094360352
    8. ' ' → logprob: -11.883356094360352
    9. ' -' → logprob: -12.258356094360352
    10. '
' → logprob: -12.383356094360352

Token 1180: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.200166469876422e-06
    2. '1' → logprob: -12.625004768371582
    3. '[' → logprob: -14.375004768371582
    4. 'i' → logprob: -14.625004768371582
    5. ' ' → logprob: -15.500004768371582
    6. '۰' → logprob: -15.875004768371582
    7. '   ' → logprob: -16.5000057220459
    8. '
' → logprob: -16.5000057220459
    9. '```' → logprob: -16.6875057220459
    10. '<|end|>' → logprob: -17.4375057220459

Token 1181: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9168026447296143
    2. '):
' → logprob: -0.9168026447296143
    3. ':
' → logprob: -2.2918026447296143
    4. '   ' → logprob: -3.4168026447296143
    5. '):' → logprob: -3.5418026447296143
    6. ',' → logprob: -5.041802406311035
    7. '[i' → logprob: -5.166802406311035
    8. ']):
' → logprob: -5.291802406311035
    9. ']:
' → logprob: -5.791802406311035
    10. '       ' → logprob: -5.791802406311035

Token 1182: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.54059898853302
    2. '       ' → logprob: -1.66559898853302
    3. 'ma' → logprob: -2.0405988693237305
    4. 'b' → logprob: -3.2905988693237305
    5. ' ma' → logprob: -3.4155988693237305
    6. '_ma' → logprob: -4.9155988693237305
    7. ' =' → logprob: -5.4155988693237305
    8. 'a' → logprob: -5.7905988693237305
    9. 'i' → logprob: -6.0405988693237305
    10. ':' → logprob: -6.0405988693237305

Token 1183: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.6054036617279053
    2. '       ' → logprob: -1.3554036617279053
    3. '   ' → logprob: -1.8554036617279053
    4. 'ma' → logprob: -3.2304036617279053
    5. ' b' → logprob: -8.855403900146484
    6. ' ma' → logprob: -9.480403900146484
    7. 'break' → logprob: -10.230403900146484
    8. '	b' → logprob: -10.605403900146484
    9. '    ' → logprob: -10.730403900146484
    10. '      ' → logprob: -10.980403900146484

Token 1184: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.822646693966817e-06
    2. 'i' → logprob: -12.375007629394531
    3. '[' → logprob: -14.000007629394531
    4. '[
' → logprob: -14.000007629394531
    5. '```' → logprob: -14.125007629394531
    6. '
' → logprob: -14.250007629394531
    7. '=i' → logprob: -16.87500762939453
    8. '(i' → logprob: -17.25000762939453
    9. '    
' → logprob: -17.50000762939453
    10. '[m' → logprob: -17.50000762939453

Token 1185: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2261267602443695
    2. '[' → logprob: -1.601126790046692
    3. ']' → logprob: -8.226126670837402
    4. '[i' → logprob: -8.851126670837402
    5. '0' → logprob: -9.601126670837402
    6. 'i' → logprob: -10.226126670837402
    7. ' ][' → logprob: -10.226126670837402
    8. '```' → logprob: -10.601126670837402
    9. '>[' → logprob: -10.851126670837402
    10. '
' → logprob: -11.226126670837402

Token 1186: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.0100624169572257e-05
    2. 'i' → logprob: -11.625020027160645
    3. '1' → logprob: -12.250020027160645
    4. '[' → logprob: -12.875020027160645
    5. '۰' → logprob: -14.187520027160645
    6. '
' → logprob: -14.250020027160645
    7. '```' → logprob: -14.687520027160645
    8. '   ' → logprob: -15.312520027160645
    9. '<|end|>' → logprob: -15.437520027160645
    10. ']' → logprob: -15.875020027160645

Token 1187: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019470835104584694
    2. ' =' → logprob: -6.251946926116943
    3. ']=' → logprob: -11.376947402954102
    4. '=b' → logprob: -12.751947402954102
    5. ']' → logprob: -13.376947402954102
    6. '=
' → logprob: -14.001947402954102
    7. '=a' → logprob: -14.251947402954102
    8. ')=' → logprob: -15.376947402954102
    9. '=i' → logprob: -15.626947402954102
    10. '=max' → logprob: -15.626947402954102

Token 1188: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003178306156769395
    2. ' =' → logprob: -5.753178119659424
    3. '=b' → logprob: -15.253178596496582
    4. '=
' → logprob: -15.503178596496582
    5. '=a' → logprob: -15.878178596496582
    6. 'ma' → logprob: -16.753177642822266
    7. '=max' → logprob: -17.503177642822266
    8. '=

' → logprob: -18.503177642822266
    9. '=m' → logprob: -18.878177642822266
    10. ',' → logprob: -19.128177642822266

Token 1189: ' ma' (ID: 831)
  Prédit: 'ma'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ma' → logprob: -1.5690089639974758e-05
    2. 'b' → logprob: -11.250015258789062
    3. ' ma' → logprob: -13.000015258789062
    4. '(ma' → logprob: -16.000015258789062
    5. '   ' → logprob: -16.375015258789062
    6. 'max' → logprob: -16.750015258789062
    7. '_ma' → logprob: -17.125015258789062
    8. '-ma' → logprob: -18.000015258789062
    9. 'm' → logprob: -18.250015258789062
    10. 'Ma' → logprob: -19.000015258789062

Token 1190: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10781563073396683
    2. 'else' → logprob: -3.107815742492676
    3. '<|end|>' → logprob: -3.982815742492676
    4. '       ' → logprob: -3.982815742492676
    5. 'ma' → logprob: -4.357815742492676
    6. ' else' → logprob: -6.607815742492676
    7. '<|end|>' → logprob: -6.732815742492676
    8. '=' → logprob: -7.232815742492676
    9. '
' → logprob: -7.232815742492676
    10. 'a' → logprob: -7.357815742492676

Token 1191: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1192: ' else' (ID: 1203)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11316493153572083
    2. 'else' (adapté à ' else') → logprob: -3.1131649017333984
    3. 'ma' → logprob: -3.2381649017333984
    4. '>' → logprob: -4.863164901733398
    5. '   ' → logprob: -5.363164901733398
    6. 'max' → logprob: -5.363164901733398
    7. ' else' → logprob: -6.863164901733398
    8. ' ma' → logprob: -7.363164901733398
    9. '=max' → logprob: -7.363164901733398
    10. '[' → logprob: -7.738164901733398

Token 1193: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0288323163986206
    2. ':' → logprob: -1.1538323163986206
    3. ' ma' → logprob: -2.02883243560791
    4. 'ma' → logprob: -2.27883243560791
    5. '   ' → logprob: -3.02883243560791
    6. '=' → logprob: -3.27883243560791
    7. ' =' → logprob: -5.52883243560791
    8. ':
' → logprob: -6.65383243560791
    9. ' if' → logprob: -7.40383243560791
    10. '(ma' → logprob: -8.52883243560791

Token 1194: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16174502670764923
    2. 'ma' → logprob: -1.9117450714111328
    3. ' ma' → logprob: -6.661745071411133
    4. '   ' → logprob: -8.661745071411133
    5. '      ' → logprob: -11.036745071411133
    6. '    ' → logprob: -11.286745071411133
    7. '     ' → logprob: -11.661745071411133
    8. 'b' → logprob: -12.036745071411133
    9. '_ma' → logprob: -12.161745071411133
    10. 'm' → logprob: -13.036745071411133

Token 1195: ' ma' (ID: 831)
  Prédit: 'ma'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ma' (adapté à ' ma') → logprob: -0.0001684981834841892
    2. 'b' → logprob: -8.750168800354004
    3. ' ma' → logprob: -11.750168800354004
    4. '       ' → logprob: -13.500168800354004
    5. '   ' → logprob: -14.125168800354004
    6. '_ma' → logprob: -18.000167846679688
    7. 'Ma' → logprob: -18.625167846679688
    8. '(ma' → logprob: -19.375167846679688
    9. 'mi' → logprob: -19.500167846679688
    10. 'm' → logprob: -19.750167846679688

Token 1196: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693597376346588
    2. ' =' → logprob: -2.1269359588623047
    3. '=b' → logprob: -11.751935958862305
    4. '=max' → logprob: -17.126935958862305
    5. 'b' → logprob: -17.251935958862305
    6. ' ' → logprob: -18.501935958862305
    7. ' b' → logprob: -19.376935958862305
    8. '=
' → logprob: -19.501935958862305
    9. '>' → logprob: -19.751935958862305
    10. ')' → logprob: -20.251935958862305

Token 1197: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004078401252627373
    2. ' b' → logprob: -5.504078388214111
    3. '	b' → logprob: -18.754077911376953
    4. 'max' → logprob: -20.629077911376953
    5. '   ' → logprob: -20.879077911376953
    6. '>b' → logprob: -23.004077911376953
    7. ' ' → logprob: -23.129077911376953
    8. ')b' → logprob: -23.629077911376953
    9. '    ' → logprob: -23.754077911376953
    10. '$b' → logprob: -24.004077911376953

Token 1198: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.981667537620524e-06
    2. '[' → logprob: -13.250001907348633
    3. '[
' → logprob: -16.750001907348633
    4. 'i' → logprob: -17.375001907348633
    5. '
' → logprob: -18.000001907348633
    6. '(i' → logprob: -18.750001907348633
    7. '[max' → logprob: -19.250001907348633
    8. '0' → logprob: -19.625001907348633
    9. '   ' → logprob: -20.125001907348633
    10. '{i' → logprob: -20.375001907348633

Token 1199: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.20463426411151886
    2. '][' → logprob: -1.7046343088150024
    3. '[' → logprob: -5.954634189605713
    4. 'i' → logprob: -8.204634666442871
    5. ']' → logprob: -9.079634666442871
    6. '   ' → logprob: -9.829634666442871
    7. '(i' → logprob: -9.954634666442871
    8. ',i' → logprob: -10.579634666442871
    9. '0' → logprob: -11.204634666442871
    10. '[
' → logprob: -11.454634666442871

Token 1200: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.35105037689208984
    2. '[i' → logprob: -1.2260503768920898
    3. '0' → logprob: -5.97605037689209
    4. ' i' → logprob: -10.97605037689209
    5. '(i' → logprob: -11.35105037689209
    6. '{i' → logprob: -11.35105037689209
    7. '	i' → logprob: -11.97605037689209
    8. 'b' → logprob: -12.47605037689209
    9. '[' → logprob: -12.60105037689209
    10. '_i' → logprob: -13.47605037689209

Token 1201: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.286124587059021
    2. '<|end|>' → logprob: -1.411124587059021
    3. ']' → logprob: -6.4111247062683105
    4. '<|end|>' → logprob: -6.5361247062683105
    5. '[i' → logprob: -6.9111247062683105
    6. '   ' → logprob: -8.161124229431152
    7. '+' → logprob: -9.286124229431152
    8. '}' → logprob: -9.411124229431152
    9. ')
' → logprob: -9.536124229431152
    10. '
' → logprob: -9.536124229431152

Token 1202: 'ans' (ID: 616)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1203: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5920780897140503
    2. '=' → logprob: -0.8420780897140503
    3. ' +=' → logprob: -4.21707820892334
    4. '[' → logprob: -7.21707820892334
    5. '+=' → logprob: -7.71707820892334
    6. ' ' → logprob: -10.46707820892334
    7. ',' → logprob: -11.59207820892334
    8. '   ' → logprob: -11.71707820892334
    9. '_' → logprob: -11.84207820892334
    10. ' =[' → logprob: -11.96707820892334

Token 1204: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009879328310489655
    2. ' ' → logprob: -4.634879112243652
    3. 'max' → logprob: -9.634879112243652
    4. ' max' → logprob: -10.384879112243652
    5. 'float' → logprob: -11.884879112243652
    6. ' -' → logprob: -12.134879112243652
    7. '-' → logprob: -12.634879112243652
    8. '   ' → logprob: -12.634879112243652
    9. ' float' → logprob: -13.259879112243652
    10. 'b' → logprob: -13.509879112243652

Token 1205: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001105762057704851
    2. ' ' → logprob: -9.500110626220703
    3. 'float' → logprob: -10.625110626220703
    4. 'max' → logprob: -12.250110626220703
    5. '-' → logprob: -12.625110626220703
    6. 'b' → logprob: -13.875110626220703
    7. 'a' → logprob: -14.375110626220703
    8. 'int' → logprob: -14.375110626220703
    9. '   ' → logprob: -15.625110626220703
    10. '1' → logprob: -15.875110626220703

Token 1206: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005274149589240551
    2. ' for' → logprob: -7.625527381896973
    3. '
' → logprob: -10.375527381896973
    4. '```' → logprob: -12.375527381896973
    5. 'i' → logprob: -12.500527381896973
    6. '``' → logprob: -16.25052833557129
    7. '	for' → logprob: -16.87552833557129
    8. ' 
' → logprob: -16.87552833557129
    9. ',' → logprob: -17.00052833557129
    10. '`' → logprob: -17.00052833557129

Token 1207: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00044437398901209235
    2. 'i' → logprob: -7.750444412231445
    3. ' for' → logprob: -11.500444412231445
    4. '
' → logprob: -13.000444412231445
    5. '```' → logprob: -15.125444412231445
    6. 'from' → logprob: -15.375444412231445
    7. 'b' → logprob: -15.750444412231445
    8. 'fo' → logprob: -16.000444412231445
    9. 'import' → logprob: -16.125444412231445
    10. 'j' → logprob: -16.375444412231445

Token 1208: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38890740275382996
    2. ' =' → logprob: -1.1389074325561523
    3. ',' → logprob: -6.263907432556152
    4. '=i' → logprob: -10.638907432556152
    5. 'i' → logprob: -11.138907432556152
    6. '+=' → logprob: -11.513907432556152
    7. ' +=' → logprob: -11.638907432556152
    8. 'n' → logprob: -11.638907432556152
    9. ',i' → logprob: -11.763907432556152
    10. ' ' → logprob: -11.763907432556152

Token 1209: ' len' (ID: 4631)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001509150955826044
    2. 'len' → logprob: -6.501509189605713
    3. ' ' → logprob: -12.626508712768555
    4. '<|end|>' → logprob: -13.626508712768555
    5. '(len' → logprob: -14.126508712768555
    6. '[len' → logprob: -14.751508712768555
    7. '<len' → logprob: -15.001508712768555
    8. '1' → logprob: -15.626508712768555
    9. ' len' → logprob: -15.876508712768555
    10. '=len' → logprob: -15.876508712768555

Token 1210: '(b' (ID: 3229)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0238001998513937
    2. 'a' → logprob: -3.7738001346588135
    3. '(b' → logprob: -7.648800373077393
    4. 'b' → logprob: -9.773799896240234
    5. '(
' → logprob: -11.023799896240234
    6. '(' → logprob: -12.898799896240234
    7. '(i' → logprob: -13.523799896240234
    8. 'A' → logprob: -15.148799896240234
    9. '1' → logprob: -15.773799896240234
    10. ')a' → logprob: -15.773799896240234

Token 1211: ')-' (ID: 14080)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00032926726271398365
    2. ' -' → logprob: -8.37532901763916
    3. ')-' → logprob: -9.87532901763916
    4. ')' → logprob: -10.37532901763916
    5. '-i' → logprob: -12.37532901763916
    6. '[i' → logprob: -12.50032901763916
    7. '```' → logprob: -13.37532901763916
    8. '-
' → logprob: -14.12532901763916
    9. ')-(' → logprob: -14.37532901763916
    10. '[' → logprob: -14.50032901763916

Token 1212: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. '2' → logprob: -14.125001907348633
    3. ' ' → logprob: -14.750001907348633
    4. '0' → logprob: -15.250001907348633
    5. '-' → logprob: -16.625001907348633
    6. '
' → logprob: -18.625001907348633
    7. '```' → logprob: -18.625001907348633
    8. '   ' → logprob: -19.187501907348633
    9. '１' → logprob: -19.687501907348633
    10. '3' → logprob: -20.125001907348633

Token 1213: '
' (ID: 198)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.580420970916748
    2. 'for' → logprob: -1.955420970916748
    3. '=' → logprob: -2.080420970916748
    4. 'j' → logprob: -2.330420970916748
    5. ' for' → logprob: -2.330420970916748
    6. 'while' → logprob: -3.080420970916748
    7. ',' → logprob: -3.205420970916748
    8. ',j' → logprob: -3.205420970916748
    9. '<|end|>' → logprob: -3.330420970916748
    10. '-' → logprob: -3.455420970916748

Token 1214: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3406398296356201
    2. ' for' → logprob: -2.34063982963562
    3. 'while' → logprob: -2.71563982963562
    4. 'j' → logprob: -2.84063982963562
    5. '
' → logprob: -3.34063982963562
    6. '0' → logprob: -4.715640068054199
    7. '<|end|>' → logprob: -4.965640068054199
    8. ' while' → logprob: -5.465640068054199
    9. '```' → logprob: -5.590640068054199
    10. ' j' → logprob: -5.715640068054199

Token 1215: ' v' (ID: 323)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004617391619831324
    2. 'j' → logprob: -6.129617214202881
    3. ' ' → logprob: -6.629617214202881
    4. 'i' → logprob: -7.004617214202881
    5. ' j' → logprob: -9.379617691040039
    6. 'x' → logprob: -9.504617691040039
    7. 'a' → logprob: -11.254617691040039
    8. '_' → logprob: -11.754617691040039
    9. ' i' → logprob: -11.879617691040039
    10. '   ' → logprob: -12.754617691040039

Token 1216: ',w' (ID: 49598)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.1239783763885498
    2. ',' → logprob: -1.2489783763885498
    3. 'a' → logprob: -1.9989783763885498
    4. 'in' → logprob: -2.12397837638855
    5. ',j' → logprob: -3.62397837638855
    6. '=' → logprob: -3.62397837638855
    7. ' =' → logprob: -4.123978614807129
    8. ',v' → logprob: -4.373978614807129
    9. ',a' → logprob: -4.373978614807129
    10. ' ,' → logprob: -4.748978614807129

Token 1217: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2257409244775772
    2. 'in' → logprob: -1.975740909576416
    3. ',' → logprob: -2.850740909576416
    4. ',i' → logprob: -6.350740909576416
    5. ',v' → logprob: -7.225740909576416
    6. ')' → logprob: -7.475740909576416
    7. ' ,' → logprob: -7.600740909576416
    8. ' i' → logprob: -8.100741386413574
    9. ',in' → logprob: -8.225741386413574
    10. '=' → logprob: -8.225741386413574

Token 1218: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.306760805164231e-05
    2. ' a' → logprob: -11.25001335144043
    3. '	a' → logprob: -17.37501335144043
    4. '   ' → logprob: -18.25001335144043
    5. ')a' → logprob: -19.50001335144043
    6. '[a' → logprob: -19.62501335144043
    7. 'range' → logprob: -19.75001335144043
    8. '(a' → logprob: -20.37501335144043
    9. 'enumer' → logprob: -20.50001335144043
    10. '#a' → logprob: -21.00001335144043

Token 1219: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7263814806938171
    2. ':' → logprob: -1.226381540298462
    3. ' in' → logprob: -1.976381540298462
    4. ',' → logprob: -3.101381540298462
    5. 'in' → logprob: -4.351381301879883
    6. '   ' → logprob: -4.351381301879883
    7. '[::-' → logprob: -4.851381301879883
    8. '[' → logprob: -6.601381301879883
    9. '[i' → logprob: -6.726381301879883
    10. '):
' → logprob: -7.101381301879883

Token 1220: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39788106083869934
    2. ' if' → logprob: -1.397881031036377
    3. ' ' → logprob: -2.897881031036377
    4. '<|end|>' → logprob: -5.272881031036377
    5. '  ' → logprob: -5.647881031036377
    6. ' while' → logprob: -5.772881031036377
    7. ' >' → logprob: -5.897881031036377
    8. '	if' → logprob: -6.147881031036377
    9. '    ' → logprob: -6.772881031036377
    10. ':' → logprob: -6.772881031036377

Token 1221: ' rem' (ID: 1662)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4680933356285095
    2. ' while' → logprob: -1.4680933952331543
    3. '   ' → logprob: -2.7180933952331543
    4. 'if' → logprob: -2.8430933952331543
    5. ' if' → logprob: -3.9680933952331543
    6. '       ' → logprob: -9.343092918395996
    7. '	while' → logprob: -9.343092918395996
    8. '    ' → logprob: -10.218092918395996
    9. ' ' → logprob: -10.593092918395996
    10. 'import' → logprob: -11.218092918395996

Token 1222: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03043041191995144
    2. '=' → logprob: -3.530430316925049
    3. 'ain' → logprob: -8.155430793762207
    4. '   ' → logprob: -8.405430793762207
    5. '=w' → logprob: -9.780430793762207
    6. ' ' → logprob: -10.155430793762207
    7. '=W' → logprob: -10.155430793762207
    8. '  ' → logprob: -11.030430793762207
    9. 'ains' → logprob: -11.905430793762207
    10. 'aining' → logprob: -12.655430793762207

Token 1223: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -4.620622712536715e-05
    2. ' W' → logprob: -10.625045776367188
    3. '   ' → logprob: -10.750045776367188
    4. '	W' → logprob: -15.750045776367188
    5. '       ' → logprob: -16.000045776367188
    6. '  ' → logprob: -16.375045776367188
    7. ' ' → logprob: -16.750045776367188
    8. '    ' → logprob: -17.125045776367188
    9. '0' → logprob: -17.625045776367188
    10. '     ' → logprob: -18.125045776367188

Token 1224: '-w' (ID: 4450)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4568752348423004
    2. '-' → logprob: -1.206875205039978
    3. '   ' → logprob: -3.0818753242492676
    4. '-w' → logprob: -4.581875324249268
    5. '+' → logprob: -4.956875324249268
    6. '    ' → logprob: -7.081875324249268
    7. ' ' → logprob: -7.331875324249268
    8. '  ' → logprob: -7.706875324249268
    9. ',' → logprob: -8.08187484741211
    10. '	' → logprob: -8.33187484741211

Token 1225: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25653597712516785
    2. ' while' → logprob: -2.1315360069274902
    3. 'while' → logprob: -3.0065360069274902
    4. ' 
' → logprob: -3.7565360069274902
    5. '<|end|>' → logprob: -4.00653600692749
    6. '   ' → logprob: -5.50653600692749
    7. '	while' → logprob: -5.63153600692749
    8. '  
' → logprob: -5.88153600692749
    9. '   
' → logprob: -6.25653600692749
    10. '    
' → logprob: -6.38153600692749

Token 1226: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6368058323860168
    2. ' ' → logprob: -1.136805772781372
    3. '<|end|>' → logprob: -2.511805772781372
    4. ' 
' → logprob: -3.261805772781372
    5. '	if' → logprob: -4.511806011199951
    6. '   ' → logprob: -4.511806011199951
    7. ' while' → logprob: -6.136806011199951
    8. '
' → logprob: -6.886806011199951
    9. '	while' → logprob: -7.261806011199951
    10. ')' → logprob: -7.261806011199951

Token 1227: ' while' (ID: 2049)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09156951308250427
    2. 'while' (adapté à ' while') → logprob: -3.091569423675537
    3. 'import' → logprob: -3.341569423675537
    4. 'idx' → logprob: -6.091569423675537
    5. ' if' → logprob: -6.591569423675537
    6. 'j' → logprob: -6.966569423675537
    7. '0' → logprob: -7.716569423675537
    8. 'l' → logprob: -7.716569423675537
    9. 'pos' → logprob: -7.841569423675537
    10. 'ind' → logprob: -8.216569900512695

Token 1228: ' b' (ID: 287)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.5491004129871726e-05
    2. ' i' → logprob: -10.500045776367188
    3. 'rem' → logprob: -11.250045776367188
    4. '(i' → logprob: -12.875045776367188
    5. '0' → logprob: -13.625045776367188
    6. '   ' → logprob: -14.375045776367188
    7. 'v' → logprob: -15.875045776367188
    8. '  ' → logprob: -16.125045776367188
    9. 'w' → logprob: -16.375045776367188
    10. '	i' → logprob: -16.375045776367188

Token 1229: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.008477585390210152
    2. 'i' → logprob: -4.883477687835693
    3. '[' → logprob: -7.633477687835693
    4. '[
' → logprob: -9.383477210998535
    5. ' i' → logprob: -9.758477210998535
    6. 'and' → logprob: -9.758477210998535
    7. '#' → logprob: -10.133477210998535
    8. ' and' → logprob: -10.508477210998535
    9. '
' → logprob: -10.883477210998535
    10. ',i' → logprob: -11.133477210998535

Token 1230: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.35505494475364685
    2. '][' → logprob: -1.2300549745559692
    3. 'and' → logprob: -5.85505485534668
    4. ' and' → logprob: -6.35505485534668
    5. ']' → logprob: -7.10505485534668
    6. '!=' → logprob: -8.48005485534668
    7. '>' → logprob: -8.85505485534668
    8. ' ][' → logprob: -8.85505485534668
    9. 'w' → logprob: -9.35505485534668
    10. '#' → logprob: -9.48005485534668

Token 1231: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.166338137816638e-05
    2. '[' → logprob: -11.125031471252441
    3. '][' → logprob: -11.375031471252441
    4. '
' → logprob: -13.125031471252441
    5. ']' → logprob: -13.375031471252441
    6. '```' → logprob: -14.875031471252441
    7. '0' → logprob: -15.375031471252441
    8. '#' → logprob: -15.750031471252441
    9. ')[' → logprob: -16.062532424926758
    10. ' ' → logprob: -16.125032424926758

Token 1232: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0021914218086749315
    2. ' >' → logprob: -6.127191543579102
    3. '>
' → logprob: -12.877191543579102
    4. '>b' → logprob: -13.877191543579102
    5. '>w' → logprob: -13.877191543579102
    6. '
' → logprob: -15.252191543579102
    7. '">' → logprob: -15.502191543579102
    8. '<=' → logprob: -15.877191543579102
    9. '>end' → logprob: -16.0021915435791
    10. '>x' → logprob: -16.1271915435791

Token 1233: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -8.97155623533763e-05
    2. ' >' → logprob: -9.500089645385742
    3. '>
' → logprob: -11.500089645385742
    4. '>#' → logprob: -13.625089645385742
    5. '>w' → logprob: -13.750089645385742
    6. '">' → logprob: -15.125089645385742
    7. '＞' → logprob: -15.250089645385742
    8. '>b' → logprob: -15.500089645385742
    9. '>`' → logprob: -15.625089645385742
    10. '()>' → logprob: -15.750089645385742

Token 1234: ' rem' (ID: 1662)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -6.2729995988775045e-06
    2. ' rem' → logprob: -12.000006675720215
    3. '(rem' → logprob: -17.1250057220459
    4. 'reman' → logprob: -17.3750057220459
    5. '0' → logprob: -17.6250057220459
    6. '
' → logprob: -18.1250057220459
    7. '   ' → logprob: -20.3750057220459
    8. 'ram' → logprob: -20.5000057220459
    9. 'r' → logprob: -20.6250057220459
    10. 'remaining' → logprob: -20.7500057220459

Token 1235: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1628451943397522
    2. ':' → logprob: -2.9128451347351074
    3. '   ' → logprob: -2.9128451347351074
    4. 'and' → logprob: -3.6628451347351074
    5. ':
' → logprob: -4.912845134735107
    6. ' i' → logprob: -5.787845134735107
    7. 'i' → logprob: -6.912845134735107
    8. ':i' → logprob: -7.037845134735107
    9. '<|end|>' → logprob: -7.412845134735107
    10. ' or' → logprob: -7.787845134735107

Token 1236: '       ' (ID: 309)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03176144137978554
    2. ' i' → logprob: -3.656761407852173
    3. '   ' → logprob: -5.906761646270752
    4. '	i' → logprob: -6.031761646270752
    5. '       ' → logprob: -8.656761169433594
    6. '```' → logprob: -9.281761169433594
    7. ',i' → logprob: -10.781761169433594
    8. '``' → logprob: -11.531761169433594
    9. '[i' → logprob: -12.281761169433594
    10. '\' → logprob: -12.281761169433594

Token 1237: ' if' (ID: 538)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.088346359931165e-07
    2. ' i' → logprob: -14.750000953674316
    3. '   ' → logprob: -15.375000953674316
    4. '	i' → logprob: -15.500000953674316
    5. '```' → logprob: -16.75
    6. '``' → logprob: -19.125
    7. '
' → logprob: -19.875
    8. '_i' → logprob: -20.25
    9. '[i' → logprob: -20.375
    10. '       ' → logprob: -21.125

Token 1238: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -8.745069499127567e-05
    2. ' i' → logprob: -9.62508773803711
    3. '   ' → logprob: -10.87508773803711
    4. '  ' → logprob: -13.12508773803711
    5. '	i' → logprob: -15.37508773803711
    6. ' ' → logprob: -15.75008773803711
    7. '0' → logprob: -15.87508773803711
    8. '
' → logprob: -17.50008773803711
    9. '       ' → logprob: -17.87508773803711
    10. '    ' → logprob: -19.12508773803711

Token 1239: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.005408661440014839
    2. ' >' → logprob: -5.380408763885498
    3. '==' → logprob: -7.755408763885498
    4. '-' → logprob: -8.75540828704834
    5. '>=' → logprob: -9.88040828704834
    6. '```' → logprob: -10.25540828704834
    7. '=' → logprob: -10.50540828704834
    8. '!=' → logprob: -11.00540828704834
    9. '>-' → logprob: -11.13040828704834
    10. '0' → logprob: -11.38040828704834

Token 1240: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -18.7500057220459
    4. '1' → logprob: -21.0000057220459
    5. '
' → logprob: -21.2500057220459
    6. '000' → logprob: -21.5000057220459
    7. '00' → logprob: -21.5000057220459
    8. '-' → logprob: -21.7500057220459
    9. '```' → logprob: -22.0000057220459
    10. '۰' → logprob: -22.1250057220459

Token 1241: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -17.625003814697266
    4. '1' → logprob: -18.000003814697266
    5. '```' → logprob: -19.750003814697266
    6. '-' → logprob: -20.000003814697266
    7. '
' → logprob: -20.125003814697266
    8. '00' → logprob: -20.375003814697266
    9. '=' → logprob: -20.500003814697266
    10. '000' → logprob: -20.750003814697266

Token 1242: ':' (ID: 25)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.079410195350647
    2. '-' → logprob: -1.329410195350647
    3. ':' → logprob: -1.329410195350647
    4. '           ' → logprob: -2.3294100761413574
    5. '       ' → logprob: -3.9544100761413574
    6. ' -' → logprob: -5.204410076141357
    7. ' and' → logprob: -5.954410076141357
    8. '0' → logprob: -5.954410076141357
    9. 'i' → logprob: -7.079410076141357
    10. '```' → logprob: -7.329410076141357

Token 1243: 'break' (ID: 15354)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7012274265289307
    2. 'break' → logprob: -0.8262274265289307
    3. 'i' → logprob: -3.7012274265289307
    4. ' break' → logprob: -3.8262274265289307
    5. '       ' → logprob: -4.076227188110352
    6. ' i' → logprob: -6.701227188110352
    7. '	break' → logprob: -7.076227188110352
    8. '   ' → logprob: -7.451227188110352
    9. '		' → logprob: -10.076227188110352
    10. ' ' → logprob: -10.326227188110352

Token 1244: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1776352971792221
    2. ' i' → logprob: -2.8026351928710938
    3. 'i' → logprob: -2.9276351928710938
    4. '	i' → logprob: -3.3026351928710938
    5. '   ' → logprob: -5.302635192871094
    6. '	' → logprob: -5.427635192871094
    7. '           ' → logprob: -7.052635192871094
    8. '
' → logprob: -8.427635192871094
    9. '-' → logprob: -8.802635192871094
    10. '```' → logprob: -8.927635192871094

Token 1245: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006182845216244459
    2. ' i' → logprob: -5.506182670593262
    3. 'i' → logprob: -6.256182670593262
    4. '   ' → logprob: -8.881182670593262
    5. '	i' → logprob: -10.756182670593262
    6. '           ' → logprob: -11.506182670593262
    7. '	' → logprob: -12.756182670593262
    8. '	   ' → logprob: -12.881182670593262
    9. '    ' → logprob: -13.131182670593262
    10. '      ' → logprob: -13.506182670593262

Token 1246: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.00013440960901789367
    2. ' i' → logprob: -9.000134468078613
    3. '   ' → logprob: -11.750134468078613
    4. '	i' → logprob: -12.750134468078613
    5. '       ' → logprob: -16.750133514404297
    6. '--' → logprob: -16.875133514404297
    7. '
' → logprob: -17.000133514404297
    8. ' ' → logprob: -19.000133514404297
    9. '  ' → logprob: -19.375133514404297
    10. '--
' → logprob: -19.500133514404297

Token 1247: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.00600961409509182
    2. '-' → logprob: -5.506009578704834
    3. ' -=' → logprob: -6.256009578704834
    4. '   ' → logprob: -12.256010055541992
    5. '=' → logprob: -12.256010055541992
    6. '+=' → logprob: -14.381010055541992
    7. '	' → logprob: -16.131010055541992
    8. '```' → logprob: -16.631010055541992
    9. ' -' → logprob: -16.881010055541992
    10. '       ' → logprob: -17.381010055541992

Token 1248: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -19.750001907348633
    4. '
' → logprob: -20.875001907348633
    5. '  ' → logprob: -21.250001907348633
    6. '```' → logprob: -21.250001907348633
    7. '-' → logprob: -22.062501907348633
    8. '１' → logprob: -22.125001907348633
    9. '<|end|>' → logprob: -22.187501907348633
    10. '۱' → logprob: -22.437501907348633

Token 1249: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '
' → logprob: -22.5
    4. '<|end|>' → logprob: -22.75
    5. '-' → logprob: -23.0
    6. '   ' → logprob: -23.5
    7. '```' → logprob: -23.5
    8. '１' → logprob: -24.5
    9. '۱' → logprob: -24.625
    10. '' → logprob: -24.75

Token 1250: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00016110755677800626
    2. 'ans' → logprob: -9.125161170959473
    3. '
' → logprob: -10.250161170959473
    4. 'print' → logprob: -11.625161170959473
    5. '    
' → logprob: -13.000161170959473
    6. 'if' → logprob: -13.750161170959473
    7. '```' → logprob: -13.750161170959473
    8. 'import' → logprob: -13.875161170959473
    9. '        
' → logprob: -14.125161170959473
    10. '       ' → logprob: -14.125161170959473

Token 1251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022488650865852833
    2. 'ans' → logprob: -6.502248764038086
    3. ' if' → logprob: -8.127248764038086
    4. 'if' → logprob: -9.127248764038086
    5. ' ans' → logprob: -9.252248764038086
    6. '	ans' → logprob: -9.752248764038086
    7. '
' → logprob: -10.252248764038086
    8. '       ' → logprob: -10.377248764038086
    9. '    
' → logprob: -10.377248764038086
    10. ' i' → logprob: -10.877248764038086

Token 1252: ' if' (ID: 538)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.39338797330856323
    2. '   ' → logprob: -1.768388032913208
    3. 'if' (adapté à ' if') → logprob: -1.893388032913208
    4. ' if' → logprob: -5.768387794494629
    5. ' ans' → logprob: -7.268387794494629
    6. 'import' → logprob: -9.518387794494629
    7. '	ans' → logprob: -9.518387794494629
    8. ' ' → logprob: -10.268387794494629
    9. '```' → logprob: -10.768387794494629
    10. '(ans' → logprob: -11.268387794494629

Token 1253: ' b' (ID: 287)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8770469427108765
    2. 'b' → logprob: -1.1270469427108765
    3. 'w' → logprob: -1.5020469427108765
    4. 'rem' → logprob: -4.002047061920166
    5. 'v' → logprob: -4.252047061920166
    6. 'W' → logprob: -6.127047061920166
    7. '0' → logprob: -6.627047061920166
    8. 'ans' → logprob: -7.252047061920166
    9. ' i' → logprob: -8.627046585083008
    10. '   ' → logprob: -9.502046585083008

Token 1254: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.15036161243915558
    2. 'i' → logprob: -2.0253615379333496
    3. '[' → logprob: -5.02536153793335
    4. '[
' → logprob: -8.025362014770508
    5. ' ' → logprob: -8.400362014770508
    6. '
' → logprob: -9.150362014770508
    7. ' i' → logprob: -9.275362014770508
    8. 'a' → logprob: -9.525362014770508
    9. '   ' → logprob: -9.900362014770508
    10. ')' → logprob: -10.400362014770508

Token 1255: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03912791237235069
    2. '][' → logprob: -3.289127826690674
    3. '!=' → logprob: -7.664127826690674
    4. '==' → logprob: -8.539128303527832
    5. ']' → logprob: -9.789128303527832
    6. ' !=' → logprob: -9.789128303527832
    7. '```' → logprob: -9.914128303527832
    8. '0' → logprob: -10.539128303527832
    9. '   ' → logprob: -10.664128303527832
    10. ']!=' → logprob: -10.789128303527832

Token 1256: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.458980300929397e-05
    2. '[' → logprob: -10.00008487701416
    3. '1' → logprob: -10.50008487701416
    4. ' ' → logprob: -12.75008487701416
    5. '
' → logprob: -13.56258487701416
    6. '#' → logprob: -14.25008487701416
    7. 'None' → logprob: -14.37508487701416
    8. '][' → logprob: -14.50008487701416
    9. '```' → logprob: -14.50008487701416
    10. '   ' → logprob: -14.75008487701416

Token 1257: ']' (ID: 60)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.5656188130378723
    2. '>=' → logprob: -0.9406188130378723
    3. ']>=' → logprob: -4.440618991851807
    4. '[' → logprob: -4.940618991851807
    5. ' <=' → logprob: -5.065618991851807
    6. '<=' → logprob: -5.565618991851807
    7. '==' → logprob: -5.565618991851807
    8. ' ==' → logprob: -5.690618991851807
    9. ']' → logprob: -5.690618991851807
    10. '>' → logprob: -7.690618991851807

Token 1258: ' <=' (ID: 5017)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.12365274131298065
    2. '<=' → logprob: -2.998652696609497
    3. '!=' → logprob: -3.123652696609497
    4. '==' → logprob: -4.123652935028076
    5. ' >=' → logprob: -6.123652935028076
    6. '<' → logprob: -6.123652935028076
    7. '>' → logprob: -7.123652935028076
    8. '=' → logprob: -8.123652458190918
    9. '!=-' → logprob: -8.123652458190918
    10. ' !=' → logprob: -8.623652458190918

Token 1259: ' rem' (ID: 1662)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.0009130131802521646
    2. ' rem' → logprob: -7.000913143157959
    3. '   ' → logprob: -14.0009126663208
    4. '(rem' → logprob: -15.5009126663208
    5. 'reman' → logprob: -15.5009126663208
    6. '
' → logprob: -15.8759126663208
    7. '0' → logprob: -17.500913619995117
    8. ' ' → logprob: -17.500913619995117
    9. 'remaining' → logprob: -17.750913619995117
    10. '  ' → logprob: -17.875913619995117

Token 1260: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.21384209394454956
    2. ':
' → logprob: -1.8388421535491943
    3. ':' → logprob: -3.5888421535491943
    4. 'and' → logprob: -5.213841915130615
    5. '       ' → logprob: -8.338842391967773
    6. '   ' → logprob: -8.713842391967773
    7. '):
' → logprob: -11.963842391967773
    8. ' ' → logprob: -12.213842391967773
    9. ' ans' → logprob: -12.463842391967773
    10. '	and' → logprob: -12.588842391967773

Token 1261: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007292322698049247
    2. ' ans' → logprob: -8.25072956085205
    3. 'ans' → logprob: -8.25072956085205
    4. '   ' → logprob: -8.62572956085205
    5. '	ans' → logprob: -11.12572956085205
    6. '           ' → logprob: -12.50072956085205
    7. '     ' → logprob: -12.75072956085205
    8. '      ' → logprob: -13.37572956085205
    9. '	   ' → logprob: -13.87572956085205
    10. '    ' → logprob: -14.12572956085205

Token 1262: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -2.522638169466518e-05
    2. ' ans' → logprob: -10.750024795532227
    3. '   ' → logprob: -12.625024795532227
    4. '	ans' → logprob: -15.000024795532227
    5. '       ' → logprob: -16.500024795532227
    6. 'anst' → logprob: -17.375024795532227
    7. 'answer' → logprob: -17.625024795532227
    8. '(ans' → logprob: -18.250024795532227
    9. '_ans' → logprob: -18.875024795532227
    10. 'if' → logprob: -19.250024795532227

Token 1263: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3927507698535919
    2. '=' → logprob: -1.1427507400512695
    3. '=max' → logprob: -5.1427507400512695
    4. 'max' → logprob: -11.01775074005127
    5. ' max' → logprob: -12.76775074005127
    6. '   ' → logprob: -14.89275074005127
    7. ',max' → logprob: -14.89275074005127
    8. '+=' → logprob: -15.64275074005127
    9. '(max' → logprob: -15.76775074005127
    10. '	' → logprob: -16.017751693725586

Token 1264: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.003177952254191041
    2. ' max' → logprob: -5.753178119659424
    3. '	max' → logprob: -15.503177642822266
    4. '(max' → logprob: -17.503177642822266
    5. '   ' → logprob: -18.003177642822266
    6. '[max' → logprob: -18.128177642822266
    7. '=max' → logprob: -19.503177642822266
    8. ',max' → logprob: -19.503177642822266
    9. '_max' → logprob: -20.003177642822266
    10. '.max' → logprob: -21.503177642822266

Token 1265: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.160263329744339
    2. 'ans' → logprob: -1.9102632999420166
    3. ' ans' → logprob: -10.160263061523438
    4. '	ans' → logprob: -15.160263061523438
    5. '(v' → logprob: -16.910263061523438
    6. '(' → logprob: -17.535263061523438
    7. '_ans' → logprob: -18.160263061523438
    8. '(max' → logprob: -19.535263061523438
    9. 'ANS' → logprob: -20.535263061523438
    10. 'max' → logprob: -20.660263061523438

Token 1266: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001568545587360859
    2. ' ,' → logprob: -7.00156831741333
    3. ',v' → logprob: -7.87656831741333
    4. '(ans' → logprob: -8.751568794250488
    5. ',
' → logprob: -10.251568794250488
    6. ',max' → logprob: -10.251568794250488
    7. 'ans' → logprob: -10.501568794250488
    8. ' ans' → logprob: -11.251568794250488
    9. '
' → logprob: -12.876568794250488
    10. ',val' → logprob: -13.626568794250488

Token 1267: '+b' (ID: 76609)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.029844094067811966
    2. ' +' → logprob: -3.654844045639038
    3. '+b' → logprob: -6.029844284057617
    4. '+w' → logprob: -7.029844284057617
    5. '+
' → logprob: -8.904844284057617
    6. '+i' → logprob: -10.029844284057617
    7. '+x' → logprob: -10.904844284057617
    8. '+s' → logprob: -11.654844284057617
    9. '+n' → logprob: -12.029844284057617
    10. '+y' → logprob: -12.154844284057617

Token 1268: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.182190554682165e-05
    2. '[' → logprob: -9.750061988830566
    3. 'i' → logprob: -12.750061988830566
    4. 'v' → logprob: -15.875061988830566
    5. '(i' → logprob: -16.25006103515625
    6. '[v' → logprob: -16.25006103515625
    7. ' i' → logprob: -17.12506103515625
    8. '_i' → logprob: -18.00006103515625
    9. '{i' → logprob: -18.00006103515625
    10. '0' → logprob: -18.37506103515625

Token 1269: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007254178053699434
    2. '0' → logprob: -7.250725269317627
    3. '][' → logprob: -11.250725746154785
    4. '[
' → logprob: -14.625725746154785
    5. '```' → logprob: -15.000725746154785
    6. '#' → logprob: -15.125725746154785
    7. '
' → logprob: -15.375725746154785
    8. ' [' → logprob: -15.875725746154785
    9. ']' → logprob: -16.12572479248047
    10. ')' → logprob: -16.37572479248047

Token 1270: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -15.75
    3. ' ' → logprob: -18.375
    4. '<|end|>' → logprob: -18.5
    5. '```' → logprob: -18.75
    6. '۰' → logprob: -19.125
    7. '1' → logprob: -19.25
    8. 'v' → logprob: -19.8125
    9. '2' → logprob: -20.1875
    10. '#' → logprob: -20.375

Token 1271: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008086714660748839
    2. ')
' → logprob: -7.1258087158203125
    3. ' )' → logprob: -13.125808715820312
    4. '   ' → logprob: -13.375808715820312
    5. ')return' → logprob: -15.000808715820312
    6. ')

' → logprob: -16.500808715820312
    7. ')
' → logprob: -17.125808715820312
    8. '       ' → logprob: -17.125808715820312
    9. '))' → logprob: -17.125808715820312
    10. ')#' → logprob: -17.250808715820312

Token 1272: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00036323294625617564
    2. '<|end|>' → logprob: -9.00036334991455
    3. '```' → logprob: -9.12536334991455
    4. ' print' → logprob: -9.62536334991455
    5. ')' → logprob: -10.12536334991455
    6. '#' → logprob: -11.37536334991455
    7. '
' → logprob: -12.00036334991455
    8. '#print' → logprob: -12.62536334991455
    9. '(print' → logprob: -13.75036334991455
    10. ']' → logprob: -14.50036334991455

Token 1273: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.01816035620868206
    2. '(' → logprob: -4.018160343170166
    3. ' (' → logprob: -11.768160820007324
    4. '(
' → logprob: -13.518160820007324
    5. '(answer' → logprob: -14.268160820007324
    6. 'ans' → logprob: -15.018160820007324
    7. '()' → logprob: -15.143160820007324
    8. '('' → logprob: -15.518160820007324
    9. '	ans' → logprob: -17.143159866333008
    10. '(abs' → logprob: -17.643159866333008

Token 1274: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.8828707804204896e-05
    2. ')
' → logprob: -10.000048637390137
    3. '
' → logprob: -13.125048637390137
    4. ' )' → logprob: -13.875048637390137
    5. '')' → logprob: -16.000049591064453
    6. '")' → logprob: -16.125049591064453
    7. '```' → logprob: -16.250049591064453
    8. '`)' → logprob: -17.250049591064453
    9. '）' → logprob: -18.250049591064453
    10. '#' → logprob: -18.250049591064453

Token 1275: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.60139399766922
    2. '   ' → logprob: -1.7263939380645752
    3. '[' → logprob: -2.351393938064575
    4. '=' → logprob: -3.101393938064575
    5. ':' → logprob: -3.351393938064575
    6. ' for' → logprob: -4.101394176483154
    7. '       ' → logprob: -4.351394176483154
    8. ' ' → logprob: -4.351394176483154
    9. 'if' → logprob: -4.476394176483154
    10. '-' → logprob: -4.726394176483154

Token 1276: '2' (ID: 17)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14566805958747864
    2. 'n' → logprob: -3.2706680297851562
    3. ')' → logprob: -4.020668029785156
    4. '#' → logprob: -4.145668029785156
    5. '+' → logprob: -4.395668029785156
    6. '/' → logprob: -4.520668029785156
    7. '-' → logprob: -4.520668029785156
    8. ']' → logprob: -5.145668029785156
    9. '=' → logprob: -5.270668029785156
    10. 'for' → logprob: -5.270668029785156

Token 1277: ':' (ID: 25)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.533316433429718
    2. '[' → logprob: -1.0333163738250732
    3. 'n' → logprob: -3.5333163738250732
    4. '<|end|>' → logprob: -5.283316612243652
    5. '_' → logprob: -5.533316612243652
    6. ' ' → logprob: -6.158316612243652
    7. '=' → logprob: -6.283316612243652
    8. ' #' → logprob: -6.283316612243652
    9. '[n' → logprob: -6.408316612243652
    10. ')' → logprob: -6.658316612243652

Token 1278: 'perm' (ID: 34794)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8139855861663818
    2. '[' → logprob: -1.1889855861663818
    3. 'n' → logprob: -2.063985586166382
    4. ' ' → logprob: -3.188985586166382
    5. ' #' → logprob: -3.313985586166382
    6. 'f' → logprob: -4.938985824584961
    7. ' n' → logprob: -5.563985824584961
    8. ')' → logprob: -5.688985824584961
    9. 'for' → logprob: -5.688985824584961
    10. 'a' → logprob: -5.688985824584961

Token 1279: 'uta' (ID: 7010)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4132542908191681
    2. 'for' → logprob: -2.5382542610168457
    3. 'n' → logprob: -2.7882542610168457
    4. '#' → logprob: -2.9132542610168457
    5. '0' → logprob: -3.9132542610168457
    6. '=' → logprob: -4.288254261016846
    7. '1' → logprob: -4.288254261016846
    8. '   ' → logprob: -4.788254261016846
    9. '(' → logprob: -4.913254261016846
    10. ' ' → logprob: -5.038254261016846

Token 1280: 'ion' (ID: 294)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.18163339793682098
    2. 'tion' → logprob: -1.8066333532333374
    3. 'ion' → logprob: -7.306633472442627
    4. '<|end|>' → logprob: -7.556633472442627
    5. 'ions' → logprob: -8.306632995605469
    6. 'r' → logprob: -8.306632995605469
    7. 's' → logprob: -10.056632995605469
    8. ' ' → logprob: -10.681632995605469
    9. 'ti' → logprob: -11.681632995605469
    10. 'def' → logprob: -11.931632995605469

Token 1281: '/path' (ID: 119244)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1282: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3738410770893097
    2. '   ' → logprob: -2.4988410472869873
    3. '[' → logprob: -2.6238410472869873
    4. ' for' → logprob: -2.9988410472869873
    5. '<|end|>' → logprob: -3.3738410472869873
    6. 'range' → logprob: -3.9988410472869873
    7. '       ' → logprob: -4.123841285705566
    8. ' range' → logprob: -5.123841285705566
    9. ':' → logprob: -5.248841285705566
    10. ')' → logprob: -5.623841285705566

Token 1283: '#' (ID: 2)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4604673981666565
    2. ' ' → logprob: -1.7104673385620117
    3. '#' → logprob: -2.4604673385620117
    4. '   ' → logprob: -3.5854673385620117
    5. 'for' → logprob: -3.9604673385620117
    6. 'n' → logprob: -4.085467338562012
    7. ' for' → logprob: -4.460467338562012
    8. ' #' → logprob: -5.085467338562012
    9. '+' → logprob: -5.585467338562012
    10. '0' → logprob: -5.960467338562012

Token 1284: '2' (ID: 17)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6849614977836609
    2. '(' → logprob: -2.0599615573883057
    3. '1' → logprob: -2.1849615573883057
    4. 'for' → logprob: -3.0599615573883057
    5. '   ' → logprob: -3.1849615573883057
    6. '[' → logprob: -3.1849615573883057
    7. '0' → logprob: -3.4349615573883057
    8. '       ' → logprob: -3.9349615573883057
    9. ' range' → logprob: -4.059961318969727
    10. 'i' → logprob: -4.684961318969727

Token 1285: '_A' (ID: 6829)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22492437064647675
    2. '[' → logprob: -1.9749243259429932
    3. '#' → logprob: -3.099924325942993
    4. ':' → logprob: -6.224924564361572
    5. 'n' → logprob: -6.349924564361572
    6. '_n' → logprob: -6.474924564361572
    7. '[]' → logprob: -6.974924564361572
    8. '0' → logprob: -7.224924564361572
    9. ' _' → logprob: -7.349924564361572
    10. '```' → logprob: -7.349924564361572

Token 1286: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9681752920150757
    2. ' for' → logprob: -1.7181752920150757
    3. '[' → logprob: -2.2181754112243652
    4. '   ' → logprob: -2.2181754112243652
    5. ':' → logprob: -2.7181754112243652
    6. ' range' → logprob: -3.3431754112243652
    7. 'range' → logprob: -3.8431754112243652
    8. '       ' → logprob: -3.9681754112243652
    9. 'n' → logprob: -4.343175411224365
    10. '+' → logprob: -4.468175411224365

Token 1287: '"""
' (ID: 15611)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.676459789276123
    2. 'n' → logprob: -1.426459789276123
    3. '0' → logprob: -2.426459789276123
    4. 'for' → logprob: -2.801459789276123
    5. 'i' → logprob: -3.926459789276123
    6. '1' → logprob: -4.051459789276123
    7. ' for' → logprob: -4.176459789276123
    8. '[' → logprob: -4.426459789276123
    9. 'm' → logprob: -4.801459789276123
    10. '2' → logprob: -5.051459789276123

Token 1288: 'n' (ID: 77)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1172541379928589
    2. '0' → logprob: -1.7422541379928589
    3. 'n' → logprob: -1.7422541379928589
    4. '1' → logprob: -1.9922541379928589
    5. ' ' → logprob: -3.2422542572021484
    6. '#' → logprob: -3.4922542572021484
    7. '(' → logprob: -3.4922542572021484
    8. '+' → logprob: -3.7422542572021484
    9. '2' → logprob: -4.742254257202148
    10. ' range' → logprob: -4.742254257202148

Token 1289: ',e' (ID: 43127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1378178596496582
    2. '=' → logprob: -1.1378178596496582
    3. '+' → logprob: -1.6378178596496582
    4. ' =' → logprob: -2.887817859649658
    5. ')' → logprob: -4.012817859649658
    6. '#' → logprob: -4.012817859649658
    7. '+=' → logprob: -4.137817859649658
    8. '>' → logprob: -4.637817859649658
    9. ' +=' → logprob: -4.762817859649658
    10. ' ' → logprob: -4.887817859649658

Token 1290: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5083430409431458
    2. ' =' → logprob: -1.258342981338501
    3. ',' → logprob: -2.383342981338501
    4. 'd' → logprob: -5.13334321975708
    5. '+=' → logprob: -5.75834321975708
    6. '+' → logprob: -6.25834321975708
    7. 'm' → logprob: -6.38334321975708
    8. ',d' → logprob: -6.63334321975708
    9. ',n' → logprob: -7.00834321975708
    10. '[' → logprob: -7.13334321975708

Token 1291: ' LI' (ID: 14875)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7682194709777832
    2. 'int' → logprob: -2.018219470977783
    3. 'range' → logprob: -2.393219470977783
    4. '1' → logprob: -2.768219470977783
    5. 'map' → logprob: -3.268219470977783
    6. '=' → logprob: -3.393219470977783
    7. 'n' → logprob: -3.518219470977783
    8. 'e' → logprob: -3.643219470977783
    9. 'input' → logprob: -3.768219470977783
    10. '0' → logprob: -4.268219470977783

Token 1292: '()
' (ID: 1234)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2675907611846924
    2. '[' → logprob: -1.3925907611846924
    3. '+' → logprob: -1.6425907611846924
    4. 'x' → logprob: -2.1425907611846924
    5. 'n' → logprob: -4.017590522766113
    6. '#' → logprob: -4.267590522766113
    7. '[
' → logprob: -4.517590522766113
    8. '[]' → logprob: -4.642590522766113
    9. ')
' → logprob: -4.642590522766113
    10. 'm' → logprob: -5.017590522766113

Token 1293: 'v' (ID: 85)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1235295832157135
    2. ' for' → logprob: -2.3735296726226807
    3. 'e' → logprob: -4.123529434204102
    4. '
' → logprob: -6.373529434204102
    5. 'n' → logprob: -6.623529434204102
    6. '#' → logprob: -7.498529434204102
    7. '[' → logprob: -7.998529434204102
    8. ' e' → logprob: -7.998529434204102
    9. 'range' → logprob: -7.998529434204102
    10. '   ' → logprob: -8.373529434204102

Token 1294: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6700470447540283
    2. 'al' → logprob: -1.4200470447540283
    3. ' =' → logprob: -1.6700470447540283
    4. ',' → logprob: -3.2950470447540283
    5. 'a' → logprob: -4.670046806335449
    6. 'alue' → logprob: -5.420046806335449
    7. '[' → logprob: -6.420046806335449
    8. '=[]' → logprob: -6.795046806335449
    9. 'alu' → logprob: -7.420046806335449
    10. 'ALUE' → logprob: -7.920046806335449

Token 1295: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1003643199801445
    2. '[int' → logprob: -3.3503642082214355
    3. '[]' → logprob: -3.7253642082214355
    4. '[n' → logprob: -3.8503642082214355
    5. '[I' → logprob: -5.4753642082214355
    6. '[e' → logprob: -5.6003642082214355
    7. '[v' → logprob: -6.6003642082214355
    8. ' [' → logprob: -7.1003642082214355
    9. '[list' → logprob: -7.3503642082214355
    10. '[input' → logprob: -7.4753642082214355

Token 1296: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08432002365589142
    2. '[]' → logprob: -3.084320068359375
    3. '<|end|>' → logprob: -4.209320068359375
    4. '[' → logprob: -4.584320068359375
    5. ' for' → logprob: -5.084320068359375
    6. 'for' → logprob: -6.459320068359375
    7. '<|end|>' → logprob: -7.834320068359375
    8. ')' → logprob: -7.959320068359375
    9. ' ]' → logprob: -8.334320068359375
    10. '][]' → logprob: -8.334320068359375

Token 1297: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.046023666858673096
    2. 'i' → logprob: -3.7960236072540283
    3. '_i' → logprob: -4.046023845672607
    4. ' _' → logprob: -6.296023845672607
    5. 'range' → logprob: -6.671023845672607
    6. ' i' → logprob: -7.671023845672607
    7. '_e' → logprob: -7.796023845672607
    8. ' range' → logprob: -8.29602336883545
    9. 'e' → logprob: -8.42102336883545
    10. '_range' → logprob: -8.92102336883545

Token 1298: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28189584612846375
    2. 'in' → logprob: -1.4068958759307861
    3. '(' → logprob: -8.531895637512207
    4. '()' → logprob: -8.656895637512207
    5. ' i' → logprob: -9.156895637512207
    6. 'for' → logprob: -9.656895637512207
    7. 'i' → logprob: -10.281895637512207
    8. '(i' → logprob: -10.406895637512207
    9. 'range' → logprob: -10.781895637512207
    10. '	in' → logprob: -11.031895637512207

Token 1299: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1270904242992401
    2. ' range' → logprob: -2.1270904541015625
    3. ' ' → logprob: -10.002090454101562
    4. 'i' → logprob: -10.252090454101562
    5. 'n' → logprob: -10.627090454101562
    6. ']' → logprob: -10.877090454101562
    7. ' i' → logprob: -11.627090454101562
    8. '(range' → logprob: -11.752090454101562
    9. ' 
' → logprob: -12.002090454101562
    10. ' ]' → logprob: -12.502090454101562

Token 1300: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5776533484458923
    2. 'range' → logprob: -0.9526533484458923
    3. ' range' → logprob: -3.077653408050537
    4. ' n' → logprob: -5.202653408050537
    5. 'e' → logprob: -6.952653408050537
    6. '(n' → logprob: -8.077652931213379
    7. 'v' → logprob: -9.452652931213379
    8. ' e' → logprob: -10.077652931213379
    9. ' ' → logprob: -10.327652931213379
    10. ']' → logprob: -10.827652931213379

Token 1301: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.004766053520143032
    2. ')]
' → logprob: -5.37976598739624
    3. ')' → logprob: -10.129766464233398
    4. '[' → logprob: -10.504766464233398
    5. ')]
' → logprob: -10.504766464233398
    6. ']' → logprob: -11.129766464233398
    7. '])' → logprob: -11.879766464233398
    8. '])]' → logprob: -11.879766464233398
    9. ')])' → logprob: -12.379766464233398
    10. '[]' → logprob: -12.379766464233398

Token 1302: 'f' (ID: 69)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3467058837413788
    2. ' for' → logprob: -1.9717059135437012
    3. 'for' → logprob: -2.971705913543701
    4. 'n' → logprob: -3.846705913543701
    5. 'v' → logprob: -4.221705913543701
    6. '0' → logprob: -4.346705913543701
    7. ' ' → logprob: -4.471705913543701
    8. ' v' → logprob: -4.721705913543701
    9. '       ' → logprob: -5.471705913543701
    10. ' range' → logprob: -5.596705913543701

Token 1303: ' =' (ID: 314)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.0007068329723551869
    2. 'e' → logprob: -8.125706672668457
    3. '=' → logprob: -8.875706672668457
    4. ' or' → logprob: -9.750706672668457
    5. '[' → logprob: -9.875706672668457
    6. 'o' → logprob: -9.875706672668457
    7. ' =' → logprob: -10.250706672668457
    8. 'for' → logprob: -10.875706672668457
    9. 'rom' → logprob: -11.125706672668457
    10. 'orl' → logprob: -11.875706672668457

Token 1304: ' [-' (ID: 20191)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.9759596586227417
    2. 'LI' → logprob: -1.6009596586227417
    3. 'int' → logprob: -1.9759596586227417
    4. '[' → logprob: -2.2259597778320312
    5. '[int' → logprob: -2.2259597778320312
    6. '[I' → logprob: -4.225959777832031
    7. '[]' → logprob: -4.725959777832031
    8. '0' → logprob: -4.975959777832031
    9. 'LS' → logprob: -5.100959777832031
    10. 'e' → logprob: -5.100959777832031

Token 1305: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014132341311778873
    2. '10' → logprob: -10.500141143798828
    3. 'n' → logprob: -10.625141143798828
    4. 'float' → logprob: -10.750141143798828
    5. '100' → logprob: -10.875141143798828
    6. 'inf' → logprob: -11.375141143798828
    7. 'e' → logprob: -11.875141143798828
    8. '999' → logprob: -12.375141143798828
    9. '2' → logprob: -12.625141143798828
    10. '-' → logprob: -12.625141143798828

Token 1306: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25531062483787537
    2. ']' → logprob: -1.8803106546401978
    3. 'for' → logprob: -3.380310535430908
    4. ',' → logprob: -4.380310535430908
    5. '1' → logprob: -4.630310535430908
    6. ')' → logprob: -4.630310535430908
    7. '<|end|>' → logprob: -5.380310535430908
    8. '])' → logprob: -7.630310535430908
    9. ' ]' → logprob: -7.755310535430908
    10. ' ' → logprob: -8.630311012268066

Token 1307: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07102274149656296
    2. ' i' → logprob: -3.0710227489471436
    3. 'range' → logprob: -4.4460225105285645
    4. ' range' → logprob: -4.5710225105285645
    5. '_' → logprob: -9.821022987365723
    6. '_i' → logprob: -10.696022987365723
    7. ' _' → logprob: -10.821022987365723
    8. ' ' → logprob: -12.321022987365723
    9. '_range' → logprob: -12.321022987365723
    10. '   ' → logprob: -13.446022987365723

Token 1308: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4412207305431366
    2. 'in' → logprob: -1.441220760345459
    3. 'range' → logprob: -2.691220760345459
    4. 'i' → logprob: -3.566220760345459
    5. 'for' → logprob: -4.441220760345459
    6. 'n' → logprob: -5.316220760345459
    7. ' range' → logprob: -5.441220760345459
    8. '(range' → logprob: -6.941220760345459
    9. '(i' → logprob: -7.066220760345459
    10. '(' → logprob: -7.941220760345459

Token 1309: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20141421258449554
    2. ' range' → logprob: -1.7014142274856567
    3. '(range' → logprob: -14.326414108276367
    4. '	range' → logprob: -15.451414108276367
    5. '
' → logprob: -17.451414108276367
    6. '_range' → logprob: -18.326414108276367
    7. 'in' → logprob: -18.826414108276367
    8. ' ' → logprob: -19.201414108276367
    9. '[' → logprob: -19.326414108276367
    10. '.range' → logprob: -19.451414108276367

Token 1310: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.13968440890312195
    2. 'n' → logprob: -2.1396844387054443
    3. ' range' → logprob: -4.389684200286865
    4. ' n' → logprob: -8.764684677124023
    5. '(n' → logprob: -9.389684677124023
    6. 'e' → logprob: -11.139684677124023
    7. '(range' → logprob: -11.264684677124023
    8. '   ' → logprob: -14.014684677124023
    9. 'v' → logprob: -14.264684677124023
    10. '
' → logprob: -14.264684677124023

Token 1311: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.03824654221534729
    2. ')]
' → logprob: -3.2882466316223145
    3. '])]' → logprob: -9.663246154785156
    4. ']' → logprob: -10.038246154785156
    5. '])' → logprob: -10.163246154785156
    6. ')]
' → logprob: -10.788246154785156
    7. '[]' → logprob: -11.413246154785156
    8. ')]

' → logprob: -12.038246154785156
    9. ']
' → logprob: -12.288246154785156
    10. ')])' → logprob: -12.413246154785156

Token 1312: 'for' (ID: 1938)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1482067108154297
    2. 'for' → logprob: -2.8982067108154297
    3. ' for' → logprob: -3.8982067108154297
    4. '   ' → logprob: -4.27320671081543
    5. 'v' → logprob: -4.52320671081543
    6. ']' → logprob: -4.64820671081543
    7. '0' → logprob: -5.27320671081543
    8. '[
' → logprob: -5.39820671081543
    9. 'n' → logprob: -5.52320671081543
    10. '#' → logprob: -5.52320671081543

Token 1313: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0655304491519928
    2. ' i' → logprob: -3.06553053855896
    3. '_' → logprob: -4.690530300140381
    4. 'u' → logprob: -5.815530300140381
    5. 'j' → logprob: -7.315530300140381
    6. '_i' → logprob: -7.315530300140381
    7. 'e' → logprob: -7.565530300140381
    8. '0' → logprob: -7.690530300140381
    9. 'x' → logprob: -7.690530300140381
    10. '   ' → logprob: -8.690530776977539

Token 1314: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043152421712875366
    2. 'in' → logprob: -3.168152332305908
    3. 'n' → logprob: -10.043152809143066
    4. ' ' → logprob: -10.793152809143066
    5. '   ' → logprob: -11.293152809143066
    6. 'range' → logprob: -11.293152809143066
    7. ' n' → logprob: -11.793152809143066
    8. '0' → logprob: -11.793152809143066
    9. 's' → logprob: -12.043152809143066
    10. '[' → logprob: -12.043152809143066

Token 1315: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031808018684387207
    2. ' range' → logprob: -5.753180980682373
    3. 'e' → logprob: -13.128180503845215
    4. 'in' → logprob: -15.128180503845215
    5. 'r' → logprob: -15.378180503845215
    6. ' ' → logprob: -15.628180503845215
    7. '	range' → logprob: -15.628180503845215
    8. '
' → logprob: -16.50318145751953
    9. 'n' → logprob: -16.87818145751953
    10. '0' → logprob: -17.50318145751953

Token 1316: '(e' (ID: 3454)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -7.40998875699006e-05
    2. ' e' → logprob: -10.25007438659668
    3. '(e' → logprob: -11.25007438659668
    4. 'range' → logprob: -11.62507438659668
    5. '0' → logprob: -11.87507438659668
    6. 'n' → logprob: -12.87507438659668
    7. '
' → logprob: -13.12507438659668
    8. '   ' → logprob: -13.25007438659668
    9. '1' → logprob: -13.87507438659668
    10. 'int' → logprob: -14.37507438659668

Token 1317: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012636666186153889
    2. '):
' → logprob: -4.762636661529541
    3. ']:' → logprob: -6.012636661529541
    4. '+' → logprob: -7.887636661529541
    5. ']):' → logprob: -7.887636661529541
    6. ')' → logprob: -8.0126371383667
    7. '[' → logprob: -9.1376371383667
    8. ')]' → logprob: -9.6376371383667
    9. 'n' → logprob: -9.8876371383667
    10. ':' → logprob: -10.0126371383667

Token 1318: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28596633672714233
    2. ' v' → logprob: -2.160966396331787
    3. 'v' → logprob: -2.660966396331787
    4. 's' → logprob: -3.785966396331787
    5. ' input' → logprob: -4.910966396331787
    6. ' j' → logprob: -5.160966396331787
    7. 'input' → logprob: -5.160966396331787
    8. 'n' → logprob: -5.910966396331787
    9. ' s' → logprob: -6.035966396331787
    10. ' n' → logprob: -6.035966396331787

Token 1319: ' s' (ID: 265)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.3273114264011383
    2. 'a' → logprob: -1.452311396598816
    3. 's' (adapté à ' s') → logprob: -4.0773115158081055
    4. ' u' → logprob: -4.8273115158081055
    5. 'v' → logprob: -5.0773115158081055
    6. 'j' → logprob: -5.5773115158081055
    7. 'x' → logprob: -5.7023115158081055
    8. '   ' → logprob: -6.5773115158081055
    9. ' a' → logprob: -6.8273115158081055
    10. ' s' → logprob: -7.4523115158081055

Token 1320: ',t' (ID: 26927)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17476017773151398
    2. ' ,' → logprob: -2.549760103225708
    3. ' =' → logprob: -2.799760103225708
    4. '=' → logprob: -4.549760341644287
    5. ',v' → logprob: -5.674760341644287
    6. '_,' → logprob: -6.299760341644287
    7. 's' → logprob: -6.799760341644287
    8. ',n' → logprob: -6.799760341644287
    9. '=input' → logprob: -7.799760341644287
    10. ')' → logprob: -7.799760341644287

Token 1321: ',d' (ID: 26159)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7379382252693176
    2. ' =' → logprob: -1.2379381656646729
    3. ',' → logprob: -1.4879381656646729
    4. ' ,' → logprob: -5.737938404083252
    5. ',v' → logprob: -6.862938404083252
    6. ',p' → logprob: -7.862938404083252
    7. ',s' → logprob: -8.237937927246094
    8. ',input' → logprob: -8.487937927246094
    9. ',n' → logprob: -8.737937927246094
    10. '=input' → logprob: -9.237937927246094

Token 1322: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11363759636878967
    2. ' =' → logprob: -2.238637685775757
    3. ',' → logprob: -7.488637447357178
    4. '()' → logprob: -9.488637924194336
    5. '   ' → logprob: -10.238637924194336
    6. '(' → logprob: -10.738637924194336
    7. ',s' → logprob: -11.113637924194336
    8. '=
' → logprob: -11.113637924194336
    9. '=input' → logprob: -11.238637924194336
    10. '[' → logprob: -11.488637924194336

Token 1323: ' LI' (ID: 14875)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.006935594137758017
    2. ' LI' → logprob: -5.8819355964660645
    3. 'map' → logprob: -6.0069355964660645
    4. 'I' → logprob: -6.6319355964660645
    5. ' map' → logprob: -8.256935119628906
    6. 'L' → logprob: -10.256935119628906
    7. 'LS' → logprob: -10.381935119628906
    8. 'li' → logprob: -12.381935119628906
    9. 'list' → logprob: -12.631935119628906
    10. ' I' → logprob: -12.631935119628906

Token 1324: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.043234970420598984
    2. '()
' → logprob: -3.1682350635528564
    3. '()]' → logprob: -9.418234825134277
    4. '()
' → logprob: -9.668234825134277
    5. '())' → logprob: -10.168234825134277
    6. '();' → logprob: -10.543234825134277
    7. ')' → logprob: -11.793234825134277
    8. ' ()' → logprob: -12.293234825134277
    9. '())
' → logprob: -12.418234825134277
    10. '()]
' → logprob: -12.668234825134277

Token 1325: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3109012544155121
    2. 'v' → logprob: -2.185901165008545
    3. '	v' → logprob: -2.310901165008545
    4. '<|end|>' → logprob: -4.435901165008545
    5. 's' → logprob: -5.185901165008545
    6. ',' → logprob: -5.185901165008545
    7. '	s' → logprob: -5.685901165008545
    8. '	' → logprob: -5.685901165008545
    9. ')' → logprob: -5.810901165008545
    10. ' ' → logprob: -5.935901165008545

Token 1326: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.0003079334564972669
    2. '   ' → logprob: -8.1253080368042
    3. ' v' → logprob: -11.8753080368042
    4. 'f' → logprob: -12.7503080368042
    5. 'if' → logprob: -14.2503080368042
    6. '	v' → logprob: -14.7503080368042
    7. '#' → logprob: -15.1253080368042
    8. '  ' → logprob: -15.2503080368042
    9. ' ' → logprob: -16.000307083129883
    10. '```' → logprob: -16.125307083129883

Token 1327: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.012860527262091637
    2. '[t' → logprob: -4.387860298156738
    3. '[' → logprob: -8.512860298156738
    4. '   ' → logprob: -10.137860298156738
    5. 't' → logprob: -10.637860298156738
    6. 's' → logprob: -10.887860298156738
    7. '][' → logprob: -11.387860298156738
    8. ']' → logprob: -11.637860298156738
    9. '[v' → logprob: -11.637860298156738
    10. '[i' → logprob: -11.762860298156738

Token 1328: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.3526357114315033
    2. '][' → logprob: -1.2276357412338257
    3. ']' → logprob: -6.477635860443115
    4. '   ' → logprob: -6.727635860443115
    5. '[i' → logprob: -8.102635383605957
    6. '[' → logprob: -8.227635383605957
    7. '.append' → logprob: -8.602635383605957
    8. '][]' → logprob: -9.102635383605957
    9. '[v' → logprob: -9.102635383605957
    10. ']
' → logprob: -9.602635383605957

Token 1329: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.1008713702030946e-06
    2. ' append' → logprob: -13.750001907348633
    3. 'appen' → logprob: -14.250001907348633
    4. 'app' → logprob: -15.500001907348633
    5. 'extend' → logprob: -17.125001907348633
    6. 'add' → logprob: -17.750001907348633
    7. '	append' → logprob: -17.750001907348633
    8. 'a' → logprob: -18.250001907348633
    9. '.append' → logprob: -18.250001907348633
    10. '_append' → logprob: -18.500001907348633

Token 1330: '([' (ID: 5194)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0006976616568863392
    2. '((' → logprob: -7.750697612762451
    3. '(' → logprob: -8.62569808959961
    4. 't' → logprob: -10.12569808959961
    5. '([' → logprob: -10.37569808959961
    6. '[t' → logprob: -11.87569808959961
    7. '(
' → logprob: -12.12569808959961
    8. ' (' → logprob: -13.00069808959961
    9. '(d' → logprob: -14.75069808959961
    10. '   ' → logprob: -15.25069808959961

Token 1331: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.4021237802808173e-05
    2. ' t' → logprob: -11.250014305114746
    3. '   ' → logprob: -15.375014305114746
    4. '`t' → logprob: -15.375014305114746
    5. ',t' → logprob: -15.625014305114746
    6. '	t' → logprob: -15.750014305114746
    7. '(t' → logprob: -16.37501335144043
    8. '
' → logprob: -16.50001335144043
    9. ',' → logprob: -17.25001335144043
    10. ')t' → logprob: -17.50001335144043

Token 1332: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.0015134313143789768
    2. ',' → logprob: -6.501513481140137
    3. ' ,' → logprob: -11.751513481140137
    4. 'd' → logprob: -13.626513481140137
    5. ',D' → logprob: -14.251513481140137
    6. ',int' → logprob: -14.876513481140137
    7. '
' → logprob: -15.501513481140137
    8. ',
' → logprob: -15.751513481140137
    9. ',v' → logprob: -15.876513481140137
    10. ',n' → logprob: -16.00151252746582

Token 1333: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0033529745414853096
    2. '])
' → logprob: -6.503353118896484
    3. ',' → logprob: -7.253353118896484
    4. ')])' → logprob: -7.253353118896484
    5. '])]' → logprob: -8.378353118896484
    6. ')' → logprob: -9.503353118896484
    7. '   ' → logprob: -9.878353118896484
    8. ']])' → logprob: -10.378353118896484
    9. ' ])' → logprob: -11.378353118896484
    10. '       ' → logprob: -11.628353118896484

Token 1334: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32921531796455383
    2. '<|end|>' → logprob: -1.8292152881622314
    3. ')' → logprob: -2.2042152881622314
    4. 'v' → logprob: -6.0792155265808105
    5. '<|end|>' → logprob: -6.7042155265808105
    6. 's' → logprob: -6.7042155265808105
    7. '#' → logprob: -6.9542155265808105
    8. ']' → logprob: -7.3292155265808105
    9. ' ' → logprob: -7.4542155265808105
    10. '[' → logprob: -7.9542155265808105

Token 1335: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2351413369178772
    2. 'v' → logprob: -1.6101412773132324
    3. 'f' → logprob: -5.110141277313232
    4. ' ' → logprob: -6.985141277313232
    5. '	v' → logprob: -6.985141277313232
    6. ' v' → logprob: -7.235141277313232
    7. '	f' → logprob: -8.36014175415039
    8. ' f' → logprob: -8.48514175415039
    9. '  ' → logprob: -8.61014175415039
    10. ')' → logprob: -8.98514175415039

Token 1336: ' t' (ID: 260)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3851097524166107
    2. 't' → logprob: -1.760109782218933
    3. ' f' → logprob: -2.7601096630096436
    4. 's' → logprob: -3.1351096630096436
    5. ' t' → logprob: -3.8851096630096436
    6. ' s' → logprob: -4.510109901428223
    7. 'v' → logprob: -5.635109901428223
    8. ' not' → logprob: -6.635109901428223
    9. 'not' → logprob: -7.135109901428223
    10. 'i' → logprob: -7.385109901428223

Token 1337: ' ==' (ID: 951)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0458807945251465
    2. '<' → logprob: -1.7958807945251465
    3. '>=' → logprob: -2.4208807945251465
    4. ' <' → logprob: -2.7958807945251465
    5. ']' → logprob: -2.9208807945251465
    6. '>' → logprob: -3.2958807945251465
    7. '==' → logprob: -3.5458807945251465
    8. '=' → logprob: -3.5458807945251465
    9. ' >=' → logprob: -3.7958807945251465
    10. ' ==' → logprob: -3.9208807945251465

Token 1338: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06907916069030762
    2. '-' → logprob: -3.4440791606903076
    3. '-s' → logprob: -3.9440791606903076
    4. ' s' → logprob: -4.819079399108887
    5. ' -' → logprob: -5.819079399108887
    6. '0' → logprob: -5.944079399108887
    7. ' ' → logprob: -7.944079399108887
    8. 'f' → logprob: -8.569079399108887
    9. 'None' → logprob: -8.694079399108887
    10. '-f' → logprob: -8.944079399108887

Token 1339: '0' (ID: 15)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05465927720069885
    2. '-' → logprob: -3.304659366607666
    3. '-s' → logprob: -4.804659366607666
    4. '0' → logprob: -5.054659366607666
    5. '-f' → logprob: -7.554659366607666
    6. ' -' → logprob: -8.179658889770508
    7. ' s' → logprob: -8.554658889770508
    8. 'e' → logprob: -8.679658889770508
    9. 'f' → logprob: -8.929658889770508
    10. '-e' → logprob: -9.429658889770508

Token 1340: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0385909229516983
    2. ':
' → logprob: -4.288590908050537
    3. '   ' → logprob: -4.538590908050537
    4. '       ' → logprob: -4.538590908050537
    5. '[' → logprob: -7.538590908050537
    6. '	' → logprob: -7.788590908050537
    7. '):' → logprob: -7.788590908050537
    8. ':return' → logprob: -8.038591384887695
    9. '<|end|>' → logprob: -8.788591384887695
    10. ',' → logprob: -9.038591384887695

Token 1341: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1125999242067337
    2. ' continue' → logprob: -2.9875998497009277
    3. 'continue' → logprob: -3.8625998497009277
    4. '   ' → logprob: -3.9875998497009277
    5. '	continue' → logprob: -5.237599849700928
    6. '0' → logprob: -6.487599849700928
    7. ' f' → logprob: -6.612599849700928
    8. ':' → logprob: -6.612599849700928
    9. '           ' → logprob: -7.237599849700928
    10. '	' → logprob: -7.362599849700928

Token 1342: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -0.12050137668848038
    2. ' f' → logprob: -2.6205012798309326
    3. 'v' → logprob: -4.120501518249512
    4. '   ' → logprob: -4.870501518249512
    5. '       ' → logprob: -5.245501518249512
    6. '0' → logprob: -5.745501518249512
    7. 's' → logprob: -6.495501518249512
    8. ' v' → logprob: -6.495501518249512
    9. 'continue' → logprob: -6.620501518249512
    10. '#' → logprob: -6.995501518249512

Token 1343: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.20971915125846863
    2. '[' → logprob: -2.459719181060791
    3. '=' → logprob: -3.209719181060791
    4. 's' → logprob: -3.584719181060791
    5. '[t' → logprob: -3.834719181060791
    6. '0' → logprob: -5.459719181060791
    7. '[-' → logprob: -5.834719181060791
    8. ' =' → logprob: -6.334719181060791
    9. 't' → logprob: -6.709719181060791
    10. '[i' → logprob: -6.959719181060791

Token 1344: ']' (ID: 60)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.5456998944282532
    2. '].' → logprob: -0.9206998944282532
    3. ']' → logprob: -4.7957000732421875
    4. ']+=' → logprob: -5.2957000732421875
    5. '[' → logprob: -5.9207000732421875
    6. 'append' → logprob: -6.7957000732421875
    7. '   ' → logprob: -6.7957000732421875
    8. '])' → logprob: -7.0457000732421875
    9. '.' → logprob: -7.4207000732421875
    10. '       ' → logprob: -7.5457000732421875

Token 1345: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04443145915865898
    2. ' =' → logprob: -4.044431686401367
    3. '+=' → logprob: -4.544431686401367
    4. '.append' → logprob: -5.044431686401367
    5. ']' → logprob: -6.044431686401367
    6. '[' → logprob: -6.169431686401367
    7. ']+=' → logprob: -6.794431686401367
    8. ']=' → logprob: -7.294431686401367
    9. ' +=' → logprob: -7.419431686401367
    10. '   ' → logprob: -8.169431686401367

Token 1346: ' d' (ID: 272)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6894465684890747
    2. 'd' → logprob: -1.0644465684890747
    3. '1' → logprob: -2.439446449279785
    4. 't' → logprob: -3.064446449279785
    5. 'max' → logprob: -4.939446449279785
    6. 's' → logprob: -5.064446449279785
    7. 'True' → logprob: -5.939446449279785
    8. 'min' → logprob: -7.189446449279785
    9. '-' → logprob: -7.439446449279785
    10. 'i' → logprob: -7.939446449279785

Token 1347: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1348: 'po' (ID: 2519)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1349: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.30727460980415344
    2. 'w' → logprob: -2.182274580001831
    3. 'p' → logprob: -2.307274580001831
    4. 'ss' → logprob: -3.432274580001831
    5. 'st' → logprob: -4.18227481842041
    6. 'r' → logprob: -7.30727481842041
    7. 't' → logprob: -7.43227481842041
    8. 'ws' → logprob: -7.43227481842041
    9. '#' → logprob: -7.55727481842041
    10. 'rt' → logprob: -7.80727481842041

Token 1350: ' [' (ID: 723)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.6464674472808838
    2. '[' → logprob: -1.0214674472808838
    3. '0' → logprob: -2.521467447280884
    4. '[]' → logprob: -4.521467208862305
    5. '[n' → logprob: -5.021467208862305
    6. '[-' → logprob: -5.271467208862305
    7. 'n' → logprob: -5.521467208862305
    8. '[I' → logprob: -6.396467208862305
    9. 'I' → logprob: -6.521467208862305
    10. '[len' → logprob: -7.146467208862305

Token 1351: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.27735915780067444
    2. '-' → logprob: -1.527359127998352
    3. '[]' → logprob: -5.1523590087890625
    4. '[' → logprob: -5.4023590087890625
    5. 'None' → logprob: -5.6523590087890625
    6. 'False' → logprob: -5.6523590087890625
    7. 'n' → logprob: -5.6523590087890625
    8. ']' → logprob: -6.6523590087890625
    9. 'i' → logprob: -7.5273590087890625
    10. '[n' → logprob: -7.7773590087890625

Token 1352: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9805217385292053
    2. 'for' → logprob: -1.2305216789245605
    3. ']' → logprob: -1.3555216789245605
    4. ',' → logprob: -3.2305216789245605
    5. '0' → logprob: -4.6055216789245605
    6. ')' → logprob: -5.4805216789245605
    7. '5' → logprob: -5.9805216789245605
    8. '[' → logprob: -6.1055216789245605
    9. ' ' → logprob: -6.2305216789245605
    10. '6' → logprob: -6.3555216789245605

Token 1353: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.694345235824585
    2. 'range' → logprob: -1.319345235824585
    3. ' range' → logprob: -1.569345235824585
    4. '_' → logprob: -4.194345474243164
    5. ' i' → logprob: -4.694345474243164
    6. 'n' → logprob: -8.069345474243164
    7. ' _' → logprob: -9.194345474243164
    8. '_i' → logprob: -9.569345474243164
    9. ' ' → logprob: -9.694345474243164
    10. '_range' → logprob: -9.819345474243164

Token 1354: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1131732389330864
    2. ' in' → logprob: -2.238173246383667
    3. 'range' → logprob: -8.238173484802246
    4. 'i' → logprob: -10.113173484802246
    5. ' range' → logprob: -10.863173484802246
    6. 'n' → logprob: -11.363173484802246
    7. ' ' → logprob: -12.613173484802246
    8. '  ' → logprob: -13.113173484802246
    9. '(range' → logprob: -13.113173484802246
    10. 'for' → logprob: -13.613173484802246

Token 1355: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.2729995988775045e-06
    2. ' range' → logprob: -12.000006675720215
    3. '(range' → logprob: -17.0000057220459
    4. '
' → logprob: -18.7500057220459
    5. 'n' → logprob: -19.8750057220459
    6. '[' → logprob: -19.8750057220459
    7. 'ran' → logprob: -20.0000057220459
    8. '	range' → logprob: -20.3750057220459
    9. 'rang' → logprob: -20.6250057220459
    10. '```' → logprob: -20.6250057220459

Token 1356: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0034770015627145767
    2. ' range' → logprob: -6.003477096557617
    3. 'n' → logprob: -7.253477096557617
    4. '(n' → logprob: -8.628477096557617
    5. '(range' → logprob: -9.128477096557617
    6. ' n' → logprob: -13.253477096557617
    7. 'len' → logprob: -13.378477096557617
    8. '	range' → logprob: -14.378477096557617
    9. '
' → logprob: -14.753477096557617
    10. 'in' → logprob: -15.378477096557617

Token 1357: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0011798698687925935
    2. ')' → logprob: -7.2511796951293945
    3. ']' → logprob: -8.876179695129395
    4. '])' → logprob: -9.626179695129395
    5. ')]
' → logprob: -9.626179695129395
    6. '])]' → logprob: -9.626179695129395
    7. ')])' → logprob: -9.751179695129395
    8. ' )' → logprob: -10.626179695129395
    9. '#' → logprob: -10.876179695129395
    10. '[' → logprob: -11.501179695129395

Token 1358: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1672533750534058
    2. 'range' → logprob: -1.6672533750534058
    3. ')]' → logprob: -1.9172533750534058
    4. '0' → logprob: -2.0422534942626953
    5. ' range' → logprob: -2.6672534942626953
    6. ')' → logprob: -3.1672534942626953
    7. '1' → logprob: -3.2922534942626953
    8. '])' → logprob: -3.7922534942626953
    9. ']' → logprob: -4.292253494262695
    10. '[' → logprob: -4.792253494262695

Token 1359: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.01876598596572876
    2. ']' → logprob: -4.018765926361084
    3. ')' → logprob: -7.768765926361084
    4. ')]
' → logprob: -9.643766403198242
    5. '])' → logprob: -10.268766403198242
    6. '#' → logprob: -11.018766403198242
    7. '])]' → logprob: -11.018766403198242
    8. '[' → logprob: -11.393766403198242
    9. ' ]' → logprob: -11.393766403198242
    10. ')])' → logprob: -11.893766403198242

Token 1360: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1361: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004925066023133695
    2. ' i' → logprob: -8.625492095947266
    3. 's' → logprob: -9.250492095947266
    4. 'p' → logprob: -10.000492095947266
    5. 'u' → logprob: -10.000492095947266
    6. '_' → logprob: -10.875492095947266
    7. 'v' → logprob: -11.000492095947266
    8. '...' → logprob: -11.000492095947266
    9. 'x' → logprob: -11.500492095947266
    10. '_i' → logprob: -11.625492095947266

Token 1362: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14325276017189026
    2. 'in' → logprob: -2.0182528495788574
    3. '(' → logprob: -8.7682523727417
    4. '()' → logprob: -9.0182523727417
    5. 'i' → logprob: -9.8932523727417
    6. '(n' → logprob: -10.1432523727417
    7. 'n' → logprob: -10.1432523727417
    8. '(i' → logprob: -10.5182523727417
    9. ' i' → logprob: -10.6432523727417
    10. 'import' → logprob: -11.2682523727417

Token 1363: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08908876776695251
    2. ' range' → logprob: -2.4640886783599854
    3. 'n' → logprob: -9.214088439941406
    4. '(range' → logprob: -11.089088439941406
    5. '
' → logprob: -11.964088439941406
    6. 'in' → logprob: -12.214088439941406
    7. '[' → logprob: -12.589088439941406
    8. '(' → logprob: -12.839088439941406
    9. ' ' → logprob: -12.964088439941406
    10. '	range' → logprob: -13.089088439941406

Token 1364: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03329477459192276
    2. 'n' → logprob: -3.658294677734375
    3. ' range' → logprob: -5.283294677734375
    4. '(n' → logprob: -6.658294677734375
    5. 'po' → logprob: -8.283294677734375
    6. '(' → logprob: -8.908294677734375
    7. '(range' → logprob: -9.408294677734375
    8. '1' → logprob: -9.908294677734375
    9. '
' → logprob: -11.158294677734375
    10. '[n' → logprob: -11.658294677734375

Token 1365: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6647933125495911
    2. ')' → logprob: -1.4147932529449463
    3. '+' → logprob: -2.4147932529449463
    4. '[' → logprob: -2.7897932529449463
    5. ')]' → logprob: -3.7897932529449463
    6. ']' → logprob: -4.164793491363525
    7. '-' → logprob: -4.539793491363525
    8. '[i' → logprob: -4.539793491363525
    9. '):
' → logprob: -4.664793491363525
    10. '   ' → logprob: -5.039793491363525

Token 1366: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41220229864120483
    2. '	for' → logprob: -1.6622023582458496
    3. '	if' → logprob: -3.0372023582458496
    4. '	' → logprob: -3.5372023582458496
    5. '	v' → logprob: -4.16220235824585
    6. ' for' → logprob: -4.41220235824585
    7. '	s' → logprob: -5.53720235824585
    8. '	print' → logprob: -5.66220235824585
    9. '<|end|>' → logprob: -5.66220235824585
    10. '	p' → logprob: -5.78720235824585

Token 1367: ' po' (ID: 2482)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1951590776443481
    2. ' for' → logprob: -1.6951590776443481
    3. 'po' (adapté à ' po') → logprob: -1.8201590776443481
    4. ' po' → logprob: -2.0701589584350586
    5. '   ' → logprob: -2.4451589584350586
    6. 'if' → logprob: -2.5701589584350586
    7. ' if' → logprob: -3.3201589584350586
    8. 'v' → logprob: -4.570158958435059
    9. 'f' → logprob: -5.945158958435059
    10. 'n' → logprob: -6.820158958435059

Token 1368: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.10361580550670624
    2. '[' → logprob: -2.4786157608032227
    3. '=' → logprob: -5.228615760803223
    4. ' =' → logprob: -5.478615760803223
    5. '   ' → logprob: -6.353615760803223
    6. ' [' → logprob: -6.728615760803223
    7. '+=' → logprob: -7.728615760803223
    8. '=[' → logprob: -8.353615760803223
    9. ' +=' → logprob: -8.603615760803223
    10. ']' → logprob: -8.728615760803223

Token 1369: '+' (ID: 10)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7646157145500183
    2. ']+=' → logprob: -1.014615774154663
    3. '+' → logprob: -2.264615774154663
    4. '+=' → logprob: -4.014615535736084
    5. ']+' → logprob: -4.264615535736084
    6. ']=' → logprob: -4.764615535736084
    7. '[' → logprob: -4.889615535736084
    8. '[i' → logprob: -5.014615535736084
    9. ' +=' → logprob: -5.514615535736084
    10. ' ]' → logprob: -6.389615535736084

Token 1370: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000776634959038347
    2. ' ' → logprob: -8.000776290893555
    3. 'i' → logprob: -8.250776290893555
    4. '2' → logprob: -10.000776290893555
    5. '   ' → logprob: -10.000776290893555
    6. ' i' → logprob: -10.625776290893555
    7. '0' → logprob: -11.250776290893555
    8. 's' → logprob: -11.625776290893555
    9. '```' → logprob: -11.688276290893555
    10. ']' → logprob: -11.938276290893555

Token 1371: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0108406450599432
    2. ']=' → logprob: -4.63584041595459
    3. ']+=' → logprob: -7.26084041595459
    4. ']<<' → logprob: -8.51084041595459
    5. ' ]' → logprob: -9.51084041595459
    6. '**' → logprob: -11.13584041595459
    7. ']=(' → logprob: -11.26084041595459
    8. ']
' → logprob: -11.38584041595459
    9. ')' → logprob: -11.51084041595459
    10. '   ' → logprob: -11.63584041595459

Token 1372: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04770147055387497
    2. '*=' → logprob: -3.297701358795166
    3. ' =' → logprob: -4.672701358795166
    4. ' *=' → logprob: -9.547701835632324
    5. ' <<=' → logprob: -9.797701835632324
    6. '*' → logprob: -10.047701835632324
    7. '[' → logprob: -10.672701835632324
    8. '<<' → logprob: -11.172701835632324
    9. '   ' → logprob: -11.672701835632324
    10. '+=' → logprob: -11.797701835632324

Token 1373: ' po' (ID: 2482)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.00010962257510982454
    2. '2' → logprob: -9.500109672546387
    3. ' po' → logprob: -10.625109672546387
    4. '(po' → logprob: -11.750109672546387
    5. ' ' → logprob: -15.000109672546387
    6. '   ' → logprob: -15.000109672546387
    7. '_po' → logprob: -15.250109672546387
    8. '(' → logprob: -15.375109672546387
    9. '10' → logprob: -15.500109672546387
    10. '1' → logprob: -15.750109672546387

Token 1374: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01096965279430151
    2. 'i' → logprob: -4.635969638824463
    3. '[' → logprob: -6.885969638824463
    4. ' i' → logprob: -8.760970115661621
    5. '	i' → logprob: -10.885970115661621
    6. '(i' → logprob: -11.635970115661621
    7. '_i' → logprob: -13.385970115661621
    8. '[
' → logprob: -13.510970115661621
    9. ' ' → logprob: -13.760970115661621
    10. '1' → logprob: -14.760970115661621

Token 1375: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.00392582593485713
    2. ' *' → logprob: -6.253925800323486
    3. '*i' → logprob: -7.128925800323486
    4. '2' → logprob: -7.503925800323486
    5. ']*' → logprob: -8.753926277160645
    6. '[' → logprob: -9.378926277160645
    7. '<<' → logprob: -9.503926277160645
    8. '[i' → logprob: -9.503926277160645
    9. ' ' → logprob: -9.753926277160645
    10. '**' → logprob: -10.128926277160645

Token 1376: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.22370389103889465
    2. 'i' → logprob: -2.0987038612365723
    3. '(n' → logprob: -3.0987038612365723
    4. '(i' → logprob: -3.9737038612365723
    5. '(' → logprob: -4.473703861236572
    6. '10' → logprob: -6.848703861236572
    7. 'n' → logprob: -7.223703861236572
    8. '-' → logprob: -8.97370433807373
    9. '   ' → logprob: -9.09870433807373
    10. '1' → logprob: -9.09870433807373

Token 1377: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1378: 'dp' (ID: 19037)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1379: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1380: ' [[' (ID: 9237)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3896767497062683
    2. '[-' → logprob: -1.389676809310913
    3. '[[' → logprob: -2.639676809310913
    4. '{}' → logprob: -6.764676570892334
    5. '{' → logprob: -7.764676570892334
    6. '[n' → logprob: -8.139677047729492
    7. '{-' → logprob: -9.264677047729492
    8. 'default' → logprob: -9.389677047729492
    9. '([-' → logprob: -10.764677047729492
    10. '[(' → logprob: -11.014677047729492

Token 1381: 'float' (ID: 7829)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.27592822909355164
    2. '0' → logprob: -2.025928258895874
    3. 'False' → logprob: -2.400928258895874
    4. 'float' → logprob: -4.275928020477295
    5. '-f' → logprob: -5.650928020477295
    6. '[' → logprob: -8.525928497314453
    7. '(' → logprob: -8.650928497314453
    8. '1' → logprob: -8.900928497314453
    9. 'None' → logprob: -9.275928497314453
    10. '
' → logprob: -9.525928497314453

Token 1382: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.000918604782782495
    2. '('' → logprob: -7.125918388366699
    3. '(' → logprob: -9.2509183883667
    4. '"' → logprob: -11.6259183883667
    5. '(
' → logprob: -12.0009183883667
    6. 'inf' → logprob: -14.1259183883667
    7. 'INF' → logprob: -14.7509183883667
    8. '(in' → logprob: -15.0009183883667
    9. '(
' → logprob: -15.1259183883667
    10. '(i' → logprob: -15.1259183883667

Token 1383: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.04495014250278473
    2. '"' → logprob: -3.544950246810913
    3. 'INF' → logprob: -4.294950008392334
    4. ''' → logprob: -6.669950008392334
    5. ''in' → logprob: -9.294950485229492
    6. ' inf' → logprob: -10.419950485229492
    7. ''s' → logprob: -11.294950485229492
    8. '"in' → logprob: -11.294950485229492
    9. ' INF' → logprob: -12.169950485229492
    10. '-inf' → logprob: -12.294950485229492

Token 1384: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.12628310918807983
    2. ')' → logprob: -2.8762831687927246
    3. '[' → logprob: -3.2512831687927246
    4. ' ")' → logprob: -4.626283168792725
    5. ']' → logprob: -4.751283168792725
    6. '"' → logprob: -6.626283168792725
    7. '")]' → logprob: -7.126283168792725
    8. ')")' → logprob: -7.126283168792725
    9. '"),' → logprob: -7.626283168792725
    10. ',' → logprob: -8.251282691955566

Token 1385: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18117044866085052
    2. 'for' → logprob: -1.8061704635620117
    3. ']' → logprob: -7.181170463562012
    4. ')' → logprob: -7.931170463562012
    5. '   ' → logprob: -9.306170463562012
    6. '	for' → logprob: -9.806170463562012
    7. ',' → logprob: -10.056170463562012
    8. '[' → logprob: -10.431170463562012
    9. '    ' → logprob: -11.806170463562012
    10. '[]' → logprob: -11.931170463562012

Token 1386: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2813529074192047
    2. ' range' → logprob: -1.4063528776168823
    3. 'j' → logprob: -9.156352996826172
    4. '(range' → logprob: -10.406352996826172
    5. 'i' → logprob: -10.781352996826172
    6. '   ' → logprob: -11.406352996826172
    7. ' j' → logprob: -11.906352996826172
    8. 'for' → logprob: -11.906352996826172
    9. 'in' → logprob: -12.531352996826172
    10. '
' → logprob: -12.656352996826172

Token 1387: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.15548020601272583
    2. 'in' → logprob: -2.280480146408081
    3. 'range' → logprob: -3.530480146408081
    4. '(range' → logprob: -5.28048038482666
    5. ' range' → logprob: -5.65548038482666
    6. 'for' → logprob: -5.65548038482666
    7. '(n' → logprob: -9.15548038482666
    8. ' for' → logprob: -9.15548038482666
    9. 'n' → logprob: -9.78048038482666
    10. '
' → logprob: -10.28048038482666

Token 1388: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002669384120963514
    2. ' range' → logprob: -8.250267028808594
    3. '(range' → logprob: -12.125267028808594
    4. '   ' → logprob: -16.625267028808594
    5. '
' → logprob: -17.500267028808594
    6. '	range' → logprob: -17.750267028808594
    7. '```' → logprob: -19.125267028808594
    8. '
' → logprob: -19.375267028808594
    9. '``' → logprob: -19.375267028808594
    10. ' ' → logprob: -19.500267028808594

Token 1389: '(po' (ID: 188807)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0025493851862847805
    2. '(range' → logprob: -6.127549171447754
    3. ' range' → logprob: -8.252549171447754
    4. '(n' → logprob: -9.627549171447754
    5. 'n' → logprob: -10.502549171447754
    6. '
' → logprob: -11.877549171447754
    7. '   ' → logprob: -13.127549171447754
    8. '[n' → logprob: -15.127549171447754
    9. '
' → logprob: -15.377549171447754
    10. '	range' → logprob: -15.877549171447754

Token 1390: '[n' (ID: 15433)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.4010016620159149
    2. 'i' → logprob: -1.5260016918182373
    3. '(n' → logprob: -2.7760016918182373
    4. '[i' → logprob: -3.6510016918182373
    5. '+' → logprob: -4.651001453399658
    6. 'n' → logprob: -5.151001453399658
    7. '(' → logprob: -5.901001453399658
    8. ')])' → logprob: -6.276001453399658
    9. '1' → logprob: -7.151001453399658
    10. ')]' → logprob: -7.776001453399658

Token 1391: '])]' (ID: 178925)
  Prédit: '])]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])]' → logprob: -0.44708767533302307
    2. ')])' → logprob: -1.6970876455307007
    3. '])' → logprob: -1.9470876455307007
    4. ']])' → logprob: -4.07208776473999
    5. '[i' → logprob: -4.44708776473999
    6. ']' → logprob: -6.19708776473999
    7. '+' → logprob: -7.44708776473999
    8. ')' → logprob: -7.44708776473999
    9. '])]
' → logprob: -7.57208776473999
    10. '-' → logprob: -7.82208776473999

Token 1392: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20248836278915405
    2. 'for' → logprob: -1.8274884223937988
    3. ']' → logprob: -3.827488422393799
    4. ' ]' → logprob: -8.57748794555664
    5. '   ' → logprob: -9.07748794555664
    6. ')' → logprob: -9.32748794555664
    7. '[' → logprob: -9.57748794555664
    8. '	for' → logprob: -9.70248794555664
    9. ' ' → logprob: -10.07748794555664
    10. '       ' → logprob: -10.57748794555664

Token 1393: ' j' (ID: 441)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.298653781414032
    2. ' range' → logprob: -1.4236538410186768
    3. 'i' → logprob: -4.173653602600098
    4. ' i' → logprob: -6.298653602600098
    5. '(range' → logprob: -10.048653602600098
    6. 'n' → logprob: -10.298653602600098
    7. '(i' → logprob: -11.673653602600098
    8. 'j' → logprob: -11.923653602600098
    9. '   ' → logprob: -12.423653602600098
    10. ' ' → logprob: -12.548653602600098

Token 1394: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.9742529988288879
    2. '(n' → logprob: -1.2242529392242432
    3. '(range' → logprob: -1.3492529392242432
    4. ' range' → logprob: -2.974252939224243
    5. '(' → logprob: -4.474253177642822
    6. ' in' → logprob: -5.724253177642822
    7. 'for' → logprob: -6.599253177642822
    8. 'n' → logprob: -7.349253177642822
    9. ' (' → logprob: -7.849253177642822
    10. ' for' → logprob: -8.224252700805664

Token 1395: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014203932136297226
    2. ' range' → logprob: -4.264204025268555
    3. '(range' → logprob: -10.264204025268555
    4. '[n' → logprob: -12.514204025268555
    5. '(n' → logprob: -14.014204025268555
    6. 'n' → logprob: -14.639204025268555
    7. '[' → logprob: -15.014204025268555
    8. '
' → logprob: -15.639204025268555
    9. '	range' → logprob: -15.889204025268555
    10. 'for' → logprob: -17.514204025268555

Token 1396: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.021697532385587692
    2. ' range' → logprob: -3.896697521209717
    3. '(range' → logprob: -6.896697521209717
    4. '(n' → logprob: -9.146697998046875
    5. '[n' → logprob: -11.146697998046875
    6. 'n' → logprob: -11.271697998046875
    7. '	range' → logprob: -12.146697998046875
    8. '
' → logprob: -12.646697998046875
    9. '.range' → logprob: -15.146697998046875
    10. '   ' → logprob: -15.521697998046875

Token 1397: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0025374903343617916
    2. '+' → logprob: -6.377537727355957
    3. ')]
' → logprob: -8.002537727355957
    4. ')])' → logprob: -9.002537727355957
    5. ' )' → logprob: -9.127537727355957
    6. ')' → logprob: -9.127537727355957
    7. ')]
' → logprob: -9.627537727355957
    8. ')][' → logprob: -10.627537727355957
    9. '-' → logprob: -10.877537727355957
    10. '])]' → logprob: -11.377537727355957

Token 1398: 'dp' (ID: 19037)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8639917969703674
    2. '[' → logprob: -1.4889917373657227
    3. '	' → logprob: -2.1139917373657227
    4. '<|end|>' → logprob: -2.2389917373657227
    5. '   ' → logprob: -3.1139917373657227
    6. ' for' → logprob: -4.113991737365723
    7. '	for' → logprob: -4.613991737365723
    8. 'for' → logprob: -4.988991737365723
    9. '    ' → logprob: -4.988991737365723
    10. ')' → logprob: -4.988991737365723

Token 1399: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00548963388428092
    2. '<|end|>' → logprob: -5.505489826202393
    3. '0' → logprob: -7.505489826202393
    4. '=' → logprob: -8.380489349365234
    5. '<|end|>' → logprob: -9.380489349365234
    6. '][' → logprob: -9.380489349365234
    7. '[...,' → logprob: -9.505489349365234
    8. '[s' → logprob: -9.630489349365234
    9. '[
' → logprob: -9.880489349365234
    10. '[n' → logprob: -10.255489349365234

Token 1400: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.29340603761375e-05
    2. '[' → logprob: -10.625092506408691
    3. 's' → logprob: -10.875092506408691
    4. '(' → logprob: -11.375092506408691
    5. '1' → logprob: -12.000092506408691
    6. 'f' → logprob: -12.125092506408691
    7. ' ' → logprob: -12.250092506408691
    8. 'i' → logprob: -12.625092506408691
    9. '
' → logprob: -12.750092506408691
    10. '<|end|>' → logprob: -12.875092506408691

Token 1401: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0008752549765631557
    2. ']' → logprob: -7.625875473022461
    3. '[' → logprob: -8.625875473022461
    4. ' ][' → logprob: -9.625875473022461
    5. '()][' → logprob: -10.000875473022461
    6. ')][' → logprob: -10.125875473022461
    7. '][]' → logprob: -10.750875473022461
    8. '])' → logprob: -11.000875473022461
    9. ']][' → logprob: -11.875875473022461
    10. '"][' → logprob: -12.750875473022461

Token 1402: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006664486136287451
    2. '1' → logprob: -8.000666618347168
    3. 'po' → logprob: -8.125666618347168
    4. '(' → logprob: -11.000666618347168
    5. '
' → logprob: -12.500666618347168
    6. ' ' → logprob: -12.750666618347168
    7. ']' → logprob: -13.875666618347168
    8. '(po' → logprob: -14.000666618347168
    9. '-' → logprob: -14.063166618347168
    10. 'pi' → logprob: -14.188166618347168

Token 1403: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.021778717637062073
    2. '+' → logprob: -4.396778583526611
    3. ']+' → logprob: -5.896778583526611
    4. ']+=' → logprob: -6.021778583526611
    5. '])' → logprob: -6.896778583526611
    6. '[' → logprob: -7.021778583526611
    7. ' ]' → logprob: -7.396778583526611
    8. ']=' → logprob: -7.771778583526611
    9. '+]' → logprob: -8.39677906036377
    10. '][' → logprob: -8.89677906036377

Token 1404: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09018808603286743
    2. ' =' → logprob: -2.4651880264282227
    3. ']' → logprob: -6.840188026428223
    4. ']=' → logprob: -8.715188026428223
    5. '[' → logprob: -12.090188026428223
    6. ')' → logprob: -13.090188026428223
    7. '][' → logprob: -13.590188026428223
    8. ' ]' → logprob: -13.840188026428223
    9. '<|end|>' → logprob: -14.090188026428223
    10. '])' → logprob: -14.840188026428223

Token 1405: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '1' → logprob: -17.500017166137695
    4. '   ' → logprob: -17.625017166137695
    5. 'float' → logprob: -17.687517166137695
    6. 'f' → logprob: -18.187517166137695
    7. '  ' → logprob: -18.250017166137695
    8. '(' → logprob: -18.312517166137695
    9. '[' → logprob: -18.437517166137695
    10. '۰' → logprob: -18.437517166137695

Token 1406: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. 'f' → logprob: -17.250001907348633
    4. 'float' → logprob: -19.250001907348633
    5. '۰' → logprob: -20.000001907348633
    6. '(' → logprob: -20.500001907348633
    7. '1' → logprob: -20.625001907348633
    8. '[' → logprob: -21.437501907348633
    9. '   ' → logprob: -21.437501907348633
    10. '  ' → logprob: -21.500001907348633

Token 1407: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1408: 'for' (ID: 1938)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6646206378936768
    2. 'for' → logprob: -2.0396206378936768
    3. '   ' → logprob: -2.0396206378936768
    4. '	for' → logprob: -2.1646206378936768
    5. '    ' → logprob: -3.5396206378936768
    6. '<|end|>' → logprob: -3.6646206378936768
    7. '	' → logprob: -4.164620399475098
    8. ' ' → logprob: -4.289620399475098
    9. '       ' → logprob: -5.039620399475098
    10. ')' → logprob: -5.414620399475098

Token 1409: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7248931527137756
    2. 'i' → logprob: -0.9748931527137756
    3. ' j' → logprob: -2.849893093109131
    4. ' i' → logprob: -3.224893093109131
    5. 'k' → logprob: -3.349893093109131
    6. ' k' → logprob: -5.849893093109131
    7. 's' → logprob: -7.349893093109131
    8. 'v' → logprob: -7.349893093109131
    9. 'x' → logprob: -8.099893569946289
    10. 'mask' → logprob: -8.224893569946289

Token 1410: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10044389218091965
    2. 'in' → logprob: -2.3504438400268555
    3. ' ' → logprob: -9.725443840026855
    4. '[' → logprob: -10.350443840026855
    5. ' j' → logprob: -10.475443840026855
    6. ')' → logprob: -10.850443840026855
    7. ',' → logprob: -10.850443840026855
    8. 'n' → logprob: -11.600443840026855
    9. ',j' → logprob: -11.600443840026855
    10. '0' → logprob: -11.975443840026855

Token 1411: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20148758590221405
    2. ' range' → logprob: -1.7014875411987305
    3. '1' → logprob: -10.07648754119873
    4. '0' → logprob: -11.20148754119873
    5. ' in' → logprob: -11.70148754119873
    6. 'in' → logprob: -12.82648754119873
    7. '(range' → logprob: -13.07648754119873
    8. 'n' → logprob: -13.32648754119873
    9. ' ' → logprob: -14.07648754119873
    10. 'i' → logprob: -14.32648754119873

Token 1412: '(po' (ID: 188807)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8423064947128296
    2. 'n' → logprob: -0.8423064947128296
    3. '(' → logprob: -2.967306613922119
    4. 'range' → logprob: -3.217306613922119
    5. '(n' → logprob: -3.342306613922119
    6. '0' → logprob: -5.342306613922119
    7. ' range' → logprob: -5.842306613922119
    8. ' n' → logprob: -5.967306613922119
    9. '   ' → logprob: -7.592306613922119
    10. '2' → logprob: -8.467306137084961

Token 1413: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.013301048427820206
    2. 'n' → logprob: -4.513300895690918
    3. '[j' → logprob: -6.513300895690918
    4. '[' → logprob: -7.263300895690918
    5. '(n' → logprob: -10.763300895690918
    6. '][' → logprob: -11.138300895690918
    7. '[
' → logprob: -11.763300895690918
    8. ')n' → logprob: -12.013300895690918
    9. '[i' → logprob: -12.263300895690918
    10. '<n' → logprob: -13.138300895690918

Token 1414: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.41446754336357117
    2. ')]' → logprob: -1.7894675731658936
    3. ']' → logprob: -2.4144675731658936
    4. '])]' → logprob: -3.0394675731658936
    5. '])' → logprob: -4.4144673347473145
    6. ')' → logprob: -4.6644673347473145
    7. '[' → logprob: -5.4144673347473145
    8. '):' → logprob: -5.9144673347473145
    9. '-' → logprob: -6.1644673347473145
    10. ')])' → logprob: -6.9144673347473145

Token 1415: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2855550944805145
    2. ' for' → logprob: -1.535555124282837
    3. '       ' → logprob: -4.535554885864258
    4. '<|end|>' → logprob: -4.535554885864258
    5. '	for' → logprob: -5.285554885864258
    6. 'for' → logprob: -5.410554885864258
    7. ' ' → logprob: -7.285554885864258
    8. ' in' → logprob: -8.660554885864258
    9. '(n' → logprob: -8.910554885864258
    10. '  ' → logprob: -8.910554885864258

Token 1416: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00661850068718195
    2. '   ' → logprob: -5.506618499755859
    3. ' for' → logprob: -6.006618499755859
    4. 'n' → logprob: -9.63161849975586
    5. 'i' → logprob: -12.25661849975586
    6. '       ' → logprob: -13.25661849975586
    7. '	for' → logprob: -14.00661849975586
    8. 'range' → logprob: -14.38161849975586
    9. ' ' → logprob: -14.75661849975586
    10. ' n' → logprob: -16.00661849975586

Token 1417: ' x' (ID: 1215)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.012397686019539833
    2. 'k' → logprob: -4.512397766113281
    3. 'u' → logprob: -7.512397766113281
    4. ' i' → logprob: -7.512397766113281
    5. 'v' → logprob: -8.887397766113281
    6. 'x' → logprob: -10.387397766113281
    7. 'j' → logprob: -10.637397766113281
    8. 't' → logprob: -11.637397766113281
    9. '   ' → logprob: -11.887397766113281
    10. 'a' → logprob: -11.887397766113281

Token 1418: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1128719300031662
    2. 'in' → logprob: -2.2378718852996826
    3. '0' → logprob: -11.112872123718262
    4. ' ' → logprob: -11.862872123718262
    5. 'x' → logprob: -11.987872123718262
    6. 'n' → logprob: -12.237872123718262
    7. 'i' → logprob: -12.487872123718262
    8. '   ' → logprob: -12.862872123718262
    9. '_' → logprob: -13.237872123718262
    10. 'range' → logprob: -13.612872123718262

Token 1419: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001503313542343676
    2. ' range' → logprob: -6.5015034675598145
    3. '(range' → logprob: -14.501502990722656
    4. 'x' → logprob: -15.376502990722656
    5. '	range' → logprob: -15.501502990722656
    6. 'in' → logprob: -17.626502990722656
    7. '
' → logprob: -17.751502990722656
    8. 'r' → logprob: -18.001502990722656
    9. '0' → logprob: -18.126502990722656
    10. 'n' → logprob: -18.501502990722656

Token 1420: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0026176320388913155
    2. ' n' → logprob: -6.627617835998535
    3. '(n' → logprob: -6.752617835998535
    4. '	n' → logprob: -9.502617835998535
    5. '1' → logprob: -10.377617835998535
    6. '(' → logprob: -12.502617835998535
    7. ')n' → logprob: -12.627617835998535
    8. '[n' → logprob: -13.002617835998535
    9. '0' → logprob: -13.127617835998535
    10. '   ' → logprob: -13.377617835998535

Token 1421: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08931750804185867
    2. '+' → logprob: -2.589317560195923
    3. '):
' → logprob: -4.714317321777344
    4. ')' → logprob: -7.964317321777344
    5. ']):' → logprob: -7.964317321777344
    6. ']:' → logprob: -8.214317321777344
    7. '   ' → logprob: -8.339317321777344
    8. ':' → logprob: -10.089317321777344
    9. ' +' → logprob: -10.714317321777344
    10. '**' → logprob: -10.964317321777344

Token 1422: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02300156280398369
    2. '	' → logprob: -4.398001670837402
    3. ':' → logprob: -5.648001670837402
    4. '               ' → logprob: -6.523001670837402
    5. '                       ' → logprob: -6.898001670837402
    6. '           ' → logprob: -7.023001670837402
    7. '	   ' → logprob: -7.648001670837402
    8. ':
' → logprob: -7.648001670837402
    9. '   ' → logprob: -7.773001670837402
    10. '    ' → logprob: -7.773001670837402

Token 1423: ' if' (ID: 538)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.8589380979537964
    2. 'x' → logprob: -1.9839380979537964
    3. ' ' → logprob: -2.983938217163086
    4. 'for' → logprob: -2.983938217163086
    5. ' if' → logprob: -3.233938217163086
    6. ' for' → logprob: -3.233938217163086
    7. '    ' → logprob: -3.358938217163086
    8. 'if' (adapté à ' if') → logprob: -3.358938217163086
    9. '       ' → logprob: -3.608938217163086
    10. ')' → logprob: -3.733938217163086

Token 1424: ' po' (ID: 2482)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.037152037024497986
    2. 'f' → logprob: -4.28715181350708
    3. 'po' → logprob: -4.41215181350708
    4. '(dp' → logprob: -4.66215181350708
    5. ' dp' → logprob: -7.78715181350708
    6. '(f' → logprob: -8.287152290344238
    7. '(po' → logprob: -8.787152290344238
    8. '(x' → logprob: -9.287152290344238
    9. 'x' → logprob: -9.662152290344238
    10. 'not' → logprob: -9.912152290344238

Token 1425: '[x' (ID: 17295)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5790936350822449
    2. '[x' → logprob: -0.8290936350822449
    3. '[j' → logprob: -7.2040934562683105
    4. '[' → logprob: -7.3290934562683105
    5. 'j' → logprob: -7.7040934562683105
    6. ' x' → logprob: -8.204093933105469
    7. '```' → logprob: -8.329093933105469
    8. ']' → logprob: -8.454093933105469
    9. '(x' → logprob: -8.579093933105469
    10. '[
' → logprob: -9.329093933105469

Token 1426: ']&' (ID: 140620)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.055631961673498154
    2. ']==' → logprob: -3.4306318759918213
    3. ']+' → logprob: -4.8056321144104
    4. ']>' → logprob: -5.4306321144104
    5. ']<' → logprob: -5.8056321144104
    6. ']:
' → logprob: -7.0556321144104
    7. ']:' → logprob: -7.1806321144104
    8. '+' → logprob: -7.1806321144104
    9. ' ]' → logprob: -7.3056321144104
    10. '[' → logprob: -7.6806321144104

Token 1427: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0003948072553612292
    2. 'po' → logprob: -8.375394821166992
    3. ' j' → logprob: -8.750394821166992
    4. ' po' → logprob: -14.000394821166992
    5. '(' → logprob: -14.125394821166992
    6. '(po' → logprob: -14.250394821166992
    7. '	j' → logprob: -14.750394821166992
    8. 'x' → logprob: -14.875394821166992
    9. 'poj' → logprob: -15.000394821166992
    10. '```' → logprob: -15.125394821166992

Token 1428: ':
' (ID: 734)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4832212030887604
    2. '==' → logprob: -0.983221173286438
    3. ' and' → logprob: -5.483221054077148
    4. ':' → logprob: -5.858221054077148
    5. ':
' → logprob: -6.733221054077148
    6. ' !=' → logprob: -8.358221054077148
    7. ']==' → logprob: -8.483221054077148
    8. ')==' → logprob: -8.858221054077148
    9. '!=' → logprob: -9.483221054077148
    10. '=' → logprob: -9.733221054077148

Token 1429: '           ' (ID: 352)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -1.5625368356704712
    2. '                               ' → logprob: -1.6875368356704712
    3. '<|end|>' → logprob: -2.0625367164611816
    4. ' ' → logprob: -2.1875367164611816
    5. ':' → logprob: -2.3125367164611816
    6. '           ' → logprob: -2.8125367164611816
    7. '               ' → logprob: -3.1875367164611816
    8. '                       ' → logprob: -3.3125367164611816
    9. ':
' → logprob: -4.187536716461182
    10. ' and' → logprob: -4.187536716461182

Token 1430: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011180450208485126
    2. '           ' → logprob: -4.761180400848389
    3. ' for' → logprob: -6.511180400848389
    4. 'continue' → logprob: -7.386180400848389
    5. '               ' → logprob: -8.261180877685547
    6. 'if' → logprob: -9.011180877685547
    7. '   ' → logprob: -10.136180877685547
    8. '       ' → logprob: -11.261180877685547
    9. '	for' → logprob: -11.386180877685547
    10. ' continue' → logprob: -12.386180877685547

Token 1431: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2561745345592499
    2. 'nx' → logprob: -2.3811745643615723
    3. 'k' → logprob: -3.3811745643615723
    4. 't' → logprob: -4.256174564361572
    5. '(y' → logprob: -4.381174564361572
    6. 'v' → logprob: -4.881174564361572
    7. 's' → logprob: -4.881174564361572
    8. 'to' → logprob: -5.131174564361572
    9. 'nv' → logprob: -5.256174564361572
    10. 'u' → logprob: -5.506174564361572

Token 1432: ',d' (ID: 26159)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12704779207706451
    2. 'in' → logprob: -2.1270477771759033
    3. ' ' → logprob: -9.752047538757324
    4. '(' → logprob: -11.377047538757324
    5. 'x' → logprob: -11.377047538757324
    6. '[' → logprob: -11.502047538757324
    7. '(x' → logprob: -12.377047538757324
    8. ' x' → logprob: -12.752047538757324
    9. ' y' → logprob: -13.002047538757324
    10. 'import' → logprob: -13.127047538757324

Token 1433: ' in' (ID: 306)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.4408736824989319
    2. ' y' → logprob: -2.190873622894287
    3. ' in' → logprob: -2.315873622894287
    4. '[' → logprob: -2.690873622894287
    5. 'y' → logprob: -3.065873622894287
    6. '[x' → logprob: -4.690873622894287
    7. '[j' → logprob: -5.065873622894287
    8. '=' → logprob: -6.065873622894287
    9. ' =' → logprob: -6.690873622894287
    10. '```' → logprob: -6.690873622894287

Token 1434: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00034118397161364555
    2. 'range' → logprob: -8.750341415405273
    3. '(v' → logprob: -9.000341415405273
    4. ' v' → logprob: -10.500341415405273
    5. '[v' → logprob: -11.125341415405273
    6. 'enumer' → logprob: -11.125341415405273
    7. '[(' → logprob: -14.875341415405273
    8. '
' → logprob: -15.000341415405273
    9. ' range' → logprob: -15.000341415405273
    10. '(range' → logprob: -15.125341415405273

Token 1435: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00026646157493814826
    2. '(x' → logprob: -8.875266075134277
    3. 'x' → logprob: -9.250266075134277
    4. ':' → logprob: -11.125266075134277
    5. '[' → logprob: -12.625266075134277
    6. 'in' → logprob: -13.250266075134277
    7. '```' → logprob: -13.625266075134277
    8. '{x' → logprob: -13.750266075134277
    9. '
' → logprob: -13.875266075134277
    10. ':x' → logprob: -14.000266075134277

Token 1436: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.08264525979757309
    2. ']:' → logprob: -2.5826451778411865
    3. ':' → logprob: -6.207645416259766
    4. '():
' → logprob: -7.582645416259766
    5. '):
' → logprob: -7.832645416259766
    6. ']:
' → logprob: -8.582645416259766
    7. ':
' → logprob: -8.957645416259766
    8. ']' → logprob: -9.082645416259766
    9. '           ' → logprob: -9.582645416259766
    10. '       ' → logprob: -9.707645416259766

Token 1437: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3399864435195923
    2. '                               ' → logprob: -1.3399864435195923
    3. '                           ' → logprob: -4.839986324310303
    4. ':' → logprob: -5.464986324310303
    5. '                       ' → logprob: -5.464986324310303
    6. '                   ' → logprob: -5.964986324310303
    7. ' :' → logprob: -6.714986324310303
    8. '                                       ' → logprob: -6.714986324310303
    9. ':
' → logprob: -7.339986324310303
    10. '                                   ' → logprob: -7.339986324310303

Token 1438: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03473677858710289
    2. 'if' (adapté à ' if') → logprob: -3.9097368717193604
    3. '                               ' → logprob: -4.534736633300781
    4. ' dp' → logprob: -7.284736633300781
    5. '                                   ' → logprob: -7.409736633300781
    6. '                           ' → logprob: -7.784736633300781
    7. '   ' → logprob: -8.034736633300781
    8. ' print' → logprob: -8.409736633300781
    9. 'dp' → logprob: -8.659736633300781
    10. '                   ' → logprob: -8.659736633300781

Token 1439: ' not' (ID: 625)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.5958846211433411
    2. 'dp' → logprob: -1.7208845615386963
    3. 'not' → logprob: -2.4708845615386963
    4. '(po' → logprob: -2.9708845615386963
    5. 'f' → logprob: -3.2208845615386963
    6. '(dp' → logprob: -3.9708845615386963
    7. 'j' → logprob: -3.9708845615386963
    8. 'y' → logprob: -4.220884799957275
    9. '(not' → logprob: -4.845884799957275
    10. 'd' → logprob: -4.845884799957275

Token 1440: ' po' (ID: 2482)
  Prédit: '(po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(po' → logprob: -0.1308291256427765
    2. 'po' → logprob: -2.130829095840454
    3. ' po' → logprob: -6.255829334259033
    4. ' (' → logprob: -7.255829334259033
    5. '(p' → logprob: -7.380829334259033
    6. '(' → logprob: -7.880829334259033
    7. '((' → logprob: -8.630828857421875
    8. '(dp' → logprob: -10.755828857421875
    9. 'poi' → logprob: -11.005828857421875
    10. '(j' → logprob: -11.755828857421875

Token 1441: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.0001499060745118186
    2. '&' → logprob: -9.500149726867676
    3. '[' → logprob: -9.625149726867676
    4. '[j' → logprob: -12.500149726867676
    5. 'y' → logprob: -13.000149726867676
    6. '[x' → logprob: -13.125149726867676
    7. '[
' → logprob: -15.500149726867676
    8. '(y' → logprob: -15.625149726867676
    9. '```' → logprob: -15.625149726867676
    10. ''y' → logprob: -16.250150680541992

Token 1442: ']&' (ID: 140620)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.0017402705270797014
    2. '&
' → logprob: -6.626740455627441
    3. '[j' → logprob: -8.501740455627441
    4. ']&' → logprob: -9.376740455627441
    5. '"&' → logprob: -10.376740455627441
    6. '&r' → logprob: -10.751740455627441
    7. '&amp' → logprob: -11.376740455627441
    8. '&q' → logprob: -12.001740455627441
    9. '&i' → logprob: -12.001740455627441
    10. ' &' → logprob: -12.126740455627441

Token 1443: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0011720098555088043
    2. ' j' → logprob: -6.751172065734863
    3. '	j' → logprob: -14.501172065734863
    4. 'x' → logprob: -15.251172065734863
    5. '```' → logprob: -15.501172065734863
    6. 'po' → logprob: -15.751172065734863
    7. ' ' → logprob: -15.751172065734863
    8. '   ' → logprob: -15.751172065734863
    9. '(j' → logprob: -16.126171112060547
    10. '[j' → logprob: -16.501171112060547

Token 1444: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.32018712162971497
    2. ':' → logprob: -1.3201870918273926
    3. ' and' → logprob: -5.320187091827393
    4. '                       ' → logprob: -7.570187091827393
    5. '                   ' → logprob: -8.07018756866455
    6. '                           ' → logprob: -8.07018756866455
    7. '):
' → logprob: -8.69518756866455
    8. '               ' → logprob: -9.19518756866455
    9. ':
' → logprob: -9.19518756866455
    10. '                               ' → logprob: -9.32018756866455

Token 1445: '                   ' (ID: 699)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11214447021484375
    2. ':
' → logprob: -3.3621444702148438
    3. '                           ' → logprob: -3.4871444702148438
    4. '                       ' → logprob: -4.237144470214844
    5. '                   ' → logprob: -4.487144470214844
    6. '                               ' → logprob: -4.862144470214844
    7. ' :' → logprob: -6.487144470214844
    8. '               ' → logprob: -6.862144470214844
    9. ' ' → logprob: -6.987144470214844
    10. ',' → logprob: -7.612144470214844

Token 1446: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.7167648077011108
    2. '                               ' → logprob: -1.2167648077011108
    3. '                           ' → logprob: -2.3417649269104004
    4. 'dp' (adapté à ' dp') → logprob: -2.5917649269104004
    5. '                       ' → logprob: -3.9667649269104004
    6. ' if' → logprob: -4.7167649269104
    7. ' print' → logprob: -5.5917649269104
    8. '                                   ' → logprob: -5.5917649269104
    9. '                            ' → logprob: -6.3417649269104
    10. '   ' → logprob: -6.8417649269104

Token 1447: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -6.034592388459714e-06
    2. '[' → logprob: -12.750005722045898
    3. '[x' → logprob: -13.500005722045898
    4. '[j' → logprob: -13.875005722045898
    5. 'y' → logprob: -14.875005722045898
    6. '[next' → logprob: -15.500005722045898
    7. '][' → logprob: -17.0000057220459
    8. ' [' → logprob: -17.1250057220459
    9. '[new' → logprob: -17.2500057220459
    10. '```' → logprob: -17.2500057220459

Token 1448: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.004639811348170042
    2. '][' → logprob: -5.379639625549316
    3. '[' → logprob: -11.629639625549316
    4. '[
' → logprob: -12.754639625549316
    5. ')[' → logprob: -12.754639625549316
    6. ']' → logprob: -13.754639625549316
    7. '[next' → logprob: -14.254639625549316
    8. '
' → logprob: -14.504639625549316
    9. '```' → logprob: -14.754639625549316
    10. '[y' → logprob: -15.004639625549316

Token 1449: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.1517960956552997e-05
    2. ' j' → logprob: -11.500011444091797
    3. '   ' → logprob: -14.500011444091797
    4. '(j' → logprob: -14.875011444091797
    5. '	j' → logprob: -15.375011444091797
    6. '(' → logprob: -17.125011444091797
    7. '    ' → logprob: -17.250011444091797
    8. 'po' → logprob: -17.500011444091797
    9. '                   ' → logprob: -17.625011444091797
    10. ' (' → logprob: -18.000011444091797

Token 1450: '|' (ID: 91)
  Prédit: '|'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.0001314295077463612
    2. '|
' → logprob: -10.125131607055664
    3. '|(' → logprob: -10.125131607055664
    4. ']' → logprob: -10.750131607055664
    5. '[j' → logprob: -11.875131607055664
    6. ' |' → logprob: -12.000131607055664
    7. ']|' → logprob: -12.250131607055664
    8. '+' → logprob: -12.375131607055664
    9. '|`
' → logprob: -13.375131607055664
    10. '[' → logprob: -14.125131607055664

Token 1451: 'po' (ID: 2519)
  Prédit: 'po'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.0013973800232633948
    2. '(po' → logprob: -7.126397609710693
    3. '(' → logprob: -7.751397609710693
    4. ' po' → logprob: -9.251397132873535
    5. 'pow' → logprob: -9.876397132873535
    6. '1' → logprob: -12.376397132873535
    7. 'poi' → logprob: -12.876397132873535
    8. ' (' → logprob: -13.376397132873535
    9. '[' → logprob: -13.376397132873535
    10. 'y' → logprob: -13.751397132873535

Token 1452: '[y' (ID: 34551)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4741775393486023
    2. '[y' → logprob: -0.9741775393486023
    3. '[x' → logprob: -9.974177360534668
    4. ' y' → logprob: -10.599177360534668
    5. '[' → logprob: -11.724177360534668
    6. '```' → logprob: -11.849177360534668
    7. 'x' → logprob: -12.224177360534668
    8. '(y' → logprob: -12.724177360534668
    9. '[
' → logprob: -13.724177360534668
    10. '	y' → logprob: -13.724177360534668

Token 1453: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001153674442321062
    2. '])' → logprob: -7.501153469085693
    3. '|' → logprob: -8.126153945922852
    4. ' ]' → logprob: -9.501153945922852
    5. ')]' → logprob: -9.626153945922852
    6. ']+' → logprob: -10.501153945922852
    7. ']+=' → logprob: -10.751153945922852
    8. ']>' → logprob: -11.001153945922852
    9. ']<<' → logprob: -11.376153945922852
    10. ']
' → logprob: -11.501153945922852

Token 1454: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1440584659576416
    2. ' =' → logprob: -2.0190584659576416
    3. '+=' → logprob: -7.6440582275390625
    4. ']' → logprob: -7.8940582275390625
    5. '+' → logprob: -8.144058227539062
    6. ' +=' → logprob: -9.019058227539062
    7. ' ' → logprob: -10.144058227539062
    8. ')' → logprob: -10.644058227539062
    9. ']=' → logprob: -11.269058227539062
    10. ' ]' → logprob: -11.644058227539062

Token 1455: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.001502598519437015
    2. ' min' → logprob: -6.501502513885498
    3. '	min' → logprob: -15.376502990722656
    4. '(min' → logprob: -17.751502990722656
    5. '   ' → logprob: -19.126502990722656
    6. '[min' → logprob: -19.626502990722656
    7. 'mini' → logprob: -19.751502990722656
    8. '.min' → logprob: -20.251502990722656
    9. '=min' → logprob: -20.251502990722656
    10. '```' → logprob: -20.626502990722656

Token 1456: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.004327571950852871
    2. '(' → logprob: -5.629327774047852
    3. '(
' → logprob: -7.754327774047852
    4. 'dp' → logprob: -8.129327774047852
    5. '	dp' → logprob: -13.379327774047852
    6. ' dp' → logprob: -14.254327774047852
    7. '(
' → logprob: -15.004327774047852
    8. ' (' → logprob: -15.004327774047852
    9. '(

' → logprob: -15.129327774047852
    10. '```' → logprob: -15.379327774047852

Token 1457: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.00012487331696320325
    2. '[' → logprob: -9.37512493133545
    3. '(y' → logprob: -10.75012493133545
    4. '[x' → logprob: -12.00012493133545
    5. '[j' → logprob: -12.12512493133545
    6. '][' → logprob: -12.87512493133545
    7. '[
' → logprob: -13.12512493133545
    8. 'y' → logprob: -13.62512493133545
    9. ']' → logprob: -15.62512493133545
    10. ')[' → logprob: -15.75012493133545

Token 1458: '][' (ID: 2696)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.028447283431887627
    2. '[j' → logprob: -4.278447151184082
    3. '[x' → logprob: -5.028447151184082
    4. '[' → logprob: -5.778447151184082
    5. '][' → logprob: -5.778447151184082
    6. '|' → logprob: -7.028447151184082
    7. '[
' → logprob: -8.278447151184082
    8. ']' → logprob: -9.028447151184082
    9. '+' → logprob: -9.653447151184082
    10. '[user' → logprob: -11.028447151184082

Token 1459: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.009778168052434921
    2. 'x' → logprob: -4.634778022766113
    3. 'y' → logprob: -11.384778022766113
    4. ' j' → logprob: -12.259778022766113
    5. ']' → logprob: -13.759778022766113
    6. '	j' → logprob: -14.134778022766113
    7. 'i' → logprob: -14.509778022766113
    8. '
' → logprob: -14.884778022766113
    9. ':j' → logprob: -14.884778022766113
    10. '_j' → logprob: -15.134778022766113

Token 1460: '|' (ID: 91)
  Prédit: '|'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.0004878723411820829
    2. '[y' → logprob: -7.875487804412842
    3. ']+' → logprob: -10.87548828125
    4. '[x' → logprob: -10.87548828125
    5. ']' → logprob: -11.00048828125
    6. ']|' → logprob: -11.12548828125
    7. '+' → logprob: -11.50048828125
    8. '|
' → logprob: -12.00048828125
    9. '+y' → logprob: -12.37548828125
    10. '|get' → logprob: -12.37548828125

Token 1461: 'po' (ID: 2519)
  Prédit: 'po'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.00015133652777876705
    2. '(po' → logprob: -9.500151634216309
    3. 'y' → logprob: -9.875151634216309
    4. ' po' → logprob: -11.500151634216309
    5. 'pow' → logprob: -12.000151634216309
    6. 'x' → logprob: -12.750151634216309
    7. 'poi' → logprob: -13.250151634216309
    8. 'Po' → logprob: -14.500151634216309
    9. 'PO' → logprob: -14.750151634216309
    10. 'py' → logprob: -14.875151634216309

Token 1462: '[y' (ID: 34551)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07899311929941177
    2. '[y' → logprob: -2.578993082046509
    3. ' y' → logprob: -9.70399284362793
    4. 'x' → logprob: -11.07899284362793
    5. '(y' → logprob: -11.57899284362793
    6. '[x' → logprob: -11.82899284362793
    7. '	y' → logprob: -12.82899284362793
    8. '[' → logprob: -13.45399284362793
    9. '```' → logprob: -13.45399284362793
    10. ''y' → logprob: -13.70399284362793

Token 1463: ']],' (ID: 37171)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.1467624455690384
    2. '|' → logprob: -2.8967623710632324
    3. '],' → logprob: -3.7717623710632324
    4. ']],' → logprob: -3.8967623710632324
    5. ']' → logprob: -4.146762371063232
    6. '])' → logprob: -4.396762371063232
    7. ']])' → logprob: -5.021762371063232
    8. ')]' → logprob: -7.396762371063232
    9. ']|' → logprob: -7.771762371063232
    10. ']]=' → logprob: -7.896762371063232

Token 1464: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0007693672669120133
    2. ' dp' → logprob: -7.250769138336182
    3. 'd' → logprob: -9.75076961517334
    4. '(dp' → logprob: -14.62576961517334
    5. '	dp' → logprob: -15.50076961517334
    6. '                   ' → logprob: -15.62576961517334
    7. '                           ' → logprob: -15.87576961517334
    8. ' d' → logprob: -16.500768661499023
    9. '   ' → logprob: -16.875768661499023
    10. '                       ' → logprob: -17.125768661499023

Token 1465: '[x' (ID: 17295)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.014202293008565903
    2. '[x' → logprob: -4.264202117919922
    3. ' x' → logprob: -10.264202117919922
    4. '[
' → logprob: -13.639202117919922
    5. '{x' → logprob: -14.014202117919922
    6. '	x' → logprob: -14.264202117919922
    7. ')x' → logprob: -15.264202117919922
    8. '[' → logprob: -15.389202117919922
    9. '
' → logprob: -15.889202117919922
    10. '```' → logprob: -16.139202117919922

Token 1466: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6267420649528503
    2. '[j' → logprob: -1.0017421245574951
    3. '[y' → logprob: -2.501742124557495
    4. '|' → logprob: -4.751741886138916
    5. '[' → logprob: -5.376741886138916
    6. '[x' → logprob: -6.626741886138916
    7. ']+' → logprob: -7.001741886138916
    8. '+' → logprob: -8.126742362976074
    9. ']' → logprob: -8.251742362976074
    10. '```' → logprob: -8.376742362976074

Token 1467: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.2020991056924686e-05
    2. ' j' → logprob: -10.375032424926758
    3. '	j' → logprob: -15.250032424926758
    4. '[j' → logprob: -16.000032424926758
    5. '[' → logprob: -16.375032424926758
    6. '   ' → logprob: -16.500032424926758
    7. ' ' → logprob: -16.750032424926758
    8. '$j' → logprob: -17.000032424926758
    9. '<|end|>' → logprob: -17.250032424926758
    10. ']' → logprob: -17.875032424926758

Token 1468: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.038095541298389435
    2. ']' → logprob: -3.288095474243164
    3. '+' → logprob: -10.163095474243164
    4. '])' → logprob: -12.163095474243164
    5. ' ]' → logprob: -12.538095474243164
    6. '])+' → logprob: -13.538095474243164
    7. ']
' → logprob: -13.788095474243164
    8. ']+=' → logprob: -13.913095474243164
    9. ')+' → logprob: -14.538095474243164
    10. '   ' → logprob: -14.913095474243164

Token 1469: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00013274075172375888
    2. ' d' → logprob: -9.00013256072998
    3. '   ' → logprob: -12.75013256072998
    4. '                   ' → logprob: -13.50013256072998
    5. '           ' → logprob: -14.12513256072998
    6. '               ' → logprob: -14.12513256072998
    7. '                       ' → logprob: -14.62513256072998
    8. 'f' → logprob: -14.62513256072998
    9. ' ' → logprob: -15.12513256072998
    10. '  ' → logprob: -15.12513256072998

Token 1470: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028767958283424377
    2. ')
' → logprob: -5.8778767585754395
    3. ' )' → logprob: -9.877877235412598
    4. ')
' → logprob: -12.627877235412598
    5. '+' → logprob: -12.752877235412598
    6. '<|end|>' → logprob: -12.752877235412598
    7. '               ' → logprob: -13.502877235412598
    8. '                   ' → logprob: -13.752877235412598
    9. ' )
' → logprob: -13.752877235412598
    10. '`)' → logprob: -14.127877235412598

Token 1471: 'ans' (ID: 616)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1472: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1473: ' float' (ID: 4428)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0949651449918747
    2. 'dp' → logprob: -2.5949652194976807
    3. 'float' → logprob: -4.344964981079102
    4. ' min' → logprob: -5.969964981079102
    5. ' dp' → logprob: -8.594964981079102
    6. '   ' → logprob: -9.719964981079102
    7. 'int' → logprob: -10.344964981079102
    8. '0' → logprob: -10.469964981079102
    9. 'math' → logprob: -10.969964981079102
    10. ' float' → logprob: -11.344964981079102

Token 1474: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.026643825694918633
    2. '('' → logprob: -3.651643753051758
    3. '(' → logprob: -8.026643753051758
    4. '("_' → logprob: -12.401643753051758
    5. '(
' → logprob: -12.526643753051758
    6. '("("' → logprob: -13.276643753051758
    7. '("="' → logprob: -13.526643753051758
    8. '"' → logprob: -13.651643753051758
    9. ' ("' → logprob: -14.026643753051758
    10. '32' → logprob: -14.526643753051758

Token 1475: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.016292650252580643
    2. '"' → logprob: -4.516292572021484
    3. ''in' → logprob: -5.391292572021484
    4. ''' → logprob: -7.516292572021484
    5. 'INF' → logprob: -9.516292572021484
    6. 'in' → logprob: -10.766292572021484
    7. '"in' → logprob: -10.766292572021484
    8. ''s' → logprob: -12.516292572021484
    9. '-inf' → logprob: -12.891292572021484
    10. ''inc' → logprob: -13.641292572021484

Token 1476: '")
' (ID: 1896)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002843983471393585
    2. ')
' → logprob: -6.252843856811523
    3. '")' → logprob: -8.002843856811523
    4. ' )' → logprob: -8.127843856811523
    5. '
' → logprob: -10.002843856811523
    6. '])' → logprob: -10.252843856811523
    7. 'for' → logprob: -10.377843856811523
    8. '<|end|>' → logprob: -10.627843856811523
    9. '<|end|>' → logprob: -10.752843856811523
    10. '[' → logprob: -10.877843856811523

Token 1477: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.028354592621326447
    2. ' for' → logprob: -4.153354644775391
    3. 'print' → logprob: -5.278354644775391
    4. ')' → logprob: -5.403354644775391
    5. '<|end|>' → logprob: -6.778354644775391
    6. 'n' → logprob: -7.653354644775391
    7. '
' → logprob: -8.65335464477539
    8. 'ans' → logprob: -9.27835464477539
    9. '#' → logprob: -9.40335464477539
    10. '```' → logprob: -9.52835464477539

Token 1478: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05809549614787102
    2. 'x' → logprob: -2.9330954551696777
    3. 'j' → logprob: -6.433095455169678
    4. 'k' → logprob: -6.933095455169678
    5. 'f' → logprob: -7.933095455169678
    6. 's' → logprob: -9.183095932006836
    7. 'y' → logprob: -9.933095932006836
    8. ' i' → logprob: -10.433095932006836
    9. 't' → logprob: -11.058095932006836
    10. 'a' → logprob: -11.058095932006836

Token 1479: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38768714666366577
    2. 'in' → logprob: -1.1376872062683105
    3. 'n' → logprob: -8.012686729431152
    4. '[' → logprob: -8.512686729431152
    5. ' ' → logprob: -10.137686729431152
    6. '   ' → logprob: -10.387686729431152
    7. '0' → logprob: -10.387686729431152
    8. 'x' → logprob: -10.637686729431152
    9. '[n' → logprob: -10.762686729431152
    10. ')' → logprob: -11.387686729431152

Token 1480: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.700132997939363e-05
    2. ' range' → logprob: -11.000017166137695
    3. '(range' → logprob: -16.375017166137695
    4. 'r' → logprob: -16.625017166137695
    5. '[' → logprob: -18.000017166137695
    6. '   ' → logprob: -18.625017166137695
    7. 'i' → logprob: -18.625017166137695
    8. '
' → logprob: -19.000017166137695
    9. '	range' → logprob: -19.125017166137695
    10. 'list' → logprob: -19.250017166137695

Token 1481: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.21991334855556488
    2. '(n' → logprob: -1.719913363456726
    3. '(range' → logprob: -4.344913482666016
    4. 'n' → logprob: -5.469913482666016
    5. '(po' → logprob: -7.344913482666016
    6. '(' → logprob: -8.219913482666016
    7. ' range' → logprob: -9.094913482666016
    8. 'po' → logprob: -9.219913482666016
    9. '[n' → logprob: -11.719913482666016
    10. '
' → logprob: -12.969913482666016

Token 1482: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3430319130420685
    2. '):
' → logprob: -1.343031883239746
    3. '+' → logprob: -3.593031883239746
    4. ')' → logprob: -7.343031883239746
    5. '):
' → logprob: -7.468031883239746
    6. ']):' → logprob: -8.968031883239746
    7. '-' → logprob: -9.093031883239746
    8. 'n' → logprob: -9.968031883239746
    9. ':' → logprob: -10.093031883239746
    10. '**' → logprob: -10.343031883239746

Token 1483: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004980782046914101
    2. ' if' → logprob: -5.504980564117432
    3. 'if' → logprob: -8.25498104095459
    4. '```' → logprob: -8.75498104095459
    5. '       ' → logprob: -8.87998104095459
    6. '	ans' → logprob: -9.25498104095459
    7. 'ans' → logprob: -10.00498104095459
    8. '#' → logprob: -10.00498104095459
    9. ' ans' → logprob: -10.25498104095459
    10. '<|end|>' → logprob: -10.87998104095459

Token 1484: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25344935059547424
    2. 'if' (adapté à ' if') → logprob: -1.6284493207931519
    3. ' if' → logprob: -4.128449440002441
    4. 'ans' → logprob: -4.503449440002441
    5. ' ans' → logprob: -8.378449440002441
    6. ' ' → logprob: -9.503449440002441
    7. '	ans' → logprob: -9.503449440002441
    8. '	if' → logprob: -10.503449440002441
    9. '```' → logprob: -10.878449440002441
    10. '       ' → logprob: -11.503449440002441

Token 1485: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.011956769041717052
    2. ' f' → logprob: -4.511956691741943
    3. 'po' → logprob: -7.386956691741943
    4. '   ' → logprob: -8.636957168579102
    5. ' ' → logprob: -10.886957168579102
    6. 'dp' → logprob: -10.886957168579102
    7. 'not' → logprob: -11.011957168579102
    8. ' po' → logprob: -11.261957168579102
    9. '  ' → logprob: -11.886957168579102
    10. '	f' → logprob: -12.261957168579102

Token 1486: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005305142258293927
    2. '][' → logprob: -8.500530242919922
    3. '[' → logprob: -9.125530242919922
    4. '==' → logprob: -9.500530242919922
    5. '[x' → logprob: -10.125530242919922
    6. 'i' → logprob: -10.750530242919922
    7. '[j' → logprob: -10.875530242919922
    8. '!=' → logprob: -11.250530242919922
    9. '[
' → logprob: -11.500530242919922
    10. '```' → logprob: -12.250530242919922

Token 1487: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03520598262548447
    2. ']==' → logprob: -3.6602060794830322
    3. ']>' → logprob: -5.660205841064453
    4. ']>=' → logprob: -6.285205841064453
    5. ']+' → logprob: -6.660205841064453
    6. ']<' → logprob: -6.910205841064453
    7. ']:
' → logprob: -8.535205841064453
    8. '[' → logprob: -8.660205841064453
    9. ']:' → logprob: -9.160205841064453
    10. ' ]' → logprob: -9.160205841064453

Token 1488: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4948229491710663
    2. ' ==' → logprob: -1.1198229789733887
    3. '==-' → logprob: -3.6198229789733887
    4. ' !=' → logprob: -4.119822978973389
    5. '!=' → logprob: -4.244822978973389
    6. '!=-' → logprob: -6.494822978973389
    7. ']==' → logprob: -7.119822978973389
    8. '>=' → logprob: -7.369822978973389
    9. '[i' → logprob: -7.619822978973389
    10. '<' → logprob: -7.744822978973389

Token 1489: ' -' (ID: 533)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.000264315924141556
    2. ' float' → logprob: -8.500264167785645
    3. '0' → logprob: -10.000264167785645
    4. '-' → logprob: -12.875264167785645
    5. '-f' → logprob: -12.875264167785645
    6. '<float' → logprob: -12.875264167785645
    7. '=float' → logprob: -13.500264167785645
    8. '```' → logprob: -13.500264167785645
    9. 'inf' → logprob: -14.000264167785645
    10. 'flo' → logprob: -14.125264167785645

Token 1490: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.031961433589458466
    2. 'float' → logprob: -3.656961441040039
    3. 'inf' → logprob: -5.281961441040039
    4. 'f' → logprob: -7.906961441040039
    5. 'int' → logprob: -10.406961441040039
    6. '100' → logprob: -10.781961441040039
    7. 'i' → logprob: -10.906961441040039
    8. '```' → logprob: -11.031961441040039
    9. 'ans' → logprob: -11.156961441040039
    10. 'in' → logprob: -11.156961441040039

Token 1491: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8718489408493042
    2. ':
' → logprob: -0.9968489408493042
    3. ' and' → logprob: -1.6218489408493042
    4. '   ' → logprob: -4.621849060058594
    5. '       ' → logprob: -5.621849060058594
    6. 'and' → logprob: -6.746849060058594
    7. '):
' → logprob: -8.871849060058594
    8. ':
' → logprob: -9.246849060058594
    9. '           ' → logprob: -9.871849060058594
    10. '):' → logprob: -9.996849060058594

Token 1492: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011797732673585415
    2. 'ans' → logprob: -5.636797904968262
    3. '	ans' → logprob: -5.636797904968262
    4. ' ans' → logprob: -5.761797904968262
    5. '       ' → logprob: -7.386797904968262
    6. 'print' → logprob: -7.761797904968262
    7. '(ans' → logprob: -9.011797904968262
    8. '```' → logprob: -9.636797904968262
    9. ' print' → logprob: -10.261797904968262
    10. 'answer' → logprob: -10.261797904968262

Token 1493: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0021948604844510555
    2. ' ans' → logprob: -6.627194881439209
    3. '	ans' → logprob: -7.502194881439209
    4. '   ' → logprob: -8.25219440460205
    5. 'answer' → logprob: -10.12719440460205
    6. '(ans' → logprob: -12.25219440460205
    7. 'print' → logprob: -12.62719440460205
    8. 'anst' → logprob: -12.62719440460205
    9. '_ans' → logprob: -13.00219440460205
    10. 'anser' → logprob: -13.75219440460205

Token 1494: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1395380198955536
    2. ' =' → logprob: -2.139538049697876
    3. '=min' → logprob: -4.389537811279297
    4. '=max' → logprob: -9.764537811279297
    5. '=
' → logprob: -10.639537811279297
    6. '=int' → logprob: -11.139537811279297
    7. '=float' → logprob: -11.389537811279297
    8. '+=' → logprob: -12.514537811279297
    9. '<|end|>' → logprob: -13.639537811279297
    10. '<=' → logprob: -13.764537811279297

Token 1495: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0485873706638813
    2. ' min' → logprob: -3.0485873222351074
    3. '(min' → logprob: -17.048587799072266
    4. 'dp' → logprob: -17.673587799072266
    5. '
' → logprob: -17.923587799072266
    6. '	min' → logprob: -18.048587799072266
    7. '[min' → logprob: -18.548587799072266
    8. '=min' → logprob: -19.048587799072266
    9. 'max' → logprob: -19.298587799072266
    10. 'mi' → logprob: -19.298587799072266

Token 1496: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.02166171930730343
    2. '(dp' → logprob: -4.271661758422852
    3. '(f' → logprob: -5.146661758422852
    4. 'ans' → logprob: -6.646661758422852
    5. '(' → logprob: -8.271661758422852
    6. '(min' → logprob: -9.896661758422852
    7. 'dp' → logprob: -10.771661758422852
    8. '(
' → logprob: -10.896661758422852
    9. 'f' → logprob: -13.021661758422852
    10. ' ans' → logprob: -13.271661758422852

Token 1497: ',' (ID: 11)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.009566015563905239
    2. '(dp' → logprob: -4.759565830230713
    3. ',' → logprob: -7.384565830230713
    4. 'ans' → logprob: -8.259566307067871
    5. '(' → logprob: -11.009566307067871
    6. ' ans' → logprob: -11.134566307067871
    7. '[' → logprob: -11.134566307067871
    8. '	ans' → logprob: -11.759566307067871
    9. ')' → logprob: -12.509566307067871
    10. 'dp' → logprob: -12.884566307067871

Token 1498: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -4.0484450437361374e-05
    2. ' dp' → logprob: -10.125040054321289
    3. '(dp' → logprob: -15.750040054321289
    4. '   ' → logprob: -16.37504005432129
    5. '	dp' → logprob: -16.50004005432129
    6. 'd' → logprob: -17.12504005432129
    7. 'f' → logprob: -17.50004005432129
    8. '```' → logprob: -18.12504005432129
    9. 'df' → logprob: -18.50004005432129
    10. '       ' → logprob: -19.50004005432129

Token 1499: '[i' (ID: 1768)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.576132595539093
    2. '[i' → logprob: -0.826132595539093
    3. ' i' → logprob: -9.951132774353027
    4. '```' → logprob: -10.201132774353027
    5. 'f' → logprob: -10.701132774353027
    6. 'n' → logprob: -10.701132774353027
    7. '
' → logprob: -11.326132774353027
    8. '[' → logprob: -11.326132774353027
    9. '][' → logprob: -11.451132774353027
    10. '0' → logprob: -12.076132774353027

Token 1500: '][-' (ID: 162298)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00598911615088582
    2. '[' → logprob: -5.255989074707031
    3. ')[' → logprob: -7.755989074707031
    4. ']' → logprob: -9.005989074707031
    5. '])' → logprob: -9.505989074707031
    6. '[j' → logprob: -10.130989074707031
    7. '][-' → logprob: -10.505989074707031
    8. '[i' → logprob: -11.755989074707031
    9. '|' → logprob: -12.130989074707031
    10. '}[' → logprob: -12.505989074707031

Token 1501: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5928495486150496e-05
    2. '(' → logprob: -12.000016212463379
    3. '2' → logprob: -12.500016212463379
    4. ' ' → logprob: -13.250016212463379
    5. '-' → logprob: -14.125016212463379
    6. '3' → logprob: -14.875016212463379
    7. '11' → logprob: -14.875016212463379
    8. '(-' → logprob: -14.875016212463379
    9. '
' → logprob: -15.437516212463379
    10. ' -' → logprob: -15.625016212463379

Token 1502: ']+' (ID: 15344)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.7248771786689758
    2. ']+' → logprob: -0.7248771786689758
    3. ']' → logprob: -3.599877119064331
    4. '|' → logprob: -6.22487735748291
    5. ']|' → logprob: -6.97487735748291
    6. '])
' → logprob: -7.72487735748291
    7. '])+' → logprob: -8.09987735748291
    8. '+' → logprob: -9.72487735748291
    9. '][' → logprob: -9.84987735748291
    10. '[' → logprob: -9.97487735748291

Token 1503: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.4855663721391466e-05
    2. ' f' → logprob: -11.125015258789062
    3. 'dp' → logprob: -16.875015258789062
    4. '   ' → logprob: -17.250015258789062
    5. '(f' → logprob: -18.000015258789062
    6. '```' → logprob: -18.250015258789062
    7. '	f' → logprob: -18.750015258789062
    8. '0' → logprob: -18.750015258789062
    9. 'd' → logprob: -18.750015258789062
    10. ' ' → logprob: -19.000015258789062

Token 1504: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004265846684575081
    2. '[' → logprob: -6.254265785217285
    3. '])' → logprob: -6.254265785217285
    4. '[-' → logprob: -8.379265785217285
    5. '[j' → logprob: -9.129265785217285
    6. 'i' → logprob: -10.754265785217285
    7. ']' → logprob: -10.754265785217285
    8. '[x' → logprob: -11.129265785217285
    9. '])
' → logprob: -12.504265785217285
    10. '[n' → logprob: -12.629265785217285

Token 1505: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.01723666489124298
    2. '])
' → logprob: -4.142236709594727
    3. ')' → logprob: -6.892236709594727
    4. ')
' → logprob: -10.392236709594727
    5. ']' → logprob: -10.642236709594727
    6. '+' → logprob: -10.642236709594727
    7. '])
' → logprob: -10.642236709594727
    8. ' ])' → logprob: -10.642236709594727
    9. ')])' → logprob: -10.892236709594727
    10. '])

' → logprob: -11.767236709594727

Token 1506: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5629834532737732
    2. '
' → logprob: -1.562983512878418
    3. '<|end|>' → logprob: -1.687983512878418
    4. ' ' → logprob: -4.937983512878418
    5. '[' → logprob: -5.187983512878418
    6. ']' → logprob: -5.437983512878418
    7. '```' → logprob: -5.687983512878418
    8. '<|end|>' → logprob: -5.687983512878418
    9. ')
' → logprob: -6.312983512878418
    10. ':' → logprob: -6.562983512878418

Token 1507: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.20166875422000885
    2. ' ans' → logprob: -1.7016687393188477
    3. '(ans' → logprob: -8.326668739318848
    4. '	ans' → logprob: -11.826668739318848
    5. '__' → logprob: -13.201668739318848
    6. '
' → logprob: -13.701668739318848
    7. ' __' → logprob: -14.076668739318848
    8. '_ans' → logprob: -14.576668739318848
    9. 'False' → logprob: -15.326668739318848
    10. 'True' → logprob: -15.451668739318848

Token 1508: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8313316702842712
    2. '<' → logprob: -1.081331729888916
    3. ' <' → logprob: -2.081331729888916
    4. '==' → logprob: -2.456331729888916
    5. '>' → logprob: -5.206331729888916
    6. ' !=' → logprob: -5.331331729888916
    7. ' >' → logprob: -6.456331729888916
    8. '!=' → logprob: -6.706331729888916
    9. '=' → logprob: -7.831331729888916
    10. '>=' → logprob: -8.081331253051758

Token 1509: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0052360063418745995
    2. ' float' → logprob: -5.2552361488342285
    3. '   ' → logprob: -14.88023567199707
    4. 'int' → logprob: -15.00523567199707
    5. '(float' → logprob: -15.25523567199707
    6. '	float' → logprob: -15.25523567199707
    7. '=float' → logprob: -15.25523567199707
    8. 'inf' → logprob: -15.50523567199707
    9. '100' → logprob: -15.63023567199707
    10. '
' → logprob: -16.00523567199707

Token 1510: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.001327499165199697
    2. '('' → logprob: -6.6263275146484375
    3. '"' → logprob: -14.251327514648438
    4. '(' → logprob: -14.751327514648438
    5. ' ("' → logprob: -16.376327514648438
    6. '(
' → logprob: -16.501327514648438
    7. '("+' → logprob: -16.751327514648438
    8. '_inf' → logprob: -16.751327514648438
    9. '(in' → logprob: -16.751327514648438
    10. '("-' → logprob: -17.001327514648438

Token 1511: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.004831668920814991
    2. '"' → logprob: -5.504831790924072
    3. ''in' → logprob: -7.629831790924072
    4. ''' → logprob: -8.254831314086914
    5. 'INF' → logprob: -13.254831314086914
    6. 'in' → logprob: -13.629831314086914
    7. ''s' → logprob: -14.004831314086914
    8. ' inf' → logprob: -14.504831314086914
    9. ''ins' → logprob: -14.879831314086914
    10. '('' → logprob: -15.379831314086914

Token 1512: '"):
' (ID: 33645)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25420883297920227
    2. ')' → logprob: -1.6292088031768799
    3. '):
' → logprob: -3.62920880317688
    4. '"):' → logprob: -6.504209041595459
    5. '"):
' → logprob: -8.7542085647583
    6. ':' → logprob: -9.1292085647583
    7. '")' → logprob: -10.3792085647583
    8. '):
' → logprob: -11.1292085647583
    9. '"' → logprob: -12.2542085647583
    10. '):

' → logprob: -12.5042085647583

Token 1513: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6967074275016785
    2. 'print' → logprob: -0.6967074275016785
    3. ' print' → logprob: -5.696707248687744
    4. '	print' → logprob: -8.946707725524902
    5. '
' → logprob: -10.696707725524902
    6. '```' → logprob: -10.696707725524902
    7. '       ' → logprob: -11.696707725524902
    8. '    
' → logprob: -12.696707725524902
    9. ' ' → logprob: -13.321707725524902
    10. '  ' → logprob: -13.696707725524902

Token 1514: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0007584078120999038
    2. '-' → logprob: -7.875758171081543
    3. ' print' → logprob: -8.000758171081543
    4. '-print' → logprob: -10.375758171081543
    5. '   ' → logprob: -11.500758171081543
    6. '	print' → logprob: -14.000758171081543
    7. '0' → logprob: -14.875758171081543
    8. '#print' → logprob: -15.625758171081543
    9. '```' → logprob: -15.625758171081543
    10. ' -' → logprob: -16.12575912475586

Token 1515: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6946350932121277
    2. '(-' → logprob: -0.6946350932121277
    3. '("' → logprob: -7.319634914398193
    4. '(' → logprob: -7.319634914398193
    5. '('' → logprob: -9.944635391235352
    6. '0' → logprob: -10.069635391235352
    7. '("-' → logprob: -10.569635391235352
    8. '-inf' → logprob: -11.319635391235352
    9. '(
' → logprob: -12.069635391235352
    10. ' -' → logprob: -12.319635391235352

Token 1516: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. ')' → logprob: -18.0
    4. '１' → logprob: -19.75
    5. '```' → logprob: -20.25
    6. '۱' → logprob: -20.375
    7. '"""' → logprob: -20.75
    8. '१' → logprob: -20.875
    9. '100' → logprob: -21.0
    10. '   ' → logprob: -21.5

Token 1517: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0486038476228714
    2. ')
' → logprob: -3.0486037731170654
    3. 'else' → logprob: -12.048604011535645
    4. ')
' → logprob: -12.298604011535645
    5. '   ' → logprob: -13.298604011535645
    6. '())' → logprob: -13.798604011535645
    7. '0' → logprob: -14.048604011535645
    8. ')return' → logprob: -14.798604011535645
    9. '())
' → logprob: -14.798604011535645
    10. '),' → logprob: -15.048604011535645

Token 1518: 'else' (ID: 2807)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.052100419998168945
    2. 'else' → logprob: -3.302100419998169
    3. '<|end|>' → logprob: -5.55210018157959
    4. '")' → logprob: -5.92710018157959
    5. '```' → logprob: -6.42710018157959
    6. ')
' → logprob: -6.67710018157959
    7. '0' → logprob: -7.17710018157959
    8. '<|end|>' → logprob: -7.30210018157959
    9. ' else' → logprob: -7.42710018157959
    10. '
' → logprob: -7.55210018157959

Token 1519: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12675336003303528
    2. 'print' → logprob: -3.126753330230713
    3. ':
' → logprob: -3.376753330230713
    4. ':' → logprob: -3.626753330230713
    5. '       ' → logprob: -4.501753330230713
    6. ' print' → logprob: -6.126753330230713
    7. '(print' → logprob: -7.501753330230713
    8. '	print' → logprob: -8.126753807067871
    9. '.print' → logprob: -9.626753807067871
    10. '  ' → logprob: -10.751753807067871

Token 1520: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.020590588450431824
    2. '   ' → logprob: -4.020590782165527
    3. ' print' → logprob: -6.020590782165527
    4. '	print' → logprob: -11.645590782165527
    5. '```' → logprob: -14.520590782165527
    6. '(print' → logprob: -17.27058982849121
    7. '.print' → logprob: -17.89558982849121
    8. '``' → logprob: -18.14558982849121
    9. '
' → logprob: -18.14558982849121
    10. '       ' → logprob: -18.27058982849121

Token 1521: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.7697225252486533e-06
    2. ' print' → logprob: -12.500003814697266
    3. 'pr' → logprob: -19.875003814697266
    4. '	print' → logprob: -20.625003814697266
    5. 'prin' → logprob: -21.500003814697266
    6. '```' → logprob: -21.750003814697266
    7. '   ' → logprob: -22.000003814697266
    8. 'printf' → logprob: -23.750003814697266
    9. 'prit' → logprob: -23.875003814697266
    10. '.print' → logprob: -23.875003814697266

Token 1522: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -7.5649528298527e-05
    2. 'ans' → logprob: -9.500075340270996
    3. '(int' → logprob: -14.500075340270996
    4. '(' → logprob: -15.375075340270996
    5. '	ans' → logprob: -17.125076293945312
    6. '(
' → logprob: -18.750076293945312
    7. '(answer' → logprob: -19.000076293945312
    8. '(abs' → logprob: -19.125076293945312
    9. 'int' → logprob: -19.250076293945312
    10. ' ans' → logprob: -20.125076293945312

Token 1523: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.507972572464496e-05
    2. ')
' → logprob: -9.37509536743164
    3. '<|end|>' → logprob: -12.62509536743164
    4. '")' → logprob: -13.25009536743164
    5. '`)' → logprob: -13.37509536743164
    6. '```' → logprob: -13.62509536743164
    7. '
' → logprob: -14.25009536743164
    8. '())' → logprob: -14.37509536743164
    9. ' )' → logprob: -14.75009536743164
    10. '')' → logprob: -15.37509536743164

Token 1524: '"""
' (ID: 15611)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011032495647668839
    2. '<|end|>' → logprob: -4.886032581329346
    3. '"""' → logprob: -6.761032581329346
    4. '
' → logprob: -6.886032581329346
    5. '```' → logprob: -7.886032581329346
    6. '#' → logprob: -8.886032104492188
    7. ']' → logprob: -9.136032104492188
    8. '")' → logprob: -9.511032104492188
    9. ' )' → logprob: -9.636032104492188
    10. '}' → logprob: -9.636032104492188

Token 1525: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5727646946907043
    2. 'range' → logprob: -1.4477646350860596
    3. '[' → logprob: -2.3227646350860596
    4. '   ' → logprob: -3.4477646350860596
    5. ' range' → logprob: -3.9477646350860596
    6. '[i' → logprob: -4.197764873504639
    7. 'm' → logprob: -4.572764873504639
    8. '=' → logprob: -4.822764873504639
    9. '+' → logprob: -5.697764873504639
    10. '       ' → logprob: -5.947764873504639

Token 1526: '3' (ID: 18)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.066910982131958
    2. '[' → logprob: -1.191910982131958
    3. 'n' → logprob: -2.066910982131958
    4. 'range' → logprob: -2.191910982131958
    5. ' range' → logprob: -3.441910982131958
    6. '#' → logprob: -3.816910982131958
    7. '+' → logprob: -4.441910743713379
    8. ')' → logprob: -4.566910743713379
    9. ']' → logprob: -4.816910743713379
    10. ' for' → logprob: -4.941910743713379

Token 1527: ':' (ID: 25)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1528: 'pattern' (ID: 29563)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2627395391464233
    2. '[' → logprob: -1.3877395391464233
    3. ')' → logprob: -2.137739658355713
    4. 'for' → logprob: -2.512739658355713
    5. '   ' → logprob: -3.012739658355713
    6. '#' → logprob: -3.012739658355713
    7. '```' → logprob: -3.887739658355713
    8. ' ' → logprob: -4.012739658355713
    9. '+' → logprob: -4.012739658355713
    10. ' #' → logprob: -4.137739658355713

Token 1529: '

' (ID: 279)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7576352953910828
    2. 'for' → logprob: -1.5076353549957275
    3. '   ' → logprob: -1.6326353549957275
    4. '+' → logprob: -3.6326353549957275
    5. ']' → logprob: -4.132635116577148
    6. ' for' → logprob: -4.132635116577148
    7. '=' → logprob: -4.132635116577148
    8. '       ' → logprob: -4.507635116577148
    9. ' ' → logprob: -5.382635116577148
    10. ':' → logprob: -5.382635116577148

Token 1530: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.210969477891922
    2. 'm' → logprob: -2.4609694480895996
    3. 'range' → logprob: -3.2109694480895996
    4. 'i' → logprob: -4.0859694480896
    5. 'n' → logprob: -4.0859694480896
    6. ' for' → logprob: -4.4609694480896
    7. '   ' → logprob: -5.3359694480896
    8. ' range' → logprob: -5.4609694480896
    9. '[' → logprob: -5.8359694480896
    10. '=' → logprob: -5.8359694480896

Token 1531: '3' (ID: 18)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02492430992424488
    2. '   ' → logprob: -4.274924278259277
    3. ' for' → logprob: -5.524924278259277
    4. 'i' → logprob: -6.399924278259277
    5. 'range' → logprob: -6.649924278259277
    6. 'm' → logprob: -6.774924278259277
    7. 'n' → logprob: -6.899924278259277
    8. '       ' → logprob: -7.149924278259277
    9. '[' → logprob: -8.649924278259277
    10. '#' → logprob: -8.899924278259277

Token 1532: '_A' (ID: 6829)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7390838861465454
    2. 'for' → logprob: -1.9890838861465454
    3. '<|end|>' → logprob: -1.9890838861465454
    4. '   ' → logprob: -2.239083766937256
    5. ' for' → logprob: -3.614083766937256
    6. '#' → logprob: -3.739083766937256
    7. '\t' → logprob: -4.239083766937256
    8. ')' → logprob: -4.364083766937256
    9. ']' → logprob: -4.739083766937256
    10. '+' → logprob: -4.739083766937256

Token 1533: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.15112781524658203
    2. '#' → logprob: -2.901127815246582
    3. 'n' → logprob: -2.901127815246582
    4. ')' → logprob: -4.776127815246582
    5. 'for' → logprob: -5.151127815246582
    6. '   ' → logprob: -5.776127815246582
    7. '=' → logprob: -6.651127815246582
    8. ']' → logprob: -6.651127815246582
    9. '+' → logprob: -6.776127815246582
    10. ' ' → logprob: -7.151127815246582

Token 1534: '"""
' (ID: 15611)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.1999170482158661
    2. '"' → logprob: -2.0749170780181885
    3. '#' → logprob: -3.4499170780181885
    4. '"""
' → logprob: -4.699916839599609
    5. 'n' → logprob: -4.949916839599609
    6. 's' → logprob: -5.949916839599609
    7. 'a' → logprob: -7.324916839599609
    8. 'p' → logprob: -7.699916839599609
    9. '""' → logprob: -7.699916839599609
    10. '.' → logprob: -7.824916839599609

Token 1535: 'h' (ID: 71)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7521526217460632
    2. 'n' → logprob: -1.252152681350708
    3. '#' → logprob: -1.877152681350708
    4. '   ' → logprob: -3.877152681350708
    5. ' """' → logprob: -4.002152442932129
    6. ' ' → logprob: -4.377152442932129
    7. ' n' → logprob: -5.002152442932129
    8. ')' → logprob: -5.252152442932129
    9. 'for' → logprob: -5.752152442932129
    10. '"""' → logprob: -5.877152442932129

Token 1536: ',w' (ID: 49598)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.998830258846283
    2. 'i' → logprob: -1.4988303184509277
    3. ' =' → logprob: -1.8738303184509277
    4. '=' → logprob: -2.3738303184509277
    5. '"""' → logprob: -2.9988303184509277
    6. '""' → logprob: -3.4988303184509277
    7. '")' → logprob: -3.7488303184509277
    8. ')' → logprob: -4.498830318450928
    9. '#' → logprob: -4.748830318450928
    10. 'a' → logprob: -5.123830318450928

Token 1537: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9881241917610168
    2. '=' → logprob: -1.113124132156372
    3. ')' → logprob: -1.988124132156372
    4. ',' → logprob: -2.363124132156372
    5. '<|end|>' → logprob: -3.238124132156372
    6. '[' → logprob: -5.363124370574951
    7. '<|end|>' → logprob: -5.488124370574951
    8. ']' → logprob: -5.613124370574951
    9. '#' → logprob: -6.238124370574951
    10. ')=' → logprob: -6.363124370574951

Token 1538: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.5266613960266113
    2. 'LI' → logprob: -1.4016613960266113
    3. 'map' → logprob: -2.1516613960266113
    4. ' LI' → logprob: -3.1516613960266113
    5. ' list' → logprob: -6.026661396026611
    6. 'list' → logprob: -6.901661396026611
    7. 'int' → logprob: -7.776661396026611
    8. 'I' → logprob: -8.401660919189453
    9. 'input' → logprob: -11.026660919189453
    10. ' input' → logprob: -11.151660919189453

Token 1539: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.2016209065914154
    2. '(' → logprob: -1.7016209363937378
    3. '(str' → logprob: -8.701621055603027
    4. '(
' → logprob: -11.326621055603027
    5. 'int' → logprob: -11.326621055603027
    6. '=int' → logprob: -11.451621055603027
    7. ' int' → logprob: -13.076621055603027
    8. ',int' → logprob: -13.951621055603027
    9. 'str' → logprob: -14.451621055603027
    10. '<int' → logprob: -14.826621055603027

Token 1540: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01708691008388996
    2. ')' → logprob: -4.892086982727051
    3. '(' → logprob: -6.017086982727051
    4. ',
' → logprob: -6.642086982727051
    5. '"' → logprob: -7.142086982727051
    6. '","' → logprob: -7.142086982727051
    7. '<|end|>' → logprob: -7.392086982727051
    8. ',int' → logprob: -7.767086982727051
    9. '",' → logprob: -7.892086982727051
    10. '),' → logprob: -8.26708698272705

Token 1541: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023653045296669006
    2. 'input' → logprob: -3.898653030395508
    3. 'split' → logprob: -6.773653030395508
    4. ' int' → logprob: -7.273653030395508
    5. 's' → logprob: -7.898653030395508
    6. 'str' → logprob: -8.273653030395508
    7. '(int' → logprob: -8.898653030395508
    8. ' input' → logprob: -9.023653030395508
    9. ',int' → logprob: -9.273653030395508
    10. '=int' → logprob: -9.773653030395508

Token 1542: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.04176917299628258
    2. '()' → logprob: -3.91676926612854
    3. '())' → logprob: -3.91676926612854
    4. '()
' → logprob: -8.291769027709961
    5. '()[' → logprob: -8.291769027709961
    6. '(),' → logprob: -9.166769027709961
    7. '()-' → logprob: -9.166769027709961
    8. '()+' → logprob: -9.416769027709961
    9. '()>' → logprob: -10.291769027709961
    10. '()))' → logprob: -10.541769027709961

Token 1543: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.36574100604048e-06
    2. ' split' → logprob: -13.375004768371582
    3. '(split' → logprob: -13.875004768371582
    4. 'strip' → logprob: -14.000004768371582
    5. 'spl' → logprob: -14.750004768371582
    6. 'plit' → logprob: -16.375003814697266
    7. 'skip' → logprob: -16.500003814697266
    8. 's' → logprob: -16.625003814697266
    9. '7' → logprob: -16.750003814697266
    10. 'rstrip' → logprob: -16.875003814697266

Token 1544: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.030631592497229576
    2. '())
' → logprob: -3.9056315422058105
    3. '()' → logprob: -4.6556315422058105
    4. ')' → logprob: -7.7806315422058105
    5. '()
' → logprob: -9.780632019042969
    6. '")' → logprob: -10.155632019042969
    7. '())
' → logprob: -12.030632019042969
    8. ')
' → logprob: -12.155632019042969
    9. '())

' → logprob: -13.780632019042969
    10. '#' → logprob: -14.155632019042969

Token 1545: 'c' (ID: 66)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11992665380239487
    2. 'for' → logprob: -3.494926691055298
    3. '
' → logprob: -3.744926691055298
    4. ')
' → logprob: -3.994926691055298
    5. '")' → logprob: -4.619926452636719
    6. ' for' → logprob: -5.494926452636719
    7. '```' → logprob: -5.494926452636719
    8. 'h' → logprob: -5.744926452636719
    9. '#' → logprob: -5.994926452636719
    10. '"""' → logprob: -6.619926452636719

Token 1546: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07902947068214417
    2. '=' → logprob: -2.7040295600891113
    3. ')' → logprob: -5.204029560089111
    4. '[' → logprob: -6.704029560089111
    5. 's' → logprob: -7.329029560089111
    6. '=[' → logprob: -7.954029560089111
    7. '=[]' → logprob: -8.454029083251953
    8. ' =
' → logprob: -8.704029083251953
    9. '=[
' → logprob: -9.454029083251953
    10. ']' → logprob: -9.454029083251953

Token 1547: ' [' (ID: 723)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.7310914993286133
    2. '[list' → logprob: -1.2310914993286133
    3. '[' → logprob: -1.7310914993286133
    4. '[s' → logprob: -4.231091499328613
    5. '[]' → logprob: -4.356091499328613
    6. '[S' → logprob: -5.231091499328613
    7. '[str' → logprob: -5.231091499328613
    8. 'list' → logprob: -5.981091499328613
    9. '['' → logprob: -6.106091499328613
    10. '["' → logprob: -6.231091499328613

Token 1548: 'list' (ID: 2641)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.41113147139549255
    2. 'list' → logprob: -1.411131501197815
    3. '[input' → logprob: -2.4111313819885254
    4. '[' → logprob: -6.786131381988525
    5. '[list' → logprob: -6.786131381988525
    6. '["' → logprob: -7.536131381988525
    7. '['' → logprob: -7.661131381988525
    8. '[str' → logprob: -9.411131858825684
    9. ' input' → logprob: -10.161131858825684
    10. '[S' → logprob: -10.286131858825684

Token 1549: '(map' (ID: 16946)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.8786530494689941
    2. '(' → logprob: -1.2536530494689941
    3. '()' → logprob: -2.128653049468994
    4. '(map' → logprob: -2.628653049468994
    5. 'for' → logprob: -3.378653049468994
    6. '(int' → logprob: -3.378653049468994
    7. '(
' → logprob: -4.628653049468994
    8. ' for' → logprob: -4.878653049468994
    9. '()[' → logprob: -5.753653049468994
    10. ' (' → logprob: -6.128653049468994

Token 1550: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00031770815257914364
    2. 'int' → logprob: -8.125317573547363
    3. '(lambda' → logprob: -11.375317573547363
    4. '[int' → logprob: -12.750317573547363
    5. '(
' → logprob: -13.000317573547363
    6. '=int' → logprob: -13.500317573547363
    7. ' int' → logprob: -13.625317573547363
    8. ',int' → logprob: -13.875317573547363
    9. '(' → logprob: -14.375317573547363
    10. ']int' → logprob: -15.125317573547363

Token 1551: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01072731427848339
    2. '(),' → logprob: -5.760727405548096
    3. ' ,' → logprob: -6.135727405548096
    4. '))' → logprob: -6.760727405548096
    5. '()))' → logprob: -7.010727405548096
    6. '(' → logprob: -7.635727405548096
    7. '().' → logprob: -8.260726928710938
    8. '   ' → logprob: -8.260726928710938
    9. '()' → logprob: -8.385726928710938
    10. '```' → logprob: -8.385726928710938

Token 1552: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.05756985768675804
    2. ' input' → logprob: -2.932569742202759
    3. 'S' → logprob: -7.057569980621338
    4. 'sys' → logprob: -7.432569980621338
    5. 's' → logprob: -7.557569980621338
    6. 'range' → logprob: -8.05756950378418
    7. 'int' → logprob: -8.93256950378418
    8. ' sys' → logprob: -9.18256950378418
    9. ' ' → logprob: -10.30756950378418
    10. ' range' → logprob: -10.93256950378418

Token 1553: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0016763753956183791
    2. '()))' → logprob: -6.751676559448242
    3. '))' → logprob: -9.001676559448242
    4. '()[' → logprob: -9.126676559448242
    5. ')])' → logprob: -9.751676559448242
    6. '()' → logprob: -10.001676559448242
    7. ')]' → logprob: -10.376676559448242
    8. '())))' → logprob: -10.501676559448242
    9. ']))' → logprob: -10.751676559448242
    10. '())' → logprob: -10.751676559448242

Token 1554: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00029589756741188467
    2. 'list' → logprob: -9.250295639038086
    3. 'input' → logprob: -10.250295639038086
    4. 'read' → logprob: -10.250295639038086
    5. 'zip' → logprob: -10.250295639038086
    6. 'spl' → logprob: -11.375295639038086
    7. 'int' → logprob: -11.500295639038086
    8. 'range' → logprob: -11.500295639038086
    9. 'map' → logprob: -11.875295639038086
    10. 's' → logprob: -11.875295639038086

Token 1555: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0020931612234562635
    2. '))' → logprob: -6.502093315124512
    3. '()' → logprob: -7.627093315124512
    4. '()))
' → logprob: -9.877093315124512
    5. '())' → logprob: -10.627093315124512
    6. '()
' → logprob: -12.002093315124512
    7. '()[' → logprob: -12.377093315124512
    8. '().' → logprob: -12.502093315124512
    9. '))]
' → logprob: -12.752093315124512
    10. '())).' → logprob: -13.002093315124512

Token 1556: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03938087448477745
    2. '())' → logprob: -3.4143807888031006
    3. ')' → logprob: -5.28938102722168
    4. 'for' → logprob: -7.78938102722168
    5. ' for' → logprob: -9.28938102722168
    6. '()]' → logprob: -9.28938102722168
    7. ')]' → logprob: -10.16438102722168
    8. '())
' → logprob: -11.53938102722168
    9. '()
' → logprob: -12.03938102722168
    10. '(' → logprob: -12.41438102722168

Token 1557: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0059343669563531876
    2. ' range' → logprob: -5.380934238433838
    3. 'i' → logprob: -6.880934238433838
    4. '(range' → logprob: -8.630934715270996
    5. '(i' → logprob: -9.755934715270996
    6. '_' → logprob: -10.755934715270996
    7. '[i' → logprob: -11.630934715270996
    8. 'for' → logprob: -12.005934715270996
    9. '_range' → logprob: -12.005934715270996
    10. 'h' → logprob: -12.755934715270996

Token 1558: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05798166245222092
    2. 'in' → logprob: -2.9329817295074463
    3. 'range' → logprob: -6.057981491088867
    4. 'for' → logprob: -8.057981491088867
    5. '(range' → logprob: -8.307981491088867
    6. ' range' → logprob: -9.182981491088867
    7. '(i' → logprob: -10.307981491088867
    8. '(' → logprob: -11.307981491088867
    9. '(in' → logprob: -11.432981491088867
    10. ' for' → logprob: -12.057981491088867

Token 1559: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.735893965815194e-05
    2. ' range' → logprob: -11.000017166137695
    3. '(range' → logprob: -14.375017166137695
    4. '
' → logprob: -19.875017166137695
    5. '	range' → logprob: -19.875017166137695
    6. '   ' → logprob: -21.125017166137695
    7. ' ' → logprob: -21.250017166137695
    8. 'for' → logprob: -21.875017166137695
    9. 'r' → logprob: -22.125017166137695
    10. '.range' → logprob: -22.750017166137695

Token 1560: '(h' (ID: 8120)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.26942506432533264
    2. 'range' → logprob: -1.5194250345230103
    3. '(h' → logprob: -4.519424915313721
    4. ' range' → logprob: -5.519424915313721
    5. '(w' → logprob: -6.019424915313721
    6. '(r' → logprob: -12.269425392150879
    7. '	range' → logprob: -13.644425392150879
    8. '(' → logprob: -13.769425392150879
    9. 'Range' → logprob: -14.269425392150879
    10. '(H' → logprob: -14.644425392150879

Token 1561: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0011100899428129196
    2. ')]
' → logprob: -6.876110076904297
    3. '])]' → logprob: -10.251110076904297
    4. ')' → logprob: -11.501110076904297
    5. ')])' → logprob: -11.876110076904297
    6. ']' → logprob: -11.876110076904297
    7. ')]
' → logprob: -12.251110076904297
    8. ')][' → logprob: -12.376110076904297
    9. '])' → logprob: -12.501110076904297
    10. ')]

' → logprob: -13.501110076904297

Token 1562: 'dp' (ID: 19037)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.6099934577941895
    2. 'for' → logprob: -1.1099934577941895
    3. '"""
' → logprob: -2.4849934577941895
    4. ']' → logprob: -4.1099934577941895
    5. '#' → logprob: -4.2349934577941895
    6. 'dp' → logprob: -4.8599934577941895
    7. ' for' → logprob: -6.7349934577941895
    8. '```' → logprob: -7.3599934577941895
    9. ']
' → logprob: -7.6099934577941895
    10. 's' → logprob: -7.7349934577941895

Token 1563: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3488236367702484
    2. '=' → logprob: -1.2238236665725708
    3. '=[[' → logprob: -8.473823547363281
    4. '=[' → logprob: -9.098823547363281
    5. '[' → logprob: -11.098823547363281
    6. '=[]' → logprob: -11.473823547363281
    7. ' ' → logprob: -12.348823547363281
    8. '[[' → logprob: -12.348823547363281
    9. '"""' → logprob: -12.473823547363281
    10. '   ' → logprob: -12.473823547363281

Token 1564: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.0026222665328532457
    2. '[h' → logprob: -6.502622127532959
    3. '[w' → logprob: -7.502622127532959
    4. ' [[' → logprob: -7.877622127532959
    5. '[' → logprob: -8.752622604370117
    6. 'w' → logprob: -11.252622604370117
    7. 'h' → logprob: -11.377622604370117
    8. '([[' → logprob: -13.252622604370117
    9. '[
' → logprob: -13.627622604370117
    10. '   ' → logprob: -13.877622604370117

Token 1565: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16081957519054413
    2. 'float' → logprob: -1.9108195304870605
    3. '[' → logprob: -8.660820007324219
    4. 'None' → logprob: -9.035820007324219
    5. '-' → logprob: -10.160820007324219
    6. 'False' → logprob: -10.410820007324219
    7. '100' → logprob: -10.410820007324219
    8. '1' → logprob: -10.535820007324219
    9. 'inf' → logprob: -10.535820007324219
    10. '(' → logprob: -10.910820007324219

Token 1566: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07896877080202103
    2. 'for' → logprob: -2.5789687633514404
    3. '	for' → logprob: -9.70396900177002
    4. '   ' → logprob: -11.82896900177002
    5. ' ' → logprob: -13.20396900177002
    6. '0' → logprob: -13.45396900177002
    7. '
' → logprob: -13.70396900177002
    8. '    ' → logprob: -13.70396900177002
    9. ']*' → logprob: -13.70396900177002
    10. ']' → logprob: -13.70396900177002

Token 1567: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.006242668721824884
    2. ' j' → logprob: -5.506242752075195
    3. 'i' → logprob: -6.756242752075195
    4. '_j' → logprob: -7.256242752075195
    5. '_' → logprob: -8.756242752075195
    6. 'in' → logprob: -9.506242752075195
    7. 'range' → logprob: -10.381242752075195
    8. ' in' → logprob: -10.756242752075195
    9. ' range' → logprob: -13.256242752075195
    10. ' _' → logprob: -13.256242752075195

Token 1568: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.030062515288591385
    2. 'in' → logprob: -4.155062675476074
    3. 'range' → logprob: -4.780062675476074
    4. 'for' → logprob: -5.405062675476074
    5. '(range' → logprob: -7.405062675476074
    6. ' range' → logprob: -8.405062675476074
    7. ' for' → logprob: -8.780062675476074
    8. ']' → logprob: -10.655062675476074
    9. 'w' → logprob: -12.155062675476074
    10. ' ' → logprob: -12.280062675476074

Token 1569: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004078758880496025
    2. ' range' → logprob: -5.5040788650512695
    3. '(range' → logprob: -14.75407886505127
    4. ' ' → logprob: -20.879077911376953
    5. 'w' → logprob: -21.254077911376953
    6. '   ' → logprob: -21.379077911376953
    7. '	range' → logprob: -21.504077911376953
    8. 'for' → logprob: -21.879077911376953
    9. '
' → logprob: -22.629077911376953
    10. 'in' → logprob: -23.254077911376953

Token 1570: '(w' (ID: 7420)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008789354003965855
    2. ' range' → logprob: -5.008789539337158
    3. '(range' → logprob: -6.508789539337158
    4. '(w' → logprob: -7.883789539337158
    5. 'w' → logprob: -8.5087890625
    6. 'for' → logprob: -13.3837890625
    7. 'in' → logprob: -14.7587890625
    8. '[w' → logprob: -15.3837890625
    9. '   ' → logprob: -15.5087890625
    10. ' in' → logprob: -15.7587890625

Token 1571: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0003317705122753978
    2. ')]
' → logprob: -8.75033187866211
    3. '+' → logprob: -8.87533187866211
    4. ')' → logprob: -11.62533187866211
    5. ' )' → logprob: -12.00033187866211
    6. 'w' → logprob: -12.50033187866211
    7. 'for' → logprob: -13.37533187866211
    8. '   ' → logprob: -13.62533187866211
    9. ']]' → logprob: -13.75033187866211
    10. 'j' → logprob: -13.75033187866211

Token 1572: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.49059128761291504
    2. ' for' → logprob: -0.990591287612915
    3. ']' → logprob: -4.115591049194336
    4. ' ]' → logprob: -10.740591049194336
    5. ')' → logprob: -11.115591049194336
    6. '	for' → logprob: -11.740591049194336
    7. ')]' → logprob: -11.740591049194336
    8. '   ' → logprob: -12.865591049194336
    9. ' ' → logprob: -12.990591049194336
    10. ']
' → logprob: -14.115591049194336

Token 1573: ' j' (ID: 441)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018154270946979523
    2. ' range' → logprob: -4.018154144287109
    3. '(range' → logprob: -12.76815414428711
    4. 'w' → logprob: -13.89315414428711
    5. 'j' → logprob: -15.14315414428711
    6. ' ' → logprob: -16.39315414428711
    7. '   ' → logprob: -16.76815414428711
    8. 'r' → logprob: -17.39315414428711
    9. '_range' → logprob: -17.64315414428711
    10. 'in' → logprob: -17.64315414428711

Token 1574: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.43608373403549194
    2. ' in' → logprob: -1.3110837936401367
    3. 'for' → logprob: -3.4360837936401367
    4. ' range' → logprob: -3.5610837936401367
    5. '(range' → logprob: -3.9360837936401367
    6. 'in' → logprob: -6.061083793640137
    7. ' for' → logprob: -7.811083793640137
    8. 'w' → logprob: -7.936083793640137
    9. 'ange' → logprob: -8.186083793640137
    10. 'n' → logprob: -8.811083793640137

Token 1575: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004521222144830972
    2. ' range' → logprob: -7.750452041625977
    3. '(range' → logprob: -10.750452041625977
    4. '   ' → logprob: -20.625452041625977
    5. '	range' → logprob: -20.625452041625977
    6. 'for' → logprob: -21.125452041625977
    7. 'Range' → logprob: -22.125452041625977
    8. ' ' → logprob: -22.375452041625977
    9. '.range' → logprob: -22.375452041625977
    10. '
' → logprob: -22.625452041625977

Token 1576: '(h' (ID: 8120)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018041536211967468
    2. ' range' → logprob: -4.268041610717773
    3. '(h' → logprob: -6.143041610717773
    4. '(range' → logprob: -6.393041610717773
    5. '(w' → logprob: -10.143041610717773
    6. '[h' → logprob: -12.018041610717773
    7. 'w' → logprob: -13.018041610717773
    8. 'h' → logprob: -14.393041610717773
    9. 'Range' → logprob: -14.518041610717773
    10. '(H' → logprob: -16.018041610717773

Token 1577: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.011127286590635777
    2. ')]
' → logprob: -4.511127471923828
    3. ']' → logprob: -10.386127471923828
    4. ')]
' → logprob: -10.761127471923828
    5. ')' → logprob: -11.386127471923828
    6. ')]

' → logprob: -12.636127471923828
    7. ')][' → logprob: -13.261127471923828
    8. '+' → logprob: -13.261127471923828
    9. '])' → logprob: -13.761127471923828
    10. '   ' → logprob: -13.761127471923828

Token 1578: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03161292523145676
    2. 'dp' → logprob: -3.6566128730773926
    3. ' for' → logprob: -5.281612873077393
    4. '
' → logprob: -9.78161334991455
    5. '#' → logprob: -9.90661334991455
    6. '"""' → logprob: -10.03161334991455
    7. 'c' → logprob: -10.90661334991455
    8. '"""
' → logprob: -11.53161334991455
    9. ' dp' → logprob: -11.90661334991455
    10. '```' → logprob: -12.03161334991455

Token 1579: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002738900948315859
    2. 'j' → logprob: -6.252738952636719
    3. ' i' → logprob: -7.752738952636719
    4. 'y' → logprob: -8.377738952636719
    5. 'x' → logprob: -8.877738952636719
    6. '   ' → logprob: -12.877738952636719
    7. ' j' → logprob: -13.252738952636719
    8. 'r' → logprob: -13.627738952636719
    9. '	i' → logprob: -13.627738952636719
    10. ' y' → logprob: -14.252738952636719

Token 1580: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6935336589813232
    2. ' in' → logprob: -0.6935336589813232
    3. '0' → logprob: -9.068533897399902
    4. ' ' → logprob: -9.443533897399902
    5. 'range' → logprob: -9.568533897399902
    6. '1' → logprob: -10.693533897399902
    7. 'n' → logprob: -10.943533897399902
    8. '  ' → logprob: -11.068533897399902
    9. 'i' → logprob: -11.568533897399902
    10. '[' → logprob: -11.693533897399902

Token 1581: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008625687099993229
    2. ' range' → logprob: -4.758625507354736
    3. '0' → logprob: -11.508625984191895
    4. '(range' → logprob: -14.258625984191895
    5. '[' → logprob: -15.633625984191895
    6. '	range' → logprob: -16.383625030517578
    7. 'h' → logprob: -17.008625030517578
    8. '[h' → logprob: -17.883625030517578
    9. '   ' → logprob: -18.383625030517578
    10. ' ' → logprob: -18.633625030517578

Token 1582: '(h' (ID: 8120)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.30400341749191284
    2. 'w' → logprob: -1.6790034770965576
    3. '(h' → logprob: -2.9290034770965576
    4. '(w' → logprob: -4.5540032386779785
    5. 'range' → logprob: -5.1790032386779785
    6. '1' → logprob: -5.8040032386779785
    7. '(' → logprob: -6.3040032386779785
    8. '0' → logprob: -7.0540032386779785
    9. '[h' → logprob: -9.179003715515137
    10. '4' → logprob: -10.054003715515137

Token 1583: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.026615042239427567
    2. '):' → logprob: -3.6516151428222656
    3. ')]' → logprob: -9.401615142822266
    4. '):
' → logprob: -9.526615142822266
    5. ')' → logprob: -9.901615142822266
    6. 'for' → logprob: -9.901615142822266
    7. 'w' → logprob: -11.276615142822266
    8. '-' → logprob: -11.651615142822266
    9. ']:
' → logprob: -12.401615142822266
    10. 'n' → logprob: -12.526615142822266

Token 1584: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.13940384984016418
    2. 'for' → logprob: -2.389403820037842
    3. '   ' → logprob: -3.764403820037842
    4. ' range' → logprob: -4.389403820037842
    5. '	for' → logprob: -6.014403820037842
    6. 'range' → logprob: -8.389404296875
    7. ' ' → logprob: -9.389404296875
    8. '       ' → logprob: -9.889404296875
    9. '<|end|>' → logprob: -11.139404296875
    10. '	range' → logprob: -11.514404296875

Token 1585: ' dp' (ID: 21546)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31455162167549133
    2. 'for' → logprob: -1.564551591873169
    3. ' range' → logprob: -2.939551591873169
    4. '0' → logprob: -5.564551830291748
    5. ' for' → logprob: -5.564551830291748
    6. '   ' → logprob: -9.43955135345459
    7. '[' → logprob: -10.93955135345459
    8. 'in' → logprob: -11.18955135345459
    9. ' in' → logprob: -11.18955135345459
    10. ' ' → logprob: -11.68955135345459

Token 1586: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03378412500023842
    2. 'range' → logprob: -4.408783912658691
    3. 'for' → logprob: -5.533783912658691
    4. '[i' → logprob: -5.658783912658691
    5. ' range' → logprob: -5.783783912658691
    6. '=' → logprob: -5.783783912658691
    7. '0' → logprob: -6.408783912658691
    8. ' =' → logprob: -6.533783912658691
    9. '][' → logprob: -7.283783912658691
    10. '_range' → logprob: -7.533783912658691

Token 1587: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.034314487129449844
    2. '[' → logprob: -3.5343143939971924
    3. ')][' → logprob: -6.7843146324157715
    4. '#' → logprob: -7.2843146324157715
    5. ')[' → logprob: -7.4093146324157715
    6. '   ' → logprob: -7.7843146324157715
    7. '0' → logprob: -8.284314155578613
    8. ')' → logprob: -8.284314155578613
    9. 'range' → logprob: -8.909314155578613
    10. '+' → logprob: -9.034314155578613

Token 1588: '0' (ID: 15)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.02656361646950245
    2. '0' → logprob: -3.6515636444091797
    3. 'j' → logprob: -9.52656364440918
    4. '[w' → logprob: -9.52656364440918
    5. '(w' → logprob: -9.90156364440918
    6. '1' → logprob: -11.40156364440918
    7. '
' → logprob: -11.65156364440918
    8. 'h' → logprob: -11.65156364440918
    9. ' w' → logprob: -11.65156364440918
    10. 'range' → logprob: -11.77656364440918

Token 1589: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0016792253591120243
    2. ']+=' → logprob: -6.626679420471191
    3. ']=' → logprob: -8.001679420471191
    4. '   ' → logprob: -12.376679420471191
    5. ']
' → logprob: -12.876679420471191
    6. ' ]' → logprob: -12.876679420471191
    7. '[' → logprob: -13.251679420471191
    8. '=' → logprob: -13.376679420471191
    9. '+' → logprob: -13.626679420471191
    10. '])' → logprob: -13.876679420471191

Token 1590: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5764183402061462
    2. ' =' → logprob: -0.8264183402061462
    3. '=i' → logprob: -7.826418399810791
    4. '+=' → logprob: -10.076417922973633
    5. ' +=' → logprob: -10.826417922973633
    6. '   ' → logprob: -11.701417922973633
    7. '[i' → logprob: -13.701417922973633
    8. '=int' → logprob: -13.951417922973633
    9. '=c' → logprob: -14.076417922973633
    10. 'for' → logprob: -14.076417922973633

Token 1591: ' ' (ID: 220)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -3.523948907968588e-05
    2. ' c' → logprob: -10.375035285949707
    3. '0' → logprob: -12.875035285949707
    4. '1' → logprob: -14.375035285949707
    5. '   ' → logprob: -14.500035285949707
    6. '	c' → logprob: -16.37503433227539
    7. ' ' → logprob: -16.87503433227539
    8. 'dp' → logprob: -17.50003433227539
    9. '  ' → logprob: -17.62503433227539
    10. '#' → logprob: -18.00003433227539

Token 1592: '1' (ID: 16)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.4987974029500037e-05
    2. '0' → logprob: -11.500024795532227
    3. '1' → logprob: -11.500024795532227
    4. ' c' → logprob: -12.500024795532227
    5. 'dp' → logprob: -14.875024795532227
    6. '   ' → logprob: -16.000024795532227
    7. '#' → logprob: -16.375024795532227
    8. 'i' → logprob: -16.500024795532227
    9. ')c' → logprob: -17.125024795532227
    10. '(c' → logprob: -17.375024795532227

Token 1593: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6532331109046936
    2. '   ' → logprob: -1.2782330513000488
    3. ' for' → logprob: -2.403233051300049
    4. 'for' → logprob: -2.653233051300049
    5. '<|end|>' → logprob: -3.278233051300049
    6. ' ' → logprob: -6.278233051300049
    7. '  ' → logprob: -8.528233528137207
    8. '	for' → logprob: -8.653233528137207
    9. '\n' → logprob: -9.528233528137207
    10. '       ' → logprob: -10.153233528137207

Token 1594: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00019781860464718193
    2. ' c' → logprob: -8.625197410583496
    3. 'i' → logprob: -11.375197410583496
    4. '0' → logprob: -13.000197410583496
    5. '1' → logprob: -14.000197410583496
    6. ' ' → logprob: -14.375197410583496
    7. '(c' → logprob: -14.500197410583496
    8. '   ' → logprob: -14.500197410583496
    9. '#' → logprob: -15.125197410583496
    10. 'dp' → logprob: -15.375197410583496

Token 1595: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004251931968610734
    2. '[' → logprob: -7.875425338745117
    3. 'i' → logprob: -10.375425338745117
    4. '0' → logprob: -13.125425338745117
    5. 'import' → logprob: -13.250425338745117
    6. '[
' → logprob: -13.250425338745117
    7. 's' → logprob: -13.750425338745117
    8. '#' → logprob: -14.125425338745117
    9. '[j' → logprob: -14.250425338745117
    10. '```' → logprob: -14.250425338745117

Token 1596: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.03964237868785858
    2. '[' → logprob: -3.289642333984375
    3. '[i' → logprob: -6.539642333984375
    4. ']' → logprob: -10.039642333984375
    5. '0' → logprob: -10.164642333984375
    6. '#' → logprob: -10.789642333984375
    7. 'i' → logprob: -11.164642333984375
    8. '[j' → logprob: -11.414642333984375
    9. ']==' → logprob: -11.914642333984375
    10. ']][' → logprob: -13.039642333984375

Token 1597: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.692145012086257e-05
    2. 'i' → logprob: -10.125046730041504
    3. ' ' → logprob: -12.500046730041504
    4. '][' → logprob: -13.750046730041504
    5. '[' → logprob: -14.375046730041504
    6. ']' → logprob: -15.125046730041504
    7. '1' → logprob: -15.625046730041504
    8. '   ' → logprob: -15.750046730041504
    9. '
' → logprob: -16.00004768371582
    10. '...' → logprob: -16.25004768371582

Token 1598: ']' (ID: 60)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.36846116185188293
    2. ']' → logprob: -1.3684611320495605
    3. '[' → logprob: -4.1184611320495605
    4. '][' → logprob: -4.2434611320495605
    5. '==' → logprob: -4.3684611320495605
    6. '[i' → logprob: -4.7434611320495605
    7. ']!=' → logprob: -7.4934611320495605
    8. ']>' → logprob: -8.118461608886719
    9. '[j' → logprob: -8.743461608886719
    10. '#' → logprob: -8.868461608886719

Token 1599: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07354879379272461
    2. '[' → logprob: -2.9485487937927246
    3. '!=' → logprob: -5.198548793792725
    4. ' ==' → logprob: -5.198548793792725
    5. '[i' → logprob: -5.448548793792725
    6. ']==' → logprob: -6.823548793792725
    7. '<|end|>' → logprob: -7.448548793792725
    8. '=' → logprob: -7.573548793792725
    9. ' !=' → logprob: -8.823549270629883
    10. '0' → logprob: -8.948549270629883

Token 1600: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5286935567855835
    2. '1' → logprob: -0.9036935567855835
    3. 'c' → logprob: -5.278693675994873
    4. ' ' → logprob: -8.028693199157715
    5. '255' → logprob: -9.778693199157715
    6. '   ' → logprob: -11.653693199157715
    7. 'white' → logprob: -11.778693199157715
    8. '
' → logprob: -11.903693199157715
    9. 'color' → logprob: -12.216193199157715
    10. '  ' → logprob: -12.653693199157715

Token 1601: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6341226696968079
    2. '1' → logprob: -0.7591226696968079
    3. 'c' → logprob: -6.634122848510742
    4. 'i' → logprob: -9.759122848510742
    5. ' ' → logprob: -10.384122848510742
    6. '255' → logprob: -10.759122848510742
    7. '.' → logprob: -10.884122848510742
    8. '-' → logprob: -11.634122848510742
    9. 'dp' → logprob: -11.696622848510742
    10. '
' → logprob: -11.946622848510742

Token 1602: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.04912479594349861
    2. 'else' → logprob: -3.0491247177124023
    3. '<|end|>' → logprob: -7.674124717712402
    4. ' and' → logprob: -10.424124717712402
    5. ' ' → logprob: -11.299124717712402
    6. 'and' → logprob: -11.924124717712402
    7. '
' → logprob: -11.924124717712402
    8. '<|end|>' → logprob: -12.049124717712402
    9. '	else' → logprob: -12.549124717712402
    10. '   ' → logprob: -13.299124717712402

Token 1603: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.066919301403686e-05
    2. '1' → logprob: -9.750090599060059
    3. ' ' → logprob: -10.500090599060059
    4. 'float' → logprob: -14.000090599060059
    5. 'dp' → logprob: -14.187590599060059
    6. '-' → logprob: -14.375090599060059
    7. '#' → logprob: -15.312590599060059
    8. 'c' → logprob: -15.500090599060059
    9. '   ' → logprob: -15.687590599060059
    10. 'continue' → logprob: -16.125091552734375

Token 1604: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00022940391500014812
    2. '1' → logprob: -8.750229835510254
    3. 'float' → logprob: -10.375229835510254
    4. ' ' → logprob: -11.250229835510254
    5. '-' → logprob: -11.625229835510254
    6. 'math' → logprob: -12.562729835510254
    7. 'dp' → logprob: -12.687729835510254
    8. '100' → logprob: -13.437729835510254
    9. '#' → logprob: -13.625229835510254
    10. 'c' → logprob: -13.937729835510254

Token 1605: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19296838343143463
    2. '<|end|>' → logprob: -1.8179683685302734
    3. '   ' → logprob: -4.692968368530273
    4. '\n' → logprob: -6.692968368530273
    5. ' ' → logprob: -7.442968368530273
    6. ' for' → logprob: -7.567968368530273
    7. ' 
' → logprob: -8.067968368530273
    8. 'for' → logprob: -8.192968368530273
    9. '<|end|>' → logprob: -8.317968368530273
    10. '```' → logprob: -9.067968368530273

Token 1606: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1607: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.47198018431663513
    2. 'j' → logprob: -1.4719802141189575
    3. '0' → logprob: -1.9719802141189575
    4. 'range' → logprob: -5.596980094909668
    5. ' j' → logprob: -6.721980094909668
    6. ' i' → logprob: -6.721980094909668
    7. ' range' → logprob: -7.096980094909668
    8. '1' → logprob: -8.471980094909668
    9. ' ' → logprob: -9.096980094909668
    10. '_' → logprob: -9.221980094909668

Token 1608: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6337636709213257
    2. 'in' → logprob: -0.7587636709213257
    3. '(' → logprob: -7.383763790130615
    4. 'range' → logprob: -8.133763313293457
    5. '[' → logprob: -8.758763313293457
    6. ' range' → logprob: -10.508763313293457
    7. 'for' → logprob: -11.133763313293457
    8. ' ' → logprob: -11.133763313293457
    9. '   ' → logprob: -12.383763313293457
    10. 'i' → logprob: -12.508763313293457

Token 1609: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00010330478107789531
    2. ' range' → logprob: -9.625102996826172
    3. '1' → logprob: -10.750102996826172
    4. '[' → logprob: -11.750102996826172
    5. '(range' → logprob: -12.625102996826172
    6. '(' → logprob: -13.000102996826172
    7. 'w' → logprob: -13.750102996826172
    8. '0' → logprob: -15.125102996826172
    9. 'in' → logprob: -15.125102996826172
    10. '
' → logprob: -15.625102996826172

Token 1610: '(w' (ID: 7420)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8390700221061707
    2. '1' → logprob: -0.9640700221061707
    3. 'w' → logprob: -2.4640700817108154
    4. 'h' → logprob: -2.8390700817108154
    5. '(' → logprob: -3.3390700817108154
    6. '(w' → logprob: -5.214069843292236
    7. '(h' → logprob: -6.464069843292236
    8. ' range' → logprob: -8.339070320129395
    9. '(range' → logprob: -8.839070320129395
    10. '0' → logprob: -9.589070320129395

Token 1611: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.22849200665950775
    2. '):' → logprob: -1.603492021560669
    3. '[' → logprob: -5.97849178314209
    4. ')' → logprob: -8.72849178314209
    5. '+' → logprob: -8.97849178314209
    6. ')[' → logprob: -9.10349178314209
    7. '1' → logprob: -10.22849178314209
    8. 'for' → logprob: -11.10349178314209
    9. '):
' → logprob: -11.35349178314209
    10. '(' → logprob: -11.47849178314209

Token 1612: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00037967207026667893
    2. 'dp' → logprob: -8.50037956237793
    3. '	dp' → logprob: -9.25037956237793
    4. '       ' → logprob: -10.25037956237793
    5. ' dp' → logprob: -11.00037956237793
    6. '[' → logprob: -11.75037956237793
    7. '0' → logprob: -12.62537956237793
    8. '	' → logprob: -12.87537956237793
    9. '```' → logprob: -12.87537956237793
    10. '	if' → logprob: -13.25037956237793

Token 1613: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0003874166286550462
    2. ' dp' → logprob: -8.500387191772461
    3. '0' → logprob: -8.875387191772461
    4. '   ' → logprob: -10.125387191772461
    5. '	dp' → logprob: -12.750387191772461
    6. 'if' → logprob: -14.750387191772461
    7. '(dp' → logprob: -15.375387191772461
    8. ' ' → logprob: -15.500387191772461
    9. 'i' → logprob: -16.25038719177246
    10. '[' → logprob: -16.50038719177246

Token 1614: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01864137314260006
    2. '0' → logprob: -4.018641471862793
    3. '[i' → logprob: -7.768641471862793
    4. 'i' → logprob: -9.768641471862793
    5. ' ' → logprob: -12.768641471862793
    6. '][' → logprob: -13.018641471862793
    7. '   ' → logprob: -13.268641471862793
    8. '=' → logprob: -13.893641471862793
    9. ' [' → logprob: -14.143641471862793
    10. '[
' → logprob: -14.518641471862793

Token 1615: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.776898251497187e-05
    2. 'i' → logprob: -10.2500581741333
    3. '[' → logprob: -10.7500581741333
    4. ' ' → logprob: -14.3750581741333
    5. '[i' → logprob: -16.500057220458984
    6. '   ' → logprob: -16.750057220458984
    7. '00' → logprob: -18.125057220458984
    8. '
' → logprob: -18.250057220458984
    9. ' i' → logprob: -18.375057220458984
    10. '1' → logprob: -18.750057220458984

Token 1616: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0009323021513409913
    2. '[i' → logprob: -7.000932216644287
    3. ' ][' → logprob: -11.625932693481445
    4. 'i' → logprob: -12.500932693481445
    5. '   ' → logprob: -12.750932693481445
    6. '[' → logprob: -13.125932693481445
    7. ']' → logprob: -13.500932693481445
    8. '"][' → logprob: -14.875932693481445
    9. '(i' → logprob: -14.875932693481445
    10. ''][' → logprob: -15.500932693481445

Token 1617: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.5213274309644476e-05
    2. '[i' → logprob: -11.875015258789062
    3. ' i' → logprob: -12.000015258789062
    4. '[' → logprob: -14.250015258789062
    5. ' ' → logprob: -14.875015258789062
    6. '   ' → logprob: -15.125015258789062
    7. '{i' → logprob: -15.625015258789062
    8. '	i' → logprob: -15.875015258789062
    9. 'I' → logprob: -16.250015258789062
    10. '(i' → logprob: -16.375015258789062

Token 1618: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06505013257265091
    2. ']=' → logprob: -2.8150501251220703
    3. ']+=' → logprob: -6.44005012512207
    4. '=' → logprob: -7.19005012512207
    5. '[' → logprob: -8.06505012512207
    6. '][' → logprob: -8.56505012512207
    7. '   ' → logprob: -9.31505012512207
    8. '[i' → logprob: -10.31505012512207
    9. 'if' → logprob: -10.56505012512207
    10. ' ]' → logprob: -10.81505012512207

Token 1619: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001170460251159966
    2. ' =' → logprob: -6.751170635223389
    3. '+=' → logprob: -16.001171112060547
    4. ']=' → logprob: -16.751171112060547
    5. '   ' → logprob: -17.501171112060547
    6. 'if' → logprob: -17.876171112060547
    7. '=True' → logprob: -18.126171112060547
    8. ']' → logprob: -18.751171112060547
    9. '=
' → logprob: -18.751171112060547
    10. ')' → logprob: -19.126171112060547

Token 1620: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011547473259270191
    2. ' ' → logprob: -6.876154899597168
    3. '0' → logprob: -9.126154899597168
    4. 'dp' → logprob: -11.376154899597168
    5. '(' → logprob: -13.876154899597168
    6. ' dp' → logprob: -15.501154899597168
    7. ' (' → logprob: -15.751154899597168
    8. '   ' → logprob: -16.12615394592285
    9. 'int' → logprob: -16.12615394592285
    10. '(dp' → logprob: -16.75115394592285

Token 1621: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8908587662735954e-05
    2. '0' → logprob: -11.500019073486328
    3. ' ' → logprob: -12.250019073486328
    4. '(' → logprob: -12.875019073486328
    5. 'dp' → logprob: -13.875019073486328
    6. 'h' → logprob: -16.250019073486328
    7. '[' → logprob: -16.375019073486328
    8. '   ' → logprob: -16.625019073486328
    9. 'i' → logprob: -16.625019073486328
    10. '(dp' → logprob: -17.687519073486328

Token 1622: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03450129181146622
    2. 'if' → logprob: -3.534501314163208
    3. '<|end|>' → logprob: -5.659501075744629
    4. ' for' → logprob: -7.159501075744629
    5. 'for' → logprob: -8.659501075744629
    6. ' ' → logprob: -8.909501075744629
    7. '=' → logprob: -9.284501075744629
    8. ' =' → logprob: -11.034501075744629
    9. '   ' → logprob: -11.284501075744629
    10. '	if' → logprob: -11.409501075744629

Token 1623: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.002186307217925787
    2. ' c' → logprob: -6.127186298370361
    3. '0' → logprob: -14.00218677520752
    4. '	c' → logprob: -16.502185821533203
    5. ' ' → logprob: -16.627185821533203
    6. '(c' → logprob: -16.877185821533203
    7. '[c' → logprob: -17.752185821533203
    8. ')c' → logprob: -17.752185821533203
    9. '   ' → logprob: -17.877185821533203
    10. '
' → logprob: -18.127185821533203

Token 1624: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.957014556974173e-05
    2. '0' → logprob: -9.750069618225098
    3. '[i' → logprob: -11.875069618225098
    4. '][' → logprob: -13.375069618225098
    5. '```' → logprob: -14.000069618225098
    6. '[
' → logprob: -14.125069618225098
    7. '#' → logprob: -15.500069618225098
    8. '   ' → logprob: -15.875069618225098
    9. '[j' → logprob: -16.00006866455078
    10. 'i' → logprob: -16.37506866455078

Token 1625: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005856798379682004
    2. '[' → logprob: -7.750585556030273
    3. 'i' → logprob: -8.875585556030273
    4. ' ' → logprob: -11.750585556030273
    5. '[i' → logprob: -12.375585556030273
    6. '][' → logprob: -13.750585556030273
    7. '   ' → logprob: -14.625585556030273
    8. '[
' → logprob: -15.500585556030273
    9. ' i' → logprob: -15.625585556030273
    10. '```' → logprob: -15.625585556030273

Token 1626: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.04864346235990524
    2. '[i' → logprob: -3.0486433506011963
    3. ']' → logprob: -11.048643112182617
    4. '   ' → logprob: -11.548643112182617
    5. ' ][' → logprob: -11.798643112182617
    6. '[j' → logprob: -12.048643112182617
    7. '[' → logprob: -12.423643112182617
    8. 'i' → logprob: -12.798643112182617
    9. '[I' → logprob: -12.923643112182617
    10. ''][' → logprob: -14.173643112182617

Token 1627: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.057743949990254e-05
    2. ' i' → logprob: -11.000020980834961
    3. '[i' → logprob: -13.500020980834961
    4. '0' → logprob: -13.750020980834961
    5. ' ' → logprob: -14.875020980834961
    6. '<|end|>' → logprob: -15.250020980834961
    7. '[' → logprob: -15.375020980834961
    8. '   ' → logprob: -16.00002098083496
    9. ']' → logprob: -16.37502098083496
    10. '	i' → logprob: -16.50002098083496

Token 1628: ']' (ID: 60)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.30745965242385864
    2. ']' → logprob: -1.4324595928192139
    3. '==' → logprob: -3.932459592819214
    4. '[i' → logprob: -5.307459831237793
    5. ' ==' → logprob: -6.932459831237793
    6. 'i' → logprob: -8.682459831237793
    7. ' ]' → logprob: -9.807459831237793
    8. '][' → logprob: -9.807459831237793
    9. '[' → logprob: -10.432459831237793
    10. ' ' → logprob: -11.057459831237793

Token 1629: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.008196450769901276
    2. ' ==' → logprob: -4.8831963539123535
    3. ']==' → logprob: -7.5081963539123535
    4. '[' → logprob: -11.258196830749512
    5. '==
' → logprob: -11.383196830749512
    6. ']' → logprob: -12.133196830749512
    7. '[i' → logprob: -12.508196830749512
    8. ')==' → logprob: -13.008196830749512
    9. '=' → logprob: -13.133196830749512
    10. '0' → logprob: -13.633196830749512

Token 1630: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.662937372922897e-05
    2. ' ' → logprob: -9.250096321105957
    3. '1' → logprob: -16.000097274780273
    4. '
' → logprob: -16.375097274780273
    5. 'i' → logprob: -16.500097274780273
    6. '   ' → logprob: -17.000097274780273
    7. '  ' → logprob: -17.562597274780273
    8. '=' → logprob: -17.875097274780273
    9. ' ' → logprob: -18.312597274780273
    10. '[' → logprob: -18.312597274780273

Token 1631: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0683535037969705e-05
    2. ' ' → logprob: -11.62501049041748
    3. 'i' → logprob: -14.25001049041748
    4. '1' → logprob: -15.25001049041748
    5. '   ' → logprob: -16.375011444091797
    6. '
' → logprob: -16.562511444091797
    7. '[' → logprob: -16.875011444091797
    8. '```' → logprob: -16.875011444091797
    9. '<|end|>' → logprob: -17.125011444091797
    10. '<|end|>' → logprob: -17.375011444091797

Token 1632: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.06197004392743111
    2. 'else' → logprob: -2.8119699954986572
    3. '	else' → logprob: -13.561969757080078
    4. '<|end|>' → logprob: -14.561969757080078
    5. ' ' → logprob: -15.811969757080078
    6. ' or' → logprob: -16.061969757080078
    7. ' ' → logprob: -16.061969757080078
    8. '
' → logprob: -16.686969757080078
    9. '```' → logprob: -16.936969757080078
    10. 'elif' → logprob: -17.186969757080078

Token 1633: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023059594968799502
    2. ' ' → logprob: -8.37523078918457
    3. ' ' → logprob: -17.50023078918457
    4. '   ' → logprob: -17.62523078918457
    5. '
' → logprob: -18.50023078918457
    6. '۰' → logprob: -19.37523078918457
    7. '  ' → logprob: -19.50023078918457
    8. '00' → logprob: -19.68773078918457
    9. '０' → logprob: -19.68773078918457
    10. '' → logprob: -19.87523078918457

Token 1634: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. 's' → logprob: -17.375001907348633
    4. 'i' → logprob: -18.500001907348633
    5. '1' → logprob: -18.625001907348633
    6. '   ' → logprob: -18.750001907348633
    7. '000' → logprob: -19.812501907348633
    8. '00' → logprob: -19.812501907348633
    9. 'for' → logprob: -20.125001907348633
    10. '```' → logprob: -20.437501907348633

Token 1635: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1636: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0038640929851680994
    2. ' for' → logprob: -5.753864288330078
    3. '
' → logprob: -7.503864288330078
    4. '<|end|>' → logprob: -9.128864288330078
    5. '```' → logprob: -11.878864288330078
    6. '\n' → logprob: -12.003864288330078
    7. '	for' → logprob: -12.253864288330078
    8. 'i' → logprob: -12.753864288330078
    9. '   ' → logprob: -13.128864288330078
    10. ' ' → logprob: -13.503864288330078

Token 1637: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002981624274980277
    2. '1' → logprob: -9.000298500061035
    3. 'j' → logprob: -9.375298500061035
    4. ' i' → logprob: -9.375298500061035
    5. '_i' → logprob: -13.125298500061035
    6. '```' → logprob: -14.250298500061035
    7. 'range' → logprob: -14.250298500061035
    8. '
' → logprob: -14.625298500061035
    9. ' ' → logprob: -14.750298500061035
    10. '   ' → logprob: -15.375298500061035

Token 1638: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25211262702941895
    2. 'in' → logprob: -1.502112627029419
    3. 'range' → logprob: -9.25211238861084
    4. '(' → logprob: -9.75211238861084
    5. ' range' → logprob: -11.87711238861084
    6. '[' → logprob: -11.87711238861084
    7. '1' → logprob: -12.25211238861084
    8. '   ' → logprob: -12.75211238861084
    9. '
' → logprob: -13.25211238861084
    10. ' ' → logprob: -13.25211238861084

Token 1639: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00413574930280447
    2. ' range' → logprob: -5.504135608673096
    3. '(' → logprob: -10.004136085510254
    4. '1' → logprob: -11.379136085510254
    5. '(range' → logprob: -14.504136085510254
    6. ' ' → logprob: -16.379135131835938
    7. '
' → logprob: -16.504135131835938
    8. '   ' → logprob: -16.879135131835938
    9. 'Range' → logprob: -19.004135131835938
    10. '	range' → logprob: -19.254135131835938

Token 1640: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019007037917617708
    2. '(' → logprob: -8.750189781188965
    3. 'range' → logprob: -10.375189781188965
    4. ' range' → logprob: -15.500189781188965
    5. '
' → logprob: -16.50019073486328
    6. ' ' → logprob: -16.62519073486328
    7. '   ' → logprob: -19.00019073486328
    8. '(range' → logprob: -20.12519073486328
    9. '１' → logprob: -20.87519073486328
    10. '```' → logprob: -21.12519073486328

Token 1641: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5140073895454407
    2. 'w' → logprob: -1.014007329940796
    3. 'h' → logprob: -3.264007329940796
    4. 'range' → logprob: -7.014007568359375
    5. '
' → logprob: -13.139007568359375
    6. ' w' → logprob: -13.514007568359375
    7. '   ' → logprob: -13.764007568359375
    8. ' ' → logprob: -14.014007568359375
    9. '(' → logprob: -14.014007568359375
    10. 'i' → logprob: -14.139007568359375

Token 1642: ',h' (ID: 42751)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6137844920158386
    2. ',' → logprob: -1.7387845516204834
    3. 'w' → logprob: -1.9887845516204834
    4. 'range' → logprob: -2.6137845516204834
    5. ' in' → logprob: -3.1137845516204834
    6. 'h' → logprob: -5.488784313201904
    7. ' range' → logprob: -5.613784313201904
    8. ',w' → logprob: -5.738784313201904
    9. ',h' → logprob: -5.863784313201904
    10. 'i' → logprob: -5.988784313201904

Token 1643: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.025327695533633232
    2. '):' → logprob: -3.900327682495117
    3. '   ' → logprob: -5.775327682495117
    4. ':' → logprob: -7.775327682495117
    5. 'for' → logprob: -8.150327682495117
    6. ':
' → logprob: -8.150327682495117
    7. '[i' → logprob: -8.400327682495117
    8. '):
' → logprob: -9.400327682495117
    9. ']:
' → logprob: -9.650327682495117
    10. ',' → logprob: -9.900327682495117

Token 1644: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003208037815056741
    2. '	for' → logprob: -8.750320434570312
    3. ' for' → logprob: -9.375320434570312
    4. 'for' → logprob: -10.250320434570312
    5. '```' → logprob: -11.250320434570312
    6. '	' → logprob: -11.875320434570312
    7. '       ' → logprob: -12.375320434570312
    8. '[' → logprob: -12.375320434570312
    9. '    ' → logprob: -12.375320434570312
    10. '  ' → logprob: -13.125320434570312

Token 1645: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00043460296001285315
    2. ' for' → logprob: -7.750434398651123
    3. '   ' → logprob: -12.625434875488281
    4. ' ' → logprob: -14.875434875488281
    5. '	for' → logprob: -15.500434875488281
    6. '
' → logprob: -19.75043487548828
    7. '  ' → logprob: -20.50043487548828
    8. '_for' → logprob: -20.62543487548828
    9. '```' → logprob: -21.00043487548828
    10. 'For' → logprob: -21.25043487548828

Token 1646: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.325804203748703
    2. '1' → logprob: -1.4508042335510254
    3. 'range' → logprob: -3.2008042335510254
    4. 'for' → logprob: -6.700804233551025
    5. ' j' → logprob: -7.450804233551025
    6. '0' → logprob: -7.575804233551025
    7. ' range' → logprob: -7.700804233551025
    8. 'i' → logprob: -9.575803756713867
    9. '   ' → logprob: -10.200803756713867
    10. ' ' → logprob: -10.200803756713867

Token 1647: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.07405823469161987
    2. ' in' → logprob: -2.8240582942962646
    3. '(' → logprob: -4.4490580558776855
    4. 'range' → logprob: -8.199058532714844
    5. '1' → logprob: -10.699058532714844
    6. '   ' → logprob: -10.949058532714844
    7. ' ' → logprob: -12.449058532714844
    8. ' (' → logprob: -12.699058532714844
    9. 'for' → logprob: -13.324058532714844
    10. ' range' → logprob: -13.699058532714844

Token 1648: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.024406615644693375
    2. '(' → logprob: -3.774406671524048
    3. ' range' → logprob: -7.774406433105469
    4. '1' → logprob: -7.774406433105469
    5. 'w' → logprob: -8.149406433105469
    6. '(range' → logprob: -10.774406433105469
    7. '(w' → logprob: -11.649406433105469
    8. '   ' → logprob: -14.399406433105469
    9. '
' → logprob: -15.024406433105469
    10. ' ' → logprob: -16.39940643310547

Token 1649: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014917767606675625
    2. 'w' → logprob: -4.264917850494385
    3. '(w' → logprob: -8.139917373657227
    4. '(' → logprob: -8.389917373657227
    5. 'range' → logprob: -8.389917373657227
    6. '   ' → logprob: -12.514917373657227
    7. '(i' → logprob: -13.764917373657227
    8. 'i' → logprob: -14.014917373657227
    9. ' range' → logprob: -14.014917373657227
    10. ' w' → logprob: -14.389917373657227

Token 1650: '1' (ID: 16)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.12693734467029572
    2. '1' → logprob: -2.1269373893737793
    3. 'range' → logprob: -12.876936912536621
    4. 'i' → logprob: -13.001936912536621
    5. '(w' → logprob: -13.501936912536621
    6. ' w' → logprob: -13.876936912536621
    7. 'j' → logprob: -13.876936912536621
    8. '   ' → logprob: -14.126936912536621
    9. '
' → logprob: -15.251936912536621
    10. '(' → logprob: -15.876936912536621

Token 1651: ',w' (ID: 49598)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.04981108382344246
    2. ',w' → logprob: -3.0498111248016357
    3. ',' → logprob: -7.299810886383057
    4. '(w' → logprob: -8.549811363220215
    5. 'i' → logprob: -9.299811363220215
    6. ',j' → logprob: -9.549811363220215
    7. '   ' → logprob: -9.799811363220215
    8. 'j' → logprob: -10.049811363220215
    9. ',i' → logprob: -10.299811363220215
    10. ' w' → logprob: -10.924811363220215

Token 1652: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.11571339517831802
    2. '):' → logprob: -2.240713357925415
    3. '   ' → logprob: -5.990713596343994
    4. ')' → logprob: -8.740713119506836
    5. ':' → logprob: -9.490713119506836
    6. '+' → logprob: -9.865713119506836
    7. '       ' → logprob: -10.365713119506836
    8. ':
' → logprob: -11.240713119506836
    9. '):

' → logprob: -11.240713119506836
    10. '):
' → logprob: -11.615713119506836

Token 1653: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028636043425649405
    2. '           ' → logprob: -5.87786340713501
    3. 'dp' → logprob: -10.377863883972168
    4. '               ' → logprob: -11.752863883972168
    5. ' dp' → logprob: -12.502863883972168
    6. ' if' → logprob: -12.627863883972168
    7. 'if' → logprob: -12.627863883972168
    8. '     ' → logprob: -12.877863883972168
    9. '   ' → logprob: -13.502863883972168
    10. '```' → logprob: -13.752863883972168

Token 1654: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05045146867632866
    2. 'dp' → logprob: -3.0504515171051025
    3. '       ' → logprob: -6.300451278686523
    4. ' if' → logprob: -11.175451278686523
    5. '           ' → logprob: -11.425451278686523
    6. ' dp' → logprob: -13.800451278686523
    7. '   ' → logprob: -14.550451278686523
    8. '               ' → logprob: -16.175451278686523
    9. '```' → logprob: -16.300451278686523
    10. '	dp' → logprob: -16.550451278686523

Token 1655: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0008049834286794066
    2. ' c' → logprob: -7.125804901123047
    3. '   ' → logprob: -15.125804901123047
    4. '	c' → logprob: -16.375804901123047
    5. '(c' → logprob: -17.125804901123047
    6. 'not' → logprob: -17.625804901123047
    7. '$c' → logprob: -18.750804901123047
    8. 'dp' → logprob: -18.875804901123047
    9. ')c' → logprob: -18.875804901123047
    10. ' not' → logprob: -19.000804901123047

Token 1656: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00016516048344783485
    2. '][' → logprob: -9.500164985656738
    3. '[j' → logprob: -10.000164985656738
    4. '[' → logprob: -10.625164985656738
    5. '   ' → logprob: -12.000164985656738
    6. 'i' → logprob: -12.000164985656738
    7. '[I' → logprob: -12.750164985656738
    8. '       ' → logprob: -13.500164985656738
    9. '```' → logprob: -14.250164985656738
    10. '           ' → logprob: -14.625164985656738

Token 1657: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0012245126999914646
    2. '[i' → logprob: -6.876224517822266
    3. '-' → logprob: -9.001224517822266
    4. '[j' → logprob: -9.876224517822266
    5. ']' → logprob: -11.876224517822266
    6. ' ][' → logprob: -12.376224517822266
    7. '   ' → logprob: -13.751224517822266
    8. ']][' → logprob: -13.876224517822266
    9. '[' → logprob: -13.876224517822266
    10. ']==' → logprob: -14.126224517822266

Token 1658: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.8550976164988242e-05
    2. '   ' → logprob: -11.625018119812012
    3. ' j' → logprob: -12.500018119812012
    4. '0' → logprob: -12.875018119812012
    5. '	j' → logprob: -13.750018119812012
    6. '[j' → logprob: -13.875018119812012
    7. '
' → logprob: -15.250018119812012
    8. ' ' → logprob: -16.000019073486328
    9. '```' → logprob: -16.000019073486328
    10. ']' → logprob: -16.375019073486328

Token 1659: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6988391280174255
    2. ']==' → logprob: -0.6988391280174255
    3. '==' → logprob: -5.19883918762207
    4. '[' → logprob: -9.19883918762207
    5. ' ==' → logprob: -10.82383918762207
    6. '```' → logprob: -11.69883918762207
    7. '][' → logprob: -11.94883918762207
    8. ']!=' → logprob: -12.94883918762207
    9. ' ]' → logprob: -13.07383918762207
    10. ')==' → logprob: -13.19883918762207

Token 1660: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.028428977355360985
    2. ' ==' → logprob: -4.02842903137207
    3. '[' → logprob: -4.90342903137207
    4. ']==' → logprob: -5.90342903137207
    5. ']' → logprob: -10.02842903137207
    6. '][' → logprob: -11.90342903137207
    7. '[i' → logprob: -12.27842903137207
    8. '```' → logprob: -12.65342903137207
    9. ')==' → logprob: -12.65342903137207
    10. '=' → logprob: -13.02842903137207

Token 1661: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.822646693966817e-06
    2. ' ' → logprob: -11.875007629394531
    3. '1' → logprob: -14.375007629394531
    4. '   ' → logprob: -15.375007629394531
    5. '```' → logprob: -17.87500762939453
    6. ' ' → logprob: -18.62500762939453
    7. '  ' → logprob: -18.75000762939453
    8. '    ' → logprob: -18.81250762939453
    9. '	' → logprob: -18.81250762939453
    10. '۰' → logprob: -19.06250762939453

Token 1662: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1160349458805285e-05
    2. ' ' → logprob: -11.500011444091797
    3. '1' → logprob: -15.125011444091797
    4. '   ' → logprob: -15.625011444091797
    5. '<|end|>' → logprob: -15.875011444091797
    6. '"""' → logprob: -17.125011444091797
    7. '```' → logprob: -17.125011444091797
    8. '#' → logprob: -17.187511444091797
    9. '<|end|>' → logprob: -17.250011444091797
    10. '00' → logprob: -17.562511444091797

Token 1663: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.44069913029670715
    2. '           ' → logprob: -1.1906991004943848
    3. ':
' → logprob: -3.3156991004943848
    4. ':' → logprob: -4.690699100494385
    5. 'and' → logprob: -5.065699100494385
    6. '               ' → logprob: -8.190699577331543
    7. '=' → logprob: -9.815699577331543
    8. ',' → logprob: -9.940699577331543
    9. ' =' → logprob: -10.190699577331543
    10. '       ' → logprob: -10.190699577331543

Token 1664: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00034476007567718625
    2. '               ' → logprob: -8.125345230102539
    3. ' and' → logprob: -11.125345230102539
    4. '                   ' → logprob: -11.500345230102539
    5. '	       ' → logprob: -12.375345230102539
    6. '```' → logprob: -12.625345230102539
    7. '         ' → logprob: -12.875345230102539
    8. '		' → logprob: -12.875345230102539
    9. '          ' → logprob: -13.000345230102539
    10. '            ' → logprob: -13.750345230102539

Token 1665: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0001628956088097766
    2. ' dp' → logprob: -8.750163078308105
    3. 'if' → logprob: -12.500163078308105
    4. '           ' → logprob: -14.625163078308105
    5. '               ' → logprob: -16.12516212463379
    6. '	dp' → logprob: -17.00016212463379
    7. '(dp' → logprob: -17.50016212463379
    8. ' if' → logprob: -18.12516212463379
    9. '   ' → logprob: -18.62516212463379
    10. 'd' → logprob: -19.50016212463379

Token 1666: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. 'i' → logprob: -14.250000953674316
    3. '[j' → logprob: -14.750000953674316
    4. '[
' → logprob: -16.375001907348633
    5. '[I' → logprob: -17.500001907348633
    6. '   ' → logprob: -17.500001907348633
    7. '
' → logprob: -17.875001907348633
    8. '```' → logprob: -18.000001907348633
    9. '[' → logprob: -18.500001907348633
    10. '][' → logprob: -18.875001907348633

Token 1667: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00040576665196567774
    2. '[i' → logprob: -8.625405311584473
    3. '-' → logprob: -9.000405311584473
    4. '[j' → logprob: -10.000405311584473
    5. ' ][' → logprob: -10.375405311584473
    6. ']' → logprob: -11.625405311584473
    7. '[' → logprob: -12.125405311584473
    8. '   ' → logprob: -12.375405311584473
    9. '       ' → logprob: -12.750405311584473
    10. '"][' → logprob: -14.000405311584473

Token 1668: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.6286106983898208e-05
    2. '[j' → logprob: -12.000016212463379
    3. ' j' → logprob: -12.125016212463379
    4. '   ' → logprob: -12.500016212463379
    5. '	j' → logprob: -15.000016212463379
    6. 'i' → logprob: -15.375016212463379
    7. ' ' → logprob: -16.500017166137695
    8. '  ' → logprob: -17.000017166137695
    9. '][' → logprob: -17.500017166137695
    10. '       ' → logprob: -17.500017166137695

Token 1669: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2823486626148224
    2. ']' → logprob: -1.5323486328125
    3. ' =' → logprob: -4.2823486328125
    4. ']=' → logprob: -4.6573486328125
    5. ']+=' → logprob: -5.1573486328125
    6. '+=' → logprob: -7.5323486328125
    7. ' +=' → logprob: -8.0323486328125
    8. '   ' → logprob: -11.2823486328125
    9. ']+' → logprob: -11.7823486328125
    10. '               ' → logprob: -12.4073486328125

Token 1670: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011103594675660133
    2. '+=' → logprob: -4.511103630065918
    3. ' =' → logprob: -9.886103630065918
    4. ' +=' → logprob: -12.261103630065918
    5. '=max' → logprob: -16.6361026763916
    6. '+=(' → logprob: -17.3861026763916
    7. '=sum' → logprob: -18.2611026763916
    8. ']+=' → logprob: -18.3861026763916
    9. '=d' → logprob: -18.6361026763916
    10. '=(' → logprob: -18.6361026763916

Token 1671: ' min' (ID: 1349)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.000309840717818588
    2. 'min' → logprob: -8.500309944152832
    3. '(dp' → logprob: -9.875309944152832
    4. 'max' → logprob: -10.375309944152832
    5. ' dp' → logprob: -11.125309944152832
    6. '1' → logprob: -12.250309944152832
    7. '(' → logprob: -13.375309944152832
    8. '	dp' → logprob: -13.500309944152832
    9. '   ' → logprob: -14.000309944152832
    10. '0' → logprob: -15.500309944152832

Token 1672: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.004392378963530064
    2. '([' → logprob: -5.504392147064209
    3. '(
' → logprob: -8.379392623901367
    4. 'dp' → logprob: -10.004392623901367
    5. '(' → logprob: -10.879392623901367
    6. '(min' → logprob: -11.379392623901367
    7. '([
' → logprob: -12.254392623901367
    8. '((' → logprob: -12.504392623901367
    9. '
' → logprob: -16.754392623901367
    10. ' (' → logprob: -16.879392623901367

Token 1673: '[i' (ID: 1768)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.003995646256953478
    2. 'dp' → logprob: -6.128995418548584
    3. '[' → logprob: -7.378995418548584
    4. '([' → logprob: -7.878995418548584
    5. '[
' → logprob: -8.003995895385742
    6. '(
' → logprob: -8.253995895385742
    7. '[i' → logprob: -8.753995895385742
    8. '(' → logprob: -10.628995895385742
    9. '([
' → logprob: -11.253995895385742
    10. '	dp' → logprob: -11.503995895385742

Token 1674: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1446847915649414
    2. '-' → logprob: -2.0196847915649414
    3. '][' → logprob: -6.394684791564941
    4. '[' → logprob: -9.269684791564941
    5. '[-' → logprob: -9.394684791564941
    6. '[I' → logprob: -9.519684791564941
    7. ' -' → logprob: -10.394684791564941
    8. 'i' → logprob: -11.394684791564941
    9. '   ' → logprob: -11.644684791564941
    10. '[
' → logprob: -12.019684791564941

Token 1675: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. 'i' → logprob: -13.00000286102295
    3. 'j' → logprob: -15.37500286102295
    4. '   ' → logprob: -16.000001907348633
    5. ' ' → logprob: -16.125001907348633
    6. '```' → logprob: -16.875001907348633
    7. '-' → logprob: -17.000001907348633
    8. '
' → logprob: -18.500001907348633
    9. '[i' → logprob: -18.750001907348633
    10. '][' → logprob: -18.875001907348633

Token 1676: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004324573092162609
    2. '[i' → logprob: -8.000432014465332
    3. '[j' → logprob: -9.500432014465332
    4. ' ][' → logprob: -12.125432014465332
    5. ']' → logprob: -12.375432014465332
    6. '
' → logprob: -12.500432014465332
    7. '[' → logprob: -12.750432014465332
    8. '   ' → logprob: -12.875432014465332
    9. '[
' → logprob: -14.125432014465332
    10. 'i' → logprob: -14.750432014465332

Token 1677: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00012976066500414163
    2. 'i' → logprob: -9.000129699707031
    3. '][' → logprob: -12.625129699707031
    4. ' j' → logprob: -13.500129699707031
    5. '   ' → logprob: -13.750129699707031
    6. '[j' → logprob: -14.375129699707031
    7. ' ' → logprob: -17.62512969970703
    8. ']' → logprob: -17.87512969970703
    9. ',j' → logprob: -18.00012969970703
    10. '  ' → logprob: -18.37512969970703

Token 1678: '-' (ID: 12)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.005688918754458427
    2. '],' → logprob: -5.5056891441345215
    3. '],[' → logprob: -7.2556891441345215
    4. ',j' → logprob: -8.255688667297363
    5. '[i' → logprob: -8.630688667297363
    6. '],
' → logprob: -9.130688667297363
    7. '-' → logprob: -9.255688667297363
    8. ',' → logprob: -9.505688667297363
    9. '[j' → logprob: -9.755688667297363
    10. ',i' → logprob: -9.880688667297363

Token 1679: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '-' → logprob: -15.0
    3. ' ' → logprob: -17.5
    4. '   ' → logprob: -17.625
    5. '```' → logprob: -19.0
    6. '{' → logprob: -19.25
    7. 'i' → logprob: -19.875
    8. ']' → logprob: -19.875
    9. '１' → logprob: -20.0
    10. '۱' → logprob: -20.375

Token 1680: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.001358328852802515
    2. '],
' → logprob: -6.751358509063721
    3. ']' → logprob: -8.876358032226562
    4. ']+' → logprob: -10.126358032226562
    5. ',' → logprob: -12.626358032226562
    6. ']
' → logprob: -13.876358032226562
    7. '],

' → logprob: -14.001358032226562
    8. '],[' → logprob: -14.251358032226562
    9. '],
' → logprob: -14.251358032226562
    10. ' ],' → logprob: -14.376358032226562

Token 1681: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -5.5577775128767826e-06
    2. 'min' → logprob: -12.250005722045898
    3. ' dp' → logprob: -14.375005722045898
    4. '	dp' → logprob: -16.0000057220459
    5. '(dp' → logprob: -17.7500057220459
    6. '  ' → logprob: -17.8750057220459
    7. '   ' → logprob: -18.0000057220459
    8. '
' → logprob: -19.3750057220459
    9. '      ' → logprob: -20.8750057220459
    10. ' ' → logprob: -21.1250057220459

Token 1682: '[i' (ID: 1768)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6932802200317383
    2. '[i' → logprob: -0.6932802200317383
    3. '][' → logprob: -9.068280220031738
    4. '   ' → logprob: -11.943280220031738
    5. ' i' → logprob: -12.568280220031738
    6. '-' → logprob: -12.818280220031738
    7. ',i' → logprob: -13.693280220031738
    8. '```' → logprob: -14.193280220031738
    9. '
' → logprob: -14.318280220031738
    10. '[j' → logprob: -14.318280220031738

Token 1683: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10326658189296722
    2. '][' → logprob: -2.353266477584839
    3. '[i' → logprob: -5.978266716003418
    4. 'i' → logprob: -7.728266716003418
    5. ' -' → logprob: -10.728266716003418
    6. '[j' → logprob: -10.728266716003418
    7. '[' → logprob: -11.353266716003418
    8. '   ' → logprob: -11.728266716003418
    9. '1' → logprob: -12.228266716003418
    10. '-i' → logprob: -12.353266716003418

Token 1684: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.931863051955588e-05
    2. 'j' → logprob: -9.875059127807617
    3. 'i' → logprob: -12.125059127807617
    4. ' ' → logprob: -13.375059127807617
    5. '   ' → logprob: -14.375059127807617
    6. ' j' → logprob: -16.875059127807617
    7. '[j' → logprob: -16.875059127807617
    8. '```' → logprob: -17.250059127807617
    9. '
' → logprob: -17.375059127807617
    10. '-' → logprob: -17.875059127807617

Token 1685: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0033892178907990456
    2. '][' → logprob: -6.003389358520508
    3. 'j' → logprob: -7.003389358520508
    4. '[' → logprob: -13.753389358520508
    5. ',j' → logprob: -14.003389358520508
    6. '[i' → logprob: -14.253389358520508
    7. '   ' → logprob: -14.253389358520508
    8. '[
' → logprob: -14.753389358520508
    9. ']' → logprob: -15.628389358520508
    10. '```' → logprob: -16.253389358520508

Token 1686: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00010747690976131707
    2. ' j' → logprob: -9.750107765197754
    3. '[j' → logprob: -10.000107765197754
    4. '   ' → logprob: -13.375107765197754
    5. '	j' → logprob: -14.250107765197754
    6. ',j' → logprob: -14.500107765197754
    7. ' ' → logprob: -14.875107765197754
    8. ']' → logprob: -16.312606811523438
    9. '(j' → logprob: -16.812606811523438
    10. '  ' → logprob: -16.875106811523438

Token 1687: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.04898415878415108
    2. '-' → logprob: -3.0489840507507324
    3. '[j' → logprob: -8.04898452758789
    4. '][' → logprob: -10.42398452758789
    5. '   ' → logprob: -11.17398452758789
    6. '],
' → logprob: -11.54898452758789
    7. 'j' → logprob: -12.29898452758789
    8. ']+' → logprob: -12.42398452758789
    9. ']' → logprob: -12.54898452758789
    10. '])' → logprob: -12.79898452758789

Token 1688: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.011048408225178719
    2. ' dp' → logprob: -4.511048316955566
    3. '	dp' → logprob: -15.136048316955566
    4. '(dp' → logprob: -16.386049270629883
    5. ' ' → logprob: -17.261049270629883
    6. '   ' → logprob: -17.261049270629883
    7. '           ' → logprob: -17.511049270629883
    8. '       ' → logprob: -17.511049270629883
    9. '          ' → logprob: -18.136049270629883
    10. '  ' → logprob: -18.261049270629883

Token 1689: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.020499611273407936
    2. '[j' → logprob: -4.0204997062683105
    3. '-' → logprob: -6.1454997062683105
    4. '[' → logprob: -9.145499229431152
    5. '][' → logprob: -9.520499229431152
    6. 'i' → logprob: -10.895499229431152
    7. '[
' → logprob: -13.145499229431152
    8. '   ' → logprob: -13.395499229431152
    9. '```' → logprob: -14.020499229431152
    10. 'j' → logprob: -15.145499229431152

Token 1690: '][' (ID: 2696)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.43859368562698364
    2. '[j' → logprob: -1.0635936260223389
    3. 'j' → logprob: -4.688593864440918
    4. '][' → logprob: -8.313593864440918
    5. '   ' → logprob: -9.063593864440918
    6. ']' → logprob: -9.438593864440918
    7. '[' → logprob: -9.938593864440918
    8. '[
' → logprob: -9.938593864440918
    9. '{' → logprob: -10.438593864440918
    10. '1' → logprob: -10.563593864440918

Token 1691: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.045823566731997e-05
    2. ' j' → logprob: -11.375020027160645
    3. '[j' → logprob: -11.750020027160645
    4. '   ' → logprob: -14.250020027160645
    5. ' ' → logprob: -15.625020027160645
    6. '	j' → logprob: -15.625020027160645
    7. '  ' → logprob: -15.875020027160645
    8. '       ' → logprob: -18.25002098083496
    9. '     ' → logprob: -18.50002098083496
    10. '
' → logprob: -19.00002098083496

Token 1692: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.128163257315464e-07
    2. ' -' → logprob: -15.25
    3. '   ' → logprob: -20.375
    4. '[' → logprob: -20.375
    5. ']' → logprob: -20.5
    6. '])' → logprob: -20.875
    7. '-
' → logprob: -21.0
    8. '−' → logprob: -21.125
    9. '```' → logprob: -21.375
    10. ']-' → logprob: -21.5

Token 1693: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.994086627149954e-05
    2. '-' → logprob: -9.500080108642578
    3. 'j' → logprob: -12.875080108642578
    4. '   ' → logprob: -13.375080108642578
    5. ' ' → logprob: -14.625080108642578
    6. '```' → logprob: -15.375080108642578
    7. '{' → logprob: -15.750080108642578
    8. ']' → logprob: -17.125080108642578
    9. '  ' → logprob: -17.750080108642578
    10. '[j' → logprob: -18.000080108642578

Token 1694: '])+' (ID: 119485)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.04329775273799896
    2. '])+' → logprob: -3.16829776763916
    3. '])
' → logprob: -9.04329776763916
    4. ']+' → logprob: -9.79329776763916
    5. ']' → logprob: -9.91829776763916
    6. ')' → logprob: -10.04329776763916
    7. '])-' → logprob: -12.16829776763916
    8. '])*' → logprob: -12.54329776763916
    9. ']))' → logprob: -12.66829776763916
    10. '   ' → logprob: -12.66829776763916

Token 1695: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.0
    3. '```' → logprob: -22.625
    4. '   ' → logprob: -22.875
    5. '１' → logprob: -23.25
    6. '
' → logprob: -23.5
    7. '۱' → logprob: -24.0
    8. '+' → logprob: -24.375
    9. '' → logprob: -24.5
    10. '১' → logprob: -25.125

Token 1696: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1697: 'ans' (ID: 616)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1698: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8527823090553284
    2. '+=' → logprob: -1.2277822494506836
    3. '<|end|>' → logprob: -2.1027822494506836
    4. ' =' → logprob: -2.6027822494506836
    5. ' +=' → logprob: -3.1027822494506836
    6. '[i' → logprob: -5.102782249450684
    7. '.append' → logprob: -5.227782249450684
    8. '[' → logprob: -5.352782249450684
    9. ')' → logprob: -5.602782249450684
    10. '=[]' → logprob: -5.852782249450684

Token 1699: ' ' (ID: 220)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.1063334047794342
    2. 'dp' → logprob: -2.7313334941864014
    3. '0' → logprob: -3.3563334941864014
    4. ' max' → logprob: -7.106333255767822
    5. ' dp' → logprob: -10.85633373260498
    6. '(max' → logprob: -11.23133373260498
    7. ' ' → logprob: -11.73133373260498
    8. 'min' → logprob: -11.98133373260498
    9. '(dp' → logprob: -12.85633373260498
    10. '1' → logprob: -13.35633373260498

Token 1700: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38698503375053406
    2. 'max' → logprob: -1.1369850635528564
    3. ' max' → logprob: -9.886984825134277
    4. 'sum' → logprob: -10.886984825134277
    5. '1' → logprob: -11.261984825134277
    6. '(max' → logprob: -11.761984825134277
    7. ' ' → logprob: -12.136984825134277
    8. 'float' → logprob: -12.511984825134277
    9. 'str' → logprob: -12.511984825134277
    10. '[max' → logprob: -12.886984825134277

Token 1701: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7029129266738892
    2. 'for' → logprob: -0.7029129266738892
    3. '<|end|>' → logprob: -5.3279128074646
    4. ' for' → logprob: -5.4529128074646
    5. '+' → logprob: -8.452913284301758
    6. '+
' → logprob: -9.702913284301758
    7. 'print' → logprob: -9.827913284301758
    8. '   ' → logprob: -10.202913284301758
    9. '\n' → logprob: -10.327913284301758
    10. '```' → logprob: -10.452913284301758

Token 1702: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00021176543668843806
    2. ' for' → logprob: -8.750211715698242
    3. '
' → logprob: -10.375211715698242
    4. 'print' → logprob: -11.375211715698242
    5. '   ' → logprob: -12.125211715698242
    6. '	for' → logprob: -12.750211715698242
    7. '```' → logprob: -13.125211715698242
    8. '``' → logprob: -16.000211715698242
    9. '\n' → logprob: -16.875211715698242
    10. '       ' → logprob: -17.000211715698242

Token 1703: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00024251631111837924
    2. ' i' → logprob: -8.375242233276367
    3. 'row' → logprob: -11.500242233276367
    4. '   ' → logprob: -14.625242233276367
    5. '	i' → logprob: -14.625242233276367
    6. ' ' → logprob: -15.250242233276367
    7. ' row' → logprob: -16.000242233276367
    8. 'x' → logprob: -16.250242233276367
    9. 'k' → logprob: -16.375242233276367
    10. '0' → logprob: -16.500242233276367

Token 1704: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4288432002067566
    2. ' in' → logprob: -1.0538432598114014
    3. '[' → logprob: -10.42884349822998
    4. '
' → logprob: -11.05384349822998
    5. 'range' → logprob: -11.17884349822998
    6. '[i' → logprob: -11.30384349822998
    7. ',j' → logprob: -11.42884349822998
    8. 'for' → logprob: -11.55384349822998
    9. '   ' → logprob: -11.67884349822998
    10. 'import' → logprob: -12.05384349822998

Token 1705: ' dp' (ID: 21546)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001234428636962548
    2. ' range' → logprob: -9.000123023986816
    3. 'row' → logprob: -17.750123977661133
    4. '(range' → logprob: -17.875123977661133
    5. '
' → logprob: -18.375123977661133
    6. '   ' → logprob: -18.625123977661133
    7. ' ' → logprob: -20.375123977661133
    8. 'r' → logprob: -20.500123977661133
    9. '  ' → logprob: -20.500123977661133
    10. '	range' → logprob: -20.750123977661133

Token 1706: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8745535612106323
    2. '[i' → logprob: -0.8745535612106323
    3. ':
' → logprob: -1.8745535612106323
    4. 'for' → logprob: -5.374553680419922
    5. '<|end|>' → logprob: -6.374553680419922
    6. '):
' → logprob: -6.749553680419922
    7. 'in' → logprob: -7.124553680419922
    8. '][' → logprob: -7.374553680419922
    9. '[' → logprob: -7.499553680419922
    10. '   ' → logprob: -7.749553680419922

Token 1707: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007318858522921801
    2. 'ans' → logprob: -5.13231897354126
    3. ' ans' → logprob: -7.00731897354126
    4. '	ans' → logprob: -8.007318496704102
    5. 'for' → logprob: -9.257318496704102
    6. ' for' → logprob: -10.007318496704102
    7. '```' → logprob: -12.382318496704102
    8. '(ans' → logprob: -13.257318496704102
    9. '   ' → logprob: -13.757318496704102
    10. '       ' → logprob: -14.132318496704102

Token 1708: ' for' (ID: 395)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.018619269132614136
    2. '   ' → logprob: -4.268619060516357
    3. ' ans' → logprob: -6.018619060516357
    4. 'for' (adapté à ' for') → logprob: -6.268619060516357
    5. '	ans' → logprob: -9.518619537353516
    6. ' for' → logprob: -10.268619537353516
    7. ' ' → logprob: -12.018619537353516
    8. '  ' → logprob: -13.643619537353516
    9. '(ans' → logprob: -13.643619537353516
    10. 'answer' → logprob: -14.518619537353516

Token 1709: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.031412288546562195
    2. 'x' → logprob: -3.781412363052368
    3. 'v' → logprob: -4.906412124633789
    4. 'k' → logprob: -7.906412124633789
    5. 'a' → logprob: -8.406412124633789
    6. 'e' → logprob: -9.281412124633789
    7. ' j' → logprob: -11.406412124633789
    8. 'num' → logprob: -11.656412124633789
    9. 'n' → logprob: -12.031412124633789
    10. 'd' → logprob: -12.156412124633789

Token 1710: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0013276183744892478
    2. ' in' → logprob: -6.6263275146484375
    3. 'j' → logprob: -14.001327514648438
    4. '
' → logprob: -15.501327514648438
    5. ' ' → logprob: -16.251327514648438
    6. '  ' → logprob: -16.376327514648438
    7. '```' → logprob: -16.376327514648438
    8. '0' → logprob: -16.501327514648438
    9. 'inp' → logprob: -16.751327514648438
    10. '	in' → logprob: -17.001327514648438

Token 1711: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.2729995988775045e-06
    2. 'range' → logprob: -12.125006675720215
    3. 'j' → logprob: -14.500006675720215
    4. ' i' → logprob: -15.375006675720215
    5. ' range' → logprob: -18.6250057220459
    6. '	i' → logprob: -21.1250057220459
    7. '   ' → logprob: -21.8750057220459
    8. '
' → logprob: -22.0000057220459
    9. '[i' → logprob: -22.2500057220459
    10. '```' → logprob: -22.3750057220459

Token 1712: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14030075073242188
    2. ':
' → logprob: -2.140300750732422
    3. '       ' → logprob: -4.890300750732422
    4. '+=' → logprob: -5.390300750732422
    5. 'if' → logprob: -8.140300750732422
    6. '=' → logprob: -8.515300750732422
    7. '+' → logprob: -8.890300750732422
    8. ' +=' → logprob: -9.390300750732422
    9. '
' → logprob: -9.515300750732422
    10. 'in' → logprob: -9.640300750732422

Token 1713: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000698376854415983
    2. 'if' → logprob: -8.37569808959961
    3. ' if' → logprob: -8.37569808959961
    4. '           ' → logprob: -8.62569808959961
    5. '   ' → logprob: -11.50069808959961
    6. '```' → logprob: -11.62569808959961
    7. 'ans' → logprob: -11.75069808959961
    8. 'print' → logprob: -11.87569808959961
    9. ' ans' → logprob: -12.12569808959961
    10. '	ans' → logprob: -12.75069808959961

Token 1714: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.026626182720065117
    2. 'if' → logprob: -3.7766261100769043
    3. '       ' → logprob: -6.526626110076904
    4. ' ans' → logprob: -6.776626110076904
    5. '           ' → logprob: -7.651626110076904
    6. '	ans' → logprob: -8.526626586914062
    7. ' if' → logprob: -10.026626586914062
    8. '   ' → logprob: -10.526626586914062
    9. 'print' → logprob: -11.026626586914062
    10. '(ans' → logprob: -12.276626586914062

Token 1715: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.008098307996988297
    2. '=' → logprob: -5.258098125457764
    3. ' +=' → logprob: -5.883098125457764
    4. ' =' → logprob: -9.883098602294922
    5. '=max' → logprob: -11.008098602294922
    6. ']+=' → logprob: -12.883098602294922
    7. '   ' → logprob: -13.133098602294922
    8. '+=(' → logprob: -14.008098602294922
    9. '+' → logprob: -14.133098602294922
    10. 'max' → logprob: -14.883098602294922

Token 1716: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.006715967319905758
    2. ' max' → logprob: -5.006715774536133
    3. '	max' → logprob: -15.256715774536133
    4. '(max' → logprob: -15.506715774536133
    5. '[max' → logprob: -16.756715774536133
    6. 'maxlength' → logprob: -17.506715774536133
    7. ',max' → logprob: -17.631715774536133
    8. '   ' → logprob: -17.756715774536133
    9. '=max' → logprob: -17.756715774536133
    10. '_max' → logprob: -18.131715774536133

Token 1717: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.5759677886962891
    2. 'ans' → logprob: -0.8259677886962891
    3. ' ans' → logprob: -10.700967788696289
    4. '(' → logprob: -12.700967788696289
    5. '	ans' → logprob: -13.200967788696289
    6. '(
' → logprob: -14.325967788696289
    7. '   ' → logprob: -15.450967788696289
    8. '_ans' → logprob: -16.70096778869629
    9. '(j' → logprob: -17.20096778869629
    10. '
' → logprob: -17.57596778869629

Token 1718: ',' (ID: 11)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.038131460547447205
    2. '(ans' → logprob: -3.2881314754486084
    3. ',' → logprob: -9.413131713867188
    4. '	ans' → logprob: -12.663131713867188
    5. ' ans' → logprob: -12.788131713867188
    6. ',j' → logprob: -13.538131713867188
    7. '_ans' → logprob: -14.538131713867188
    8. 'j' → logprob: -15.038131713867188
    9. '   ' → logprob: -16.538131713867188
    10. '```' → logprob: -16.663131713867188

Token 1719: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.0280383548888494e-06
    2. ' j' → logprob: -13.875000953674316
    3. 'ans' → logprob: -16.875001907348633
    4. '   ' → logprob: -18.500001907348633
    5. '       ' → logprob: -19.250001907348633
    6. '           ' → logprob: -20.625001907348633
    7. '    ' → logprob: -21.000001907348633
    8. '	j' → logprob: -21.000001907348633
    9. '$j' → logprob: -21.375001907348633
    10. '  ' → logprob: -21.625001907348633

Token 1720: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008288058452308178
    2. ')
' → logprob: -7.125828742980957
    3. ' )' → logprob: -11.000828742980957
    4. '<|end|>' → logprob: -13.250828742980957
    5. ')return' → logprob: -13.875828742980957
    6. ')#' → logprob: -13.875828742980957
    7. '       ' → logprob: -14.250828742980957
    8. ')}}' → logprob: -15.000828742980957
    9. ')**' → logprob: -15.250828742980957
    10. ')
' → logprob: -15.250828742980957

Token 1721: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.057025354355573654
    2. '<|end|>' → logprob: -3.18202543258667
    3. '
' → logprob: -5.05702543258667
    4. ' print' → logprob: -6.05702543258667
    5. ')' → logprob: -6.18202543258667
    6. '```' → logprob: -6.68202543258667
    7. '[' → logprob: -8.182024955749512
    8. '"""' → logprob: -8.182024955749512
    9. ' 
' → logprob: -8.307024955749512
    10. '<|end|>' → logprob: -8.432024955749512

Token 1722: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -3.547789674485102e-05
    2. 'ans' → logprob: -10.250035285949707
    3. '(' → logprob: -17.625036239624023
    4. '(answer' → logprob: -18.125036239624023
    5. '	ans' → logprob: -18.625036239624023
    6. 'ANS' → logprob: -19.500036239624023
    7. '(
' → logprob: -19.875036239624023
    8. '()' → logprob: -21.250036239624023
    9. '(max' → logprob: -21.500036239624023
    10. ' ans' → logprob: -21.625036239624023

Token 1723: '**' (ID: 410)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5094070477061905e-05
    2. ')
' → logprob: -11.375015258789062
    3. '())' → logprob: -14.125015258789062
    4. '```' → logprob: -14.625015258789062
    5. '))' → logprob: -14.875015258789062
    6. '")' → logprob: -15.000015258789062
    7. ' )' → logprob: -15.000015258789062
    8. '})' → logprob: -15.250015258789062
    9. ')#' → logprob: -15.375015258789062
    10. '`)' → logprob: -15.625015258789062

Token 1724: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.375001907348633
    3. '3' → logprob: -15.375001907348633
    4. '0' → logprob: -15.375001907348633
    5. '(' → logprob: -15.750001907348633
    6. ')' → logprob: -16.500001907348633
    7. '4' → logprob: -16.625001907348633
    8. '1' → logprob: -17.125001907348633
    9. '```' → logprob: -19.125001907348633
    10. ' )' → logprob: -19.500001907348633

Token 1725: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.762356209335849e-05
    2. ')
' → logprob: -10.25003719329834
    3. '```' → logprob: -14.37503719329834
    4. ' )' → logprob: -14.75003719329834
    5. '")' → logprob: -15.12503719329834
    6. '<|end|>' → logprob: -15.25003719329834
    7. '
' → logprob: -15.87503719329834
    8. '())' → logprob: -16.000038146972656
    9. '))' → logprob: -16.125038146972656
    10. '`)' → logprob: -16.125038146972656

Token 1726: '"""

' (ID: 34508)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7832648158073425
    2. '   ' → logprob: -1.7832648754119873
    3. ')' → logprob: -2.2832648754119873
    4. '0' → logprob: -2.7832648754119873
    5. ' ' → logprob: -2.7832648754119873
    6. ']' → logprob: -3.1582648754119873
    7. '+' → logprob: -3.6582648754119873
    8. 'for' → logprob: -3.7832648754119873
    9. '=' → logprob: -4.783264636993408
    10. '-' → logprob: -5.283264636993408

Token 1727: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8691689372062683
    2. '#' → logprob: -1.619168996810913
    3. '[' → logprob: -1.619168996810913
    4. 'for' → logprob: -3.119168996810913
    5. '   ' → logprob: -3.244168996810913
    6. ' ' → logprob: -3.369168996810913
    7. '+' → logprob: -4.244168758392334
    8. ')' → logprob: -4.619168758392334
    9. '=' → logprob: -4.994168758392334
    10. '0' → logprob: -5.244168758392334

Token 1728: '3' (ID: 18)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7483137249946594
    2. 'm' → logprob: -1.6233136653900146
    3. '[' → logprob: -2.1233136653900146
    4. 'range' → logprob: -2.7483136653900146
    5. '1' → logprob: -3.1233136653900146
    6. '(' → logprob: -3.9983136653900146
    7. '0' → logprob: -4.123313903808594
    8. '=' → logprob: -4.373313903808594
    9. ' for' → logprob: -4.873313903808594
    10. 'n' → logprob: -4.998313903808594

Token 1729: '_B' (ID: 3201)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7409474849700928
    2. '#' → logprob: -1.1159474849700928
    3. '"""' → logprob: -1.8659474849700928
    4. ')' → logprob: -4.365947723388672
    5. '<|end|>' → logprob: -4.365947723388672
    6. '```' → logprob: -5.240947723388672
    7. ' ' → logprob: -6.115947723388672
    8. ''''' → logprob: -6.365947723388672
    9. '=' → logprob: -7.115947723388672
    10. '<|end|>' → logprob: -7.365947723388672

Token 1730: '

' (ID: 279)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.25235745310783386
    2. '"""
' → logprob: -1.5023574829101562
    3. '""' → logprob: -8.752357482910156
    4. '#' → logprob: -9.252357482910156
    5. '"""
' → logprob: -9.377357482910156
    6. 'n' → logprob: -9.877357482910156
    7. '""""' → logprob: -11.377357482910156
    8. '"""

' → logprob: -11.752357482910156
    9. '```' → logprob: -12.002357482910156
    10. '"' → logprob: -12.127357482910156

Token 1731: '#' (ID: 2)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.5034964084625244
    2. '"""' → logprob: -1.5034964084625244
    3. 'n' → logprob: -2.1284964084625244
    4. 'h' → logprob: -3.1284964084625244
    5. 'w' → logprob: -5.378496170043945
    6. '""' → logprob: -5.878496170043945
    7. '#' → logprob: -6.253496170043945
    8. '"""

' → logprob: -8.128496170043945
    9. '""""' → logprob: -8.378496170043945
    10. 'pass' → logprob: -8.878496170043945

Token 1732: '4' (ID: 19)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4646196961402893
    2. '"""' → logprob: -1.7146196365356445
    3. '"""
' → logprob: -1.8396196365356445
    4. 'h' → logprob: -3.9646196365356445
    5. '#' → logprob: -4.9646196365356445
    6. 'w' → logprob: -5.9646196365356445
    7. '""' → logprob: -6.3396196365356445
    8. 'def' → logprob: -7.0896196365356445
    9. '"""

' → logprob: -7.9646196365356445
    10. 's' → logprob: -8.464619636535645

Token 1733: ':' (ID: 25)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.17089568078517914
    2. '"""
' → logprob: -2.545895576477051
    3. 'n' → logprob: -2.670895576477051
    4. '#' → logprob: -5.420895576477051
    5. '""' → logprob: -5.545895576477051
    6. '"""

' → logprob: -7.795895576477051
    7. 's' → logprob: -8.79589557647705
    8. '""""' → logprob: -8.79589557647705
    9. '"' → logprob: -9.04589557647705
    10. 'def' → logprob: -9.42089557647705

Token 1734: 'count' (ID: 5420)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.091093510389328
    2. '#' → logprob: -3.2160935401916504
    3. '_' → logprob: -4.09109354019165
    4. '"' → logprob: -4.46609354019165
    5. '"""
' → logprob: -4.59109354019165
    6. 'n' → logprob: -5.84109354019165
    7. '""' → logprob: -6.71609354019165
    8. 'B' → logprob: -7.09109354019165
    9. 'def' → logprob: -7.09109354019165
    10. '"#' → logprob: -7.34109354019165

Token 1735: 'ing' (ID: 289)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.26345208287239075
    2. '"""' → logprob: -1.5134520530700684
    3. 'n' → logprob: -4.638452053070068
    4. '#' → logprob: -6.888452053070068
    5. '""' → logprob: -7.763452053070068
    6. '"""
' → logprob: -9.013452529907227
    7. '"""

' → logprob: -9.638452529907227
    8. ''''
' → logprob: -9.888452529907227
    9. 's' → logprob: -10.138452529907227
    10. '""""' → logprob: -10.763452529907227

Token 1736: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9372628331184387
    2. '#' → logprob: -1.312262773513794
    3. '"""' → logprob: -1.437262773513794
    4. 'def' → logprob: -3.812262773513794
    5. 'for' → logprob: -3.937262773513794
    6. 'w' → logprob: -3.937262773513794
    7. '"""
' → logprob: -5.312263011932373
    8. 'a' → logprob: -5.437263011932373
    9. ']' → logprob: -5.562263011932373
    10. 'if' → logprob: -5.812263011932373

Token 1737: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9003939032554626
    2. '#' → logprob: -1.7753939628601074
    3. '   ' → logprob: -1.7753939628601074
    4. 'n' → logprob: -2.1503939628601074
    5. ' for' → logprob: -3.1503939628601074
    6. '[' → logprob: -3.7753939628601074
    7. ' ' → logprob: -3.9003939628601074
    8. '       ' → logprob: -5.150393962860107
    9. 'w' → logprob: -5.150393962860107
    10. ' #' → logprob: -5.400393962860107

Token 1738: '4' (ID: 19)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8829838037490845
    2. '"""' → logprob: -1.2579838037490845
    3. 'n' → logprob: -1.5079838037490845
    4. 'a' → logprob: -3.882983684539795
    5. ' """' → logprob: -4.257983684539795
    6. 'w' → logprob: -5.007983684539795
    7. '[' → logprob: -5.257983684539795
    8. 's' → logprob: -5.632983684539795
    9. 'i' → logprob: -5.632983684539795
    10. '<|end|>' → logprob: -6.007983684539795

Token 1739: '_A' (ID: 6829)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4916094243526459
    2. '#' → logprob: -1.7416094541549683
    3. ' =' → logprob: -2.7416093349456787
    4. '_' → logprob: -2.9916093349456787
    5. '"""' → logprob: -3.7416093349456787
    6. '[' → logprob: -3.8666093349456787
    7. 'def' → logprob: -4.366609573364258
    8. ':' → logprob: -4.741609573364258
    9. '_A' → logprob: -5.491609573364258
    10. 'n' → logprob: -5.491609573364258

Token 1740: '
' (ID: 198)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.7357538938522339
    2. 'n' → logprob: -1.2357538938522339
    3. '#' → logprob: -1.7357538938522339
    4. '"""
' → logprob: -3.6107540130615234
    5. 'def' → logprob: -4.610754013061523
    6. '""' → logprob: -5.485754013061523
    7. '[' → logprob: -5.610754013061523
    8. 'a' → logprob: -7.110754013061523
    9. ':' → logprob: -7.235754013061523
    10. 'd' → logprob: -7.360754013061523

Token 1741: '"""
' (ID: 15611)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.23918302357196808
    2. 'n' → logprob: -2.239182949066162
    3. '"""
' → logprob: -2.614182949066162
    4. '#' → logprob: -3.489182949066162
    5. '""' → logprob: -6.739182949066162
    6. '
' → logprob: -8.11418342590332
    7. '"""

' → logprob: -8.61418342590332
    8. '...' → logprob: -9.11418342590332
    9. 'def' → logprob: -9.23918342590332
    10. '```' → logprob: -9.36418342590332

Token 1742: 'n' (ID: 77)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.611509382724762
    2. 'n' → logprob: -1.6115093231201172
    3. '#' → logprob: -1.8615093231201172
    4. ' ' → logprob: -3.611509323120117
    5. 'a' → logprob: -4.236509323120117
    6. '0' → logprob: -4.611509323120117
    7. ')' → logprob: -5.111509323120117
    8. ']' → logprob: -5.236509323120117
    9. '"""' → logprob: -5.361509323120117
    10. 'w' → logprob: -5.486509323120117

Token 1743: ',v' (ID: 30680)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2538205683231354
    2. ' =' → logprob: -1.753820538520813
    3. ',' → logprob: -3.1288206577301025
    4. ',k' → logprob: -5.753820419311523
    5. '=int' → logprob: -7.128820419311523
    6. ',n' → logprob: -7.253820419311523
    7. ',K' → logprob: -7.753820419311523
    8. ',m' → logprob: -8.128820419311523
    9. ',w' → logprob: -8.128820419311523
    10. ')' → logprob: -8.253820419311523

Token 1744: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6592531204223633
    2. ' =' → logprob: -1.0342531204223633
    3. ',' → logprob: -2.6592531204223633
    4. ',k' → logprob: -3.4092531204223633
    5. ',v' → logprob: -4.409253120422363
    6. ',w' → logprob: -5.534253120422363
    7. ',m' → logprob: -5.659253120422363
    8. '=int' → logprob: -7.284253120422363
    9. ',K' → logprob: -7.659253120422363
    10. ',n' → logprob: -7.909253120422363

Token 1745: ' LI' (ID: 14875)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.5353898406028748
    2. 'map' → logprob: -0.9103898406028748
    3. 'I' → logprob: -4.9103899002075195
    4. 'list' → logprob: -5.7853899002075195
    5. ' map' → logprob: -7.0353899002075195
    6. ' LI' → logprob: -7.6603899002075195
    7. 'L' → logprob: -8.53538990020752
    8. '0' → logprob: -10.16038990020752
    9. 'int' → logprob: -10.16038990020752
    10. 'li' → logprob: -10.41038990020752

Token 1746: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.5761692523956299
    2. '()' → logprob: -0.8261692523956299
    3. '()
' → logprob: -8.95116901397705
    4. '(),' → logprob: -11.32616901397705
    5. 'def' → logprob: -11.45116901397705
    6. ',' → logprob: -11.82616901397705
    7. '=' → logprob: -11.82616901397705
    8. ')
' → logprob: -12.20116901397705
    9. '();' → logprob: -12.20116901397705
    10. '()\' → logprob: -12.20116901397705

Token 1747: 'a' (ID: 64)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.42861485481262207
    2. 'dp' → logprob: -1.178614854812622
    3. '"""
' → logprob: -4.803614616394043
    4. '"""' → logprob: -4.928614616394043
    5. 'c' → logprob: -5.178614616394043
    6. 'f' → logprob: -5.553614616394043
    7. 'cnt' → logprob: -5.678614616394043
    8. 'k' → logprob: -5.928614616394043
    9. 'for' → logprob: -6.178614616394043
    10. 'a' → logprob: -6.678614616394043

Token 1748: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3146989941596985
    2. '=' → logprob: -1.3146989345550537
    3. '=[' → logprob: -7.564699172973633
    4. ',' → logprob: -8.189699172973633
    5. '[' → logprob: -8.689699172973633
    6. '=[]' → logprob: -9.064699172973633
    7. '=list' → logprob: -9.439699172973633
    8. ',b' → logprob: -10.064699172973633
    9. 's' → logprob: -10.314699172973633
    10. ' =[' → logprob: -10.439699172973633

Token 1749: ' LI' (ID: 14875)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4165998101234436
    2. 'LI' → logprob: -1.4165997505187988
    3. '[I' → logprob: -3.166599750518799
    4. '[L' → logprob: -3.916599750518799
    5. '[int' → logprob: -4.541599750518799
    6. ' [' → logprob: -5.041599750518799
    7. '[list' → logprob: -5.291599750518799
    8. '[l' → logprob: -5.916599750518799
    9. ' LI' → logprob: -6.041599750518799
    10. '[]' → logprob: -6.291599750518799

Token 1750: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.022295545786619186
    2. '()
' → logprob: -3.8972954750061035
    3. 'v' → logprob: -7.6472954750061035
    4. '(' → logprob: -7.8972954750061035
    5. 's' → logprob: -8.147295951843262
    6. '(n' → logprob: -8.647295951843262
    7. 'for' → logprob: -9.272295951843262
    8. 'a' → logprob: -9.272295951843262
    9. 'def' → logprob: -9.772295951843262
    10. 'b' → logprob: -10.647295951843262

Token 1751: 'b' (ID: 65)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04656780883669853
    2. 'cnt' → logprob: -4.046567916870117
    3. '"""' → logprob: -5.296567916870117
    4. 'c' → logprob: -5.546567916870117
    5. 'count' → logprob: -5.796567916870117
    6. 'ans' → logprob: -5.921567916870117
    7. '"""
' → logprob: -6.046567916870117
    8. 'b' → logprob: -6.046567916870117
    9. 'd' → logprob: -6.046567916870117
    10. 'from' → logprob: -6.921567916870117

Token 1752: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2056562751531601
    2. ' =' → logprob: -1.7056562900543213
    3. '=[]' → logprob: -6.455656051635742
    4. '[' → logprob: -6.705656051635742
    5. '=[' → logprob: -7.580656051635742
    6. ',' → logprob: -8.080656051635742
    7. 'v' → logprob: -8.455656051635742
    8. '=[]
' → logprob: -8.830656051635742
    9. 'a' → logprob: -10.205656051635742
    10. '_' → logprob: -10.455656051635742

Token 1753: ' LI' (ID: 14875)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.21820607781410217
    2. 'LI' → logprob: -2.3432061672210693
    3. '[v' → logprob: -3.3432061672210693
    4. 'list' → logprob: -4.46820592880249
    5. '[n' → logprob: -4.46820592880249
    6. '[a' → logprob: -4.59320592880249
    7. '[int' → logprob: -4.84320592880249
    8. '0' → logprob: -5.59320592880249
    9. '[]' → logprob: -5.71820592880249
    10. '[len' → logprob: -5.96820592880249

Token 1754: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.2017231285572052
    2. '()' → logprob: -1.7017230987548828
    3. '()
' → logprob: -9.201723098754883
    4. 'for' → logprob: -9.451723098754883
    5. '"""
' → logprob: -10.326723098754883
    6. '"""' → logprob: -10.701723098754883
    7. '#' → logprob: -11.326723098754883
    8. '()"' → logprob: -11.326723098754883
    9. '()

' → logprob: -11.951723098754883
    10. 'def' → logprob: -11.951723098754883

Token 1755: 'c' (ID: 66)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.16597065329551697
    2. 'cnt' → logprob: -3.04097056388855
    3. 'c' → logprob: -3.54097056388855
    4. 'for' → logprob: -3.54097056388855
    5. 'ans' → logprob: -3.91597056388855
    6. 'd' → logprob: -4.915970802307129
    7. 'count' → logprob: -5.040970802307129
    8. '"""
' → logprob: -5.290970802307129
    9. 'm' → logprob: -6.415970802307129
    10. 'res' → logprob: -6.915970802307129

Token 1756: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.639706015586853
    2. ' =' → logprob: -0.764706015586853
    3. '=[]' → logprob: -5.264706134796143
    4. '=[' → logprob: -7.389706134796143
    5. '=[]
' → logprob: -7.889706134796143
    6. '[' → logprob: -8.514705657958984
    7. ',' → logprob: -8.764705657958984
    8. 'v' → logprob: -9.764705657958984
    9. 'for' → logprob: -10.014705657958984
    10. 'count' → logprob: -10.139705657958984

Token 1757: ' LI' (ID: 14875)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18085522949695587
    2. '0' → logprob: -2.5558552742004395
    3. 'LI' → logprob: -2.9308552742004395
    4. '[n' → logprob: -4.0558552742004395
    5. '[v' → logprob: -4.9308552742004395
    6. '[a' → logprob: -5.8058552742004395
    7. '[int' → logprob: -6.5558552742004395
    8. '[]
' → logprob: -7.1808552742004395
    9. 'n' → logprob: -7.3058552742004395
    10. '[]' → logprob: -7.6808552742004395

Token 1758: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20197650790214539
    2. '()
' → logprob: -1.7019765377044678
    3. '()]' → logprob: -8.576976776123047
    4. 'for' → logprob: -8.951976776123047
    5. '"""' → logprob: -9.326976776123047
    6. '())' → logprob: -10.701976776123047
    7. '#' → logprob: -10.951976776123047
    8. '()
' → logprob: -11.076976776123047
    9. ']' → logprob: -11.576976776123047
    10. 'def' → logprob: -11.701976776123047

Token 1759: 'd' (ID: 67)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12316003441810608
    2. 'for' → logprob: -3.2481601238250732
    3. 'cnt' → logprob: -3.7481601238250732
    4. 'ans' → logprob: -4.123159885406494
    5. 'd' → logprob: -4.748159885406494
    6. '"""' → logprob: -4.748159885406494
    7. '"""
' → logprob: -5.373159885406494
    8. 'l' → logprob: -5.873159885406494
    9. 'from' → logprob: -5.873159885406494
    10. 'count' → logprob: -6.123159885406494

Token 1760: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26723629236221313
    2. '=' → logprob: -1.6422362327575684
    3. ',' → logprob: -3.5172362327575684
    4. ',n' → logprob: -5.267236232757568
    5. ',v' → logprob: -5.642236232757568
    6. ',d' → logprob: -7.392236232757568
    7. ',l' → logprob: -7.642236232757568
    8. ',e' → logprob: -8.392236709594727
    9. '<|end|>' → logprob: -8.642236709594727
    10. '[' → logprob: -9.017236709594727

Token 1761: ' LI' (ID: 14875)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.002301323926076293
    2. ' LI' → logprob: -7.002301216125488
    3. 'I' → logprob: -7.752301216125488
    4. '[' → logprob: -7.752301216125488
    5. 'int' → logprob: -8.752301216125488
    6. 'n' → logprob: -9.002301216125488
    7. '[int' → logprob: -9.877301216125488
    8. '0' → logprob: -10.127301216125488
    9. '[n' → logprob: -10.377301216125488
    10. 'list' → logprob: -11.002301216125488

Token 1762: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07044751942157745
    2. '()
' → logprob: -2.6954474449157715
    3. 'def' → logprob: -9.32044792175293
    4. '"""' → logprob: -9.32044792175293
    5. '=' → logprob: -9.44544792175293
    6. '#' → logprob: -10.19544792175293
    7. '()"' → logprob: -10.32044792175293
    8. '=[]
' → logprob: -10.82044792175293
    9. '()`' → logprob: -10.94544792175293
    10. '()
' → logprob: -10.94544792175293

Token 1763: 'p' (ID: 79)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.7144297361373901
    2. 'for' → logprob: -1.7144297361373901
    3. 'dp' → logprob: -1.7144297361373901
    4. 'cnt' → logprob: -2.8394298553466797
    5. '"""
' → logprob: -3.5894298553466797
    6. 'count' → logprob: -4.46442985534668
    7. 'ans' → logprob: -4.71442985534668
    8. 'l' → logprob: -4.71442985534668
    9. '#' → logprob: -5.08942985534668
    10. 'e' → logprob: -5.71442985534668

Token 1764: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03044603206217289
    2. '=' → logprob: -4.5304460525512695
    3. 'r' → logprob: -5.4054460525512695
    4. 'os' → logprob: -6.4054460525512695
    5. 'sum' → logprob: -6.5304460525512695
    6. '_sum' → logprob: -6.6554460525512695
    7. '0' → logprob: -6.7804460525512695
    8. '=[' → logprob: -6.7804460525512695
    9. 'v' → logprob: -7.0304460525512695
    10. 's' → logprob: -7.1554460525512695

Token 1765: ' defaultdict' (ID: 107098)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.323307067155838
    2. '0' → logprob: -1.8233070373535156
    3. '[n' → logprob: -3.1983070373535156
    4. ' [' → logprob: -4.573307037353516
    5. '[]' → logprob: -4.573307037353516
    6. '(n' → logprob: -4.823307037353516
    7. '[int' → logprob: -5.073307037353516
    8. 'I' → logprob: -5.198307037353516
    9. '(' → logprob: -5.323307037353516
    10. 'n' → logprob: -5.698307037353516

Token 1766: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.009680308401584625
    2. '(lambda' → logprob: -5.009680271148682
    3. 'int' → logprob: -5.884680271148682
    4. 'lambda' → logprob: -9.75968074798584
    5. '(list' → logprob: -10.13468074798584
    6. '[int' → logprob: -10.13468074798584
    7. '<int' → logprob: -10.38468074798584
    8. 'list' → logprob: -12.88468074798584
    9. 'def' → logprob: -13.63468074798584
    10. '(bool' → logprob: -13.75968074798584

Token 1767: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0020596191752701998
    2. ')' → logprob: -6.252059459686279
    3. '())
' → logprob: -10.002059936523438
    4. ')
' → logprob: -10.377059936523438
    5. '()
' → logprob: -10.752059936523438
    6. '])
' → logprob: -11.627059936523438
    7. ')

' → logprob: -11.627059936523438
    8. ']
' → logprob: -12.127059936523438
    9. '）
' → logprob: -12.752059936523438
    10. '
' → logprob: -13.752059936523438

Token 1768: 'q' (ID: 80)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0001495484757469967
    2. '"""
' → logprob: -9.250149726867676
    3. '"""' → logprob: -10.250149726867676
    4. 'l' → logprob: -12.375149726867676
    5. ' for' → logprob: -12.750149726867676
    6. 'p' → logprob: -12.750149726867676
    7. 'cnt' → logprob: -14.000149726867676
    8. 'For' → logprob: -14.000149726867676
    9. 'a' → logprob: -14.250149726867676
    10. '```' → logprob: -14.250149726867676

Token 1769: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12698984146118164
    2. ' =' → logprob: -2.1269898414611816
    3. '[' → logprob: -10.501989364624023
    4. ']' → logprob: -12.001989364624023
    5. 'default' → logprob: -12.251989364624023
    6. 'u' → logprob: -12.376989364624023
    7. 'a' → logprob: -12.876989364624023
    8. 'p' → logprob: -12.876989364624023
    9. 's' → logprob: -13.751989364624023
    10. 'n' → logprob: -13.751989364624023

Token 1770: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.0013799945591017604
    2. '0' → logprob: -6.62637996673584
    3. '{' → logprob: -10.62637996673584
    4. '1' → logprob: -11.87637996673584
    5. '[' → logprob: -12.37637996673584
    6. ' defaultdict' → logprob: -12.62637996673584
    7. 'a' → logprob: -12.87637996673584
    8. '{}' → logprob: -13.12637996673584
    9. '(default' → logprob: -13.62637996673584
    10. 'lambda' → logprob: -13.75137996673584

Token 1771: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.31330135464668274
    2. 'int' → logprob: -1.3133013248443604
    3. '[int' → logprob: -11.313301086425781
    4. '=int' → logprob: -12.188301086425781
    5. ']int' → logprob: -12.313301086425781
    6. '<int' → logprob: -12.938301086425781
    7. '(lambda' → logprob: -13.188301086425781
    8. '0' → logprob: -13.313301086425781
    9. 'list' → logprob: -13.438301086425781
    10. 'def' → logprob: -13.688301086425781

Token 1772: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25195640325546265
    2. ')
' → logprob: -1.5019564628601074
    3. ')
' → logprob: -11.37695598602295
    4. ')

' → logprob: -12.12695598602295
    5. '
' → logprob: -13.12695598602295
    6. '())
' → logprob: -13.37695598602295
    7. '())' → logprob: -13.62695598602295
    8. '()' → logprob: -14.37695598602295
    9. ')p' → logprob: -14.37695598602295
    10. '   ' → logprob: -14.50195598602295

Token 1773: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00027921271976083517
    2. ' for' → logprob: -8.500279426574707
    3. '"""
' → logprob: -9.875279426574707
    4. '"""' → logprob: -11.375279426574707
    5. 'p' → logprob: -12.375279426574707
    6. '	for' → logprob: -13.250279426574707
    7. '
' → logprob: -13.500279426574707
    8. 'f' → logprob: -13.625279426574707
    9. '```' → logprob: -14.125279426574707
    10. 'i' → logprob: -14.250279426574707

Token 1774: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09707692265510559
    2. 'x' → logprob: -2.597076892852783
    3. 'ai' → logprob: -4.347076892852783
    4. 'e' → logprob: -7.097076892852783
    5. 'a' → logprob: -7.722076892852783
    6. '(x' → logprob: -7.722076892852783
    7. '(i' → logprob: -7.722076892852783
    8. ' i' → logprob: -7.847076892852783
    9. 'k' → logprob: -7.847076892852783
    10. 'num' → logprob: -7.847076892852783

Token 1775: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.052004680037498474
    2. 'in' → logprob: -3.05200457572937
    3. 'a' → logprob: -6.052004814147949
    4. 'range' → logprob: -7.677004814147949
    5. 'i' → logprob: -8.55200481414795
    6. '   ' → logprob: -9.80200481414795
    7. '0' → logprob: -10.17700481414795
    8. '[' → logprob: -10.30200481414795
    9. ',' → logprob: -10.30200481414795
    10. ' i' → logprob: -10.42700481414795

Token 1776: ' a' (ID: 261)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.020443201065063477
    2. 'a' → logprob: -4.020442962646484
    3. ' range' → logprob: -6.145442962646484
    4. 'b' → logprob: -9.270442962646484
    5. 'c' → logprob: -10.895442962646484
    6. '[' → logprob: -11.395442962646484
    7. '(range' → logprob: -12.145442962646484
    8. 'p' → logprob: -12.395442962646484
    9. '[a' → logprob: -12.770442962646484
    10. 'd' → logprob: -13.020442962646484

Token 1777: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0051908246241509914
    2. ':
' → logprob: -5.630190849304199
    3. '   ' → logprob: -8.0051908493042
    4. 'p' → logprob: -8.2551908493042
    5. '+' → logprob: -8.3801908493042
    6. '+:' → logprob: -9.0051908493042
    7. 'd' → logprob: -9.1301908493042
    8. '[' → logprob: -9.2551908493042
    9. '+p' → logprob: -9.7551908493042
    10. ']:' → logprob: -10.0051908493042

Token 1778: '   ' (ID: 271)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.5211018323898315
    2. 'p' → logprob: -1.2711018323898315
    3. '   ' → logprob: -2.146101951599121
    4. ' for' → logprob: -5.396101951599121
    5. 'for' → logprob: -5.896101951599121
    6. ' ' → logprob: -7.521101951599121
    7. 'q' → logprob: -8.146101951599121
    8. ' q' → logprob: -8.521101951599121
    9. '  ' → logprob: -9.646101951599121
    10. 'i' → logprob: -9.646101951599121

Token 1779: ' for' (ID: 395)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.024701032787561417
    2. ' p' → logprob: -3.7747011184692383
    3. 'for' (adapté à ' for') → logprob: -7.399701118469238
    4. '   ' → logprob: -7.524701118469238
    5. ' for' → logprob: -8.649701118469238
    6. 'q' → logprob: -9.149701118469238
    7. ' ' → logprob: -11.649701118469238
    8. ' q' → logprob: -12.649701118469238
    9. 'i' → logprob: -13.149701118469238
    10. '  ' → logprob: -13.524701118469238

Token 1780: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0019436265574768186
    2. ' j' → logprob: -6.251943588256836
    3. '   ' → logprob: -12.876943588256836
    4. '[j' → logprob: -13.126943588256836
    5. 'k' → logprob: -13.376943588256836
    6. 'x' → logprob: -13.501943588256836
    7. ' ' → logprob: -13.626943588256836
    8. 'v' → logprob: -13.751943588256836
    9. 'for' → logprob: -14.126943588256836
    10. '    ' → logprob: -14.376943588256836

Token 1781: ' in' (ID: 306)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.034714553505182266
    2. ' b' → logprob: -3.409714460372925
    3. 'c' → logprob: -7.659714698791504
    4. '   ' → logprob: -8.284714698791504
    5. 'd' → logprob: -8.909714698791504
    6. ' ' → logprob: -10.284714698791504
    7. ' c' → logprob: -10.409714698791504
    8. '[b' → logprob: -10.534714698791504
    9. ' d' → logprob: -10.909714698791504
    10. 'a' → logprob: -10.909714698791504

Token 1782: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.015072651207447052
    2. 'a' → logprob: -4.265072822570801
    3. 'c' → logprob: -7.890072822570801
    4. ' b' → logprob: -8.1400728225708
    5. 'd' → logprob: -8.8900728225708
    6. '[' → logprob: -10.0150728225708
    7. '[b' → logprob: -10.8900728225708
    8. 'p' → logprob: -11.6400728225708
    9. '[a' → logprob: -12.0150728225708
    10. 'range' → logprob: -12.1400728225708

Token 1783: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12145940214395523
    2. ':
' → logprob: -2.246459484100342
    3. '       ' → logprob: -4.996459484100342
    4. '   ' → logprob: -6.371459484100342
    5. ' :' → logprob: -10.246459007263184
    6. '+' → logprob: -11.371459007263184
    7. ',' → logprob: -11.371459007263184
    8. ' :
' → logprob: -11.621459007263184
    9. ':
' → logprob: -11.621459007263184
    10. '):
' → logprob: -11.996459007263184

Token 1784: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00033308175625279546
    2. '   ' → logprob: -9.625332832336426
    3. '	' → logprob: -9.875332832336426
    4. ',' → logprob: -10.125332832336426
    5. '    ' → logprob: -10.375332832336426
    6. '      ' → logprob: -10.375332832336426
    7. '<|end|>' → logprob: -10.375332832336426
    8. '           ' → logprob: -11.500332832336426
    9. ' p' → logprob: -11.750332832336426
    10. '     ' → logprob: -12.125332832336426

Token 1785: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6220355033874512
    2. 'p' → logprob: -1.4970355033874512
    3. ' p' → logprob: -1.4970355033874512
    4. '   ' → logprob: -4.497035503387451
    5. ' ' → logprob: -6.622035503387451
    6. '           ' → logprob: -6.997035503387451
    7. 'q' → logprob: -6.997035503387451
    8. ' q' → logprob: -7.247035503387451
    9. '    ' → logprob: -8.87203598022461
    10. '[p' → logprob: -9.24703598022461

Token 1786: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008208980783820152
    2. '(i' → logprob: -5.508208751678467
    3. ' i' → logprob: -5.758208751678467
    4. '   ' → logprob: -7.758208751678467
    5. 'p' → logprob: -8.758209228515625
    6. 'j' → logprob: -9.383209228515625
    7. '0' → logprob: -9.758209228515625
    8. '(p' → logprob: -10.258209228515625
    9. ' (' → logprob: -10.258209228515625
    10. ' ' → logprob: -10.633209228515625

Token 1787: '+j' (ID: 71365)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10489913076162338
    2. '+j' → logprob: -2.4798991680145264
    3. ' +' → logprob: -5.104898929595947
    4. '+p' → logprob: -5.229898929595947
    5. '+k' → logprob: -6.604898929595947
    6. '+c' → logprob: -6.854898929595947
    7. '+i' → logprob: -7.104898929595947
    8. '!=' → logprob: -7.729898929595947
    9. '+
' → logprob: -8.604899406433105
    10. ' !=' → logprob: -9.354899406433105

Token 1788: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.2029511034488678
    2. ' <=' → logprob: -1.7029510736465454
    3. ' not' → logprob: -7.202950954437256
    4. '==' → logprob: -7.577950954437256
    5. ' ==' → logprob: -9.077951431274414
    6. '+' → logprob: -9.577951431274414
    7. ' in' → logprob: -10.827951431274414
    8. 'not' → logprob: -11.202951431274414
    9. '>=' → logprob: -11.827951431274414
    10. '!=' → logprob: -11.952951431274414

Token 1789: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00017600801947992295
    2. '100' → logprob: -9.125176429748535
    3. '10' → logprob: -10.125176429748535
    4. ' v' → logprob: -12.000176429748535
    5. 'n' → logprob: -12.250176429748535
    6. '
' → logprob: -12.375176429748535
    7. '500' → logprob: -13.375176429748535
    8. '200' → logprob: -13.375176429748535
    9. '2' → logprob: -14.000176429748535
    10. '	v' → logprob: -14.125176429748535

Token 1790: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6439247131347656
    2. ':
' → logprob: -0.7689247131347656
    3. ':p' → logprob: -4.643924713134766
    4. '           ' → logprob: -7.018924713134766
    5. ':
' → logprob: -8.018924713134766
    6. '       ' → logprob: -8.768924713134766
    7. ':q' → logprob: -9.018924713134766
    8. ':c' → logprob: -10.893924713134766
    9. ' :
' → logprob: -10.893924713134766
    10. ' :' → logprob: -11.018924713134766

Token 1791: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012985693756490946
    2. '2' → logprob: -7.626298427581787
    3. '4' → logprob: -8.501298904418945
    4. '100' → logprob: -8.626298904418945
    5. 'd' → logprob: -9.126298904418945
    6. '10' → logprob: -9.376298904418945
    7. ' ' → logprob: -10.001298904418945
    8. 'n' → logprob: -10.251298904418945
    9. 'v' → logprob: -10.876298904418945
    10. 'p' → logprob: -10.876298904418945

Token 1792: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.43114256858825684
    2. ':' → logprob: -1.0561425685882568
    3. '           ' → logprob: -6.681142807006836
    4. ' :
' → logprob: -7.806142807006836
    5. ' and' → logprob: -8.056142807006836
    6. '       ' → logprob: -8.931142807006836
    7. ' :' → logprob: -9.431142807006836
    8. ':p' → logprob: -9.556142807006836
    9. ':
' → logprob: -9.931142807006836
    10. '   ' → logprob: -10.056142807006836

Token 1793: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001146291324403137
    2. '               ' → logprob: -10.375114440917969
    3. '	       ' → logprob: -10.500114440917969
    4. '          ' → logprob: -10.750114440917969
    5. '		' → logprob: -11.625114440917969
    6. '       ' → logprob: -12.000114440917969
    7. '         ' → logprob: -12.000114440917969
    8. ',' → logprob: -12.500114440917969
    9. '<|end|>' → logprob: -13.750114440917969
    10. ' p' → logprob: -14.000114440917969

Token 1794: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.0011941560078412294
    2. ' p' → logprob: -6.751194000244141
    3. '           ' → logprob: -11.25119400024414
    4. 'q' → logprob: -12.00119400024414
    5. '       ' → logprob: -12.75119400024414
    6. '   ' → logprob: -13.87619400024414
    7. '               ' → logprob: -15.00119400024414
    8. '	p' → logprob: -16.12619400024414
    9. 'pq' → logprob: -16.12619400024414
    10. '
' → logprob: -16.50119400024414

Token 1795: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.7994282795116305e-05
    2. '[(' → logprob: -11.00004768371582
    3. '[' → logprob: -11.62504768371582
    4. '[j' → logprob: -12.12504768371582
    5. 'i' → logprob: -12.25004768371582
    6. '
' → logprob: -12.37504768371582
    7. '[p' → logprob: -12.75004768371582
    8. '[
' → logprob: -13.37504768371582
    9. '[I' → logprob: -14.37504768371582
    10. 'p' → logprob: -14.62504768371582

Token 1796: '+j' (ID: 71365)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3465059697628021
    2. '+j' → logprob: -1.3465059995651245
    3. ' +' → logprob: -3.471505880355835
    4. '+p' → logprob: -7.596506118774414
    5. '+k' → logprob: -7.721506118774414
    6. '+t' → logprob: -8.721506118774414
    7. '+i' → logprob: -8.846506118774414
    8. '+
' → logprob: -8.846506118774414
    9. '+x' → logprob: -9.846506118774414
    10. ']+' → logprob: -10.346506118774414

Token 1797: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.38784098625183105
    2. ']+=' → logprob: -1.137840986251831
    3. ' ]' → logprob: -8.13784122467041
    4. '+' → logprob: -8.26284122467041
    5. ']+' → logprob: -8.38784122467041
    6. '+=' → logprob: -9.76284122467041
    7. '   ' → logprob: -10.38784122467041
    8. ']=' → logprob: -10.38784122467041
    9. '"]' → logprob: -10.51284122467041
    10. '       ' → logprob: -11.51284122467041

Token 1798: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.048326268792152405
    2. ' +=' → logprob: -3.173326253890991
    3. ']+=' → logprob: -5.29832649230957
    4. '=' → logprob: -8.29832649230957
    5. '+' → logprob: -10.29832649230957
    6. ']' → logprob: -11.29832649230957
    7. '   ' → logprob: -12.17332649230957
    8. '    ' → logprob: -12.54832649230957
    9. ' =' → logprob: -13.29832649230957
    10. '[' → logprob: -13.29832649230957

Token 1799: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. 'q' → logprob: -16.8750057220459
    4. '   ' → logprob: -17.5000057220459
    5. 'c' → logprob: -18.0000057220459
    6. '0' → logprob: -18.7500057220459
    7. '2' → logprob: -19.0625057220459
    8. '4' → logprob: -19.0625057220459
    9. 'a' → logprob: -19.1875057220459
    10. 'd' → logprob: -19.1875057220459

Token 1800: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.000000953674316
    3. 'c' → logprob: -15.500000953674316
    4. 'q' → logprob: -16.875001907348633
    5. '0' → logprob: -18.250001907348633
    6. '2' → logprob: -18.375001907348633
    7. 'd' → logprob: -19.000001907348633
    8. 'a' → logprob: -19.375001907348633
    9. '4' → logprob: -19.375001907348633
    10. 'i' → logprob: -19.437501907348633

Token 1801: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9370404481887817
    2. '<|end|>' → logprob: -0.9370404481887817
    3. '
' → logprob: -2.312040328979492
    4. '           ' → logprob: -2.437040328979492
    5. ' 
' → logprob: -5.437040328979492
    6. ' ' → logprob: -5.437040328979492
    7. '               ' → logprob: -5.562040328979492
    8. ')' → logprob: -5.812040328979492
    9. '   ' → logprob: -6.187040328979492
    10. '<|end|>' → logprob: -6.312040328979492

Token 1802: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2937377393245697
    2. ' for' → logprob: -1.543737769126892
    3. '       ' → logprob: -3.6687376499176025
    4. '           ' → logprob: -4.543737888336182
    5. '#' → logprob: -6.293737888336182
    6. '
' → logprob: -7.418737888336182
    7. '<|end|>' → logprob: -7.418737888336182
    8. '```' → logprob: -8.043737411499023
    9. '               ' → logprob: -8.168737411499023
    10. '[' → logprob: -9.043737411499023

Token 1803: ' i' (ID: 575)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.47424212098121643
    2. 'k' → logprob: -0.974242091178894
    3. 'i' → logprob: -9.349242210388184
    4. 'for' → logprob: -10.849242210388184
    5. ' c' → logprob: -11.349242210388184
    6. 'x' → logprob: -11.599242210388184
    7. ' k' → logprob: -11.974242210388184
    8. 'm' → logprob: -11.974242210388184
    9. '   ' → logprob: -12.599242210388184
    10. '
' → logprob: -12.974242210388184

Token 1804: ' in' (ID: 306)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0005377820343710482
    2. ' c' → logprob: -7.625537872314453
    3. 'd' → logprob: -10.375537872314453
    4. ' in' → logprob: -12.250537872314453
    5. '   ' → logprob: -12.500537872314453
    6. '	c' → logprob: -13.000537872314453
    7. 'in' → logprob: -13.125537872314453
    8. ' ' → logprob: -13.375537872314453
    9. '[c' → logprob: -14.375537872314453
    10. ')c' → logprob: -14.500537872314453

Token 1805: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.7994282795116305e-05
    2. ' c' → logprob: -10.00004768371582
    3. 'd' → logprob: -14.00004768371582
    4. '[c' → logprob: -14.12504768371582
    5. '	c' → logprob: -15.37504768371582
    6. '   ' → logprob: -15.87504768371582
    7. 'b' → logprob: -16.12504768371582
    8. '[' → logprob: -16.62504768371582
    9. '
' → logprob: -16.62504768371582
    10. 'range' → logprob: -16.75004768371582

Token 1806: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021639904007315636
    2. ':
' → logprob: -3.896639823913574
    3. '<|end|>' → logprob: -7.021639823913574
    4. '   ' → logprob: -10.521639823913574
    5. 's' → logprob: -10.646639823913574
    6. 'for' → logprob: -11.021639823913574
    7. '<|end|>' → logprob: -11.146639823913574
    8. ' in' → logprob: -11.271639823913574
    9. '+' → logprob: -11.271639823913574
    10. '{' → logprob: -11.521639823913574

Token 1807: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24481773376464844
    2. '   ' → logprob: -1.8698177337646484
    3. ' for' → logprob: -2.8698177337646484
    4. '       ' → logprob: -5.119817733764648
    5. ' ' → logprob: -8.994817733764648
    6. '	for' → logprob: -9.619817733764648
    7. '  ' → logprob: -9.744817733764648
    8. '<|end|>' → logprob: -10.369817733764648
    9. '```' → logprob: -11.494817733764648
    10. '    ' → logprob: -11.619817733764648

Token 1808: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00043221889063715935
    2. ' for' → logprob: -7.750432014465332
    3. '	for' → logprob: -13.875432014465332
    4. '   ' → logprob: -14.625432014465332
    5. '       ' → logprob: -15.875432014465332
    6. ' ' → logprob: -17.37543296813965
    7. 'For' → logprob: -18.62543296813965
    8. '<|end|>' → logprob: -18.62543296813965
    9. '```' → logprob: -19.12543296813965
    10. '
' → logprob: -19.37543296813965

Token 1809: ' j' (ID: 441)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00010413920972496271
    2. ' d' → logprob: -9.375103950500488
    3. 'j' → logprob: -10.875103950500488
    4. 'def' → logprob: -15.625103950500488
    5. '   ' → logprob: -17.000104904174805
    6. '[d' → logprob: -17.250104904174805
    7. '
' → logprob: -17.500104904174805
    8. 'k' → logprob: -17.625104904174805
    9. 'q' → logprob: -18.250104904174805
    10. 'range' → logprob: -18.625104904174805

Token 1810: ' in' (ID: 306)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04867831990122795
    2. ' d' → logprob: -3.048678398132324
    3. '   ' → logprob: -10.548678398132324
    4. ' in' → logprob: -10.673678398132324
    5. 'in' → logprob: -10.923678398132324
    6. ')d' → logprob: -11.673678398132324
    7. '	d' → logprob: -11.798678398132324
    8. ' ' → logprob: -13.423678398132324
    9. '  ' → logprob: -13.673678398132324
    10. '[d' → logprob: -13.798678398132324

Token 1811: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.676292231422849e-05
    2. ' d' → logprob: -11.000017166137695
    3. '	d' → logprob: -18.125017166137695
    4. 'def' → logprob: -19.250017166137695
    5. '
' → logprob: -19.375017166137695
    6. '   ' → logprob: -19.375017166137695
    7. '[d' → logprob: -19.625017166137695
    8. '[' → logprob: -20.000017166137695
    9. '#' → logprob: -20.000017166137695
    10. '"d' → logprob: -20.375017166137695

Token 1812: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.036707304418087006
    2. ':' → logprob: -3.4117074012756348
    3. '       ' → logprob: -6.411707401275635
    4. '   ' → logprob: -6.786707401275635
    5. '):
' → logprob: -9.536706924438477
    6. ':

' → logprob: -10.536706924438477
    7. '+' → logprob: -10.536706924438477
    8. '{
' → logprob: -10.661706924438477
    9. ':
' → logprob: -10.786706924438477
    10. ' :
' → logprob: -10.786706924438477

Token 1813: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001469153561629355
    2. 'if' → logprob: -7.001469135284424
    3. ' if' → logprob: -7.626469135284424
    4. '   ' → logprob: -10.626469612121582
    5. '           ' → logprob: -10.751469612121582
    6. '```' → logprob: -12.751469612121582
    7. '     ' → logprob: -12.876469612121582
    8. '      ' → logprob: -12.876469612121582
    9. '	' → logprob: -12.876469612121582
    10. '{
' → logprob: -13.126469612121582

Token 1814: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6497679948806763
    2. 'if' (adapté à ' if') → logprob: -0.7747679948806763
    3. ' if' → logprob: -4.149767875671387
    4. '           ' → logprob: -7.649767875671387
    5. 'q' → logprob: -7.774767875671387
    6. '   ' → logprob: -8.524767875671387
    7. 'p' → logprob: -9.899767875671387
    8. '	if' → logprob: -11.024767875671387
    9. '               ' → logprob: -11.274767875671387
    10. ' q' → logprob: -11.274767875671387

Token 1815: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007824753411114216
    2. 'v' → logprob: -5.257824897766113
    3. ' i' → logprob: -6.382824897766113
    4. '(i' → logprob: -7.882824897766113
    5. '   ' → logprob: -8.132824897766113
    6. 'n' → logprob: -9.882824897766113
    7. '0' → logprob: -10.257824897766113
    8. ' ' → logprob: -10.257824897766113
    9. '
' → logprob: -11.007824897766113
    10. ' v' → logprob: -11.132824897766113

Token 1816: '+j' (ID: 71365)
  Prédit: '+j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+j' → logprob: -0.0013613052433356643
    2. '+' → logprob: -6.62636137008667
    3. ' +' → logprob: -10.376360893249512
    4. '+
' → logprob: -13.126360893249512
    5. '+k' → logprob: -15.001360893249512
    6. '[j' → logprob: -15.126360893249512
    7. '+x' → logprob: -15.251360893249512
    8. 'j' → logprob: -15.626360893249512
    9. '+d' → logprob: -15.876360893249512
    10. '+p' → logprob: -15.876360893249512

Token 1817: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.031010888516902924
    2. '<=' → logprob: -3.531010866165161
    3. ' <' → logprob: -6.90601110458374
    4. '<' → logprob: -8.906010627746582
    5. ' ' → logprob: -9.906010627746582
    6. ')' → logprob: -11.531010627746582
    7. ']<=' → logprob: -11.656010627746582
    8. '   ' → logprob: -11.781010627746582
    9. ']' → logprob: -11.781010627746582
    10. '+' → logprob: -12.031010627746582

Token 1818: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.004662711173295975
    2. ' v' → logprob: -5.37966251373291
    3. '   ' → logprob: -10.87966251373291
    4. ' ' → logprob: -11.12966251373291
    5. '
' → logprob: -13.37966251373291
    6. '	v' → logprob: -13.62966251373291
    7. '(v' → logprob: -13.62966251373291
    8. ' (' → logprob: -14.00466251373291
    9. '100' → logprob: -14.25466251373291
    10. '4' → logprob: -14.62966251373291

Token 1819: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.659005157416686e-05
    2. ' -' → logprob: -9.625066757202148
    3. '   ' → logprob: -15.125066757202148
    4. ' ' → logprob: -17.00006675720215
    5. '1' → logprob: -17.62506675720215
    6. '-
' → logprob: -17.75006675720215
    7. '[' → logprob: -17.75006675720215
    8. '
' → logprob: -17.75006675720215
    9. '#' → logprob: -17.87506675720215
    10. '<|end|>' → logprob: -17.87506675720215

Token 1820: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.697387966094539e-05
    2. '4' → logprob: -10.125086784362793
    3. ' ' → logprob: -10.625086784362793
    4. '1' → logprob: -11.375086784362793
    5. '3' → logprob: -12.000086784362793
    6. '-' → logprob: -14.125086784362793
    7. '0' → logprob: -14.500086784362793
    8. 'v' → logprob: -14.625086784362793
    9. '100' → logprob: -14.812586784362793
    10. '10' → logprob: -15.187586784362793

Token 1821: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20087501406669617
    2. ':' → logprob: -1.8258750438690186
    3. '           ' → logprob: -4.0758748054504395
    4. '       ' → logprob: -5.5758748054504395
    5. ':
' → logprob: -9.825875282287598
    6. '   ' → logprob: -10.825875282287598
    7. '          ' → logprob: -11.575875282287598
    8. '):
' → logprob: -11.825875282287598
    9. ':

' → logprob: -11.950875282287598
    10. ' and' → logprob: -12.075875282287598

Token 1822: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011914481408894062
    2. '       ' → logprob: -4.511914253234863
    3. 'p' → logprob: -8.011914253234863
    4. '          ' → logprob: -9.011914253234863
    5. ' p' → logprob: -9.136914253234863
    6. ':
' → logprob: -9.386914253234863
    7. ':' → logprob: -9.636914253234863
    8. '               ' → logprob: -10.011914253234863
    9. '   ' → logprob: -10.636914253234863
    10. '        ' → logprob: -10.636914253234863

Token 1823: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.0011480755638331175
    2. ' q' → logprob: -6.876148223876953
    3. '           ' → logprob: -9.751148223876953
    4. 'p' → logprob: -10.376148223876953
    5. '   ' → logprob: -11.126148223876953
    6. '       ' → logprob: -12.376148223876953
    7. '	q' → logprob: -12.376148223876953
    8. '               ' → logprob: -14.001148223876953
    9. ' ' → logprob: -14.626148223876953
    10. '  ' → logprob: -14.876148223876953

Token 1824: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000923965300898999
    2. '+=' → logprob: -7.625924110412598
    3. ' +=' → logprob: -8.625924110412598
    4. '[q' → logprob: -8.625924110412598
    5. '[j' → logprob: -10.500924110412598
    6. '[' → logprob: -11.000924110412598
    7. '+' → logprob: -12.000924110412598
    8. '[int' → logprob: -12.250924110412598
    9. ']+=' → logprob: -12.250924110412598
    10. '[(' → logprob: -12.375924110412598

Token 1825: '+j' (ID: 71365)
  Prédit: '+j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+j' → logprob: -0.0011720098555088043
    2. '+' → logprob: -6.751172065734863
    3. ' +' → logprob: -14.501172065734863
    4. '+
' → logprob: -14.751172065734863
    5. '+s' → logprob: -15.751172065734863
    6. '+x' → logprob: -16.001171112060547
    7. '[j' → logprob: -16.626171112060547
    8. '+i' → logprob: -16.876171112060547
    9. '+d' → logprob: -17.001171112060547
    10. ']+' → logprob: -17.001171112060547

Token 1826: ']' (ID: 60)
  Prédit: ']+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.4807090163230896
    2. ']' → logprob: -1.8557090759277344
    3. ' +=' → logprob: -2.2307090759277344
    4. '+=' → logprob: -2.8557090759277344
    5. '+' → logprob: -2.8557090759277344
    6. ' ]' → logprob: -6.355709075927734
    7. ']+' → logprob: -7.730709075927734
    8. ' +' → logprob: -8.230709075927734
    9. '+]' → logprob: -8.730709075927734
    10. '   ' → logprob: -10.105709075927734

Token 1827: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.004083266947418451
    2. ' +=' → logprob: -5.504083156585693
    3. ']+=' → logprob: -12.504083633422852
    4. '=' → logprob: -14.629083633422852
    5. '-=' → logprob: -15.004083633422852
    6. '   ' → logprob: -15.379083633422852
    7. '+' → logprob: -15.754083633422852
    8. '       ' → logprob: -17.25408363342285
    9. '[' → logprob: -17.87908363342285
    10. '+=(' → logprob: -18.62908363342285

Token 1828: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013276183744892478
    2. ' ' → logprob: -6.6263275146484375
    3. 'v' → logprob: -14.751327514648438
    4. '0' → logprob: -14.751327514648438
    5. 'p' → logprob: -15.001327514648438
    6. 'n' → logprob: -15.626327514648438
    7. '-' → logprob: -15.626327514648438
    8. 'int' → logprob: -16.876327514648438
    9. '4' → logprob: -17.126327514648438
    10. '   ' → logprob: -17.251327514648438

Token 1829: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.643152740551159e-05
    2. ' ' → logprob: -10.250036239624023
    3. '-' → logprob: -14.375036239624023
    4. '0' → logprob: -15.250036239624023
    5. '   ' → logprob: -16.375036239624023
    6. '
' → logprob: -17.312536239624023
    7. 'int' → logprob: -17.375036239624023
    8. '+' → logprob: -17.750036239624023
    9. '(' → logprob: -17.875036239624023
    10. '```' → logprob: -18.125036239624023

Token 1830: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2116241604089737
    2. '<|end|>' → logprob: -1.7116241455078125
    3. ' for' → logprob: -5.4616241455078125
    4. ')' → logprob: -6.3366241455078125
    5. '
' → logprob: -6.8366241455078125
    6. 'print' → logprob: -6.9616241455078125
    7. '           ' → logprob: -7.5866241455078125
    8. '       ' → logprob: -7.7116241455078125
    9. '<|end|>' → logprob: -8.336624145507812
    10. '   ' → logprob: -8.836624145507812

Token 1831: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04677805304527283
    2. ' for' → logprob: -3.5467779636383057
    3. '<|end|>' → logprob: -4.671778202056885
    4. ')' → logprob: -6.296778202056885
    5. '
' → logprob: -6.796778202056885
    6. '#' → logprob: -7.171778202056885
    7. '[' → logprob: -7.421778202056885
    8. '+' → logprob: -7.796778202056885
    9. ' ' → logprob: -8.171777725219727
    10. 'print' → logprob: -8.671777725219727

Token 1832: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20863717794418335
    2. ' =' → logprob: -1.7086372375488281
    3. '+=' → logprob: -5.458637237548828
    4. ' +=' → logprob: -5.833637237548828
    5. '[' → logprob: -12.958637237548828
    6. '+' → logprob: -13.333637237548828
    7. ' =
' → logprob: -13.458637237548828
    8. ' ' → logprob: -13.583637237548828
    9. '=
' → logprob: -14.208637237548828
    10. '   ' → logprob: -14.583637237548828

Token 1833: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009273725561797619
    2. 'p' → logprob: -5.509273529052734
    3. ' ' → logprob: -5.759273529052734
    4. 'False' → logprob: -7.009273529052734
    5. 'max' → logprob: -7.759273529052734
    6. 'sum' → logprob: -8.134273529052734
    7. ' p' → logprob: -8.884273529052734
    8. 'v' → logprob: -9.634273529052734
    9. '4' → logprob: -10.759273529052734
    10. 'len' → logprob: -11.009273529052734

Token 1834: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0012084494810551405
    2. 'False' → logprob: -7.251208305358887
    3. 'p' → logprob: -8.626208305358887
    4. 'default' → logprob: -9.626208305358887
    5. 'sum' → logprob: -9.626208305358887
    6. 'max' → logprob: -9.751208305358887
    7. ' ' → logprob: -10.626208305358887
    8. '"' → logprob: -10.626208305358887
    9. 'int' → logprob: -11.126208305358887
    10. '1' → logprob: -11.251208305358887

Token 1835: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0021836883388459682
    2. ' for' → logprob: -6.25218391418457
    3. '
' → logprob: -8.37718391418457
    4. '   ' → logprob: -11.62718391418457
    5. '```' → logprob: -12.12718391418457
    6. '+' → logprob: -12.37718391418457
    7. '+
' → logprob: -13.12718391418457
    8. 'while' → logprob: -14.00218391418457
    9. '       ' → logprob: -14.37718391418457
    10. '           ' → logprob: -14.50218391418457

Token 1836: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009364743018522859
    2. ' for' → logprob: -7.000936508178711
    3. '
' → logprob: -10.750936508178711
    4. '```' → logprob: -13.750936508178711
    5. 'For' → logprob: -14.625936508178711
    6. '   ' → logprob: -14.750936508178711
    7. '	for' → logprob: -14.875936508178711
    8. '<|end|>' → logprob: -15.250936508178711
    9. '+' → logprob: -15.625936508178711
    10. ' ' → logprob: -15.750936508178711

Token 1837: ' i' (ID: 575)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.359074205160141
    2. 'k' → logprob: -1.7340742349624634
    3. 'i' → logprob: -2.984074115753174
    4. 'key' → logprob: -3.359074115753174
    5. 'p' → logprob: -3.359074115753174
    6. '(k' → logprob: -6.609074115753174
    7. 'pq' → logprob: -7.359074115753174
    8. '(i' → logprob: -7.609074115753174
    9. 'pi' → logprob: -7.734074115753174
    10. 's' → logprob: -7.734074115753174

Token 1838: ',j' (ID: 22712)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.025268999859690666
    2. 'in' → logprob: -4.400269031524658
    3. ',p' → logprob: -4.650269031524658
    4. 'p' → logprob: -6.025269031524658
    5. ',' → logprob: -7.900269031524658
    6. ' p' → logprob: -9.6502685546875
    7. 's' → logprob: -10.6502685546875
    8. '1' → logprob: -10.6502685546875
    9. ' ,' → logprob: -10.6502685546875
    10. '   ' → logprob: -11.0252685546875

Token 1839: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.17984630167484283
    2. ' in' → logprob: -1.8048462867736816
    3. ',p' → logprob: -9.92984676361084
    4. '   ' → logprob: -10.80484676361084
    5. ',' → logprob: -11.42984676361084
    6. ' ' → logprob: -12.42984676361084
    7. '_in' → logprob: -12.92984676361084
    8. '	in' → logprob: -12.92984676361084
    9. 'import' → logprob: -13.30484676361084
    10. ',v' → logprob: -13.42984676361084

Token 1840: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00027444821898825467
    2. 'q' → logprob: -8.625274658203125
    3. ' p' → logprob: -9.375274658203125
    4. 'list' → logprob: -12.000274658203125
    5. 'range' → logprob: -13.125274658203125
    6. '
' → logprob: -13.875274658203125
    7. '[p' → logprob: -14.750274658203125
    8. '(p' → logprob: -15.500274658203125
    9. ' list' → logprob: -16.500274658203125
    10. 'enumer' → logprob: -16.750274658203125

Token 1841: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.16962748765945435
    2. 'items' → logprob: -2.2946274280548096
    3. ' in' → logprob: -3.5446274280548096
    4. 'in' → logprob: -3.7946274280548096
    5. '.iteritems' → logprob: -5.919627666473389
    6. ' items' → logprob: -7.919627666473389
    7. ':
' → logprob: -8.66962718963623
    8. '   ' → logprob: -8.91962718963623
    9. '_items' → logprob: -8.91962718963623
    10. ':' → logprob: -8.91962718963623

Token 1842: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.048966117203235626
    2. '():' → logprob: -3.0489661693573
    3. '()' → logprob: -8.048966407775879
    4. '():
' → logprob: -9.923966407775879
    5. '():

' → logprob: -12.798966407775879
    6. '()):
' → logprob: -13.173966407775879
    7. ':' → logprob: -13.298966407775879
    8. '()
' → logprob: -13.798966407775879
    9. '();' → logprob: -14.173966407775879
    10. '(),' → logprob: -14.298966407775879

Token 1843: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002345323096960783
    2. '       ' → logprob: -7.002345085144043
    3. ':' → logprob: -7.252345085144043
    4. '<|end|>' → logprob: -8.127345085144043
    5. ' if' → logprob: -8.877345085144043
    6. '<|end|>' → logprob: -9.627345085144043
    7. ',' → logprob: -10.002345085144043
    8. '    ' → logprob: -10.377345085144043
    9. '  ' → logprob: -10.502345085144043
    10. '```' → logprob: -10.877345085144043

Token 1844: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5665754079818726
    2. 'ans' (adapté à ' ans') → logprob: -0.9415754079818726
    3. 'if' → logprob: -3.941575527191162
    4. ' ans' → logprob: -4.191575527191162
    5. '	ans' → logprob: -5.066575527191162
    6. ' if' → logprob: -7.191575527191162
    7. '       ' → logprob: -7.816575527191162
    8. '(ans' → logprob: -8.691575050354004
    9. 'for' → logprob: -9.066575050354004
    10. '
' → logprob: -9.691575050354004

Token 1845: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.08942684531211853
    2. ' +=' → logprob: -2.4644267559051514
    3. '+=(' → logprob: -8.21442699432373
    4. '+' → logprob: -9.33942699432373
    5. '   ' → logprob: -9.58942699432373
    6. ']+=' → logprob: -9.83942699432373
    7. '=' → logprob: -13.71442699432373
    8. 'import' → logprob: -14.21442699432373
    9. '       ' → logprob: -14.33942699432373
    10. '	' → logprob: -14.46442699432373

Token 1846: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06704582273960114
    2. 'q' → logprob: -2.9420459270477295
    3. 'p' → logprob: -4.44204568862915
    4. '(j' → logprob: -9.192046165466309
    5. ' j' → logprob: -9.692046165466309
    6. '   ' → logprob: -9.942046165466309
    7. '(p' → logprob: -10.192046165466309
    8. '(q' → logprob: -10.317046165466309
    9. '(' → logprob: -11.442046165466309
    10. ' q' → logprob: -12.192046165466309

Token 1847: '*q' (ID: 136288)
  Prédit: '*q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*q' → logprob: -0.0477135144174099
    2. '*' → logprob: -3.1727135181427
    3. ' *' → logprob: -5.797713279724121
    4. '*p' → logprob: -6.422713279724121
    5. 'q' → logprob: -10.797713279724121
    6. '**' → logprob: -11.922713279724121
    7. '*
' → logprob: -12.547713279724121
    8. '*(' → logprob: -13.172713279724121
    9. '   ' → logprob: -13.297713279724121
    10. '*[' → logprob: -13.547713279724121

Token 1848: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.011098755523562431
    2. '[i' → logprob: -5.011098861694336
    3. '.get' → logprob: -5.636098861694336
    4. '[-' → logprob: -7.761098861694336
    5. '[' → logprob: -8.636098861694336
    6. 'v' → logprob: -9.636098861694336
    7. '[(' → logprob: -9.761098861694336
    8. '[p' → logprob: -10.761098861694336
    9. 'get' → logprob: -11.386098861694336
    10. '[len' → logprob: -11.386098861694336

Token 1849: '-i' (ID: 18499)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2764187753200531
    2. '-i' → logprob: -1.5264188051223755
    3. ' -' → logprob: -3.776418685913086
    4. '-(' → logprob: -6.776418685913086
    5. 'i' → logprob: -10.026418685913086
    6. '-
' → logprob: -10.401418685913086
    7. '-k' → logprob: -11.276418685913086
    8. '2' → logprob: -12.026418685913086
    9. '1' → logprob: -12.276418685913086
    10. '-I' → logprob: -12.526418685913086

Token 1850: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.22660328447818756
    2. '-' → logprob: -1.6016032695770264
    3. '-i' → logprob: -7.3516035079956055
    4. ' -' → logprob: -8.226603507995605
    5. '])' → logprob: -9.351603507995605
    6. ' ]' → logprob: -9.726603507995605
    7. '2' → logprob: -9.851603507995605
    8. ']
' → logprob: -10.851603507995605
    9. '-v' → logprob: -11.601603507995605
    10. '-j' → logprob: -12.101603507995605

Token 1851: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9094572067260742
    2. '<|end|>' → logprob: -1.5344572067260742
    3. '"""' → logprob: -1.7844572067260742
    4. '```' → logprob: -2.784457206726074
    5. ' return' → logprob: -3.534457206726074
    6. 'return' → logprob: -3.784457206726074
    7. '
' → logprob: -3.784457206726074
    8. '+' → logprob: -3.784457206726074
    9. '""' → logprob: -4.909457206726074
    10. 'print' → logprob: -5.034457206726074

Token 1852: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -5.796184723294573e-06
    2. 'ans' → logprob: -12.125005722045898
    3. '(' → logprob: -15.625005722045898
    4. '(abs' → logprob: -16.6250057220459
    5. '(answer' → logprob: -17.1250057220459
    6. '(an' → logprob: -17.6250057220459
    7. '(
' → logprob: -17.7500057220459
    8. '	ans' → logprob: -19.1250057220459
    9. '(ab' → logprob: -19.1250057220459
    10. ' (' → logprob: -19.2500057220459

Token 1853: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.836499985889532e-05
    2. ')
' → logprob: -9.8750581741333
    3. '")' → logprob: -12.7500581741333
    4. '```' → logprob: -13.0000581741333
    5. '`)' → logprob: -14.3750581741333
    6. ' )' → logprob: -15.6250581741333
    7. '"""' → logprob: -15.7500581741333
    8. '())' → logprob: -15.8750581741333
    9. '')' → logprob: -16.125059127807617
    10. '})' → logprob: -16.250059127807617

Token 1854: '"""

' (ID: 34508)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5174006819725037
    2. '<|end|>' → logprob: -2.0174007415771484
    3. '"""' → logprob: -2.6424007415771484
    4. '+' → logprob: -3.0174007415771484
    5. '[' → logprob: -3.3924007415771484
    6. ' ' → logprob: -3.6424007415771484
    7. ' """' → logprob: -4.392400741577148
    8. '}' → logprob: -4.642400741577148
    9. '
' → logprob: -4.642400741577148
    10. '   ' → logprob: -5.017400741577148

Token 1855: '#' (ID: 2)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.22383607923984528
    2. '-' → logprob: -3.3488361835479736
    3. '+' → logprob: -3.4738361835479736
    4. '#' → logprob: -3.7238361835479736
    5. '=' → logprob: -3.8488361835479736
    6. '   ' → logprob: -4.2238359451293945
    7. ' ' → logprob: -4.5988359451293945
    8. 'for' → logprob: -4.5988359451293945
    9. 'n' → logprob: -4.8488359451293945
    10. ')' → logprob: -4.9738359451293945

Token 1856: '5' (ID: 20)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6235480904579163
    2. '[' → logprob: -1.1235480308532715
    3. 'n' → logprob: -3.1235480308532715
    4. 'for' → logprob: -3.4985480308532715
    5. ')' → logprob: -4.1235480308532715
    6. 'v' → logprob: -4.8735480308532715
    7. '   ' → logprob: -5.1235480308532715
    8. ' ' → logprob: -5.2485480308532715
    9. '"""' → logprob: -5.6235480308532715
    10. ']' → logprob: -5.7485480308532715

Token 1857: ':T' (ID: 118574)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.325593501329422
    2. '"""' → logprob: -1.7005934715270996
    3. '<|end|>' → logprob: -3.4505934715270996
    4. '```' → logprob: -4.0755934715271
    5. 'n' → logprob: -4.2005934715271
    6. '=' → logprob: -4.7005934715271
    7. 'def' → logprob: -5.0755934715271
    8. ':' → logprob: -5.7005934715271
    9. '<|end|>' → logprob: -5.9505934715271
    10. '""' → logprob: -6.4505934715271

Token 1858: 'wel' (ID: 19663)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1241743564605713
    2. '"""' → logprob: -1.3741743564605713
    3. '<|end|>' → logprob: -2.6241743564605713
    4. ' ' → logprob: -2.7491743564605713
    5. '[' → logprob: -2.8741743564605713
    6. ' =' → logprob: -2.9991743564605713
    7. 'n' → logprob: -3.2491743564605713
    8. '=' → logprob: -3.4991743564605713
    9. ' """' → logprob: -3.7491743564605713
    10. 'r' → logprob: -4.374174118041992

Token 1859: 'ved' (ID: 3045)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.006461262702942
    2. 'r' → logprob: -2.0064611434936523
    3. '#' → logprob: -2.1314611434936523
    4. '0' → logprob: -2.6314611434936523
    5. '[' → logprob: -2.8814611434936523
    6. 'x' → logprob: -3.1314611434936523
    7. ')' → logprob: -3.5064611434936523
    8. '+' → logprob: -3.8814611434936523
    9. 'w' → logprob: -4.256461143493652
    10. 't' → logprob: -4.381461143493652

Token 1860: 'fold' (ID: 32405)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.22554343938827515
    2. '"""' → logprob: -2.72554349899292
    3. 'n' → logprob: -3.47554349899292
    4. ' ' → logprob: -3.72554349899292
    5. '<|end|>' → logprob: -4.35054349899292
    6. ')' → logprob: -4.47554349899292
    7. ' #' → logprob: -4.60054349899292
    8. 's' → logprob: -4.85054349899292
    9. 'def' → logprob: -5.10054349899292
    10. 'v' → logprob: -5.22554349899292

Token 1861: '_W' (ID: 5493)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.728526771068573
    2. ')' → logprob: -1.4785268306732178
    3. 'n' → logprob: -2.2285268306732178
    4. '[' → logprob: -3.2285268306732178
    5. '<|end|>' → logprob: -3.2285268306732178
    6. 'a' → logprob: -3.7285268306732178
    7. ' ' → logprob: -4.353526592254639
    8. ' #' → logprob: -4.728526592254639
    9. '"""' → logprob: -4.978526592254639
    10. ']' → logprob: -5.103526592254639

Token 1862: 'ay' (ID: 356)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -1.13935124874115
    2. '<|end|>' → logprob: -1.13935124874115
    3. '#' → logprob: -1.63935124874115
    4. 'def' → logprob: -3.1393513679504395
    5. 'n' → logprob: -3.6393513679504395
    6. ' ' → logprob: -3.6393513679504395
    7. '<|end|>' → logprob: -4.2643513679504395
    8. ' """' → logprob: -4.6393513679504395
    9. ' #' → logprob: -4.7643513679504395
    10. ' =' → logprob: -5.3893513679504395

Token 1863: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4880363941192627
    2. '<|end|>' → logprob: -1.3630363941192627
    3. 'n' → logprob: -3.6130363941192627
    4. ':' → logprob: -3.7380363941192627
    5. '"""' → logprob: -3.8630363941192627
    6. ')' → logprob: -3.8630363941192627
    7. '[' → logprob: -4.363036155700684
    8. 'def' → logprob: -5.238036155700684
    9. '```' → logprob: -5.238036155700684
    10. '...' → logprob: -5.988036155700684

Token 1864: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.36898571252822876
    2. 'n' → logprob: -2.368985652923584
    3. '#' → logprob: -2.493985652923584
    4. ' for' → logprob: -2.993985652923584
    5. '   ' → logprob: -3.118985652923584
    6. '#!' → logprob: -4.993985652923584
    7. 'i' → logprob: -5.243985652923584
    8. '[' → logprob: -5.368985652923584
    9. ' #' → logprob: -5.618985652923584
    10. ' ' → logprob: -5.993985652923584

Token 1865: '5' (ID: 20)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1322985291481018
    2. 'n' → logprob: -3.007298469543457
    3. '#' → logprob: -3.507298469543457
    4. ' for' → logprob: -4.382298469543457
    5. '   ' → logprob: -4.757298469543457
    6. 'i' → logprob: -5.757298469543457
    7. ' """' → logprob: -6.132298469543457
    8. '"""' → logprob: -6.132298469543457
    9. 'm' → logprob: -6.257298469543457
    10. '1' → logprob: -6.257298469543457

Token 1866: '_A' (ID: 6829)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10963288694620132
    2. '_A' → logprob: -2.859632968902588
    3. '#' → logprob: -3.484632968902588
    4. '"""' → logprob: -5.109632968902588
    5. ':' → logprob: -6.484632968902588
    6. 'def' → logprob: -6.984632968902588
    7. '_E' → logprob: -7.109632968902588
    8. '_F' → logprob: -7.109632968902588
    9. '_G' → logprob: -7.359632968902588
    10. ' =' → logprob: -7.359632968902588

Token 1867: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3499699831008911
    2. '"""' → logprob: -1.3499699831008911
    3. 'n' → logprob: -1.4749699831008911
    4. ':' → logprob: -1.9749699831008911
    5. '(n' → logprob: -3.3499698638916016
    6. '#' → logprob: -3.4749698638916016
    7. '()' → logprob: -4.349969863891602
    8. '
' → logprob: -5.474969863891602
    9. '("""' → logprob: -5.474969863891602
    10. '""' → logprob: -5.724969863891602

Token 1868: '"""
' (ID: 15611)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3854331970214844
    2. 'def' → logprob: -1.6354331970214844
    3. '"""' → logprob: -2.3854331970214844
    4. 'd' → logprob: -4.760433197021484
    5. 'a' → logprob: -4.885433197021484
    6. '"""
' → logprob: -5.260433197021484
    7. 's' → logprob: -6.135433197021484
    8. 'l' → logprob: -6.135433197021484
    9. 't' → logprob: -7.010433197021484
    10. 'v' → logprob: -7.010433197021484

Token 1869: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.33226799964904785
    2. '#' → logprob: -2.707267999649048
    3. '(' → logprob: -3.207267999649048
    4. '[' → logprob: -3.332267999649048
    5. 'a' → logprob: -3.707267999649048
    6. '"""' → logprob: -3.707267999649048
    7. 'v' → logprob: -3.832267999649048
    8. 'i' → logprob: -4.457267761230469
    9. 'def' → logprob: -4.457267761230469
    10. ' ' → logprob: -5.332267761230469

Token 1870: ',k' (ID: 35155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0651097297668457
    2. ' =' → logprob: -1.9401097297668457
    3. ',k' → logprob: -1.9401097297668457
    4. ',w' → logprob: -2.0651097297668457
    5. ',W' → logprob: -2.5651097297668457
    6. '=' → logprob: -2.6901097297668457
    7. ',v' → logprob: -3.0651097297668457
    8. ',m' → logprob: -4.815109729766846
    9. ',n' → logprob: -5.065109729766846
    10. ',K' → logprob: -5.190109729766846

Token 1871: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8058805465698242
    2. ',' → logprob: -1.1808805465698242
    3. ' =' → logprob: -1.5558805465698242
    4. ',k' → logprob: -3.430880546569824
    5. ',n' → logprob: -6.930880546569824
    6. ',p' → logprob: -7.680880546569824
    7. ',m' → logprob: -7.930880546569824
    8. ' ,' → logprob: -8.930880546569824
    9. ')' → logprob: -9.305880546569824
    10. ',l' → logprob: -9.305880546569824

Token 1872: ' map' (ID: 4014)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.3987313210964203
    2. 'map' → logprob: -1.1487313508987427
    3. ' map' → logprob: -4.648731231689453
    4. ' LI' → logprob: -6.398731231689453
    5. 'list' → logprob: -7.648731231689453
    6. 'li' → logprob: -10.523731231689453
    7. 'I' → logprob: -11.023731231689453
    8. ' list' → logprob: -11.898731231689453
    9. 'Li' → logprob: -12.148731231689453
    10. 'MI' → logprob: -12.273731231689453

Token 1873: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0013515453319996595
    2. 'int' → logprob: -6.626351356506348
    3. '(' → logprob: -10.751351356506348
    4. '=int' → logprob: -13.001351356506348
    5. '(in' → logprob: -14.626351356506348
    6. '(
' → logprob: -14.626351356506348
    7. ' int' → logprob: -15.376351356506348
    8. ',int' → logprob: -15.501351356506348
    9. '[int' → logprob: -15.501351356506348
    10. '(str' → logprob: -15.626351356506348

Token 1874: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.41896364092826843
    2. ',' → logprob: -1.6689636707305908
    3. ',int' → logprob: -2.668963670730591
    4. '(' → logprob: -2.668963670730591
    5. 'int' → logprob: -4.668963432312012
    6. '(
' → logprob: -6.168963432312012
    7. ')' → logprob: -6.543963432312012
    8. '=int' → logprob: -6.668963432312012
    9. '()' → logprob: -8.543963432312012
    10. '(),' → logprob: -8.668963432312012

Token 1875: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.531315314830863e-06
    2. 'input' → logprob: -12.750003814697266
    3. '=int' → logprob: -15.250003814697266
    4. ' int' → logprob: -15.500003814697266
    5. '(int' → logprob: -16.250003814697266
    6. 'str' → logprob: -16.500003814697266
    7. ',int' → logprob: -17.625003814697266
    8. '[int' → logprob: -18.125003814697266
    9. ':int' → logprob: -18.875003814697266
    10. 'I' → logprob: -19.375003814697266

Token 1876: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4107130169868469
    2. '())' → logprob: -1.9107129573822021
    3. '(' → logprob: -2.160712957382202
    4. ')' → logprob: -2.910712957382202
    5. '(
' → logprob: -4.785713195800781
    6. '()
' → logprob: -6.035713195800781
    7. '()[' → logprob: -6.410713195800781
    8. ',' → logprob: -6.660713195800781
    9. '(),' → logprob: -6.660713195800781
    10. '().' → logprob: -7.285713195800781

Token 1877: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.947715832618997e-05
    2. 's' → logprob: -10.125089645385742
    3. 'spl' → logprob: -10.875089645385742
    4. 'int' → logprob: -11.625089645385742
    5. '(split' → logprob: -12.375089645385742
    6. 'skip' → logprob: -12.875089645385742
    7. '_split' → logprob: -13.000089645385742
    8. 'input' → logprob: -13.125089645385742
    9. 'scanf' → logprob: -13.250089645385742
    10. ')' → logprob: -13.375089645385742

Token 1878: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.002089711604639888
    2. '())
' → logprob: -6.252089500427246
    3. '()' → logprob: -9.002089500427246
    4. ')' → logprob: -10.502089500427246
    5. '())
' → logprob: -11.627089500427246
    6. '())

' → logprob: -14.627089500427246
    7. '()
' → logprob: -15.377089500427246
    8. ' ())' → logprob: -15.377089500427246
    9. '()))' → logprob: -15.627089500427246
    10. '());' → logprob: -15.627089500427246

Token 1879: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0352548360824585
    2. 'l' → logprob: -1.1602548360824585
    3. 'dp' → logprob: -1.6602548360824585
    4. 'a' → logprob: -3.035254955291748
    5. 'k' → logprob: -3.910254955291748
    6. 's' → logprob: -4.160254955291748
    7. 'n' → logprob: -4.535254955291748
    8. 'd' → logprob: -4.535254955291748
    9. '"""
' → logprob: -5.160254955291748
    10. 'x' → logprob: -5.285254955291748

Token 1880: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12172498553991318
    2. '=' → logprob: -2.246725082397461
    3. '<|end|>' → logprob: -5.746725082397461
    4. ' ' → logprob: -5.996725082397461
    5. ',' → logprob: -6.746725082397461
    6. '[' → logprob: -7.121725082397461
    7. ')' → logprob: -7.496725082397461
    8. '#' → logprob: -8.871725082397461
    9. '   ' → logprob: -9.371725082397461
    10. '_' → logprob: -9.496725082397461

Token 1881: ' k' (ID: 372)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002242323709651828
    2. 'float' → logprob: -7.127242088317871
    3. '[]' → logprob: -7.127242088317871
    4. '[]
' → logprob: -8.877242088317871
    5. ' ' → logprob: -9.377242088317871
    6. '-' → logprob: -9.377242088317871
    7. '[' → logprob: -9.502242088317871
    8. '1' → logprob: -9.502242088317871
    9. '""' → logprob: -9.627242088317871
    10. 'int' → logprob: -10.502242088317871

Token 1882: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1792433112859726
    2. '<|end|>' → logprob: -3.429243326187134
    3. '-' → logprob: -3.554243326187134
    4. '
' → logprob: -3.679243326187134
    5. '#' → logprob: -3.679243326187134
    6. '**' → logprob: -3.929243326187134
    7. ' +' → logprob: -4.554243087768555
    8. '%' → logprob: -5.179243087768555
    9. 'for' → logprob: -5.179243087768555
    10. ' -' → logprob: -5.804243087768555

Token 1883: 'for' (ID: 1938)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8635304570198059
    2. 'for' → logprob: -1.2385303974151611
    3. '*' → logprob: -1.6135303974151611
    4. ')' → logprob: -3.988530397415161
    5. ' ' → logprob: -4.11353063583374
    6. '
' → logprob: -4.86353063583374
    7. '-' → logprob: -4.98853063583374
    8. ',' → logprob: -5.23853063583374
    9. '#' → logprob: -5.48853063583374
    10. 'n' → logprob: -5.61353063583374

Token 1884: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.881157398223877
    2. ' i' → logprob: -1.131157398223877
    3. 'i' → logprob: -1.381157398223877
    4. ' _' → logprob: -4.631157398223877
    5. '_i' → logprob: -6.256157398223877
    6. ' ' → logprob: -9.631156921386719
    7. '	i' → logprob: -11.381156921386719
    8. '  ' → logprob: -12.381156921386719
    9. '   ' → logprob: -12.506156921386719
    10. '__' → logprob: -14.256156921386719

Token 1885: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6932443380355835
    2. ' in' → logprob: -0.6932443380355835
    3. '_' → logprob: -10.568243980407715
    4. 'range' → logprob: -10.568243980407715
    5. ' ' → logprob: -11.193243980407715
    6. 'i' → logprob: -12.068243980407715
    7. ' i' → logprob: -12.068243980407715
    8. '	in' → logprob: -12.193243980407715
    9. 'import' → logprob: -12.318243980407715
    10. '   ' → logprob: -12.818243980407715

Token 1886: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10049833357334137
    2. ' range' → logprob: -2.3504984378814697
    3. '_' → logprob: -8.22549819946289
    4. ' _' → logprob: -11.72549819946289
    5. '_range' → logprob: -12.22549819946289
    6. ' in' → logprob: -12.72549819946289
    7. ' ' → logprob: -12.72549819946289
    8. 'in' → logprob: -12.97549819946289
    9. 'i' → logprob: -14.35049819946289
    10. '	range' → logprob: -14.85049819946289

Token 1887: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0014158309204503894
    2. '(n' → logprob: -7.126415729522705
    3. '1' → logprob: -7.501415729522705
    4. '(k' → logprob: -10.501416206359863
    5. '(ans' → logprob: -10.751416206359863
    6. '2' → logprob: -12.251416206359863
    7. 'n' → logprob: -13.126416206359863
    8. 'ans' → logprob: -13.501416206359863
    9. 'k' → logprob: -13.626416206359863
    10. ' (' → logprob: -15.501416206359863

Token 1888: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.24067063629627228
    2. '):
' → logprob: -1.6156706809997559
    3. '):' → logprob: -4.240670680999756
    4. ' -' → logprob: -7.615670680999756
    5. '+' → logprob: -9.490670204162598
    6. '-k' → logprob: -9.490670204162598
    7. '):
' → logprob: -10.240670204162598
    8. ' ):
' → logprob: -11.115670204162598
    9. '-
' → logprob: -11.740670204162598
    10. ')' → logprob: -11.865670204162598

Token 1889: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.513339445111342e-05
    2. '2' → logprob: -10.250044822692871
    3. '-' → logprob: -12.250044822692871
    4. ' ' → logprob: -12.375044822692871
    5. ')' → logprob: -15.000044822692871
    6. '```' → logprob: -15.625044822692871
    7. '   ' → logprob: -17.250045776367188
    8. ' -' → logprob: -18.000045776367188
    9. '(' → logprob: -18.500045776367188
    10. 'int' → logprob: -18.687545776367188

Token 1890: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0002858881198335439
    2. '):' → logprob: -8.875286102294922
    3. '-' → logprob: -9.125286102294922
    4. '):
' → logprob: -11.125286102294922
    5. ':
' → logprob: -12.000286102294922
    6. '   ' → logprob: -12.375286102294922
    7. ',k' → logprob: -12.375286102294922
    8. ')' → logprob: -12.750286102294922
    9. ',' → logprob: -13.000286102294922
    10. ' ):
' → logprob: -13.750286102294922

Token 1891: '   ' (ID: 271)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.8564859628677368
    2. 'ans' → logprob: -1.3564859628677368
    3. '
' → logprob: -2.4814858436584473
    4. '"' → logprob: -2.9814858436584473
    5. ',' → logprob: -3.6064858436584473
    6. '	ans' → logprob: -3.6064858436584473
    7. '*=' → logprob: -3.6064858436584473
    8. '*' → logprob: -3.9814858436584473
    9. '```' → logprob: -4.106485843658447
    10. 'tokens' → logprob: -4.856485843658447

Token 1892: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.7985481023788452
    2. 'ans' (adapté à ' ans') → logprob: -1.4235481023788452
    3. '"' → logprob: -2.4235482215881348
    4. 'print' → logprob: -3.4235482215881348
    5. ' ' → logprob: -3.7985482215881348
    6. '.write' → logprob: -3.9235482215881348
    7. ' 
' → logprob: -4.423548221588135
    8. '
' → logprob: -4.423548221588135
    9. ' write' → logprob: -4.423548221588135
    10. 'answer' → logprob: -4.548548221588135

Token 1893: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.00041851779678836465
    2. '*' → logprob: -8.375418663024902
    3. '=' → logprob: -8.875418663024902
    4. ' *=' → logprob: -10.000418663024902
    5. ' =' → logprob: -13.875418663024902
    6. '+=' → logprob: -13.875418663024902
    7. ' ' → logprob: -14.750418663024902
    8. '	' → logprob: -15.250418663024902
    9. '   ' → logprob: -16.000417709350586
    10. '
' → logprob: -17.250417709350586

Token 1894: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.031869176775217056
    2. '(k' → logprob: -3.5318691730499268
    3. '(ans' → logprob: -6.906869411468506
    4. 'ans' → logprob: -7.281869411468506
    5. '(' → logprob: -8.031868934631348
    6. 'max' → logprob: -9.531868934631348
    7. ' (' → logprob: -11.656868934631348
    8. '(max' → logprob: -11.656868934631348
    9. ' k' → logprob: -12.281868934631348
    10. '10' → logprob: -13.406868934631348

Token 1895: '
' (ID: 198)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.011358325369656086
    2. ' -' → logprob: -4.511358261108398
    3. '<|end|>' → logprob: -8.261358261108398
    4. '
' → logprob: -10.636358261108398
    5. '-
' → logprob: -11.136358261108398
    6. '   ' → logprob: -12.511358261108398
    7. '-=' → logprob: -13.386358261108398
    8. '```' → logprob: -13.511358261108398
    9. '<|end|>' → logprob: -13.511358261108398
    10. ' ' → logprob: -14.136358261108398

Token 1896: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1897: ' ans' (ID: 3345)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5089690089225769
    2. '<|end|>' → logprob: -1.6339690685272217
    3. '
' → logprob: -3.3839690685272217
    4. 'print' → logprob: -3.6339690685272217
    5. ')' → logprob: -3.7589690685272217
    6. '(' → logprob: -4.133968830108643
    7. ' ans' → logprob: -4.258968830108643
    8. ' 
' → logprob: -4.258968830108643
    9. '"' → logprob: -4.383968830108643
    10. ' (' → logprob: -4.633968830108643

Token 1898: ' %=' (ID: 117035)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.0009692259482108057
    2. '-' → logprob: -7.000969409942627
    3. ' -=' → logprob: -9.875968933105469
    4. '+=' → logprob: -12.875968933105469
    5. '=' → logprob: -13.125968933105469
    6. '*=' → logprob: -13.625968933105469
    7. '%=' → logprob: -15.625968933105469
    8. '//=' → logprob: -15.875968933105469
    9. '```' → logprob: -16.62596893310547
    10. '--' → logprob: -16.62596893310547

Token 1899: ' ' (ID: 220)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.07891082763671875
    2. '100' → logprob: -2.5789108276367188
    3. '(mod' → logprob: -11.453910827636719
    4. ' mod' → logprob: -11.953910827636719
    5. '(' → logprob: -13.453910827636719
    6. '10' → logprob: -13.578910827636719
    7. '998' → logprob: -14.828910827636719
    8. ' ' → logprob: -14.828910827636719
    9. '
' → logprob: -15.578910827636719
    10. 'MOD' → logprob: -15.953910827636719

Token 1900: '100' (ID: 1353)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0019320894498378038
    2. '100' → logprob: -6.251932144165039
    3. '(mod' → logprob: -13.376932144165039
    4. '10' → logprob: -13.876932144165039
    5. '(' → logprob: -14.376932144165039
    6. ' mod' → logprob: -15.376932144165039
    7. '998' → logprob: -16.25193214416504
    8. 'm' → logprob: -17.87693214416504
    9. 'moder' → logprob: -17.87693214416504
    10. 'MOD' → logprob: -18.00193214416504

Token 1901: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.008890974335372448
    2. '9' → logprob: -4.7588911056518555
    3. '0' → logprob: -8.883891105651855
    4. '07' → logprob: -9.758891105651855
    5. '7' → logprob: -10.633891105651855
    6. '09' → logprob: -10.633891105651855
    7. '007' → logprob: -11.008891105651855
    8. '00' → logprob: -11.633891105651855
    9. '009' → logprob: -12.758891105651855
    10. '+' → logprob: -13.008891105651855

Token 1902: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.00021509946964215487
    2. '007' → logprob: -8.625215530395508
    3. '7' → logprob: -10.625215530395508
    4. '
' → logprob: -12.125215530395508
    5. '```' → logprob: -13.625215530395508
    6. '009' → logprob: -13.875215530395508
    7. '9' → logprob: -13.875215530395508
    8. '0' → logprob: -14.000215530395508
    9. '003' → logprob: -14.250215530395508
    10. '3' → logprob: -14.750215530395508

Token 1903: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0006027150084264576
    2. '007' → logprob: -8.000602722167969
    3. '07' → logprob: -8.250602722167969
    4. '9' → logprob: -12.750602722167969
    5. '000' → logprob: -13.625602722167969
    6. '
' → logprob: -13.875602722167969
    7. '```' → logprob: -14.625602722167969
    8. '+' → logprob: -15.250602722167969
    9. '0' → logprob: -16.37560272216797
    10. ' ' → logprob: -16.75060272216797

Token 1904: '
' (ID: 198)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.68618243932724
    2. '"""' → logprob: -1.9361824989318848
    3. 'print' → logprob: -1.9361824989318848
    4. '   ' → logprob: -2.6861824989318848
    5. ')' → logprob: -3.4361824989318848
    6. 'return' → logprob: -3.4361824989318848
    7. '
' → logprob: -4.186182498931885
    8. '#' → logprob: -4.811182498931885
    9. '```' → logprob: -4.936182498931885
    10. '<|end|>' → logprob: -4.936182498931885

Token 1905: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9178721308708191
    2. '
' → logprob: -1.5428721904754639
    3. '<|end|>' → logprob: -1.7928721904754639
    4. '\n' → logprob: -1.9178721904754639
    5. ' 
' → logprob: -3.917872190475464
    6. ' ' → logprob: -4.667871952056885
    7. '^' → logprob: -4.792871952056885
    8. '#' → logprob: -5.167871952056885
    9. ' return' → logprob: -5.292871952056885
    10. 'return' → logprob: -5.917871952056885

Token 1906: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.747814349073451e-05
    2. 'ans' → logprob: -11.000017166137695
    3. '(' → logprob: -14.625017166137695
    4. '((' → logprob: -15.750017166137695
    5. '(answer' → logprob: -16.125017166137695
    6. '(an' → logprob: -17.250017166137695
    7. '(
' → logprob: -18.125017166137695
    8. '(int' → logprob: -18.125017166137695
    9. '	ans' → logprob: -18.875017166137695
    10. '()' → logprob: -18.875017166137695

Token 1907: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3544423381972592e-05
    2. ')
' → logprob: -11.37501335144043
    3. '**' → logprob: -13.75001335144043
    4. ' )' → logprob: -15.12501335144043
    5. '))' → logprob: -15.87501335144043
    6. '**)' → logprob: -16.12501335144043
    7. '
' → logprob: -16.25001335144043
    8. '```' → logprob: -16.37501335144043
    9. '")' → logprob: -16.75001335144043
    10. '%)' → logprob: -17.12501335144043

Token 1908: '"""

' (ID: 34508)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06634470820426941
    2. '<|end|>' → logprob: -2.816344738006592
    3. '#' → logprob: -6.441344738006592
    4. '
' → logprob: -6.816344738006592
    5. ' ' → logprob: -7.816344738006592
    6. '}' → logprob: -8.066344261169434
    7. ' )' → logprob: -8.441344261169434
    8. '```' → logprob: -8.816344261169434
    9. '\n' → logprob: -8.941344261169434
    10. '<|end|>' → logprob: -9.066344261169434

Token 1909: '#' (ID: 2)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5615150928497314
    2. 'for' → logprob: -1.4365150928497314
    3. '#' → logprob: -2.5615150928497314
    4. 'n' → logprob: -3.5615150928497314
    5. '   ' → logprob: -3.9365150928497314
    6. ')' → logprob: -4.686514854431152
    7. ' for' → logprob: -4.811514854431152
    8. '=' → logprob: -4.936514854431152
    9. ']' → logprob: -5.186514854431152
    10. ' ' → logprob: -5.186514854431152

Token 1910: '5' (ID: 20)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25167757272720337
    2. '   ' → logprob: -2.3766775131225586
    3. '       ' → logprob: -2.8766775131225586
    4. ' for' → logprob: -3.3766775131225586
    5. '           ' → logprob: -5.001677513122559
    6. '[' → logprob: -5.001677513122559
    7. 'range' → logprob: -5.251677513122559
    8. '=' → logprob: -5.626677513122559
    9. '    ' → logprob: -6.126677513122559
    10. ' range' → logprob: -6.251677513122559

Token 1911: '_B' (ID: 3201)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.47811567783355713
    2. '_A' → logprob: -0.9781156778335571
    3. '_B' → logprob: -5.603115558624268
    4. '_D' → logprob: -9.103116035461426
    5. '_C' → logprob: -9.853116035461426
    6. ' _' → logprob: -9.853116035461426
    7. '_E' → logprob: -10.228116035461426
    8. '_F' → logprob: -10.478116035461426
    9. '__' → logprob: -10.728116035461426
    10. '#' → logprob: -11.978116035461426

Token 1912: '
' (ID: 198)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.39423421025276184
    2. '"""' → logprob: -1.1442341804504395
    3. 'n' → logprob: -5.1442341804504395
    4. '#' → logprob: -7.3942341804504395
    5. '""' → logprob: -7.8942341804504395
    6. '"""
' → logprob: -8.894234657287598
    7. '(n' → logprob: -9.269234657287598
    8. '
' → logprob: -9.519234657287598
    9. '```' → logprob: -9.769234657287598
    10. '"' → logprob: -10.019234657287598

Token 1913: '"""
' (ID: 15611)
  Prédit: '"""
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.17247402667999268
    2. '"""' → logprob: -1.9224740266799927
    3. 'n' → logprob: -4.422473907470703
    4. '"""
' → logprob: -9.672473907470703
    5. '""' → logprob: -10.547473907470703
    6. '#' → logprob: -10.547473907470703
    7. '"' → logprob: -10.797473907470703
    8. '(n' → logprob: -11.922473907470703
    9. 'def' → logprob: -11.922473907470703
    10. 's' → logprob: -12.297473907470703

Token 1914: 'import' (ID: 561)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.034823015332221985
    2. '"""
' → logprob: -3.534822940826416
    3. '"""' → logprob: -5.409822940826416
    4. 'k' → logprob: -7.659822940826416
    5. '
' → logprob: -10.409823417663574
    6. '"' → logprob: -10.534823417663574
    7. '""' → logprob: -10.784823417663574
    8. 'def' → logprob: -11.534823417663574
    9. 's' → logprob: -12.284823417663574
    10. '(n' → logprob: -12.284823417663574

Token 1915: ' sys' (ID: 12228)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.48009076714515686
    2. 'sys' → logprob: -0.9800907373428345
    3. 'random' → logprob: -5.730090618133545
    4. 'collections' → logprob: -6.230090618133545
    5. 'heap' → logprob: -7.355090618133545
    6. 'it' → logprob: -10.230091094970703
    7. 'bis' → logprob: -10.355091094970703
    8. ' math' → logprob: -10.480091094970703
    9. 'cmath' → logprob: -10.855091094970703
    10. ' sys' → logprob: -11.605091094970703

Token 1916: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12274385243654251
    2. 'sys' → logprob: -2.497743844985962
    3. 'import' → logprob: -4.122744083404541
    4. 'input' → logprob: -4.747744083404541
    5. '\n' → logprob: -5.372744083404541
    6. 'data' → logprob: -6.372744083404541
    7. 'for' → logprob: -8.122743606567383
    8. '=sys' → logprob: -8.122743606567383
    9. '
' → logprob: -8.372743606567383
    10. '.readline' → logprob: -8.497743606567383

Token 1917: 'sys' (ID: 17324)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.05813092738389969
    2. 'sys' → logprob: -3.183130979537964
    3. 'import' → logprob: -4.683130741119385
    4. 'data' → logprob: -6.183130741119385
    5. '
' → logprob: -6.808130741119385
    6. 'for' → logprob: -6.933130741119385
    7. 'def' → logprob: -7.433130741119385
    8. 'from' → logprob: -8.058131217956543
    9. 'n' → logprob: -8.433131217956543
    10. 'read' → logprob: -8.683131217956543

Token 1918: '.set' (ID: 1230)
  Prédit: '.stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.8948073983192444
    2. '.set' → logprob: -1.1448073387145996
    3. '.stdout' → logprob: -1.3948073387145996
    4. '.exit' → logprob: -4.0198073387146
    5. '.setdefault' → logprob: -5.2698073387146
    6. '.' → logprob: -7.3948073387146
    7. '.stderr' → logprob: -7.5198073387146
    8. '.argv' → logprob: -8.644807815551758
    9. 'stdin' → logprob: -8.894807815551758
    10. 'import' → logprob: -9.019807815551758

Token 1919: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -2.3915141355246305e-05
    2. ' recursion' → logprob: -11.62502384185791
    3. 'stdin' → logprob: -12.12502384185791
    4. 'limit' → logprob: -12.50002384185791
    5. 'import' → logprob: -12.87502384185791
    6. 'sys' → logprob: -14.00002384185791
    7. 'stdout' → logprob: -14.25002384185791
    8. 'exit' → logprob: -15.00002384185791
    9. 'depth' → logprob: -15.25002384185791
    10. '_rec' → logprob: -15.75002384185791

Token 1920: 'ursion' (ID: 41658)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.5408189296722412
    2. 'limit' → logprob: -0.9158189296722412
    3. 'ursion' → logprob: -4.66581916809082
    4. 'set' → logprob: -6.66581916809082
    5. 'c' → logprob: -7.04081916809082
    6. 'import' → logprob: -7.54081916809082
    7. '_limit' → logprob: -7.66581916809082
    8. 'depth' → logprob: -7.79081916809082
    9. '
' → logprob: -7.79081916809082
    10. '_' → logprob: -7.91581916809082

Token 1921: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.009830700233578682
    2. '_limit' → logprob: -4.634830474853516
    3. 'rec' → logprob: -10.384830474853516
    4. 'lim' → logprob: -11.509830474853516
    5. 'depth' → logprob: -11.634830474853516
    6. 'def' → logprob: -11.634830474853516
    7. 'import' → logprob: -12.134830474853516
    8. '
' → logprob: -13.134830474853516
    9. 'set' → logprob: -13.259830474853516
    10. '_' → logprob: -14.134830474853516

Token 1922: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00018339496455155313
    2. '(
' → logprob: -8.62518310546875
    3. '100' → logprob: -12.87518310546875
    4. '(

' → logprob: -15.12518310546875
    5. '(int' → logprob: -15.75018310546875
    6. '10' → logprob: -15.75018310546875
    7. '(
' → logprob: -15.87518310546875
    8. '((' → logprob: -16.25018310546875
    9. '250' → logprob: -16.25018310546875
    10. '1' → logprob: -16.37518310546875

Token 1923: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.006818616297096014
    2. '100' → logprob: -5.006818771362305
    3. '200' → logprob: -10.006818771362305
    4. '300' → logprob: -10.881818771362305
    5. 'pow' → logprob: -10.881818771362305
    6. '500' → logprob: -11.256818771362305
    7. '410' → logprob: -13.131818771362305
    8. '1' → logprob: -13.256818771362305
    9. '150' → logprob: -13.756818771362305
    10. '250' → logprob: -14.006818771362305

Token 1924: '00' (ID: 504)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.11036240309476852
    2. '(' → logprob: -3.2353622913360596
    3. '7' → logprob: -3.7353622913360596
    4. '=' → logprob: -5.360362529754639
    5. '6' → logprob: -5.360362529754639
    6. '0' → logprob: -5.485362529754639
    7. '007' → logprob: -5.860362529754639
    8. '   ' → logprob: -5.860362529754639
    9. '00' → logprob: -5.860362529754639
    10. '4' → logprob: -5.985362529754639

Token 1925: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2528579831123352
    2. ')' → logprob: -1.5028579235076904
    3. ')
' → logprob: -7.1278581619262695
    4. ')

' → logprob: -9.12785816192627
    5. '
' → logprob: -11.50285816192627
    6. ' )
' → logprob: -13.25285816192627
    7. ')

' → logprob: -13.37785816192627
    8. '0' → logprob: -13.75285816192627
    9. ')
/' → logprob: -14.50285816192627
    10. ' )' → logprob: -14.75285816192627

Token 1926: 'memo' (ID: 113822)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25446996092796326
    2. 'sys' → logprob: -1.5044699907302856
    3. 'import' → logprob: -6.254469871520996
    4. '"""
' → logprob: -8.379469871520996
    5. 'from' → logprob: -8.504469871520996
    6. '
' → logprob: -9.129469871520996
    7. '"""' → logprob: -10.129469871520996
    8. '#' → logprob: -11.254469871520996
    9. 'input' → logprob: -11.629469871520996
    10. 'class' → logprob: -13.129469871520996

Token 1927: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38867589831352234
    2. '=' → logprob: -1.1386759281158447
    3. 'def' → logprob: -7.388675689697266
    4. '={}' → logprob: -7.388675689697266
    5. '=sys' → logprob: -9.013675689697266
    6. '=[]' → logprob: -9.138675689697266
    7. '={' → logprob: -9.388675689697266
    8. '={}
' → logprob: -9.763675689697266
    9. 'import' → logprob: -10.138675689697266
    10. ')' → logprob: -10.513675689697266

Token 1928: ' [' (ID: 723)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0006539395544677973
    2. 'default' → logprob: -7.5006537437438965
    3. '{}
' → logprob: -9.750654220581055
    4. 'dict' → logprob: -11.375654220581055
    5. '{}

' → logprob: -11.625654220581055
    6. '{' → logprob: -11.750654220581055
    7. '[' → logprob: -11.875654220581055
    8. '{})' → logprob: -13.000654220581055
    9. '[]' → logprob: -13.125654220581055
    10. '[-' → logprob: -13.375654220581055

Token 1929: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.025519700720906258
    2. '[-' → logprob: -3.900519609451294
    3. '{}' → logprob: -6.150519847869873
    4. 'None' → logprob: -6.650519847869873
    5. '0' → logprob: -7.275519847869873
    6. '[' → logprob: -8.400519371032715
    7. '-f' → logprob: -8.775519371032715
    8. 'default' → logprob: -9.025519371032715
    9. 'float' → logprob: -9.150519371032715
    10. '{-' → logprob: -9.400519371032715

Token 1930: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.24159787595272064
    2. ']' → logprob: -1.8665978908538818
    3. 'for' → logprob: -2.991597890853882
    4. ']+' → logprob: -5.366597652435303
    5. ']*(' → logprob: -6.366597652435303
    6. '0' → logprob: -6.366597652435303
    7. ']*' → logprob: -6.991597652435303
    8. ',' → logprob: -7.866597652435303
    9. '_' → logprob: -9.991598129272461
    10. ' ]' → logprob: -9.991598129272461

Token 1931: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02409769967198372
    2. '0' → logprob: -4.399097919464111
    3. '-' → logprob: -4.774097919464111
    4. '2' → logprob: -6.024097919464111
    5. 'None' → logprob: -7.524097919464111
    6. ']' → logprob: -10.524097442626953
    7. '3' → logprob: -10.899097442626953
    8. '(None' → logprob: -11.836597442626953
    9. '4' → logprob: -11.899097442626953
    10. '(' → logprob: -12.086597442626953

Token 1932: ']
' (ID: 1592)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27033692598342896
    2. ']' → logprob: -1.6453368663787842
    3. ']
' → logprob: -4.020337104797363
    4. ']+' → logprob: -4.395337104797363
    5. ',None' → logprob: -5.020337104797363
    6. ',
' → logprob: -5.395337104797363
    7. '1' → logprob: -7.520337104797363
    8. '0' → logprob: -7.645337104797363
    9. '
' → logprob: -7.895337104797363
    10. ' ,' → logprob: -8.020337104797363

Token 1933: 'def' (ID: 1314)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5631080269813538
    2. 'def' → logprob: -1.438107967376709
    3. ',' → logprob: -2.063107967376709
    4. ',
' → logprob: -3.688107967376709
    5. ' for' → logprob: -4.188107967376709
    6. 'for' → logprob: -4.438107967376709
    7. ' def' → logprob: -5.063107967376709
    8. ' ' → logprob: -5.813107967376709
    9. 'None' → logprob: -6.688107967376709
    10. ' None' → logprob: -7.063107967376709

Token 1934: ' fact' (ID: 2840)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5682905912399292
    2. 'fib' → logprob: -1.4432905912399292
    3. 'fact' → logprob: -2.3182907104492188
    4. 'comb' → logprob: -2.8182907104492188
    5. 'dfs' → logprob: -3.5682907104492188
    6. 'factor' → logprob: -5.068290710449219
    7. 'fac' → logprob: -6.443290710449219
    8. 'rec' → logprob: -7.193290710449219
    9. 'func' → logprob: -7.568290710449219
    10. 'mod' → logprob: -8.068290710449219

Token 1935: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.770073413848877
    2. 'or' → logprob: -0.770073413848877
    3. '(n' → logprob: -2.895073413848877
    4. 'o' → logprob: -4.645073413848877
    5. 'orial' → logprob: -5.645073413848877
    6. '(x' → logprob: -6.770073413848877
    7. '(i' → logprob: -6.895073413848877
    8. 'rial' → logprob: -7.270073413848877
    9. '():' → logprob: -8.020072937011719
    10. ':' → logprob: -8.270072937011719

Token 1936: '):
' (ID: 1883)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2650204300880432
    2. '):' → logprob: -2.6400203704833984
    3. ':' → logprob: -2.8900203704833984
    4. ',' → logprob: -3.0150203704833984
    5. '(a' → logprob: -3.3900203704833984
    6. 'def' → logprob: -4.640020370483398
    7. '):
' → logprob: -6.015020370483398
    8. '(' → logprob: -6.140020370483398
    9. '(x' → logprob: -6.140020370483398
    10. ',a' → logprob: -6.390020370483398

Token 1937: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.39490118622779846
    2. ':' → logprob: -1.519901156425476
    3. '[' → logprob: -3.2699012756347656
    4. '(a' → logprob: -3.3949012756347656
    5. 'def' → logprob: -4.394901275634766
    6. '   ' → logprob: -5.144901275634766
    7. '(
' → logprob: -5.519901275634766
    8. '
' → logprob: -6.269901275634766
    9. '(n' → logprob: -6.269901275634766
    10. ',' → logprob: -6.519901275634766

Token 1938: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3985639214515686
    2. ' if' → logprob: -1.1485638618469238
    3. '   ' → logprob: -4.773563861846924
    4. 'a' → logprob: -6.398563861846924
    5. 'n' → logprob: -6.898563861846924
    6. 'return' → logprob: -9.273564338684082
    7. 'def' → logprob: -9.648564338684082
    8. '	if' → logprob: -9.773564338684082
    9. ' ' → logprob: -10.273564338684082
    10. ' a' → logprob: -10.273564338684082

Token 1939: ' len' (ID: 4631)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0001334559783572331
    2. ' a' → logprob: -9.500133514404297
    3. 'len' → logprob: -9.750133514404297
    4. ' len' → logprob: -15.375133514404297
    5. '	a' → logprob: -17.500133514404297
    6. '(len' → logprob: -18.125133514404297
    7. '(a' → logprob: -18.125133514404297
    8. ' ' → logprob: -19.375133514404297
    9. '  ' → logprob: -19.625133514404297
    10. 'memo' → logprob: -20.250133514404297

Token 1940: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.00042923877481371164
    2. 'memo' → logprob: -7.875429153442383
    3. 'm' → logprob: -10.125429153442383
    4. '(' → logprob: -12.000429153442383
    5. '<m' → logprob: -13.750429153442383
    6. '(
' → logprob: -14.625429153442383
    7. '[m' → logprob: -14.875429153442383
    8. '	m' → logprob: -15.000429153442383
    9. ')m' → logprob: -15.875429153442383
    10. ' memo' → logprob: -16.000429153442383

Token 1941: 'emo' (ID: 7196)
  Prédit: 'emo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'emo' → logprob: -0.001402144436724484
    2. 'memo' → logprob: -6.751402378082275
    3. 'omo' → logprob: -9.501401901245117
    4. 'o' → logprob: -9.501401901245117
    5. 'emory' → logprob: -10.126401901245117
    6. 'mo' → logprob: -11.126401901245117
    7. ' memo' → logprob: -12.001401901245117
    8. 'e' → logprob: -12.251401901245117
    9. 'em' → logprob: -12.751401901245117
    10. 'емо' → logprob: -13.001401901245117

Token 1942: ')' (ID: 8)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.031074795871973038
    2. ' <=' → logprob: -3.5310747623443604
    3. ')<=' → logprob: -7.0310750007629395
    4. ')' → logprob: -8.031074523925781
    5. '<' → logprob: -9.906074523925781
    6. '==' → logprob: -10.781074523925781
    7. 'a' → logprob: -11.281074523925781
    8. ']<=' → logprob: -11.406074523925781
    9. '<len' → logprob: -11.781074523925781
    10. '>' → logprob: -13.156074523925781

Token 1943: ' >' (ID: 1424)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.007707654032856226
    2. '>' → logprob: -5.007707595825195
    3. '<' → logprob: -7.382707595825195
    4. ' <=' → logprob: -8.257707595825195
    5. '==' → logprob: -10.132707595825195
    6. '>=' → logprob: -10.382707595825195
    7. '<len' → logprob: -11.382707595825195
    8. '>a' → logprob: -11.632707595825195
    9. ')<=' → logprob: -11.757707595825195
    10. 'a' → logprob: -12.007707595825195

Token 1944: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00033581978641450405
    2. ' a' → logprob: -8.000335693359375
    3. '	a' → logprob: -14.750335693359375
    4. ' ' → logprob: -18.500335693359375
    5. '   ' → logprob: -19.125335693359375
    6. '  ' → logprob: -20.250335693359375
    7. '_a' → logprob: -20.625335693359375
    8. '1' → logprob: -20.625335693359375
    9. '>a' → logprob: -20.750335693359375
    10. ')a' → logprob: -20.875335693359375

Token 1945: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3089028596878052
    2. ':
' → logprob: -1.5589028596878052
    3. ' and' → logprob: -3.3089027404785156
    4. 'and' → logprob: -4.808902740478516
    5. ':return' → logprob: -4.808902740478516
    6. '   ' → logprob: -7.183902740478516
    7. '+' → logprob: -7.433902740478516
    8. ' :' → logprob: -9.058902740478516
    9. '[' → logprob: -9.058902740478516
    10. 'a' → logprob: -9.308902740478516

Token 1946: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03221852332353592
    2. ':
' → logprob: -3.6572184562683105
    3. ':return' → logprob: -5.5322184562683105
    4. ' and' → logprob: -6.7822184562683105
    5. ' :' → logprob: -8.157218933105469
    6. '   ' → logprob: -8.782218933105469
    7. '[' → logprob: -9.532218933105469
    8. '):' → logprob: -9.907218933105469
    9. '       ' → logprob: -9.907218933105469
    10. ',' → logprob: -10.282218933105469

Token 1947: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08396276086568832
    2. ' return' → logprob: -2.8339626789093018
    3. '   ' → logprob: -3.8339626789093018
    4. '	return' → logprob: -9.833962440490723
    5. '       ' → logprob: -9.958962440490723
    6. '    ' → logprob: -11.208962440490723
    7. 'memo' → logprob: -11.833962440490723
    8. ' ' → logprob: -12.583962440490723
    9. ':return' → logprob: -13.458962440490723
    10. ' memo' → logprob: -13.583962440490723

Token 1948: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.000614624354057014
    2. ' memo' → logprob: -7.500614643096924
    3. 'm' → logprob: -9.750614166259766
    4. 'a' → logprob: -13.125614166259766
    5. '[m' → logprob: -14.750614166259766
    6. ' ' → logprob: -15.125614166259766
    7. '	m' → logprob: -15.125614166259766
    8. 'memory' → logprob: -15.625614166259766
    9. '
' → logprob: -16.000614166259766
    10. 'mem' → logprob: -16.250614166259766

Token 1949: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.1517960956552997e-05
    2. '[-' → logprob: -11.750011444091797
    3. '[' → logprob: -13.500011444091797
    4. 'a' → logprob: -14.125011444091797
    5. ' [' → logprob: -14.625011444091797
    6. '
' → logprob: -15.000011444091797
    7. '   ' → logprob: -15.375011444091797
    8. '[
' → logprob: -16.000011444091797
    9. '(a' → logprob: -16.750011444091797
    10. '[m' → logprob: -17.000011444091797

Token 1950: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.22704732418060303
    2. 'a' → logprob: -2.7270474433898926
    3. ']
' → logprob: -2.7270474433898926
    4. '   ' → logprob: -3.3520474433898926
    5. ']+' → logprob: -4.852047443389893
    6. '[a' → logprob: -5.102047443389893
    7. '])' → logprob: -5.602047443389893
    8. '
' → logprob: -5.602047443389893
    9. '])
' → logprob: -5.727047443389893
    10. ')' → logprob: -6.102047443389893

Token 1951: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01876387558877468
    2. 'def' → logprob: -5.018764019012451
    3. '
' → logprob: -6.143764019012451
    4. '()
' → logprob: -6.393764019012451
    5. '(' → logprob: -6.518764019012451
    6. 'else' → logprob: -6.643764019012451
    7. 'return' → logprob: -6.893764019012451
    8. 'a' → logprob: -7.018764019012451
    9. '    
' → logprob: -7.518764019012451
    10. '(a' → logprob: -8.143763542175293

Token 1952: ' b' (ID: 287)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001544321421533823
    2. 'a' → logprob: -9.500154495239258
    3. 'else' → logprob: -10.500154495239258
    4. 'n' → logprob: -11.125154495239258
    5. 'while' → logprob: -12.375154495239258
    6. ' ' → logprob: -12.625154495239258
    7. 'if' → logprob: -12.625154495239258
    8. 'factor' → logprob: -13.000154495239258
    9. 'b' (adapté à ' b') → logprob: -13.125154495239258
    10. 'm' → logprob: -13.125154495239258

Token 1953: ' =' (ID: 314)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5386568307876587
    2. '=' → logprob: -1.9136568307876587
    3. ' =' → logprob: -2.288656711578369
    4. ' *' → logprob: -2.413656711578369
    5. '+' → logprob: -3.788656711578369
    6. '[' → logprob: -3.913656711578369
    7. '*b' → logprob: -5.163656711578369
    8. '.append' → logprob: -5.288656711578369
    9. '*=' → logprob: -5.663656711578369
    10. 'def' → logprob: -5.788656711578369

Token 1954: ' a' (ID: 261)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.014595801010727882
    2. 'a' → logprob: -4.889595985412598
    3. 'memo' → logprob: -5.264595985412598
    4. ' fact' → logprob: -6.389595985412598
    5. 'factor' → logprob: -9.764595985412598
    6. ' a' → logprob: -10.639595985412598
    7. ' memo' → logprob: -11.514595985412598
    8. '(a' → logprob: -12.389595985412598
    9. ' ' → logprob: -12.639595985412598
    10. '   ' → logprob: -13.014595985412598

Token 1955: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0007843759376555681
    2. '-' → logprob: -8.375783920288086
    3. '*f' → logprob: -8.500783920288086
    4. '*m' → logprob: -8.625783920288086
    5. ' *' → logprob: -9.000783920288086
    6. '*b' → logprob: -10.000783920288086
    7. '*(' → logprob: -14.750783920288086
    8. '*n' → logprob: -15.000783920288086
    9. '*w' → logprob: -15.125783920288086
    10. '**' → logprob: -15.250783920288086

Token 1956: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -2.45848218582978e-06
    2. ' fact' → logprob: -13.25000286102295
    3. 'factor' → logprob: -14.37500286102295
    4. '_fact' → logprob: -19.250001907348633
    5. '.fact' → logprob: -20.500001907348633
    6. 'facts' → logprob: -20.625001907348633
    7. 'fac' → logprob: -21.250001907348633
    8. 'Fact' → logprob: -22.375001907348633
    9. 'f' → logprob: -22.750001907348633
    10. ' fakt' → logprob: -22.750001907348633

Token 1957: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.009349199943244457
    2. '(' → logprob: -4.759349346160889
    3. 'a' → logprob: -7.259349346160889
    4. ' (' → logprob: -11.13434886932373
    5. '(b' → logprob: -11.88434886932373
    6. '(
' → logprob: -12.38434886932373
    7. 'b' → logprob: -14.13434886932373
    8. '   ' → logprob: -14.13434886932373
    9. '[a' → logprob: -14.13434886932373
    10. ' a' → logprob: -14.25934886932373

Token 1958: '-' (ID: 12)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3543108105659485
    2. '-' → logprob: -1.7293107509613037
    3. '(a' → logprob: -2.2293107509613037
    4. '(' → logprob: -4.979310989379883
    5. ' a' → logprob: -5.604310989379883
    6. '[a' → logprob: -7.354310989379883
    7. '[' → logprob: -7.479310989379883
    8. ' -' → logprob: -7.729310989379883
    9. '-a' → logprob: -7.979310989379883
    10. '	a' → logprob: -8.854310989379883

Token 1959: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -14.500000953674316
    3. ' ' → logprob: -17.75
    4. '   ' → logprob: -18.0
    5. '```' → logprob: -18.5
    6. 'a' → logprob: -20.0
    7. ')' → logprob: -20.875
    8. '１' → logprob: -21.75
    9. '[' → logprob: -21.75
    10. '``' → logprob: -22.0

Token 1960: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011036504060029984
    2. '(' → logprob: -4.761036396026611
    3. '*' → logprob: -7.011036396026611
    4. '()' → logprob: -7.261036396026611
    5. ' )' → logprob: -8.63603687286377
    6. 'def' → logprob: -9.63603687286377
    7. '<|end|>' → logprob: -9.76103687286377
    8. '   ' → logprob: -9.88603687286377
    9. ']' → logprob: -9.88603687286377
    10. '}' → logprob: -10.13603687286377

Token 1961: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6465962529182434
    2. '   ' → logprob: -1.5215961933135986
    3. ')' → logprob: -1.6465961933135986
    4. '<|end|>' → logprob: -4.021596431732178
    5. '()' → logprob: -4.146596431732178
    6. ' ' → logprob: -5.021596431732178
    7. '    ' → logprob: -5.771596431732178
    8. '	' → logprob: -5.896596431732178
    9. 'return' → logprob: -6.021596431732178
    10. '  ' → logprob: -6.146596431732178

Token 1962: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' (adapté à ' memo') → logprob: -0.9989644885063171
    2. ' memo' → logprob: -1.123964548110962
    3. '   ' → logprob: -1.873964548110962
    4. ')' → logprob: -2.248964548110962
    5. '    
' → logprob: -4.873964309692383
    6. ')
' → logprob: -5.123964309692383
    7. '
' → logprob: -5.123964309692383
    8. ' 
' → logprob: -5.123964309692383
    9. '.' → logprob: -5.873964309692383
    10. 'b' → logprob: -5.873964309692383

Token 1963: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.011328381486237049
    2. '.extend' → logprob: -4.886328220367432
    3. '.' → logprob: -6.261328220367432
    4. '+' → logprob: -6.761328220367432
    5. '[a' → logprob: -8.51132869720459
    6. '[' → logprob: -9.26132869720459
    7. '=' → logprob: -9.76132869720459
    8. '[b' → logprob: -9.88632869720459
    9. '_append' → logprob: -10.01132869720459
    10. '+=' → logprob: -10.26132869720459

Token 1964: '(b' (ID: 3229)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011050770990550518
    2. '(b' → logprob: -4.511050701141357
    3. ' b' → logprob: -12.886051177978516
    4. '	b' → logprob: -15.261051177978516
    5. '(' → logprob: -16.011051177978516
    6. ')b' → logprob: -17.761051177978516
    7. '(
' → logprob: -18.386051177978516
    8. ' (' → logprob: -19.636051177978516
    9. ',b' → logprob: -19.886051177978516
    10. '   ' → logprob: -20.511051177978516

Token 1965: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017910897731781006
    2. ')
' → logprob: -6.376791000366211
    3. '   ' → logprob: -9.751791000366211
    4. ' )' → logprob: -10.501791000366211
    5. ')return' → logprob: -13.501791000366211
    6. ')
' → logprob: -14.001791000366211
    7. ' )
' → logprob: -15.501791000366211
    8. ')b' → logprob: -15.751791000366211
    9. ' ' → logprob: -16.50179100036621
    10. '  ' → logprob: -16.87679100036621

Token 1966: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02014976553618908
    2. ')' → logprob: -4.3951497077941895
    3. '	return' → logprob: -6.0201497077941895
    4. ' return' → logprob: -6.3951497077941895
    5. ' ' → logprob: -7.0201497077941895
    6. '<|end|>' → logprob: -7.1451497077941895
    7. '  ' → logprob: -7.5201497077941895
    8. 'return' → logprob: -8.645150184631348
    9. '    ' → logprob: -8.645150184631348
    10. '    
' → logprob: -9.020150184631348

Token 1967: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1124051958322525
    2. ' return' → logprob: -2.737405300140381
    3. 'return' (adapté à ' return') → logprob: -3.362405300140381
    4. '	return' → logprob: -4.987405300140381
    5. ' ' → logprob: -10.237404823303223
    6. ':return' → logprob: -10.612404823303223
    7. '  ' → logprob: -11.237404823303223
    8. 'b' → logprob: -11.362404823303223
    9. '```' → logprob: -12.237404823303223
    10. '    ' → logprob: -12.612404823303223

Token 1968: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.7610454708337784e-05
    2. ' b' → logprob: -10.500027656555176
    3. '	b' → logprob: -17.87502670288086
    4. ' ' → logprob: -19.37502670288086
    5. '   ' → logprob: -19.37502670288086
    6. '  ' → logprob: -20.50002670288086
    7. '    ' → logprob: -21.37502670288086
    8. '
' → logprob: -22.87502670288086
    9. ' ' → logprob: -22.87502670288086
    10. ')b' → logprob: -23.12502670288086

Token 1969: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6847264766693115
    2. '<|end|>' → logprob: -0.8097264766693115
    3. ')' → logprob: -3.0597264766693115
    4. '```' → logprob: -6.434726715087891
    5. '<|end|>' → logprob: -7.059726715087891
    6. '\n' → logprob: -7.684726715087891
    7. '   ' → logprob: -8.30972671508789
    8. '"""' → logprob: -8.68472671508789
    9. 'b' → logprob: -9.05972671508789
    10. '}' → logprob: -9.18472671508789

Token 1970: 'n' (ID: 77)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9066163301467896
    2. '<|end|>' → logprob: -1.1566163301467896
    3. '
' → logprob: -1.6566163301467896
    4. '"""' → logprob: -2.7816162109375
    5. '<|end|>' → logprob: -4.7816162109375
    6. '}' → logprob: -5.1566162109375
    7. '```' → logprob: -5.2816162109375
    8. '   ' → logprob: -6.2816162109375
    9. '#' → logprob: -6.5316162109375
    10. '\n' → logprob: -7.1566162109375

Token 1971: ',k' (ID: 35155)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9105900526046753
    2. ' =' → logprob: -1.1605900526046753
    3. ',' → logprob: -1.2855900526046753
    4. ' ' → logprob: -6.285590171813965
    5. '>' → logprob: -6.660590171813965
    6. ' >' → logprob: -7.285590171813965
    7. '<|end|>' → logprob: -7.410590171813965
    8. ',n' → logprob: -7.535590171813965
    9. '=int' → logprob: -7.910590171813965
    10. ')' → logprob: -8.035590171813965

Token 1972: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15132078528404236
    2. '=' → logprob: -2.401320695877075
    3. ' =' → logprob: -3.776320695877075
    4. ',k' → logprob: -3.776320695877075
    5. 'def' → logprob: -6.651320934295654
    6. ' ,' → logprob: -6.901320934295654
    7. ' ' → logprob: -7.901320934295654
    8. ',n' → logprob: -8.151320457458496
    9. ')' → logprob: -8.651320457458496
    10. '#' → logprob: -8.776320457458496

Token 1973: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.210972398519516
    2. ' map' → logprob: -2.335972309112549
    3. 'LI' → logprob: -2.460972309112549
    4. ' LI' → logprob: -5.085972309112549
    5. 'I' → logprob: -6.460972309112549
    6. ' I' → logprob: -8.585972785949707
    7. 'list' → logprob: -9.210972785949707
    8. 'MI' → logprob: -10.335972785949707
    9. ' list' → logprob: -11.085972785949707
    10. 'L' → logprob: -11.335972785949707

Token 1974: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00027015688829123974
    2. 'int' → logprob: -8.250269889831543
    3. '=int' → logprob: -12.000269889831543
    4. '[int' → logprob: -13.375269889831543
    5. '<int' → logprob: -14.125269889831543
    6. ',int' → logprob: -15.625269889831543
    7. ' int' → logprob: -16.25027084350586
    8. '(str' → logprob: -16.62527084350586
    9. 'input' → logprob: -17.00027084350586
    10. '(' → logprob: -17.37527084350586

Token 1975: ',' (ID: 11)
  Prédit: '(),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -1.0134943723678589
    2. '(int' → logprob: -1.2634943723678589
    3. '()' → logprob: -1.7634943723678589
    4. '().' → logprob: -2.6384944915771484
    5. ',' → logprob: -3.1384944915771484
    6. ',int' → logprob: -3.5134944915771484
    7. 'int' → logprob: -3.8884944915771484
    8. 'input' → logprob: -5.138494491577148
    9. ',input' → logprob: -5.263494491577148
    10. '()[' → logprob: -6.263494491577148

Token 1976: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00046296243090182543
    2. 'int' → logprob: -8.000462532043457
    3. ' input' → logprob: -9.250462532043457
    4. 'str' → logprob: -10.750462532043457
    5. 'sys' → logprob: -11.625462532043457
    6. 'I' → logprob: -14.125462532043457
    7. 'list' → logprob: -16.000463485717773
    8. ' ' → logprob: -16.375463485717773
    9. 'string' → logprob: -17.500463485717773
    10. ' sys' → logprob: -17.500463485717773

Token 1977: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.7432603272027336e-06
    2. '()' → logprob: -13.375001907348633
    3. 'split' → logprob: -16.250001907348633
    4. '()
' → logprob: -17.500001907348633
    5. '()[' → logprob: -17.875001907348633
    6. '())' → logprob: -18.375001907348633
    7. '.split' → logprob: -19.250001907348633
    8. '().
' → logprob: -19.500001907348633
    9. ' ().' → logprob: -19.625001907348633
    10. '(),' → logprob: -20.625001907348633

Token 1978: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.652451464906335e-05
    2. 'strip' → logprob: -11.375016212463379
    3. 'spl' → logprob: -13.000016212463379
    4. 's' → logprob: -13.625016212463379
    5. 'sys' → logprob: -14.500016212463379
    6. 'rstrip' → logprob: -15.250016212463379
    7. 'skip' → logprob: -15.375016212463379
    8. 'scanf' → logprob: -15.750016212463379
    9. ' split' → logprob: -16.375017166137695
    10. 'stdin' → logprob: -16.375017166137695

Token 1979: '())
' (ID: 4574)
  Prédit: '())
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())
' → logprob: -0.13343891501426697
    2. '())' → logprob: -2.1334388256073
    3. '()' → logprob: -6.008439064025879
    4. ')
' → logprob: -6.258439064025879
    5. '())
' → logprob: -6.633439064025879
    6. ')' → logprob: -7.258439064025879
    7. '()
' → logprob: -9.508439064025879
    8. ')
' → logprob: -11.383439064025879
    9. '())

' → logprob: -12.133439064025879
    10. '(' → logprob: -12.883439064025879

Token 1980: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.021628499031067
    2. 'ans' → logprob: -1.521628499031067
    3. 'p' → logprob: -2.3966283798217773
    4. 'res' → logprob: -2.5216283798217773
    5. 'if' → logprob: -2.7716283798217773
    6. 'def' → logprob: -2.8966283798217773
    7. 'a' → logprob: -3.5216283798217773
    8. 'for' → logprob: -3.6466283798217773
    9. 'fact' → logprob: -3.6466283798217773
    10. 'n' → logprob: -4.146628379821777

Token 1981: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.04881161451339722
    2. 'n' → logprob: -3.048811674118042
    3. ' k' → logprob: -9.298811912536621
    4. '(n' → logprob: -9.548811912536621
    5. ' n' → logprob: -10.423811912536621
    6. '(k' → logprob: -11.423811912536621
    7. '0' → logprob: -11.548811912536621
    8. 'not' → logprob: -12.548811912536621
    9. '1' → logprob: -13.298811912536621
    10. '2' → logprob: -13.423811912536621

Token 1982: ' >' (ID: 1424)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6503966450691223
    2. '<' → logprob: -1.4003965854644775
    3. '<=' → logprob: -2.1503965854644775
    4. '>=' → logprob: -2.9003965854644775
    5. ' ==' → logprob: -3.5253965854644775
    6. ' <' → logprob: -4.025396823883057
    7. '>' → logprob: -5.025396823883057
    8. ' <=' → logprob: -5.900396823883057
    9. ' >=' → logprob: -6.650396823883057
    10. '<n' → logprob: -6.900396823883057

Token 1983: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.015255710110068321
    2. '0' → logprob: -4.265255928039551
    3. '=' → logprob: -7.015255928039551
    4. '=k' → logprob: -8.89025592803955
    5. '1' → logprob: -10.51525592803955
    6. '100' → logprob: -11.76525592803955
    7. ' k' → logprob: -12.14025592803955
    8. '2' → logprob: -12.39025592803955
    9. '10' → logprob: -12.89025592803955
    10. '(k' → logprob: -13.51525592803955

Token 1984: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.11011224240064621
    2. ':' → logprob: -3.485112190246582
    3. ' ==' → logprob: -3.610112190246582
    4. '==' → logprob: -3.860112190246582
    5. 'and' → logprob: -4.610112190246582
    6. ' or' → logprob: -5.360112190246582
    7. ' >=' → logprob: -5.985112190246582
    8. ' >' → logprob: -5.985112190246582
    9. ' <' → logprob: -6.610112190246582
    10. '>=' → logprob: -6.610112190246582

Token 1985: '   ' (ID: 271)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.22444266080856323
    2. '   ' → logprob: -2.099442720413208
    3. ' or' → logprob: -3.099442720413208
    4. ':' → logprob: -3.849442720413208
    5. ' :
' → logprob: -5.099442481994629
    6. ' and' → logprob: -6.099442481994629
    7. ' print' → logprob: -6.224442481994629
    8. 'print' → logprob: -7.599442481994629
    9. ' :' → logprob: -8.349442481994629
    10. '):
' → logprob: -8.474442481994629

Token 1986: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00030614540446549654
    2. '   ' → logprob: -8.250306129455566
    3. ' print' → logprob: -10.250306129455566
    4. '	print' → logprob: -12.375306129455566
    5. '```' → logprob: -13.000306129455566
    6. 'pr' → logprob: -13.875306129455566
    7. 'n' → logprob: -13.875306129455566
    8. '
' → logprob: -14.750306129455566
    9. 'prin' → logprob: -15.500306129455566
    10. '#print' → logprob: -16.375307083129883

Token 1987: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08900042623281479
    2. ' =' → logprob: -2.4640004634857178
    3. '=
' → logprob: -10.339000701904297
    4. '   ' → logprob: -11.339000701904297
    5. 'print' → logprob: -12.214000701904297
    6. ' =
' → logprob: -12.714000701904297
    7. ' ' → logprob: -12.839000701904297
    8. '+=' → logprob: -13.589000701904297
    9. ',' → logprob: -13.964000701904297
    10. ' +=' → logprob: -14.964000701904297

Token 1988: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00034023032640106976
    2. ' ' → logprob: -8.500340461730957
    3. 'fact' → logprob: -9.125340461730957
    4. '1' → logprob: -11.750340461730957
    5. '(' → logprob: -12.250340461730957
    6. 'k' → logprob: -12.250340461730957
    7. '"' → logprob: -12.875340461730957
    8. 'n' → logprob: -14.000340461730957
    9. '-' → logprob: -14.375340461730957
    10. 'pow' → logprob: -14.500340461730957

Token 1989: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.742448022123426e-05
    2. ' ' → logprob: -10.375067710876465
    3. '(' → logprob: -11.375067710876465
    4. 'k' → logprob: -11.875067710876465
    5. 'fact' → logprob: -11.875067710876465
    6. '"' → logprob: -12.125067710876465
    7. '1' → logprob: -13.875067710876465
    8. '-' → logprob: -14.000067710876465
    9. 'print' → logprob: -14.625067710876465
    10. '100' → logprob: -14.750067710876465

Token 1990: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.449480265378952
    2. 'else' → logprob: -1.4494802951812744
    3. '<|end|>' → logprob: -2.3244802951812744
    4. ' else' → logprob: -4.324480056762695
    5. '   ' → logprob: -5.074480056762695
    6. '\n' → logprob: -6.074480056762695
    7. '    
' → logprob: -6.449480056762695
    8. ')' → logprob: -6.574480056762695
    9. '<|end|>' → logprob: -6.574480056762695
    10. 'elif' → logprob: -6.949480056762695

Token 1991: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.03279491513967514
    2. '
' → logprob: -4.157794952392578
    3. ' else' → logprob: -4.157794952392578
    4. 'elif' → logprob: -7.907794952392578
    5. ' 
' → logprob: -8.782794952392578
    6. '   ' → logprob: -9.157794952392578
    7. '```' → logprob: -9.407794952392578
    8. '    
' → logprob: -9.407794952392578
    9. '\n' → logprob: -10.157794952392578
    10. '#else' → logprob: -10.282794952392578

Token 1992: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.033845316618680954
    2. ':
' → logprob: -3.4088454246520996
    3. '   ' → logprob: -9.033844947814941
    4. ' :' → logprob: -10.533844947814941
    5. '<|end|>' → logprob: -10.533844947814941
    6. ' :
' → logprob: -11.783844947814941
    7. '):' → logprob: -12.908844947814941
    8. ')' → logprob: -13.158844947814941
    9. '):
' → logprob: -13.283844947814941
    10. ':

' → logprob: -13.283844947814941

Token 1993: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016555405454710126
    2. ' ans' → logprob: -6.501655578613281
    3. '	ans' → logprob: -9.251655578613281
    4. 'ans' → logprob: -10.251655578613281
    5. ' print' → logprob: -12.126655578613281
    6. '```' → logprob: -12.501655578613281
    7. '(ans' → logprob: -12.751655578613281
    8. 'print' → logprob: -13.126655578613281
    9. ' for' → logprob: -13.126655578613281
    10. '
' → logprob: -13.876655578613281

Token 1994: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0005592276575043797
    2. 'from' → logprob: -8.625558853149414
    3. 'print' → logprob: -9.125558853149414
    4. 'import' → logprob: -9.500558853149414
    5. 'answer' → logprob: -9.750558853149414
    6. 'a' → logprob: -10.000558853149414
    7. '(ans' → logprob: -10.375558853149414
    8. 'for' → logprob: -10.625558853149414
    9. ' ans' → logprob: -10.625558853149414
    10. '	ans' → logprob: -13.000558853149414

Token 1995: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740957021713257
    2. '=' → logprob: -0.9740957021713257
    3. '=n' → logprob: -11.974095344543457
    4. ' ' → logprob: -13.224095344543457
    5. '=int' → logprob: -13.349095344543457
    6. ':' → logprob: -13.349095344543457
    7. '=k' → logprob: -13.599095344543457
    8. ' +=' → logprob: -13.974095344543457
    9. ' =
' → logprob: -14.099095344543457
    10. '=
' → logprob: -14.349095344543457

Token 1996: ' fact' (ID: 2840)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.487227201461792
    2. 'fact' → logprob: -1.237227201461792
    3. 'k' → logprob: -2.362227201461792
    4. ' k' → logprob: -8.112227439880371
    5. ' ' → logprob: -8.487227439880371
    6. '(k' → logprob: -8.612227439880371
    7. ' fact' → logprob: -8.612227439880371
    8. '   ' → logprob: -8.737227439880371
    9. 'factor' → logprob: -9.362227439880371
    10. '(' → logprob: -9.612227439880371

Token 1997: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.0001640876434976235
    2. '(n' → logprob: -8.875164031982422
    3. '(' → logprob: -11.000164031982422
    4. 'k' → logprob: -12.125164031982422
    5. '[k' → logprob: -14.000164031982422
    6. '(
' → logprob: -14.500164031982422
    7. '{k' → logprob: -15.625164031982422
    8. ' (' → logprob: -16.000164031982422
    9. '((' → logprob: -16.375164031982422
    10. 'n' → logprob: -16.375164031982422

Token 1998: ')//' (ID: 60375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4294666051864624
    2. ')*(' → logprob: -1.4294666051864624
    3. '-' → logprob: -3.179466724395752
    4. ')*' → logprob: -3.429466724395752
    5. '   ' → logprob: -4.429466724395752
    6. ')
' → logprob: -4.804466724395752
    7. '-n' → logprob: -5.054466724395752
    8. ')/(' → logprob: -5.304466724395752
    9. ')n' → logprob: -6.429466724395752
    10. '-k' → logprob: -7.429466724395752

Token 1999: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -7.44574936106801e-05
    2. '(f' → logprob: -10.12507438659668
    3. 'factor' → logprob: -10.75007438659668
    4. ' fact' → logprob: -11.37507438659668
    5. '.fact' → logprob: -14.62507438659668
    6. '_fact' → logprob: -15.50007438659668
    7. '(' → logprob: -15.62507438659668
    8. '((' → logprob: -15.87507438659668
    9. 'facts' → logprob: -16.12507438659668
    10. 'f' → logprob: -16.37507438659668

Token 2000: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -2.7968066206085496e-05
    2. 'k' → logprob: -11.375027656555176
    3. '[k' → logprob: -11.750027656555176
    4. '{k' → logprob: -12.875027656555176
    5. '((' → logprob: -13.125027656555176
    6. '(' → logprob: -13.125027656555176
    7. '<|end|>' → logprob: -14.500027656555176
    8. ' (' → logprob: -14.750027656555176
    9. '```' → logprob: -15.125027656555176
    10. '(abs' → logprob: -15.375027656555176

Token 2001: '-n' (ID: 5219)
  Prédit: '-n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-n' → logprob: -0.0016860088799148798
    2. ' -' → logprob: -6.501686096191406
    3. '-' → logprob: -8.751686096191406
    4. ')' → logprob: -11.751686096191406
    5. 'n' → logprob: -11.876686096191406
    6. '[n' → logprob: -12.626686096191406
    7. '(n' → logprob: -13.251686096191406
    8. '-(' → logprob: -13.376686096191406
    9. ')n' → logprob: -13.626686096191406
    10. '
' → logprob: -14.376686096191406

Token 2002: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2190309315919876
    2. ')*' → logprob: -1.7190309762954712
    3. ')*(' → logprob: -4.219030857086182
    4. ')n' → logprob: -7.344030857086182
    5. ')//' → logprob: -7.969030857086182
    6. '-' → logprob: -8.09403133392334
    7. '   ' → logprob: -8.21903133392334
    8. ')-' → logprob: -8.21903133392334
    9. ')
' → logprob: -8.21903133392334
    10. '*)' → logprob: -9.09403133392334

Token 2003: 'print' (ID: 1598)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3609552383422852
    2. ')' → logprob: -1.7359552383422852
    3. '+' → logprob: -1.8609552383422852
    4. '<|end|>' → logprob: -1.8609552383422852
    5. '(' → logprob: -2.485955238342285
    6. '[' → logprob: -3.110955238342285
    7. '%' → logprob: -3.235955238342285
    8. '*' → logprob: -3.860955238342285
    9. ' 
' → logprob: -4.360955238342285
    10. ' )' → logprob: -4.360955238342285

Token 2004: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00010318557906430215
    2. 'ans' → logprob: -9.250102996826172
    3. '(' → logprob: -12.125102996826172
    4. '(int' → logprob: -13.500102996826172
    5. '(abs' → logprob: -16.375102996826172
    6. '(answer' → logprob: -16.875102996826172
    7. '(
' → logprob: -17.125102996826172
    8. '	ans' → logprob: -17.500102996826172
    9. '0' → logprob: -18.000102996826172
    10. 'int' → logprob: -18.000102996826172

Token 2005: '%' (ID: 4)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03579792380332947
    2. '<|end|>' → logprob: -3.4107978343963623
    3. '
' → logprob: -6.660798072814941
    4. '%' → logprob: -8.410798072814941
    5. ' )' → logprob: -9.035798072814941
    6. '```' → logprob: -9.160798072814941
    7. '<|end|>' → logprob: -9.410798072814941
    8. '(n' → logprob: -9.660798072814941
    9. '[' → logprob: -10.160798072814941
    10. '(' → logprob: -10.160798072814941

Token 2006: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.005124176852405071
    2. 'mod' → logprob: -5.380124092102051
    3. '(' → logprob: -8.00512409210205
    4. ' ' → logprob: -9.00512409210205
    5. ' mod' → logprob: -10.25512409210205
    6. '(mod' → logprob: -12.13012409210205
    7. ' (' → logprob: -12.38012409210205
    8. '10' → logprob: -13.00512409210205
    9. '```' → logprob: -16.630125045776367
    10. '1' → logprob: -16.755125045776367

Token 2007: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.016963500529527664
    2. '7' → logprob: -4.141963481903076
    3. '07' → logprob: -7.891963481903076
    4. '007' → logprob: -8.141963958740234
    5. '9' → logprob: -8.391963958740234
    6. '09' → logprob: -11.141963958740234
    7. '```' → logprob: -12.016963958740234
    8. '
' → logprob: -12.516963958740234
    9. ' ' → logprob: -13.266963958740234
    10. ')' → logprob: -13.391963958740234

Token 2008: '000' (ID: 1302)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.030096061527729034
    2. '007' → logprob: -3.5300960540771484
    3. '000' → logprob: -8.155096054077148
    4. '07' → logprob: -10.405096054077148
    5. '907' → logprob: -11.030096054077148
    6. '```' → logprob: -12.780096054077148
    7. '0' → logprob: -13.030096054077148
    8. '+' → logprob: -13.280096054077148
    9. '9' → logprob: -13.905096054077148
    10. '
' → logprob: -14.030096054077148

Token 2009: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '07' → logprob: -18.25
    3. ' ' → logprob: -21.125
    4. '9' → logprob: -21.25
    5. ')' → logprob: -21.625
    6. '७' → logprob: -22.375
    7. '۷' → logprob: -22.5
    8. '৭' → logprob: -23.0
    9. '７' → logprob: -23.25
    10. '٧' → logprob: -23.375

Token 2010: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006839605630375445
    2. ')
' → logprob: -7.875683784484863
    3. '%)' → logprob: -8.875683784484863
    4. '")' → logprob: -10.000683784484863
    5. '
' → logprob: -10.000683784484863
    6. '```' → logprob: -11.000683784484863
    7. '%' → logprob: -11.500683784484863
    8. '())' → logprob: -11.750683784484863
    9. '<|end|>' → logprob: -11.750683784484863
    10. '`)' → logprob: -11.875683784484863

Token 2011: '"""

' (ID: 34508)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36160704493522644
    2. '<|end|>' → logprob: -1.2366070747375488
    3. '
' → logprob: -5.361607074737549
    4. '%' → logprob: -5.861607074737549
    5. '+' → logprob: -6.236607074737549
    6. '#' → logprob: -7.111607074737549
    7. '```' → logprob: -7.361607074737549
    8. '<|end|>' → logprob: -7.611607074737549
    9. '(' → logprob: -7.986607074737549
    10. '}' → logprob: -8.11160659790039

Token 2012: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05746879428625107
    2. '   ' → logprob: -3.182468891143799
    3. '#' → logprob: -5.307468891143799
    4. 'n' → logprob: -5.682468891143799
    5. '       ' → logprob: -6.557468891143799
    6. ' for' → logprob: -6.682468891143799
    7. 'i' → logprob: -6.932468891143799
    8. ')' → logprob: -7.932468891143799
    9. 'm' → logprob: -8.18246841430664
    10. '[' → logprob: -8.43246841430664

Token 2013: '5' (ID: 20)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.413799911737442
    2. '   ' → logprob: -2.038800001144409
    3. '       ' → logprob: -2.538800001144409
    4. 'range' → logprob: -3.163800001144409
    5. '[' → logprob: -3.663800001144409
    6. ' for' → logprob: -4.28879976272583
    7. '           ' → logprob: -4.78879976272583
    8. '=' → logprob: -4.78879976272583
    9. ' range' → logprob: -4.91379976272583
    10. 'n' → logprob: -5.78879976272583

Token 2014: '_C' (ID: 1720)
  Prédit: '_C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_C' → logprob: -0.18034522235393524
    2. '_A' → logprob: -2.180345296859741
    3. '_B' → logprob: -3.055345296859741
    4. '_F' → logprob: -6.180345058441162
    5. '_D' → logprob: -6.680345058441162
    6. '"""' → logprob: -7.680345058441162
    7. '_G' → logprob: -8.30534553527832
    8. '#' → logprob: -8.43034553527832
    9. '_E' → logprob: -8.43034553527832
    10. '_' → logprob: -8.93034553527832

Token 2015: '
' (ID: 198)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.31259408593177795
    2. '"""
' → logprob: -1.8125940561294556
    3. 'n' → logprob: -2.312594175338745
    4. 'def' → logprob: -6.187593936920166
    5. '#' → logprob: -6.562593936920166
    6. '""' → logprob: -6.937593936920166
    7. 'pass' → logprob: -7.562593936920166
    8. '
' → logprob: -8.562594413757324
    9. '"""

' → logprob: -8.812594413757324
    10. '""""' → logprob: -8.812594413757324

Token 2016: '"""
' (ID: 15611)
  Prédit: '"""
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.2764378786087036
    2. 'n' → logprob: -1.7764378786087036
    3. '"""' → logprob: -2.651437759399414
    4. '""' → logprob: -7.401437759399414
    5. 'def' → logprob: -7.901437759399414
    6. '
' → logprob: -8.151437759399414
    7. '"""
' → logprob: -8.651437759399414
    8. '"""

' → logprob: -9.151437759399414
    9. '"' → logprob: -9.901437759399414
    10. '""""' → logprob: -10.651437759399414

Token 2017: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.012332926504313946
    2. '"""
' → logprob: -5.262332916259766
    3. 'def' → logprob: -6.012332916259766
    4. '"""' → logprob: -6.262332916259766
    5. 'from' → logprob: -6.762332916259766
    6. 'k' → logprob: -7.137332916259766
    7. 'import' → logprob: -8.512332916259766
    8. '(n' → logprob: -9.012332916259766
    9. '""' → logprob: -9.512332916259766
    10. '"' → logprob: -10.262332916259766

Token 2018: ' comb' (ID: 4134)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.9973312020301819
    2. 'factor' → logprob: -1.747331142425537
    3. 'pow' → logprob: -2.622331142425537
    4. 'comb' → logprob: -2.622331142425537
    5. 'mod' → logprob: -2.872331142425537
    6. ' fact' → logprob: -3.372331142425537
    7. ' main' → logprob: -3.497331142425537
    8. 'main' → logprob: -3.497331142425537
    9. 'perm' → logprob: -3.872331142425537
    10. 'n' → logprob: -3.872331142425537

Token 2019: '(a' (ID: 6271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00852131750434637
    2. '(' → logprob: -5.75852108001709
    3. 'ination' → logprob: -5.88352108001709
    4. '```' → logprob: -7.38352108001709
    5. '(N' → logprob: -7.50852108001709
    6. 'ine' → logprob: -7.63352108001709
    7. '(
' → logprob: -8.50852108001709
    8. 'i' → logprob: -9.38352108001709
    9. 'def' → logprob: -9.50852108001709
    10. '(int' → logprob: -9.88352108001709

Token 2020: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3043482303619385
    2. '):' → logprob: -1.8043482303619385
    3. '(n' → logprob: -3.3043482303619385
    4. ',n' → logprob: -3.4293482303619385
    5. 'n' → logprob: -3.9293482303619385
    6. '(a' → logprob: -5.804347991943359
    7. '):
' → logprob: -6.304347991943359
    8. ',a' → logprob: -6.929347991943359
    9. ' ,' → logprob: -7.179347991943359
    10. ',k' → logprob: -7.304347991943359

Token 2021: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05172918736934662
    2. '):
' → logprob: -3.051729202270508
    3. '):
' → logprob: -6.551729202270508
    4. ')' → logprob: -6.801729202270508
    5. '(a' → logprob: -8.801729202270508
    6. ',' → logprob: -8.801729202270508
    7. 'def' → logprob: -9.426729202270508
    8. '"):' → logprob: -9.926729202270508
    9. 'a' → logprob: -10.426729202270508
    10. ',a' → logprob: -10.801729202270508

Token 2022: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1482769101858139
    2. '(a' → logprob: -2.1482768058776855
    3. ' (' → logprob: -5.0232768058776855
    4. 'def' → logprob: -5.5232768058776855
    5. '<|end|>' → logprob: -5.7732768058776855
    6. '(
' → logprob: -6.1482768058776855
    7. '(n' → logprob: -7.1482768058776855
    8. '<|end|>' → logprob: -7.5232768058776855
    9. 'return' → logprob: -7.6482768058776855
    10. '(""' → logprob: -7.6482768058776855

Token 2023: ' return' (ID: 622)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4974977672100067
    2. 'if' → logprob: -1.122497797012329
    3. '   ' → logprob: -2.872497797012329
    4. ' return' → logprob: -5.12249755859375
    5. 'return' (adapté à ' return') → logprob: -5.74749755859375
    6. ' ' → logprob: -8.37249755859375
    7. '    ' → logprob: -8.87249755859375
    8. 'def' → logprob: -8.99749755859375
    9. '"""' → logprob: -9.49749755859375
    10. '       ' → logprob: -10.24749755859375

Token 2024: ' fac' (ID: 3513)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.2709859013557434
    2. 'fact' → logprob: -1.7709858417510986
    3. '(math' → logprob: -3.2709858417510986
    4. '1' → logprob: -4.145986080169678
    5. ' math' → logprob: -4.645986080169678
    6. 'factor' → logprob: -6.770986080169678
    7. '0' → logprob: -6.895986080169678
    8. ' ' → logprob: -7.520986080169678
    9. '(' → logprob: -7.895986080169678
    10. ' fact' → logprob: -8.02098560333252

Token 2025: '[a' (ID: 32035)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8007654547691345
    2. '(a' → logprob: -0.9257654547691345
    3. '[a' → logprob: -2.1757655143737793
    4. '(' → logprob: -4.175765514373779
    5. 'tor' → logprob: -4.550765514373779
    6. '[' → logprob: -4.675765514373779
    7. ')' → logprob: -6.550765514373779
    8. '```' → logprob: -6.800765514373779
    9. '(t' → logprob: -7.425765514373779
    10. '[t' → logprob: -7.675765514373779

Token 2026: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.19642561674118042
    2. ']*' → logprob: -2.321425676345825
    3. '][' → logprob: -2.571425676345825
    4. ']%' → logprob: -6.071425437927246
    5. ']*(' → logprob: -7.196425437927246
    6. ']-' → logprob: -8.196425437927246
    7. '[' → logprob: -8.821425437927246
    8. ']+' → logprob: -10.071425437927246
    9. ']<<' → logprob: -10.321425437927246
    10. ']
' → logprob: -10.571425437927246

Token 2027: 'inv' (ID: 31086)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.30914536118507385
    2. 'b' → logprob: -1.9341453313827515
    3. 'pow' → logprob: -2.559145450592041
    4. 'fact' → logprob: -3.309145450592041
    5. 'comb' → logprob: -6.059145450592041
    6. 'perm' → logprob: -6.309145450592041
    7. 'factor' → logprob: -6.309145450592041
    8. '(b' → logprob: -7.809145450592041
    9. '(' → logprob: -8.059144973754883
    10. 'math' → logprob: -9.309144973754883

Token 2028: '[b' (ID: 40800)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.706996500492096
    2. '[b' → logprob: -0.956996500492096
    3. 'fact' → logprob: -2.831996440887451
    4. 'fac' → logprob: -2.831996440887451
    5. '[' → logprob: -6.206996440887451
    6. '[i' → logprob: -7.331996440887451
    7. 'factor' → logprob: -7.581996440887451
    8. '_fac' → logprob: -7.581996440887451
    9. 'f' → logprob: -7.956996440887451
    10. '[]' → logprob: -8.08199691772461

Token 2029: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07085072994232178
    2. ']*' → logprob: -2.6958508491516113
    3. ']*(' → logprob: -7.195850849151611
    4. '*' → logprob: -9.445850372314453
    5. ']+' → logprob: -10.195850372314453
    6. ' ]' → logprob: -11.320850372314453
    7. '[' → logprob: -11.695850372314453
    8. '])' → logprob: -11.945850372314453
    9. ']%' → logprob: -12.070850372314453
    10. ']-' → logprob: -12.820850372314453

Token 2030: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.0002798087371047586
    2. '(inv' → logprob: -8.250279426574707
    3. 'fac' → logprob: -11.625279426574707
    4. '(' → logprob: -11.875279426574707
    5. ' inv' → logprob: -13.375279426574707
    6. '(in' → logprob: -15.375279426574707
    7. 'inf' → logprob: -15.375279426574707
    8. 'infl' → logprob: -15.875279426574707
    9. '_inv' → logprob: -16.000280380249023
    10. 'in' → logprob: -16.250280380249023

Token 2031: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.004981489852070808
    2. '[c' → logprob: -6.129981517791748
    3. '[(' → logprob: -6.504981517791748
    4. '[' → logprob: -7.254981517791748
    5. '[b' → logprob: -7.504981517791748
    6. '[n' → logprob: -11.12998104095459
    7. '(a' → logprob: -12.25498104095459
    8. '[f' → logprob: -12.37998104095459
    9. '[[' → logprob: -12.50498104095459
    10. '[
' → logprob: -12.62998104095459

Token 2032: '-b' (ID: 2118)
  Prédit: '-b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-b' → logprob: -0.0005599428550340235
    2. '-' → logprob: -8.12555980682373
    3. ']' → logprob: -9.12555980682373
    4. 'b' → logprob: -9.50055980682373
    5. ' -' → logprob: -10.25055980682373
    6. '-
' → logprob: -11.37555980682373
    7. '−' → logprob: -12.00055980682373
    8. '-j' → logprob: -12.25055980682373
    9. '][' → logprob: -12.25055980682373
    10. '[' → logprob: -12.37555980682373

Token 2033: ']%' (ID: 158002)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.5690089639974758e-05
    2. ' ]' → logprob: -11.375015258789062
    3. '[' → logprob: -14.250015258789062
    4. ')' → logprob: -14.250015258789062
    5. '])' → logprob: -14.500015258789062
    6. ']
' → logprob: -14.625015258789062
    7. ']+' → logprob: -14.875015258789062
    8. '']' → logprob: -14.875015258789062
    9. ' ' → logprob: -15.375015258789062
    10. ']*' → logprob: -15.875015258789062

Token 2034: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -2.963691804325208e-05
    2. '100' → logprob: -11.125029563903809
    3. ' mod' → logprob: -11.250029563903809
    4. '(mod' → logprob: -14.250029563903809
    5. 'm' → logprob: -14.875029563903809
    6. 'MOD' → logprob: -15.375029563903809
    7. '	mod' → logprob: -15.875029563903809
    8. '_mod' → logprob: -15.875029563903809
    9. 'mo' → logprob: -16.125030517578125
    10. ' ' → logprob: -16.375030517578125

Token 2035: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2036: 'n' (ID: 77)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2037: ',k' (ID: 35155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0049753207713365555
    2. ',n' → logprob: -6.004975318908691
    3. ',k' → logprob: -6.129975318908691
    4. '=' → logprob: -9.754975318908691
    5. '<|end|>' → logprob: -10.379975318908691
    6. ',b' → logprob: -10.754975318908691
    7. ',
' → logprob: -10.879975318908691
    8. ' =' → logprob: -10.879975318908691
    9. ',#' → logprob: -10.879975318908691
    10. '#' → logprob: -11.004975318908691

Token 2038: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4774962365627289
    2. ',' → logprob: -1.7274962663650513
    3. ' =' → logprob: -1.8524962663650513
    4. '[' → logprob: -3.4774961471557617
    5. '   ' → logprob: -5.102496147155762
    6. ' ' → logprob: -6.352496147155762
    7. '<|end|>' → logprob: -6.352496147155762
    8. ' ,' → logprob: -6.977496147155762
    9. '  ' → logprob: -7.602496147155762
    10. ')' → logprob: -7.727496147155762

Token 2039: ' LI' (ID: 14875)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.02526167593896389
    2. 'LI' → logprob: -4.025261878967285
    3. ' map' → logprob: -5.025261878967285
    4. 'I' → logprob: -8.025261878967285
    5. ' LI' → logprob: -9.150261878967285
    6. 'list' → logprob: -9.900261878967285
    7. 'L' → logprob: -11.150261878967285
    8. 'S' → logprob: -11.650261878967285
    9. 'li' → logprob: -13.025261878967285
    10. 'MAP' → logprob: -13.775261878967285

Token 2040: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006938667502254248
    2. '()
' → logprob: -5.006938457489014
    3. '()]' → logprob: -9.756938934326172
    4. ')' → logprob: -9.881938934326172
    5. ']' → logprob: -10.131938934326172
    6. '()[' → logprob: -10.881938934326172
    7. '())' → logprob: -11.006938934326172
    8. 'def' → logprob: -12.256938934326172
    9. '(' → logprob: -12.256938934326172
    10. '[' → logprob: -12.381938934326172

Token 2041: 'if' (ID: 366)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fac' → logprob: -1.0037521123886108
    2. '   ' → logprob: -2.2537522315979004
    3. 'for' → logprob: -2.2537522315979004
    4. '<|end|>' → logprob: -2.3787522315979004
    5. '[' → logprob: -2.5037522315979004
    6. '```' → logprob: -3.2537522315979004
    7. '
' → logprob: -3.2537522315979004
    8. '' → logprob: -3.7537522315979004
    9. ' ' → logprob: -4.0037522315979
    10. '\n' → logprob: -4.0037522315979

Token 2042: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.17996053397655487
    2. 'n' → logprob: -1.8049604892730713
    3. '0' → logprob: -9.304960250854492
    4. '__' → logprob: -9.929960250854492
    5. ' k' → logprob: -11.054960250854492
    6. 'False' → logprob: -11.179960250854492
    7. 'not' → logprob: -11.179960250854492
    8. '(n' → logprob: -11.304960250854492
    9. ' n' → logprob: -11.304960250854492
    10. '1' → logprob: -13.054960250854492

Token 2043: ' <' (ID: 464)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.3599397540092468
    2. '==' → logprob: -2.1099398136138916
    3. '>=' → logprob: -2.7349398136138916
    4. '>' → logprob: -2.9849398136138916
    5. ' <=' → logprob: -3.2349398136138916
    6. ' ==' → logprob: -4.6099395751953125
    7. ' >' → logprob: -5.1099395751953125
    8. '<' → logprob: -5.4849395751953125
    9. ' >=' → logprob: -5.6099395751953125
    10. ' <' → logprob: -6.3599395751953125

Token 2044: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.01120767742395401
    2. '=' → logprob: -4.636207580566406
    3. '=k' → logprob: -6.636207580566406
    4. '0' → logprob: -9.386207580566406
    5. ' k' → logprob: -10.636207580566406
    6. '100' → logprob: -11.886207580566406
    7. '2' → logprob: -12.261207580566406
    8. '1' → logprob: -12.386207580566406
    9. '5' → logprob: -13.511207580566406
    10. ' =' → logprob: -13.636207580566406

Token 2045: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11473625898361206
    2. ':
' → logprob: -2.239736318588257
    3. '   ' → logprob: -7.239736080169678
    4. ' or' → logprob: -7.489736080169678
    5. ':return' → logprob: -7.614736080169678
    6. '==' → logprob: -10.114736557006836
    7. ' and' → logprob: -10.489736557006836
    8. ':
' → logprob: -11.614736557006836
    9. '):' → logprob: -11.864736557006836
    10. 'or' → logprob: -11.864736557006836

Token 2046: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0792214423418045
    2. ':
' → logprob: -3.579221487045288
    3. 'print' → logprob: -3.829221487045288
    4. ':' → logprob: -3.829221487045288
    5. ' print' → logprob: -5.954221248626709
    6. '	print' → logprob: -7.704221248626709
    7. '[' → logprob: -8.329221725463867
    8. ',' → logprob: -8.579221725463867
    9. ':return' → logprob: -8.704221725463867
    10. '    
' → logprob: -8.704221725463867

Token 2047: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.005286053754389286
    2. ' print' → logprob: -5.25528621673584
    3. 'pr' → logprob: -10.75528621673584
    4. 'ans' → logprob: -11.25528621673584
    5. '   ' → logprob: -11.50528621673584
    6. ' ans' → logprob: -13.25528621673584
    7. '```' → logprob: -13.38028621673584
    8. 'return' → logprob: -13.50528621673584
    9. 'prin' → logprob: -14.25528621673584
    10. '0' → logprob: -14.75528621673584

Token 2048: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01087814848870039
    2. '(' → logprob: -4.635878086090088
    3. '(k' → logprob: -7.510878086090088
    4. 'k' → logprob: -7.760878086090088
    5. '(n' → logprob: -10.010878562927246
    6. 'n' → logprob: -10.385878562927246
    7. ' ' → logprob: -10.510878562927246
    8. '"' → logprob: -10.635878562927246
    9. '1' → logprob: -11.885878562927246
    10. '("' → logprob: -12.885878562927246

Token 2049: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000909317925106734
    2. '"' → logprob: -7.375909328460693
    3. '(' → logprob: -9.000908851623535
    4. '1' → logprob: -9.625908851623535
    5. ''' → logprob: -10.375908851623535
    6. ' ' → logprob: -10.500908851623535
    7. 'n' → logprob: -11.125908851623535
    8. 'k' → logprob: -13.188408851623535
    9. '
' → logprob: -13.188408851623535
    10. 'ans' → logprob: -13.563408851623535

Token 2050: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.174335777759552
    2. ')
' → logprob: -1.9243357181549072
    3. '   ' → logprob: -4.424335956573486
    4. ')return' → logprob: -6.299335956573486
    5. '")' → logprob: -10.174335479736328
    6. 'else' → logprob: -10.299335479736328
    7. '()' → logprob: -10.924335479736328
    8. ' )' → logprob: -11.174335479736328
    9. ')n' → logprob: -11.174335479736328
    10. ')
' → logprob: -11.674335479736328

Token 2051: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45212477445602417
    2. 'else' → logprob: -1.452124834060669
    3. ')' → logprob: -3.202124834060669
    4. '
' → logprob: -3.452124834060669
    5. ' else' → logprob: -3.577124834060669
    6. '\n' → logprob: -5.32712459564209
    7. '<|end|>' → logprob: -5.45212459564209
    8. ' ' → logprob: -5.70212459564209
    9. 'print' → logprob: -6.20212459564209
    10. 'return' → logprob: -6.32712459564209

Token 2052: ' quit' (ID: 27737)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41742250323295593
    2. 'else' → logprob: -1.4174225330352783
    3. 'return' → logprob: -2.9174225330352783
    4. ' else' → logprob: -3.7924225330352783
    5. ' ' → logprob: -4.292422294616699
    6. ' return' → logprob: -5.292422294616699
    7. 'elif' → logprob: -6.042422294616699
    8. '
' → logprob: -8.0424222946167
    9. 'exit' → logprob: -8.1674222946167
    10. ' 
' → logprob: -8.9174222946167

Token 2053: '()
' (ID: 1234)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.110121488571167
    2. 'print' → logprob: -1.360121488571167
    3. 'n' → logprob: -1.735121488571167
    4. '(n' → logprob: -1.985121488571167
    5. ')
' → logprob: -3.235121488571167
    6. '\n' → logprob: -3.985121488571167
    7. '()' → logprob: -4.485121726989746
    8. ')n' → logprob: -4.610121726989746
    9. '(' → logprob: -5.360121726989746
    10. '
' → logprob: -5.360121726989746

Token 2054: 'fac' (ID: 34429)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14691445231437683
    2. 'for' → logprob: -2.521914482116699
    3. 'n' → logprob: -3.521914482116699
    4. 'print' → logprob: -5.146914482116699
    5. '```' → logprob: -5.396914482116699
    6. '   ' → logprob: -5.896914482116699
    7. ')' → logprob: -5.896914482116699
    8. ' if' → logprob: -6.271914482116699
    9. '
' → logprob: -6.271914482116699
    10. 'p' → logprob: -6.521914482116699

Token 2055: ' =' (ID: 314)
  Prédit: '=['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.9743160009384155
    2. '=' → logprob: -1.4743160009384155
    3. ' =' → logprob: -1.7243160009384155
    4. '[' → logprob: -1.8493160009384155
    5. '=[]' → logprob: -3.224316120147705
    6. '[n' → logprob: -4.974316120147705
    7. '.append' → logprob: -5.974316120147705
    8. '[len' → logprob: -6.099316120147705
    9. '[:]' → logprob: -6.474316120147705
    10. ' =[' → logprob: -6.724316120147705

Token 2056: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.747814349073451e-05
    2. '[n' → logprob: -11.000017166137695
    3. ' [' → logprob: -15.625017166137695
    4. '[int' → logprob: -15.750017166137695
    5. '[N' → logprob: -15.875017166137695
    6. '{' → logprob: -16.875017166137695
    7. '[m' → logprob: -17.375017166137695
    8. '[a' → logprob: -17.375017166137695
    9. '[len' → logprob: -17.500017166137695
    10. '=[' → logprob: -17.625017166137695

Token 2057: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.153795766294934e-06
    2. '0' → logprob: -12.500005722045898
    3. '[' → logprob: -13.750005722045898
    4. 'None' → logprob: -13.875005722045898
    5. ' ' → logprob: -15.750005722045898
    6. '(' → logprob: -16.6250057220459
    7. ']' → logprob: -17.2500057220459
    8. '-' → logprob: -17.6250057220459
    9. '{' → logprob: -18.2500057220459
    10. '   ' → logprob: -19.1250057220459

Token 2058: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7197166681289673
    2. 'for' → logprob: -0.9697166681289673
    3. ' for' → logprob: -2.8447165489196777
    4. ']*(' → logprob: -3.3447165489196777
    5. ']+' → logprob: -3.8447165489196777
    6. ']
' → logprob: -4.469716548919678
    7. ',' → logprob: -5.469716548919678
    8. ']*' → logprob: -5.719716548919678
    9. 'def' → logprob: -9.969717025756836
    10. ',
' → logprob: -11.094717025756836

Token 2059: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18646535277366638
    2. '_' → logprob: -2.186465263366699
    3. '_i' → logprob: -2.936465263366699
    4. 'range' → logprob: -5.686465263366699
    5. '_range' → logprob: -6.686465263366699
    6. ' i' → logprob: -9.8114652633667
    7. '_in' → logprob: -10.8114652633667
    8. ' range' → logprob: -11.6864652633667
    9. '_x' → logprob: -12.3114652633667
    10. '0' → logprob: -12.8114652633667

Token 2060: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3885898292064667
    2. ' in' → logprob: -1.138589859008789
    3. 'range' → logprob: -6.888589859008789
    4. 'for' → logprob: -7.888589859008789
    5. 'i' → logprob: -8.763589859008789
    6. ' range' → logprob: -9.763589859008789
    7. ' ' → logprob: -9.888589859008789
    8. ' i' → logprob: -10.388589859008789
    9. '_' → logprob: -11.388589859008789
    10. '(range' → logprob: -12.388589859008789

Token 2061: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.7697225252486533e-06
    2. ' range' → logprob: -12.500003814697266
    3. '(range' → logprob: -17.500003814697266
    4. '0' → logprob: -18.875003814697266
    5. '   ' → logprob: -20.875003814697266
    6. ' ' → logprob: -21.500003814697266
    7. '	range' → logprob: -21.875003814697266
    8. '  ' → logprob: -22.125003814697266
    9. 'ran' → logprob: -23.625003814697266
    10. 'r' → logprob: -23.750003814697266

Token 2062: '(k' (ID: 12125)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0027391354087740183
    2. '(k' → logprob: -6.502738952636719
    3. 'k' → logprob: -7.627738952636719
    4. '(range' → logprob: -8.002738952636719
    5. ' range' → logprob: -8.127738952636719
    6. '(n' → logprob: -9.252738952636719
    7. 'n' → logprob: -10.752738952636719
    8. '(' → logprob: -13.877738952636719
    9. '100' → logprob: -14.002738952636719
    10. '0' → logprob: -16.00273895263672

Token 2063: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0016932693542912602
    2. ')]' → logprob: -6.626693248748779
    3. '+k' → logprob: -8.501693725585938
    4. ' +' → logprob: -9.501693725585938
    5. ')])' → logprob: -10.626693725585938
    6. '])' → logprob: -10.626693725585938
    7. '+
' → logprob: -11.376693725585938
    8. '+n' → logprob: -11.501693725585938
    9. ')' → logprob: -12.251693725585938
    10. ')]
' → logprob: -12.501693725585938

Token 2064: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10698390752077103
    2. 'k' → logprob: -3.4819839000701904
    3. 'range' → logprob: -3.4819839000701904
    4. '100' → logprob: -4.2319841384887695
    5. '(k' → logprob: -4.3569841384887695
    6. ' ' → logprob: -5.8569841384887695
    7. '0' → logprob: -5.8569841384887695
    8. '2' → logprob: -6.6069841384887695
    9. ' range' → logprob: -6.9819841384887695
    10. '(' → logprob: -7.1069841384887695

Token 2065: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6939482688903809
    2. ']
' → logprob: -0.6939482688903809
    3. ']
' → logprob: -8.318948745727539
    4. ')]' → logprob: -8.318948745727539
    5. ')]
' → logprob: -8.818948745727539
    6. ' ]
' → logprob: -9.068948745727539
    7. ']

' → logprob: -11.068948745727539
    8. ')' → logprob: -11.068948745727539
    9. ' ]' → logprob: -11.443948745727539
    10. ')
' → logprob: -13.068948745727539

Token 2066: 'for' (ID: 1938)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4316217005252838
    2. 'for' → logprob: -1.0566216707229614
    3. ' 
' → logprob: -6.431621551513672
    4. ' ' → logprob: -7.181621551513672
    5. '[' → logprob: -8.806621551513672
    6. '
' → logprob: -9.306621551513672
    7. ')' → logprob: -9.431621551513672
    8. '   ' → logprob: -9.806621551513672
    9. '	for' → logprob: -10.431621551513672
    10. '```' → logprob: -10.681621551513672

Token 2067: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2352385965641588e-05
    2. ' i' → logprob: -11.375012397766113
    3. '1' → logprob: -14.750012397766113
    4. '	i' → logprob: -15.750012397766113
    5. '   ' → logprob: -15.875012397766113
    6. ' ' → logprob: -16.500011444091797
    7. '  ' → logprob: -17.750011444091797
    8. 'a' → logprob: -18.375011444091797
    9. '<|end|>' → logprob: -18.375011444091797
    10. '(i' → logprob: -18.625011444091797

Token 2068: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25221574306488037
    2. 'in' → logprob: -1.5022157430648804
    3. 'range' → logprob: -8.627215385437012
    4. ' ' → logprob: -10.252215385437012
    5. ' i' → logprob: -10.627215385437012
    6. '1' → logprob: -11.377215385437012
    7. 'i' → logprob: -11.502215385437012
    8. '	in' → logprob: -11.752215385437012
    9. '  ' → logprob: -12.502215385437012
    10. ' range' → logprob: -13.002215385437012

Token 2069: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.615255839889869e-05
    2. ' range' → logprob: -9.250096321105957
    3. '	range' → logprob: -17.37509536743164
    4. '(range' → logprob: -18.50009536743164
    5. '1' → logprob: -19.12509536743164
    6. '   ' → logprob: -19.37509536743164
    7. ' ' → logprob: -19.62509536743164
    8. '  ' → logprob: -20.12509536743164
    9. '
' → logprob: -21.87509536743164
    10. 'rang' → logprob: -22.00009536743164

Token 2070: '(k' (ID: 12125)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.8961017202818766e-05
    2. ' range' → logprob: -9.750059127807617
    3. '
' → logprob: -15.250059127807617
    4. '1' → logprob: -15.500059127807617
    5. '(range' → logprob: -16.500059127807617
    6. '	range' → logprob: -17.625059127807617
    7. ' ' → logprob: -17.750059127807617
    8. '   ' → logprob: -17.750059127807617
    9. '2' → logprob: -17.750059127807617
    10. 'in' → logprob: -18.500059127807617

Token 2071: '):
' (ID: 1883)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12793537974357605
    2. '+' → logprob: -2.1279354095458984
    3. ')' → logprob: -8.377935409545898
    4. '(' → logprob: -8.502935409545898
    5. '[' → logprob: -8.752935409545898
    6. ' +' → logprob: -9.127935409545898
    7. '):
' → logprob: -9.752935409545898
    8. ' ' → logprob: -10.127935409545898
    9. '2' → logprob: -10.377935409545898
    10. ')+' → logprob: -10.377935409545898

Token 2072: '   ' (ID: 271)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5390681624412537
    2. ' i' → logprob: -1.6640682220458984
    3. ' range' → logprob: -2.0390682220458984
    4. '   ' → logprob: -2.7890682220458984
    5. 'range' → logprob: -3.9140682220458984
    6. 'i' → logprob: -4.539068222045898
    7. '[i' → logprob: -6.539068222045898
    8. ' ' → logprob: -6.914068222045898
    9. '(i' → logprob: -7.289068222045898
    10. '1' → logprob: -7.414068222045898

Token 2073: ' fac' (ID: 3513)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02028539404273033
    2. ' in' → logprob: -5.395285606384277
    3. ' ' → logprob: -5.520285606384277
    4. '   ' → logprob: -5.520285606384277
    5. 'i' → logprob: -5.645285606384277
    6. '[i' → logprob: -6.145285606384277
    7. ' range' → logprob: -7.395285606384277
    8. '[' → logprob: -8.395285606384277
    9. '(i' → logprob: -8.770285606384277
    10. ' 
' → logprob: -8.895285606384277

Token 2074: '[i' (ID: 1768)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.0563322305679321
    2. ' i' → logprob: -1.1813322305679321
    3. '[i' → logprob: -1.3063322305679321
    4. '[' → logprob: -3.4313321113586426
    5. 'i' → logprob: -4.306332111358643
    6. '+' → logprob: -4.556332111358643
    7. ' ' → logprob: -5.181332111358643
    8. 'in' → logprob: -5.306332111358643
    9. '(i' → logprob: -5.556332111358643
    10. ' range' → logprob: -7.306332111358643

Token 2075: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00011403311509639025
    2. ' +' → logprob: -9.250114440917969
    3. '+
' → logprob: -11.375114440917969
    4. '1' → logprob: -13.000114440917969
    5. ']' → logprob: -13.625114440917969
    6. '+i' → logprob: -13.750114440917969
    7. ' ' → logprob: -14.500114440917969
    8. '+]' → logprob: -14.750114440917969
    9. ']+' → logprob: -15.500114440917969
    10. '-' → logprob: -15.750114440917969

Token 2076: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.875003814697266
    3. '   ' → logprob: -14.562503814697266
    4. '+' → logprob: -15.250003814697266
    5. '2' → logprob: -16.000003814697266
    6. '```' → logprob: -16.500003814697266
    7. ']' → logprob: -16.812503814697266
    8. '' → logprob: -17.187503814697266
    9. '
' → logprob: -17.187503814697266
    10. '१' → logprob: -17.375003814697266

Token 2077: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10238493233919144
    2. ']=' → logprob: -2.6023850440979004
    3. '=' → logprob: -4.1023850440979
    4. ']+=' → logprob: -5.3523850440979
    5. ' ]' → logprob: -6.6023850440979
    6. ' =' → logprob: -8.352384567260742
    7. ']=(' → logprob: -8.727384567260742
    8. '+' → logprob: -9.977384567260742
    9. '=i' → logprob: -10.602384567260742
    10. '+=' → logprob: -10.852384567260742

Token 2078: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011175730265676975
    2. ' =' → logprob: -4.511175632476807
    3. '=i' → logprob: -9.636176109313965
    4. '*=' → logprob: -9.886176109313965
    5. '=f' → logprob: -12.011176109313965
    6. '=int' → logprob: -12.511176109313965
    7. '=(' → logprob: -14.386176109313965
    8. '=
' → logprob: -14.761176109313965
    9. ' *=' → logprob: -15.761176109313965
    10. ' ' → logprob: -15.886176109313965

Token 2079: ' fac' (ID: 3513)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.00025073037249967456
    2. ' fac' → logprob: -8.375250816345215
    3. '(f' → logprob: -11.250250816345215
    4. '(i' → logprob: -12.875250816345215
    5. 'i' → logprob: -13.500250816345215
    6. 'fact' → logprob: -14.000250816345215
    7. 'fas' → logprob: -14.125250816345215
    8. '_fac' → logprob: -14.375250816345215
    9. ' (' → logprob: -15.000250816345215
    10. '(' → logprob: -15.250250816345215

Token 2080: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.816093228830141e-06
    2. '[' → logprob: -13.25000286102295
    3. 'i' → logprob: -14.25000286102295
    4. '[
' → logprob: -15.37500286102295
    5. '(i' → logprob: -16.250001907348633
    6. '{i' → logprob: -18.625001907348633
    7. '
' → logprob: -18.750001907348633
    8. '	i' → logprob: -19.375001907348633
    9. '1' → logprob: -19.750001907348633
    10. '   ' → logprob: -19.875001907348633

Token 2081: ']*(' (ID: 92627)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.04389495030045509
    2. '*' → logprob: -3.4188950061798096
    3. '*i' → logprob: -4.7938947677612305
    4. ']*(' → logprob: -6.5438947677612305
    5. ' *' → logprob: -7.7938947677612305
    6. ' *(' → logprob: -10.79389476776123
    7. ')*(' → logprob: -10.79389476776123
    8. '*
' → logprob: -12.16889476776123
    9. ']*' → logprob: -12.54389476776123
    10. ']' → logprob: -12.91889476776123

Token 2082: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.4849443838757e-06
    2. '(i' → logprob: -12.500004768371582
    3. ' i' → logprob: -14.125004768371582
    4. '   ' → logprob: -18.875003814697266
    5. '	i' → logprob: -19.125003814697266
    6. '[i' → logprob: -20.250003814697266
    7. ' (' → logprob: -20.250003814697266
    8. '(' → logprob: -20.375003814697266
    9. '{i' → logprob: -20.750003814697266
    10. 'int' → logprob: -21.875003814697266

Token 2083: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008616226725280285
    2. ' +' → logprob: -4.7586164474487305
    3. '1' → logprob: -14.13361644744873
    4. ' ' → logprob: -14.38361644744873
    5. '+
' → logprob: -15.75861644744873
    6. ' +
' → logprob: -16.008615493774414
    7. '+i' → logprob: -16.883615493774414
    8. ')' → logprob: -17.008615493774414
    9. ' plus' → logprob: -17.383615493774414
    10. '[' → logprob: -17.633615493774414

Token 2084: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0040343524888157845
    2. ' ' → logprob: -5.629034519195557
    3. '+' → logprob: -7.754034519195557
    4. ' +' → logprob: -12.879034042358398
    5. '2' → logprob: -13.754034042358398
    6. ' i' → logprob: -14.254034042358398
    7. 'i' → logprob: -15.004034042358398
    8. '   ' → logprob: -15.379034042358398
    9. 's' → logprob: -16.3790340423584
    10. '  ' → logprob: -16.7540340423584

Token 2085: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023671209812164307
    2. '+' → logprob: -4.0236711502075195
    3. ')%' → logprob: -5.5236711502075195
    4. ')#' → logprob: -7.6486711502075195
    5. ')+' → logprob: -7.7736711502075195
    6. ' )' → logprob: -8.14867115020752
    7. '%' → logprob: -8.89867115020752
    8. ')
' → logprob: -10.14867115020752
    9. '+)' → logprob: -10.14867115020752
    10. '+i' → logprob: -10.64867115020752

Token 2086: 'mod' (ID: 4847)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9119244813919067
    2. ' ' → logprob: -1.2869244813919067
    3. ' i' → logprob: -1.6619244813919067
    4. 'i' → logprob: -2.911924362182617
    5. 'mod' → logprob: -3.536924362182617
    6. ''' → logprob: -4.661924362182617
    7. '`' → logprob: -4.661924362182617
    8. '(i' → logprob: -4.661924362182617
    9. ' (' → logprob: -5.161924362182617
    10. ' mod' → logprob: -5.411924362182617

Token 2087: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.106128215789795
    2. '[' → logprob: -1.606128215789795
    3. '
' → logprob: -1.731128215789795
    4. '[i' → logprob: -2.231128215789795
    5. '<|end|>' → logprob: -2.981128215789795
    6. ')' → logprob: -3.231128215789795
    7. '1' → logprob: -3.856128215789795
    8. '\n' → logprob: -4.856128215789795
    9. ' ' → logprob: -4.856128215789795
    10. '```' → logprob: -5.106128215789795

Token 2088: 'inv' (ID: 31086)
  Prédit: ' inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inv' → logprob: -0.2386954426765442
    2. 'inv' → logprob: -1.9886953830718994
    3. ' fac' → logprob: -4.4886956214904785
    4. '```' → logprob: -4.6136956214904785
    5. '[i' → logprob: -4.9886956214904785
    6. '[' → logprob: -4.9886956214904785
    7. '(inv' → logprob: -5.1136956214904785
    8. '<|end|>' → logprob: -5.2386956214904785
    9. ' i' → logprob: -5.6136956214904785
    10. ' for' → logprob: -5.7386956214904785

Token 2089: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22565056383609772
    2. '=' → logprob: -1.6006505489349365
    3. '[' → logprob: -8.975650787353516
    4. '=[' → logprob: -9.225650787353516
    5. ' =[' → logprob: -11.850650787353516
    6. 's' → logprob: -14.225650787353516
    7. '=[]' → logprob: -14.475650787353516
    8. ' ' → logprob: -14.475650787353516
    9. '  ' → logprob: -14.475650787353516
    10. '=[
' → logprob: -14.600650787353516

Token 2090: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.431207682704553e-05
    2. ' [' → logprob: -9.875054359436035
    3. '[k' → logprob: -13.125054359436035
    4. '[len' → logprob: -15.000054359436035
    5. '[i' → logprob: -15.625054359436035
    6. '[-' → logprob: -16.50005340576172
    7. '([' → logprob: -16.62505340576172
    8. '[n' → logprob: -17.12505340576172
    9. 'k' → logprob: -17.87505340576172
    10. '[max' → logprob: -19.00005340576172

Token 2091: 'None' (ID: 8505)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005431424942798913
    2. '0' → logprob: -7.625543117523193
    3. 'pow' → logprob: -10.000543594360352
    4. '[' → logprob: -12.250543594360352
    5. '-' → logprob: -12.750543594360352
    6. 'mod' → logprob: -14.125543594360352
    7. '(' → logprob: -14.250543594360352
    8. 'None' → logprob: -15.625543594360352
    9. '```' → logprob: -16.12554359436035
    10. '{' → logprob: -16.50054359436035

Token 2092: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07019351422786713
    2. 'for' → logprob: -2.6951935291290283
    3. '[' → logprob: -8.32019329071045
    4. '(' → logprob: -12.19519329071045
    5. '	for' → logprob: -12.57019329071045
    6. ' [' → logprob: -13.44519329071045
    7. '
' → logprob: -14.19519329071045
    8. ' ' → logprob: -14.82019329071045
    9. 'None' → logprob: -15.19519329071045
    10. '(None' → logprob: -15.32019329071045

Token 2093: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00036679807817563415
    2. ' i' → logprob: -8.125367164611816
    3. '_' → logprob: -9.625367164611816
    4. '_i' → logprob: -13.375367164611816
    5. '0' → logprob: -14.125367164611816
    6. '   ' → logprob: -14.500367164611816
    7. ' ' → logprob: -15.000367164611816
    8. 'int' → logprob: -15.000367164611816
    9. 'in' → logprob: -15.250367164611816
    10. '	i' → logprob: -15.375367164611816

Token 2094: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.43392834067344666
    2. ' in' → logprob: -1.058928370475769
    3. 'range' → logprob: -5.308928489685059
    4. 'i' → logprob: -8.933928489685059
    5. ' range' → logprob: -10.058928489685059
    6. '(range' → logprob: -10.558928489685059
    7. '(i' → logprob: -10.683928489685059
    8. 'for' → logprob: -11.058928489685059
    9. ' i' → logprob: -12.058928489685059
    10. '   ' → logprob: -12.433928489685059

Token 2095: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002476724097505212
    2. ' range' → logprob: -6.002476692199707
    3. '(range' → logprob: -14.002476692199707
    4. '   ' → logprob: -16.002477645874023
    5. ' ' → logprob: -17.002477645874023
    6. '
' → logprob: -17.002477645874023
    7. '	range' → logprob: -17.502477645874023
    8. 're' → logprob: -17.502477645874023
    9. '  ' → logprob: -18.002477645874023
    10. 'i' → logprob: -18.752477645874023

Token 2096: '(k' (ID: 12125)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015402117278426886
    2. '(range' → logprob: -7.001540184020996
    3. '(k' → logprob: -7.501540184020996
    4. ' range' → logprob: -9.501540184020996
    5. 'k' → logprob: -13.751540184020996
    6. '
' → logprob: -15.501540184020996
    7. '(' → logprob: -15.501540184020996
    8. '	range' → logprob: -17.126541137695312
    9. '   ' → logprob: -17.501541137695312
    10. 'Range' → logprob: -18.001541137695312

Token 2097: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004954866599291563
    2. ' +' → logprob: -8.000495910644531
    3. '-' → logprob: -9.375495910644531
    4. ']' → logprob: -10.750495910644531
    5. ']+' → logprob: -10.875495910644531
    6. '+
' → logprob: -11.125495910644531
    7. ')]' → logprob: -11.875495910644531
    8. '1' → logprob: -12.125495910644531
    9. '+i' → logprob: -13.500495910644531
    10. ')' → logprob: -13.875495910644531

Token 2098: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007716532330960035
    2. '+' → logprob: -4.882716655731201
    3. '2' → logprob: -10.007716178894043
    4. 'k' → logprob: -11.007716178894043
    5. '(' → logprob: -11.632716178894043
    6. 'range' → logprob: -11.632716178894043
    7. '```' → logprob: -11.882716178894043
    8. 'i' → logprob: -12.757716178894043
    9. ']+' → logprob: -13.132716178894043
    10. '])' → logprob: -13.257716178894043

Token 2099: ')]
' (ID: 11587)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.4741648733615875
    2. ']' → logprob: -0.9741648435592651
    3. ']
' → logprob: -9.849164962768555
    4. ' ]
' → logprob: -11.724164962768555
    5. ']()
' → logprob: -11.849164962768555
    6. ']

' → logprob: -12.224164962768555
    7. ')]' → logprob: -12.474164962768555
    8. '()]
' → logprob: -12.599164962768555
    9. '()]' → logprob: -13.849164962768555
    10. ' ]' → logprob: -13.849164962768555

Token 2100: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.0036909321788698435
    2. ' inv' → logprob: -5.753690719604492
    3. '[' → logprob: -8.128690719604492
    4. 'i' → logprob: -9.753690719604492
    5. '```' → logprob: -10.503690719604492
    6. 'def' → logprob: -10.628690719604492
    7. '#' → logprob: -11.003690719604492
    8. '(inv' → logprob: -11.253690719604492
    9. 'inf' → logprob: -11.503690719604492
    10. '0' → logprob: -11.628690719604492

Token 2101: '[k' (ID: 14298)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003482704982161522
    2. ' =' → logprob: -6.003482818603516
    3. '=' → logprob: -7.128482818603516
    4. '[-' → logprob: -9.003482818603516
    5. '[k' → logprob: -9.753482818603516
    6. '=[' → logprob: -11.128482818603516
    7. 'inv' → logprob: -12.128482818603516
    8. ' =[' → logprob: -14.378482818603516
    9. '[::-' → logprob: -14.753482818603516
    10. '[i' → logprob: -14.753482818603516

Token 2102: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05069320648908615
    2. ']=' → logprob: -3.0506932735443115
    3. '/' → logprob: -7.175693035125732
    4. ']=(' → logprob: -7.925693035125732
    5. '+' → logprob: -8.30069351196289
    6. '=' → logprob: -8.67569351196289
    7. ']=-' → logprob: -9.30069351196289
    8. '-' → logprob: -9.30069351196289
    9. '//' → logprob: -9.55069351196289
    10. ']={' → logprob: -9.80069351196289

Token 2103: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001395711093209684
    2. ' =' → logprob: -6.6263957023620605
    3. '=k' → logprob: -10.501396179199219
    4. '=
' → logprob: -11.126396179199219
    5. '=int' → logprob: -11.376396179199219
    6. '=None' → logprob: -12.001396179199219
    7. '=True' → logprob: -12.626396179199219
    8. '=index' → logprob: -14.376396179199219
    9. '=lambda' → logprob: -14.501396179199219
    10. '=len' → logprob: -14.626396179199219

Token 2104: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.1517960956552997e-05
    2. '1' → logprob: -12.250011444091797
    3. '(pow' → logprob: -12.500011444091797
    4. ' pow' → logprob: -12.875011444091797
    5. '0' → logprob: -16.375011444091797
    6. 'power' → logprob: -16.625011444091797
    7. 'mod' → logprob: -17.500011444091797
    8. '
' → logprob: -18.375011444091797
    9. 'Pow' → logprob: -18.500011444091797
    10. 'fac' → logprob: -18.875011444091797

Token 2105: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -5.512236498361744e-07
    2. 'fac' → logprob: -15.500000953674316
    3. '(int' → logprob: -16.0
    4. '[f' → logprob: -16.875
    5. '(mod' → logprob: -17.0
    6. '(' → logprob: -17.75
    7. '	f' → logprob: -18.0
    8. 'mod' → logprob: -18.25
    9. '((' → logprob: -18.5
    10. 'f' → logprob: -18.5

Token 2106: 'ac' (ID: 359)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.1457338333129883
    2. '[k' → logprob: -1.2707338333129883
    3. 'mod' → logprob: -1.3957338333129883
    4. '(k' → logprob: -1.8957338333129883
    5. 'inv' → logprob: -7.145733833312988
    6. '-k' → logprob: -7.270733833312988
    7. '{k' → logprob: -7.770733833312988
    8. ',k' → logprob: -8.020733833312988
    9. '/k' → logprob: -8.395733833312988
    10. ';k' → logprob: -8.770733833312988

Token 2107: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -2.0219828002154827e-05
    2. '[-' → logprob: -11.250020027160645
    3. 'k' → logprob: -11.875020027160645
    4. '{k' → logprob: -16.00002098083496
    5. '[' → logprob: -16.87502098083496
    6. '(k' → logprob: -17.12502098083496
    7. '-k' → logprob: -18.62502098083496
    8. '[K' → logprob: -19.37502098083496
    9. 'mod' → logprob: -19.75002098083496
    10. '[m' → logprob: -20.00002098083496

Token 2108: '],' (ID: 2155)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.12249476462602615
    2. '[-' → logprob: -2.622494697570801
    3. '(k' → logprob: -3.622494697570801
    4. '-' → logprob: -4.747494697570801
    5. 'k' → logprob: -5.622494697570801
    6. 'mod' → logprob: -6.247494697570801
    7. '(-' → logprob: -7.372494697570801
    8. '-k' → logprob: -8.1224946975708
    9. '[' → logprob: -8.2474946975708
    10. '(mod' → logprob: -8.9974946975708

Token 2109: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0008695332217030227
    2. '100' → logprob: -7.5008697509765625
    3. ' mod' → logprob: -8.750869750976562
    4. '-' → logprob: -9.000869750976562
    5. '(mod' → logprob: -10.750869750976562
    6. '-mod' → logprob: -12.000869750976562
    7. '	mod' → logprob: -13.125869750976562
    8. '.mod' → logprob: -13.125869750976562
    9. ' ' → logprob: -13.750869750976562
    10. '999' → logprob: -14.000869750976562

Token 2110: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.153795766294934e-06
    2. 'mod' → logprob: -12.625005722045898
    3. ' -' → logprob: -13.500005722045898
    4. '(mod' → logprob: -13.750005722045898
    5. '-mod' → logprob: -16.3750057220459
    6. '−' → logprob: -16.5000057220459
    7. '{-' → logprob: -16.8750057220459
    8. '()-' → logprob: -17.1250057220459
    9. '(' → logprob: -17.3750057220459
    10. '2' → logprob: -17.5000057220459

Token 2111: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.153795766294934e-06
    2. '-' → logprob: -12.375005722045898
    3. '
' → logprob: -14.125005722045898
    4. ' ' → logprob: -14.812505722045898
    5. '```' → logprob: -15.687505722045898
    6. '3' → logprob: -16.4375057220459
    7. ' -' → logprob: -16.8125057220459
    8. '
' → logprob: -17.0000057220459
    9. '

' → logprob: -17.4375057220459
    10. '２' → logprob: -17.4375057220459

Token 2112: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004577276762574911
    2. ')' → logprob: -6.254577159881592
    3. ' ,' → logprob: -6.504577159881592
    4. ',k' → logprob: -7.004577159881592
    5. ',None' → logprob: -9.50457763671875
    6. ',"' → logprob: -9.87957763671875
    7. ',
' → logprob: -10.87957763671875
    8. ','' → logprob: -11.00457763671875
    9. ',n' → logprob: -11.62957763671875
    10. ' )' → logprob: -11.75457763671875

Token 2113: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -4.961759259458631e-06
    2. ' mod' → logprob: -12.250004768371582
    3. '	mod' → logprob: -17.3750057220459
    4. '(mod' → logprob: -17.8750057220459
    5. 'MOD' → logprob: -18.7500057220459
    6. '   ' → logprob: -19.8750057220459
    7. '100' → logprob: -20.1250057220459
    8. 'k' → logprob: -20.2500057220459
    9. '10' → logprob: -21.3750057220459
    10. '_mod' → logprob: -21.8750057220459

Token 2114: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0015173576539382339
    2. ')' → logprob: -6.501517295837402
    3. ')
' → logprob: -11.251517295837402
    4. ')

' → logprob: -13.501517295837402
    5. ');
' → logprob: -15.251517295837402
    6. ' )
' → logprob: -15.376517295837402
    7. 'for' → logprob: -16.25151824951172
    8. ');' → logprob: -17.00151824951172
    9. ')#' → logprob: -18.12651824951172
    10. 'while' → logprob: -18.37651824951172

Token 2115: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.017422839999198914
    2. ' for' → logprob: -4.142422676086426
    3. 'i' → logprob: -7.392422676086426
    4. 'inv' → logprob: -8.017422676086426
    5. '<|end|>' → logprob: -8.767422676086426
    6. ')' → logprob: -9.767422676086426
    7. '
' → logprob: -10.142422676086426
    8. '   ' → logprob: -10.142422676086426
    9. 'For' → logprob: -10.392422676086426
    10. ' ' → logprob: -10.392422676086426

Token 2116: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.392202976712724e-06
    2. ' i' → logprob: -12.000006675720215
    3. '	i' → logprob: -17.0000057220459
    4. 'k' → logprob: -17.1250057220459
    5. '   ' → logprob: -17.3750057220459
    6. 'j' → logprob: -18.6250057220459
    7. '(i' → logprob: -19.2500057220459
    8. ' ' → logprob: -20.2500057220459
    9. '
' → logprob: -20.5000057220459
    10. '```' → logprob: -20.8750057220459

Token 2117: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17980577051639557
    2. 'in' → logprob: -1.8048057556152344
    3. '	in' → logprob: -10.804805755615234
    4. 'range' → logprob: -11.554805755615234
    5. 'i' → logprob: -11.804805755615234
    6. ' ' → logprob: -12.179805755615234
    7. 'n' → logprob: -12.179805755615234
    8. ' i' → logprob: -12.804805755615234
    9. 'In' → logprob: -13.054805755615234
    10. 'k' → logprob: -13.429805755615234

Token 2118: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.968934758333489e-05
    2. ' range' → logprob: -9.750069618225098
    3. 're' → logprob: -11.875069618225098
    4. '(range' → logprob: -12.625069618225098
    5. '	range' → logprob: -15.500069618225098
    6. 'rang' → logprob: -15.625069618225098
    7. '
' → logprob: -15.750069618225098
    8. 'r' → logprob: -15.875069618225098
    9. 'k' → logprob: -16.375070571899414
    10. 'b' → logprob: -16.500070571899414

Token 2119: '(k' (ID: 12125)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003567959647625685
    2. 'k' → logprob: -8.000356674194336
    3. 're' → logprob: -11.375356674194336
    4. ' range' → logprob: -11.625356674194336
    5. '(range' → logprob: -14.250356674194336
    6. 'reverse' → logprob: -16.750356674194336
    7. 'rang' → logprob: -17.125356674194336
    8. 'r' → logprob: -17.375356674194336
    9. ' ' → logprob: -17.750356674194336
    10. 'rev' → logprob: -17.875356674194336

Token 2120: ')[' (ID: 13637)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.4021237802808173e-05
    2. ' -' → logprob: -12.000014305114746
    3. '-k' → logprob: -12.375014305114746
    4. 'k' → logprob: -12.875014305114746
    5. '-
' → logprob: -14.250014305114746
    6. '+' → logprob: -16.75001335144043
    7. ',k' → logprob: -16.87501335144043
    8. '[k' → logprob: -17.12501335144043
    9. '+k' → logprob: -17.12501335144043
    10. '1' → logprob: -17.12501335144043

Token 2121: '::-' (ID: 96612)
  Prédit: '::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::-' → logprob: -0.35577118396759033
    2. ' in' → logprob: -1.7307711839675903
    3. ',' → logprob: -2.855771064758301
    4. '[::-' → logprob: -3.355771064758301
    5. 'in' → logprob: -4.355771064758301
    6. ':' → logprob: -5.480771064758301
    7. 'k' → logprob: -5.980771064758301
    8. '-' → logprob: -6.230771064758301
    9. 're' → logprob: -6.605771064758301
    10. '
' → logprob: -6.980771064758301

Token 2122: '1' (ID: 16)
  Prédit: '::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::-' → logprob: -0.08916693925857544
    2. '-' → logprob: -3.5891668796539307
    3. '1' → logprob: -3.7141668796539307
    4. 'range' → logprob: -4.33916711807251
    5. ':' → logprob: -4.58916711807251
    6. ':-' → logprob: -5.58916711807251
    7. ':
' → logprob: -5.83916711807251
    8. ']:
' → logprob: -7.08916711807251
    9. ' :' → logprob: -7.58916711807251
    10. 'k' → logprob: -7.71416711807251

Token 2123: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.7709792852401733
    2. ':
' → logprob: -1.2709792852401733
    3. ':' → logprob: -1.3959792852401733
    4. ']:' → logprob: -4.770979404449463
    5. '):
' → logprob: -8.395978927612305
    6. '():
' → logprob: -8.520978927612305
    7. ',' → logprob: -8.770978927612305
    8. ']' → logprob: -9.270978927612305
    9. ']:
' → logprob: -9.770978927612305
    10. ' :
' → logprob: -11.270978927612305

Token 2124: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01194923184812069
    2. '	in' → logprob: -4.511949062347412
    3. '	i' → logprob: -7.886949062347412
    4. ' inv' → logprob: -8.13694953918457
    5. 'inv' → logprob: -9.51194953918457
    6. '	' → logprob: -9.76194953918457
    7. '	   ' → logprob: -10.76194953918457
    8. '(inv' → logprob: -11.13694953918457
    9. '   ' → logprob: -11.63694953918457
    10. '	for' → logprob: -12.38694953918457

Token 2125: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' (adapté à ' inv') → logprob: -0.040208909660577774
    2. '   ' → logprob: -3.2902088165283203
    3. ' inv' → logprob: -6.16520881652832
    4. '	in' → logprob: -10.54020881652832
    5. 'in' → logprob: -11.54020881652832
    6. ' ' → logprob: -11.54020881652832
    7. '(inv' → logprob: -11.66520881652832
    8. '[in' → logprob: -12.91520881652832
    9. '       ' → logprob: -12.91520881652832
    10. '  ' → logprob: -13.41520881652832

Token 2126: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.7491250875755213e-05
    2. '[' → logprob: -11.125027656555176
    3. 'i' → logprob: -12.000027656555176
    4. '[int' → logprob: -13.500027656555176
    5. '[
' → logprob: -13.750027656555176
    6. '=' → logprob: -14.125027656555176
    7. '(i' → logprob: -14.625027656555176
    8. '=i' → logprob: -14.750027656555176
    9. '[k' → logprob: -15.250027656555176
    10. '<|end|>' → logprob: -15.250027656555176

Token 2127: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009956181980669498
    2. ' =' → logprob: -5.009956359863281
    3. ']=' → logprob: -6.259956359863281
    4. ']' → logprob: -6.759956359863281
    5. '=i' → logprob: -8.884956359863281
    6. '=
' → logprob: -11.759956359863281
    7. '=k' → logprob: -12.509956359863281
    8. '=f' → logprob: -13.009956359863281
    9. '=n' → logprob: -13.384956359863281
    10. '=int' → logprob: -13.509956359863281

Token 2128: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.856408536899835e-05
    2. ' =' → logprob: -10.625028610229492
    3. '=i' → logprob: -13.125028610229492
    4. '=int' → logprob: -14.125028610229492
    5. '=(' → logprob: -15.375028610229492
    6. '=f' → logprob: -15.375028610229492
    7. '=k' → logprob: -15.500028610229492
    8. '=
' → logprob: -15.625028610229492
    9. '=b' → logprob: -16.000028610229492
    10. '=None' → logprob: -16.375028610229492

Token 2129: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.0015239100903272629
    2. '(inv' → logprob: -6.501523971557617
    3. ' inv' → logprob: -11.001523971557617
    4. '(in' → logprob: -12.501523971557617
    5. 'in' → logprob: -14.001523971557617
    6. ' (' → logprob: -15.876523971557617
    7. '(' → logprob: -16.376523971557617
    8. 'iv' → logprob: -17.251523971557617
    9. '((' → logprob: -17.376523971557617
    10. '   ' → logprob: -17.501523971557617

Token 2130: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.8828707804204896e-05
    2. 'i' → logprob: -10.125048637390137
    3. '[' → logprob: -12.625048637390137
    4. '(i' → logprob: -12.750048637390137
    5. '<|end|>' → logprob: -13.375048637390137
    6. '{i' → logprob: -15.125048637390137
    7. '[
' → logprob: -15.375048637390137
    8. '[I' → logprob: -16.250049591064453
    9. '[int' → logprob: -16.250049591064453
    10. '[next' → logprob: -16.750049591064453

Token 2131: '+' (ID: 10)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1321898102760315
    2. 'i' → logprob: -2.6321897506713867
    3. '+' → logprob: -3.0071897506713867
    4. '+i' → logprob: -7.132189750671387
    5. '(i' → logprob: -7.382189750671387
    6. '[' → logprob: -8.007189750671387
    7. '{i' → logprob: -8.132189750671387
    8. '1' → logprob: -8.507189750671387
    9. '<i' → logprob: -9.882189750671387
    10. ']+' → logprob: -10.382189750671387

Token 2132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006055758567526937
    2. 'i' → logprob: -7.500605583190918
    3. '+' → logprob: -10.125605583190918
    4. '(i' → logprob: -11.750605583190918
    5. ' ' → logprob: -13.375605583190918
    6. '[i' → logprob: -13.875605583190918
    7. 'k' → logprob: -14.625605583190918
    8. '   ' → logprob: -14.750605583190918
    9. '(' → logprob: -15.250605583190918
    10. ']' → logprob: -15.625605583190918

Token 2133: ']*(' (ID: 92627)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.0047419723123312
    2. ']*(' → logprob: -5.62974214553833
    3. '*' → logprob: -7.00474214553833
    4. '*((' → logprob: -9.379741668701172
    5. ')*(' → logprob: -9.629741668701172
    6. ' *' → logprob: -10.504741668701172
    7. '*i' → logprob: -10.629741668701172
    8. '   ' → logprob: -11.504741668701172
    9. '	' → logprob: -12.504741668701172
    10. ' *(' → logprob: -12.879741668701172

Token 2134: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -8.77627644513268e-06
    2. '(i' → logprob: -11.750008583068848
    3. ' i' → logprob: -14.125008583068848
    4. '	i' → logprob: -15.875008583068848
    5. '{i' → logprob: -18.500009536743164
    6. '[i' → logprob: -18.750009536743164
    7. '   ' → logprob: -18.750009536743164
    8. ')i' → logprob: -19.000009536743164
    9. '(' → logprob: -20.125009536743164
    10. ' (' → logprob: -20.125009536743164

Token 2135: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.392202976712724e-06
    2. ' +' → logprob: -12.000006675720215
    3. '+
' → logprob: -16.3750057220459
    4. '1' → logprob: -18.1250057220459
    5. '+i' → logprob: -18.7500057220459
    6. '＋' → logprob: -19.3750057220459
    7. '+)' → logprob: -21.5000057220459
    8. ' ' → logprob: -21.5000057220459
    9. '2' → logprob: -21.6250057220459
    10. ' +
' → logprob: -21.8750057220459

Token 2136: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000182921823579818
    2. '1' → logprob: -8.62518310546875
    3. ' +' → logprob: -12.87518310546875
    4. '+
' → logprob: -14.62518310546875
    5. '   ' → logprob: -16.37518310546875
    6. '2' → logprob: -17.12518310546875
    7. ' ' → logprob: -17.25018310546875
    8. ']+' → logprob: -17.75018310546875
    9. 'plus' → logprob: -17.75018310546875
    10. '+i' → logprob: -17.87518310546875

Token 2137: ')%' (ID: 57656)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.05904807522892952
    2. ')%' → logprob: -3.1840481758117676
    3. ')' → logprob: -4.184048175811768
    4. ' %' → logprob: -7.434048175811768
    5. '%)' → logprob: -10.43404769897461
    6. ' )' → logprob: -10.68404769897461
    7. ']%' → logprob: -10.68404769897461
    8. '%i' → logprob: -11.43404769897461
    9. '%
' → logprob: -13.55904769897461
    10. ')
' → logprob: -13.80904769897461

Token 2138: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.40426328778266907
    2. '1' → logprob: -2.1542632579803467
    3. '(i' → logprob: -2.5292632579803467
    4. '(' → logprob: -2.9042632579803467
    5. 'i' → logprob: -3.4042632579803467
    6. '(mod' → logprob: -3.5292632579803467
    7. 'inv' → logprob: -5.029263496398926
    8. '<|end|>' → logprob: -6.154263496398926
    9. '[i' → logprob: -6.529263496398926
    10. ' (' → logprob: -6.904263496398926

Token 2139: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2140: 'ans' (ID: 616)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2141: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.062000520527362823
    2. ' =' → logprob: -2.8120005130767822
    3. ',' → logprob: -11.562000274658203
    4. '(' → logprob: -11.937000274658203
    5. 'import' → logprob: -12.812000274658203
    6. ' ' → logprob: -12.812000274658203
    7. ')' → logprob: -13.187000274658203
    8. '   ' → logprob: -13.437000274658203
    9. '=
' → logprob: -13.812000274658203
    10. ' =
' → logprob: -14.187000274658203

Token 2142: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4308411478996277
    2. 'comb' → logprob: -1.1808412075042725
    3. 'fac' → logprob: -3.3058412075042725
    4. '1' → logprob: -5.680840969085693
    5. 'com' → logprob: -7.180840969085693
    6. 'pow' → logprob: -7.305840969085693
    7. ' comb' → logprob: -7.305840969085693
    8. '(com' → logprob: -7.680840969085693
    9. '(' → logprob: -9.180841445922852
    10. 'mod' → logprob: -9.805841445922852

Token 2143: '0' (ID: 15)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.6415889263153076
    2. '0' → logprob: -0.7665889263153076
    3. 'fac' → logprob: -5.016589164733887
    4. '(' → logprob: -7.266589164733887
    5. 'com' → logprob: -7.516589164733887
    6. '(com' → logprob: -7.516589164733887
    7. '1' → logprob: -8.016589164733887
    8. 'sum' → logprob: -9.891589164733887
    9. ' comb' → logprob: -10.891589164733887
    10. 'fact' → logprob: -11.016589164733887

Token 2144: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05480385571718216
    2. ' for' → logprob: -3.0548038482666016
    3. '<|end|>' → logprob: -5.929803848266602
    4. '
' → logprob: -6.054803848266602
    5. '+' → logprob: -7.179803848266602
    6. ' 
' → logprob: -9.054803848266602
    7. '<|end|>' → logprob: -10.054803848266602
    8. '+
' → logprob: -10.304803848266602
    9. '(' → logprob: -10.304803848266602
    10. '(ans' → logprob: -10.304803848266602

Token 2145: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009943663142621517
    2. ' for' → logprob: -5.63494348526001
    3. 'i' → logprob: -5.75994348526001
    4. '+' → logprob: -6.75994348526001
    5. '(' → logprob: -7.13494348526001
    6. 'print' → logprob: -7.63494348526001
    7. 'n' → logprob: -8.509943962097168
    8. '(
' → logprob: -8.759943962097168
    9. '(ans' → logprob: -9.384943962097168
    10. ')' → logprob: -10.134943962097168

Token 2146: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0003794336807914078
    2. 'j' → logprob: -8.37537956237793
    3. 'k' → logprob: -9.62537956237793
    4. 'a' → logprob: -10.37537956237793
    5. 'x' → logprob: -11.12537956237793
    6. 'v' → logprob: -11.50037956237793
    7. ' i' → logprob: -11.50037956237793
    8. 'n' → logprob: -12.25037956237793
    9. 'r' → logprob: -12.25037956237793
    10. 'l' → logprob: -13.37537956237793

Token 2147: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07690981030464172
    2. 'in' → logprob: -2.7019097805023193
    3. 'range' → logprob: -5.076910018920898
    4. '(range' → logprob: -7.451910018920898
    5. ' range' → logprob: -9.201910018920898
    6. 'n' → logprob: -11.201910018920898
    7. '(n' → logprob: -13.326910018920898
    8. 'from' → logprob: -13.326910018920898
    9. ',' → logprob: -13.451910018920898
    10. 'import' → logprob: -13.826910018920898

Token 2148: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020389800192788243
    2. ' range' → logprob: -8.500204086303711
    3. 'k' → logprob: -15.875204086303711
    4. '(range' → logprob: -16.12520408630371
    5. '   ' → logprob: -17.25020408630371
    6. 'r' → logprob: -17.50020408630371
    7. 'I' → logprob: -18.12520408630371
    8. '	range' → logprob: -18.87520408630371
    9. 'rang' → logprob: -19.62520408630371
    10. '
' → logprob: -19.75020408630371

Token 2149: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.06815855950117111
    2. '(n' → logprob: -3.3181586265563965
    3. '(i' → logprob: -3.5681586265563965
    4. '(' → logprob: -6.6931586265563965
    5. 'k' → logprob: -8.818158149719238
    6. 'n' → logprob: -10.318158149719238
    7. 'i' → logprob: -11.318158149719238
    8. '(K' → logprob: -11.568158149719238
    9. '(
' → logprob: -12.193158149719238
    10. '(I' → logprob: -12.818158149719238

Token 2150: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9742289185523987
    2. ',n' → logprob: -1.224228858947754
    3. ',' → logprob: -1.474228858947754
    4. ',k' → logprob: -2.599228858947754
    5. '):
' → logprob: -4.599228858947754
    6. '):' → logprob: -5.724228858947754
    7. ':' → logprob: -5.849228858947754
    8. ' ,' → logprob: -6.474228858947754
    9. ':
' → logprob: -6.599228858947754
    10. ',i' → logprob: -6.724228858947754

Token 2151: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.29264435172080994
    2. '1' → logprob: -1.6676443815231323
    3. 'k' → logprob: -3.1676442623138428
    4. '+' → logprob: -4.042644500732422
    5. '(n' → logprob: -5.417644500732422
    6. ')' → logprob: -8.417644500732422
    7. '):
' → logprob: -8.667644500732422
    8. '+n' → logprob: -9.542644500732422
    9. ',n' → logprob: -9.792644500732422
    10. 'i' → logprob: -9.792644500732422

Token 2152: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6258677244186401
    2. ':' → logprob: -1.2508677244186401
    3. ':
' → logprob: -2.3758678436279297
    4. '):' → logprob: -2.5008678436279297
    5. ')' → logprob: -6.62586784362793
    6. ',' → logprob: -7.37586784362793
    7. '   ' → logprob: -7.37586784362793
    8. '+' → logprob: -8.25086784362793
    9. ']:
' → logprob: -8.37586784362793
    10. '):
' → logprob: -8.87586784362793

Token 2153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028836870566010475
    2. '	ans' → logprob: -4.028836727142334
    3. '(ans' → logprob: -5.153836727142334
    4. ' ans' → logprob: -6.278836727142334
    5. 'ans' → logprob: -7.278836727142334
    6. '{' → logprob: -7.278836727142334
    7. '```' → logprob: -7.903836727142334
    8. '  ' → logprob: -8.153837203979492
    9. ' ' → logprob: -8.403837203979492
    10. '{
' → logprob: -9.278837203979492

Token 2154: ' if' (ID: 538)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.1434086263179779
    2. ' ans' → logprob: -2.1434085369110107
    3. '   ' → logprob: -5.26840877532959
    4. '(ans' → logprob: -5.26840877532959
    5. 'print' → logprob: -5.39340877532959
    6. 'if' (adapté à ' if') → logprob: -7.51840877532959
    7. 'i' → logprob: -8.26840877532959
    8. ' i' → logprob: -8.51840877532959
    9. '	ans' → logprob: -8.89340877532959
    10. ' if' → logprob: -9.01840877532959

Token 2155: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2811681628227234
    2. 'n' → logprob: -2.156168222427368
    3. '(n' → logprob: -2.656168222427368
    4. '(i' → logprob: -2.906168222427368
    5. ' i' → logprob: -6.406167984008789
    6. 'k' → logprob: -6.906167984008789
    7. ' (' → logprob: -7.656167984008789
    8. ' n' → logprob: -8.031167984008789
    9. '(k' → logprob: -8.031167984008789
    10. '(' → logprob: -8.531167984008789

Token 2156: '%' (ID: 4)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1738821566104889
    2. '==' → logprob: -2.298882246017456
    3. ' <=' → logprob: -3.173882246017456
    4. '<=' → logprob: -4.923882007598877
    5. '%' → logprob: -6.048882007598877
    6. '```' → logprob: -6.423882007598877
    7. ' !=' → logprob: -7.173882007598877
    8. '*i' → logprob: -7.173882007598877
    9. ' i' → logprob: -7.298882007598877
    10. '[i' → logprob: -7.423882007598877

Token 2157: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.016039647161960602
    2. ' ' → logprob: -4.141039848327637
    3. '1' → logprob: -14.016039848327637
    4. '3' → logprob: -14.016039848327637
    5. '```' → logprob: -14.266039848327637
    6. '==' → logprob: -14.641039848327637
    7. '(' → logprob: -14.891039848327637
    8. ' ==' → logprob: -15.141039848327637
    9. '
' → logprob: -15.266039848327637
    10. '   ' → logprob: -15.391039848327637

Token 2158: ':
' (ID: 734)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.11803422123193741
    2. '!=' → logprob: -2.8680341243743896
    3. ' ==' → logprob: -2.9930341243743896
    4. ' !=' → logprob: -5.493034362792969
    5. '==
' → logprob: -9.493034362792969
    6. '=' → logprob: -9.618034362792969
    7. '```' → logprob: -10.243034362792969
    8. '   ' → logprob: -10.618034362792969
    9. '[' → logprob: -11.868034362792969
    10. ' ' → logprob: -11.868034362792969

Token 2159: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0130012771114707
    2. '   ' → logprob: -4.388001441955566
    3. '<|end|>' → logprob: -9.638001441955566
    4. '    ' → logprob: -9.763001441955566
    5. '     ' → logprob: -9.763001441955566
    6. ':
' → logprob: -9.763001441955566
    7. ':' → logprob: -10.013001441955566
    8. '[' → logprob: -10.638001441955566
    9. ' ' → logprob: -10.763001441955566
    10. '	' → logprob: -11.013001441955566

Token 2160: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.32934215664863586
    2. 'ans' (adapté à ' ans') → logprob: -1.3293421268463135
    3. '(ans' → logprob: -4.454342365264893
    4. '	ans' → logprob: -6.204342365264893
    5. '   ' → logprob: -7.329342365264893
    6. '-' → logprob: -7.454342365264893
    7. '    ' → logprob: -8.204341888427734
    8. ' -' → logprob: -8.329341888427734
    9. ' ' → logprob: -8.579341888427734
    10. '```' → logprob: -8.829341888427734

Token 2161: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.04694230854511261
    2. '+=' → logprob: -3.2969422340393066
    3. ' -=' → logprob: -5.171942234039307
    4. '=' → logprob: -5.921942234039307
    5. '-' → logprob: -7.796942234039307
    6. ' +=' → logprob: -9.921942710876465
    7. '+=(' → logprob: -10.296942710876465
    8. '!=' → logprob: -11.921942710876465
    9. ' =' → logprob: -12.296942710876465
    10. ' -' → logprob: -14.171942710876465

Token 2162: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.00013238313840702176
    2. 'com' → logprob: -10.00013256072998
    3. ' comb' → logprob: -10.00013256072998
    4. 'fac' → logprob: -10.87513256072998
    5. '(com' → logprob: -11.37513256072998
    6. 'mod' → logprob: -12.00013256072998
    7. '(' → logprob: -13.25013256072998
    8. '   ' → logprob: -14.25013256072998
    9. 'comm' → logprob: -14.62513256072998
    10. 'pow' → logprob: -14.75013256072998

Token 2163: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -3.4881879400927573e-05
    2. '(' → logprob: -10.875035285949707
    3. '(i' → logprob: -11.875035285949707
    4. '(n' → logprob: -12.250035285949707
    5. 'k' → logprob: -12.500035285949707
    6. '[k' → logprob: -15.375035285949707
    7. '(
' → logprob: -16.25003433227539
    8. '{k' → logprob: -16.75003433227539
    9. ',k' → logprob: -16.87503433227539
    10. ' (' → logprob: -17.75003433227539

Token 2164: ',i' (ID: 25032)
  Prédit: ',i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',i' → logprob: -0.005890160799026489
    2. ',' → logprob: -5.380890369415283
    3. 'i' → logprob: -6.755890369415283
    4. '(i' → logprob: -9.505889892578125
    5. ',k' → logprob: -11.380889892578125
    6. '[i' → logprob: -11.630889892578125
    7. ' i' → logprob: -12.130889892578125
    8. ' ,' → logprob: -13.505889892578125
    9. ',n' → logprob: -14.130889892578125
    10. '<|end|>' → logprob: -14.255889892578125

Token 2165: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002887371927499771
    2. '<|end|>' → logprob: -6.12788724899292
    3. ' )' → logprob: -7.62788724899292
    4. ')*' → logprob: -9.877887725830078
    5. ')
' → logprob: -9.877887725830078
    6. '*' → logprob: -11.127887725830078
    7. ',' → logprob: -11.377887725830078
    8. '+' → logprob: -11.502887725830078
    9. ')+' → logprob: -11.502887725830078
    10. '   ' → logprob: -11.627887725830078

Token 2166: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.001298330957069993
    2. 'fac' → logprob: -7.001298427581787
    3. 'fact' → logprob: -8.126297950744629
    4. '(pow' → logprob: -10.001297950744629
    5. 'math' → logprob: -11.001297950744629
    6. 'comb' → logprob: -11.501297950744629
    7. '(i' → logprob: -12.126297950744629
    8. '(' → logprob: -12.376297950744629
    9. 'factor' → logprob: -13.126297950744629
    10. 'mod' → logprob: -13.126297950744629

Token 2167: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.010456140153110027
    2. '(' → logprob: -5.135456085205078
    3. '2' → logprob: -6.135456085205078
    4. '(n' → logprob: -6.760456085205078
    5. '(i' → logprob: -7.885456085205078
    6. 'k' → logprob: -8.260456085205078
    7. '((' → logprob: -8.385456085205078
    8. '(mod' → logprob: -8.760456085205078
    9. 'mod' → logprob: -9.135456085205078
    10. '(m' → logprob: -11.260456085205078

Token 2168: '-i' (ID: 18499)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5577829480171204
    2. 'i' → logprob: -1.5577828884124756
    3. '-i' → logprob: -2.0577828884124756
    4. '(n' → logprob: -2.5577828884124756
    5. 'k' → logprob: -5.307783126831055
    6. '(k' → logprob: -7.057783126831055
    7. '   ' → logprob: -7.182783126831055
    8. '(i' → logprob: -7.182783126831055
    9. ',n' → logprob: -7.182783126831055
    10. '-k' → logprob: -7.307783126831055

Token 2169: ',n' (ID: 18103)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0029148347675800323
    2. ',n' → logprob: -6.252914905548096
    3. '[n' → logprob: -8.127914428710938
    4. ' n' → logprob: -8.252914428710938
    5. '   ' → logprob: -9.127914428710938
    6. ')n' → logprob: -9.252914428710938
    7. '**' → logprob: -10.002914428710938
    8. ',' → logprob: -10.127914428710938
    9. '(n' → logprob: -10.127914428710938
    10. '%n' → logprob: -10.752914428710938

Token 2170: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6334577798843384
    2. ',' → logprob: -1.2584577798843384
    3. '(n' → logprob: -2.633457660675049
    4. ' ,' → logprob: -3.383457660675049
    5. '(' → logprob: -3.758457660675049
    6. ',n' → logprob: -4.133457660675049
    7. ',k' → logprob: -4.383457660675049
    8. ' )' → logprob: -5.258457660675049
    9. '<|end|>' → logprob: -5.508457660675049
    10. ')%' → logprob: -5.883457660675049

Token 2171: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -4.008129963040119e-06
    2. ' mod' → logprob: -12.500003814697266
    3. '3' → logprob: -16.375003814697266
    4. '(mod' → logprob: -17.500003814697266
    5. '	mod' → logprob: -17.750003814697266
    6. '2' → logprob: -18.000003814697266
    7. '  ' → logprob: -18.250003814697266
    8. 'k' → logprob: -18.250003814697266
    9. '   ' → logprob: -18.500003814697266
    10. ' ' → logprob: -18.500003814697266

Token 2172: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00828807894140482
    2. ')
' → logprob: -4.8832879066467285
    3. '<|end|>' → logprob: -7.8832879066467285
    4. ' )' → logprob: -9.008288383483887
    5. '+' → logprob: -10.258288383483887
    6. ')return' → logprob: -10.758288383483887
    7. ' )
' → logprob: -11.008288383483887
    8. '<|end|>' → logprob: -11.383288383483887
    9. '   ' → logprob: -11.508288383483887
    10. ')+' → logprob: -11.758288383483887

Token 2173: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.5275322198867798
    2. ' mod' → logprob: -0.9025322198867798
    3. '(mod' → logprob: -5.52753210067749
    4. ' ' → logprob: -8.402532577514648
    5. ')' → logprob: -9.402532577514648
    6. '```' → logprob: -10.652532577514648
    7. '	mod' → logprob: -10.777532577514648
    8. '`' → logprob: -11.152532577514648
    9. ' )' → logprob: -11.527532577514648
    10. ' (' → logprob: -11.777532577514648

Token 2174: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6788844466209412
    2. '<|end|>' → logprob: -1.428884506225586
    3. '+' → logprob: -2.053884506225586
    4. ' ' → logprob: -2.928884506225586
    5. '   ' → logprob: -4.053884506225586
    6. ' )' → logprob: -4.928884506225586
    7. ' 
' → logprob: -4.928884506225586
    8. ' else' → logprob: -5.053884506225586
    9. '```' → logprob: -5.428884506225586
    10. '\n' → logprob: -5.678884506225586

Token 2175: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.327680379152298
    2. '<|end|>' → logprob: -2.0776803493499756
    3. ' ' → logprob: -2.7026803493499756
    4. '+' → logprob: -3.2026803493499756
    5. '```' → logprob: -4.452680587768555
    6. ' )' → logprob: -4.577680587768555
    7. '[' → logprob: -4.827680587768555
    8. ' 
' → logprob: -5.952680587768555
    9. '   ' → logprob: -6.202680587768555
    10. ' ans' → logprob: -6.452680587768555

Token 2176: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.7220575213432312
    2. ' ' → logprob: -0.8470575213432312
    3. '   ' → logprob: -3.472057580947876
    4. 'else' (adapté à ' else') → logprob: -4.097057342529297
    5. ' )' → logprob: -4.097057342529297
    6. ' ans' → logprob: -4.722057342529297
    7. ')' → logprob: -5.347057342529297
    8. ' 
' → logprob: -6.222057342529297
    9. '<|end|>' → logprob: -6.847057342529297
    10. ' elif' → logprob: -6.972057342529297

Token 2177: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5083204507827759
    2. ':' → logprob: -1.5083204507827759
    3. ' ans' → logprob: -2.1333203315734863
    4. '   ' → logprob: -3.1333203315734863
    5. '    ' → logprob: -5.508320331573486
    6. '	ans' → logprob: -5.633320331573486
    7. ':
' → logprob: -5.758320331573486
    8. '(ans' → logprob: -6.383320331573486
    9. ' ' → logprob: -7.758320331573486
    10. '<|end|>' → logprob: -8.008320808410645

Token 2178: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23406097292900085
    2. '   ' → logprob: -1.6090610027313232
    3. ' ans' → logprob: -5.109060764312744
    4. 'ans' → logprob: -6.609060764312744
    5. '    ' → logprob: -7.859060764312744
    6. '	ans' → logprob: -7.984060764312744
    7. '```' → logprob: -8.609061241149902
    8. '           ' → logprob: -9.359061241149902
    9. '(ans' → logprob: -9.734061241149902
    10. '     ' → logprob: -10.234061241149902

Token 2179: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.00409288564696908
    2. ' ans' → logprob: -5.504092693328857
    3. '(ans' → logprob: -11.254093170166016
    4. '	ans' → logprob: -13.879093170166016
    5. '_ans' → logprob: -14.754093170166016
    6. 'answer' → logprob: -16.379093170166016
    7. 'a' → logprob: -18.129093170166016
    8. 'Ans' → logprob: -19.504093170166016
    9. '   ' → logprob: -19.629093170166016
    10. 'anst' → logprob: -19.629093170166016

Token 2180: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00014573395310435444
    2. ' +=' → logprob: -8.87514591217041
    3. ']+=' → logprob: -13.00014591217041
    4. '+' → logprob: -13.37514591217041
    5. '+=(' → logprob: -13.50014591217041
    6. '+="' → logprob: -15.12514591217041
    7. '=' → logprob: -15.50014591217041
    8. '+='' → logprob: -15.75014591217041
    9. 'import' → logprob: -18.750144958496094
    10. '   ' → logprob: -19.375144958496094

Token 2181: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.0019407729851081967
    2. ' comb' → logprob: -6.501940727233887
    3. '(com' → logprob: -7.751940727233887
    4. 'com' → logprob: -11.751940727233887
    5. '(' → logprob: -14.876940727233887
    6. 'combo' → logprob: -16.251941680908203
    7. ' (' → logprob: -16.751941680908203
    8. '_comb' → logprob: -18.376941680908203
    9. 'combat' → logprob: -18.501941680908203
    10. 'combine' → logprob: -18.626941680908203

Token 2182: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.005266719032078981
    2. '(' → logprob: -5.2552666664123535
    3. 'k' → logprob: -11.005267143249512
    4. '(
' → logprob: -11.380267143249512
    5. ' (' → logprob: -12.505267143249512
    6. ' k' → logprob: -14.380267143249512
    7. '[k' → logprob: -15.755267143249512
    8. '```' → logprob: -16.130266189575195
    9. '(kernel' → logprob: -16.630266189575195
    10. ')' → logprob: -17.380266189575195

Token 2183: ',i' (ID: 25032)
  Prédit: ',i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',i' → logprob: -0.014519213698804379
    2. ',' → logprob: -4.389519214630127
    3. '(i' → logprob: -6.514519214630127
    4. 'i' → logprob: -8.014518737792969
    5. '(' → logprob: -8.764518737792969
    6. '[i' → logprob: -11.389518737792969
    7. ',
' → logprob: -11.889518737792969
    8. ',k' → logprob: -12.264518737792969
    9. '<|end|>' → logprob: -12.389518737792969
    10. ' ,' → logprob: -13.014518737792969

Token 2184: ')*' (ID: 11043)
  Prédit: ',k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.05557806417346001
    2. '*k' → logprob: -3.3055779933929443
    3. '*' → logprob: -5.430578231811523
    4. ',' → logprob: -5.555578231811523
    5. ',i' → logprob: -5.805578231811523
    6. ')*' → logprob: -6.055578231811523
    7. '*i' → logprob: -6.305578231811523
    8. '(k' → logprob: -7.305578231811523
    9. '*,' → logprob: -7.680578231811523
    10. ',*' → logprob: -7.805578231811523

Token 2185: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -5.512236498361744e-07
    2. '(pow' → logprob: -14.750000953674316
    3. ' pow' → logprob: -16.5
    4. '.pow' → logprob: -20.625
    5. '_pow' → logprob: -21.5
    6. '
' → logprob: -22.75
    7. 'pw' → logprob: -23.25
    8. 'Pow' → logprob: -23.25
    9. 'power' → logprob: -23.75
    10. 'po' → logprob: -23.875

Token 2186: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.0006308287265710533
    2. '(' → logprob: -7.375630855560303
    3. 'k' → logprob: -12.625630378723145
    4. '(
' → logprob: -14.375630378723145
    5. ' (' → logprob: -15.125630378723145
    6. ' k' → logprob: -15.875630378723145
    7. '```' → logprob: -18.87563133239746
    8. '(n' → logprob: -19.00063133239746
    9. '((' → logprob: -19.00063133239746
    10. '(K' → logprob: -19.12563133239746

Token 2187: '-i' (ID: 18499)
  Prédit: '-i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.00048763392260298133
    2. ' -' → logprob: -8.125487327575684
    3. '-' → logprob: -8.625487327575684
    4. 'i' → logprob: -12.875487327575684
    5. '<|end|>' → logprob: -13.125487327575684
    6. '-ai' → logprob: -13.375487327575684
    7. '<|end|>' → logprob: -13.500487327575684
    8. '-u' → logprob: -14.000487327575684
    9. '-ip' → logprob: -14.375487327575684
    10. '...' → logprob: -14.875487327575684

Token 2188: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.0009156247251667082
    2. ',' → logprob: -7.00091552734375
    3. 'n' → logprob: -13.25091552734375
    4. '(n' → logprob: -13.50091552734375
    5. ',
' → logprob: -14.75091552734375
    6. ' ,' → logprob: -15.12591552734375
    7. '(' → logprob: -16.62591552734375
    8. '**,' → logprob: -17.12591552734375
    9. '`,' → logprob: -17.25091552734375
    10. ',num' → logprob: -17.37591552734375

Token 2189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.749814019713085e-06
    2. '(mod' → logprob: -12.500006675720215
    3. ',
' → logprob: -13.500006675720215
    4. '```' → logprob: -14.375006675720215
    5. ' ,' → logprob: -14.750006675720215
    6. 'mod' → logprob: -15.250006675720215
    7. ',module' → logprob: -15.875006675720215
    8. '%,' → logprob: -16.50000762939453
    9. '`,' → logprob: -16.62500762939453
    10. '%' → logprob: -16.75000762939453

Token 2190: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.000410415610531345
    2. ' mod' → logprob: -7.875410556793213
    3. '(mod' → logprob: -10.500410079956055
    4. '```' → logprob: -13.750410079956055
    5. ',' → logprob: -14.375410079956055
    6. '1' → logprob: -15.000410079956055
    7. '	mod' → logprob: -15.625410079956055
    8. '2' → logprob: -16.125410079956055
    9. 'n' → logprob: -16.125410079956055
    10. 'pow' → logprob: -16.125410079956055

Token 2191: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.32256418466567993
    2. ',' → logprob: -1.5725641250610352
    3. ')' → logprob: -3.322564125061035
    4. '%' → logprob: -3.447564125061035
    5. '%)' → logprob: -9.572564125061035
    6. ']%' → logprob: -9.572564125061035
    7. ',
' → logprob: -10.072564125061035
    8. '   ' → logprob: -10.197564125061035
    9. ')
' → logprob: -10.572564125061035
    10. '%,' → logprob: -11.197564125061035

Token 2192: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -4.656383680412546e-05
    2. '(mod' → logprob: -10.250046730041504
    3. ' mod' → logprob: -11.625046730041504
    4. ')' → logprob: -13.750046730041504
    5. '
' → logprob: -14.000046730041504
    6. '	mod' → logprob: -15.500046730041504
    7. ')
' → logprob: -16.750045776367188
    8. '_mod' → logprob: -17.375045776367188
    9. '-mod' → logprob: -17.625045776367188
    10. ',' → logprob: -17.875045776367188

Token 2193: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10609564930200577
    2. ' ' → logprob: -2.981095552444458
    3. ')' → logprob: -4.356095790863037
    4. '
' → logprob: -4.856095790863037
    5. ' 
' → logprob: -4.856095790863037
    6. 'print' → logprob: -5.606095790863037
    7. ' ans' → logprob: -5.731095790863037
    8. '<|end|>' → logprob: -5.856095790863037
    9. '\n' → logprob: -6.106095790863037
    10. '  ' → logprob: -6.106095790863037

Token 2194: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007887800224125385
    2. ' ' → logprob: -5.757887840270996
    3. ')' → logprob: -5.882887840270996
    4. '       ' → logprob: -8.257887840270996
    5. '[' → logprob: -8.382887840270996
    6. 'print' → logprob: -8.382887840270996
    7. '```' → logprob: -8.632887840270996
    8. '<|end|>' → logprob: -8.882887840270996
    9. '    
' → logprob: -9.132887840270996
    10. '  ' → logprob: -9.132887840270996

Token 2195: ' ans' (ID: 3345)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5062037110328674
    2. '\n' → logprob: -1.7562036514282227
    3. ' ' → logprob: -2.5062036514282227
    4. '   ' → logprob: -2.8812036514282227
    5. '<|end|>' → logprob: -3.1312036514282227
    6. ' 
' → logprob: -4.006203651428223
    7. ')' → logprob: -4.381203651428223
    8. '<|end|>' → logprob: -6.131203651428223
    9. '%' → logprob: -6.756203651428223
    10. '  ' → logprob: -6.881203651428223

Token 2196: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.00923935230821371
    2. ' %=' → logprob: -4.759239196777344
    3. '%' → logprob: -7.384239196777344
    4. '=' → logprob: -12.759239196777344
    5. ')%' → logprob: -15.259239196777344
    6. '+=' → logprob: -15.509239196777344
    7. '%\' → logprob: -15.759239196777344
    8. ' %' → logprob: -16.134239196777344
    9. 'print' → logprob: -16.509239196777344
    10. '   ' → logprob: -17.009239196777344

Token 2197: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0001589618914294988
    2. '(mod' → logprob: -8.75015926361084
    3. ' mod' → logprob: -14.87515926361084
    4. '100' → logprob: -16.250158309936523
    5. '	mod' → logprob: -19.000158309936523
    6. '_mod' → logprob: -19.375158309936523
    7. '.mod' → logprob: -19.875158309936523
    8. 'MOD' → logprob: -20.375158309936523
    9. '(' → logprob: -20.500158309936523
    10. '
' → logprob: -20.750158309936523

Token 2198: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001191775663755834
    2. ')' → logprob: -7.50119161605835
    3. ')
' → logprob: -7.50119161605835
    4. '
' → logprob: -9.501192092895508
    5. '   ' → logprob: -12.126192092895508
    6. ' print' → logprob: -12.751192092895508
    7. '```' → logprob: -13.251192092895508
    8. '    
' → logprob: -14.751192092895508
    9. '(print' → logprob: -15.251192092895508
    10. '#print' → logprob: -15.376192092895508

Token 2199: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0029534546192735434
    2. ')' → logprob: -6.37795352935791
    3. '   ' → logprob: -7.00295352935791
    4. '<|end|>' → logprob: -9.00295352935791
    5. '```' → logprob: -9.00295352935791
    6. ' print' → logprob: -10.37795352935791
    7. '
' → logprob: -11.00295352935791
    8. '"""' → logprob: -11.62795352935791
    9. 'ans' → logprob: -11.75295352935791
    10. '(print' → logprob: -12.37795352935791

Token 2200: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -15.625000953674316
    3. 'ans' → logprob: -15.875000953674316
    4. '(int' → logprob: -16.0
    5. '((' → logprob: -16.375
    6. '(abs' → logprob: -17.875
    7. '(answer' → logprob: -20.0
    8. '(
' → logprob: -20.375
    9. '	ans' → logprob: -21.0
    10. '(a' → logprob: -21.125

Token 2201: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1888679839321412e-05
    2. '())' → logprob: -11.500021934509277
    3. ')
' → logprob: -12.000021934509277
    4. '()' → logprob: -13.250021934509277
    5. ' )' → logprob: -13.500021934509277
    6. '")' → logprob: -14.500021934509277
    7. '(' → logprob: -14.625021934509277
    8. '))' → logprob: -14.875021934509277
    9. '[' → logprob: -15.250021934509277
    10. '```' → logprob: -15.500021934509277

Token 2202: '"""

' (ID: 34508)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2076997011899948
    2. '<|end|>' → logprob: -1.7076996564865112
    3. '#' → logprob: -6.082699775695801
    4. '"""' → logprob: -7.082699775695801
    5. '
' → logprob: -7.207699775695801
    6. '```' → logprob: -7.332699775695801
    7. ']' → logprob: -7.582699775695801
    8. '<|end|>' → logprob: -7.957699775695801
    9. '\n' → logprob: -9.0826997756958
    10. '}' → logprob: -9.2076997756958

Token 2203: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7539275884628296
    2. '[' → logprob: -1.5039275884628296
    3. '#' → logprob: -1.8789275884628296
    4. ' ' → logprob: -2.878927707672119
    5. ')' → logprob: -3.253927707672119
    6. 'a' → logprob: -4.753927707672119
    7. ']' → logprob: -5.253927707672119
    8. '=' → logprob: -5.253927707672119
    9. '+' → logprob: -5.628927707672119
    10. 'i' → logprob: -5.753927707672119

Token 2204: '5' (ID: 20)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.482534408569336
    2. '#' → logprob: -1.607534408569336
    3. 'n' → logprob: -1.607534408569336
    4. ')' → logprob: -1.857534408569336
    5. '/' → logprob: -2.857534408569336
    6. ' ' → logprob: -3.107534408569336
    7. ']' → logprob: -3.982534408569336
    8. 'u' → logprob: -4.482534408569336
    9. 'a' → logprob: -4.607534408569336
    10. ':' → logprob: -4.857534408569336

Token 2205: '_D' (ID: 2958)
  Prédit: '_C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_C' → logprob: -0.44841158390045166
    2. '_' → logprob: -1.6984115839004517
    3. '#' → logprob: -2.698411464691162
    4. '_A' → logprob: -2.948411464691162
    5. '<|end|>' → logprob: -4.198411464691162
    6. '"""' → logprob: -4.448411464691162
    7. '_D' → logprob: -4.823411464691162
    8. '_B' → logprob: -5.448411464691162
    9. '_E' → logprob: -5.698411464691162
    10. '_F' → logprob: -6.073411464691162

Token 2206: '
' (ID: 198)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.7085389494895935
    2. '"""' → logprob: -0.7085389494895935
    3. 'n' → logprob: -4.458539009094238
    4. '#' → logprob: -6.208539009094238
    5. 'pass' → logprob: -7.333539009094238
    6. '""' → logprob: -7.458539009094238
    7. '"""

' → logprob: -9.208539009094238
    8. '""""' → logprob: -9.458539009094238
    9. 'def' → logprob: -9.708539009094238
    10. '(n' → logprob: -9.958539009094238

Token 2207: '"""
' (ID: 15611)
  Prédit: '"""
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.2671741247177124
    2. '"""' → logprob: -1.8921741247177124
    3. 'n' → logprob: -2.517174243927002
    4. '""' → logprob: -6.642174243927002
    5. 'def' → logprob: -7.642174243927002
    6. '#' → logprob: -7.892174243927002
    7. 'pass' → logprob: -8.392173767089844
    8. '
' → logprob: -8.892173767089844
    9. 'import' → logprob: -8.892173767089844
    10. '"""

' → logprob: -9.017173767089844

Token 2208: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.013197408989071846
    2. 'import' → logprob: -5.888197422027588
    3. 'for' → logprob: -6.013197422027588
    4. 'from' → logprob: -6.263197422027588
    5. 'def' → logprob: -6.388197422027588
    6. '
' → logprob: -7.013197422027588
    7. '"""' → logprob: -7.263197422027588
    8. 'a' → logprob: -8.13819694519043
    9. 'i' → logprob: -8.13819694519043
    10. ' for' → logprob: -8.38819694519043

Token 2209: ',k' (ID: 35155)
  Prédit: ',k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.007115533109754324
    2. ',' → logprob: -5.757115364074707
    3. ',W' → logprob: -5.757115364074707
    4. ',K' → logprob: -8.632115364074707
    5. '=' → logprob: -8.757115364074707
    6. ',w' → logprob: -9.257115364074707
    7. '=int' → logprob: -10.007115364074707
    8. ' =' → logprob: -10.007115364074707
    9. ',m' → logprob: -10.007115364074707
    10. ',v' → logprob: -10.257115364074707

Token 2210: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08940058201551437
    2. ',k' → logprob: -2.83940052986145
    3. ' =' → logprob: -4.339400768280029
    4. ',' → logprob: -4.339400768280029
    5. ',v' → logprob: -8.839400291442871
    6. '=k' → logprob: -8.839400291442871
    7. ',K' → logprob: -9.339400291442871
    8. ',w' → logprob: -9.464400291442871
    9. ',p' → logprob: -9.839400291442871
    10. ',W' → logprob: -9.839400291442871

Token 2211: ' map' (ID: 4014)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.012834995053708553
    2. 'map' → logprob: -4.8878350257873535
    3. ' LI' → logprob: -5.6378350257873535
    4. 'I' → logprob: -6.6378350257873535
    5. ' map' → logprob: -8.762834548950195
    6. 'L' → logprob: -9.012834548950195
    7. 'Li' → logprob: -11.262834548950195
    8. 'li' → logprob: -11.887834548950195
    9. ' I' → logprob: -11.887834548950195
    10. 'k' → logprob: -12.387834548950195

Token 2212: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.007649460807442665
    2. 'int' → logprob: -4.8826494216918945
    3. '[int' → logprob: -11.007649421691895
    4. '=int' → logprob: -11.507649421691895
    5. ',int' → logprob: -11.507649421691895
    6. '<int' → logprob: -12.257649421691895
    7. ']int' → logprob: -14.257649421691895
    8. 'in' → logprob: -15.507649421691895
    9. 'input' → logprob: -15.632649421691895
    10. ':int' → logprob: -16.00765037536621

Token 2213: ',' (ID: 11)
  Prédit: ',int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',int' → logprob: -0.052795764058828354
    2. ',' → logprob: -3.677795648574829
    3. '(int' → logprob: -3.677795648574829
    4. 'int' → logprob: -7.177795886993408
    5. ',input' → logprob: -9.67779541015625
    6. '=int' → logprob: -11.42779541015625
    7. ',k' → logprob: -11.67779541015625
    8. '[int' → logprob: -11.80279541015625
    9. '<int' → logprob: -12.55279541015625
    10. ',n' → logprob: -12.80279541015625

Token 2214: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.011052182875573635
    2. 'input' → logprob: -4.511052131652832
    3. ' int' → logprob: -12.761052131652832
    4. ' input' → logprob: -14.261052131652832
    5. '(int' → logprob: -14.511052131652832
    6. 'str' → logprob: -15.011052131652832
    7. '[int' → logprob: -16.76105308532715
    8. 'list' → logprob: -17.38605308532715
    9. 'I' → logprob: -17.51105308532715
    10. '=int' → logprob: -18.01105308532715

Token 2215: '().' (ID: 1454)
  Prédit: '(),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.0954195037484169
    2. ',' → logprob: -3.095419406890869
    3. '().' → logprob: -3.220419406890869
    4. '()' → logprob: -5.970419406890869
    5. ',input' → logprob: -5.970419406890869
    6. ',int' → logprob: -8.595419883728027
    7. ',k' → logprob: -9.220419883728027
    8. 'split' → logprob: -9.845419883728027
    9. '```' → logprob: -10.095419883728027
    10. '(),
' → logprob: -10.220419883728027

Token 2216: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00017708084487821907
    2. 'int' → logprob: -9.750177383422852
    3. '2' → logprob: -10.500177383422852
    4. 'print' → logprob: -10.875177383422852
    5. 'str' → logprob: -11.500177383422852
    6. 'strip' → logprob: -11.625177383422852
    7. '()' → logprob: -11.750177383422852
    8. 'skip' → logprob: -11.875177383422852
    9. 's' → logprob: -12.000177383422852
    10. 'n' → logprob: -12.250177383422852

Token 2217: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.002116831485182047
    2. '()' → logprob: -6.627116680145264
    3. ')' → logprob: -7.502116680145264
    4. '())
' → logprob: -8.377117156982422
    5. '());' → logprob: -13.002117156982422
    6. '()
' → logprob: -13.002117156982422
    7. '())
' → logprob: -13.877117156982422
    8. '():' → logprob: -14.252117156982422
    9. '(),' → logprob: -14.502117156982422
    10. '):' → logprob: -14.877117156982422

Token 2218: 'import' (ID: 561)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.8276918530464172
    2. 'ans' → logprob: -1.4526917934417725
    3. 'dp' → logprob: -2.7026917934417725
    4. 'def' → logprob: -2.9526917934417725
    5. 'mod' → logprob: -3.3276917934417725
    6. '#' → logprob: -3.7026917934417725
    7. 'a' → logprob: -3.7026917934417725
    8. 'n' → logprob: -3.9526917934417725
    9. 'from' → logprob: -3.9526917934417725
    10. '"""
' → logprob: -4.077692031860352

Token 2219: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.3138182461261749
    2. 'math' → logprob: -1.3138182163238525
    3. 'bis' → logprob: -8.813817977905273
    4. 'heap' → logprob: -9.188817977905273
    5. 'fra' → logprob: -9.688817977905273
    6. 'operator' → logprob: -9.688817977905273
    7. 'fun' → logprob: -9.813817977905273
    8. 'sym' → logprob: -10.313817977905273
    9. 'numpy' → logprob: -10.438817977905273
    10. 'collections' → logprob: -10.563817977905273

Token 2220: '
' (ID: 198)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00012880703434348106
    2. '
' → logprob: -9.250128746032715
    3. 'input' → logprob: -10.625128746032715
    4. 'import' → logprob: -12.375128746032715
    5. 'from' → logprob: -14.375128746032715
    6. 'memo' → logprob: -14.500128746032715
    7. '   ' → logprob: -14.625128746032715
    8. ' sys' → logprob: -14.750128746032715
    9. 'data' → logprob: -14.750128746032715
    10. '=sys' → logprob: -14.875128746032715

Token 2221: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0003600144700612873
    2. 'input' → logprob: -8.000360488891602
    3. 'from' → logprob: -10.750360488891602
    4. 'import' → logprob: -13.750360488891602
    5. '
' → logprob: -14.000360488891602
    6. ' sys' → logprob: -14.250360488891602
    7. '=sys' → logprob: -15.500360488891602
    8. 'memo' → logprob: -16.6253604888916
    9. 'factor' → logprob: -16.7503604888916
    10. 'data' → logprob: -17.2503604888916

Token 2222: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.00015335931675508618
    2. 'set' → logprob: -9.250153541564941
    3. '#set' → logprob: -10.750153541564941
    4. '.stdin' → logprob: -10.875153541564941
    5. '.stdout' → logprob: -12.000153541564941
    6. '.setdefault' → logprob: -12.250153541564941
    7. '.exit' → logprob: -12.625153541564941
    8. 'stdout' → logprob: -14.500153541564941
    9. 'stdin' → logprob: -14.500153541564941
    10. '
' → logprob: -14.625153541564941

Token 2223: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.5760639309883118
    2. 'set' → logprob: -0.8260639309883118
    3. 'exit' → logprob: -9.951064109802246
    4. 'stdin' → logprob: -9.951064109802246
    5. 'limit' → logprob: -11.451064109802246
    6. ' recursion' → logprob: -11.951064109802246
    7. 'trace' → logprob: -12.201064109802246
    8. 'sys' → logprob: -13.701064109802246
    9. 'stdout' → logprob: -14.076064109802246
    10. 'import' → logprob: -14.201064109802246

Token 2224: 'ursion' (ID: 41658)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.04641487076878548
    2. 'rec' → logprob: -3.296414852142334
    3. 'limit' → logprob: -4.796414852142334
    4. 'ursion' → logprob: -10.296415328979492
    5. 'exit' → logprob: -10.921415328979492
    6. 'erset' → logprob: -12.046415328979492
    7. 'depth' → logprob: -12.921415328979492
    8. '
' → logprob: -13.171415328979492
    9. 'exc' → logprob: -13.296415328979492
    10. 'et' → logprob: -13.796415328979492

Token 2225: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -1.7432603272027336e-06
    2. '_limit' → logprob: -14.750001907348633
    3. 'import' → logprob: -14.875001907348633
    4. 'sys' → logprob: -14.875001907348633
    5. 'set' → logprob: -15.125001907348633
    6. 'limits' → logprob: -16.250001907348633
    7. 'depth' → logprob: -16.375001907348633
    8. ' limit' → logprob: -16.625001907348633
    9. 'Limit' → logprob: -18.375001907348633
    10. 'max' → logprob: -18.500001907348633

Token 2226: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001532401074655354
    2. '100' → logprob: -8.875153541564941
    3. '10' → logprob: -11.500153541564941
    4. '(sys' → logprob: -13.500153541564941
    5. '500' → logprob: -14.000153541564941
    6. 'sys' → logprob: -15.375153541564941
    7. '=sys' → logprob: -16.125152587890625
    8. '300' → logprob: -16.250152587890625
    9. ' (' → logprob: -16.375152587890625
    10. '999' → logprob: -16.375152587890625

Token 2227: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.16023235023021698
    2. '100' → logprob: -1.9102323055267334
    3. '200' → logprob: -13.160232543945312
    4. '1' → logprob: -13.535232543945312
    5. 'pow' → logprob: -13.535232543945312
    6. '500' → logprob: -13.660232543945312
    7. '300' → logprob: -14.285232543945312
    8. '(' → logprob: -14.910232543945312
    9. '410' → logprob: -14.910232543945312
    10. '110' → logprob: -15.285232543945312

Token 2228: '00' (ID: 504)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.1639704704284668
    2. '000' → logprob: -2.788970470428467
    3. '7' → logprob: -3.163970470428467
    4. '**' → logprob: -3.788970470428467
    5. '4' → logprob: -3.913970470428467
    6. '```' → logprob: -5.913970470428467
    7. '^' → logprob: -7.538970470428467
    8. '``' → logprob: -8.163970947265625
    9. '9' → logprob: -8.663970947265625
    10. '5' → logprob: -8.663970947265625

Token 2229: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16046245396137238
    2. ')' → logprob: -1.910462498664856
    3. ')
' → logprob: -8.410462379455566
    4. 'sys' → logprob: -12.160462379455566
    5. ')

' → logprob: -12.285462379455566
    6. '
' → logprob: -13.910462379455566
    7. 'def' → logprob: -14.035462379455566
    8. ')#' → logprob: -14.410462379455566
    9. '   ' → logprob: -14.535462379455566
    10. 'import' → logprob: -14.660462379455566

Token 2230: 'memo' (ID: 113822)
  Prédit: 'memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.834859311580658
    2. 'def' → logprob: -0.959859311580658
    3. 'dp' → logprob: -1.9598593711853027
    4. 'fact' → logprob: -4.209859371185303
    5. '"""
' → logprob: -4.334859371185303
    6. 'f' → logprob: -4.834859371185303
    7. 'factor' → logprob: -5.834859371185303
    8. 'from' → logprob: -7.084859371185303
    9. 'mem' → logprob: -7.334859371185303
    10. '"""' → logprob: -7.709859371185303

Token 2231: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6349445581436157
    2. ' =' → logprob: -0.7599445581436157
    3. '=[' → logprob: -6.759944438934326
    4. '=[]' → logprob: -7.259944438934326
    5. 'def' → logprob: -8.134944915771484
    6. '=[]
' → logprob: -9.634944915771484
    7. '=sys' → logprob: -10.259944915771484
    8. '=[
' → logprob: -11.259944915771484
    9. '=lambda' → logprob: -11.384944915771484
    10. '=
' → logprob: -11.509944915771484

Token 2232: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009344237856566906
    2. '[-' → logprob: -5.259344100952148
    3. '{' → logprob: -6.009344100952148
    4. '{}' → logprob: -6.509344100952148
    5. '[n' → logprob: -9.259344100952148
    6. 'default' → logprob: -10.884344100952148
    7. '{-' → logprob: -11.134344100952148
    8. '[[' → logprob: -11.759344100952148
    9. '{}
' → logprob: -12.384344100952148
    10. '[int' → logprob: -12.384344100952148

Token 2233: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.031771834939718246
    2. '[' → logprob: -3.5317718982696533
    3. '-' → logprob: -6.781771659851074
    4. '(' → logprob: -7.281771659851074
    5. '0' → logprob: -8.906771659851074
    6. 'None' → logprob: -10.906771659851074
    7. '[-' → logprob: -12.031771659851074
    8. '(None' → logprob: -12.531771659851074
    9. '(-' → logprob: -12.656771659851074
    10. '2' → logprob: -12.656771659851074

Token 2234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000652389950118959
    2. ',[' → logprob: -8.125652313232422
    3. ',
' → logprob: -9.125652313232422
    4. '[' → logprob: -9.500652313232422
    5. ',m' → logprob: -10.125652313232422
    6. 'def' → logprob: -10.750652313232422
    7. ',None' → logprob: -11.000652313232422
    8. ']' → logprob: -11.125652313232422
    9. '<|end|>' → logprob: -11.125652313232422
    10. 'for' → logprob: -11.250652313232422

Token 2235: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '<|end|>' → logprob: -14.875000953674316
    3. ']' → logprob: -15.000000953674316
    4. ' ' → logprob: -15.625000953674316
    5. '2' → logprob: -16.125001907348633
    6. '...' → logprob: -17.375001907348633
    7. '-' → logprob: -17.875001907348633
    8. '
' → logprob: -17.875001907348633
    9. '<|end|>' → logprob: -17.875001907348633
    10. '0' → logprob: -18.250001907348633

Token 2236: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.431135356426239
    2. 'def' → logprob: -1.5561354160308838
    3. ',' → logprob: -2.681135416030884
    4. ']' → logprob: -2.681135416030884
    5. ',
' → logprob: -6.681135177612305
    6. '
' → logprob: -7.681135177612305
    7. ']
' → logprob: -8.681135177612305
    8. ']

' → logprob: -9.431135177612305
    9. '   ' → logprob: -9.931135177612305
    10. ')
' → logprob: -10.306135177612305

Token 2237: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00864080898463726
    2. 'for' → logprob: -4.758640766143799
    3. 'while' → logprob: -11.008641242980957
    4. '
' → logprob: -13.008641242980957
    5. 'fact' → logprob: -13.508641242980957
    6. 'd' → logprob: -13.633641242980957
    7. 'b' → logprob: -13.758641242980957
    8. '   ' → logprob: -14.008641242980957
    9. 'if' → logprob: -14.508641242980957
    10. 'a' → logprob: -14.883641242980957

Token 2238: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.006200384348630905
    2. 'comb' → logprob: -5.256200313568115
    3. 'fac' → logprob: -7.756200313568115
    4. 'f' → logprob: -8.256200790405273
    5. 'factor' → logprob: -9.256200790405273
    6. 'perm' → logprob: -9.756200790405273
    7. 'dfs' → logprob: -9.881200790405273
    8. 'dp' → logprob: -11.381200790405273
    9. 'pow' → logprob: -11.381200790405273
    10. 'fib' → logprob: -11.631200790405273

Token 2239: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.001564257894642651
    2. '(n' → logprob: -7.001564025878906
    3. '(' → logprob: -7.376564025878906
    4. 'def' → logprob: -11.626564025878906
    5. 'a' → logprob: -11.626564025878906
    6. '(b' → logprob: -13.001564025878906
    7. '(x' → logprob: -13.126564025878906
    8. '<|end|>' → logprob: -13.251564025878906
    9. ':' → logprob: -14.376564025878906
    10. '```' → logprob: -14.626564025878906

Token 2240: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.021794810891151428
    2. '):' → logprob: -3.8967947959899902
    3. '   ' → logprob: -7.27179479598999
    4. '):
' → logprob: -8.021795272827148
    5. '():
' → logprob: -9.021795272827148
    6. 'def' → logprob: -9.771795272827148
    7. ':' → logprob: -11.021795272827148
    8. ':
' → logprob: -11.396795272827148
    9. ')' → logprob: -11.521795272827148
    10. '(a' → logprob: -12.896795272827148

Token 2241: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030910342931747437
    2. '	if' → logprob: -3.5309102535247803
    3. ' if' → logprob: -8.15591049194336
    4. '	while' → logprob: -8.78091049194336
    5. '	tab' → logprob: -9.03091049194336
    6. '	   ' → logprob: -9.15591049194336
    7. '	 ' → logprob: -9.65591049194336
    8. '	for' → logprob: -9.78091049194336
    9. '	' → logprob: -9.90591049194336
    10. '[' → logprob: -10.03091049194336

Token 2242: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21333785355091095
    2. 'if' (adapté à ' if') → logprob: -1.9633378982543945
    3. ' if' → logprob: -2.9633378982543945
    4. '	if' → logprob: -9.463337898254395
    5. '   ' → logprob: -13.588337898254395
    6. ' ' → logprob: -13.713337898254395
    7. '       ' → logprob: -14.963337898254395
    8. '    
' → logprob: -14.963337898254395
    9. 'return' → logprob: -15.213337898254395
    10. '
' → logprob: -15.838337898254395

Token 2243: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00043805985478684306
    2. ' len' → logprob: -7.750438213348389
    3. 'a' → logprob: -12.37543773651123
    4. '   ' → logprob: -13.50043773651123
    5. '  ' → logprob: -13.50043773651123
    6. '(len' → logprob: -15.62543773651123
    7. '	len' → logprob: -16.125438690185547
    8. ' ' → logprob: -17.250438690185547
    9. '    ' → logprob: -18.125438690185547
    10. ' a' → logprob: -18.875438690185547

Token 2244: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -4.4849443838757e-06
    2. 'memo' → logprob: -12.875004768371582
    3. 'm' → logprob: -13.750004768371582
    4. '(' → logprob: -15.125004768371582
    5. '<m' → logprob: -15.875004768371582
    6. '	m' → logprob: -16.000003814697266
    7. '[m' → logprob: -16.750003814697266
    8. '(
' → logprob: -17.000003814697266
    9. 's' → logprob: -17.125003814697266
    10. '(memory' → logprob: -17.500003814697266

Token 2245: 'emo' (ID: 7196)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.010663749650120735
    2. 'emo' → logprob: -4.635663986206055
    3. '(m' → logprob: -7.385663986206055
    4. ' memo' → logprob: -10.260663986206055
    5. 'mo' → logprob: -10.385663986206055
    6. 'em' → logprob: -10.760663986206055
    7. '[m' → logprob: -10.885663986206055
    8. '(' → logprob: -11.135663986206055
    9. '.memo' → logprob: -11.135663986206055
    10. 'm' → logprob: -11.260663986206055

Token 2246: ')' (ID: 8)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.021399440243840218
    2. '<=' → logprob: -3.89639949798584
    3. '>a' → logprob: -7.89639949798584
    4. '<' → logprob: -8.52139949798584
    5. ' >' → logprob: -9.14639949798584
    6. ' <=' → logprob: -9.64639949798584
    7. ')' → logprob: -10.14639949798584
    8. ')>' → logprob: -10.52139949798584
    9. ')<=' → logprob: -11.39639949798584
    10. '>=' → logprob: -11.77139949798584

Token 2247: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0003009041247423738
    2. '<=' → logprob: -8.500301361083984
    3. '>a' → logprob: -9.500301361083984
    4. '>=' → logprob: -11.500301361083984
    5. ' >' → logprob: -11.750301361083984
    6. '>b' → logprob: -14.125301361083984
    7. '<' → logprob: -14.250301361083984
    8. '>
' → logprob: -14.250301361083984
    9. '()>' → logprob: -14.375301361083984
    10. ')>' → logprob: -14.500301361083984

Token 2248: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.306760805164231e-05
    2. ' a' → logprob: -11.25001335144043
    3. '	a' → logprob: -18.12501335144043
    4. '   ' → logprob: -18.87501335144043
    5. ' ' → logprob: -21.25001335144043
    6. 'а' → logprob: -21.37501335144043
    7. ')a' → logprob: -21.50001335144043
    8. '_a' → logprob: -22.00001335144043
    9. '>a' → logprob: -22.12501335144043
    10. '  ' → logprob: -22.25001335144043

Token 2249: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34753847122192383
    2. ':
' → logprob: -1.3475384712219238
    3. ':return' → logprob: -3.722538471221924
    4. '       ' → logprob: -5.097538471221924
    5. '   ' → logprob: -5.847538471221924
    6. '==' → logprob: -8.347537994384766
    7. ':a' → logprob: -8.847537994384766
    8. 'return' → logprob: -11.097537994384766
    9. ':
' → logprob: -11.222537994384766
    10. '>' → logprob: -11.347537994384766

Token 2250: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0013360745506361127
    2. ' a' → logprob: -7.001336097717285
    3. ':a' → logprob: -9.001336097717285
    4. '   ' → logprob: -9.126336097717285
    5. '	a' → logprob: -9.501336097717285
    6. ':' → logprob: -10.001336097717285
    7. '>a' → logprob: -11.126336097717285
    8. '*a' → logprob: -11.501336097717285
    9. '[a' → logprob: -11.751336097717285
    10. '_a' → logprob: -11.751336097717285

Token 2251: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.012677746824920177
    2. '   ' → logprob: -4.7626776695251465
    3. ' return' → logprob: -5.5126776695251465
    4. '       ' → logprob: -11.762678146362305
    5. '	return' → logprob: -12.387678146362305
    6. 'a' → logprob: -12.887678146362305
    7. ':return' → logprob: -13.012678146362305
    8. 'b' → logprob: -13.512678146362305
    9. ' ' → logprob: -14.512678146362305
    10. '{return' → logprob: -14.637678146362305

Token 2252: ' memo' (ID: 46393)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00028064317302778363
    2. 'memo' → logprob: -8.250280380249023
    3. ' a' → logprob: -10.875280380249023
    4. ' memo' → logprob: -15.375280380249023
    5. '	a' → logprob: -16.375280380249023
    6. 'm' → logprob: -18.500280380249023
    7. '[a' → logprob: -19.750280380249023
    8. ' ' → logprob: -20.125280380249023
    9. '   ' → logprob: -20.500280380249023
    10. 'mem' → logprob: -21.000280380249023

Token 2253: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.7432603272027336e-06
    2. 'a' → logprob: -13.500001907348633
    3. '   ' → logprob: -16.125001907348633
    4. '
' → logprob: -16.375001907348633
    5. '[
' → logprob: -16.875001907348633
    6. '[' → logprob: -17.125001907348633
    7. ' [' → logprob: -18.250001907348633
    8. '(a' → logprob: -18.625001907348633
    9. '	a' → logprob: -18.875001907348633
    10. '       ' → logprob: -19.500001907348633

Token 2254: ']
' (ID: 1592)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0016636352520436049
    2. '   ' → logprob: -7.001663684844971
    3. 'a' → logprob: -8.626663208007812
    4. ']' → logprob: -8.626663208007812
    5. ']
' → logprob: -9.001663208007812
    6. ':
' → logprob: -9.376663208007812
    7. '       ' → logprob: -9.626663208007812
    8. ']:
' → logprob: -9.626663208007812
    9. '(a' → logprob: -11.751663208007812
    10. '[' → logprob: -11.751663208007812

Token 2255: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01481605600565672
    2. '       ' → logprob: -4.2648162841796875
    3. '[a' → logprob: -7.7648162841796875
    4. 'a' → logprob: -9.014816284179688
    5. 'return' → logprob: -10.639816284179688
    6. ' return' → logprob: -11.139816284179688
    7. ' a' → logprob: -11.389816284179688
    8. 'b' → logprob: -11.514816284179688
    9. '[' → logprob: -11.514816284179688
    10. '[]' → logprob: -11.889816284179688

Token 2256: ' b' (ID: 287)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033741362392902374
    2. '       ' → logprob: -4.408741474151611
    3. '    ' → logprob: -5.283741474151611
    4. '	a' → logprob: -5.283741474151611
    5. 'b' (adapté à ' b') → logprob: -5.783741474151611
    6. 'a' → logprob: -5.908741474151611
    7. ' b' → logprob: -6.533741474151611
    8. '	b' → logprob: -6.783741474151611
    9. '	return' → logprob: -7.033741474151611
    10. ' a' → logprob: -7.408741474151611

Token 2257: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2520391643047333
    2. ' =' → logprob: -1.5020391941070557
    3. '=a' → logprob: -9.252038955688477
    4. 'a' → logprob: -11.502038955688477
    5. '=b' → logprob: -13.752038955688477
    6. '=f' → logprob: -13.752038955688477
    7. '   ' → logprob: -13.877038955688477
    8. '=
' → logprob: -15.127038955688477
    9. 'b' → logprob: -15.877038955688477
    10. ' ' → logprob: -16.002038955688477

Token 2258: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0019287518225610256
    2. ' a' → logprob: -6.251928806304932
    3. '   ' → logprob: -17.001928329467773
    4. 'fact' → logprob: -17.251928329467773
    5. '	a' → logprob: -18.501928329467773
    6. '(a' → logprob: -18.876928329467773
    7. ' ' → logprob: -19.126928329467773
    8. 'A' → logprob: -19.251928329467773
    9. ''a' → logprob: -19.501928329467773
    10. 'factor' → logprob: -19.626928329467773

Token 2259: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0003192578151356429
    2. '*f' → logprob: -8.625319480895996
    3. '*b' → logprob: -9.125319480895996
    4. ' *' → logprob: -11.000319480895996
    5. '*a' → logprob: -12.000319480895996
    6. '**' → logprob: -12.875319480895996
    7. '*
' → logprob: -13.250319480895996
    8. '*=' → logprob: -13.875319480895996
    9. '*(' → logprob: -14.500319480895996
    10. '*object' → logprob: -14.500319480895996

Token 2260: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -2.2200749754119897e-06
    2. ' fact' → logprob: -13.125001907348633
    3. '_fact' → logprob: -17.250001907348633
    4. 'factor' → logprob: -17.500001907348633
    5. '.fact' → logprob: -18.125001907348633
    6. '(a' → logprob: -19.000001907348633
    7. 'fac' → logprob: -19.500001907348633
    8. 'a' → logprob: -20.250001907348633
    9. 'facts' → logprob: -20.375001907348633
    10. 'fa' → logprob: -21.500001907348633

Token 2261: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -4.024604277219623e-05
    2. 'a' → logprob: -10.125040054321289
    3. '   ' → logprob: -17.37504005432129
    4. '(' → logprob: -17.50004005432129
    5. '[a' → logprob: -17.50004005432129
    6. '#a' → logprob: -18.25004005432129
    7. '/a' → logprob: -18.75004005432129
    8. '	a' → logprob: -19.62504005432129
    9. ' (' → logprob: -19.75004005432129
    10. '(
' → logprob: -20.00004005432129

Token 2262: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01817324012517929
    2. '(a' → logprob: -4.0181732177734375
    3. ' -' → logprob: -11.643173217773438
    4. '(' → logprob: -11.643173217773438
    5. 'a' → logprob: -12.768173217773438
    6. '(b' → logprob: -13.643173217773438
    7. '-(' → logprob: -14.018173217773438
    8. '[a' → logprob: -15.143173217773438
    9. '```' → logprob: -15.893173217773438
    10. '(-' → logprob: -16.018173217773438

Token 2263: '1' (ID: 16)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.000563638168387115
    2. 'a' → logprob: -7.750563621520996
    3. '(' → logprob: -9.250563621520996
    4. '-' → logprob: -10.250563621520996
    5. ' (' → logprob: -14.500563621520996
    6. '1' → logprob: -15.000563621520996
    7. '[a' → logprob: -15.250563621520996
    8. '   ' → logprob: -16.250564575195312
    9. '(abs' → logprob: -16.875564575195312
    10. '```' → logprob: -17.000564575195312

Token 2264: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28295034170150757
    2. ')' → logprob: -1.4079504013061523
    3. '<|end|>' → logprob: -6.657950401306152
    4. 'b' → logprob: -9.157950401306152
    5. ')
' → logprob: -9.282950401306152
    6. ',' → logprob: -9.907950401306152
    7. ']' → logprob: -10.157950401306152
    8. '  ' → logprob: -10.407950401306152
    9. '.' → logprob: -10.657950401306152
    10. ' ' → logprob: -10.782950401306152

Token 2265: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000363590574124828
    2. '
' → logprob: -8.62536334991455
    3. '	return' → logprob: -9.75036334991455
    4. '    
' → logprob: -10.25036334991455
    5. '<|end|>' → logprob: -11.25036334991455
    6. '	b' → logprob: -11.62536334991455
    7. '  ' → logprob: -11.62536334991455
    8. 'b' → logprob: -11.62536334991455
    9. '    ' → logprob: -12.25036334991455
    10. '[' → logprob: -12.37536334991455

Token 2266: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' (adapté à ' memo') → logprob: -0.15259890258312225
    2. '   ' → logprob: -2.0275988578796387
    3. ' memo' → logprob: -4.652598857879639
    4. 'm' → logprob: -8.902599334716797
    5. '    ' → logprob: -9.402599334716797
    6. '       ' → logprob: -10.152599334716797
    7. '  ' → logprob: -10.652599334716797
    8. ' ' → logprob: -10.777599334716797
    9. '	m' → logprob: -11.027599334716797
    10. '     ' → logprob: -11.902599334716797

Token 2267: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.06497171521186829
    2. '[a' → logprob: -3.314971685409546
    3. '<|end|>' → logprob: -3.939971685409546
    4. 'append' → logprob: -5.564971923828125
    5. '[b' → logprob: -6.814971923828125
    6. '   ' → logprob: -7.814971923828125
    7. '[' → logprob: -8.064971923828125
    8. '.extend' → logprob: -8.314971923828125
    9. '_append' → logprob: -8.314971923828125
    10. 'a' → logprob: -8.439971923828125

Token 2268: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.02975071594119072
    2. 'b' → logprob: -3.5297508239746094
    3. '	b' → logprob: -15.90475082397461
    4. ' b' → logprob: -16.27975082397461
    5. '=b' → logprob: -17.02975082397461
    6. ')b' → logprob: -17.27975082397461
    7. '>b' → logprob: -18.02975082397461
    8. '[b' → logprob: -18.15475082397461
    9. ',b' → logprob: -18.27975082397461
    10. '(' → logprob: -18.52975082397461

Token 2269: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006799798924475908
    2. ')' → logprob: -5.006799697875977
    3. ')
' → logprob: -10.631799697875977
    4. ')return' → logprob: -10.881799697875977
    5. '<|end|>' → logprob: -11.006799697875977
    6. 'return' → logprob: -11.756799697875977
    7. '  ' → logprob: -12.506799697875977
    8. ' ' → logprob: -13.006799697875977
    9. '	return' → logprob: -13.256799697875977
    10. '       ' → logprob: -13.381799697875977

Token 2270: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003613256849348545
    2. '	return' → logprob: -8.125361442565918
    3. '       ' → logprob: -10.750361442565918
    4. 'return' → logprob: -11.375361442565918
    5. '<|end|>' → logprob: -11.875361442565918
    6. '[' → logprob: -12.375361442565918
    7. '   ' → logprob: -12.875361442565918
    8. '.' → logprob: -13.250361442565918
    9. 'a' → logprob: -13.375361442565918
    10. ' return' → logprob: -13.500361442565918

Token 2271: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12402811646461487
    2. 'return' (adapté à ' return') → logprob: -2.624028205871582
    3. ' return' → logprob: -3.124028205871582
    4. '	return' → logprob: -8.874028205871582
    5. '       ' → logprob: -11.624028205871582
    6. ':return' → logprob: -13.249028205871582
    7. '    ' → logprob: -13.624028205871582
    8. 'eturn' → logprob: -14.249028205871582
    9. ' ' → logprob: -14.374028205871582
    10. '
' → logprob: -14.624028205871582

Token 2272: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0005545823951251805
    2. ' b' → logprob: -7.50055456161499
    3. 'memo' → logprob: -13.500555038452148
    4. 'a' → logprob: -15.875555038452148
    5. ' memo' → logprob: -17.50055503845215
    6. '	b' → logprob: -17.75055503845215
    7. 'm' → logprob: -18.87555503845215
    8. '[b' → logprob: -19.87555503845215
    9. '   ' → logprob: -19.87555503845215
    10. ' a' → logprob: -20.12555503845215

Token 2273: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39808395504951477
    2. '<|end|>' → logprob: -1.1480839252471924
    3. 'b' → logprob: -5.3980841636657715
    4. ' ' → logprob: -6.2730841636657715
    5. '  ' → logprob: -6.8980841636657715
    6. ')' → logprob: -7.0230841636657715
    7. '<|end|>' → logprob: -7.7730841636657715
    8. '
' → logprob: -7.7730841636657715
    9. '[' → logprob: -7.8980841636657715
    10. '    
' → logprob: -8.148083686828613

Token 2274: 'ans' (ID: 616)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.26566100120544434
    2. 'if' → logprob: -2.5156610012054443
    3. '   ' → logprob: -2.7656610012054443
    4. ' if' → logprob: -3.2656610012054443
    5. ' n' → logprob: -4.140661239624023
    6. 'b' → logprob: -4.390661239624023
    7. 'print' → logprob: -4.640661239624023
    8. 'fact' → logprob: -5.640661239624023
    9. 'f' → logprob: -5.890661239624023
    10. 'ans' → logprob: -6.265661239624023

Token 2275: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4298711121082306
    2. ' =' → logprob: -1.0548710823059082
    3. ',' → logprob: -7.429871082305908
    4. '%=' → logprob: -9.179871559143066
    5. ' ' → logprob: -9.429871559143066
    6. '%' → logprob: -9.679871559143066
    7. 'import' → logprob: -9.929871559143066
    8. '<|end|>' → logprob: -10.054871559143066
    9. '   ' → logprob: -10.304871559143066
    10. ')' → logprob: -10.679871559143066

Token 2276: ' fact' (ID: 2840)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.33246883749961853
    2. '1' → logprob: -1.582468867301941
    3. 'fact' → logprob: -2.7074687480926514
    4. ' ' → logprob: -4.8324689865112305
    5. ' fact' → logprob: -7.0824689865112305
    6. 'n' → logprob: -7.5824689865112305
    7. '(' → logprob: -7.9574689865112305
    8. 'pow' → logprob: -8.45746898651123
    9. 'k' → logprob: -8.58246898651123
    10. '(n' → logprob: -8.95746898651123

Token 2277: '(n' (ID: 2406)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.5760679841041565
    2. '(n' → logprob: -0.8260679841041565
    3. '(' → logprob: -9.076067924499512
    4. 'n' → logprob: -12.451067924499512
    5. '(
' → logprob: -12.576067924499512
    6. 'k' → logprob: -13.326067924499512
    7. '[k' → logprob: -13.451067924499512
    8. ')' → logprob: -14.451067924499512
    9. '[n' → logprob: -14.451067924499512
    10. '(int' → logprob: -15.076067924499512

Token 2278: '+k' (ID: 110434)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21610525250434875
    2. ')*' → logprob: -2.4661052227020264
    3. ')[' → logprob: -3.0911052227020264
    4. ')//' → logprob: -3.2161052227020264
    5. ')%' → logprob: -4.9661054611206055
    6. '-' → logprob: -5.0911054611206055
    7. '[n' → logprob: -5.2161054611206055
    8. ')
' → logprob: -6.2161054611206055
    9. '-k' → logprob: -7.7161054611206055
    10. '[k' → logprob: -7.8411054611206055

Token 2279: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.176947600673884e-05
    2. ')' → logprob: -11.500021934509277
    3. ' -' → logprob: -11.500021934509277
    4. '[' → logprob: -14.375021934509277
    5. '```' → logprob: -15.250021934509277
    6. ')/(' → logprob: -15.750021934509277
    7. '[n' → logprob: -15.875021934509277
    8. '-
' → logprob: -16.50002098083496
    9. ')
' → logprob: -16.62502098083496
    10. '
' → logprob: -16.62502098083496

Token 2280: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009126556105911732
    2. '1' → logprob: -7.000912666320801
    3. '
' → logprob: -15.0009126663208
    4. '```' → logprob: -15.0009126663208
    5. '-' → logprob: -15.1259126663208
    6. '3' → logprob: -15.5009126663208
    7. '   ' → logprob: -16.250911712646484
    8. '``' → logprob: -17.500911712646484
    9. ' ' → logprob: -17.750911712646484
    10. '

' → logprob: -18.563411712646484

Token 2281: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.31443631649017334
    2. ')' → logprob: -1.3144363164901733
    3. ')/(' → logprob: -7.564436435699463
    4. '-' → logprob: -8.314435958862305
    5. ')%' → logprob: -8.314435958862305
    6. ']' → logprob: -9.439435958862305
    7. ')
' → logprob: -10.439435958862305
    8. '//' → logprob: -10.689435958862305
    9. '1' → logprob: -12.439435958862305
    10. ')/' → logprob: -12.939435958862305

Token 2282: '(' (ID: 7)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.1430492401123047
    2. '(f' → logprob: -2.0180492401123047
    3. 'factor' → logprob: -8.518049240112305
    4. '((' → logprob: -9.393049240112305
    5. '(' → logprob: -10.393049240112305
    6. ' fact' → logprob: -10.393049240112305
    7. 'f' → logprob: -11.393049240112305
    8. ' (' → logprob: -11.643049240112305
    9. '_fact' → logprob: -13.518049240112305
    10. '.fact' → logprob: -13.518049240112305

Token 2283: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0113176628947258
    2. '(f' → logprob: -4.511317729949951
    3. 'factor' → logprob: -8.511317253112793
    4. 'f' → logprob: -10.636317253112793
    5. ' fact' → logprob: -10.886317253112793
    6. '((' → logprob: -11.761317253112793
    7. '(' → logprob: -11.761317253112793
    8. '(m' → logprob: -12.636317253112793
    9. ' (' → logprob: -13.511317253112793
    10. 'fac' → logprob: -13.886317253112793

Token 2284: '(n' (ID: 2406)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.45006290078163147
    2. '(n' → logprob: -1.325062870979309
    3. 'k' → logprob: -2.4500629901885986
    4. 'n' → logprob: -4.5750627517700195
    5. '(' → logprob: -12.32506275177002
    6. ' (' → logprob: -12.32506275177002
    7. '
' → logprob: -12.70006275177002
    8. ' k' → logprob: -12.82506275177002
    9. '{k' → logprob: -12.82506275177002
    10. '(r' → logprob: -12.95006275177002

Token 2285: ')*' (ID: 11043)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7618870735168457
    2. '1' → logprob: -0.7618870735168457
    3. 'k' → logprob: -3.3868870735168457
    4. ')' → logprob: -3.6368870735168457
    5. 'n' → logprob: -5.386887073516846
    6. '(n' → logprob: -7.761887073516846
    7. ' k' → logprob: -8.261886596679688
    8. ')n' → logprob: -8.511886596679688
    9. ')*' → logprob: -8.886886596679688
    10. '(' → logprob: -8.886886596679688

Token 2286: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -7.896309739408025e-07
    2. ' fact' → logprob: -14.125000953674316
    3. '.fact' → logprob: -19.25
    4. 'fac' → logprob: -20.0
    5. '_fact' → logprob: -20.25
    6. 'factor' → logprob: -20.875
    7. 'fait' → logprob: -21.625
    8. 'Fact' → logprob: -22.375
    9. 'facts' → logprob: -22.375
    10. 'fatt' → logprob: -22.625

Token 2287: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.03809507563710213
    2. 'k' → logprob: -3.288094997406006
    3. '(' → logprob: -10.538095474243164
    4. ' (' → logprob: -10.788095474243164
    5. '   ' → logprob: -12.538095474243164
    6. '(
' → logprob: -13.788095474243164
    7. '
' → logprob: -14.788095474243164
    8. '(n' → logprob: -15.163095474243164
    9. ' k' → logprob: -15.288095474243164
    10. '	k' → logprob: -15.413095474243164

Token 2288: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.670925358776003e-05
    2. ' -' → logprob: -9.750066757202148
    3. '[' → logprob: -12.500066757202148
    4. ')' → logprob: -13.250066757202148
    5. ')-' → logprob: -13.375066757202148
    6. '))' → logprob: -14.625066757202148
    7. '[-' → logprob: -15.000066757202148
    8. '1' → logprob: -15.750066757202148
    9. '-)' → logprob: -16.75006675720215
    10. '[:-' → logprob: -16.75006675720215

Token 2289: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03054407797753811
    2. '-' → logprob: -3.5305440425872803
    3. 'k' → logprob: -7.155544281005859
    4. 'minus' → logprob: -13.15554428100586
    5. '(' → logprob: -13.28054428100586
    6. ' ' → logprob: -13.53054428100586
    7. '   ' → logprob: -13.65554428100586
    8. 'n' → logprob: -13.78054428100586
    9. 'r' → logprob: -14.15554428100586
    10. '0' → logprob: -14.53054428100586

Token 2290: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7252845029579476e-05
    2. '))' → logprob: -11.625027656555176
    3. ')#' → logprob: -12.375027656555176
    4. ')%' → logprob: -12.625027656555176
    5. ')...' → logprob: -13.625027656555176
    6. ')
' → logprob: -13.750027656555176
    7. ')>>' → logprob: -13.750027656555176
    8. ' )' → logprob: -13.875027656555176
    9. '#' → logprob: -14.250027656555176
    10. ')>' → logprob: -14.375027656555176

Token 2291: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.014915182255208492
    2. ')' → logprob: -4.5149149894714355
    3. ' %' → logprob: -6.1399149894714355
    4. ')
' → logprob: -7.2649149894714355
    5. ')%' → logprob: -7.7649149894714355
    6. '<|end|>' → logprob: -8.514915466308594
    7. '%n' → logprob: -9.139915466308594
    8. 'print' → logprob: -9.389915466308594
    9. '
' → logprob: -9.764915466308594
    10. '%
' → logprob: -10.014915466308594

Token 2292: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.3140272796154022
    2. 'mod' → logprob: -1.3140273094177246
    3. '(' → logprob: -7.314027309417725
    4. '(mod' → logprob: -9.439026832580566
    5. ' mod' → logprob: -11.564026832580566
    6. '```' → logprob: -12.064026832580566
    7. '
' → logprob: -14.064026832580566
    8. ' ' → logprob: -14.189026832580566
    9. '%' → logprob: -14.564026832580566
    10. '`' → logprob: -14.939026832580566

Token 2293: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.00011081460979767144
    2. '0' → logprob: -9.250110626220703
    3. ')' → logprob: -11.875110626220703
    4. 'mod' → logprob: -12.750110626220703
    5. '00' → logprob: -12.875110626220703
    6. '"""' → logprob: -14.125110626220703
    7. '%' → logprob: -14.375110626220703
    8. '```' → logprob: -15.375110626220703
    9. '(' → logprob: -15.500110626220703
    10. 'MOD' → logprob: -16.625110626220703

Token 2294: '000' (ID: 1302)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.06890702992677689
    2. '000' → logprob: -3.0689070224761963
    3. '007' → logprob: -3.9439070224761963
    4. '07' → logprob: -7.568907260894775
    5. '```' → logprob: -8.818906784057617
    6. '
' → logprob: -10.443906784057617
    7. '100' → logprob: -11.068906784057617
    8. 'mod' → logprob: -11.693906784057617
    9. '"""' → logprob: -12.318906784057617
    10. '   ' → logprob: -12.443906784057617

Token 2295: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.7432603272027336e-06
    2. '07' → logprob: -13.625001907348633
    3. '
' → logprob: -15.375001907348633
    4. '```' → logprob: -16.000001907348633
    5. '007' → logprob: -16.125001907348633
    6. '9' → logprob: -17.000001907348633
    7. '"""' → logprob: -17.750001907348633
    8. ' ' → logprob: -18.250001907348633
    9. '0' → logprob: -19.250001907348633
    10. '

' → logprob: -19.750001907348633

Token 2296: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12262585759162903
    2. '
' → logprob: -2.4976258277893066
    3. '%' → logprob: -4.372625827789307
    4. '<|end|>' → logprob: -4.372625827789307
    5. '"""' → logprob: -5.247625827789307
    6. ')
' → logprob: -7.372625827789307
    7. '```' → logprob: -7.747625827789307
    8. 'print' → logprob: -7.997625827789307
    9. '")' → logprob: -8.247626304626465
    10. '\n' → logprob: -8.497626304626465

Token 2297: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11468001455068588
    2. 'print' → logprob: -2.364680051803589
    3. '"""' → logprob: -4.61467981338501
    4. '<|end|>' → logprob: -5.86467981338501
    5. '
' → logprob: -7.48967981338501
    6. '")' → logprob: -7.48967981338501
    7. '```' → logprob: -8.364680290222168
    8. ')
' → logprob: -9.239680290222168
    9. '""' → logprob: -9.489680290222168
    10. ' print' → logprob: -10.239680290222168

Token 2298: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -4.36574100604048e-06
    2. 'ans' → logprob: -12.750004768371582
    3. '(int' → logprob: -13.500004768371582
    4. '(abs' → logprob: -17.875003814697266
    5. '(an' → logprob: -18.500003814697266
    6. '(' → logprob: -18.750003814697266
    7. '(answer' → logprob: -18.750003814697266
    8. '((' → logprob: -19.125003814697266
    9. '	ans' → logprob: -19.250003814697266
    10. '(a' → logprob: -19.750003814697266

Token 2299: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011594036914175376
    2. ')
' → logprob: -9.125116348266602
    3. '())' → logprob: -13.000116348266602
    4. '")' → logprob: -13.625116348266602
    5. '```' → logprob: -13.625116348266602
    6. '()' → logprob: -13.875116348266602
    7. '"""' → logprob: -14.500116348266602
    8. ' )' → logprob: -15.875116348266602
    9. '))' → logprob: -15.875116348266602
    10. ')
' → logprob: -16.6251163482666

Token 2300: '"""

' (ID: 34508)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.5812759399414062
    2. ')' → logprob: -0.8312759399414062
    3. '```' → logprob: -5.956275939941406
    4. '<|end|>' → logprob: -6.331275939941406
    5. '""' → logprob: -8.081275939941406
    6. ' """' → logprob: -8.456275939941406
    7. '#' → logprob: -9.456275939941406
    8. '"' → logprob: -9.456275939941406
    9. '")' → logprob: -9.581275939941406
    10. '("""' → logprob: -9.831275939941406

Token 2301: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9327877759933472
    2. '[' → logprob: -2.1827878952026367
    3. '   ' → logprob: -2.3077878952026367
    4. '#' → logprob: -2.6827878952026367
    5. 'n' → logprob: -2.9327878952026367
    6. '<|end|>' → logprob: -3.0577878952026367
    7. ' for' → logprob: -3.1827878952026367
    8. ' ' → logprob: -3.1827878952026367
    9. ')' → logprob: -3.8077878952026367
    10. 'i' → logprob: -3.8077878952026367

Token 2302: '5' (ID: 20)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.21353968977928162
    2. ')' → logprob: -3.2135396003723145
    3. ' ' → logprob: -3.3385396003723145
    4. '"""' → logprob: -3.4635396003723145
    5. ' """' → logprob: -3.8385396003723145
    6. 'n' → logprob: -3.8385396003723145
    7. '/' → logprob: -4.7135396003723145
    8. '[' → logprob: -4.8385396003723145
    9. 'a' → logprob: -5.4635396003723145
    10. ' #' → logprob: -5.7135396003723145

Token 2303: '_E' (ID: 6584)
  Prédit: '_C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_C' → logprob: -0.5881742835044861
    2. '_A' → logprob: -1.5881743431091309
    3. '_D' → logprob: -2.588174343109131
    4. '#' → logprob: -2.838174343109131
    5. '<|end|>' → logprob: -3.213174343109131
    6. '_' → logprob: -3.463174343109131
    7. '"""' → logprob: -4.338174343109131
    8. '_E' → logprob: -5.338174343109131
    9. '_B' → logprob: -5.588174343109131
    10. 'C' → logprob: -6.088174343109131

Token 2304: '
' (ID: 198)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.38896557688713074
    2. '"""
' → logprob: -1.1389656066894531
    3. 'n' → logprob: -6.513965606689453
    4. '""' → logprob: -8.388965606689453
    5. '#' → logprob: -9.013965606689453
    6. '"""

' → logprob: -9.763965606689453
    7. '```' → logprob: -9.888965606689453
    8. '"""
' → logprob: -10.013965606689453
    9. '""""' → logprob: -10.513965606689453
    10. '"' → logprob: -10.638965606689453

Token 2305: '"""
' (ID: 15611)
  Prédit: '"""
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.5775706171989441
    2. '"""' → logprob: -0.8275706171989441
    3. 'n' → logprob: -6.57757043838501
    4. '""' → logprob: -9.077570915222168
    5. '```' → logprob: -10.202570915222168
    6. '"""

' → logprob: -10.452570915222168
    7. '#' → logprob: -11.077570915222168
    8. '"' → logprob: -11.327570915222168
    9. '"""
' → logprob: -11.452570915222168
    10. '""""' → logprob: -11.952570915222168

Token 2306: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04632120952010155
    2. '"""' → logprob: -4.421321392059326
    3. 'def' → logprob: -4.546321392059326
    4. '"""
' → logprob: -4.921321392059326
    5. 'k' → logprob: -5.671321392059326
    6. 'mod' → logprob: -5.921321392059326
    7. 'import' → logprob: -6.171321392059326
    8. '
' → logprob: -6.671321392059326
    9. 's' → logprob: -6.921321392059326
    10. 'from' → logprob: -6.921321392059326

Token 2307: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.1542305052280426
    2. 'fact' → logprob: -2.5292305946350098
    3. ' comb' → logprob: -3.6542305946350098
    4. 'mod' → logprob: -4.27923059463501
    5. 'pow' → logprob: -5.02923059463501
    6. 'factor' → logprob: -5.40423059463501
    7. 'com' → logprob: -5.52923059463501
    8. 'fac' → logprob: -5.65423059463501
    9. 'n' → logprob: -6.77923059463501
    10. ' mod' → logprob: -7.02923059463501

Token 2308: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.04933813959360123
    2. '(n' → logprob: -3.0493381023406982
    3. '(' → logprob: -8.049338340759277
    4. 'def' → logprob: -8.924338340759277
    5. 'a' → logprob: -9.424338340759277
    6. 'n' → logprob: -10.174338340759277
    7. '<|end|>' → logprob: -10.549338340759277
    8. '_n' → logprob: -10.674338340759277
    9. '(A' → logprob: -11.174338340759277
    10. '_' → logprob: -11.424338340759277

Token 2309: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.2967432737350464
    2. ',' → logprob: -1.6717432737350464
    3. ',a' → logprob: -3.046743392944336
    4. ',n' → logprob: -4.046743392944336
    5. ',k' → logprob: -6.171743392944336
    6. '(a' → logprob: -7.796743392944336
    7. ',B' → logprob: -8.421743392944336
    8. ',i' → logprob: -8.421743392944336
    9. ',j' → logprob: -8.796743392944336
    10. '_,' → logprob: -9.421743392944336

Token 2310: '):
' (ID: 1883)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.6181784272193909
    2. '):' → logprob: -0.8681784272193909
    3. '):
' → logprob: -3.243178367614746
    4. ')' → logprob: -7.493178367614746
    5. 'def' → logprob: -7.743178367614746
    6. ',' → logprob: -7.868178367614746
    7. '(n' → logprob: -8.618178367614746
    8. '(' → logprob: -8.993178367614746
    9. '):
' → logprob: -9.118178367614746
    10. '(A' → logprob: -9.118178367614746

Token 2311: '   ' (ID: 271)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.006628335453569889
    2. '   ' → logprob: -5.381628513336182
    3. ':' → logprob: -6.381628513336182
    4. '(' → logprob: -8.631628036499023
    5. ':return' → logprob: -9.756628036499023
    6. 'return' → logprob: -11.006628036499023
    7. ' return' → logprob: -11.381628036499023
    8. '):' → logprob: -11.631628036499023
    9. ' (' → logprob: -11.756628036499023
    10. ':
' → logprob: -12.381628036499023

Token 2312: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5011405348777771
    2. 'return' (adapté à ' return') → logprob: -1.0011405944824219
    3. ' if' → logprob: -4.001140594482422
    4. '   ' → logprob: -5.001140594482422
    5. ' return' → logprob: -6.626140594482422
    6. 'pass' → logprob: -8.501140594482422
    7. 'a' → logprob: -10.501140594482422
    8. 'for' → logprob: -10.626140594482422
    9. 'from' → logprob: -10.751140594482422
    10. ' ' → logprob: -11.376140594482422

Token 2313: ' fac' (ID: 3513)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.010029231198132038
    2. ' fac' → logprob: -4.635029315948486
    3. 'fact' → logprob: -8.260028839111328
    4. '(f' → logprob: -12.885028839111328
    5. '_fac' → logprob: -12.885028839111328
    6. ' (' → logprob: -13.010028839111328
    7. '(' → logprob: -13.135028839111328
    8. ' ' → logprob: -14.135028839111328
    9. 'factor' → logprob: -14.260028839111328
    10. 'f' → logprob: -14.385028839111328

Token 2314: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.003220729762688279
    2. '[b' → logprob: -5.753220558166504
    3. 'a' → logprob: -10.128220558166504
    4. '[' → logprob: -13.878220558166504
    5. '[]' → logprob: -15.128220558166504
    6. '(a' → logprob: -15.128220558166504
    7. 'b' → logprob: -15.378220558166504
    8. '[n' → logprob: -15.503220558166504
    9. '[f' → logprob: -15.503220558166504
    10. '```' → logprob: -16.37822151184082

Token 2315: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.3721574544906616
    2. '][' → logprob: -1.2471574544906616
    3. ']' → logprob: -3.872157573699951
    4. ']*(' → logprob: -6.622157573699951
    5. ']%' → logprob: -6.747157573699951
    6. '%' → logprob: -10.622157096862793
    7. '][]' → logprob: -10.997157096862793
    8. '[a' → logprob: -11.122157096862793
    9. '*' → logprob: -11.372157096862793
    10. '[b' → logprob: -11.497157096862793

Token 2316: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.000145137935760431
    2. '(inv' → logprob: -9.250144958496094
    3. ' inv' → logprob: -10.125144958496094
    4. 'inf' → logprob: -13.875144958496094
    5. '_inv' → logprob: -14.437644958496094
    6. 'in' → logprob: -14.437644958496094
    7. '.inv' → logprob: -14.750144958496094
    8. '(' → logprob: -14.750144958496094
    9. 'inverse' → logprob: -14.875144958496094
    10. '   ' → logprob: -14.937644958496094

Token 2317: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -2.5776860184123507e-06
    2. 'b' → logprob: -13.00000286102295
    3. '[' → logprob: -16.500001907348633
    4. '[a' → logprob: -16.625001907348633
    5. '[f' → logprob: -17.625001907348633
    6. '	b' → logprob: -18.125001907348633
    7. '[c' → logprob: -18.375001907348633
    8. '(b' → logprob: -18.625001907348633
    9. '%b' → logprob: -18.750001907348633
    10. '_b' → logprob: -19.250001907348633

Token 2318: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.06949926912784576
    2. '*' → logprob: -3.0694992542266846
    3. ']%' → logprob: -4.194499492645264
    4. '%' → logprob: -5.194499492645264
    5. ']' → logprob: -9.694499015808105
    6. '*a' → logprob: -13.944499015808105
    7. ']*(' → logprob: -13.944499015808105
    8. '*b' → logprob: -14.194499015808105
    9. '```' → logprob: -14.444499015808105
    10. '*i' → logprob: -14.569499015808105

Token 2319: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -2.5776860184123507e-06
    2. ' inv' → logprob: -13.00000286102295
    3. '(inv' → logprob: -15.12500286102295
    4. 'inf' → logprob: -18.250001907348633
    5. '.inv' → logprob: -19.625001907348633
    6. 'in' → logprob: -20.125001907348633
    7. '_inv' → logprob: -20.125001907348633
    8. 'iv' → logprob: -21.000001907348633
    9. 'int' → logprob: -21.375001907348633
    10. '   ' → logprob: -21.500001907348633

Token 2320: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.1517960956552997e-05
    2. 'a' → logprob: -11.875011444091797
    3. '[' → logprob: -12.500011444091797
    4. '[(' → logprob: -15.875011444091797
    5. '[b' → logprob: -16.250011444091797
    6. '[m' → logprob: -16.250011444091797
    7. '   ' → logprob: -16.375011444091797
    8. '[
' → logprob: -16.500011444091797
    9. ' [' → logprob: -16.750011444091797
    10. '(a' → logprob: -16.750011444091797

Token 2321: '-b' (ID: 2118)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.009775093756616116
    2. '-b' → logprob: -5.634775161743164
    3. '[a' → logprob: -5.634775161743164
    4. 'b' → logprob: -6.634775161743164
    5. '[' → logprob: -6.759775161743164
    6. '[-' → logprob: -10.134775161743164
    7. '%b' → logprob: -10.759775161743164
    8. '#' → logprob: -12.009775161743164
    9. '][' → logprob: -12.259775161743164
    10. '-' → logprob: -12.634775161743164

Token 2322: ']%' (ID: 158002)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.0012801184784621
    2. ']%' → logprob: -6.751280307769775
    3. ' %' → logprob: -9.626279830932617
    4. ']' → logprob: -10.251279830932617
    5. ')%' → logprob: -13.001279830932617
    6. '%
' → logprob: -13.126279830932617
    7. '[' → logprob: -13.251279830932617
    8. '%n' → logprob: -14.376279830932617
    9. '%b' → logprob: -14.876279830932617
    10. '[]' → logprob: -15.626279830932617

Token 2323: 'mod' (ID: 4847)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2127203345298767
    2. '[a' → logprob: -2.2127203941345215
    3. 'fac' → logprob: -2.9627203941345215
    4. '(a' → logprob: -3.7127203941345215
    5. '[b' → logprob: -6.0877203941345215
    6. 'b' → logprob: -6.0877203941345215
    7. '[' → logprob: -6.9627203941345215
    8. 'mod' → logprob: -8.212719917297363
    9. '(b' → logprob: -8.462719917297363
    10. '(' → logprob: -9.337719917297363

Token 2324: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2325: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0026290426030755043
    2. 'fac' → logprob: -6.252629280090332
    3. '<|end|>' → logprob: -7.752629280090332
    4. '   ' → logprob: -9.627629280090332
    5. '"""
' → logprob: -9.877629280090332
    6. '<|end|>' → logprob: -10.002629280090332
    7. '[n' → logprob: -10.377629280090332
    8. '
' → logprob: -11.377629280090332
    9. '\n' → logprob: -11.377629280090332
    10. ' n' → logprob: -11.502629280090332

Token 2326: ',k' (ID: 35155)
  Prédit: ',k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.006769126281142235
    2. ',' → logprob: -5.006769180297852
    3. ' ,' → logprob: -11.631769180297852
    4. '=' → logprob: -11.756769180297852
    5. ',v' → logprob: -11.881769180297852
    6. ',b' → logprob: -12.006769180297852
    7. ',n' → logprob: -12.256769180297852
    8. ',c' → logprob: -13.006769180297852
    9. ',w' → logprob: -13.131769180297852
    10. ',K' → logprob: -13.131769180297852

Token 2327: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.606791615486145
    2. '=' → logprob: -0.856791615486145
    3. ' =' → logprob: -3.7317914962768555
    4. '   ' → logprob: -6.3567914962768555
    5. ' ,' → logprob: -6.6067914962768555
    6. '<|end|>' → logprob: -6.6067914962768555
    7. '[' → logprob: -7.8567914962768555
    8. ',k' → logprob: -8.106791496276855
    9. '#' → logprob: -8.356791496276855
    10. ',
' → logprob: -8.481791496276855

Token 2328: ' LI' (ID: 14875)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.001136285369284451
    2. ' LI' → logprob: -7.126136302947998
    3. 'map' → logprob: -8.12613582611084
    4. ' map' → logprob: -11.12613582611084
    5. 'L' → logprob: -12.37613582611084
    6. 'LS' → logprob: -12.50113582611084
    7. 'li' → logprob: -12.75113582611084
    8. 'list' → logprob: -13.00113582611084
    9. 'I' → logprob: -13.37613582611084
    10. 'int' → logprob: -13.50113582611084

Token 2329: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5095252990722656
    2. '()
' → logprob: -1.0095252990722656
    3. '<|end|>' → logprob: -3.6345252990722656
    4. '[' → logprob: -6.634525299072266
    5. '<|end|>' → logprob: -6.634525299072266
    6. '(n' → logprob: -6.634525299072266
    7. '#' → logprob: -6.884525299072266
    8. '(' → logprob: -7.259525299072266
    9. '[]
' → logprob: -7.384525299072266
    10. '[]' → logprob: -7.509525299072266

Token 2330: 'if' (ID: 366)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -5.061676347395405e-05
    2. 'for' → logprob: -10.00005054473877
    3. '   ' → logprob: -13.25005054473877
    4. '_fac' → logprob: -13.75005054473877
    5. 'if' → logprob: -13.87505054473877
    6. '.fac' → logprob: -15.37505054473877
    7. 'facet' → logprob: -15.50005054473877
    8. ' fac' → logprob: -15.62505054473877
    9. '"""
' → logprob: -15.75005054473877
    10. 'fa' → logprob: -16.000051498413086

Token 2331: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008667513728141785
    2. ' n' → logprob: -5.008667469024658
    3. 'k' → logprob: -6.258667469024658
    4. ' k' → logprob: -10.633667945861816
    5. '   ' → logprob: -11.508667945861816
    6. 'not' → logprob: -14.508667945861816
    7. '	n' → logprob: -14.633667945861816
    8. ' ' → logprob: -15.133667945861816
    9. '```' → logprob: -15.383667945861816
    10. '0' → logprob: -15.383667945861816

Token 2332: ' >' (ID: 1424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.009766122326254845
    2. ' <' → logprob: -4.759766101837158
    3. '>' → logprob: -7.009766101837158
    4. '<n' → logprob: -8.884766578674316
    5. ' >' → logprob: -9.884766578674316
    6. '>=' → logprob: -11.634766578674316
    7. '<class' → logprob: -11.759766578674316
    8. '<
' → logprob: -12.134766578674316
    9. '<b' → logprob: -12.509766578674316
    10. '<v' → logprob: -12.759766578674316

Token 2333: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0001126026691053994
    2. ' k' → logprob: -9.125112533569336
    3. '   ' → logprob: -13.125112533569336
    4. ' ' → logprob: -14.500112533569336
    5. '5' → logprob: -14.750112533569336
    6. '	k' → logprob: -15.500112533569336
    7. '  ' → logprob: -15.875112533569336
    8. '0' → logprob: -16.625112533569336
    9. '100' → logprob: -17.000112533569336
    10. '(k' → logprob: -17.125112533569336

Token 2334: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.017742827534675598
    2. ':' → logprob: -4.51774263381958
    3. '   ' → logprob: -5.01774263381958
    4. 'print' → logprob: -11.892743110656738
    5. ':return' → logprob: -11.892743110656738
    6. '):
' → logprob: -12.142743110656738
    7. '  ' → logprob: -12.267743110656738
    8. '==' → logprob: -12.392743110656738
    9. '[' → logprob: -12.392743110656738
    10. ' :
' → logprob: -12.642743110656738

Token 2335: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9121959209442139
    2. ':' → logprob: -1.0371959209442139
    3. ':
' → logprob: -1.4121959209442139
    4. 'print' → logprob: -8.912196159362793
    5. ' or' → logprob: -10.162196159362793
    6. ' ' → logprob: -10.662196159362793
    7. '):
' → logprob: -10.787196159362793
    8. '  ' → logprob: -10.912196159362793
    9. ':return' → logprob: -11.287196159362793
    10. '):' → logprob: -11.787196159362793

Token 2336: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0011297365417703986
    2. '   ' → logprob: -6.876129627227783
    3. ' print' → logprob: -9.251130104064941
    4. '	print' → logprob: -14.376130104064941
    5. '
' → logprob: -15.376130104064941
    6. '```' → logprob: -16.501129150390625
    7. '(print' → logprob: -17.126129150390625
    8. '_print' → logprob: -17.126129150390625
    9. '#print' → logprob: -17.751129150390625
    10. '  ' → logprob: -17.876129150390625

Token 2337: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028221122920513153
    2. '(' → logprob: -5.877821922302246
    3. '   ' → logprob: -11.377821922302246
    4. ' ' → logprob: -12.127821922302246
    5. '"' → logprob: -16.627822875976562
    6. '
' → logprob: -17.002822875976562
    7. '(
' → logprob: -17.127822875976562
    8. '`' → logprob: -17.127822875976562
    9. ' (' → logprob: -17.127822875976562
    10. '    
' → logprob: -17.127822875976562

Token 2338: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.375000953674316
    3. '"' → logprob: -15.250000953674316
    4. '(' → logprob: -17.125
    5. '   ' → logprob: -17.625
    6. ''' → logprob: -17.75
    7. '00' → logprob: -18.0
    8. '000' → logprob: -18.375
    9. '۰' → logprob: -19.4375
    10. '`' → logprob: -19.6875

Token 2339: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5497028231620789
    2. ')' → logprob: -1.1747028827667236
    3. ')
' → logprob: -2.1747028827667236
    4. ')return' → logprob: -8.549702644348145
    5. '<|end|>' → logprob: -9.424702644348145
    6. ')
' → logprob: -11.424702644348145
    7. '       ' → logprob: -11.924702644348145
    8. '  ' → logprob: -12.299702644348145
    9. '")' → logprob: -12.549702644348145
    10. ' ' → logprob: -12.549702644348145

Token 2340: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.249780638725497e-05
    2. '<|end|>' → logprob: -11.000032424926758
    3. ')' → logprob: -11.750032424926758
    4. '       ' → logprob: -12.000032424926758
    5. '
' → logprob: -14.375032424926758
    6. '    
' → logprob: -15.125032424926758
    7. '<|end|>' → logprob: -15.875032424926758
    8. 'return' → logprob: -16.000032424926758
    9. '  ' → logprob: -16.000032424926758
    10. 'else' → logprob: -16.125032424926758

Token 2341: ' quit' (ID: 27737)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01831967383623123
    2. 'quit' (adapté à ' quit') → logprob: -4.018319606781006
    3. ' quit' → logprob: -8.768320083618164
    4. 'exit' → logprob: -11.893320083618164
    5. ' ' → logprob: -13.018320083618164
    6. 'else' → logprob: -13.393320083618164
    7. 'return' → logprob: -13.893320083618164
    8. '       ' → logprob: -14.018320083618164
    9. '.quit' → logprob: -14.268320083618164
    10. '```' → logprob: -15.018320083618164

Token 2342: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5908682346343994
    2. '()
' → logprob: -0.8408682346343994
    3. ')
' → logprob: -4.84086799621582
    4. ')' → logprob: -5.59086799621582
    5. '   ' → logprob: -7.21586799621582
    6. 'print' → logprob: -7.34086799621582
    7. '())
' → logprob: -7.34086799621582
    8. '
' → logprob: -7.46586799621582
    9. '())' → logprob: -8.21586799621582
    10. '(' → logprob: -9.59086799621582

Token 2343: 'fac' (ID: 34429)
  Prédit: 'fac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.00028016636497341096
    2. '   ' → logprob: -8.375280380249023
    3. 'for' → logprob: -10.375280380249023
    4. '"""
' → logprob: -11.750280380249023
    5. 'fact' → logprob: -13.000280380249023
    6. 'fa' → logprob: -13.375280380249023
    7. '_fac' → logprob: -13.625280380249023
    8. '<|end|>' → logprob: -14.375280380249023
    9. 'facet' → logprob: -14.375280380249023
    10. '"""' → logprob: -14.500280380249023

Token 2344: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.027382375672459602
    2. '=' → logprob: -4.6523823738098145
    3. '[' → logprob: -4.7773823738098145
    4. '=[' → logprob: -4.9023823738098145
    5. '<|end|>' → logprob: -7.0273823738098145
    6. ' =[' → logprob: -7.9023823738098145
    7. ',' → logprob: -8.652382850646973
    8. '[n' → logprob: -10.027382850646973
    9. '=[]
' → logprob: -10.777382850646973
    10. '.append' → logprob: -11.152382850646973

Token 2345: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.0722858102526516e-05
    2. ' [' → logprob: -10.125041007995605
    3. '[n' → logprob: -14.625041007995605
    4. ' ' → logprob: -16.75004005432129
    5. '<|end|>' → logprob: -17.00004005432129
    6. '[len' → logprob: -17.12504005432129
    7. '[int' → logprob: -17.75004005432129
    8. 'None' → logprob: -18.37504005432129
    9. '[length' → logprob: -18.62504005432129
    10. '[...,' → logprob: -18.62504005432129

Token 2346: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.25
    3. ' ' → logprob: -16.5
    4. '(' → logprob: -17.0
    5. '```' → logprob: -18.625
    6. 'None' → logprob: -18.75
    7. ']' → logprob: -19.0
    8. '0' → logprob: -19.75
    9. '' → logprob: -20.0
    10. '#' → logprob: -20.5

Token 2347: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47410476207733154
    2. ' for' → logprob: -0.9741047620773315
    3. '[' → logprob: -11.474104881286621
    4. '	for' → logprob: -11.974104881286621
    5. ']' → logprob: -12.599104881286621
    6. '<|end|>' → logprob: -12.724104881286621
    7. ')' → logprob: -13.849104881286621
    8. '#' → logprob: -13.974104881286621
    9. ']*(' → logprob: -14.474104881286621
    10. '][' → logprob: -15.224104881286621

Token 2348: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01971481554210186
    2. 'range' → logprob: -4.269714832305908
    3. ' i' → logprob: -5.394714832305908
    4. ' range' → logprob: -7.269714832305908
    5. '(i' → logprob: -8.39471435546875
    6. '0' → logprob: -10.01971435546875
    7. 'k' → logprob: -12.14471435546875
    8. 'import' → logprob: -12.14471435546875
    9. '[i' → logprob: -12.14471435546875
    10. 'in' → logprob: -13.39471435546875

Token 2349: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.14010098576545715
    2. 'for' → logprob: -3.0151009559631348
    3. '(range' → logprob: -3.0151009559631348
    4. 'in' → logprob: -4.265100955963135
    5. ' range' → logprob: -4.390100955963135
    6. ' in' → logprob: -5.390100955963135
    7. '(i' → logprob: -7.390100955963135
    8. 'import' → logprob: -8.140101432800293
    9. ' for' → logprob: -8.390101432800293
    10. ' ' → logprob: -8.890101432800293

Token 2350: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.165027217415627e-05
    2. ' range' → logprob: -10.750021934509277
    3. '(range' → logprob: -16.37502098083496
    4. '   ' → logprob: -18.50002098083496
    5. '	range' → logprob: -20.00002098083496
    6. 'k' → logprob: -20.12502098083496
    7. '
' → logprob: -20.37502098083496
    8. 'i' → logprob: -20.50002098083496
    9. ' ' → logprob: -20.62502098083496
    10. '  ' → logprob: -20.62502098083496

Token 2351: '(k' (ID: 12125)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2749491035938263
    2. 'range' → logprob: -1.774949073791504
    3. '(k' → logprob: -2.649949073791504
    4. ' range' → logprob: -8.524949073791504
    5. 'i' → logprob: -11.399949073791504
    6. '(range' → logprob: -11.399949073791504
    7. ' k' → logprob: -12.149949073791504
    8. '   ' → logprob: -12.274949073791504
    9. '0' → logprob: -12.899949073791504
    10. '[k' → logprob: -13.524949073791504

Token 2352: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2664456789934775e-06
    2. ' +' → logprob: -13.875000953674316
    3. '+k' → logprob: -16.375001907348633
    4. ')]' → logprob: -16.500001907348633
    5. '+
' → logprob: -17.250001907348633
    6. '+i' → logprob: -17.750001907348633
    7. '+n' → logprob: -18.000001907348633
    8. '+j' → logprob: -18.750001907348633
    9. ')]
' → logprob: -18.750001907348633
    10. ')])' → logprob: -19.000001907348633

Token 2353: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031944699585437775
    2. '+' → logprob: -5.753194332122803
    3. ' ' → logprob: -12.128194808959961
    4. '0' → logprob: -12.628194808959961
    5. '[' → logprob: -13.253194808959961
    6. 'i' → logprob: -14.003194808959961
    7. ']+' → logprob: -14.003194808959961
    8. '{' → logprob: -14.503194808959961
    9. '```' → logprob: -14.503194808959961
    10. ')' → logprob: -14.503194808959961

Token 2354: ')]
' (ID: 11587)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.06219331920146942
    2. ']' → logprob: -2.8121933937072754
    3. ']
' → logprob: -8.937192916870117
    4. ')]' → logprob: -10.437192916870117
    5. ')
' → logprob: -10.562192916870117
    6. ')]
' → logprob: -10.562192916870117
    7. ')' → logprob: -12.187192916870117
    8. '()]
' → logprob: -12.437192916870117
    9. ']()
' → logprob: -13.687192916870117
    10. ' ]
' → logprob: -14.437192916870117

Token 2355: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.941850526549388e-06
    2. 'inv' → logprob: -12.000007629394531
    3. ' for' → logprob: -13.375007629394531
    4. 'For' → logprob: -17.12500762939453
    5. '```' → logprob: -17.12500762939453
    6. '	for' → logprob: -17.12500762939453
    7. 'fac' → logprob: -17.37500762939453
    8. '   ' → logprob: -17.75000762939453
    9. '[' → logprob: -17.87500762939453
    10. '
' → logprob: -18.37500762939453

Token 2356: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.7729658540920354e-05
    2. ' i' → logprob: -10.500027656555176
    3. '	i' → logprob: -16.500028610229492
    4. 'I' → logprob: -18.000028610229492
    5. 'import' → logprob: -18.375028610229492
    6. '...' → logprob: -18.375028610229492
    7. '<|end|>' → logprob: -18.500028610229492
    8. '<|end|>' → logprob: -18.500028610229492
    9. ' ' → logprob: -18.750028610229492
    10. '   ' → logprob: -18.875028610229492

Token 2357: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2813405692577362
    2. ' in' → logprob: -1.4063405990600586
    3. 'import' → logprob: -9.531340599060059
    4. 'i' → logprob: -10.031340599060059
    5. 'range' → logprob: -10.656340599060059
    6. '+' → logprob: -11.531340599060059
    7. '   ' → logprob: -11.656340599060059
    8. 'n' → logprob: -11.906340599060059
    9. '1' → logprob: -12.656340599060059
    10. '
' → logprob: -12.906340599060059

Token 2358: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00017648482753429562
    2. 'k' → logprob: -9.750176429748535
    3. ' range' → logprob: -9.750176429748535
    4. '1' → logprob: -10.625176429748535
    5. 'i' → logprob: -11.000176429748535
    6. '(range' → logprob: -11.625176429748535
    7. 'in' → logprob: -11.875176429748535
    8. '(' → logprob: -13.875176429748535
    9. '(k' → logprob: -14.500176429748535
    10. '(i' → logprob: -14.750176429748535

Token 2359: '(k' (ID: 12125)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.015288570895791054
    2. 'k' → logprob: -4.890288352966309
    3. '(k' → logprob: -5.015288352966309
    4. '(range' → logprob: -7.140288352966309
    5. ' range' → logprob: -8.640288352966309
    6. '(' → logprob: -10.765288352966309
    7. '1' → logprob: -11.265288352966309
    8. 'rang' → logprob: -12.640288352966309
    9. 'in' → logprob: -13.515288352966309
    10. '[k' → logprob: -13.765288352966309

Token 2360: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.13969331979751587
    2. '):
' → logprob: -2.389693260192871
    3. '):' → logprob: -3.264693260192871
    4. ']:
' → logprob: -9.264693260192871
    5. '):
' → logprob: -9.764693260192871
    6. ')' → logprob: -9.764693260192871
    7. ']:' → logprob: -10.014693260192871
    8. '-' → logprob: -10.139693260192871
    9. '[' → logprob: -10.139693260192871
    10. ')[' → logprob: -10.514693260192871

Token 2361: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000363590574124828
    2. 'fac' → logprob: -8.00036334991455
    3. ' fac' → logprob: -10.87536334991455
    4. '_fac' → logprob: -13.00036334991455
    5. 'Fac' → logprob: -13.12536334991455
    6. '	f' → logprob: -13.37536334991455
    7. '   ' → logprob: -13.50036334991455
    8. '       ' → logprob: -14.12536334991455
    9. '.fac' → logprob: -14.75036334991455
    10. ' faci' → logprob: -15.37536334991455

Token 2362: ' fac' (ID: 3513)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' (adapté à ' fac') → logprob: -0.0015212877187877893
    2. ' fac' → logprob: -6.501521110534668
    3. '   ' → logprob: -11.001521110534668
    4. '_fac' → logprob: -13.751521110534668
    5. '.fac' → logprob: -15.001521110534668
    6. 'Fac' → logprob: -15.876521110534668
    7. 'facet' → logprob: -16.001522064208984
    8. 'fas' → logprob: -16.126522064208984
    9. 'f' → logprob: -16.126522064208984
    10. 'fc' → logprob: -16.376522064208984

Token 2363: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.339278580620885e-06
    2. 'i' → logprob: -13.625001907348633
    3. '   ' → logprob: -15.125001907348633
    4. '(i' → logprob: -15.250001907348633
    5. '[' → logprob: -15.625001907348633
    6. '[
' → logprob: -16.625001907348633
    7. '{i' → logprob: -16.750001907348633
    8. '[(' → logprob: -17.750001907348633
    9. '[int' → logprob: -17.875001907348633
    10. '[I' → logprob: -17.875001907348633

Token 2364: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.676981345459353e-06
    2. '+i' → logprob: -12.500005722045898
    3. '+=' → logprob: -14.000005722045898
    4. '+
' → logprob: -14.875005722045898
    5. ' +' → logprob: -15.750005722045898
    6. '1' → logprob: -15.750005722045898
    7. ']+' → logprob: -15.750005722045898
    8. '+]' → logprob: -16.3750057220459
    9. ']+=' → logprob: -16.5000057220459
    10. '   ' → logprob: -16.6250057220459

Token 2365: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. '+' → logprob: -12.625003814697266
    3. ' ' → logprob: -16.375003814697266
    4. '   ' → logprob: -17.125003814697266
    5. 'print' → logprob: -18.625003814697266
    6. 'i' → logprob: -19.750003814697266
    7. '
' → logprob: -20.000003814697266
    8. 'import' → logprob: -20.000003814697266
    9. ']' → logprob: -20.125003814697266
    10. '[' → logprob: -20.500003814697266

Token 2366: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00225635664537549
    2. ' =' → logprob: -6.127256393432617
    3. ']=' → logprob: -9.877256393432617
    4. ']' → logprob: -10.877256393432617
    5. '=
' → logprob: -15.502256393432617
    6. ' ' → logprob: -15.877256393432617
    7. '*=' → logprob: -15.877256393432617
    8. ']+=' → logprob: -16.252256393432617
    9. '=i' → logprob: -16.377256393432617
    10. '=

' → logprob: -16.377256393432617

Token 2367: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023246292024850845
    2. ' =' → logprob: -3.7732462882995605
    3. '=
' → logprob: -14.648246765136719
    4. '*=' → logprob: -16.14824676513672
    5. '   ' → logprob: -16.39824676513672
    6. '=

' → logprob: -17.52324676513672
    7. ' ' → logprob: -17.64824676513672
    8. '=i' → logprob: -17.77324676513672
    9. '=k' → logprob: -17.77324676513672
    10. ' =
' → logprob: -17.89824676513672

Token 2368: ' fac' (ID: 3513)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.0008055794751271605
    2. ' fac' → logprob: -7.125805377960205
    3. 'fas' → logprob: -14.250805854797363
    4. 'fact' → logprob: -16.375804901123047
    5. 'Fac' → logprob: -16.625804901123047
    6. '_fac' → logprob: -16.625804901123047
    7. 'fab' → logprob: -16.875804901123047
    8. 'fa' → logprob: -17.125804901123047
    9. '.fac' → logprob: -17.250804901123047
    10. 'facet' → logprob: -17.875804901123047

Token 2369: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.11381091177463531
    2. 'i' → logprob: -2.3638110160827637
    3. '(i' → logprob: -5.113811016082764
    4. 'fac' → logprob: -5.238811016082764
    5. ' i' → logprob: -6.488811016082764
    6. '[' → logprob: -7.738811016082764
    7. ' fac' → logprob: -8.863810539245605
    8. '```' → logprob: -10.238810539245605
    9. '{i' → logprob: -11.363810539245605
    10. '   ' → logprob: -11.488810539245605

Token 2370: ']*(' (ID: 92627)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.00979197584092617
    2. '*' → logprob: -4.634791851043701
    3. ']*(' → logprob: -10.88479232788086
    4. '*((' → logprob: -11.50979232788086
    5. ')*(' → logprob: -13.00979232788086
    6. '   ' → logprob: -13.13479232788086
    7. ' *' → logprob: -14.00979232788086
    8. '#' → logprob: -14.13479232788086
    9. '**' → logprob: -15.13479232788086
    10. ' *(' → logprob: -15.38479232788086

Token 2371: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001787513610906899
    2. '(i' → logprob: -6.3767876625061035
    3. ' i' → logprob: -9.626787185668945
    4. '   ' → logprob: -11.501787185668945
    5. ' (' → logprob: -12.376787185668945
    6. 'mod' → logprob: -13.501787185668945
    7. '[i' → logprob: -13.626787185668945
    8. 'k' → logprob: -14.501787185668945
    9. '	i' → logprob: -14.876787185668945
    10. '100' → logprob: -15.251787185668945

Token 2372: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0001789881061995402
    2. '1' → logprob: -9.750179290771484
    3. ' +' → logprob: -9.750179290771484
    4. '+i' → logprob: -10.250179290771484
    5. '+
' → logprob: -11.875179290771484
    6. ' ' → logprob: -11.875179290771484
    7. '   ' → logprob: -12.375179290771484
    8. '[i' → logprob: -12.875179290771484
    9. 'i' → logprob: -13.000179290771484
    10. '[' → logprob: -13.750179290771484

Token 2373: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.624555291840807e-05
    2. '+' → logprob: -10.000076293945312
    3. ' ' → logprob: -10.500076293945312
    4. 'i' → logprob: -13.125076293945312
    5. '   ' → logprob: -14.875076293945312
    6. '  ' → logprob: -15.375076293945312
    7. '```' → logprob: -15.812576293945312
    8. '
' → logprob: -16.625076293945312
    9. '0' → logprob: -16.687576293945312
    10. '(i' → logprob: -17.000076293945312

Token 2374: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.35892701148986816
    2. '%' → logprob: -1.2339270114898682
    3. ')' → logprob: -4.858926773071289
    4. '%(' → logprob: -6.608926773071289
    5. ']%' → logprob: -7.358926773071289
    6. '%i' → logprob: -8.358926773071289
    7. '%)' → logprob: -8.608926773071289
    8. '//' → logprob: -9.358926773071289
    9. ' %' → logprob: -10.358926773071289
    10. '%n' → logprob: -10.608926773071289

Token 2375: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.03399442881345749
    2. '(i' → logprob: -3.533994436264038
    3. '(mod' → logprob: -5.533994197845459
    4. 'i' → logprob: -9.408994674682617
    5. '100' → logprob: -9.783994674682617
    6. '(k' → logprob: -9.908994674682617
    7. '(' → logprob: -10.158994674682617
    8. ' (' → logprob: -11.158994674682617
    9. 'k' → logprob: -11.408994674682617
    10. ' mod' → logprob: -11.408994674682617

Token 2376: '
' (ID: 198)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.052074164152145386
    2. '
' → logprob: -3.5520741939544678
    3. '   ' → logprob: -3.9270741939544678
    4. ' inv' → logprob: -6.427073955535889
    5. '[' → logprob: -8.552074432373047
    6. 'for' → logprob: -9.052074432373047
    7. ' ' → logprob: -9.552074432373047
    8. '(inv' → logprob: -9.677074432373047
    9. '<|end|>' → logprob: -9.802074432373047
    10. '```' → logprob: -10.052074432373047

Token 2377: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.3869245648384094
    2. 'for' → logprob: -1.1369245052337646
    3. '   ' → logprob: -10.886924743652344
    4. ' for' → logprob: -10.886924743652344
    5. ' inv' → logprob: -11.386924743652344
    6. '```' → logprob: -12.761924743652344
    7. '(inv' → logprob: -14.386924743652344
    8. '.inv' → logprob: -15.261924743652344
    9. 'inverse' → logprob: -15.511924743652344
    10. '_inv' → logprob: -15.636924743652344

Token 2378: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6881815791130066
    2. ' =' → logprob: -0.8131815791130066
    3. '[' → logprob: -2.9381816387176514
    4. '[i' → logprob: -7.688181400299072
    5. '=[' → logprob: -7.938181400299072
    6. '   ' → logprob: -9.93818187713623
    7. ']' → logprob: -10.18818187713623
    8. '<|end|>' → logprob: -10.31318187713623
    9. '[:]' → logprob: -10.31318187713623
    10. ' =[' → logprob: -10.43818187713623

Token 2379: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005569627974182367
    2. ' [' → logprob: -7.500556945800781
    3. '[n' → logprob: -13.375556945800781
    4. '[N' → logprob: -13.875556945800781
    5. '[len' → logprob: -14.125556945800781
    6. '[...,' → logprob: -15.375556945800781
    7. '[List' → logprob: -16.87555694580078
    8. '[int' → logprob: -17.00055694580078
    9. 'None' → logprob: -17.12555694580078
    10. '[k' → logprob: -17.12555694580078

Token 2380: 'None' (ID: 8505)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.2855416066013277e-05
    2. 'None' → logprob: -10.500032424926758
    3. '[k' → logprob: -12.625032424926758
    4. ' [' → logprob: -14.625032424926758
    5. 'k' → logprob: -14.750032424926758
    6. '```' → logprob: -15.375032424926758
    7. '[i' → logprob: -15.500032424926758
    8. '[int' → logprob: -15.500032424926758
    9. '[n' → logprob: -16.125032424926758
    10. '1' → logprob: -16.375032424926758

Token 2381: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38768863677978516
    2. 'for' → logprob: -1.3876886367797852
    3. '[' → logprob: -2.637688636779785
    4. '[i' → logprob: -10.137688636779785
    5. '	for' → logprob: -10.137688636779785
    6. '[k' → logprob: -10.637688636779785
    7. ' [' → logprob: -10.637688636779785
    8. '```' → logprob: -11.387688636779785
    9. 'For' → logprob: -11.512688636779785
    10. '_for' → logprob: -11.887688636779785

Token 2382: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00025788258062675595
    2. ' i' → logprob: -8.62525749206543
    3. '(i' → logprob: -9.62525749206543
    4. 'range' → logprob: -12.00025749206543
    5. '[i' → logprob: -12.37525749206543
    6. 'import' → logprob: -14.75025749206543
    7. '0' → logprob: -14.75025749206543
    8. 'int' → logprob: -14.87525749206543
    9. 'in' → logprob: -15.62525749206543
    10. '   ' → logprob: -16.25025749206543

Token 2383: ' in' (ID: 306)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.002620370127260685
    2. 'range' → logprob: -7.002620220184326
    3. ' range' → logprob: -7.127620220184326
    4. '(range' → logprob: -7.627620220184326
    5. 'for' → logprob: -8.627620697021484
    6. '[k' → logprob: -8.877620697021484
    7. ' (' → logprob: -10.502620697021484
    8. ' for' → logprob: -10.877620697021484
    9. 'k' → logprob: -11.502620697021484
    10. 'b' → logprob: -11.627620697021484

Token 2384: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003444024478085339
    2. ' range' → logprob: -8.000344276428223
    3. '(range' → logprob: -11.625344276428223
    4. '	range' → logprob: -18.75034523010254
    5. '   ' → logprob: -20.37534523010254
    6. '
' → logprob: -20.87534523010254
    7. '
' → logprob: -21.00034523010254
    8. 'import' → logprob: -21.87534523010254
    9. 'for' → logprob: -22.00034523010254
    10. 'i' → logprob: -22.00034523010254

Token 2385: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.03808888420462608
    2. 'k' → logprob: -3.288088798522949
    3. '[k' → logprob: -10.03808879852295
    4. '{k' → logprob: -13.41308879852295
    5. '(' → logprob: -14.91308879852295
    6. '
' → logprob: -15.16308879852295
    7. '(i' → logprob: -15.16308879852295
    8. 'i' → logprob: -15.41308879852295
    9. ' (' → logprob: -15.53808879852295
    10. 'fac' → logprob: -15.78808879852295

Token 2386: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.317247167928144e-05
    2. '][' → logprob: -10.125093460083008
    3. '+i' → logprob: -12.000093460083008
    4. '[' → logprob: -12.250093460083008
    5. '[i' → logprob: -12.250093460083008
    6. '-' → logprob: -12.375093460083008
    7. ' +' → logprob: -12.500093460083008
    8. '1' → logprob: -12.500093460083008
    9. ']+' → logprob: -12.500093460083008
    10. '+k' → logprob: -12.750093460083008

Token 2387: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8908587662735954e-05
    2. '+' → logprob: -11.375019073486328
    3. ' ' → logprob: -13.125019073486328
    4. '0' → logprob: -13.625019073486328
    5. '```' → logprob: -13.750019073486328
    6. '<|end|>' → logprob: -13.875019073486328
    7. '<|end|>' → logprob: -14.500019073486328
    8. 'from' → logprob: -15.250019073486328
    9. '   ' → logprob: -15.250019073486328
    10. '[' → logprob: -15.375019073486328

Token 2388: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20163582265377045
    2. ']
' → logprob: -1.7016358375549316
    3. ']
' → logprob: -8.826635360717773
    4. 'for' → logprob: -10.076635360717773
    5. ']()
' → logprob: -12.076635360717773
    6. '][' → logprob: -12.076635360717773
    7. ']

' → logprob: -12.201635360717773
    8. ' for' → logprob: -12.701635360717773
    9. ']'
' → logprob: -12.951635360717773
    10. ' ]' → logprob: -13.826635360717773

Token 2389: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.04868365824222565
    2. 'for' → logprob: -3.0486836433410645
    3. '[' → logprob: -9.423684120178223
    4. '```' → logprob: -11.798684120178223
    5. 'inf' → logprob: -13.298684120178223
    6. '
' → logprob: -13.298684120178223
    7. '   ' → logprob: -13.923684120178223
    8. ' inv' → logprob: -14.048684120178223
    9. '(inv' → logprob: -14.298684120178223
    10. ' for' → logprob: -14.673684120178223

Token 2390: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.029760096222162247
    2. '[' → logprob: -3.5297601222991943
    3. '[-' → logprob: -12.654760360717773
    4. 'k' → logprob: -13.529760360717773
    5. '[i' → logprob: -13.529760360717773
    6. '=' → logprob: -13.904760360717773
    7. '=k' → logprob: -13.904760360717773
    8. '=[' → logprob: -14.279760360717773
    9. '```' → logprob: -15.154760360717773
    10. '
' → logprob: -15.279760360717773

Token 2391: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03167090564966202
    2. '=' → logprob: -3.7816708087921143
    3. ']=' → logprob: -5.031671047210693
    4. '[' → logprob: -6.656671047210693
    5. ' =' → logprob: -8.406670570373535
    6. ')' → logprob: -9.156670570373535
    7. '[i' → logprob: -9.406670570373535
    8. '   ' → logprob: -9.781670570373535
    9. '[k' → logprob: -11.031670570373535
    10. '][' → logprob: -11.031670570373535

Token 2392: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889562100172043
    2. ' =' → logprob: -2.5788955688476562
    3. '=
' → logprob: -12.578895568847656
    4. '=k' → logprob: -13.578895568847656
    5. ' ' → logprob: -15.203895568847656
    6. ']' → logprob: -15.328895568847656
    7. ' =
' → logprob: -15.828895568847656
    8. ')' → logprob: -16.453895568847656
    9. '=None' → logprob: -16.953895568847656
    10. ']=' → logprob: -17.078895568847656

Token 2393: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.0325924449716695e-05
    2. ' pow' → logprob: -11.50001049041748
    3. '(pow' → logprob: -16.500009536743164
    4. 'Pow' → logprob: -18.250009536743164
    5. '.pow' → logprob: -18.875009536743164
    6. '```' → logprob: -19.250009536743164
    7. '1' → logprob: -20.000009536743164
    8. '_pow' → logprob: -20.625009536743164
    9. 'p' → logprob: -20.875009536743164
    10. '#' → logprob: -21.125009536743164

Token 2394: '(f' (ID: 1526)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -4.723352049040841e-06
    2. '(f' → logprob: -12.625004768371582
    3. ' fac' → logprob: -14.375004768371582
    4. '_fac' → logprob: -14.625004768371582
    5. '.fac' → logprob: -15.250004768371582
    6. 'Fac' → logprob: -17.375003814697266
    7. 'facet' → logprob: -18.750003814697266
    8. 'fas' → logprob: -18.875003814697266
    9. 'fab' → logprob: -19.125003814697266
    10. 'fa' → logprob: -19.375003814697266

Token 2395: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.6936051845550537
    2. 'fac' → logprob: -0.6936051845550537
    3. '[k' → logprob: -8.318605422973633
    4. '[' → logprob: -9.193605422973633
    5. '_fac' → logprob: -9.443605422973633
    6. ' fac' → logprob: -11.943605422973633
    7. '```' → logprob: -12.693605422973633
    8. 'a' → logprob: -12.693605422973633
    9. 'acs' → logprob: -12.818605422973633
    10. '[i' → logprob: -13.068605422973633

Token 2396: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0016736338147893548
    2. '[' → logprob: -6.501673698425293
    3. 'k' → logprob: -8.876673698425293
    4. '(k' → logprob: -11.251673698425293
    5. '[
' → logprob: -12.001673698425293
    6. ']' → logprob: -12.501673698425293
    7. '```' → logprob: -12.501673698425293
    8. '{k' → logprob: -13.126673698425293
    9. '[i' → logprob: -13.626673698425293
    10. '[-' → logprob: -14.876673698425293

Token 2397: '],' (ID: 2155)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.04849288612604141
    2. ',k' → logprob: -3.173492908477783
    3. ',' → logprob: -5.798492908477783
    4. '],' → logprob: -6.173492908477783
    5. '-k' → logprob: -8.173492431640625
    6. 'k' → logprob: -10.923492431640625
    7. '[i' → logprob: -11.173492431640625
    8. '(k' → logprob: -11.423492431640625
    9. '{k' → logprob: -11.673492431640625
    10. '[' → logprob: -12.298492431640625

Token 2398: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0007419686880894005
    2. '(mod' → logprob: -7.250741958618164
    3. 'fac' → logprob: -10.500741958618164
    4. 'pow' → logprob: -13.375741958618164
    5. ' mod' → logprob: -13.500741958618164
    6. '-mod' → logprob: -14.250741958618164
    7. '-' → logprob: -15.000741958618164
    8. '
' → logprob: -15.750741958618164
    9. '	mod' → logprob: -16.125741958618164
    10. 'MOD' → logprob: -16.250741958618164

Token 2399: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.896309739408025e-07
    2. '-k' → logprob: -14.625000953674316
    3. ' -' → logprob: -16.0
    4. '(k' → logprob: -16.5
    5. '-mod' → logprob: -16.875
    6. '[k' → logprob: -17.875
    7. ',k' → logprob: -18.875
    8. '#' → logprob: -19.0
    9. 'k' → logprob: -19.5
    10. '-(' → logprob: -20.0

Token 2400: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.77627644513268e-06
    2. ' ' → logprob: -11.875008583068848
    3. '1' → logprob: -14.125008583068848
    4. '
' → logprob: -15.312508583068848
    5. '   ' → logprob: -15.437508583068848
    6. '-' → logprob: -15.687508583068848
    7. '２' → logprob: -17.000009536743164
    8. '  ' → logprob: -17.187509536743164
    9. '```' → logprob: -17.187509536743164
    10. '3' → logprob: -17.375009536743164

Token 2401: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9361264946837764e-07
    2. ',module' → logprob: -17.0
    3. ',
' → logprob: -17.125
    4. ')' → logprob: -17.125
    5. ',k' → logprob: -17.5
    6. '```' → logprob: -18.375
    7. ' ,' → logprob: -18.875
    8. '(mod' → logprob: -19.375
    9. 'mod' → logprob: -19.625
    10. ',m' → logprob: -19.75

Token 2402: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.9361264946837764e-07
    2. ' mod' → logprob: -16.875
    3. '(mod' → logprob: -17.25
    4. 'k' → logprob: -17.375
    5. '	mod' → logprob: -20.0
    6. 'moder' → logprob: -21.375
    7. '[' → logprob: -22.0
    8. '0' → logprob: -22.25
    9. '100' → logprob: -22.375
    10. 'mods' → logprob: -22.5

Token 2403: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12729720771312714
    2. ')' → logprob: -2.1272971630096436
    3. ')
' → logprob: -8.502297401428223
    4. 'for' → logprob: -8.877297401428223
    5. ')%' → logprob: -12.127297401428223
    6. ')#' → logprob: -12.877297401428223
    7. '```' → logprob: -13.002297401428223
    8. ')[' → logprob: -13.127297401428223
    9. '   ' → logprob: -13.127297401428223
    10. '%' → logprob: -13.127297401428223

Token 2404: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0028334110975265503
    2. ' for' → logprob: -5.877833366394043
    3. '[' → logprob: -11.127833366394043
    4. '```' → logprob: -11.752833366394043
    5. 'For' → logprob: -12.877833366394043
    6. '   ' → logprob: -13.502833366394043
    7. '	for' → logprob: -14.127833366394043
    8. '
' → logprob: -14.752833366394043
    9. '<|end|>' → logprob: -15.002833366394043
    10. '[i' → logprob: -15.002833366394043

Token 2405: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002639582962729037
    2. ' i' → logprob: -8.250264167785645
    3. 'I' → logprob: -14.000264167785645
    4. '	i' → logprob: -14.125264167785645
    5. '[i' → logprob: -15.375264167785645
    6. '(i' → logprob: -15.875264167785645
    7. 'import' → logprob: -15.875264167785645
    8. 'user' → logprob: -16.000263214111328
    9. 'k' → logprob: -16.250263214111328
    10. 'j' → logprob: -16.625263214111328

Token 2406: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007018344942480326
    2. '[i' → logprob: -5.382018566131592
    3. ' i' → logprob: -6.882018566131592
    4. 'in' → logprob: -7.382018566131592
    5. 'i' → logprob: -7.507018566131592
    6. '```' → logprob: -9.882018089294434
    7. '[' → logprob: -10.382018089294434
    8. '[::-' → logprob: -10.632018089294434
    9. '
' → logprob: -10.757018089294434
    10. ',i' → logprob: -11.507018089294434

Token 2407: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.34903573989868164
    2. '(i' → logprob: -1.9740357398986816
    3. 'i' → logprob: -2.0990357398986816
    4. ' range' → logprob: -3.5990357398986816
    5. '(range' → logprob: -5.599035739898682
    6. '(k' → logprob: -6.724035739898682
    7. '[i' → logprob: -7.849035739898682
    8. ' i' → logprob: -8.474035263061523
    9. 'k' → logprob: -8.474035263061523
    10. '```' → logprob: -10.224035263061523

Token 2408: '(k' (ID: 12125)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05562214553356171
    2. 'range' → logprob: -3.055622100830078
    3. 'k' → logprob: -5.055622100830078
    4. ' range' → logprob: -8.430622100830078
    5. '(i' → logprob: -8.430622100830078
    6. '[i' → logprob: -9.305622100830078
    7. 'in' → logprob: -10.305622100830078
    8. ' i' → logprob: -11.055622100830078
    9. '(k' → logprob: -11.180622100830078
    10. '```' → logprob: -11.805622100830078

Token 2409: ')[' (ID: 13637)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.27835813164711
    2. ')[' → logprob: -2.153358221054077
    3. '[::-' → logprob: -2.153358221054077
    4. '][' → logprob: -5.028357982635498
    5. '[:-' → logprob: -6.778357982635498
    6. '[' → logprob: -7.028357982635498
    7. '+' → logprob: -7.028357982635498
    8. ' -' → logprob: -7.528357982635498
    9. '::-' → logprob: -8.528358459472656
    10. '):
' → logprob: -8.903358459472656

Token 2410: '::-' (ID: 96612)
  Prédit: '::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::-' → logprob: -8.911954500945285e-05
    2. '[::-' → logprob: -9.500088691711426
    3. ':-' → logprob: -11.750088691711426
    4. ':' → logprob: -12.750088691711426
    5. '::' → logprob: -12.875088691711426
    6. '-' → logprob: -15.125088691711426
    7. '1' → logprob: -15.375088691711426
    8. ':
' → logprob: -15.625088691711426
    9. '
' → logprob: -16.125089645385742
    10. '[:-' → logprob: -16.500089645385742

Token 2411: '1' (ID: 16)
  Prédit: '::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::-' → logprob: -0.07234518229961395
    2. '1' → logprob: -2.94734525680542
    3. '-' → logprob: -4.44734525680542
    4. '[::-' → logprob: -5.32234525680542
    5. '```' → logprob: -8.072344779968262
    6. ':-' → logprob: -8.697344779968262
    7. '::' → logprob: -8.947344779968262
    8. ':' → logprob: -9.822344779968262
    9. '﻿' → logprob: -11.197344779968262
    10. '--' → logprob: -11.572344779968262

Token 2412: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.6312212944030762
    2. ':' → logprob: -1.2562212944030762
    3. ':
' → logprob: -1.7562212944030762
    4. ']:' → logprob: -4.881221294403076
    5. '   ' → logprob: -5.881221294403076
    6. ']:
' → logprob: -10.006221771240234
    7. '```' → logprob: -10.381221771240234
    8. '):
' → logprob: -10.506221771240234
    9. ':i' → logprob: -10.631221771240234
    10. '-' → logprob: -10.756221771240234

Token 2413: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019765726756304502
    2. 'inv' → logprob: -6.751976490020752
    3. ' inv' → logprob: -7.251976490020752
    4. '```' → logprob: -10.00197696685791
    5. '       ' → logprob: -10.25197696685791
    6. '(inv' → logprob: -11.62697696685791
    7. ' ' → logprob: -12.75197696685791
    8. '_inv' → logprob: -13.75197696685791
    9. '  ' → logprob: -14.25197696685791
    10. '[' → logprob: -14.50197696685791

Token 2414: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' (adapté à ' inv') → logprob: -0.072285957634449
    2. '   ' → logprob: -2.6972858905792236
    3. ' inv' → logprob: -6.072286128997803
    4. '       ' → logprob: -10.697285652160645
    5. ' ' → logprob: -12.072285652160645
    6. '    ' → logprob: -12.697285652160645
    7. '  ' → logprob: -13.072285652160645
    8. '(inv' → logprob: -13.072285652160645
    9. '```' → logprob: -13.572285652160645
    10. '_inv' → logprob: -14.072285652160645

Token 2415: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.842555426876061e-06
    2. '[' → logprob: -13.125004768371582
    3. '```' → logprob: -13.125004768371582
    4. '[I' → logprob: -15.125004768371582
    5. 'i' → logprob: -15.375004768371582
    6. '   ' → logprob: -16.6250057220459
    7. '(i' → logprob: -16.8750057220459
    8. '[
' → logprob: -16.8750057220459
    9. '[int' → logprob: -17.6250057220459
    10. '=i' → logprob: -17.6250057220459

Token 2416: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015632150694727898
    2. '=' → logprob: -4.765632152557373
    3. ']=' → logprob: -5.390632152557373
    4. ' =' → logprob: -6.265632152557373
    5. '+' → logprob: -8.265631675720215
    6. '   ' → logprob: -9.015631675720215
    7. ' ]' → logprob: -9.515631675720215
    8. '-' → logprob: -10.765631675720215
    9. '[' → logprob: -11.015631675720215
    10. ']+=' → logprob: -11.515631675720215

Token 2417: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002482315758243203
    2. ' =' → logprob: -6.0024824142456055
    3. '   ' → logprob: -12.252482414245605
    4. '=i' → logprob: -14.252482414245605
    5. ']' → logprob: -14.502482414245605
    6. ']=' → logprob: -14.627482414245605
    7. '[' → logprob: -15.627482414245605
    8. '=
' → logprob: -16.50248146057129
    9. '=k' → logprob: -16.62748146057129
    10. ')=' → logprob: -17.75248146057129

Token 2418: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.25204312801361084
    2. ' inv' → logprob: -1.5020431280136108
    3. '(inv' → logprob: -9.127042770385742
    4. '_inv' → logprob: -13.127042770385742
    5. '.inv' → logprob: -14.127042770385742
    6. 'inverse' → logprob: -14.252042770385742
    7. '```' → logprob: -14.502042770385742
    8. '#' → logprob: -15.377042770385742
    9. 'in' → logprob: -15.502042770385742
    10. '[' → logprob: -16.377042770385742

Token 2419: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5484498143196106
    2. 'i' → logprob: -1.5484497547149658
    3. 'inv' → logprob: -1.7984497547149658
    4. '+' → logprob: -3.423449754714966
    5. '+i' → logprob: -5.923449993133545
    6. '(i' → logprob: -6.173449993133545
    7. '   ' → logprob: -7.298449993133545
    8. 'B' → logprob: -7.423449993133545
    9. '_inv' → logprob: -7.548449993133545
    10. '```' → logprob: -7.548449993133545

Token 2420: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00015598179015796632
    2. '+i' → logprob: -9.25015640258789
    3. '[i' → logprob: -10.75015640258789
    4. '[' → logprob: -11.37515640258789
    5. '1' → logprob: -11.50015640258789
    6. '+
' → logprob: -11.75015640258789
    7. ' +' → logprob: -12.50015640258789
    8. '   ' → logprob: -13.37515640258789
    9. '+[' → logprob: -13.75015640258789
    10. ']+' → logprob: -13.87515640258789

Token 2421: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.662937372922897e-05
    2. '+' → logprob: -9.250096321105957
    3. ' ' → logprob: -15.625096321105957
    4. '   ' → logprob: -16.500097274780273
    5. '
' → logprob: -16.750097274780273
    6. '0' → logprob: -17.125097274780273
    7. '(' → logprob: -17.250097274780273
    8. '2' → logprob: -17.375097274780273
    9. '```' → logprob: -17.937597274780273
    10. '3' → logprob: -18.000097274780273

Token 2422: ']*(' (ID: 92627)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.00041053479071706533
    2. ']*(' → logprob: -8.375410079956055
    3. '*' → logprob: -9.000410079956055
    4. '   ' → logprob: -10.375410079956055
    5. ')*(' → logprob: -10.875410079956055
    6. '*((' → logprob: -12.250410079956055
    7. '**' → logprob: -14.000410079956055
    8. '#' → logprob: -15.375410079956055
    9. ' *' → logprob: -15.625410079956055
    10. ' *(' → logprob: -15.875410079956055

Token 2423: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07895158976316452
    2. '(i' → logprob: -2.578951597213745
    3. '[i' → logprob: -9.828951835632324
    4. ' i' → logprob: -12.578951835632324
    5. '(k' → logprob: -13.953951835632324
    6. ' (' → logprob: -14.078951835632324
    7. 'k' → logprob: -14.203951835632324
    8. '(' → logprob: -14.703951835632324
    9. ')i' → logprob: -14.828951835632324
    10. ''i' → logprob: -15.203951835632324

Token 2424: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.030900748446583748
    2. '[i' → logprob: -3.655900716781616
    3. '+i' → logprob: -5.530900955200195
    4. '[' → logprob: -7.530900955200195
    5. '+
' → logprob: -10.655900955200195
    6. '[I' → logprob: -11.155900955200195
    7. '```' → logprob: -11.905900955200195
    8. '   ' → logprob: -12.030900955200195
    9. '+[' → logprob: -12.030900955200195
    10. ' +' → logprob: -12.155900955200195

Token 2425: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10844282060861588
    2. '(i' → logprob: -2.608442783355713
    3. '0' → logprob: -4.358442783355713
    4. '(' → logprob: -5.233442783355713
    5. 'i' → logprob: -5.733442783355713
    6. '+' → logprob: -5.733442783355713
    7. '-' → logprob: -6.108442783355713
    8. '[i' → logprob: -7.483442783355713
    9. ' ' → logprob: -7.858442783355713
    10. ']+' → logprob: -8.608443260192871

Token 2426: ')%' (ID: 57656)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.005882813595235348
    2. ']%' → logprob: -5.505882740020752
    3. ')%' → logprob: -6.380882740020752
    4. '%i' → logprob: -10.13088321685791
    5. '()%' → logprob: -10.38088321685791
    6. '```' → logprob: -12.00588321685791
    7. '%n' → logprob: -12.13088321685791
    8. '%
' → logprob: -12.25588321685791
    9. '%x' → logprob: -12.38088321685791
    10. '%b' → logprob: -12.50588321685791

Token 2427: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.32623720169067383
    2. 'k' → logprob: -1.4512372016906738
    3. 'i' → logprob: -3.451237201690674
    4. '(k' → logprob: -4.826237201690674
    5. '(i' → logprob: -6.701237201690674
    6. '[k' → logprob: -6.701237201690674
    7. '[i' → logprob: -7.076237201690674
    8. '(mod' → logprob: -7.076237201690674
    9. 'inv' → logprob: -9.701236724853516
    10. '```' → logprob: -10.451236724853516

Token 2428: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0869508981704712
    2. '%' → logprob: -1.4619508981704712
    3. '<|end|>' → logprob: -1.5869508981704712
    4. '[' → logprob: -1.8369508981704712
    5. '```' → logprob: -3.7119507789611816
    6. ']' → logprob: -4.461950778961182
    7. '#' → logprob: -4.586950778961182
    8. '[i' → logprob: -5.211950778961182
    9. '[
' → logprob: -5.961950778961182
    10. '
' → logprob: -6.086950778961182

Token 2429: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.33027780055999756
    2. 'for' → logprob: -1.3302778005599976
    3. '   ' → logprob: -4.455277919769287
    4. '[' → logprob: -6.205277919769287
    5. '<|end|>' → logprob: -6.830277919769287
    6. ' for' → logprob: -6.955277919769287
    7. '[i' → logprob: -7.955277919769287
    8. ')' → logprob: -8.205277442932129
    9. '```' → logprob: -8.955277442932129
    10. 'i' → logprob: -8.955277442932129

Token 2430: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.003798653604462743
    2. 'comb' → logprob: -6.378798484802246
    3. '(pow' → logprob: -7.503798484802246
    4. '(' → logprob: -7.628798484802246
    5. '((' → logprob: -7.753798484802246
    6. '(ans' → logprob: -8.003798484802246
    7. '(f' → logprob: -9.128798484802246
    8. 'pow' → logprob: -9.503798484802246
    9. 'ans' → logprob: -10.128798484802246
    10. 'com' → logprob: -10.878798484802246

Token 2431: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: 0.0
    2. '[b' → logprob: -17.0
    3. 'p' → logprob: -18.375
    4. '(b' → logprob: -19.0
    5. ' b' → logprob: -19.75
    6. 'bf' → logprob: -19.875
    7. 'б' → logprob: -20.125
    8. ')b' → logprob: -20.125
    9. '	b' → logprob: -20.375
    10. 'bb' → logprob: -20.875

Token 2432: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.4376673400402069
    2. '(' → logprob: -1.5626673698425293
    3. '(n' → logprob: -1.9376673698425293
    4. ')' → logprob: -7.937667369842529
    5. '(
' → logprob: -8.187666893005371
    6. '(v' → logprob: -9.812666893005371
    7. '((' → logprob: -10.187666893005371
    8. 'k' → logprob: -10.312666893005371
    9. 'n' → logprob: -11.437666893005371
    10. ',k' → logprob: -11.437666893005371

Token 2433: ',n' (ID: 18103)
  Prédit: ',k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.11995932459831238
    2. ',n' → logprob: -2.4949593544006348
    3. ',' → logprob: -3.4949593544006348
    4. ',
' → logprob: -9.994958877563477
    5. ',i' → logprob: -9.994958877563477
    6. ',b' → logprob: -10.994958877563477
    7. ' ,' → logprob: -11.369958877563477
    8. ',len' → logprob: -11.369958877563477
    9. ',num' → logprob: -11.619958877563477
    10. ',m' → logprob: -11.994958877563477

Token 2434: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25502750277519226
    2. '))' → logprob: -1.5050275325775146
    3. '-' → logprob: -6.3800272941589355
    4. '])' → logprob: -6.8800272941589355
    5. ')n' → logprob: -9.005027770996094
    6. ')
' → logprob: -10.130027770996094
    7. '[' → logprob: -10.255027770996094
    8. '))
' → logprob: -10.630027770996094
    9. ')[' → logprob: -10.630027770996094
    10. '[n' → logprob: -10.630027770996094

Token 2435: '"""

' (ID: 34508)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18454594910144806
    2. '<|end|>' → logprob: -1.8095459938049316
    3. '")' → logprob: -6.309545993804932
    4. '"""' → logprob: -6.809545993804932
    5. '[' → logprob: -7.934545993804932
    6. '```' → logprob: -8.059545516967773
    7. ')
' → logprob: -8.559545516967773
    8. ']' → logprob: -8.684545516967773
    9. '<|end|>' → logprob: -8.809545516967773
    10. '
' → logprob: -9.184545516967773

Token 2436: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7212010622024536
    2. '[' → logprob: -1.5962010622024536
    3. ')' → logprob: -2.846200942993164
    4. 'n' → logprob: -2.971200942993164
    5. 'for' → logprob: -2.971200942993164
    6. ' ' → logprob: -3.096200942993164
    7. ' #' → logprob: -4.221200942993164
    8. 'a' → logprob: -4.471200942993164
    9. 'i' → logprob: -4.721200942993164
    10. '   ' → logprob: -4.721200942993164

Token 2437: '5' (ID: 20)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6702364087104797
    2. '[' → logprob: -1.795236349105835
    3. '   ' → logprob: -2.170236349105835
    4. '#' → logprob: -2.920236349105835
    5. ' for' → logprob: -3.045236349105835
    6. 'n' → logprob: -3.920236349105835
    7. ')' → logprob: -4.045236587524414
    8. ' ' → logprob: -4.670236587524414
    9. ']' → logprob: -4.670236587524414
    10. '=' → logprob: -5.170236587524414

Token 2438: '_F' (ID: 2729)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2439: '
' (ID: 198)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.3982272744178772
    2. '"""
' → logprob: -1.1482272148132324
    3. '#' → logprob: -5.398227214813232
    4. 'n' → logprob: -5.648227214813232
    5. '""' → logprob: -7.023227214813232
    6. 'def' → logprob: -7.148227214813232
    7. 'pass' → logprob: -7.648227214813232
    8. '<|end|>' → logprob: -7.898227214813232
    9. '"""

' → logprob: -9.02322769165039
    10. '(n' → logprob: -9.27322769165039

Token 2440: '"""
' (ID: 15611)
  Prédit: '"""
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.11640121042728424
    2. '"""' → logprob: -2.241401195526123
    3. 'n' → logprob: -6.116401195526123
    4. 'def' → logprob: -7.866401195526123
    5. '#' → logprob: -7.991401195526123
    6. '""' → logprob: -7.991401195526123
    7. '"""
' → logprob: -8.991401672363281
    8. '"""

' → logprob: -9.241401672363281
    9. 'pass' → logprob: -10.866401672363281
    10. '""""' → logprob: -10.991401672363281

Token 2441: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06155795976519585
    2. '#' → logprob: -4.061557769775391
    3. 'def' → logprob: -4.561557769775391
    4. '"""' → logprob: -5.186557769775391
    5. '"""
' → logprob: -5.436557769775391
    6. 'pass' → logprob: -5.936557769775391
    7. 'for' → logprob: -5.936557769775391
    8. '(' → logprob: -6.061557769775391
    9. 'import' → logprob: -6.186557769775391
    10. 'a' → logprob: -6.311557769775391

Token 2442: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.10796994715929031
    2. ' comb' → logprob: -2.3579699993133545
    3. 'fact' → logprob: -5.857969760894775
    4. 'pow' → logprob: -5.857969760894775
    5. 'com' → logprob: -7.107969760894775
    6. 'mod' → logprob: -7.607969760894775
    7. 'factor' → logprob: -8.357970237731934
    8. 'fac' → logprob: -8.857970237731934
    9. ' fact' → logprob: -9.232970237731934
    10. ' factorial' → logprob: -10.232970237731934

Token 2443: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.08015183359384537
    2. '(' → logprob: -2.5801517963409424
    3. '<|end|>' → logprob: -7.7051520347595215
    4. 'def' → logprob: -8.705151557922363
    5. '<|end|>' → logprob: -8.955151557922363
    6. '(n' → logprob: -9.080151557922363
    7. '(
' → logprob: -9.330151557922363
    8. 'a' → logprob: -9.330151557922363
    9. '((' → logprob: -9.955151557922363
    10. '(A' → logprob: -10.580151557922363

Token 2444: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7326909899711609
    2. ',a' → logprob: -0.8576909899711609
    3. ',b' → logprob: -2.4826910495758057
    4. '(a' → logprob: -5.357690811157227
    5. ',n' → logprob: -5.482690811157227
    6. ',k' → logprob: -6.607690811157227
    7. ',(' → logprob: -8.107690811157227
    8. ',A' → logprob: -8.982690811157227
    9. ',f' → logprob: -9.107690811157227
    10. ',)' → logprob: -9.232690811157227

Token 2445: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6470744609832764
    2. '(a' → logprob: -0.7720744609832764
    3. '):
' → logprob: -4.2720746994018555
    4. ',' → logprob: -8.897074699401855
    5. ',a' → logprob: -9.647074699401855
    6. ')' → logprob: -9.897074699401855
    7. '(' → logprob: -10.272074699401855
    8. ':' → logprob: -10.647074699401855
    9. '[a' → logprob: -10.647074699401855
    10. '   ' → logprob: -10.772074699401855

Token 2446: '   ' (ID: 271)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0436801053583622
    2. '(' → logprob: -3.168680191040039
    3. '(
' → logprob: -8.543680191040039
    4. '<|end|>' → logprob: -8.918680191040039
    5. '   ' → logprob: -9.418680191040039
    6. '<|end|>' → logprob: -9.543680191040039
    7. 'a' → logprob: -10.293680191040039
    8. ' (' → logprob: -10.668680191040039
    9. '(A' → logprob: -10.668680191040039
    10. 'def' → logprob: -10.793680191040039

Token 2447: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.025081602856516838
    2. '   ' → logprob: -4.275081634521484
    3. ' return' → logprob: -4.525081634521484
    4. ' ' → logprob: -11.775081634521484
    5. '	return' → logprob: -11.775081634521484
    6. '  ' → logprob: -12.775081634521484
    7. 'for' → logprob: -13.150081634521484
    8. ':return' → logprob: -13.525081634521484
    9. '       ' → logprob: -13.650081634521484
    10. '    ' → logprob: -14.150081634521484

Token 2448: ' fac' (ID: 3513)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.06196824833750725
    2. ' fac' → logprob: -2.8119683265686035
    3. '.fac' → logprob: -15.936967849731445
    4. '_fac' → logprob: -16.061967849731445
    5. 'Fac' → logprob: -16.936967849731445
    6. 'fa' → logprob: -17.061967849731445
    7. 'fas' → logprob: -17.061967849731445
    8. 'f' → logprob: -17.061967849731445
    9. 'fc' → logprob: -17.436967849731445
    10. 'fab' → logprob: -17.561967849731445

Token 2449: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.127146378159523
    2. '[' → logprob: -2.1271464824676514
    3. '<|end|>' → logprob: -9.12714672088623
    4. '[
' → logprob: -10.00214672088623
    5. '[A' → logprob: -10.75214672088623
    6. 'a' → logprob: -11.00214672088623
    7. '[...]' → logprob: -12.37714672088623
    8. '[f' → logprob: -12.75214672088623
    9. '[b' → logprob: -13.25214672088623
    10. ' [' → logprob: -13.37714672088623

Token 2450: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -1.1160349458805285e-05
    2. ']' → logprob: -11.500011444091797
    3. ']*(' → logprob: -14.125011444091797
    4. '*' → logprob: -15.750011444091797
    5. ']%' → logprob: -16.375011444091797
    6. '][' → logprob: -18.875011444091797
    7. ']
' → logprob: -19.750011444091797
    8. '   ' → logprob: -20.000011444091797
    9. '"*' → logprob: -20.125011444091797
    10. ']
' → logprob: -20.125011444091797

Token 2451: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -8.041768160182983e-05
    2. ' inv' → logprob: -9.750080108642578
    3. '(inv' → logprob: -11.125080108642578
    4. 'pow' → logprob: -12.750080108642578
    5. 'inf' → logprob: -14.250080108642578
    6. 'S' → logprob: -14.625080108642578
    7. '.inv' → logprob: -14.750080108642578
    8. '_inv' → logprob: -14.750080108642578
    9. '```' → logprob: -15.375080108642578
    10. 'I' → logprob: -15.687580108642578

Token 2452: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -13.500001907348633
    3. 'b' → logprob: -16.125001907348633
    4. ' [' → logprob: -16.500001907348633
    5. '[a' → logprob: -16.875001907348633
    6. '[v' → logprob: -18.250001907348633
    7. '[u' → logprob: -18.250001907348633
    8. ' b' → logprob: -18.250001907348633
    9. '[
' → logprob: -18.250001907348633
    10. '[f' → logprob: -18.250001907348633

Token 2453: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.00012809180771000683
    2. '*' → logprob: -9.375127792358398
    3. ']' → logprob: -10.875127792358398
    4. ']*(' → logprob: -10.875127792358398
    5. '*b' → logprob: -13.250127792358398
    6. '*i' → logprob: -14.125127792358398
    7. '*a' → logprob: -14.125127792358398
    8. '][' → logprob: -14.625127792358398
    9. ']%' → logprob: -14.750127792358398
    10. '*j' → logprob: -15.000127792358398

Token 2454: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.0013851166004315019
    2. '[b' → logprob: -6.87638521194458
    3. '(inv' → logprob: -9.001384735107422
    4. '[' → logprob: -9.626384735107422
    5. 'pow' → logprob: -9.751384735107422
    6. ' inv' → logprob: -10.001384735107422
    7. 'b' → logprob: -11.001384735107422
    8. '[in' → logprob: -11.876384735107422
    9. 'fac' → logprob: -12.126384735107422
    10. 'ans' → logprob: -12.126384735107422

Token 2455: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.02325386554002762
    2. '[b' → logprob: -3.773253917694092
    3. '[' → logprob: -11.898253440856934
    4. '```' → logprob: -14.773253440856934
    5. '[(' → logprob: -14.898253440856934
    6. '   ' → logprob: -14.898253440856934
    7. '[c' → logprob: -16.02325439453125
    8. 'a' → logprob: -16.27325439453125
    9. ' [' → logprob: -16.64825439453125
    10. '[
' → logprob: -16.89825439453125

Token 2456: '-b' (ID: 2118)
  Prédit: '-b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-b' → logprob: -0.012524607591331005
    2. '[b' → logprob: -5.262524604797363
    3. '-a' → logprob: -5.512524604797363
    4. '[a' → logprob: -6.512524604797363
    5. '[-' → logprob: -6.762524604797363
    6. '[' → logprob: -8.137524604797363
    7. '-' → logprob: -9.137524604797363
    8. ' -' → logprob: -9.762524604797363
    9. '-[' → logprob: -10.012524604797363
    10. '#' → logprob: -11.012524604797363

Token 2457: ']%' (ID: 158002)
  Prédit: ']%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']%' → logprob: -0.03012254647910595
    2. '%' → logprob: -3.5301225185394287
    3. ']' → logprob: -7.905122756958008
    4. ')%' → logprob: -13.530122756958008
    5. '%n' → logprob: -15.030122756958008
    6. ' %' → logprob: -15.155122756958008
    7. '()%' → logprob: -15.280122756958008
    8. ']
' → logprob: -15.780122756958008
    9. '%b' → logprob: -15.905122756958008
    10. '[' → logprob: -16.030122756958008

Token 2458: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -4.060365608893335e-05
    2. ' mod' → logprob: -11.125041007995605
    3. '(mod' → logprob: -11.250041007995605
    4. 'b' → logprob: -11.375041007995605
    5. '%' → logprob: -14.125041007995605
    6. '(' → logprob: -15.500041007995605
    7. '	mod' → logprob: -16.12504005432129
    8. '[' → logprob: -16.50004005432129
    9. 'pow' → logprob: -17.00004005432129
    10. 'mods' → logprob: -17.12504005432129

Token 2459: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.38600629568099976
    2. '
' → logprob: -1.5110063552856445
    3. '<|end|>' → logprob: -3.2610063552856445
    4. '   ' → logprob: -3.5110063552856445
    5. '[n' → logprob: -4.7610063552856445
    6. '\n' → logprob: -5.0110063552856445
    7. '[' → logprob: -5.2610063552856445
    8. 'a' → logprob: -5.5110063552856445
    9. '(n' → logprob: -5.8860063552856445
    10. ' n' → logprob: -7.2610063552856445

Token 2460: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.031211959198117256
    2. '<|end|>' → logprob: -4.156211853027344
    3. 'fac' → logprob: -4.406211853027344
    4. '[n' → logprob: -6.906211853027344
    5. '[' → logprob: -6.906211853027344
    6. '<|end|>' → logprob: -8.031211853027344
    7. '(n' → logprob: -9.031211853027344
    8. '\n' → logprob: -9.406211853027344
    9. '#' → logprob: -9.656211853027344
    10. '_n' → logprob: -9.906211853027344

Token 2461: ',k' (ID: 35155)
  Prédit: ',k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.006376414094120264
    2. ',' → logprob: -5.131376266479492
    3. ',F' → logprob: -8.506376266479492
    4. ',b' → logprob: -9.631376266479492
    5. ',f' → logprob: -10.381376266479492
    6. ',n' → logprob: -10.881376266479492
    7. ' ,' → logprob: -10.881376266479492
    8. '#' → logprob: -11.006376266479492
    9. 'k' → logprob: -11.256376266479492
    10. '=' → logprob: -11.506376266479492

Token 2462: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6684439778327942
    2. ' =' → logprob: -1.0434439182281494
    3. '[' → logprob: -3.1684439182281494
    4. '   ' → logprob: -3.2934439182281494
    5. ',' → logprob: -3.7934439182281494
    6. '[]' → logprob: -5.0434441566467285
    7. '+' → logprob: -5.1684441566467285
    8. '+=' → logprob: -5.7934441566467285
    9. '#' → logprob: -5.9184441566467285
    10. ' +=' → logprob: -6.0434441566467285

Token 2463: ' LI' (ID: 14875)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.00997623335570097
    2. ' LI' → logprob: -4.634976387023926
    3. '[' → logprob: -9.009976387023926
    4. 'LS' → logprob: -10.134976387023926
    5. 'L' → logprob: -10.509976387023926
    6. 'list' → logprob: -12.009976387023926
    7. 'map' → logprob: -12.134976387023926
    8. 'li' → logprob: -12.884976387023926
    9. '[L' → logprob: -13.009976387023926
    10. '(L' → logprob: -13.509976387023926

Token 2464: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.011054071597754955
    2. '()' → logprob: -4.511054039001465
    3. '()
' → logprob: -12.261054039001465
    4. '()[' → logprob: -14.886054039001465
    5. '#' → logprob: -15.261054039001465
    6. '   ' → logprob: -15.511054039001465
    7. '#
' → logprob: -15.636054039001465
    8. '()\' → logprob: -16.01105499267578
    9. '[]
' → logprob: -16.51105499267578
    10. '(
' → logprob: -16.63605499267578

Token 2465: 'if' (ID: 366)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.014168208464980125
    2. 'if' → logprob: -4.2641682624816895
    3. 'for' → logprob: -13.389167785644531
    4. 'fa' → logprob: -14.514167785644531
    5. '#' → logprob: -14.764167785644531
    6. 'fact' → logprob: -15.014167785644531
    7. '```' → logprob: -15.139167785644531
    8. '_fac' → logprob: -15.264167785644531
    9. 'fas' → logprob: -15.514167785644531
    10. '.fac' → logprob: -15.889167785644531

Token 2466: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11425167322158813
    2. ' n' → logprob: -2.2392516136169434
    3. 'k' → logprob: -6.614251613616943
    4. ' k' → logprob: -9.489252090454102
    5. 'not' → logprob: -13.239252090454102
    6. '   ' → logprob: -13.739252090454102
    7. '	n' → logprob: -13.801752090454102
    8. '0' → logprob: -13.864252090454102
    9. ' not' → logprob: -13.864252090454102
    10. ' ' → logprob: -14.114252090454102

Token 2467: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.1886000633239746
    2. ' <' → logprob: -2.0636000633239746
    3. '>' → logprob: -3.3136000633239746
    4. ' >' → logprob: -4.813600063323975
    5. '<n' → logprob: -7.938600063323975
    6. '<
' → logprob: -12.438600540161133
    7. '[' → logprob: -12.563600540161133
    8. '>=' → logprob: -12.938600540161133
    9. ' ' → logprob: -13.313600540161133
    10. '==' → logprob: -13.563600540161133

Token 2468: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0004147032741457224
    2. '0' → logprob: -8.000414848327637
    3. ' k' → logprob: -9.500414848327637
    4. ' ' → logprob: -13.125414848327637
    5. '5' → logprob: -13.750414848327637
    6. '=' → logprob: -14.375414848327637
    7. '=k' → logprob: -14.875414848327637
    8. '1' → logprob: -16.50041389465332
    9. '	k' → logprob: -16.87541389465332
    10. '   ' → logprob: -16.87541389465332

Token 2469: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2015693485736847
    2. ':' → logprob: -1.7015693187713623
    3. '   ' → logprob: -9.826569557189941
    4. ':
' → logprob: -9.951569557189941
    5. ':return' → logprob: -10.701569557189941
    6. '):
' → logprob: -11.701569557189941
    7. '-' → logprob: -11.951569557189941
    8. ':

' → logprob: -12.201569557189941
    9. ' :
' → logprob: -12.826569557189941
    10. '+' → logprob: -13.076569557189941

Token 2470: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5661889910697937
    2. ':
' → logprob: -1.0661890506744385
    3. ':' → logprob: -2.4411890506744385
    4. 'print' → logprob: -7.316188812255859
    5. '):
' → logprob: -9.56618881225586
    6. '):' → logprob: -10.19118881225586
    7. '[' → logprob: -10.31618881225586
    8. ')' → logprob: -10.81618881225586
    9. ' print' → logprob: -10.81618881225586
    10. ' ' → logprob: -10.94118881225586

Token 2471: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0009785055881366134
    2. ' print' → logprob: -7.000978469848633
    3. '   ' → logprob: -9.625978469848633
    4. '
' → logprob: -15.500978469848633
    5. ' ' → logprob: -15.750978469848633
    6. '	print' → logprob: -15.875978469848633
    7. '(print' → logprob: -15.875978469848633
    8. 'return' → logprob: -16.125978469848633
    9. '```' → logprob: -16.250978469848633
    10. '       ' → logprob: -16.625978469848633

Token 2472: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02324908785521984
    2. '(' → logprob: -3.7732491493225098
    3. ' ' → logprob: -13.398248672485352
    4. '(
' → logprob: -13.523248672485352
    5. '   ' → logprob: -15.023248672485352
    6. '```' → logprob: -15.898248672485352
    7. '
' → logprob: -16.02324867248535
    8. '()' → logprob: -16.14824867248535
    9. '()
' → logprob: -16.77324867248535
    10. ' (' → logprob: -17.02324867248535

Token 2473: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -15.000000953674316
    3. '(' → logprob: -15.750000953674316
    4. '"' → logprob: -16.125
    5. '   ' → logprob: -16.75
    6. '
' → logprob: -18.125
    7. '1' → logprob: -18.375
    8. '```' → logprob: -18.75
    9. '000' → logprob: -18.875
    10. ''' → logprob: -19.0

Token 2474: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.19534741342067719
    2. ')' → logprob: -1.8203474283218384
    3. '   ' → logprob: -4.195347309112549
    4. ')
' → logprob: -9.195347785949707
    5. '):
' → logprob: -9.195347785949707
    6. ')return' → logprob: -9.570347785949707
    7. ')n' → logprob: -10.070347785949707
    8. ':
' → logprob: -10.195347785949707
    9. '()' → logprob: -11.070347785949707
    10. ' )
' → logprob: -12.070347785949707

Token 2475: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000251326389843598
    2. 'else' → logprob: -9.250251770019531
    3. ')' → logprob: -9.500251770019531
    4. '       ' → logprob: -10.250251770019531
    5. 'print' → logprob: -10.500251770019531
    6. ')
' → logprob: -11.375251770019531
    7. '    
' → logprob: -13.750251770019531
    8. '
' → logprob: -14.000251770019531
    9. '[' → logprob: -14.125251770019531
    10. '#' → logprob: -14.500251770019531

Token 2476: ' quit' (ID: 27737)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027171950787305832
    2. ' ' → logprob: -5.027172088623047
    3. '       ' → logprob: -5.402172088623047
    4. ')' → logprob: -5.402172088623047
    5. 'quit' (adapté à ' quit') → logprob: -5.652172088623047
    6. ')
' → logprob: -5.902172088623047
    7. 'print' → logprob: -6.402172088623047
    8. ' quit' → logprob: -7.277172088623047
    9. '
' → logprob: -7.527172088623047
    10. '    ' → logprob: -7.902172088623047

Token 2477: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.01819840632379055
    2. '()' → logprob: -4.018198490142822
    3. '()
' → logprob: -10.018198013305664
    4. '()\' → logprob: -13.643198013305664
    5. '())
' → logprob: -14.143198013305664
    6. '()

' → logprob: -14.643198013305664
    7. '   ' → logprob: -14.893198013305664
    8. '(
' → logprob: -14.893198013305664
    9. 'n' → logprob: -15.018198013305664
    10. 'print' → logprob: -15.643198013305664

Token 2478: 'fac' (ID: 34429)
  Prédit: 'fac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.005686668679118156
    2. 'for' → logprob: -5.2556867599487305
    3. '   ' → logprob: -7.7556867599487305
    4. '
' → logprob: -12.13068675994873
    5. ' fac' → logprob: -12.25568675994873
    6. 'facet' → logprob: -12.63068675994873
    7. ' for' → logprob: -13.25568675994873
    8. '[' → logprob: -13.38068675994873
    9. 'f' → logprob: -13.75568675994873
    10. '_fac' → logprob: -13.88068675994873

Token 2479: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6789453625679016
    2. '[' → logprob: -0.9289453625679016
    3. '=' → logprob: -3.178945302963257
    4. '=[' → logprob: -3.428945302963257
    5. '[k' → logprob: -4.803945541381836
    6. '[n' → logprob: -5.053945541381836
    7. '[i' → logprob: -5.928945541381836
    8. '<|end|>' → logprob: -6.428945541381836
    9. '[a' → logprob: -6.678945541381836
    10. ' =[' → logprob: -6.928945541381836

Token 2480: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0052342405542731285
    2. ' [' → logprob: -5.255234241485596
    3. '[n' → logprob: -15.630233764648438
    4. '<|end|>' → logprob: -16.880233764648438
    5. '[len' → logprob: -17.005233764648438
    6. '[int' → logprob: -18.005233764648438
    7. '[k' → logprob: -18.005233764648438
    8. '[...,' → logprob: -18.255233764648438
    9. '```' → logprob: -18.755233764648438
    10. ' ' → logprob: -19.005233764648438

Token 2481: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002218415029346943
    2. 'k' → logprob: -6.127218246459961
    3. 'None' → logprob: -11.002218246459961
    4. '0' → logprob: -12.502218246459961
    5. 'n' → logprob: -12.627218246459961
    6. ' ' → logprob: -12.877218246459961
    7. '(k' → logprob: -13.377218246459961
    8. ' k' → logprob: -13.627218246459961
    9. '[k' → logprob: -13.752218246459961
    10. '[' → logprob: -14.002218246459961

Token 2482: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07891006022691727
    2. ' for' → logprob: -2.5789101123809814
    3. '[' → logprob: -11.453909873962402
    4. '<|end|>' → logprob: -12.078909873962402
    5. '	for' → logprob: -12.703909873962402
    6. ')' → logprob: -15.453909873962402
    7. ' ' → logprob: -15.703909873962402
    8. '   ' → logprob: -16.07891082763672
    9. '_for' → logprob: -16.20391082763672
    10. '
' → logprob: -16.32891082763672

Token 2483: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.17645587027072906
    2. 'i' → logprob: -1.9264558553695679
    3. ' range' → logprob: -4.301455974578857
    4. '(i' → logprob: -6.801455974578857
    5. ' i' → logprob: -7.176455974578857
    6. '(range' → logprob: -7.926455974578857
    7. 'k' → logprob: -8.9264554977417
    8. 'for' → logprob: -10.0514554977417
    9. 'in' → logprob: -10.3014554977417
    10. '(k' → logprob: -10.4264554977417

Token 2484: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3831828832626343
    2. 'range' → logprob: -1.5081828832626343
    3. 'for' → logprob: -2.883183002471924
    4. ' in' → logprob: -3.508183002471924
    5. '(range' → logprob: -4.633183002471924
    6. ' range' → logprob: -6.758183002471924
    7. '(i' → logprob: -9.633182525634766
    8. ' for' → logprob: -9.758182525634766
    9. 'i' → logprob: -10.383182525634766
    10. 'import' → logprob: -10.758182525634766

Token 2485: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02342168241739273
    2. ' range' → logprob: -3.7734217643737793
    3. '(range' → logprob: -8.648421287536621
    4. '(k' → logprob: -14.773421287536621
    5. '	range' → logprob: -16.398422241210938
    6. 'k' → logprob: -16.648422241210938
    7. '   ' → logprob: -17.148422241210938
    8. 'int' → logprob: -17.398422241210938
    9. ' ' → logprob: -17.898422241210938
    10. 'for' → logprob: -18.273422241210938

Token 2486: '(n' (ID: 2406)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.00021831797494087368
    2. '(n' → logprob: -8.750218391418457
    3. 'k' → logprob: -10.125218391418457
    4. 'range' → logprob: -11.125218391418457
    5. '(' → logprob: -13.000218391418457
    6. '(range' → logprob: -13.500218391418457
    7. ' (' → logprob: -14.500218391418457
    8. 'n' → logprob: -15.375218391418457
    9. '
' → logprob: -16.25021743774414
    10. '(max' → logprob: -16.62521743774414

Token 2487: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00024631983251310885
    2. '+k' → logprob: -8.750246047973633
    3. ' +' → logprob: -9.500246047973633
    4. ')]
' → logprob: -12.625246047973633
    5. '+
' → logprob: -13.125246047973633
    6. ')]' → logprob: -13.250246047973633
    7. ')][' → logprob: -13.625246047973633
    8. '+n' → logprob: -14.125246047973633
    9. '[' → logprob: -14.500246047973633
    10. '+j' → logprob: -15.125246047973633

Token 2488: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2278454303741455
    2. '+' → logprob: -1.6028454303741455
    3. 'k' → logprob: -6.977845191955566
    4. ' ' → logprob: -7.227845191955566
    5. '+k' → logprob: -7.602845191955566
    6. '
' → logprob: -9.477845191955566
    7. ' +' → logprob: -9.602845191955566
    8. ' k' → logprob: -10.102845191955566
    9. ']+' → logprob: -10.602845191955566
    10. ')]' → logprob: -10.727845191955566

Token 2489: ')]
' (ID: 11587)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.04129721224308014
    2. ']' → logprob: -3.291297197341919
    3. ')]
' → logprob: -6.166297435760498
    4. ']
' → logprob: -7.416297435760498
    5. ')]' → logprob: -7.666297435760498
    6. ')
' → logprob: -9.91629695892334
    7. ')' → logprob: -10.79129695892334
    8. ' ]
' → logprob: -12.79129695892334
    9. ')]
' → logprob: -12.79129695892334
    10. '()]
' → logprob: -12.91629695892334

Token 2490: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.080963092041202e-06
    2. ' for' → logprob: -12.500004768371582
    3. 'fac' → logprob: -14.250004768371582
    4. '	for' → logprob: -15.500004768371582
    5. '   ' → logprob: -15.875004768371582
    6. 'For' → logprob: -16.2500057220459
    7. '[' → logprob: -16.2500057220459
    8. '
' → logprob: -17.6250057220459
    9. '```' → logprob: -17.6250057220459
    10. '#' → logprob: -19.3750057220459

Token 2491: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.297462171758525e-05
    2. ' i' → logprob: -10.375033378601074
    3. 'range' → logprob: -14.750033378601074
    4. '(i' → logprob: -15.375033378601074
    5. 'in' → logprob: -15.375033378601074
    6. 'import' → logprob: -15.750033378601074
    7. '	i' → logprob: -15.750033378601074
    8. '1' → logprob: -16.125032424926758
    9. '   ' → logprob: -16.500032424926758
    10. 'int' → logprob: -16.625032424926758

Token 2492: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3494836390018463
    2. 'in' → logprob: -1.224483609199524
    3. 'i' → logprob: -7.974483489990234
    4. '(i' → logprob: -7.974483489990234
    5. 'for' → logprob: -8.974483489990234
    6. '(' → logprob: -10.224483489990234
    7. 'range' → logprob: -10.224483489990234
    8. '[i' → logprob: -10.349483489990234
    9. ' i' → logprob: -11.099483489990234
    10. '
' → logprob: -11.099483489990234

Token 2493: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.5491004129871726e-05
    2. ' range' → logprob: -10.000045776367188
    3. 'in' → logprob: -17.000045776367188
    4. '(range' → logprob: -17.000045776367188
    5. 'i' → logprob: -17.750045776367188
    6. '	range' → logprob: -19.500045776367188
    7. '
' → logprob: -20.250045776367188
    8. ' ' → logprob: -21.000045776367188
    9. 'n' → logprob: -21.000045776367188
    10. '   ' → logprob: -21.375045776367188

Token 2494: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25412407517433167
    2. 'range' → logprob: -1.5041240453720093
    3. '(n' → logprob: -6.129124164581299
    4. '(range' → logprob: -12.37912368774414
    5. ' range' → logprob: -12.87912368774414
    6. '
' → logprob: -12.87912368774414
    7. '[n' → logprob: -13.37912368774414
    8. '(' → logprob: -13.62912368774414
    9. '1' → logprob: -14.25412368774414
    10. '	n' → logprob: -15.25412368774414

Token 2495: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.11513219773769379
    2. '):' → logprob: -2.2401320934295654
    3. '):
' → logprob: -6.1151323318481445
    4. ']:
' → logprob: -10.115132331848145
    5. ']:' → logprob: -10.740132331848145
    6. '+' → logprob: -10.990132331848145
    7. ':' → logprob: -12.240132331848145
    8. 'n' → logprob: -12.865132331848145
    9. '[' → logprob: -12.865132331848145
    10. '   ' → logprob: -13.740132331848145

Token 2496: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010393260978162289
    2. ' fac' → logprob: -4.635393142700195
    3. '	f' → logprob: -7.885393142700195
    4. 'fac' → logprob: -8.510393142700195
    5. '   ' → logprob: -10.260393142700195
    6. '_fac' → logprob: -11.760393142700195
    7. ' faci' → logprob: -12.510393142700195
    8. '   ' → logprob: -13.010393142700195
    9. '       ' → logprob: -13.510393142700195
    10. '.fac' → logprob: -14.010393142700195

Token 2497: ' fac' (ID: 3513)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' (adapté à ' fac') → logprob: -0.038058701902627945
    2. ' fac' → logprob: -3.2880587577819824
    3. '_fac' → logprob: -11.538058280944824
    4. '   ' → logprob: -12.288058280944824
    5. '.fac' → logprob: -13.663058280944824
    6. 'Fac' → logprob: -13.913058280944824
    7. 'facet' → logprob: -15.163058280944824
    8. ' faci' → logprob: -15.413058280944824
    9. 'fas' → logprob: -15.913058280944824
    10. 'f' → logprob: -16.53805923461914

Token 2498: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00025645215646363795
    2. 'i' → logprob: -8.375256538391113
    3. '(i' → logprob: -11.125256538391113
    4. '[' → logprob: -12.250256538391113
    5. 'fac' → logprob: -12.250256538391113
    6. '
' → logprob: -14.875256538391113
    7. '[
' → logprob: -15.375256538391113
    8. '   ' → logprob: -15.625256538391113
    9. '```' → logprob: -15.750256538391113
    10. '[(' → logprob: -16.125255584716797

Token 2499: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.438573680294212e-06
    2. ' +' → logprob: -12.625005722045898
    3. '+i' → logprob: -13.750005722045898
    4. '1' → logprob: -14.875005722045898
    5. '[' → logprob: -15.125005722045898
    6. '+]' → logprob: -15.500005722045898
    7. ']+' → logprob: -16.7500057220459
    8. ']' → logprob: -17.1250057220459
    9. '+
' → logprob: -17.5000057220459
    10. '   ' → logprob: -17.6250057220459

Token 2500: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.860340752406046e-05
    2. '+' → logprob: -10.2500581741333
    3. 'i' → logprob: -10.7500581741333
    4. 'n' → logprob: -14.7500581741333
    5. '   ' → logprob: -15.2500581741333
    6. 'fac' → logprob: -15.2500581741333
    7. ']' → logprob: -15.3750581741333
    8. '```' → logprob: -15.7500581741333
    9. ' ' → logprob: -16.000059127807617
    10. '
' → logprob: -16.000059127807617

Token 2501: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09616009145975113
    2. '=' → logprob: -2.5961601734161377
    3. ' =' → logprob: -4.471159934997559
    4. ']=' → logprob: -5.346159934997559
    5. '   ' → logprob: -7.471159934997559
    6. ' ]' → logprob: -9.096159934997559
    7. ')' → logprob: -9.096159934997559
    8. '[' → logprob: -10.596159934997559
    9. '#' → logprob: -10.846159934997559
    10. 'fac' → logprob: -11.346159934997559

Token 2502: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687992095947266
    2. ' =' → logprob: -1.1368799209594727
    3. ']' → logprob: -13.136879920959473
    4. '*=' → logprob: -13.761879920959473
    5. ' *=' → logprob: -14.011879920959473
    6. ')' → logprob: -14.136879920959473
    7. ' ' → logprob: -14.261879920959473
    8. '   ' → logprob: -14.261879920959473
    9. ']=' → logprob: -14.386879920959473
    10. '=
' → logprob: -14.636879920959473

Token 2503: ' fac' (ID: 3513)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.0019298245897516608
    2. ' fac' → logprob: -6.251929759979248
    3. 'fas' → logprob: -14.501930236816406
    4. '_fac' → logprob: -15.001930236816406
    5. '.fac' → logprob: -15.751930236816406
    6. 'Fac' → logprob: -16.501930236816406
    7. 'fact' → logprob: -17.126930236816406
    8. 'fab' → logprob: -17.751930236816406
    9. 'facet' → logprob: -17.751930236816406
    10. 'fa' → logprob: -18.126930236816406

Token 2504: '[i' (ID: 1768)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.026339197531342506
    2. '(i' → logprob: -4.401339054107666
    3. ' fac' → logprob: -4.776339054107666
    4. '[i' → logprob: -5.276339054107666
    5. '_fac' → logprob: -9.401339530944824
    6. 'i' → logprob: -9.901339530944824
    7. '```' → logprob: -10.901339530944824
    8. ' (' → logprob: -11.776339530944824
    9. 'Fac' → logprob: -11.776339530944824
    10. '(f' → logprob: -12.151339530944824

Token 2505: ']*(' (ID: 92627)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.0009131324477493763
    2. '*' → logprob: -7.000913143157959
    3. ']*(' → logprob: -13.7509126663208
    4. '*((' → logprob: -15.0009126663208
    5. ')*(' → logprob: -16.125913619995117
    6. '**' → logprob: -16.375913619995117
    7. ' *' → logprob: -16.500913619995117
    8. ' *(' → logprob: -17.375913619995117
    9. '*[' → logprob: -17.625913619995117
    10. '   ' → logprob: -17.625913619995117

Token 2506: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0010844941716641188
    2. 'fac' → logprob: -7.876084327697754
    3. '(i' → logprob: -8.001084327697754
    4. ' i' → logprob: -8.126084327697754
    5. '[i' → logprob: -10.501084327697754
    6. '   ' → logprob: -11.126084327697754
    7. 'k' → logprob: -11.501084327697754
    8. ' (' → logprob: -12.751084327697754
    9. 'mod' → logprob: -13.126084327697754
    10. '(n' → logprob: -13.126084327697754

Token 2507: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0020429599098861217
    2. ' +' → logprob: -6.627042770385742
    3. '1' → logprob: -7.252042770385742
    4. '+i' → logprob: -13.002042770385742
    5. '```' → logprob: -13.627042770385742
    6. '[' → logprob: -13.877042770385742
    7. '+
' → logprob: -13.877042770385742
    8. ' ' → logprob: -14.002042770385742
    9. '+k' → logprob: -14.627042770385742
    10. '+j' → logprob: -15.502042770385742

Token 2508: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028451753314584494
    2. ' ' → logprob: -6.502845287322998
    3. '+' → logprob: -6.627845287322998
    4. ' +' → logprob: -11.25284481048584
    5. '
' → logprob: -13.50284481048584
    6. '0' → logprob: -13.62784481048584
    7. '```' → logprob: -14.62784481048584
    8. '   ' → logprob: -14.87784481048584
    9. '+
' → logprob: -14.87784481048584
    10. ']' → logprob: -15.12784481048584

Token 2509: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.012270988896489143
    2. '%' → logprob: -4.512270927429199
    3. ')' → logprob: -6.762270927429199
    4. ']%' → logprob: -9.8872709274292
    5. ' %' → logprob: -11.6372709274292
    6. ' )' → logprob: -12.8872709274292
    7. ')
' → logprob: -13.5122709274292
    8. '%)' → logprob: -14.2622709274292
    9. '}%' → logprob: -14.6372709274292
    10. '   ' → logprob: -15.0122709274292

Token 2510: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0001246348983841017
    2. '100' → logprob: -9.75012493133545
    3. ' mod' → logprob: -10.37512493133545
    4. '(mod' → logprob: -10.75012493133545
    5. '(' → logprob: -12.00012493133545
    6. 'm' → logprob: -13.37512493133545
    7. '1' → logprob: -13.37512493133545
    8. '```' → logprob: -13.50012493133545
    9. '
' → logprob: -14.62512493133545
    10. '%' → logprob: -14.75012493133545

Token 2511: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012674692086875439
    2. 'inv' → logprob: -4.387674808502197
    3. '
' → logprob: -9.387674331665039
    4. ' inv' → logprob: -10.387674331665039
    5. '  ' → logprob: -10.887674331665039
    6. '```' → logprob: -11.512674331665039
    7. '    
' → logprob: -12.012674331665039
    8. 'fac' → logprob: -12.387674331665039
    9. ' ' → logprob: -12.637674331665039
    10. '[' → logprob: -12.762674331665039

Token 2512: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.0025051478296518326
    2. 'for' → logprob: -6.127505302429199
    3. '   ' → logprob: -8.7525053024292
    4. ' inv' → logprob: -9.3775053024292
    5. '```' → logprob: -10.0025053024292
    6. '
' → logprob: -10.7525053024292
    7. '[' → logprob: -12.6275053024292
    8. ' for' → logprob: -13.2525053024292
    9. '(inv' → logprob: -13.5025053024292
    10. 'fac' → logprob: -13.8775053024292

Token 2513: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22645948827266693
    2. '=' → logprob: -1.6014595031738281
    3. '[' → logprob: -7.351459503173828
    4. '<|end|>' → logprob: -8.351459503173828
    5. '=[' → logprob: -8.851459503173828
    6. ' =[' → logprob: -11.726459503173828
    7. '=[
' → logprob: -12.476459503173828
    8. ' ' → logprob: -12.851459503173828
    9. '<|end|>' → logprob: -13.601459503173828
    10. '=[]' → logprob: -13.726459503173828

Token 2514: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.703443770878948e-06
    2. '[n' → logprob: -12.125007629394531
    3. ' [' → logprob: -13.125007629394531
    4. 'None' → logprob: -16.00000762939453
    5. '[len' → logprob: -16.75000762939453
    6. '[...,' → logprob: -17.75000762939453
    7. '[N' → logprob: -18.00000762939453
    8. ' ' → logprob: -18.87500762939453
    9. '['' → logprob: -19.50000762939453
    10. 'a' → logprob: -19.50000762939453

Token 2515: 'None' (ID: 8505)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31336331367492676
    2. 'None' → logprob: -1.3133633136749268
    3. '(None' → logprob: -9.813363075256348
    4. '1' → logprob: -10.938363075256348
    5. '[n' → logprob: -11.188363075256348
    6. ' None' → logprob: -12.313363075256348
    7. '```' → logprob: -12.563363075256348
    8. '0' → logprob: -13.313363075256348
    9. '[N' → logprob: -13.438363075256348
    10. ' [' → logprob: -13.813363075256348

Token 2516: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20627525448799133
    2. 'for' → logprob: -1.706275224685669
    3. '[' → logprob: -5.331275463104248
    4. 'For' → logprob: -12.33127498626709
    5. '_for' → logprob: -12.83127498626709
    6. '<|end|>' → logprob: -13.58127498626709
    7. '	for' → logprob: -13.70627498626709
    8. '```' → logprob: -14.58127498626709
    9. ' [' → logprob: -14.95627498626709
    10. '[len' → logprob: -15.08127498626709

Token 2517: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0042259665206074715
    2. 'range' → logprob: -5.504225730895996
    3. '(i' → logprob: -9.504225730895996
    4. ' i' → logprob: -10.129225730895996
    5. ' range' → logprob: -10.629225730895996
    6. '[i' → logprob: -12.129225730895996
    7. 'n' → logprob: -14.004225730895996
    8. '0' → logprob: -14.254225730895996
    9. 'import' → logprob: -14.254225730895996
    10. '(n' → logprob: -14.879225730895996

Token 2518: ' in' (ID: 306)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.16348710656166077
    2. '[n' → logprob: -2.413487195968628
    3. 'for' → logprob: -3.163487195968628
    4. ' for' → logprob: -4.038486957550049
    5. 'range' → logprob: -7.788486957550049
    6. 'n' → logprob: -8.163487434387207
    7. '(range' → logprob: -8.413487434387207
    8. '<n' → logprob: -8.663487434387207
    9. '(' → logprob: -10.038487434387207
    10. 'For' → logprob: -10.413487434387207

Token 2519: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029458390548825264
    2. 'n' → logprob: -4.279458522796631
    3. '(n' → logprob: -4.279458522796631
    4. ' range' → logprob: -6.779458522796631
    5. '(range' → logprob: -8.654458045959473
    6. '[n' → logprob: -11.279458045959473
    7. '
' → logprob: -13.029458045959473
    8. ' n' → logprob: -14.654458045959473
    9. '
' → logprob: -15.029458045959473
    10. 'Range' → logprob: -15.154458045959473

Token 2520: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.10021734237670898
    2. 'n' → logprob: -2.350217342376709
    3. '(' → logprob: -12.100217819213867
    4. '[n' → logprob: -13.350217819213867
    5. '
' → logprob: -14.350217819213867
    6. '0' → logprob: -14.475217819213867
    7. ' (' → logprob: -14.850217819213867
    8. '1' → logprob: -14.975217819213867
    9. 'def' → logprob: -15.225217819213867
    10. '{' → logprob: -15.350217819213867

Token 2521: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001472960808314383
    2. '][' → logprob: -6.6264729499816895
    3. '-' → logprob: -9.126473426818848
    4. '+[' → logprob: -10.751473426818848
    5. '+n' → logprob: -12.626473426818848
    6. '+
' → logprob: -12.876473426818848
    7. ' +' → logprob: -13.126473426818848
    8. '[::-' → logprob: -13.251473426818848
    9. '[' → logprob: -13.501473426818848
    10. '+i' → logprob: -13.876473426818848

Token 2522: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16097314655780792
    2. '1' → logprob: -1.9109731912612915
    3. '-' → logprob: -7.910973072052002
    4. '```' → logprob: -8.53597354888916
    5. ']+' → logprob: -10.28597354888916
    6. '+
' → logprob: -10.66097354888916
    7. 'i' → logprob: -11.03597354888916
    8. 'n' → logprob: -11.03597354888916
    9. '
' → logprob: -11.28597354888916
    10. ']' → logprob: -11.53597354888916

Token 2523: ')]
' (ID: 11587)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.004295638296753168
    2. ']' → logprob: -5.504295825958252
    3. ']
' → logprob: -8.504295349121094
    4. 'for' → logprob: -11.754295349121094
    5. ']()
' → logprob: -13.004295349121094
    6. '[' → logprob: -14.129295349121094
    7. '()]
' → logprob: -14.254295349121094
    8. ')]
' → logprob: -14.879295349121094
    9. '[::-' → logprob: -15.004295349121094
    10. ']'
' → logprob: -15.004295349121094

Token 2524: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -9.088346359931165e-07
    2. 'inf' → logprob: -15.000000953674316
    3. '[' → logprob: -16.0
    4. ' inv' → logprob: -16.0
    5. 'for' → logprob: -16.5
    6. '```' → logprob: -16.875
    7. '(inv' → logprob: -17.625
    8. 'import' → logprob: -18.0
    9. '   ' → logprob: -18.125
    10. '.inv' → logprob: -18.25

Token 2525: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.07444725930690765
    2. '[' → logprob: -2.9494471549987793
    3. '[k' → logprob: -3.9494471549987793
    4. ' =' → logprob: -10.699447631835938
    5. 'n' → logprob: -11.199447631835938
    6. '=' → logprob: -11.324447631835938
    7. '[len' → logprob: -11.324447631835938
    8. '[-' → logprob: -11.574447631835938
    9. '=n' → logprob: -11.574447631835938
    10. '[
' → logprob: -12.074447631835938

Token 2526: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004332560580223799
    2. ']=' → logprob: -5.754332542419434
    3. '[i' → logprob: -7.129332542419434
    4. '[n' → logprob: -8.879332542419434
    5. '-' → logprob: -9.004332542419434
    6. '=' → logprob: -11.004332542419434
    7. 'n' → logprob: -11.379332542419434
    8. '   ' → logprob: -11.379332542419434
    9. '][' → logprob: -11.754332542419434
    10. '[' → logprob: -11.879332542419434

Token 2527: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014602496288716793
    2. ' =' → logprob: -4.2646026611328125
    3. ']' → logprob: -8.514602661132812
    4. '=
' → logprob: -9.014602661132812
    5. ']=' → logprob: -10.139602661132812
    6. '=k' → logprob: -10.389602661132812
    7. '[' → logprob: -10.889602661132812
    8. '=n' → logprob: -11.639602661132812
    9. '   ' → logprob: -11.764602661132812
    10. ' ' → logprob: -12.764602661132812

Token 2528: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -2.7610454708337784e-05
    2. ' pow' → logprob: -10.500027656555176
    3. '(pow' → logprob: -18.00002670288086
    4. '.pow' → logprob: -19.62502670288086
    5. 'p' → logprob: -20.12502670288086
    6. 'Pow' → logprob: -20.25002670288086
    7. 'po' → logprob: -20.37502670288086
    8. '_pow' → logprob: -20.87502670288086
    9. 'pw' → logprob: -21.62502670288086
    10. 'pot' → logprob: -21.87502670288086

Token 2529: '(f' (ID: 1526)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.0024758970830589533
    2. '(f' → logprob: -6.002475738525391
    3. ' fac' → logprob: -15.75247573852539
    4. '_fac' → logprob: -17.00247573852539
    5. '.fac' → logprob: -17.37747573852539
    6. 'Fac' → logprob: -17.37747573852539
    7. 'f' → logprob: -19.37747573852539
    8. 'fas' → logprob: -19.37747573852539
    9. 'fab' → logprob: -19.87747573852539
    10. '	f' → logprob: -20.37747573852539

Token 2530: 'ac' (ID: 359)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.47423774003982544
    2. 'ac' → logprob: -0.9742377400398254
    3. '[' → logprob: -9.099237442016602
    4. '_fac' → logprob: -10.599237442016602
    5. ' fac' → logprob: -11.849237442016602
    6. '.fac' → logprob: -11.849237442016602
    7. 'acl' → logprob: -13.599237442016602
    8. 'Fac' → logprob: -13.599237442016602
    9. '[
' → logprob: -13.974237442016602
    10. 'acf' → logprob: -14.724237442016602

Token 2531: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0001427538663847372
    2. 'n' → logprob: -8.875143051147461
    3. '[' → logprob: -13.375143051147461
    4. '(n' → logprob: -14.625143051147461
    5. '[
' → logprob: -14.875143051147461
    6. '
' → logprob: -15.500143051147461
    7. '[f' → logprob: -15.625143051147461
    8. '```' → logprob: -16.00014305114746
    9. '	n' → logprob: -16.62514305114746
    10. '[-' → logprob: -17.50014305114746

Token 2532: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.09706069529056549
    2. ',' → logprob: -3.0970606803894043
    3. ',n' → logprob: -3.8470606803894043
    4. '[n' → logprob: -3.8470606803894043
    5. '-' → logprob: -6.347060680389404
    6. ']' → logprob: -7.097060680389404
    7. '(n' → logprob: -7.597060680389404
    8. 'n' → logprob: -7.597060680389404
    9. '-n' → logprob: -8.472061157226562
    10. '```' → logprob: -8.597061157226562

Token 2533: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: 0.0
    2. ' mod' → logprob: -18.375
    3. '(mod' → logprob: -18.625
    4. '	mod' → logprob: -20.125
    5. '100' → logprob: -22.625
    6. '
' → logprob: -22.625
    7. 'MOD' → logprob: -23.0
    8. '10' → logprob: -24.25
    9. 'modal' → logprob: -24.375
    10. '   ' → logprob: -24.875

Token 2534: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.128163257315464e-07
    2. ' -' → logprob: -15.5
    3. '-n' → logprob: -20.625
    4. '   ' → logprob: -22.625
    5. '-
' → logprob: -22.625
    6. '−' → logprob: -22.625
    7. '-mod' → logprob: -23.5
    8. ',n' → logprob: -23.5
    9. '-,' → logprob: -23.625
    10. 'n' → logprob: -23.75

Token 2535: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.875001907348633
    3. '-' → logprob: -14.937501907348633
    4. '
' → logprob: -16.062501907348633
    5. '２' → logprob: -17.187501907348633
    6. '```' → logprob: -17.250001907348633
    7. '   ' → logprob: -17.625001907348633
    8. '۲' → logprob: -18.062501907348633
    9. '
' → logprob: -18.062501907348633
    10. '' → logprob: -18.312501907348633

Token 2536: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8624639324116288e-06
    2. ',n' → logprob: -14.375001907348633
    3. ' ,' → logprob: -14.500001907348633
    4. '   ' → logprob: -14.750001907348633
    5. '	' → logprob: -15.875001907348633
    6. '```' → logprob: -16.875001907348633
    7. ',
' → logprob: -17.875001907348633
    8. ')' → logprob: -18.000001907348633
    9. ',module' → logprob: -18.000001907348633
    10. ',int' → logprob: -18.250001907348633

Token 2537: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -9.088346359931165e-07
    2. 'n' → logprob: -14.250000953674316
    3. ' mod' → logprob: -15.750000953674316
    4. '(mod' → logprob: -16.125
    5. '	mod' → logprob: -17.0
    6. '
' → logprob: -19.625
    7. '0' → logprob: -20.625
    8. '1' → logprob: -20.875
    9. 'MOD' → logprob: -21.375
    10. '-' → logprob: -21.5

Token 2538: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06202280893921852
    2. ')' → logprob: -2.8120229244232178
    3. ')
' → logprob: -10.812023162841797
    4. '   ' → logprob: -11.187023162841797
    5. 'for' → logprob: -11.562023162841797
    6. '```' → logprob: -12.187023162841797
    7. '
' → logprob: -12.937023162841797
    8. '[' → logprob: -14.062023162841797
    9. ')[' → logprob: -14.812023162841797
    10. ')`
' → logprob: -15.187023162841797

Token 2539: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0016616161447018385
    2. ' for' → logprob: -6.501661777496338
    3. '   ' → logprob: -8.87666130065918
    4. '	for' → logprob: -11.12666130065918
    5. '```' → logprob: -13.12666130065918
    6. '
' → logprob: -13.50166130065918
    7. '[' → logprob: -14.00166130065918
    8. 'For' → logprob: -14.87666130065918
    9. '<|end|>' → logprob: -16.12666130065918
    10. 'i' → logprob: -17.25166130065918

Token 2540: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -8.061054359131958e-06
    2. ' i' → logprob: -11.750007629394531
    3. 'n' → logprob: -15.625007629394531
    4. '	i' → logprob: -17.12500762939453
    5. '(i' → logprob: -18.25000762939453
    6. '```' → logprob: -19.25000762939453
    7. '[i' → logprob: -19.50000762939453
    8. 'I' → logprob: -19.62500762939453
    9. '
' → logprob: -20.00000762939453
    10. '#' → logprob: -20.25000762939453

Token 2541: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08939185738563538
    2. 'in' → logprob: -2.4643919467926025
    3. 'n' → logprob: -7.964391708374023
    4. 'i' → logprob: -9.714391708374023
    5. '(n' → logprob: -10.964391708374023
    6. 'In' → logprob: -11.714391708374023
    7. '
' → logprob: -12.089391708374023
    8. '[n' → logprob: -12.214391708374023
    9. ' i' → logprob: -13.089391708374023
    10. '[i' → logprob: -14.089391708374023

Token 2542: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.3915141355246305e-05
    2. '(range' → logprob: -11.00002384185791
    3. ' range' → logprob: -11.87502384185791
    4. '(n' → logprob: -16.250024795532227
    5. 'list' → logprob: -17.250024795532227
    6. 'n' → logprob: -17.375024795532227
    7. '[n' → logprob: -18.625024795532227
    8. '
' → logprob: -18.750024795532227
    9. 're' → logprob: -20.500024795532227
    10. 'rang' → logprob: -20.500024795532227

Token 2543: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009144435753114522
    2. 'n' → logprob: -7.500914573669434
    3. 'range' → logprob: -8.000914573669434
    4. '(range' → logprob: -11.250914573669434
    5. ' range' → logprob: -11.875914573669434
    6. '
' → logprob: -12.625914573669434
    7. '(' → logprob: -13.500914573669434
    8. '[n' → logprob: -13.750914573669434
    9. ' (' → logprob: -15.000914573669434
    10. '```' → logprob: -16.375913619995117

Token 2544: ')[' (ID: 13637)
  Prédit: ')['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.6465118527412415
    2. '-' → logprob: -0.7715118527412415
    3. '[::-' → logprob: -4.646512031555176
    4. '[:-' → logprob: -6.646512031555176
    5. '[' → logprob: -6.646512031555176
    6. '[-' → logprob: -7.646512031555176
    7. '[i' → logprob: -8.021512031555176
    8. ' -' → logprob: -8.146512031555176
    9. '[n' → logprob: -8.271512031555176
    10. '][' → logprob: -10.271512031555176

Token 2545: '::-' (ID: 96612)
  Prédit: '::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::-' → logprob: -0.04423053190112114
    2. '[::-' → logprob: -3.1692304611206055
    3. ':-' → logprob: -7.6692304611206055
    4. '[:-' → logprob: -7.7942304611206055
    5. '-' → logprob: -8.044230461120605
    6. '```' → logprob: -11.919230461120605
    7. ':' → logprob: -12.169230461120605
    8. '[' → logprob: -12.294230461120605
    9. '::' → logprob: -12.419230461120605
    10. '1' → logprob: -12.544230461120605

Token 2546: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001709209755063057
    2. '::-' → logprob: -6.376708984375
    3. '```' → logprob: -12.876708984375
    4. '-' → logprob: -13.376708984375
    5. '[::-' → logprob: -14.001708984375
    6. ':' → logprob: -14.251708984375
    7. '﻿' → logprob: -14.251708984375
    8. ':-' → logprob: -15.376708984375
    9. '
' → logprob: -16.001708984375
    10. '2' → logprob: -16.001708984375

Token 2547: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022009292617440224
    2. ':
' → logprob: -4.147009372711182
    3. ']:' → logprob: -5.522009372711182
    4. ']:
' → logprob: -6.272009372711182
    5. '   ' → logprob: -11.147008895874023
    6. ':i' → logprob: -11.147008895874023
    7. '>:' → logprob: -11.772008895874023
    8. '<|end|>' → logprob: -12.147008895874023
    9. ']' → logprob: -12.647008895874023
    10. ']:
' → logprob: -12.897008895874023

Token 2548: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001785112835932523
    2. '       ' → logprob: -9.250178337097168
    3. 'inv' → logprob: -9.625178337097168
    4. ' inv' → logprob: -11.375178337097168
    5. 'i' → logprob: -13.250178337097168
    6. ' i' → logprob: -14.375178337097168
    7. ' ' → logprob: -14.375178337097168
    8. '  ' → logprob: -14.625178337097168
    9. '    ' → logprob: -14.750178337097168
    10. '           ' → logprob: -15.000178337097168

Token 2549: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' (adapté à ' inv') → logprob: -0.8115302324295044
    2. '   ' → logprob: -1.0615302324295044
    3. ' inv' → logprob: -1.5615302324295044
    4. '       ' → logprob: -10.311530113220215
    5. '```' → logprob: -11.061530113220215
    6. '    ' → logprob: -11.561530113220215
    7. '(inv' → logprob: -12.061530113220215
    8. '_inv' → logprob: -12.061530113220215
    9. 'i' → logprob: -12.561530113220215
    10. ' ' → logprob: -13.186530113220215

Token 2550: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.4849443838757e-06
    2. '[' → logprob: -13.125004768371582
    3. '   ' → logprob: -13.875004768371582
    4. '[
' → logprob: -14.125004768371582
    5. '[I' → logprob: -15.125004768371582
    6. 'i' → logprob: -15.500004768371582
    7. '```' → logprob: -15.625004768371582
    8. '[n' → logprob: -16.625003814697266
    9. '	i' → logprob: -17.000003814697266
    10. '<|end|>' → logprob: -17.000003814697266

Token 2551: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.24680353701114655
    2. '[i' → logprob: -1.6218035221099854
    3. '=' → logprob: -4.2468037605285645
    4. '   ' → logprob: -5.9968037605285645
    5. ' =' → logprob: -6.1218037605285645
    6. ']=' → logprob: -6.4968037605285645
    7. '=i' → logprob: -7.7468037605285645
    8. '[' → logprob: -9.371803283691406
    9. '(i' → logprob: -10.496803283691406
    10. '#' → logprob: -10.496803283691406

Token 2552: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012241669930517673
    2. ' =' → logprob: -4.512241840362549
    3. '[i' → logprob: -6.762241840362549
    4. '=i' → logprob: -10.51224136352539
    5. '[' → logprob: -12.01224136352539
    6. '   ' → logprob: -13.26224136352539
    7. ']' → logprob: -14.01224136352539
    8. '=[' → logprob: -16.13724136352539
    9. ' ' → logprob: -16.13724136352539
    10. ')' → logprob: -16.26224136352539

Token 2553: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.0040799472481012344
    2. ' inv' → logprob: -5.504079818725586
    3. '(inv' → logprob: -13.504079818725586
    4. '   ' → logprob: -17.254079818725586
    5. '[' → logprob: -17.629079818725586
    6. '.inv' → logprob: -18.129079818725586
    7. '_inv' → logprob: -18.754079818725586
    8. 'in' → logprob: -18.879079818725586
    9. 'inf' → logprob: -19.129079818725586
    10. ' ' → logprob: -19.254079818725586

Token 2554: '[i' (ID: 1768)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.213838130235672
    2. '[i' → logprob: -1.7138381004333496
    3. '[' → logprob: -5.33883810043335
    4. '(inv' → logprob: -5.46383810043335
    5. 'i' → logprob: -6.96383810043335
    6. '(i' → logprob: -7.46383810043335
    7. '[in' → logprob: -7.83883810043335
    8. ' inv' → logprob: -7.96383810043335
    9. '[n' → logprob: -8.338838577270508
    10. '(' → logprob: -8.963838577270508

Token 2555: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001195467310026288
    2. '[' → logprob: -7.376195430755615
    3. '[i' → logprob: -7.501195430755615
    4. '+[' → logprob: -11.376195907592773
    5. '+i' → logprob: -13.126195907592773
    6. '[F' → logprob: -13.626195907592773
    7. '+
' → logprob: -14.376195907592773
    8. '```' → logprob: -15.126195907592773
    9. '   ' → logprob: -15.751195907592773
    10. '1' → logprob: -15.751195907592773

Token 2556: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. '+' → logprob: -14.125000953674316
    3. ' ' → logprob: -15.000000953674316
    4. 'i' → logprob: -17.000001907348633
    5. '   ' → logprob: -18.000001907348633
    6. '
' → logprob: -18.000001907348633
    7. '(' → logprob: -18.125001907348633
    8. ']' → logprob: -18.500001907348633
    9. 'F' → logprob: -18.500001907348633
    10. '0' → logprob: -18.750001907348633

Token 2557: ']*(' (ID: 92627)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.00026085900026373565
    2. ']*(' → logprob: -8.875261306762695
    3. '*' → logprob: -9.125261306762695
    4. '*((' → logprob: -12.000261306762695
    5. ')*(' → logprob: -12.125261306762695
    6. '   ' → logprob: -16.000261306762695
    7. ' *' → logprob: -16.125261306762695
    8. '#' → logprob: -16.125261306762695
    9. '**' → logprob: -16.375261306762695
    10. '```' → logprob: -17.125261306762695

Token 2558: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.991464786347933e-05
    2. '(i' → logprob: -9.750060081481934
    3. ' i' → logprob: -14.000060081481934
    4. '[i' → logprob: -14.250060081481934
    5. '   ' → logprob: -16.500059127807617
    6. '{i' → logprob: -17.250059127807617
    7. '	i' → logprob: -18.125059127807617
    8. ' ' → logprob: -20.125059127807617
    9. 'n' → logprob: -20.125059127807617
    10. '
' → logprob: -20.250059127807617

Token 2559: '+' (ID: 10)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.09696462005376816
    2. '+' → logprob: -2.4719645977020264
    3. '+i' → logprob: -4.8469648361206055
    4. '[' → logprob: -9.721964836120605
    5. 'i' → logprob: -10.846964836120605
    6. '+
' → logprob: -11.471964836120605
    7. '
' → logprob: -11.596964836120605
    8. '```' → logprob: -11.721964836120605
    9. '   ' → logprob: -11.846964836120605
    10. '+[' → logprob: -11.971964836120605

Token 2560: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03646744787693024
    2. '(' → logprob: -3.9114675521850586
    3. '(i' → logprob: -4.411467552185059
    4. 'i' → logprob: -6.161467552185059
    5. '-' → logprob: -7.536467552185059
    6. '(n' → logprob: -8.411467552185059
    7. '(b' → logprob: -8.411467552185059
    8. '[i' → logprob: -8.786467552185059
    9. 'b' → logprob: -9.161467552185059
    10. '0' → logprob: -9.286467552185059

Token 2561: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.2759731113910675
    2. '%' → logprob: -1.5259730815887451
    3. ']%' → logprob: -3.775973081588745
    4. ')' → logprob: -7.650973320007324
    5. '()%' → logprob: -8.650973320007324
    6. '%)' → logprob: -9.525973320007324
    7. '}%' → logprob: -10.275973320007324
    8. '%n' → logprob: -10.650973320007324
    9. '#' → logprob: -11.275973320007324
    10. '%
' → logprob: -11.400973320007324

Token 2562: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.06981325894594193
    2. '%' → logprob: -2.8198132514953613
    3. '1' → logprob: -5.694813251495361
    4. '```' → logprob: -6.694813251495361
    5. '#' → logprob: -7.319813251495361
    6. 'i' → logprob: -7.319813251495361
    7. ' mod' → logprob: -8.19481372833252
    8. '-' → logprob: -8.19481372833252
    9. '%i' → logprob: -8.69481372833252
    10. '0' → logprob: -8.94481372833252

Token 2563: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2564: 'print' (ID: 1598)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21522389352321625
    2. 'for' → logprob: -1.8402239084243774
    3. 'print' → logprob: -3.465223789215088
    4. ')' → logprob: -6.840223789215088
    5. ' for' → logprob: -6.840223789215088
    6. '<|end|>' → logprob: -7.715223789215088
    7. '```' → logprob: -8.090224266052246
    8. '       ' → logprob: -8.965224266052246
    9. 'inv' → logprob: -8.965224266052246
    10. '[' → logprob: -9.090224266052246

Token 2565: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.00014358828775584698
    2. 'com' → logprob: -9.500144004821777
    3. 'fac' → logprob: -10.125144004821777
    4. 'comb' → logprob: -10.500144004821777
    5. '(f' → logprob: -14.000144004821777
    6. ' comb' → logprob: -16.25014305114746
    7. 'pow' → logprob: -17.25014305114746
    8. '(' → logprob: -17.75014305114746
    9. '(pow' → logprob: -17.87514305114746
    10. '<com' → logprob: -17.87514305114746

Token 2566: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.45848218582978e-06
    2. '
' → logprob: -13.50000286102295
    3. '[b' → logprob: -15.50000286102295
    4. 'o' → logprob: -15.75000286102295
    5. '(b' → logprob: -16.500001907348633
    6. '(
' → logprob: -16.625001907348633
    7. 'f' → logprob: -16.750001907348633
    8. '[' → logprob: -16.875001907348633
    9. '[n' → logprob: -17.125001907348633
    10. '(n' → logprob: -17.250001907348633

Token 2567: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.013204234652221203
    2. 'n' → logprob: -4.888204097747803
    3. '(k' → logprob: -5.263204097747803
    4. 'k' → logprob: -8.013204574584961
    5. '[n' → logprob: -10.763204574584961
    6. '(
' → logprob: -10.763204574584961
    7. ')' → logprob: -11.513204574584961
    8. '(' → logprob: -11.888204574584961
    9. ')n' → logprob: -12.388204574584961
    10. '
' → logprob: -13.013204574584961

Token 2568: '-' (ID: 12)
  Prédit: ',k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.17093656957149506
    2. ',n' → logprob: -1.9209365844726562
    3. ',' → logprob: -4.545936584472656
    4. '(n' → logprob: -10.545936584472656
    5. '(k' → logprob: -12.045936584472656
    6. ',
' → logprob: -13.170936584472656
    7. 'n' → logprob: -13.670936584472656
    8. 'k' → logprob: -13.670936584472656
    9. ',f' → logprob: -13.670936584472656
    10. ' ,' → logprob: -13.920936584472656

Token 2569: '1' (ID: 16)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0003370118502061814
    2. '1' → logprob: -8.000336647033691
    3. ')' → logprob: -14.500336647033691
    4. ' k' → logprob: -14.750336647033691
    5. ',k' → logprob: -15.500336647033691
    6. '2' → logprob: -16.000337600708008
    7. '(' → logprob: -16.125337600708008
    8. 'n' → logprob: -16.250337600708008
    9. '(k' → logprob: -16.750337600708008
    10. '[' → logprob: -16.750337600708008

Token 2570: ',n' (ID: 18103)
  Prédit: ',k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.06280554085969925
    2. ',' → logprob: -3.187805652618408
    3. ',n' → logprob: -3.937805652618408
    4. ',[' → logprob: -10.43780517578125
    5. '[k' → logprob: -10.81280517578125
    6. ',
' → logprob: -11.43780517578125
    7. ',f' → logprob: -11.68780517578125
    8. '[' → logprob: -11.93780517578125
    9. '],[' → logprob: -12.18780517578125
    10. ']' → logprob: -12.31280517578125

Token 2571: '-k' (ID: 10897)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.001125094946473837
    2. '-k' → logprob: -6.876124858856201
    3. ')' → logprob: -10.62612533569336
    4. '1' → logprob: -11.12612533569336
    5. ' -' → logprob: -11.25112533569336
    6. 'k' → logprob: -11.37612533569336
    7. ')-' → logprob: -12.00112533569336
    8. '[' → logprob: -12.12612533569336
    9. '-f' → logprob: -12.25112533569336
    10. '-n' → logprob: -12.75112533569336

Token 2572: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024871744215488434
    2. '-' → logprob: -4.024871826171875
    3. '])' → logprob: -6.149871826171875
    4. '+' → logprob: -6.274871826171875
    5. '))' → logprob: -6.399871826171875
    6. '-n' → logprob: -8.024871826171875
    7. ']' → logprob: -9.024871826171875
    8. '[' → logprob: -9.274871826171875
    9. ')]' → logprob: -9.524871826171875
    10. '-)' → logprob: -9.649871826171875

Token 2573: '"""
' (ID: 15611)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3707912862300873
    2. '()' → logprob: -1.3707913160324097
    3. '<|end|>' → logprob: -3.62079119682312
    4. '(' → logprob: -4.370791435241699
    5. '#' → logprob: -5.120791435241699
    6. '()
' → logprob: -5.245791435241699
    7. '(
' → logprob: -6.370791435241699
    8. ']' → logprob: -6.995791435241699
    9. '```' → logprob: -7.245791435241699
    10. '
' → logprob: -7.370791435241699

Token 2574: '#' (ID: 2)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4052600860595703
    2. '#' → logprob: -2.5302600860595703
    3. ')' → logprob: -2.7802600860595703
    4. '   ' → logprob: -2.9052600860595703
    5. ' ' → logprob: -3.0302600860595703
    6. '<|end|>' → logprob: -3.9052600860595703
    7. 'for' → logprob: -4.53026008605957
    8. '[i' → logprob: -4.65526008605957
    9. ']' → logprob: -4.78026008605957
    10. 'i' → logprob: -5.40526008605957

Token 2575: '5' (ID: 20)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1749025136232376
    2. '#' → logprob: -3.0499024391174316
    3. '   ' → logprob: -3.2999024391174316
    4. ' ' → logprob: -4.174902439117432
    5. ')' → logprob: -4.549902439117432
    6. '[i' → logprob: -4.549902439117432
    7. '=' → logprob: -5.049902439117432
    8. 'for' → logprob: -5.174902439117432
    9. ']' → logprob: -5.424902439117432
    10. 'n' → logprob: -5.799902439117432

Token 2576: '_G' (ID: 5459)
  Prédit: '_F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_F' → logprob: -0.36683154106140137
    2. '_' → logprob: -2.4918315410614014
    3. 'F' → logprob: -2.7418315410614014
    4. '_A' → logprob: -3.1168315410614014
    5. '#' → logprob: -3.7418315410614014
    6. '[' → logprob: -3.9918315410614014
    7. '"""' → logprob: -4.4918317794799805
    8. 'def' → logprob: -4.7418317794799805
    9. '_D' → logprob: -4.8668317794799805
    10. '<|end|>' → logprob: -4.8668317794799805

Token 2577: '

' (ID: 279)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.06429954618215561
    2. '"""
' → logprob: -2.8142995834350586
    3. '#' → logprob: -6.564299583435059
    4. '""' → logprob: -7.564299583435059
    5. '<|end|>' → logprob: -9.064299583435059
    6. 'n' → logprob: -9.439299583435059
    7. '("""' → logprob: -10.064299583435059
    8. '"' → logprob: -10.314299583435059
    9. '```' → logprob: -10.689299583435059
    10. '"""

' → logprob: -10.939299583435059

Token 2578: '#' (ID: 2)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.30951693654060364
    2. '"""
' → logprob: -1.8095169067382812
    3. 'n' → logprob: -2.3095169067382812
    4. '#' → logprob: -6.309516906738281
    5. '""' → logprob: -6.934516906738281
    6. 'def' → logprob: -8.809516906738281
    7. '
' → logprob: -9.684516906738281
    8. '"' → logprob: -9.809516906738281
    9. '"""

' → logprob: -10.059516906738281
    10. '""""' → logprob: -11.309516906738281

Token 2579: '5' (ID: 20)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1504395008087158
    2. '"""
' → logprob: -1.1504395008087158
    3. '"""' → logprob: -1.2754395008087158
    4. 'def' → logprob: -3.025439500808716
    5. '#' → logprob: -3.650439500808716
    6. '""' → logprob: -4.650439262390137
    7. 'import' → logprob: -6.400439262390137
    8. 'from' → logprob: -7.525439262390137
    9. 'pass' → logprob: -7.900439262390137
    10. '"' → logprob: -8.525439262390137

Token 2580: '_H' (ID: 4391)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.21750053763389587
    2. '"""' → logprob: -1.9675005674362183
    3. 'n' → logprob: -3.2175004482269287
    4. '_G' → logprob: -5.717500686645508
    5. '#' → logprob: -5.717500686645508
    6. '""' → logprob: -6.092500686645508
    7. '_' → logprob: -6.467500686645508
    8. 'def' → logprob: -6.467500686645508
    9. '_n' → logprob: -6.717500686645508
    10. 'A' → logprob: -7.842500686645508

Token 2581: '

' (ID: 279)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.05821865424513817
    2. 'pass' → logprob: -3.5582187175750732
    3. '"""
' → logprob: -4.683218479156494
    4. 'n' → logprob: -5.183218479156494
    5. '""' → logprob: -5.308218479156494
    6. '#' → logprob: -5.308218479156494
    7. '...' → logprob: -6.183218479156494
    8. ' pass' → logprob: -7.933218479156494
    9. '<|end|>' → logprob: -8.308218955993652
    10. 'def' → logprob: -8.558218955993652

Token 2582: '#' (ID: 2)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.8990604281425476
    2. '<|end|>' → logprob: -1.1490604877471924
    3. '#' → logprob: -1.8990604877471924
    4. 'n' → logprob: -2.2740604877471924
    5. '""' → logprob: -4.274060249328613
    6. '<|end|>' → logprob: -6.024060249328613
    7. 'pass' → logprob: -6.274060249328613
    8. '"""
' → logprob: -6.774060249328613
    9. '...' → logprob: -6.774060249328613
    10. '```' → logprob: -6.774060249328613

Token 2583: '5' (ID: 20)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.361035019159317
    2. 'n' → logprob: -1.3610349893569946
    3. '#' → logprob: -3.611035108566284
    4. '""' → logprob: -4.736034870147705
    5. '<|end|>' → logprob: -5.986034870147705
    6. '"""
' → logprob: -5.986034870147705
    7. '"' → logprob: -6.236034870147705
    8. '```' → logprob: -6.986034870147705
    9. 'pass' → logprob: -7.611034870147705
    10. '...' → logprob: -8.111035346984863

Token 2584: '_I' (ID: 19118)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7949798107147217
    2. '"""' → logprob: -0.9199798107147217
    3. '#' → logprob: -2.1699798107147217
    4. 'def' → logprob: -4.544980049133301
    5. '""' → logprob: -4.919980049133301
    6. '"""
' → logprob: -5.544980049133301
    7. '[' → logprob: -6.044980049133301
    8. '"' → logprob: -6.294980049133301
    9. '=' → logprob: -6.419980049133301
    10. 's' → logprob: -7.294980049133301

Token 2585: '

' (ID: 279)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -1.0256770849227905
    2. '#' → logprob: -1.6506770849227905
    3. 'n' → logprob: -1.6506770849227905
    4. '<|end|>' → logprob: -2.40067720413208
    5. 'pass' → logprob: -2.77567720413208
    6. '"""
' → logprob: -3.77567720413208
    7. 'def' → logprob: -4.02567720413208
    8. '""' → logprob: -4.02567720413208
    9. '[' → logprob: -5.02567720413208
    10. '<|end|>' → logprob: -5.15067720413208

Token 2586: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20134063065052032
    2. '"""' → logprob: -2.701340675354004
    3. '#' → logprob: -2.826340675354004
    4. '<|end|>' → logprob: -4.201340675354004
    5. 'v' → logprob: -4.826340675354004
    6. 'def' → logprob: -5.076340675354004
    7. '""' → logprob: -5.451340675354004
    8. 'pass' → logprob: -5.451340675354004
    9. 'w' → logprob: -5.701340675354004
    10. '"""
' → logprob: -5.826340675354004

Token 2587: '5' (ID: 20)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16959045827388763
    2. '#' → logprob: -2.669590473175049
    3. '[' → logprob: -3.044590473175049
    4. 'v' → logprob: -4.294590473175049
    5. '"""' → logprob: -5.419590473175049
    6. 'a' → logprob: -6.044590473175049
    7. '[n' → logprob: -6.294590473175049
    8. '"""
' → logprob: -6.544590473175049
    9. ' ' → logprob: -6.544590473175049
    10. ')' → logprob: -6.669590473175049

Token 2588: '_J' (ID: 22788)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0003725290298462
    2. '[' → logprob: -1.2503725290298462
    3. '_' → logprob: -2.1253724098205566
    4. '"""' → logprob: -3.0003724098205566
    5. 'G' → logprob: -3.5003724098205566
    6. 'n' → logprob: -3.6253724098205566
    7. 'I' → logprob: -3.7503724098205566
    8. '_G' → logprob: -4.125372409820557
    9. ']' → logprob: -4.125372409820557
    10. ')' → logprob: -4.750372409820557

Token 2589: '

' (ID: 279)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2647514343261719
    2. '"""' → logprob: -2.264751434326172
    3. '#' → logprob: -2.389751434326172
    4. '[' → logprob: -4.889751434326172
    5. 'v' → logprob: -5.014751434326172
    6. '"""
' → logprob: -5.514751434326172
    7. '""' → logprob: -6.014751434326172
    8. 'def' → logprob: -6.389751434326172
    9. '(n' → logprob: -6.389751434326172
    10. '=' → logprob: -6.889751434326172

Token 2590: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20295721292495728
    2. '#' → logprob: -2.5779571533203125
    3. '"""' → logprob: -2.8279571533203125
    4. '<|end|>' → logprob: -3.7029571533203125
    5. 'pass' → logprob: -4.7029571533203125
    6. 'def' → logprob: -6.0779571533203125
    7. '""' → logprob: -6.2029571533203125
    8. '"""
' → logprob: -6.2029571533203125
    9. 'v' → logprob: -6.3279571533203125
    10. '```' → logprob: -7.2029571533203125

Token 2591: '5' (ID: 20)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4408246576786041
    2. '"""' → logprob: -1.6908246278762817
    3. '#' → logprob: -2.1908247470855713
    4. '[' → logprob: -3.5658247470855713
    5. '"""
' → logprob: -5.065824508666992
    6. '""' → logprob: -5.690824508666992
    7. 'd' → logprob: -6.065824508666992
    8. 'v' → logprob: -6.315824508666992
    9. '"' → logprob: -6.565824508666992
    10. 's' → logprob: -6.690824508666992

Token 2592: '_K' (ID: 20555)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.563478410243988
    2. '_' → logprob: -1.1884784698486328
    3. '"""' → logprob: -2.688478469848633
    4. '_G' → logprob: -3.938478469848633
    5. 'G' → logprob: -4.813478469848633
    6. 'n' → logprob: -5.188478469848633
    7. '_n' → logprob: -5.438478469848633
    8. '""' → logprob: -5.563478469848633
    9. 'I' → logprob: -6.188478469848633
    10. 'J' → logprob: -6.313478469848633

Token 2593: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.48810911178588867
    2. 'n' → logprob: -1.6131091117858887
    3. '<|end|>' → logprob: -2.4881091117858887
    4. '[' → logprob: -3.4881091117858887
    5. ')' → logprob: -4.363109111785889
    6. 'def' → logprob: -4.488109111785889
    7. '"""' → logprob: -4.863109111785889
    8. ']' → logprob: -5.363109111785889
    9. ' #' → logprob: -5.363109111785889
    10. 'for' → logprob: -5.488109111785889

Token 2594: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7357735633850098
    2. '#' → logprob: -1.3607735633850098
    3. ' ' → logprob: -2.4857735633850098
    4. '[' → logprob: -2.6107735633850098
    5. '<|end|>' → logprob: -3.1107735633850098
    6. ' #' → logprob: -4.11077356338501
    7. '0' → logprob: -4.73577356338501
    8. ')' → logprob: -5.48577356338501
    9. 'for' → logprob: -5.61077356338501
    10. '   ' → logprob: -5.73577356338501

Token 2595: '5' (ID: 20)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6500055193901062
    2. '#' → logprob: -1.275005578994751
    3. '"""' → logprob: -1.775005578994751
    4. '<|end|>' → logprob: -4.650005340576172
    5. '[' → logprob: -5.900005340576172
    6. '"""
' → logprob: -5.900005340576172
    7. '""' → logprob: -6.025005340576172
    8. 'v' → logprob: -6.400005340576172
    9. 'a' → logprob: -6.775005340576172
    10. '...' → logprob: -7.025005340576172

Token 2596: '_L' (ID: 4258)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.861859917640686
    2. 'n' → logprob: -1.111859917640686
    3. '_' → logprob: -2.2368597984313965
    4. '"""' → logprob: -2.7368597984313965
    5. 'G' → logprob: -4.1118597984313965
    6. '_G' → logprob: -4.7368597984313965
    7. 'A' → logprob: -4.7368597984313965
    8. '[' → logprob: -5.2368597984313965
    9. 'def' → logprob: -5.4868597984313965
    10. '_n' → logprob: -5.4868597984313965


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 2594
Tokens correctement prédits (1ère position, stricte): 1041
Tokens correctement prédits (1ère position, avec adaptation): 1098
Tokens correctement prédits (top 10): 2238
Précision stricte (1ère position): 40.13%
Précision adaptée (1ère position): 42.33%
Précision (top 10): 86.28%
================================================================================
