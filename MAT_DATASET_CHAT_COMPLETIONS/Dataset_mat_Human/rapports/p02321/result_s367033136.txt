================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys, re
from collections import deque, defaultdict, Counter
from math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians
from itertools import accumulate, permutations, combinations, product
from operator import itemgetter, mul
from copy import deepcopy
from string import ascii_lowercase, ascii_uppercase, digits
from bisect import bisect, bisect_left
from fractions import gcd
from heapq import heappush, heappop
from functools import reduce

def input(): return sys.stdin.readline().strip()
def INT(): return int(input())
def MAP(): return map(int, input().split())
def LIST(): return list(map(int, input().split()))
sys.setrecursionlimit(10 ** 9)
INF = float('inf')
mod = 10 ** 9 + 7

def main():
	N, W = MAP()

	n1 = N // 2
	n2 = N - n1

	vw1 = [[0, 0]]
	vw2 = [[0, 0]]

	for _ in range(n1):
		v, w = MAP()
		for i in range(len(vw1)):
			p = vw1[i].copy()
			p[0] += v
			p[1] += w
			vw1.append(p)

	for _ in range(n2):
		v, w = MAP()
		for i in range(len(vw2)):
			p = vw2[i].copy()
			p[0] += v
			p[1] += w
			vw2.append(p)
	vw1.sort(key=lambda x:(x[1], -x[0]))
	vw2.sort(key=lambda x:(x[1], -x[0]))
	tmp_v = 0
	for i in range(1<<n2):  # 要素数を減らさずに無駄な荷物を除く
		v, w = vw2[i]
		if tmp_v < v:
			tmp_v = v
		else:
			vw2[i][0] = tmp_v

	idx1 = 0
	idx2 = 2 ** n2 - 1
	ans = 0
	while idx1 < 2 ** n1 and idx2 >= 0:  # しゃくとり法
		v1, w1 = vw1[idx1]
		v2, w2 = vw2[idx2]
		while idx2 > 0 and w1 + w2 > W:
			idx2 -= 1
			v2, w2 = vw2[idx2]
		if w1 + w2 <= W:
			v_sum = v1 + v2
			ans = ans if ans > v_sum else v_sum
		idx1 += 1

	print(ans)

if __name__ == '__main__':
	main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' re' (ID: 322)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.0031796174589544535
    2. ' os' → logprob: -5.753179550170898
    3. 'io' → logprob: -13.503179550170898
    4. '"os' → logprob: -15.378179550170898
    5. 'math' → logprob: -15.503179550170898
    6. 'json' → logprob: -16.5031795501709
    7. 're' → logprob: -16.6281795501709
    8. '	os' → logprob: -18.2531795501709
    9. 'sub' → logprob: -18.5031795501709
    10. '_os' → logprob: -18.7531795501709

Token 4: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.04123853147029877
    2. ',' → logprob: -5.041238307952881
    3. 'import' → logprob: -5.041238307952881
    4. '.' → logprob: -5.041238307952881
    5. '' → logprob: -5.166238307952881
    6. '<|end|>' → logprob: -5.166238307952881
    7. ';' → logprob: -5.791238307952881
    8. '\' → logprob: -6.541238307952881
    9. '
' → logprob: -6.916238307952881
    10. '\r' → logprob: -7.166238307952881

Token 5: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.029892457649111748
    2. '<|end|>' → logprob: -4.529892444610596
    3. ',' → logprob: -5.029892444610596
    4. '' → logprob: -6.279892444610596
    5. 'import' → logprob: -6.279892444610596
    6. '.' → logprob: -6.279892444610596
    7. '
' → logprob: -6.654892444610596
    8. '\' → logprob: -6.779892444610596
    9. '<|end|>' → logprob: -7.279892444610596
    10. '

' → logprob: -7.279892444610596

Token 6: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.41428685188293457
    2. ' collections' → logprob: -1.4142868518829346
    3. ' typing' → logprob: -3.1642868518829346
    4. 'collections' → logprob: -4.0392866134643555
    5. ' ' → logprob: -4.1642866134643555
    6. 'os' → logprob: -4.7892866134643555
    7. ' pathlib' → logprob: -5.4142866134643555
    8. ' ' → logprob: -6.7892866134643555
    9. ' sys' → logprob: -7.1642866134643555
    10. ' math' → logprob: -7.2892866134643555

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.6327185034751892
    2. 'import' → logprob: -0.7577185034751892
    3. ' defaultdict' → logprob: -10.007718086242676
    4. '```' → logprob: -10.882718086242676
    5. '	import' → logprob: -11.257718086242676
    6. 'abc' → logprob: -11.882718086242676
    7. '<|end|>' → logprob: -12.132718086242676
    8. '.' → logprob: -12.132718086242676
    9. ' ' → logprob: -12.257718086242676
    10. '.Counter' → logprob: -12.757718086242676

Token 8: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.15109726786613464
    2. ' deque' → logprob: -2.651097297668457
    3. 'deque' → logprob: -2.776097297668457
    4. 'default' → logprob: -5.401097297668457
    5. ' abc' → logprob: -6.776097297668457
    6. ' named' → logprob: -7.276097297668457
    7. 'named' → logprob: -7.276097297668457
    8. 'abc' → logprob: -8.401097297668457
    9. ' Counter' → logprob: -9.776097297668457
    10. ' default' → logprob: -11.026097297668457

Token 9: ',' (ID: 11)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1966400146484375
    2. '

' → logprob: -1.3216400146484375
    3. '
' → logprob: -1.8216400146484375
    4. ',' → logprob: -2.1966400146484375
    5. 'import' → logprob: -2.8216400146484375
    6. '\' → logprob: -3.1966400146484375
    7. '<|end|>' → logprob: -4.4466400146484375
    8. ' 

' → logprob: -4.5716400146484375
    9. '' → logprob: -4.6966400146484375
    10. '```' → logprob: -5.0716400146484375

Token 10: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.4653222858905792
    2. 'default' → logprob: -1.0903222560882568
    3. 'named' → logprob: -3.590322256088257
    4. ' named' → logprob: -5.590322494506836
    5. 'Ordered' → logprob: -5.715322494506836
    6. 'Counter' → logprob: -7.090322494506836
    7. ' Ordered' → logprob: -8.340322494506836
    8. ' Counter' → logprob: -8.965322494506836
    9. 'deque' → logprob: -10.215322494506836
    10. 'abc' → logprob: -10.715322494506836

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8618619441986084
    2. '
' → logprob: -1.7368619441986084
    3. '

' → logprob: -1.8618619441986084
    4. '<|end|>' → logprob: -2.4868619441986084
    5. 'import' → logprob: -2.8618619441986084
    6. '\n' → logprob: -3.2368619441986084
    7. '```' → logprob: -3.4868619441986084
    8. '' → logprob: -4.8618621826171875
    9. ',
' → logprob: -5.4868621826171875
    10. 'newline' → logprob: -5.7368621826171875

Token 12: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.9454801678657532
    2. ' Counter' → logprob: -1.5704801082611084
    3. 'named' → logprob: -1.8204801082611084
    4. 'Ordered' → logprob: -2.0704801082611084
    5. ' named' → logprob: -2.6954801082611084
    6. ' Ordered' → logprob: -3.1954801082611084
    7. ' defaultdict' → logprob: -5.9454803466796875
    8. ' itertools' → logprob: -6.4454803466796875
    9. 'heap' → logprob: -6.5704803466796875
    10. 'deque' → logprob: -8.195480346679688

Token 13: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2753462791442871
    2. '
' → logprob: -2.775346279144287
    3. '<|end|>' → logprob: -2.775346279144287
    4. '\n' → logprob: -3.025346279144287
    5. 'import' → logprob: -3.525346279144287
    6. '

' → logprob: -4.400346279144287
    7. ',
' → logprob: -4.900346279144287
    8. '' → logprob: -6.025346279144287
    9. '.' → logprob: -6.400346279144287
    10. '\' → logprob: -6.400346279144287

Token 14: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.3206528127193451
    2. ',' → logprob: -2.445652723312378
    3. '
' → logprob: -2.445652723312378
    4. '\n' → logprob: -3.695652723312378
    5. '' → logprob: -3.820652723312378
    6. 'import' → logprob: -4.070652961730957
    7. '\' → logprob: -5.070652961730957
    8. ' 

' → logprob: -5.195652961730957
    9. ',

' → logprob: -5.320652961730957
    10. '```' → logprob: -5.445652961730957

Token 15: ' math' (ID: 13324)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.1576475203037262
    2. ' math' → logprob: -2.5326476097106934
    3. ' heap' → logprob: -3.5326476097106934
    4. ' typing' → logprob: -3.6576476097106934
    5. ' functools' → logprob: -5.157647609710693
    6. ' os' → logprob: -5.657647609710693
    7. 'heap' → logprob: -7.782647609710693
    8. 'math' → logprob: -7.907647609710693
    9. ' operator' → logprob: -8.032647132873535
    10. ' threading' → logprob: -8.657647132873535

Token 16: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.06151862442493439
    2. 'import' → logprob: -2.936518669128418
    3. ' ' → logprob: -5.061518669128418
    4. '	import' → logprob: -9.561518669128418
    5. '<|end|>' → logprob: -9.686518669128418
    6. '.' → logprob: -9.936518669128418
    7. '_import' → logprob: -10.436518669128418
    8. ' ,' → logprob: -11.311518669128418
    9. '<|end|>' → logprob: -11.936518669128418
    10. ',' → logprob: -11.936518669128418

Token 17: ' ceil' (ID: 35964)
  Prédit: ' sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sqrt' → logprob: -0.15926098823547363
    2. ' ceil' → logprob: -2.7842609882354736
    3. ' factorial' → logprob: -3.2842609882354736
    4. 'sqrt' → logprob: -3.6592609882354736
    5. ' inf' → logprob: -4.4092607498168945
    6. ' gcd' → logprob: -5.4092607498168945
    7. ' log' → logprob: -6.2842607498168945
    8. 'ceil' → logprob: -6.9092607498168945
    9. ' floor' → logprob: -7.1592607498168945
    10. ' pi' → logprob: -7.4092607498168945

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3688797056674957
    2. '(' → logprob: -1.4938796758651733
    3. '\' → logprob: -4.118879795074463
    4. '(
' → logprob: -4.493879795074463
    5. 'import' → logprob: -4.493879795074463
    6. '\n' → logprob: -4.743879795074463
    7. '' → logprob: -4.993879795074463
    8. ',
' → logprob: -5.243879795074463
    9. 'def' → logprob: -5.243879795074463
    10. '
' → logprob: -5.368879795074463

Token 19: ' sqrt' (ID: 44237)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.06824083626270294
    2. 'log' → logprob: -3.5682408809661865
    3. 'sqrt' → logprob: -3.8182408809661865
    4. ' floor' → logprob: -4.318240642547607
    5. 'inf' → logprob: -7.068240642547607
    6. 'fabs' → logprob: -7.318240642547607
    7. ' sqrt' → logprob: -8.318241119384766
    8. 'pow' → logprob: -9.068241119384766
    9. 'factor' → logprob: -9.443241119384766
    10. ' log' → logprob: -9.443241119384766

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.161249041557312
    2. 'import' → logprob: -3.2862491607666016
    3. '```' → logprob: -3.4112491607666016
    4. ',
' → logprob: -4.286249160766602
    5. '
' → logprob: -4.536249160766602
    6. '\' → logprob: -4.661249160766602
    7. '\n' → logprob: -4.911249160766602
    8. ',

' → logprob: -4.911249160766602
    9. '

' → logprob: -4.911249160766602
    10. '`' → logprob: -5.161249160766602

Token 21: ' hypot' (ID: 85756)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.8976201415061951
    2. 'log' → logprob: -1.6476202011108398
    3. ' floor' → logprob: -1.8976202011108398
    4. ' factorial' → logprob: -1.8976202011108398
    5. 'pow' → logprob: -3.52262020111084
    6. ' log' → logprob: -3.64762020111084
    7. 'factor' → logprob: -4.02262020111084
    8. ' pow' → logprob: -5.77262020111084
    9. 'sin' → logprob: -5.77262020111084
    10. 'pi' → logprob: -6.02262020111084

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024190904572606087
    2. 'import' → logprob: -5.399190902709961
    3. ',
' → logprob: -5.399190902709961
    4. '<|end|>' → logprob: -5.524190902709961
    5. '
' → logprob: -5.649190902709961
    6. '

' → logprob: -6.399190902709961
    7. '```' → logprob: -6.774190902709961
    8. ',

' → logprob: -7.024190902709961
    9. '\n' → logprob: -7.024190902709961
    10. '' → logprob: -7.024190902709961

Token 23: ' factorial' (ID: 111204)
  Prédit: 'atan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atan' → logprob: -1.197209119796753
    2. 'log' → logprob: -1.697209119796753
    3. 'floor' → logprob: -1.697209119796753
    4. 'sin' → logprob: -2.697209119796753
    5. 'factor' → logprob: -3.072209119796753
    6. 'cos' → logprob: -3.447209119796753
    7. ' factorial' → logprob: -3.447209119796753
    8. 'pow' → logprob: -3.447209119796753
    9. 'acos' → logprob: -3.822209119796753
    10. 'fabs' → logprob: -3.822209119796753

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015530163422226906
    2. ',
' → logprob: -5.765530109405518
    3. '<|end|>' → logprob: -5.890530109405518
    4. 'import' → logprob: -6.390530109405518
    5. '(' → logprob: -6.390530109405518
    6. '
' → logprob: -6.515530109405518
    7. '\n' → logprob: -6.765530109405518
    8. '' → logprob: -7.140530109405518
    9. '\' → logprob: -7.515530109405518
    10. 'def' → logprob: -7.640530109405518

Token 25: ' pi' (ID: 6404)
  Prédit: 'log'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'log' → logprob: -0.23495040833950043
    2. 'pow' → logprob: -2.734950304031372
    3. ' comb' → logprob: -4.109950542449951
    4. ' log' → logprob: -4.109950542449951
    5. 'floor' → logprob: -4.109950542449951
    6. 'inf' → logprob: -4.609950542449951
    7. 'pi' → logprob: -4.609950542449951
    8. 'g' → logprob: -4.984950542449951
    9. 'prod' → logprob: -4.984950542449951
    10. ' pow' → logprob: -4.984950542449951

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03925102576613426
    2. '<|end|>' → logprob: -3.6642510890960693
    3. '
' → logprob: -5.66425085067749
    4. 'import' → logprob: -5.78925085067749
    5. '\n' → logprob: -6.53925085067749
    6. ',
' → logprob: -6.78925085067749
    7. ' ,' → logprob: -7.16425085067749
    8. '' → logprob: -7.28925085067749
    9. ' ' → logprob: -7.41425085067749
    10. ',n' → logprob: -8.414251327514648

Token 27: ' sin' (ID: 2187)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.1249943971633911
    2. 'cos' → logprob: -1.2499943971633911
    3. 'sin' → logprob: -2.1249942779541016
    4. ' e' → logprob: -2.6249942779541016
    5. 'inf' → logprob: -2.6249942779541016
    6. 'log' → logprob: -3.1249942779541016
    7. ' inf' → logprob: -3.7499942779541016
    8. 'pow' → logprob: -4.499994277954102
    9. ' cos' → logprob: -4.499994277954102
    10. 'atan' → logprob: -4.999994277954102

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007715936284512281
    2. '(' → logprob: -5.132715702056885
    3. '<|end|>' → logprob: -7.757715702056885
    4. ')' → logprob: -7.882715702056885
    5. ' ' → logprob: -8.632716178894043
    6. 's' → logprob: -9.007716178894043
    7. ',
' → logprob: -9.132716178894043
    8. ' ,' → logprob: -9.257716178894043
    9. 't' → logprob: -9.382716178894043
    10. ',s' → logprob: -9.882716178894043

Token 29: ' cos' (ID: 8974)
  Prédit: 'cos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cos' → logprob: -0.5232136845588684
    2. ' cos' → logprob: -0.8982136845588684
    3. '<|end|>' → logprob: -11.398213386535645
    4. '_cos' → logprob: -11.648213386535645
    5. 'log' → logprob: -11.898213386535645
    6. 'atan' → logprob: -12.148213386535645
    7. 'os' → logprob: -12.148213386535645
    8. 'ceil' → logprob: -12.273213386535645
    9. 'Cos' → logprob: -12.523213386535645
    10. 'import' → logprob: -12.523213386535645

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03141321241855621
    2. '<|end|>' → logprob: -3.5314133167266846
    3. 'import' → logprob: -8.156413078308105
    4. ',
' → logprob: -8.531413078308105
    5. ' ' → logprob: -8.531413078308105
    6. ',n' → logprob: -8.656413078308105
    7. ' ,' → logprob: -9.031413078308105
    8. '\n' → logprob: -9.156413078308105
    9. ')' → logprob: -9.656413078308105
    10. '<|end|>' → logprob: -9.781413078308105

Token 31: ' radians' (ID: 126525)
  Prédit: 'tan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tan' → logprob: -0.8901883959770203
    2. 'atan' → logprob: -1.265188455581665
    3. ' tan' → logprob: -1.265188455581665
    4. 'log' → logprob: -4.140188217163086
    5. 't' → logprob: -5.265188217163086
    6. ' radians' → logprob: -6.765188217163086
    7. ' log' → logprob: -7.140188217163086
    8. ' atan' → logprob: -7.640188217163086
    9. ' asin' → logprob: -7.640188217163086
    10. ' acos' → logprob: -8.390188217163086

Token 32: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04128897190093994
    2. '<|end|>' → logprob: -3.6662888526916504
    3. ',
' → logprob: -5.79128885269165
    4. '
' → logprob: -5.91628885269165
    5. 'import' → logprob: -6.29128885269165
    6. ' ' → logprob: -6.54128885269165
    7. '\n' → logprob: -6.66628885269165
    8. ' ,' → logprob: -6.91628885269165
    9. '\' → logprob: -7.29128885269165
    10. ')' → logprob: -7.41628885269165

Token 33: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6085537672042847
    2. '

' → logprob: -1.2335537672042847
    3. '
' → logprob: -2.358553886413574
    4. 'import' → logprob: -3.733553886413574
    5. ',

' → logprob: -4.233553886413574
    6. ',
' → logprob: -4.608553886413574
    7. 'def' → logprob: -4.733553886413574
    8. '' → logprob: -6.358553886413574
    9. '<|end|>' → logprob: -6.608553886413574
    10. '


' → logprob: -6.733553886413574

Token 34: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.24888573586940765
    2. ' random' → logprob: -2.1238856315612793
    3. 'random' → logprob: -3.6238856315612793
    4. ' os' → logprob: -3.6238856315612793
    5. ' typing' → logprob: -3.9988856315612793
    6. ' functools' → logprob: -5.248885631561279
    7. ' numpy' → logprob: -5.373885631561279
    8. ' operator' → logprob: -5.498885631561279
    9. ' datetime' → logprob: -6.123885631561279
    10. ' heap' → logprob: -6.123885631561279

Token 35: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.006921391934156418
    2. 'import' → logprob: -5.256921291351318
    3. '.' → logprob: -7.131921291351318
    4. ' ' → logprob: -7.631921291351318
    5. ' .' → logprob: -8.381921768188477
    6. '	import' → logprob: -9.631921768188477
    7. ' itertools' → logprob: -10.131921768188477
    8. '<|end|>' → logprob: -10.756921768188477
    9. '.import' → logprob: -10.881921768188477
    10. '_import' → logprob: -12.256921768188477

Token 36: ' accumulate' (ID: 74226)
  Prédit: ' permutations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.9133044481277466
    2. 'com' → logprob: -1.9133044481277466
    3. ' chain' → logprob: -2.163304328918457
    4. 'product' → logprob: -2.413304328918457
    5. ' product' → logprob: -2.538304328918457
    6. 'per' → logprob: -3.038304328918457
    7. ' accumulate' → logprob: -3.413304328918457
    8. ' combinations' → logprob: -3.788304328918457
    9. 'chain' → logprob: -4.163304328918457
    10. ' cycle' → logprob: -4.413304328918457

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014579820446670055
    2. 'import' → logprob: -5.514579772949219
    3. '<|end|>' → logprob: -5.639579772949219
    4. ',
' → logprob: -5.889579772949219
    5. '\n' → logprob: -6.764579772949219
    6. '
' → logprob: -7.514579772949219
    7. 'from' → logprob: -7.764579772949219
    8. ' ,' → logprob: -7.764579772949219
    9. '\' → logprob: -8.514579772949219
    10. '<|end|>' → logprob: -8.639579772949219

Token 38: ' permutations' (ID: 174595)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -1.3881452083587646
    2. 'group' → logprob: -1.6381452083587646
    3. ' product' → logprob: -2.2631452083587646
    4. 'com' → logprob: -2.2631452083587646
    5. ' group' → logprob: -2.3881452083587646
    6. ' chain' → logprob: -2.6381452083587646
    7. ' permutations' → logprob: -2.6381452083587646
    8. 'chain' → logprob: -2.8881452083587646
    9. 'per' → logprob: -3.1381452083587646
    10. 'count' → logprob: -5.138145446777344

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021519150584936142
    2. '(' → logprob: -4.646519184112549
    3. ',
' → logprob: -5.896519184112549
    4. '<|end|>' → logprob: -6.021519184112549
    5. 'import' → logprob: -6.396519184112549
    6. '\n' → logprob: -6.646519184112549
    7. '(
' → logprob: -6.646519184112549
    8. '\' → logprob: -7.271519184112549
    9. '
' → logprob: -8.02151870727539
    10. 'from' → logprob: -8.64651870727539

Token 40: ' combinations' (ID: 43835)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.7891159057617188
    2. 'com' → logprob: -0.9141159057617188
    3. ' product' → logprob: -2.1641159057617188
    4. ' combinations' → logprob: -3.6641159057617188
    5. 'group' → logprob: -6.539115905761719
    6. 'chain' → logprob: -6.664115905761719
    7. ' group' → logprob: -7.664115905761719
    8. ' chain' → logprob: -7.789115905761719
    9. 'cycle' → logprob: -7.914115905761719
    10. '```' → logprob: -9.164115905761719

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22876878082752228
    2. '\n' → logprob: -1.9787688255310059
    3. ',
' → logprob: -4.103768825531006
    4. '
' → logprob: -4.353768825531006
    5. 'import' → logprob: -4.353768825531006
    6. '<|end|>' → logprob: -4.353768825531006
    7. '\' → logprob: -6.103768825531006
    8. '' → logprob: -6.478768825531006
    9. 'from' → logprob: -6.728768825531006
    10. 'n' → logprob: -7.103768825531006

Token 42: ' product' (ID: 1888)
  Prédit: ' product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.6948726773262024
    2. 'product' → logprob: -0.6948726773262024
    3. ' chain' → logprob: -7.444872856140137
    4. 'chain' → logprob: -7.944872856140137
    5. 'com' → logprob: -8.194872856140137
    6. ' group' → logprob: -8.444872856140137
    7. 'group' → logprob: -8.444872856140137
    8. ' combinations' → logprob: -10.194872856140137
    9. '```' → logprob: -10.694872856140137
    10. 'prod' → logprob: -12.319872856140137

Token 43: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23740608990192413
    2. '
' → logprob: -2.612406015396118
    3. '

' → logprob: -2.737406015396118
    4. '\n' → logprob: -3.487406015396118
    5. 'import' → logprob: -4.237406253814697
    6. ',
' → logprob: -4.487406253814697
    7. '<|end|>' → logprob: -5.112406253814697
    8. '' → logprob: -5.862406253814697
    9. ',

' → logprob: -5.987406253814697
    10. 'from' → logprob: -7.237406253814697

Token 44: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2531237602233887
    2. '

' → logprob: -1.5031237602233887
    3. '\n' → logprob: -2.0031237602233887
    4. '
' → logprob: -2.1281237602233887
    5. 'def' → logprob: -2.6281237602233887
    6. 'import' → logprob: -2.7531237602233887
    7. '#' → logprob: -3.5031237602233887
    8. '<|end|>' → logprob: -3.6281237602233887
    9. '```' → logprob: -4.503123760223389
    10. '' → logprob: -5.378123760223389

Token 45: ' operator' (ID: 11019)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.9390737414360046
    2. ' operator' → logprob: -2.0640738010406494
    3. ' heap' → logprob: -2.1890738010406494
    4. 'random' → logprob: -2.4390738010406494
    5. 'heap' → logprob: -2.5640738010406494
    6. ' random' → logprob: -2.6890738010406494
    7. 'operator' → logprob: -3.0640738010406494
    8. 'fun' → logprob: -3.0640738010406494
    9. 'fra' → logprob: -4.43907356262207
    10. 'math' → logprob: -5.31407356262207

Token 46: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.05309968441724777
    2. 'import' → logprob: -3.0530996322631836
    3. '<|end|>' → logprob: -5.553099632263184
    4. ',' → logprob: -8.178099632263184
    5. '	import' → logprob: -9.178099632263184
    6. ' as' → logprob: -9.428099632263184
    7. ' ,' → logprob: -9.678099632263184
    8. '<|end|>' → logprob: -10.178099632263184
    9. ' ' → logprob: -10.678099632263184
    10. '_import' → logprob: -11.428099632263184

Token 47: ' item' (ID: 2169)
  Prédit: ' item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.019536785781383514
    2. 'item' → logprob: -4.394536972045898
    3. ' attr' → logprob: -5.769536972045898
    4. ' import' → logprob: -6.894536972045898
    5. ' add' → logprob: -7.144536972045898
    6. ' ' → logprob: -7.144536972045898
    7. ' mul' → logprob: -7.269536972045898
    8. ' method' → logprob: -8.394536972045898
    9. '=item' → logprob: -9.769536972045898
    10. '	item' → logprob: -10.019536972045898

Token 48: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.0004965558764524758
    2. 'get' → logprob: -7.6254963874816895
    3. 'getitem' → logprob: -13.000496864318848
    4. 'gett' → logprob: -13.250496864318848
    5. 's' → logprob: -13.375496864318848
    6. 'g' → logprob: -14.250496864318848
    7. 'sort' → logprob: -15.000496864318848
    8. 'attr' → logprob: -15.500496864318848
    9. 'setter' → logprob: -15.625496864318848
    10. 'got' → logprob: -15.750496864318848

Token 49: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: ' mul' (ID: 9975)
  Prédit: 'attr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attr' → logprob: -0.0362054668366909
    2. ' attr' → logprob: -3.411205530166626
    3. 'method' → logprob: -6.286205291748047
    4. 'mul' → logprob: -8.286205291748047
    5. 'add' → logprob: -8.911205291748047
    6. ' method' → logprob: -9.661205291748047
    7. '```' → logprob: -9.786205291748047
    8. ' mul' → logprob: -10.286205291748047
    9. '   ' → logprob: -10.286205291748047
    10. '.attr' → logprob: -10.786205291748047

Token 51: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5675785541534424
    2. '<|end|>' → logprob: -0.9425785541534424
    3. '
' → logprob: -4.192578315734863
    4. '\n' → logprob: -4.442578315734863
    5. 'import' → logprob: -5.317578315734863
    6. ' ' → logprob: -5.692578315734863
    7. '<|end|>' → logprob: -6.442578315734863
    8. '' → logprob: -6.692578315734863
    9. ',
' → logprob: -7.317578315734863
    10. '\' → logprob: -7.567578315734863

Token 52: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.847114622592926
    2. '
' → logprob: -1.3471145629882812
    3. '\n' → logprob: -2.2221145629882812
    4. '

' → logprob: -2.5971145629882812
    5. 'import' → logprob: -3.2221145629882812
    6. '<|end|>' → logprob: -3.3471145629882812
    7. '#' → logprob: -4.097114562988281
    8. ',
' → logprob: -4.722114562988281
    9. '' → logprob: -5.347114562988281
    10. 'def' → logprob: -5.722114562988281

Token 53: ' copy' (ID: 5150)
  Prédit: 'fun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fun' → logprob: -0.695574939250946
    2. ' functools' → logprob: -0.695574939250946
    3. 'os' → logprob: -7.195574760437012
    4. 'random' → logprob: -7.695574760437012
    5. '_fun' → logprob: -7.945574760437012
    6. 'heap' → logprob: -8.070574760437012
    7. 'math' → logprob: -8.820574760437012
    8. ' random' → logprob: -9.070574760437012
    9. 'fra' → logprob: -10.070574760437012
    10. ' heap' → logprob: -10.195574760437012

Token 54: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.014305942691862583
    2. 'import' → logprob: -4.26430606842041
    3. ' ' → logprob: -9.13930606842041
    4. '	import' → logprob: -11.38930606842041
    5. ' im' → logprob: -11.76430606842041
    6. '.deepcopy' → logprob: -12.63930606842041
    7. '_import' → logprob: -12.88930606842041
    8. ' deepcopy' → logprob: -13.13930606842041
    9. ' importar' → logprob: -13.26430606842041
    10. ' impor' → logprob: -13.26430606842041

Token 55: ' deepcopy' (ID: 130230)
  Prédit: ' deepcopy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deepcopy' → logprob: -0.0007830646354705095
    2. '.deepcopy' → logprob: -7.7507829666137695
    3. 'deep' → logprob: -8.25078296661377
    4. ' copy' → logprob: -9.50078296661377
    5. 'copy' → logprob: -11.12578296661377
    6. ' deep' → logprob: -13.50078296661377
    7. ' dee' → logprob: -15.75078296661377
    8. 'dee' → logprob: -16.750783920288086
    9. 'import' → logprob: -17.000783920288086
    10. ' import' → logprob: -17.375783920288086

Token 56: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: 'from' (ID: 2845)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: ' string' (ID: 1621)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.685114324092865
    2. ' math' → logprob: -1.9351143836975098
    3. ' random' → logprob: -2.4351143836975098
    4. ' itertools' → logprob: -2.8101143836975098
    5. ' heap' → logprob: -2.9351143836975098
    6. 'math' → logprob: -3.5601143836975098
    7. ' fractions' → logprob: -3.8101143836975098
    8. 'random' → logprob: -3.9351143836975098
    9. ' typing' → logprob: -4.06011438369751
    10. 'heap' → logprob: -4.43511438369751

Token 59: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.04893841966986656
    2. 'import' → logprob: -3.048938512802124
    3. '<|end|>' → logprob: -8.423938751220703
    4. '	import' → logprob: -9.673938751220703
    5. ' ' → logprob: -10.548938751220703
    6. '.' → logprob: -11.173938751220703
    7. '<|end|>' → logprob: -11.673938751220703
    8. ' imports' → logprob: -12.298938751220703
    9. ' im' → logprob: -12.673938751220703
    10. ' as' → logprob: -12.923938751220703

Token 60: ' ascii' (ID: 104363)
  Prédit: ' ascii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ascii' → logprob: -0.10173241794109344
    2. 'ascii' → logprob: -2.3517324924468994
    3. ' punctuation' → logprob: -6.72673225402832
    4. ' whitespace' → logprob: -8.85173225402832
    5. '.as' → logprob: -9.35173225402832
    6. '```' → logprob: -10.47673225402832
    7. ' ' → logprob: -10.60173225402832
    8. ' Template' → logprob: -11.47673225402832
    9. 'as' → logprob: -11.60173225402832
    10. 'pun' → logprob: -12.10173225402832

Token 61: '_lower' (ID: 72335)
  Prédit: '_lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lower' → logprob: -0.5761239528656006
    2. '_letters' → logprob: -0.8261239528656006
    3. 'letters' → logprob: -9.07612419128418
    4. '_upper' → logprob: -10.20112419128418
    5. 'lower' → logprob: -10.32612419128418
    6. '_' → logprob: -15.95112419128418
    7. 'abcdefghijklmnopqrstuvwxyz' → logprob: -17.07612419128418
    8. '_letter' → logprob: -17.82612419128418
    9. 'Lower' → logprob: -17.82612419128418
    10. '_l' → logprob: -18.07612419128418

Token 62: 'case' (ID: 9994)
  Prédit: 'case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.0005190743831917644
    2. 'ase' → logprob: -8.125518798828125
    3. 'abcdefghijklmnopqrstuvwxyz' → logprob: -9.875518798828125
    4. 'et' → logprob: -10.125518798828125
    5. '_case' → logprob: -10.875518798828125
    6. '_letters' → logprob: -11.000518798828125
    7. 'as' → logprob: -11.500518798828125
    8. 'cas' → logprob: -11.625518798828125
    9. 'ic' → logprob: -12.000518798828125
    10. 'ist' → logprob: -12.000518798828125

Token 63: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6516022086143494
    2. '<|end|>' → logprob: -1.2766022682189941
    3. '
' → logprob: -2.526602268218994
    4. 'import' → logprob: -2.901602268218994
    5. '

' → logprob: -3.276602268218994
    6. '\n' → logprob: -4.651602268218994
    7. ' 

' → logprob: -5.776602268218994
    8. '' → logprob: -5.901602268218994
    9. '```' → logprob: -6.401602268218994
    10. '<|end|>' → logprob: -6.401602268218994

Token 64: ' ascii' (ID: 104363)
  Prédit: ' ascii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ascii' → logprob: -0.5236641764640808
    2. 'ascii' → logprob: -0.8986641764640808
    3. ' ' → logprob: -9.148664474487305
    4. ' digits' → logprob: -9.148664474487305
    5. 'digits' → logprob: -9.648664474487305
    6. ' whitespace' → logprob: -9.898664474487305
    7. '_ascii' → logprob: -10.148664474487305
    8. ' asci' → logprob: -10.273664474487305
    9. ' punctuation' → logprob: -10.523664474487305
    10. 'as' → logprob: -10.523664474487305

Token 65: '_upper' (ID: 82658)
  Prédit: '_upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_upper' → logprob: -0.0034549066331237555
    2. '_letters' → logprob: -5.753454685211182
    3. '_lower' → logprob: -8.25345516204834
    4. 'uppercase' → logprob: -11.00345516204834
    5. 'Upper' → logprob: -16.753454208374023
    6. '_up' → logprob: -16.878454208374023
    7. 'letters' → logprob: -17.003454208374023
    8. 'upper' → logprob: -17.628454208374023
    9. ' uppercase' → logprob: -18.503454208374023
    10. '_' → logprob: -18.753454208374023

Token 66: 'case' (ID: 9994)
  Prédit: 'case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -6.704273118884885e-07
    2. '_case' → logprob: -15.500000953674316
    3. 'letters' → logprob: -15.625000953674316
    4. 'abcdefghijklmnopqrstuvwxyz' → logprob: -15.750000953674316
    5. 'cases' → logprob: -16.25
    6. '_letters' → logprob: -17.375
    7. 'c' → logprob: -17.875
    8. 'alphabet' → logprob: -18.75
    9. 'code' → logprob: -19.125
    10. 'cas' → logprob: -19.375

Token 67: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: ' digits' (ID: 37806)
  Prédit: ' digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.797633171081543
    2. 'digits' → logprob: -0.797633171081543
    3. 'ascii' → logprob: -2.672633171081543
    4. ' ascii' → logprob: -3.547633171081543
    5. ' whitespace' → logprob: -7.797633171081543
    6. ' punctuation' → logprob: -7.922633171081543
    7. 'wh' → logprob: -8.172633171081543
    8. '_digits' → logprob: -9.297633171081543
    9. 'string' → logprob: -10.172633171081543
    10. '```' → logprob: -10.672633171081543

Token 69: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9676157832145691
    2. ',' → logprob: -1.4676158428192139
    3. '<|end|>' → logprob: -1.5926158428192139
    4. '

' → logprob: -2.342615842819214
    5. 'import' → logprob: -3.092615842819214
    6. '\n' → logprob: -4.467615604400635
    7. '' → logprob: -4.842615604400635
    8. '#' → logprob: -4.967615604400635
    9. '```' → logprob: -4.967615604400635
    10. '<|end|>' → logprob: -5.842615604400635

Token 70: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.2615721821784973
    2. '
' → logprob: -1.6365721225738525
    3. ',' → logprob: -4.761572360992432
    4. 'import' → logprob: -5.011572360992432
    5. '<|end|>' → logprob: -5.011572360992432
    6. '#' → logprob: -5.511572360992432
    7. 'def' → logprob: -6.261572360992432
    8. '```' → logprob: -6.386572360992432
    9. '' → logprob: -6.636572360992432
    10. '\n' → logprob: -7.261572360992432

Token 71: ' bis' (ID: 7204)
  Prédit: 'random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'random' → logprob: -0.8648297786712646
    2. ' random' → logprob: -1.4898297786712646
    3. 'keyword' → logprob: -2.7398297786712646
    4. 'math' → logprob: -2.8648297786712646
    5. ' functools' → logprob: -2.9898297786712646
    6. ' math' → logprob: -3.2398297786712646
    7. ' keyword' → logprob: -3.3648297786712646
    8. ' typing' → logprob: -3.9898297786712646
    9. 'os' → logprob: -4.239830017089844
    10. 'collections' → logprob: -4.489830017089844

Token 72: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.6240566083070007e-06
    2. 'ected' → logprob: -13.875001907348633
    3. 'ec' → logprob: -15.375001907348633
    4. 'ector' → logprob: -16.000001907348633
    5. 'e' → logprob: -16.500001907348633
    6. 'ects' → logprob: -16.875001907348633
    7. 'ecta' → logprob: -17.375001907348633
    8. 'ectl' → logprob: -18.000001907348633
    9. 'ection' → logprob: -18.125001907348633
    10. '>' → logprob: -18.375001907348633

Token 73: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.11290525645017624
    2. 'import' → logprob: -2.237905263900757
    3. '	import' → logprob: -9.987905502319336
    4. ' ' → logprob: -11.237905502319336
    5. '_import' → logprob: -11.487905502319336
    6. '<|end|>' → logprob: -11.987905502319336
    7. ' ' → logprob: -12.987905502319336
    8. ' im' → logprob: -13.862905502319336
    9. '_' → logprob: -13.862905502319336
    10. 'ort' → logprob: -13.987905502319336

Token 74: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.0025162079837173223
    2. 'bis' → logprob: -6.627516269683838
    3. ' ins' → logprob: -6.752516269683838
    4. 'ins' → logprob: -11.00251579284668
    5. '```' → logprob: -13.12751579284668
    6. '	b' → logprob: -13.25251579284668
    7. ' ' → logprob: -14.25251579284668
    8. '_ins' → logprob: -15.25251579284668
    9. '.b' → logprob: -16.37751579284668
    10. '.ins' → logprob: -16.62751579284668

Token 75: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -5.512236498361744e-07
    2. 'e' → logprob: -15.250000953674316
    3. 'ected' → logprob: -16.125
    4. 'ec' → logprob: -16.375
    5. 'sect' → logprob: -18.75
    6. 'ects' → logprob: -18.875
    7. 'ectl' → logprob: -19.5
    8. 'ecta' → logprob: -19.625
    9. '```' → logprob: -20.25
    10. '#' → logprob: -20.375

Token 76: ',' (ID: 11)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.004804380238056183
    2. '_right' → logprob: -5.379804611206055
    3. ',' → logprob: -9.629804611206055
    4. 'left' → logprob: -10.004804611206055
    5. '<|end|>' → logprob: -10.129804611206055
    6. '_' → logprob: -11.129804611206055
    7. '_ins' → logprob: -12.504804611206055
    8. '_LEFT' → logprob: -12.754804611206055
    9. 'ins' → logprob: -13.129804611206055
    10. 'right' → logprob: -13.254804611206055

Token 77: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.27365660667419434
    2. 'ins' → logprob: -1.5236566066741943
    3. ' bis' → logprob: -4.273656845092773
    4. ' ins' → logprob: -4.898656845092773
    5. '_ins' → logprob: -9.648656845092773
    6. '.ins' → logprob: -10.898656845092773
    7. '```' → logprob: -10.898656845092773
    8. ''ins' → logprob: -13.398656845092773
    9. '-ins' → logprob: -14.023656845092773
    10. '_left' → logprob: -14.773656845092773

Token 78: 'ect' (ID: 534)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06350846588611603
    2. 'ns' → logprob: -3.0635085105895996
    3. 'ct' → logprob: -5.3135085105896
    4. 's' → logprob: -5.4385085105896
    5. 'sect' → logprob: -5.9385085105896
    6. 'ect' → logprob: -6.3135085105896
    7. 'nf' → logprob: -8.438508033752441
    8. 'nd' → logprob: -9.063508033752441
    9. 'nc' → logprob: -9.313508033752441
    10. 'c' → logprob: -9.563508033752441

Token 79: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.05103683844208717
    2. '_' → logprob: -3.051036834716797
    3. '_right' → logprob: -6.051036834716797
    4. '_le' → logprob: -10.551036834716797
    5. '_

' → logprob: -10.676036834716797
    6. '_
' → logprob: -11.426036834716797
    7. '_l' → logprob: -11.676036834716797
    8. '_
' → logprob: -12.176036834716797
    9. '_r' → logprob: -12.301036834716797
    10. 'l' → logprob: -12.301036834716797

Token 80: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007395883440040052
    2. ',b' → logprob: -8.250740051269531
    3. ',
' → logprob: -8.375740051269531
    4. 'import' → logprob: -9.125740051269531
    5. '<|end|>' → logprob: -9.625740051269531
    6. '
' → logprob: -11.375740051269531
    7. '' → logprob: -11.500740051269531
    8. ' ' → logprob: -11.625740051269531
    9. '```' → logprob: -11.750740051269531
    10. 'from' → logprob: -12.250740051269531

Token 81: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28908002376556396
    2. '

' → logprob: -2.1640801429748535
    3. '
' → logprob: -3.1640801429748535
    4. '#' → logprob: -3.7890801429748535
    5. 'def' → logprob: -4.0390801429748535
    6. ',
' → logprob: -4.7890801429748535
    7. 'import' → logprob: -4.9140801429748535
    8. ',

' → logprob: -5.0390801429748535
    9. '' → logprob: -5.2890801429748535
    10. ' 

' → logprob: -5.2890801429748535

Token 82: ' fractions' (ID: 110523)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.057063184678554535
    2. 'heap' → logprob: -3.057063102722168
    3. ' math' → logprob: -5.682063102722168
    4. ' functools' → logprob: -5.682063102722168
    5. ' random' → logprob: -7.432063102722168
    6. 'math' → logprob: -7.932063102722168
    7. ' os' → logprob: -9.057063102722168
    8. ' collections' → logprob: -9.182063102722168
    9. 'random' → logprob: -9.307063102722168
    10. ' fractions' → logprob: -9.807063102722168

Token 83: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.11100442707538605
    2. '.' → logprob: -2.73600435256958
    3. 'import' → logprob: -3.73600435256958
    4. '<|end|>' → logprob: -4.48600435256958
    5. ' ' → logprob: -6.23600435256958
    6. ' .' → logprob: -6.36100435256958
    7. '	import' → logprob: -7.48600435256958
    8. '.import' → logprob: -8.486004829406738
    9. '<|end|>' → logprob: -8.486004829406738
    10. '_import' → logprob: -8.986004829406738

Token 84: ' gcd' (ID: 106918)
  Prédit: ' Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Fraction' → logprob: -0.004670307040214539
    2. 'Fraction' → logprob: -5.379670143127441
    3. ' fractions' → logprob: -11.254670143127441
    4. ' Fra' → logprob: -11.254670143127441
    5. ' gcd' → logprob: -11.254670143127441
    6. ' ' → logprob: -12.504670143127441
    7. ' ' → logprob: -13.254670143127441
    8. 'Fra' → logprob: -13.629670143127441
    9. ' Decimal' → logprob: -13.629670143127441
    10. ' F' → logprob: -14.129670143127441

Token 85: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.772322416305542
    2. '<|end|>' → logprob: -1.647322416305542
    3. '#' → logprob: -2.272322416305542
    4. ')' → logprob: -2.897322416305542
    5. '_' → logprob: -3.147322416305542
    6. ' as' → logprob: -3.397322416305542
    7. '
' → logprob: -4.397322654724121
    8. '.' → logprob: -4.522322654724121
    9. '' → logprob: -4.522322654724121
    10. ' ' → logprob: -4.772322654724121

Token 86: 'from' (ID: 2845)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8354055881500244
    2. '#' → logprob: -1.5854055881500244
    3. '<|end|>' → logprob: -1.7104055881500244
    4. ',' → logprob: -2.0854055881500244
    5. '(' → logprob: -4.710405349731445
    6. '
' → logprob: -4.835405349731445
    7. '' → logprob: -4.960405349731445
    8. '_' → logprob: -5.085405349731445
    9. '.' → logprob: -5.210405349731445
    10. '(
' → logprob: -5.960405349731445

Token 87: ' heap' (ID: 37237)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.12718427181243896
    2. ' math' → logprob: -2.1271843910217285
    3. ' functools' → logprob: -9.12718391418457
    4. 'fun' → logprob: -9.87718391418457
    5. 'fra' → logprob: -10.12718391418457
    6. 'cmath' → logprob: -10.25218391418457
    7. ' fractions' → logprob: -12.00218391418457
    8. ' ' → logprob: -12.37718391418457
    9. ' itertools' → logprob: -13.00218391418457
    10. '_math' → logprob: -13.12718391418457

Token 88: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. 'queue' → logprob: -17.25
    4. 'i' → logprob: -17.375
    5. 'import' → logprob: -17.75
    6. '_' → logprob: -18.125
    7. 'e' → logprob: -18.625
    8. 'm' → logprob: -18.625
    9. 'n' → logprob: -18.75
    10. 'u' → logprob: -19.375

Token 89: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.011445540003478527
    2. 'import' → logprob: -4.63644552230835
    3. ' ' → logprob: -6.63644552230835
    4. '<|end|>' → logprob: -8.011445999145508
    5. '	import' → logprob: -10.386445999145508
    6. ' ' → logprob: -12.636445999145508
    7. ' im' → logprob: -13.386445999145508
    8. '_import' → logprob: -13.386445999145508
    9. '.' → logprob: -13.886445999145508
    10. ' Import' → logprob: -14.136445999145508

Token 90: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.17136631906032562
    2. 'he' → logprob: -1.9213663339614868
    3. 'heap' → logprob: -4.921366214752197
    4. ' heap' → logprob: -6.171366214752197
    5. ' ' → logprob: -6.671366214752197
    6. ' n' → logprob: -9.421366691589355
    7. ' hea' → logprob: -9.796366691589355
    8. 'nl' → logprob: -9.796366691589355
    9. '.he' → logprob: -9.921366691589355
    10. 'n' → logprob: -10.421366691589355

Token 91: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.10078205168247223
    2. 'ap' → logprob: -2.3507821559906006
    3. 'a' → logprob: -7.4757819175720215
    4. 'aq' → logprob: -11.97578239440918
    5. 'ап' → logprob: -13.85078239440918
    6. '```' → logprob: -15.10078239440918
    7. '	app' → logprob: -15.72578239440918
    8. 'apl' → logprob: -15.85078239440918
    9. '.app' → logprob: -15.97578239440918
    10. '[' → logprob: -15.97578239440918

Token 92: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.005235529970377684
    2. 'op' → logprob: -5.25523567199707
    3. 'u' → logprob: -13.63023567199707
    4. 'us' → logprob: -14.88023567199707
    5. 'o' → logprob: -16.38023567199707
    6. 'opleft' → logprob: -17.50523567199707
    7. '```' → logprob: -17.50523567199707
    8. 'q' → logprob: -17.75523567199707
    9. ' ush' → logprob: -18.25523567199707
    10. 'USH' → logprob: -18.63023567199707

Token 93: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023059594968799502
    2. '<|end|>' → logprob: -9.37523078918457
    3. ' ,' → logprob: -9.50023078918457
    4. ',
' → logprob: -10.62523078918457
    5. 'import' → logprob: -11.25023078918457
    6. 'he' → logprob: -11.62523078918457
    7. ' ' → logprob: -12.25023078918457
    8. ',\
' → logprob: -12.50023078918457
    9. ',use' → logprob: -13.25023078918457
    10. ' he' → logprob: -13.50023078918457

Token 94: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.023338885977864265
    2. 'he' → logprob: -3.773338794708252
    3. 'heap' → logprob: -10.39833927154541
    4. '<|end|>' → logprob: -10.64833927154541
    5. ' heap' → logprob: -11.02333927154541
    6. ' ' → logprob: -11.52333927154541
    7. '.he' → logprob: -12.77333927154541
    8. '_he' → logprob: -12.89833927154541
    9. ' he'd' → logprob: -13.39833927154541
    10. '```' → logprob: -14.77333927154541

Token 95: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.15310683415737e-05
    2. 'ap' → logprob: -10.750021934509277
    3. 'a' → logprob: -17.87502098083496
    4. '	app' → logprob: -19.12502098083496
    5. '(app' → logprob: -19.37502098083496
    6. 'appen' → logprob: -19.37502098083496
    7. 'apps' → logprob: -19.62502098083496
    8. 'appt' → logprob: -19.62502098083496
    9. '_app' → logprob: -19.75002098083496
    10. 'ап' → logprob: -19.87502098083496

Token 96: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.11284083127975464
    2. 'ush' → logprob: -2.2378408908843994
    3. 'o' → logprob: -12.23784065246582
    4. ' op' → logprob: -12.98784065246582
    5. '<|end|>' → logprob: -12.98784065246582
    6. 'opp' → logprob: -13.48784065246582
    7. '```' → logprob: -13.86284065246582
    8. 'opleft' → logprob: -13.98784065246582
    9. 'e' → logprob: -14.23784065246582
    10. 'opf' → logprob: -14.23784065246582

Token 97: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 98: 'from' (ID: 2845)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0315922498703003
    2. '
' → logprob: -1.6565922498703003
    3. ',' → logprob: -2.03159236907959
    4. '<|end|>' → logprob: -2.28159236907959
    5. '

' → logprob: -2.53159236907959
    6. 'def' → logprob: -2.90659236907959
    7. '' → logprob: -4.03159236907959
    8. ',
' → logprob: -4.90659236907959
    9. 'import' → logprob: -5.15659236907959
    10. ')' → logprob: -5.53159236907959

Token 99: ' functools' (ID: 142636)
  Prédit: ' random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' random' → logprob: -0.23556897044181824
    2. ' functools' → logprob: -2.4855690002441406
    3. ' math' → logprob: -3.2355690002441406
    4. ' queue' → logprob: -3.8605690002441406
    5. ' os' → logprob: -4.110569000244141
    6. ' statistics' → logprob: -4.485569000244141
    7. ' itertools' → logprob: -4.860569000244141
    8. ' collections' → logprob: -4.860569000244141
    9. 'random' → logprob: -4.985569000244141
    10. '_' → logprob: -5.985569000244141

Token 100: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.043980617076158524
    2. 'import' → logprob: -3.668980598449707
    3. '<|end|>' → logprob: -4.668980598449707
    4. ' ' → logprob: -4.918980598449707
    5. '.' → logprob: -8.293980598449707
    6. '<|end|>' → logprob: -8.793980598449707
    7. '_import' → logprob: -8.918980598449707
    8. '	import' → logprob: -9.543980598449707
    9. '_' → logprob: -9.668980598449707
    10. ',' → logprob: -9.793980598449707

Token 101: ' reduce' (ID: 10389)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.09722284227609634
    2. ' reduce' → logprob: -2.4722228050231934
    3. 'l' → logprob: -5.722222805023193
    4. 'reduce' → logprob: -5.847222805023193
    5. ' wraps' → logprob: -6.847222805023193
    6. ' partial' → logprob: -7.097222805023193
    7. ' cmp' → logprob: -9.222223281860352
    8. ' cache' → logprob: -10.222223281860352
    9. 'partial' → logprob: -10.972223281860352
    10. ' ' → logprob: -11.347223281860352

Token 102: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011027547530829906
    2. '<|end|>' → logprob: -5.5110273361206055
    3. 'import' → logprob: -5.6360273361206055
    4. ',
' → logprob: -6.6360273361206055
    5. 'def' → logprob: -7.0110273361206055
    6. ')' → logprob: -7.6360273361206055
    7. '<|end|>' → logprob: -9.011027336120605
    8. ' ,' → logprob: -9.511027336120605
    9. '
' → logprob: -9.636027336120605
    10. '.' → logprob: -10.011027336120605

Token 103: 'def' (ID: 1314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0858244895935059
    2. 'def' → logprob: -1.2108244895935059
    3. '#' → logprob: -1.7108244895935059
    4. '
' → logprob: -2.710824489593506
    5. ',
' → logprob: -3.710824489593506
    6. '

' → logprob: -4.085824489593506
    7. 'import' → logprob: -4.335824489593506
    8. ')' → logprob: -4.460824489593506
    9. '<|end|>' → logprob: -4.460824489593506
    10. '_' → logprob: -5.085824489593506

Token 104: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5140635371208191
    2. '_' → logprob: -1.2640635967254639
    3. ' main' → logprob: -3.389063596725464
    4. ' _' → logprob: -4.139063358306885
    5. ' factorial' → logprob: -4.514063358306885
    6. ' solve' → logprob: -4.639063358306885
    7. '_factor' → logprob: -4.889063358306885
    8. ' ' → logprob: -5.139063358306885
    9. ' dfs' → logprob: -5.389063358306885
    10. ' space' → logprob: -5.639063358306885

Token 105: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.23042841255664825
    2. '(' → logprob: -1.7304284572601318
    3. '()' → logprob: -3.605428457260132
    4. ' ():' → logprob: -7.980428218841553
    5. '(prompt' → logprob: -8.105428695678711
    6. '():
' → logprob: -8.605428695678711
    7. '("")' → logprob: -8.980428695678711
    8. ' ()' → logprob: -9.605428695678711
    9. ' (' → logprob: -10.105428695678711
    10. '):' → logprob: -10.230428695678711

Token 106: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5405964851379395
    2. ' input' → logprob: -1.0405964851379395
    3. ' sys' → logprob: -2.7905964851379395
    4. 'input' → logprob: -6.0405964851379395
    5. ' return' → logprob: -8.915596008300781
    6. '    ' → logprob: -9.040596008300781
    7. '  ' → logprob: -9.665596008300781
    8. ' ' → logprob: -10.290596008300781
    9. ' raw' → logprob: -10.290596008300781
    10. ' int' → logprob: -10.790596008300781

Token 107: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.014678152278065681
    2. ' input' → logprob: -4.264678001403809
    3. 'sys' → logprob: -7.764678001403809
    4. 'input' → logprob: -10.014678001403809
    5. ' ' → logprob: -10.139678001403809
    6. ' raw' → logprob: -12.889678001403809
    7. ' next' → logprob: -14.139678001403809
    8. ' system' → logprob: -14.889678001403809
    9. ' ' → logprob: -14.889678001403809
    10. '	sys' → logprob: -15.014678001403809

Token 108: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0004201866395305842
    2. '.stdout' → logprob: -8.375420570373535
    3. '.' → logprob: -8.750420570373535
    4. '.readline' → logprob: -11.000420570373535
    5. '.argv' → logprob: -12.125420570373535
    6. '.std' → logprob: -12.125420570373535
    7. 'stdin' → logprob: -13.875420570373535
    8. '.stderr' → logprob: -14.125420570373535
    9. ' stdin' → logprob: -14.750420570373535
    10. '.input' → logprob: -14.875420570373535

Token 109: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.5451681974809617e-05
    2. '.' → logprob: -11.250015258789062
    3. '.read' → logprob: -13.125015258789062
    4. '.buffer' → logprob: -15.500015258789062
    5. ' readline' → logprob: -16.250015258789062
    6. '.readlines' → logprob: -16.625015258789062
    7. 'read' → logprob: -16.875015258789062
    8. 'buffer' → logprob: -19.500015258789062
    9. '_read' → logprob: -21.125015258789062
    10. '.rstrip' → logprob: -21.500015258789062

Token 110: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.09128502011299133
    2. '()' → logprob: -2.466284990310669
    3. '.strip' → logprob: -6.716285228729248
    4. '<|end|>' → logprob: -7.966285228729248
    5. '.rstrip' → logprob: -8.21628475189209
    6. '(' → logprob: -8.84128475189209
    7. '()\' → logprob: -9.09128475189209
    8. 'rstrip' → logprob: -9.09128475189209
    9. '()
' → logprob: -9.71628475189209
    10. 'strip' → logprob: -11.21628475189209

Token 111: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.03804539144039154
    2. 'rstrip' → logprob: -3.2880454063415527
    3. 'split' → logprob: -13.288044929504395
    4. ' strip' → logprob: -13.413044929504395
    5. '-strip' → logprob: -15.038044929504395
    6. 'replace' → logprob: -15.163044929504395
    7. 'r' → logprob: -16.28804588317871
    8. '.strip' → logprob: -16.53804588317871
    9. '_strip' → logprob: -16.91304588317871
    10. 'trim' → logprob: -17.91304588317871

Token 112: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.19775047898292542
    2. '<|end|>' → logprob: -2.1977505683898926
    3. '(' → logprob: -3.4477505683898926
    4. 'def' → logprob: -4.572750568389893
    5. '
' → logprob: -4.572750568389893
    6. '<|end|>' → logprob: -5.197750568389893
    7. '()
' → logprob: -5.822750568389893
    8. '()

' → logprob: -5.947750568389893
    9. '

' → logprob: -7.072750568389893
    10. '#' → logprob: -7.197750568389893

Token 113: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7352897524833679
    2. '
' → logprob: -0.8602897524833679
    3. '<|end|>' → logprob: -2.9852898120880127
    4. '

' → logprob: -3.4852898120880127
    5. '#' → logprob: -4.985289573669434
    6. '\n' → logprob: -6.485289573669434
    7. '<|end|>' → logprob: -6.735289573669434
    8. '\' → logprob: -6.985289573669434
    9. '' → logprob: -7.485289573669434
    10. ')' → logprob: -7.485289573669434

Token 114: ' INT' (ID: 20104)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5340752601623535
    2. '_print' → logprob: -1.7840752601623535
    3. ' print' → logprob: -2.5340752601623535
    4. 'range' → logprob: -3.2840752601623535
    5. 'int' → logprob: -3.9090752601623535
    6. '_output' → logprob: -3.9090752601623535
    7. '_int' → logprob: -4.0340752601623535
    8. '_' → logprob: -4.1590752601623535
    9. ' main' → logprob: -4.1590752601623535
    10. 'main' → logprob: -4.4090752601623535

Token 115: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0038704967591911554
    2. '()' → logprob: -5.878870487213135
    3. ' ():' → logprob: -7.628870487213135
    4. '(' → logprob: -8.253870964050293
    5. '():
' → logprob: -9.378870964050293
    6. ' ()' → logprob: -9.628870964050293
    7. '[]' → logprob: -10.378870964050293
    8. '_' → logprob: -10.503870964050293
    9. '()(' → logprob: -10.503870964050293
    10. 's' → logprob: -11.753870964050293

Token 116: ' return' (ID: 622)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.045101597905159
    2. 'int' → logprob: -3.2951016426086426
    3. ' ' → logprob: -5.045101642608643
    4. ' map' → logprob: -8.170101165771484
    5. '(int' → logprob: -8.795101165771484
    6. ' in' → logprob: -9.545101165771484
    7. ' return' → logprob: -10.545101165771484
    8. '[int' → logprob: -10.920101165771484
    9. '=int' → logprob: -11.420101165771484
    10. '  ' → logprob: -12.170101165771484

Token 117: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.021326271817088127
    2. 'int' → logprob: -3.8963263034820557
    3. ' ' → logprob: -7.396326065063477
    4. ' in' → logprob: -9.521326065063477
    5. '(int' → logprob: -9.896326065063477
    6. ' map' → logprob: -10.646326065063477
    7. '	int' → logprob: -11.771326065063477
    8. '  ' → logprob: -12.146326065063477
    9. ' i' → logprob: -13.146326065063477
    10. '[int' → logprob: -13.271326065063477

Token 118: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.47552791237831116
    2. '(' → logprob: -0.9755278825759888
    3. '(sys' → logprob: -6.600527763366699
    4. '()' → logprob: -10.4755277633667
    5. '(
' → logprob: -10.6005277633667
    6. 'input' → logprob: -11.1005277633667
    7. '(int' → logprob: -12.4755277633667
    8. ' (' → logprob: -12.7255277633667
    9. '('' → logprob: -12.9755277633667
    10. '((' → logprob: -12.9755277633667

Token 119: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0009282566024921834
    2. '()' → logprob: -7.0009284019470215
    3. ' ())' → logprob: -12.250927925109863
    4. '())
' → logprob: -12.375927925109863
    5. '().' → logprob: -12.500927925109863
    6. '()
' → logprob: -14.125927925109863
    7. '();)' → logprob: -14.250927925109863
    8. '(' → logprob: -14.375927925109863
    9. ')' → logprob: -14.375927925109863
    10. '()))' → logprob: -14.625927925109863

Token 120: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0007798461592756212
    2. ' def' → logprob: -7.250779628753662
    3. '
' → logprob: -10.50078010559082
    4. '<|end|>' → logprob: -11.12578010559082
    5. '_' → logprob: -11.75078010559082
    6. 's' → logprob: -12.62578010559082
    7. '()' → logprob: -12.62578010559082
    8. '\' → logprob: -12.75078010559082
    9. 'ndef' → logprob: -12.87578010559082
    10. '(def' → logprob: -13.87578010559082

Token 121: ' MAP' (ID: 53455)
  Prédit: 'LIST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LIST' → logprob: -0.5604925155639648
    2. ' LIST' → logprob: -1.1854925155639648
    3. ' MAP' → logprob: -2.685492515563965
    4. 'MAP' → logprob: -3.185492515563965
    5. 'L' → logprob: -6.185492515563965
    6. 'list' → logprob: -6.185492515563965
    7. ' L' → logprob: -6.310492515563965
    8. 'STR' → logprob: -6.435492515563965
    9. ' LI' → logprob: -7.060492515563965
    10. ' map' → logprob: -7.185492515563965

Token 122: '():' (ID: 9442)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.050829511135816574
    2. '(lambda' → logprob: -3.0508294105529785
    3. '(' → logprob: -7.1758294105529785
    4. '().' → logprob: -8.175829887390137
    5. '():' → logprob: -8.550829887390137
    6. '(int' → logprob: -8.925829887390137
    7. '(list' → logprob: -9.050829887390137
    8. '=lambda' → logprob: -9.050829887390137
    9. ' ()' → logprob: -9.300829887390137
    10. '(){' → logprob: -9.550829887390137

Token 123: ' return' (ID: 622)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6220031380653381
    2. ' map' → logprob: -1.1220030784606934
    3. 'list' → logprob: -2.4970030784606934
    4. 'map' → logprob: -3.4970030784606934
    5. ' return' → logprob: -3.7470030784606934
    6. 'return' → logprob: -6.747003078460693
    7. ' ' → logprob: -9.872003555297852
    8. ' tuple' → logprob: -10.122003555297852
    9. '(map' → logprob: -11.372003555297852
    10. ' lambda' → logprob: -12.497003555297852

Token 124: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.10069075971841812
    2. 'list' → logprob: -2.3506908416748047
    3. 'lambda' → logprob: -7.975690841674805
    4. ' map' → logprob: -9.100690841674805
    5. ' list' → logprob: -10.850690841674805
    6. '(map' → logprob: -11.975690841674805
    7. 'int' → logprob: -13.850690841674805
    8. '	map' → logprob: -13.975690841674805
    9. '(lambda' → logprob: -14.850690841674805
    10. 'm' → logprob: -15.225690841674805

Token 125: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.07972923666238785
    2. '(' → logprob: -2.5797293186187744
    3. '(str' → logprob: -7.829729080200195
    4. '(lambda' → logprob: -7.829729080200195
    5. '(
' → logprob: -11.454729080200195
    6. '(list' → logprob: -11.704729080200195
    7. '(input' → logprob: -12.079729080200195
    8. '(float' → logprob: -12.329729080200195
    9. '(in' → logprob: -13.329729080200195
    10. '()' → logprob: -13.329729080200195

Token 126: ',' (ID: 11)
  Prédit: '(),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.28085485100746155
    2. '())' → logprob: -2.1558549404144287
    3. ',' → logprob: -2.5308549404144287
    4. '()' → logprob: -3.7808549404144287
    5. '().' → logprob: -4.40585470199585
    6. ',input' → logprob: -4.65585470199585
    7. ')' → logprob: -5.90585470199585
    8. 'input' → logprob: -7.15585470199585
    9. '(' → logprob: -8.030855178833008
    10. ',int' → logprob: -8.530855178833008

Token 127: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04860043153166771
    2. ' input' → logprob: -3.048600435256958
    3. ' ' → logprob: -12.298600196838379
    4. ')' → logprob: -12.548600196838379
    5. '	input' → logprob: -13.548600196838379
    6. ',input' → logprob: -13.923600196838379
    7. 'split' → logprob: -14.173600196838379
    8. '(input' → logprob: -15.048600196838379
    9. '  ' → logprob: -15.048600196838379
    10. '<input' → logprob: -15.423600196838379

Token 128: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.008129963040119e-06
    2. ' ().' → logprob: -13.250003814697266
    3. '()' → logprob: -13.500003814697266
    4. ')' → logprob: -14.500003814697266
    5. '())' → logprob: -15.625003814697266
    6. '.split' → logprob: -16.500003814697266
    7. 'split' → logprob: -17.125003814697266
    8. '.' → logprob: -17.375003814697266
    9. '(' → logprob: -18.250003814697266
    10. '().__' → logprob: -18.625003814697266

Token 129: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.146429223008454e-05
    2. 'strip' → logprob: -9.75006103515625
    3. ' split' → logprob: -13.12506103515625
    4. '(split' → logprob: -14.25006103515625
    5. 'spl' → logprob: -15.75006103515625
    6. 'rstrip' → logprob: -16.12506103515625
    7. 'plit' → logprob: -16.25006103515625
    8. ')' → logprob: -16.87506103515625
    9. 's' → logprob: -16.87506103515625
    10. '_split' → logprob: -17.50006103515625

Token 130: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.006456132046878338
    2. ')' → logprob: -5.631455898284912
    3. '()' → logprob: -6.006455898284912
    4. '()))' → logprob: -8.13145637512207
    5. '))' → logprob: -9.63145637512207
    6. '())
' → logprob: -10.75645637512207
    7. ' ())' → logprob: -12.75645637512207
    8. '(' → logprob: -12.88145637512207
    9. '();)' → logprob: -14.88145637512207
    10. '());' → logprob: -14.88145637512207

Token 131: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01964164525270462
    2. '()' → logprob: -4.269641876220703
    3. '
' → logprob: -6.019641876220703
    4. '#' → logprob: -7.394641876220703
    5. '\' → logprob: -7.394641876220703
    6. '(' → logprob: -7.644641876220703
    7. '_' → logprob: -8.144641876220703
    8. 'd' → logprob: -8.644641876220703
    9. '(
' → logprob: -8.644641876220703
    10. '()
' → logprob: -8.769641876220703

Token 132: ' LIST' (ID: 49854)
  Prédit: 'LIST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LIST' → logprob: -0.0045867725275456905
    2. ' LIST' → logprob: -5.504586696624756
    3. 'list' → logprob: -8.629587173461914
    4. 'L' → logprob: -9.254587173461914
    5. 'LI' → logprob: -9.254587173461914
    6. 'LIN' → logprob: -10.504587173461914
    7. 'List' → logprob: -10.504587173461914
    8. 'LS' → logprob: -10.629587173461914
    9. '_LIST' → logprob: -10.879587173461914
    10. ' list' → logprob: -11.129587173461914

Token 133: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.003214665222913027
    2. '()' → logprob: -5.7532148361206055
    3. '():
' → logprob: -11.628214836120605
    4. ' ():' → logprob: -11.878214836120605
    5. '(' → logprob: -12.128214836120605
    6. '()>' → logprob: -12.253214836120605
    7. ' ()' → logprob: -13.003214836120605
    8. '().' → logprob: -13.003214836120605
    9. '()[' → logprob: -13.878214836120605
    10. '();' → logprob: -14.003214836120605

Token 134: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.09168644994497299
    2. ' list' → logprob: -2.466686487197876
    3. 'return' → logprob: -6.091686248779297
    4. 'list' → logprob: -8.091686248779297
    5. ' ' → logprob: -8.841686248779297
    6. ' ' → logprob: -10.716686248779297
    7. ' 
' → logprob: -12.341686248779297
    8. ' map' → logprob: -14.091686248779297
    9. '=list' → logprob: -14.216686248779297
    10. ' lambda' → logprob: -14.466686248779297

Token 135: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.048593275249004364
    2. ' list' → logprob: -3.048593282699585
    3. '[list' → logprob: -12.798593521118164
    4. 'map' → logprob: -12.923593521118164
    5. '(list' → logprob: -14.923593521118164
    6. '	list' → logprob: -15.423593521118164
    7. '=list' → logprob: -16.423593521118164
    8. ':list' → logprob: -16.798593521118164
    9. ' map' → logprob: -17.048593521118164
    10. '[' → logprob: -17.173593521118164

Token 136: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.1532006859779358
    2. '(' → logprob: -2.653200626373291
    3. '(M' → logprob: -2.653200626373291
    4. '(int' → logprob: -6.903200626373291
    5. '()' → logprob: -9.27820110321045
    6. '(input' → logprob: -10.52820110321045
    7. '(
' → logprob: -10.77820110321045
    8. '((' → logprob: -11.40320110321045
    9. '(m' → logprob: -11.90320110321045
    10. '(

' → logprob: -12.15320110321045

Token 137: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005308231338858604
    2. '(' → logprob: -5.255308151245117
    3. '<int' → logprob: -10.755308151245117
    4. '<|end|>' → logprob: -10.755308151245117
    5. 'int' → logprob: -11.380308151245117
    6. '[int' → logprob: -11.880308151245117
    7. '(
' → logprob: -12.630308151245117
    8. ']int' → logprob: -13.630308151245117
    9. '=int' → logprob: -13.630308151245117
    10. ' (' → logprob: -13.755308151245117

Token 138: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1625792682170868
    2. ',input' → logprob: -1.9125792980194092
    3. '(),' → logprob: -6.28757905960083
    4. '(input' → logprob: -7.91257905960083
    5. '(' → logprob: -9.787579536437988
    6. 'input' → logprob: -10.412579536437988
    7. ' ,' → logprob: -10.537579536437988
    8. '))' → logprob: -12.537579536437988
    9. ',list' → logprob: -12.912579536437988
    10. '()' → logprob: -13.287579536437988

Token 139: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20141451060771942
    2. ' input' → logprob: -1.7014144659042358
    3. '(input' → logprob: -14.076414108276367
    4. ',input' → logprob: -15.951414108276367
    5. 'list' → logprob: -16.451414108276367
    6. ' ' → logprob: -16.576414108276367
    7. '	input' → logprob: -16.701414108276367
    8. '<input' → logprob: -17.951414108276367
    9. 'int' → logprob: -18.576414108276367
    10. '=input' → logprob: -18.951414108276367

Token 140: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0010893779108300805
    2. '()))' → logprob: -7.626089572906494
    3. '())' → logprob: -7.876089572906494
    4. '()' → logprob: -8.501089096069336
    5. '))' → logprob: -11.751089096069336
    6. ')' → logprob: -11.876089096069336
    7. '()));' → logprob: -13.751089096069336
    8. '().__' → logprob: -14.626089096069336
    9. '()).' → logprob: -15.001089096069336
    10. '()[' → logprob: -15.001089096069336

Token 141: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0008925211732275784
    2. ')' → logprob: -7.125892639160156
    3. 'strip' → logprob: -10.250892639160156
    4. ' split' → logprob: -10.625892639160156
    5. 'spl' → logprob: -11.375892639160156
    6. '(split' → logprob: -12.250892639160156
    7. ' ' → logprob: -13.000892639160156
    8. '))' → logprob: -13.125892639160156
    9. '())' → logprob: -13.375892639160156
    10. ').' → logprob: -13.375892639160156

Token 142: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.4828537702560425
    2. '))' → logprob: -0.9828537702560425
    3. '()' → logprob: -5.482853889465332
    4. '())' → logprob: -5.607853889465332
    5. ')' → logprob: -7.107853889465332
    6. '()))
' → logprob: -9.607853889465332
    7. '(' → logprob: -11.857853889465332
    8. '))
' → logprob: -12.732853889465332
    9. '()))

' → logprob: -12.732853889465332
    10. '()));' → logprob: -12.732853889465332

Token 143: 'sys' (ID: 17324)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7358536124229431
    2. 'def' → logprob: -1.860853672027588
    3. '()' → logprob: -2.110853672027588
    4. '
' → logprob: -2.235853672027588
    5. ':' → logprob: -3.485853672027588
    6. '\n' → logprob: -3.485853672027588
    7. '#' → logprob: -3.735853672027588
    8. '(
' → logprob: -4.485853672027588
    9. '\' → logprob: -4.485853672027588
    10. '<|end|>' → logprob: -5.235853672027588

Token 144: '.set' (ID: 1230)
  Prédit: '.exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -0.8390088081359863
    2. '.stdout' → logprob: -0.8390088081359863
    3. '.' → logprob: -2.3390088081359863
    4. '.stdin' → logprob: -3.3390088081359863
    5. '.stderr' → logprob: -7.089008808135986
    6. '.setdefault' → logprob: -7.089008808135986
    7. '.argv' → logprob: -7.089008808135986
    8. '.path' → logprob: -7.339008808135986
    9. '.set' → logprob: -7.964008808135986
    10. '.version' → logprob: -8.464008331298828

Token 145: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -2.9040898880339228e-05
    2. '_rec' → logprob: -11.000028610229492
    3. 'limit' → logprob: -12.125028610229492
    4. 'ursion' → logprob: -13.125028610229492
    5. 'execution' → logprob: -13.375028610229492
    6. ' recursion' → logprob: -14.000028610229492
    7. 'set' → logprob: -14.125028610229492
    8. 're' → logprob: -14.625028610229492
    9. 'reg' → logprob: -16.000028610229492
    10. 'ult' → logprob: -16.250028610229492

Token 146: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00021140782337170094
    2. 'limit' → logprob: -9.125211715698242
    3. 'urs' → logprob: -9.500211715698242
    4. 'ur' → logprob: -11.500211715698242
    5. '_limit' → logprob: -11.750211715698242
    6. 'ursive' → logprob: -11.875211715698242
    7. 'ursor' → logprob: -13.375211715698242
    8. 'usion' → logprob: -15.875211715698242
    9. 't' → logprob: -16.000211715698242
    10. 'ursively' → logprob: -16.125211715698242

Token 147: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.002831864869222045
    2. '_limit' → logprob: -5.877831935882568
    3. 'lim' → logprob: -10.75283145904541
    4. ' limit' → logprob: -13.62783145904541
    5. 'depth' → logprob: -13.75283145904541
    6. '_LIMIT' → logprob: -14.50283145904541
    7. 'imit' → logprob: -14.50283145904541
    8. 'ursion' → logprob: -15.00283145904541
    9. '_depth' → logprob: -15.00283145904541
    10. 'l' → logprob: -15.12783145904541

Token 148: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5690089639974758e-05
    2. '(
' → logprob: -11.250015258789062
    3. '((' → logprob: -13.750015258789062
    4. ' (' → logprob: -14.375015258789062
    5. '(

' → logprob: -14.625015258789062
    6. '(int' → logprob: -15.875015258789062
    7. '100' → logprob: -16.250015258789062
    8. '()' → logprob: -16.500015258789062
    9. '<|end|>' → logprob: -17.375015258789062
    10. '('' → logprob: -17.750015258789062

Token 149: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.029787633568048477
    2. '100' → logprob: -3.529787540435791
    3. ' ' → logprob: -10.52978801727295
    4. '1' → logprob: -12.27978801727295
    5. '(' → logprob: -13.27978801727295
    6. '500' → logprob: -13.40478801727295
    7. '999' → logprob: -14.02978801727295
    8. '400' → logprob: -14.77978801727295
    9. '200' → logprob: -14.90478801727295
    10. '250' → logprob: -15.40478801727295

Token 150: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.2026219367980957
    2. '7' → logprob: -1.7026219367980957
    3. '6' → logprob: -7.077621936798096
    4. '8' → logprob: -8.077621459960938
    5. '07' → logprob: -10.827621459960938
    6. '*' → logprob: -10.952621459960938
    7. '9' → logprob: -11.452621459960938
    8. '000' → logprob: -12.952621459960938
    9. '007' → logprob: -13.952621459960938
    10. '```' → logprob: -14.452621459960938

Token 151: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.20225867629051208
    2. '9' → logprob: -1.7022587060928345
    3. '8' → logprob: -7.077258586883545
    4. '**' → logprob: -14.327259063720703
    5. '10' → logprob: -15.577259063720703
    6. '```' → logprob: -16.452259063720703
    7. '6' → logprob: -17.202259063720703
    8. ' ' → logprob: -18.827259063720703
    9. '

' → logprob: -19.077259063720703
    10. '​' → logprob: -19.077259063720703

Token 152: '9' (ID: 24)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.018406866118311882
    2. '9' → logprob: -4.018406867980957
    3. '8' → logprob: -8.268406867980957
    4. '6' → logprob: -15.268406867980957
    5. '**' → logprob: -16.64340591430664
    6. '10' → logprob: -16.76840591430664
    7. '```' → logprob: -17.51840591430664
    8. '７' → logprob: -17.89340591430664
    9. '+' → logprob: -19.01840591430664
    10. '

' → logprob: -19.01840591430664

Token 153: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.014684110297821e-06
    2. ' )' → logprob: -12.125008583068848
    3. ')
' → logprob: -12.750008583068848
    4. ')
' → logprob: -15.375008583068848
    5. '
' → logprob: -16.125009536743164
    6. ')

' → logprob: -16.375009536743164
    7. '```' → logprob: -17.875009536743164
    8. '
' → logprob: -18.000009536743164
    9. '0' → logprob: -18.000009536743164
    10. '),' → logprob: -18.125009536743164

Token 154: 'INF' (ID: 64358)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.13442862033844
    2. '#' → logprob: -1.25942862033844
    3. 'n' → logprob: -1.50942862033844
    4. 'def' → logprob: -2.3844285011291504
    5. '

' → logprob: -3.2594285011291504
    6. 'class' → logprob: -3.6344285011291504
    7. '\n' → logprob: -5.63442850112915
    8. '<|end|>' → logprob: -6.13442850112915
    9. '' → logprob: -6.25942850112915
    10. '\' → logprob: -6.38442850112915

Token 155: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012513887137174606
    2. '=' → logprob: -4.387514114379883
    3. ',' → logprob: -13.387514114379883
    4. '＝' → logprob: -14.012514114379883
    5. ' =
' → logprob: -14.637514114379883
    6. ' ' → logprob: -14.637514114379883
    7. '=int' → logprob: -15.512514114379883
    8. '_' → logprob: -15.637514114379883
    9. ')' → logprob: -15.762514114379883
    10. ' =)' → logprob: -16.012514114379883

Token 156: ' float' (ID: 4428)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07199826091527939
    2. 'float' → logprob: -2.821998357772827
    3. ' ' → logprob: -4.821998119354248
    4. ' float' → logprob: -6.321998119354248
    5. '1' → logprob: -9.071998596191406
    6. 'int' → logprob: -11.071998596191406
    7. '100' → logprob: -14.196998596191406
    8. '9' → logprob: -14.446998596191406
    9. 'pow' → logprob: -14.946998596191406
    10. '	float' → logprob: -15.071998596191406

Token 157: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -6.12258882028982e-05
    2. '(' → logprob: -10.25006103515625
    3. '("' → logprob: -10.87506103515625
    4. '('-' → logprob: -13.25006103515625
    5. ''' → logprob: -13.50006103515625
    6. '('.' → logprob: -13.75006103515625
    7. '('+' → logprob: -14.12506103515625
    8. '('.')' → logprob: -14.12506103515625
    9. '('_' → logprob: -14.75006103515625
    10. '(\'' → logprob: -15.37506103515625

Token 158: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.010456609539687634
    2. ''in' → logprob: -5.135456562042236
    3. 'in' → logprob: -6.135456562042236
    4. ''' → logprob: -6.260456562042236
    5. '"' → logprob: -8.760457038879395
    6. 'info' → logprob: -8.885457038879395
    7. 'i' → logprob: -10.385457038879395
    8. 'INF' → logprob: -10.510457038879395
    9. '[in' → logprob: -10.885457038879395
    10. ''i' → logprob: -11.635457038879395

Token 159: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.20142309367656708
    2. ')' → logprob: -1.7014230489730835
    3. '")' → logprob: -11.951422691345215
    4. '')
' → logprob: -14.326422691345215
    5. ')'' → logprob: -14.701422691345215
    6. ' )' → logprob: -14.826422691345215
    7. '()' → logprob: -14.826422691345215
    8. ' ')' → logprob: -15.201422691345215
    9. '.')' → logprob: -15.201422691345215
    10. ''' → logprob: -15.451422691345215

Token 160: 'mod' (ID: 4847)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6287896037101746
    2. '#' → logprob: -1.6287896633148193
    3. '
' → logprob: -1.7537896633148193
    4. 'class' → logprob: -3.2537896633148193
    5. 'n' → logprob: -3.6287896633148193
    6. '<|end|>' → logprob: -5.12878942489624
    7. '

' → logprob: -5.37878942489624
    8. '\n' → logprob: -5.50378942489624
    9. '\' → logprob: -5.62878942489624
    10. '' → logprob: -5.87878942489624

Token 161: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5448392033576965
    2. '=' → logprob: -0.9198392033576965
    3. '_' → logprob: -3.9198391437530518
    4. ' ' → logprob: -7.169839382171631
    5. ',' → logprob: -7.919839382171631
    6. '<|end|>' → logprob: -8.794838905334473
    7. '_=' → logprob: -9.294838905334473
    8. ' _' → logprob: -9.294838905334473
    9. ')' → logprob: -10.044838905334473
    10. '.' → logprob: -11.669838905334473

Token 162: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3137444853782654
    2. '10' → logprob: -1.3137445449829102
    3. '100' → logprob: -7.68874454498291
    4. '1' → logprob: -10.68874454498291
    5. '998' → logprob: -13.81374454498291
    6. ' ' → logprob: -15.68874454498291
    7. 'int' → logprob: -15.81374454498291
    8. '​' → logprob: -15.81374454498291
    9. '109' → logprob: -16.438743591308594
    10. '999' → logprob: -16.813743591308594

Token 163: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.023441946133971214
    2. '100' → logprob: -3.773442029953003
    3. '998' → logprob: -9.148442268371582
    4. '1' → logprob: -9.523442268371582
    5. ' ' → logprob: -11.023442268371582
    6. 'int' → logprob: -15.398442268371582
    7. '(' → logprob: -15.898442268371582
    8. '123' → logprob: -16.523441314697266
    9. '999' → logprob: -17.023441314697266
    10. '```' → logprob: -17.148441314697266

Token 164: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0035438821651041508
    2. '**' → logprob: -5.878543853759766
    3. '09' → logprob: -7.253543853759766
    4. ' ' → logprob: -11.128543853759766
    5. '+' → logprob: -11.503543853759766
    6. '00' → logprob: -13.378543853759766
    7. '7' → logprob: -14.003543853759766
    8. '0' → logprob: -14.128543853759766
    9. '^' → logprob: -14.503543853759766
    10. '69' → logprob: -14.503543853759766

Token 165: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9361264946837764e-07
    2. '09' → logprob: -16.125
    3. ' ' → logprob: -19.875
    4. '９' → logprob: -20.625
    5. '+' → logprob: -21.125
    6. '```' → logprob: -21.625
    7. '10' → logprob: -23.375
    8. '_' → logprob: -23.5
    9. '009' → logprob: -24.125
    10. '
' → logprob: -24.25

Token 166: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -17.75
    3. '９' → logprob: -20.625
    4. '```' → logprob: -22.125
    5. ' ' → logprob: -23.0
    6. '+' → logprob: -23.125
    7. '10' → logprob: -24.125
    8. '
' → logprob: -24.375
    9. '۹' → logprob: -25.0
    10. '٩' → logprob: -25.375

Token 167: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006417844560928643
    2. ' +' → logprob: -7.375641822814941
    3. '7' → logprob: -11.125641822814941
    4. '＋' → logprob: -15.000641822814941
    5. ' plus' → logprob: -16.375640869140625
    6. '+
' → logprob: -16.500640869140625
    7. ' ' → logprob: -17.375640869140625
    8. 'plus' → logprob: -17.500640869140625
    9. '+

' → logprob: -18.625640869140625
    10. ' ' → logprob: -18.875640869140625

Token 168: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '+' → logprob: -17.0
    4. '07' → logprob: -19.5
    5. '9' → logprob: -19.625
    6. '```' → logprob: -19.625
    7. '' → logprob: -21.0
    8. '79' → logprob: -21.6875
    9. '７' → logprob: -22.0
    10. '17' → logprob: -22.0

Token 169: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '```' → logprob: -20.875
    3. '+' → logprob: -21.5
    4. '７' → logprob: -21.875
    5. '07' → logprob: -22.875
    6. '۷' → logprob: -23.625
    7. '' → logprob: -23.875
    8. '

' → logprob: -23.875
    9. '   ' → logprob: -24.0
    10. '``' → logprob: -24.125

Token 170: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18501131236553192
    2. '<|end|>' → logprob: -2.185011386871338
    3. 'def' → logprob: -3.185011386871338
    4. '

' → logprob: -5.435011386871338
    5. '#' → logprob: -5.560011386871338
    6. '<|end|>' → logprob: -6.060011386871338
    7. '' → logprob: -6.685011386871338
    8. 'n' → logprob: -6.935011386871338
    9. '\n' → logprob: -7.185011386871338
    10. '
' → logprob: -7.435011386871338

Token 171: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3358311951160431
    2. 'n' → logprob: -1.7108311653137207
    3. 'd' → logprob: -2.5858311653137207
    4. '#' → logprob: -3.8358311653137207
    5. 'class' → logprob: -5.210831165313721
    6. 'N' → logprob: -7.210831165313721
    7. 'D' → logprob: -8.085831642150879
    8. 'a' → logprob: -8.460831642150879
    9. '\' → logprob: -8.585831642150879
    10. 'A' → logprob: -8.585831642150879

Token 172: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.04289184510707855
    2. ' solve' → logprob: -3.54289174079895
    3. ' dfs' → logprob: -5.292891979217529
    4. 'main' → logprob: -5.792891979217529
    5. ' bfs' → logprob: -6.542891979217529
    6. ' factorial' → logprob: -6.792891979217529
    7. 'solve' → logprob: -7.042891979217529
    8. ' factor' → logprob: -7.542891979217529
    9. ' ' → logprob: -7.792891979217529
    10. 'factor' → logprob: -8.792891502380371

Token 173: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0007712708320468664
    2. '(' → logprob: -7.2507710456848145
    3. '()' → logprob: -10.875771522521973
    4. ':' → logprob: -10.875771522521973
    5. ' ():' → logprob: -11.125771522521973
    6. '(:' → logprob: -11.750771522521973
    7. '(":' → logprob: -15.000771522521973
    8. '():
' → logprob: -15.000771522521973
    9. '):' → logprob: -17.125770568847656
    10. '(':' → logprob: -17.250770568847656

Token 174: '	N' (ID: 44770)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6823229193687439
    2. ' ' → logprob: -1.1823229789733887
    3. '   ' → logprob: -2.0573229789733887
    4. ':' → logprob: -3.4323229789733887
    5. '    ' → logprob: -5.307322978973389
    6. ' (' → logprob: -5.307322978973389
    7. '<|end|>' → logprob: -5.932322978973389
    8. '\' → logprob: -6.432322978973389
    9. 'a' → logprob: -6.557322978973389
    10. '[' → logprob: -6.557322978973389

Token 175: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5380648970603943
    2. ' =' → logprob: -0.9130648970603943
    3. ',' → logprob: -5.163064956665039
    4. ':' → logprob: -5.413064956665039
    5. '.' → logprob: -6.288064956665039
    6. '=int' → logprob: -7.288064956665039
    7. '	' → logprob: -8.038064956665039
    8. ')' → logprob: -8.538064956665039
    9. '   ' → logprob: -8.663064956665039
    10. ' ' → logprob: -8.788064956665039

Token 176: ' W' (ID: 486)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.2414693981409073
    2. 'K' → logprob: -2.116469383239746
    3. ' M' → logprob: -2.616469383239746
    4. 'M' → logprob: -4.366469383239746
    5. ' ' → logprob: -5.991469383239746
    6. ' k' → logprob: -6.616469383239746
    7. 'k' → logprob: -6.741469383239746
    8. '<|end|>' → logprob: -6.741469383239746
    9. 'x' → logprob: -7.991469383239746
    10. 'a' → logprob: -7.991469383239746

Token 177: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141586661338806
    2. ' =' → logprob: -1.7014158964157104
    3. ',' → logprob: -13.576416015625
    4. ' ' → logprob: -14.201416015625
    5. '＝' → logprob: -15.951416015625
    6. '	' → logprob: -16.701416015625
    7. '=

' → logprob: -16.701416015625
    8. ')' → logprob: -16.951416015625
    9. ')=' → logprob: -17.076416015625
    10. '=input' → logprob: -17.201416015625

Token 178: ' MAP' (ID: 53455)
  Prédit: ' MAP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' MAP' → logprob: -0.5591877102851868
    2. 'MAP' → logprob: -1.434187650680542
    3. ' map' → logprob: -1.809187650680542
    4. ' LIST' → logprob: -4.434187889099121
    5. 'LIST' → logprob: -4.809187889099121
    6. 'map' → logprob: -5.309187889099121
    7. ' list' → logprob: -7.309187889099121
    8. ' ' → logprob: -8.309187889099121
    9. '	map' → logprob: -9.309187889099121
    10. 'list' → logprob: -9.809187889099121

Token 179: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00018649426056072116
    2. '()
' → logprob: -9.000186920166016
    3. '(' → logprob: -10.250186920166016
    4. ')' → logprob: -11.625186920166016
    5. '();' → logprob: -11.875186920166016
    6. ' ()' → logprob: -12.875186920166016
    7. '()
' → logprob: -13.125186920166016
    8. '<|end|>' → logprob: -13.750186920166016
    9. '()\' → logprob: -13.750186920166016
    10. '
' → logprob: -14.375186920166016

Token 180: '	n' (ID: 16782)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 181: '1' (ID: 16)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7851768732070923
    2. ' =' → logprob: -1.4101768732070923
    3. '=' → logprob: -1.9101768732070923
    4. 'ums' → logprob: -2.6601767539978027
    5. 'umbers' → logprob: -3.9101767539978027
    6. 'ext' → logprob: -4.160176753997803
    7. 'weights' → logprob: -5.035176753997803
    8. '_list' → logprob: -5.285176753997803
    9. '	' → logprob: -5.285176753997803
    10. 'um' → logprob: -5.410176753997803

Token 182: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6189660429954529
    2. ' =' → logprob: -0.8689660429954529
    3. '=' → logprob: -3.6189661026000977
    4. ' ,' → logprob: -5.243966102600098
    5. '	' → logprob: -6.243966102600098
    6. ',N' → logprob: -6.493966102600098
    7. '_items' → logprob: -6.743966102600098
    8. 's' → logprob: -7.118966102600098
    9. ',n' → logprob: -7.118966102600098
    10. ' ' → logprob: -7.118966102600098

Token 183: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.29259824752807617
    2. 'N' → logprob: -2.417598247528076
    3. ' ' → logprob: -2.917598247528076
    4. '0' → logprob: -2.917598247528076
    5. '[]' → logprob: -3.292598247528076
    6. '	N' → logprob: -4.917598247528076
    7. ' []' → logprob: -5.167598247528076
    8. ' W' → logprob: -6.417598247528076
    9. ' defaultdict' → logprob: -7.167598247528076
    10. '[N' → logprob: -7.292598247528076

Token 184: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.4858235716819763
    2. '//' → logprob: -0.9858235716819763
    3. '
' → logprob: -5.110823631286621
    4. '1' → logprob: -6.985823631286621
    5. '#' → logprob: -7.235823631286621
    6. '<|end|>' → logprob: -7.360823631286621
    7. '*' → logprob: -8.110823631286621
    8. ' *' → logprob: -8.110823631286621
    9. '	' → logprob: -8.360823631286621
    10. '2' → logprob: -8.360823631286621

Token 185: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.368984107510187e-05
    2. ' ' → logprob: -10.625033378601074
    3. '3' → logprob: -11.625033378601074
    4. '4' → logprob: -15.000033378601074
    5. '10' → logprob: -18.12503433227539
    6. '5' → logprob: -18.12503433227539
    7. '20' → logprob: -18.25003433227539
    8. '```' → logprob: -18.31253433227539
    9. '6' → logprob: -18.37503433227539
    10. '２' → logprob: -18.50003433227539

Token 186: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0022256681695580482
    2. '3' → logprob: -6.127225875854492
    3. '4' → logprob: -10.252225875854492
    4. ' ' → logprob: -12.502225875854492
    5. '5' → logprob: -14.252225875854492
    6. '10' → logprob: -15.377225875854492
    7. '20' → logprob: -16.127225875854492
    8. '6' → logprob: -16.127225875854492
    9. '２' → logprob: -16.252225875854492
    10. '```' → logprob: -16.377225875854492

Token 187: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.022007079795002937
    2. '	
' → logprob: -4.897006988525391
    3. '<|end|>' → logprob: -5.022006988525391
    4. ' 
' → logprob: -5.772006988525391
    5. '
' → logprob: -6.522006988525391
    6. 'n' → logprob: -6.772006988525391
    7. '<|end|>' → logprob: -7.272006988525391
    8. '	n' → logprob: -7.397006988525391
    9. '  
' → logprob: -8.02200698852539
    10. '	
' → logprob: -9.89700698852539

Token 188: '	n' (ID: 16782)
  Prédit: '	n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	n' → logprob: -0.7074369788169861
    2. '
' → logprob: -1.3324370384216309
    3. '	
' → logprob: -2.082437038421631
    4. 'n' → logprob: -2.207437038421631
    5. '<|end|>' → logprob: -6.582437038421631
    6. '	N' → logprob: -6.707437038421631
    7. '	
' → logprob: -6.957437038421631
    8. '	W' → logprob: -7.582437038421631
    9. '	A' → logprob: -7.957437038421631
    10. '
' → logprob: -8.082436561584473

Token 189: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08151570707559586
    2. '1' → logprob: -2.7065157890319824
    3. 'n' → logprob: -5.706515789031982
    4. '_' → logprob: -5.831515789031982
    5. '0' → logprob: -6.206515789031982
    6. '=' → logprob: -6.581515789031982
    7. '<|end|>' → logprob: -7.581515789031982
    8. ' =' → logprob: -7.706515789031982
    9. ' ' → logprob: -8.331515312194824
    10. '_n' → logprob: -9.456515312194824

Token 190: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859418421983719
    2. '=' → logprob: -3.0485942363739014
    3. ' ' → logprob: -12.04859447479248
    4. '=N' → logprob: -14.29859447479248
    5. '＝' → logprob: -15.79859447479248
    6. '=n' → logprob: -16.923593521118164
    7. ' ' → logprob: -17.048593521118164
    8. '	' → logprob: -17.173593521118164
    9. ' =
' → logprob: -17.423593521118164
    10. ' =)' → logprob: -18.423593521118164

Token 191: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.029778728261590004
    2. 'N' → logprob: -3.5297787189483643
    3. ' ' → logprob: -10.779778480529785
    4. '	N' → logprob: -12.154778480529785
    5. ' ' → logprob: -13.279778480529785
    6. '  ' → logprob: -15.279778480529785
    7. '   ' → logprob: -16.6547794342041
    8. '　' → logprob: -16.6547794342041
    9. '    ' → logprob: -17.1547794342041
    10. ' (' → logprob: -17.2797794342041

Token 192: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.025752317160367966
    2. '-' → logprob: -3.775752305984497
    3. ' ' → logprob: -6.275752544403076
    4. '<|end|>' → logprob: -7.775752544403076
    5. '-n' → logprob: -9.525752067565918
    6. ' ' → logprob: -10.275752067565918
    7. '_' → logprob: -10.525752067565918
    8. '	' → logprob: -11.275752067565918
    9. '‌' → logprob: -11.650752067565918
    10. '2' → logprob: -11.900752067565918

Token 193: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3138545751571655
    2. ' n' → logprob: -1.3138545751571655
    3. '	n' → logprob: -7.438854694366455
    4. '1' → logprob: -13.938854217529297
    5. '_n' → logprob: -14.063854217529297
    6. ')n' → logprob: -14.313854217529297
    7. ' н' → logprob: -14.563854217529297
    8. '(n' → logprob: -14.688854217529297
    9. ',n' → logprob: -15.563854217529297
    10. ' ' → logprob: -15.563854217529297

Token 194: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2603901015827432e-05
    2. '_' → logprob: -12.125022888183594
    3. '１' → logprob: -12.500022888183594
    4. '2' → logprob: -13.125022888183594
    5. ' ' → logprob: -13.187522888183594
    6. '```' → logprob: -13.312522888183594
    7. '' → logprob: -13.562522888183594
    8. 'n' → logprob: -14.312522888183594
    9. '	' → logprob: -14.437522888183594
    10. '१' → logprob: -14.687522888183594

Token 195: '

' (ID: 279)
  Prédit: '	
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	
' → logprob: -0.52281254529953
    2. '	n' → logprob: -2.397812604904175
    3. '	A' → logprob: -2.647812604904175
    4. '	' → logprob: -3.022812604904175
    5. '
' → logprob: -3.147812604904175
    6. '	items' → logprob: -3.272812604904175
    7. '	list' → logprob: -4.522812366485596
    8. '	s' → logprob: -4.522812366485596
    9. '	first' → logprob: -4.647812366485596
    10. '	N' → logprob: -5.022812366485596

Token 196: '	v' (ID: 20800)
  Prédit: '	
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	
' → logprob: -1.372103214263916
    2. '	items' → logprob: -1.497103214263916
    3. 'items' → logprob: -2.497103214263916
    4. 'data' → logprob: -2.747103214263916
    5. '	data' → logprob: -2.997103214263916
    6. '	A' → logprob: -3.247103214263916
    7. '<|end|>' → logprob: -3.622103214263916
    8. '	n' → logprob: -3.872103214263916
    9. ' items' → logprob: -3.997103214263916
    10. 'A' → logprob: -4.247103214263916

Token 197: 'w' (ID: 86)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -1.1872371435165405
    2. 'alue' → logprob: -1.8122371435165405
    3. 's' → logprob: -2.06223726272583
    4. ',' → logprob: -2.68723726272583
    5. 'w' → logprob: -2.68723726272583
    6. '1' → logprob: -2.68723726272583
    7. 'a' → logprob: -3.06223726272583
    8. 'als' → logprob: -3.31223726272583
    9. ',w' → logprob: -3.56223726272583
    10. ' =' → logprob: -3.81223726272583

Token 198: '1' (ID: 16)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3287293016910553
    2. ' =' → logprob: -2.0787293910980225
    3. '=' → logprob: -2.2037293910980225
    4. '1' → logprob: -3.7037293910980225
    5. '_' → logprob: -4.203729152679443
    6. '_list' → logprob: -6.203729152679443
    7. '=[]' → logprob: -6.578729152679443
    8. ',' → logprob: -7.953729152679443
    9. '_pairs' → logprob: -7.953729152679443
    10. 'a' → logprob: -8.953729629516602

Token 199: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06522303074598312
    2. '=' → logprob: -2.815222978591919
    3. ',' → logprob: -5.815223217010498
    4. 's' → logprob: -8.94022274017334
    5. '1' → logprob: -10.06522274017334
    6. ' ,' → logprob: -10.31522274017334
    7. '=[]' → logprob: -10.69022274017334
    8. ' ' → logprob: -11.44022274017334
    9. '_' → logprob: -11.69022274017334
    10. ' =
' → logprob: -12.06522274017334

Token 200: ' [[' (ID: 9237)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.03716513514518738
    2. ' []' → logprob: -3.9121651649475098
    3. '[' → logprob: -4.53716516494751
    4. ' [' → logprob: -5.53716516494751
    5. '[List' → logprob: -6.91216516494751
    6. '[L' → logprob: -7.41216516494751
    7. '[list' → logprob: -9.912164688110352
    8. '[(' → logprob: -10.287164688110352
    9. '[n' → logprob: -10.662164688110352
    10. '[N' → logprob: -10.787164688110352

Token 201: '0' (ID: 15)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3659438192844391
    2. '0' → logprob: -2.1159439086914062
    3. 'list' → logprob: -2.7409439086914062
    4. 'tuple' → logprob: -2.7409439086914062
    5. '(' → logprob: -3.9909439086914062
    6. '()]' → logprob: -4.490943908691406
    7. ']*' → logprob: -4.990943908691406
    8. ']]' → logprob: -5.740943908691406
    9. 'map' → logprob: -5.865943908691406
    10. '[]' → logprob: -6.240943908691406

Token 202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005835341871716082
    2. '0' → logprob: -7.750583648681641
    3. ' ,' → logprob: -9.00058364868164
    4. ']' → logprob: -11.50058364868164
    5. '	' → logprob: -11.75058364868164
    6. ',
' → logprob: -12.12558364868164
    7. ' ' → logprob: -13.00058364868164
    8. 'for' → logprob: -14.00058364868164
    9. ' for' → logprob: -14.37558364868164
    10. '1' → logprob: -15.00058364868164

Token 203: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015066476771607995
    2. ' ' → logprob: -6.501506805419922
    3. ']' → logprob: -13.876506805419922
    4. '  ' → logprob: -14.439006805419922
    5. '	' → logprob: -14.626506805419922
    6. '
' → logprob: -15.314006805419922
    7. '   ' → logprob: -15.314006805419922
    8. ' ' → logprob: -15.376506805419922
    9. ' 
' → logprob: -15.501506805419922
    10. '     ' → logprob: -15.876506805419922

Token 204: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006329743773676455
    2. ' ' → logprob: -7.3756327629089355
    3. '	' → logprob: -13.188133239746094
    4. ']' → logprob: -13.813133239746094
    5. '1' → logprob: -14.688133239746094
    6. ' ' → logprob: -14.813133239746094
    7. '  ' → logprob: -15.125633239746094
    8. '   ' → logprob: -15.375633239746094
    9. '     ' → logprob: -15.813133239746094
    10. '' → logprob: -15.875633239746094

Token 205: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0023914675693958998
    2. ']]' → logprob: -6.127391338348389
    3. '],' → logprob: -9.502391815185547
    4. ' ]' → logprob: -9.877391815185547
    5. ']
' → logprob: -10.502391815185547
    6. ',' → logprob: -11.002391815185547
    7. ')]' → logprob: -11.377391815185547
    8. ' for' → logprob: -11.627391815185547
    9. ' ]]' → logprob: -13.127391815185547
    10. 'for' → logprob: -13.377391815185547

Token 206: '	v' (ID: 20800)
  Prédit: 'vw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vw' → logprob: -0.07312297075986862
    2. '	v' → logprob: -2.948122978210449
    3. 'v' → logprob: -4.698122978210449
    4. 'for' → logprob: -5.698122978210449
    5. ' vw' → logprob: -5.948122978210449
    6. ' for' → logprob: -6.323122978210449
    7. '	for' → logprob: -7.948122978210449
    8. '[v' → logprob: -8.32312297821045
    9. ',v' → logprob: -8.44812297821045
    10. '	
' → logprob: -9.07312297821045

Token 207: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -8.41866585687967e-06
    2. '1' → logprob: -12.875008583068848
    3. '	w' → logprob: -13.125008583068848
    4. 'wv' → logprob: -13.875008583068848
    5. 'v' → logprob: -14.000008583068848
    6. 'W' → logprob: -14.125008583068848
    7. '_w' → logprob: -14.750008583068848
    8. 'ｗ' → logprob: -15.875008583068848
    9. '[w' → logprob: -16.00000762939453
    10. ' w' → logprob: -16.12500762939453

Token 208: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002387302927672863
    2. '2' → logprob: -6.877387523651123
    3. '=' → logprob: -7.127387523651123
    4. ' =' → logprob: -8.377387046813965
    5. '.append' → logprob: -8.752387046813965
    6. '[' → logprob: -9.377387046813965
    7. '_' → logprob: -10.877387046813965
    8. '=[]' → logprob: -11.127387046813965
    9. '=[' → logprob: -12.002387046813965
    10. '.' → logprob: -12.002387046813965

Token 209: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25194409489631653
    2. '=' → logprob: -1.5019440650939941
    3. '=[]' → logprob: -11.751944541931152
    4. '=[[' → logprob: -12.751944541931152
    5. '=[' → logprob: -13.001944541931152
    6. ' ' → logprob: -14.001944541931152
    7. ' =[' → logprob: -14.251944541931152
    8. '＝' → logprob: -16.376943588256836
    9. '=[]
' → logprob: -16.501943588256836
    10. ' ' → logprob: -16.751943588256836

Token 210: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.04667919874191284
    2. '[]' → logprob: -3.1716792583465576
    3. ' [[' → logprob: -5.7966790199279785
    4. '[' → logprob: -7.9216790199279785
    5. ' []' → logprob: -8.421679496765137
    6. '[][]' → logprob: -10.796679496765137
    7. '[(' → logprob: -11.296679496765137
    8. '[v' → logprob: -12.171679496765137
    9. '[['' → logprob: -12.921679496765137
    10. ' [[]' → logprob: -13.171679496765137

Token 211: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -12.375008583068848
    3. ']' → logprob: -12.875008583068848
    4. '(' → logprob: -14.375008583068848
    5. ']]' → logprob: -15.625008583068848
    6. ',' → logprob: -15.875008583068848
    7. '[' → logprob: -16.25000762939453
    8. ')]' → logprob: -16.75000762939453
    9. '[]' → logprob: -17.00000762939453
    10. ')' → logprob: -17.37500762939453

Token 212: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.143808109802194e-05
    2. ' ,' → logprob: -10.500041007995605
    3. '0' → logprob: -11.250041007995605
    4. ' ' → logprob: -14.125041007995605
    5. '1' → logprob: -16.750041961669922
    6. ',
' → logprob: -17.625041961669922
    7. ']' → logprob: -17.750041961669922
    8. '2' → logprob: -18.125041961669922
    9. '	' → logprob: -19.125041961669922
    10. '[' → logprob: -19.312541961669922

Token 213: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17974989116191864
    2. ' ' → logprob: -1.804749846458435
    3. ' ' → logprob: -13.242249488830566
    4. '	' → logprob: -13.867249488830566
    5. '   ' → logprob: -14.804749488830566
    6. '  ' → logprob: -15.117249488830566
    7. ']' → logprob: -15.492249488830566
    8. ']]' → logprob: -15.742249488830566
    9. '۰' → logprob: -15.992249488830566
    10. ' ]' → logprob: -16.054750442504883

Token 214: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.77022064034827e-05
    2. ' ' → logprob: -9.250097274780273
    3. ']]' → logprob: -15.250097274780273
    4. ']' → logprob: -15.250097274780273
    5. '	' → logprob: -15.937597274780273
    6. '۰' → logprob: -16.000097274780273
    7. ',' → logprob: -16.687597274780273
    8. ' ' → logprob: -16.937597274780273
    9. '０' → logprob: -17.000097274780273
    10. '   ' → logprob: -17.062597274780273

Token 215: ']]

' (ID: 84024)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002454726491123438
    2. ']]' → logprob: -6.12745475769043
    3. ')]' → logprob: -8.75245475769043
    4. ']
' → logprob: -9.75245475769043
    5. ']}' → logprob: -10.87745475769043
    6. '],' → logprob: -11.12745475769043
    7. '}]' → logprob: -11.62745475769043
    8. ' ]' → logprob: -12.00245475769043
    9. ']

' → logprob: -14.25245475769043
    10. '`]' → logprob: -14.25245475769043

Token 216: '	for' (ID: 3903)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.349889874458313
    2. '	for' → logprob: -1.224889874458313
    3. ' for' → logprob: -6.724889755249023
    4. '	
' → logprob: -9.974889755249023
    5. 'v' → logprob: -10.974889755249023
    6. 'def' → logprob: -11.099889755249023
    7. '	line' → logprob: -11.349889755249023
    8. '	lines' → logprob: -11.349889755249023
    9. 'A' → logprob: -11.474889755249023
    10. 'data' → logprob: -11.474889755249023

Token 217: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.018877234309911728
    2. 'i' → logprob: -4.268877029418945
    3. ' _' → logprob: -5.518877029418945
    4. '_' → logprob: -7.643877029418945
    5. '_i' → logprob: -9.393877029418945
    6. '	i' → logprob: -9.518877029418945
    7. ' ' → logprob: -10.393877029418945
    8. ' w' → logprob: -12.143877029418945
    9. ' v' → logprob: -12.768877029418945
    10. 'w' → logprob: -12.768877029418945

Token 218: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.048589639365673065
    2. ' in' → logprob: -3.1735897064208984
    3. 'i' → logprob: -5.423589706420898
    4. 'n' → logprob: -7.298589706420898
    5. ' i' → logprob: -8.798589706420898
    6. '	in' → logprob: -9.048589706420898
    7. 'v' → logprob: -9.798589706420898
    8. ' ' → logprob: -9.923589706420898
    9. '_' → logprob: -10.548589706420898
    10. 'range' → logprob: -10.673589706420898

Token 219: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006793878506869078
    2. ' range' → logprob: -5.006793975830078
    3. '(range' → logprob: -9.631793975830078
    4. '	range' → logprob: -12.381793975830078
    5. 'ange' → logprob: -12.631793975830078
    6. 'in' → logprob: -13.506793975830078
    7. ')' → logprob: -14.631793975830078
    8. 'input' → logprob: -14.756793975830078
    9. ' xrange' → logprob: -14.756793975830078
    10. ' ' → logprob: -15.256793975830078

Token 220: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0008885911083780229
    2. '(N' → logprob: -7.250888824462891
    3. '(' → logprob: -9.25088882446289
    4. '	n' → logprob: -9.87588882446289
    5. 'n' → logprob: -10.75088882446289
    6. ' (' → logprob: -12.37588882446289
    7. ' n' → logprob: -13.00088882446289
    8. '	' → logprob: -13.50088882446289
    9. '()' → logprob: -14.50088882446289
    10. 'N' → logprob: -14.75088882446289

Token 221: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028073713183403015
    2. '2' → logprob: -5.877807140350342
    3. '_' → logprob: -13.8778076171875
    4. ')' → logprob: -14.5653076171875
    5. '１' → logprob: -15.1903076171875
    6. '```' → logprob: -16.1903076171875
    7. '' → logprob: -16.3778076171875
    8. 's' → logprob: -16.4403076171875
    9. 'a' → logprob: -16.6903076171875
    10. ' ' → logprob: -17.3153076171875

Token 222: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6951341032981873
    2. '):' → logprob: -0.6951341032981873
    3. ')' → logprob: -6.695134162902832
    4. '	' → logprob: -8.070134162902832
    5. ':' → logprob: -8.570134162902832
    6. ',' → logprob: -8.820134162902832
    7. '):
' → logprob: -10.195134162902832
    8. ':
' → logprob: -11.195134162902832
    9. ' ):' → logprob: -11.445134162902832
    10. ' ):
' → logprob: -11.570134162902832

Token 223: '	' (ID: 197)
  Prédit: '	v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	v' → logprob: -0.4045419692993164
    2. '	' → logprob: -1.7795419692993164
    3. '   ' → logprob: -2.7795419692993164
    4. '	w' → logprob: -3.2795419692993164
    5. '	s' → logprob: -3.7795419692993164
    6. '	i' → logprob: -4.529541969299316
    7. '	   ' → logprob: -5.029541969299316
    8. 'v' → logprob: -5.029541969299316
    9. '	V' → logprob: -5.154541969299316
    10. '	x' → logprob: -5.654541969299316

Token 224: '	v' (ID: 20800)
  Prédit: '	v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	v' → logprob: -0.789680540561676
    2. 'v' → logprob: -0.914680540561676
    3. 'w' → logprob: -2.6646804809570312
    4. '	w' → logprob: -3.1646804809570312
    5. ' w' → logprob: -4.164680480957031
    6. ' v' → logprob: -4.664680480957031
    7. '	' → logprob: -5.164680480957031
    8. '	V' → logprob: -6.414680480957031
    9. '	a' → logprob: -8.789680480957031
    10. '   ' → logprob: -8.789680480957031

Token 225: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025021275505423546
    2. 'w' → logprob: -4.150021076202393
    3. ',w' → logprob: -5.025021076202393
    4. '	' → logprob: -7.025021076202393
    5. '=' → logprob: -7.775021076202393
    6. ',v' → logprob: -8.52502155303955
    7. ' ,' → logprob: -9.02502155303955
    8. 'v' → logprob: -9.02502155303955
    9. 'W' → logprob: -9.15002155303955
    10. ',W' → logprob: -9.27502155303955

Token 226: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0072805192321538925
    2. ' w' → logprob: -5.007280349731445
    3. '	w' → logprob: -7.507280349731445
    4. 'wt' → logprob: -12.507280349731445
    5. '	' → logprob: -12.882280349731445
    6. ' ' → logprob: -13.632280349731445
    7. '
' → logprob: -13.757280349731445
    8. 'W' → logprob: -13.882280349731445
    9. '```' → logprob: -13.882280349731445
    10. '  ' → logprob: -14.382280349731445

Token 227: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016047507524490356
    2. ' =' → logprob: -4.141047477722168
    3. '	' → logprob: -11.516047477722168
    4. ',' → logprob: -13.641047477722168
    5. '=int' → logprob: -14.891047477722168
    6. '		' → logprob: -15.141047477722168
    7. '＝' → logprob: -15.266047477722168
    8. '=input' → logprob: -15.766047477722168
    9. ')' → logprob: -15.891047477722168
    10. 'v' → logprob: -16.141048431396484

Token 228: ' MAP' (ID: 53455)
  Prédit: 'MAP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAP' → logprob: -0.046973370015621185
    2. ' MAP' → logprob: -3.546973466873169
    3. 'LIST' → logprob: -4.42197322845459
    4. 'map' → logprob: -5.92197322845459
    5. ' map' → logprob: -6.92197322845459
    6. '	M' → logprob: -7.17197322845459
    7. '	map' → logprob: -8.54697322845459
    8. ' LIST' → logprob: -9.17197322845459
    9. 'M' → logprob: -9.42197322845459
    10. '	' → logprob: -9.67197322845459

Token 229: '()
' (ID: 1234)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	' → logprob: -0.11648418009281158
    2. '	v' → logprob: -2.7414841651916504
    3. '<|end|>' → logprob: -3.9914841651916504
    4. '
' → logprob: -4.61648416519165
    5. 'v' → logprob: -4.99148416519165
    6. '		
' → logprob: -5.99148416519165
    7. ',' → logprob: -6.11648416519165
    8. '		' → logprob: -6.36648416519165
    9. ',v' → logprob: -6.74148416519165
    10. '()' → logprob: -7.74148416519165

Token 230: '	' (ID: 197)
  Prédit: '	'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.009123834781348705
    2. '	v' → logprob: -4.759123802185059
    3. 'v' → logprob: -8.259123802185059
    4. '		
' → logprob: -9.634123802185059
    5. '		' → logprob: -10.009123802185059
    6. ',v' → logprob: -10.134123802185059
    7. '<|end|>' → logprob: -10.509123802185059
    8. ',' → logprob: -10.634123802185059
    9. '[v' → logprob: -11.759123802185059
    10. '
' → logprob: -12.009123802185059

Token 231: '	for' (ID: 3903)
  Prédit: '	v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	v' → logprob: -0.023197835311293602
    2. '	' → logprob: -4.273197650909424
    3. 'vw' → logprob: -4.898197650909424
    4. '	if' → logprob: -7.273197650909424
    5. '	w' → logprob: -7.523197650909424
    6. ' vw' → logprob: -8.773198127746582
    7. '
' → logprob: -9.773198127746582
    8. 'v' → logprob: -10.773198127746582
    9. '	
' → logprob: -11.023198127746582
    10. '		
' → logprob: -11.273198127746582

Token 232: ' i' (ID: 575)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' val' → logprob: -1.2770169973373413
    2. ' value' → logprob: -1.5270169973373413
    3. 'value' → logprob: -2.152017116546631
    4. ' j' → logprob: -2.652017116546631
    5. 'val' → logprob: -3.027017116546631
    6. 'v' → logprob: -3.027017116546631
    7. ' v' → logprob: -3.527017116546631
    8. ' _' → logprob: -3.902017116546631
    9. 'nv' → logprob: -3.902017116546631
    10. ' nv' → logprob: -4.027017116546631

Token 233: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.35681474208831787
    2. 'in' → logprob: -1.2318147420883179
    3. ',' → logprob: -5.356814861297607
    4. ',v' → logprob: -6.106814861297607
    5. 'n' → logprob: -7.356814861297607
    6. 'v' → logprob: -8.10681438446045
    7. '1' → logprob: -9.73181438446045
    8. '	in' → logprob: -9.85681438446045
    9. 'range' → logprob: -10.23181438446045
    10. ' i' → logprob: -10.35681438446045

Token 234: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1270095854997635
    2. ' range' → logprob: -2.127009630203247
    3. 'vw' → logprob: -10.002009391784668
    4. '	range' → logprob: -11.002009391784668
    5. 'ran' → logprob: -12.127009391784668
    6. ' vw' → logprob: -12.252009391784668
    7. 'rang' → logprob: -12.502009391784668
    8. '   ' → logprob: -13.502009391784668
    9. ' ' → logprob: -13.627009391784668
    10. 'r' → logprob: -14.627009391784668

Token 235: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0001294030516874045
    2. 'len' → logprob: -9.000129699707031
    3. '	len' → logprob: -12.125129699707031
    4. '(' → logprob: -15.375129699707031
    5. ' len' → logprob: -16.00012969970703
    6. ',len' → logprob: -16.62512969970703
    7. '=len' → logprob: -17.50012969970703
    8. '	' → logprob: -17.87512969970703
    9. '[len' → logprob: -18.50012969970703
    10. '<len' → logprob: -19.50012969970703

Token 236: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -4.127333340875339e-06
    2. '(' → logprob: -13.000003814697266
    3. 'vw' → logprob: -13.625003814697266
    4. '(w' → logprob: -15.250003814697266
    5. '	v' → logprob: -15.250003814697266
    6. ')' → logprob: -17.250003814697266
    7. 'v' → logprob: -17.625003814697266
    8. ' vw' → logprob: -17.750003814697266
    9. ')v' → logprob: -17.750003814697266
    10. '(
' → logprob: -18.250003814697266

Token 237: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00016706773021724075
    2. '1' → logprob: -9.000166893005371
    3. ')' → logprob: -11.125166893005371
    4. '	w' → logprob: -11.250166893005371
    5. 'v' → logprob: -12.750166893005371
    6. ',w' → logprob: -12.875166893005371
    7. 'ｗ' → logprob: -13.000166893005371
    8. '(w' → logprob: -13.375166893005371
    9. 'vw' → logprob: -14.000166893005371
    10. '```' → logprob: -14.500166893005371

Token 238: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '2' → logprob: -15.375000953674316
    3. ')' → logprob: -16.25
    4. '```' → logprob: -17.3125
    5. '１' → logprob: -17.4375
    6. 's' → logprob: -17.75
    7. '' → logprob: -17.875
    8. 'v' → logprob: -18.0
    9. '	' → logprob: -18.0625
    10. '(v' → logprob: -18.125

Token 239: ')):
' (ID: 22530)
  Prédit: ')):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):
' → logprob: -0.5754647850990295
    2. '):
' → logprob: -1.0754647254943848
    3. ')):' → logprob: -2.9504647254943848
    4. '):' → logprob: -3.2004647254943848
    5. '	' → logprob: -6.575464725494385
    6. ')' → logprob: -6.950464725494385
    7. '))' → logprob: -7.200464725494385
    8. '		' → logprob: -8.950465202331543
    9. '):
' → logprob: -10.325465202331543
    10. ')):
' → logprob: -10.450465202331543

Token 240: '		' (ID: 335)
  Prédit: '		'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.693027138710022
    2. '	' → logprob: -0.943027138710022
    3. '		
' → logprob: -3.1930270195007324
    4. '	       ' → logprob: -3.8180270195007324
    5. ',' → logprob: -4.443027019500732
    6. '	v' → logprob: -4.818027019500732
    7. 'v' → logprob: -5.818027019500732
    8. ',v' → logprob: -5.943027019500732
    9. '<|end|>' → logprob: -6.193027019500732
    10. ' 	' → logprob: -6.318027019500732

Token 241: '	p' (ID: 6061)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	' → logprob: -0.02103659138083458
    2. '		' → logprob: -4.771036624908447
    3. 'vw' → logprob: -4.896036624908447
    4. ' vw' → logprob: -6.521036624908447
    5. '	v' → logprob: -6.771036624908447
    6. ',' → logprob: -7.896036624908447
    7. 'v' → logprob: -8.146036148071289
    8. '	       ' → logprob: -8.271036148071289
    9. ',v' → logprob: -8.271036148071289
    10. ' if' → logprob: -8.521036148071289

Token 242: ' =' (ID: 314)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.291285902261734
    2. 'v' → logprob: -2.916285991668701
    3. 'vw' → logprob: -2.916285991668701
    4. ' =' → logprob: -3.291285991668701
    5. '	v' → logprob: -3.416285991668701
    6. '.append' → logprob: -4.416285991668701
    7. 'r' → logprob: -4.541285991668701
    8. 'ush' → logprob: -4.916285991668701
    9. '	' → logprob: -5.041285991668701
    10. '=' → logprob: -5.166285991668701

Token 243: ' vw' (ID: 157855)
  Prédit: 'vw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vw' → logprob: -0.1851324737071991
    2. '[v' → logprob: -1.9351325035095215
    3. ' vw' → logprob: -4.1851325035095215
    4. '[' → logprob: -5.8101325035095215
    5. '[w' → logprob: -6.4351325035095215
    6. 'len' → logprob: -6.5601325035095215
    7. '[len' → logprob: -6.6851325035095215
    8. ' [' → logprob: -6.6851325035095215
    9. 'v' → logprob: -8.435132026672363
    10. '	v' → logprob: -8.560132026672363

Token 244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.68022444692906e-05
    2. 'w' → logprob: -10.000046730041504
    3. '[w' → logprob: -14.750046730041504
    4. 'v' → logprob: -15.375046730041504
    5. '[' → logprob: -15.625046730041504
    6. '[i' → logprob: -16.00004768371582
    7. '[v' → logprob: -16.37504768371582
    8. '' → logprob: -16.87504768371582
    9. '	' → logprob: -17.12504768371582
    10. '2' → logprob: -17.62504768371582

Token 245: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.026689793914556503
    2. '[-' → logprob: -3.6516897678375244
    3. '.append' → logprob: -8.651689529418945
    4. '+i' → logprob: -9.651689529418945
    5. '[' → logprob: -10.526689529418945
    6. '1' → logprob: -10.901689529418945
    7. '+' → logprob: -10.901689529418945
    8. '[len' → logprob: -11.026689529418945
    9. '+[' → logprob: -11.151689529418945
    10. 'i' → logprob: -11.276689529418945

Token 246: '].' (ID: 1651)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.09137892723083496
    2. ']' → logprob: -3.091378927230835
    3. '][:' → logprob: -3.216378927230835
    4. '[:]' → logprob: -7.841379165649414
    5. ']
' → logprob: -7.966379165649414
    6. '[:' → logprob: -8.466379165649414
    7. ':' → logprob: -8.591379165649414
    8. '].' → logprob: -8.591379165649414
    9. ':]' → logprob: -8.716379165649414
    10. ']+' → logprob: -8.841379165649414

Token 247: 'copy' (ID: 14730)
  Prédit: 'copy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'copy' → logprob: -0.14539504051208496
    2. '[:]' → logprob: -2.770395040512085
    3. '0' → logprob: -3.395395040512085
    4. '[:' → logprob: -4.145395278930664
    5. '[' → logprob: -4.270395278930664
    6. ':' → logprob: -5.270395278930664
    7. ' copy' → logprob: -6.645395278930664
    8. 'v' → logprob: -7.270395278930664
    9. '.copy' → logprob: -8.145395278930664
    10. '1' → logprob: -8.145395278930664

Token 248: '()
' (ID: 1234)
  Prédit: '		'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.0384366400539875
    2. '()' → logprob: -4.163436412811279
    3. '()
' → logprob: -4.413436412811279
    4. '	' → logprob: -4.788436412811279
    5. '           ' → logprob: -7.663436412811279
    6. '		
' → logprob: -8.413436889648438
    7. '			
' → logprob: -9.038436889648438
    8. '()[' → logprob: -9.163436889648438
    9. '<|end|>' → logprob: -9.163436889648438
    10. '[' → logprob: -9.413436889648438

Token 249: '		' (ID: 335)
  Prédit: '		'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.007485234644263983
    2. '	' → logprob: -5.882485389709473
    3. '	p' → logprob: -6.132485389709473
    4. 'p' → logprob: -6.382485389709473
    5. '	v' → logprob: -8.257485389709473
    6. '[' → logprob: -9.007485389709473
    7. 'v' → logprob: -9.632485389709473
    8. '+' → logprob: -9.632485389709473
    9. '		
' → logprob: -9.882485389709473
    10. '			' → logprob: -10.132485389709473

Token 250: '	p' (ID: 6061)
  Prédit: '		'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.019576421007514
    2. 'p' → logprob: -4.644576549530029
    3. '	p' → logprob: -5.019576549530029
    4. ' p' → logprob: -6.894576549530029
    5. ' if' → logprob: -7.519576549530029
    6. '	v' → logprob: -8.019576072692871
    7. '	' → logprob: -8.269576072692871
    8. 'v' → logprob: -8.644576072692871
    9. '           ' → logprob: -8.769576072692871
    10. '+' → logprob: -9.269576072692871

Token 251: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.263011578586884e-05
    2. '][' → logprob: -10.875042915344238
    3. '=' → logprob: -12.000042915344238
    4. ' [' → logprob: -12.500042915344238
    5. '=[' → logprob: -13.375042915344238
    6. ' =' → logprob: -13.375042915344238
    7. 'v' → logprob: -13.375042915344238
    8. '
' → logprob: -13.500042915344238
    9. '[
' → logprob: -14.000042915344238
    10. ']' → logprob: -14.375042915344238

Token 252: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02325386554002762
    2. '1' → logprob: -3.773253917694092
    3. '
' → logprob: -12.523253440856934
    4. ' ' → logprob: -13.398253440856934
    5. 'w' → logprob: -14.648253440856934
    6. '   ' → logprob: -14.710753440856934
    7. '```' → logprob: -15.023253440856934
    8. '	' → logprob: -15.148253440856934
    9. ']' → logprob: -15.210753440856934
    10. '

' → logprob: -15.460753440856934

Token 253: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6273684501647949
    2. ']+=' → logprob: -0.8773684501647949
    3. ']+' → logprob: -3.002368450164795
    4. '+' → logprob: -8.752368927001953
    5. '+=' → logprob: -9.377368927001953
    6. ']=' → logprob: -9.502368927001953
    7. ')' → logprob: -9.877368927001953
    8. '+]' → logprob: -10.377368927001953
    9. ' ]' → logprob: -11.127368927001953
    10. ')+' → logprob: -11.752368927001953

Token 254: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06994810700416565
    2. ' +=' → logprob: -2.819948196411133
    3. '+' → logprob: -5.194948196411133
    4. '=' → logprob: -6.569948196411133
    5. ']+=' → logprob: -7.194948196411133
    6. '	' → logprob: -9.069948196411133
    7. ',' → logprob: -10.319948196411133
    8. ' +' → logprob: -10.319948196411133
    9. ' =' → logprob: -10.819948196411133
    10. '+p' → logprob: -11.694948196411133

Token 255: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.052011583000421524
    2. 'w' → logprob: -3.052011489868164
    3. ' v' → logprob: -6.177011489868164
    4. '	v' → logprob: -6.927011489868164
    5. ' w' → logprob: -8.177011489868164
    6. '	w' → logprob: -9.927011489868164
    7. '1' → logprob: -11.177011489868164
    8. '	' → logprob: -12.677011489868164
    9. 'vw' → logprob: -12.677011489868164
    10. '   ' → logprob: -13.052011489868164

Token 256: '
' (ID: 198)
  Prédit: '		'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.02193092741072178
    2. 'p' → logprob: -4.646930694580078
    3. ',' → logprob: -4.896930694580078
    4. '	p' → logprob: -6.521930694580078
    5. '	' → logprob: -6.646930694580078
    6. '
' → logprob: -6.896930694580078
    7. '           ' → logprob: -8.271930694580078
    8. ',p' → logprob: -8.521930694580078
    9. '<|end|>' → logprob: -9.271930694580078
    10. '			' → logprob: -9.396930694580078

Token 257: '		' (ID: 335)
  Prédit: '		'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.005694842431694269
    2. '	' → logprob: -6.25569486618042
    3. ',' → logprob: -6.63069486618042
    4. 'p' → logprob: -7.38069486618042
    5. '			' → logprob: -7.63069486618042
    6. '	p' → logprob: -8.005694389343262
    7. '<|end|>' → logprob: -8.005694389343262
    8. ' p' → logprob: -8.755694389343262
    9. '           ' → logprob: -8.880694389343262
    10. ' ' → logprob: -9.380694389343262

Token 258: '	p' (ID: 6061)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.44917306303977966
    2. '		' → logprob: -1.074173092842102
    3. ' p' → logprob: -4.6991729736328125
    4. '	p' → logprob: -5.6991729736328125
    5. '	' → logprob: -5.9491729736328125
    6. ',' → logprob: -5.9491729736328125
    7. '<|end|>' → logprob: -7.0741729736328125
    8. ' ' → logprob: -7.5741729736328125
    9. '           ' → logprob: -8.324172973632812
    10. '			' → logprob: -9.199172973632812

Token 259: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012642296496778727
    2. ',' → logprob: -10.125126838684082
    3. '	' → logprob: -11.250126838684082
    4. 'p' → logprob: -11.375126838684082
    5. '.' → logprob: -11.750126838684082
    6. ' ' → logprob: -11.750126838684082
    7. '	p' → logprob: -12.375126838684082
    8. '][' → logprob: -12.375126838684082
    9. '
' → logprob: -12.625126838684082
    10. 'import' → logprob: -12.625126838684082

Token 260: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -12.000009536743164
    3. '[' → logprob: -13.500009536743164
    4. ']' → logprob: -14.625009536743164
    5. '
' → logprob: -14.750009536743164
    6. '	' → logprob: -15.375009536743164
    7. 'w' → logprob: -15.375009536743164
    8. '0' → logprob: -16.062509536743164
    9. '```' → logprob: -16.687509536743164
    10. '' → logprob: -16.937509536743164

Token 261: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3791730999946594
    2. ']+=' → logprob: -1.6291730403900146
    3. '+' → logprob: -2.5041730403900146
    4. '+=' → logprob: -4.129173278808594
    5. ' +=' → logprob: -4.254173278808594
    6. ']+' → logprob: -5.379173278808594
    7. '	' → logprob: -6.629173278808594
    8. '[' → logprob: -7.754173278808594
    9. ' ]' → logprob: -8.004173278808594
    10. ')' → logprob: -8.379173278808594

Token 262: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.038344405591487885
    2. ' +=' → logprob: -3.288344383239746
    3. '+' → logprob: -8.163344383239746
    4. ']+=' → logprob: -11.663344383239746
    5. '	' → logprob: -11.913344383239746
    6. '=' → logprob: -13.538344383239746
    7. '+=(' → logprob: -14.288344383239746
    8. '+='' → logprob: -15.163344383239746
    9. '+="' → logprob: -15.663344383239746
    10. ' +' → logprob: -16.288345336914062

Token 263: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.023330383002758026
    2. ' w' → logprob: -3.7733304500579834
    3. '	w' → logprob: -9.398330688476562
    4. ' ' → logprob: -13.773330688476562
    5. ' ' → logprob: -15.273330688476562
    6. '	' → logprob: -15.523330688476562
    7. '   ' → logprob: -16.273330688476562
    8. 'W' → logprob: -16.273330688476562
    9. '_w' → logprob: -17.023330688476562
    10. '
' → logprob: -17.148330688476562

Token 264: '
' (ID: 198)
  Prédit: '		'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '		' → logprob: -0.0007462600478902459
    2. '           ' → logprob: -8.250746726989746
    3. '	' → logprob: -8.375746726989746
    4. ' if' → logprob: -9.250746726989746
    5. ',' → logprob: -9.625746726989746
    6. 'if' → logprob: -10.375746726989746
    7. '	if' → logprob: -10.375746726989746
    8. '			' → logprob: -12.000746726989746
    9. '	       ' → logprob: -12.625746726989746
    10. '<|end|>' → logprob: -12.750746726989746

Token 265: '		' (ID: 335)
  Prédit: '		'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.002681486774235964
    2. '	' → logprob: -6.252681255340576
    3. '           ' → logprob: -7.877681255340576
    4. ' if' → logprob: -9.002681732177734
    5. '	if' → logprob: -9.127681732177734
    6. ',' → logprob: -10.752681732177734
    7. '			' → logprob: -11.002681732177734
    8. 'if' → logprob: -11.002681732177734
    9. '	v' → logprob: -11.127681732177734
    10. '	 	' → logprob: -11.627681732177734

Token 266: '	v' (ID: 20800)
  Prédit: '		'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.06916782259941101
    2. 'vw' → logprob: -3.5691678524017334
    3. 'if' → logprob: -3.9441678524017334
    4. '	' → logprob: -4.819167613983154
    5. '	if' → logprob: -5.319167613983154
    6. ' if' → logprob: -5.569167613983154
    7. '	v' → logprob: -6.694167613983154
    8. '           ' → logprob: -7.819167613983154
    9. ' vw' → logprob: -7.819167613983154
    10. '			' → logprob: -9.819168090820312

Token 267: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.1472419600977446e-06
    2. '	w' → logprob: -14.250000953674316
    3. 'vw' → logprob: -15.375000953674316
    4. ',w' → logprob: -17.250001907348633
    5. '
' → logprob: -17.500001907348633
    6. ' w' → logprob: -17.625001907348633
    7. '[w' → logprob: -17.625001907348633
    8. '1' → logprob: -17.750001907348633
    9. 'ｗ' → logprob: -17.875001907348633
    10. 'wv' → logprob: -17.875001907348633

Token 268: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. '2' → logprob: -14.000001907348633
    3. '.append' → logprob: -14.875001907348633
    4. '[' → logprob: -15.750001907348633
    5. '	' → logprob: -16.875001907348633
    6. '```' → logprob: -17.125001907348633
    7. '' → logprob: -17.500001907348633
    8. ' ' → logprob: -17.500001907348633
    9. '		' → logprob: -17.875001907348633
    10. '   ' → logprob: -18.375001907348633

Token 269: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0033921871799975634
    2. '.' → logprob: -5.753392219543457
    3. '.app' → logprob: -9.253392219543457
    4. 'append' → logprob: -9.628392219543457
    5. '1' → logprob: -10.253392219543457
    6. '_append' → logprob: -11.878392219543457
    7. 'Append' → logprob: -12.878392219543457
    8. '.ap' → logprob: -13.503392219543457
    9. '2' → logprob: -13.628392219543457
    10. 'app' → logprob: -14.128392219543457

Token 270: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.125001907348633
    3. '(
' → logprob: -16.625001907348633
    4. 'p' → logprob: -17.625001907348633
    5. '((' → logprob: -18.750001907348633
    6. '(copy' → logprob: -19.125001907348633
    7. '	p' → logprob: -19.500001907348633
    8. ' (' → logprob: -19.875001907348633
    9. '	' → logprob: -19.875001907348633
    10. '()' → logprob: -21.250001907348633

Token 271: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02173987403512001
    2. '	' → logprob: -4.521739959716797
    3. '	if' → logprob: -5.146739959716797
    4. '	while' → logprob: -6.271739959716797
    5. '		' → logprob: -6.771739959716797
    6. '	return' → logprob: -7.646739959716797
    7. '	v' → logprob: -8.021739959716797
    8. '	for' → logprob: -8.646739959716797
    9. '<|end|>' → logprob: -8.771739959716797
    10. ' )' → logprob: -8.896739959716797

Token 272: '	for' (ID: 3903)
  Prédit: '	v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	v' → logprob: -0.36221277713775635
    2. '	for' → logprob: -1.3622127771377563
    3. 'vw' → logprob: -3.237212657928467
    4. '	w' → logprob: -5.987212657928467
    5. '	while' → logprob: -6.487212657928467
    6. '	s' → logprob: -6.487212657928467
    7. 'for' → logprob: -7.237212657928467
    8. '	n' → logprob: -7.487212657928467
    9. 'v' → logprob: -7.737212657928467
    10. '	from' → logprob: -8.237213134765625

Token 273: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2018831968307495
    2. ' _' → logprob: -1.7018831968307495
    3. ' range' → logprob: -8.076883316040039
    4. ' n' → logprob: -10.076883316040039
    5. ' i' → logprob: -10.201883316040039
    6. 'n' → logprob: -10.951883316040039
    7. 'range' → logprob: -10.951883316040039
    8. ' ' → logprob: -11.076883316040039
    9. ' in' → logprob: -11.951883316040039
    10. ' j' → logprob: -12.451883316040039

Token 274: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5767069458961487
    2. ' in' → logprob: -0.8267069458961487
    3. 'range' → logprob: -7.451706886291504
    4. '_' → logprob: -9.326706886291504
    5. 'n' → logprob: -9.701706886291504
    6. ' range' → logprob: -11.701706886291504
    7. ' ' → logprob: -11.951706886291504
    8. ' i' → logprob: -12.451706886291504
    9. '(' → logprob: -12.451706886291504
    10. ' n' → logprob: -12.701706886291504

Token 275: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01605748012661934
    2. ' range' → logprob: -4.14105749130249
    3. '(range' → logprob: -10.891057014465332
    4. 'v' → logprob: -13.141057014465332
    5. 'n' → logprob: -13.891057014465332
    6. '	range' → logprob: -14.266057014465332
    7. 'rang' → logprob: -15.641057014465332
    8. 'vw' → logprob: -15.891057014465332
    9. 'r' → logprob: -15.891057014465332
    10. '(n' → logprob: -16.26605796813965

Token 276: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0067864167504012585
    2. 'n' → logprob: -5.006786346435547
    3. ' n' → logprob: -9.881786346435547
    4. '	n' → logprob: -11.131786346435547
    5. '(' → logprob: -12.256786346435547
    6. '1' → logprob: -15.631786346435547
    7. '[n' → logprob: -16.631786346435547
    8. ' (' → logprob: -16.881786346435547
    9. '<n' → logprob: -17.006786346435547
    10. '...' → logprob: -17.256786346435547

Token 277: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00016027313540689647
    2. '1' → logprob: -8.750160217285156
    3. '
' → logprob: -14.187660217285156
    4. '

' → logprob: -15.625160217285156
    5. '```' → logprob: -15.687660217285156
    6. ' ' → logprob: -16.500160217285156
    7. '   ' → logprob: -16.625160217285156
    8. 'n' → logprob: -16.687660217285156
    9. '２' → logprob: -16.812660217285156
    10. 'a' → logprob: -16.812660217285156

Token 278: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20178869366645813
    2. '):' → logprob: -1.7017886638641357
    3. ':' → logprob: -8.451788902282715
    4. '	' → logprob: -9.076788902282715
    5. ':
' → logprob: -10.326788902282715
    6. '):
' → logprob: -11.826788902282715
    7. ')' → logprob: -12.201788902282715
    8. '):

' → logprob: -13.701788902282715
    9. '():
' → logprob: -14.826788902282715
    10. ' ' → logprob: -15.701788902282715

Token 279: '	' (ID: 197)
  Prédit: '	'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.002965576946735382
    2. '	v' → logprob: -6.002965450286865
    3. 'v' → logprob: -7.627965450286865
    4. '       ' → logprob: -13.627965927124023
    5. '   ' → logprob: -13.877965927124023
    6. '	w' → logprob: -15.002965927124023
    7. '		' → logprob: -15.127965927124023
    8. '	   ' → logprob: -15.877965927124023
    9. ',v' → logprob: -16.502965927124023
    10. ' v' → logprob: -16.752965927124023

Token 280: '	v' (ID: 20800)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.039592768996953964
    2. '	v' → logprob: -3.289592742919922
    3. '	' → logprob: -6.539592742919922
    4. ' v' → logprob: -9.164592742919922
    5. '		' → logprob: -15.789592742919922
    6. ',v' → logprob: -16.664592742919922
    7. '(v' → logprob: -16.664592742919922
    8. ')v' → logprob: -17.289592742919922
    9. '_v' → logprob: -17.539592742919922
    10. '   ' → logprob: -17.664592742919922

Token 281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.195421494543552e-05
    2. ',w' → logprob: -9.62507152557373
    3. 'w' → logprob: -12.37507152557373
    4. ' ,' → logprob: -13.75007152557373
    5. ',v' → logprob: -15.00007152557373
    6. '	' → logprob: -15.75007152557373
    7. '_,' → logprob: -16.500072479248047
    8. '，' → logprob: -17.250072479248047
    9. '	w' → logprob: -17.875072479248047
    10. ',
' → logprob: -18.125072479248047

Token 282: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.523152768611908
    2. ' w' → logprob: -0.898152768611908
    3. '	w' → logprob: -10.773152351379395
    4. ' ' → logprob: -12.648152351379395
    5. ' ' → logprob: -13.148152351379395
    6. 's' → logprob: -13.648152351379395
    7. '_w' → logprob: -14.648152351379395
    8. 'W' → logprob: -14.898152351379395
    9. '=w' → logprob: -15.835652351379395
    10. ''w' → logprob: -15.960652351379395

Token 283: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740966260433197
    2. ' =' → logprob: -0.9740966558456421
    3. '	' → logprob: -10.974096298217773
    4. ' ' → logprob: -14.474096298217773
    5. 'for' → logprob: -14.474096298217773
    6. ' ' → logprob: -15.099096298217773
    7. ')' → logprob: -15.224096298217773
    8. '＝' → logprob: -15.599096298217773
    9. ' for' → logprob: -15.849096298217773
    10. ',' → logprob: -16.224096298217773

Token 284: ' MAP' (ID: 53455)
  Prédit: 'MAP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAP' → logprob: -0.0011724866926670074
    2. ' MAP' → logprob: -6.7511725425720215
    3. 'map' → logprob: -14.376172065734863
    4. ' ' → logprob: -14.626172065734863
    5. '	M' → logprob: -14.876172065734863
    6. '_MAP' → logprob: -15.126172065734863
    7. ' ' → logprob: -15.376172065734863
    8. '	' → logprob: -15.376172065734863
    9. 'M' → logprob: -16.75117301940918
    10. 'MA' → logprob: -16.75117301940918

Token 285: '()
' (ID: 1234)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	' → logprob: -0.05507771298289299
    2. '	for' → logprob: -2.9300777912139893
    3. 'for' → logprob: -10.18007755279541
    4. ' for' → logprob: -10.43007755279541
    5. '		' → logprob: -10.68007755279541
    6. '	v' → logprob: -10.68007755279541
    7. '	def' → logprob: -10.80507755279541
    8. '	while' → logprob: -11.43007755279541
    9. '
' → logprob: -11.55507755279541
    10. ',' → logprob: -11.55507755279541

Token 286: '	' (ID: 197)
  Prédit: '	'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.005358144640922546
    2. '	for' → logprob: -5.2553582191467285
    3. 'for' → logprob: -9.00535774230957
    4. ' for' → logprob: -13.63035774230957
    5. '		' → logprob: -16.00535774230957
    6. '   ' → logprob: -16.25535774230957
    7. '       ' → logprob: -16.25535774230957
    8. '	   ' → logprob: -17.25535774230957
    9. '	new' → logprob: -18.63035774230957
    10. '	from' → logprob: -18.63035774230957

Token 287: '	for' (ID: 3903)
  Prédit: '	for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	for' → logprob: -0.0017923936247825623
    2. 'for' → logprob: -6.3767924308776855
    3. '	' → logprob: -9.376791954040527
    4. ' for' → logprob: -12.376791954040527
    5. '	f' → logprob: -14.376791954040527
    6. '	new' → logprob: -16.001792907714844
    7. '	while' → logprob: -16.001792907714844
    8. '	v' → logprob: -16.251792907714844
    9. '		' → logprob: -16.876792907714844
    10. '	temp' → logprob: -17.376792907714844

Token 288: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10059309750795364
    2. 'i' → logprob: -2.350593090057373
    3. '	i' → logprob: -8.600593566894531
    4. ' j' → logprob: -9.100593566894531
    5. 'j' → logprob: -9.475593566894531
    6. ' ' → logprob: -11.850593566894531
    7. ' ' → logprob: -13.725593566894531
    8. '   ' → logprob: -13.850593566894531
    9. '  ' → logprob: -13.975593566894531
    10. '_i' → logprob: -14.413093566894531

Token 289: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0024780353996902704
    2. 'in' → logprob: -6.002478122711182
    3. 'range' → logprob: -13.377477645874023
    4. ' ' → logprob: -14.377477645874023
    5. '	in' → logprob: -15.877477645874023
    6. ' range' → logprob: -16.127477645874023
    7. ' i' → logprob: -17.502477645874023
    8. '  ' → logprob: -17.502477645874023
    9. '	' → logprob: -18.252477645874023
    10. '=' → logprob: -19.002477645874023

Token 290: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07890003174543381
    2. ' range' → logprob: -2.578900098800659
    3. '(range' → logprob: -11.578900337219238
    4. '	range' → logprob: -14.078900337219238
    5. 'len' → logprob: -17.203899383544922
    6. 're' → logprob: -17.828899383544922
    7. ' ' → logprob: -18.453899383544922
    8. 'rang' → logprob: -19.078899383544922
    9. 'ran' → logprob: -19.578899383544922
    10. '   ' → logprob: -19.578899383544922

Token 291: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -5.466968650580384e-05
    2. 'len' → logprob: -10.625054359436035
    3. 'range' → logprob: -10.625054359436035
    4. '(range' → logprob: -12.875054359436035
    5. '	len' → logprob: -13.500054359436035
    6. '[len' → logprob: -13.750054359436035
    7. '=len' → logprob: -15.000054359436035
    8. '<len' → logprob: -15.125054359436035
    9. ',len' → logprob: -15.750054359436035
    10. ' len' → logprob: -16.00005531311035

Token 292: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.0325924449716695e-05
    2. '(' → logprob: -11.75001049041748
    3. '(w' → logprob: -13.12501049041748
    4. '	v' → logprob: -15.62501049041748
    5. 'vw' → logprob: -16.875009536743164
    6. '(
' → logprob: -17.500009536743164
    7. 'v' → logprob: -17.500009536743164
    8. ' (' → logprob: -17.750009536743164
    9. ')v' → logprob: -19.125009536743164
    10. ')' → logprob: -19.500009536743164

Token 293: 'w' (ID: 86)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00038658222183585167
    2. 'w' → logprob: -8.375386238098145
    3. '1' → logprob: -8.875386238098145
    4. '(w' → logprob: -12.125386238098145
    5. '(v' → logprob: -12.250386238098145
    6. 'v' → logprob: -13.875386238098145
    7. 'vw' → logprob: -14.000386238098145
    8. 's' → logprob: -14.250386238098145
    9. 'p' → logprob: -14.625386238098145
    10. ')' → logprob: -14.625386238098145

Token 294: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006314247148111463
    2. '1' → logprob: -7.375631332397461
    3. '   ' → logprob: -13.813131332397461
    4. '```' → logprob: -13.938131332397461
    5. ' ' → logprob: -14.625631332397461
    6. ')' → logprob: -14.625631332397461
    7. '	' → logprob: -15.500631332397461
    8. '２' → logprob: -16.12563133239746
    9. '_' → logprob: -16.25063133239746
    10. 'w' → logprob: -16.43813133239746

Token 295: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47422465682029724
    2. '):' → logprob: -0.9742246866226196
    3. '):
' → logprob: -9.599225044250488
    4. ')' → logprob: -10.224225044250488
    5. '):

' → logprob: -10.974225044250488
    6. '()):
' → logprob: -11.849225044250488
    7. '	' → logprob: -12.099225044250488
    8. '():
' → logprob: -13.099225044250488
    9. '[i' → logprob: -13.224225044250488
    10. '[]):' → logprob: -13.349225044250488

Token 296: '		' (ID: 335)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.6966547966003418
    2. '		' → logprob: -0.6966547966003418
    3. '	p' → logprob: -5.696654796600342
    4. 'p' → logprob: -9.1966552734375
    5. ' p' → logprob: -10.5716552734375
    6. '	       ' → logprob: -13.1966552734375
    7. '   ' → logprob: -13.3216552734375
    8. '           ' → logprob: -13.4466552734375
    9. '		   ' → logprob: -13.4466552734375
    10. '	   ' → logprob: -13.5716552734375

Token 297: '	p' (ID: 6061)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.6662461161613464
    2. '	p' → logprob: -1.1662461757659912
    3. 'p' → logprob: -1.9162461757659912
    4. '		' → logprob: -3.791246175765991
    5. ' p' → logprob: -5.291245937347412
    6. '			' → logprob: -10.29124641418457
    7. '(p' → logprob: -11.66624641418457
    8. '       ' → logprob: -11.79124641418457
    9. '   ' → logprob: -12.91624641418457
    10. '	   ' → logprob: -13.04124641418457

Token 298: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20144422352313995
    2. '=' → logprob: -1.7014442682266235
    3. '=p' → logprob: -10.451444625854492
    4. '=v' → logprob: -14.576444625854492
    5. ' ' → logprob: -15.326444625854492
    6. '[' → logprob: -15.576444625854492
    7. '<|end|>' → logprob: -15.701444625854492
    8. 'p' → logprob: -15.826444625854492
    9. ')' → logprob: -15.951444625854492
    10. '=s' → logprob: -16.201444625854492

Token 299: ' vw' (ID: 157855)
  Prédit: 'vw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vw' → logprob: -0.001170460251159966
    2. ' vw' → logprob: -6.751170635223389
    3. '[' → logprob: -16.001171112060547
    4. ' ' → logprob: -16.126171112060547
    5. 'vwa' → logprob: -18.001171112060547
    6. '<|end|>' → logprob: -18.251171112060547
    7. 'vh' → logprob: -18.876171112060547
    8. 'wv' → logprob: -18.876171112060547
    9. '[v' → logprob: -19.001171112060547
    10. 'uvw' → logprob: -19.001171112060547

Token 300: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.13388703338569e-06
    2. 'w' → logprob: -11.875009536743164
    3. '[' → logprob: -13.125009536743164
    4. '```' → logprob: -15.875009536743164
    5. 'v' → logprob: -17.000009536743164
    6. '[w' → logprob: -17.375009536743164
    7. 's' → logprob: -17.875009536743164
    8. '[v' → logprob: -17.875009536743164
    9. 'p' → logprob: -18.000009536743164
    10. '₂' → logprob: -19.250009536743164

Token 301: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -15.625
    3. '<|end|>' → logprob: -17.0
    4. '[I' → logprob: -17.25
    5. '[
' → logprob: -19.0
    6. '[int' → logprob: -19.625
    7. '```' → logprob: -20.125
    8. '[-' → logprob: -20.625
    9. '[s' → logprob: -20.875

Token 302: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.04207266867160797
    2. ').' → logprob: -3.5420727729797363
    3. '.copy' → logprob: -4.542072772979736
    4. '.' → logprob: -6.542072772979736
    5. ']' → logprob: -9.667072296142578
    6. '}.' → logprob: -9.917072296142578
    7. ')' → logprob: -11.417072296142578
    8. ' ].' → logprob: -11.667072296142578
    9. '>.' → logprob: -11.792072296142578
    10. ''].' → logprob: -12.292072296142578

Token 303: 'copy' (ID: 14730)
  Prédit: 'copy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'copy' → logprob: -6.704273118884885e-07
    2. ' copy' → logprob: -14.750000953674316
    3. '.copy' → logprob: -15.875000953674316
    4. '	copy' → logprob: -18.0
    5. '(copy' → logprob: -18.125
    6. 'cop' → logprob: -20.375
    7. 'clone' → logprob: -20.375
    8. '```' → logprob: -20.625
    9. '_copy' → logprob: -21.0
    10. 'Copy' → logprob: -21.125

Token 304: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.20144441723823547
    2. '()' → logprob: -1.701444387435913
    3. '()
' → logprob: -11.076444625854492
    4. ')' → logprob: -11.826444625854492
    5. ')
' → logprob: -12.451444625854492
    6. 'p' → logprob: -13.326444625854492
    7. '()

' → logprob: -13.576444625854492
    8. '	' → logprob: -15.076444625854492
    9. '[]
' → logprob: -15.826444625854492
    10. ']' → logprob: -16.076444625854492

Token 305: '		' (ID: 335)
  Prédit: '		'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.06794406473636627
    2. 'p' → logprob: -3.192944049835205
    3. '[' → logprob: -4.192944049835205
    4. '	' → logprob: -4.817944049835205
    5. '	p' → logprob: -6.817944049835205
    6. '			' → logprob: -9.317944526672363
    7. '
' → logprob: -9.567944526672363
    8. '		
' → logprob: -10.567944526672363
    9. '(p' → logprob: -10.567944526672363
    10. '0' → logprob: -10.692944526672363

Token 306: '	p' (ID: 6061)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00015860427811276168
    2. '[' → logprob: -9.000158309936523
    3. '0' → logprob: -11.125158309936523
    4. ' p' → logprob: -11.750158309936523
    5. '	p' → logprob: -12.000158309936523
    6. '		' → logprob: -12.125158309936523
    7. '	' → logprob: -14.625158309936523
    8. '           ' → logprob: -16.625158309936523
    9. '```' → logprob: -17.000158309936523
    10. '
' → logprob: -17.000158309936523

Token 307: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.650518920039758e-06
    2. '0' → logprob: -12.625003814697266
    3. '[
' → logprob: -16.625003814697266
    4. '	' → logprob: -16.750003814697266
    5. ' ' → logprob: -17.375003814697266
    6. ' [' → logprob: -17.375003814697266
    7. '=' → logprob: -18.250003814697266
    8. '1' → logprob: -18.250003814697266
    9. ' ' → logprob: -18.750003814697266
    10. '#' → logprob: -18.875003814697266

Token 308: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.4849443838757e-06
    2. '[' → logprob: -12.625004768371582
    3. ' ' → logprob: -13.875004768371582
    4. '1' → logprob: -17.000003814697266
    5. '
' → logprob: -17.125003814697266
    6. '	' → logprob: -17.562503814697266
    7. '۰' → logprob: -17.875003814697266
    8. 'p' → logprob: -18.062503814697266
    9. '```' → logprob: -18.562503814697266
    10. 'v' → logprob: -18.687503814697266

Token 309: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -1.1790127754211426
    2. ']+=' → logprob: -1.4290127754211426
    3. ' +=' → logprob: -1.6790127754211426
    4. '+' → logprob: -1.8040127754211426
    5. ']' → logprob: -2.4290127754211426
    6. '<|end|>' → logprob: -5.304012775421143
    7. '[' → logprob: -5.429012775421143
    8. ',' → logprob: -6.929012775421143
    9. ']+' → logprob: -7.054012775421143
    10. '	' → logprob: -7.554012775421143

Token 310: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.27665096521377563
    2. ' +=' → logprob: -1.6516509056091309
    3. '+' → logprob: -3.026650905609131
    4. ' +' → logprob: -6.651650905609131
    5. ']+=' → logprob: -9.401651382446289
    6. '<|end|>' → logprob: -9.776651382446289
    7. '	' → logprob: -12.026651382446289
    8. ' ' → logprob: -12.026651382446289
    9. '[' → logprob: -12.151651382446289
    10. '=' → logprob: -12.276651382446289

Token 311: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.004095143172889948
    2. ' v' → logprob: -5.504095077514648
    3. '	v' → logprob: -11.004095077514648
    4. '<|end|>' → logprob: -18.12909507751465
    5. '*v' → logprob: -18.37909507751465
    6. ')v' → logprob: -19.25409507751465
    7. '_v' → logprob: -19.50409507751465
    8. '(v' → logprob: -19.87909507751465
    9. '-v' → logprob: -19.87909507751465
    10. ' ' → logprob: -20.00409507751465

Token 312: '
' (ID: 198)
  Prédit: '		'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '		' → logprob: -0.005842754151672125
    2. '<|end|>' → logprob: -6.005842685699463
    3. '	' → logprob: -6.630842685699463
    4. 'p' → logprob: -7.130842685699463
    5. ' ' → logprob: -7.755842685699463
    6. '			' → logprob: -8.880843162536621
    7. '	p' → logprob: -9.005843162536621
    8. ' 		' → logprob: -9.255843162536621
    9. ',' → logprob: -9.505843162536621
    10. '			
' → logprob: -9.505843162536621

Token 313: '		' (ID: 335)
  Prédit: '		'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.13384129106998444
    2. 'p' → logprob: -2.3838412761688232
    3. '	p' → logprob: -4.133841514587402
    4. '	' → logprob: -5.133841514587402
    5. ' ' → logprob: -5.883841514587402
    6. ' p' → logprob: -5.883841514587402
    7. '<|end|>' → logprob: -6.008841514587402
    8. '			' → logprob: -7.258841514587402
    9. '[' → logprob: -7.508841514587402
    10. '		 ' → logprob: -8.383841514587402

Token 314: '	p' (ID: 6061)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.8976241946220398
    2. '	p' → logprob: -1.2726242542266846
    3. '		' → logprob: -1.3976242542266846
    4. '	' → logprob: -3.3976242542266846
    5. ' ' → logprob: -3.8976242542266846
    6. ' p' → logprob: -4.8976240158081055
    7. '<|end|>' → logprob: -6.8976240158081055
    8. '[' → logprob: -7.1476240158081055
    9. '			' → logprob: -7.6476240158081055
    10. '1' → logprob: -8.022624015808105

Token 315: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.310693111619912e-05
    2. '1' → logprob: -10.125042915344238
    3. '<|end|>' → logprob: -13.875042915344238
    4. '	' → logprob: -14.500042915344238
    5. '[
' → logprob: -14.625042915344238
    6. ' ' → logprob: -15.625042915344238
    7. ',' → logprob: -16.000043869018555
    8. 'w' → logprob: -16.000043869018555
    9. '```' → logprob: -16.500043869018555
    10. '
' → logprob: -16.625043869018555

Token 316: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8908587662735954e-05
    2. ']' → logprob: -12.125019073486328
    3. 'w' → logprob: -12.125019073486328
    4. ' ' → logprob: -12.375019073486328
    5. '[' → logprob: -13.250019073486328
    6. '<|end|>' → logprob: -13.250019073486328
    7. ')' → logprob: -15.750019073486328
    8. '	' → logprob: -17.625019073486328
    9. ' w' → logprob: -17.625019073486328
    10. '  ' → logprob: -17.875019073486328

Token 317: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07846556603908539
    2. ']+=' → logprob: -2.703465461730957
    3. '+' → logprob: -5.328465461730957
    4. '+=' → logprob: -6.578465461730957
    5. '<|end|>' → logprob: -6.953465461730957
    6. ' +=' → logprob: -7.453465461730957
    7. ']+' → logprob: -7.953465461730957
    8. ' ]' → logprob: -8.953465461730957
    9. ')' → logprob: -9.578465461730957
    10. '	' → logprob: -9.703465461730957

Token 318: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4341684579849243
    2. ' +=' → logprob: -1.0591684579849243
    3. '+' → logprob: -5.309168338775635
    4. ']+=' → logprob: -7.809168338775635
    5. ' +' → logprob: -10.559168815612793
    6. '[' → logprob: -10.934168815612793
    7. '	' → logprob: -11.059168815612793
    8. '<|end|>' → logprob: -11.309168815612793
    9. ' ' → logprob: -11.434168815612793
    10. '+='' → logprob: -11.934168815612793

Token 319: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.5231983065605164
    2. ' w' → logprob: -0.8981983065605164
    3. '	w' → logprob: -9.773198127746582
    4. ' ' → logprob: -11.523198127746582
    5. ' ' → logprob: -12.398198127746582
    6. 's' → logprob: -14.773198127746582
    7. '1' → logprob: -14.898198127746582
    8. '    ' → logprob: -15.585698127746582
    9. '	' → logprob: -15.585698127746582
    10. ''w' → logprob: -15.773198127746582

Token 320: '
' (ID: 198)
  Prédit: '		'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '		' → logprob: -0.00023810577113181353
    2. 'vw' → logprob: -9.750238418579102
    3. '           ' → logprob: -10.375238418579102
    4. ',' → logprob: -10.375238418579102
    5. '	' → logprob: -10.375238418579102
    6. '	v' → logprob: -10.625238418579102
    7. 'v' → logprob: -11.000238418579102
    8. '<|end|>' → logprob: -11.000238418579102
    9. ',v' → logprob: -11.875238418579102
    10. '			' → logprob: -12.375238418579102

Token 321: '		' (ID: 335)
  Prédit: '		'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.007840486243367195
    2. 'vw' → logprob: -4.882840633392334
    3. '	v' → logprob: -9.632840156555176
    4. '	' → logprob: -9.632840156555176
    5. '           ' → logprob: -9.882840156555176
    6. '			' → logprob: -11.507840156555176
    7. 'v' → logprob: -11.632840156555176
    8. '
' → logprob: -12.007840156555176
    9. 'w' → logprob: -12.132840156555176
    10. '	w' → logprob: -12.257840156555176

Token 322: '	v' (ID: 20800)
  Prédit: 'vw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vw' → logprob: -4.723352049040841e-06
    2. '		' → logprob: -12.500004768371582
    3. ' vw' → logprob: -14.625004768371582
    4. '	v' → logprob: -15.000004768371582
    5. 'v' → logprob: -15.875004768371582
    6. '	' → logprob: -16.625003814697266
    7. '			' → logprob: -18.125003814697266
    8. 'vwa' → logprob: -19.750003814697266
    9. 'vue' → logprob: -19.875003814697266
    10. '	       ' → logprob: -20.375003814697266

Token 323: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00297556072473526
    2. '2' → logprob: -5.8779754638671875
    3. '1' → logprob: -8.752975463867188
    4. ' w' → logprob: -12.877975463867188
    5. '	w' → logprob: -12.877975463867188
    6. '[' → logprob: -13.877975463867188
    7. 'v' → logprob: -13.877975463867188
    8. '```' → logprob: -14.002975463867188
    9. '[w' → logprob: -14.002975463867188
    10. ''w' → logprob: -14.252975463867188

Token 324: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.246537173457909e-06
    2. '1' → logprob: -12.375003814697266
    3. 'w' → logprob: -17.500003814697266
    4. 'append' → logprob: -18.250003814697266
    5. '```' → logprob: -18.250003814697266
    6. '[' → logprob: -19.000003814697266
    7. '２' → logprob: -19.125003814697266
    8. 'v' → logprob: -19.750003814697266
    9. '.append' → logprob: -19.875003814697266
    10. '_' → logprob: -20.500003814697266

Token 325: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00020699729793705046
    2. '.' → logprob: -8.50020694732666
    3. ' .' → logprob: -13.62520694732666
    4. '.app' → logprob: -13.75020694732666
    5. '1' → logprob: -14.37520694732666
    6. '.extend' → logprob: -15.50020694732666
    7. 'append' → logprob: -15.62520694732666
    8. '2' → logprob: -15.87520694732666
    9. '.py' → logprob: -17.625207901000977
    10. '[' → logprob: -17.750207901000977

Token 326: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.875
    3. 'p' → logprob: -17.625
    4. '(s' → logprob: -22.625
    5. '(
' → logprob: -22.875
    6. ' (' → logprob: -23.0
    7. 's' → logprob: -23.375
    8. '<p' → logprob: -23.5
    9. '	p' → logprob: -23.5
    10. ')' → logprob: -24.375

Token 327: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8193366486229934e-05
    2. ')p' → logprob: -11.250018119812012
    3. ')
' → logprob: -13.625018119812012
    4. '(' → logprob: -14.250018119812012
    5. ')`' → logprob: -14.625018119812012
    6. ' )' → logprob: -14.875018119812012
    7. '[' → logprob: -15.125018119812012
    8. 'p' → logprob: -15.125018119812012
    9. '	' → logprob: -15.125018119812012
    10. '(p' → logprob: -15.250018119812012

Token 328: '	v' (ID: 20800)
  Prédit: 'vw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vw' → logprob: -0.0023574524093419313
    2. '	
' → logprob: -6.627357482910156
    3. 'v' → logprob: -8.002357482910156
    4. '
' → logprob: -8.502357482910156
    5. '	v' → logprob: -8.627357482910156
    6. ' vw' → logprob: -9.377357482910156
    7. '#' → logprob: -9.752357482910156
    8. ' 
' → logprob: -10.877357482910156
    9. '		
' → logprob: -10.877357482910156
    10. 'def' → logprob: -11.002357482910156

Token 329: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.003448729868978262
    2. 'v' → logprob: -6.253448963165283
    3. '=' → logprob: -8.003448486328125
    4. ' =' → logprob: -8.003448486328125
    5. '1' → logprob: -8.253448486328125
    6. '.sort' → logprob: -8.878448486328125
    7. '=[]' → logprob: -9.253448486328125
    8. '2' → logprob: -9.503448486328125
    9. 'W' → logprob: -10.003448486328125
    10. '=w' → logprob: -10.378448486328125

Token 330: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.100247323513031
    2. '2' → logprob: -2.350247383117676
    3. '[' → logprob: -10.725247383117676
    4. ' =' → logprob: -11.600247383117676
    5. '=' → logprob: -12.975247383117676
    6. '<|end|>' → logprob: -14.350247383117676
    7. '_sorted' → logprob: -14.350247383117676
    8. '続きを' → logprob: -14.600247383117676
    9. '```' → logprob: -14.725247383117676
    10. 'v' → logprob: -14.787747383117676

Token 331: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.11418532580137253
    2. '=' → logprob: -2.239185333251953
    3. '.' → logprob: -7.239185333251953
    4. ' =' → logprob: -7.489185333251953
    5. ',' → logprob: -9.989185333251953
    6. 'sort' → logprob: -11.114185333251953
    7. '=v' → logprob: -11.864185333251953
    8. '.=' → logprob: -12.239185333251953
    9. '_sorted' → logprob: -12.864185333251953
    10. '	sort' → logprob: -13.364185333251953

Token 332: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.31613168120384216
    2. '()' → logprob: -1.3161317110061646
    3. ',key' → logprob: -6.316131591796875
    4. 'key' → logprob: -7.441131591796875
    5. '(reverse' → logprob: -8.691131591796875
    6. '()
' → logprob: -8.941131591796875
    7. '(),' → logprob: -9.691131591796875
    8. '(' → logprob: -9.691131591796875
    9. '(lambda' → logprob: -11.691131591796875
    10. ' key' → logprob: -11.816131591796875

Token 333: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.03261586278676987
    2. '=' → logprob: -3.532615900039673
    3. '=item' → logprob: -5.907615661621094
    4. '=v' → logprob: -8.907615661621094
    5. 'lambda' → logprob: -13.532615661621094
    6. '=len' → logprob: -13.532615661621094
    7. '=value' → logprob: -13.657615661621094
    8. '=p' → logprob: -14.157615661621094
    9. '(lambda' → logprob: -15.282615661621094
    10. ')=' → logprob: -15.282615661621094

Token 334: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.522789478302002
    2. 'x' → logprob: -1.022789478302002
    3. ' lambda' → logprob: -3.147789478302002
    4. ' x' → logprob: -5.647789478302002
    5. '=lambda' → logprob: -6.897789478302002
    6. 'item' → logprob: -11.147789001464844
    7. ':' → logprob: -11.397789001464844
    8. '(lambda' → logprob: -11.397789001464844
    9. '   ' → logprob: -11.772789001464844
    10. 'p' → logprob: -12.397789001464844

Token 335: ':(' (ID: 7990)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029889333993196487
    2. ':x' → logprob: -3.5298893451690674
    3. ' :' → logprob: -9.029889106750488
    4. ':(' → logprob: -11.654889106750488
    5. ':[' → logprob: -12.654889106750488
    6. ':v' → logprob: -12.779889106750488
    7. '[' → logprob: -13.779889106750488
    8. 'x' → logprob: -13.904889106750488
    9. ':
' → logprob: -14.029889106750488
    10. ':p' → logprob: -14.404889106750488

Token 336: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.020653534680604935
    2. ' x' → logprob: -4.39565372467041
    3. '1' → logprob: -5.14565372467041
    4. 'w' → logprob: -6.89565372467041
    5. '[' → logprob: -7.02065372467041
    6. '0' → logprob: -8.27065372467041
    7. ' ' → logprob: -9.39565372467041
    8. ' w' → logprob: -11.27065372467041
    9. '	x' → logprob: -11.52065372467041
    10. '-' → logprob: -12.14565372467041

Token 337: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.999452772201039e-05
    2. ',' → logprob: -11.375029563903809
    3. ')' → logprob: -11.750029563903809
    4. '[
' → logprob: -12.750029563903809
    5. '))' → logprob: -13.000029563903809
    6. '
' → logprob: -14.000029563903809
    7. ' [' → logprob: -14.125029563903809
    8. '1' → logprob: -14.250029563903809
    9. ')[' → logprob: -14.250029563903809
    10. '.' → logprob: -15.125029563903809

Token 338: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04396636039018631
    2. '0' → logprob: -3.168966293334961
    3. '[' → logprob: -7.293966293334961
    4. ' ' → logprob: -9.043966293334961
    5. '
' → logprob: -9.981466293334961
    6. ']' → logprob: -10.356466293334961
    7. '-' → logprob: -10.606466293334961
    8. '
' → logprob: -11.543966293334961
    9. '][' → logprob: -11.668966293334961
    10. '' → logprob: -12.106466293334961

Token 339: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.043538596481084824
    2. ',v' → logprob: -3.2935385704040527
    3. '))' → logprob: -5.918538570404053
    4. ']))' → logprob: -6.668538570404053
    5. ',p' → logprob: -7.293538570404053
    6. ',x' → logprob: -7.293538570404053
    7. ' ,' → logprob: -9.918539047241211
    8. '[' → logprob: -10.168539047241211
    9. ',w' → logprob: -10.543539047241211
    10. '])' → logprob: -11.043539047241211

Token 340: ' -' (ID: 533)
  Prédit: '-x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-x' → logprob: -0.1827356070280075
    2. ' -' → logprob: -1.932735562324524
    3. '-' → logprob: -4.057735443115234
    4. 'x' → logprob: -5.432735443115234
    5. ' x' → logprob: -7.807735443115234
    6. '-v' → logprob: -8.932735443115234
    7. '-n' → logprob: -11.682735443115234
    8. '-l' → logprob: -11.807735443115234
    9. '-p' → logprob: -12.432735443115234
    10. '	x' → logprob: -12.807735443115234

Token 341: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.180879816180095e-05
    2. ' x' → logprob: -9.875051498413086
    3. '	x' → logprob: -15.625051498413086
    4. '<|end|>' → logprob: -17.875051498413086
    5. ')x' → logprob: -18.000051498413086
    6. '(x' → logprob: -18.500051498413086
    7. '<|end|>' → logprob: -20.500051498413086
    8. '$x' → logprob: -21.000051498413086
    9. '>x' → logprob: -21.375051498413086
    10. ''x' → logprob: -21.625051498413086

Token 342: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.180879816180095e-05
    2. '0' → logprob: -9.875051498413086
    3. ')' → logprob: -16.125051498413086
    4. '[
' → logprob: -16.625051498413086
    5. ' [' → logprob: -17.750051498413086
    6. ' ' → logprob: -18.750051498413086
    7. '][' → logprob: -18.750051498413086
    8. ')[' → logprob: -18.750051498413086
    9. 'x' → logprob: -19.125051498413086
    10. '.' → logprob: -19.375051498413086

Token 343: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -13.500001907348633
    3. ' ' → logprob: -14.250001907348633
    4. '۰' → logprob: -17.875001907348633
    5. ')' → logprob: -18.687501907348633
    6. '.' → logprob: -19.125001907348633
    7. '   ' → logprob: -19.500001907348633
    8. '০' → logprob: -20.062501907348633
    9. ',' → logprob: -20.187501907348633
    10. '000' → logprob: -20.250001907348633

Token 344: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0007388730882667005
    2. ')' → logprob: -7.250739097595215
    3. '))
' → logprob: -10.750739097595215
    4. '),' → logprob: -12.750739097595215
    5. ' ))' → logprob: -13.125739097595215
    6. ')))' → logprob: -14.250739097595215
    7. '));' → logprob: -14.875739097595215
    8. '0' → logprob: -15.000739097595215
    9. '])' → logprob: -15.375739097595215
    10. '1' → logprob: -15.750739097595215

Token 345: '	v' (ID: 20800)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.37646088004112244
    2. 'res' → logprob: -1.8764609098434448
    3. 'j' → logprob: -3.3764607906341553
    4. 'idx' → logprob: -3.6264607906341553
    5. 'vw' → logprob: -3.7514607906341553
    6. 'for' → logprob: -3.8764607906341553
    7. 'm' → logprob: -4.001461029052734
    8. 'filtered' → logprob: -4.251461029052734
    9. 'v' → logprob: -5.126461029052734
    10. 'ans' → logprob: -5.501461029052734

Token 346: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00010032468708232045
    2. '1' → logprob: -10.500100135803223
    3. '	w' → logprob: -10.750100135803223
    4. 'W' → logprob: -11.000100135803223
    5. '#' → logprob: -11.500100135803223
    6. 'v' → logprob: -11.750100135803223
    7. '_w' → logprob: -12.625100135803223
    8. '_' → logprob: -13.125100135803223
    9. 'wx' → logprob: -13.500100135803223
    10. '#w' → logprob: -13.875100135803223

Token 347: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.016044924035668373
    2. '1' → logprob: -4.141045093536377
    3. ' =' → logprob: -13.141044616699219
    4. '=' → logprob: -13.391044616699219
    5. '[' → logprob: -13.391044616699219
    6. '	' → logprob: -14.516044616699219
    7. '_' → logprob: -14.766044616699219
    8. '続きを' → logprob: -14.953544616699219
    9. ' ' → logprob: -14.953544616699219
    10. '=[]' → logprob: -15.141044616699219

Token 348: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.00037263904232531786
    2. '.' → logprob: -8.250372886657715
    3. 'sort' → logprob: -9.500372886657715
    4. '.pop' → logprob: -11.125372886657715
    5. '<|end|>' → logprob: -11.250372886657715
    6. '.reverse' → logprob: -13.500372886657715
    7. '=' → logprob: -13.500372886657715
    8. '	sort' → logprob: -13.625372886657715
    9. '.setdefault' → logprob: -13.625372886657715
    10. ' sort' → logprob: -14.500372886657715

Token 349: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.0002572865632828325
    2. '(lambda' → logprob: -8.37525749206543
    3. '(' → logprob: -10.62525749206543
    4. 'key' → logprob: -14.00025749206543
    5. '()' → logprob: -14.25025749206543
    6. ',key' → logprob: -14.87525749206543
    7. '	key' → logprob: -15.62525749206543
    8. '(reverse' → logprob: -15.62525749206543
    9. '(
' → logprob: -16.12525749206543
    10. '((' → logprob: -16.37525749206543

Token 350: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0007241101702675223
    2. '=' → logprob: -7.2507243156433105
    3. 'lambda' → logprob: -11.250723838806152
    4. '=l' → logprob: -14.500723838806152
    5. 'ambda' → logprob: -15.125723838806152
    6. ' =' → logprob: -15.375723838806152
    7. '(lambda' → logprob: -16.87572479248047
    8. '=v' → logprob: -17.00072479248047
    9. '=
' → logprob: -17.75072479248047
    10. 'key' → logprob: -17.75072479248047

Token 351: ' x' (ID: 1215)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.18114815652370453
    2. 'lambda' → logprob: -1.8061481714248657
    3. '(lambda' → logprob: -7.181148052215576
    4. 'ambda' → logprob: -7.806148052215576
    5. ' lambda' → logprob: -9.431148529052734
    6. '=' → logprob: -9.556148529052734
    7. 'x' → logprob: -9.806148529052734
    8. ')' → logprob: -11.556148529052734
    9. '(x' → logprob: -12.431148529052734
    10. ',' → logprob: -12.556148529052734

Token 352: ':(' (ID: 7990)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0006710976012982428
    2. '=' → logprob: -7.500670909881592
    3. '=(' → logprob: -9.25067138671875
    4. 'lambda' → logprob: -11.12567138671875
    5. '(lambda' → logprob: -12.25067138671875
    6. '=x' → logprob: -14.37567138671875
    7. ' =' → logprob: -14.75067138671875
    8. 'ambda' → logprob: -15.00067138671875
    9. ')' → logprob: -15.50067138671875
    10. '=None' → logprob: -15.50067138671875

Token 353: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.8624639324116288e-06
    2. ' x' → logprob: -13.250001907348633
    3. '(x' → logprob: -17.750001907348633
    4. '[' → logprob: -18.000001907348633
    5. '1' → logprob: -19.125001907348633
    6. '0' → logprob: -19.375001907348633
    7. 'w' → logprob: -19.500001907348633
    8. '(' → logprob: -19.500001907348633
    9. ')x' → logprob: -19.625001907348633
    10. '	x' → logprob: -19.875001907348633

Token 354: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009137284359894693
    2. '1' → logprob: -7.000913619995117
    3. '[
' → logprob: -14.375913619995117
    4. '2' → logprob: -15.125913619995117
    5. ' [' → logprob: -15.125913619995117
    6. ')' → logprob: -15.375913619995117
    7. '```' → logprob: -15.875913619995117
    8. '	' → logprob: -16.000913619995117
    9. ')[' → logprob: -16.250913619995117
    10. 'def' → logprob: -16.313413619995117

Token 355: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018125296628568321
    2. '[' → logprob: -9.375181198120117
    3. '0' → logprob: -9.375181198120117
    4. ' ' → logprob: -11.875181198120117
    5. ',' → logprob: -14.312681198120117
    6. '
' → logprob: -14.687681198120117
    7. '   ' → logprob: -14.812681198120117
    8. ']' → logprob: -14.937681198120117
    9. ')' → logprob: -15.187681198120117
    10. '
' → logprob: -15.500181198120117

Token 356: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.249780638725497e-05
    2. '[' → logprob: -11.250032424926758
    3. ' ,' → logprob: -11.250032424926758
    4. ',
' → logprob: -12.750032424926758
    5. ',-' → logprob: -13.875032424926758
    6. '),' → logprob: -13.875032424926758
    7. ',[' → logprob: -14.875032424926758
    8. '],' → logprob: -15.125032424926758
    9. ',x' → logprob: -15.750032424926758
    10. ')' → logprob: -16.250032424926758

Token 357: ' -' (ID: 533)
  Prédit: '-x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-x' → logprob: -0.14848646521568298
    2. ' -' → logprob: -2.023486375808716
    3. '-' → logprob: -5.648486614227295
    4. '-w' → logprob: -6.273486614227295
    5. '-v' → logprob: -8.273486137390137
    6. 'x' → logprob: -9.273486137390137
    7. '-l' → logprob: -11.148486137390137
    8. ' x' → logprob: -11.773486137390137
    9. '-q' → logprob: -13.023486137390137
    10. '-V' → logprob: -13.273486137390137

Token 358: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.128163257315464e-07
    2. ' x' → logprob: -15.25
    3. '<|end|>' → logprob: -18.5
    4. '	x' → logprob: -18.625
    5. ')x' → logprob: -19.25
    6. '[' → logprob: -19.5
    7. '0' → logprob: -20.125
    8. '(x' → logprob: -20.625
    9. ''x' → logprob: -21.875
    10. '$x' → logprob: -22.0

Token 359: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03364973142743111
    2. '0' → logprob: -3.4086496829986572
    3. '[
' → logprob: -13.533649444580078
    4. ')' → logprob: -13.908649444580078
    5. ' [' → logprob: -14.658649444580078
    6. '<|end|>' → logprob: -15.533649444580078
    7. '][' → logprob: -15.908649444580078
    8. ',' → logprob: -15.908649444580078
    9. '1' → logprob: -16.158649444580078
    10. '.' → logprob: -16.158649444580078

Token 360: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -14.000001907348633
    3. '1' → logprob: -15.250001907348633
    4. ' ' → logprob: -15.812501907348633
    5. '۰' → logprob: -16.000001907348633
    6. ')' → logprob: -16.125001907348633
    7. '   ' → logprob: -18.000001907348633
    8. '০' → logprob: -18.250001907348633
    9. '０' → logprob: -18.312501907348633
    10. '	' → logprob: -18.375001907348633

Token 361: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0003585840167943388
    2. ')' → logprob: -8.875358581542969
    3. '))
' → logprob: -9.500358581542969
    4. '])' → logprob: -9.625358581542969
    5. '0' → logprob: -10.625358581542969
    6. '[' → logprob: -11.250358581542969
    7. '))

' → logprob: -11.375358581542969
    8. ']))' → logprob: -11.500358581542969
    9. ')[' → logprob: -12.250358581542969
    10. '))[' → logprob: -12.750358581542969

Token 362: '	tmp' (ID: 44117)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7364135980606079
    2. 'i' → logprob: -1.361413598060608
    3. 'j' → logprob: -1.986413598060608
    4. 'm' → logprob: -2.8614134788513184
    5. 'idx' → logprob: -4.236413478851318
    6. 'ans' → logprob: -5.111413478851318
    7. 'dp' → logprob: -5.111413478851318
    8. 'tmp' → logprob: -5.236413478851318
    9. 'filtered' → logprob: -5.236413478851318
    10. '	i' → logprob: -5.486413478851318

Token 363: '_v' (ID: 5390)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002554261591285467
    2. '_v' → logprob: -7.002554416656494
    3. '=' → logprob: -7.752554416656494
    4. 'v' → logprob: -7.877554416656494
    5. '=[]' → logprob: -8.002553939819336
    6. '1' → logprob: -9.127553939819336
    7. '=[]
' → logprob: -9.252553939819336
    8. '_' → logprob: -9.502553939819336
    9. '_idx' → logprob: -10.002553939819336
    10. ',' → logprob: -10.252553939819336

Token 364: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6482077240943909
    2. 'w' → logprob: -0.8982077240943909
    3. ' =' → logprob: -2.898207664489746
    4. 'al' → logprob: -5.023207664489746
    5. '=[]' → logprob: -5.273207664489746
    6. 'v' → logprob: -6.773207664489746
    7. '=w' → logprob: -6.898207664489746
    8. '=[' → logprob: -8.523207664489746
    9. '=[]
' → logprob: -8.773207664489746
    10. '=v' → logprob: -8.898207664489746

Token 365: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4082365036010742
    2. '-' → logprob: -1.6582365036010742
    3. '-v' → logprob: -2.033236503601074
    4. 'vw' → logprob: -5.033236503601074
    5. '[]' → logprob: -5.908236503601074
    6. '[' → logprob: -6.283236503601074
    7. '-inf' → logprob: -7.283236503601074
    8. '[-' → logprob: -7.408236503601074
    9. '[v' → logprob: -7.908236503601074
    10. '[]
' → logprob: -7.908236503601074

Token 366: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19213679432868958
    2. '-' → logprob: -2.692136764526367
    3. 'vw' → logprob: -2.692136764526367
    4. '-v' → logprob: -3.942136764526367
    5. '[' → logprob: -4.442136764526367
    6. '[]' → logprob: -5.567136764526367
    7. '[v' → logprob: -6.442136764526367
    8. '[-' → logprob: -6.817136764526367
    9. '[]
' → logprob: -6.942136764526367
    10. 'float' → logprob: -9.192136764526367

Token 367: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.078637033700943
    2. ' for' → logprob: -2.95363712310791
    3. 'vw' → logprob: -5.32863712310791
    4. 'v' → logprob: -5.82863712310791
    5. 'filtered' → logprob: -5.95363712310791
    6. 'res' → logprob: -5.95363712310791
    7. 'idx' → logprob: -6.07863712310791
    8. 'result' → logprob: -6.32863712310791
    9. 'ans' → logprob: -6.57863712310791
    10. 'new' → logprob: -6.82863712310791

Token 368: '	for' (ID: 3903)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04106978699564934
    2. ' for' → logprob: -4.166069984436035
    3. 'filtered' → logprob: -4.791069984436035
    4. 'res' → logprob: -5.666069984436035
    5. 'ans' → logprob: -5.791069984436035
    6. 'vw' → logprob: -6.041069984436035
    7. 'j' → logprob: -6.291069984436035
    8. 'new' → logprob: -6.666069984436035
    9. 'v' → logprob: -7.291069984436035
    10. 'idx' → logprob: -7.416069984436035

Token 369: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0033040239941328764
    2. ' i' → logprob: -5.7533040046691895
    3. '	i' → logprob: -9.128304481506348
    4. 'v' → logprob: -12.253304481506348
    5. ' ' → logprob: -12.253304481506348
    6. 'p' → logprob: -13.003304481506348
    7. 'x' → logprob: -13.378304481506348
    8. '   ' → logprob: -14.003304481506348
    9. '_i' → logprob: -14.003304481506348
    10. '```' → logprob: -14.878304481506348

Token 370: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033819619566202164
    2. 'in' → logprob: -3.4088196754455566
    3. ',' → logprob: -8.908819198608398
    4. '	in' → logprob: -10.783819198608398
    5. ' ,' → logprob: -12.158819198608398
    6. ' ' → logprob: -12.408819198608398
    7. ',v' → logprob: -12.908819198608398
    8. ',in' → logprob: -13.283819198608398
    9. '  ' → logprob: -14.533819198608398
    10. 'range' → logprob: -14.658819198608398

Token 371: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011058080941438675
    2. ' range' → logprob: -4.5110578536987305
    3. '	range' → logprob: -11.88605785369873
    4. ' ' → logprob: -13.88605785369873
    5. '   ' → logprob: -14.26105785369873
    6. 'vw' → logprob: -14.38605785369873
    7. '
' → logprob: -15.01105785369873
    8. '  ' → logprob: -15.26105785369873
    9. 'ran' → logprob: -15.51105785369873
    10. '(range' → logprob: -15.51105785369873

Token 372: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06198740750551224
    2. '(len' → logprob: -2.8119874000549316
    3. 'len' → logprob: -11.56198787689209
    4. '1' → logprob: -11.93698787689209
    5. '	' → logprob: -13.06198787689209
    6. '	len' → logprob: -13.68698787689209
    7. ' (' → logprob: -15.81198787689209
    8. ',len' → logprob: -16.061986923217773
    9. ' len' → logprob: -16.311986923217773
    10. '(
' → logprob: -16.686986923217773

Token 373: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3870144784450531
    2. 'len' → logprob: -1.1370145082473755
    3. '	len' → logprob: -9.637014389038086
    4. '(len' → logprob: -10.137014389038086
    5. ' len' → logprob: -10.512014389038086
    6. ' ' → logprob: -12.512014389038086
    7. ',len' → logprob: -12.762014389038086
    8. '   ' → logprob: -13.637014389038086
    9. '<len' → logprob: -14.137014389038086
    10. '2' → logprob: -14.262014389038086

Token 374: '<<' (ID: 5354)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008634423837065697
    2. ',len' → logprob: -4.758634567260742
    3. ' ,' → logprob: -11.008634567260742
    4. '(len' → logprob: -13.883634567260742
    5. '<len' → logprob: -14.008634567260742
    6. 'len' → logprob: -14.508634567260742
    7. ',length' → logprob: -15.008634567260742
    8. ',
' → logprob: -16.133634567260742
    9. '=len' → logprob: -16.258634567260742
    10. '	len' → logprob: -16.383634567260742

Token 375: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3499480187892914
    2. 'len' → logprob: -1.2249480485916138
    3. '15' → logprob: -8.349947929382324
    4. '	n' → logprob: -8.349947929382324
    5. '16' → logprob: -8.474947929382324
    6. '14' → logprob: -8.599947929382324
    7. '17' → logprob: -8.724947929382324
    8. '(len' → logprob: -9.224947929382324
    9. '(n' → logprob: -9.474947929382324
    10. '20' → logprob: -9.849947929382324

Token 376: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005650650127790868
    2. '2' → logprob: -7.500565052032471
    3. 'n' → logprob: -12.250565528869629
    4. ' ' → logprob: -12.750565528869629
    5. '```' → logprob: -13.750565528869629
    6. '0' → logprob: -14.313065528869629
    7. '6' → logprob: -15.188065528869629
    8. '5' → logprob: -15.250565528869629
    9. '(n' → logprob: -15.563065528869629
    10. '１' → logprob: -15.625565528869629

Token 377: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12848800420761108
    2. '):
' → logprob: -2.128488063812256
    3. ':' → logprob: -7.253488063812256
    4. ')' → logprob: -7.628488063812256
    5. '):
' → logprob: -8.753487586975098
    6. ',' → logprob: -8.878487586975098
    7. '	' → logprob: -10.503487586975098
    8. ' ):' → logprob: -11.628487586975098
    9. ':
' → logprob: -12.003487586975098
    10. '1' → logprob: -12.003487586975098

Token 378: ' ' (ID: 220)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.4927620589733124
    2. '	if' → logprob: -1.8677620887756348
    3. ' if' → logprob: -2.4927620887756348
    4. '       ' → logprob: -3.1177620887756348
    5. '<|end|>' → logprob: -3.2427620887756348
    6. '	v' → logprob: -3.9927620887756348
    7. '   ' → logprob: -4.867762088775635
    8. '		
' → logprob: -5.367762088775635
    9. ',' → logprob: -5.367762088775635
    10. ' ' → logprob: -5.492762088775635

Token 379: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7603719830513
    2. '	if' → logprob: -1.3853719234466553
    3. 'if' → logprob: -2.0103719234466553
    4. '	' → logprob: -3.3853719234466553
    5. 'v' → logprob: -3.5103719234466553
    6. '	v' → logprob: -3.8853719234466553
    7. '       ' → logprob: -4.010372161865234
    8. '   ' → logprob: -5.010372161865234
    9. ' for' → logprob: -5.510372161865234
    10. '	for' → logprob: -5.510372161865234

Token 380: ' 要' (ID: 156262)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1461464166641235
    2. '	if' → logprob: -1.3961464166641235
    3. 'if' → logprob: -1.7711464166641235
    4. '	' → logprob: -3.521146297454834
    5. 'for' → logprob: -3.771146297454834
    6. '   ' → logprob: -3.896146297454834
    7. ' for' → logprob: -4.146146297454834
    8. 'v' → logprob: -4.146146297454834
    9. '	for' → logprob: -4.146146297454834
    10. '<|end|>' → logprob: -4.146146297454834

Token 381: '素' (ID: 31399)
  Prédit: '素'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '素' → logprob: -1.3855184316635132
    2. 'る' → logprob: -1.8855184316635132
    3. '望' → logprob: -2.2605185508728027
    4. 'り' → logprob: -2.3855185508728027
    5. '求' → logprob: -2.5105185508728027
    6. '約' → logprob: -2.8855185508728027
    7. '件' → logprob: -3.2605185508728027
    8. 'for' → logprob: -3.3855185508728027
    9. '能' → logprob: -4.135518550872803
    10. '検' → logprob: -4.260518550872803

Token 382: '数' (ID: 7135)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.913442850112915
    2. '<|end|>' → logprob: -1.288442850112915
    3. ' =' → logprob: -2.288442850112915
    4. '[' → logprob: -3.038442850112915
    5. '=' → logprob: -3.163442850112915
    6. ',' → logprob: -4.038442611694336
    7. '[i' → logprob: -4.288442611694336
    8. '<|end|>' → logprob: -4.663442611694336
    9. '   ' → logprob: -4.788442611694336
    10. ' ' → logprob: -5.350942611694336

Token 383: 'を' (ID: 7277)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15552541613578796
    2. ':' → logprob: -3.1555254459381104
    3. ' =' → logprob: -3.4055254459381104
    4. '-' → logprob: -4.155525207519531
    5. '+=' → logprob: -4.155525207519531
    6. '=len' → logprob: -5.155525207519531
    7. '	v' → logprob: -6.030525207519531
    8. ',' → logprob: -6.030525207519531
    9. '>=' → logprob: -6.030525207519531
    10. '	' → logprob: -6.155525207519531

Token 384: '減' (ID: 162831)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5563856959342957
    2. 'len' → logprob: -1.9313857555389404
    3. '=' → logprob: -2.0563857555389404
    4. 'range' → logprob: -3.1813857555389404
    5. '2' → logprob: -4.056385517120361
    6. '=len' → logprob: -4.556385517120361
    7. '0' → logprob: -4.931385517120361
    8. ')' → logprob: -5.056385517120361
    9. ' range' → logprob: -5.681385517120361
    10. 'max' → logprob: -5.681385517120361

Token 385: 'ら' (ID: 8870)
  Prédit: 'ら'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ら' → logprob: -0.029119884595274925
    2. '少' → logprob: -4.279119968414307
    3. 'す' → logprob: -4.279119968414307
    4. 'る' → logprob: -8.154119491577148
    5. 'し' → logprob: -9.029119491577148
    6. '1' → logprob: -9.904119491577148
    7. '）' → logprob: -10.029119491577148
    8. 'わせ' → logprob: -10.404119491577148
    9. 'は' → logprob: -10.654119491577148
    10. 'して' → logprob: -10.779119491577148

Token 386: 'さ' (ID: 7500)
  Prédit: 'す'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'す' → logprob: -0.017373038455843925
    2. 'し' → logprob: -4.142373085021973
    3. 'して' → logprob: -7.267373085021973
    4. 'せ' → logprob: -8.392373085021973
    5. '	' → logprob: -9.142373085021973
    6. '```' → logprob: -9.517373085021973
    7. 'した' → logprob: -9.767373085021973
    8. 'そう' → logprob: -10.017373085021973
    9. '1' → logprob: -10.392373085021973
    10. 'ら' → logprob: -10.642373085021973

Token 387: 'ず' (ID: 36743)
  Prédit: 'す'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'す' → logprob: -0.019510015845298767
    2. 'ず' → logprob: -5.269509792327881
    3. 'ない' → logprob: -5.519509792327881
    4. 'る' → logprob: -6.019509792327881
    5. '```' → logprob: -6.269509792327881
    6. 'せ' → logprob: -7.019509792327881
    7. 'て' → logprob: -7.144509792327881
    8. 'な' → logprob: -7.394509792327881
    9. 'ため' → logprob: -7.519509792327881
    10. 'し' → logprob: -8.144510269165039

Token 388: 'に' (ID: 5280)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6090346574783325
    2. '	if' → logprob: -1.4840346574783325
    3. ':
' → logprob: -2.609034538269043
    4. ',' → logprob: -3.484034538269043
    5. '	' → logprob: -3.484034538269043
    6. '
' → logprob: -4.234034538269043
    7. '   ' → logprob: -4.609034538269043
    8. '	v' → logprob: -4.609034538269043
    9. ' if' → logprob: -4.734034538269043
    10. '<|end|>' → logprob: -4.734034538269043

Token 389: '無' (ID: 10205)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7092737555503845
    2. ' if' → logprob: -0.9592737555503845
    3. '	if' → logprob: -2.4592738151550293
    4. 'while' → logprob: -5.209273815155029
    5. '   ' → logprob: -5.584273815155029
    6. '1' → logprob: -6.084273815155029
    7. '	while' → logprob: -6.084273815155029
    8. 'for' → logprob: -6.084273815155029
    9. '```' → logprob: -6.209273815155029
    10. 'len' → logprob: -6.459273815155029

Token 390: '�' (ID: 51268)
  Prédit: '理'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '理' → logprob: -0.3480592668056488
    2. '\xe9\xa7' → logprob: -2.0980591773986816
    3. '視' → logprob: -2.7230591773986816
    4. '効' → logprob: -3.4730591773986816
    5. '限' → logprob: -4.098059177398682
    6. '題' → logprob: -4.473059177398682
    7. '条件' → logprob: -4.723059177398682
    8. 'く' → logprob: -4.723059177398682
    9. 'し' → logprob: -5.098059177398682
    10. '　' → logprob: -5.848059177398682

Token 391: '�' (ID: 226)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.3080272376537323
    2. '理' → logprob: -1.9330272674560547
    3. '\xe9\xa7' → logprob: -2.8080272674560547
    4. '限' → logprob: -4.183027267456055
    5. '``' → logprob: -4.683027267456055
    6. '�' → logprob: -5.058027267456055
    7. '視' → logprob: -5.433027267456055
    8. '題' → logprob: -5.558027267456055
    9. '効' → logprob: -5.808027267456055
    10. 'く' → logprob: -6.308027267456055

Token 392: 'な' (ID: 5784)
  Prédit: '理'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '理' → logprob: -0.44800686836242676
    2. '\xe9\xa7' → logprob: -1.8230068683624268
    3. '```' → logprob: -2.6980068683624268
    4. '意味' → logprob: -2.9480068683624268
    5. 'v' → logprob: -3.9480068683624268
    6. '効' → logprob: -4.698006629943848
    7. '限' → logprob: -4.823006629943848
    8. '視' → logprob: -5.073006629943848
    9. '条件' → logprob: -5.573006629943848
    10. '題' → logprob: -5.573006629943848

Token 393: '荷' (ID: 81599)
  Prédit: '理'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '理' → logprob: -1.3240041732788086
    2. 'い' → logprob: -2.1990041732788086
    3. '\xe9\xa7' → logprob: -2.1990041732788086
    4. 'り' → logprob: -2.4490041732788086
    5. '```' → logprob: -2.4490041732788086
    6. '効' → logprob: -2.9490041732788086
    7. 'w' → logprob: -2.9490041732788086
    8. '意味' → logprob: -3.1990041732788086
    9. 'v' → logprob: -3.5740041732788086
    10. 'r' → logprob: -3.9490041732788086

Token 394: '物' (ID: 13381)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\xe9\xa7' → logprob: -0.18348394334316254
    2. '```' → logprob: -2.808483839035034
    3. '�' → logprob: -3.308483839035034
    4. '��' → logprob: -3.683483839035034
    5. '理' → logprob: -4.183484077453613
    6. '���' → logprob: -4.808484077453613
    7. '意味' → logprob: -4.933484077453613
    8. '限' → logprob: -5.808484077453613
    9. '用' → logprob: -6.433484077453613
    10. '効' → logprob: -6.558484077453613

Token 395: 'を' (ID: 7277)
  Prédit: 'な'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'な' → logprob: -1.0913373231887817
    2. '題' → logprob: -2.341337203979492
    3. '無' → logprob: -2.966337203979492
    4. 'い' → logprob: -3.091337203979492
    5. 'ー' → logprob: -3.216337203979492
    6. 'の' → logprob: -3.341337203979492
    7. '理' → logprob: -3.466337203979492
    8. 'を' → logprob: -3.591337203979492
    9. '```' → logprob: -3.716337203979492
    10. '�' → logprob: -3.966337203979492

Token 396: '除' (ID: 18593)
  Prédit: 'す'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'す' → logprob: -1.0219542980194092
    2. 'く' → logprob: -1.1469542980194092
    3. 'り' → logprob: -1.5219542980194092
    4. '除' → logprob: -3.771954298019409
    5. 'せ' → logprob: -4.021954536437988
    6. 'し' → logprob: -4.396954536437988
    7. 'る' → logprob: -4.646954536437988
    8. 'い' → logprob: -5.021954536437988
    9. 'わ' → logprob: -5.021954536437988
    10. 'w' → logprob: -5.771954536437988

Token 397: 'く' (ID: 10459)
  Prédit: 'く'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'く' → logprob: -0.9481561779975891
    2. '外' → logprob: -1.5731561183929443
    3. '去' → logprob: -1.6981561183929443
    4. 'い' → logprob: -2.5731561183929443
    5. '```' → logprob: -2.8231561183929443
    6. 'か' → logprob: -3.5731561183929443
    7. '1' → logprob: -4.198156356811523
    8. 'き' → logprob: -4.948156356811523
    9. '0' → logprob: -5.573156356811523
    10. ')' → logprob: -5.573156356811523

Token 398: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.21231572329998016
    2. 'w' → logprob: -2.712315797805786
    3. 'v' → logprob: -3.587315797805786
    4. ' ' → logprob: -3.712315797805786
    5. '#' → logprob: -4.712315559387207
    6. ' ' → logprob: -4.837315559387207
    7. 'f' → logprob: -5.462315559387207
    8. 'ん' → logprob: -5.462315559387207
    9. 'ン' → logprob: -5.462315559387207
    10. 'l' → logprob: -5.587315559387207

Token 399: '	' (ID: 197)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.688429057598114
    2. 'ン' → logprob: -2.563429117202759
    3. '無' → logprob: -2.563429117202759
    4. 'w' → logprob: -2.688429117202759
    5. 'v' → logprob: -3.063429117202759
    6. 'f' → logprob: -3.813429117202759
    7. '   ' → logprob: -3.938429117202759
    8. 'ん' → logprob: -4.06342887878418
    9. '　' → logprob: -4.18842887878418
    10. '	v' → logprob: -4.31342887878418

Token 400: '	v' (ID: 20800)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.0793269872665405
    2. '無' → logprob: -1.5793269872665405
    3. 'f' → logprob: -2.07932710647583
    4. 'v' → logprob: -2.70432710647583
    5. 'n' → logprob: -2.70432710647583
    6. 'def' → logprob: -3.82932710647583
    7. 'ン' → logprob: -4.20432710647583
    8. 'l' → logprob: -4.32932710647583
    9. 'for' → logprob: -4.32932710647583
    10. 'g' → logprob: -4.32932710647583

Token 401: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7580733895301819
    2. 'w' → logprob: -0.8830733895301819
    3. ',' → logprob: -2.633073329925537
    4. ' =' → logprob: -3.758073329925537
    5. 'if' → logprob: -5.508073329925537
    6. 'v' → logprob: -6.133073329925537
    7. 'al' → logprob: -6.383073329925537
    8. '=w' → logprob: -6.383073329925537
    9. ',w' → logprob: -6.383073329925537
    10. '[' → logprob: -6.508073329925537

Token 402: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.2017175704240799
    2. ' w' → logprob: -1.7017176151275635
    3. '	w' → logprob: -8.576717376708984
    4. ' ' → logprob: -10.826717376708984
    5. 'v' → logprob: -10.951717376708984
    6. ' ' → logprob: -11.076717376708984
    7. '<|end|>' → logprob: -11.451717376708984
    8. '	' → logprob: -12.264217376708984
    9. ' 
' → logprob: -12.451717376708984
    10. 'ｗ' → logprob: -12.701717376708984

Token 403: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07010126858949661
    2. ' =' → logprob: -2.695101261138916
    3. ',' → logprob: -9.070101737976074
    4. '=v' → logprob: -10.070101737976074
    5. ',v' → logprob: -13.445101737976074
    6. ' ' → logprob: -13.570101737976074
    7. '=w' → logprob: -13.820101737976074
    8. '	' → logprob: -14.070101737976074
    9. '＝' → logprob: -14.320101737976074
    10. 'v' → logprob: -14.570101737976074

Token 404: ' vw' (ID: 157855)
  Prédit: 'vw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vw' → logprob: -0.0067204674705863
    2. ' vw' → logprob: -5.006720542907715
    3. '	v' → logprob: -12.506720542907715
    4. '0' → logprob: -14.756720542907715
    5. 'v' → logprob: -15.256720542907715
    6. '
' → logprob: -15.381720542907715
    7. '[v' → logprob: -16.2567195892334
    8. 'vwa' → logprob: -16.6317195892334
    9. '<|end|>' → logprob: -16.7567195892334
    10. '   ' → logprob: -16.8817195892334

Token 405: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.016620274633169174
    2. '1' → logprob: -4.26662015914917
    3. 'w' → logprob: -6.26662015914917
    4. ' =' → logprob: -8.516620635986328
    5. 'v' → logprob: -8.891620635986328
    6. '=' → logprob: -9.891620635986328
    7. 'vw' → logprob: -10.391620635986328
    8. ' ' → logprob: -10.516620635986328
    9. ',' → logprob: -10.891620635986328
    10. '[' → logprob: -10.891620635986328

Token 406: '[i' (ID: 1768)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12641137838363647
    2. '[i' → logprob: -2.3764114379882812
    3. ' =' → logprob: -3.8764114379882812
    4. 'i' → logprob: -6.126411437988281
    5. '1' → logprob: -6.876411437988281
    6. '[' → logprob: -7.376411437988281
    7. '=i' → logprob: -7.751411437988281
    8. '	' → logprob: -8.876411437988281
    9. '=[' → logprob: -8.876411437988281
    10. '2' → logprob: -8.876411437988281

Token 407: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011323668994009495
    2. ']=' → logprob: -5.26132345199585
    3. ']
' → logprob: -5.63632345199585
    4. '[' → logprob: -6.13632345199585
    5. '][' → logprob: -8.636323928833008
    6. '
' → logprob: -10.511323928833008
    7. '[
' → logprob: -10.761323928833008
    8. ']
' → logprob: -10.886323928833008
    9. '0' → logprob: -11.011323928833008
    10. '=' → logprob: -11.261323928833008

Token 408: '	' (ID: 197)
  Prédit: '	'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.646845817565918
    2. '	if' → logprob: -0.771845817565918
    3. '<|end|>' → logprob: -5.271845817565918
    4. ' if' → logprob: -6.021845817565918
    5. ',' → logprob: -6.396845817565918
    6. '       ' → logprob: -7.146845817565918
    7. '		
' → logprob: -7.396845817565918
    8. ' ' → logprob: -7.646845817565918
    9. '	for' → logprob: -7.896845817565918
    10. 'if' → logprob: -7.896845817565918

Token 409: '	if' (ID: 1224)
  Prédit: '	if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	if' → logprob: -0.4012841582298279
    2. '	' → logprob: -1.1512842178344727
    3. 'if' → logprob: -5.026284217834473
    4. ' if' → logprob: -5.401284217834473
    5. '	v' → logprob: -7.026284217834473
    6. '	for' → logprob: -7.526284217834473
    7. 'v' → logprob: -8.526284217834473
    8. ' ' → logprob: -8.651284217834473
    9. 'f' → logprob: -8.651284217834473
    10. '	while' → logprob: -8.901284217834473

Token 410: ' tmp' (ID: 8919)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.029287880286574364
    2. 'w' → logprob: -4.029287815093994
    3. 'tmp' → logprob: -5.279287815093994
    4. '	v' → logprob: -5.904287815093994
    5. ' v' → logprob: -6.279287815093994
    6. 'vw' → logprob: -7.279287815093994
    7. 'i' → logprob: -8.029288291931152
    8. ' w' → logprob: -9.029288291931152
    9. '	tmp' → logprob: -9.404288291931152
    10. ' tmp' → logprob: -9.904288291931152

Token 411: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -1.0113126039505005
    2. '<v' → logprob: -1.1363126039505005
    3. '[' → logprob: -1.8863126039505005
    4. '<' → logprob: -2.136312484741211
    5. ' <' → logprob: -3.511312484741211
    6. 'v' → logprob: -4.886312484741211
    7. '0' → logprob: -6.511312484741211
    8. '	v' → logprob: -7.136312484741211
    9. '_' → logprob: -7.261312484741211
    10. '<p' → logprob: -7.511312484741211

Token 412: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.10517773777246475
    2. '>=' → logprob: -2.605177640914917
    3. '>' → logprob: -4.355177879333496
    4. '<v' → logprob: -4.730177879333496
    5. ' <' → logprob: -6.105177879333496
    6. '<=' → logprob: -6.980177879333496
    7. ' >=' → logprob: -7.855177879333496
    8. '<w' → logprob: -7.855177879333496
    9. ' >' → logprob: -9.355177879333496
    10. '<p' → logprob: -9.730177879333496

Token 413: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.004282346460968256
    2. ' v' → logprob: -5.504282474517822
    3. '	v' → logprob: -8.504281997680664
    4. '
' → logprob: -14.504281997680664
    5. ' ' → logprob: -15.129281997680664
    6. '=v' → logprob: -15.629281997680664
    7. '-v' → logprob: -16.379281997680664
    8. 'w' → logprob: -16.754281997680664
    9. '	' → logprob: -16.879281997680664
    10. '[v' → logprob: -17.129281997680664

Token 414: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39615947008132935
    2. ':
' → logprob: -1.1461594104766846
    3. '=' → logprob: -4.771159648895264
    4. ':=' → logprob: -8.396159172058105
    5. '	' → logprob: -8.771159172058105
    6. ' =' → logprob: -9.646159172058105
    7. ':v' → logprob: -9.646159172058105
    8. ' and' → logprob: -9.896159172058105
    9. 'v' → logprob: -10.021159172058105
    10. '=v' → logprob: -10.521159172058105

Token 415: '		' (ID: 335)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.039893269538879395
    2. '		' → logprob: -3.41489315032959
    3. '	       ' → logprob: -6.28989315032959
    4. '	v' → logprob: -6.66489315032959
    5. '	   ' → logprob: -6.78989315032959
    6. '		   ' → logprob: -7.66489315032959
    7. '           ' → logprob: -8.16489315032959
    8. '	tmp' → logprob: -8.41489315032959
    9. 'tmp' → logprob: -8.66489315032959
    10. 'v' → logprob: -8.78989315032959

Token 416: '	tmp' (ID: 44117)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.38869988918304443
    2. '	tmp' → logprob: -1.1386998891830444
    3. ' tmp' → logprob: -6.513700008392334
    4. '   ' → logprob: -9.138699531555176
    5. '	v' → logprob: -9.638699531555176
    6. 'vw' → logprob: -9.888699531555176
    7. '		' → logprob: -10.138699531555176
    8. '	       ' → logprob: -11.138699531555176
    9. '[tmp' → logprob: -11.388699531555176
    10. '	' → logprob: -11.513699531555176

Token 417: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -3.128163257315464e-07
    2. '	v' → logprob: -16.125
    3. '_' → logprob: -16.75
    4. 'v' → logprob: -18.125
    5. '	' → logprob: -19.625
    6. '_w' → logprob: -20.875
    7. ' _' → logprob: -21.25
    8. '_vk' → logprob: -22.125
    9. '_va' → logprob: -22.375
    10. '		' → logprob: -22.875

Token 418: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02378879301249981
    2. ' =' → logprob: -3.7737886905670166
    3. '=v' → logprob: -7.523788928985596
    4. '＝' → logprob: -13.773788452148438
    5. '=w' → logprob: -13.898788452148438
    6. '=
' → logprob: -14.148788452148438
    7. 'v' → logprob: -15.648788452148438
    8. ',' → logprob: -16.773788452148438
    9. ',v' → logprob: -17.148788452148438
    10. '.=' → logprob: -17.398788452148438

Token 419: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0019868058152496815
    2. ' v' → logprob: -6.251986980438232
    3. '	v' → logprob: -9.751986503601074
    4. '_v' → logprob: -18.00198745727539
    5. ')v' → logprob: -18.50198745727539
    6. ' ' → logprob: -18.87698745727539
    7. 'w' → logprob: -18.87698745727539
    8. 'vq' → logprob: -19.25198745727539
    9. '<v' → logprob: -19.37698745727539
    10. '
' → logprob: -19.37698745727539

Token 420: '
' (ID: 198)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	' → logprob: -0.24878562986850739
    2. 'else' → logprob: -1.6237856149673462
    3. '	else' → logprob: -4.123785495758057
    4. ' else' → logprob: -5.623785495758057
    5. 'v' → logprob: -6.373785495758057
    6. '	v' → logprob: -7.748785495758057
    7. ')' → logprob: -9.123785972595215
    8. '<|end|>' → logprob: -9.373785972595215
    9. '       ' → logprob: -9.498785972595215
    10. '		' → logprob: -9.498785972595215

Token 421: '	' (ID: 197)
  Prédit: '	'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.10502395778894424
    2. 'else' → logprob: -2.4800238609313965
    3. '	else' → logprob: -4.2300238609313965
    4. ' else' → logprob: -8.105024337768555
    5. '	v' → logprob: -8.480024337768555
    6. 'v' → logprob: -8.480024337768555
    7. 'vw' → logprob: -8.605024337768555
    8. '	   ' → logprob: -9.605024337768555
    9. '	w' → logprob: -9.730024337768555
    10. '[' → logprob: -10.105024337768555

Token 422: '	else' (ID: 5107)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.08269070088863373
    2. '	else' → logprob: -2.832690715789795
    3. 'else' → logprob: -4.457690715789795
    4. '	v' → logprob: -5.457690715789795
    5. ' else' → logprob: -5.707690715789795
    6. 'v' → logprob: -7.082690715789795
    7. '	elif' → logprob: -9.332690238952637
    8. 'vw' → logprob: -9.457690238952637
    9. '		' → logprob: -9.707690238952637
    10. '	   ' → logprob: -10.207690238952637

Token 423: ':
' (ID: 734)
  Prédit: '		'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.025427771732211113
    2. ':' → logprob: -4.02542781829834
    3. ':
' → logprob: -6.02542781829834
    4. '           ' → logprob: -6.27542781829834
    5. '		   ' → logprob: -6.90042781829834
    6. '	       ' → logprob: -7.27542781829834
    7. ',' → logprob: -8.40042781829834
    8. '	' → logprob: -9.02542781829834
    9. ' :' → logprob: -9.15042781829834
    10. '	v' → logprob: -9.40042781829834

Token 424: '		' (ID: 335)
  Prédit: '		'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.17231369018554688
    2. 'vw' → logprob: -2.172313690185547
    3. '	v' → logprob: -3.422313690185547
    4. '	       ' → logprob: -5.547313690185547
    5. 'v' → logprob: -6.047313690185547
    6. ' vw' → logprob: -6.422313690185547
    7. '		   ' → logprob: -6.797313690185547
    8. '           ' → logprob: -7.047313690185547
    9. '	' → logprob: -7.047313690185547
    10. ',v' → logprob: -7.672313690185547

Token 425: '	v' (ID: 20800)
  Prédit: 'vw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vw' → logprob: -0.009368565864861012
    2. '		' → logprob: -4.884368419647217
    3. 'v' → logprob: -6.509368419647217
    4. ' vw' → logprob: -9.009368896484375
    5. '	v' → logprob: -10.009368896484375
    6. 'w' → logprob: -10.634368896484375
    7. 'vq' → logprob: -10.759368896484375
    8. 'vv' → logprob: -11.009368896484375
    9. 'vj' → logprob: -11.259368896484375
    10. 'vh' → logprob: -12.259368896484375

Token 426: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.03974972665309906
    2. 'v' → logprob: -3.9147496223449707
    3. 'vw' → logprob: -4.664749622344971
    4. '[i' → logprob: -4.789749622344971
    5. '2' → logprob: -7.414749622344971
    6. '[' → logprob: -8.539750099182129
    7. '[v' → logprob: -8.664750099182129
    8. '	v' → logprob: -9.414750099182129
    9. '		' → logprob: -9.914750099182129
    10. 'x' → logprob: -10.664750099182129

Token 427: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.4849443838757e-06
    2. '1' → logprob: -12.375004768371582
    3. 'v' → logprob: -16.500003814697266
    4. 'w' → logprob: -16.500003814697266
    5. '２' → logprob: -17.375003814697266
    6. '_' → logprob: -17.750003814697266
    7. '[' → logprob: -18.000003814697266
    8. ' ' → logprob: -18.375003814697266
    9. '₂' → logprob: -18.500003814697266
    10. '```' → logprob: -18.750003814697266

Token 428: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0031833017710596323
    2. '.pop' → logprob: -5.753183364868164
    3. '2' → logprob: -12.878183364868164
    4. 'pop' → logprob: -13.753183364868164
    5. '.' → logprob: -14.128183364868164
    6. '[' → logprob: -14.503183364868164
    7. '1' → logprob: -15.003183364868164
    8. '.remove' → logprob: -16.253183364868164
    9. '=' → logprob: -16.378183364868164
    10. '[j' → logprob: -16.628183364868164

Token 429: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5824834108352661
    2. '[' → logprob: -0.8324834108352661
    3. ']=' → logprob: -5.582483291625977
    4. '=' → logprob: -6.207483291625977
    5. ']' → logprob: -7.832483291625977
    6. '0' → logprob: -8.457483291625977
    7. '=[' → logprob: -9.707483291625977
    8. '1' → logprob: -11.332483291625977
    9. '>[' → logprob: -11.332483291625977
    10. '-' → logprob: -11.332483291625977

Token 430: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. '1' → logprob: -13.75000286102295
    3. '[' → logprob: -14.87500286102295
    4. ' ' → logprob: -14.87500286102295
    5. '=' → logprob: -15.00000286102295
    6. ']' → logprob: -15.87500286102295
    7. '０' → logprob: -16.250001907348633
    8. '۰' → logprob: -16.375001907348633
    9. '
' → logprob: -16.750001907348633
    10. '][' → logprob: -17.375001907348633

Token 431: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014213806949555874
    2. ' =' → logprob: -4.264214038848877
    3. '=-' → logprob: -10.389213562011719
    4. '=v' → logprob: -12.014213562011719
    5. ']=' → logprob: -12.639213562011719
    6. '=int' → logprob: -12.764213562011719
    7. '＝' → logprob: -13.389213562011719
    8. ')=' → logprob: -13.889213562011719
    9. '=max' → logprob: -13.889213562011719
    10. '-=' → logprob: -14.389213562011719

Token 432: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004082674626260996
    2. ' =' → logprob: -5.504082679748535
    3. '=-' → logprob: -13.004082679748535
    4. '＝' → logprob: -13.879082679748535
    5. '-=' → logprob: -14.629082679748535
    6. '=v' → logprob: -15.379082679748535
    7. '+=' → logprob: -15.754082679748535
    8. '=int' → logprob: -16.12908172607422
    9. '=max' → logprob: -16.87908172607422
    10. '=_' → logprob: -17.12908172607422

Token 433: ' tmp' (ID: 8919)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20079639554023743
    2. '0' → logprob: -2.200796365737915
    3. '-inf' → logprob: -3.700796365737915
    4. '-INF' → logprob: -3.700796365737915
    5. '-v' → logprob: -4.075796604156494
    6. 'tmp' → logprob: -5.825796604156494
    7. ' -' → logprob: -6.825796604156494
    8. ' ' → logprob: -9.200796127319336
    9. '-in' → logprob: -9.325796127319336
    10. '-V' → logprob: -9.450796127319336

Token 434: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.0005660186288878322
    2. '_' → logprob: -7.875566005706787
    3. '-' → logprob: -9.375566482543945
    4. 'v' → logprob: -9.500566482543945
    5. '-v' → logprob: -11.375566482543945
    6. '_-' → logprob: -12.750566482543945
    7. '_w' → logprob: -13.500566482543945
    8. '_i' → logprob: -13.500566482543945
    9. '0' → logprob: -13.500566482543945
    10. '	v' → logprob: -13.875566482543945

Token 435: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 436: '	idx' (ID: 148992)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 437: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003716581268236041
    2. '=' → logprob: -5.878716468811035
    3. '_' → logprob: -7.253716468811035
    4. '2' → logprob: -9.253716468811035
    5. '1' → logprob: -10.628716468811035
    6. '_v' → logprob: -10.878716468811035
    7. 's' → logprob: -11.128716468811035
    8. '	' → logprob: -11.378716468811035
    9. '＝' → logprob: -12.003716468811035
    10. ',' → logprob: -12.128716468811035

Token 438: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05517664924263954
    2. '=' → logprob: -2.9301767349243164
    3. ',' → logprob: -8.180176734924316
    4. ' ' → logprob: -12.805176734924316
    5. ' ,' → logprob: -13.430176734924316
    6. '<|end|>' → logprob: -13.430176734924316
    7. '=int' → logprob: -13.930176734924316
    8. '1' → logprob: -14.055176734924316
    9. '	' → logprob: -14.430176734924316
    10. 's' → logprob: -14.430176734924316

Token 439: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09246283769607544
    2. 'len' → logprob: -2.4674627780914307
    3. ' ' → logprob: -5.84246301651001
    4. ' len' → logprob: -8.842462539672852
    5. '1' → logprob: -8.967462539672852
    6. '-' → logprob: -8.967462539672852
    7. 'bis' → logprob: -9.092462539672852
    8. '[len' → logprob: -11.092462539672852
    9. '	len' → logprob: -11.217462539672852
    10. ' -' → logprob: -11.342462539672852

Token 440: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008763590827584267
    2. 'len' → logprob: -4.758763790130615
    3. ' ' → logprob: -9.883763313293457
    4. '-' → logprob: -10.258763313293457
    5. 'bis' → logprob: -10.258763313293457
    6. 'idx' → logprob: -11.508763313293457
    7. '[len' → logprob: -12.508763313293457
    8. ' len' → logprob: -13.133763313293457
    9. '1' → logprob: -13.133763313293457
    10. '	len' → logprob: -13.258763313293457

Token 441: '
' (ID: 198)
  Prédit: '	idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	idx' → logprob: -0.09741449356079102
    2. 'idx' → logprob: -3.222414493560791
    3. '	for' → logprob: -3.472414493560791
    4. '<|end|>' → logprob: -4.597414493560791
    5. '	max' → logprob: -6.347414493560791
    6. '<|end|>' → logprob: -6.347414493560791
    7. '	while' → logprob: -6.597414493560791
    8. ',' → logprob: -6.847414493560791
    9. ' idx' → logprob: -6.847414493560791
    10. 'for' → logprob: -6.972414493560791

Token 442: '	idx' (ID: 148992)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.03573155030608177
    2. '	idx' → logprob: -3.910731554031372
    3. 'max' → logprob: -5.160731315612793
    4. 'ans' → logprob: -5.785731315612793
    5. '	ans' → logprob: -6.410731315612793
    6. 'res' → logprob: -6.660731315612793
    7. 'for' → logprob: -7.160731315612793
    8. 'result' → logprob: -7.410731315612793
    9. ' idx' → logprob: -7.410731315612793
    10. '	max' → logprob: -8.285731315612793

Token 443: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3681487441062927
    2. '2' → logprob: -1.7431488037109375
    3. ' =' → logprob: -2.3681488037109375
    4. '1' → logprob: -3.2431488037109375
    5. '=
' → logprob: -9.493148803710938
    6. '0' → logprob: -9.868148803710938
    7. '```' → logprob: -9.993148803710938
    8. '	' → logprob: -10.493148803710938
    9. ',' → logprob: -10.743148803710938
    10. ':' → logprob: -11.118148803710938

Token 444: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14267711341381073
    2. '=' → logprob: -2.017677068710327
    3. '0' → logprob: -14.517677307128906
    4. '＝' → logprob: -14.642677307128906
    5. '<|end|>' → logprob: -15.267677307128906
    6. ' ' → logprob: -15.392677307128906
    7. '=len' → logprob: -15.642677307128906
    8. ',' → logprob: -15.892677307128906
    9. '=int' → logprob: -16.767677307128906
    10. '=}' → logprob: -16.892677307128906

Token 445: ' ' (ID: 220)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.005695673171430826
    2. '0' → logprob: -5.255695819854736
    3. ' len' → logprob: -8.130695343017578
    4. '(len' → logprob: -9.255695343017578
    5. 'bis' → logprob: -11.130695343017578
    6. '1' → logprob: -11.380695343017578
    7. '(' → logprob: -11.505695343017578
    8. '	len' → logprob: -11.630695343017578
    9. ' ' → logprob: -11.755695343017578
    10. 'n' → logprob: -13.005695343017578

Token 446: '2' (ID: 17)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.008747298270463943
    2. '0' → logprob: -4.758747100830078
    3. '(len' → logprob: -9.383747100830078
    4. ' len' → logprob: -10.133747100830078
    5. '(' → logprob: -12.383747100830078
    6. '1' → logprob: -13.633747100830078
    7. ' ' → logprob: -13.883747100830078
    8. '	len' → logprob: -14.258747100830078
    9. '[len' → logprob: -14.633747100830078
    10. '-' → logprob: -14.883747100830078

Token 447: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.27817970514297485
    2. '*' → logprob: -1.52817964553833
    3. '0' → logprob: -4.02817964553833
    4. '*(' → logprob: -6.77817964553833
    5. '<<' → logprob: -6.77817964553833
    6. '1' → logprob: -7.02817964553833
    7. '5' → logprob: -7.15317964553833
    8. '*n' → logprob: -7.15317964553833
    9. '7' → logprob: -7.52817964553833
    10. '*N' → logprob: -7.77817964553833

Token 448: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -8.756989700486884e-05
    2. '	n' → logprob: -9.75008773803711
    3. ' n' → logprob: -10.75008773803711
    4. '
' → logprob: -12.87508773803711
    5. '   ' → logprob: -13.50008773803711
    6. '<n' → logprob: -14.12508773803711
    7. '(n' → logprob: -14.12508773803711
    8. '0' → logprob: -14.62508773803711
    9. '*n' → logprob: -14.87508773803711
    10. '16' → logprob: -15.62508773803711

Token 449: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00018983196059707552
    2. '1' → logprob: -8.625189781188965
    3. 'n' → logprob: -12.500189781188965
    4. '	' → logprob: -13.375189781188965
    5. '```' → logprob: -13.500189781188965
    6. '２' → logprob: -13.875189781188965
    7. ' ' → logprob: -13.875189781188965
    8. '0' → logprob: -14.500189781188965
    9. '   ' → logprob: -15.125189781188965
    10. '_' → logprob: -15.875189781188965

Token 450: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.9887068271636963
    2. '-' → logprob: -1.9887068271636963
    3. '0' → logprob: -2.2387068271636963
    4. '<|end|>' → logprob: -2.2387068271636963
    5. ' ' → logprob: -2.7387068271636963
    6. '1' → logprob: -2.9887068271636963
    7. '[' → logprob: -3.1137068271636963
    8. '
' → logprob: -3.9887068271636963
    9. '	' → logprob: -3.9887068271636963
    10. 'for' → logprob: -4.613706588745117

Token 451: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7848862373502925e-05
    2. ' ' → logprob: -10.625027656555176
    3. '2' → logprob: -13.000027656555176
    4. '0' → logprob: -14.875027656555176
    5. '１' → logprob: -15.875027656555176
    6. '-' → logprob: -16.437528610229492
    7. '' → logprob: -16.437528610229492
    8. '	' → logprob: -16.750028610229492
    9. '۱' → logprob: -17.062528610229492
    10. '
' → logprob: -17.187528610229492

Token 452: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. '2' → logprob: -11.87501335144043
    3. ' ' → logprob: -12.12501335144043
    4. '0' → logprob: -15.68751335144043
    5. '１' → logprob: -16.06251335144043
    6. '' → logprob: -16.68751335144043
    7. '	' → logprob: -16.75001335144043
    8. '```' → logprob: -16.75001335144043
    9. '-' → logprob: -17.31251335144043
    10. '
' → logprob: -17.43751335144043

Token 453: '
' (ID: 198)
  Prédit: '	ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	ans' → logprob: -0.9964725971221924
    2. '
' → logprob: -1.3714725971221924
    3. 'max' → logprob: -1.8714725971221924
    4. '	max' → logprob: -2.1214725971221924
    5. '	
' → logprob: -3.4964725971221924
    6. 'ans' → logprob: -3.7464725971221924
    7. '	answer' → logprob: -4.371472358703613
    8. ' ans' → logprob: -4.996472358703613
    9. '	result' → logprob: -5.246472358703613
    10. '	while' → logprob: -5.496472358703613

Token 454: '	ans' (ID: 102831)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6186242699623108
    2. '	ans' → logprob: -0.8686242699623108
    3. 'res' → logprob: -3.493624210357666
    4. 'max' → logprob: -5.118624210357666
    5. ' ans' → logprob: -6.368624210357666
    6. 'answer' → logprob: -6.743624210357666
    7. '	res' → logprob: -7.368624210357666
    8. 'result' → logprob: -7.493624210357666
    9. '	max' → logprob: -7.618624210357666
    10. '	answer' → logprob: -7.743624210357666

Token 455: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931489109992981
    2. ' =' → logprob: -0.6931489109992981
    3. ' ' → logprob: -13.943148612976074
    4. ',' → logprob: -15.193148612976074
    5. '＝' → logprob: -15.818148612976074
    6. '	' → logprob: -15.818148612976074
    7. '=int' → logprob: -16.44314956665039
    8. '=-' → logprob: -16.56814956665039
    9. ' ' → logprob: -17.56814956665039
    10. ' =
' → logprob: -17.81814956665039

Token 456: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011068572290241718
    2. ' ' → logprob: -4.511068344116211
    3. '	' → logprob: -11.886068344116211
    4. '-' → logprob: -12.011068344116211
    5. ' -' → logprob: -12.511068344116211
    6. ' ' → logprob: -13.136068344116211
    7. '   ' → logprob: -14.386068344116211
    8. 'float' → logprob: -15.198568344116211
    9. 'max' → logprob: -15.386068344116211
    10. '０' → logprob: -15.573568344116211

Token 457: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.264322317088954e-05
    2. ' ' → logprob: -9.875052452087402
    3. '-' → logprob: -14.875052452087402
    4. '	' → logprob: -15.125052452087402
    5. 'float' → logprob: -15.750052452087402
    6. 'max' → logprob: -16.62505340576172
    7. 'INF' → logprob: -16.62505340576172
    8. '０' → logprob: -17.00005340576172
    9. ' ' → logprob: -17.12505340576172
    10. '   ' → logprob: -17.25005340576172

Token 458: '
' (ID: 198)
  Prédit: '	while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	while' → logprob: -0.08896705508232117
    2. '
' → logprob: -3.3389670848846436
    3. 'while' → logprob: -3.3389670848846436
    4. ' while' → logprob: -4.3389668464660645
    5. '	
' → logprob: -6.9639668464660645
    6. '	for' → logprob: -9.213967323303223
    7. '<|end|>' → logprob: -10.088967323303223
    8. ' 
' → logprob: -11.838967323303223
    9. '	' → logprob: -12.588967323303223
    10. ')' → logprob: -12.713967323303223

Token 459: '	while' (ID: 10883)
  Prédit: '	while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	while' → logprob: -0.1342463195323944
    2. 'while' → logprob: -2.634246349334717
    3. ' while' → logprob: -3.384246349334717
    4. '
' → logprob: -4.009246349334717
    5. '	
' → logprob: -6.634246349334717
    6. ' 
' → logprob: -9.384245872497559
    7. '<|end|>' → logprob: -10.009245872497559
    8. '   ' → logprob: -10.134245872497559
    9. '```' → logprob: -10.134245872497559
    10. 'While' → logprob: -10.134245872497559

Token 460: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.034666888415813446
    2. ' idx' → logprob: -3.4096667766571045
    3. '	idx' → logprob: -6.909667015075684
    4. '(idx' → logprob: -11.409667015075684
    5. 'True' → logprob: -12.284667015075684
    6. 'vw' → logprob: -12.659667015075684
    7. ' True' → logprob: -13.909667015075684
    8. '0' → logprob: -14.159667015075684
    9. 'v' → logprob: -14.159667015075684
    10. '[idx' → logprob: -15.284667015075684

Token 461: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015633940347470343
    2. '<' → logprob: -9.37515640258789
    3. '2' → logprob: -10.62515640258789
    4. '<=' → logprob: -10.62515640258789
    5. ' <' → logprob: -11.62515640258789
    6. ' <=' → logprob: -12.37515640258789
    7. '```' → logprob: -13.00015640258789
    8. ' ' → logprob: -13.37515640258789
    9. '!=' → logprob: -13.50015640258789
    10. '_' → logprob: -13.87515640258789

Token 462: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.21020016074180603
    2. '<' → logprob: -2.085200071334839
    3. ' <=' → logprob: -2.835200071334839
    4. '<=' → logprob: -5.460200309753418
    5. '<len' → logprob: -6.085200309753418
    6. ' ' → logprob: -10.960200309753418
    7. '<size' → logprob: -11.210200309753418
    8. '<n' → logprob: -12.335200309753418
    9. '<num' → logprob: -12.460200309753418
    10. '<int' → logprob: -12.710200309753418

Token 463: ' ' (ID: 220)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5206786394119263
    2. '1' → logprob: -1.5206786394119263
    3. '2' → logprob: -1.7706786394119263
    4. '(' → logprob: -4.145678520202637
    5. '(len' → logprob: -6.895678520202637
    6. ' len' → logprob: -8.520678520202637
    7. ' ' → logprob: -10.520678520202637
    8. '	' → logprob: -11.895678520202637
    9. ' (' → logprob: -11.895678520202637
    10. '	len' → logprob: -12.145678520202637

Token 464: '2' (ID: 17)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.014709287323057652
    2. '2' → logprob: -4.63970947265625
    3. '1' → logprob: -5.38970947265625
    4. '(len' → logprob: -8.88970947265625
    5. ' len' → logprob: -9.01470947265625
    6. '(' → logprob: -9.13970947265625
    7. '	len' → logprob: -11.88970947265625
    8. '	' → logprob: -13.38970947265625
    9. ' ' → logprob: -13.76470947265625
    10. '=len' → logprob: -14.76470947265625

Token 465: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.007054337300360203
    2. ' **' → logprob: -5.382054328918457
    3. '1' → logprob: -6.382054328918457
    4. '*n' → logprob: -8.132054328918457
    5. 'n' → logprob: -8.507054328918457
    6. '	' → logprob: -9.257054328918457
    7. '	n' → logprob: -9.882054328918457
    8. ' n' → logprob: -10.757054328918457
    9. '
' → logprob: -11.507054328918457
    10. ' ' → logprob: -11.507054328918457

Token 466: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.632542913896032e-05
    2. '	n' → logprob: -10.625046730041504
    3. ' n' → logprob: -10.750046730041504
    4. '(n' → logprob: -14.750046730041504
    5. '   ' → logprob: -16.625045776367188
    6. ' ' → logprob: -17.750045776367188
    7. '<n' → logprob: -18.500045776367188
    8. '	' → logprob: -19.000045776367188
    9. '_n' → logprob: -19.000045776367188
    10. 'N' → logprob: -19.125045776367188

Token 467: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026745274662971497
    2. 'n' → logprob: -3.651745319366455
    3. '2' → logprob: -8.651744842529297
    4. ' n' → logprob: -9.401744842529297
    5. '	n' → logprob: -9.776744842529297
    6. '(n' → logprob: -10.651744842529297
    7. ' ' → logprob: -10.651744842529297
    8. '```' → logprob: -11.089244842529297
    9. '_n' → logprob: -11.776744842529297
    10. '' → logprob: -11.839244842529297

Token 468: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0059696766547858715
    2. 'and' → logprob: -5.130969524383545
    3. '	and' → logprob: -10.630970001220703
    4. ':' → logprob: -11.880970001220703
    5. ' ' → logprob: -11.880970001220703
    6. ' и' → logprob: -13.380970001220703
    7. ':
' → logprob: -15.130970001220703
    8. ')' → logprob: -15.380970001220703
    9. ',' → logprob: -15.630970001220703
    10. ' ' → logprob: -16.255970001220703

Token 469: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.002302270382642746
    2. ' idx' → logprob: -6.252302169799805
    3. '	idx' → logprob: -8.252302169799805
    4. 'vw' → logprob: -9.752302169799805
    5. '0' → logprob: -10.002302169799805
    6. '   ' → logprob: -12.502302169799805
    7. '  ' → logprob: -12.877302169799805
    8. ' ' → logprob: -13.502302169799805
    9. '(idx' → logprob: -14.502302169799805
    10. '	' → logprob: -15.002302169799805

Token 470: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -13.125006675720215
    3. '```' → logprob: -13.375006675720215
    4. '２' → logprob: -13.500006675720215
    5. 'idx' → logprob: -15.000006675720215
    6. '   ' → logprob: -15.375006675720215
    7. '۲' → logprob: -15.937506675720215
    8. '' → logprob: -16.4375057220459
    9. '	' → logprob: -16.5000057220459
    10. '1' → logprob: -16.5000057220459

Token 471: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.02981853485107422
    2. ' >=' → logprob: -3.529818534851074
    3. '>' → logprob: -9.654818534851074
    4. ')>=' → logprob: -13.154818534851074
    5. ']>=' → logprob: -14.029818534851074
    6. ' >' → logprob: -14.404818534851074
    7. '≥' → logprob: -14.779818534851074
    8. '[' → logprob: -16.52981948852539
    9. ' ' → logprob: -16.77981948852539
    10. '	' → logprob: -17.40481948852539

Token 472: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006716674659401178
    2. ' ' → logprob: -5.006716728210449
    3. '	' → logprob: -14.25671672821045
    4. '   ' → logprob: -15.25671672821045
    5. ' ' → logprob: -16.631715774536133
    6. '０' → logprob: -16.756715774536133
    7. '00' → logprob: -16.881715774536133
    8. '  ' → logprob: -17.006715774536133
    9. '۰' → logprob: -17.006715774536133
    10. ' ' → logprob: -17.694215774536133

Token 473: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026217024424113333
    2. ' ' → logprob: -8.250262260437012
    3. '０' → logprob: -15.250262260437012
    4. '	' → logprob: -15.375262260437012
    5. '۰' → logprob: -15.875262260437012
    6. '   ' → logprob: -16.250261306762695
    7. '00' → logprob: -16.375261306762695
    8. ' ' → logprob: -17.375261306762695
    9. ' ' → logprob: -17.687761306762695
    10. '  ' → logprob: -17.937761306762695

Token 474: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12733489274978638
    2. ':
' → logprob: -2.1273348331451416
    3. ' and' → logprob: -8.377334594726562
    4. '	' → logprob: -9.002334594726562
    5. '	and' → logprob: -11.502334594726562
    6. ':
' → logprob: -11.627334594726562
    7. ' :
' → logprob: -12.002334594726562
    8. ' :' → logprob: -12.002334594726562
    9. ':

' → logprob: -12.127334594726562
    10. 'and' → logprob: -12.502334594726562

Token 475: ' ' (ID: 220)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.006352011580020189
    2. '	if' → logprob: -5.256351947784424
    3. '		
' → logprob: -7.756351947784424
    4. '	
' → logprob: -8.506352424621582
    5. '	while' → logprob: -9.381352424621582
    6. '		' → logprob: -9.631352424621582
    7. '	   ' → logprob: -9.881352424621582
    8. '	w' → logprob: -10.131352424621582
    9. ' ' → logprob: -10.256352424621582
    10. '       ' → logprob: -10.381352424621582

Token 476: ' #' (ID: 1069)
  Prédit: '	if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	if' → logprob: -0.3619348108768463
    2. '	' → logprob: -1.861934781074524
    3. '	v' → logprob: -2.1119349002838135
    4. 'v' → logprob: -4.361934661865234
    5. '	while' → logprob: -5.361934661865234
    6. ' if' → logprob: -5.486934661865234
    7. '	w' → logprob: -6.236934661865234
    8. 'if' → logprob: -6.611934661865234
    9. '	i' → logprob: -7.111934661865234
    10. '   ' → logprob: -8.236934661865234

Token 477: ' ' (ID: 220)
  Prédit: '	if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	if' → logprob: -1.2527915239334106
    2. 'vw' → logprob: -1.2527915239334106
    3. '	v' → logprob: -1.5027915239334106
    4. 'if' → logprob: -2.752791404724121
    5. '	w' → logprob: -2.877791404724121
    6. 'v' → logprob: -3.502791404724121
    7. 'w' → logprob: -3.627791404724121
    8. '   ' → logprob: -5.502791404724121
    9. '	
' → logprob: -5.502791404724121
    10. '	ans' → logprob: -5.502791404724121

Token 478: 'しゃ' (ID: 131454)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.8099125623703003
    2. 'vw' → logprob: -0.8099125623703003
    3. '	v' → logprob: -2.80991268157959
    4. 'w' → logprob: -3.30991268157959
    5. '
' → logprob: -6.18491268157959
    6. '	w' → logprob: -6.43491268157959
    7. ' vw' → logprob: -6.43491268157959
    8. 'True' → logprob: -6.43491268157959
    9. 'ans' → logprob: -6.68491268157959
    10. ':' → logprob: -7.30991268157959

Token 479: 'く' (ID: 10459)
  Prédit: 'く'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'く' → logprob: -0.45018482208251953
    2. 'ぶ' → logprob: -1.0751848220825195
    3. 'い' → logprob: -4.5751848220825195
    4. 'て' → logprob: -6.3251848220825195
    5. 'め' → logprob: -6.4501848220825195
    6. 'り' → logprob: -6.9501848220825195
    7. 'う' → logprob: -6.9501848220825195
    8. 'べ' → logprob: -7.3251848220825195
    9. 'ふ' → logprob: -7.5751848220825195
    10. 'le' → logprob: -7.7001848220825195

Token 480: 'と' (ID: 5330)
  Prédit: 'と'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'と' → logprob: -1.1310601234436035
    2. 'て' → logprob: -1.5060601234436035
    3. 'く' → logprob: -2.0060601234436035
    4. 'いて' → logprob: -2.0060601234436035
    5. 'い' → logprob: -2.8810601234436035
    6. 'とう' → logprob: -3.6310601234436035
    7. 'ぼ' → logprob: -4.0060601234436035
    8. 'は' → logprob: -4.1310601234436035
    9. 'いた' → logprob: -4.2560601234436035
    10. 'はい' → logprob: -5.0060601234436035

Token 481: 'り' (ID: 7297)
  Prédit: 'き'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'き' → logprob: -0.1399698704481125
    2. 'び' → logprob: -3.389969825744629
    3. '	' → logprob: -4.139969825744629
    4. 'い' → logprob: -4.264969825744629
    5. 'ば' → logprob: -4.639969825744629
    6. 'いて' → logprob: -5.014969825744629
    7. 'ん' → logprob: -5.014969825744629
    8. '棒' → logprob: -5.389969825744629
    9. 'b' → logprob: -5.514969825744629
    10. 'り' → logprob: -5.639969825744629

Token 482: '法' (ID: 5625)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7696008086204529
    2. '	' → logprob: -1.1446008682250977
    3. 'idx' → logprob: -3.1446008682250977
    4. ' ' → logprob: -3.7696008682250977
    5. 'while' → logprob: -3.8946008682250977
    6. ')' → logprob: -4.019600868225098
    7. '	idx' → logprob: -4.019600868225098
    8. '	while' → logprob: -4.144600868225098
    9. ':
' → logprob: -4.519600868225098
    10. ' idx' → logprob: -5.019600868225098

Token 483: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31263411045074463
    2. ':
' → logprob: -1.4376341104507446
    3. '	' → logprob: -4.062633991241455
    4. '<|end|>' → logprob: -5.187633991241455
    5. ' and' → logprob: -6.812633991241455
    6. '	while' → logprob: -7.062633991241455
    7. ',' → logprob: -7.312633991241455
    8. ')' → logprob: -7.687633991241455
    9. '	if' → logprob: -7.812633991241455
    10. '):
' → logprob: -7.937633991241455

Token 484: '	' (ID: 197)
  Prédit: '	'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.022101184353232384
    2. '	
' → logprob: -5.397101402282715
    3. '	if' → logprob: -5.647101402282715
    4. '	   ' → logprob: -5.772101402282715
    5. ' ' → logprob: -6.022101402282715
    6. '	while' → logprob: -6.022101402282715
    7. '		
' → logprob: -6.272101402282715
    8. ',' → logprob: -7.272101402282715
    9. ' 	' → logprob: -7.522101402282715
    10. '	 ' → logprob: -7.647101402282715

Token 485: '	v' (ID: 20800)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.1010490655899048
    2. 'if' → logprob: -1.4760490655899048
    3. '	if' → logprob: -1.6010490655899048
    4. '	' → logprob: -2.1010489463806152
    5. ' if' → logprob: -2.7260489463806152
    6. 'w' → logprob: -3.3510489463806152
    7. '	v' → logprob: -4.601048946380615
    8. '	w' → logprob: -6.476048946380615
    9. 'vw' → logprob: -7.726048946380615
    10. ' v' → logprob: -7.976048946380615

Token 486: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05676937848329544
    2. '1' → logprob: -3.681769371032715
    3. ',w' → logprob: -4.181769371032715
    4. ',v' → logprob: -4.806769371032715
    5. 'w' → logprob: -6.181769371032715
    6. '=' → logprob: -6.431769371032715
    7. ' ,' → logprob: -6.806769371032715
    8. '0' → logprob: -7.556769371032715
    9. ' =' → logprob: -8.056769371032715
    10. '_,' → logprob: -8.681769371032715

Token 487: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037897464353591204
    2. ',w' → logprob: -5.628789901733398
    3. '=' → logprob: -9.003789901733398
    4. ',v' → logprob: -10.128789901733398
    5. 'w' → logprob: -11.253789901733398
    6. ' ,' → logprob: -12.253789901733398
    7. ',
' → logprob: -12.378789901733398
    8. ' =' → logprob: -13.753789901733398
    9. 'v' → logprob: -14.378789901733398
    10. '	' → logprob: -14.503789901733398

Token 488: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.048989955335855484
    2. ' w' → logprob: -3.04899001121521
    3. '	w' → logprob: -7.923989772796631
    4. 'v' → logprob: -10.923990249633789
    5. ' ' → logprob: -12.798990249633789
    6. '
' → logprob: -13.048990249633789
    7. '   ' → logprob: -13.236490249633789
    8. '	' → logprob: -13.361490249633789
    9. 'ｗ' → logprob: -13.736490249633789
    10. '
' → logprob: -13.798990249633789

Token 489: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08936624228954315
    2. ' =' → logprob: -2.4643661975860596
    3. '1' → logprob: -8.08936595916748
    4. '=v' → logprob: -9.21436595916748
    5. '=w' → logprob: -11.71436595916748
    6. ' ' → logprob: -13.08936595916748
    7. '＝' → logprob: -13.33936595916748
    8. ')' → logprob: -13.58936595916748
    9. '	' → logprob: -13.71436595916748
    10. ')=' → logprob: -14.08936595916748

Token 490: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12694647908210754
    2. ' =' → logprob: -2.126946449279785
    3. '=v' → logprob: -11.001946449279785
    4. '	' → logprob: -14.251946449279785
    5. ',' → logprob: -14.876946449279785
    6. '＝' → logprob: -15.001946449279785
    7. '=w' → logprob: -15.501946449279785
    8. ' ' → logprob: -15.876946449279785
    9. ')' → logprob: -16.8769474029541
    10. '=
' → logprob: -17.5019474029541

Token 491: ' vw' (ID: 157855)
  Prédit: 'vw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vw' → logprob: -0.0009138475870713592
    2. ' vw' → logprob: -7.000913619995117
    3. '	v' → logprob: -13.000913619995117
    4. 'v' → logprob: -17.250913619995117
    5. '[v' → logprob: -18.750913619995117
    6. '   ' → logprob: -18.750913619995117
    7. 'qw' → logprob: -19.625913619995117
    8. 'wv' → logprob: -19.750913619995117
    9. 'vwa' → logprob: -19.750913619995117
    10. 'vh' → logprob: -19.875913619995117

Token 492: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -14.500001907348633
    3. '１' → logprob: -14.625001907348633
    4. 'w' → logprob: -15.437501907348633
    5. 'vw' → logprob: -15.687501907348633
    6. '2' → logprob: -15.750001907348633
    7. '```' → logprob: -16.250001907348633
    8. 'v' → logprob: -16.562501907348633
    9. '' → logprob: -16.750001907348633
    10. '	' → logprob: -17.125001907348633

Token 493: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.282920129597187e-05
    2. 'idx' → logprob: -11.375012397766113
    3. '[' → logprob: -14.375012397766113
    4. '	idx' → logprob: -15.000012397766113
    5. ' idx' → logprob: -15.875012397766113
    6. '[id' → logprob: -16.25001335144043
    7. '[i' → logprob: -16.87501335144043
    8. '(idx' → logprob: -17.37501335144043
    9. '[index' → logprob: -17.87501335144043
    10. ' [' → logprob: -18.12501335144043

Token 494: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -14.250001907348633
    3. '	' → logprob: -15.250001907348633
    4. ' ' → logprob: -15.250001907348633
    5. 'idx' → logprob: -16.250001907348633
    6. ']' → logprob: -16.687501907348633
    7. '' → logprob: -16.937501907348633
    8. '```' → logprob: -16.937501907348633
    9. '<|end|>' → logprob: -17.000001907348633
    10. '2' → logprob: -17.000001907348633

Token 495: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002428217325359583
    2. ')' → logprob: -6.75242805480957
    3. ']
' → logprob: -7.25242805480957
    4. '<|end|>' → logprob: -8.37742805480957
    5. '	' → logprob: -8.50242805480957
    6. '[' → logprob: -10.50242805480957
    7. '<|end|>' → logprob: -10.75242805480957
    8. '   ' → logprob: -11.62742805480957
    9. ']
' → logprob: -11.62742805480957
    10. ' ]' → logprob: -11.75242805480957

Token 496: '	' (ID: 197)
  Prédit: '	'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.000320565392030403
    2. '		
' → logprob: -9.375320434570312
    3. '	if' → logprob: -9.375320434570312
    4. '		' → logprob: -9.750320434570312
    5. '+' → logprob: -10.750320434570312
    6. 'v' → logprob: -11.250320434570312
    7. 'if' → logprob: -11.375320434570312
    8. '       ' → logprob: -11.625320434570312
    9. '	v' → logprob: -12.125320434570312
    10. ' if' → logprob: -12.250320434570312

Token 497: '	v' (ID: 20800)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0026154902298003435
    2. '	v' → logprob: -6.002615451812744
    3. ' v' → logprob: -9.127615928649902
    4. ',v' → logprob: -11.377615928649902
    5. '	' → logprob: -11.627615928649902
    6. ',' → logprob: -12.502615928649902
    7. 'w' → logprob: -13.002615928649902
    8. 'while' → logprob: -13.877615928649902
    9. '_,' → logprob: -14.377615928649902
    10. 'vw' → logprob: -14.752615928649902

Token 498: '2' (ID: 17)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21224263310432434
    2. '2' → logprob: -1.962242603302002
    3. '1' → logprob: -3.337242603302002
    4. '[' → logprob: -4.712242603302002
    5. ' ,' → logprob: -6.212242603302002
    6. 'w' → logprob: -6.712242603302002
    7. 'v' → logprob: -7.587242603302002
    8. ',
' → logprob: -8.08724308013916
    9. ',v' → logprob: -8.08724308013916
    10. ',w' → logprob: -8.33724308013916

Token 499: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023977462842594832
    2. ' ,' → logprob: -8.625239372253418
    3. ',w' → logprob: -10.000239372253418
    4. ',v' → logprob: -11.750239372253418
    5. '[' → logprob: -13.125239372253418
    6. ',
' → logprob: -13.500239372253418
    7. '_,' → logprob: -14.000239372253418
    8. 'w' → logprob: -14.750239372253418
    9. '2' → logprob: -14.875239372253418
    10. ' ' → logprob: -15.000239372253418

Token 500: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.7168014645576477
    2. 'w' → logprob: -0.8418014645576477
    3. 'vw' → logprob: -3.216801404953003
    4. ' vw' → logprob: -3.216801404953003
    5. '	w' → logprob: -7.591801643371582
    6. 'wv' → logprob: -10.341801643371582
    7. ',w' → logprob: -11.466801643371582
    8. '>w' → logprob: -11.591801643371582
    9. '[w' → logprob: -11.841801643371582
    10. '<w' → logprob: -12.466801643371582

Token 501: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002809748286381364
    2. 'w' → logprob: -6.252809524536133
    3. 'idx' → logprob: -7.377809524536133
    4. '[idx' → logprob: -9.002809524536133
    5. '[' → logprob: -10.002809524536133
    6. 'x' → logprob: -10.877809524536133
    7. 'v' → logprob: -11.252809524536133
    8. ']' → logprob: -11.627809524536133
    9. '[w' → logprob: -11.627809524536133
    10. '1' → logprob: -11.877809524536133

Token 502: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014179732650518417
    2. ' =' → logprob: -4.264179706573486
    3. ' ' → logprob: -12.264180183410645
    4. ')' → logprob: -12.264180183410645
    5. '	' → logprob: -13.514180183410645
    6. ',' → logprob: -14.014180183410645
    7. ']' → logprob: -14.639180183410645
    8. 'w' → logprob: -14.639180183410645
    9. '=w' → logprob: -14.639180183410645
    10. '＝' → logprob: -14.764180183410645

Token 503: ' vw' (ID: 157855)
  Prédit: 'vw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vw' → logprob: -0.0015034328680485487
    2. ' vw' → logprob: -6.5015034675598145
    3. '	v' → logprob: -14.001502990722656
    4. '   ' → logprob: -16.126502990722656
    5. '	w' → logprob: -16.626502990722656
    6. 'wv' → logprob: -17.501502990722656
    7. 'qw' → logprob: -18.001502990722656
    8. '0' → logprob: -18.126502990722656
    9. ' ' → logprob: -18.251502990722656
    10. '
' → logprob: -18.376502990722656

Token 504: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.251091377227567e-05
    2. '[idx' → logprob: -10.375042915344238
    3. '[' → logprob: -11.625042915344238
    4. 'idx' → logprob: -13.875042915344238
    5. '1' → logprob: -15.125042915344238
    6. '２' → logprob: -15.625042915344238
    7. 'v' → logprob: -15.750042915344238
    8. 'w' → logprob: -15.875042915344238
    9. '```' → logprob: -16.125041961669922
    10. '۲' → logprob: -16.750041961669922

Token 505: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.004092647228389978
    2. 'idx' → logprob: -6.004092693328857
    3. '[' → logprob: -6.879092693328857
    4. ']' → logprob: -8.6290922164917
    5. 's' → logprob: -9.1290922164917
    6. '	idx' → logprob: -9.8790922164917
    7. '][' → logprob: -10.0040922164917
    8. '=' → logprob: -10.2540922164917
    9. '[index' → logprob: -10.8790922164917
    10. '[
' → logprob: -11.0040922164917

Token 506: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.030677147209644318
    2. 'idx' → logprob: -3.530677080154419
    3. '[idx' → logprob: -7.530677318572998
    4. '	idx' → logprob: -8.15567684173584
    5. '_idx' → logprob: -10.28067684173584
    6. ' idx' → logprob: -10.28067684173584
    7. ']' → logprob: -12.28067684173584
    8. 'x' → logprob: -12.28067684173584
    9. '	' → logprob: -12.65567684173584
    10. '(idx' → logprob: -12.78067684173584

Token 507: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.21719348430633545
    2. ']
' → logprob: -1.9671934843063354
    3. ')' → logprob: -3.592193603515625
    4. '	' → logprob: -4.342193603515625
    5. ')
' → logprob: -4.342193603515625
    6. ']
' → logprob: -7.092193603515625
    7. ' ]' → logprob: -8.342193603515625
    8. ' ]
' → logprob: -8.592193603515625
    9. ']

' → logprob: -8.842193603515625
    10. ')
' → logprob: -9.717193603515625

Token 508: '	' (ID: 197)
  Prédit: '	'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.0001532401074655354
    2. '		' → logprob: -10.000153541564941
    3. '		
' → logprob: -10.125153541564941
    4. '	if' → logprob: -10.375153541564941
    5. '<|end|>' → logprob: -10.625153541564941
    6. ' 	' → logprob: -12.625153541564941
    7. ' if' → logprob: -12.875153541564941
    8. ' ' → logprob: -13.250153541564941
    9. '       ' → logprob: -14.250153541564941
    10. '	
' → logprob: -14.375153541564941

Token 509: '	while' (ID: 10883)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	' → logprob: -0.0002261854097014293
    2. '		' → logprob: -9.250226020812988
    3. '	if' → logprob: -9.500226020812988
    4. ' if' → logprob: -10.875226020812988
    5. '		
' → logprob: -11.750226020812988
    6. ' ' → logprob: -12.250226020812988
    7. ' 	' → logprob: -12.250226020812988
    8. 'if' → logprob: -12.375226020812988
    9. '+' → logprob: -12.875226020812988
    10. ',' → logprob: -13.250226020812988

Token 510: ' idx' (ID: 14016)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.23566202819347382
    2. 'idx' → logprob: -1.6106619834899902
    3. 'v' → logprob: -4.73566198348999
    4. ' w' → logprob: -7.48566198348999
    5. ' idx' → logprob: -7.98566198348999
    6. '	w' → logprob: -8.485662460327148
    7. '	idx' → logprob: -8.860662460327148
    8. '	v' → logprob: -9.860662460327148
    9. '(idx' → logprob: -9.985662460327148
    10. '(w' → logprob: -10.735662460327148

Token 511: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2519413232803345
    2. '2' → logprob: -1.5019413232803345
    3. ' ' → logprob: -12.751941680908203
    4. '```' → logprob: -13.314441680908203
    5. '   ' → logprob: -13.939441680908203
    6. '_' → logprob: -14.001941680908203
    7. '>' → logprob: -14.314441680908203
    8. '<' → logprob: -14.439441680908203
    9. 'idx' → logprob: -14.751941680908203
    10. ')' → logprob: -14.939441680908203

Token 512: ' >' (ID: 1424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3075377643108368
    2. ' <' → logprob: -1.4325377941131592
    3. '+' → logprob: -4.05753755569458
    4. '<len' → logprob: -5.93253755569458
    5. '>=' → logprob: -6.80753755569458
    6. ' +' → logprob: -6.93253755569458
    7. '>' → logprob: -7.05753755569458
    8. ' and' → logprob: -7.18253755569458
    9. '+=' → logprob: -8.057538032531738
    10. ' ' → logprob: -8.182538032531738

Token 513: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023107275774236768
    2. ' ' → logprob: -8.37523078918457
    3. '-' → logprob: -16.00023078918457
    4. '	' → logprob: -16.12523078918457
    5. '０' → logprob: -16.87523078918457
    6. '=' → logprob: -17.00023078918457
    7. '   ' → logprob: -17.00023078918457
    8. ' ' → logprob: -17.50023078918457
    9. 'and' → logprob: -17.75023078918457
    10. ' -' → logprob: -17.87523078918457

Token 514: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.8961017202818766e-05
    2. ' ' → logprob: -9.750059127807617
    3. '=' → logprob: -15.625059127807617
    4. '-' → logprob: -15.625059127807617
    5. '	' → logprob: -15.875059127807617
    6. ' ' → logprob: -17.125059127807617
    7. '０' → logprob: -17.625059127807617
    8. '  ' → logprob: -17.750059127807617
    9. '۰' → logprob: -18.125059127807617
    10. ' -' → logprob: -18.125059127807617

Token 515: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07956774532794952
    2. 'and' → logprob: -2.5795676708221436
    3. '	and' → logprob: -7.579567909240723
    4. '	' → logprob: -9.579567909240723
    5. '		' → logprob: -9.704567909240723
    6. ' ' → logprob: -11.329567909240723
    7. ' и' → logprob: -12.329567909240723
    8. ' ' → logprob: -12.954567909240723
    9. 'そして' → logprob: -13.454567909240723
    10. ',' → logprob: -13.454567909240723

Token 516: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0011190229561179876
    2. '	w' → logprob: -7.751119136810303
    3. ' w' → logprob: -7.751119136810303
    4. 'v' → logprob: -8.626118659973145
    5. '(w' → logprob: -10.251118659973145
    6. '   ' → logprob: -10.751118659973145
    7. '	' → logprob: -12.251118659973145
    8. 'vw' → logprob: -12.501118659973145
    9. '	v' → logprob: -12.876118659973145
    10. ' ' → logprob: -13.376118659973145

Token 517: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.297462171758525e-05
    2. '2' → logprob: -10.500033378601074
    3. '１' → logprob: -13.312533378601074
    4. ' ' → logprob: -14.187533378601074
    5. '_' → logprob: -14.250033378601074
    6. 'v' → logprob: -15.250033378601074
    7. '۱' → logprob: -15.437533378601074
    8. '```' → logprob: -15.437533378601074
    9. 'w' → logprob: -15.875033378601074
    10. ')' → logprob: -15.937533378601074

Token 518: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.009417693130671978
    2. ' +' → logprob: -4.759417533874512
    3. '+w' → logprob: -7.134417533874512
    4. '	' → logprob: -13.134417533874512
    5. '＋' → logprob: -13.384417533874512
    6. '>' → logprob: -14.009417533874512
    7. '+
' → logprob: -14.634417533874512
    8. 'w' → logprob: -15.634417533874512
    9. ' ' → logprob: -16.259418487548828
    10. '[' → logprob: -16.384418487548828

Token 519: ' w' (ID: 286)
  Prédit: 'vw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vw' → logprob: -0.004099416080862284
    2. ' vw' → logprob: -5.754099369049072
    3. 'w' → logprob: -7.004099369049072
    4. ' w' → logprob: -12.12909984588623
    5. 'wv' → logprob: -12.12909984588623
    6. ' ' → logprob: -14.00409984588623
    7. '	w' → logprob: -14.12909984588623
    8. '   ' → logprob: -16.004098892211914
    9. '<w' → logprob: -16.379098892211914
    10. '>w' → logprob: -16.754098892211914

Token 520: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.982165698194876e-05
    2. '[' → logprob: -9.875080108642578
    3. 'w' → logprob: -11.750080108642578
    4. '[v' → logprob: -11.750080108642578
    5. 'v' → logprob: -12.750080108642578
    6. '```' → logprob: -12.875080108642578
    7. 's' → logprob: -13.250080108642578
    8. ')' → logprob: -13.750080108642578
    9. '₂' → logprob: -14.625080108642578
    10. '[w' → logprob: -14.875080108642578

Token 521: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.005237906239926815
    2. ' >' → logprob: -5.255238056182861
    3. '>=' → logprob: -12.755237579345703
    4. '>w' → logprob: -14.505237579345703
    5. '	' → logprob: -14.880237579345703
    6. '＞' → logprob: -15.505237579345703
    7. '()>' → logprob: -17.255237579345703
    8. ')>' → logprob: -17.380237579345703
    9. '>#' → logprob: -17.505237579345703
    10. ' ' → logprob: -17.880237579345703

Token 522: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0011061598779633641
    2. ' W' → logprob: -7.126106262207031
    3. '	W' → logprob: -8.126106262207031
    4. '   ' → logprob: -13.001106262207031
    5. ' ' → logprob: -13.626106262207031
    6. '  ' → logprob: -14.251106262207031
    7. '=W' → logprob: -14.626106262207031
    8. ' ' → logprob: -15.688606262207031
    9. '_W' → logprob: -15.813606262207031
    10. 'w' → logprob: -16.12610626220703

Token 523: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3638898730278015
    2. ':
' → logprob: -1.2388899326324463
    3. '	' → logprob: -4.363889694213867
    4. ' and' → logprob: -6.613889694213867
    5. '	idx' → logprob: -7.113889694213867
    6. '	and' → logprob: -9.363889694213867
    7. ':
' → logprob: -9.613889694213867
    8. ' :
' → logprob: -10.113889694213867
    9. ' :' → logprob: -10.113889694213867
    10. '   ' → logprob: -10.113889694213867

Token 524: '		' (ID: 335)
  Prédit: '		'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.2291441708803177
    2. '	' → logprob: -1.6041442155838013
    3. ' idx' → logprob: -6.479144096374512
    4. 'idx' → logprob: -6.729144096374512
    5. '	idx' → logprob: -7.104144096374512
    6. '[idx' → logprob: -9.604144096374512
    7. '(idx' → logprob: -10.229144096374512
    8. '           ' → logprob: -11.104144096374512
    9. '	 	' → logprob: -11.104144096374512
    10. '	       ' → logprob: -11.479144096374512

Token 525: '	idx' (ID: 148992)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.029121503233909607
    2. '		' → logprob: -4.529121398925781
    3. '	idx' → logprob: -4.529121398925781
    4. ' idx' → logprob: -5.154121398925781
    5. '	' → logprob: -6.654121398925781
    6. '			' → logprob: -10.529121398925781
    7. '[idx' → logprob: -10.779121398925781
    8. '(idx' → logprob: -12.529121398925781
    9. '_idx' → logprob: -13.279121398925781
    10. '.idx' → logprob: -13.654121398925781

Token 526: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.5
    3. '２' → logprob: -17.375
    4. '₂' → logprob: -17.375
    5. '<|end|>' → logprob: -17.625
    6. '```' → logprob: -18.125
    7. '	' → logprob: -18.625
    8. '۲' → logprob: -18.75
    9. '_' → logprob: -19.375
    10. '   ' → logprob: -19.75

Token 527: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.0009844583692029119
    2. '-' → logprob: -7.5009846687316895
    3. ' -=' → logprob: -7.7509846687316895
    4. '+=' → logprob: -14.000984191894531
    5. '=' → logprob: -15.500984191894531
    6. '	' → logprob: -15.875984191894531
    7. '−' → logprob: -18.62598419189453
    8. ' -' → logprob: -19.25098419189453
    9. '>' → logprob: -20.87598419189453
    10. '   ' → logprob: -21.12598419189453

Token 528: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '<|end|>' → logprob: -17.250001907348633
    4. '	' → logprob: -18.625001907348633
    5. '１' → logprob: -18.750001907348633
    6. '
' → logprob: -20.750001907348633
    7. '۱' → logprob: -20.875001907348633
    8. '```' → logprob: -21.125001907348633
    9. '   ' → logprob: -21.250001907348633
    10. '१' → logprob: -22.125001907348633

Token 529: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '<|end|>' → logprob: -16.875001907348633
    4. '	' → logprob: -18.750001907348633
    5. '１' → logprob: -20.125001907348633
    6. '   ' → logprob: -20.875001907348633
    7. '
' → logprob: -21.000001907348633
    8. '۱' → logprob: -21.125001907348633
    9. '```' → logprob: -21.125001907348633
    10. '  ' → logprob: -21.750001907348633

Token 530: '
' (ID: 198)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.5637746453285217
    2. '
' → logprob: -1.188774585723877
    3. '<|end|>' → logprob: -2.188774585723877
    4. '		
' → logprob: -4.688774585723877
    5. '		' → logprob: -6.188774585723877
    6. '	return' → logprob: -7.313774585723877
    7. '<|end|>' → logprob: -7.688774585723877
    8. '			
' → logprob: -7.813774585723877
    9. '	
' → logprob: -8.063775062561035
    10. ')' → logprob: -8.688775062561035

Token 531: '		' (ID: 335)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.014970025978982449
    2. '<|end|>' → logprob: -5.639969825744629
    3. '	v' → logprob: -5.889969825744629
    4. '	idx' → logprob: -6.389969825744629
    5. '		' → logprob: -6.639969825744629
    6. 'v' → logprob: -6.639969825744629
    7. '
' → logprob: -7.014969825744629
    8. '		
' → logprob: -7.264969825744629
    9. '+' → logprob: -7.264969825744629
    10. 'idx' → logprob: -7.764969825744629

Token 532: '	v' (ID: 20800)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.013369150459766388
    2. '		' → logprob: -4.763369083404541
    3. '	v' → logprob: -5.513369083404541
    4. '	' → logprob: -7.388369083404541
    5. ' v' → logprob: -10.3883695602417
    6. '           ' → logprob: -10.3883695602417
    7. 'w' → logprob: -11.2633695602417
    8. ',v' → logprob: -12.5133695602417
    9. '			' → logprob: -12.6383695602417
    10. '_,' → logprob: -12.8883695602417

Token 533: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001248804503120482
    2. ',' → logprob: -6.751248836517334
    3. ',v' → logprob: -10.501248359680176
    4. 'v' → logprob: -11.126248359680176
    5. ' ' → logprob: -11.876248359680176
    6. '_,' → logprob: -11.876248359680176
    7. '1' → logprob: -12.126248359680176
    8. '₂' → logprob: -13.001248359680176
    9. 'w' → logprob: -13.126248359680176
    10. ' ,' → logprob: -13.251248359680176

Token 534: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017080175457522273
    2. ',w' → logprob: -6.376708030700684
    3. ',
' → logprob: -12.876708030700684
    4. ' ,' → logprob: -13.501708030700684
    5. 'w' → logprob: -14.876708030700684
    6. '=' → logprob: -14.876708030700684
    7. ',v' → logprob: -15.501708030700684
    8. '<|end|>' → logprob: -15.501708030700684
    9. '_,' → logprob: -15.626708030700684
    10. '[' → logprob: -15.876708030700684

Token 535: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.08897491544485092
    2. ' w' → logprob: -2.463974952697754
    3. '	w' → logprob: -10.338974952697754
    4. 'vw' → logprob: -13.838974952697754
    5. '_w' → logprob: -15.338974952697754
    6. '>w' → logprob: -15.588974952697754
    7. ',w' → logprob: -15.588974952697754
    8. '=w' → logprob: -15.588974952697754
    9. '<w' → logprob: -15.713974952697754
    10. ' ' → logprob: -15.713974952697754

Token 536: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.87501049041748
    3. '=' → logprob: -13.37501049041748
    4. 'w' → logprob: -14.25001049041748
    5. '<|end|>' → logprob: -15.00001049041748
    6. '[' → logprob: -15.62501049041748
    7. ' =' → logprob: -15.62501049041748
    8. '	' → logprob: -16.125009536743164
    9. '₂' → logprob: -16.125009536743164
    10. 'v' → logprob: -16.625009536743164

Token 537: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889242470264435
    2. ' =' → logprob: -2.578892469406128
    3. '=v' → logprob: -13.703892707824707
    4. '=w' → logprob: -14.328892707824707
    5. '<|end|>' → logprob: -14.953892707824707
    6. ' ' → logprob: -15.328892707824707
    7. '=view' → logprob: -15.953892707824707
    8. '=b' → logprob: -16.95389175415039
    9. '=s' → logprob: -16.95389175415039
    10. ')' → logprob: -17.07889175415039

Token 538: ' vw' (ID: 157855)
  Prédit: 'vw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vw' → logprob: -0.001933397026732564
    2. ' vw' → logprob: -6.251933574676514
    3. '	v' → logprob: -12.251933097839355
    4. '	' → logprob: -19.126934051513672
    5. '	w' → logprob: -19.251934051513672
    6. 'v' → logprob: -19.251934051513672
    7. '		' → logprob: -20.376934051513672
    8. ' ' → logprob: -20.376934051513672
    9. 'qw' → logprob: -20.626934051513672
    10. '   ' → logprob: -21.126934051513672

Token 539: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.750000953674316
    3. '２' → logprob: -16.0
    4. 'w' → logprob: -16.375
    5. 'v' → logprob: -17.0
    6. '```' → logprob: -17.0
    7. '₂' → logprob: -17.6875
    8. '1' → logprob: -17.75
    9. '۲' → logprob: -17.9375
    10. '[v' → logprob: -18.1875

Token 540: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0019305398454889655
    2. 'idx' → logprob: -6.2519307136535645
    3. ' idx' → logprob: -13.876930236816406
    4. '	idx' → logprob: -14.126930236816406
    5. '(idx' → logprob: -16.626930236816406
    6. '[' → logprob: -16.626930236816406
    7. '2' → logprob: -18.126930236816406
    8. '[id' → logprob: -18.376930236816406
    9. '[
' → logprob: -18.501930236816406
    10. '[index' → logprob: -18.751930236816406

Token 541: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. 'idx' → logprob: -13.500001907348633
    3. ' ' → logprob: -16.875001907348633
    4. '[' → logprob: -17.625001907348633
    5. 'index' → logprob: -17.625001907348633
    6. '```' → logprob: -17.750001907348633
    7. '_idx' → logprob: -18.000001907348633
    8. '۲' → logprob: -18.625001907348633
    9. '[idx' → logprob: -18.875001907348633
    10. ']' → logprob: -19.125001907348633

Token 542: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31880974769592285
    2. ']' → logprob: -1.3188097476959229
    3. '	' → logprob: -5.818809509277344
    4. '<|end|>' → logprob: -6.818809509277344
    5. ')
' → logprob: -7.693809509277344
    6. '])' → logprob: -8.068809509277344
    7. ']
' → logprob: -8.943809509277344
    8. '）' → logprob: -9.193809509277344
    9. ')return' → logprob: -9.443809509277344
    10. '		' → logprob: -9.443809509277344

Token 543: '	' (ID: 197)
  Prédit: '	'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -6.349075556499884e-05
    2. '		' → logprob: -10.3750638961792
    3. '		
' → logprob: -11.2500638961792
    4. '+' → logprob: -11.7500638961792
    5. '       ' → logprob: -13.3750638961792
    6. '	if' → logprob: -13.5000638961792
    7. '<|end|>' → logprob: -13.7500638961792
    8. '
' → logprob: -14.2500638961792
    9. '	while' → logprob: -14.2500638961792
    10. '\t' → logprob: -14.2500638961792

Token 544: '	if' (ID: 1224)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.1817888468503952
    2. '	if' → logprob: -2.056788921356201
    3. ' if' → logprob: -3.931788921356201
    4. 'if' → logprob: -4.181788921356201
    5. '+' → logprob: -6.431788921356201
    6. '	ans' → logprob: -6.556788921356201
    7. 'ans' → logprob: -9.056788444519043
    8. '		' → logprob: -9.431788444519043
    9. ' ans' → logprob: -9.556788444519043
    10. '	while' → logprob: -10.306788444519043

Token 545: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.10010453313589096
    2. 'v' → logprob: -2.850104570388794
    3. 'idx' → logprob: -3.600104570388794
    4. ' w' → logprob: -5.100104331970215
    5. '	w' → logprob: -6.850104331970215
    6. '	v' → logprob: -6.850104331970215
    7. 'ans' → logprob: -7.100104331970215
    8. ' v' → logprob: -7.600104331970215
    9. ' idx' → logprob: -7.850104331970215
    10. '	idx' → logprob: -9.725104331970215

Token 546: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -14.625001907348633
    3. '１' → logprob: -15.437501907348633
    4. '[' → logprob: -15.500001907348633
    5. '	' → logprob: -15.687501907348633
    6. '+' → logprob: -16.187501907348633
    7. '```' → logprob: -16.250001907348633
    8. '_' → logprob: -16.500001907348633
    9. '۱' → logprob: -16.875001907348633
    10. '2' → logprob: -17.187501907348633

Token 547: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31328287720680237
    2. '+' → logprob: -1.31328284740448
    3. '+w' → logprob: -11.31328296661377
    4. '＋' → logprob: -12.81328296661377
    5. '	' → logprob: -12.93828296661377
    6. ' ' → logprob: -13.68828296661377
    7. '+
' → logprob: -13.93828296661377
    8. ' ' → logprob: -14.18828296661377
    9. ' +
' → logprob: -14.43828296661377
    10. '=' → logprob: -16.688282012939453

Token 548: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.15956774353981018
    2. ' w' → logprob: -2.0345678329467773
    3. 'v' → logprob: -4.159567832946777
    4. ' v' → logprob: -6.909567832946777
    5. '	w' → logprob: -9.909567832946777
    6. '0' → logprob: -10.409567832946777
    7. ' ' → logprob: -10.409567832946777
    8. '   ' → logprob: -11.659567832946777
    9. '	v' → logprob: -11.659567832946777
    10. '	' → logprob: -13.284567832946777

Token 549: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.017378317192196846
    2. '<=' → logprob: -4.142378330230713
    3. ' <=' → logprob: -7.517378330230713
    4. '```' → logprob: -7.767378330230713
    5. ' ' → logprob: -8.892377853393555
    6. '	' → logprob: -9.517377853393555
    7. '1' → logprob: -10.517377853393555
    8. '+' → logprob: -10.642377853393555
    9. ']<=' → logprob: -11.267377853393555
    10. '_' → logprob: -11.267377853393555

Token 550: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5759761333465576
    2. ' <=' → logprob: -0.8259761333465576
    3. '>' → logprob: -10.950976371765137
    4. ' >' → logprob: -11.575976371765137
    5. '	' → logprob: -11.950976371765137
    6. ' ' → logprob: -13.200976371765137
    7. '<' → logprob: -14.450976371765137
    8. '==' → logprob: -15.200976371765137
    9. ')<=' → logprob: -16.07597541809082
    10. '   ' → logprob: -16.20097541809082

Token 551: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.3486618101596832
    2. ' W' → logprob: -1.2236617803573608
    3. '	W' → logprob: -8.473661422729492
    4. ' ' → logprob: -12.348661422729492
    5. ' ' → logprob: -13.473661422729492
    6. '	' → logprob: -13.598661422729492
    7. '   ' → logprob: -14.348661422729492
    8. '_W' → logprob: -15.911161422729492
    9. '  ' → logprob: -16.036161422729492
    10. '[' → logprob: -17.036161422729492

Token 552: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3252032995223999
    2. ':
' → logprob: -1.3252032995224
    3. ' and' → logprob: -4.4502034187316895
    4. 'and' → logprob: -9.575202941894531
    5. ':
' → logprob: -9.825202941894531
    6. '	and' → logprob: -10.700202941894531
    7. '	' → logprob: -10.825202941894531
    8. ':

' → logprob: -11.200202941894531
    9. ',' → logprob: -12.075202941894531
    10. ' :
' → logprob: -12.575202941894531

Token 553: '		' (ID: 335)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.1060149148106575
    2. '	ans' → logprob: -2.6060149669647217
    3. '		' → logprob: -3.8560149669647217
    4. ' ans' → logprob: -5.231014728546143
    5. 'ans' → logprob: -8.4810152053833
    6. '	if' → logprob: -11.4810152053833
    7. '   ' → logprob: -11.6060152053833
    8. '(ans' → logprob: -11.8560152053833
    9. '	answer' → logprob: -11.9810152053833
    10. '       ' → logprob: -12.3560152053833

Token 554: '	v' (ID: 20800)
  Prédit: '	ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	ans' → logprob: -0.06550979614257812
    2. 'ans' → logprob: -3.690509796142578
    3. '	' → logprob: -3.815509796142578
    4. '		' → logprob: -4.190509796142578
    5. ' ans' → logprob: -6.690509796142578
    6. '	if' → logprob: -10.815509796142578
    7. '           ' → logprob: -12.065509796142578
    8. '	answer' → logprob: -12.440509796142578
    9. '			' → logprob: -12.565509796142578
    10. '(ans' → logprob: -12.940509796142578

Token 555: '_sum' (ID: 29859)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18035756051540375
    2. 'alue' → logprob: -2.5553574562072754
    3. 'al' → logprob: -2.9303574562072754
    4. '=' → logprob: -4.305357456207275
    5. ' =' → logprob: -4.680357456207275
    6. 'alid' → logprob: -6.180357456207275
    7. '2' → logprob: -6.430357456207275
    8. 'ans' → logprob: -6.680357456207275
    9. 'v' → logprob: -6.805357456207275
    10. 'ALUE' → logprob: -6.930357456207275

Token 556: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868772089481354
    2. '=' → logprob: -1.136877179145813
    3. ' ' → logprob: -12.886877059936523
    4. '	' → logprob: -13.761877059936523
    5. '＝' → logprob: -13.761877059936523
    6. '=max' → logprob: -14.386877059936523
    7. '1' → logprob: -14.761877059936523
    8. '=v' → logprob: -15.011877059936523
    9. ' ' → logprob: -16.886877059936523
    10. ',' → logprob: -17.011877059936523

Token 557: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.011132949963212013
    2. ' v' → logprob: -4.511132717132568
    3. '	v' → logprob: -9.386133193969727
    4. '   ' → logprob: -15.261133193969727
    5. ' ' → logprob: -15.261133193969727
    6. '
' → logprob: -15.511133193969727
    7. '	' → logprob: -15.636133193969727
    8. ' ' → logprob: -15.886133193969727
    9. '		' → logprob: -16.511133193969727
    10. '(v' → logprob: -17.011133193969727

Token 558: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.802049756515771e-05
    2. ' ' → logprob: -9.875067710876465
    3. '_' → logprob: -12.250067710876465
    4. '[' → logprob: -12.750067710876465
    5. 's' → logprob: -13.375067710876465
    6. 'v' → logprob: -13.875067710876465
    7. '[v' → logprob: -14.000067710876465
    8. ' +' → logprob: -14.250067710876465
    9. '１' → logprob: -14.500067710876465
    10. '+' → logprob: -14.625067710876465

Token 559: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38687369227409363
    2. ' +' → logprob: -1.136873722076416
    3. '＋' → logprob: -13.636873245239258
    4. '	' → logprob: -14.511873245239258
    5. '+
' → logprob: -14.761873245239258
    6. ' ' → logprob: -15.636873245239258
    7. ' +
' → logprob: -15.886873245239258
    8. 'v' → logprob: -16.511873245239258
    9. '<|end|>' → logprob: -16.886873245239258
    10. ' ' → logprob: -17.011873245239258

Token 560: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00043353010551072657
    2. ' v' → logprob: -7.750433444976807
    3. '	v' → logprob: -12.875433921813965
    4. '<|end|>' → logprob: -16.12543296813965
    5. ' ' → logprob: -16.62543296813965
    6. '_v' → logprob: -17.87543296813965
    7. '[v' → logprob: -18.50043296813965
    8. '  ' → logprob: -18.62543296813965
    9. '
' → logprob: -18.62543296813965
    10. '   ' → logprob: -18.62543296813965

Token 561: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.567575034452602e-05
    2. 'v' → logprob: -9.62509536743164
    3. '_' → logprob: -10.87509536743164
    4. ' ' → logprob: -13.00009536743164
    5. '₂' → logprob: -13.00009536743164
    6. '<|end|>' → logprob: -13.37509536743164
    7. 'w' → logprob: -14.12509536743164
    8. '[' → logprob: -14.25009536743164
    9. ' v' → logprob: -14.37509536743164
    10. '۲' → logprob: -14.50009536743164

Token 562: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4492347240447998
    2. '		' → logprob: -1.4492347240447998
    3. '	if' → logprob: -2.6992347240448
    4. ' if' → logprob: -3.1992347240448
    5. 'if' → logprob: -4.449234962463379
    6. '
' → logprob: -5.699234962463379
    7. '	ans' → logprob: -5.824234962463379
    8. '           ' → logprob: -8.574234962463379
    9. 'ans' → logprob: -8.824234962463379
    10. '			' → logprob: -8.949234962463379

Token 563: '		' (ID: 335)
  Prédit: '		'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.13659515976905823
    2. '
' → logprob: -2.1365952491760254
    3. '	if' → logprob: -5.011595249176025
    4. ' if' → logprob: -6.886595249176025
    5. '	' → logprob: -7.136595249176025
    6. '	ans' → logprob: -7.636595249176025
    7. '
' → logprob: -8.261594772338867
    8. '			' → logprob: -8.886594772338867
    9. 'if' → logprob: -9.886594772338867
    10. '           ' → logprob: -10.011594772338867

Token 564: '	ans' (ID: 102831)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5083134174346924
    2. 'if' → logprob: -1.0083134174346924
    3. 'ans' → logprob: -4.133313179016113
    4. '	if' → logprob: -4.383313179016113
    5. '	ans' → logprob: -6.133313179016113
    6. '		' → logprob: -6.258313179016113
    7. ' ans' → logprob: -6.883313179016113
    8. '           ' → logprob: -11.383313179016113
    9. '			' → logprob: -12.258313179016113
    10. '	' → logprob: -12.508313179016113

Token 565: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12700045108795166
    2. '=' → logprob: -2.127000331878662
    3. '=max' → logprob: -9.62700080871582
    4. '	' → logprob: -13.12700080871582
    5. '>' → logprob: -13.75200080871582
    6. ' ' → logprob: -14.00200080871582
    7. 'max' → logprob: -14.12700080871582
    8. ' >' → logprob: -15.12700080871582
    9. '<|end|>' → logprob: -15.37700080871582
    10. ' +=' → logprob: -15.37700080871582

Token 566: ' ans' (ID: 3345)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.6931524872779846
    2. 'max' → logprob: -0.6931524872779846
    3. '	max' → logprob: -12.31815242767334
    4. 'v' → logprob: -14.69315242767334
    5. ' v' → logprob: -15.69315242767334
    6. '(max' → logprob: -16.818153381347656
    7. '_max' → logprob: -17.693153381347656
    8. '=max' → logprob: -17.818153381347656
    9. ',max' → logprob: -18.568153381347656
    10. '[max' → logprob: -18.818153381347656

Token 567: ' if' (ID: 538)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.13347387313842773
    2. 'max' → logprob: -2.1334738731384277
    3. '=max' → logprob: -6.383473873138428
    4. ',max' → logprob: -6.633473873138428
    5. '_max' → logprob: -6.758473873138428
    6. '	max' → logprob: -7.008473873138428
    7. '(max' → logprob: -7.633473873138428
    8. ' if' → logprob: -7.883473873138428
    9. '[max' → logprob: -9.008474349975586
    10. 'v' → logprob: -9.133474349975586

Token 568: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.13174812495708466
    2. 'ans' → logprob: -2.1317481994628906
    3. '	ans' → logprob: -6.006748199462891
    4. 'v' → logprob: -6.631748199462891
    5. ' v' → logprob: -8.00674819946289
    6. '(ans' → logprob: -8.13174819946289
    7. ' max' → logprob: -8.25674819946289
    8. 'max' → logprob: -9.38174819946289
    9. '_ans' → logprob: -11.13174819946289
    10. ' ' → logprob: -11.63174819946289

Token 569: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.017448361963033676
    2. ' >' → logprob: -4.267448425292969
    3. '>=' → logprob: -5.767448425292969
    4. ' >=' → logprob: -8.892448425292969
    5. '>
' → logprob: -11.892448425292969
    6. ' ' → logprob: -13.267448425292969
    7. '>x' → logprob: -13.642448425292969
    8. '>`' → logprob: -13.892448425292969
    9. '>end' → logprob: -14.267448425292969
    10. '>s' → logprob: -14.392448425292969

Token 570: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.12698008120059967
    2. ' v' → logprob: -2.1269800662994385
    3. '	v' → logprob: -9.87697982788086
    4. ' ' → logprob: -14.87697982788086
    5. '_v' → logprob: -16.75197982788086
    6. '```' → logprob: -17.00197982788086
    7. '[v' → logprob: -17.37697982788086
    8. '
' → logprob: -17.50197982788086
    9. '=v' → logprob: -17.50197982788086
    10. ')v' → logprob: -17.62697982788086

Token 571: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.2113979209971149e-05
    2. '_' → logprob: -11.625012397766113
    3. ' _' → logprob: -13.000012397766113
    4. 'sum' → logprob: -15.125012397766113
    5. '_s' → logprob: -15.375012397766113
    6. 'v' → logprob: -15.750012397766113
    7. '_max' → logprob: -16.750011444091797
    8. '\' → logprob: -17.125011444091797
    9. '```' → logprob: -17.750011444091797
    10. '_v' → logprob: -17.750011444091797

Token 572: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.12701641023159027
    2. 'else' → logprob: -2.127016305923462
    3. '	else' → logprob: -10.002016067504883
    4. ' ans' → logprob: -10.377016067504883
    5. '		' → logprob: -12.377016067504883
    6. 'v' → logprob: -13.502016067504883
    7. ' ' → logprob: -13.502016067504883
    8. 'ans' → logprob: -13.502016067504883
    9. '	' → logprob: -13.877016067504883
    10. ' ' → logprob: -14.377016067504883

Token 573: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.002480412134900689
    2. ' v' → logprob: -6.002480506896973
    3. '	v' → logprob: -12.252480506896973
    4. '_v' → logprob: -20.627479553222656
    5. ' ' → logprob: -21.127479553222656
    6. '[v' → logprob: -21.502479553222656
    7. '$v' → logprob: -22.002479553222656
    8. ')v' → logprob: -22.502479553222656
    9. '.v' → logprob: -22.502479553222656
    10. '		' → logprob: -22.627479553222656

Token 574: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -6.945094355614856e-05
    2. '_' → logprob: -9.625069618225098
    3. '_s' → logprob: -13.375069618225098
    4. 'sum' → logprob: -13.875069618225098
    5. ' _' → logprob: -14.875069618225098
    6. '1' → logprob: -16.25006866455078
    7. '	sum' → logprob: -16.50006866455078
    8. '\' → logprob: -17.12506866455078
    9. '```' → logprob: -17.50006866455078
    10. '_
' → logprob: -17.75006866455078

Token 575: '
' (ID: 198)
  Prédit: '		'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.015199350193142891
    2. '	' → logprob: -4.640199184417725
    3. '
' → logprob: -5.265199184417725
    4. '	idx' → logprob: -8.640199661254883
    5. '	
' → logprob: -10.515199661254883
    6. '			
' → logprob: -11.265199661254883
    7. '		
' → logprob: -11.515199661254883
    8. '
' → logprob: -11.890199661254883
    9. '	return' → logprob: -12.140199661254883
    10. '\n' → logprob: -12.140199661254883

Token 576: '	' (ID: 197)
  Prédit: '	idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	idx' → logprob: -0.004652861040085554
    2. '	' → logprob: -6.254652976989746
    3. '		' → logprob: -6.254652976989746
    4. '	index' → logprob: -8.504652976989746
    5. '	
' → logprob: -8.629652976989746
    6. 'idx' → logprob: -8.629652976989746
    7. ' idx' → logprob: -9.129652976989746
    8. '		
' → logprob: -10.879652976989746
    9. '	if' → logprob: -11.004652976989746
    10. '			
' → logprob: -11.129652976989746

Token 577: '	idx' (ID: 148992)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.005178489722311497
    2. '	idx' → logprob: -5.380178451538086
    3. 'idx' → logprob: -7.880178451538086
    4. ' idx' → logprob: -9.005178451538086
    5. '		' → logprob: -10.005178451538086
    6. '   ' → logprob: -12.630178451538086
    7. '		
' → logprob: -13.005178451538086
    8. '\t' → logprob: -13.130178451538086
    9. '	index' → logprob: -13.880178451538086
    10. '	
' → logprob: -14.255178451538086

Token 578: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '+=' → logprob: -15.625
    3. '```' → logprob: -17.25
    4. '+' → logprob: -18.0
    5. ' +=' → logprob: -18.5
    6. '' → logprob: -19.125
    7. '１' → logprob: -19.25
    8. ' ' → logprob: -19.25
    9. '   ' → logprob: -19.5
    10. '_' → logprob: -19.625

Token 579: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.026364512741565704
    2. ' +=' → logprob: -3.77636456489563
    3. '+' → logprob: -5.776364326477051
    4. ']+=' → logprob: -11.90136432647705
    5. ' +' → logprob: -13.65136432647705
    6. '++' → logprob: -13.65136432647705
    7. '+='' → logprob: -13.65136432647705
    8. '+="' → logprob: -14.15136432647705
    9. '<|end|>' → logprob: -14.27636432647705
    10. '=' → logprob: -14.27636432647705

Token 580: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '１' → logprob: -18.250051498413086
    4. '```' → logprob: -18.750051498413086
    5. '   ' → logprob: -20.125051498413086
    6. '	' → logprob: -20.125051498413086
    7. '۱' → logprob: -21.375051498413086
    8. '  ' → logprob: -21.375051498413086
    9. '१' → logprob: -21.875051498413086
    10. '' → logprob: -21.937551498413086

Token 581: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -19.375001907348633
    4. '１' → logprob: -19.500001907348633
    5. '   ' → logprob: -21.750001907348633
    6. '	' → logprob: -21.750001907348633
    7. '۱' → logprob: -22.062501907348633
    8. '+' → logprob: -22.187501907348633
    9. '१' → logprob: -22.250001907348633
    10. '১' → logprob: -22.437501907348633

Token 582: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2344607561826706
    2. '<|end|>' → logprob: -1.609460711479187
    3. '	return' → logprob: -5.484460830688477
    4. 'return' → logprob: -5.984460830688477
    5. '	
' → logprob: -7.234460830688477
    6. '\n' → logprob: -7.609460830688477
    7. '
' → logprob: -7.984460830688477
    8. '```' → logprob: -8.859460830688477
    9. '<|end|>' → logprob: -8.859460830688477
    10. ' return' → logprob: -9.109460830688477

Token 583: '	print' (ID: 15269)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10643213242292404
    2. 'main' → logprob: -3.4814321994781494
    3. 'print' → logprob: -3.9814321994781494
    4. 'if' → logprob: -4.10643196105957
    5. 'return' → logprob: -4.48143196105957
    6. '	return' → logprob: -4.60643196105957
    7. '<|end|>' → logprob: -5.35643196105957
    8. '```' → logprob: -5.73143196105957
    9. '	
' → logprob: -6.10643196105957
    10. '	main' → logprob: -7.35643196105957

Token 584: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.1602974385023117
    2. '(' → logprob: -1.9102973937988281
    3. '()' → logprob: -9.660297393798828
    4. '(
' → logprob: -13.035297393798828
    5. '('' → logprob: -13.285297393798828
    6. ' (' → logprob: -13.410297393798828
    7. '(answer' → logprob: -13.410297393798828
    8. 'ans' → logprob: -14.285297393798828
    9. '(abs' → logprob: -14.535297393798828
    10. '(`' → logprob: -15.285297393798828

Token 585: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0445127372804563e-05
    2. ' )' → logprob: -11.62501049041748
    3. ')
' → logprob: -14.50001049041748
    4. '()' → logprob: -15.00001049041748
    5. '())' → logprob: -15.62501049041748
    6. '）' → logprob: -15.75001049041748
    7. ')`' → logprob: -15.75001049041748
    8. '`)' → logprob: -16.250009536743164
    9. ')#' → logprob: -17.875009536743164
    10. '')' → logprob: -18.000009536743164

Token 586: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 587: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.02394290640950203
    2. '__' → logprob: -3.7739429473876953
    3. ' ' → logprob: -7.898942947387695
    4. '_' → logprob: -8.148942947387695
    5. ' ' → logprob: -11.148942947387695
    6. '_name' → logprob: -11.648942947387695
    7. ' _' → logprob: -11.898942947387695
    8. ' ' → logprob: -13.398942947387695
    9. '  ' → logprob: -13.898942947387695
    10. '	' → logprob: -14.148942947387695

Token 588: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.016215836629271507
    2. ' __' → logprob: -4.266215801239014
    3. '_' → logprob: -6.766215801239014
    4. ' ==' → logprob: -7.766215801239014
    5. '==' → logprob: -8.391216278076172
    6. 'name' → logprob: -9.016216278076172
    7. '_name' → logprob: -10.141216278076172
    8. '=' → logprob: -10.766216278076172
    9. ' ' → logprob: -11.016216278076172
    10. ' ' → logprob: -11.516216278076172

Token 589: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -6.682846287731081e-05
    2. '__.__' → logprob: -10.250066757202148
    3. '==' → logprob: -10.625066757202148
    4. ' ==' → logprob: -12.375066757202148
    5. '=="' → logprob: -14.000066757202148
    6. '__.' → logprob: -14.000066757202148
    7. '_' → logprob: -14.750066757202148
    8. '__["' → logprob: -15.625066757202148
    9. '__('' → logprob: -16.00006675720215
    10. ' __' → logprob: -16.37506675720215

Token 590: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8527715802192688
    2. '__' → logprob: -0.8527715802192688
    3. ' ==' → logprob: -2.102771520614624
    4. '=="' → logprob: -3.727771520614624
    5. '=='' → logprob: -6.852771759033203
    6. '=' → logprob: -8.727771759033203
    7. '==
' → logprob: -9.852771759033203
    8. '"' → logprob: -10.727771759033203
    9. '_' → logprob: -10.852771759033203
    10. ' =="' → logprob: -11.227771759033203

Token 591: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6932173371315002
    2. ''' → logprob: -0.6932173371315002
    3. '__' → logprob: -10.443217277526855
    4. ' "__' → logprob: -10.568217277526855
    5. ' '__' → logprob: -11.318217277526855
    6. ''"' → logprob: -14.443217277526855
    7. '	' → logprob: -14.568217277526855
    8. '('__' → logprob: -15.068217277526855
    9. ''_' → logprob: -15.443217277526855
    10. '"'' → logprob: -15.943217277526855

Token 592: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.5491004129871726e-05
    2. 'name' → logprob: -10.000045776367188
    3. 'ma' → logprob: -17.125045776367188
    4. 'm' → logprob: -17.250045776367188
    5. '_main' → logprob: -17.875045776367188
    6. ' main' → logprob: -19.125045776367188
    7. '__' → logprob: -19.125045776367188
    8. '	main' → logprob: -20.000045776367188
    9. '"' → logprob: -20.250045776367188
    10. 'mai' → logprob: -20.875045776367188

Token 593: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.0619981624186039
    2. '__' → logprob: -2.811998128890991
    3. '_' → logprob: -11.43699836730957
    4. '__":
' → logprob: -11.56199836730957
    5. '':' → logprob: -12.81199836730957
    6. '()' → logprob: -12.93699836730957
    7. '__:' → logprob: -12.93699836730957
    8. '('__' → logprob: -13.81199836730957
    9. ''' → logprob: -14.81199836730957
    10. '__.' → logprob: -15.18699836730957

Token 594: '	main' (ID: 71617)
  Prédit: '	main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	main' → logprob: -0.017008507624268532
    2. 'main' → logprob: -4.267008304595947
    3. ' main' → logprob: -6.392008304595947
    4. '   ' → logprob: -7.017008304595947
    5. '	Main' → logprob: -8.892008781433105
    6. '(main' → logprob: -10.392008781433105
    7. '_main' → logprob: -10.392008781433105
    8. '	
' → logprob: -10.767008781433105
    9. '    
' → logprob: -11.642008781433105
    10. '<|end|>' → logprob: -11.642008781433105

Token 595: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 593
Tokens correctement prédits (1ère position, stricte): 272
Tokens correctement prédits (1ère position, avec adaptation): 272
Tokens correctement prédits (top 10): 494
Précision stricte (1ère position): 45.87%
Précision adaptée (1ère position): 45.87%
Précision (top 10): 83.31%
================================================================================
