================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
#!python3

iim = lambda: map(int, input().rstrip().split())

from heapq import heappush, heappop

def resolve():
    N, W = iim()

    S = [list(iim()) for i in range(N)]
    S.sort(key=lambda x: x[0] / x[1], reverse=True)

    def ubounds(w, v, i):
        for j in range(i, N):
            vj, wj = S[j]
            if w + wj > W:
                return (-v, -v - vj / wj * (W - w))
            w += wj
            v += vj

        return (-v, -v)

    v1, v2 = ubounds(0, 0, 0)
    q = []
    heappush(q, (v2, v1, 0, 0, 0))
    vm1 = v1
    #print(W, S)
    while q:
        #print(q)
        vq1, vq2, wq, vq, i = heappop(q)

        if i == N:
            continue

        vi, wi = S[i]
        if wq + wi <= W:
            heappush(q, (vq1, vq1, wq+wi, vq+vi, i+1))
        v1, v2 = ubounds(wq, vq, i + 1)

        if v2 < vm1:
            if v1 < vm1:
                vm1 = v1
            heappush(q, (v2, v1, wq, vq, i + 1))

    print(-vm1)

if __name__ == "__main__":
    resolve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#!' (ID: 18666)
  → Token d'amorce (pas de prédiction)

Token 1: 'python' (ID: 29010)
  → Token d'amorce (pas de prédiction)

Token 2: '3' (ID: 18)
  → Token d'amorce (pas de prédiction)

Token 3: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2557367980480194
    2. 'import' → logprob: -2.130736827850342
    3. ' 
' → logprob: -3.005736827850342
    4. '\' → logprob: -3.630736827850342
    5. '```' → logprob: -4.630736827850342
    6. '  
' → logprob: -5.255736827850342
    7. '' → logprob: -5.380736827850342
    8. '#!/' → logprob: -5.755736827850342
    9. ' import' → logprob: -6.505736827850342
    10. '
' → logprob: -6.880736827850342

Token 4: 'i' (ID: 72)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.37762898206710815
    2. 'import' → logprob: -1.627629041671753
    3. ' 
' → logprob: -2.752629041671753
    4. '\' → logprob: -4.002628803253174
    5. '
' → logprob: -4.502628803253174
    6. '' → logprob: -4.877628803253174
    7. '```' → logprob: -5.377628803253174
    8. '  
' → logprob: -5.502628803253174
    9. '#!/' → logprob: -6.127628803253174
    10. ' import' → logprob: -6.127628803253174

Token 5: 'im' (ID: 321)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.32875359058380127
    2. 'n' → logprob: -1.3287535905838013
    3. '=' → logprob: -4.328753471374512
    4. 'f' → logprob: -6.453753471374512
    5. ' =' → logprob: -8.078753471374512
    6. 'nt' → logprob: -9.078753471374512
    7. 't' → logprob: -10.078753471374512
    8. '#' → logprob: -10.203753471374512
    9. 'mp' → logprob: -10.328753471374512
    10. ' n' → logprob: -10.703753471374512

Token 6: ' =' (ID: 314)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'port' → logprob: -0.5427388548851013
    2. '.' → logprob: -0.9177388548851013
    3. 'p' → logprob: -4.792738914489746
    4. 't' → logprob: -5.292738914489746
    5. ' .' → logprob: -6.792738914489746
    6. '=' → logprob: -7.042738914489746
    7. 'plement' → logprob: -7.417738914489746
    8. 'porter' → logprob: -7.667738914489746
    9. 'l' → logprob: -8.292738914489746
    10. ' =' → logprob: -8.292738914489746

Token 7: ' lambda' (ID: 27871)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7532325983047485
    2. ' []' → logprob: -1.8782325983047485
    3. ' __' → logprob: -2.128232479095459
    4. ' input' → logprob: -2.128232479095459
    5. 'input' → logprob: -2.753232479095459
    6. ' iim' → logprob: -4.128232479095459
    7. '__' → logprob: -4.253232479095459
    8. '[]' → logprob: -4.628232479095459
    9. '1' → logprob: -4.753232479095459
    10. ' [' → logprob: -5.628232479095459

Token 8: ':' (ID: 25)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0027413968928158283
    2. ' ' → logprob: -6.50274133682251
    3. 'x' → logprob: -7.62774133682251
    4. ' s' → logprob: -8.002741813659668
    5. ' i' → logprob: -9.127741813659668
    6. '  ' → logprob: -9.252741813659668
    7. ':' → logprob: -9.752741813659668
    8. ' :' → logprob: -9.752741813659668
    9. ' a' → logprob: -10.127741813659668
    10. ' n' → logprob: -11.002741813659668

Token 9: ' map' (ID: 4014)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.1204919815063477
    2. ' input' → logprob: -1.1204919815063477
    3. 'int' → logprob: -1.4954919815063477
    4. ' int' → logprob: -2.1204919815063477
    5. ' iter' → logprob: -6.495491981506348
    6. '[]' → logprob: -7.870491981506348
    7. ' list' → logprob: -8.245491981506348
    8. '__' → logprob: -8.245491981506348
    9. ' []' → logprob: -8.495491981506348
    10. ' map' → logprob: -8.745491981506348

Token 10: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.07190851122140884
    2. '(' → logprob: -2.821908473968506
    3. '(str' → logprob: -4.696908473968506
    4. '(lambda' → logprob: -7.446908473968506
    5. '(input' → logprob: -9.946908950805664
    6. '(list' → logprob: -10.071908950805664
    7. '<int' → logprob: -10.696908950805664
    8. '(
' → logprob: -10.946908950805664
    9. '<|end|>' → logprob: -11.571908950805664
    10. '[int' → logprob: -11.821908950805664

Token 11: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.018727611750364304
    2. '(' → logprob: -4.268727779388428
    3. 'input' → logprob: -5.893727779388428
    4. ')' → logprob: -6.768727779388428
    5. ' input' → logprob: -9.26872730255127
    6. '<|end|>' → logprob: -9.26872730255127
    7. ',input' → logprob: -9.64372730255127
    8. ' (' → logprob: -10.01872730255127
    9. '(stdin' → logprob: -10.01872730255127
    10. '(open' → logprob: -10.14372730255127

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.01604856364428997
    2. ' input' → logprob: -4.141048431396484
    3. '(input' → logprob: -11.891048431396484
    4. 'open' → logprob: -12.766048431396484
    5. ')' → logprob: -13.266048431396484
    6. ' ' → logprob: -14.516048431396484
    7. '=input' → logprob: -14.516048431396484
    8. '	input' → logprob: -14.766048431396484
    9. 'raw' → logprob: -15.016048431396484
    10. '<input' → logprob: -15.141048431396484

Token 13: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7024844884872437
    2. '())' → logprob: -0.7024844884872437
    3. '(' → logprob: -5.577484607696533
    4. '().' → logprob: -6.452484607696533
    5. '(()' → logprob: -6.827484607696533
    6. '());' → logprob: -6.952484607696533
    7. '();)' → logprob: -7.077484607696533
    8. '()]' → logprob: -8.577484130859375
    9. '('' → logprob: -9.327484130859375
    10. '()))' → logprob: -9.452484130859375

Token 14: 'rstrip' (ID: 180429)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00044377794256433845
    2. 'strip' → logprob: -7.750443935394287
    3. ' split' → logprob: -11.875443458557129
    4. 'rstrip' → logprob: -12.250443458557129
    5. '(split' → logprob: -14.000443458557129
    6. ')' → logprob: -15.125443458557129
    7. 'spl' → logprob: -15.625443458557129
    8. 'read' → logprob: -17.625444412231445
    9. 's' → logprob: -18.750444412231445
    10. ' strip' → logprob: -19.000444412231445

Token 15: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.28035449981689453
    2. '('' → logprob: -1.6553544998168945
    3. '()' → logprob: -3.6553544998168945
    4. '())' → logprob: -4.2803544998168945
    5. '(' → logprob: -4.4053544998168945
    6. '("' → logprob: -7.6553544998168945
    7. ' ().' → logprob: -8.530354499816895
    8. ' ()' → logprob: -9.155354499816895
    9. '(()' → logprob: -9.280354499816895
    10. ' ())' → logprob: -9.280354499816895

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.4121114822482923e-06
    2. ' split' → logprob: -13.125003814697266
    3. 'rstrip' → logprob: -14.500003814697266
    4. 'spl' → logprob: -15.250003814697266
    5. 'strip' → logprob: -15.375003814697266
    6. ')' → logprob: -15.625003814697266
    7. '(split' → logprob: -16.750003814697266
    8. ' ' → logprob: -17.250003814697266
    9. 's' → logprob: -18.125003814697266
    10. 'plit' → logprob: -18.125003814697266

Token 17: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.010451061651110649
    2. '()' → logprob: -5.385450839996338
    3. ')' → logprob: -6.010450839996338
    4. '()))' → logprob: -6.010450839996338
    5. '(' → logprob: -7.260450839996338
    6. '))' → logprob: -8.885451316833496
    7. ' ())' → logprob: -10.135451316833496
    8. '();)' → logprob: -12.260451316833496
    9. '()]' → logprob: -12.760451316833496
    10. '());' → logprob: -12.885451316833496

Token 18: 'from' (ID: 2845)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7803636193275452
    2. 'a' → logprob: -1.0303635597229004
    3. '(' → logprob: -1.9053635597229004
    4. 'for' → logprob: -4.1553635597229
    5. 'x' → logprob: -4.9053635597229
    6. '(n' → logprob: -5.0303635597229
    7. 'd' → logprob: -6.1553635597229
    8. '[' → logprob: -6.6553635597229
    9. '(
' → logprob: -7.2803635597229
    10. '#' → logprob: -7.7803635597229

Token 19: ' heap' (ID: 37237)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.015070299617946148
    2. ' collections' → logprob: -4.76507043838501
    3. 'sys' → logprob: -5.14007043838501
    4. 'collections' → logprob: -8.140069961547852
    5. ' itertools' → logprob: -8.890069961547852
    6. ' math' → logprob: -9.265069961547852
    7. ' typing' → logprob: -10.015069961547852
    8. ' functools' → logprob: -12.890069961547852
    9. ' os' → logprob: -13.265069961547852
    10. 'math' → logprob: -13.765069961547852

Token 20: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.6166903151315637e-05
    2. 'queue' → logprob: -11.125016212463379
    3. 'import' → logprob: -13.625016212463379
    4. 'ify' → logprob: -15.750016212463379
    5. 'que' → logprob: -18.000015258789062
    6. 'ql' → logprob: -18.500015258789062
    7. 'f' → logprob: -18.875015258789062
    8. 'from' → logprob: -19.250015258789062
    9. 'i' → logprob: -20.000015258789062
    10. ' queue' → logprob: -20.250015258789062

Token 21: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.06198830157518387
    2. 'import' → logprob: -2.811988353729248
    3. ' ' → logprob: -11.81198787689209
    4. '	import' → logprob: -11.81198787689209
    5. '_import' → logprob: -12.43698787689209
    6. '<|end|>' → logprob: -14.31198787689209
    7. '-import' → logprob: -14.81198787689209
    8. ' importar' → logprob: -15.18698787689209
    9. ' ' → logprob: -15.68698787689209
    10. ' imports' → logprob: -16.311988830566406

Token 22: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.131609246134758
    2. 'heap' → logprob: -2.1316092014312744
    3. ' he' → logprob: -5.3816094398498535
    4. ' heap' → logprob: -10.506608963012695
    5. 'h' → logprob: -11.006608963012695
    6. 'merge' → logprob: -11.256608963012695
    7. 'n' → logprob: -12.256608963012695
    8. 'import' → logprob: -12.631608963012695
    9. '.he' → logprob: -13.131608963012695
    10. 'hea' → logprob: -14.631608963012695

Token 23: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.12693923711776733
    2. 'ap' → logprob: -2.126939296722412
    3. 'a' → logprob: -11.501938819885254
    4. 'ап' → logprob: -14.251938819885254
    5. 'appen' → logprob: -16.25193977355957
    6. '```' → logprob: -17.12693977355957
    7. 'apput' → logprob: -17.37693977355957
    8. 'apl' → logprob: -17.75193977355957
    9. '	app' → logprob: -17.87693977355957
    10. 'aps' → logprob: -18.00193977355957

Token 24: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0008046258008107543
    2. 'op' → logprob: -7.125804424285889
    3. 'u' → logprob: -16.625804901123047
    4. 'us' → logprob: -17.125804901123047
    5. 'ut' → logprob: -17.875804901123047
    6. '```' → logprob: -18.000804901123047
    7. 'USH' → logprob: -18.875804901123047
    8. '

' → logprob: -19.000804901123047
    9. 'push' → logprob: -19.000804901123047
    10. '   ' → logprob: -19.375804901123047

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018240504432469606
    2. 'he' → logprob: -6.876823902130127
    3. ' he' → logprob: -7.876823902130127
    4. ' ,' → logprob: -7.876823902130127
    5. ' ' → logprob: -11.501824378967285
    6. '<|end|>' → logprob: -11.501824378967285
    7. '_he' → logprob: -13.126824378967285
    8. 'import' → logprob: -13.126824378967285
    9. '‌,' → logprob: -14.001824378967285
    10. ',
' → logprob: -14.126824378967285

Token 26: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.25214144587516785
    2. ' he' → logprob: -1.5021414756774902
    3. 'heap' → logprob: -8.627140998840332
    4. ' heap' → logprob: -11.377140998840332
    5. ' ' → logprob: -11.627140998840332
    6. 'heme' → logprob: -13.377140998840332
    7. 'hep' → logprob: -13.502140998840332
    8. 'hev' → logprob: -13.502140998840332
    9. '.he' → logprob: -13.627140998840332
    10. '_he' → logprob: -14.002140998840332

Token 27: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -9.65101717156358e-05
    2. 'ap' → logprob: -9.250096321105957
    3. 'pp' → logprob: -16.375097274780273
    4. ' app' → logprob: -16.625097274780273
    5. 'appen' → logprob: -16.875097274780273
    6. 'a' → logprob: -17.125097274780273
    7. '_app' → logprob: -17.625097274780273
    8. '	app' → logprob: -17.875097274780273
    9. '(app' → logprob: -18.000097274780273
    10. 'ап' → logprob: -18.250097274780273

Token 28: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.023252001032233238
    2. 'ush' → logprob: -3.773252010345459
    3. 'o' → logprob: -12.3982515335083
    4. ' op' → logprob: -14.3982515335083
    5. 'opleft' → logprob: -14.8982515335083
    6. '```' → logprob: -15.2732515335083
    7. '   ' → logprob: -15.7732515335083
    8. 'opp' → logprob: -16.273252487182617
    9. '

' → logprob: -16.523252487182617
    10. 'l' → logprob: -16.523252487182617

Token 29: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6163655519485474
    2. 'n' → logprob: -1.9913655519485474
    3. 'def' → logprob: -2.241365432739258
    4. 'd' → logprob: -2.616365432739258
    5. '' → logprob: -2.866365432739258
    6. '

' → logprob: -3.491365432739258
    7. '\' → logprob: -4.366365432739258
    8. '(' → logprob: -4.616365432739258
    9. '\n' → logprob: -4.991365432739258
    10. '(n' → logprob: -5.366365432739258

Token 30: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3632092773914337
    2. 'd' → logprob: -1.4882092475891113
    3. 'def' → logprob: -2.8632092475891113
    4. 'class' → logprob: -4.738209247589111
    5. 'q' → logprob: -5.363209247589111
    6. 'N' → logprob: -5.613209247589111
    7. 'Q' → logprob: -7.363209247589111
    8. 'a' → logprob: -7.363209247589111
    9. 's' → logprob: -7.613209247589111
    10. '#' → logprob: -7.988209247589111

Token 31: ' resolve' (ID: 14062)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07152482122182846
    2. ' d' → logprob: -3.0715248584747314
    3. ' main' → logprob: -4.446524620056152
    4. ' solve' → logprob: -5.321524620056152
    5. ' a' → logprob: -5.946524620056152
    6. ' find' → logprob: -6.696524620056152
    7. ' ' → logprob: -7.946524620056152
    8. ' D' → logprob: -8.071524620056152
    9. ' solution' → logprob: -8.071524620056152
    10. ' process' → logprob: -8.946524620056152

Token 32: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.023448003455996513
    2. '(' → logprob: -3.7734479904174805
    3. '()' → logprob: -9.39844799041748
    4. ' ():' → logprob: -9.89844799041748
    5. '(line' → logprob: -10.89844799041748
    6. '(:' → logprob: -11.27344799041748
    7. '(":' → logprob: -11.52344799041748
    8. ':' → logprob: -12.27344799041748
    9. '():
' → logprob: -12.64844799041748
    10. '):' → logprob: -12.89844799041748

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3817442655563354
    2. ' ' → logprob: -1.6317442655563354
    3. '<|end|>' → logprob: -1.6317442655563354
    4. '
' → logprob: -2.131744384765625
    5. 'n' → logprob: -2.631744384765625
    6. ' 
' → logprob: -2.881744384765625
    7. '    ' → logprob: -3.131744384765625
    8. '\n' → logprob: -4.131744384765625
    9. '    
' → logprob: -4.381744384765625
    10. '(n' → logprob: -4.881744384765625

Token 34: ' N' (ID: 478)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2655036747455597
    2. ' n' → logprob: -1.6405036449432373
    3. 'n' → logprob: -3.5155036449432373
    4. '    ' → logprob: -6.015503883361816
    5. ' N' → logprob: -6.390503883361816
    6. ' h' → logprob: -7.140503883361816
    7. ' heap' → logprob: -7.140503883361816
    8. ' q' → logprob: -7.390503883361816
    9. 'd' → logprob: -7.515503883361816
    10. 'q' → logprob: -8.140503883361816

Token 35: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06452745199203491
    2. ',' → logprob: -2.9395275115966797
    3. '=' → logprob: -4.81452751159668
    4. '=int' → logprob: -7.31452751159668
    5. ' ,' → logprob: -7.43952751159668
    6. ' ' → logprob: -8.68952751159668
    7. ',int' → logprob: -10.93952751159668
    8. '=input' → logprob: -11.81452751159668
    9. ' =
' → logprob: -12.06452751159668
    10. '  ' → logprob: -12.56452751159668

Token 36: ' W' (ID: 486)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.4851023852825165
    2. 'M' → logprob: -1.1101024150848389
    3. 'Q' → logprob: -3.735102415084839
    4. ' K' → logprob: -3.985102415084839
    5. ' M' → logprob: -4.73510217666626
    6. 'X' → logprob: -7.48510217666626
    7. 'T' → logprob: -7.86010217666626
    8. 'A' → logprob: -7.98510217666626
    9. ' Q' → logprob: -8.110102653503418
    10. 'S' → logprob: -8.360102653503418

Token 37: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25195103883743286
    2. ' =' → logprob: -1.501950979232788
    3. ',' → logprob: -10.876951217651367
    4. '=input' → logprob: -13.876951217651367
    5. ' ' → logprob: -15.126951217651367
    6. ')' → logprob: -15.251951217651367
    7. '=int' → logprob: -15.626951217651367
    8. ')=' → logprob: -15.626951217651367
    9. '=i' → logprob: -15.751951217651367
    10. '=user' → logprob: -15.876951217651367

Token 38: ' iim' (ID: 182704)
  Prédit: ' iim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' iim' → logprob: -0.1583075076341629
    2. 'i' → logprob: -2.7833075523376465
    3. ' map' → logprob: -3.1583075523376465
    4. ' next' → logprob: -3.7833075523376465
    5. ' i' → logprob: -4.0333075523376465
    6. 'map' → logprob: -7.4083075523376465
    7. ' ' → logprob: -8.408307075500488
    8. 'im' → logprob: -8.658307075500488
    9. 'next' → logprob: -8.908307075500488
    10. 'iin' → logprob: -9.283307075500488

Token 39: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.5954712075181305e-05
    2. '(' → logprob: -10.875036239624023
    3. '()
' → logprob: -11.500036239624023
    4. ' ()' → logprob: -12.375036239624023
    5. ')' → logprob: -13.750036239624023
    6. '()`' → logprob: -14.750036239624023
    7. '();' → logprob: -14.750036239624023
    8. '())' → logprob: -15.500036239624023
    9. '()

' → logprob: -16.000036239624023
    10. '():' → logprob: -16.375036239624023

Token 40: '   ' (ID: 271)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.8620926737785339
    2. '   ' → logprob: -2.2370927333831787
    3. 'stack' → logprob: -2.4870927333831787
    4. 'dp' → logprob: -2.7370927333831787
    5. ' heap' → logprob: -3.1120927333831787
    6. 'weights' → logprob: -3.6120927333831787
    7. 'items' → logprob: -3.7370927333831787
    8. 'he' → logprob: -3.7370927333831787
    9. '
' → logprob: -3.9870927333831787
    10. 'd' → logprob: -4.3620924949646

Token 41: ' S' (ID: 336)
  Prédit: 'bags'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bags' → logprob: -1.4836266040802002
    2. 'dp' → logprob: -1.7336266040802002
    3. 'items' → logprob: -1.8586266040802002
    4. 'w' → logprob: -2.7336266040802
    5. 'h' → logprob: -2.9836266040802
    6. 'weights' → logprob: -3.2336266040802
    7. 'A' → logprob: -3.6086266040802
    8. 'boxes' → logprob: -3.8586266040802
    9. 'bag' → logprob: -3.9836266040802
    10. 'box' → logprob: -3.9836266040802

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3221164643764496
    2. '=' → logprob: -1.322116494178772
    3. '=[]' → logprob: -5.447116374969482
    4. ',' → logprob: -5.947116374969482
    5. 'um' → logprob: -7.572116374969482
    6. 'weights' → logprob: -7.697116374969482
    7. '_weights' → logprob: -8.94711685180664
    8. 'ums' → logprob: -9.19711685180664
    9. '_' → logprob: -9.57211685180664
    10. 'ources' → logprob: -9.69711685180664

Token 43: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8469300270080566
    2. '[]' → logprob: -1.2219300270080566
    3. ' [' → logprob: -2.3469300270080566
    4. ' []' → logprob: -2.8469300270080566
    5. 'list' → logprob: -3.2219300270080566
    6. '[' → logprob: -3.2219300270080566
    7. '[input' → logprob: -3.8469300270080566
    8. '[list' → logprob: -4.846930027008057
    9. ' list' → logprob: -5.346930027008057
    10. '[int' → logprob: -5.471930027008057

Token 44: 'list' (ID: 2641)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.38061317801475525
    2. 'i' → logprob: -1.3806132078170776
    3. '*' → logprob: -3.755613088607788
    4. 'tuple' → logprob: -4.005613327026367
    5. 'input' → logprob: -5.130613327026367
    6. '0' → logprob: -5.255613327026367
    7. 'he' → logprob: -5.630613327026367
    8. 'next' → logprob: -5.880613327026367
    9. '*i' → logprob: -6.380613327026367
    10. 'list' → logprob: -6.755613327026367

Token 45: '(i' (ID: 3649)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.09877435863018036
    2. '(i' → logprob: -2.5987744331359863
    3. '(' → logprob: -4.723774433135986
    4. '(input' → logprob: -5.348774433135986
    5. '()' → logprob: -5.473774433135986
    6. '(range' → logprob: -6.473774433135986
    7. '()]' → logprob: -8.848773956298828
    8. ']' → logprob: -9.723773956298828
    9. 'map' → logprob: -10.223773956298828
    10. '(im' → logprob: -11.598773956298828

Token 46: 'im' (ID: 321)
  Prédit: 'im'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.03738276660442352
    2. '(i' → logprob: -4.28738260269165
    3. '(im' → logprob: -4.91238260269165
    4. 'm' → logprob: -5.66238260269165
    5. 'input' → logprob: -5.91238260269165
    6. 'i' → logprob: -6.28738260269165
    7. '(input' → logprob: -6.28738260269165
    8. 'mm' → logprob: -7.03738260269165
    9. '(m' → logprob: -7.53738260269165
    10. 'n' → logprob: -7.66238260269165

Token 47: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0001242772996192798
    2. '()' → logprob: -9.500123977661133
    3. '()]' → logprob: -11.250123977661133
    4. ')' → logprob: -11.375123977661133
    5. '()))' → logprob: -11.375123977661133
    6. '())
' → logprob: -12.000123977661133
    7. '()),' → logprob: -12.375123977661133
    8. ' ())' → logprob: -13.875123977661133
    9. '());' → logprob: -14.500123977661133
    10. ')]' → logprob: -14.625123977661133

Token 48: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01183049101382494
    2. '()]' → logprob: -5.0118303298950195
    3. ')' → logprob: -5.5118303298950195
    4. '())' → logprob: -7.6368303298950195
    5. 'for' → logprob: -8.13683032989502
    6. ']' → logprob: -9.13683032989502
    7. ' for' → logprob: -9.63683032989502
    8. ')]' → logprob: -10.01183032989502
    9. '   ' → logprob: -10.88683032989502
    10. ' ()' → logprob: -11.38683032989502

Token 49: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3791216313838959
    2. ' range' → logprob: -1.2541216611862183
    3. 'range' → logprob: -3.8791215419769287
    4. '(range' → logprob: -5.504121780395508
    5. ' in' → logprob: -5.879121780395508
    6. '_range' → logprob: -6.504121780395508
    7. ' _' → logprob: -7.129121780395508
    8. '	range' → logprob: -9.004121780395508
    9. 'in' → logprob: -9.254121780395508
    10. ' ' → logprob: -9.629121780395508

Token 50: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6463713049888611
    2. ' in' → logprob: -0.7713713049888611
    3. 'range' → logprob: -4.521371364593506
    4. '_' → logprob: -6.646371364593506
    5. ' range' → logprob: -7.271371364593506
    6. '(range' → logprob: -7.896371364593506
    7. 'n' → logprob: -8.771370887756348
    8. ' ' → logprob: -9.396370887756348
    9. '  ' → logprob: -9.771370887756348
    10. '	range' → logprob: -10.396370887756348

Token 51: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.016051027923822403
    2. ' range' → logprob: -4.141050815582275
    3. '(range' → logprob: -12.266051292419434
    4. ' ' → logprob: -12.516051292419434
    5. '   ' → logprob: -12.891051292419434
    6. '	range' → logprob: -12.891051292419434
    7. '  ' → logprob: -13.391051292419434
    8. 'rang' → logprob: -14.016051292419434
    9. 'r' → logprob: -15.141051292419434
    10. '[' → logprob: -15.516051292419434

Token 52: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.000629279064014554
    2. '(' → logprob: -7.375629425048828
    3. '(
' → logprob: -13.750629425048828
    4. '(n' → logprob: -14.000629425048828
    5. 'N' → logprob: -14.500629425048828
    6. '(S' → logprob: -17.250629425048828
    7. ' (' → logprob: -17.250629425048828
    8. '(W' → logprob: -17.250629425048828
    9. '(M' → logprob: -17.625629425048828
    10. '   ' → logprob: -17.625629425048828

Token 53: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.966313281329349e-05
    2. ')' → logprob: -10.250049591064453
    3. ']' → logprob: -12.000049591064453
    4. ' )' → logprob: -12.750049591064453
    5. '   ' → logprob: -13.250049591064453
    6. ')]
' → logprob: -13.500049591064453
    7. ')],' → logprob: -15.000049591064453
    8. ')])' → logprob: -15.125049591064453
    9. '')]' → logprob: -15.500049591064453
    10. ' ' → logprob: -15.500049591064453

Token 54: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6778848171234131
    2. '   ' → logprob: -1.052884817123413
    3. '<|end|>' → logprob: -2.177884817123413
    4. '    
' → logprob: -4.052885055541992
    5. ' 
' → logprob: -6.677885055541992
    6. '  
' → logprob: -6.677885055541992
    7. '<|end|>' → logprob: -6.802885055541992
    8. '  ' → logprob: -7.052885055541992
    9. '```' → logprob: -7.052885055541992
    10. ' ' → logprob: -7.177885055541992

Token 55: ' S' (ID: 336)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8598870635032654
    2. 'S' (adapté à ' S') → logprob: -1.7348871231079102
    3. '   ' → logprob: -1.9848871231079102
    4. 'heap' → logprob: -2.85988712310791
    5. '    
' → logprob: -4.23488712310791
    6. 'Q' → logprob: -4.23488712310791
    7. 'q' → logprob: -4.35988712310791
    8. ' dp' → logprob: -4.60988712310791
    9. 'items' → logprob: -4.73488712310791
    10. 'pq' → logprob: -4.73488712310791

Token 56: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.001394165214151144
    2. '=' → logprob: -7.126394271850586
    3. '.' → logprob: -7.876394271850586
    4. 'sort' → logprob: -9.376394271850586
    5. ')' → logprob: -10.376394271850586
    6. ' =' → logprob: -10.376394271850586
    7. '<|end|>' → logprob: -11.001394271850586
    8. '[' → logprob: -11.376394271850586
    9. ',' → logprob: -11.376394271850586
    10. '.pop' → logprob: -12.001394271850586

Token 57: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.2351185381412506
    2. '()' → logprob: -1.7351185083389282
    3. '(reverse' → logprob: -3.6101186275482178
    4. '(' → logprob: -5.110118389129639
    5. '(lambda' → logprob: -10.860118865966797
    6. 'reverse' → logprob: -11.110118865966797
    7. 'key' → logprob: -11.485118865966797
    8. '()(' → logprob: -12.235118865966797
    9. '```' → logprob: -13.110118865966797
    10. ',key' → logprob: -13.985118865966797

Token 58: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0009119403548538685
    2. '=' → logprob: -7.000911712646484
    3. '=len' → logprob: -15.000911712646484
    4. '=l' → logprob: -17.875911712646484
    5. '=item' → logprob: -18.000911712646484
    6. '=
' → logprob: -18.000911712646484
    7. '=_' → logprob: -18.000911712646484
    8. '=

' → logprob: -18.125911712646484
    9. '=\' → logprob: -18.375911712646484
    10. 'lambda' → logprob: -18.375911712646484

Token 59: ' x' (ID: 1215)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.22377212345600128
    2. ' x' → logprob: -1.9737721681594849
    3. 'lambda' → logprob: -3.2237720489501953
    4. 'x' → logprob: -4.098772048950195
    5. ' s' → logprob: -6.223772048950195
    6. '=lambda' → logprob: -6.723772048950195
    7. 's' → logprob: -7.223772048950195
    8. 'ambda' → logprob: -8.098772048950195
    9. 'a' → logprob: -8.223772048950195
    10. ' a' → logprob: -8.348772048950195

Token 60: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.048781868070364
    2. ':x' → logprob: -3.0487818717956543
    3. ' :' → logprob: -9.298781394958496
    4. 'x' → logprob: -10.048781394958496
    5. ' x' → logprob: -10.673781394958496
    6. '=' → logprob: -11.673781394958496
    7. '=lambda' → logprob: -11.673781394958496
    8. ':
' → logprob: -12.923781394958496
    9. '	x' → logprob: -12.923781394958496
    10. '   ' → logprob: -13.048781394958496

Token 61: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10651946812868118
    2. ' x' → logprob: -2.4815194606781006
    3. '-x' → logprob: -4.73151969909668
    4. '-' → logprob: -5.35651969909668
    5. ' -' → logprob: -5.73151969909668
    6. 'lambda' → logprob: -8.10651969909668
    7. ' lambda' → logprob: -8.85651969909668
    8. '-l' → logprob: -8.85651969909668
    9. ':x' → logprob: -11.98151969909668
    10. '(-' → logprob: -12.10651969909668

Token 62: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007823493797332048
    2. ':' → logprob: -7.375782489776611
    3. '[-' → logprob: -9.000782012939453
    4. ')' → logprob: -11.375782012939453
    5. ' [' → logprob: -12.125782012939453
    6. ']' → logprob: -12.875782012939453
    7. '[:' → logprob: -13.000782012939453
    8. '][' → logprob: -13.125782012939453
    9. ':[' → logprob: -13.875782012939453
    10. '-' → logprob: -14.000782012939453

Token 63: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5373741388320923
    2. '0' → logprob: -1.2873741388320923
    3. '2' → logprob: -2.0373740196228027
    4. '-' → logprob: -5.037374019622803
    5. ' ' → logprob: -6.162374019622803
    6. ':' → logprob: -7.787374019622803
    7. '3' → logprob: -8.662374496459961
    8. '[' → logprob: -9.412374496459961
    9. ' -' → logprob: -10.162374496459961
    10. '::-' → logprob: -11.974874496459961

Token 64: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2710684537887573
    2. ',' → logprob: -2.021068572998047
    3. '])' → logprob: -2.271068572998047
    4. '))' → logprob: -7.396068572998047
    5. '),' → logprob: -8.521068572998047
    6. ' )' → logprob: -8.896068572998047
    7. ',)' → logprob: -8.896068572998047
    8. ')])' → logprob: -9.146068572998047
    9. ']' → logprob: -9.396068572998047
    10. '>)' → logprob: -9.646068572998047

Token 65: ' /' (ID: 820)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05605459585785866
    2. ',' → logprob: -2.9310545921325684
    3. ' )' → logprob: -6.931054592132568
    4. ' ,' → logprob: -9.306055068969727
    5. '))' → logprob: -10.931055068969727
    6. ',)' → logprob: -11.181055068969727
    7. '[' → logprob: -11.306055068969727
    8. ')
' → logprob: -11.931055068969727
    9. ')#' → logprob: -11.931055068969727
    10. '/' → logprob: -12.431055068969727

Token 66: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.006736811250448227
    2. ' x' → logprob: -5.006736755371094
    3. 'max' → logprob: -11.256736755371094
    4. ' ' → logprob: -12.381736755371094
    5. ' max' → logprob: -13.006736755371094
    6. '   ' → logprob: -14.506736755371094
    7. '  ' → logprob: -14.881736755371094
    8. '2' → logprob: -15.381736755371094
    9. 'S' → logprob: -15.381736755371094
    10. '1' → logprob: -15.756736755371094

Token 67: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.816093228830141e-06
    2. '1' → logprob: -13.75000286102295
    3. '[-' → logprob: -14.12500286102295
    4. '[
' → logprob: -15.50000286102295
    5. 'x' → logprob: -15.75000286102295
    6. ' [' → logprob: -15.87500286102295
    7. '-' → logprob: -16.500001907348633
    8. '0' → logprob: -16.625001907348633
    9. ')' → logprob: -16.750001907348633
    10. '2' → logprob: -16.875001907348633

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012348940595984459
    2. '2' → logprob: -4.5123491287231445
    3. '[' → logprob: -7.2623491287231445
    4. '3' → logprob: -7.6373491287231445
    5. '-' → logprob: -9.762349128723145
    6. ' ' → logprob: -10.887349128723145
    7. '4' → logprob: -11.637349128723145
    8. ']' → logprob: -12.012349128723145
    9. '0' → logprob: -12.137349128723145
    10. '   ' → logprob: -12.637349128723145

Token 69: '],' (ID: 2155)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.375475138425827
    2. '])' → logprob: -1.6254751682281494
    3. '),' → logprob: -3.0004751682281494
    4. ',' → logprob: -3.1254751682281494
    5. '],' → logprob: -4.00047492980957
    6. ' )' → logprob: -6.75047492980957
    7. ')])' → logprob: -6.87547492980957
    8. '))' → logprob: -7.00047492980957
    9. ' ])' → logprob: -8.37547492980957
    10. ']' → logprob: -8.75047492980957

Token 70: ' reverse' (ID: 18199)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.2018650621175766
    2. ' reverse' → logprob: -1.7018650770187378
    3. '-' → logprob: -8.076865196228027
    4. ' -' → logprob: -9.576865196228027
    5. ' ' → logprob: -10.076865196228027
    6. '  ' → logprob: -11.201865196228027
    7. '   ' → logprob: -11.451865196228027
    8. 're' → logprob: -13.826865196228027
    9. '_reverse' → logprob: -14.076865196228027
    10. '    ' → logprob: -14.326865196228027

Token 71: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.021516121923923492
    2. ')' → logprob: -4.0215163230896
    3. '=' → logprob: -5.7715163230896
    4. ',' → logprob: -8.771515846252441
    5. '(True' → logprob: -9.771515846252441
    6. '(' → logprob: -11.271515846252441
    7. ',)' → logprob: -12.021515846252441
    8. ')=' → logprob: -12.896515846252441
    9. 'True' → logprob: -13.146515846252441
    10. '),' → logprob: -13.146515846252441

Token 72: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.729906196298543e-06
    2. ')
' → logprob: -12.000009536743164
    3. ' )' → logprob: -12.750009536743164
    4. '   ' → logprob: -14.875009536743164
    5. '))' → logprob: -16.500009536743164
    6. ')

' → logprob: -16.625009536743164
    7. ')`' → logprob: -16.875009536743164
    8. ' ' → logprob: -17.625009536743164
    9. ')return' → logprob: -17.875009536743164
    10. '),' → logprob: -18.250009536743164

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6734647750854492
    2. '
' → logprob: -1.4234647750854492
    3. '    
' → logprob: -2.423464775085449
    4. 'max' → logprob: -3.673464775085449
    5. ')' → logprob: -4.298464775085449
    6. 'w' → logprob: -4.423464775085449
    7. ' 
' → logprob: -4.548464775085449
    8. 'heap' → logprob: -4.673464775085449
    9. ' max' → logprob: -4.923464775085449
    10. '    ' → logprob: -5.173464775085449

Token 74: ' def' (ID: 1056)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.9776296019554138
    2. 'dp' → logprob: -1.3526296615600586
    3. 'ans' → logprob: -2.2276296615600586
    4. 'q' → logprob: -2.9776296615600586
    5. 'pq' → logprob: -3.2276296615600586
    6. '   ' → logprob: -3.4776296615600586
    7. 'h' → logprob: -3.6026296615600586
    8. 'hq' → logprob: -4.102629661560059
    9. ' heap' → logprob: -4.727629661560059
    10. 'total' → logprob: -4.852629661560059

Token 75: ' ub' (ID: 11590)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -1.7845388650894165
    2. ' can' → logprob: -1.9095388650894165
    3. ' calc' → logprob: -1.9095388650894165
    4. ' solve' → logprob: -2.159538745880127
    5. ' f' → logprob: -2.284538745880127
    6. ' kn' → logprob: -2.534538745880127
    7. ' ' → logprob: -2.659538745880127
    8. ' check' → logprob: -3.409538745880127
    9. '   ' → logprob: -3.659538745880127
    10. ' main' → logprob: -3.659538745880127

Token 76: 'ounds' (ID: 4795)
  Prédit: 'ound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ound' → logprob: -0.046262145042419434
    2. '(i' → logprob: -4.296262264251709
    3. '(n' → logprob: -4.796262264251709
    4. '(x' → logprob: -4.921262264251709
    5. '(step' → logprob: -5.796262264251709
    6. 'search' → logprob: -6.171262264251709
    7. 'd' → logprob: -6.171262264251709
    8. '_search' → logprob: -6.921262264251709
    9. '(' → logprob: -7.296262264251709
    10. '(a' → logprob: -7.546262264251709

Token 77: '(w' (ID: 7420)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.4254083633422852
    2. '(' → logprob: -1.8004083633422852
    3. '(s' → logprob: -2.175408363342285
    4. '(n' → logprob: -2.175408363342285
    5. '(i' → logprob: -2.300408363342285
    6. '(N' → logprob: -2.675408363342285
    7. '(k' → logprob: -3.425408363342285
    8. '(S' → logprob: -3.675408363342285
    9. '():' → logprob: -3.925408363342285
    10. '(W' → logprob: -4.300408363342285

Token 78: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06566720455884933
    2. ',' → logprob: -2.815667152404785
    3. ' ):' → logprob: -6.565667152404785
    4. ' ,' → logprob: -7.190667152404785
    5. ')' → logprob: -7.440667152404785
    6. '):
' → logprob: -7.815667152404785
    7. ',w' → logprob: -8.690667152404785
    8. '   ' → logprob: -9.315667152404785
    9. ':' → logprob: -9.815667152404785
    10. '=' → logprob: -10.315667152404785

Token 79: ' v' (ID: 323)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.369147777557373
    2. ' i' → logprob: -1.869147777557373
    3. ' idx' → logprob: -1.994147777557373
    4. 'idx' → logprob: -2.369147777557373
    5. 'v' → logprob: -2.869147777557373
    6. ' v' → logprob: -3.119147777557373
    7. 'k' → logprob: -4.119147777557373
    8. ' k' → logprob: -4.369147777557373
    9. ' l' → logprob: -4.369147777557373
    10. 'l' → logprob: -4.369147777557373

Token 80: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.039134908467531204
    2. ',' → logprob: -3.289134979248047
    3. ')' → logprob: -7.414134979248047
    4. ' ):' → logprob: -8.414134979248047
    5. '):
' → logprob: -8.914134979248047
    6. '=' → logprob: -10.039134979248047
    7. ':' → logprob: -10.164134979248047
    8. ' ,' → logprob: -10.664134979248047
    9. '   ' → logprob: -12.164134979248047
    10. ' ' → logprob: -12.914134979248047

Token 81: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4474087953567505
    2. 'idx' → logprob: -1.3224087953567505
    3. ' i' → logprob: -3.322408676147461
    4. ' idx' → logprob: -3.447408676147461
    5. 'index' → logprob: -5.447408676147461
    6. 'pos' → logprob: -5.822408676147461
    7. 'k' → logprob: -6.072408676147461
    8. '   ' → logprob: -6.197408676147461
    9. 'n' → logprob: -6.322408676147461
    10. 's' → logprob: -6.447408676147461

Token 82: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0023397314362227917
    2. ')' → logprob: -6.752339839935303
    3. ',' → logprob: -7.752339839935303
    4. ' ):' → logprob: -7.752339839935303
    5. '):
' → logprob: -8.252339363098145
    6. '=' → logprob: -10.752339363098145
    7. ':' → logprob: -11.502339363098145
    8. '+' → logprob: -12.627339363098145
    9. '   ' → logprob: -13.127339363098145
    10. ''):' → logprob: -13.502339363098145

Token 83: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5871429443359375
    2. '):' → logprob: -1.3371429443359375
    3. '   ' → logprob: -2.2121429443359375
    4. '       ' → logprob: -3.2121429443359375
    5. ',' → logprob: -3.8371429443359375
    6. ')' → logprob: -5.8371429443359375
    7. ' :' → logprob: -6.2121429443359375
    8. '    ' → logprob: -6.2121429443359375
    9. '<|end|>' → logprob: -6.5871429443359375
    10. ' ,' → logprob: -8.712142944335938

Token 84: ' for' (ID: 395)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.21610891819000244
    2. 'if' → logprob: -2.841108798980713
    3. '   ' → logprob: -2.966108798980713
    4. '    ' → logprob: -3.466108798980713
    5. '       ' → logprob: -3.466108798980713
    6. ' ' → logprob: -4.466108798980713
    7. ' 
' → logprob: -5.716108798980713
    8. ' w' → logprob: -6.466108798980713
    9. '        ' → logprob: -6.841108798980713
    10. '  ' → logprob: -7.591108798980713

Token 85: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.4944444000720978
    2. ' range' → logprob: -1.1194443702697754
    3. 'range' → logprob: -3.2444443702697754
    4. 'j' → logprob: -4.619444370269775
    5. ' in' → logprob: -5.494444370269775
    6. ' x' → logprob: -6.119444370269775
    7. ' ' → logprob: -6.869444370269775
    8. '   ' → logprob: -7.119444370269775
    9. ' idx' → logprob: -7.119444370269775
    10. ' r' → logprob: -7.119444370269775

Token 86: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0014733182033523917
    2. 'in' → logprob: -6.751473426818848
    3. 'range' → logprob: -8.876473426818848
    4. ',' → logprob: -10.001473426818848
    5. ' range' → logprob: -10.001473426818848
    6. ' ' → logprob: -10.126473426818848
    7. '   ' → logprob: -10.751473426818848
    8. '  ' → logprob: -12.251473426818848
    9. '    ' → logprob: -14.126473426818848
    10. ')' → logprob: -14.251473426818848

Token 87: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.008656173013150692
    2. 'range' → logprob: -4.758656024932861
    3. ' ' → logprob: -10.75865650177002
    4. ' xrange' → logprob: -12.00865650177002
    5. '  ' → logprob: -12.75865650177002
    6. '   ' → logprob: -12.75865650177002
    7. '	range' → logprob: -12.75865650177002
    8. '(range' → logprob: -12.88365650177002
    9. ' ran' → logprob: -14.00865650177002
    10. 'ange' → logprob: -14.25865650177002

Token 88: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.26113563776016235
    2. ' i' → logprob: -1.8861355781555176
    3. '   ' → logprob: -2.7611355781555176
    4. 'i' → logprob: -4.261135578155518
    5. '	i' → logprob: -8.136136054992676
    6. '(N' → logprob: -9.011136054992676
    7. ',i' → logprob: -9.011136054992676
    8. '(' → logprob: -9.136136054992676
    9. ',' → logprob: -10.261136054992676
    10. '[i' → logprob: -10.386136054992676

Token 89: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0190126933157444
    2. ' ,' → logprob: -4.019012928009033
    3. ',len' → logprob: -8.144012451171875
    4. ',N' → logprob: -8.644012451171875
    5. '   ' → logprob: -8.769012451171875
    6. '+' → logprob: -8.894012451171875
    7. ',n' → logprob: -10.644012451171875
    8. ',
' → logprob: -11.519012451171875
    9. '       ' → logprob: -11.644012451171875
    10. '+,' → logprob: -11.769012451171875

Token 90: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0030215606093406677
    2. 'len' → logprob: -6.628021717071533
    3. ' N' → logprob: -6.628021717071533
    4. '   ' → logprob: -8.128021240234375
    5. ' len' → logprob: -9.753021240234375
    6. 'n' → logprob: -12.128021240234375
    7. '  ' → logprob: -12.378021240234375
    8. ' ' → logprob: -12.878021240234375
    9. '       ' → logprob: -13.628021240234375
    10. '    ' → logprob: -14.003021240234375

Token 91: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020815720781683922
    2. '):
' → logprob: -3.89581561088562
    3. ':' → logprob: -9.1458158493042
    4. '+' → logprob: -9.5208158493042
    5. ')' → logprob: -10.2708158493042
    6. ' ):' → logprob: -10.3958158493042
    7. '   ' → logprob: -12.1458158493042
    8. ',' → logprob: -12.1458158493042
    9. '):

' → logprob: -12.3958158493042
    10. '):
' → logprob: -12.6458158493042

Token 92: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10175944864749908
    2. ':' → logprob: -3.226759433746338
    3. '<|end|>' → logprob: -3.726759433746338
    4. '        ' → logprob: -4.601759433746338
    5. ',' → logprob: -5.351759433746338
    6. ')' → logprob: -5.726759433746338
    7. '):' → logprob: -5.726759433746338
    8. ' ' → logprob: -5.976759433746338
    9. ' if' → logprob: -5.976759433746338
    10. ' :' → logprob: -6.226759433746338

Token 93: ' v' (ID: 323)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5437577366828918
    2. ' w' → logprob: -1.168757677078247
    3. 'w' → logprob: -2.668757677078247
    4. 'if' → logprob: -4.168757915496826
    5. '<|end|>' → logprob: -4.668757915496826
    6. '       ' → logprob: -5.418757915496826
    7. '        ' → logprob: -5.793757915496826
    8. '           ' → logprob: -5.918757915496826
    9. ',' → logprob: -7.043757915496826
    10. '<|end|>' → logprob: -7.918757915496826

Token 94: 'j' (ID: 73)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.29644668102264404
    2. '+' → logprob: -1.796446681022644
    3. ' +=' → logprob: -2.4214468002319336
    4. ' +' → logprob: -6.796446800231934
    5. '+=(' → logprob: -8.046446800231934
    6. '   ' → logprob: -8.796446800231934
    7. ',' → logprob: -8.921446800231934
    8. '=' → logprob: -10.046446800231934
    9. 'v' → logprob: -10.546446800231934
    10. ']+=' → logprob: -11.296446800231934

Token 95: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.928310215473175
    2. ' =' → logprob: -1.1783101558685303
    3. '+=' → logprob: -2.5533101558685303
    4. '+' → logprob: -2.6783101558685303
    5. ',' → logprob: -2.6783101558685303
    6. ' +=' → logprob: -2.6783101558685303
    7. ' +' → logprob: -4.678310394287109
    8. ',v' → logprob: -6.678310394287109
    9. '=v' → logprob: -7.178310394287109
    10. '   ' → logprob: -7.303310394287109

Token 96: ' w' (ID: 286)
  Prédit: 'wj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wj' → logprob: -0.0327904187142849
    2. ' w' → logprob: -3.532790422439575
    3. 'w' → logprob: -5.907790184020996
    4. 'vj' → logprob: -8.157790184020996
    5. '   ' → logprob: -11.657790184020996
    6. ' ' → logprob: -12.407790184020996
    7. '    ' → logprob: -12.782790184020996
    8. 'wv' → logprob: -13.157790184020996
    9. 'W' → logprob: -13.407790184020996
    10. '```' → logprob: -13.407790184020996

Token 97: 'j' (ID: 73)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8311329483985901
    2. ' =' → logprob: -0.8311329483985901
    3. 'j' → logprob: -2.0811328887939453
    4. ',' → logprob: -6.956132888793945
    5. ' ' → logprob: -7.081132888793945
    6. '_j' → logprob: -7.706132888793945
    7. '<|end|>' → logprob: -8.081132888793945
    8. ' j' → logprob: -8.331132888793945
    9. ']' → logprob: -8.456132888793945
    10. ')' → logprob: -8.456132888793945

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25198811292648315
    2. '=' → logprob: -1.501988172531128
    3. ',' → logprob: -10.001988410949707
    4. ' ' → logprob: -12.251988410949707
    5. '    ' → logprob: -12.751988410949707
    6. '   ' → logprob: -13.251988410949707
    7. '=j' → logprob: -14.251988410949707
    8. '=v' → logprob: -14.626988410949707
    9. '=w' → logprob: -15.001988410949707
    10. '=

' → logprob: -15.001988410949707

Token 99: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00410380819812417
    2. ' S' → logprob: -5.504103660583496
    3. '   ' → logprob: -11.004103660583496
    4. 's' → logprob: -13.254103660583496
    5. '*S' → logprob: -13.754103660583496
    6. ' ' → logprob: -13.879103660583496
    7. '(S' → logprob: -14.129103660583496
    8. '  ' → logprob: -14.254103660583496
    9. '
' → logprob: -14.754103660583496
    10. '=S' → logprob: -14.754103660583496

Token 100: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0001005630983854644
    2. 'j' → logprob: -9.875100135803223
    3. '[' → logprob: -10.000100135803223
    4. '[i' → logprob: -12.875100135803223
    5. '[js' → logprob: -14.625100135803223
    6. '[user' → logprob: -16.62510108947754
    7. '[][' → logprob: -16.75010108947754
    8. '[
' → logprob: -16.75010108947754
    9. ' [' → logprob: -17.00010108947754
    10. '```' → logprob: -17.00010108947754

Token 101: ']
' (ID: 1592)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6101826429367065
    2. '[' → logprob: -1.4851826429367065
    3. ']' → logprob: -1.4851826429367065
    4. '][:' → logprob: -6.860182762145996
    5. ')[' → logprob: -6.985182762145996
    6. '0' → logprob: -7.610182762145996
    7. ')' → logprob: -8.485182762145996
    8. '>[' → logprob: -8.860182762145996
    9. '1' → logprob: -9.110182762145996
    10. '<|end|>' → logprob: -9.110182762145996

Token 102: '           ' (ID: 352)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002869423246011138
    2. '<|end|>' → logprob: -6.877869606018066
    3. ' ' → logprob: -7.752869606018066
    4. '   ' → logprob: -8.002869606018066
    5. '/' → logprob: -8.502869606018066
    6. '
' → logprob: -9.127869606018066
    7. '[
' → logprob: -9.252869606018066
    8. '           ' → logprob: -9.377869606018066
    9. '       ' → logprob: -9.877869606018066
    10. '[j' → logprob: -10.127869606018066

Token 103: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2529761791229248
    2. ' w' → logprob: -2.377976179122925
    3. 'w' → logprob: -3.002976179122925
    4. 'if' (adapté à ' if') → logprob: -3.377976179122925
    5. ' ' → logprob: -4.252976417541504
    6. '<|end|>' → logprob: -4.502976417541504
    7. '           ' → logprob: -5.502976417541504
    8. 'v' → logprob: -5.502976417541504
    9. ' v' → logprob: -6.127976417541504
    10. 'wj' → logprob: -6.252976417541504

Token 104: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.8385325074195862
    2. 'wj' → logprob: -1.2135324478149414
    3. 'w' → logprob: -1.3385324478149414
    4. '           ' → logprob: -5.838532447814941
    5. 'W' → logprob: -6.463532447814941
    6. ' W' → logprob: -6.713532447814941
    7. 'vj' → logprob: -7.463532447814941
    8. '   ' → logprob: -8.338532447814941
    9. 'j' → logprob: -8.588532447814941
    10. '       ' → logprob: -8.713532447814941

Token 105: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2028149515390396
    2. '+' → logprob: -1.7028149366378784
    3. '+w' → logprob: -7.577815055847168
    4. '+j' → logprob: -7.952815055847168
    5. '[' → logprob: -8.702815055847168
    6. 'j' → logprob: -9.202815055847168
    7. ' >=' → logprob: -9.702815055847168
    8. '   ' → logprob: -10.077815055847168
    9. ' +=' → logprob: -10.077815055847168
    10. '>=' → logprob: -10.702815055847168

Token 106: ' w' (ID: 286)
  Prédit: 'wj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wj' → logprob: -0.008666337467730045
    2. ' w' → logprob: -4.758666515350342
    3. 'vj' → logprob: -11.133666038513184
    4. ' ' → logprob: -11.633666038513184
    5. '   ' → logprob: -11.758666038513184
    6. 'w' → logprob: -12.508666038513184
    7. '       ' → logprob: -13.258666038513184
    8. '    ' → logprob: -13.633666038513184
    9. 'wv' → logprob: -13.758666038513184
    10. ' v' → logprob: -13.758666038513184

Token 107: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.338466093642637e-05
    2. '[j' → logprob: -10.500073432922363
    3. '_j' → logprob: -10.750073432922363
    4. 'w' → logprob: -11.625073432922363
    5. 'wj' → logprob: -12.000073432922363
    6. 'js' → logprob: -12.500073432922363
    7. '[' → logprob: -12.750073432922363
    8. '<|end|>' → logprob: -13.750073432922363
    9. '<|end|>' → logprob: -14.875073432922363
    10. ' j' → logprob: -15.375073432922363

Token 108: ' >' (ID: 1424)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.2404652237892151
    2. '<=' → logprob: -1.6154651641845703
    3. ' >' → logprob: -4.74046516418457
    4. '>' → logprob: -5.11546516418457
    5. ' <' → logprob: -9.61546516418457
    6. '<' → logprob: -9.61546516418457
    7. ' ' → logprob: -10.99046516418457
    8. '>=' → logprob: -11.49046516418457
    9. ' >=' → logprob: -11.61546516418457
    10. '#' → logprob: -11.86546516418457

Token 109: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.018189750611782074
    2. ' W' → logprob: -4.018189907073975
    3. ' ' → logprob: -11.018189430236816
    4. '   ' → logprob: -11.143189430236816
    5. '  ' → logprob: -13.143189430236816
    6. '	W' → logprob: -13.143189430236816
    7. '<|end|>' → logprob: -13.893189430236816
    8. 'w' → logprob: -14.143189430236816
    9. '=W' → logprob: -15.018189430236816
    10. ')' → logprob: -15.018189430236816

Token 110: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005346059333533049
    2. ':
' → logprob: -5.505345821380615
    3. '):' → logprob: -7.755345821380615
    4. ':return' → logprob: -7.755345821380615
    5. ')' → logprob: -9.005346298217773
    6. ' :' → logprob: -9.130346298217773
    7. '):
' → logprob: -10.005346298217773
    8. ',' → logprob: -10.380346298217773
    9. '<|end|>' → logprob: -10.630346298217773
    10. '       ' → logprob: -11.255346298217773

Token 111: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03061702847480774
    2. '                ' → logprob: -5.1556172370910645
    3. '            ' → logprob: -5.2806172370910645
    4. '           ' → logprob: -5.6556172370910645
    5. ' ' → logprob: -5.6556172370910645
    6. ':' → logprob: -5.7806172370910645
    7. '<|end|>' → logprob: -6.1556172370910645
    8. ' return' → logprob: -6.2806172370910645
    9. ',' → logprob: -6.9056172370910645
    10. ')' → logprob: -6.9056172370910645

Token 112: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2546146810054779
    2. 'return' (adapté à ' return') → logprob: -1.6296147108078003
    3. '               ' → logprob: -3.7546145915985107
    4. 'eturn' → logprob: -6.25461483001709
    5. '                   ' → logprob: -7.00461483001709
    6. '           ' → logprob: -7.37961483001709
    7. ' (' → logprob: -7.50461483001709
    8. ':return' → logprob: -8.00461483001709
    9. '	return' → logprob: -8.87961483001709
    10. ' v' → logprob: -8.87961483001709

Token 113: ' (-' (ID: 21382)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3136156499385834
    2. ' v' → logprob: -1.3136156797409058
    3. 'vj' → logprob: -8.438615798950195
    4. ' ' → logprob: -9.563615798950195
    5. '   ' → logprob: -10.688615798950195
    6. '(v' → logprob: -11.438615798950195
    7. '  ' → logprob: -11.688615798950195
    8. ' (' → logprob: -12.188615798950195
    9. '	v' → logprob: -12.563615798950195
    10. 'w' → logprob: -12.688615798950195

Token 114: 'v' (ID: 85)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.22932074964046478
    2. ' (' → logprob: -3.104320764541626
    3. 'vj' → logprob: -3.354320764541626
    4. '(w' → logprob: -3.479320764541626
    5. 'v' → logprob: -3.479320764541626
    6. '(' → logprob: -4.229320526123047
    7. '(-' → logprob: -4.354320526123047
    8. '1' → logprob: -4.854320526123047
    9. '(-(' → logprob: -5.104320526123047
    10. '((' → logprob: -5.104320526123047

Token 115: ',' (ID: 11)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.8641374707221985
    2. ' *' → logprob: -1.3641374111175537
    3. '*j' → logprob: -2.2391374111175537
    4. ')' → logprob: -2.8641374111175537
    5. '*' → logprob: -2.8641374111175537
    6. '+' → logprob: -3.6141374111175537
    7. '[j' → logprob: -4.239137649536133
    8. ' +' → logprob: -4.239137649536133
    9. '*w' → logprob: -4.239137649536133
    10. ' /' → logprob: -4.364137649536133

Token 116: ' -' (ID: 533)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5185841917991638
    2. ' v' → logprob: -1.1435842514038086
    3. '-v' → logprob: -3.5185842514038086
    4. ' (' → logprob: -3.8935842514038086
    5. '(v' → logprob: -4.643584251403809
    6. ' -' → logprob: -5.018584251403809
    7. 'vj' → logprob: -5.268584251403809
    8. '-' → logprob: -5.643584251403809
    9. '(-' → logprob: -6.268584251403809
    10. 'w' → logprob: -6.393584251403809

Token 117: 'v' (ID: 85)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.2369568943977356
    2. 'v' → logprob: -2.361956834793091
    3. 'vj' → logprob: -3.236956834793091
    4. '((' → logprob: -3.361956834793091
    5. ' (' → logprob: -3.861956834793091
    6. '(w' → logprob: -4.73695707321167
    7. ' v' → logprob: -5.86195707321167
    8. '(' → logprob: -5.86195707321167
    9. '(-' → logprob: -6.23695707321167
    10. 'w' → logprob: -6.48695707321167

Token 118: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8011958003044128
    2. '+' → logprob: -0.9261958003044128
    3. ' -' → logprob: -2.5511958599090576
    4. '-' → logprob: -2.6761958599090576
    5. ')' → logprob: -5.6761956214904785
    6. '+j' → logprob: -6.8011956214904785
    7. '-v' → logprob: -6.9261956214904785
    8. 'j' → logprob: -7.6761956214904785
    9. '*' → logprob: -7.6761956214904785
    10. '   ' → logprob: -7.9261956214904785

Token 119: ' v' (ID: 323)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.34950149059295654
    2. 'vj' → logprob: -1.5995014905929565
    3. ' (' → logprob: -3.224501609802246
    4. '(' → logprob: -3.849501609802246
    5. '((' → logprob: -4.224501609802246
    6. '(S' → logprob: -5.599501609802246
    7. '(w' → logprob: -5.724501609802246
    8. 'wj' → logprob: -6.099501609802246
    9. '(int' → logprob: -6.474501609802246
    10. ' v' → logprob: -6.724501609802246

Token 120: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0004342453321442008
    2. 'vj' → logprob: -8.625433921813965
    3. '+' → logprob: -9.750433921813965
    4. '   ' → logprob: -10.750433921813965
    5. '[j' → logprob: -11.000433921813965
    6. ' +' → logprob: -11.000433921813965
    7. 'v' → logprob: -11.000433921813965
    8. 'w' → logprob: -11.125433921813965
    9. 'wj' → logprob: -11.375433921813965
    10. '
' → logprob: -11.375433921813965

Token 121: ' /' (ID: 820)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8434120416641235
    2. ' *' → logprob: -1.0934120416641235
    3. '/w' → logprob: -2.718411922454834
    4. ')' → logprob: -2.968411922454834
    5. '*w' → logprob: -3.218411922454834
    6. '/' → logprob: -3.343411922454834
    7. ' /' → logprob: -3.593411922454834
    8. '*(' → logprob: -5.343411922454834
    9. ')
' → logprob: -5.593411922454834
    10. '*j' → logprob: -6.468411922454834

Token 122: ' w' (ID: 286)
  Prédit: 'wj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wj' → logprob: -0.00452660396695137
    2. ' w' → logprob: -5.629526615142822
    3. 'w' → logprob: -7.004526615142822
    4. '   ' → logprob: -12.004526138305664
    5. '(w' → logprob: -13.004526138305664
    6. ' ' → logprob: -13.254526138305664
    7. '(' → logprob: -13.629526138305664
    8. 'wi' → logprob: -13.754526138305664
    9. '_w' → logprob: -14.379526138305664
    10. ')' → logprob: -14.379526138305664

Token 123: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.822646693966817e-06
    2. '[j' → logprob: -13.000007629394531
    3. 'w' → logprob: -13.250007629394531
    4. ')' → logprob: -13.375007629394531
    5. ' j' → logprob: -14.375007629394531
    6. '*j' → logprob: -15.250007629394531
    7. 'wj' → logprob: -15.500007629394531
    8. 'js' → logprob: -15.750007629394531
    9. '_j' → logprob: -15.875007629394531
    10. '	j' → logprob: -16.00000762939453

Token 124: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.674698531627655
    2. ')
' → logprob: -0.799698531627655
    3. ' )
' → logprob: -3.9246985912323
    4. ' )' → logprob: -4.424698352813721
    5. ' *' → logprob: -5.924698352813721
    6. '       ' → logprob: -6.049698352813721
    7. '*' → logprob: -6.549698352813721
    8. '   ' → logprob: -7.549698352813721
    9. '           ' → logprob: -7.549698352813721
    10. ')

' → logprob: -7.674698352813721

Token 125: ' (' (ID: 350)
  Prédit: '(W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.0649995282292366
    2. ' (' → logprob: -3.064999580383301
    3. '(w' → logprob: -4.189999580383301
    4. '(' → logprob: -7.064999580383301
    5. ')' → logprob: -9.5649995803833
    6. '   ' → logprob: -10.0649995803833
    7. '(wx' → logprob: -10.1899995803833
    8. '(max' → logprob: -10.8149995803833
    9. '(float' → logprob: -11.3149995803833
    10. '((' → logprob: -11.3149995803833

Token 126: 'W' (ID: 54)
  Prédit: '(W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.015541430562734604
    2. ' (' → logprob: -4.2655415534973145
    3. 'W' → logprob: -7.2655415534973145
    4. '(' → logprob: -8.390541076660156
    5. ')' → logprob: -8.890541076660156
    6. ' W' → logprob: -9.390541076660156
    7. ')(' → logprob: -9.765541076660156
    8. '   ' → logprob: -9.890541076660156
    9. '(w' → logprob: -10.015541076660156
    10. '           ' → logprob: -10.640541076660156

Token 127: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.27473872900009155
    2. '-' → logprob: -1.7747387886047363
    3. '-w' → logprob: -2.6497387886047363
    4. ' ' → logprob: -11.399738311767578
    5. '-W' → logprob: -11.649738311767578
    6. '   ' → logprob: -11.774738311767578
    7. '  ' → logprob: -13.774738311767578
    8. '-j' → logprob: -14.149738311767578
    9. '-v' → logprob: -14.524738311767578
    10. ' ' → logprob: -14.649738311767578

Token 128: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0785675048828125
    2. ' w' → logprob: -2.7035675048828125
    3. '(w' → logprob: -5.0785675048828125
    4. ' (' → logprob: -6.5785675048828125
    5. '-w' → logprob: -7.8285675048828125
    6. 'wj' → logprob: -7.8285675048828125
    7. '   ' → logprob: -9.578567504882812
    8. ' -' → logprob: -10.453567504882812
    9. '	w' → logprob: -10.953567504882812
    10. ' ' → logprob: -10.953567504882812

Token 129: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03876915201544762
    2. 'w' → logprob: -4.163769245147705
    3. '))
' → logprob: -4.538769245147705
    4. ' ))' → logprob: -5.163769245147705
    5. ')' → logprob: -5.913769245147705
    6. 'j' → logprob: -6.288769245147705
    7. ' ))
' → logprob: -8.163768768310547
    8. ' ' → logprob: -8.663768768310547
    9. '_w' → logprob: -8.663768768310547
    10. 'wj' → logprob: -9.038768768310547

Token 130: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0128306150436401
    2. '\n' → logprob: -1.8878306150436401
    3. ' 
' → logprob: -2.1378307342529297
    4. ')' → logprob: -2.5128307342529297
    5. '   ' → logprob: -2.8878307342529297
    6. '' → logprob: -2.8878307342529297
    7. ' ' → logprob: -3.0128307342529297
    8. '    
' → logprob: -3.7628307342529297
    9. '  
' → logprob: -3.7628307342529297
    10. '       ' → logprob: -4.13783073425293

Token 131: ' w' (ID: 286)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0770203024148941
    2. 'w' (adapté à ' w') → logprob: -2.8270204067230225
    3. 'v' → logprob: -4.827020168304443
    4. 'return' → logprob: -5.452020168304443
    5. '   ' → logprob: -7.202020168304443
    6. '           ' → logprob: -7.202020168304443
    7. ' w' → logprob: -8.202020645141602
    8. 'wj' → logprob: -8.577020645141602
    9. 'else' → logprob: -8.952020645141602
    10. 'vj' → logprob: -8.952020645141602

Token 132: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.31454476714134216
    2. ' +=' → logprob: -1.3145447969436646
    3. '+' → logprob: -6.814544677734375
    4. ',' → logprob: -8.814544677734375
    5. '=' → logprob: -11.314544677734375
    6. '+,' → logprob: -12.189544677734375
    7. ']+=' → logprob: -12.189544677734375
    8. '+=(' → logprob: -12.314544677734375
    9. ' +' → logprob: -13.064544677734375
    10. ' ,' → logprob: -13.439544677734375

Token 133: ' w' (ID: 286)
  Prédit: 'wj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wj' → logprob: -0.0021866646129637957
    2. ' w' → logprob: -6.1271867752075195
    3. 'w' → logprob: -14.25218677520752
    4. 'wv' → logprob: -15.25218677520752
    5. 'vj' → logprob: -15.37718677520752
    6. 'wij' → logprob: -16.002185821533203
    7. 'wi' → logprob: -16.377185821533203
    8. '   ' → logprob: -17.002185821533203
    9. 'wn' → logprob: -17.002185821533203
    10. ' ' → logprob: -17.002185821533203

Token 134: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.29422426223754883
    2. 'wj' → logprob: -1.4192242622375488
    3. 'vj' → logprob: -4.919224262237549
    4. 'w' → logprob: -5.919224262237549
    5. '[' → logprob: -7.169224262237549
    6. 'tj' → logprob: -7.419224262237549
    7. '[j' → logprob: -8.04422378540039
    8. 'dj' → logprob: -8.41922378540039
    9. '_j' → logprob: -8.91922378540039
    10. 'js' → logprob: -8.91922378540039

Token 135: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1943080723285675
    2. 'v' → logprob: -2.194308042526245
    3. '       ' → logprob: -3.194308042526245
    4. 'vj' → logprob: -3.944308042526245
    5. ',v' → logprob: -6.444308280944824
    6. '<|end|>' → logprob: -6.819308280944824
    7. ' v' → logprob: -7.569308280944824
    8. ',' → logprob: -8.194308280944824
    9. '   ' → logprob: -8.694308280944824
    10. '
' → logprob: -8.819308280944824

Token 136: '           ' (ID: 352)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5099354982376099
    2. '       ' → logprob: -1.3849354982376099
    3. '-v' → logprob: -2.2599353790283203
    4. '-' → logprob: -4.25993537902832
    5. '           ' → logprob: -4.38493537902832
    6. ' v' → logprob: -5.00993537902832
    7. 'vj' → logprob: -5.50993537902832
    8. '   ' → logprob: -5.88493537902832
    9. ',v' → logprob: -6.25993537902832
    10. '	v' → logprob: -7.50993537902832

Token 137: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.005301589146256447
    2. ' v' → logprob: -5.255301475524902
    3. 'vj' → logprob: -9.880301475524902
    4. '           ' → logprob: -11.880301475524902
    5. '-v' → logprob: -12.505301475524902
    6. '   ' → logprob: -14.255301475524902
    7. ' ' → logprob: -14.380301475524902
    8. '       ' → logprob: -14.380301475524902
    9. '    ' → logprob: -14.630301475524902
    10. '-' → logprob: -14.630301475524902

Token 138: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.007704580668359995
    2. ' +=' → logprob: -5.257704734802246
    3. '+' → logprob: -6.007704734802246
    4. '+=(' → logprob: -12.757704734802246
    5. ']+=' → logprob: -13.382704734802246
    6. '+="' → logprob: -14.007704734802246
    7. '+='' → logprob: -14.382704734802246
    8. '=' → logprob: -14.382704734802246
    9. ' +' → logprob: -14.632704734802246
    10. '<|end|>' → logprob: -14.757704734802246

Token 139: ' v' (ID: 323)
  Prédit: 'vj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vj' → logprob: -0.012580759823322296
    2. ' v' → logprob: -4.387580871582031
    3. ' ' → logprob: -11.137580871582031
    4. 'v' → logprob: -11.262580871582031
    5. 'vi' → logprob: -11.512580871582031
    6. '-v' → logprob: -11.762580871582031
    7. 'wj' → logprob: -11.887580871582031
    8. '   ' → logprob: -12.387580871582031
    9. '	v' → logprob: -13.012580871582031
    10. 'vq' → logprob: -13.637580871582031

Token 140: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06618449091911316
    2. '[j' → logprob: -3.1911845207214355
    3. '[' → logprob: -4.3161845207214355
    4. '<|end|>' → logprob: -4.9411845207214355
    5. '_j' → logprob: -6.8161845207214355
    6. 'wj' → logprob: -7.5661845207214355
    7. 'vj' → logprob: -8.441184043884277
    8. 'w' → logprob: -8.441184043884277
    9. '<|end|>' → logprob: -9.566184043884277
    10. ' ' → logprob: -9.941184043884277

Token 141: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03595548868179321
    2. '   ' → logprob: -3.6609554290771484
    3. 'return' → logprob: -4.910955429077148
    4. ' return' → logprob: -6.285955429077148
    5. '
' → logprob: -9.160955429077148
    6. '<|end|>' → logprob: -9.660955429077148
    7. ')' → logprob: -9.785955429077148
    8. '	return' → logprob: -10.160955429077148
    9. ',' → logprob: -10.785955429077148
    10. '      ' → logprob: -11.410955429077148

Token 142: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15052396059036255
    2. '   ' → logprob: -2.4005239009857178
    3. '<|end|>' → logprob: -3.5255239009857178
    4. '       ' → logprob: -5.025524139404297
    5. '
' → logprob: -5.525524139404297
    6. ' return' → logprob: -5.900524139404297
    7. ')
' → logprob: -6.650524139404297
    8. '    
' → logprob: -7.275524139404297
    9. ',' → logprob: -7.525524139404297
    10. '\' → logprob: -7.525524139404297

Token 143: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2666928768157959
    2. 'return' (adapté à ' return') → logprob: -1.516692876815796
    3. ' return' → logprob: -4.766693115234375
    4. '-v' → logprob: -5.516693115234375
    5. '       ' → logprob: -6.641693115234375
    6. '(-' → logprob: -7.891693115234375
    7. '	return' → logprob: -8.516693115234375
    8. '
' → logprob: -9.141693115234375
    9. '  ' → logprob: -10.016693115234375
    10. '-w' → logprob: -10.141693115234375

Token 144: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.00024715426843613386
    2. '-v' → logprob: -8.50024700164795
    3. ' (-' → logprob: -11.12524700164795
    4. '(' → logprob: -11.37524700164795
    5. '(v' → logprob: -11.75024700164795
    6. '-w' → logprob: -11.87524700164795
    7. '   ' → logprob: -14.37524700164795
    8. '-' → logprob: -14.87524700164795
    9. 'None' → logprob: -15.00024700164795
    10. '(None' → logprob: -15.25024700164795

Token 145: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.7697225252486533e-06
    2. ' v' → logprob: -12.750003814697266
    3. ')v' → logprob: -15.250003814697266
    4. ')' → logprob: -15.375003814697266
    5. 'w' → logprob: -15.875003814697266
    6. '-v' → logprob: -16.375003814697266
    7. '(v' → logprob: -17.750003814697266
    8. '   ' → logprob: -18.250003814697266
    9. 'vj' → logprob: -18.625003814697266
    10. 'vq' → logprob: -19.125003814697266

Token 146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1050976812839508
    2. ')' → logprob: -2.355097770690918
    3. ',)' → logprob: -5.355097770690918
    4. ' ,' → logprob: -9.855097770690918
    5. ',None' → logprob: -10.605097770690918
    6. ')
' → logprob: -10.855097770690918
    7. ',)
' → logprob: -11.230097770690918
    8. ' )' → logprob: -11.355097770690918
    9. ',
' → logprob: -11.980097770690918
    10. ',w' → logprob: -11.980097770690918

Token 147: ' -' (ID: 533)
  Prédit: '-v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-v' → logprob: -0.008644474670290947
    2. ' -' → logprob: -5.0086445808410645
    3. '-w' → logprob: -6.5086445808410645
    4. '-' → logprob: -8.758644104003906
    5. '-V' → logprob: -8.883644104003906
    6. '0' → logprob: -9.508644104003906
    7. '-inf' → logprob: -10.883644104003906
    8. '-W' → logprob: -11.508644104003906
    9. '(-' → logprob: -11.633644104003906
    10. ' ' → logprob: -12.008644104003906

Token 148: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -8.65707261255011e-06
    2. '-v' → logprob: -12.125008583068848
    3. ' v' → logprob: -14.000008583068848
    4. ')' → logprob: -14.375008583068848
    5. '-' → logprob: -14.625008583068848
    6. 'float' → logprob: -14.875008583068848
    7. '1' → logprob: -15.000008583068848
    8. ')v' → logprob: -15.375008583068848
    9. 'w' → logprob: -16.125009536743164
    10. ' -' → logprob: -17.000009536743164

Token 149: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014257101574912667
    2. ' )' → logprob: -6.626425743103027
    3. ')
' → logprob: -9.626425743103027
    4. ')

' → logprob: -10.501425743103027
    5. '))' → logprob: -13.626425743103027
    6. 'v' → logprob: -13.626425743103027
    7. '   ' → logprob: -14.001425743103027
    8. ')v' → logprob: -14.126425743103027
    9. ' ' → logprob: -14.251425743103027
    10. ' )
' → logprob: -14.376425743103027

Token 150: '   ' (ID: 271)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5695311427116394
    2. '   ' → logprob: -1.3195312023162842
    3. 'heap' → logprob: -2.944531202316284
    4. 'he' → logprob: -3.569531202316284
    5. 'from' → logprob: -3.694531202316284
    6. ')' → logprob: -4.069530963897705
    7. '<|end|>' → logprob: -4.069530963897705
    8. 'return' → logprob: -4.819530963897705
    9. 'def' → logprob: -5.194530963897705
    10. 'w' → logprob: -6.194530963897705

Token 151: ' v' (ID: 323)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.2223925590515137
    2. 'hq' → logprob: -1.9723925590515137
    3. 'heap' → logprob: -1.9723925590515137
    4. 'import' → logprob: -2.0973925590515137
    5. 'pq' → logprob: -2.2223925590515137
    6. 'h' → logprob: -3.0973925590515137
    7. 'from' → logprob: -3.4723925590515137
    8. 'que' → logprob: -3.5973925590515137
    9. '   ' → logprob: -3.9723925590515137
    10. 'Q' → logprob: -4.222392559051514

Token 152: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020417040213942528
    2. ' =' → logprob: -4.270417213439941
    3. ' ,' → logprob: -6.145417213439941
    4. ',w' → logprob: -7.520417213439941
    5. 'import' → logprob: -7.895417213439941
    6. '0' → logprob: -8.020417213439941
    7. '   ' → logprob: -8.145417213439941
    8. 'max' → logprob: -8.270417213439941
    9. ',v' → logprob: -8.270417213439941
    10. '=' → logprob: -8.395417213439941

Token 153: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024372996762394905
    2. ',w' → logprob: -4.6493730545043945
    3. ',v' → logprob: -4.7743730545043945
    4. ' ,' → logprob: -6.3993730545043945
    5. ' =' → logprob: -6.3993730545043945
    6. '=' → logprob: -7.8993730545043945
    7. '   ' → logprob: -7.8993730545043945
    8. ',u' → logprob: -8.274373054504395
    9. '1' → logprob: -8.399373054504395
    10. 'w' → logprob: -8.399373054504395

Token 154: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.1303282380104065
    2. ' v' → logprob: -2.1303281784057617
    3. 'w' → logprob: -6.880328178405762
    4. 'ub' → logprob: -7.755328178405762
    5. '_' → logprob: -8.380328178405762
    6. 'h' → logprob: -8.505328178405762
    7. ' ub' → logprob: -8.630328178405762
    8. ' w' → logprob: -9.005328178405762
    9. '_v' → logprob: -9.130328178405762
    10. 'heap' → logprob: -9.505328178405762

Token 155: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.577255368232727
    2. ' =' → logprob: -1.077255368232727
    3. '1' → logprob: -2.4522552490234375
    4. '_' → logprob: -5.4522552490234375
    5. '2' → logprob: -5.5772552490234375
    6. 'v' → logprob: -6.7022552490234375
    7. ',' → logprob: -6.8272552490234375
    8. ' ' → logprob: -8.077255249023438
    9. '0' → logprob: -8.077255249023438
    10. '=v' → logprob: -8.952255249023438

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033657919615507126
    2. '=' → logprob: -3.408658027648926
    3. ',' → logprob: -11.658658027648926
    4. ' ' → logprob: -12.908658027648926
    5. ')' → logprob: -15.033658027648926
    6. ' =
' → logprob: -15.783658027648926
    7. ' =)' → logprob: -15.908658027648926
    8. '   ' → logprob: -16.03365707397461
    9. '<|end|>' → logprob: -16.03365707397461
    10. ' ,' → logprob: -16.03365707397461

Token 157: ' ub' (ID: 11590)
  Prédit: 'ub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ub' → logprob: -0.11346796900033951
    2. ' ub' → logprob: -2.2384679317474365
    3. ' ' → logprob: -8.613468170166016
    4. '   ' → logprob: -8.988468170166016
    5. '0' → logprob: -9.238468170166016
    6. 'heap' → logprob: -10.300968170166016
    7. 'he' → logprob: -10.550968170166016
    8. '-' → logprob: -10.863468170166016
    9. '  ' → logprob: -10.863468170166016
    10. '1' → logprob: -11.175968170166016

Token 158: 'ounds' (ID: 4795)
  Prédit: 'ounds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounds' → logprob: -1.2233183042553719e-05
    2. 'ound' → logprob: -11.625012397766113
    3. 'bounds' → logprob: -13.500012397766113
    4. 'ount' → logprob: -14.250012397766113
    5. 'o' → logprob: -14.500012397766113
    6. 'onds' → logprob: -15.375012397766113
    7. '(' → logprob: -16.000011444091797
    8. 'oints' → logprob: -16.250011444091797
    9. 'OUNDS' → logprob: -16.250011444091797
    10. ')' → logprob: -17.750011444091797

Token 159: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00024084746837615967
    2. '0' → logprob: -8.75024127960205
    3. ' (' → logprob: -9.50024127960205
    4. '(
' → logprob: -12.75024127960205
    5. '
' → logprob: -13.50024127960205
    6. '(v' → logprob: -13.87524127960205
    7. '((' → logprob: -14.25024127960205
    8. '(-' → logprob: -15.75024127960205
    9. '()' → logprob: -15.87524127960205
    10. ' ' → logprob: -16.125240325927734

Token 160: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003328734077513218
    2. '(' → logprob: -5.878328800201416
    3. ' ' → logprob: -8.003328323364258
    4. ')' → logprob: -9.503328323364258
    5. ',' → logprob: -9.503328323364258
    6. '   ' → logprob: -10.878328323364258
    7. '
' → logprob: -12.128328323364258
    8. ')
' → logprob: -12.878328323364258
    9. '  ' → logprob: -13.065828323364258
    10. ' (' → logprob: -13.378328323364258

Token 161: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007815150311216712
    2. ' ,' → logprob: -7.375781536102295
    3. '0' → logprob: -9.000781059265137
    4. ',
' → logprob: -11.500781059265137
    5. '   ' → logprob: -11.625781059265137
    6. ')' → logprob: -12.375781059265137
    7. '1' → logprob: -12.875781059265137
    8. ' ' → logprob: -13.625781059265137
    9. ',v' → logprob: -13.750781059265137
    10. '2' → logprob: -14.625781059265137

Token 162: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019454145804047585
    2. ' ' → logprob: -6.251945495605469
    3. '   ' → logprob: -11.376945495605469
    4. '  ' → logprob: -13.126945495605469
    5. ',' → logprob: -13.751945495605469
    6. '1' → logprob: -14.189445495605469
    7. '    ' → logprob: -14.939445495605469
    8. ')' → logprob: -15.501945495605469
    9. '     ' → logprob: -16.31444549560547
    10. '00' → logprob: -16.50194549560547

Token 163: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00024370834580622613
    2. ' ' → logprob: -8.375244140625
    3. ',' → logprob: -11.500244140625
    4. '1' → logprob: -14.187744140625
    5. '   ' → logprob: -14.687744140625
    6. '00' → logprob: -15.375244140625
    7. '000' → logprob: -15.437744140625
    8. ')' → logprob: -15.500244140625
    9. '  ' → logprob: -15.562744140625
    10. '
' → logprob: -15.937744140625

Token 164: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.220573363360018e-05
    2. ' ,' → logprob: -10.125082015991211
    3. '1' → logprob: -10.500082015991211
    4. '0' → logprob: -11.375082015991211
    5. '   ' → logprob: -13.625082015991211
    6. '2' → logprob: -14.500082015991211
    7. ')' → logprob: -14.875082015991211
    8. '3' → logprob: -16.12508201599121
    9. ',
' → logprob: -16.25008201599121
    10. ' ' → logprob: -16.50008201599121

Token 165: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002932750794570893
    2. '1' → logprob: -8.625293731689453
    3. ' ' → logprob: -9.125293731689453
    4. '   ' → logprob: -13.250293731689453
    5. ')' → logprob: -13.500293731689453
    6. '2' → logprob: -13.625293731689453
    7. '  ' → logprob: -15.750293731689453
    8. '3' → logprob: -16.250293731689453
    9. '    ' → logprob: -17.000293731689453
    10. '4' → logprob: -18.187793731689453

Token 166: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.813969957875088e-05
    2. ' ' → logprob: -10.125067710876465
    3. '1' → logprob: -10.625067710876465
    4. '   ' → logprob: -13.125067710876465
    5. ')' → logprob: -13.750067710876465
    6. '2' → logprob: -15.375067710876465
    7. '  ' → logprob: -15.875067710876465
    8. '    ' → logprob: -16.87506866455078
    9. '3' → logprob: -16.93756866455078
    10. '       ' → logprob: -17.43756866455078

Token 167: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.927930654550437e-05
    2. ')
' → logprob: -10.875029563903809
    3. ' )' → logprob: -11.625029563903809
    4. '   ' → logprob: -14.625029563903809
    5. ')

' → logprob: -15.375029563903809
    6. ' ' → logprob: -15.500029563903809
    7. '))' → logprob: -15.750029563903809
    8. ')
' → logprob: -16.250028610229492
    9. '()' → logprob: -16.875028610229492
    10. '),' → logprob: -17.250028610229492

Token 168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5735662579536438
    2. '<|end|>' → logprob: -1.698566198348999
    3. ')' → logprob: -2.198566198348999
    4. ',' → logprob: -2.698566198348999
    5. ':' → logprob: -3.698566198348999
    6. '
' → logprob: -4.448566436767578
    7. ' ' → logprob: -4.823566436767578
    8. '    
' → logprob: -5.448566436767578
    9. ',
' → logprob: -5.448566436767578
    10. '[' → logprob: -6.073566436767578

Token 169: ' q' (ID: 2335)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4131365418434143
    2. 'he' → logprob: -1.9131364822387695
    3. 'heap' → logprob: -3.1631364822387695
    4. ')' → logprob: -3.5381364822387695
    5. 'v' → logprob: -3.9131364822387695
    6. '(' → logprob: -4.2881364822387695
    7. 'if' → logprob: -4.6631364822387695
    8. 'print' → logprob: -4.6631364822387695
    9. 'while' → logprob: -4.6631364822387695
    10. '[' → logprob: -4.7881364822387695

Token 170: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04302465170621872
    2. '=' → logprob: -3.1680245399475098
    3. '   ' → logprob: -11.668025016784668
    4. ',' → logprob: -12.418025016784668
    5. '=[]' → logprob: -12.543025016784668
    6. 'import' → logprob: -12.918025016784668
    7. ' =
' → logprob: -13.418025016784668
    8. '  ' → logprob: -13.543025016784668
    9. '=[]
' → logprob: -14.043025016784668
    10. 'u' → logprob: -14.168025016784668

Token 171: ' []
' (ID: 8911)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.05068833380937576
    2. '[' → logprob: -3.0506882667541504
    3. '[]' → logprob: -6.30068826675415
    4. '[]
' → logprob: -8.550688743591309
    5. '[((' → logprob: -9.675688743591309
    6. ' [(' → logprob: -12.550688743591309
    7. '[-' → logprob: -12.800688743591309
    8. '[
' → logprob: -14.925688743591309
    9. '[[' → logprob: -15.175688743591309
    10. ' [' → logprob: -15.425688743591309

Token 172: '   ' (ID: 271)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.014965915121138096
    2. '   ' → logprob: -4.389966011047363
    3. ' he' → logprob: -6.014966011047363
    4. '_he' → logprob: -12.014966011047363
    5. 'q' → logprob: -14.014966011047363
    6. '    
' → logprob: -14.514966011047363
    7. '  ' → logprob: -14.639966011047363
    8. '    ' → logprob: -14.639966011047363
    9. 'He' → logprob: -14.764966011047363
    10. '.he' → logprob: -14.764966011047363

Token 173: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' (adapté à ' he') → logprob: -4.620622712536715e-05
    2. 'q' → logprob: -10.625045776367188
    3. ' he' → logprob: -11.375045776367188
    4. '   ' → logprob: -11.750045776367188
    5. 'import' → logprob: -14.375045776367188
    6. '    
' → logprob: -14.375045776367188
    7. '
' → logprob: -14.500045776367188
    8. 'from' → logprob: -15.000045776367188
    9. 'h' → logprob: -16.375045776367188
    10. '  ' → logprob: -16.500045776367188

Token 174: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -3.5716304410016164e-05
    2. 'ap' → logprob: -10.250035285949707
    3. ' app' → logprob: -15.750035285949707
    4. 'a' → logprob: -16.875036239624023
    5. 'pp' → logprob: -17.625036239624023
    6. 'ап' → logprob: -18.000036239624023
    7. '```' → logprob: -18.125036239624023
    8. '	app' → logprob: -18.250036239624023
    9. 'append' → logprob: -18.250036239624023
    10. 'appen' → logprob: -19.000036239624023

Token 175: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -5.836499985889532e-05
    2. 'push' → logprob: -9.7500581741333
    3. 'op' → logprob: -17.750059127807617
    4. '```' → logprob: -19.875059127807617
    5. 'app' → logprob: -20.250059127807617
    6. '   ' → logprob: -20.500059127807617
    7. 'pp' → logprob: -20.750059127807617
    8. 'sh' → logprob: -20.875059127807617
    9. 'u' → logprob: -20.875059127807617
    10. ' push' → logprob: -21.000059127807617

Token 176: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -7.107425062713446e-06
    2. ' (' → logprob: -12.375006675720215
    3. '(' → logprob: -12.875006675720215
    4. 'q' → logprob: -15.875006675720215
    5. '(
' → logprob: -16.87500762939453
    6. ',q' → logprob: -18.62500762939453
    7. ' q' → logprob: -18.75000762939453
    8. ',' → logprob: -19.25000762939453
    9. '(s' → logprob: -19.37500762939453
    10. '   ' → logprob: -19.37500762939453

Token 177: ',' (ID: 11)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.7116379737854004
    2. ',' → logprob: -0.9616379737854004
    3. '(' → logprob: -2.4616379737854004
    4. '(q' → logprob: -3.9616379737854004
    5. ' (' → logprob: -4.5866379737854
    6. ',(' → logprob: -5.3366379737854
    7. '   ' → logprob: -6.2116379737854
    8. ' ,' → logprob: -6.5866379737854
    9. '(v' → logprob: -6.7116379737854
    10. '((-' → logprob: -6.8366379737854

Token 178: ' (' (ID: 350)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.029161445796489716
    2. ' (' → logprob: -3.9041614532470703
    3. '(' → logprob: -4.77916145324707
    4. '   ' → logprob: -9.52916145324707
    5. '(u' → logprob: -9.65416145324707
    6. '((' → logprob: -10.77916145324707
    7. '(-' → logprob: -11.65416145324707
    8. '[v' → logprob: -12.27916145324707
    9. ')' → logprob: -12.65416145324707
    10. ' ' → logprob: -13.27916145324707

Token 179: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0005730479606427252
    2. ' v' → logprob: -7.50057315826416
    3. '0' → logprob: -11.12557315826416
    4. '-v' → logprob: -12.87557315826416
    5. '(v' → logprob: -13.12557315826416
    6. ')v' → logprob: -14.87557315826416
    7. '   ' → logprob: -16.000572204589844
    8. '[v' → logprob: -16.375572204589844
    9. '(' → logprob: -16.500572204589844
    10. ' ' → logprob: -16.750572204589844

Token 180: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.269565634895116e-05
    2. '2' → logprob: -9.500092506408691
    3. ',' → logprob: -11.375092506408691
    4. '0' → logprob: -12.625092506408691
    5. ' ' → logprob: -13.500092506408691
    6. ' ,' → logprob: -14.625092506408691
    7. 'v' → logprob: -14.750092506408691
    8. ',v' → logprob: -15.250092506408691
    9. '   ' → logprob: -15.750092506408691
    10. ' v' → logprob: -16.500093460083008

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014489953173324466
    2. ' ,' → logprob: -9.250144958496094
    3. '0' → logprob: -10.500144958496094
    4. '   ' → logprob: -11.250144958496094
    5. ')' → logprob: -12.875144958496094
    6. ',
' → logprob: -13.375144958496094
    7. '[' → logprob: -14.125144958496094
    8. '  ' → logprob: -14.625144958496094
    9. '    ' → logprob: -14.875144958496094
    10. ' ' → logprob: -14.875144958496094

Token 182: ' v' (ID: 323)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0012078535510227084
    2. ' ' → logprob: -6.7512078285217285
    3. 'v' → logprob: -11.251208305358887
    4. '   ' → logprob: -11.501208305358887
    5. '  ' → logprob: -12.126208305358887
    6. '    ' → logprob: -12.751208305358887
    7. '1' → logprob: -12.876208305358887
    8. ',' → logprob: -14.626208305358887
    9. '     ' → logprob: -14.751208305358887
    10. '(' → logprob: -14.876208305358887

Token 183: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.30348747968673706
    2. '1' → logprob: -1.9284875392913818
    3. '0' → logprob: -2.178487539291382
    4. ',' → logprob: -6.053487300872803
    5. ' ' → logprob: -7.928487300872803
    6. '(' → logprob: -8.928487777709961
    7. 'w' → logprob: -8.928487777709961
    8. ',w' → logprob: -10.053487777709961
    9. ')' → logprob: -10.178487777709961
    10. '   ' → logprob: -10.678487777709961

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016790216614026576
    2. ' ,' → logprob: -8.750167846679688
    3. '0' → logprob: -12.000167846679688
    4. ')' → logprob: -13.250167846679688
    5. '   ' → logprob: -14.375167846679688
    6. '))' → logprob: -14.625167846679688
    7. '),' → logprob: -15.875167846679688
    8. ' ' → logprob: -16.125167846679688
    9. '1' → logprob: -16.750167846679688
    10. ',
' → logprob: -17.625167846679688

Token 185: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016599490481894463
    2. ' ' → logprob: -8.750165939331055
    3. '   ' → logprob: -13.000165939331055
    4. ',' → logprob: -13.625165939331055
    5. '  ' → logprob: -13.875165939331055
    6. '1' → logprob: -14.250165939331055
    7. '[],' → logprob: -14.500165939331055
    8. ')' → logprob: -14.812665939331055
    9. 'w' → logprob: -15.000165939331055
    10. '    ' → logprob: -15.500165939331055

Token 186: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.779520092299208e-05
    2. ' ' → logprob: -9.500078201293945
    3. '   ' → logprob: -14.125078201293945
    4. '1' → logprob: -14.625078201293945
    5. ',' → logprob: -15.000078201293945
    6. '  ' → logprob: -15.000078201293945
    7. ')' → logprob: -15.250078201293945
    8. '[],' → logprob: -15.875078201293945
    9. 'w' → logprob: -16.125078201293945
    10. 'W' → logprob: -16.187578201293945

Token 187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11595673859119415
    2. '))' → logprob: -2.2409567832946777
    3. ')' → logprob: -5.865956783294678
    4. ' ))' → logprob: -8.86595630645752
    5. ' ,' → logprob: -8.99095630645752
    6. ' )' → logprob: -11.24095630645752
    7. '   ' → logprob: -12.61595630645752
    8. '  ' → logprob: -12.99095630645752
    9. ' ' → logprob: -12.99095630645752
    10. '0' → logprob: -13.24095630645752

Token 188: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00035536551149562
    2. ' ' → logprob: -8.00035572052002
    3. '   ' → logprob: -12.12535572052002
    4. ')' → logprob: -12.12535572052002
    5. '[]' → logprob: -12.87535572052002
    6. '  ' → logprob: -13.12535572052002
    7. '[],' → logprob: -13.50035572052002
    8. '[])' → logprob: -14.62535572052002
    9. '    ' → logprob: -15.06285572052002
    10. ',' → logprob: -15.25035572052002

Token 189: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.23917081207037e-05
    2. ' ' → logprob: -10.250041961669922
    3. ')' → logprob: -12.625041961669922
    4. '[]' → logprob: -13.625041961669922
    5. '[],' → logprob: -14.000041961669922
    6. '   ' → logprob: -15.000041961669922
    7. ',' → logprob: -15.250041961669922
    8. '[])' → logprob: -15.250041961669922
    9. '  ' → logprob: -16.187541961669922
    10. '[' → logprob: -16.625041961669922

Token 190: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.40477314591407776
    2. ',' → logprob: -1.5297731161117554
    3. ')' → logprob: -2.154773235321045
    4. ' ))' → logprob: -8.654772758483887
    5. ',)' → logprob: -9.154772758483887
    6. ' )' → logprob: -9.904772758483887
    7. ' ,' → logprob: -11.904772758483887
    8. '0' → logprob: -12.029772758483887
    9. '),' → logprob: -12.904772758483887
    10. ')))' → logprob: -12.904772758483887

Token 191: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028537323232740164
    2. ')' → logprob: -6.502853870391846
    3. ' ' → logprob: -7.377853870391846
    4. '[]' → logprob: -7.752853870391846
    5. '))' → logprob: -8.752853393554688
    6. '[])' → logprob: -10.752853393554688
    7. 'W' → logprob: -11.002853393554688
    8. '   ' → logprob: -11.002853393554688
    9. '[' → logprob: -11.377853393554688
    10. '1' → logprob: -11.502853393554688

Token 192: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015166497323662043
    2. ')' → logprob: -6.876516819000244
    3. '[]' → logprob: -8.251516342163086
    4. ' ' → logprob: -9.876516342163086
    5. '[])' → logprob: -10.251516342163086
    6. '))' → logprob: -10.501516342163086
    7. 'W' → logprob: -11.001516342163086
    8. 'False' → logprob: -11.126516342163086
    9. '1' → logprob: -11.126516342163086
    10. 'q' → logprob: -11.251516342163086

Token 193: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10021109133958817
    2. '))' → logprob: -2.3502111434936523
    3. ')
' → logprob: -13.225211143493652
    4. '   ' → logprob: -14.225211143493652
    5. '))
' → logprob: -14.225211143493652
    6. ' )' → logprob: -14.350211143493652
    7. ')))' → logprob: -14.475211143493652
    8. ',' → logprob: -15.975211143493652
    9. ' ))' → logprob: -16.975210189819336
    10. '])' → logprob: -17.475210189819336

Token 194: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.540570855140686
    2. ')' → logprob: -1.165570855140686
    3. 'while' → logprob: -3.1655707359313965
    4. '<|end|>' → logprob: -3.5405707359313965
    5. ' while' → logprob: -4.6655707359313965
    6. ':' → logprob: -5.0405707359313965
    7. ',' → logprob: -5.7905707359313965
    8. ' ' → logprob: -5.7905707359313965
    9. '	while' → logprob: -6.1655707359313965
    10. '  ' → logprob: -6.2905707359313965

Token 195: ' vm' (ID: 22972)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7003468871116638
    2. '   ' → logprob: -0.9503468871116638
    3. ' while' → logprob: -2.7003469467163086
    4. ')' → logprob: -3.4503469467163086
    5. '	while' → logprob: -4.450346946716309
    6. '    ' → logprob: -6.325346946716309
    7. '       ' → logprob: -6.950346946716309
    8. ' ' → logprob: -7.325346946716309
    9. '    
' → logprob: -7.950346946716309
    10. ',' → logprob: -7.950346946716309

Token 196: '1' (ID: 16)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.06776673346757889
    2. 'a' → logprob: -2.8177666664123535
    3. ' =' → logprob: -5.5677666664123535
    4. '=' → logprob: -6.5677666664123535
    5. 'p' → logprob: -8.192767143249512
    6. 'axed' → logprob: -9.067767143249512
    7. '   ' → logprob: -10.067767143249512
    8. '=max' → logprob: -10.567767143249512
    9. '=ax' → logprob: -10.942767143249512
    10. ' ax' → logprob: -11.442767143249512

Token 197: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29791995882987976
    2. 'ax' → logprob: -1.9229199886322021
    3. '=' → logprob: -2.922919988632202
    4. 'a' → logprob: -3.547919988632202
    5. ' =' → logprob: -4.297919750213623
    6. '1' → logprob: -4.547919750213623
    7. 'x' → logprob: -5.922919750213623
    8. ' ,' → logprob: -7.797919750213623
    9. ',a' → logprob: -8.422920227050781
    10. '2' → logprob: -8.672920227050781

Token 198: ' v' (ID: 323)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.6786727905273438
    2. '{}' → logprob: -0.8036727905273438
    3. '1' → logprob: -4.553672790527344
    4. '0' → logprob: -4.678672790527344
    5. ' float' → logprob: -5.053672790527344
    6. '-' → logprob: -5.053672790527344
    7. '-v' → logprob: -5.928672790527344
    8. '{' → logprob: -6.178672790527344
    9. '10' → logprob: -6.303672790527344
    10. ' ' → logprob: -6.553672790527344

Token 199: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18000991642475128
    2. '2' → logprob: -1.8050099611282349
    3. '0' → logprob: -9.305009841918945
    4. '-' → logprob: -10.430009841918945
    5. 'max' → logprob: -10.680009841918945
    6. 'x' → logprob: -11.180009841918945
    7. '[]' → logprob: -11.180009841918945
    8. ' ' → logprob: -11.305009841918945
    9. '[' → logprob: -11.930009841918945
    10. '   ' → logprob: -11.992509841918945

Token 200: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 201: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10282342880964279
    2. 'while' → logprob: -2.477823495864868
    3. ' while' → logprob: -4.352823257446289
    4. '    
' → logprob: -7.852823257446289
    5. ')' → logprob: -8.352823257446289
    6. '	while' → logprob: -8.477823257446289
    7. ',' → logprob: -10.477823257446289
    8. '
' → logprob: -10.727823257446289
    9. '<|end|>' → logprob: -11.102823257446289
    10. '    ' → logprob: -13.227823257446289

Token 202: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5526738166809082
    2. '   ' → logprob: -1.1776738166809082
    3. ' while' → logprob: -2.427673816680908
    4. 'v' → logprob: -4.677673816680908
    5. ')' → logprob: -4.802673816680908
    6. 'max' → logprob: -5.052673816680908
    7. 'ans' → logprob: -7.302673816680908
    8. 'vm' → logprob: -7.552673816680908
    9. 'best' → logprob: -7.927673816680908
    10. '	while' → logprob: -8.30267333984375

Token 203: 'print' (ID: 1598)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4763059616088867
    2. ' while' → logprob: -1.1013059616088867
    3. '   ' → logprob: -3.2263059616088867
    4. 'v' → logprob: -6.601305961608887
    5. '    ' → logprob: -7.351305961608887
    6. '0' → logprob: -7.476305961608887
    7. 'q' → logprob: -7.601305961608887
    8. ' ' → logprob: -7.726305961608887
    9. ' v' → logprob: -7.726305961608887
    10. ')' → logprob: -7.976305961608887

Token 204: '(W' (ID: 26031)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2798702120780945
    2. '(' → logprob: -1.7798702716827393
    3. '("' → logprob: -3.7798702716827393
    4. '('' → logprob: -3.9048702716827393
    5. '(v' → logprob: -4.27987003326416
    6. '(q' → logprob: -4.52987003326416
    7. '("#' → logprob: -6.27987003326416
    8. '(len' → logprob: -6.52987003326416
    9. '(#' → logprob: -6.65487003326416
    10. '("")' → logprob: -6.90487003326416

Token 205: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05003925785422325
    2. ',' → logprob: -3.050039291381836
    3. ' )' → logprob: -6.925039291381836
    4. '   ' → logprob: -9.300039291381836
    5. ' ,' → logprob: -9.675039291381836
    6. 'v' → logprob: -10.425039291381836
    7. ',v' → logprob: -10.550039291381836
    8. ',w' → logprob: -10.675039291381836
    9. ')#' → logprob: -10.675039291381836
    10. ' ' → logprob: -10.925039291381836

Token 206: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.8441163897514343
    2. 'q' → logprob: -1.844116449356079
    3. 'N' → logprob: -2.094116449356079
    4. 'vm' → logprob: -2.469116449356079
    5. ')' → logprob: -2.719116449356079
    6. 'v' → logprob: -2.969116449356079
    7. 'W' → logprob: -3.344116449356079
    8. '0' → logprob: -3.719116449356079
    9. 'i' → logprob: -4.9691162109375
    10. 'len' → logprob: -5.9691162109375

Token 207: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002960585057735443
    2. '   ' → logprob: -5.877960681915283
    3. ')
' → logprob: -9.627960205078125
    4. ',' → logprob: -9.877960205078125
    5. ' )' → logprob: -11.002960205078125
    6. ' ' → logprob: -12.127960205078125
    7. '[' → logprob: -12.877960205078125
    8. '  ' → logprob: -13.127960205078125
    9. ')#' → logprob: -13.252960205078125
    10. '))' → logprob: -13.252960205078125

Token 208: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46214789152145386
    2. ')' → logprob: -1.7121479511260986
    3. 'while' → logprob: -2.5871479511260986
    4. ' while' → logprob: -2.8371479511260986
    5. '    ' → logprob: -3.5871479511260986
    6. ' )' → logprob: -4.9621477127075195
    7. '    
' → logprob: -5.5871477127075195
    8. ' ' → logprob: -5.7121477127075195
    9. '_' → logprob: -5.7121477127075195
    10. '	while' → logprob: -5.7121477127075195

Token 209: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.03676970303058624
    2. '   ' → logprob: -3.7867696285247803
    3. ' while' → logprob: -4.411769866943359
    4. ')' → logprob: -6.786769866943359
    5. '    
' → logprob: -10.16176986694336
    6. 'for' → logprob: -10.66176986694336
    7. '	while' → logprob: -10.66176986694336
    8. 'v' → logprob: -10.78676986694336
    9. 'i' → logprob: -11.53676986694336
    10. '```' → logprob: -11.53676986694336

Token 210: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.012712003663182259
    2. ' q' → logprob: -4.387712001800537
    3. 'len' → logprob: -8.762712478637695
    4. ' len' → logprob: -10.387712478637695
    5. ' ' → logprob: -12.137712478637695
    6. 'True' → logprob: -12.887712478637695
    7. '   ' → logprob: -13.012712478637695
    8. '	q' → logprob: -13.137712478637695
    9. '1' → logprob: -14.387712478637695
    10. ' True' → logprob: -14.637712478637695

Token 211: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014367637224495411
    2. ':
' → logprob: -4.264367580413818
    3. '!=' → logprob: -9.389368057250977
    4. ' and' → logprob: -10.139368057250977
    5. ',' → logprob: -10.389368057250977
    6. '[' → logprob: -11.014368057250977
    7. '):
' → logprob: -11.639368057250977
    8. '):' → logprob: -12.014368057250977
    9. '.pop' → logprob: -12.139368057250977
    10. 'and' → logprob: -12.764368057250977

Token 212: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5816217064857483
    2. 'v' → logprob: -0.9566217064857483
    3. ' v' → logprob: -3.2066216468811035
    4. '(v' → logprob: -4.7066216468811035
    5. ',v' → logprob: -6.0816216468811035
    6. ',' → logprob: -6.7066216468811035
    7. '   ' → logprob: -7.2066216468811035
    8. 'w' → logprob: -7.9566216468811035
    9. ')v' → logprob: -8.081622123718262
    10. '    ' → logprob: -8.206622123718262

Token 213: ' #' (ID: 1069)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.02333177998661995
    2. '_,' → logprob: -4.773331642150879
    3. '   ' → logprob: -4.898331642150879
    4. 'vw' → logprob: -6.023331642150879
    5. 'w' → logprob: -6.523331642150879
    6. ' v' → logprob: -7.148331642150879
    7. 'c' → logprob: -7.648331642150879
    8. '(v' → logprob: -7.648331642150879
    9. '_v' → logprob: -8.648331642150879
    10. 'vj' → logprob: -8.648331642150879

Token 214: 'print' (ID: 1598)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.01718253642320633
    2. '_,' → logprob: -4.642182350158691
    3. '   ' → logprob: -5.892182350158691
    4. 'w' → logprob: -6.767182350158691
    5. '_v' → logprob: -7.017182350158691
    6. 'vw' → logprob: -7.142182350158691
    7. ' v' → logprob: -8.517182350158691
    8. 'val' → logprob: -8.517182350158691
    9. 'wv' → logprob: -8.517182350158691
    10. '_' → logprob: -8.892182350158691

Token 215: '(q' (ID: 21479)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.10857758671045303
    2. '(q' → logprob: -3.3585774898529053
    3. 'len' → logprob: -3.8585774898529053
    4. 'v' → logprob: -4.358577728271484
    5. ' q' → logprob: -4.983577728271484
    6. ')' → logprob: -4.983577728271484
    7. '   ' → logprob: -5.483577728271484
    8. '()' → logprob: -5.608577728271484
    9. '(' → logprob: -5.733577728271484
    10. '(len' → logprob: -6.108577728271484

Token 216: ')
' (ID: 446)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.1816696971654892
    2. ')' → logprob: -1.9316697120666504
    3. ',' → logprob: -4.05666971206665
    4. '[' → logprob: -6.18166971206665
    5. 'pop' → logprob: -7.18166971206665
    6. '   ' → logprob: -7.80666971206665
    7. ')
' → logprob: -8.306669235229492
    8. '[-' → logprob: -9.056669235229492
    9. ',)' → logprob: -9.431669235229492
    10. ' )' → logprob: -10.431669235229492

Token 217: '       ' (ID: 309)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.04516950249671936
    2. '_,' → logprob: -3.4201695919036865
    3. 'w' → logprob: -5.670169353485107
    4. ')' → logprob: -6.295169353485107
    5. ',' → logprob: -6.670169353485107
    6. ' v' → logprob: -7.045169353485107
    7. '   ' → logprob: -7.170169353485107
    8. '_' → logprob: -7.295169353485107
    9. ')v' → logprob: -7.420169353485107
    10. ',v' → logprob: -7.670169353485107

Token 218: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.009580892510712147
    2. '_,' → logprob: -5.009581089019775
    3. '   ' → logprob: -7.134581089019775
    4. 'w' → logprob: -7.759581089019775
    5. '_v' → logprob: -7.884581089019775
    6. ' v' → logprob: -8.509580612182617
    7. '_' → logprob: -8.759580612182617
    8. 'vw' → logprob: -8.759580612182617
    9. 'c' → logprob: -8.884580612182617
    10. ',v' → logprob: -9.009580612182617

Token 219: 'q' (ID: 80)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.023996565490961075
    2. '1' → logprob: -4.398996353149414
    3. ',' → logprob: -4.648996353149414
    4. '_,' → logprob: -7.023996353149414
    5. 'v' → logprob: -7.398996353149414
    6. ' ,' → logprob: -9.398996353149414
    7. '_' → logprob: -10.148996353149414
    8. ' =' → logprob: -10.148996353149414
    9. ',v' → logprob: -10.148996353149414
    10. '0' → logprob: -10.273996353149414

Token 220: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09459257870912552
    2. '2' → logprob: -2.969592571258545
    3. '1' → logprob: -3.719592571258545
    4. '=' → logprob: -4.719592571258545
    5. ' =' → logprob: -6.219592571258545
    6. '_,' → logprob: -6.844592571258545
    7. ',v' → logprob: -6.969592571258545
    8. ' ,' → logprob: -7.219592571258545
    9. 'v' → logprob: -7.969592571258545
    10. 'q' → logprob: -8.469593048095703

Token 221: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026062061078846455
    2. '=' → logprob: -9.125260353088379
    3. ',v' → logprob: -9.500260353088379
    4. ',q' → logprob: -10.375260353088379
    5. ' ,' → logprob: -10.500260353088379
    6. ')' → logprob: -11.875260353088379
    7. ' =' → logprob: -12.500260353088379
    8. ',)' → logprob: -13.125260353088379
    9. 'q' → logprob: -13.875260353088379
    10. '1' → logprob: -13.875260353088379

Token 222: ' v' (ID: 323)
  Prédit: 'vq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vq' → logprob: -0.00020401719666551799
    2. ' v' → logprob: -8.625204086303711
    3. 'v' → logprob: -11.125204086303711
    4. 'vp' → logprob: -13.250204086303711
    5. 'voq' → logprob: -13.500204086303711
    6. ' ' → logprob: -13.875204086303711
    7. 'vv' → logprob: -14.250204086303711
    8. '   ' → logprob: -14.500204086303711
    9. 'vsp' → logprob: -14.875204086303711
    10. '	v' → logprob: -15.000204086303711

Token 223: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.47495681833243e-05
    2. '1' → logprob: -11.250024795532227
    3. '2' → logprob: -11.875024795532227
    4. 'm' → logprob: -13.000024795532227
    5. 'p' → logprob: -14.125024795532227
    6. '_q' → logprob: -14.250024795532227
    7. '	q' → logprob: -15.750024795532227
    8. ' q' → logprob: -15.875024795532227
    9. 's' → logprob: -16.250024795532227
    10. '
' → logprob: -16.875024795532227

Token 224: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000563638168387115
    2. '1' → logprob: -8.000563621520996
    3. '0' → logprob: -8.625563621520996
    4. ',' → logprob: -10.125563621520996
    5. 'q' → logprob: -12.250563621520996
    6. '[' → logprob: -13.875563621520996
    7. '3' → logprob: -14.375563621520996
    8. 'v' → logprob: -14.500563621520996
    9. ' ' → logprob: -14.625563621520996
    10. ' ,' → logprob: -15.375563621520996

Token 225: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.1782583391759545e-05
    2. '=' → logprob: -11.000031471252441
    3. ' ,' → logprob: -11.750031471252441
    4. ',v' → logprob: -12.375031471252441
    5. ',q' → logprob: -13.875031471252441
    6. ' =' → logprob: -14.375031471252441
    7. ',i' → logprob: -15.000031471252441
    8. 'v' → logprob: -16.000032424926758
    9. '<|end|>' → logprob: -16.250032424926758
    10. ',n' → logprob: -16.375032424926758

Token 226: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.10150638222694397
    2. 'i' → logprob: -2.851506471633911
    3. 'vq' → logprob: -3.851506471633911
    4. 'wi' → logprob: -4.476506233215332
    5. 'vw' → logprob: -6.726506233215332
    6. 'idx' → logprob: -6.976506233215332
    7. ' w' → logprob: -7.101506233215332
    8. 'iq' → logprob: -7.226506233215332
    9. 'wv' → logprob: -7.351506233215332
    10. 'vi' → logprob: -7.476506233215332

Token 227: 'q' (ID: 80)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.0339031834737398e-05
    2. 'q' → logprob: -11.000020027160645
    3. ' ,' → logprob: -13.000020027160645
    4. 'i' → logprob: -14.125020027160645
    5. ',q' → logprob: -16.00002098083496
    6. ',i' → logprob: -16.37502098083496
    7. 'x' → logprob: -16.75002098083496
    8. 'j' → logprob: -16.75002098083496
    9. '<|end|>' → logprob: -16.87502098083496
    10. '_,' → logprob: -17.00002098083496

Token 228: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009183663059957325
    2. 'q' → logprob: -7.000918388366699
    3. ',q' → logprob: -12.3759183883667
    4. ' ,' → logprob: -12.8759183883667
    5. 'w' → logprob: -18.500917434692383
    6. ' q' → logprob: -18.625917434692383
    7. '<|end|>' → logprob: -18.750917434692383
    8. '_,' → logprob: -18.875917434692383
    9. 'x' → logprob: -19.000917434692383
    10. 'j' → logprob: -19.000917434692383

Token 229: ' v' (ID: 323)
  Prédit: 'iq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iq' → logprob: -0.15828554332256317
    2. 'i' → logprob: -2.408285617828369
    3. 'vq' → logprob: -2.908285617828369
    4. ' i' → logprob: -7.033285617828369
    5. ' iq' → logprob: -7.408285617828369
    6. 'idx' → logprob: -8.408285140991211
    7. 'q' → logprob: -10.408285140991211
    8. 'jq' → logprob: -11.158285140991211
    9. 'v' → logprob: -11.408285140991211
    10. ' ' → logprob: -11.658285140991211

Token 230: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.48914268612861633
    2. ',' → logprob: -0.989142656326294
    3. '=' → logprob: -4.864142894744873
    4. ' =' → logprob: -4.989142894744873
    5. 'x' → logprob: -8.864142417907715
    6. ' ' → logprob: -9.239142417907715
    7. ',q' → logprob: -9.864142417907715
    8. ' ,' → logprob: -10.114142417907715
    9. 'w' → logprob: -10.489142417907715
    10. '   ' → logprob: -11.989142417907715

Token 231: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1336641162633896
    2. '=' → logprob: -2.133664131164551
    3. ' =' → logprob: -5.133664131164551
    4. 'q' → logprob: -7.258664131164551
    5. ' ,' → logprob: -10.25866413116455
    6. ',q' → logprob: -10.38366413116455
    7. '1' → logprob: -10.75866413116455
    8. ' ' → logprob: -11.88366413116455
    9. '_,' → logprob: -12.75866413116455
    10. 'w' → logprob: -12.88366413116455

Token 232: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08747893571853638
    2. ' i' → logprob: -3.2124788761138916
    3. 'iq' → logprob: -3.2124788761138916
    4. 'idx' → logprob: -6.837479114532471
    5. 'q' → logprob: -6.962479114532471
    6. ' iq' → logprob: -7.087479114532471
    7. 'qi' → logprob: -9.087478637695312
    8. ' idx' → logprob: -9.212478637695312
    9. ' ' → logprob: -9.837478637695312
    10. 'k' → logprob: -10.087478637695312

Token 233: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020915418863297
    2. ' =' → logprob: -2.3502092361450195
    3. '   ' → logprob: -13.85020923614502
    4. ' ' → logprob: -14.22520923614502
    5. '=
' → logprob: -15.10020923614502
    6. '+=' → logprob: -16.100208282470703
    7. ',' → logprob: -16.600208282470703
    8. ' =
' → logprob: -16.600208282470703
    9. '＝' → logprob: -16.725208282470703
    10. '=

' → logprob: -16.725208282470703

Token 234: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.04858794063329697
    2. ' he' → logprob: -3.0485880374908447
    3. '   ' → logprob: -16.048587799072266
    4. ' ' → logprob: -16.173587799072266
    5. ' ' → logprob: -16.298587799072266
    6. '_he' → logprob: -16.548587799072266
    7. 'h' → logprob: -16.673587799072266
    8. 'heap' → logprob: -16.673587799072266
    9. 'heme' → logprob: -17.548587799072266
    10. '.he' → logprob: -17.923587799072266

Token 235: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0014019061345607042
    2. 'ap' → logprob: -7.251401901245117
    3. 'q' → logprob: -7.626401901245117
    4. 'pp' → logprob: -9.126401901245117
    5. 'pop' → logprob: -10.251401901245117
    6. 'p' → logprob: -10.626401901245117
    7. 'op' → logprob: -11.001401901245117
    8. ' app' → logprob: -12.001401901245117
    9. 'he' → logprob: -12.376401901245117
    10. '
' → logprob: -13.251401901245117

Token 236: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -2.45848218582978e-06
    2. 'ush' → logprob: -13.25000286102295
    3. 'q' → logprob: -15.87500286102295
    4. 'o' → logprob: -16.250001907348633
    5. 'оп' → logprob: -16.250001907348633
    6. '	op' → logprob: -16.625001907348633
    7. '(op' → logprob: -16.750001907348633
    8. '[' → logprob: -17.000001907348633
    9. 'opleft' → logprob: -17.125001907348633
    10. ' op' → logprob: -17.250001907348633

Token 237: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -4.127333340875339e-06
    2. 'q' → logprob: -12.625003814697266
    3. '(' → logprob: -14.375003814697266
    4. ' q' → logprob: -16.000003814697266
    5. '	q' → logprob: -16.875003814697266
    6. '(queue' → logprob: -18.000003814697266
    7. ',q' → logprob: -18.125003814697266
    8. '[q' → logprob: -19.000003814697266
    9. ' (' → logprob: -19.500003814697266
    10. '?q' → logprob: -19.875003814697266

Token 238: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5690089639974758e-05
    2. ')
' → logprob: -11.125015258789062
    3. ' )' → logprob: -15.250015258789062
    4. '   ' → logprob: -15.750015258789062
    5. ')

' → logprob: -16.250015258789062
    6. '),' → logprob: -16.750015258789062
    7. ')`' → logprob: -16.750015258789062
    8. ')
' → logprob: -16.875015258789062
    9. '):' → logprob: -16.875015258789062
    10. ')#' → logprob: -17.125015258789062

Token 239: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8225637078285217
    2. ' if' → logprob: -1.447563648223877
    3. '<|end|>' → logprob: -1.697563648223877
    4. ' 
' → logprob: -2.697563648223877
    5. '    ' → logprob: -4.072563648223877
    6. ' ' → logprob: -4.447563648223877
    7. ':' → logprob: -4.822563648223877
    8. '    
' → logprob: -4.947563648223877
    9. ' i' → logprob: -5.072563648223877
    10. '       ' → logprob: -5.322563648223877

Token 240: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.0683535037969705e-05
    2. ' if' → logprob: -11.75001049041748
    3. 'i' → logprob: -14.12501049041748
    4. '   ' → logprob: -14.87501049041748
    5. ';if' → logprob: -14.87501049041748
    6. 'v' → logprob: -15.00001049041748
    7. '
' → logprob: -15.50001049041748
    8. '#' → logprob: -15.50001049041748
    9. '       ' → logprob: -15.62501049041748
    10. '<|end|>' → logprob: -15.87501049041748

Token 241: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.27675363421440125
    2. ' i' → logprob: -1.6517536640167236
    3. 'v' → logprob: -3.6517536640167236
    4. ' v' → logprob: -4.1517534255981445
    5. 'vq' → logprob: -5.2767534255981445
    6. '-' → logprob: -6.5267534255981445
    7. 'q' → logprob: -8.026753425598145
    8. ' -' → logprob: -8.151753425598145
    9. '-v' → logprob: -8.526753425598145
    10. 'w' → logprob: -8.651753425598145

Token 242: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.336397647857666
    2. '==' → logprob: -1.336397647857666
    3. ' >=' → logprob: -3.961397647857666
    4. '>=' → logprob: -5.586397647857666
    5. ' ' → logprob: -9.961397171020508
    6. '=' → logprob: -10.836397171020508
    7. '==
' → logprob: -12.836397171020508
    8. '   ' → logprob: -12.961397171020508
    9. '<|end|>' → logprob: -13.086397171020508
    10. ')' → logprob: -13.336397171020508

Token 243: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.620622712536715e-05
    2. ' N' → logprob: -10.000045776367188
    3. '   ' → logprob: -14.125045776367188
    4. ' ' → logprob: -17.875045776367188
    5. '  ' → logprob: -18.125045776367188
    6. '	N' → logprob: -18.250045776367188
    7. 'len' → logprob: -18.625045776367188
    8. '<|end|>' → logprob: -20.125045776367188
    9. '
' → logprob: -20.750045776367188
    10. '       ' → logprob: -21.000045776367188

Token 244: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.037844203412532806
    2. ':
' → logprob: -3.412844181060791
    3. ' or' → logprob: -5.662844181060791
    4. ':return' → logprob: -7.412844181060791
    5. '       ' → logprob: -9.78784465789795
    6. 'or' → logprob: -11.03784465789795
    7. '   ' → logprob: -11.16284465789795
    8. ' and' → logprob: -11.28784465789795
    9. 'and' → logprob: -12.53784465789795
    10. ' :' → logprob: -13.16284465789795

Token 245: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002962846076115966
    2. 'continue' → logprob: -6.252963066101074
    3. 'return' → logprob: -7.502963066101074
    4. ' continue' → logprob: -7.752963066101074
    5. ' return' → logprob: -10.127963066101074
    6. '       ' → logprob: -11.877963066101074
    7. '
' → logprob: -13.377963066101074
    8. 'print' → logprob: -14.252963066101074
    9. 'break' → logprob: -14.377963066101074
    10. '	       ' → logprob: -14.627963066101074

Token 246: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6068979501724243
    2. 'print' → logprob: -1.8568979501724243
    3. 'continue' (adapté à ' continue') → logprob: -1.8568979501724243
    4. 'return' → logprob: -2.7318978309631348
    5. 'break' → logprob: -3.2318978309631348
    6. '       ' → logprob: -3.3568978309631348
    7. '               ' → logprob: -5.981897830963135
    8. ' continue' → logprob: -7.731897830963135
    9. '   ' → logprob: -9.231898307800293
    10. 'if' → logprob: -9.981898307800293

Token 247: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00120475422590971
    2. '        
' → logprob: -7.626204967498779
    3. 'v' → logprob: -8.251204490661621
    4. 'if' → logprob: -8.501204490661621
    5. '<|end|>' → logprob: -8.876204490661621
    6. '
' → logprob: -9.876204490661621
    7. '   ' → logprob: -11.001204490661621
    8. ' if' → logprob: -11.126204490661621
    9. ',' → logprob: -12.626204490661621
    10. 'vq' → logprob: -12.751204490661621

Token 248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038488898426294327
    2. 'v' → logprob: -6.503849029541016
    3. 'if' → logprob: -6.878849029541016
    4. '        
' → logprob: -7.378849029541016
    5. '
' → logprob: -8.378849029541016
    6. '<|end|>' → logprob: -8.753849029541016
    7. ' if' → logprob: -9.128849029541016
    8. '   ' → logprob: -9.378849029541016
    9. 'next' → logprob: -11.378849029541016
    10. ',' → logprob: -11.628849029541016

Token 249: ' vi' (ID: 2640)
  Prédit: 'vj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vj' → logprob: -0.3752131164073944
    2. 'vq' → logprob: -1.7502131462097168
    3. 'wj' → logprob: -2.625213146209717
    4. 'w' → logprob: -3.750213146209717
    5. 'he' → logprob: -4.375213146209717
    6. 'v' → logprob: -4.500213146209717
    7. 'vi' (adapté à ' vi') → logprob: -5.375213146209717
    8. 'wv' → logprob: -5.375213146209717
    9. '       ' → logprob: -5.500213146209717
    10. '#' → logprob: -6.000213146209717

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4089885354042053
    2. '1' → logprob: -1.7839884757995605
    3. '=' → logprob: -2.0339884757995605
    4. ' =' → logprob: -3.6589884757995605
    5. ',v' → logprob: -5.1589884757995605
    6. ' ,' → logprob: -6.1589884757995605
    7. '=v' → logprob: -6.4089884757995605
    8. '_,' → logprob: -7.9089884757995605
    9. 'w' → logprob: -8.158988952636719
    10. 'v' → logprob: -8.283988952636719

Token 251: ' wi' (ID: 20219)
  Prédit: 'wi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wi' → logprob: -0.011472763493657112
    2. ' wi' → logprob: -4.636472702026367
    3. 'wj' → logprob: -6.886472702026367
    4. 'w' → logprob: -7.511472702026367
    5. 'v' → logprob: -10.011472702026367
    6. 'vj' → logprob: -10.761472702026367
    7. ' w' → logprob: -10.886472702026367
    8. '   ' → logprob: -11.011472702026367
    9. 'wij' → logprob: -11.136472702026367
    10. 'vi' → logprob: -11.761472702026367

Token 252: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.055408675223588943
    2. ' =' → logprob: -2.9304087162017822
    3. ',' → logprob: -7.555408477783203
    4. '=S' → logprob: -13.805408477783203
    5. '=}' → logprob: -15.055408477783203
    6. '=s' → logprob: -15.180408477783203
    7. '=v' → logprob: -15.305408477783203
    8. '＝' → logprob: -16.055408477783203
    9. ' ' → logprob: -16.055408477783203
    10. '=w' → logprob: -16.305408477783203

Token 253: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00023119196703191847
    2. ' S' → logprob: -8.37523078918457
    3. '   ' → logprob: -14.50023078918457
    4. ' ' → logprob: -17.62523078918457
    5. '*S' → logprob: -17.75023078918457
    6. '  ' → logprob: -18.37523078918457
    7. '
' → logprob: -18.62523078918457
    8. '(S' → logprob: -19.37523078918457
    9. '    ' → logprob: -19.37523078918457
    10. '       ' → logprob: -19.50023078918457

Token 254: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.319370302458992e-06
    2. 'i' → logprob: -12.250005722045898
    3. '[' → logprob: -15.000005722045898
    4. '[j' → logprob: -15.875005722045898
    5. '[I' → logprob: -16.7500057220459
    6. '<|end|>' → logprob: -18.0000057220459
    7. '[q' → logprob: -18.6250057220459
    8. ' i' → logprob: -19.2500057220459
    9. '(i' → logprob: -19.3750057220459
    10. '][' → logprob: -20.1250057220459

Token 255: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0021717934869229794
    2. '<|end|>' → logprob: -6.252171993255615
    3. ']
' → logprob: -8.752171516418457
    4. '       ' → logprob: -10.752171516418457
    5. '[' → logprob: -10.752171516418457
    6. '<|end|>' → logprob: -11.127171516418457
    7. '][' → logprob: -11.877171516418457
    8. ')' → logprob: -12.252171516418457
    9. ' ]' → logprob: -12.252171516418457
    10. '   ' → logprob: -12.627171516418457

Token 256: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3659086227416992
    2. ' 
' → logprob: -1.8659086227416992
    3. '        
' → logprob: -3.365908622741699
    4. '<|end|>' → logprob: -3.365908622741699
    5. ',' → logprob: -4.240908622741699
    6. ' ' → logprob: -4.240908622741699
    7. '
' → logprob: -4.365908622741699
    8. '        ' → logprob: -4.990908622741699
    9. '[' → logprob: -5.240908622741699
    10. '   ' → logprob: -5.365908622741699

Token 257: ' if' (ID: 538)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.39053669571876526
    2. 'if' (adapté à ' if') → logprob: -2.1405367851257324
    3. '       ' → logprob: -2.6405367851257324
    4. '#' → logprob: -2.8905367851257324
    5. 'v' → logprob: -3.1405367851257324
    6. 'vq' → logprob: -3.7655367851257324
    7. 'q' → logprob: -5.265536785125732
    8. ' he' → logprob: -6.265536785125732
    9. 'w' → logprob: -6.890536785125732
    10. '   ' → logprob: -6.890536785125732

Token 258: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.006510609295219183
    2. ' w' → logprob: -5.1315107345581055
    3. 'vq' → logprob: -8.256510734558105
    4. 'wj' → logprob: -8.881510734558105
    5. 'wi' → logprob: -9.131510734558105
    6. '   ' → logprob: -10.006510734558105
    7. 'wv' → logprob: -11.506510734558105
    8. '(w' → logprob: -12.256510734558105
    9. '       ' → logprob: -12.506510734558105
    10. ' ' → logprob: -13.756510734558105

Token 259: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.070975071750581e-05
    2. '+' → logprob: -10.875030517578125
    3. ' +' → logprob: -11.625030517578125
    4. '_q' → logprob: -13.500030517578125
    5. ' q' → logprob: -13.875030517578125
    6. 'i' → logprob: -16.500030517578125
    7. '	q' → logprob: -16.750030517578125
    8. '_' → logprob: -16.875030517578125
    9. 'w' → logprob: -17.375030517578125
    10. 'qw' → logprob: -17.375030517578125

Token 260: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4740789234638214
    2. '+' → logprob: -0.974078893661499
    3. '+w' → logprob: -14.224079132080078
    4. '+
' → logprob: -14.724079132080078
    5. '＋' → logprob: -15.099079132080078
    6. ' +
' → logprob: -15.474079132080078
    7. ' ' → logprob: -15.849079132080078
    8. '
' → logprob: -16.724079132080078
    9. '   ' → logprob: -16.849079132080078
    10. ' ' → logprob: -17.224079132080078

Token 261: ' wi' (ID: 20219)
  Prédit: 'wi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wi' → logprob: -0.0025119276251643896
    2. ' wi' → logprob: -6.002511978149414
    3. 'wj' → logprob: -10.252511978149414
    4. 'wij' → logprob: -14.252511978149414
    5. 'w' → logprob: -16.627511978149414
    6. ' ' → logprob: -16.877511978149414
    7. '   ' → logprob: -17.002511978149414
    8. 'wifi' → logprob: -17.252511978149414
    9. 'Wi' → logprob: -17.627511978149414
    10. '       ' → logprob: -17.877511978149414

Token 262: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.4740847051143646
    2. ' <=' → logprob: -0.974084734916687
    3. '<' → logprob: -12.224084854125977
    4. '>' → logprob: -13.599084854125977
    5. ')<=' → logprob: -14.599084854125977
    6. ']<=' → logprob: -15.224084854125977
    7. ' >' → logprob: -15.474084854125977
    8. ' <' → logprob: -15.724084854125977
    9. ' ' → logprob: -15.849084854125977
    10. ')' → logprob: -15.849084854125977

Token 263: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.25193095207214355
    2. ' W' → logprob: -1.5019309520721436
    3. ' ' → logprob: -14.001931190490723
    4. '	W' → logprob: -14.876931190490723
    5. '   ' → logprob: -15.001931190490723
    6. '       ' → logprob: -16.501930236816406
    7. '  ' → logprob: -16.876930236816406
    8. '=W' → logprob: -17.376930236816406
    9. '```' → logprob: -17.501930236816406
    10. '    ' → logprob: -17.501930236816406

Token 264: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14370644092559814
    2. ':
' → logprob: -2.0187063217163086
    3. ',' → logprob: -7.643706321716309
    4. '       ' → logprob: -8.268706321716309
    5. ' and' → logprob: -8.768706321716309
    6. '):
' → logprob: -9.768706321716309
    7. '   ' → logprob: -10.643706321716309
    8. ' :
' → logprob: -11.143706321716309
    9. '):' → logprob: -11.518706321716309
    10. ':

' → logprob: -11.768706321716309

Token 265: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007993770763278008
    2. ' he' → logprob: -4.882993698120117
    3. '          ' → logprob: -9.132993698120117
    4. '       ' → logprob: -9.882993698120117
    5. '               ' → logprob: -10.132993698120117
    6. '   ' → logprob: -10.382993698120117
    7. 'he' → logprob: -10.632993698120117
    8. ',' → logprob: -10.882993698120117
    9. '            
' → logprob: -11.132993698120117
    10. ' v' → logprob: -11.257993698120117

Token 266: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.18375666439533234
    2. '           ' → logprob: -1.933756709098816
    3. 'he' (adapté à ' he') → logprob: -3.8087565898895264
    4. '               ' → logprob: -8.058756828308105
    5. 'v' → logprob: -8.308756828308105
    6. ' w' → logprob: -8.808756828308105
    7. ' v' → logprob: -9.058756828308105
    8. '   ' → logprob: -9.433756828308105
    9. 'w' → logprob: -10.683756828308105
    10. '          ' → logprob: -10.933756828308105

Token 267: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -4.537180211627856e-05
    2. 'ap' → logprob: -10.125045776367188
    3. 'push' → logprob: -12.875045776367188
    4. 'pp' → logprob: -13.125045776367188
    5. 'append' → logprob: -15.000045776367188
    6. ' app' → logprob: -15.250045776367188
    7. '```' → logprob: -17.375045776367188
    8. 'a' → logprob: -17.750045776367188
    9. 'appen' → logprob: -17.750045776367188
    10. '   ' → logprob: -17.875045776367188

Token 268: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.00023917861108202487
    2. 'push' → logprob: -8.375239372253418
    3. 'sh' → logprob: -11.750239372253418
    4. 'p' → logprob: -15.250239372253418
    5. '   ' → logprob: -15.375239372253418
    6. 'op' → logprob: -16.7502384185791
    7. 'Push' → logprob: -17.3752384185791
    8. '.push' → logprob: -18.2502384185791
    9. '```' → logprob: -18.5002384185791
    10. ' push' → logprob: -18.6252384185791

Token 269: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -14.000000953674316
    3. 'q' → logprob: -15.125000953674316
    4. ' (' → logprob: -16.125001907348633
    5. ',q' → logprob: -17.875001907348633
    6. '   ' → logprob: -18.000001907348633
    7. '(
' → logprob: -18.500001907348633
    8. '```' → logprob: -18.500001907348633
    9. '	q' → logprob: -19.250001907348633
    10. '[q' → logprob: -19.750001907348633

Token 270: ',' (ID: 11)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.03205910697579384
    2. ',' → logprob: -3.5320591926574707
    3. '(' → logprob: -6.157059192657471
    4. ' (' → logprob: -9.532058715820312
    5. ',q' → logprob: -9.657058715820312
    6. ',(' → logprob: -11.032058715820312
    7. '   ' → logprob: -11.032058715820312
    8. ')' → logprob: -11.407058715820312
    9. ' ,' → logprob: -13.282058715820312
    10. ')(' → logprob: -13.782058715820312

Token 271: ' (' (ID: 350)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.3194960951805115
    2. '(v' → logprob: -1.8194961547851562
    3. '(' → logprob: -2.6944961547851562
    4. ' (-' → logprob: -3.8194961547851562
    5. ' (' → logprob: -4.069496154785156
    6. '((-' → logprob: -6.569496154785156
    7. '((' → logprob: -6.944496154785156
    8. '(vm' → logprob: -7.444496154785156
    9. '(-(' → logprob: -7.444496154785156
    10. '   ' → logprob: -8.069496154785156

Token 272: 'vq' (ID: 180870)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.2569234371185303
    2. 'vq' → logprob: -1.5069234371185303
    3. '-v' → logprob: -1.6319234371185303
    4. 'ub' → logprob: -2.2569234371185303
    5. '-' → logprob: -2.5069234371185303
    6. 'vb' → logprob: -3.2569234371185303
    7. 'vi' → logprob: -3.8819234371185303
    8. '*v' → logprob: -4.256923675537109
    9. '-(' → logprob: -5.006923675537109
    10. '0' → logprob: -5.506923675537109

Token 273: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.24259372055530548
    2. '2' → logprob: -1.992593765258789
    3. '+' → logprob: -3.117593765258789
    4. ' +' → logprob: -4.242593765258789
    5. ' -' → logprob: -4.492593765258789
    6. '-' → logprob: -5.117593765258789
    7. '-v' → logprob: -6.242593765258789
    8. ',' → logprob: -7.492593765258789
    9. '   ' → logprob: -7.742593765258789
    10. '
' → logprob: -10.742593765258789

Token 274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006725206621922553
    2. ' ,' → logprob: -8.500672340393066
    3. ' -' → logprob: -8.875672340393066
    4. '+' → logprob: -9.000672340393066
    5. ',v' → logprob: -9.375672340393066
    6. '-' → logprob: -10.250672340393066
    7. ' +' → logprob: -10.500672340393066
    8. '   ' → logprob: -10.750672340393066
    9. ',w' → logprob: -11.125672340393066
    10. ',
' → logprob: -11.625672340393066

Token 275: ' v' (ID: 323)
  Prédit: 'vq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vq' → logprob: -0.18204516172409058
    2. '-v' → logprob: -2.0570452213287354
    3. '-(' → logprob: -3.6820452213287354
    4. '-' → logprob: -5.432044982910156
    5. ' -' → logprob: -5.807044982910156
    6. 'v' → logprob: -6.307044982910156
    7. ' v' → logprob: -6.432044982910156
    8. ' -(' → logprob: -7.182044982910156
    9. 'max' → logprob: -7.807044982910156
    10. '-q' → logprob: -8.307044982910156

Token 276: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.07395295798778534
    2. '1' → logprob: -2.8239529132843018
    3. '+' → logprob: -4.823953151702881
    4. '2' → logprob: -5.823953151702881
    5. ' +' → logprob: -7.323953151702881
    6. ',' → logprob: -9.948952674865723
    7. 'vq' → logprob: -10.636452674865723
    8. ' -' → logprob: -10.698952674865723
    9. '   ' → logprob: -11.136452674865723
    10. '-' → logprob: -11.136452674865723

Token 277: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12915369868278503
    2. '+' → logprob: -3.0041537284851074
    3. '2' → logprob: -3.2541537284851074
    4. ' +' → logprob: -3.5041537284851074
    5. ' -' → logprob: -6.504153728485107
    6. ',' → logprob: -7.129153728485107
    7. '-' → logprob: -8.37915325164795
    8. '   ' → logprob: -9.00415325164795
    9. '-v' → logprob: -9.37915325164795
    10. '    ' → logprob: -11.12915325164795

Token 278: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16876690089702606
    2. ' -' → logprob: -2.793766975402832
    3. '+' → logprob: -3.043766975402832
    4. ' +' → logprob: -3.293766975402832
    5. '-' → logprob: -5.793766975402832
    6. '-w' → logprob: -6.168766975402832
    7. '+w' → logprob: -6.293766975402832
    8. '-v' → logprob: -7.043766975402832
    9. ' ,' → logprob: -7.168766975402832
    10. '   ' → logprob: -8.418766975402832

Token 279: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0699753388762474
    2. ' w' → logprob: -2.6949753761291504
    3. '    ' → logprob: -11.319974899291992
    4. '   ' → logprob: -11.319974899291992
    5. ' ' → logprob: -12.444974899291992
    6. '	w' → logprob: -13.444974899291992
    7. '  ' → logprob: -13.569974899291992
    8. 'wj' → logprob: -13.694974899291992
    9. 'wi' → logprob: -14.319974899291992
    10. '       ' → logprob: -14.319974899291992

Token 280: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.894790981779806e-05
    2. '+' → logprob: -10.000048637390137
    3. ' +' → logprob: -13.375048637390137
    4. ' q' → logprob: -14.125048637390137
    5. 'w' → logprob: -14.250048637390137
    6. '+w' → logprob: -16.125049591064453
    7. '```' → logprob: -16.250049591064453
    8. 'qw' → logprob: -16.250049591064453
    9. ' ' → logprob: -16.625049591064453
    10. '_q' → logprob: -16.625049591064453

Token 281: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931478977203369
    2. ' +' → logprob: -0.6931478977203369
    3. '   ' → logprob: -15.318147659301758
    4. '＋' → logprob: -15.693147659301758
    5. ' ' → logprob: -15.818147659301758
    6. '+
' → logprob: -16.693147659301758
    7. '+w' → logprob: -16.943147659301758
    8. ' ' → logprob: -16.943147659301758
    9. ' +
' → logprob: -17.318147659301758
    10. '    ' → logprob: -18.068147659301758

Token 282: 'wi' (ID: 7491)
  Prédit: 'wi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wi' → logprob: -0.023246990516781807
    2. ' wi' → logprob: -3.773247003555298
    3. 'vi' → logprob: -14.523246765136719
    4. '   ' → logprob: -15.148246765136719
    5. 'w' → logprob: -15.773246765136719
    6. ' ' → logprob: -15.898246765136719
    7. '       ' → logprob: -16.27324676513672
    8. '           ' → logprob: -17.02324676513672
    9. 'wij' → logprob: -17.14824676513672
    10. 'wj' → logprob: -17.14824676513672

Token 283: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030697984038852155
    2. ' ,' → logprob: -8.500307083129883
    3. ',v' → logprob: -9.250307083129883
    4. '   ' → logprob: -13.125307083129883
    5. ',
' → logprob: -13.125307083129883
    6. 'v' → logprob: -13.875307083129883
    7. 'vq' → logprob: -14.125307083129883
    8. 'q' → logprob: -14.500307083129883
    9. '),' → logprob: -15.250307083129883
    10. '+' → logprob: -15.750307083129883

Token 284: ' v' (ID: 323)
  Prédit: 'vq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vq' → logprob: -0.01817510649561882
    2. ' v' → logprob: -4.01817512512207
    3. 'v' → logprob: -10.64317512512207
    4. ' ' → logprob: -14.51817512512207
    5. '	v' → logprob: -14.51817512512207
    6. '   ' → logprob: -16.01817512512207
    7. 'vp' → logprob: -17.26817512512207
    8. 'vj' → logprob: -17.51817512512207
    9. '    ' → logprob: -17.76817512512207
    10. '  ' → logprob: -18.01817512512207

Token 285: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.018291231244802475
    2. '+' → logprob: -4.018290996551514
    3. ' +' → logprob: -8.893291473388672
    4. 'v' → logprob: -13.518291473388672
    5. '+i' → logprob: -14.393291473388672
    6. ' q' → logprob: -14.393291473388672
    7. '+
' → logprob: -14.643291473388672
    8. '	q' → logprob: -16.143291473388672
    9. '+w' → logprob: -16.143291473388672
    10. 'f' → logprob: -16.268291473388672

Token 286: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00029625516617670655
    2. ' +' → logprob: -8.125296592712402
    3. '+xml' → logprob: -16.875295639038086
    4. '+i' → logprob: -17.625295639038086
    5. '＋' → logprob: -18.000295639038086
    6. '+
' → logprob: -19.000295639038086
    7. '+w' → logprob: -19.625295639038086
    8. 'vi' → logprob: -19.875295639038086
    9. '+=' → logprob: -20.000295639038086
    10. '+x' → logprob: -20.250295639038086

Token 287: 'vi' (ID: 4627)
  Prédit: 'vi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vi' → logprob: -1.1398757123970427e-05
    2. ' vi' → logprob: -11.875011444091797
    3. 'wi' → logprob: -12.625011444091797
    4. '_vi' → logprob: -14.750011444091797
    5. 'hi' → logprob: -15.375011444091797
    6. 'i' → logprob: -15.375011444091797
    7. 'ti' → logprob: -16.375011444091797
    8. 'ni' → logprob: -16.500011444091797
    9. '.vi' → logprob: -17.125011444091797
    10. 'Vi' → logprob: -17.500011444091797

Token 288: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.186122770188376e-05
    2. '))' → logprob: -9.750091552734375
    3. ' ,' → logprob: -10.750091552734375
    4. ')' → logprob: -12.250091552734375
    5. '   ' → logprob: -12.375091552734375
    6. '       ' → logprob: -13.875091552734375
    7. '),' → logprob: -14.000091552734375
    8. ',i' → logprob: -14.000091552734375
    9. '           ' → logprob: -15.625091552734375
    10. ' ' → logprob: -17.125091552734375

Token 289: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.65101717156358e-05
    2. ' i' → logprob: -9.250096321105957
    3. '   ' → logprob: -14.875096321105957
    4. '  ' → logprob: -18.000097274780273
    5. ' ' → logprob: -19.000097274780273
    6. '	i' → logprob: -19.625097274780273
    7. '       ' → logprob: -20.625097274780273
    8. '    ' → logprob: -21.000097274780273
    9. ')i' → logprob: -21.750097274780273
    10. '     ' → logprob: -21.750097274780273

Token 290: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0040793512016534805
    2. ' +' → logprob: -5.504079341888428
    3. '+
' → logprob: -14.004079818725586
    4. '1' → logprob: -17.379079818725586
    5. '+)' → logprob: -17.379079818725586
    6. '＋' → logprob: -17.504079818725586
    7. ')' → logprob: -17.754079818725586
    8. ' +
' → logprob: -18.129079818725586
    9. '+i' → logprob: -18.254079818725586
    10. '))' → logprob: -18.254079818725586

Token 291: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.00000286102295
    3. '   ' → logprob: -15.37500286102295
    4. '+' → logprob: -17.500001907348633
    5. '```' → logprob: -17.500001907348633
    6. '  ' → logprob: -19.250001907348633
    7. '       ' → logprob: -19.500001907348633
    8. '<|end|>' → logprob: -20.125001907348633
    9. '
' → logprob: -20.437501907348633
    10. ')' → logprob: -20.687501907348633

Token 292: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0127260135486722
    2. ')' → logprob: -4.762725830078125
    3. '))
' → logprob: -5.512725830078125
    4. '       ' → logprob: -10.387725830078125
    5. '           ' → logprob: -10.762725830078125
    6. ')
' → logprob: -11.512725830078125
    7. ' ))' → logprob: -12.887725830078125
    8. '   ' → logprob: -14.137725830078125
    9. ')))' → logprob: -14.387725830078125
    10. ' )' → logprob: -14.387725830078125

Token 293: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2305026352405548
    2. '       ' → logprob: -1.6055026054382324
    3. 'he' → logprob: -5.855502605438232
    4. ' he' → logprob: -6.730502605438232
    5. '        
' → logprob: -8.35550308227539
    6. ',' → logprob: -8.48050308227539
    7. '            
' → logprob: -8.60550308227539
    8. '<|end|>' → logprob: -8.73050308227539
    9. '
' → logprob: -9.73050308227539
    10. '   ' → logprob: -9.98050308227539

Token 294: ' v' (ID: 323)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.4415270984172821
    2. '       ' → logprob: -1.5665271282196045
    3. ' he' → logprob: -2.5665271282196045
    4. 'v' (adapté à ' v') → logprob: -3.0665271282196045
    5. '           ' → logprob: -4.691526889801025
    6. ' v' → logprob: -5.316526889801025
    7. ' if' → logprob: -5.566526889801025
    8. 'if' → logprob: -5.941526889801025
    9. 've' → logprob: -7.191526889801025
    10. '        
' → logprob: -7.191526889801025

Token 295: '1' (ID: 16)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.002805940806865692
    2. '1' → logprob: -6.002805709838867
    3. '2' → logprob: -9.377805709838867
    4. 'i' → logprob: -9.627805709838867
    5. 'p' → logprob: -10.252805709838867
    6. '
' → logprob: -11.252805709838867
    7. '#' → logprob: -11.502805709838867
    8. 'c' → logprob: -11.752805709838867
    9. 'v' → logprob: -11.752805709838867
    10. 'j' → logprob: -11.877805709838867

Token 296: ',' (ID: 11)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.26464420557022095
    2. '2' → logprob: -1.7646441459655762
    3. ',' → logprob: -2.889644145965576
    4. '1' → logprob: -6.264644145965576
    5. '_,' → logprob: -6.514644145965576
    6. ' =' → logprob: -7.889644145965576
    7. ',q' → logprob: -8.264644622802734
    8. 'v' → logprob: -8.264644622802734
    9. 'p' → logprob: -8.514644622802734
    10. '=' → logprob: -8.764644622802734

Token 297: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0032027887646108866
    2. ' v' → logprob: -5.75320291519165
    3. 'vq' → logprob: -11.003202438354492
    4. 'ub' → logprob: -13.253202438354492
    5. 'vb' → logprob: -13.253202438354492
    6. '   ' → logprob: -13.753202438354492
    7. '(v' → logprob: -14.253202438354492
    8. '-' → logprob: -14.253202438354492
    9. 'w' → logprob: -15.003202438354492
    10. '-v' → logprob: -15.003202438354492

Token 298: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2842308680992573e-05
    2. 'q' → logprob: -10.875022888183594
    3. '1' → logprob: -12.500022888183594
    4. '0' → logprob: -17.687522888183594
    5. ' ' → logprob: -18.000022888183594
    6. '₂' → logprob: -18.062522888183594
    7. '_' → logprob: -18.125022888183594
    8. '[' → logprob: -18.250022888183594
    9. 'p' → logprob: -18.312522888183594
    10. 'alue' → logprob: -18.375022888183594

Token 299: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04300832375884056
    2. ' =' → logprob: -3.168008327484131
    3. ',' → logprob: -11.793007850646973
    4. '<|end|>' → logprob: -14.543007850646973
    5. '=
' → logprob: -15.418007850646973
    6. '=user' → logprob: -15.793007850646973
    7. '=v' → logprob: -15.793007850646973
    8. ' ' → logprob: -16.16800880432129
    9. '＝' → logprob: -16.66800880432129
    10. ')' → logprob: -16.91800880432129

Token 300: ' ub' (ID: 11590)
  Prédit: 'ub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ub' → logprob: -0.11290589720010757
    2. ' ub' → logprob: -2.237905979156494
    3. '   ' → logprob: -9.862905502319336
    4. ' ' → logprob: -11.487905502319336
    5. '  ' → logprob: -11.987905502319336
    6. '       ' → logprob: -13.112905502319336
    7. '    ' → logprob: -13.112905502319336
    8. '     ' → logprob: -13.987905502319336
    9. '.ub' → logprob: -13.987905502319336
    10. '         ' → logprob: -14.362905502319336

Token 301: 'ounds' (ID: 4795)
  Prédit: 'ounds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounds' → logprob: -0.00011212585377506912
    2. 'ound' → logprob: -9.250112533569336
    3. 'bounds' → logprob: -12.000112533569336
    4. '(' → logprob: -12.125112533569336
    5. 'ount' → logprob: -13.125112533569336
    6. 'oints' → logprob: -13.875112533569336
    7. 'o' → logprob: -14.250112533569336
    8. 'onds' → logprob: -14.875112533569336
    9. 'q' → logprob: -16.125112533569336
    10. 'ouns' → logprob: -16.500112533569336

Token 302: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -7.314625690924004e-05
    2. 'w' → logprob: -10.125073432922363
    3. '(' → logprob: -10.375073432922363
    4. '(
' → logprob: -14.125073432922363
    5. '(q' → logprob: -14.875073432922363
    6. '(v' → logprob: -15.000073432922363
    7. ' (' → logprob: -16.375072479248047
    8. '   ' → logprob: -16.375072479248047
    9. 'q' → logprob: -16.875072479248047
    10. '((' → logprob: -17.250072479248047

Token 303: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.1472419600977446e-06
    2. ',' → logprob: -15.000000953674316
    3. ' q' → logprob: -15.500000953674316
    4. '_q' → logprob: -15.500000953674316
    5. '+' → logprob: -16.250001907348633
    6. '   ' → logprob: -16.500001907348633
    7. 'w' → logprob: -16.750001907348633
    8. 'qw' → logprob: -17.250001907348633
    9. ',q' → logprob: -17.250001907348633
    10. '
' → logprob: -17.375001907348633

Token 304: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001957298256456852
    2. ',v' → logprob: -6.251957416534424
    3. ' ,' → logprob: -10.501956939697266
    4. '+' → logprob: -14.126956939697266
    5. 'v' → logprob: -15.501956939697266
    6. ',
' → logprob: -15.751956939697266
    7. '   ' → logprob: -17.251956939697266
    8. ',w' → logprob: -17.501956939697266
    9. ' +' → logprob: -17.501956939697266
    10. '+,' → logprob: -18.126956939697266

Token 305: ' v' (ID: 323)
  Prédit: 'vq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vq' → logprob: -4.008129963040119e-06
    2. ' v' → logprob: -12.625003814697266
    3. 'v' → logprob: -14.625003814697266
    4. 'vj' → logprob: -15.750003814697266
    5. '   ' → logprob: -16.875003814697266
    6. ' ' → logprob: -17.250003814697266
    7. 'vp' → logprob: -17.625003814697266
    8. '	v' → logprob: -18.375003814697266
    9. 'vz' → logprob: -19.375003814697266
    10. '       ' → logprob: -19.625003814697266

Token 306: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.04329250380396843
    2. ',' → logprob: -3.29329252243042
    3. 'vq' → logprob: -5.91829252243042
    4. '<|end|>' → logprob: -7.04329252243042
    5. 'v' → logprob: -7.41829252243042
    6. '```' → logprob: -8.168292045593262
    7. ',v' → logprob: -8.543292045593262
    8. ',q' → logprob: -8.918292045593262
    9. ' ' → logprob: -9.418292045593262
    10. ')' → logprob: -9.793292045593262

Token 307: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005303130950778723
    2. ',i' → logprob: -5.255302906036377
    3. ' ,' → logprob: -9.630303382873535
    4. '+' → logprob: -13.130303382873535
    5. '   ' → logprob: -14.505303382873535
    6. 'i' → logprob: -15.130303382873535
    7. '+,' → logprob: -15.130303382873535
    8. ',j' → logprob: -16.00530242919922
    9. '2' → logprob: -16.00530242919922
    10. '1' → logprob: -16.38030242919922

Token 308: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005239326041191816
    2. ' i' → logprob: -5.255239486694336
    3. '   ' → logprob: -12.255239486694336
    4. '       ' → logprob: -14.630239486694336
    5. ' ' → logprob: -16.005239486694336
    6. '  ' → logprob: -16.505239486694336
    7. '    ' → logprob: -17.130239486694336
    8. '           ' → logprob: -17.630239486694336
    9. '     ' → logprob: -17.755239486694336
    10. '	i' → logprob: -17.755239486694336

Token 309: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00043138445471413434
    2. ' +' → logprob: -7.750431537628174
    3. '1' → logprob: -14.625431060791016
    4. '+i' → logprob: -16.000431060791016
    5. '+
' → logprob: -17.000431060791016
    6. '2' → logprob: -17.375431060791016
    7. '+)' → logprob: -17.625431060791016
    8. ')' → logprob: -18.625431060791016
    9. '()+' → logprob: -19.000431060791016
    10. ')+' → logprob: -19.000431060791016

Token 310: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.500001907348633
    3. '+' → logprob: -16.375001907348633
    4. '   ' → logprob: -16.750001907348633
    5. '```' → logprob: -18.125001907348633
    6. ')' → logprob: -19.500001907348633
    7. '       ' → logprob: -19.625001907348633
    8. '2' → logprob: -19.625001907348633
    9. '۱' → logprob: -20.125001907348633
    10. '
' → logprob: -20.375001907348633

Token 311: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -17.625001907348633
    4. '```' → logprob: -19.000001907348633
    5. ')' → logprob: -19.125001907348633
    6. '2' → logprob: -19.312501907348633
    7. '
' → logprob: -19.625001907348633
    8. '۱' → logprob: -19.812501907348633
    9. '+' → logprob: -20.125001907348633
    10. '  ' → logprob: -20.375001907348633

Token 312: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16027773916721344
    2. ')
' → logprob: -1.9102777242660522
    3. ')
' → logprob: -9.910277366638184
    4. ')

' → logprob: -13.285277366638184
    5. '   ' → logprob: -13.910277366638184
    6. ' )' → logprob: -14.535277366638184
    7. ' )
' → logprob: -15.035277366638184
    8. '       ' → logprob: -15.410277366638184
    9. ')`
' → logprob: -16.6602783203125
    10. ' ' → logprob: -17.4102783203125

Token 313: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2770122289657593
    2. '   ' → logprob: -1.9020122289657593
    3. ',' → logprob: -3.277012348175049
    4. '<|end|>' → logprob: -4.152012348175049
    5. ' he' → logprob: -4.652012348175049
    6. ' )' → logprob: -4.902012348175049
    7. ' ' → logprob: -5.152012348175049
    8. 'he' → logprob: -5.652012348175049
    9. ' if' → logprob: -5.777012348175049
    10. ' 
' → logprob: -6.277012348175049

Token 314: ' if' (ID: 538)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.35950401425361633
    2. 'if' (adapté à ' if') → logprob: -1.234503984451294
    3. ' if' → logprob: -4.734504222869873
    4. ' he' → logprob: -6.609504222869873
    5. '       ' → logprob: -7.484504222869873
    6. 'v' → logprob: -8.984503746032715
    7. '   ' → logprob: -9.109503746032715
    8. ')' → logprob: -10.609503746032715
    9. 'heap' → logprob: -10.859503746032715
    10. '           ' → logprob: -11.984503746032715

Token 315: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.266989141702652
    2. ' v' → logprob: -2.141989231109619
    3. '-v' → logprob: -2.641989231109619
    4. 'vq' → logprob: -3.266989231109619
    5. '(v' → logprob: -5.891989231109619
    6. ' -' → logprob: -6.141989231109619
    7. '-' → logprob: -6.516989231109619
    8. ' (' → logprob: -8.391988754272461
    9. '   ' → logprob: -8.516988754272461
    10. 'q' → logprob: -8.641988754272461

Token 316: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.28699791431427
    2. 'q' → logprob: -1.91199791431427
    3. '1' → logprob: -2.2869977951049805
    4. '[' → logprob: -10.41199779510498
    5. '_' → logprob: -10.66199779510498
    6. ' ' → logprob: -11.28699779510498
    7. '
' → logprob: -11.66199779510498
    8. ' q' → logprob: -11.78699779510498
    9. 'v' → logprob: -12.16199779510498
    10. '₂' → logprob: -12.16199779510498

Token 317: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.07619394361972809
    2. '<' → logprob: -2.7011940479278564
    3. '<v' → logprob: -5.701193809509277
    4. '[' → logprob: -7.201193809509277
    5. ' >' → logprob: -7.451193809509277
    6. ')' → logprob: -7.701193809509277
    7. ' ' → logprob: -8.451193809509277
    8. '   ' → logprob: -8.826193809509277
    9. '>' → logprob: -9.326193809509277
    10. ' <=' → logprob: -9.451193809509277

Token 318: ' vm' (ID: 22972)
  Prédit: 'vm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vm' → logprob: -0.0048754350282251835
    2. ' vm' → logprob: -5.379875659942627
    3. 'vq' → logprob: -8.629875183105469
    4. 'v' → logprob: -10.629875183105469
    5. '-v' → logprob: -11.129875183105469
    6. '-' → logprob: -11.379875183105469
    7. '0' → logprob: -12.129875183105469
    8. '(vm' → logprob: -12.129875183105469
    9. '	vm' → logprob: -12.129875183105469
    10. '   ' → logprob: -12.754875183105469

Token 319: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.715086817741394
    2. '2' → logprob: -0.715086817741394
    3. ':' → logprob: -3.8400869369506836
    4. '   ' → logprob: -9.840086936950684
    5. ' ' → logprob: -9.840086936950684
    6. '0' → logprob: -10.465086936950684
    7. 'v' → logprob: -10.715086936950684
    8. ':
' → logprob: -11.715086936950684
    9. '       ' → logprob: -11.965086936950684
    10. '  ' → logprob: -12.215086936950684

Token 320: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.9139924049377441
    2. ':' → logprob: -1.1639924049377441
    3. ':
' → logprob: -1.2889924049377441
    4. '           ' → logprob: -4.663992404937744
    5. 'and' → logprob: -7.288992404937744
    6. ' :
' → logprob: -7.788992404937744
    7. '       ' → logprob: -8.163991928100586
    8. ' or' → logprob: -8.913991928100586
    9. ' :' → logprob: -9.163991928100586
    10. ',' → logprob: -9.163991928100586

Token 321: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010222092969343066
    2. ' continue' → logprob: -7.7510223388671875
    3. ' and' → logprob: -8.626022338867188
    4. ' he' → logprob: -9.001022338867188
    5. 'continue' → logprob: -9.501022338867188
    6. 'he' → logprob: -10.126022338867188
    7. ':
' → logprob: -10.251022338867188
    8. ',' → logprob: -10.251022338867188
    9. '          ' → logprob: -10.251022338867188
    10. '               ' → logprob: -11.126022338867188

Token 322: ' if' (ID: 538)
  Prédit: 'vm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vm' → logprob: -0.6458888649940491
    2. '           ' → logprob: -0.8958888649940491
    3. ' vm' → logprob: -2.8958888053894043
    4. 'continue' → logprob: -4.895888805389404
    5. ' continue' → logprob: -5.770888805389404
    6. 'he' → logprob: -7.145888805389404
    7. ' he' → logprob: -7.520888805389404
    8. '               ' → logprob: -8.520889282226562
    9. '   ' → logprob: -9.895889282226562
    10. '       ' → logprob: -10.895889282226562

Token 323: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7676845788955688
    2. ' v' → logprob: -1.0176845788955688
    3. 'w' → logprob: -3.3926844596862793
    4. ' vm' → logprob: -3.3926844596862793
    5. 'vm' → logprob: -3.5176844596862793
    6. 'i' → logprob: -4.017684459686279
    7. ' w' → logprob: -4.142684459686279
    8. 'vq' → logprob: -4.267684459686279
    9. ' i' → logprob: -4.642684459686279
    10. '-' → logprob: -5.267684459686279

Token 324: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07236480712890625
    2. '1' → logprob: -3.1973648071289062
    3. 'q' → logprob: -3.5723648071289062
    4. ' ' → logprob: -7.947364807128906
    5. '   ' → logprob: -8.822364807128906
    6. ' q' → logprob: -8.822364807128906
    7. '+' → logprob: -11.072364807128906
    8. '_' → logprob: -11.197364807128906
    9. '  ' → logprob: -11.197364807128906
    10. '       ' → logprob: -11.322364807128906

Token 325: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.058534856885671616
    2. '<' → logprob: -3.308534860610962
    3. ' >' → logprob: -4.058534622192383
    4. '>' → logprob: -6.433534622192383
    5. ')' → logprob: -8.308534622192383
    6. ':' → logprob: -8.433534622192383
    7. ' ' → logprob: -8.433534622192383
    8. ' >=' → logprob: -8.433534622192383
    9. '<v' → logprob: -9.058534622192383
    10. '<|end|>' → logprob: -9.183534622192383

Token 326: ' vm' (ID: 22972)
  Prédit: 'vm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vm' → logprob: -0.28340908885002136
    2. ' vm' → logprob: -1.4084091186523438
    3. 'v' → logprob: -6.408409118652344
    4. ' v' → logprob: -7.908409118652344
    5. '-' → logprob: -8.658409118652344
    6. '	vm' → logprob: -10.533409118652344
    7. '   ' → logprob: -11.783409118652344
    8. '-v' → logprob: -11.908409118652344
    9. ' -' → logprob: -11.908409118652344
    10. '0' → logprob: -12.033409118652344

Token 327: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.583550642360933e-05
    2. '2' → logprob: -10.250036239624023
    3. ' ' → logprob: -15.750036239624023
    4. '   ' → logprob: -16.125036239624023
    5. '[' → logprob: -17.250036239624023
    6. '```' → logprob: -17.687536239624023
    7. '۱' → logprob: -18.250036239624023
    8. '_' → logprob: -18.500036239624023
    9. '0' → logprob: -18.750036239624023
    10. '１' → logprob: -18.812536239624023

Token 328: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10942017287015915
    2. ':' → logprob: -2.60942006111145
    3. '               ' → logprob: -3.73442006111145
    4. ' and' → logprob: -5.734420299530029
    5. '           ' → logprob: -6.859420299530029
    6. ' :
' → logprob: -6.984420299530029
    7. '):
' → logprob: -8.234419822692871
    8. ' or' → logprob: -8.234419822692871
    9. ' =' → logprob: -8.984419822692871
    10. ' :' → logprob: -9.734419822692871

Token 329: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017562180291861296
    2. ' vm' → logprob: -6.876756191253662
    3. '           ' → logprob: -8.50175666809082
    4. ' continue' → logprob: -9.12675666809082
    5. '              ' → logprob: -9.37675666809082
    6. ' return' → logprob: -9.62675666809082
    7. '            ' → logprob: -9.87675666809082
    8. 'continue' → logprob: -10.37675666809082
    9. '                ' → logprob: -10.50175666809082
    10. 'vm' → logprob: -10.50175666809082

Token 330: ' vm' (ID: 22972)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2351248562335968
    2. 'vm' (adapté à ' vm') → logprob: -2.1101248264312744
    3. ' vm' → logprob: -2.6101248264312744
    4. 'continue' → logprob: -5.2351250648498535
    5. ' continue' → logprob: -5.8601250648498535
    6. 'break' → logprob: -6.3601250648498535
    7. ' break' → logprob: -6.4851250648498535
    8. '           ' → logprob: -6.8601250648498535
    9. 'return' → logprob: -7.1101250648498535
    10. ' return' → logprob: -7.3601250648498535

Token 331: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.968312951968983e-06
    2. '=' → logprob: -11.750009536743164
    3. ' =' → logprob: -13.875009536743164
    4. '_' → logprob: -14.250009536743164
    5. ' ' → logprob: -15.500009536743164
    6. '   ' → logprob: -16.125009536743164
    7. '2' → logprob: -17.000009536743164
    8. ',' → logprob: -17.625009536743164
    9. 'm' → logprob: -17.625009536743164
    10. 'a' → logprob: -17.875009536743164

Token 332: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029753148555755615
    2. '=' → logprob: -3.5297532081604004
    3. '=v' → logprob: -13.779752731323242
    4. '   ' → logprob: -14.279752731323242
    5. ',' → logprob: -14.654752731323242
    6. ' ' → logprob: -15.404752731323242
    7. '           ' → logprob: -16.529752731323242
    8. '               ' → logprob: -16.529752731323242
    9. '    ' → logprob: -17.029752731323242
    10. '.' → logprob: -17.279752731323242

Token 333: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.25194504857063293
    2. ' v' → logprob: -1.5019450187683105
    3. '-v' → logprob: -11.751945495605469
    4. ' -' → logprob: -12.376945495605469
    5. '   ' → logprob: -13.751945495605469
    6. '	v' → logprob: -14.001945495605469
    7. '-' → logprob: -14.501945495605469
    8. 'vq' → logprob: -14.876945495605469
    9. '<v' → logprob: -15.376945495605469
    10. ' ' → logprob: -15.751945495605469

Token 334: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '2' → logprob: -15.375
    3. '<|end|>' → logprob: -16.875
    4. ' ' → logprob: -17.375
    5. '۱' → logprob: -17.5
    6. '１' → logprob: -18.375
    7. '_' → logprob: -19.0625
    8. '१' → logprob: -19.375
    9. '১' → logprob: -19.4375
    10. '<|end|>' → logprob: -19.5625

Token 335: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013300024438649416
    2. '           ' → logprob: -6.7513298988342285
    3. ',' → logprob: -9.001330375671387
    4. ' and' → logprob: -11.376330375671387
    5. '<|end|>' → logprob: -11.501330375671387
    6. '              ' → logprob: -12.001330375671387
    7. '                   ' → logprob: -12.876330375671387
    8. '                
' → logprob: -13.501330375671387
    9. '       ' → logprob: -13.626330375671387
    10. ',
' → logprob: -14.501330375671387

Token 336: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012116642901673913
    2. '           ' → logprob: -6.751211643218994
    3. ',' → logprob: -10.501212120056152
    4. ' and' → logprob: -12.126212120056152
    5. '              ' → logprob: -12.251212120056152
    6. '<|end|>' → logprob: -13.876212120056152
    7. '       ' → logprob: -14.376212120056152
    8. '                
' → logprob: -14.376212120056152
    9. '                   ' → logprob: -14.501212120056152
    10. '	           ' → logprob: -15.626212120056152

Token 337: ' he' (ID: 501)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011946285143494606
    2. '               ' → logprob: -5.011946201324463
    3. ' he' → logprob: -5.386946201324463
    4. 'he' (adapté à ' he') → logprob: -7.636946201324463
    5. '          ' → logprob: -9.886946678161621
    6. '            ' → logprob: -11.011946678161621
    7. ',' → logprob: -11.136946678161621
    8. '       ' → logprob: -11.136946678161621
    9. ' continue' → logprob: -11.261946678161621
    10. '   ' → logprob: -11.511946678161621

Token 338: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -5.512236498361744e-07
    2. 'pp' → logprob: -15.125000953674316
    3. 'ap' → logprob: -15.750000953674316
    4. 'push' → logprob: -16.25
    5. ' app' → logprob: -17.75
    6. '```' → logprob: -18.5
    7. 'append' → logprob: -19.0
    8. 'add' → logprob: -19.5
    9. 'a' → logprob: -20.375
    10. 'App' → logprob: -20.625

Token 339: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -1.6240566083070007e-06
    2. 'push' → logprob: -13.875001907348633
    3. '   ' → logprob: -15.375001907348633
    4. 'op' → logprob: -15.875001907348633
    5. 'Push' → logprob: -16.125001907348633
    6. 'sh' → logprob: -16.250001907348633
    7. 'u' → logprob: -17.125001907348633
    8. 'p' → logprob: -18.125001907348633
    9. '```' → logprob: -18.750001907348633
    10. 'pp' → logprob: -19.250001907348633

Token 340: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -16.0
    3. 'q' → logprob: -16.0
    4. '   ' → logprob: -19.5
    5. '[q' → logprob: -19.875
    6. ' (' → logprob: -20.375
    7. '(
' → logprob: -20.5
    8. '```' → logprob: -20.75
    9. ',q' → logprob: -21.5
    10. '	q' → logprob: -22.25

Token 341: ',' (ID: 11)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -6.813969957875088e-05
    2. ',' → logprob: -10.250067710876465
    3. ',q' → logprob: -10.750067710876465
    4. 'q' → logprob: -11.750067710876465
    5. '(' → logprob: -13.125067710876465
    6. ')' → logprob: -13.875067710876465
    7. '(
' → logprob: -15.625067710876465
    8. ' (' → logprob: -16.37506866455078
    9. ' q' → logprob: -16.75006866455078
    10. '   ' → logprob: -16.87506866455078

Token 342: ' (' (ID: 350)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.13376517593860626
    2. ' (' → logprob: -2.13376522064209
    3. '(' → logprob: -5.00876522064209
    4. '(-' → logprob: -9.25876522064209
    5. ' (-' → logprob: -11.63376522064209
    6. '   ' → logprob: -12.00876522064209
    7. ' ' → logprob: -12.00876522064209
    8. '((' → logprob: -12.38376522064209
    9. '  ' → logprob: -12.50876522064209
    10. '(q' → logprob: -12.88376522064209

Token 343: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.762356209335849e-05
    2. '-v' → logprob: -10.62503719329834
    3. ' v' → logprob: -11.37503719329834
    4. 'vq' → logprob: -13.50003719329834
    5. '   ' → logprob: -16.000038146972656
    6. '-' → logprob: -16.000038146972656
    7. ')v' → logprob: -16.875038146972656
    8. ' -' → logprob: -17.750038146972656
    9. '	v' → logprob: -18.375038146972656
    10. '  ' → logprob: -18.375038146972656

Token 344: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11282442510128021
    2. '1' → logprob: -2.2378244400024414
    3. '₂' → logprob: -14.425324440002441
    4. '_' → logprob: -14.675324440002441
    5. '
' → logprob: -14.862824440002441
    6. '```' → logprob: -15.987824440002441
    7. '۲' → logprob: -16.300323486328125
    8. '２' → logprob: -16.487823486328125
    9. ' ' → logprob: -16.675323486328125
    10. '

' → logprob: -16.800323486328125

Token 345: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022642381372861564
    2. ',v' → logprob: -9.000226020812988
    3. ' ,' → logprob: -9.250226020812988
    4. ',
' → logprob: -12.125226020812988
    5. '   ' → logprob: -13.875226020812988
    6. 'v' → logprob: -15.375226020812988
    7. '
' → logprob: -17.250226974487305
    8. '           ' → logprob: -17.375226974487305
    9. ' ' → logprob: -17.500226974487305
    10. '  ' → logprob: -17.625226974487305

Token 346: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.05488690733909607
    2. ' v' → logprob: -2.929886817932129
    3. ')v' → logprob: -13.179886817932129
    4. 'vq' → logprob: -14.304886817932129
    5. '	v' → logprob: -14.429886817932129
    6. '<|end|>' → logprob: -15.054886817932129
    7. ' ' → logprob: -15.304886817932129
    8. ')' → logprob: -15.304886817932129
    9. '    ' → logprob: -15.679886817932129
    10. '   ' → logprob: -16.304887771606445

Token 347: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.611323624383658e-05
    2. '2' → logprob: -9.625065803527832
    3. '0' → logprob: -18.56256675720215
    4. '１' → logprob: -18.75006675720215
    5. ' ' → logprob: -18.87506675720215
    6. '۱' → logprob: -19.18756675720215
    7. '१' → logprob: -19.43756675720215
    8. '১' → logprob: -19.75006675720215
    9. '```' → logprob: -19.93756675720215
    10. ',' → logprob: -20.12506675720215

Token 348: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.857719275401905e-05
    2. ' ,' → logprob: -10.250038146972656
    3. ',i' → logprob: -12.875038146972656
    4. '   ' → logprob: -15.000038146972656
    5. ',
' → logprob: -15.875038146972656
    6. '           ' → logprob: -16.750038146972656
    7. '```' → logprob: -17.000038146972656
    8. '       ' → logprob: -17.250038146972656
    9. '),' → logprob: -17.500038146972656
    10. ' ' → logprob: -18.375038146972656

Token 349: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.014172914437949657
    2. ' w' → logprob: -4.2641730308532715
    3. '   ' → logprob: -12.014172554016113
    4. '    ' → logprob: -13.514172554016113
    5. '       ' → logprob: -14.264172554016113
    6. ' ' → logprob: -15.014172554016113
    7. '	w' → logprob: -15.139172554016113
    8. '  ' → logprob: -15.264172554016113
    9. '     ' → logprob: -15.639172554016113
    10. '      ' → logprob: -16.01417350769043

Token 350: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.981667537620524e-06
    2. ',' → logprob: -14.250001907348633
    3. ' q' → logprob: -14.875001907348633
    4. '   ' → logprob: -15.375001907348633
    5. ',q' → logprob: -15.625001907348633
    6. '```' → logprob: -16.125001907348633
    7. 'qi' → logprob: -16.250001907348633
    8. 'qw' → logprob: -16.375001907348633
    9. 'i' → logprob: -16.375001907348633
    10. '	q' → logprob: -17.125001907348633

Token 351: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004421097692102194
    2. ' ,' → logprob: -5.504421234130859
    3. ',i' → logprob: -8.75442123413086
    4. '   ' → logprob: -8.87942123413086
    5. '    ' → logprob: -11.12942123413086
    6. '  ' → logprob: -11.50442123413086
    7. ' ' → logprob: -11.87942123413086
    8. '       ' → logprob: -12.00442123413086
    9. '	' → logprob: -13.00442123413086
    10. '      ' → logprob: -13.50442123413086

Token 352: ' v' (ID: 323)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.030367160215973854
    2. ' i' → logprob: -3.530367136001587
    3. 'vq' → logprob: -7.655367374420166
    4. ' ' → logprob: -9.280366897583008
    5. '   ' → logprob: -11.405366897583008
    6. '     ' → logprob: -11.405366897583008
    7. '  ' → logprob: -11.780366897583008
    8. '    ' → logprob: -11.905366897583008
    9. 'v' → logprob: -12.030366897583008
    10. 'iq' → logprob: -12.530366897583008

Token 353: 'q' (ID: 80)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0053378744050860405
    2. 'q' → logprob: -5.255337715148926
    3. ',' → logprob: -10.005337715148926
    4. ' i' → logprob: -10.880337715148926
    5. '2' → logprob: -11.255337715148926
    6. '+' → logprob: -11.755337715148926
    7. '),' → logprob: -12.630337715148926
    8. ')' → logprob: -12.755337715148926
    9. ',i' → logprob: -12.755337715148926
    10. '(i' → logprob: -13.380337715148926

Token 354: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024156268045771867
    2. ' ,' → logprob: -8.62524127960205
    3. ',i' → logprob: -9.75024127960205
    4. '   ' → logprob: -13.37524127960205
    5. '+' → logprob: -13.87524127960205
    6. ',
' → logprob: -15.12524127960205
    7. ' ' → logprob: -15.25024127960205
    8. '       ' → logprob: -15.25024127960205
    9. '```' → logprob: -15.87524127960205
    10. '    ' → logprob: -16.625242233276367

Token 355: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.061970602720975876
    2. ' i' → logprob: -2.8119707107543945
    3. '   ' → logprob: -13.811970710754395
    4. ' ' → logprob: -13.936970710754395
    5. '	i' → logprob: -14.936970710754395
    6. '  ' → logprob: -15.186970710754395
    7. '    ' → logprob: -15.311970710754395
    8. '       ' → logprob: -16.061969757080078
    9. '        ' → logprob: -16.936969757080078
    10. '     ' → logprob: -17.311969757080078

Token 356: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000553151941858232
    2. ' +' → logprob: -7.500553131103516
    3. '+
' → logprob: -16.125553131103516
    4. '＋' → logprob: -18.875553131103516
    5. '1' → logprob: -19.125553131103516
    6. ' plus' → logprob: -20.250553131103516
    7. '+)' → logprob: -20.375553131103516
    8. '+i' → logprob: -20.500553131103516
    9. '()+' → logprob: -20.625553131103516
    10. '++' → logprob: -20.750553131103516

Token 357: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2352385965641588e-05
    2. ' ' → logprob: -11.375012397766113
    3. '   ' → logprob: -14.750012397766113
    4. '```' → logprob: -14.750012397766113
    5. '  ' → logprob: -17.187511444091797
    6. '2' → logprob: -17.312511444091797
    7. '       ' → logprob: -17.937511444091797
    8. '     ' → logprob: -18.312511444091797
    9. '``' → logprob: -18.312511444091797
    10. '
' → logprob: -18.562511444091797

Token 358: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -17.125001907348633
    4. '2' → logprob: -17.125001907348633
    5. '```' → logprob: -17.375001907348633
    6. '  ' → logprob: -19.437501907348633
    7. '۱' → logprob: -19.437501907348633
    8. '0' → logprob: -19.625001907348633
    9. '
' → logprob: -19.812501907348633
    10. '１' → logprob: -20.000001907348633

Token 359: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06209070235490799
    2. ')' → logprob: -2.8120906352996826
    3. '))
' → logprob: -9.062090873718262
    4. ')
' → logprob: -12.562090873718262
    5. ')))' → logprob: -12.937090873718262
    6. '       ' → logprob: -14.312090873718262
    7. '   ' → logprob: -15.687090873718262
    8. '           ' → logprob: -16.062089920043945
    9. ' ))' → logprob: -16.312089920043945
    10. ')}' → logprob: -16.437089920043945

Token 360: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 361: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.006818854715675116
    2. '   ' → logprob: -5.006818771362305
    3. '
' → logprob: -9.506818771362305
    4. ' print' → logprob: -10.631818771362305
    5. '```' → logprob: -12.381818771362305
    6. '    
' → logprob: -14.756818771362305
    7. '``' → logprob: -15.756818771362305
    8. 'if' → logprob: -16.256818771362305
    9. '#print' → logprob: -16.256818771362305
    10. '	print' → logprob: -16.756818771362305

Token 362: '(-' (ID: 8087)
  Prédit: '(vm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(vm' → logprob: -0.00027599421446211636
    2. '(v' → logprob: -8.250275611877441
    3. '(' → logprob: -12.000275611877441
    4. '(max' → logprob: -12.125275611877441
    5. 'vm' → logprob: -13.375275611877441
    6. '()' → logprob: -14.500275611877441
    7. '(int' → logprob: -14.625275611877441
    8. '((' → logprob: -15.750275611877441
    9. '(
' → logprob: -16.125276565551758
    10. ' vm' → logprob: -16.375276565551758

Token 363: 'vm' (ID: 13622)
  Prédit: 'vm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vm' → logprob: -7.896309739408025e-07
    2. ' vm' → logprob: -14.625000953674316
    3. 'v' → logprob: -15.375000953674316
    4. '(vm' → logprob: -16.75
    5. '	vm' → logprob: -18.25
    6. 'vq' → logprob: -18.5
    7. 'int' → logprob: -19.25
    8. '   ' → logprob: -19.25
    9. '1' → logprob: -19.375
    10. 'Vm' → logprob: -20.625

Token 364: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '<|end|>' → logprob: -16.375
    3. ')' → logprob: -18.75
    4. 'm' → logprob: -18.875
    5. '۱' → logprob: -21.0
    6. '１' → logprob: -21.0
    7. '१' → logprob: -21.0
    8. '১' → logprob: -21.25
    9. '```' → logprob: -22.0625
    10. ' ' → logprob: -22.0625

Token 365: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8908587662735954e-05
    2. ' )' → logprob: -11.750019073486328
    3. ')
' → logprob: -12.000019073486328
    4. '()' → logprob: -13.375019073486328
    5. '())' → logprob: -13.500019073486328
    6. '))' → logprob: -13.750019073486328
    7. '`)' → logprob: -15.500019073486328
    8. ')`' → logprob: -15.750019073486328
    9. '```' → logprob: -15.875019073486328
    10. '})' → logprob: -16.750019073486328

Token 366: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8439757823944092
    2. 'if' → logprob: -1.7189757823944092
    3. '#' → logprob: -2.093975782394409
    4. 'resolve' → logprob: -2.468975782394409
    5. '<|end|>' → logprob: -2.468975782394409
    6. '```' → logprob: -3.343975782394409
    7. '<|end|>' → logprob: -3.843975782394409
    8. '[' → logprob: -5.093976020812988
    9. ';' → logprob: -5.718976020812988
    10. '
' → logprob: -5.968976020812988

Token 367: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.038055259734392166
    2. '__' → logprob: -3.288055181503296
    3. 'name' → logprob: -11.413055419921875
    4. ' ' → logprob: -14.663055419921875
    5. '___' → logprob: -14.663055419921875
    6. '_name' → logprob: -14.788055419921875
    7. 'Name' → logprob: -15.038055419921875
    8. ' '__' → logprob: -15.038055419921875
    9. '/__' → logprob: -15.413055419921875
    10. ' "__' → logprob: -15.413055419921875

Token 368: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.19079585373401642
    2. ' ==' → logprob: -1.9407958984375
    3. '==' → logprob: -3.9407958984375
    4. 'name' → logprob: -5.0657958984375
    5. ' __' → logprob: -5.6907958984375
    6. '=="' → logprob: -7.1907958984375
    7. '_name' → logprob: -9.5657958984375
    8. '_' → logprob: -10.5657958984375
    9. '=='' → logprob: -10.8157958984375
    10. ' =="' → logprob: -10.8157958984375

Token 369: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -7.107425062713446e-06
    2. '==' → logprob: -12.250006675720215
    3. '__.__' → logprob: -14.000006675720215
    4. '___' → logprob: -14.625006675720215
    5. '_' → logprob: -15.000006675720215
    6. '____' → logprob: -15.250006675720215
    7. '__('' → logprob: -15.375006675720215
    8. '=="' → logprob: -16.00000762939453
    9. ' ==' → logprob: -17.37500762939453
    10. '__("' → logprob: -17.50000762939453

Token 370: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004719784017652273
    2. '==' → logprob: -5.5047197341918945
    3. ' ==' → logprob: -7.5047197341918945
    4. '=="' → logprob: -9.379719734191895
    5. '=='' → logprob: -13.254719734191895
    6. '_' → logprob: -13.504719734191895
    7. '___' → logprob: -13.754719734191895
    8. '__.__' → logprob: -14.129719734191895
    9. '=' → logprob: -15.004719734191895
    10. '____' → logprob: -15.504719734191895

Token 371: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12718385457992554
    2. ''' → logprob: -2.1271839141845703
    3. '__' → logprob: -8.37718391418457
    4. ' "__' → logprob: -11.25218391418457
    5. ' '__' → logprob: -12.75218391418457
    6. '"name' → logprob: -13.12718391418457
    7. '"user' → logprob: -13.50218391418457
    8. ''name' → logprob: -13.87718391418457
    9. ''"' → logprob: -14.50218391418457
    10. ''post' → logprob: -14.50218391418457

Token 372: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.16193494200706482
    2. '__' → logprob: -1.9119349718093872
    3. '"' → logprob: -6.786934852600098
    4. 'name' → logprob: -7.786934852600098
    5. '_main' → logprob: -8.911934852600098
    6. ''' → logprob: -11.536934852600098
    7. '__":
' → logprob: -11.786934852600098
    8. '__
' → logprob: -12.286934852600098
    9. '"name' → logprob: -13.036934852600098
    10. ' main' → logprob: -13.536934852600098

Token 373: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.011143672280013561
    2. '__' → logprob: -4.511143684387207
    3. '__':
' → logprob: -9.261143684387207
    4. '_' → logprob: -14.261143684387207
    5. '__.' → logprob: -16.51114273071289
    6. '__
' → logprob: -17.13614273071289
    7. '__:' → logprob: -17.51114273071289
    8. '()' → logprob: -18.26114273071289
    9. '__["' → logprob: -18.26114273071289
    10. '():
' → logprob: -18.51114273071289

Token 374: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006974067073315382
    2. 'resolve' → logprob: -5.131974220275879
    3. '	resolve' → logprob: -7.006974220275879
    4. ' resolve' → logprob: -9.131974220275879
    5. '(resolve' → logprob: -10.506974220275879
    6. '    
' → logprob: -13.881974220275879
    7. '   ' → logprob: -14.131974220275879
    8. '```' → logprob: -14.381974220275879
    9. '.resolve' → logprob: -14.881974220275879
    10. 'solve' → logprob: -14.881974220275879

Token 375: ' resolve' (ID: 14062)
  Prédit: 'resolve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'resolve' (adapté à ' resolve') → logprob: -1.3856492842023727e-06
    2. 'import' → logprob: -14.250000953674316
    3. ' resolve' → logprob: -14.875000953674316
    4. '	resolve' → logprob: -15.500000953674316
    5. '   ' → logprob: -16.000001907348633
    6. 'solve' → logprob: -16.750001907348633
    7. '(resolve' → logprob: -18.125001907348633
    8. 'decode' → logprob: -21.250001907348633
    9. '.resolve' → logprob: -21.250001907348633
    10. '  ' → logprob: -22.125001907348633

Token 376: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.76628842484206e-05
    2. '(' → logprob: -10.500067710876465
    3. '()
' → logprob: -11.000067710876465
    4. '()]' → logprob: -12.125067710876465
    5. '()`' → logprob: -12.500067710876465
    6. '())' → logprob: -13.125067710876465
    7. ' ()' → logprob: -13.250067710876465
    8. '()

' → logprob: -13.375067710876465
    9. '()<' → logprob: -13.875067710876465
    10. '`()' → logprob: -14.125067710876465


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 374
Tokens correctement prédits (1ère position, stricte): 149
Tokens correctement prédits (1ère position, avec adaptation): 156
Tokens correctement prédits (top 10): 321
Précision stricte (1ère position): 39.84%
Précision adaptée (1ère position): 41.71%
Précision (top 10): 85.83%
================================================================================
