================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
A = [[int(i) for i in input().split()] for _ in range(n)]
A.sort(key = lambda x:x[1])
t = 0
ans = 0
for i in A:
    if t < i[0]:
        ans += 1
        t = i[1]
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004278083215467632
    2. ''' → logprob: -8.625428199768066
    3. '('' → logprob: -9.375428199768066
    4. '(n' → logprob: -9.875428199768066
    5. '```' → logprob: -10.375428199768066
    6. '`' → logprob: -10.750428199768066
    7. '("("' → logprob: -11.125428199768066
    8. '(
' → logprob: -11.125428199768066
    9. ')' → logprob: -11.750428199768066
    10. '()' → logprob: -12.250428199768066

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13287097215652466
    2. ')' → logprob: -2.13287091255188
    3. '()' → logprob: -5.382871150970459
    4. '())' → logprob: -7.382871150970459
    5. '(
' → logprob: -8.1328706741333
    6. '```' → logprob: -9.8828706741333
    7. '(

' → logprob: -10.2578706741333
    8. '('' → logprob: -10.3828706741333
    9. ''' → logprob: -10.6328706741333
    10. '(n' → logprob: -10.7578706741333

Token 5: 'A' (ID: 32)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7040315866470337
    2. 'if' → logprob: -1.4540315866470337
    3. 'for' → logprob: -2.329031467437744
    4. 's' → logprob: -2.454031467437744
    5. 'f' → logprob: -4.329031467437744
    6. ' ' → logprob: -4.454031467437744
    7. 'x' → logprob: -4.829031467437744
    8. ')' → logprob: -4.954031467437744
    9. 'a' → logprob: -4.954031467437744
    10. ''' → logprob: -5.079031467437744

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007994360290467739
    2. ' =' → logprob: -5.757994174957275
    3. '[:]' → logprob: -6.382994174957275
    4. '=' → logprob: -6.757994174957275
    5. '[i' → logprob: -7.632994174957275
    6. '.' → logprob: -7.632994174957275
    7. '+' → logprob: -8.382994651794434
    8. '\[' → logprob: -8.757994651794434
    9. '.append' → logprob: -9.007994651794434
    10. '[]' → logprob: -9.132994651794434

Token 7: ' [[' (ID: 9237)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.46272751688957214
    2. ' []' → logprob: -1.4627275466918945
    3. '[' → logprob: -2.8377275466918945
    4. ' [' → logprob: -3.2127275466918945
    5. 'list' → logprob: -3.7127275466918945
    6. ' list' → logprob: -5.0877275466918945
    7. '[input' → logprob: -5.7127275466918945
    8. '[int' → logprob: -5.8377275466918945
    9. '[list' → logprob: -6.3377275466918945
    10. '[n' → logprob: -6.7127275466918945

Token 8: 'int' (ID: 491)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005345463287085295
    2. 'int' → logprob: -5.255345344543457
    3. ']' → logprob: -10.755345344543457
    4. 'input' → logprob: -10.880345344543457
    5. ' int' → logprob: -10.880345344543457
    6. 'False' → logprob: -11.130345344543457
    7. ' ' → logprob: -11.255345344543457
    8. 'n' → logprob: -12.005345344543457
    9. '(int' → logprob: -12.130345344543457
    10. 'i' → logprob: -12.755345344543457

Token 9: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.637521505355835
    2. '(input' → logprob: -0.762521505355835
    3. '(x' → logprob: -5.512521743774414
    4. '()' → logprob: -7.637521743774414
    5. '(i' → logprob: -9.012521743774414
    6. '(a' → logprob: -9.387521743774414
    7. '(user' → logprob: -10.762521743774414
    8. 'input' → logprob: -10.887521743774414
    9. '(A' → logprob: -10.887521743774414
    10. '(token' → logprob: -11.012521743774414

Token 10: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024192029377445579
    2. '())' → logprob: -9.000242233276367
    3. ')]' → logprob: -9.750242233276367
    4. ' )' → logprob: -11.125242233276367
    5. '(x' → logprob: -11.375242233276367
    6. ')])' → logprob: -12.000242233276367
    7. 'input' → logprob: -12.375242233276367
    8. '(' → logprob: -12.750242233276367
    9. '()' → logprob: -12.875242233276367
    10. ')...' → logprob: -13.125242233276367

Token 11: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2519305646419525
    2. ')' → logprob: -1.876930594444275
    3. ' for' → logprob: -3.0019304752349854
    4. '(' → logprob: -4.3769307136535645
    5. '(x' → logprob: -5.6269307136535645
    6. ']' → logprob: -6.5019307136535645
    7. 'x' → logprob: -7.5019307136535645
    8. '()' → logprob: -7.5019307136535645
    9. ')]' → logprob: -8.126930236816406
    10. ' ' → logprob: -8.501930236816406

Token 12: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5638562440872192
    2. ' i' → logprob: -0.9388562440872192
    3. ' input' → logprob: -3.8138561248779297
    4. 'input' → logprob: -5.06385612487793
    5. ' row' → logprob: -5.81385612487793
    6. ' in' → logprob: -5.93885612487793
    7. ' ' → logprob: -6.06385612487793
    8. 'row' → logprob: -6.81385612487793
    9. ' j' → logprob: -7.31385612487793
    10. 'in' → logprob: -8.68885612487793

Token 13: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06996455788612366
    2. 'in' → logprob: -2.694964647293091
    3. '<|end|>' → logprob: -11.069964408874512
    4. 'input' → logprob: -12.694964408874512
    5. '<|end|>' → logprob: -13.194964408874512
    6. 'i' → logprob: -13.194964408874512
    7. ' ' → logprob: -13.569964408874512
    8. ' i' → logprob: -14.069964408874512
    9. 'to' → logprob: -14.319964408874512
    10. '	in' → logprob: -14.319964408874512

Token 14: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1602388471364975
    2. ' input' → logprob: -1.9102388620376587
    3. 'range' → logprob: -12.035239219665527
    4. '(input' → logprob: -12.160239219665527
    5. ' range' → logprob: -13.160239219665527
    6. 'row' → logprob: -15.285239219665527
    7. '<input' → logprob: -15.410239219665527
    8. ' ' → logprob: -15.660239219665527
    9. 'list' → logprob: -15.910239219665527
    10. '=input' → logprob: -16.03523826599121

Token 15: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.012589351274073124
    2. '()]' → logprob: -4.637589454650879
    3. '()' → logprob: -5.887589454650879
    4. '())' → logprob: -10.762589454650879
    5. '()].' → logprob: -10.887589454650879
    6. '(' → logprob: -12.762589454650879
    7. ')]' → logprob: -12.887589454650879
    8. '()][' → logprob: -13.137589454650879
    9. '()[' → logprob: -13.387589454650879
    10. '()],' → logprob: -13.637589454650879

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007402998744510114
    2. 'strip' → logprob: -7.5007405281066895
    3. 'rstrip' → logprob: -8.875740051269531
    4. ' split' → logprob: -10.000740051269531
    5. '(split' → logprob: -13.500740051269531
    6. ' ' → logprob: -15.625740051269531
    7. 'spl' → logprob: -15.875740051269531
    8. ' strip' → logprob: -16.12574005126953
    9. 's' → logprob: -16.37574005126953
    10. ')' → logprob: -16.50074005126953

Token 17: '()]' (ID: 59063)
  Prédit: '()]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.008639151230454445
    2. '()' → logprob: -4.758639335632324
    3. '(' → logprob: -11.508639335632324
    4. '())' → logprob: -11.883639335632324
    5. '('' → logprob: -12.758639335632324
    6. ']' → logprob: -13.508639335632324
    7. '()],' → logprob: -13.758639335632324
    8. ')]' → logprob: -14.758639335632324
    9. '()`' → logprob: -15.258639335632324
    10. '()))' → logprob: -15.258639335632324

Token 18: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020363658666610718
    2. ' for' → logprob: -4.270363807678223
    3. 'for' → logprob: -5.145363807678223
    4. ' ]' → logprob: -9.020363807678223
    5. ']]' → logprob: -9.270363807678223
    6. ')]' → logprob: -10.395363807678223
    7. '`]' → logprob: -10.770363807678223
    8. ')' → logprob: -11.020363807678223
    9. '   ' → logprob: -11.270363807678223
    10. '])' → logprob: -11.770363807678223

Token 19: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -3.404745439183898e-05
    2. 'range' → logprob: -10.87503433227539
    3. ' ' → logprob: -12.00003433227539
    4. '(range' → logprob: -12.62503433227539
    5. '_' → logprob: -12.87503433227539
    6. '_range' → logprob: -14.12503433227539
    7. ' xrange' → logprob: -14.12503433227539
    8. ' _' → logprob: -14.12503433227539
    9. '	range' → logprob: -14.75003433227539
    10. ' ranges' → logprob: -15.12503433227539

Token 20: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006374398712068796
    2. 'in' → logprob: -5.256374359130859
    3. ' ' → logprob: -6.881374359130859
    4. 'range' → logprob: -9.88137435913086
    5. ' range' → logprob: -10.50637435913086
    6. '<|end|>' → logprob: -11.00637435913086
    7. '_' → logprob: -12.13137435913086
    8. '  ' → logprob: -13.00637435913086
    9. '	in' → logprob: -13.25637435913086
    10. '<|end|>' → logprob: -13.50637435913086

Token 21: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20141518115997314
    2. 'range' → logprob: -1.7014151811599731
    3. ' ' → logprob: -14.076415061950684
    4. '	range' → logprob: -14.201415061950684
    5. ' xrange' → logprob: -15.451415061950684
    6. '_range' → logprob: -16.201416015625
    7. '(range' → logprob: -16.701416015625
    8. ' ran' → logprob: -17.201416015625
    9. 'rang' → logprob: -17.701416015625
    10. '.range' → logprob: -17.951416015625

Token 22: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.01418301835656166
    2. '(' → logprob: -4.264183044433594
    3. 'n' → logprob: -11.389183044433594
    4. ' n' → logprob: -12.389183044433594
    5. ' (' → logprob: -13.139183044433594
    6. '(len' → logprob: -13.514183044433594
    7. '(
' → logprob: -15.139183044433594
    8. ')' → logprob: -16.014183044433594
    9. ')n' → logprob: -16.389183044433594
    10. '()' → logprob: -16.889183044433594

Token 23: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00017267030489165336
    2. ')' → logprob: -8.75017261505127
    3. ')])' → logprob: -12.00017261505127
    4. ']' → logprob: -12.37517261505127
    5. '])]' → logprob: -13.50017261505127
    6. '')]' → logprob: -13.87517261505127
    7. ' )' → logprob: -15.00017261505127
    8. ')],' → logprob: -15.25017261505127
    9. '))' → logprob: -15.25017261505127
    10. '])' → logprob: -15.37517261505127

Token 24: 'A' (ID: 32)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.203841209411621
    2. 's' → logprob: -1.453841209411621
    3. 'r' → logprob: -2.328841209411621
    4. 't' → logprob: -2.453841209411621
    5. 'M' → logprob: -2.578841209411621
    6. 'B' → logprob: -3.078841209411621
    7. 'd' → logprob: -3.203841209411621
    8. 'for' → logprob: -3.703841209411621
    9. 'S' → logprob: -3.828841209411621
    10. 'c' → logprob: -3.828841209411621

Token 25: '.sort' (ID: 19551)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1879202425479889
    2. '<|end|>' → logprob: -1.9379202127456665
    3. '.' → logprob: -4.562920093536377
    4. '```' → logprob: -5.687920093536377
    5. '\[' → logprob: -6.062920093536377
    6. '<|end|>' → logprob: -6.062920093536377
    7. ')' → logprob: -6.187920093536377
    8. '#' → logprob: -6.187920093536377
    9. ']' → logprob: -6.687920093536377
    10. '[n' → logprob: -7.187920093536377

Token 26: '(key' (ID: 8932)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017620481085032225
    2. '.' → logprob: -6.7517619132995605
    3. '((' → logprob: -8.876762390136719
    4. '()' → logprob: -9.126762390136719
    5. '(.' → logprob: -9.626762390136719
    6. '(
' → logprob: -9.626762390136719
    7. '("("' → logprob: -10.251762390136719
    8. '('' → logprob: -10.376762390136719
    9. '[' → logprob: -10.751762390136719
    10. '(.)' → logprob: -11.126762390136719

Token 27: ' =' (ID: 314)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0031907858792692423
    2. '=' → logprob: -5.753190994262695
    3. '=len' → logprob: -11.628190994262695
    4. '=(' → logprob: -12.878190994262695
    5. '=str' → logprob: -14.503190994262695
    6. '=A' → logprob: -15.378190994262695
    7. 'lambda' → logprob: -15.878190994262695
    8. '=int' → logprob: -15.878190994262695
    9. '=sum' → logprob: -15.878190994262695
    10. '(lambda' → logprob: -16.003190994262695

Token 28: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.03816944360733032
    2. ' lambda' → logprob: -3.2881693840026855
    3. 'sum' → logprob: -10.038169860839844
    4. 'len' → logprob: -10.413169860839844
    5. '=lambda' → logprob: -10.788169860839844
    6. '(lambda' → logprob: -11.288169860839844
    7. 'int' → logprob: -11.788169860839844
    8. 'lam' → logprob: -12.038169860839844
    9. 'A' → logprob: -13.038169860839844
    10. 'l' → logprob: -13.663169860839844

Token 29: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.023573292419314384
    2. 'x' → logprob: -3.773573398590088
    3. ' row' → logprob: -9.02357292175293
    4. ' a' → logprob: -9.39857292175293
    5. ' A' → logprob: -9.77357292175293
    6. 'A' → logprob: -10.89857292175293
    7. ' ' → logprob: -10.89857292175293
    8. 'a' → logprob: -11.27357292175293
    9. 'row' → logprob: -11.64857292175293
    10. ' s' → logprob: -13.27357292175293

Token 30: ':x' (ID: 73587)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0038978219963610172
    2. '[' → logprob: -6.503897666931152
    3. ':x' → logprob: -6.628897666931152
    4. ' :' → logprob: -6.878897666931152
    5. '[:' → logprob: -10.753897666931152
    6. '[:]' → logprob: -11.753897666931152
    7. ':[' → logprob: -12.003897666931152
    8. ' x' → logprob: -14.003897666931152
    9. 'x' → logprob: -14.128897666931152
    10. ':index' → logprob: -14.378897666931152

Token 31: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.227250610711053e-05
    2. '[-' → logprob: -10.750041961669922
    3. ')' → logprob: -11.125041961669922
    4. '[
' → logprob: -13.250041961669922
    5. '[:' → logprob: -13.750041961669922
    6. '[:]' → logprob: -14.000041961669922
    7. '[::-' → logprob: -14.500041961669922
    8. '[len' → logprob: -15.000041961669922
    9. ',' → logprob: -15.125041961669922
    10. ' [' → logprob: -15.500041961669922

Token 32: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.025795292109251022
    2. '1' → logprob: -3.7757952213287354
    3. '-' → logprob: -6.0257954597473145
    4. '2' → logprob: -9.900794982910156
    5. ' ' → logprob: -10.150794982910156
    6. '::-' → logprob: -11.400794982910156
    7. ':' → logprob: -11.775794982910156
    8. ' -' → logprob: -12.025794982910156
    9. '])' → logprob: -12.525794982910156
    10. ']' → logprob: -13.525794982910156

Token 33: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.029391365125775337
    2. '],' → logprob: -4.279391288757324
    3. ')' → logprob: -4.779391288757324
    4. ')])' → logprob: -6.029391288757324
    5. ')]' → logprob: -6.154391288757324
    6. ']' → logprob: -6.529391288757324
    7. ' ])' → logprob: -7.904391288757324
    8. '),' → logprob: -8.904391288757324
    9. '])]' → logprob: -9.779391288757324
    10. ' )' → logprob: -10.029391288757324

Token 34: 't' (ID: 83)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.42646414041519165
    2. ')' → logprob: -1.6764640808105469
    3. 'for' → logprob: -2.176464080810547
    4. '#' → logprob: -4.301464080810547
    5. '[' → logprob: -4.426464080810547
    6. '
' → logprob: -4.801464080810547
    7. 'A' → logprob: -5.801464080810547
    8. ')
' → logprob: -6.301464080810547
    9. ' for' → logprob: -6.551464080810547
    10. ',' → logprob: -6.801464080810547

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7927387356758118
    2. '=' → logprob: -1.292738676071167
    3. 'ime' → logprob: -1.667738676071167
    4. 'otal' → logprob: -3.167738676071167
    5. '=[]' → logprob: -5.167738914489746
    6. 'o' → logprob: -5.292738914489746
    7. '[' → logprob: -5.667738914489746
    8. 'ot' → logprob: -5.792738914489746
    9. 'emp' → logprob: -5.792738914489746
    10. ',' → logprob: -6.167738914489746

Token 36: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011883620172739029
    2. 'A' → logprob: -4.636883735656738
    3. ' ' → logprob: -6.261883735656738
    4. '-' → logprob: -9.511883735656738
    5. ' A' → logprob: -9.511883735656738
    6. '1' → logprob: -10.386883735656738
    7. ' -' → logprob: -11.886883735656738
    8. '[]' → logprob: -12.199383735656738
    9. '-A' → logprob: -12.636883735656738
    10. 'n' → logprob: -12.824383735656738

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07037784904241562
    2. 'A' → logprob: -2.695377826690674
    3. '-' → logprob: -8.445378303527832
    4. '[A' → logprob: -10.195378303527832
    5. '-A' → logprob: -10.320378303527832
    6. '[]' → logprob: -10.445378303527832
    7. '[' → logprob: -10.445378303527832
    8. '1' → logprob: -10.445378303527832
    9. ' ' → logprob: -10.445378303527832
    10. 'n' → logprob: -11.820378303527832

Token 38: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14983314275741577
    2. ' for' → logprob: -2.1498332023620605
    3. ' ' → logprob: -4.7748332023620605
    4. '<|end|>' → logprob: -5.3998332023620605
    5. '0' → logprob: -5.5248332023620605
    6. ' 
' → logprob: -6.7748332023620605
    7. 's' → logprob: -7.0248332023620605
    8. 'A' → logprob: -7.6498332023620605
    9. 't' → logprob: -8.149832725524902
    10. '\' → logprob: -8.399832725524902

Token 40: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.34716472029685974
    2. '+=' → logprob: -2.0971646308898926
    3. '+' → logprob: -2.4721646308898926
    4. ' =' → logprob: -3.0971646308898926
    5. '=' → logprob: -3.2221646308898926
    6. ' +' → logprob: -6.972164630889893
    7. ' ' → logprob: -9.84716510772705
    8. '+='' → logprob: -10.59716510772705
    9. '++' → logprob: -12.09716510772705
    10. '_' → logprob: -12.09716510772705

Token 41: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024926606565713882
    2. ' ' → logprob: -6.002492427825928
    3. '[]' → logprob: -11.252492904663086
    4. '1' → logprob: -12.877492904663086
    5. '[' → logprob: -15.127492904663086
    6. ' []' → logprob: -15.689992904663086
    7. '-' → logprob: -15.939992904663086
    8. '(' → logprob: -16.502492904663086
    9. '[]
' → logprob: -16.627492904663086
    10. '  ' → logprob: -16.689992904663086

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007206532754935324
    2. '[]' → logprob: -7.500720500946045
    3. 'True' → logprob: -9.750720977783203
    4. '1' → logprob: -10.000720977783203
    5. '-' → logprob: -10.875720977783203
    6. ' ' → logprob: -11.125720977783203
    7. 'n' → logprob: -11.875720977783203
    8. '"' → logprob: -12.375720977783203
    9. '""' → logprob: -12.375720977783203
    10. '100' → logprob: -13.000720977783203

Token 43: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08287660032510757
    2. ' for' → logprob: -2.832876682281494
    3. '<|end|>' → logprob: -3.957876682281494
    4. '
' → logprob: -6.707876682281494
    5. '\n' → logprob: -8.582876205444336
    6. ':' → logprob: -9.582876205444336
    7. '<|end|>' → logprob: -9.707876205444336
    8. ')' → logprob: -11.332876205444336
    9. '	for' → logprob: -12.207876205444336
    10. '```' → logprob: -12.332876205444336

Token 44: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0010554377222433686
    2. ' for' → logprob: -6.8760552406311035
    3. '<|end|>' → logprob: -11.126055717468262
    4. '
' → logprob: -12.251055717468262
    5. '\n' → logprob: -13.751055717468262
    6. '```' → logprob: -14.001055717468262
    7. '	for' → logprob: -14.876055717468262
    8. ':' → logprob: -15.251055717468262
    9. '<|end|>' → logprob: -16.501054763793945
    10. ')' → logprob: -16.501054763793945

Token 45: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5036156177520752
    2. ' task' → logprob: -1.8786156177520752
    3. ' x' → logprob: -2.378615617752075
    4. ' job' → logprob: -2.628615617752075
    5. 'i' → logprob: -3.128615617752075
    6. 'x' → logprob: -4.503615379333496
    7. ' _' → logprob: -5.253615379333496
    8. '_' → logprob: -5.503615379333496
    9. ' a' → logprob: -5.628615379333496
    10. 'task' → logprob: -6.128615379333496

Token 46: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3877715766429901
    2. 'in' → logprob: -1.1377716064453125
    3. ' ' → logprob: -7.8877716064453125
    4. 'n' → logprob: -8.012771606445312
    5. '	in' → logprob: -9.387771606445312
    6. '  ' → logprob: -10.262771606445312
    7. 'range' → logprob: -11.387771606445312
    8. ',' → logprob: -11.387771606445312
    9. ' n' → logprob: -11.887771606445312
    10. '   ' → logprob: -12.012771606445312

Token 47: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.28541281819343567
    2. ' range' → logprob: -2.4104127883911133
    3. 'range' → logprob: -2.5354127883911133
    4. ' A' → logprob: -2.5354127883911133
    5. ' ' → logprob: -10.785412788391113
    6. '   ' → logprob: -11.660412788391113
    7. 'Range' → logprob: -12.035412788391113
    8. '(range' → logprob: -12.285412788391113
    9. '  ' → logprob: -12.410412788391113
    10. '	A' → logprob: -13.347912788391113

Token 48: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00033760786755010486
    2. '[' → logprob: -8.250337600708008
    3. ':
' → logprob: -9.875337600708008
    4. '[:]' → logprob: -12.125337600708008
    5. ',' → logprob: -12.500337600708008
    6. '[:' → logprob: -13.000337600708008
    7. '):' → logprob: -13.375337600708008
    8. ':

' → logprob: -13.875337600708008
    9. ':**' → logprob: -13.875337600708008
    10. '>' → logprob: -14.000337600708008

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7471905946731567
    2. ' t' → logprob: -1.1221905946731567
    3. ' if' → logprob: -1.7471905946731567
    4. 't' → logprob: -4.247190475463867
    5. ' i' → logprob: -5.747190475463867
    6. 'if' → logprob: -5.747190475463867
    7. '[' → logprob: -6.622190475463867
    8. ' ' → logprob: -6.872190475463867
    9. '	t' → logprob: -7.122190475463867
    10. '[i' → logprob: -7.622190475463867

Token 50: ' if' (ID: 538)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.1273832768201828
    2. ' if' → logprob: -2.377383232116699
    3. 't' → logprob: -4.127383232116699
    4. '   ' → logprob: -5.502383232116699
    5. 'if' (adapté à ' if') → logprob: -5.877383232116699
    6. ' i' → logprob: -6.002383232116699
    7. ' ' → logprob: -8.2523832321167
    8. ' s' → logprob: -8.3773832321167
    9. 'i' → logprob: -9.2523832321167
    10. ' x' → logprob: -9.3773832321167

Token 51: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.17935779690742493
    2. ' i' → logprob: -2.0543577671051025
    3. 't' → logprob: -3.4293577671051025
    4. 'i' → logprob: -5.679358005523682
    5. ' ' → logprob: -8.804357528686523
    6. '   ' → logprob: -10.804357528686523
    7. '	t' → logprob: -11.679357528686523
    8. '  ' → logprob: -12.179357528686523
    9. '	i' → logprob: -12.554357528686523
    10. ' ' → logprob: -13.429357528686523

Token 52: ' <' (ID: 464)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.8089333772659302
    2. '+' → logprob: -1.3089333772659302
    3. ' <=' → logprob: -1.5589333772659302
    4. ' +' → logprob: -2.6839332580566406
    5. '<' → logprob: -5.683933258056641
    6. '+i' → logprob: -6.308933258056641
    7. ' ' → logprob: -8.68393325805664
    8. ' <' → logprob: -9.05893325805664
    9. '[i' → logprob: -9.05893325805664
    10. ' i' → logprob: -9.68393325805664

Token 53: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2258853167295456
    2. 'i' → logprob: -1.600885272026062
    3. '=' → logprob: -8.600885391235352
    4. '=i' → logprob: -8.850885391235352
    5. ' ' → logprob: -9.350885391235352
    6. '	i' → logprob: -10.850885391235352
    7. '(i' → logprob: -11.725885391235352
    8. '   ' → logprob: -11.850885391235352
    9. '  ' → logprob: -12.100885391235352
    10. '[i' → logprob: -12.225885391235352

Token 54: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4736459888808895e-05
    2. '0' → logprob: -11.625014305114746
    3. '.' → logprob: -13.375014305114746
    4. ''s' → logprob: -13.625014305114746
    5. ' [' → logprob: -14.500014305114746
    6. '1' → logprob: -14.500014305114746
    7. 's' → logprob: -15.000014305114746
    8. '2' → logprob: -15.125014305114746
    9. ' ' → logprob: -15.625014305114746
    10. '][' → logprob: -15.937514305114746

Token 55: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020234835392329842
    2. '1' → logprob: -8.750202178955078
    3. ' ' → logprob: -10.125202178955078
    4. '2' → logprob: -13.500202178955078
    5. '=' → logprob: -13.750202178955078
    6. '[' → logprob: -14.812702178955078
    7. '   ' → logprob: -16.062702178955078
    8. '

' → logprob: -16.125202178955078
    9. ')' → logprob: -16.375202178955078
    10. '۰' → logprob: -16.375202178955078

Token 56: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11127068102359772
    2. '):' → logprob: -2.3612706661224365
    3. ']:' → logprob: -5.111270904541016
    4. '>:' → logprob: -5.736270904541016
    5. '[' → logprob: -7.111270904541016
    6. '+' → logprob: -8.861270904541016
    7. ' and' → logprob: -9.236270904541016
    8. '}:' → logprob: -9.236270904541016
    9. '<=' → logprob: -9.361270904541016
    10. ')' → logprob: -9.486270904541016

Token 57: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012372145429253578
    2. '   ' → logprob: -5.512372016906738
    3. '	   ' → logprob: -6.512372016906738
    4. '	t' → logprob: -6.762372016906738
    5. '        
' → logprob: -6.887372016906738
    6. '    ' → logprob: -6.887372016906738
    7. 't' → logprob: -7.137372016906738
    8. ' t' → logprob: -7.387372016906738
    9. '	' → logprob: -7.512372016906738
    10. ':' → logprob: -8.137372016906738

Token 58: ' ans' (ID: 3345)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.20095807313919067
    2. '       ' → logprob: -1.950958013534546
    3. ' t' → logprob: -4.075958251953125
    4. '   ' → logprob: -4.200958251953125
    5. 'ans' (adapté à ' ans') → logprob: -5.075958251953125
    6. ' ans' → logprob: -6.700958251953125
    7. '           ' → logprob: -8.575958251953125
    8. '	ans' → logprob: -9.075958251953125
    9. '	t' → logprob: -9.700958251953125
    10. '    ' → logprob: -11.200958251953125

Token 59: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1463872790336609
    2. '+=' → logprob: -2.3963873386383057
    3. ' =' → logprob: -3.1463873386383057
    4. '=' → logprob: -6.271387100219727
    5. '+' → logprob: -8.396387100219727
    6. ']+=' → logprob: -13.146387100219727
    7. ' +' → logprob: -13.271387100219727
    8. '<|end|>' → logprob: -13.646387100219727
    9. '+='' → logprob: -14.646387100219727
    10. '+=(' → logprob: -14.646387100219727

Token 60: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017010066658258438
    2. 'i' → logprob: -6.8767008781433105
    3. ' ' → logprob: -7.3767008781433105
    4. ' i' → logprob: -10.126701354980469
    5. '   ' → logprob: -13.626701354980469
    6. '  ' → logprob: -15.876701354980469
    7. '+' → logprob: -16.00170135498047
    8. '0' → logprob: -16.25170135498047
    9. 't' → logprob: -16.43920135498047
    10. '2' → logprob: -16.56420135498047

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005423361901193857
    2. 'i' → logprob: -5.255423545837402
    3. ' ' → logprob: -8.755423545837402
    4. ' i' → logprob: -10.630423545837402
    5. '   ' → logprob: -13.380423545837402
    6. '+' → logprob: -13.880423545837402
    7. '0' → logprob: -14.130423545837402
    8. '100' → logprob: -14.442923545837402
    9. 't' → logprob: -14.505423545837402
    10. 'x' → logprob: -14.880423545837402

Token 62: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3800647258758545
    2. '       ' → logprob: -1.3800647258758545
    3. '
' → logprob: -3.5050647258758545
    4. '   ' → logprob: -3.7550647258758545
    5. 't' → logprob: -5.380064964294434
    6. '	t' → logprob: -6.505064964294434
    7. '    
' → logprob: -7.005064964294434
    8. '        
' → logprob: -7.130064964294434
    9. '' → logprob: -7.255064964294434
    10. ' t' → logprob: -7.380064964294434

Token 63: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17667758464813232
    2. 't' → logprob: -2.051677703857422
    3. '   ' → logprob: -3.551677703857422
    4. '	t' → logprob: -6.051677703857422
    5. ' t' → logprob: -6.301677703857422
    6. '```' → logprob: -7.926677703857422
    7. ' ' → logprob: -10.676677703857422
    8. '\t' → logprob: -10.676677703857422
    9. ',' → logprob: -10.801677703857422
    10. '	' → logprob: -10.926677703857422

Token 64: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.00020783171930816025
    2. '       ' → logprob: -9.125207901000977
    3. '   ' → logprob: -10.000207901000977
    4. ' t' → logprob: -10.125207901000977
    5. '	t' → logprob: -12.375207901000977
    6. '           ' → logprob: -12.750207901000977
    7. 'i' → logprob: -13.000207901000977
    8. '`t' → logprob: -13.375207901000977
    9. '    ' → logprob: -14.500207901000977
    10. '  ' → logprob: -14.875207901000977

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061973292380571365
    2. '=' → logprob: -2.8119733333587646
    3. ' +=' → logprob: -12.436973571777344
    4. '+=' → logprob: -13.936973571777344
    5. '=i' → logprob: -15.186973571777344
    6. ' ' → logprob: -15.311973571777344
    7. '＝' → logprob: -16.686973571777344
    8. '<' → logprob: -17.311973571777344
    9. ' =
' → logprob: -17.811973571777344
    10. '=

' → logprob: -17.936973571777344

Token 66: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004889304982498288
    2. ' i' → logprob: -7.625488758087158
    3. '	i' → logprob: -14.500489234924316
    4. '   ' → logprob: -15.625489234924316
    5. 'x' → logprob: -16.25048828125
    6. ' ' → logprob: -17.50048828125
    7. 'int' → logprob: -17.62548828125
    8. 'max' → logprob: -17.62548828125
    9. '1' → logprob: -17.62548828125
    10. 'a' → logprob: -17.87548828125

Token 67: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2948405128554441e-05
    2. ' [' → logprob: -12.00001335144043
    3. '1' → logprob: -12.50001335144043
    4. '][' → logprob: -14.12501335144043
    5. '```' → logprob: -14.50001335144043
    6. ' ' → logprob: -15.12501335144043
    7. ''s' → logprob: -15.31251335144043
    8. '`' → logprob: -15.50001335144043
    9. ')[' → logprob: -15.75001335144043
    10. ']' → logprob: -16.43751335144043

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0087516784551553e-05
    2. '0' → logprob: -11.75001049041748
    3. ' ' → logprob: -13.87501049041748
    4. '2' → logprob: -14.00001049041748
    5. '[' → logprob: -15.25001049041748
    6. '-' → logprob: -17.125009536743164
    7. '   ' → logprob: -17.125009536743164
    8. '][' → logprob: -17.375009536743164
    9. '```' → logprob: -17.750009536743164
    10. ']' → logprob: -18.062509536743164

Token 69: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5361900329589844
    2. ']' → logprob: -1.2861900329589844
    3. '+' → logprob: -2.0361900329589844
    4. '<|end|>' → logprob: -5.286190032958984
    5. ' +' → logprob: -6.536190032958984
    6. '}' → logprob: -7.536190032958984
    7. ']+' → logprob: -8.036190032958984
    8. ')+' → logprob: -8.661190032958984
    9. '<|end|>' → logprob: -8.661190032958984
    10. ')]' → logprob: -9.036190032958984

Token 70: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.054500666621607e-06
    2. ' print' → logprob: -13.37500286102295
    3. '```' → logprob: -14.87500286102295
    4. 'p' → logprob: -15.12500286102295
    5. 'prin' → logprob: -15.12500286102295
    6. 'pr' → logprob: -15.12500286102295
    7. 'n' → logprob: -16.625003814697266
    8. '
' → logprob: -16.875003814697266
    9. '#print' → logprob: -17.125003814697266
    10. '\' → logprob: -17.750003814697266

Token 71: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0033254071604460478
    2. '(ans' → logprob: -6.128325462341309
    3. '('' → logprob: -7.378325462341309
    4. '("("' → logprob: -7.628325462341309
    5. '()' → logprob: -11.003325462341309
    6. '(`' → logprob: -13.253325462341309
    7. '(end' → logprob: -13.753325462341309
    8. '(an' → logprob: -14.128325462341309
    9. '(a' → logprob: -14.128325462341309
    10. '((' → logprob: -14.378325462341309

Token 72: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.375000953674316
    3. '))' → logprob: -15.250000953674316
    4. '`)' → logprob: -17.125001907348633
    5. '')' → logprob: -17.250001907348633
    6. ')`' → logprob: -17.250001907348633
    7. ')
' → logprob: -18.125001907348633
    8. '）' → logprob: -18.125001907348633
    9. '")' → logprob: -19.375001907348633
    10. '}' → logprob: -19.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 70
Tokens correctement prédits (1ère position, stricte): 31
Tokens correctement prédits (1ère position, avec adaptation): 32
Tokens correctement prédits (top 10): 55
Précision stricte (1ère position): 44.29%
Précision adaptée (1ère position): 45.71%
Précision (top 10): 78.57%
================================================================================
