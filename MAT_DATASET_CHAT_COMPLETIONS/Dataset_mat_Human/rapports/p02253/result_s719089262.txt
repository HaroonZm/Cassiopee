================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    n = int(input())
    sch = []
    for _ in range(n):
        sch.append(list(map(int,input().split())))
    sch.sort(key=lambda a: a[1])
    res,t = 0,-1
    for i in range(n):
        if t<sch[i][0]:
            t = sch[i][1]
            res+=1
    print (res)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.2743290662765503
    2. '\n' → logprob: -1.7743290662765503
    3. '   ' → logprob: -3.52432918548584
    4. '(' → logprob: -4.39932918548584
    5. ' 
' → logprob: -5.14932918548584
    6. '    
' → logprob: -5.27432918548584
    7. ' ' → logprob: -5.52432918548584
    8. ''' → logprob: -5.64932918548584
    9. '    ' → logprob: -6.39932918548584
    10. '```' → logprob: -6.39932918548584

Token 4: ' n' (ID: 297)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5992159247398376
    2. '   ' → logprob: -1.4742159843444824
    3. 'pass' → logprob: -2.0992159843444824
    4. 'return' → logprob: -2.8492159843444824
    5. '#' → logprob: -4.224215984344482
    6. 'p' → logprob: -5.224215984344482
    7. '```' → logprob: -5.724215984344482
    8. 'r' → logprob: -5.724215984344482
    9. 'a' → logprob: -5.974215984344482
    10. '\' → logprob: -5.974215984344482

Token 5: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4764905273914337
    2. '=' → logprob: -1.8514904975891113
    3. '_' → logprob: -2.6014904975891113
    4. ' ' → logprob: -2.8514904975891113
    5. '   ' → logprob: -2.8514904975891113
    6. 'umber' → logprob: -5.101490497589111
    7. '  ' → logprob: -5.226490497589111
    8. 'u' → logprob: -5.351490497589111
    9. '    ' → logprob: -5.601490497589111
    10. '.' → logprob: -5.976490497589111

Token 6: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.030363112688064575
    2. ' ' → logprob: -4.280363082885742
    3. 'int' → logprob: -4.280363082885742
    4. ' input' → logprob: -7.030363082885742
    5. '10' → logprob: -7.030363082885742
    6. '5' → logprob: -8.655363082885742
    7. '0' → logprob: -9.030363082885742
    8. 'input' → logprob: -9.530363082885742
    9. '20' → logprob: -10.530363082885742
    10. ' eval' → logprob: -10.905363082885742

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00018506382184568793
    2. '(input' → logprob: -8.875185012817383
    3. '('' → logprob: -10.625185012817383
    4. '()' → logprob: -12.000185012817383
    5. '(
' → logprob: -12.000185012817383
    6. ' (' → logprob: -13.000185012817383
    7. '(n' → logprob: -13.375185012817383
    8. '(

' → logprob: -13.750185012817383
    9. ''' → logprob: -14.250185012817383
    10. '("' → logprob: -14.625185012817383

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.27037960290908813
    2. '()' → logprob: -1.8953795433044434
    3. ')' → logprob: -2.7703795433044434
    4. '())' → logprob: -3.8953795433044434
    5. '('' → logprob: -6.770379543304443
    6. '(
' → logprob: -7.520379543304443
    7. '(""))' → logprob: -7.645379543304443
    8. '))' → logprob: -8.020380020141602
    9. '()))' → logprob: -8.270380020141602
    10. '```' → logprob: -8.770380020141602

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8797242045402527
    2. '\n' → logprob: -1.7547242641448975
    3. '```' → logprob: -2.6297242641448975
    4. ')' → logprob: -2.8797242641448975
    5. '\' → logprob: -3.0047242641448975
    6. '    
' → logprob: -3.1297242641448975
    7. '`' → logprob: -3.2547242641448975
    8. 'if' → logprob: -3.7547242641448975
    9. 'for' → logprob: -4.254724025726318
    10. ' ' → logprob: -4.254724025726318

Token 10: ' sch' (ID: 1781)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6596108675003052
    2. 'if' → logprob: -1.9096108675003052
    3. 'i' → logprob: -2.4096107482910156
    4. 'for' → logprob: -2.7846107482910156
    5. '`' → logprob: -3.5346107482910156
    6. ' if' → logprob: -4.034610748291016
    7. '```' → logprob: -4.034610748291016
    8. ')' → logprob: -4.284610748291016
    9. '    
' → logprob: -4.409610748291016
    10. 'a' → logprob: -4.534610748291016

Token 11: ' =' (ID: 314)
  Prédit: 'ool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ool' → logprob: -0.9123725295066833
    2. 'ed' → logprob: -1.1623725891113281
    3. 'ools' → logprob: -1.6623725891113281
    4. 'ema' → logprob: -3.162372589111328
    5. 'e' → logprob: -3.787372589111328
    6. 'o' → logprob: -4.162372589111328
    7. 'oo' → logprob: -4.662372589111328
    8. 'edu' → logprob: -6.287372589111328
    9. 'eed' → logprob: -6.912372589111328
    10. '```' → logprob: -7.287372589111328

Token 12: ' []
' (ID: 8911)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.4661068618297577
    2. ' []' → logprob: -1.34110689163208
    3. ' [' → logprob: -3.46610689163208
    4. ' set' → logprob: -3.46610689163208
    5. '{}' → logprob: -3.46610689163208
    6. '[]' → logprob: -5.21610689163208
    7. 'set' → logprob: -5.34110689163208
    8. ' ' → logprob: -6.34110689163208
    9. '[' → logprob: -6.84110689163208
    10. ' ['' → logprob: -7.21610689163208

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5290898680686951
    2. 'for' → logprob: -1.4040899276733398
    3. ' for' → logprob: -2.52908992767334
    4. ' ' → logprob: -3.02908992767334
    5. '    
' → logprob: -4.77908992767334
    6. '    ' → logprob: -5.27908992767334
    7. '	for' → logprob: -5.40408992767334
    8. '<|end|>' → logprob: -5.40408992767334
    9. ' 
' → logprob: -5.52908992767334
    10. '
' → logprob: -6.15408992767334

Token 14: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.24057833850383759
    2. '   ' → logprob: -1.865578293800354
    3. ' for' → logprob: -2.8655784130096436
    4. ' ' → logprob: -7.2405781745910645
    5. '	for' → logprob: -7.8655781745910645
    6. '    
' → logprob: -8.115578651428223
    7. '    ' → logprob: -9.240578651428223
    8. '  ' → logprob: -9.365578651428223
    9. '```' → logprob: -9.365578651428223
    10. 'f' → logprob: -9.615578651428223

Token 15: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07215265929698944
    2. ' i' → logprob: -2.697152614593506
    3. ' _' → logprob: -6.447152614593506
    4. '_' → logprob: -8.322153091430664
    5. ' ‌' → logprob: -8.447153091430664
    6. '  ' → logprob: -9.322153091430664
    7. 'i' → logprob: -10.947153091430664
    8. ' ▁' → logprob: -11.697153091430664
    9. ' ```' → logprob: -11.697153091430664
    10. ' ' → logprob: -11.822153091430664

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012142510153353214
    2. 'in' → logprob: -5.137142658233643
    3. ' ' → logprob: -5.637142658233643
    4. 'n' → logprob: -6.637142658233643
    5. 'i' → logprob: -7.262142658233643
    6. ' i' → logprob: -8.512142181396484
    7. '  ' → logprob: -8.512142181396484
    8. '   ' → logprob: -9.387142181396484
    9. ' n' → logprob: -10.387142181396484
    10. '	in' → logprob: -10.887142181396484

Token 17: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0017038638470694423
    2. ' range' → logprob: -6.37670373916626
    3. '(range' → logprob: -13.876704216003418
    4. 'ran' → logprob: -15.376704216003418
    5. '_range' → logprob: -15.876704216003418
    6. '	range' → logprob: -16.2517032623291
    7. 'rang' → logprob: -16.6267032623291
    8. 'n' → logprob: -16.8767032623291
    9. '_' → logprob: -17.1267032623291
    10. '```' → logprob: -17.2517032623291

Token 18: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19036798179149628
    2. ' (' → logprob: -1.8153679370880127
    3. '(n' → logprob: -5.440368175506592
    4. ' ' → logprob: -5.690368175506592
    5. ' n' → logprob: -6.440368175506592
    6. ' )' → logprob: -7.065368175506592
    7. ' range' → logprob: -8.690367698669434
    8. ')' → logprob: -9.065367698669434
    9. '(range' → logprob: -10.190367698669434
    10. ' in' → logprob: -10.690367698669434

Token 19: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011301038786768913
    2. ')' → logprob: -4.511301040649414
    3. ' ):' → logprob: -8.886301040649414
    4. '   ' → logprob: -10.011301040649414
    5. ':' → logprob: -10.511301040649414
    6. '):
' → logprob: -10.636301040649414
    7. ' )' → logprob: -12.011301040649414
    8. ',' → logprob: -13.011301040649414
    9. ' ' → logprob: -13.261301040649414
    10. '():' → logprob: -13.261301040649414

Token 20: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.03461218997836113
    2. '   ' → logprob: -4.03461217880249
    3. '       ' → logprob: -5.28461217880249
    4. '     
' → logprob: -5.78461217880249
    5. ' ' → logprob: -5.90961217880249
    6. ' input' → logprob: -6.90961217880249
    7. '```' → logprob: -7.40961217880249
    8. '        ' → logprob: -7.97211217880249
    9. ' ```' → logprob: -7.97211217880249
    10. 'sch' → logprob: -8.097112655639648

Token 21: ' sch' (ID: 1781)
  Prédit: ' sch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sch' → logprob: -1.5068236589431763
    2. ' line' → logprob: -1.5068236589431763
    3. '   ' → logprob: -1.8818236589431763
    4. ' data' → logprob: -2.2568235397338867
    5. ' name' → logprob: -2.5068235397338867
    6. 'sch' (adapté à ' sch') → logprob: -3.0068235397338867
    7. ' s' → logprob: -3.2568235397338867
    8. 's' → logprob: -4.131823539733887
    9. ' school' → logprob: -4.256823539733887
    10. 'data' → logprob: -4.381823539733887

Token 22: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.25201109051704407
    2. '.' → logprob: -1.5020110607147217
    3. ' =' → logprob: -10.5020112991333
    4. '.extend' → logprob: -10.8770112991333
    5. '.insert' → logprob: -11.8770112991333
    6. '.push' → logprob: -12.3770112991333
    7. ' .' → logprob: -12.3770112991333
    8. '   ' → logprob: -12.3770112991333
    9. 'append' → logprob: -12.8770112991333
    10. '.app' → logprob: -13.1270112991333

Token 23: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.660124659538269
    2. '(int' → logprob: -1.535124659538269
    3. '(' → logprob: -1.785124659538269
    4. '(input' → logprob: -2.5351247787475586
    5. '(tuple' → logprob: -3.9101247787475586
    6. '(str' → logprob: -8.660124778747559
    7. '(lambda' → logprob: -9.160124778747559
    8. '(float' → logprob: -9.410124778747559
    9. '(
' → logprob: -9.660124778747559
    10. 'list' → logprob: -9.785124778747559

Token 24: '(map' (ID: 16946)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6591116189956665
    2. '(map' → logprob: -1.1591116189956665
    3. '(' → logprob: -1.7841116189956665
    4. '(int' → logprob: -7.034111499786377
    5. '(eval' → logprob: -10.659111976623535
    6. '(range' → logprob: -10.909111976623535
    7. '(
' → logprob: -11.034111976623535
    8. ' (' → logprob: -12.034111976623535
    9. '(str' → logprob: -12.159111976623535
    10. '()' → logprob: -12.534111976623535

Token 25: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.05807030573487282
    2. '(' → logprob: -3.183070421218872
    3. '(input' → logprob: -4.808070182800293
    4. '(str' → logprob: -5.183070182800293
    5. '(lambda' → logprob: -7.183070182800293
    6. '<|end|>' → logprob: -8.808070182800293
    7. ')' → logprob: -9.058070182800293
    8. '(
' → logprob: -9.433070182800293
    9. '<int' → logprob: -10.558070182800293
    10. ' (' → logprob: -11.433070182800293

Token 26: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0055835372768342495
    2. '(' → logprob: -5.380583763122559
    3. ',input' → logprob: -7.630583763122559
    4. '<|end|>' → logprob: -8.505583763122559
    5. ' (' → logprob: -9.255583763122559
    6. ',' → logprob: -10.255583763122559
    7. ')' → logprob: -10.255583763122559
    8. '(
' → logprob: -10.505583763122559
    9. '=input' → logprob: -10.755583763122559
    10. 'input' → logprob: -11.505583763122559

Token 27: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0564331205387134e-05
    2. '()' → logprob: -11.50001049041748
    3. ' ().' → logprob: -15.75001049041748
    4. '())))' → logprob: -16.125011444091797
    5. '()
' → logprob: -16.625011444091797
    6. '()))' → logprob: -17.000011444091797
    7. '())' → logprob: -18.250011444091797
    8. '()

' → logprob: -19.500011444091797
    9. '(' → logprob: -19.500011444091797
    10. '()?.' → logprob: -19.625011444091797

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011915372451767325
    2. 'strip' → logprob: -6.75119161605835
    3. ' split' → logprob: -11.251191139221191
    4. 'rstrip' → logprob: -11.751191139221191
    5. '(split' → logprob: -15.001191139221191
    6. 'spl' → logprob: -15.626191139221191
    7. ' strip' → logprob: -17.251192092895508
    8. 'read' → logprob: -18.501192092895508
    9. '.split' → logprob: -18.876192092895508
    10. ')' → logprob: -18.876192092895508

Token 29: '())))
' (ID: 129187)
  Prédit: '())))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.23484332859516144
    2. '())' → logprob: -2.4848432540893555
    3. '()))' → logprob: -2.4848432540893555
    4. '()' → logprob: -3.3598432540893555
    5. ')))' → logprob: -5.1098432540893555
    6. '(' → logprob: -7.2348432540893555
    7. '())))
' → logprob: -7.4848432540893555
    8. ')' → logprob: -8.109843254089355
    9. '))))' → logprob: -8.609843254089355
    10. '')))' → logprob: -11.234843254089355

Token 30: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9303128719329834
    2. ')' → logprob: -1.1803128719329834
    3. '   ' → logprob: -1.6803128719329834
    4. '<|end|>' → logprob: -3.9303128719329834
    5. '[' → logprob: -4.1803131103515625
    6. '    
' → logprob: -4.3053131103515625
    7. ')
' → logprob: -4.4303131103515625
    8. ' ' → logprob: -4.5553131103515625
    9. ':' → logprob: -4.5553131103515625
    10. '  
' → logprob: -5.0553131103515625

Token 31: ' sch' (ID: 1781)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.4990226030349731
    2. ')' → logprob: -1.6240226030349731
    3. '   ' → logprob: -2.2490224838256836
    4. '[' → logprob: -2.8740224838256836
    5. '\n' → logprob: -2.8740224838256836
    6. ' 
' → logprob: -2.9990224838256836
    7. '  
' → logprob: -2.9990224838256836
    8. '    
' → logprob: -3.1240224838256836
    9. 'for' → logprob: -3.3740224838256836
    10. '#' → logprob: -3.3740224838256836

Token 32: '.sort' (ID: 19551)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5316455364227295
    2. '<|end|>' → logprob: -1.0316455364227295
    3. ')' → logprob: -3.9066455364227295
    4. '```' → logprob: -4.531645774841309
    5. '()' → logprob: -4.906645774841309
    6. '<|end|>' → logprob: -5.656645774841309
    7. '[:]' → logprob: -5.906645774841309
    8. '[]' → logprob: -6.156645774841309
    9. '.' → logprob: -6.406645774841309
    10. '(' → logprob: -6.406645774841309

Token 33: '(key' (ID: 8932)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.040910277515649796
    2. '((' → logprob: -4.040910243988037
    3. '()' → logprob: -4.415910243988037
    4. '(()' → logprob: -4.790910243988037
    5. '("("' → logprob: -7.040910243988037
    6. '```' → logprob: -8.165910720825195
    7. '(`' → logprob: -8.290910720825195
    8. '(
' → logprob: -9.165910720825195
    9. '('' → logprob: -9.165910720825195
    10. '([' → logprob: -9.665910720825195

Token 34: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0015046248445287347
    2. '=' → logprob: -6.501504421234131
    3. '=len' → logprob: -14.126504898071289
    4. '=(' → logprob: -14.501504898071289
    5. 'lambda' → logprob: -14.626504898071289
    6. '(lambda' → logprob: -14.876504898071289
    7. ')=' → logprob: -16.00150489807129
    8. '=item' → logprob: -17.00150489807129
    9. '=str' → logprob: -17.25150489807129
    10. '=int' → logprob: -17.75150489807129

Token 35: ' a' (ID: 261)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.011138244532048702
    2. 'x' → logprob: -4.511138439178467
    3. ' s' → logprob: -9.511137962341309
    4. ' ' → logprob: -12.511137962341309
    5. ' row' → logprob: -12.511137962341309
    6. 's' → logprob: -12.886137962341309
    7. ' a' → logprob: -13.261137962341309
    8. '	x' → logprob: -14.386137962341309
    9. '<|end|>' → logprob: -14.511137962341309
    10. ' i' → logprob: -14.636137962341309

Token 36: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0053140390664339066
    2. ':a' → logprob: -6.005313873291016
    3. ' :' → logprob: -6.505313873291016
    4. 'a' → logprob: -7.005313873291016
    5. ' a' → logprob: -8.505313873291016
    6. '[' → logprob: -8.505313873291016
    7. '[a' → logprob: -11.005313873291016
    8. '[:' → logprob: -13.005313873291016
    9. '	a' → logprob: -13.380313873291016
    10. '[:]' → logprob: -13.630313873291016

Token 37: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5233026742935181
    2. 'a' → logprob: -0.8983026742935181
    3. '(a' → logprob: -9.273303031921387
    4. ' (' → logprob: -9.773303031921387
    5. '(' → logprob: -11.273303031921387
    6. ' ' → logprob: -12.523303031921387
    7. ')a' → logprob: -12.523303031921387
    8. '	a' → logprob: -13.023303031921387
    9. '-' → logprob: -14.023303031921387
    10. ':' → logprob: -14.023303031921387

Token 38: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.981667537620524e-06
    2. '[-' → logprob: -14.250001907348633
    3. '[
' → logprob: -15.000001907348633
    4. ')' → logprob: -15.250001907348633
    5. ' [' → logprob: -15.625001907348633
    6. '[]' → logprob: -15.750001907348633
    7. '[len' → logprob: -16.500001907348633
    8. '\[' → logprob: -16.625001907348633
    9. '.' → logprob: -17.000001907348633
    10. '[:' → logprob: -17.875001907348633

Token 39: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.42898479104042053
    2. '1' → logprob: -1.0539847612380981
    3. ' ' → logprob: -8.678984642028809
    4. '2' → logprob: -9.553984642028809
    5. '-' → logprob: -10.428984642028809
    6. '3' → logprob: -12.928984642028809
    7. '4' → logprob: -13.491484642028809
    8. '   ' → logprob: -13.553984642028809
    9. '[' → logprob: -13.678984642028809
    10. ']' → logprob: -13.678984642028809

Token 40: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24514608085155487
    2. '])' → logprob: -1.6201460361480713
    3. ')])' → logprob: -4.74514627456665
    4. '))' → logprob: -4.99514627456665
    5. '),' → logprob: -6.74514627456665
    6. ')]' → logprob: -6.87014627456665
    7. ']' → logprob: -7.99514627456665
    8. '[' → logprob: -8.120145797729492
    9. ' )' → logprob: -8.120145797729492
    10. ',' → logprob: -8.495145797729492

Token 41: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47708994150161743
    2. '
' → logprob: -1.7270898818969727
    3. '\n' → logprob: -2.6020898818969727
    4. '   ' → logprob: -2.8520898818969727
    5. ':
' → logprob: -3.7270898818969727
    6. 'for' → logprob: -4.227089881896973
    7. ')' → logprob: -4.602089881896973
    8. '\' → logprob: -4.977089881896973
    9. ' for' → logprob: -5.727089881896973
    10. '' → logprob: -6.102089881896973

Token 42: ' res' (ID: 694)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.36310821771621704
    2. 'f' → logprob: -1.7381081581115723
    3. 'i' → logprob: -2.6131081581115723
    4. 'r' → logprob: -3.7381081581115723
    5. ':' → logprob: -4.238108158111572
    6. ' for' → logprob: -5.363108158111572
    7. '   ' → logprob: -5.988108158111572
    8. 'n' → logprob: -6.238108158111572
    9. '\' → logprob: -6.363108158111572
    10. 'd' → logprob: -6.863108158111572

Token 43: ',t' (ID: 26927)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6502255797386169
    2. '=' → logprob: -1.1502256393432617
    3. '.' → logprob: -1.9002256393432617
    4. '_' → logprob: -5.775225639343262
    5. '.append' → logprob: -6.025225639343262
    6. ' +=' → logprob: -6.400225639343262
    7. '[' → logprob: -6.650225639343262
    8. ' ' → logprob: -6.650225639343262
    9. 's' → logprob: -7.400225639343262
    10. '[:]' → logprob: -7.900225639343262

Token 44: ' =' (ID: 314)
  Prédit: 'ime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ime' → logprob: -0.6064372062683105
    2. ' =' → logprob: -1.6064372062683105
    3. '=' → logprob: -1.8564372062683105
    4. 'i' → logprob: -3.8564372062683105
    5. 'o' → logprob: -3.8564372062683105
    6. 'a' → logprob: -3.9814372062683105
    7. 'r' → logprob: -4.3564372062683105
    8. 'e' → logprob: -5.2314372062683105
    9. 'emp' → logprob: -5.4814372062683105
    10. 'otal' → logprob: -6.3564372062683105

Token 45: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06215723976492882
    2. ' ' → logprob: -2.812157154083252
    3. '[]' → logprob: -9.18715763092041
    4. '[' → logprob: -10.81215763092041
    5. '[],' → logprob: -11.18715763092041
    6. ' [],' → logprob: -11.43715763092041
    7. ' [' → logprob: -11.56215763092041
    8. ' -' → logprob: -11.68715763092041
    9. ' []' → logprob: -11.81215763092041
    10. '-' → logprob: -12.43715763092041

Token 46: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015957956202328205
    2. '[]' → logprob: -7.001595973968506
    3. '[' → logprob: -8.376595497131348
    4. ' ' → logprob: -8.376595497131348
    5. '[],' → logprob: -8.626595497131348
    6. '[]
' → logprob: -10.751595497131348
    7. '(' → logprob: -12.001595497131348
    8. '-' → logprob: -12.126595497131348
    9. ' [],' → logprob: -12.876595497131348
    10. ' []' → logprob: -13.501595497131348

Token 47: ',-' (ID: 8202)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6710247993469238
    2. ' ' → logprob: -1.2960247993469238
    3. '<|end|>' → logprob: -1.6710247993469238
    4. ' ,' → logprob: -4.046024799346924
    5. ' 
' → logprob: -5.796024799346924
    6. '<|end|>' → logprob: -6.046024799346924
    7. '  ' → logprob: -6.921024799346924
    8. '0' → logprob: -7.671024799346924
    9. '=' → logprob: -7.796024799346924
    10. '  
' → logprob: -7.921024799346924

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004384078551083803
    2. '10' → logprob: -5.7543840408325195
    3. '100' → logprob: -7.1293840408325195
    4. 'float' → logprob: -8.37938404083252
    5. '999' → logprob: -9.25438404083252
    6. ' ' → logprob: -11.12938404083252
    7. '(' → logprob: -11.12938404083252
    8. '987' → logprob: -11.25438404083252
    9. '101' → logprob: -11.75438404083252
    10. 'int' → logprob: -12.12938404083252

Token 49: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29001089930534363
    2. '\n' → logprob: -2.790010929107666
    3. ' 
' → logprob: -3.040010929107666
    4. ' for' → logprob: -3.415010929107666
    5. '<|end|>' → logprob: -3.415010929107666
    6. 'for' → logprob: -4.040010929107666
    7. '\' → logprob: -4.415010929107666
    8. '' → logprob: -4.415010929107666
    9. '  
' → logprob: -4.540010929107666
    10. ' ' → logprob: -4.790010929107666

Token 50: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13286899030208588
    2. ' for' → logprob: -3.257869005203247
    3. '\n' → logprob: -3.382869005203247
    4. 'for' → logprob: -3.882869005203247
    5. ' 
' → logprob: -4.007868766784668
    6. '  
' → logprob: -5.632868766784668
    7. '' → logprob: -5.757868766784668
    8. '    
' → logprob: -6.132868766784668
    9. '<|end|>' → logprob: -6.132868766784668
    10. '\' → logprob: -7.132868766784668

Token 51: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2221661806106567
    2. ' 
' → logprob: -1.2221661806106567
    3. ' for' → logprob: -1.3471661806106567
    4. 'for' (adapté à ' for') → logprob: -2.972166061401367
    5. '<|end|>' → logprob: -3.222166061401367
    6. '\n' → logprob: -3.597166061401367
    7. '
' → logprob: -4.097166061401367
    8. '  
' → logprob: -5.097166061401367
    9. '' → logprob: -6.222166061401367
    10. '\' → logprob: -6.722166061401367

Token 52: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11570978909730911
    2. 'i' → logprob: -3.2407097816467285
    3. ' s' → logprob: -3.8657097816467285
    4. '   ' → logprob: -4.2407097816467285
    5. 's' → logprob: -5.1157097816467285
    6. ' sch' → logprob: -5.4907097816467285
    7. ' a' → logprob: -5.4907097816467285
    8. ' interval' → logprob: -5.9907097816467285
    9. 'a' → logprob: -6.2407097816467285
    10. ' ' → logprob: -6.3657097816467285

Token 53: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05258246511220932
    2. 'in' → logprob: -3.0525825023651123
    3. ' ' → logprob: -5.677582263946533
    4. '  ' → logprob: -8.052582740783691
    5. '	in' → logprob: -9.427582740783691
    6. ',' → logprob: -9.802582740783691
    7. '   ' → logprob: -10.302582740783691
    8. '    ' → logprob: -11.552582740783691
    9. '```' → logprob: -11.802582740783691
    10. ' ,' → logprob: -11.802582740783691

Token 54: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03586531803011894
    2. 'range' → logprob: -3.785865306854248
    3. ' sch' → logprob: -4.410865306854248
    4. ' ' → logprob: -8.535865783691406
    5. 'sch' → logprob: -9.535865783691406
    6. '   ' → logprob: -9.910865783691406
    7. '(range' → logprob: -11.910865783691406
    8. ' xrange' → logprob: -11.910865783691406
    9. '    ' → logprob: -12.035865783691406
    10. '	range' → logprob: -12.035865783691406

Token 55: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.012353180907666683
    2. '(' → logprob: -4.51235294342041
    3. '(len' → logprob: -6.76235294342041
    4. ' (' → logprob: -8.88735294342041
    5. 'n' → logprob: -12.26235294342041
    6. ' n' → logprob: -13.26235294342041
    7. '(s' → logprob: -13.76235294342041
    8. '   ' → logprob: -14.26235294342041
    9. 'len' → logprob: -14.63735294342041
    10. ')' → logprob: -15.26235294342041

Token 56: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005824275780469179
    2. ')' → logprob: -6.005824089050293
    3. ' ):' → logprob: -6.130824089050293
    4. ':' → logprob: -7.130824089050293
    5. '):
' → logprob: -8.005824089050293
    6. '   ' → logprob: -12.130824089050293
    7. ' )' → logprob: -12.380824089050293
    8. ' ' → logprob: -12.505824089050293
    9. ' :' → logprob: -12.505824089050293
    10. ',' → logprob: -12.630824089050293

Token 57: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5386044979095459
    2. '       ' → logprob: -1.788604497909546
    3. '   ' → logprob: -2.538604497909546
    4. ' if' → logprob: -3.163604497909546
    5. ':' → logprob: -3.538604497909546
    6. '    ' → logprob: -4.038604736328125
    7. '[' → logprob: -4.288604736328125
    8. ' :' → logprob: -4.538604736328125
    9. '0' → logprob: -4.663604736328125
    10. '<|end|>' → logprob: -5.288604736328125

Token 58: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.17395128309726715
    2. ' if' → logprob: -2.1739513874053955
    3. 'sch' → logprob: -3.6739513874053955
    4. ' sch' → logprob: -4.298951148986816
    5. '0' → logprob: -5.798951148986816
    6. '1' → logprob: -6.048951148986816
    7. '   ' → logprob: -6.798951148986816
    8. ' ' → logprob: -9.048951148986816
    9. 't' → logprob: -9.423951148986816
    10. 'res' → logprob: -9.798951148986816

Token 59: ' t' (ID: 260)
  Prédit: ' sch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sch' → logprob: -0.0012107107322663069
    2. 'sch' → logprob: -6.751210689544678
    3. 's' → logprob: -11.376211166381836
    4. '   ' → logprob: -12.001211166381836
    5. ' sc' → logprob: -12.001211166381836
    6. '    ' → logprob: -12.126211166381836
    7. ' s' → logprob: -13.001211166381836
    8. '	s' → logprob: -13.126211166381836
    9. '(s' → logprob: -13.876211166381836
    10. ' sche' → logprob: -14.001211166381836

Token 60: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0657263696193695
    2. '<=' → logprob: -2.8157262802124023
    3. ' <' → logprob: -5.690726280212402
    4. ' <=' → logprob: -8.190726280212402
    5. ' ' → logprob: -10.315726280212402
    6. '<int' → logprob: -10.690726280212402
    7. '<s' → logprob: -12.440726280212402
    8. '<
' → logprob: -12.565726280212402
    9. '[' → logprob: -12.690726280212402
    10. '<size' → logprob: -12.815726280212402

Token 61: 'sch' (ID: 7253)
  Prédit: 'sch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sch' → logprob: -0.007416732143610716
    2. ' sch' → logprob: -5.007416725158691
    3. 's' → logprob: -8.507416725158691
    4. 'sc' → logprob: -9.007416725158691
    5. '=' → logprob: -9.257416725158691
    6. ' ' → logprob: -9.507416725158691
    7. '   ' → logprob: -9.632416725158691
    8. 'scht' → logprob: -10.507416725158691
    9. ' ' → logprob: -10.757416725158691
    10. 'sche' → logprob: -11.007416725158691

Token 62: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.758300438988954e-05
    2. '[' → logprob: -9.250097274780273
    3. '```' → logprob: -14.875097274780273
    4. '[
' → logprob: -16.000097274780273
    5. '[s' → logprob: -16.125097274780273
    6. ' [' → logprob: -16.250097274780273
    7. '[a' → logprob: -16.250097274780273
    8. ' ' → logprob: -16.375097274780273
    9. '[j' → logprob: -16.500097274780273
    10. '[][' → logprob: -16.625097274780273

Token 63: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2815376818180084
    2. '[' → logprob: -1.406537652015686
    3. ']' → logprob: -8.906538009643555
    4. ' ][' → logprob: -9.656538009643555
    5. ')[' → logprob: -10.031538009643555
    6. '>[' → logprob: -10.406538009643555
    7. '   ' → logprob: -10.531538009643555
    8. ' ' → logprob: -11.406538009643555
    9. '1' → logprob: -11.531538009643555
    10. ' [' → logprob: -11.656538009643555

Token 64: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.869017852295656e-06
    2. ' ' → logprob: -12.375006675720215
    3. '1' → logprob: -13.375006675720215
    4. 'start' → logprob: -15.750006675720215
    5. '[' → logprob: -16.37500762939453
    6. '۰' → logprob: -16.43750762939453
    7. '=' → logprob: -16.87500762939453
    8. '০' → logprob: -16.93750762939453
    9. '```' → logprob: -17.00000762939453
    10. '०' → logprob: -17.18750762939453

Token 65: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.6789430975914001
    2. '):' → logprob: -0.8039430975914001
    3. ']' → logprob: -3.428943157196045
    4. ':' → logprob: -4.803943157196045
    5. ')' → logprob: -5.678943157196045
    6. ']):' → logprob: -8.178942680358887
    7. ' and' → logprob: -8.303942680358887
    8. ' ):' → logprob: -9.553942680358887
    9. '[' → logprob: -9.678942680358887
    10. ']>' → logprob: -9.678942680358887

Token 66: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.025449268519878387
    2. '       ' → logprob: -4.150449275970459
    3. '=' → logprob: -5.150449275970459
    4. '):' → logprob: -6.900449275970459
    5. ' :' → logprob: -7.025449275970459
    6. ' =' → logprob: -7.400449275970459
    7. ':
' → logprob: -8.1504487991333
    8. '           ' → logprob: -9.1504487991333
    9. '<|end|>' → logprob: -9.2754487991333
    10. '   ' → logprob: -9.4004487991333

Token 67: ' t' (ID: 260)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7918667197227478
    2. ' res' → logprob: -0.7918667197227478
    3. '           ' → logprob: -3.1668667793273926
    4. '               ' → logprob: -4.041866779327393
    5. 't' (adapté à ' t') → logprob: -4.166866779327393
    6. '=' → logprob: -4.541866779327393
    7. ' t' → logprob: -5.541866779327393
    8. 's' → logprob: -6.541866779327393
    9. ' =' → logprob: -6.916866779327393
    10. '       ' → logprob: -7.791866779327393

Token 68: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01818517968058586
    2. ' =' → logprob: -4.018185138702393
    3. '=s' → logprob: -10.26818561553955
    4. '=sc' → logprob: -15.89318561553955
    5. ' ' → logprob: -16.143184661865234
    6. '=int' → logprob: -16.393184661865234
    7. '＝' → logprob: -16.643184661865234
    8. '=
' → logprob: -16.893184661865234
    9. '=

' → logprob: -17.018184661865234
    10. ',' → logprob: -17.893184661865234

Token 69: ' sch' (ID: 1781)
  Prédit: 'sch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sch' → logprob: -6.0033853515051305e-05
    2. ' sch' → logprob: -10.000060081481934
    3. '   ' → logprob: -12.375060081481934
    4. 's' → logprob: -12.500060081481934
    5. ' ' → logprob: -13.125060081481934
    6. 'sc' → logprob: -13.500060081481934
    7. 'scht' → logprob: -13.875060081481934
    8. 'sche' → logprob: -14.375060081481934
    9. '  ' → logprob: -14.375060081481934
    10. '	s' → logprob: -14.875060081481934

Token 70: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.069664333248511e-05
    2. '[' → logprob: -10.875020980834961
    3. '```' → logprob: -14.750020980834961
    4. ' [' → logprob: -15.125020980834961
    5. '[s' → logprob: -15.625020980834961
    6. ' ' → logprob: -16.00002098083496
    7. '[I' → logprob: -16.12502098083496
    8. '[
' → logprob: -16.37502098083496
    9. '   ' → logprob: -16.75002098083496
    10. 'i' → logprob: -16.87502098083496

Token 71: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.01059297937899828
    2. '[' → logprob: -4.635592937469482
    3. ']' → logprob: -7.385592937469482
    4. ' ][' → logprob: -9.76059341430664
    5. '1' → logprob: -10.01059341430664
    6. '"][' → logprob: -10.13559341430664
    7. ''][' → logprob: -10.38559341430664
    8. ')[' → logprob: -11.76059341430664
    9. ''s' → logprob: -12.38559341430664
    10. '   ' → logprob: -12.51059341430664

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '0' → logprob: -17.5
    4. '۱' → logprob: -17.5
    5. '```' → logprob: -17.625
    6. '   ' → logprob: -18.125
    7. '2' → logprob: -18.1875
    8. ']' → logprob: -18.6875
    9. '  ' → logprob: -19.0
    10. '[' → logprob: -19.0625

Token 73: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16509446501731873
    2. ')
' → logprob: -2.0400943756103516
    3. '
' → logprob: -4.165094375610352
    4. '       ' → logprob: -5.915094375610352
    5. '           ' → logprob: -6.540094375610352
    6. ']' → logprob: -7.415094375610352
    7. '   ' → logprob: -7.415094375610352
    8. ' ' → logprob: -8.540094375610352
    9. '
' → logprob: -8.790094375610352
    10. ')
' → logprob: -8.790094375610352

Token 74: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08786943554878235
    2. '
' → logprob: -2.58786940574646
    3. '  
' → logprob: -6.212869644165039
    4. '       ' → logprob: -6.212869644165039
    5. ' 
' → logprob: -6.212869644165039
    6. '<|end|>' → logprob: -7.212869644165039
    7. '            
' → logprob: -7.837869644165039
    8. '    
' → logprob: -8.212869644165039
    9. '+' → logprob: -8.337869644165039
    10. '
' → logprob: -8.337869644165039

Token 75: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.47446128726005554
    2. ' res' → logprob: -0.9744613170623779
    3. '           ' → logprob: -8.099461555480957
    4. '       ' → logprob: -10.099461555480957
    5. '   ' → logprob: -10.474461555480957
    6. ' ' → logprob: -12.224461555480957
    7. '	res' → logprob: -12.974461555480957
    8. '    ' → logprob: -13.349461555480957
    9. '  ' → logprob: -14.599461555480957
    10. ' ' → logprob: -15.349461555480957

Token 76: '+=' (ID: 18287)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0015500946901738644
    2. '+=' → logprob: -6.876550197601318
    3. ' +=' → logprob: -7.751550197601318
    4. ' +' → logprob: -9.37654972076416
    5. '+++' → logprob: -14.62654972076416
    6. '+="' → logprob: -14.75154972076416
    7. '+='' → logprob: -14.75154972076416
    8. '<|end|>' → logprob: -15.12654972076416
    9. ' ' → logprob: -15.62654972076416
    10. '++' → logprob: -15.75154972076416

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -17.625045776367188
    4. '+' → logprob: -18.687545776367188
    5. '  ' → logprob: -18.875045776367188
    6. '<|end|>' → logprob: -18.875045776367188
    7. '１' → logprob: -19.000045776367188
    8. '```' → logprob: -19.062545776367188
    9. ' ' → logprob: -19.687545776367188
    10. '۱' → logprob: -20.062545776367188

Token 78: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09488774091005325
    2. '\n' → logprob: -3.2198877334594727
    3. '<|end|>' → logprob: -3.8448877334594727
    4. '   ' → logprob: -3.9698877334594727
    5. ')' → logprob: -5.469887733459473
    6. 'return' → logprob: -7.094887733459473
    7. '' → logprob: -7.219887733459473
    8. 'print' → logprob: -7.219887733459473
    9. '```' → logprob: -7.594887733459473
    10. ' ' → logprob: -7.594887733459473

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06735781580209732
    2. '\n' → logprob: -3.5673577785491943
    3. '<|end|>' → logprob: -4.567358016967773
    4. '\' → logprob: -4.942358016967773
    5. '
' → logprob: -5.317358016967773
    6. ' ' → logprob: -5.442358016967773
    7. ')' → logprob: -5.942358016967773
    8. '```' → logprob: -6.442358016967773
    9. 'print' → logprob: -6.692358016967773
    10. '    
' → logprob: -7.317358016967773

Token 80: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009610169567167759
    2. ' return' → logprob: -6.134610176086426
    3. '
' → logprob: -6.384610176086426
    4. 'return' → logprob: -6.509610176086426
    5. '\n' → logprob: -6.509610176086426
    6. '\' → logprob: -7.509610176086426
    7. ')' → logprob: -7.509610176086426
    8. '    
' → logprob: -7.634610176086426
    9. ' ' → logprob: -8.009610176086426
    10. '' → logprob: -8.384610176086426

Token 81: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05577053129673004
    2. '(res' → logprob: -2.9307706356048584
    3. '()' → logprob: -7.055770397186279
    4. '('' → logprob: -11.805770874023438
    5. ' (' → logprob: -11.930770874023438
    6. '(`' → logprob: -13.055770874023438
    7. '("("' → logprob: -13.055770874023438
    8. '(
' → logprob: -13.430770874023438
    9. ' ' → logprob: -13.680770874023438
    10. '(

' → logprob: -14.305770874023438

Token 82: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.7120533811976202e-05
    2. ' res' → logprob: -11.000017166137695
    3. '(res' → logprob: -15.250017166137695
    4. ')' → logprob: -16.500017166137695
    5. 're' → logprob: -19.250017166137695
    6. 'r' → logprob: -20.250017166137695
    7. '	res' → logprob: -21.000017166137695
    8. ' ' → logprob: -21.875017166137695
    9. '$res' → logprob: -21.875017166137695
    10. 'resc' → logprob: -22.125017166137695

Token 83: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -14.375000953674316
    3. ')
' → logprob: -15.625000953674316
    4. ')`' → logprob: -18.0
    5. ')

' → logprob: -19.25
    6. '))' → logprob: -19.5
    7. ')#' → logprob: -19.5
    8. '')' → logprob: -19.875
    9. ')**' → logprob: -19.875
    10. ')}' → logprob: -20.125

Token 84: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6375752687454224
    2. '<|end|>' → logprob: -2.012575149536133
    3. '
' → logprob: -2.512575149536133
    4. '\' → logprob: -2.512575149536133
    5. '(' → logprob: -3.137575149536133
    6. '#' → logprob: -3.262575149536133
    7. '```' → logprob: -3.512575149536133
    8. '\n' → logprob: -3.887575149536133
    9. '_' → logprob: -4.512575149536133
    10. '()' → logprob: -4.637575149536133

Token 85: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0022581410594284534
    2. '__' → logprob: -6.37725830078125
    3. ' ' → logprob: -8.25225830078125
    4. '_' → logprob: -8.50225830078125
    5. ' ' → logprob: -9.62725830078125
    6. ' _' → logprob: -10.75225830078125
    7. '  ' → logprob: -13.25225830078125
    8. ' ___' → logprob: -14.12725830078125
    9. ' ' → logprob: -14.25225830078125
    10. ' ‌' → logprob: -14.62725830078125

Token 86: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.23041924834251404
    2. '_' → logprob: -1.8554192781448364
    3. ' ==' → logprob: -3.480419158935547
    4. ' __' → logprob: -5.105419158935547
    5. '==' → logprob: -6.105419158935547
    6. '.' → logprob: -6.230419158935547
    7. '<|end|>' → logprob: -6.230419158935547
    8. ' ' → logprob: -6.355419158935547
    9. ' _' → logprob: -6.855419158935547
    10. '[' → logprob: -7.105419158935547

Token 87: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0002492999192327261
    2. '_' → logprob: -8.750248908996582
    3. '__.__' → logprob: -9.750248908996582
    4. '___' → logprob: -11.500248908996582
    5. '__.' → logprob: -11.625248908996582
    6. '==' → logprob: -11.875248908996582
    7. '.__' → logprob: -13.125248908996582
    8. '____' → logprob: -14.250248908996582
    9. '__["' → logprob: -14.250248908996582
    10. '.' → logprob: -14.375248908996582

Token 88: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2970678210258484
    2. '__' → logprob: -1.5470678806304932
    3. '==' → logprob: -3.422067880630493
    4. '[' → logprob: -5.297067642211914
    5. '=="' → logprob: -5.797067642211914
    6. '.' → logprob: -6.672067642211914
    7. '_' → logprob: -7.672067642211914
    8. '=='' → logprob: -8.047067642211914
    9. '.__' → logprob: -8.422067642211914
    10. '["' → logprob: -8.422067642211914

Token 89: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3132755756378174
    2. ''' → logprob: -1.3132755756378174
    3. ' "__' → logprob: -11.813275337219238
    4. ' "' → logprob: -12.438275337219238
    5. '__' → logprob: -14.188275337219238
    6. ' '' → logprob: -14.313275337219238
    7. ' '__' → logprob: -14.563275337219238
    8. '"user' → logprob: -15.688275337219238
    9. ''"' → logprob: -16.438276290893555
    10. ''s' → logprob: -16.563276290893555

Token 90: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00016504127415828407
    2. 'name' → logprob: -8.750164985656738
    3. 'm' → logprob: -12.625164985656738
    4. 'ma' → logprob: -13.500164985656738
    5. 'built' → logprob: -14.250164985656738
    6. '__' → logprob: -14.375164985656738
    7. '_main' → logprob: -15.750164985656738
    8. '__':
' → logprob: -16.375165939331055
    9. '7' → logprob: -16.750165939331055
    10. '6' → logprob: -17.250165939331055

Token 91: '__':
' (ID: 39314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.12766052782535553
    2. '__':
' → logprob: -2.1276605129241943
    3. '_' → logprob: -7.252660751342773
    4. ''' → logprob: -11.877660751342773
    5. '__:' → logprob: -12.002660751342773
    6. '_'' → logprob: -12.752660751342773
    7. '__":
' → logprob: -13.127660751342773
    8. '':' → logprob: -13.252660751342773
    9. '__.' → logprob: -13.502660751342773
    10. '__('' → logprob: -13.752660751342773

Token 92: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0009212272125296295
    2. '	main' → logprob: -7.875921249389648
    3. ' ' → logprob: -9.125921249389648
    4. '   ' → logprob: -9.125921249389648
    5. ' ' → logprob: -9.250921249389648
    6. 'main' → logprob: -9.375921249389648
    7. '<|end|>' → logprob: -10.250921249389648
    8. '`' → logprob: -10.500921249389648
    9. '```' → logprob: -11.000921249389648
    10. '(main' → logprob: -11.500921249389648

Token 93: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.47409215569496155
    2. 'main' (adapté à ' main') → logprob: -0.9740921258926392
    3. '	main' → logprob: -11.224092483520508
    4. '   ' → logprob: -14.099092483520508
    5. ' ' → logprob: -14.474092483520508
    6. ' ' → logprob: -15.224092483520508
    7. '  ' → logprob: -16.474092483520508
    8. 'maine' → logprob: -16.724092483520508
    9. '_main' → logprob: -17.474092483520508
    10. '(main' → logprob: -17.474092483520508

Token 94: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.061999399214982986
    2. '(' → logprob: -2.8119993209838867
    3. '```' → logprob: -12.061999320983887
    4. '(
' → logprob: -12.186999320983887
    5. '()`' → logprob: -12.186999320983887
    6. '`()' → logprob: -12.561999320983887
    7. '()
' → logprob: -12.936999320983887
    8. ' ()' → logprob: -13.686999320983887
    9. ')' → logprob: -13.811999320983887
    10. '()">' → logprob: -14.061999320983887


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 92
Tokens correctement prédits (1ère position, stricte): 41
Tokens correctement prédits (1ère position, avec adaptation): 44
Tokens correctement prédits (top 10): 73
Précision stricte (1ère position): 44.57%
Précision adaptée (1ère position): 47.83%
Précision (top 10): 79.35%
================================================================================
