================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# https://onlinejudge.u-aizu.ac.jp/courses/lesson/1/ALDS1/15/ALDS1_15_C

n = int(input())
lst = [list(map(int, input().split())) for _ in range(n)]
lst.sort(key=lambda x: x[1])
now = -1
ans = 0
for s, t in lst:
    if now < s:
        ans += 1
        now = t
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' https' (ID: 5918)
  → Token d'amorce (pas de prédiction)

Token 2: '://' (ID: 1684)
  → Token d'amorce (pas de prédiction)

Token 3: 'online' (ID: 34978)
  Prédit: 'github'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'github' → logprob: -0.13109871745109558
    2. 'docs' → logprob: -3.006098747253418
    3. 'stackoverflow' → logprob: -4.006098747253418
    4. 'www' → logprob: -4.131098747253418
    5. 'p' → logprob: -4.256098747253418
    6. 'paste' → logprob: -5.131098747253418
    7. 'raw' → logprob: -5.256098747253418
    8. 'gist' → logprob: -5.631098747253418
    9. 'hug' → logprob: -6.131098747253418
    10. 'bit' → logprob: -6.631098747253418

Token 4: 'judge' (ID: 163735)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.35269391536712646
    2. '-python' → logprob: -2.102694034576416
    3. 'g' → logprob: -2.852694034576416
    4. '```' → logprob: -3.477694034576416
    5. 's' → logprob: -4.352694034576416
    6. '-code' → logprob: -5.102694034576416
    7. 'python' → logprob: -5.227694034576416
    8. '#' → logprob: -5.477694034576416
    9. 'm' → logprob: -5.727694034576416
    10. '.py' → logprob: -5.852694034576416

Token 5: '.u' (ID: 22262)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.003974393010139465
    2. '.u' → logprob: -6.128974437713623
    3. '`.' → logprob: -8.003973960876465
    4. ' .' → logprob: -8.128973960876465
    5. '.org' → logprob: -8.253973960876465
    6. '.uk' → logprob: -8.378973960876465
    7. '.com' → logprob: -8.628973960876465
    8. '```' → logprob: -9.503973960876465
    9. '`.`' → logprob: -9.503973960876465
    10. ''.' → logprob: -10.003973960876465

Token 6: '-a' (ID: 8575)
  Prédit: 'rb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rb' → logprob: -0.2637940049171448
    2. 'b' → logprob: -3.0137939453125
    3. 'rl' → logprob: -3.6387939453125
    4. 'ral' → logprob: -4.1387939453125
    5. 'r' → logprob: -4.2637939453125
    6. 'bm' → logprob: -4.2637939453125
    7. 's' → logprob: -4.3887939453125
    8. 'a' → logprob: -4.7637939453125
    9. 'boj' → logprob: -4.7637939453125
    10. 'sr' → logprob: -4.8887939453125

Token 7: 'izu' (ID: 75080)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07900071889162064
    2. 'cc' → logprob: -3.20400071144104
    3. 'cs' → logprob: -4.204000949859619
    4. 'cu' → logprob: -4.954000949859619
    5. 'ic' → logprob: -5.954000949859619
    6. 'r' → logprob: -6.704000949859619
    7. 'co' → logprob: -6.954000949859619
    8. 'cz' → logprob: -6.954000949859619
    9. 'cb' → logprob: -7.079000949859619
    10. 'cj' → logprob: -7.079000949859619

Token 8: '.ac' (ID: 25905)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7669335007667542
    2. '.jp' → logprob: -1.2669334411621094
    3. '.c' → logprob: -1.6419334411621094
    4. '.u' → logprob: -3.8919334411621094
    5. '.ac' → logprob: -4.141933441162109
    6. '.j' → logprob: -5.016933441162109
    7. '.github' → logprob: -5.641933441162109
    8. ' .' → logprob: -6.391933441162109
    9. '.org' → logprob: -6.391933441162109
    10. '.net' → logprob: -6.516933441162109

Token 9: '.jp' (ID: 39524)
  Prédit: 'jp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jp' → logprob: -0.8556554317474365
    2. '.jp' → logprob: -1.8556554317474365
    3. 'o' → logprob: -3.1056554317474365
    4. 'os' → logprob: -3.6056554317474365
    5. 'sys' → logprob: -3.6056554317474365
    6. 'js' → logprob: -3.8556554317474365
    7. 'm' → logprob: -3.8556554317474365
    8. '.' → logprob: -3.8556554317474365
    9. 'sub' → logprob: -3.8556554317474365
    10. 'src' → logprob: -3.9806554317474365

Token 10: '/c' (ID: 4308)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.01812325417995453
    2. '_' → logprob: -4.143123149871826
    3. '#' → logprob: -6.893123149871826
    4. '.' → logprob: -8.518123626708984
    5. '```' → logprob: -9.143123626708984
    6. '/p' → logprob: -9.518123626708984
    7. '#include' → logprob: -9.643123626708984
    8. '/
' → logprob: -9.768123626708984
    9. '#!/' → logprob: -10.018123626708984
    10. '-' → logprob: -10.268123626708984

Token 11: 'ourses' (ID: 24149)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.8061357736587524
    2. 'ont' → logprob: -0.8061357736587524
    3. 'ode' → logprob: -2.556135654449463
    4. 'odes' → logprob: -5.431135654449463
    5. 'submit' → logprob: -5.556135654449463
    6. '```' → logprob: -6.056135654449463
    7. 'r' → logprob: -6.181135654449463
    8. 'sources' → logprob: -6.806135654449463
    9. 'solutions' → logprob: -6.806135654449463
    10. 'src' → logprob: -7.056135654449463

Token 12: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.00011629798245849088
    2. '/tasks' → logprob: -10.625116348266602
    3. '```' → logprob: -10.750116348266602
    4. '/dev' → logprob: -10.875116348266602
    5. '/users' → logprob: -11.375116348266602
    6. ' /' → logprob: -11.750116348266602
    7. '/problems' → logprob: -11.750116348266602
    8. '#' → logprob: -12.500116348266602
    9. '#!/' → logprob: -12.750116348266602
    10. '/items' → logprob: -13.000116348266602

Token 13: 'lesson' (ID: 89931)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.6037293672561646
    2. 'dp' → logprob: -1.2287293672561646
    3. 'pro' → logprob: -2.478729248046875
    4. '7' → logprob: -4.228729248046875
    5. 'gr' → logprob: -5.478729248046875
    6. 'jp' → logprob: -5.478729248046875
    7. 'abc' → logprob: -5.853729248046875
    8. '4' → logprob: -6.103729248046875
    9. 'p' → logprob: -6.103729248046875
    10. 'b' → logprob: -6.103729248046875

Token 14: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.00282924622297287
    2. '_' → logprob: -6.502829074859619
    3. '-' → logprob: -7.127829074859619
    4. 's' → logprob: -8.127829551696777
    5. '#' → logprob: -9.252829551696777
    6. '```' → logprob: -10.502829551696777
    7. '.' → logprob: -11.252829551696777
    8. '7' → logprob: -11.627829551696777
    9. '0' → logprob: -11.877829551696777
    10. '4' → logprob: -12.127829551696777

Token 15: '1' (ID: 16)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.4202633500099182
    2. '4' → logprob: -2.4202632904052734
    3. '1' → logprob: -2.9202632904052734
    4. '2' → logprob: -3.0452632904052734
    5. '3' → logprob: -3.1702632904052734
    6. '5' → logprob: -3.4202632904052734
    7. '7' → logprob: -3.4202632904052734
    8. '9' → logprob: -4.545263290405273
    9. '8' → logprob: -4.920263290405273
    10. '6' → logprob: -5.170263290405273

Token 16: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.23689095675945282
    2. '_' → logprob: -1.7368909120559692
    3. 's' → logprob: -3.611891031265259
    4. '#' → logprob: -5.98689079284668
    5. '```' → logprob: -7.11189079284668
    6. '#!/' → logprob: -7.23689079284668
    7. '.' → logprob: -7.61189079284668
    8. '/_' → logprob: -7.86189079284668
    9. '_/' → logprob: -8.36189079284668
    10. '9' → logprob: -8.48689079284668

Token 17: 'AL' (ID: 1483)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.06383731961250305
    2. '_' → logprob: -3.5638372898101807
    3. '#' → logprob: -3.6888372898101807
    4. 'd' → logprob: -6.06383752822876
    5. '.' → logprob: -6.31383752822876
    6. 's' → logprob: -6.93883752822876
    7. '#!/' → logprob: -6.93883752822876
    8. ' ' → logprob: -7.43883752822876
    9. 'a' → logprob: -7.68883752822876
    10. 'n' → logprob: -8.688837051391602

Token 18: 'DS' (ID: 8804)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.8401277661323547
    2. 'G' → logprob: -1.09012770652771
    3. 'DS' → logprob: -2.71512770652771
    4. 'L' → logprob: -3.34012770652771
    5. '_' → logprob: -3.96512770652771
    6. 'D' → logprob: -4.090127944946289
    7. 'g' → logprob: -4.215127944946289
    8. 'C' → logprob: -4.840127944946289
    9. '/A' → logprob: -4.840127944946289
    10. 'l' → logprob: -4.840127944946289

Token 19: '1' (ID: 16)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.36856457591056824
    2. '/' → logprob: -1.4935646057128906
    3. '#' → logprob: -2.6185646057128906
    4. '#include' → logprob: -5.743564605712891
    5. '```' → logprob: -6.243564605712891
    6. 'import' → logprob: -6.868564605712891
    7. '.' → logprob: -7.368564605712891
    8. 'def' → logprob: -7.368564605712891
    9. '#!/' → logprob: -7.993564605712891
    10. 'C' → logprob: -8.36856460571289

Token 20: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.022067606449127197
    2. '#' → logprob: -5.397067546844482
    3. '_' → logprob: -5.397067546844482
    4. 'A' → logprob: -5.647067546844482
    5. '#include' → logprob: -6.272067546844482
    6. 'C' → logprob: -7.147067546844482
    7. '7' → logprob: -7.147067546844482
    8. '4' → logprob: -7.272067546844482
    9. '/A' → logprob: -7.272067546844482
    10. '```' → logprob: -7.522067546844482

Token 21: '15' (ID: 1055)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.17221173644065857
    2. '_' → logprob: -2.6722116470336914
    3. '#' → logprob: -3.0472116470336914
    4. 'A' → logprob: -3.9222116470336914
    5. 'C' → logprob: -5.672211647033691
    6. 'import' → logprob: -5.922211647033691
    7. '#include' → logprob: -6.047211647033691
    8. 'D' → logprob: -6.172211647033691
    9. 'def' → logprob: -6.172211647033691
    10. '#!/' → logprob: -6.297211647033691

Token 22: '/' (ID: 14)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1244040727615356
    2. 'd' → logprob: -1.3744040727615356
    3. '#' → logprob: -2.749403953552246
    4. 'def' → logprob: -2.749403953552246
    5. 'N' → logprob: -2.874403953552246
    6. 'D' → logprob: -2.874403953552246
    7. 'A' → logprob: -3.624403953552246
    8. 'a' → logprob: -3.624403953552246
    9. 'from' → logprob: -3.749403953552246
    10. 'H' → logprob: -4.124403953552246

Token 23: 'AL' (ID: 1483)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7518505454063416
    2. 'n' → logprob: -1.2518506050109863
    3. 'D' → logprob: -3.2518506050109863
    4. 'N' → logprob: -3.2518506050109863
    5. '#' → logprob: -3.3768506050109863
    6. 'a' → logprob: -3.6268506050109863
    7. 'A' → logprob: -3.8768506050109863
    8. 'def' → logprob: -3.8768506050109863
    9. 'H' → logprob: -4.251850605010986
    10. 'i' → logprob: -5.001850605010986

Token 24: 'DS' (ID: 8804)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.6723655462265015
    2. '#' → logprob: -1.7973655462265015
    3. '_' → logprob: -1.7973655462265015
    4. 'D' → logprob: -2.172365665435791
    5. 'C' → logprob: -2.547365665435791
    6. 'G' → logprob: -2.672365665435791
    7. 'd' → logprob: -3.797365665435791
    8. 'A' → logprob: -4.047365665435791
    9. 'def' → logprob: -4.172365665435791
    10. '```' → logprob: -4.172365665435791

Token 25: '1' (ID: 16)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5229679346084595
    2. 'def' → logprob: -2.02296781539917
    3. '#' → logprob: -3.02296781539917
    4. '.' → logprob: -3.14796781539917
    5. '[' → logprob: -3.64796781539917
    6. 'I' → logprob: -4.14796781539917
    7. 'import' → logprob: -4.14796781539917
    8. ':' → logprob: -4.27296781539917
    9. '```' → logprob: -4.27296781539917
    10. 'C' → logprob: -4.39796781539917

Token 26: '_' (ID: 62)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.8131263256072998
    2. 'B' → logprob: -1.5631263256072998
    3. 'C' → logprob: -1.5631263256072998
    4. 'D' → logprob: -2.8131263256073
    5. '/' → logprob: -4.188126564025879
    6. 'F' → logprob: -4.313126564025879
    7. '_A' → logprob: -4.313126564025879
    8. '_B' → logprob: -4.938126564025879
    9. '20' → logprob: -4.938126564025879
    10. 'L' → logprob: -5.688126564025879

Token 27: '15' (ID: 1055)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.7337102293968201
    2. 'A' → logprob: -1.4837102890014648
    3. 'B' → logprob: -1.6087102890014648
    4. 'D' → logprob: -3.233710289001465
    5. '_B' → logprob: -4.608710289001465
    6. '_C' → logprob: -5.358710289001465
    7. '_A' → logprob: -5.358710289001465
    8. '_D' → logprob: -5.483710289001465
    9. 'a' → logprob: -5.733710289001465
    10. 'E' → logprob: -6.421210289001465

Token 28: '_C' (ID: 1720)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0965683460235596
    2. 'd' → logprob: -1.8465683460235596
    3. '#' → logprob: -2.3465683460235596
    4. 'n' → logprob: -2.5965683460235596
    5. '.' → logprob: -2.7215683460235596
    6. '(' → logprob: -3.0965683460235596
    7. 'i' → logprob: -3.4715683460235596
    8. 'a' → logprob: -3.4715683460235596
    9. 'def' → logprob: -3.5965683460235596
    10. '_' → logprob: -3.9715683460235596

Token 29: '

' (ID: 279)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.904402494430542
    2. 'd' → logprob: -1.154402494430542
    3. 'a' → logprob: -2.779402494430542
    4. 'i' → logprob: -3.279402494430542
    5. '#' → logprob: -3.779402494430542
    6. 'N' → logprob: -3.904402494430542
    7. 's' → logprob: -4.029402732849121
    8. 'D' → logprob: -4.154402732849121
    9. 'A' → logprob: -4.404402732849121
    10. 'H' → logprob: -4.654402732849121

Token 30: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6346762776374817
    2. 'd' → logprob: -1.134676218032837
    3. 'a' → logprob: -2.884676218032837
    4. 'def' → logprob: -4.259676456451416
    5. 'N' → logprob: -4.384676456451416
    6. 'i' → logprob: -4.509676456451416
    7. 'D' → logprob: -4.759676456451416
    8. '#' → logprob: -4.759676456451416
    9. 's' → logprob: -4.884676456451416
    10. 'A' → logprob: -5.384676456451416

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36424678564071655
    2. ',' → logprob: -1.4892468452453613
    3. '=' → logprob: -2.6142468452453613
    4. ' ' → logprob: -5.114246845245361
    5. ' ,' → logprob: -7.989246845245361
    6. ' =
' → logprob: -10.114246368408203
    7. '[' → logprob: -10.364246368408203
    8. '=int' → logprob: -10.614246368408203
    9. ')' → logprob: -11.239246368408203
    10. '.' → logprob: -11.239246368408203

Token 32: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.07895786315202713
    2. 'int' → logprob: -2.5789577960968018
    3. ' ' → logprob: -9.703957557678223
    4. ' input' → logprob: -13.453957557678223
    5. '[int' → logprob: -13.578957557678223
    6. '0' → logprob: -13.828957557678223
    7. '10' → logprob: -14.453957557678223
    8. '=int' → logprob: -14.578957557678223
    9. 'input' → logprob: -14.703957557678223
    10. '1' → logprob: -14.828957557678223

Token 33: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.25219210982322693
    2. '(' → logprob: -1.5021921396255493
    3. 'input' → logprob: -8.752192497253418
    4. '()' → logprob: -9.627192497253418
    5. ' (' → logprob: -10.752192497253418
    6. '(n' → logprob: -12.502192497253418
    7. '(
' → logprob: -12.877192497253418
    8. '(in' → logprob: -13.002192497253418
    9. '=input' → logprob: -13.502192497253418
    10. '('' → logprob: -13.502192497253418

Token 34: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7533151507377625
    2. '()' → logprob: -0.8783151507377625
    3. '())' → logprob: -2.2533152103424072
    4. '(' → logprob: -4.753314971923828
    5. '))' → logprob: -11.753314971923828
    6. '().' → logprob: -12.503314971923828
    7. '(
' → logprob: -13.003314971923828
    8. '`)' → logprob: -13.003314971923828
    9. ' )' → logprob: -13.128314971923828
    10. '[' → logprob: -13.378314971923828

Token 35: 'lst' (ID: 65430)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.19357600808143616
    2. ' a' → logprob: -2.6935760974884033
    3. 's' → logprob: -2.9435760974884033
    4. ' A' → logprob: -4.193575859069824
    5. 'data' → logprob: -4.568575859069824
    6. 'd' → logprob: -4.818575859069824
    7. 'A' → logprob: -5.443575859069824
    8. ' ' → logprob: -5.693575859069824
    9. 'arr' → logprob: -6.193575859069824
    10. '[' → logprob: -6.818575859069824

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.781198263168335
    2. '[' → logprob: -0.906198263168335
    3. '.' → logprob: -2.531198263168335
    4. '=' → logprob: -3.031198263168335
    5. '.append' → logprob: -5.781198501586914
    6. '_' → logprob: -6.406198501586914
    7. ')' → logprob: -6.531198501586914
    8. '[:]' → logprob: -6.906198501586914
    9. '[]' → logprob: -7.031198501586914
    10. 's' → logprob: -7.656198501586914

Token 37: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.3362562656402588
    2. '[]' → logprob: -1.8362562656402588
    3. 'list' → logprob: -2.336256265640259
    4. '[' → logprob: -3.586256265640259
    5. '(list' → logprob: -7.21125602722168
    6. '[int' → logprob: -7.58625602722168
    7. '[input' → logprob: -7.96125602722168
    8. ' list' → logprob: -9.96125602722168
    9. '[List' → logprob: -10.83625602722168
    10. '[str' → logprob: -11.08625602722168

Token 38: 'list' (ID: 2641)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.003393967868760228
    2. 'list' → logprob: -6.87839412689209
    3. 'tuple' → logprob: -7.12839412689209
    4. ' int' → logprob: -7.37839412689209
    5. ']int' → logprob: -8.25339412689209
    6. '0' → logprob: -8.37839412689209
    7. ']' → logprob: -8.87839412689209
    8. 'input' → logprob: -9.37839412689209
    9. '(int' → logprob: -9.50339412689209
    10. 'map' → logprob: -9.87839412689209

Token 39: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -3.976922744186595e-05
    2. '(' → logprob: -10.625040054321289
    3. '()' → logprob: -11.250040054321289
    4. 'map' → logprob: -13.750040054321289
    5. '(input' → logprob: -14.125040054321289
    6. '(range' → logprob: -15.000040054321289
    7. '(int' → logprob: -16.25004005432129
    8. '	map' → logprob: -17.00004005432129
    9. '(m' → logprob: -17.25004005432129
    10. ' map' → logprob: -17.50004005432129

Token 40: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00013119110371917486
    2. '(' → logprob: -9.750131607055664
    3. '(lambda' → logprob: -10.375131607055664
    4. '(str' → logprob: -10.875131607055664
    5. '<int' → logprob: -11.625131607055664
    6. ',int' → logprob: -12.375131607055664
    7. 'int' → logprob: -12.375131607055664
    8. ']int' → logprob: -13.750131607055664
    9. '(input' → logprob: -14.000131607055664
    10. ')' → logprob: -14.125131607055664

Token 41: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.36484381556510925
    2. ',input' → logprob: -1.2398438453674316
    3. ',' → logprob: -4.364843845367432
    4. 'input' → logprob: -6.364843845367432
    5. '(' → logprob: -6.614843845367432
    6. ' input' → logprob: -8.364843368530273
    7. ')' → logprob: -8.739843368530273
    8. '=input' → logprob: -10.239843368530273
    9. ' ,' → logprob: -10.989843368530273
    10. '<input' → logprob: -11.864843368530273

Token 42: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02329462766647339
    2. ' input' → logprob: -3.773294687271118
    3. ',input' → logprob: -10.273294448852539
    4. ')' → logprob: -12.023294448852539
    5. '(input' → logprob: -12.523294448852539
    6. '=input' → logprob: -13.273294448852539
    7. ' ' → logprob: -14.023294448852539
    8. 'list' → logprob: -14.148294448852539
    9. '))' → logprob: -14.398294448852539
    10. '	input' → logprob: -15.648294448852539

Token 43: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.227250610711053e-05
    2. '()))' → logprob: -10.750041961669922
    3. '()' → logprob: -10.875041961669922
    4. '())' → logprob: -14.000041961669922
    5. ' ().' → logprob: -15.125041961669922
    6. '()[' → logprob: -15.625041961669922
    7. '(' → logprob: -15.625041961669922
    8. '())))' → logprob: -16.250041961669922
    9. '))' → logprob: -16.375041961669922
    10. '.split' → logprob: -16.375041961669922

Token 44: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.1756367712223437e-05
    2. 'strip' → logprob: -11.500011444091797
    3. 'rstrip' → logprob: -13.750011444091797
    4. '(split' → logprob: -14.625011444091797
    5. ' split' → logprob: -16.750011444091797
    6. 'spl' → logprob: -17.250011444091797
    7. 's' → logprob: -19.625011444091797
    8. '.split' → logprob: -19.875011444091797
    9. '```' → logprob: -21.125011444091797
    10. 'sp' → logprob: -22.375011444091797

Token 45: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.024554820731282234
    2. '))' → logprob: -3.89955472946167
    3. '())' → logprob: -6.27455472946167
    4. '(' → logprob: -6.77455472946167
    5. '()' → logprob: -7.02455472946167
    6. ')' → logprob: -9.899555206298828
    7. '()))
' → logprob: -11.524555206298828
    8. '())))' → logprob: -11.524555206298828
    9. '()));' → logprob: -12.524555206298828
    10. '(','' → logprob: -13.024555206298828

Token 46: ' for' (ID: 395)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.24363034963607788
    2. '()' → logprob: -1.8686304092407227
    3. ')' → logprob: -3.2436304092407227
    4. '()]' → logprob: -3.9936304092407227
    5. '(' → logprob: -6.243630409240723
    6. ')]' → logprob: -6.618630409240723
    7. 'for' → logprob: -7.243630409240723
    8. '()),' → logprob: -8.493630409240723
    9. ' for' → logprob: -9.993630409240723
    10. '()))' → logprob: -9.993630409240723

Token 47: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00794279482215643
    2. '_' → logprob: -5.1329426765441895
    3. 'range' → logprob: -7.1329426765441895
    4. ' _' → logprob: -7.2579426765441895
    5. ' ' → logprob: -8.257943153381348
    6. ' i' → logprob: -9.132943153381348
    7. '(range' → logprob: -9.757943153381348
    8. '_range' → logprob: -10.007943153381348
    9. ' in' → logprob: -10.882943153381348
    10. '	range' → logprob: -11.507943153381348

Token 48: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5063661932945251
    2. ' in' → logprob: -1.00636625289917
    3. '(' → logprob: -4.00636625289917
    4. '(range' → logprob: -4.75636625289917
    5. 'range' → logprob: -5.50636625289917
    6. ' (' → logprob: -8.381365776062012
    7. '	range' → logprob: -8.506365776062012
    8. ' ()' → logprob: -8.881365776062012
    9. ' ' → logprob: -8.881365776062012
    10. 'in' → logprob: -10.131365776062012

Token 49: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00038086410495452583
    2. ' range' → logprob: -7.875380992889404
    3. '(range' → logprob: -14.750380516052246
    4. '	range' → logprob: -16.375381469726562
    5. 'rang' → logprob: -16.500381469726562
    6. ' ' → logprob: -16.750381469726562
    7. 'n' → logprob: -17.000381469726562
    8. '```' → logprob: -17.000381469726562
    9. 'ran' → logprob: -17.375381469726562
    10. 'r' → logprob: -17.750381469726562

Token 50: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00015860427811276168
    2. '(' → logprob: -8.750158309936523
    3. 'n' → logprob: -16.625158309936523
    4. '(
' → logprob: -17.125158309936523
    5. ')n' → logprob: -18.375158309936523
    6. ' (' → logprob: -19.250158309936523
    7. ' n' → logprob: -19.750158309936523
    8. '((' → logprob: -20.375158309936523
    9. '(

' → logprob: -20.750158309936523
    10. '(len' → logprob: -20.750158309936523

Token 51: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -8.685467764735222e-05
    2. ')' → logprob: -9.750086784362793
    3. ']' → logprob: -10.625086784362793
    4. ')])' → logprob: -13.500086784362793
    5. '])]' → logprob: -14.000086784362793
    6. '))' → logprob: -14.000086784362793
    7. ')]
' → logprob: -14.625086784362793
    8. '])' → logprob: -15.250086784362793
    9. ')],' → logprob: -15.500086784362793
    10. ')}' → logprob: -16.50008773803711

Token 52: 'lst' (ID: 65430)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2132800668478012
    2. 's' → logprob: -2.713279962539673
    3. 'lst' → logprob: -3.713279962539673
    4. '
' → logprob: -3.963279962539673
    5. 'd' → logprob: -4.588280200958252
    6. 'dist' → logprob: -4.713280200958252
    7. 'for' → logprob: -4.838280200958252
    8. 'sorted' → logprob: -4.963280200958252
    9. 'def' → logprob: -5.213280200958252
    10. 't' → logprob: -5.213280200958252

Token 53: '.sort' (ID: 19551)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01862815022468567
    2. '<|end|>' → logprob: -4.893628120422363
    3. '.' → logprob: -5.268628120422363
    4. '[n' → logprob: -6.268628120422363
    5. '[
' → logprob: -7.268628120422363
    6. '```' → logprob: -7.643628120422363
    7. '[len' → logprob: -7.768628120422363
    8. '[]' → logprob: -7.893628120422363
    9. '.sort' → logprob: -8.143628120422363
    10. '[:]' → logprob: -8.393628120422363

Token 54: '(key' (ID: 8932)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2944501042366028
    2. '()' → logprob: -1.419450044631958
    3. '(()' → logprob: -5.169450283050537
    4. '(key' → logprob: -5.419450283050537
    5. '((' → logprob: -5.919450283050537
    6. '(lambda' → logprob: -9.044449806213379
    7. '(reverse' → logprob: -9.419449806213379
    8. '(
' → logprob: -10.544449806213379
    9. '(sort' → logprob: -10.544449806213379
    10. '()(' → logprob: -11.044449806213379

Token 55: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.014303706586360931
    2. '=' → logprob: -4.264303684234619
    3. '=(' → logprob: -8.889304161071777
    4. '(lambda' → logprob: -14.389304161071777
    5. '=len' → logprob: -14.764304161071777
    6. '=item' → logprob: -15.389304161071777
    7. '=

' → logprob: -15.764304161071777
    8. ')=' → logprob: -15.889304161071777
    9. '=}' → logprob: -16.13930320739746
    10. '=int' → logprob: -16.26430320739746

Token 56: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.11286798119544983
    2. 'x' → logprob: -2.237868070602417
    3. ' a' → logprob: -10.987868309020996
    4. ' s' → logprob: -11.237868309020996
    5. 's' → logprob: -11.987868309020996
    6. 'a' → logprob: -12.362868309020996
    7. ' lst' → logprob: -13.737868309020996
    8. ' lambda' → logprob: -14.237868309020996
    9. ' c' → logprob: -14.737868309020996
    10. 'e' → logprob: -14.737868309020996

Token 57: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01378934271633625
    2. ':x' → logprob: -4.388789176940918
    3. ' :' → logprob: -6.763789176940918
    4. 'x' → logprob: -9.638789176940918
    5. '[' → logprob: -10.388789176940918
    6. ' x' → logprob: -10.763789176940918
    7. ':
' → logprob: -13.013789176940918
    8. '[:' → logprob: -14.263789176940918
    9. ' ' → logprob: -14.888789176940918
    10. '=' → logprob: -14.888789176940918

Token 58: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7081514596939087
    2. ' x' → logprob: -1.7081514596939087
    3. ' (' → logprob: -1.8331514596939087
    4. '(x' → logprob: -1.8331514596939087
    5. '(' → logprob: -5.083151340484619
    6. '(-' → logprob: -9.708151817321777
    7. ' (-' → logprob: -10.333151817321777
    8. '(
' → logprob: -10.770651817321777
    9. '(int' → logprob: -10.895651817321777
    10. ' (
' → logprob: -11.395651817321777

Token 59: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005183627945370972
    2. ':' → logprob: -7.875518321990967
    3. ')' → logprob: -9.500518798828125
    4. '[:' → logprob: -10.875518798828125
    5. ' [' → logprob: -11.125518798828125
    6. '[:]' → logprob: -12.000518798828125
    7. '0' → logprob: -12.125518798828125
    8. ' :' → logprob: -12.500518798828125
    9. '1' → logprob: -12.625518798828125
    10. ' )' → logprob: -13.000518798828125

Token 60: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1805066615343094
    2. '1' → logprob: -1.805506706237793
    3. '2' → logprob: -7.305506706237793
    4. ' ' → logprob: -10.555506706237793
    5. '3' → logprob: -10.680506706237793
    6. '-' → logprob: -11.118006706237793
    7. '4' → logprob: -11.805506706237793
    8. ':' → logprob: -12.430506706237793
    9. '5' → logprob: -12.868006706237793
    10. '[' → logprob: -13.743006706237793

Token 61: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006142322905361652
    2. '])' → logprob: -5.2561421394348145
    3. ',' → logprob: -8.381142616271973
    4. '),' → logprob: -8.506142616271973
    5. ')])' → logprob: -8.631142616271973
    6. '))' → logprob: -9.256142616271973
    7. ')]' → logprob: -9.631142616271973
    8. ' )' → logprob: -9.631142616271973
    9. ',)' → logprob: -11.006142616271973
    10. '})' → logprob: -11.006142616271973

Token 62: 'now' (ID: 6201)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.1347156763076782
    2. 'ans' → logprob: -1.7597156763076782
    3. 'count' → logprob: -2.7597155570983887
    4. 'i' → logprob: -2.7597155570983887
    5. 'cnt' → logprob: -2.7597155570983887
    6. 'result' → logprob: -3.0097155570983887
    7. 'answer' → logprob: -3.2597155570983887
    8. 'print' → logprob: -3.5097155570983887
    9. 'prev' → logprob: -3.8847155570983887
    10. 'res' → logprob: -4.009715557098389

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5432040095329285
    2. '=' → logprob: -1.4182040691375732
    3. '_' → logprob: -1.7932040691375732
    4. '_time' → logprob: -4.668203830718994
    5. ' ' → logprob: -7.668203830718994
    6. ' +=' → logprob: -8.543204307556152
    7. '_=' → logprob: -8.668204307556152
    8. '_space' → logprob: -9.918204307556152
    9. ' _' → logprob: -10.043204307556152
    10. ',' → logprob: -10.668204307556152

Token 64: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1249161809682846
    2. '-' → logprob: -2.7499160766601562
    3. 'lst' → logprob: -2.9999160766601562
    4. '-l' → logprob: -5.874916076660156
    5. ' ' → logprob: -7.749916076660156
    6. ' lst' → logprob: -8.374916076660156
    7. ' -' → logprob: -9.624916076660156
    8. 'float' → logprob: -9.624916076660156
    9. '1' → logprob: -10.374916076660156
    10. '-s' → logprob: -11.249916076660156

Token 65: '1' (ID: 16)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.19771544635295868
    2. '1' → logprob: -2.0727155208587646
    3. 'float' → logprob: -2.9477155208587646
    4. '100' → logprob: -7.0727152824401855
    5. '(' → logprob: -9.322715759277344
    6. '101' → logprob: -9.947715759277344
    7. '123' → logprob: -10.447715759277344
    8. '987' → logprob: -11.072715759277344
    9. 'int' → logprob: -11.322715759277344
    10. '2' → logprob: -11.447715759277344

Token 66: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05579668655991554
    2. ' for' → logprob: -3.4307966232299805
    3. 'for' → logprob: -3.9307966232299805
    4. '0' → logprob: -7.1807966232299805
    5. ' 
' → logprob: -7.5557966232299805
    6. '1' → logprob: -8.18079662322998
    7. ' ' → logprob: -9.43079662322998
    8. 'n' → logprob: -9.55579662322998
    9. ' 
 
' → logprob: -9.80579662322998
    10. '+' → logprob: -9.93079662322998

Token 67: 'ans' (ID: 616)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.35699519515037537
    2. 'for' → logprob: -1.8569952249526978
    3. ' for' → logprob: -1.9819952249526978
    4. '1' → logprob: -5.981995105743408
    5. '0' → logprob: -6.231995105743408
    6. '+' → logprob: -8.106995582580566
    7. '\' → logprob: -8.356995582580566
    8. '\n' → logprob: -8.356995582580566
    9. 'n' → logprob: -8.981995582580566
    10. ' ' → logprob: -9.231995582580566

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2546658217906952
    2. '=' → logprob: -1.5046658515930176
    3. ' +=' → logprob: -6.254665851593018
    4. '+' → logprob: -8.00466537475586
    5. '_' → logprob: -8.87966537475586
    6. '+=' → logprob: -9.00466537475586
    7. ',' → logprob: -9.50466537475586
    8. ' ' → logprob: -9.87966537475586
    9. ' =
' → logprob: -10.50466537475586
    10. '_count' → logprob: -11.75466537475586

Token 69: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002422152552753687
    2. '[]' → logprob: -6.127422332763672
    3. ' ' → logprob: -8.377422332763672
    4. '[]
' → logprob: -12.627422332763672
    5. ' []' → logprob: -12.752422332763672
    6. '[' → logprob: -15.502422332763672
    7. '[]

' → logprob: -15.752422332763672
    8. '{}' → logprob: -16.252422332763672
    9. '[]}' → logprob: -16.377422332763672
    10. '1' → logprob: -17.002422332763672

Token 70: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007522129453718662
    2. '[]' → logprob: -7.2507524490356445
    3. ' ' → logprob: -10.125752449035645
    4. '[' → logprob: -14.625752449035645
    5. '[]
' → logprob: -14.750752449035645
    6. 'n' → logprob: -15.000752449035645
    7. ' []' → logprob: -15.625752449035645
    8. '-' → logprob: -15.750752449035645
    9. '1' → logprob: -15.875752449035645
    10. '[]}' → logprob: -16.375751495361328

Token 71: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1496395766735077
    2. 'for' → logprob: -2.14963960647583
    3. '
' → logprob: -4.39963960647583
    4. ' 
' → logprob: -5.39963960647583
    5. '<|end|>' → logprob: -5.64963960647583
    6. ' ' → logprob: -6.64963960647583
    7. '\n' → logprob: -7.64963960647583
    8. '```' → logprob: -9.274639129638672
    9. '' → logprob: -9.524639129638672
    10. '  
' → logprob: -10.024639129638672

Token 72: 'for' (ID: 1938)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8320950269699097
    2. ' ' → logprob: -0.9570950269699097
    3. 'for' → logprob: -2.207095146179199
    4. ' 
' → logprob: -3.082095146179199
    5. '
' → logprob: -4.582095146179199
    6. '<|end|>' → logprob: -4.582095146179199
    7. '\n' → logprob: -6.082095146179199
    8. '' → logprob: -7.832095146179199
    9. '```' → logprob: -8.2070951461792
    10. '  
' → logprob: -8.2070951461792

Token 73: ' s' (ID: 265)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3523174226284027
    2. ' ' → logprob: -2.7273173332214355
    3. ' interval' → logprob: -2.7273173332214355
    4. ' e' → logprob: -3.3523173332214355
    5. ' task' → logprob: -3.3523173332214355
    6. ' x' → logprob: -3.7273173332214355
    7. ' job' → logprob: -3.8523173332214355
    8. ' event' → logprob: -4.2273173332214355
    9. ' item' → logprob: -4.8523173332214355
    10. ' _' → logprob: -4.8523173332214355

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007369395345449448
    2. ' ,' → logprob: -5.382369518280029
    3. ' in' → logprob: -6.132369518280029
    4. ',t' → logprob: -9.007369041442871
    5. ',s' → logprob: -9.007369041442871
    6. ',e' → logprob: -9.132369041442871
    7. ' ' → logprob: -9.882369041442871
    8. ',i' → logprob: -10.132369041442871
    9. ',time' → logprob: -11.132369041442871
    10. ',_' → logprob: -11.382369041442871

Token 75: ' t' (ID: 260)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5354825258255005
    2. 'f' → logprob: -1.4104825258255005
    3. 't' → logprob: -1.7854825258255005
    4. 'd' → logprob: -6.285482406616211
    5. ' e' → logprob: -7.785482406616211
    6. ' f' → logprob: -7.910482406616211
    7. ' t' → logprob: -8.535482406616211
    8. ' ' → logprob: -11.410482406616211
    9. '```' → logprob: -11.535482406616211
    10. ' d' → logprob: -13.285482406616211

Token 76: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06472893804311752
    2. 'in' → logprob: -2.8147289752960205
    3. ',' → logprob: -5.939728736877441
    4. 's' → logprob: -9.564728736877441
    5. ' ' → logprob: -10.439728736877441
    6. '<|end|>' → logprob: -12.189728736877441
    7. ' ,' → logprob: -13.064728736877441
    8. ':' → logprob: -13.064728736877441
    9. ',in' → logprob: -13.064728736877441
    10. '	in' → logprob: -13.689728736877441

Token 77: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.07889925688505173
    2. ' lst' → logprob: -2.5788991451263428
    3. '(lst' → logprob: -12.203899383544922
    4. ' ' → logprob: -13.078899383544922
    5. '_lst' → logprob: -13.453899383544922
    6. 'ls' → logprob: -14.953899383544922
    7. 'l' → logprob: -15.328899383544922
    8. 'Lst' → logprob: -15.578899383544922
    9. '.lst' → logprob: -16.203899383544922
    10. 'list' → logprob: -17.328899383544922

Token 78: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007166040013544261
    2. ':
' → logprob: -7.250716686248779
    3. ':**' → logprob: -13.000716209411621
    4. ':

' → logprob: -13.750716209411621
    5. ' :' → logprob: -13.875716209411621
    6. ',' → logprob: -14.375716209411621
    7. '<|end|>' → logprob: -14.500716209411621
    8. '):' → logprob: -14.750716209411621
    9. 's' → logprob: -16.125717163085938
    10. '>' → logprob: -16.375717163085938

Token 79: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21950799226760864
    2. '   ' → logprob: -1.9695079326629639
    3. '<|end|>' → logprob: -3.219507932662964
    4. ' 
' → logprob: -4.969508171081543
    5. ' if' → logprob: -4.969508171081543
    6. '    
' → logprob: -6.719508171081543
    7. '    ' → logprob: -6.969508171081543
    8. '  ' → logprob: -7.594508171081543
    9. '<|end|>' → logprob: -7.844508171081543
    10. '  
' → logprob: -9.094508171081543

Token 80: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2818785607814789
    2. ' ' → logprob: -1.9068785905838013
    3. ' if' → logprob: -2.4068784713745117
    4. '    ' → logprob: -5.281878471374512
    5. '<|end|>' → logprob: -7.031878471374512
    6. '  ' → logprob: -7.781878471374512
    7. ' i' → logprob: -8.281878471374512
    8. ' 
' → logprob: -9.156878471374512
    9. 'if' (adapté à ' if') → logprob: -10.031878471374512
    10. '       ' → logprob: -10.281878471374512

Token 81: ' now' (ID: 1954)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.004629245959222317
    2. 's' → logprob: -5.379629135131836
    3. ' t' → logprob: -12.004629135131836
    4. ' ' → logprob: -13.754629135131836
    5. ' now' → logprob: -14.129629135131836
    6. ' ' → logprob: -14.504629135131836
    7. '	s' → logprob: -16.254629135131836
    8. '    ' → logprob: -16.504629135131836
    9. 't' → logprob: -16.754629135131836
    10. ' 
' → logprob: -17.004629135131836

Token 82: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.10621272027492523
    2. '<=' → logprob: -2.356212615966797
    3. ' <' → logprob: -5.606212615966797
    4. ' <=' → logprob: -6.106212615966797
    5. ' ' → logprob: -10.731212615966797
    6. '<t' → logprob: -11.356212615966797
    7. '<int' → logprob: -11.731212615966797
    8. '=' → logprob: -11.981212615966797
    9. '<th' → logprob: -12.106212615966797
    10. '＜' → logprob: -12.481212615966797

Token 83: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.007655607536435127
    2. ' s' → logprob: -4.882655620574951
    3. '=' → logprob: -10.007655143737793
    4. ' ' → logprob: -13.132655143737793
    5. '=s' → logprob: -13.257655143737793
    6. '	s' → logprob: -15.882655143737793
    7. 't' → logprob: -16.25765609741211
    8. ' ' → logprob: -16.63265609741211
    9. '  ' → logprob: -16.88265609741211
    10. ' =' → logprob: -16.88265609741211

Token 84: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08924609422683716
    2. ':
' → logprob: -2.4642460346221924
    3. '=' → logprob: -9.464245796203613
    4. ' and' → logprob: -9.714245796203613
    5. ' :' → logprob: -10.089245796203613
    6. ' :
' → logprob: -10.214245796203613
    7. 'and' → logprob: -10.589245796203613
    8. '   ' → logprob: -11.464245796203613
    9. ':
' → logprob: -11.464245796203613
    10. ':

' → logprob: -11.464245796203613

Token 85: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2665264308452606
    2. ' now' → logprob: -1.516526460647583
    3. '   ' → logprob: -4.891526222229004
    4. 'now' → logprob: -5.266526222229004
    5. '	now' → logprob: -7.266526222229004
    6. ' ' → logprob: -8.016526222229004
    7. '    ' → logprob: -8.391526222229004
    8. '    
' → logprob: -9.141526222229004
    9. '        
' → logprob: -9.266526222229004
    10. '[now' → logprob: -9.641526222229004

Token 86: ' ans' (ID: 3345)
  Prédit: ' now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' now' → logprob: -0.09882630407810211
    2. 'now' → logprob: -2.8488264083862305
    3. '       ' → logprob: -3.3488264083862305
    4. '   ' → logprob: -6.9738264083862305
    5. '	now' → logprob: -9.34882640838623
    6. ' ans' → logprob: -10.84882640838623
    7. 'ans' (adapté à ' ans') → logprob: -12.34882640838623
    8. ' ' → logprob: -12.47382640838623
    9. '[now' → logprob: -12.72382640838623
    10. '    ' → logprob: -12.84882640838623

Token 87: ' +=' (ID: 2757)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011080714873969555
    2. '=' → logprob: -4.511080741882324
    3. ' +=' → logprob: -10.386080741882324
    4. '+=' → logprob: -13.886080741882324
    5. '＝' → logprob: -14.511080741882324
    6. ' =
' → logprob: -14.886080741882324
    7. ' ' → logprob: -15.511080741882324
    8. '+' → logprob: -16.886079788208008
    9. ' =)' → logprob: -17.261079788208008
    10. '=s' → logprob: -19.136079788208008

Token 88: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.698698704596609e-05
    2. ' ' → logprob: -9.250097274780273
    3. 't' → logprob: -14.750097274780273
    4. '   ' → logprob: -15.500097274780273
    5. '+' → logprob: -15.750097274780273
    6. '  ' → logprob: -18.562597274780273
    7. '１' → logprob: -18.625097274780273
    8. '```' → logprob: -18.625097274780273
    9. ' t' → logprob: -18.750097274780273
    10. '
' → logprob: -18.812597274780273

Token 89: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. 't' → logprob: -16.250011444091797
    4. '   ' → logprob: -18.250011444091797
    5. '+' → logprob: -19.375011444091797
    6. 's' → logprob: -19.812511444091797
    7. '2' → logprob: -19.875011444091797
    8. '  ' → logprob: -19.937511444091797
    9. '１' → logprob: -20.125011444091797
    10. '<|end|>' → logprob: -20.375011444091797

Token 90: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.020969824865460396
    2. ' now' → logprob: -4.270969867706299
    3. '
' → logprob: -6.020969867706299
    4. 'now' → logprob: -6.770969867706299
    5. ' 
' → logprob: -7.020969867706299
    6. '       ' → logprob: -7.145969867706299
    7. '[now' → logprob: -7.520969867706299
    8. '  
' → logprob: -8.27096939086914
    9. '   ' → logprob: -8.39596939086914
    10. '    
' → logprob: -8.64596939086914

Token 91: '       ' (ID: 309)
  Prédit: ' now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' now' → logprob: -0.44094133377075195
    2. '       ' → logprob: -1.565941333770752
    3. 'now' → logprob: -1.940941333770752
    4. '
' → logprob: -5.690941333770752
    5. '[now' → logprob: -8.440940856933594
    6. '	now' → logprob: -8.565940856933594
    7. '   ' → logprob: -8.690940856933594
    8. '        
' → logprob: -10.065940856933594
    9. ' 
' → logprob: -10.190940856933594
    10. '_now' → logprob: -11.190940856933594

Token 92: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' (adapté à ' now') → logprob: -0.00864600669592619
    2. ' now' → logprob: -4.758646011352539
    3. '       ' → logprob: -10.758646011352539
    4. '   ' → logprob: -12.633646011352539
    5. '	now' → logprob: -12.633646011352539
    6. '[now' → logprob: -12.758646011352539
    7. '_now' → logprob: -14.508646011352539
    8. '(now' → logprob: -16.38364601135254
    9. '.now' → logprob: -16.38364601135254
    10. ' ' → logprob: -16.75864601135254

Token 93: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014143168926239
    2. '=' → logprob: -1.7014143466949463
    3. '=t' → logprob: -14.451414108276367
    4. ' ' → logprob: -14.701414108276367
    5. '＝' → logprob: -16.826414108276367
    6. ',' → logprob: -18.826414108276367
    7. '=s' → logprob: -18.951414108276367
    8. '=end' → logprob: -19.576414108276367
    9. 't' → logprob: -19.826414108276367
    10. '.' → logprob: -20.076414108276367

Token 94: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0007099286303855479
    2. ' t' → logprob: -7.2507100105285645
    3. '	t' → logprob: -17.125709533691406
    4. '   ' → logprob: -19.250709533691406
    5. ' ' → logprob: -19.250709533691406
    6. '`t' → logprob: -19.375709533691406
    7. '    ' → logprob: -20.000709533691406
    8. '(t' → logprob: -20.875709533691406
    9. '<t' → logprob: -21.000709533691406
    10. '  ' → logprob: -21.500709533691406

Token 95: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2803555130958557
    2. '\n' → logprob: -1.530355453491211
    3. '<|end|>' → logprob: -4.530355453491211
    4. '' → logprob: -4.780355453491211
    5. ' print' → logprob: -6.030355453491211
    6. '
' → logprob: -6.655355453491211
    7. ' 
' → logprob: -6.780355453491211
    8. '\' → logprob: -7.030355453491211
    9. '```' → logprob: -7.280355453491211
    10. '"\' → logprob: -7.780355453491211

Token 96: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.981667537620524e-06
    2. ' print' → logprob: -13.375001907348633
    3. '
' → logprob: -15.250001907348633
    4. '```' → logprob: -16.625001907348633
    5. '\n' → logprob: -17.125001907348633
    6. '(print' → logprob: -17.625001907348633
    7. '\' → logprob: -18.125001907348633
    8. '-print' → logprob: -18.125001907348633
    9. '#print' → logprob: -18.250001907348633
    10. 'pr' → logprob: -18.375001907348633

Token 97: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2521100342273712
    2. '(ans' → logprob: -1.5021100044250488
    3. '('' → logprob: -9.502110481262207
    4. '("("' → logprob: -9.502110481262207
    5. '()' → logprob: -10.877110481262207
    6. '(`' → logprob: -12.877110481262207
    7. '(answer' → logprob: -13.877110481262207
    8. '(
' → logprob: -14.002110481262207
    9. '(len' → logprob: -14.002110481262207
    10. ' (' → logprob: -14.002110481262207

Token 98: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -15.000000953674316
    3. ')
' → logprob: -15.875000953674316
    4. ')`' → logprob: -16.25
    5. '))' → logprob: -16.875
    6. '`)' → logprob: -17.875
    7. '）' → logprob: -18.625
    8. '')' → logprob: -18.625
    9. ')}' → logprob: -19.5
    10. ')#' → logprob: -19.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 96
Tokens correctement prédits (1ère position, stricte): 30
Tokens correctement prédits (1ère position, avec adaptation): 31
Tokens correctement prédits (top 10): 70
Précision stricte (1ère position): 31.25%
Précision adaptée (1ère position): 32.29%
Précision (top 10): 72.92%
================================================================================
