================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:20:11
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    n, k = map(int, input().split())
    if n > k:
        print(0)
        return
    mod = 10 ** 9 + 7
    ans = 1
    for i in range(n):
        ans *= k - i
        ans %= mod

    print(ans)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.27454787492752075
    2. '\n' → logprob: -1.774547815322876
    3. '   ' → logprob: -3.524547815322876
    4. '(' → logprob: -4.399548053741455
    5. ' 
' → logprob: -5.149548053741455
    6. '    
' → logprob: -5.274548053741455
    7. ' ' → logprob: -5.524548053741455
    8. ''' → logprob: -5.649548053741455
    9. '```' → logprob: -6.274548053741455
    10. '    ' → logprob: -6.399548053741455

Token 4: ' n' (ID: 297)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5843620896339417
    2. '   ' → logprob: -1.4593620300292969
    3. 'pass' → logprob: -2.209362030029297
    4. 'return' → logprob: -2.834362030029297
    5. '#' → logprob: -4.209362030029297
    6. 'p' → logprob: -5.209362030029297
    7. '```' → logprob: -5.709362030029297
    8. 'r' → logprob: -5.709362030029297
    9. '\' → logprob: -5.959362030029297
    10. 'a' → logprob: -6.084362030029297

Token 5: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8296284675598145
    2. '_' → logprob: -1.8296284675598145
    3. ' =' → logprob: -1.9546284675598145
    4. ' ' → logprob: -2.4546284675598145
    5. 'u' → logprob: -2.5796284675598145
    6. '   ' → logprob: -3.4546284675598145
    7. '  ' → logprob: -3.9546284675598145
    8. 'e' → logprob: -4.3296284675598145
    9. 'a' → logprob: -4.9546284675598145
    10. 'ext' → logprob: -5.3296284675598145

Token 6: ' k' (ID: 372)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14821206033229828
    2. ' m' → logprob: -2.39821195602417
    3. 'm' → logprob: -4.02321195602417
    4. ' k' → logprob: -4.77321195602417
    5. '"' → logprob: -5.27321195602417
    6. ' =' → logprob: -5.52321195602417
    7. '  ' → logprob: -6.27321195602417
    8. ' t' → logprob: -6.39821195602417
    9. 'space' → logprob: -6.77321195602417
    10. '=' → logprob: -7.02321195602417

Token 7: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3498709797859192
    2. '=' → logprob: -1.2248709201812744
    3. ',' → logprob: -6.5998711585998535
    4. ')' → logprob: -10.349870681762695
    5. ' ' → logprob: -11.349870681762695
    6. ' ,' → logprob: -12.349870681762695
    7. '_' → logprob: -12.349870681762695
    8. ' =
' → logprob: -12.849870681762695
    9. '<|end|>' → logprob: -13.349870681762695
    10. '  ' → logprob: -13.974870681762695

Token 8: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.01243407279253006
    2. ' input' → logprob: -5.137434005737305
    3. 'map' → logprob: -5.137434005737305
    4. ' ' → logprob: -8.137434005737305
    5. 'input' → logprob: -8.637434005737305
    6. ' int' → logprob: -9.262434005737305
    7. '0' → logprob: -10.512434005737305
    8. ' list' → logprob: -12.012434005737305
    9. 'int' → logprob: -12.387434005737305
    10. ' n' → logprob: -12.637434005737305

Token 9: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03338320925831795
    2. '(int' → logprob: -4.283383369445801
    3. '(lambda' → logprob: -4.533383369445801
    4. '(str' → logprob: -4.908383369445801
    5. '<|end|>' → logprob: -8.1583833694458
    6. '(user' → logprob: -8.7833833694458
    7. '(eval' → logprob: -10.0333833694458
    8. '()' → logprob: -10.2833833694458
    9. '(token' → logprob: -10.6583833694458
    10. '(
' → logprob: -10.6583833694458

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.25093358755111694
    2. '(' → logprob: -1.8759336471557617
    3. ')' → logprob: -3.0009336471557617
    4. 'input' → logprob: -4.125933647155762
    5. ' input' → logprob: -7.000933647155762
    6. '(str' → logprob: -7.875933647155762
    7. '()' → logprob: -8.500933647155762
    8. ',' → logprob: -8.750933647155762
    9. '```' → logprob: -8.875933647155762
    10. '())' → logprob: -9.000933647155762

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16024717688560486
    2. ' input' → logprob: -1.9102472066879272
    3. ')' → logprob: -10.910246849060059
    4. '(input' → logprob: -12.660246849060059
    5. ' )' → logprob: -14.410246849060059
    6. ',input' → logprob: -15.160246849060059
    7. '=input' → logprob: -15.535246849060059
    8. '	input' → logprob: -15.660246849060059
    9. ' ' → logprob: -15.910246849060059
    10. '```' → logprob: -16.535247802734375

Token 12: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.9658901691436768
    2. '())' → logprob: -0.9658901691436768
    3. '()' → logprob: -1.5908901691436768
    4. '(' → logprob: -4.340889930725098
    5. ')' → logprob: -4.340889930725098
    6. '('' → logprob: -5.215889930725098
    7. '()))' → logprob: -6.590889930725098
    8. '(()' → logprob: -7.965889930725098
    9. '(""))' → logprob: -8.090889930725098
    10. '('').' → logprob: -8.215889930725098

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00026288547087460756
    2. 'strip' → logprob: -8.250263214111328
    3. 'rstrip' → logprob: -14.125263214111328
    4. ' split' → logprob: -14.250263214111328
    5. ')' → logprob: -16.125263214111328
    6. '(split' → logprob: -16.250263214111328
    7. 'spl' → logprob: -17.125263214111328
    8. 'read' → logprob: -18.625263214111328
    9. 'replace' → logprob: -19.625263214111328
    10. '```' → logprob: -19.750263214111328

Token 14: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13188885152339935
    2. '))' → logprob: -2.5068888664245605
    3. '())' → logprob: -3.2568888664245605
    4. '()))' → logprob: -6.2568888664245605
    5. '()' → logprob: -6.5068888664245605
    6. '('' → logprob: -9.756888389587402
    7. '(' → logprob: -10.631888389587402
    8. ')))' → logprob: -11.631888389587402
    9. '),' → logprob: -12.256888389587402
    10. '`)' → logprob: -12.631888389587402

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6147475838661194
    2. '
' → logprob: -2.1147475242614746
    3. ')' → logprob: -2.4897475242614746
    4. '```' → logprob: -2.6147475242614746
    5. '\n' → logprob: -2.8647475242614746
    6. '    
' → logprob: -2.9897475242614746
    7. '\' → logprob: -3.9897475242614746
    8. '<|end|>' → logprob: -4.489747524261475
    9. ',' → logprob: -5.364747524261475
    10. '`' → logprob: -5.614747524261475

Token 16: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32492122054100037
    2. '`' → logprob: -3.574921131134033
    3. 'i' → logprob: -3.574921131134033
    4. 'r' → logprob: -3.824921131134033
    5. 'for' → logprob: -3.824921131134033
    6. 'result' → logprob: -3.824921131134033
    7. ' i' → logprob: -4.074921131134033
    8. 'd' → logprob: -4.324921131134033
    9. '    
' → logprob: -4.449921131134033
    10. ' for' → logprob: -4.449921131134033

Token 17: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.20510253310203552
    2. ' k' → logprob: -1.705102562904358
    3. 'n' → logprob: -5.955102443695068
    4. 'k' → logprob: -7.080102443695068
    5. ' ' → logprob: -8.330102920532227
    6. ' ' → logprob: -12.455102920532227
    7. ' not' → logprob: -13.830102920532227
    8. '  ' → logprob: -14.205102920532227
    9. '	n' → logprob: -14.705102920532227
    10. ' (' → logprob: -15.080102920532227

Token 18: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.47701528668403625
    2. ' ' → logprob: -2.352015256881714
    3. ' >=' → logprob: -2.352015256881714
    4. ' <' → logprob: -2.352015256881714
    5. '>' → logprob: -3.102015256881714
    6. ' <=' → logprob: -3.977015256881714
    7. ' ==' → logprob: -4.352015495300293
    8. ' %' → logprob: -5.352015495300293
    9. '<' → logprob: -5.477015495300293
    10. '%' → logprob: -6.227015495300293

Token 19: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.08794968575239182
    2. 'k' → logprob: -2.587949752807617
    3. '=' → logprob: -4.962949752807617
    4. ' ' → logprob: -6.462949752807617
    5. '0' → logprob: -7.962949752807617
    6. '=k' → logprob: -9.212949752807617
    7. ' =' → logprob: -12.337949752807617
    8. '	k' → logprob: -12.462949752807617
    9. '  ' → logprob: -13.712949752807617
    10. ' ' → logprob: -13.837949752807617

Token 20: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00014418430509977043
    2. ' :' → logprob: -9.250144004821777
    3. '>:' → logprob: -11.250144004821777
    4. ':
' → logprob: -11.875144004821777
    5. '):' → logprob: -12.000144004821777
    6. ':**' → logprob: -12.375144004821777
    7. '':' → logprob: -12.625144004821777
    8. '>' → logprob: -12.625144004821777
    9. '+:' → logprob: -12.750144004821777
    10. ':return' → logprob: -12.750144004821777

Token 21: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015870003029704094
    2. '       ' → logprob: -4.640870094299316
    3. ':
' → logprob: -6.015870094299316
    4. '    ' → logprob: -6.515870094299316
    5. ' :' → logprob: -7.640870094299316
    6. '   ' → logprob: -7.765870094299316
    7. '):' → logprob: -8.140870094299316
    8. ':return' → logprob: -8.265870094299316
    9. ' return' → logprob: -9.140870094299316
    10. '.' → logprob: -9.765870094299316

Token 22: ' print' (ID: 2123)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8398532867431641
    2. '\n' → logprob: -1.464853286743164
    3. '    ' → logprob: -2.339853286743164
    4. '       ' → logprob: -2.714853286743164
    5. ' 
' → logprob: -2.714853286743164
    6. ' n' → logprob: -3.714853286743164
    7. 'return' → logprob: -4.214853286743164
    8. 'n' → logprob: -4.339853286743164
    9. '   ' → logprob: -4.589853286743164
    10. '\' → logprob: -4.589853286743164

Token 23: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001852131332270801
    2. '("("' → logprob: -7.376852035522461
    3. '(n' → logprob: -7.501852035522461
    4. '('' → logprob: -7.501852035522461
    5. '(k' → logprob: -10.126852035522461
    6. '("' → logprob: -10.376852035522461
    7. '()' → logprob: -10.751852035522461
    8. '(">' → logprob: -11.751852035522461
    9. '("")' → logprob: -11.876852035522461
    10. '(
' → logprob: -12.876852035522461

Token 24: '0' (ID: 15)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7142242789268494
    2. 'k' → logprob: -1.3392243385314941
    3. 'n' → logprob: -1.5892243385314941
    4. '0' → logprob: -4.214224338531494
    5. '"k' → logprob: -4.214224338531494
    6. '")' → logprob: -5.464224338531494
    7. ')' → logprob: -6.214224338531494
    8. '1' → logprob: -6.339224338531494
    9. '(n' → logprob: -6.339224338531494
    10. ''' → logprob: -6.714224338531494

Token 25: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3902033970225602e-05
    2. ')
' → logprob: -11.250014305114746
    3. '))' → logprob: -15.125014305114746
    4. '   ' → logprob: -15.750014305114746
    5. '')' → logprob: -16.25001335144043
    6. '`)' → logprob: -16.25001335144043
    7. '")' → logprob: -16.50001335144043
    8. '()' → logprob: -16.75001335144043
    9. ' )' → logprob: -17.12501335144043
    10. ')

' → logprob: -17.37501335144043

Token 26: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009126788936555386
    2. '<|end|>' → logprob: -5.634126663208008
    3. '
' → logprob: -6.259126663208008
    4. ')' → logprob: -7.134126663208008
    5. '       ' → logprob: -7.509126663208008
    6. '    
' → logprob: -7.634126663208008
    7. '```' → logprob: -7.634126663208008
    8. '\n' → logprob: -7.884126663208008
    9. ' ' → logprob: -8.384126663208008
    10. 'else' → logprob: -8.759126663208008

Token 27: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004105354193598032
    2. '       ' → logprob: -5.754105567932129
    3. '
' → logprob: -7.754105567932129
    4. '    
' → logprob: -8.629105567932129
    5. ')' → logprob: -9.629105567932129
    6. 'else' → logprob: -10.004105567932129
    7. '```' → logprob: -10.254105567932129
    8. ' else' → logprob: -10.379105567932129
    9. '	return' → logprob: -10.504105567932129
    10. 'return' (adapté à ' return') → logprob: -10.504105567932129

Token 28: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.033363498747348785
    2. '    
' → logprob: -4.283363342285156
    3. ' 
' → logprob: -4.908363342285156
    4. '   ' → logprob: -5.408363342285156
    5. '  
' → logprob: -5.533363342285156
    6. '\n' → logprob: -6.158363342285156
    7. '   
' → logprob: -7.658363342285156
    8. 'n' → logprob: -9.033363342285156
    9. '

' → logprob: -9.158363342285156
    10. '
' → logprob: -9.283363342285156

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5321664810180664
    2. '
' → logprob: -1.0321664810180664
    3. '    
' → logprob: -3.1571664810180664
    4. '\n' → logprob: -5.282166481018066
    5. '  
' → logprob: -5.532166481018066
    6. ' 
' → logprob: -6.032166481018066
    7. '   
' → logprob: -7.407166481018066
    8. 'n' → logprob: -8.032166481018066
    9. '\' → logprob: -8.032166481018066
    10. '<|end|>' → logprob: -8.032166481018066

Token 30: ' mod' (ID: 1812)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05902177840471268
    2. '    
' → logprob: -3.9340217113494873
    3. '\n' → logprob: -4.559021949768066
    4. 'n' → logprob: -4.934021949768066
    5. '
' → logprob: -5.059021949768066
    6. '\' → logprob: -5.684021949768066
    7. ' 
' → logprob: -5.809021949768066
    8. 'print' → logprob: -6.809021949768066
    9. '```' → logprob: -7.184021949768066
    10. '0' → logprob: -7.309021949768066

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0896701067686081
    2. '=' → logprob: -2.464670181274414
    3. ' ' → logprob: -7.589670181274414
    4. ')' → logprob: -9.714670181274414
    5. '   ' → logprob: -9.964670181274414
    6. '  ' → logprob: -10.714670181274414
    7. '_' → logprob: -10.714670181274414
    8. ',' → logprob: -10.714670181274414
    9. ':' → logprob: -11.464670181274414
    10. 'ulus' → logprob: -11.839670181274414

Token 32: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.31887614727020264
    2. ' ' → logprob: -1.3188761472702026
    3. '100' → logprob: -5.193876266479492
    4. '1' → logprob: -10.318876266479492
    5. '998' → logprob: -11.443876266479492
    6. 'int' → logprob: -12.943876266479492
    7. ' int' → logprob: -14.068876266479492
    8. ' (' → logprob: -15.068876266479492
    9. ' ' → logprob: -15.068876266479492
    10. '(' → logprob: -15.318876266479492

Token 33: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.02664893865585327
    2. '100' → logprob: -3.651648998260498
    3. '998' → logprob: -8.40164852142334
    4. '1' → logprob: -9.40164852142334
    5. 'int' → logprob: -10.52664852142334
    6. ' ' → logprob: -11.77664852142334
    7. '(' → logprob: -12.15164852142334
    8. 'pow' → logprob: -13.90164852142334
    9. '109' → logprob: -15.90164852142334
    10. '2' → logprob: -16.276649475097656

Token 34: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.039117708802223206
    2. '**' → logprob: -3.2891178131103516
    3. '09' → logprob: -6.914117813110352
    4. '000' → logprob: -10.914117813110352
    5. ' ' → logprob: -11.039117813110352
    6. '```' → logprob: -11.039117813110352
    7. '009' → logprob: -11.164117813110352
    8. '00' → logprob: -11.914117813110352
    9. '7' → logprob: -12.789117813110352
    10. '^' → logprob: -13.164117813110352

Token 35: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9361264946837764e-07
    2. '09' → logprob: -16.75
    3. '18' → logprob: -18.375
    4. '```' → logprob: -19.5
    5. '10' → logprob: -19.875
    6. '+' → logprob: -20.75
    7. '8' → logprob: -20.875
    8. '1' → logprob: -21.125
    9. ' ' → logprob: -21.25
    10. '4' → logprob: -21.375

Token 36: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9361264946837764e-07
    2. '09' → logprob: -16.625
    3. '18' → logprob: -16.625
    4. '8' → logprob: -18.125
    5. '10' → logprob: -18.875
    6. '+' → logprob: -19.25
    7. '```' → logprob: -19.5
    8. '6' → logprob: -19.625
    9. '15' → logprob: -20.25
    10. '7' → logprob: -20.375

Token 37: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0024989673402160406
    2. ' +' → logprob: -6.002499103546143
    3. '+
' → logprob: -11.127498626708984
    4. '7' → logprob: -12.752498626708984
    5. '+

' → logprob: -13.752498626708984
    6. ' +
' → logprob: -13.752498626708984
    7. '+</' → logprob: -14.127498626708984
    8. ' ' → logprob: -14.752498626708984
    9. '```' → logprob: -15.002498626708984
    10. '＋' → logprob: -15.252498626708984

Token 38: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.625
    3. '+' → logprob: -16.5
    4. '```' → logprob: -17.625
    5. '   ' → logprob: -18.875
    6. '07' → logprob: -19.875
    7. '9' → logprob: -20.0
    8. '

' → logprob: -20.75
    9. '  ' → logprob: -20.75
    10. '' → logprob: -20.9375

Token 39: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -18.0
    3. '```' → logprob: -18.25
    4. ' ' → logprob: -18.875
    5. '   ' → logprob: -19.875
    6. '

' → logprob: -20.8125
    7. '07' → logprob: -20.9375
    8. '' → logprob: -21.3125
    9. '9' → logprob: -21.625
    10. '``' → logprob: -21.9375

Token 40: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2752528488636017
    2. '   ' → logprob: -2.0252528190612793
    3. '    
' → logprob: -2.6502528190612793
    4. '<|end|>' → logprob: -4.650252819061279
    5. '\' → logprob: -5.150252819061279
    6. '```' → logprob: -5.275252819061279
    7. '\n' → logprob: -5.775252819061279
    8. ' 
' → logprob: -5.775252819061279
    9. 'n' → logprob: -5.900252819061279
    10. '' → logprob: -6.150252819061279

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15189886093139648
    2. 'n' → logprob: -3.0268988609313965
    3. '    
' → logprob: -3.2768988609313965
    4. '
' → logprob: -4.0268988609313965
    5. ' 
' → logprob: -4.6518988609313965
    6. 'result' → logprob: -4.9018988609313965
    7. '```' → logprob: -5.5268988609313965
    8. '   
' → logprob: -6.1518988609313965
    9. 'factor' → logprob: -6.1518988609313965
    10. '\n' → logprob: -6.5268988609313965

Token 42: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.184319019317627
    2. 'result' → logprob: -1.184319019317627
    3. 'fact' → logprob: -2.059319019317627
    4. ' result' → logprob: -3.184319019317627
    5. 'factor' → logprob: -3.184319019317627
    6. 'res' → logprob: -3.309319019317627
    7. ' ans' → logprob: -3.559319019317627
    8. 'dp' → logprob: -3.684319019317627
    9. 'f' → logprob: -4.434319019317627
    10. 'c' → logprob: -4.684319019317627

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020576458424329758
    2. '=' → logprob: -3.8955764770507812
    3. ' ' → logprob: -10.520576477050781
    4. ' +=' → logprob: -12.770576477050781
    5. ' =
' → logprob: -13.145576477050781
    6. ' *=' → logprob: -13.395576477050781
    7. ',' → logprob: -15.270576477050781
    8. ' =)' → logprob: -15.520576477050781
    9. ')' → logprob: -16.02057647705078
    10. ' ^=' → logprob: -16.14557647705078

Token 44: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016317985951900482
    2. ' ' → logprob: -4.266317844390869
    3. '0' → logprob: -6.391317844390869
    4. 'pow' → logprob: -7.891317844390869
    5. ' pow' → logprob: -10.641318321228027
    6. '(' → logprob: -10.766318321228027
    7. ' n' → logprob: -10.891318321228027
    8. ' k' → logprob: -11.266318321228027
    9. 'n' → logprob: -11.641318321228027
    10. 'k' → logprob: -11.766318321228027

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013943701051175594
    2. 'pow' → logprob: -5.013943672180176
    3. '0' → logprob: -5.138943672180176
    4. 'k' → logprob: -7.513943672180176
    5. '(' → logprob: -8.263943672180176
    6. '(k' → logprob: -8.638943672180176
    7. 'n' → logprob: -8.888943672180176
    8. '(n' → logprob: -9.013943672180176
    9. '-' → logprob: -10.763943672180176
    10. 'sum' → logprob: -11.138943672180176

Token 46: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7048324942588806
    2. '<|end|>' → logprob: -0.9548324942588806
    3. '   ' → logprob: -3.0798325538635254
    4. '\n' → logprob: -3.3298325538635254
    5. '    
' → logprob: -4.829832553863525
    6. '<|end|>' → logprob: -5.079832553863525
    7. ' for' → logprob: -5.454832553863525
    8. '' → logprob: -5.704832553863525
    9. '\' → logprob: -5.954832553863525
    10. ',' → logprob: -6.204832553863525

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5125778913497925
    2. '
' → logprob: -1.6375778913497925
    3. '    
' → logprob: -2.637578010559082
    4. '\n' → logprob: -2.887578010559082
    5. '<|end|>' → logprob: -3.637578010559082
    6. ' for' → logprob: -3.762578010559082
    7. 'for' → logprob: -4.887578010559082
    8. '  
' → logprob: -5.137578010559082
    9. '   
' → logprob: -5.512578010559082
    10. '\' → logprob: -5.512578010559082

Token 48: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8999098539352417
    2. 'for' (adapté à ' for') → logprob: -1.1499098539352417
    3. '\n' → logprob: -1.5249098539352417
    4. '   ' → logprob: -4.149909973144531
    5. '
' → logprob: -4.274909973144531
    6. '\' → logprob: -4.524909973144531
    7. '    
' → logprob: -5.774909973144531
    8. '<|end|>' → logprob: -5.774909973144531
    9. ' 
' → logprob: -5.899909973144531
    10. '' → logprob: -6.399909973144531

Token 49: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.13026472926139832
    2. ' _' → logprob: -2.5052647590637207
    3. ' ' → logprob: -3.3802647590637207
    4. '_' → logprob: -5.130264759063721
    5. 'i' → logprob: -7.630264759063721
    6. '	i' → logprob: -11.880264282226562
    7. ' ' → logprob: -12.005264282226562
    8. ' )' → logprob: -12.380264282226562
    9. '_i' → logprob: -12.505264282226562
    10. ' ‌' → logprob: -12.505264282226562

Token 50: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006822762545198202
    2. 'in' → logprob: -5.00682258605957
    3. ' ' → logprob: -9.50682258605957
    4. 'range' → logprob: -10.88182258605957
    5. '  ' → logprob: -13.13182258605957
    6. 'n' → logprob: -13.13182258605957
    7. ',' → logprob: -13.13182258605957
    8. ' range' → logprob: -13.50682258605957
    9. '<|end|>' → logprob: -14.00682258605957
    10. '   ' → logprob: -14.00682258605957

Token 51: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.179852694272995
    2. ' range' → logprob: -1.8048527240753174
    3. '   ' → logprob: -10.179852485656738
    4. '	range' → logprob: -10.804852485656738
    5. ' ' → logprob: -11.179852485656738
    6. '  ' → logprob: -11.429852485656738
    7. 'n' → logprob: -12.054852485656738
    8. '(range' → logprob: -12.054852485656738
    9. 'rang' → logprob: -13.054852485656738
    10. '```' → logprob: -13.179852485656738

Token 52: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.37878116965293884
    2. '(' → logprob: -1.6287811994552612
    3. '(k' → logprob: -2.1287810802459717
    4. ' (' → logprob: -9.50378131866455
    5. '(i' → logprob: -9.62878131866455
    6. '(range' → logprob: -11.50378131866455
    7. '(len' → logprob: -14.37878131866455
    8. '(
' → logprob: -14.50378131866455
    9. '((' → logprob: -14.75378131866455
    10. '(s' → logprob: -15.12878131866455

Token 53: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1415187120437622
    2. ',' → logprob: -2.5165185928344727
    3. ' ):' → logprob: -3.5165185928344727
    4. '+' → logprob: -4.391518592834473
    5. ')' → logprob: -5.141518592834473
    6. ' ,' → logprob: -6.891518592834473
    7. ' +' → logprob: -7.016518592834473
    8. ' ' → logprob: -8.141518592834473
    9. '):
' → logprob: -8.391518592834473
    10. '   ' → logprob: -8.516518592834473

Token 54: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07843051105737686
    2. ' ans' → logprob: -2.703430414199829
    3. '	ans' → logprob: -6.203430652618408
    4. '<|end|>' → logprob: -6.578430652618408
    5. '       ' → logprob: -6.828430652618408
    6. ')' → logprob: -7.453430652618408
    7. '(ans' → logprob: -7.453430652618408
    8. 'ans' → logprob: -7.828430652618408
    9. '*' → logprob: -7.953430652618408
    10. '    
' → logprob: -8.32843017578125

Token 55: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.43860769271850586
    2. 'ans' (adapté à ' ans') → logprob: -1.1886076927185059
    3. '   ' → logprob: -3.938607692718506
    4. '(ans' → logprob: -3.938607692718506
    5. '	ans' → logprob: -5.688607692718506
    6. '(' → logprob: -5.938607692718506
    7. ' (' → logprob: -6.188607692718506
    8. '    ' → logprob: -7.188607692718506
    9. ' ' → logprob: -7.438607692718506
    10. '```' → logprob: -7.813607692718506

Token 56: ' *=' (ID: 25253)
  Prédit: ' *='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.00811971165239811
    2. '*' → logprob: -5.758119583129883
    3. ' *' → logprob: -6.008119583129883
    4. '*=' → logprob: -6.383119583129883
    5. ' =' → logprob: -7.633119583129883
    6. '=' → logprob: -8.758119583129883
    7. ' ' → logprob: -9.383119583129883
    8. ' ' → logprob: -10.758119583129883
    9. '```' → logprob: -11.133119583129883
    10. '**' → logprob: -12.633119583129883

Token 57: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.034557487815618515
    2. '(k' → logprob: -3.784557580947876
    3. ' k' → logprob: -4.534557342529297
    4. ' (' → logprob: -8.034557342529297
    5. '(' → logprob: -8.659557342529297
    6. '(n' → logprob: -12.034557342529297
    7. 'n' → logprob: -12.409557342529297
    8. ' ' → logprob: -12.909557342529297
    9. '   ' → logprob: -12.909557342529297
    10. '	k' → logprob: -13.784557342529297

Token 58: ' -' (ID: 533)
  Prédit: '-i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.4154493510723114
    2. '-' → logprob: -1.5404493808746338
    3. ' -' → logprob: -2.165449380874634
    4. '-n' → logprob: -5.165449142456055
    5. '
' → logprob: -6.165449142456055
    6. '<|end|>' → logprob: -6.165449142456055
    7. '-k' → logprob: -8.165449142456055
    8. '    
' → logprob: -9.165449142456055
    9. '+i' → logprob: -9.165449142456055
    10. '<|end|>' → logprob: -9.290449142456055

Token 59: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0031917323358356953
    2. ' i' → logprob: -5.753191947937012
    3. 'n' → logprob: -11.753191947937012
    4. ' ' → logprob: -12.628191947937012
    5. '	i' → logprob: -14.003191947937012
    6. '(' → logprob: -14.253191947937012
    7. '   ' → logprob: -14.753191947937012
    8. '(i' → logprob: -15.378191947937012
    9. '  ' → logprob: -15.628191947937012
    10. '_i' → logprob: -15.753191947937012

Token 60: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7900329232215881
    2. '%' → logprob: -1.1650328636169434
    3. ' %' → logprob: -2.0400328636169434
    4. '
' → logprob: -3.1650328636169434
    5. '   ' → logprob: -3.7900328636169434
    6. '       ' → logprob: -4.540032863616943
    7. '<|end|>' → logprob: -5.290032863616943
    8. ' 
' → logprob: -5.415032863616943
    9. ' )' → logprob: -5.665032863616943
    10. ' ' → logprob: -5.665032863616943

Token 61: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.2701534330844879
    2. ' ans' → logprob: -1.7701534032821655
    3. ')' → logprob: -3.520153522491455
    4. '%' → logprob: -4.270153522491455
    5. '(ans' → logprob: -4.270153522491455
    6. '       ' → logprob: -6.270153522491455
    7. '	ans' → logprob: -6.645153522491455
    8. '_ans' → logprob: -6.895153522491455
    9. 'mod' → logprob: -7.020153522491455
    10. '<|end|>' → logprob: -7.270153522491455

Token 63: ' %=' (ID: 117035)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.7953590750694275
    2. '%' → logprob: -1.2953591346740723
    3. ' %=' → logprob: -1.2953591346740723
    4. ' ' → logprob: -7.670359134674072
    5. '%=' → logprob: -8.045358657836914
    6. ')' → logprob: -9.420358657836914
    7. ' ' → logprob: -10.545358657836914
    8. '```' → logprob: -11.045358657836914
    9. '`' → logprob: -11.295358657836914
    10. ')%' → logprob: -11.420358657836914

Token 64: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.25195151567459106
    2. ' mod' → logprob: -1.5019514560699463
    3. '(mod' → logprob: -10.751951217651367
    4. ' ' → logprob: -14.251951217651367
    5. '	mod' → logprob: -15.376951217651367
    6. '10' → logprob: -16.251951217651367
    7. ' ' → logprob: -17.251951217651367
    8. ' мод' → logprob: -17.376951217651367
    9. ' modul' → logprob: -18.126951217651367
    10. '_mod' → logprob: -18.626951217651367

Token 65: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23395994305610657
    2. '
' → logprob: -1.7339599132537842
    3. '<|end|>' → logprob: -3.858959913253784
    4. '    
' → logprob: -5.233960151672363
    5. '```' → logprob: -6.733960151672363
    6. '  
' → logprob: -6.983960151672363
    7. ' ' → logprob: -7.358960151672363
    8. '\n' → logprob: -7.858960151672363
    9. '
' → logprob: -7.983960151672363
    10. '  ' → logprob: -8.108960151672363

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00356894638389349
    2. '<|end|>' → logprob: -6.37856912612915
    3. 'print' → logprob: -6.87856912612915
    4. '    
' → logprob: -7.87856912612915
    5. '```' → logprob: -8.878568649291992
    6. 'return' → logprob: -9.378568649291992
    7. '  ' → logprob: -10.128568649291992
    8. '       ' → logprob: -10.378568649291992
    9. '\n' → logprob: -10.503568649291992
    10. ' return' → logprob: -10.628568649291992

Token 67: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.25264620780944824
    2. '   ' → logprob: -1.5026462078094482
    3. ' print' → logprob: -8.002646446228027
    4. '```' → logprob: -8.752646446228027
    5. '    
' → logprob: -9.627646446228027
    6. 'return' → logprob: -9.752646446228027
    7. 'for' → logprob: -10.127646446228027
    8. '<|end|>' → logprob: -10.877646446228027
    9. '  ' → logprob: -11.252646446228027
    10. '	print' → logprob: -12.127646446228027

Token 68: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.061983373016119
    2. '(' → logprob: -2.811983346939087
    3. '()' → logprob: -12.686983108520508
    4. '((' → logprob: -12.936983108520508
    5. '(n' → logprob: -13.061983108520508
    6. '(answer' → logprob: -13.311983108520508
    7. ' (' → logprob: -13.311983108520508
    8. 'ans' → logprob: -13.686983108520508
    9. '(abs' → logprob: -13.936983108520508
    10. '(
' → logprob: -15.061983108520508

Token 69: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.034592388459714e-06
    2. ' )' → logprob: -12.875005722045898
    3. ')
' → logprob: -13.500005722045898
    4. '))' → logprob: -14.500005722045898
    5. '*' → logprob: -15.125005722045898
    6. ')`' → logprob: -15.625005722045898
    7. '**' → logprob: -15.750005722045898
    8. '+' → logprob: -16.0000057220459
    9. ')}' → logprob: -16.1250057220459
    10. '   ' → logprob: -16.1250057220459

Token 70: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0007324361358769238
    2. '__' → logprob: -7.375732421875
    3. ' ' → logprob: -9.375732421875
    4. ' ' → logprob: -11.750732421875
    5. ' _' → logprob: -12.250732421875
    6. '_' → logprob: -12.875732421875
    7. ' ​' → logprob: -13.500732421875
    8. '_name' → logprob: -13.625732421875
    9. ' main' → logprob: -14.375732421875
    10. ' name' → logprob: -14.625732421875

Token 72: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.05565609037876129
    2. ' ==' → logprob: -3.0556561946868896
    3. '==' → logprob: -5.5556559562683105
    4. ' __' → logprob: -6.3056559562683105
    5. 'name' → logprob: -8.555656433105469
    6. '_' → logprob: -8.555656433105469
    7. '(' → logprob: -8.555656433105469
    8. '_name' → logprob: -9.055656433105469
    9. '```' → logprob: -9.305656433105469
    10. '<|end|>' → logprob: -9.555656433105469

Token 73: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.45848218582978e-06
    2. '_' → logprob: -14.12500286102295
    3. '__.__' → logprob: -14.12500286102295
    4. '____' → logprob: -14.75000286102295
    5. '__

' → logprob: -15.75000286102295
    6. '___' → logprob: -15.87500286102295
    7. '__
' → logprob: -16.000001907348633
    8. '__('' → logprob: -17.125001907348633
    9. '__("' → logprob: -17.125001907348633
    10. '__["' → logprob: -17.750001907348633

Token 74: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.006513221189379692
    2. '==' → logprob: -5.6315131187438965
    3. '__' → logprob: -5.8815131187438965
    4. '=="' → logprob: -10.006513595581055
    5. ' =' → logprob: -10.506513595581055
    6. ' =="' → logprob: -10.756513595581055
    7. '=='' → logprob: -12.131513595581055
    8. '_' → logprob: -12.256513595581055
    9. ' ' → logprob: -12.631513595581055
    10. '=' → logprob: -12.881513595581055

Token 75: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.048636648803949356
    2. ''' → logprob: -3.0486366748809814
    3. ' "__' → logprob: -10.173636436462402
    4. ' "' → logprob: -11.798636436462402
    5. '__' → logprob: -13.048636436462402
    6. ' '__' → logprob: -13.798636436462402
    7. ' '' → logprob: -15.298636436462402
    8. '"user' → logprob: -16.17363739013672
    9. ' ' → logprob: -16.79863739013672
    10. '`' → logprob: -17.42363739013672

Token 76: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0003362966235727072
    2. 'name' → logprob: -8.000336647033691
    3. 'm' → logprob: -14.500336647033691
    4. '_main' → logprob: -15.750336647033691
    5. 'ma' → logprob: -16.250335693359375
    6. '__' → logprob: -17.250335693359375
    7. ' main' → logprob: -17.625335693359375
    8. 'maine' → logprob: -18.000335693359375
    9. '__':
' → logprob: -19.000335693359375
    10. '-main' → logprob: -20.125335693359375

Token 77: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.048606324940919876
    2. '__' → logprob: -3.0486063957214355
    3. '__":
' → logprob: -11.423605918884277
    4. '__:' → logprob: -12.673605918884277
    5. '__.' → logprob: -12.923605918884277
    6. ''' → logprob: -14.173605918884277
    7. '_' → logprob: -14.173605918884277
    8. '':' → logprob: -14.673605918884277
    9. '__('' → logprob: -15.048605918884277
    10. '__
' → logprob: -16.548606872558594

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03289078548550606
    2. '<|end|>' → logprob: -4.282890796661377
    3. '    
' → logprob: -5.407890796661377
    4. ' main' → logprob: -5.532890796661377
    5. '.mainloop' → logprob: -5.907890796661377
    6. '	main' → logprob: -6.032890796661377
    7. ':' → logprob: -7.657890796661377
    8. '<|end|>' → logprob: -7.657890796661377
    9. '  ' → logprob: -7.782890796661377
    10. '.' → logprob: -7.907890796661377

Token 79: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.07891799509525299
    2. ' main' → logprob: -2.578917980194092
    3. '	main' → logprob: -10.70391845703125
    4. '   ' → logprob: -12.20391845703125
    5. '_main' → logprob: -15.20391845703125
    6. ' ' → logprob: -16.45391845703125
    7. ' ' → logprob: -16.57891845703125
    8. '  ' → logprob: -16.57891845703125
    9. 'maine' → logprob: -16.70391845703125
    10. '.main' → logprob: -16.95391845703125

Token 80: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2024718075990677
    2. '()' → logprob: -1.7024718523025513
    3. '(
' → logprob: -7.577471733093262
    4. '()
' → logprob: -7.827471733093262
    5. '```' → logprob: -10.202471733093262
    6. '\n' → logprob: -10.577471733093262
    7. '
' → logprob: -11.077471733093262
    8. '#' → logprob: -11.327471733093262
    9. '\' → logprob: -12.077471733093262
    10. '"' → logprob: -12.077471733093262


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 78
Tokens correctement prédits (1ère position, stricte): 35
Tokens correctement prédits (1ère position, avec adaptation): 38
Tokens correctement prédits (top 10): 67
Précision stricte (1ère position): 44.87%
Précision adaptée (1ère position): 48.72%
Précision (top 10): 85.90%
================================================================================
