================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def bubbleSort(A,N):  # N個の要素を含む0-オリジンの配列A
    flag = 1
    i = 0  # 未ソート部分列の先頭インデックス
    while flag == 1:
        flag = 0
        for j in range(N-1,0,-1):
            if A[j] < A[j-1]:
                A[j], A[j-1] = A[j-1], A[j]
                flag = 1
                i += 1
    print(*A)
    print(i)

N = int(input())
A = list(map(int,input().split()))

bubbleSort(A,N)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' bubble' (ID: 40447)
  → Token d'amorce (pas de prédiction)

Token 2: 'Sort' (ID: 11602)
  → Token d'amorce (pas de prédiction)

Token 3: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00021617230959236622
    2. '(:' → logprob: -8.875216484069824
    3. ' (' → logprob: -10.875216484069824
    4. ':' → logprob: -10.875216484069824
    5. '```' → logprob: -11.375216484069824
    6. '(
' → logprob: -11.625216484069824
    7. '():' → logprob: -11.750216484069824
    8. ''' → logprob: -13.250216484069824
    9. '(_:' → logprob: -13.750216484069824
    10. '((' → logprob: -14.125216484069824

Token 4: ',N' (ID: 49539)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25046953558921814
    2. '[' → logprob: -1.7504695653915405
    3. ')' → logprob: -3.125469446182251
    4. ',' → logprob: -5.75046968460083
    5. '[]):' → logprob: -8.625469207763672
    6. ':' → logprob: -8.750469207763672
    7. '```' → logprob: -9.000469207763672
    8. '):
' → logprob: -9.625469207763672
    9. '[A' → logprob: -9.625469207763672
    10. '[
' → logprob: -11.000469207763672

Token 5: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010110429488122463
    2. ')' → logprob: -4.635110378265381
    3. ':' → logprob: -8.135110855102539
    4. '```' → logprob: -10.635110855102539
    5. ''):' → logprob: -11.135110855102539
    6. ',' → logprob: -12.260110855102539
    7. '):
' → logprob: -12.510110855102539
    8. ' ):' → logprob: -12.885110855102539
    9. '`:' → logprob: -13.010110855102539
    10. '**' → logprob: -13.635110855102539

Token 6: ' ' (ID: 220)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6446349620819092
    2. '
' → logprob: -2.019634962081909
    3. '```' → logprob: -2.019634962081909
    4. '   ' → logprob: -2.269634962081909
    5. '\' → logprob: -3.519634962081909
    6. '\n' → logprob: -4.019635200500488
    7. '' → logprob: -4.144635200500488
    8. '  
' → logprob: -4.519635200500488
    9. '    
' → logprob: -4.519635200500488
    10. '``' → logprob: -5.019635200500488

Token 7: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9891604781150818
    2. '   ' → logprob: -1.1141605377197266
    3. '\n' → logprob: -1.9891605377197266
    4. '
' → logprob: -2.9891605377197266
    5. '\' → logprob: -2.9891605377197266
    6. '```' → logprob: -3.6141605377197266
    7. '' → logprob: -4.239160537719727
    8. '    
' → logprob: -5.364160537719727
    9. ':
' → logprob: -5.864160537719727
    10. '    ' → logprob: -5.989160537719727

Token 8: ' N' (ID: 478)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.016558608040213585
    2. ' for' → logprob: -4.891558647155762
    3. ''' → logprob: -5.391558647155762
    4. 'for' → logprob: -7.641558647155762
    5. '  ' → logprob: -7.766558647155762
    6. '   ' → logprob: -7.766558647155762
    7. '"' → logprob: -7.766558647155762
    8. 'i' → logprob: -8.016558647155762
    9. ' i' → logprob: -8.391558647155762
    10. '`' → logprob: -8.391558647155762

Token 9: '個' (ID: 32508)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3991512060165405
    2. ' =' → logprob: -3.02415132522583
    3. ')' → logprob: -3.14915132522583
    4. '=' → logprob: -3.39915132522583
    5. ' )' → logprob: -3.89915132522583
    6. ' ,' → logprob: -4.14915132522583
    7. '  ' → logprob: -4.14915132522583
    8. ' :' → logprob: -4.27415132522583
    9. ' is' → logprob: -4.27415132522583
    10. ' space' → logprob: -4.27415132522583

Token 10: 'の' (ID: 3385)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009784307330846786
    2. ':
' → logprob: -6.00978422164917
    3. ' :' → logprob: -6.13478422164917
    4. '   ' → logprob: -6.50978422164917
    5. '```' → logprob: -7.13478422164917
    6. '\' → logprob: -7.25978422164917
    7. ' ' → logprob: -8.259784698486328
    8. '
' → logprob: -8.259784698486328
    9. '' → logprob: -8.384784698486328
    10. '):' → logprob: -8.884784698486328

Token 11: '要' (ID: 7724)
  Prédit: '要'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '要' → logprob: -0.0452788844704628
    2. ' 要' → logprob: -3.670278787612915
    3. ' elements' → logprob: -5.045279026031494
    4. 'elements' → logprob: -5.795279026031494
    5. ' ' → logprob: -5.920279026031494
    6. ' for' → logprob: -6.545279026031494
    7. '整数' → logprob: -7.045279026031494
    8. 'デ' → logprob: -7.170279026031494
    9. '元素' → logprob: -7.420279026031494
    10. 'for' → logprob: -7.545279026031494

Token 12: '素' (ID: 31399)
  Prédit: '素'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '素' → logprob: -9.829823102336377e-05
    2. '```' → logprob: -9.75009822845459
    3. '目' → logprob: -11.25009822845459
    4. '数' → logprob: -11.37509822845459
    5. 'def' → logprob: -12.87509822845459
    6. '   ' → logprob: -13.00009822845459
    7. '）' → logprob: -13.50009822845459
    8. ')' → logprob: -13.62509822845459
    9. '`' → logprob: -13.87509822845459
    10. '件' → logprob: -14.00009822845459

Token 13: 'を' (ID: 7277)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03694089874625206
    2. '   ' → logprob: -3.786940813064575
    3. '：' → logprob: -5.786941051483154
    4. ' :' → logprob: -5.786941051483154
    5. ':
' → logprob: -6.286941051483154
    6. ' ' → logprob: -6.411941051483154
    7. '):' → logprob: -6.911941051483154
    8. ',' → logprob: -7.036941051483154
    9. '```' → logprob: -7.661941051483154
    10. '
' → logprob: -8.411940574645996

Token 14: '含' (ID: 47373)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4305313229560852
    2. ':' → logprob: -1.5555312633514404
    3. ' for' → logprob: -2.8055312633514404
    4. ' :' → logprob: -3.8055312633514404
    5. ',' → logprob: -4.1805315017700195
    6. 'for' → logprob: -4.6805315017700195
    7. 'の' → logprob: -4.9305315017700195
    8. 'を' → logprob: -5.3055315017700195
    9. '   ' → logprob: -6.0555315017700195
    10. 'で' → logprob: -6.3055315017700195

Token 15: 'む' (ID: 44286)
  Prédit: 'む'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'む' → logprob: -0.00010282796574756503
    2. 'ん' → logprob: -10.250102996826172
    3. 'み' → logprob: -10.625102996826172
    4. '}' → logprob: -11.750102996826172
    5. ' \xe3\x82' → logprob: -11.875102996826172
    6. '   ' → logprob: -12.000102996826172
    7. '```' → logprob: -12.500102996826172
    8. '-' → logprob: -12.625102996826172
    9. '	' → logprob: -12.875102996826172
    10. '　' → logprob: -13.250102996826172

Token 16: '0' (ID: 15)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37413695454597473
    2. ':' → logprob: -2.4991369247436523
    3. '  
' → logprob: -3.1241369247436523
    4. ' ' → logprob: -3.2491369247436523
    5. '```' → logprob: -3.2491369247436523
    6. ' 
' → logprob: -3.3741369247436523
    7. '   ' → logprob: -3.9991369247436523
    8. '   
' → logprob: -4.624136924743652
    9. '' → logprob: -4.624136924743652
    10. '
' → logprob: -5.124136924743652

Token 17: '-' (ID: 12)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.051570177078247
    2. 'から' → logprob: -1.551570177078247
    3. '～' → logprob: -1.926570177078247
    4. '〜' → logprob: -2.676570177078247
    5. '番' → logprob: -2.926570177078247
    6. '次' → logprob: -3.801570177078247
    7. '-based' → logprob: -3.801570177078247
    8. 'based' → logprob: -3.801570177078247
    9. 'index' → logprob: -4.301569938659668
    10. 'イン' → logprob: -4.426569938659668

Token 18: 'オ' (ID: 22708)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08210095763206482
    2. 'から' → logprob: -4.082100868225098
    3. 'x' → logprob: -4.207100868225098
    4. 'based' → logprob: -4.707100868225098
    5. '  ' → logprob: -5.332100868225098
    6. ' )' → logprob: -5.332100868225098
    7. 'index' → logprob: -5.707100868225098
    8. ' A' → logprob: -6.332100868225098
    9. '次' → logprob: -6.457100868225098
    10. '始' → logprob: -6.582100868225098

Token 19: 'リ' (ID: 9007)
  Prédit: 'ブ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ブ' → logprob: -0.6521060466766357
    2. 'フ' → logprob: -1.4021060466766357
    3. 'ー' → logprob: -2.2771060466766357
    4. 'リ' → logprob: -2.7771060466766357
    5. 'r' → logprob: -3.7771060466766357
    6. '```' → logprob: -4.777106285095215
    7. '``' → logprob: -5.277106285095215
    8. 'プ' → logprob: -5.277106285095215
    9. 'ン' → logprob: -5.402106285095215
    10. 'ーダ' → logprob: -5.402106285095215

Token 20: 'ジ' (ID: 14974)
  Prédit: 'ジ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ジ' → logprob: -0.0701577290892601
    2. 'ン' → logprob: -2.945157766342163
    3. 'ギ' → logprob: -4.695157527923584
    4. 'ス' → logprob: -6.070157527923584
    5. 'スト' → logprob: -6.945157527923584
    6. 'ント' → logprob: -7.320157527923584
    7. 'g' → logprob: -7.695157527923584
    8. 'ズ' → logprob: -7.820157527923584
    9. 'ん' → logprob: -8.320158004760742
    10. '``' → logprob: -8.445158004760742

Token 21: 'ン' (ID: 4025)
  Prédit: 'ン'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ン' → logprob: -0.43326693773269653
    2. 'ント' → logprob: -1.8082668781280518
    3. 'ェ' → logprob: -3.1832668781280518
    4. 'ャ' → logprob: -3.6832668781280518
    5. 'ョ' → logprob: -3.6832668781280518
    6. 'ット' → logprob: -3.9332668781280518
    7. 'ク' → logprob: -4.308267116546631
    8. '列' → logprob: -4.933267116546631
    9. 'ング' → logprob: -5.308267116546631
    10. '切' → logprob: -5.308267116546631

Token 22: 'の' (ID: 3385)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42473623156547546
    2. ' for' → logprob: -1.6747362613677979
    3. ' の' → logprob: -3.174736261367798
    4. '   ' → logprob: -3.424736261367798
    5. 'の' → logprob: -3.424736261367798
    6. 'で' → logprob: -4.049736022949219
    7. '[' → logprob: -4.674736022949219
    8. 'for' → logprob: -5.549736022949219
    9. '  ' → logprob: -5.674736022949219
    10. ' イン' → logprob: -5.799736022949219

Token 23: '配' (ID: 23246)
  Prédit: '配'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '配' → logprob: -1.155079960823059
    2. 'リ' → logprob: -1.530079960823059
    3. ' list' → logprob: -1.780079960823059
    4. ' 配' → logprob: -2.1550798416137695
    5. ' ' → logprob: -2.2800798416137695
    6. ' for' → logprob: -3.4050798416137695
    7. ' array' → logprob: -3.6550798416137695
    8. ' リ' → logprob: -4.0300798416137695
    9. 'list' → logprob: -7.0300798416137695
    10. 'array' → logprob: -7.4050798416137695

Token 24: '列' (ID: 19047)
  Prédit: '列'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '列' → logprob: -6.551721889991313e-05
    2. '列表' → logprob: -10.125065803527832
    3. '[]' → logprob: -12.250065803527832
    4. '）' → logprob: -12.375065803527832
    5. '   ' → logprob: -12.875065803527832
    6. '[' → logprob: -13.000065803527832
    7. ')' → logprob: -13.250065803527832
    8. ' \xe5\x88' → logprob: -13.625065803527832
    9. ' lists' → logprob: -13.625065803527832
    10. ' list' → logprob: -13.625065803527832

Token 25: 'A' (ID: 32)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012219411320984364
    2. ':
' → logprob: -5.637219429016113
    3. ' :' → logprob: -6.012219429016113
    4. '
' → logprob: -6.387219429016113
    5. '：' → logprob: -6.387219429016113
    6. ' ' → logprob: -7.137219429016113
    7. '   ' → logprob: -7.762219429016113
    8. '\n' → logprob: -8.512219429016113
    9. '):' → logprob: -8.637219429016113
    10. '```' → logprob: -8.637219429016113

Token 26: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023599959909915924
    2. ':
' → logprob: -4.148600101470947
    3. '   ' → logprob: -5.773600101470947
    4. '
' → logprob: -6.023600101470947
    5. '```' → logprob: -7.023600101470947
    6. ' :' → logprob: -8.773599624633789
    7. '  
' → logprob: -9.023599624633789
    8. ' ' → logprob: -9.273599624633789
    9. '：' → logprob: -9.398599624633789
    10. '):' → logprob: -9.648599624633789

Token 27: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0704905092716217
    2. '   ' → logprob: -3.070490598678589
    3. ':
' → logprob: -4.57049036026001
    4. '
' → logprob: -4.94549036026001
    5. '```' → logprob: -6.82049036026001
    6. ' :' → logprob: -7.19549036026001
    7. ' for' → logprob: -7.44549036026001
    8. '  
' → logprob: -7.94549036026001
    9. '    
' → logprob: -8.320490837097168
    10. ' 
' → logprob: -8.820490837097168

Token 28: ' flag' (ID: 9641)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12909553945064545
    2. 'for' → logprob: -2.6290955543518066
    3. '   ' → logprob: -3.3790955543518066
    4. 'n' → logprob: -5.004095554351807
    5. '```' → logprob: -6.254095554351807
    6. ' n' → logprob: -6.879095554351807
    7. ' 
' → logprob: -6.879095554351807
    8. '    ' → logprob: -7.004095554351807
    9. '    
' → logprob: -7.254095554351807
    10. '
' → logprob: -7.629095554351807

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004126249812543392
    2. '=' → logprob: -5.504126071929932
    3. ' ' → logprob: -10.50412654876709
    4. '=True' → logprob: -11.62912654876709
    5. '＝' → logprob: -12.37912654876709
    6. '=False' → logprob: -12.75412654876709
    7. '   ' → logprob: -13.75412654876709
    8. '  ' → logprob: -14.00412654876709
    9. '    ' → logprob: -14.00412654876709
    10. ',' → logprob: -14.25412654876709

Token 30: ' ' (ID: 220)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.011403822340071201
    2. 'True' → logprob: -4.636404037475586
    3. ' False' → logprob: -6.511404037475586
    4. ' ' → logprob: -9.136404037475586
    5. 'False' → logprob: -9.886404037475586
    6. '1' → logprob: -14.636404037475586
    7. '    ' → logprob: -14.886404037475586
    8. '   ' → logprob: -15.136404037475586
    9. '  ' → logprob: -15.511404037475586
    10. '　' → logprob: -16.261404037475586

Token 31: '1' (ID: 16)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3764980137348175
    2. ' True' → logprob: -1.2514979839324951
    3. 'False' → logprob: -3.751497983932495
    4. ' False' → logprob: -5.501498222351074
    5. '1' → logprob: -9.751498222351074
    6. ' ' → logprob: -11.001498222351074
    7. '0' → logprob: -11.126498222351074
    8. '   ' → logprob: -11.751498222351074
    9. '  ' → logprob: -13.876498222351074
    10. 'Tr' → logprob: -14.251498222351074

Token 32: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5692065954208374
    2. '<|end|>' → logprob: -1.4442065954208374
    3. ' 
' → logprob: -2.569206714630127
    4. ' ' → logprob: -3.444206714630127
    5. '  
' → logprob: -4.194206714630127
    6. '   ' → logprob: -4.319206714630127
    7. '<|end|>' → logprob: -4.819206714630127
    8. '    
' → logprob: -4.944206714630127
    9. '    ' → logprob: -4.944206714630127
    10. ')' → logprob: -5.069206714630127

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2793608605861664
    2. '
' → logprob: -2.654360771179199
    3. ' ' → logprob: -2.779360771179199
    4. '<|end|>' → logprob: -3.029360771179199
    5. '    ' → logprob: -4.279360771179199
    6. ')' → logprob: -4.279360771179199
    7. '  ' → logprob: -4.779360771179199
    8. '    
' → logprob: -5.029360771179199
    9. ':' → logprob: -5.654360771179199
    10. ',' → logprob: -5.904360771179199

Token 34: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8875958323478699
    2. ' ' → logprob: -1.3875958919525146
    3. '    ' → logprob: -2.2625958919525146
    4. '
' → logprob: -2.2625958919525146
    5. '  ' → logprob: -3.8875958919525146
    6. ' 
' → logprob: -3.8875958919525146
    7. '    
' → logprob: -4.0125956535339355
    8. ' while' → logprob: -4.2625956535339355
    9. '  
' → logprob: -4.8875956535339355
    10. '     
' → logprob: -4.8875956535339355

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.330524742603302
    2. '=' → logprob: -1.4555246829986572
    3. ' ' → logprob: -3.4555246829986572
    4. ' +=' → logprob: -4.455524921417236
    5. '  ' → logprob: -6.205524921417236
    6. '+' → logprob: -6.830524921417236
    7. ' <' → logprob: -7.455524921417236
    8. '   ' → logprob: -8.080524444580078
    9. '    ' → logprob: -8.580524444580078
    10. ' +' → logprob: -8.830524444580078

Token 36: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1271815448999405
    2. '0' → logprob: -2.1271815299987793
    3. '1' → logprob: -8.377182006835938
    4. ' N' → logprob: -11.252182006835938
    5. ' ' → logprob: -13.127182006835938
    6. '  ' → logprob: -13.127182006835938
    7. 'N' → logprob: -13.127182006835938
    8. '　' → logprob: -13.502182006835938
    9. '    ' → logprob: -13.877182006835938
    10. '   ' → logprob: -14.252182006835938

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018641725182533264
    2. ' ' → logprob: -4.018641948699951
    3. '1' → logprob: -7.643641948699951
    4. 'N' → logprob: -12.768641471862793
    5. '   ' → logprob: -12.768641471862793
    6. '  ' → logprob: -13.018641471862793
    7. '    ' → logprob: -13.018641471862793
    8. ' N' → logprob: -14.643641471862793
    9. '　' → logprob: -14.893641471862793
    10. '```' → logprob: -14.893641471862793

Token 38: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43607035279273987
    2. ' 
' → logprob: -1.6860703229904175
    3. '<|end|>' → logprob: -2.311070442199707
    4. '  
' → logprob: -3.686070442199707
    5. ' ' → logprob: -4.436070442199707
    6. '   
' → logprob: -5.186070442199707
    7. '\n' → logprob: -5.311070442199707
    8. '   ' → logprob: -5.436070442199707
    9. '    
' → logprob: -5.561070442199707
    10. ' while' → logprob: -6.061070442199707

Token 39: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2887113690376282
    2. ' 
' → logprob: -2.2887113094329834
    3. '<|end|>' → logprob: -3.4137113094329834
    4. '  
' → logprob: -3.5387113094329834
    5. ' ' → logprob: -4.1637115478515625
    6. ' while' → logprob: -4.2887115478515625
    7. '\n' → logprob: -4.2887115478515625
    8. '   
' → logprob: -4.5387115478515625
    9. '   ' → logprob: -4.9137115478515625
    10. '\' → logprob: -5.1637115478515625

Token 40: ' 未' (ID: 76829)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.1933145970106125
    2. 'while' → logprob: -2.568314552307129
    3. ' ' → logprob: -2.693314552307129
    4. '    ' → logprob: -4.193314552307129
    5. '   ' → logprob: -5.193314552307129
    6. '	while' → logprob: -5.818314552307129
    7. 'i' → logprob: -5.818314552307129
    8. '  ' → logprob: -6.568314552307129
    9. ' i' → logprob: -6.568314552307129
    10. '#' → logprob: -8.068314552307129

Token 41: 'ソ' (ID: 41675)
  Prédit: '完'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '完' → logprob: -0.9699177145957947
    2. '確' → logprob: -1.2199177742004395
    3. '完成' → logprob: -2.3449177742004395
    4. '終了' → logprob: -3.2199177742004395
    5. 'sorted' → logprob: -3.3449177742004395
    6. '済' → logprob: -3.4699177742004395
    7. 'done' → logprob: -3.9699177742004395
    8. 'ソ' → logprob: -3.9699177742004395
    9. '検' → logprob: -4.3449177742004395
    10. 'finished' → logprob: -4.4699177742004395

Token 42: 'ート' (ID: 34471)
  Prédit: 'ート'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ート' → logprob: -0.09699848294258118
    2. 'ー' → logprob: -2.471998453140259
    3. 'rt' → logprob: -5.096998691558838
    4. '```' → logprob: -7.846998691558838
    5. 'ータ' → logprob: -8.22199821472168
    6. 'orted' → logprob: -8.84699821472168
    7. '``' → logprob: -8.84699821472168
    8. 'ース' → logprob: -9.09699821472168
    9. 'ード' → logprob: -9.34699821472168
    10. 'r' → logprob: -9.34699821472168

Token 43: '部分' (ID: 69424)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1565680503845215
    2. '   ' → logprob: -1.4065680503845215
    3. '<|end|>' → logprob: -1.5315680503845215
    4. ')' → logprob: -2.9065680503845215
    5. '  ' → logprob: -3.1565680503845215
    6. '    ' → logprob: -3.2815680503845215
    7. '<|end|>' → logprob: -4.0315680503845215
    8. '
' → logprob: -4.1565680503845215
    9. ' )' → logprob: -4.1565680503845215
    10. 'の' → logprob: -5.2815680503845215

Token 44: '列' (ID: 19047)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.5881576538085938
    2. 'while' → logprob: -1.5881576538085938
    3. '   ' → logprob: -2.3381576538085938
    4. ' ' → logprob: -3.2131576538085938
    5. '
' → logprob: -3.7131576538085938
    6. ',' → logprob: -4.213157653808594
    7. ':' → logprob: -4.338157653808594
    8. '	while' → logprob: -4.463157653808594
    9. '   
' → logprob: -5.213157653808594
    10. '  ' → logprob: -5.213157653808594

Token 45: 'の' (ID: 3385)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4127050638198853
    2. ' while' → logprob: -1.5377050638198853
    3. ' ' → logprob: -1.7877050638198853
    4. '
' → logprob: -1.9127050638198853
    5. 'while' → logprob: -3.2877049446105957
    6. ':' → logprob: -3.2877049446105957
    7. ',' → logprob: -3.7877049446105957
    8. '  ' → logprob: -4.162704944610596
    9. '<|end|>' → logprob: -4.287704944610596
    10. '    ' → logprob: -4.412704944610596

Token 46: '先' (ID: 12231)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.19847160577774048
    2. '長' → logprob: -2.3234715461730957
    3. 'i' → logprob: -3.1984715461730957
    4. ' N' → logprob: -4.448471546173096
    5. 'length' → logprob: -4.573471546173096
    6. '要' → logprob: -5.698471546173096
    7. 'len' → logprob: -5.698471546173096
    8. 'n' → logprob: -6.448471546173096
    9. ' ' → logprob: -6.573471546173096
    10. 'l' → logprob: -6.823471546173096

Token 47: '頭' (ID: 73036)
  Prédit: '頭'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '頭' → logprob: -0.02510729804635048
    2. 'head' → logprob: -3.9001073837280273
    3. '端' → logprob: -6.025107383728027
    4. '头' → logprob: -7.275107383728027
    5. 'begin' → logprob: -8.025107383728027
    6. 'b' → logprob: -8.900107383728027
    7. 'i' → logprob: -8.900107383728027
    8. 't' → logprob: -9.275107383728027
    9. 'int' → logprob: -9.650107383728027
    10. 'start' → logprob: -9.900107383728027

Token 48: 'イン' (ID: 31632)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.6147406697273254
    2. 'while' → logprob: -1.7397406101226807
    3. '   ' → logprob: -1.8647406101226807
    4. ' 
' → logprob: -3.7397406101226807
    5. '
' → logprob: -3.9897406101226807
    6. '    
' → logprob: -4.48974084854126
    7. ' ' → logprob: -4.61474084854126
    8. '	while' → logprob: -4.73974084854126
    9. '\n' → logprob: -4.86474084854126
    10. '     
' → logprob: -4.98974084854126

Token 49: 'デ' (ID: 20951)
  Prédit: 'デ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'デ' → logprob: -0.0006433341186493635
    2. 'д' → logprob: -8.250643730163574
    3. '```' → logprob: -9.375643730163574
    4. '\xeb\x8d' → logprob: -9.875643730163574
    5. 'dex' → logprob: -9.875643730163574
    6. 'ド' → logprob: -10.125643730163574
    7. 'd' → logprob: -10.625643730163574
    8. '   ' → logprob: -11.000643730163574
    9. '\x' → logprob: -11.125643730163574
    10. '``' → logprob: -11.375643730163574

Token 50: 'ックス' (ID: 77123)
  Prédit: 'ク'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ク' → logprob: -0.8909029960632324
    2. 'ックス' → logprob: -1.1409029960632324
    3. 'x' → logprob: -1.3909029960632324
    4. 'キ' → logprob: -4.140902996063232
    5. 'ック' → logprob: -5.640902996063232
    6. '```' → logprob: -6.890902996063232
    7. 'く' → logprob: -7.890902996063232
    8. 'ント' → logprob: -9.26590347290039
    9. '\x' → logprob: -9.51590347290039
    10. 'کس' → logprob: -9.76590347290039

Token 51: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.418773889541626
    2. ' while' → logprob: -1.418773889541626
    3. 'while' → logprob: -3.918773889541626
    4. '\n' → logprob: -4.043773651123047
    5. '
' → logprob: -4.168773651123047
    6. '    
' → logprob: -4.418773651123047
    7. '   
' → logprob: -5.043773651123047
    8. ' 
' → logprob: -5.168773651123047
    9. '  
' → logprob: -5.418773651123047
    10. ' ' → logprob: -5.793773651123047

Token 52: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6101322770118713
    2. ' 
' → logprob: -1.6101322174072266
    3. ' while' → logprob: -2.1101322174072266
    4. '   ' → logprob: -3.1101322174072266
    5. '\n' → logprob: -3.6101322174072266
    6. '  
' → logprob: -4.110132217407227
    7. 'while' → logprob: -4.735132217407227
    8. '    
' → logprob: -4.985132217407227
    9. '   
' → logprob: -4.985132217407227
    10. ' ' → logprob: -5.110132217407227

Token 53: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.5426841378211975
    2. ':' → logprob: -1.5426840782165527
    3. '   ' → logprob: -2.7926840782165527
    4. ' ' → logprob: -3.0426840782165527
    5. 'while' (adapté à ' while') → logprob: -3.9176840782165527
    6. '\n' → logprob: -3.9176840782165527
    7. ' 
' → logprob: -4.167684078216553
    8. '
' → logprob: -5.167684078216553
    9. '	while' → logprob: -5.167684078216553
    10. '\' → logprob: -5.292684078216553

Token 54: ' flag' (ID: 9641)
  Prédit: ' flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.0014785595703870058
    2. 'flag' → logprob: -6.751478672027588
    3. ' ' → logprob: -9.12647819519043
    4. '	flag' → logprob: -9.25147819519043
    5. '(flag' → logprob: -9.75147819519043
    6. ' ' → logprob: -10.37647819519043
    7. '　' → logprob: -12.00147819519043
    8. '旗' → logprob: -13.00147819519043
    9. '  ' → logprob: -13.50147819519043
    10. ' not' → logprob: -13.75147819519043

Token 55: ' ==' (ID: 951)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5558680295944214
    2. ' ==' → logprob: -1.4308680295944214
    3. ' >' → logprob: -2.430868148803711
    4. ' :' → logprob: -3.305868148803711
    5. '>' → logprob: -3.805868148803711
    6. '=' → logprob: -4.180868148803711
    7. '==' → logprob: -4.305868148803711
    8. ' =' → logprob: -4.930868148803711
    9. ' !=' → logprob: -6.430868148803711
    10. ' and' → logprob: -6.805868148803711

Token 56: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.281154602766037
    2. '1' → logprob: -1.4061546325683594
    3. '    ' → logprob: -13.53115463256836
    4. '   ' → logprob: -13.53115463256836
    5. '  ' → logprob: -14.65615463256836
    6. ' ' → logprob: -15.15615463256836
    7. '１' → logprob: -15.15615463256836
    8. ' True' → logprob: -15.78115463256836
    9. '0' → logprob: -15.90615463256836
    10. '　' → logprob: -16.28115463256836

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011703446507453918
    2. ' ' → logprob: -6.7511701583862305
    3. '   ' → logprob: -16.251171112060547
    4. '１' → logprob: -18.251171112060547
    5. '0' → logprob: -19.251171112060547
    6. '  ' → logprob: -19.626171112060547
    7. ' True' → logprob: -20.001171112060547
    8. 'True' → logprob: -21.001171112060547
    9. '' → logprob: -21.126171112060547
    10. '    ' → logprob: -21.251171112060547

Token 58: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.0391463193809614e-05
    2. ':
' → logprob: -10.000060081481934
    3. ' and' → logprob: -12.250060081481934
    4. ' :' → logprob: -12.500060081481934
    5. '：' → logprob: -12.875060081481934
    6. '):' → logprob: -13.125060081481934
    7. ':**' → logprob: -14.000060081481934
    8. ':\' → logprob: -15.375060081481934
    9. '   ' → logprob: -15.500060081481934
    10. '():' → logprob: -15.750060081481934

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02934414893388748
    2. ':' → logprob: -3.654344081878662
    3. '   ' → logprob: -6.904344081878662
    4. '    ' → logprob: -7.029344081878662
    5. '<|end|>' → logprob: -8.02934455871582
    6. '
' → logprob: -8.90434455871582
    7. '      ' → logprob: -9.27934455871582
    8. '     ' → logprob: -9.40434455871582
    9. ' ' → logprob: -10.02934455871582
    10. '[' → logprob: -10.27934455871582

Token 60: ' flag' (ID: 9641)
  Prédit: ' flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.7346326112747192
    2. '   ' → logprob: -1.3596326112747192
    3. 'flag' (adapté à ' flag') → logprob: -1.7346326112747192
    4. '       ' → logprob: -2.4846324920654297
    5. '	flag' → logprob: -6.23463249206543
    6. '    ' → logprob: -6.60963249206543
    7. '(flag' → logprob: -9.10963249206543
    8. ' ' → logprob: -9.48463249206543
    9. '  ' → logprob: -10.23463249206543
    10. '     ' → logprob: -10.23463249206543

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033653534948825836
    2. '=' → logprob: -3.408653497695923
    3. ' ' → logprob: -12.283653259277344
    4. '＝' → logprob: -12.908653259277344
    5. '   ' → logprob: -15.283653259277344
    6. '    ' → logprob: -15.408653259277344
    7. '  ' → logprob: -16.783653259277344
    8. '```' → logprob: -16.908653259277344
    9. '	' → logprob: -17.033653259277344
    10. ' =
' → logprob: -17.158653259277344

Token 62: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1797488033771515
    2. ' ' → logprob: -1.804748773574829
    3. ' ' → logprob: -13.17974853515625
    4. '    ' → logprob: -14.61724853515625
    5. '   ' → logprob: -14.61724853515625
    6. '０' → logprob: -15.17974853515625
    7. '1' → logprob: -15.36724853515625
    8. '　' → logprob: -15.55474853515625
    9. '  ' → logprob: -15.92974853515625
    10. ' False' → logprob: -16.17974853515625

Token 63: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004889304982498288
    2. ' ' → logprob: -7.625488758087158
    3. '   ' → logprob: -14.750489234924316
    4. '０' → logprob: -15.625489234924316
    5. '  ' → logprob: -16.75048828125
    6. '    ' → logprob: -16.81298828125
    7. '1' → logprob: -17.43798828125
    8. '　' → logprob: -17.93798828125
    9. '۰' → logprob: -18.37548828125
    10. ' ' → logprob: -18.81298828125

Token 64: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6316234469413757
    2. '       ' → logprob: -1.3816235065460205
    3. '<|end|>' → logprob: -2.0066235065460205
    4. '   ' → logprob: -3.2566235065460205
    5. '  
' → logprob: -4.756623268127441
    6. ' ' → logprob: -4.756623268127441
    7. ' 
' → logprob: -5.256623268127441
    8. '<|end|>' → logprob: -5.381623268127441
    9. '\n' → logprob: -5.506623268127441
    10. ' for' → logprob: -5.881623268127441

Token 65: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.016588736325502396
    2. '   ' → logprob: -5.3915886878967285
    3. '<|end|>' → logprob: -5.6415886878967285
    4. '\n' → logprob: -6.1415886878967285
    5. '  
' → logprob: -6.1415886878967285
    6. ' 
' → logprob: -6.5165886878967285
    7. '    
' → logprob: -7.0165886878967285
    8. ' for' → logprob: -8.391589164733887
    9. '       ' → logprob: -8.391589164733887
    10. '   
' → logprob: -8.766589164733887

Token 66: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6351445913314819
    2. ' for' → logprob: -1.135144591331482
    3. '   ' → logprob: -2.5101447105407715
    4. 'j' → logprob: -3.5101447105407715
    5. 'while' → logprob: -3.7601447105407715
    6. ' while' → logprob: -4.6351447105407715
    7. ' j' → logprob: -6.0101447105407715
    8. '       ' → logprob: -6.7601447105407715
    9. '    ' → logprob: -7.6351447105407715
    10. 'i' → logprob: -8.385144233703613

Token 67: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4880164861679077
    2. ' j' → logprob: -0.9880164861679077
    3. ' ' → logprob: -4.363016605377197
    4. 'j' → logprob: -7.988016605377197
    5. ' range' → logprob: -7.988016605377197
    6. 'i' → logprob: -8.863016128540039
    7. ' in' → logprob: -9.238016128540039
    8. '　' → logprob: -9.613016128540039
    9. '  ' → logprob: -10.988016128540039
    10. ' ' → logprob: -11.238016128540039

Token 68: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010826852172613144
    2. ' ' → logprob: -4.88582706451416
    3. 'in' → logprob: -6.01082706451416
    4. '<|end|>' → logprob: -7.63582706451416
    5. '=' → logprob: -9.51082706451416
    6. 'range' → logprob: -9.76082706451416
    7. ' =' → logprob: -10.01082706451416
    8. ' range' → logprob: -10.51082706451416
    9. '<|end|>' → logprob: -11.38582706451416
    10. '	in' → logprob: -11.38582706451416

Token 69: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.014369749464094639
    2. 'range' → logprob: -4.264369964599609
    3. ' ' → logprob: -8.51436996459961
    4. '0' → logprob: -13.38936996459961
    5. ' xrange' → logprob: -13.38936996459961
    6. '1' → logprob: -14.01436996459961
    7. '	range' → logprob: -14.13936996459961
    8. ' in' → logprob: -14.51436996459961
    9. '(range' → logprob: -15.76436996459961
    10. ' i' → logprob: -15.76436996459961

Token 70: '(N' (ID: 10564)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.08008801937103271
    2. '(' → logprob: -2.5800881385803223
    3. '(N' → logprob: -6.830088138580322
    4. '(n' → logprob: -9.580087661743164
    5. ' (' → logprob: -10.205087661743164
    6. '(j' → logprob: -12.580087661743164
    7. '(I' → logprob: -12.830087661743164
    8. '(
' → logprob: -13.205087661743164
    9. '(len' → logprob: -14.580087661743164
    10. ')' → logprob: -14.705087661743164

Token 71: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1472790390253067
    2. ' -' → logprob: -2.0222790241241455
    3. '   ' → logprob: -5.522279262542725
    4. '1' → logprob: -8.147278785705566
    5. ' ' → logprob: -8.897278785705566
    6. '-i' → logprob: -9.522278785705566
    7. ')' → logprob: -9.647278785705566
    8. '       ' → logprob: -11.022278785705566
    9. '  ' → logprob: -12.147278785705566
    10. '    ' → logprob: -13.397278785705566

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0023729160893708467
    2. 'i' → logprob: -6.502372741699219
    3. ' ' → logprob: -7.127372741699219
    4. ' i' → logprob: -10.627372741699219
    5. '   ' → logprob: -10.752372741699219
    6. '-' → logprob: -11.252372741699219
    7. '  ' → logprob: -13.627372741699219
    8. ')' → logprob: -13.752372741699219
    9. '１' → logprob: -13.877372741699219
    10. '	i' → logprob: -14.002372741699219

Token 73: ',' (ID: 11)
  Prédit: '-i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.505601704120636
    2. ' -' → logprob: -1.1306016445159912
    3. '):' → logprob: -3.130601644515991
    4. '-' → logprob: -3.505601644515991
    5. ')' → logprob: -9.63060188293457
    6. ' ):' → logprob: -9.63060188293457
    7. '   ' → logprob: -10.25560188293457
    8. '-j' → logprob: -10.50560188293457
    9. '):
' → logprob: -10.63060188293457
    10. ' ' → logprob: -10.75560188293457

Token 74: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0008177272975444794
    2. ' i' → logprob: -7.250817775726318
    3. '	i' → logprob: -9.25081729888916
    4. '   ' → logprob: -11.75081729888916
    5. ' ' → logprob: -13.50081729888916
    6. 'j' → logprob: -14.75081729888916
    7. '  ' → logprob: -14.75081729888916
    8. '    ' → logprob: -14.87581729888916
    9. '0' → logprob: -15.12581729888916
    10. ')i' → logprob: -15.87581729888916

Token 75: ',-' (ID: 8202)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3321641683578491
    2. ',i' → logprob: -1.3321641683578491
    3. ',-' → logprob: -4.582164287567139
    4. ',j' → logprob: -5.082164287567139
    5. ' ,' → logprob: -6.457164287567139
    6. '，' → logprob: -7.957164287567139
    7. '+i' → logprob: -9.83216381072998
    8. ' -' → logprob: -10.45716381072998
    9. '   ' → logprob: -10.45716381072998
    10. '  ' → logprob: -10.58216381072998

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. '１' → logprob: -13.625001907348633
    3. ' ' → logprob: -15.250001907348633
    4. ')' → logprob: -16.125001907348633
    5. '۱' → logprob: -17.125001907348633
    6. '१' → logprob: -17.250001907348633
    7. '```' → logprob: -17.625001907348633
    8. '১' → logprob: -18.000001907348633
    9. '   ' → logprob: -18.375001907348633
    10. '<|end|>' → logprob: -19.250001907348633

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006602536886930466
    2. '-' → logprob: -8.000659942626953
    3. ')' → logprob: -8.625659942626953
    4. '):
' → logprob: -9.750659942626953
    5. ',' → logprob: -10.875659942626953
    6. '):-' → logprob: -10.875659942626953
    7. ':' → logprob: -11.125659942626953
    8. '   ' → logprob: -11.875659942626953
    9. ')：' → logprob: -12.000659942626953
    10. ' ):' → logprob: -12.125659942626953

Token 78: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2759261429309845
    2. 'if' (adapté à ' if') → logprob: -2.400926113128662
    3. ' ' → logprob: -2.650926113128662
    4. '<|end|>' → logprob: -3.525926113128662
    5. '    ' → logprob: -3.650926113128662
    6. '0' → logprob: -5.150926113128662
    7. '   ' → logprob: -5.275926113128662
    8. '1' → logprob: -5.775926113128662
    9. ')' → logprob: -6.275926113128662
    10. ' i' → logprob: -6.400926113128662

Token 80: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.02336544170975685
    2. 'A' → logprob: -3.7733654975891113
    3. ' ' → logprob: -9.898365020751953
    4. '	A' → logprob: -10.023365020751953
    5. '    ' → logprob: -11.273365020751953
    6. '   ' → logprob: -12.398365020751953
    7. '  ' → logprob: -12.523365020751953
    8. '>A' → logprob: -13.648365020751953
    9. ' ' → logprob: -14.523365020751953
    10. '(A' → logprob: -14.523365020751953

Token 81: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.02631295472383499
    2. '[' → logprob: -3.651313066482544
    3. ' [' → logprob: -11.901312828063965
    4. '[i' → logprob: -12.901312828063965
    5. '[
' → logprob: -14.526312828063965
    6. ' ' → logprob: -14.526312828063965
    7. '[js' → logprob: -14.526312828063965
    8. '[A' → logprob: -14.651312828063965
    9. '[J' → logprob: -15.401312828063965
    10. '```' → logprob: -15.651312828063965

Token 82: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5444844365119934
    2. '[' → logprob: -1.2944843769073486
    3. ']' → logprob: -2.9194843769073486
    4. ' <' → logprob: -2.9194843769073486
    5. ' ' → logprob: -4.294484615325928
    6. ']<' → logprob: -4.794484615325928
    7. '-' → logprob: -5.169484615325928
    8. '[j' → logprob: -5.544484615325928
    9. '<A' → logprob: -6.919484615325928
    10. 'A' → logprob: -7.419484615325928

Token 83: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.18904104828834534
    2. ' <' → logprob: -1.814041018486023
    3. '[' → logprob: -4.9390411376953125
    4. '<A' → logprob: -7.0640411376953125
    5. ' ' → logprob: -7.3140411376953125
    6. 'A' → logprob: -9.689041137695312
    7. '>' → logprob: -9.814041137695312
    8. ' A' → logprob: -9.814041137695312
    9. '```' → logprob: -10.189041137695312
    10. '1' → logprob: -10.189041137695312

Token 84: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.4743382930755615
    2. 'A' → logprob: -0.9743382930755615
    3. '	A' → logprob: -8.34933853149414
    4. ' ' → logprob: -11.47433853149414
    5. '>A' → logprob: -12.34933853149414
    6. '<|end|>' → logprob: -12.59933853149414
    7. '  ' → logprob: -13.72433853149414
    8. ' ' → logprob: -13.84933853149414
    9. '=A' → logprob: -14.22433853149414
    10. 'Ａ' → logprob: -14.34933853149414

Token 85: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00011474833445390686
    2. '[' → logprob: -9.125114440917969
    3. '[i' → logprob: -13.375114440917969
    4. '```' → logprob: -14.000114440917969
    5. '[js' → logprob: -14.250114440917969
    6. '1' → logprob: -14.250114440917969
    7. '-' → logprob: -14.875114440917969
    8. ' [' → logprob: -15.125114440917969
    9. '[
' → logprob: -15.125114440917969
    10. '\[' → logprob: -15.500114440917969

Token 86: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10349199175834656
    2. '[j' → logprob: -2.353492021560669
    3. ' -' → logprob: -5.85349178314209
    4. '[' → logprob: -7.97849178314209
    5. '1' → logprob: -10.47849178314209
    6. ' ' → logprob: -11.22849178314209
    7. ']' → logprob: -12.22849178314209
    8. 'j' → logprob: -12.35349178314209
    9. '[-' → logprob: -12.60349178314209
    10. '[i' → logprob: -12.60349178314209

Token 87: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3915141355246305e-05
    2. ' ' → logprob: -10.87502384185791
    3. 'i' → logprob: -13.87502384185791
    4. '１' → logprob: -14.00002384185791
    5. '   ' → logprob: -14.00002384185791
    6. '[' → logprob: -15.12502384185791
    7. '<|end|>' → logprob: -15.12502384185791
    8. ')' → logprob: -15.56252384185791
    9. '           ' → logprob: -15.75002384185791
    10. ']' → logprob: -15.93752384185791

Token 88: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015130772953853011
    2. ' ):' → logprob: -7.2515130043029785
    3. ':' → logprob: -7.8765130043029785
    4. ']:' → logprob: -8.751513481140137
    5. '):
' → logprob: -9.126513481140137
    6. ')' → logprob: -9.501513481140137
    7. '）：' → logprob: -10.126513481140137
    8. ')：' → logprob: -11.126513481140137
    9. '}:' → logprob: -11.876513481140137
    10. '>:' → logprob: -12.251513481140137

Token 89: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0882081612944603
    2. '<|end|>' → logprob: -2.5882081985473633
    3. ' ' → logprob: -5.963208198547363
    4. '           ' → logprob: -6.338208198547363
    5. '                
' → logprob: -7.088208198547363
    6. '            
' → logprob: -7.463208198547363
    7. ' 
' → logprob: -7.463208198547363
    8. '                ' → logprob: -7.588208198547363
    9. '<|end|>' → logprob: -7.588208198547363
    10. '            ' → logprob: -7.588208198547363

Token 90: ' A' (ID: 355)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3355486989021301
    2. ' A' → logprob: -1.7105486392974854
    3. 'A' (adapté à ' A') → logprob: -3.0855486392974854
    4. '                ' → logprob: -3.9605486392974854
    5. '                   ' → logprob: -4.4605488777160645
    6. '           ' → logprob: -4.5855488777160645
    7. ' ' → logprob: -4.7105488777160645
    8. '<|end|>' → logprob: -6.3355488777160645
    9. '            ' → logprob: -6.5855488777160645
    10. '              ' → logprob: -6.9605488777160645

Token 91: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.007612305693328381
    2. '[' → logprob: -4.882612228393555
    3. ',j' → logprob: -12.757612228393555
    4. ',' → logprob: -13.132612228393555
    5. '[i' → logprob: -15.257612228393555
    6. '[js' → logprob: -15.257612228393555
    7. '[J' → logprob: -15.757612228393555
    8. ' [' → logprob: -15.882612228393555
    9. '.' → logprob: -16.132612228393555
    10. 'j' → logprob: -16.382612228393555

Token 92: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.004631976597011089
    2. ']' → logprob: -5.504631996154785
    3. '[' → logprob: -8.004631996154785
    4. ',' → logprob: -9.004631996154785
    5. '-' → logprob: -10.254631996154785
    6. '],[' → logprob: -10.629631996154785
    7. ' ],' → logprob: -10.879631996154785
    8. ' ' → logprob: -12.879631996154785
    9. '][' → logprob: -13.254631996154785
    10. '],
' → logprob: -13.379631996154785

Token 93: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.1270112693309784
    2. 'A' → logprob: -2.127011299133301
    3. '<|end|>' → logprob: -9.6270112991333
    4. ' ' → logprob: -11.1270112991333
    5. '	A' → logprob: -13.8770112991333
    6. ' ' → logprob: -14.0020112991333
    7. ' 
' → logprob: -15.5020112991333
    8. '  ' → logprob: -15.6270112991333
    9. '=A' → logprob: -16.002010345458984
    10. '<|end|>' → logprob: -16.377010345458984

Token 94: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.9027791495318525e-05
    2. '[' → logprob: -10.875019073486328
    3. 'j' → logprob: -17.750019073486328
    4. '[
' → logprob: -18.000019073486328
    5. '	j' → logprob: -19.250019073486328
    6. '[js' → logprob: -19.250019073486328
    7. ' [' → logprob: -19.250019073486328
    8. '-' → logprob: -19.375019073486328
    9. '```' → logprob: -19.625019073486328
    10. '[J' → logprob: -19.750019073486328

Token 95: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0003382038848940283
    2. '[' → logprob: -8.375338554382324
    3. '[j' → logprob: -9.750338554382324
    4. ' -' → logprob: -10.375338554382324
    5. '[-' → logprob: -11.625338554382324
    6. '−' → logprob: -12.000338554382324
    7. '1' → logprob: -13.750338554382324
    8. ']' → logprob: -14.750338554382324
    9. '<|end|>' → logprob: -14.875338554382324
    10. '-[' → logprob: -15.375338554382324

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.75000286102295
    3. '<|end|>' → logprob: -13.87500286102295
    4. '１' → logprob: -15.50000286102295
    5. '```' → logprob: -15.62500286102295
    6. '0' → logprob: -16.750001907348633
    7. '-' → logprob: -16.875001907348633
    8. '2' → logprob: -17.500001907348633
    9. '   ' → logprob: -17.812501907348633
    10. '<|end|>' → logprob: -17.937501907348633

Token 97: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18621483445167542
    2. ' =' → logprob: -2.3112149238586426
    3. ')' → logprob: -2.9362149238586426
    4. ']' → logprob: -4.061214923858643
    5. ')=' → logprob: -8.311214447021484
    6. ']=' → logprob: -9.436214447021484
    7. ',' → logprob: -9.561214447021484
    8. '}' → logprob: -10.936214447021484
    9. '<|end|>' → logprob: -10.936214447021484
    10. '＝' → logprob: -11.811214447021484

Token 98: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34850794076919556
    2. ' =' → logprob: -1.2235078811645508
    3. ',' → logprob: -10.47350788116455
    4. '<|end|>' → logprob: -11.22350788116455
    5. '＝' → logprob: -11.47350788116455
    6. ' ' → logprob: -12.34850788116455
    7. ' =
' → logprob: -12.97350788116455
    8. '=

' → logprob: -13.34850788116455
    9. '=
' → logprob: -13.84850788116455
    10. ' =
' → logprob: -15.09850788116455

Token 99: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.25193047523498535
    2. 'A' → logprob: -1.5019304752349854
    3. '	A' → logprob: -14.126930236816406
    4. ' ' → logprob: -14.876930236816406
    5. '>A' → logprob: -16.251930236816406
    6. ' ' → logprob: -16.251930236816406
    7. '<|end|>' → logprob: -16.876930236816406
    8. ',A' → logprob: -18.126930236816406
    9. '_A' → logprob: -18.501930236816406
    10. ' 
' → logprob: -18.501930236816406

Token 100: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.004620949272066355
    2. '[' → logprob: -5.3796210289001465
    3. '[
' → logprob: -15.254620552062988
    4. '[i' → logprob: -15.504620552062988
    5. ',j' → logprob: -16.629621505737305
    6. 'j' → logprob: -17.004621505737305
    7. '```' → logprob: -17.004621505737305
    8. ' [' → logprob: -17.629621505737305
    9. '[J' → logprob: -17.754621505737305
    10. '[...,' → logprob: -17.879621505737305

Token 101: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02747945487499237
    2. ']' → logprob: -4.152479648590088
    3. '[' → logprob: -5.152479648590088
    4. ' -' → logprob: -5.652479648590088
    5. '[j' → logprob: -6.902479648590088
    6. '],' → logprob: -7.652479648590088
    7. '][' → logprob: -8.27747917175293
    8. '1' → logprob: -8.90247917175293
    9. '<|end|>' → logprob: -9.52747917175293
    10. ' ]' → logprob: -10.52747917175293

Token 102: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.097437315271236e-05
    2. ' ' → logprob: -10.00005054473877
    3. '１' → logprob: -13.37505054473877
    4. '   ' → logprob: -14.00005054473877
    5. '0' → logprob: -14.00005054473877
    6. '2' → logprob: -14.25005054473877
    7. '    ' → logprob: -15.25005054473877
    8. '```' → logprob: -15.43755054473877
    9. '-' → logprob: -15.50005054473877
    10. 'A' → logprob: -15.81255054473877

Token 103: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002575305523350835
    2. ' ,' → logprob: -6.627575397491455
    3. ',A' → logprob: -6.752575397491455
    4. ',j' → logprob: -10.752574920654297
    5. ' ' → logprob: -10.877574920654297
    6. ']' → logprob: -11.502574920654297
    7. '<|end|>' → logprob: -11.502574920654297
    8. 'A' → logprob: -12.377574920654297
    9. '，' → logprob: -12.877574920654297
    10. ',
' → logprob: -13.002574920654297

Token 104: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.10020958632230759
    2. ' A' → logprob: -2.3502094745635986
    3. '	A' → logprob: -12.97520923614502
    4. '<|end|>' → logprob: -15.35020923614502
    5. ' ' → logprob: -15.60020923614502
    6. ' ' → logprob: -16.100210189819336
    7. '>A' → logprob: -17.850210189819336
    8. 'Ａ' → logprob: -18.600210189819336
    9. ' 
' → logprob: -19.100210189819336
    10. '_A' → logprob: -19.350210189819336

Token 105: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00014191943046171218
    2. '[' → logprob: -8.875142097473145
    3. 'j' → logprob: -13.125142097473145
    4. ']' → logprob: -17.375141143798828
    5. '[
' → logprob: -17.375141143798828
    6. '```' → logprob: -17.625141143798828
    7. '[i' → logprob: -18.750141143798828
    8. '[js' → logprob: -18.875141143798828
    9. '	j' → logprob: -19.000141143798828
    10. '[g' → logprob: -20.000141143798828

Token 106: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8028116822242737
    2. ')
' → logprob: -0.8028116822242737
    3. ']' → logprob: -3.052811622619629
    4. ']
' → logprob: -3.177811622619629
    5. '<|end|>' → logprob: -5.302811622619629
    6. '
' → logprob: -5.802811622619629
    7. '               ' → logprob: -5.802811622619629
    8. '```' → logprob: -7.177811622619629
    9. '           ' → logprob: -7.677811622619629
    10. '}
' → logprob: -7.927811622619629

Token 107: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00027456742827780545
    2. '
' → logprob: -9.000274658203125
    3. '                
' → logprob: -9.500274658203125
    4. '           ' → logprob: -10.875274658203125
    5. '```' → logprob: -10.875274658203125
    6. '<|end|>' → logprob: -11.625274658203125
    7. '              ' → logprob: -11.875274658203125
    8. '			' → logprob: -12.625274658203125
    9. '                ' → logprob: -12.875274658203125
    10. ' flag' → logprob: -13.000274658203125

Token 108: ' flag' (ID: 9641)
  Prédit: ' flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.07047151029109955
    2. 'flag' (adapté à ' flag') → logprob: -2.6954715251922607
    3. '	flag' → logprob: -7.820471286773682
    4. ' 
' → logprob: -10.57047176361084
    5. '       ' → logprob: -10.69547176361084
    6. '           ' → logprob: -11.07047176361084
    7. '   ' → logprob: -11.32047176361084
    8. '    ' → logprob: -11.32047176361084
    9. '               ' → logprob: -11.44547176361084
    10. '(flag' → logprob: -11.94547176361084

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132634460926056
    2. '=' → logprob: -1.3132634162902832
    3. '＝' → logprob: -13.438263893127441
    4. ' ' → logprob: -15.438263893127441
    5. ' ' → logprob: -19.063262939453125
    6. '	' → logprob: -19.063262939453125
    7. ' =
' → logprob: -19.438262939453125
    8. '=

' → logprob: -19.563262939453125
    9. '=True' → logprob: -19.813262939453125
    10. ',' → logprob: -19.938262939453125

Token 110: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029750604182481766
    2. ' ' → logprob: -3.5297505855560303
    3. '１' → logprob: -16.02975082397461
    4. '   ' → logprob: -17.15475082397461
    5. ' ' → logprob: -18.15475082397461
    6. '　' → logprob: -18.77975082397461
    7. '    ' → logprob: -18.90475082397461
    8. '	' → logprob: -19.52975082397461
    9. '  ' → logprob: -19.90475082397461
    10. '<|end|>' → logprob: -20.15475082397461

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -17.5000057220459
    4. '１' → logprob: -18.3750057220459
    5. '  ' → logprob: -20.6250057220459
    6. '' → logprob: -21.2500057220459
    7. '    ' → logprob: -21.2500057220459
    8. '<|end|>' → logprob: -21.3750057220459
    9. '۱' → logprob: -22.3750057220459
    10. '	' → logprob: -22.6250057220459

Token 112: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04270990565419197
    2. '<|end|>' → logprob: -3.4177098274230957
    3. '\n' → logprob: -5.917709827423096
    4. '       ' → logprob: -6.292709827423096
    5. '<|end|>' → logprob: -6.542709827423096
    6. '   ' → logprob: -6.917709827423096
    7. '' → logprob: -8.042710304260254
    8. '
' → logprob: -8.292710304260254
    9. '  
' → logprob: -8.417710304260254
    10. ' 
' → logprob: -8.667710304260254

Token 113: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7037787437438965
    2. '       ' → logprob: -1.2037787437438965
    3. '<|end|>' → logprob: -1.8287787437438965
    4. '   ' → logprob: -3.5787787437438965
    5. '<|end|>' → logprob: -5.2037787437438965
    6. '\n' → logprob: -5.5787787437438965
    7. '    ' → logprob: -6.8287787437438965
    8. '	' → logprob: -7.0787787437438965
    9. '        
' → logprob: -7.3287787437438965
    10. '           ' → logprob: -7.3287787437438965

Token 114: ' i' (ID: 575)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0082341432571411
    2. '       ' → logprob: -1.2582341432571411
    3. '   ' → logprob: -1.6332341432571411
    4. 'j' → logprob: -3.5082340240478516
    5. '<|end|>' → logprob: -3.7582340240478516
    6. '    ' → logprob: -4.008234024047852
    7. 'i' (adapté à ' i') → logprob: -4.133234024047852
    8. '\n' → logprob: -4.383234024047852
    9. '	j' → logprob: -4.508234024047852
    10. '	i' → logprob: -4.633234024047852

Token 115: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.24550315737724304
    2. '+=' → logprob: -1.9955031871795654
    3. '+' → logprob: -3.2455031871795654
    4. '=' → logprob: -3.3705031871795654
    5. ' =' → logprob: -4.995502948760986
    6. ' ' → logprob: -6.995502948760986
    7. ' +' → logprob: -7.245502948760986
    8. '   ' → logprob: -11.870503425598145
    9. '    ' → logprob: -12.620503425598145
    10. '  ' → logprob: -12.620503425598145

Token 116: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002477200934663415
    2. ' ' → logprob: -6.002477169036865
    3. '   ' → logprob: -13.752477645874023
    4. '    ' → logprob: -15.377477645874023
    5. '１' → logprob: -16.377477645874023
    6. '<|end|>' → logprob: -16.752477645874023
    7. '  ' → logprob: -17.002477645874023
    8. '	' → logprob: -18.002477645874023
    9. '           ' → logprob: -18.877477645874023
    10. '0' → logprob: -18.877477645874023

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020425561524461955
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -14.500204086303711
    4. '  ' → logprob: -16.00020408630371
    5. '0' → logprob: -16.25020408630371
    6. '-' → logprob: -17.12520408630371
    7. '１' → logprob: -17.75020408630371
    8. '    ' → logprob: -18.25020408630371
    9. 'i' → logprob: -18.37520408630371
    10. ' -' → logprob: -18.62520408630371

Token 118: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7081600427627563
    2. '<|end|>' → logprob: -0.8331600427627563
    3. '\n' → logprob: -2.708159923553467
    4. '<|end|>' → logprob: -5.708159923553467
    5. '```' → logprob: -6.958159923553467
    6. ' ' → logprob: -7.458159923553467
    7. ' 
' → logprob: -7.583159923553467
    8. '  
' → logprob: -8.833160400390625
    9. '   ' → logprob: -9.208160400390625
    10. 'newline' → logprob: -9.208160400390625

Token 119: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 120: ' print' (ID: 2123)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 121: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001018875278532505
    2. '(A' → logprob: -7.00101900100708
    3. '()' → logprob: -10.251018524169922
    4. '(
' → logprob: -10.876018524169922
    5. '("' → logprob: -11.001018524169922
    6. '("("' → logprob: -11.001018524169922
    7. '('' → logprob: -11.376018524169922
    8. '((' → logprob: -12.876018524169922
    9. '(i' → logprob: -13.501018524169922
    10. '(`' → logprob: -13.626018524169922

Token 122: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.03848470747470856
    2. ' A' → logprob: -3.288484811782837
    3. '(A' → logprob: -7.788484573364258
    4. ')' → logprob: -10.538484573364258
    5. '(' → logprob: -14.163484573364258
    6. ' ' → logprob: -14.538484573364258
    7. '	A' → logprob: -14.788484573364258
    8. ' (' → logprob: -15.038484573364258
    9. '[A' → logprob: -15.663484573364258
    10. ' )' → logprob: -16.163484573364258

Token 123: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.935296834039036e-06
    2. ' )' → logprob: -13.50000286102295
    3. ')
' → logprob: -13.62500286102295
    4. '）' → logprob: -16.875003814697266
    5. ')i' → logprob: -17.500003814697266
    6. ')`' → logprob: -17.625003814697266
    7. ')}' → logprob: -17.875003814697266
    8. ')

' → logprob: -18.000003814697266
    9. ')#' → logprob: -18.375003814697266
    10. ',' → logprob: -18.500003814697266

Token 124: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 125: ' print' (ID: 2123)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 126: '(i' (ID: 3649)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4742972254753113
    2. '(' → logprob: -0.9742972254753113
    3. '("")' → logprob: -8.849297523498535
    4. '(i' → logprob: -10.724297523498535
    5. '('' → logprob: -10.974297523498535
    6. '("("' → logprob: -11.599297523498535
    7. '()
' → logprob: -11.974297523498535
    8. '(
' → logprob: -12.224297523498535
    9. ')' → logprob: -12.724297523498535
    10. ' ()' → logprob: -13.099297523498535

Token 127: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ' )' → logprob: -13.375001907348633
    3. ')
' → logprob: -14.750001907348633
    4. ')`' → logprob: -16.375001907348633
    5. '）' → logprob: -16.875001907348633
    6. ')}' → logprob: -17.375001907348633
    7. '))' → logprob: -17.750001907348633
    8. ')i' → logprob: -18.375001907348633
    9. ')

' → logprob: -18.500001907348633
    10. ')#' → logprob: -18.875001907348633

Token 128: 'N' (ID: 45)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28311121463775635
    2. '=' → logprob: -1.4081112146377563
    3. ',' → logprob: -6.908111095428467
    4. '=int' → logprob: -7.158111095428467
    5. '=input' → logprob: -9.033111572265625
    6. ' ' → logprob: -11.158111572265625
    7. ' =
' → logprob: -11.533111572265625
    8. '=N' → logprob: -11.783111572265625
    9. '=len' → logprob: -12.408111572265625
    10. '＝' → logprob: -12.408111572265625

Token 130: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.8217425346374512
    2. '5' → logprob: -1.4467425346374512
    3. 'int' → logprob: -1.6967425346374512
    4. '10' → logprob: -2.196742534637451
    5. ' ' → logprob: -3.571742534637451
    6. '6' → logprob: -6.321742534637451
    7. '7' → logprob: -7.821742534637451
    8. '3' → logprob: -9.94674301147461
    9. '100' → logprob: -10.07174301147461
    10. '8' → logprob: -10.32174301147461

Token 131: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.20179902017116547
    2. '(' → logprob: -1.7017990350723267
    3. 'input' → logprob: -8.326799392700195
    4. '()' → logprob: -8.951799392700195
    5. '('' → logprob: -12.826799392700195
    6. ' (' → logprob: -13.076799392700195
    7. '(
' → logprob: -13.076799392700195
    8. ' input' → logprob: -13.701799392700195
    9. ' ' → logprob: -13.826799392700195
    10. '(

' → logprob: -14.076799392700195

Token 132: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07895511388778687
    2. '()' → logprob: -2.5789551734924316
    3. '(' → logprob: -10.328954696655273
    4. '())
' → logprob: -11.203954696655273
    5. '()
' → logprob: -11.703954696655273
    6. '();)' → logprob: -13.453954696655273
    7. '()>' → logprob: -13.703954696655273
    8. '("' → logprob: -13.828954696655273
    9. ' ())' → logprob: -13.828954696655273
    10. '().' → logprob: -13.828954696655273

Token 133: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -6.704273118884885e-07
    2. ' A' → logprob: -14.375000953674316
    3. '```' → logprob: -17.75
    4. '>A' → logprob: -18.0
    5. 'a' → logprob: -18.125
    6. '<|end|>' → logprob: -18.625
    7. 's' → logprob: -18.875
    8. '#' → logprob: -19.75
    9. '	A' → logprob: -19.75
    10. 'data' → logprob: -19.75

Token 134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.576124906539917
    2. '=' → logprob: -0.826124906539917
    3. '=[]' → logprob: -9.326125144958496
    4. '[' → logprob: -10.451125144958496
    5. ' =[' → logprob: -10.951125144958496
    6. '[:]' → logprob: -11.076125144958496
    7. '＝' → logprob: -11.451125144958496
    8. '=[' → logprob: -12.076125144958496
    9. ' ' → logprob: -12.201125144958496
    10. '(' → logprob: -12.826125144958496

Token 135: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.034051116555929184
    2. ' list' → logprob: -3.5340511798858643
    3. '[list' → logprob: -5.534050941467285
    4. '[' → logprob: -8.034050941467285
    5. ' [' → logprob: -11.784050941467285
    6. '[]' → logprob: -12.284050941467285
    7. '[input' → logprob: -12.659050941467285
    8. '[int' → logprob: -14.659050941467285
    9. '=list' → logprob: -15.284050941467285
    10. '	list' → logprob: -15.409050941467285

Token 136: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03491039201617241
    2. '(input' → logprob: -4.159910202026367
    3. '(int' → logprob: -4.659910202026367
    4. '(map' → logprob: -4.909910202026367
    5. '()' → logprob: -7.284910202026367
    6. '(eval' → logprob: -7.284910202026367
    7. '(range' → logprob: -8.409910202026367
    8. '(array' → logprob: -10.784910202026367
    9. '(

' → logprob: -10.784910202026367
    10. '(list' → logprob: -11.034910202026367

Token 137: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.04867911338806152
    2. '(' → logprob: -3.0486791133880615
    3. 'int' → logprob: -10.42367935180664
    4. '(
' → logprob: -10.92367935180664
    5. '(str' → logprob: -11.17367935180664
    6. '(input' → logprob: -11.17367935180664
    7. '<int' → logprob: -12.29867935180664
    8. ')' → logprob: -12.54867935180664
    9. ' int' → logprob: -13.29867935180664
    10. '=int' → logprob: -13.67367935180664

Token 138: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.03305860236287117
    2. '(input' → logprob: -3.9080586433410645
    3. ',' → logprob: -4.4080586433410645
    4. ' ,' → logprob: -9.158058166503906
    5. '(' → logprob: -9.283058166503906
    6. 'input' → logprob: -9.908058166503906
    7. ' input' → logprob: -12.158058166503906
    8. ' (' → logprob: -12.908058166503906
    9. '<input' → logprob: -14.158058166503906
    10. '	input' → logprob: -14.158058166503906

Token 139: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.9875325708417222e-05
    2. '()' → logprob: -10.500029563903809
    3. ' ().' → logprob: -13.500029563903809
    4. '(' → logprob: -14.000029563903809
    5. '()
' → logprob: -17.500030517578125
    6. '.' → logprob: -17.750030517578125
    7. '   ' → logprob: -18.250030517578125
    8. '.split' → logprob: -18.500030517578125
    9. '	' → logprob: -19.000030517578125
    10. ' ' → logprob: -19.125030517578125

Token 140: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.5597102396423e-05
    2. 'strip' → logprob: -10.375035285949707
    3. 'rstrip' → logprob: -13.000035285949707
    4. '(split' → logprob: -13.500035285949707
    5. ' split' → logprob: -14.375035285949707
    6. 'spl' → logprob: -16.750036239624023
    7. '.split' → logprob: -17.125036239624023
    8. 'plit' → logprob: -18.000036239624023
    9. 's' → logprob: -18.375036239624023
    10. ')' → logprob: -18.375036239624023

Token 141: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.03477662056684494
    2. '())' → logprob: -3.7847766876220703
    3. '()' → logprob: -4.65977668762207
    4. '(' → logprob: -6.53477668762207
    5. '))' → logprob: -7.78477668762207
    6. '()))
' → logprob: -9.40977668762207
    7. '(),' → logprob: -11.28477668762207
    8. ')' → logprob: -11.65977668762207
    9. '()));' → logprob: -11.78477668762207
    10. '('' → logprob: -12.53477668762207

Token 142: 'bubble' (ID: 154658)
  Prédit: 'bubble'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bubble' → logprob: -7.3458322731312364e-06
    2. 'b' → logprob: -12.375007629394531
    3. ' bubble' → logprob: -12.750007629394531
    4. '```' → logprob: -16.25000762939453
    5. ')' → logprob: -17.37500762939453
    6. '
' → logprob: -18.62500762939453
    7. 'Bubble' → logprob: -18.75000762939453
    8. 'print' → logprob: -19.25000762939453
    9. ')
' → logprob: -20.25000762939453
    10. '\b' → logprob: -20.50000762939453

Token 143: 'Sort' (ID: 11602)
  Prédit: 'Sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sort' → logprob: -5.676981345459353e-06
    2. 'S' → logprob: -12.250005722045898
    3. 'Sor' → logprob: -15.000005722045898
    4. 'So' → logprob: -15.250005722045898
    5. '_sort' → logprob: -16.2500057220459
    6. 'sort' → logprob: -16.5000057220459
    7. ' Sort' → logprob: -16.7500057220459
    8. '(S' → logprob: -17.1250057220459
    9. 'Sorter' → logprob: -17.6250057220459
    10. 'Sorting' → logprob: -18.2500057220459

Token 144: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16037340462207794
    2. '(A' → logprob: -1.9103734493255615
    3. '(
' → logprob: -9.41037368774414
    4. ' (' → logprob: -10.28537368774414
    5. '((' → logprob: -11.16037368774414
    6. '(

' → logprob: -12.53537368774414
    7. '(N' → logprob: -12.78537368774414
    8. '(B' → logprob: -13.16037368774414
    9. '(<' → logprob: -13.53537368774414
    10. '(**' → logprob: -13.66037368774414

Token 145: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.780269980430603
    2. ',N' → logprob: -0.780269980430603
    3. '(N' → logprob: -2.6552700996398926
    4. '(' → logprob: -4.405270099639893
    5. ')' → logprob: -7.905270099639893
    6. ' ,' → logprob: -7.905270099639893
    7. ',n' → logprob: -9.405269622802734
    8. '，' → logprob: -10.530269622802734
    9. ',(' → logprob: -10.530269622802734
    10. ' ' → logprob: -10.905269622802734

Token 146: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.750000953674316
    3. ')
' → logprob: -15.500000953674316
    4. '))' → logprob: -16.625
    5. ')`' → logprob: -16.875
    6. '()' → logprob: -17.5
    7. '())' → logprob: -18.0
    8. '(' → logprob: -18.0
    9. '）' → logprob: -19.0
    10. ')#' → logprob: -19.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 144
Tokens correctement prédits (1ère position, stricte): 71
Tokens correctement prédits (1ère position, avec adaptation): 72
Tokens correctement prédits (top 10): 110
Précision stricte (1ère position): 49.31%
Précision adaptée (1ère position): 50.00%
Précision (top 10): 76.39%
================================================================================
