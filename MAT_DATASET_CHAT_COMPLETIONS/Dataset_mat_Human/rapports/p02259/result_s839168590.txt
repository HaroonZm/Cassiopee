================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a = int(input())
b = list(map(int,input().split()))

def bublesort(b,a):
    count =0
    for j in range(len(b)-1):
        for i in range(len(b)-1,0,-1):
            if b[i-1]>b[i]:
                b[i-1],b[i]=b[i],b[i-1]
                count +=1
    return count,b

A,B =bublesort(b,a)
print(*B)
print(A)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006926587666384876
    2. '(a' → logprob: -7.875692844390869
    3. 'a' → logprob: -9.125692367553711
    4. '```' → logprob: -9.625692367553711
    5. ''' → logprob: -9.875692367553711
    6. '`' → logprob: -10.375692367553711
    7. ' (' → logprob: -11.375692367553711
    8. '('' → logprob: -11.500692367553711
    9. ')' → logprob: -11.750692367553711
    10. '\(' → logprob: -12.250692367553711

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010478908196091652
    2. ')' → logprob: -5.010478973388672
    3. '()' → logprob: -5.760478973388672
    4. '())' → logprob: -8.510478973388672
    5. '(
' → logprob: -9.635478973388672
    6. '(()' → logprob: -9.760478973388672
    7. '('' → logprob: -10.260478973388672
    8. '```' → logprob: -10.385478973388672
    9. '<|end|>' → logprob: -10.510478973388672
    10. '("("' → logprob: -11.010478973388672

Token 5: 'b' (ID: 65)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03134123980998993
    2. '*' → logprob: -3.656341314315796
    3. '%' → logprob: -6.406341075897217
    4. '\n' → logprob: -6.656341075897217
    5. '#' → logprob: -7.531341075897217
    6. '+
' → logprob: -8.156341552734375
    7. 'a' → logprob: -8.406341552734375
    8. '\' → logprob: -8.531341552734375
    9. '**' → logprob: -8.656341552734375
    10. ')' → logprob: -8.906341552734375

Token 6: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08262693136930466
    2. ' ' → logprob: -3.4576268196105957
    3. ')' → logprob: -4.207626819610596
    4. '=' → logprob: -4.707626819610596
    5. '[' → logprob: -4.832626819610596
    6. ' +' → logprob: -4.957626819610596
    7. '*' → logprob: -5.582626819610596
    8. ' =' → logprob: -6.332626819610596
    9. ''' → logprob: -7.582626819610596
    10. '**' → logprob: -7.957626819610596

Token 7: ' list' (ID: 1562)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.027502650395035744
    2. 'int' → logprob: -3.6525025367736816
    3. ' a' → logprob: -7.027502536773682
    4. 'a' → logprob: -8.15250301361084
    5. ' input' → logprob: -11.40250301361084
    6. ' ' → logprob: -12.02750301361084
    7. '=int' → logprob: -13.02750301361084
    8. 'input' → logprob: -13.27750301361084
    9. '<int' → logprob: -13.65250301361084
    10. '(int' → logprob: -14.02750301361084

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005336135509423912
    2. '[' → logprob: -8.500534057617188
    3. '```' → logprob: -9.500534057617188
    4. ')' → logprob: -9.750534057617188
    5. '(a' → logprob: -10.375534057617188
    6. ' (' → logprob: -10.500534057617188
    7. '`' → logprob: -10.750534057617188
    8. '(
' → logprob: -10.875534057617188
    9. '[(' → logprob: -11.125534057617188
    10. '(range' → logprob: -11.250534057617188

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02600625343620777
    2. '(' → logprob: -3.7760062217712402
    3. '(str' → logprob: -6.77600622177124
    4. '(lambda' → logprob: -7.27600622177124
    5. '<int' → logprob: -8.151006698608398
    6. '(input' → logprob: -8.526006698608398
    7. 'int' → logprob: -8.776006698608398
    8. '=int' → logprob: -9.276006698608398
    9. '[int' → logprob: -10.026006698608398
    10. '(eval' → logprob: -10.151006698608398

Token 10: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0034240162931382656
    2. ',input' → logprob: -6.253424167633057
    3. '(' → logprob: -6.878424167633057
    4. '))' → logprob: -8.503423690795898
    5. 'input' → logprob: -9.128423690795898
    6. ')' → logprob: -9.753423690795898
    7. '=input' → logprob: -10.503423690795898
    8. ',' → logprob: -10.628423690795898
    9. ' input' → logprob: -11.503423690795898
    10. '<input' → logprob: -12.378423690795898

Token 11: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.4736734926700592
    2. '())' → logprob: -1.8486734628677368
    3. '().' → logprob: -2.2236735820770264
    4. '()' → logprob: -2.2236735820770264
    5. '()));' → logprob: -6.223673343658447
    6. '())))' → logprob: -7.348673343658447
    7. '()>' → logprob: -8.973673820495605
    8. '()[' → logprob: -9.098673820495605
    9. '());' → logprob: -9.098673820495605
    10. '(' → logprob: -9.223673820495605

Token 12: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001037815964082256
    2. 'strip' → logprob: -9.500103950500488
    3. 'rstrip' → logprob: -10.500103950500488
    4. ' split' → logprob: -13.750103950500488
    5. '(split' → logprob: -15.750103950500488
    6. 'spl' → logprob: -16.125102996826172
    7. 's' → logprob: -18.750102996826172
    8. '.split' → logprob: -18.875102996826172
    9. 'read' → logprob: -19.125102996826172
    10. ')' → logprob: -19.250102996826172

Token 13: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.4532061219215393
    2. '))' → logprob: -1.8282060623168945
    3. '())' → logprob: -1.8282060623168945
    4. ')' → logprob: -3.3282060623168945
    5. '(' → logprob: -5.5782060623168945
    6. '()' → logprob: -5.8282060623168945
    7. '('' → logprob: -8.953206062316895
    8. ''))' → logprob: -9.703206062316895
    9. '())))' → logprob: -9.828206062316895
    10. ')))' → logprob: -10.078206062316895

Token 14: 'def' (ID: 1314)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.09966407716274261
    2. '.' → logprob: -3.7246639728546143
    3. 'a' → logprob: -3.8496639728546143
    4. '#' → logprob: -4.224664211273193
    5. 's' → logprob: -4.474664211273193
    6. '[' → logprob: -4.599664211273193
    7. 'b' → logprob: -5.599664211273193
    8. 'for' → logprob: -6.474664211273193
    9. '`' → logprob: -6.724664211273193
    10. ')' → logprob: -6.849664211273193

Token 15: ' bub' (ID: 67956)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2873217463493347
    2. ' sum' → logprob: -2.2873218059539795
    3. ' calculate' → logprob: -3.0373218059539795
    4. ' space' → logprob: -4.0373215675354
    5. ' max' → logprob: -4.1623215675354
    6. ' f' → logprob: -4.6623215675354
    7. ' my' → logprob: -4.7873215675354
    8. ' factorial' → logprob: -4.7873215675354
    9. ' sort' → logprob: -4.9123215675354
    10. ' add' → logprob: -5.2873215675354

Token 16: 'les' (ID: 1032)
  Prédit: 'ble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ble' → logprob: -0.0002441741817165166
    2. 'b' → logprob: -8.750244140625
    3. 'bl' → logprob: -9.750244140625
    4. 'bles' → logprob: -10.625244140625
    5. 'bled' → logprob: -14.375244140625
    6. 'be' → logprob: -14.625244140625
    7. '_ble' → logprob: -14.625244140625
    8. '```' → logprob: -14.750244140625
    9. 'bling' → logprob: -15.000244140625
    10. 'bler' → logprob: -15.750244140625

Token 17: 'ort' (ID: 390)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.7142760753631592
    2. 'ort' → logprob: -0.7142760753631592
    3. '_sort' → logprob: -4.464276313781738
    4. 'sort' → logprob: -5.214276313781738
    5. '_' → logprob: -6.714276313781738
    6. 'орт' → logprob: -7.214276313781738
    7. 't' → logprob: -7.464276313781738
    8. '_o' → logprob: -7.839276313781738
    9. 'or' → logprob: -8.589276313781738
    10. '```' → logprob: -8.714276313781738

Token 18: '(b' (ID: 3229)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01925233006477356
    2. '_' → logprob: -4.019252300262451
    3. '(a' → logprob: -7.519252300262451
    4. '(b' → logprob: -9.14425277709961
    5. ' (' → logprob: -9.26925277709961
    6. 's' → logprob: -9.51925277709961
    7. '_s' → logprob: -10.26925277709961
    8. '(_' → logprob: -10.51925277709961
    9. '():' → logprob: -10.89425277709961
    10. '_(' → logprob: -10.89425277709961

Token 19: ',a' (ID: 26776)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16698256134986877
    2. ')' → logprob: -1.9169825315475464
    3. ')):' → logprob: -5.791982650756836
    4. '[' → logprob: -6.041982650756836
    5. '[b' → logprob: -7.666982650756836
    6. '[]):' → logprob: -8.291982650756836
    7. '))' → logprob: -8.666982650756836
    8. ')b' → logprob: -9.291982650756836
    9. 'b' → logprob: -9.416982650756836
    10. '(b' → logprob: -9.416982650756836

Token 20: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.523249626159668
    2. ')' → logprob: -0.898249626159668
    3. ')):' → logprob: -9.273249626159668
    4. '))' → logprob: -11.273249626159668
    5. '[' → logprob: -12.773249626159668
    6. '(' → logprob: -13.023249626159668
    7. ' ):' → logprob: -13.273249626159668
    8. ':' → logprob: -13.523249626159668
    9. ')：' → logprob: -13.523249626159668
    10. '[]):' → logprob: -14.023249626159668

Token 21: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6875858902931213
    2. '   ' → logprob: -0.9375858902931213
    3. ' ' → logprob: -2.9375858306884766
    4. ' :' → logprob: -3.5625858306884766
    5. ' for' → logprob: -4.562585830688477
    6. ':
' → logprob: -5.937585830688477
    7. 'b' → logprob: -6.562585830688477
    8. ' :
' → logprob: -6.562585830688477
    9. '    ' → logprob: -6.687585830688477
    10. 'n' → logprob: -6.812585830688477

Token 22: ' count' (ID: 3605)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.042819783091545105
    2. '   ' → logprob: -3.7928197383880615
    3. 'for' → logprob: -4.667819976806641
    4. ' i' → logprob: -5.042819976806641
    5. ' n' → logprob: -6.917819976806641
    6. '    ' → logprob: -7.292819976806641
    7. ' ' → logprob: -7.792819976806641
    8. 'n' → logprob: -8.04281997680664
    9. ' b' → logprob: -8.16781997680664
    10. 'i' → logprob: -8.54281997680664

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5257911682128906
    2. '=' → logprob: -1.1507911682128906
    3. ' ' → logprob: -3.1507911682128906
    4. '_' → logprob: -3.4007911682128906
    5. ' +=' → logprob: -5.650791168212891
    6. ',' → logprob: -5.775791168212891
    7. '  ' → logprob: -5.900791168212891
    8. '_space' → logprob: -6.275791168212891
    9. '   ' → logprob: -6.775791168212891
    10. 'space' → logprob: -6.900791168212891

Token 24: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0067167943343520164
    2. ' ' → logprob: -5.006716728210449
    3. '   ' → logprob: -14.00671672821045
    4. '1' → logprob: -14.63171672821045
    5. '    ' → logprob: -16.506717681884766
    6. '  ' → logprob: -16.756717681884766
    7. ' ' → logprob: -17.506717681884766
    8. 'len' → logprob: -18.881717681884766
    9. ' len' → logprob: -19.506717681884766
    10. '=' → logprob: -19.506717681884766

Token 25: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2725186049938202
    2. ' ' → logprob: -2.1475186347961426
    3. '<|end|>' → logprob: -3.0225186347961426
    4. ':' → logprob: -3.3975186347961426
    5. '   ' → logprob: -4.397518634796143
    6. '  
' → logprob: -4.647518634796143
    7. ' 
' → logprob: -4.897518634796143
    8. '  ' → logprob: -6.272518634796143
    9. '<|end|>' → logprob: -6.522518634796143
    10. '   
' → logprob: -6.897518634796143

Token 26: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.578347384929657
    2. '
' → logprob: -1.4533474445343018
    3. '   ' → logprob: -2.3283474445343018
    4. ' 
' → logprob: -3.4533474445343018
    5. '<|end|>' → logprob: -4.078347206115723
    6. '  ' → logprob: -4.203347206115723
    7. '  
' → logprob: -4.203347206115723
    8. '   
' → logprob: -4.828347206115723
    9. ' for' → logprob: -4.828347206115723
    10. '\n' → logprob: -6.203347206115723

Token 27: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.061431288719177246
    2. '   ' → logprob: -3.311431407928467
    3. 'for' (adapté à ' for') → logprob: -4.186431407928467
    4. ' n' → logprob: -5.436431407928467
    5. '<|end|>' → logprob: -6.936431407928467
    6. ' ' → logprob: -7.061431407928467
    7. 'n' → logprob: -7.436431407928467
    8. '	for' → logprob: -8.186430931091309
    9. ' i' → logprob: -8.186430931091309
    10. '    ' → logprob: -8.311430931091309

Token 28: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.005272653419524431
    2. ' ' → logprob: -5.50527286529541
    3. 'i' → logprob: -6.88027286529541
    4. ' range' → logprob: -9.38027286529541
    5. ' _' → logprob: -11.13027286529541
    6. ' I' → logprob: -11.38027286529541
    7. ' ' → logprob: -11.38027286529541
    8. '_' → logprob: -11.88027286529541
    9. ' ‌' → logprob: -12.00527286529541
    10. ' in' → logprob: -12.13027286529541

Token 29: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006101205013692379
    2. 'in' → logprob: -5.131101131439209
    3. ' ' → logprob: -9.131101608276367
    4. 'range' → logprob: -10.381101608276367
    5. ' range' → logprob: -10.881101608276367
    6. '   ' → logprob: -12.381101608276367
    7. '  ' → logprob: -12.506101608276367
    8. '    ' → logprob: -13.631101608276367
    9. '	in' → logprob: -13.756101608276367
    10. ',' → logprob: -13.881101608276367

Token 30: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.033672671765089035
    2. 'range' → logprob: -3.408672571182251
    3. ' ' → logprob: -11.033672332763672
    4. ' in' → logprob: -12.783672332763672
    5. ')' → logprob: -13.158672332763672
    6. '	range' → logprob: -13.283672332763672
    7. ' xrange' → logprob: -13.408672332763672
    8. ' a' → logprob: -13.408672332763672
    9. ' r' → logprob: -15.283672332763672
    10. '(range' → logprob: -15.533672332763672

Token 31: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04308997094631195
    2. '(a' → logprob: -3.1680898666381836
    3. '(len' → logprob: -9.918089866638184
    4. ' (' → logprob: -11.168089866638184
    5. '(range' → logprob: -12.043089866638184
    6. '(n' → logprob: -12.043089866638184
    7. '()' → logprob: -12.793089866638184
    8. '(
' → logprob: -12.793089866638184
    9. '(s' → logprob: -12.918089866638184
    10. '('' → logprob: -13.418089866638184

Token 32: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.002417395357042551
    2. '(' → logprob: -6.37741756439209
    3. '(a' → logprob: -7.25241756439209
    4. ')b' → logprob: -13.12741756439209
    5. ')' → logprob: -13.75241756439209
    6. 'b' → logprob: -14.00241756439209
    7. '(s' → logprob: -14.00241756439209
    8. '(j' → logprob: -14.50241756439209
    9. '(range' → logprob: -14.87741756439209
    10. '(n' → logprob: -15.62741756439209

Token 33: ')-' (ID: 14080)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.215069979429245
    2. ')):' → logprob: -1.9650700092315674
    3. '))' → logprob: -3.8400700092315674
    4. ')' → logprob: -4.340069770812988
    5. '-' → logprob: -4.465069770812988
    6. ' ):' → logprob: -5.340069770812988
    7. '   ' → logprob: -7.090069770812988
    8. ' -' → logprob: -7.590069770812988
    9. ' ' → logprob: -7.590069770812988
    10. ' ))' → logprob: -8.090069770812988

Token 34: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012415809032972902
    2. ' ' → logprob: -9.000123977661133
    3. 'a' → logprob: -15.625123977661133
    4. '(' → logprob: -16.375123977661133
    5. '-' → logprob: -16.375123977661133
    6. '2' → logprob: -16.500123977661133
    7. '１' → logprob: -16.750123977661133
    8. ')' → logprob: -17.812623977661133
    9. '   ' → logprob: -18.000123977661133
    10. ' a' → logprob: -18.187623977661133

Token 35: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.041297782212495804
    2. ')' → logprob: -3.291297674179077
    3. ':' → logprob: -6.041297912597656
    4. ' ):' → logprob: -7.416297912597656
    5. '):
' → logprob: -9.291297912597656
    6. ' )' → logprob: -9.291297912597656
    7. '   ' → logprob: -10.416297912597656
    8. ' ' → logprob: -11.541297912597656
    9. ',' → logprob: -11.541297912597656
    10. ':)' → logprob: -12.416297912597656

Token 36: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21137204766273499
    2. '   ' → logprob: -1.9613720178604126
    3. '    ' → logprob: -4.086371898651123
    4. ':' → logprob: -4.461371898651123
    5. '<|end|>' → logprob: -4.461371898651123
    6. ' ' → logprob: -5.336371898651123
    7. '     ' → logprob: -7.586371898651123
    8. '    
' → logprob: -7.711371898651123
    9. ')' → logprob: -7.711371898651123
    10. '<|end|>' → logprob: -7.836371898651123

Token 37: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2765839695930481
    2. '    ' → logprob: -1.9015839099884033
    3. ' for' → logprob: -2.9015839099884033
    4. 'for' (adapté à ' for') → logprob: -4.026584148406982
    5. ' ' → logprob: -4.651584148406982
    6. '       ' → logprob: -5.276584148406982
    7. ' i' → logprob: -6.151584148406982
    8. 'i' → logprob: -6.651584148406982
    9. '  ' → logprob: -7.901584148406982
    10. 'n' → logprob: -8.526583671569824

Token 38: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.016105452552437782
    2. 'i' → logprob: -4.141105651855469
    3. ' ' → logprob: -10.516105651855469
    4. '	i' → logprob: -11.016105651855469
    5. ' k' → logprob: -11.516105651855469
    6. '_i' → logprob: -12.391105651855469
    7. '<|end|>' → logprob: -12.766105651855469
    8. ' j' → logprob: -13.141105651855469
    9. 'k' → logprob: -13.266105651855469
    10. 'I' → logprob: -13.703605651855469

Token 39: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007161569781601429
    2. 'in' → logprob: -5.257161617279053
    3. ' ' → logprob: -6.382161617279053
    4. '<|end|>' → logprob: -8.507161140441895
    5. '+' → logprob: -11.132161140441895
    6. '  ' → logprob: -13.007161140441895
    7. 'range' → logprob: -13.007161140441895
    8. '    ' → logprob: -13.132161140441895
    9. '	in' → logprob: -13.132161140441895
    10. '<|end|>' → logprob: -13.382161140441895

Token 40: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.575943648815155
    2. 'range' → logprob: -0.825943648815155
    3. '(range' → logprob: -13.075943946838379
    4. 'len' → logprob: -14.325943946838379
    5. '0' → logprob: -14.700943946838379
    6. ' len' → logprob: -14.950943946838379
    7. ' ' → logprob: -15.075943946838379
    8. '	range' → logprob: -15.325943946838379
    9. ' xrange' → logprob: -15.700943946838379
    10. '   ' → logprob: -17.950942993164062

Token 41: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0017061287071555853
    2. '(' → logprob: -6.501706123352051
    3. '(a' → logprob: -9.62670612335205
    4. ' len' → logprob: -9.62670612335205
    5. 'len' → logprob: -10.12670612335205
    6. ' (' → logprob: -10.50170612335205
    7. '	len' → logprob: -13.87670612335205
    8. '1' → logprob: -14.37670612335205
    9. '(n' → logprob: -14.37670612335205
    10. '(l' → logprob: -14.50170612335205

Token 42: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -5.9153885558771435e-06
    2. 'b' → logprob: -12.500005722045898
    3. '(a' → logprob: -13.375005722045898
    4. '(' → logprob: -14.875005722045898
    5. ')b' → logprob: -16.3750057220459
    6. '(B' → logprob: -17.0000057220459
    7. '(s' → logprob: -17.7500057220459
    8. '	b' → logprob: -17.8750057220459
    9. 'a' → logprob: -18.0000057220459
    10. '[b' → logprob: -18.2500057220459

Token 43: ')-' (ID: 14080)
  Prédit: ')-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.059518229216337204
    2. ')' → logprob: -2.934518337249756
    3. '-' → logprob: -5.809518337249756
    4. ' )' → logprob: -6.934518337249756
    5. '[i' → logprob: -8.434517860412598
    6. '   ' → logprob: -9.059517860412598
    7. '[' → logprob: -9.559517860412598
    8. ' -' → logprob: -9.934517860412598
    9. '()-' → logprob: -10.184517860412598
    10. '-)' → logprob: -10.309517860412598

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0802738870552275e-05
    2. ' ' → logprob: -11.50001049041748
    3. '2' → logprob: -15.50001049041748
    4. '   ' → logprob: -16.375011444091797
    5. 'i' → logprob: -16.375011444091797
    6. ')' → logprob: -16.875011444091797
    7. '-' → logprob: -17.000011444091797
    8. 'a' → logprob: -17.250011444091797
    9. 'b' → logprob: -17.375011444091797
    10. '```' → logprob: -17.500011444091797

Token 45: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8663202524185181
    2. '):' → logprob: -0.8663202524185181
    3. ' -' → logprob: -2.4913201332092285
    4. '-' → logprob: -2.6163201332092285
    5. '<|end|>' → logprob: -6.9913201332092285
    6. '):
' → logprob: -7.8663201332092285
    7. '-)' → logprob: -8.116320610046387
    8. ')-' → logprob: -8.366320610046387
    9. ' )' → logprob: -8.366320610046387
    10. '-i' → logprob: -8.491320610046387

Token 46: '0' (ID: 15)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.008435378782451153
    2. '0' → logprob: -5.258435249328613
    3. ' j' → logprob: -5.758435249328613
    4. 'i' → logprob: -10.758435249328613
    5. '   ' → logprob: -11.633435249328613
    6. ' ' → logprob: -12.258435249328613
    7. '	j' → logprob: -12.508435249328613
    8. '    ' → logprob: -14.258435249328613
    9. '1' → logprob: -15.508435249328613
    10. '  ' → logprob: -16.00843620300293

Token 47: ',-' (ID: 8202)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01033521443605423
    2. ' -' → logprob: -5.260335445404053
    3. ',-' → logprob: -6.010335445404053
    4. ',' → logprob: -6.010335445404053
    5. ',i' → logprob: -10.010334968566895
    6. '-i' → logprob: -10.635334968566895
    7. '   ' → logprob: -10.635334968566895
    8. ')' → logprob: -10.760334968566895
    9. '-)' → logprob: -10.885334968566895
    10. '-,' → logprob: -11.385334968566895

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -17.0
    4. '１' → logprob: -17.625
    5. '  ' → logprob: -17.75
    6. '2' → logprob: -17.9375
    7. '১' → logprob: -18.0
    8. '१' → logprob: -18.0
    9. '```' → logprob: -18.125
    10. '    ' → logprob: -18.4375

Token 49: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.42231208086013794
    2. '-' → logprob: -1.1723120212554932
    3. ' -' → logprob: -4.047312259674072
    4. ',-' → logprob: -5.047312259674072
    5. '):
' → logprob: -5.547312259674072
    6. ',' → logprob: -5.672312259674072
    7. '):-' → logprob: -6.547312259674072
    8. ')' → logprob: -6.922312259674072
    9. '   ' → logprob: -7.547312259674072
    10. ':' → logprob: -8.547311782836914

Token 50: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3872068226337433
    2. ' ' → logprob: -1.762206792831421
    3. '   ' → logprob: -2.387206792831421
    4. '    ' → logprob: -3.387206792831421
    5. '<|end|>' → logprob: -5.01220703125
    6. '  ' → logprob: -5.88720703125
    7. '	' → logprob: -5.88720703125
    8. '        ' → logprob: -5.88720703125
    9. '[' → logprob: -6.26220703125
    10. '     ' → logprob: -7.01220703125

Token 51: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.608220100402832
    2. 'if' (adapté à ' if') → logprob: -1.733220100402832
    3. 'i' → logprob: -2.108220100402832
    4. ' i' → logprob: -3.233220100402832
    5. '    ' → logprob: -3.358220100402832
    6. '   ' → logprob: -3.858220100402832
    7. '       ' → logprob: -4.108220100402832
    8. '0' → logprob: -4.108220100402832
    9. ' ' → logprob: -4.733220100402832
    10. '1' → logprob: -4.733220100402832

Token 52: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.001938631059601903
    2. 'b' → logprob: -6.251938819885254
    3. ' i' → logprob: -12.626938819885254
    4. ' a' → logprob: -12.751938819885254
    5. '	b' → logprob: -13.501938819885254
    6. '    ' → logprob: -13.751938819885254
    7. ' ' → logprob: -14.501938819885254
    8. '>b' → logprob: -15.001938819885254
    9. ' ' → logprob: -15.126938819885254
    10. '(b' → logprob: -16.501937866210938

Token 53: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00043519894825294614
    2. '[' → logprob: -7.7504353523254395
    3. '[j' → logprob: -12.875434875488281
    4. '[a' → logprob: -14.375434875488281
    5. ' [' → logprob: -14.500434875488281
    6. '[I' → logprob: -14.875434875488281
    7. 'i' → logprob: -15.375434875488281
    8. ' ' → logprob: -16.75043487548828
    9. '[int' → logprob: -16.87543487548828
    10. '[index' → logprob: -17.00043487548828

Token 54: '-' (ID: 12)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1456868052482605
    2. '[' → logprob: -2.6456868648529053
    3. '-' → logprob: -3.7706868648529053
    4. ' ' → logprob: -4.395686626434326
    5. '[i' → logprob: -4.395686626434326
    6. '<' → logprob: -5.145686626434326
    7. ' >' → logprob: -5.520686626434326
    8. ' -' → logprob: -5.895686626434326
    9. ']' → logprob: -6.645686626434326
    10. '    ' → logprob: -7.645686626434326

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.630610641877865e-06
    2. 'i' → logprob: -12.250006675720215
    3. ' ' → logprob: -13.375006675720215
    4. '0' → logprob: -16.2500057220459
    5. ']' → logprob: -17.1250057220459
    6. '   ' → logprob: -17.1250057220459
    7. ' i' → logprob: -18.3750057220459
    8. 'a' → logprob: -18.6250057220459
    9. '```' → logprob: -18.7500057220459
    10. '  ' → logprob: -19.0000057220459

Token 56: ']>' (ID: 54651)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.31328263878822327
    2. ' >' → logprob: -1.3132826089859009
    3. '>b' → logprob: -11.81328296661377
    4. ' ' → logprob: -12.43828296661377
    5. '">' → logprob: -12.68828296661377
    6. '   ' → logprob: -13.18828296661377
    7. '    ' → logprob: -13.93828296661377
    8. '＞' → logprob: -14.18828296661377
    9. ' ' → logprob: -14.56328296661377
    10. ']>' → logprob: -14.68828296661377

Token 57: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0019289902411401272
    2. ' b' → logprob: -6.251928806304932
    3. '>b' → logprob: -16.251928329467773
    4. ')b' → logprob: -16.251928329467773
    5. '	b' → logprob: -16.376928329467773
    6. '   ' → logprob: -17.251928329467773
    7. ' ' → logprob: -18.001928329467773
    8. 'i' → logprob: -18.251928329467773
    9. '<|end|>' → logprob: -18.751928329467773
    10. '0' → logprob: -18.751928329467773

Token 58: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.670925358776003e-05
    2. '[' → logprob: -9.625066757202148
    3. ']' → logprob: -15.125066757202148
    4. '[j' → logprob: -15.875066757202148
    5. '][' → logprob: -16.62506675720215
    6. 'i' → logprob: -16.75006675720215
    7. '[
' → logprob: -17.00006675720215
    8. '[I' → logprob: -18.00006675720215
    9. ' [' → logprob: -18.87506675720215
    10. '[index' → logprob: -19.00006675720215

Token 59: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010894191451370716
    2. ':' → logprob: -4.635894298553467
    3. ' ):' → logprob: -7.260894298553467
    4. ')' → logprob: -8.260893821716309
    5. '):
' → logprob: -9.010893821716309
    6. '       ' → logprob: -11.135893821716309
    7. ']:' → logprob: -11.260893821716309
    8. '   ' → logprob: -12.385893821716309
    9. ' :' → logprob: -12.635893821716309
    10. ' and' → logprob: -12.885893821716309

Token 60: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0610077865421772
    2. '                ' → logprob: -4.186007976531982
    3. '<|end|>' → logprob: -4.436007976531982
    4. '           ' → logprob: -4.686007976531982
    5. '            ' → logprob: -4.936007976531982
    6. ' ' → logprob: -4.936007976531982
    7. '       ' → logprob: -6.311007976531982
    8. '        ' → logprob: -6.561007976531982
    9. '              ' → logprob: -6.811007976531982
    10. ':' → logprob: -7.686007976531982

Token 61: ' b' (ID: 287)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9376325011253357
    2. '                ' → logprob: -1.1876325607299805
    3. '                   ' → logprob: -1.9376325607299805
    4. ' b' → logprob: -2.6876325607299805
    5. 'b' (adapté à ' b') → logprob: -3.1876325607299805
    6. '           ' → logprob: -4.4376325607299805
    7. ' ' → logprob: -4.5626325607299805
    8. '       ' → logprob: -4.8126325607299805
    9. '            ' → logprob: -5.9376325607299805
    10. '```' → logprob: -5.9376325607299805

Token 62: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002991160727106035
    2. '[' → logprob: -8.125299453735352
    3. ',i' → logprob: -13.625299453735352
    4. ',' → logprob: -14.000299453735352
    5. 'i' → logprob: -15.000299453735352
    6. '[j' → logprob: -15.250299453735352
    7. ' [' → logprob: -16.12529945373535
    8. '[I' → logprob: -16.12529945373535
    9. '[a' → logprob: -16.50029945373535
    10. '[int' → logprob: -16.50029945373535

Token 63: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6518785953521729
    2. '],' → logprob: -1.0268785953521729
    3. ']' → logprob: -2.276878595352173
    4. ' -' → logprob: -4.776878356933594
    5. '[' → logprob: -5.026878356933594
    6. '[i' → logprob: -6.026878356933594
    7. '[-' → logprob: -8.901878356933594
    8. ' ],' → logprob: -9.276878356933594
    9. ']-' → logprob: -9.526878356933594
    10. 'swap' → logprob: -9.651878356933594

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -16.625003814697266
    4. '0' → logprob: -16.875003814697266
    5. '<|end|>' → logprob: -17.062503814697266
    6. 'b' → logprob: -17.250003814697266
    7. '   ' → logprob: -17.250003814697266
    8. '    ' → logprob: -18.375003814697266
    9. '  ' → logprob: -18.875003814697266
    10. '2' → logprob: -19.062503814697266

Token 65: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0008632226963527501
    2. ']' → logprob: -7.125863075256348
    3. '>,' → logprob: -10.125863075256348
    4. '],[' → logprob: -12.000863075256348
    5. ' ],' → logprob: -12.625863075256348
    6. ']=' → logprob: -12.625863075256348
    7. ',' → logprob: -12.625863075256348
    8. '[' → logprob: -14.500863075256348
    9. '],
' → logprob: -14.875863075256348
    10. '>' → logprob: -14.875863075256348

Token 66: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5760115385055542
    2. ' b' → logprob: -0.8260115385055542
    3. '<|end|>' → logprob: -9.576011657714844
    4. ' ' → logprob: -13.076011657714844
    5. '	b' → logprob: -15.451011657714844
    6. '<|end|>' → logprob: -15.951011657714844
    7. ' ' → logprob: -17.201011657714844
    8. ')b' → logprob: -17.201011657714844
    9. '    ' → logprob: -17.576011657714844
    10. ' б' → logprob: -17.576011657714844

Token 67: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0008582198061048985
    2. '[' → logprob: -7.125858306884766
    3. '<|end|>' → logprob: -10.125858306884766
    4. '[
' → logprob: -12.000858306884766
    5. ']' → logprob: -13.000858306884766
    6. 'i' → logprob: -13.625858306884766
    7. '[I' → logprob: -14.125858306884766
    8. '[]' → logprob: -14.500858306884766
    9. '[int' → logprob: -14.750858306884766
    10. '][' → logprob: -15.000858306884766

Token 68: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1004951000213623
    2. ' =' → logprob: -3.1004951000213623
    3. '=' → logprob: -3.3504951000213623
    4. ']=' → logprob: -4.225495338439941
    5. ')' → logprob: -7.975495338439941
    6. ' ]' → logprob: -7.975495338439941
    7. '<|end|>' → logprob: -8.850495338439941
    8. ' ' → logprob: -10.725495338439941
    9. ')=' → logprob: -11.350495338439941
    10. ',' → logprob: -12.350495338439941

Token 69: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005234832875430584
    2. ' b' → logprob: -5.255234718322754
    3. '   ' → logprob: -15.130234718322754
    4. '	b' → logprob: -15.380234718322754
    5. ' ' → logprob: -15.505234718322754
    6. '               ' → logprob: -16.38023567199707
    7. '           ' → logprob: -16.50523567199707
    8. '    ' → logprob: -17.00523567199707
    9. '```' → logprob: -17.25523567199707
    10. '  ' → logprob: -17.38023567199707

Token 70: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002625278721097857
    2. '[' → logprob: -8.250262260437012
    3. 'i' → logprob: -14.250262260437012
    4. '[I' → logprob: -15.500262260437012
    5. '[j' → logprob: -15.625262260437012
    6. '[
' → logprob: -16.875263214111328
    7. ' [' → logprob: -17.625263214111328
    8. '[]' → logprob: -17.750263214111328
    9. ']' → logprob: -18.250263214111328
    10. '[b' → logprob: -18.375263214111328

Token 71: '],' (ID: 2155)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02603830397129059
    2. '],' → logprob: -3.776038408279419
    3. ']' → logprob: -6.77603816986084
    4. '[i' → logprob: -6.90103816986084
    5. ' -' → logprob: -8.27603816986084
    6. '[' → logprob: -8.77603816986084
    7. ' ' → logprob: -9.52603816986084
    8. '],[' → logprob: -9.65103816986084
    9. ' ],' → logprob: -10.65103816986084
    10. '1' → logprob: -11.15103816986084

Token 72: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -4.584861744660884e-05
    2. ' b' → logprob: -10.000045776367188
    3. '               ' → logprob: -15.500045776367188
    4. '           ' → logprob: -16.750045776367188
    5. ' ' → logprob: -17.125045776367188
    6. '                   ' → logprob: -17.125045776367188
    7. '<|end|>' → logprob: -17.125045776367188
    8. '   ' → logprob: -17.250045776367188
    9. '       ' → logprob: -18.250045776367188
    10. '	b' → logprob: -18.500045776367188

Token 73: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.816093228830141e-06
    2. '[' → logprob: -13.62500286102295
    3. 'i' → logprob: -14.00000286102295
    4. '[j' → logprob: -14.50000286102295
    5. '[I' → logprob: -15.87500286102295
    6. '[
' → logprob: -17.375001907348633
    7. ']' → logprob: -17.750001907348633
    8. '   ' → logprob: -17.875001907348633
    9. ',i' → logprob: -19.000001907348633
    10. '[b' → logprob: -19.000001907348633

Token 74: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.6087021473795176e-05
    2. ' -' → logprob: -10.000045776367188
    3. '1' → logprob: -15.000045776367188
    4. '[' → logprob: -15.625045776367188
    5. ']' → logprob: -17.375045776367188
    6. '−' → logprob: -17.375045776367188
    7. '<|end|>' → logprob: -17.500045776367188
    8. ']-' → logprob: -17.500045776367188
    9. '[-' → logprob: -17.750045776367188
    10. '[i' → logprob: -18.125045776367188

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.750001907348633
    3. '<|end|>' → logprob: -15.250001907348633
    4. ']' → logprob: -15.375001907348633
    5. '   ' → logprob: -17.375001907348633
    6. '```' → logprob: -17.750001907348633
    7. ')' → logprob: -18.000001907348633
    8. '-' → logprob: -18.500001907348633
    9. '  ' → logprob: -18.937501907348633
    10. '<|end|>' → logprob: -18.937501907348633

Token 76: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04180656000971794
    2. ']' → logprob: -3.79180645942688
    3. ')
' → logprob: -4.041806697845459
    4. '               ' → logprob: -8.0418062210083
    5. ']
' → logprob: -8.9168062210083
    6. '}' → logprob: -9.5418062210083
    7. ')
' → logprob: -9.5418062210083
    8. '）' → logprob: -9.6668062210083
    9. '           ' → logprob: -10.2918062210083
    10. '])' → logprob: -10.4168062210083

Token 77: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08740115910768509
    2. '                   ' → logprob: -3.5874011516571045
    3. '                ' → logprob: -3.9624011516571045
    4. '       ' → logprob: -4.337401390075684
    5. '           ' → logprob: -5.337401390075684
    6. '                
' → logprob: -5.337401390075684
    7. ' ' → logprob: -6.212401390075684
    8. '<|end|>' → logprob: -6.337401390075684
    9. '              ' → logprob: -6.587401390075684
    10. '```' → logprob: -6.712401390075684

Token 78: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.00596837280318141
    2. ' count' → logprob: -5.1309685707092285
    3. ' ' → logprob: -11.13096809387207
    4. '[count' → logprob: -11.63096809387207
    5. '$count' → logprob: -12.50596809387207
    6. '	count' → logprob: -13.25596809387207
    7. '1' → logprob: -13.25596809387207
    8. '.count' → logprob: -13.38096809387207
    9. '(count' → logprob: -13.75596809387207
    10. '<count' → logprob: -13.88096809387207

Token 79: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5804580450057983
    2. '+=' → logprob: -0.9554580450057983
    3. ' +=' → logprob: -2.955458164215088
    4. '=' → logprob: -5.705458164215088
    5. '<|end|>' → logprob: -9.20545768737793
    6. '++' → logprob: -9.58045768737793
    7. ' +' → logprob: -9.70545768737793
    8. ' =' → logprob: -10.45545768737793
    9. '+++' → logprob: -11.08045768737793
    10. '+='' → logprob: -11.33045768737793

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -18.87507438659668
    4. '<|end|>' → logprob: -20.50007438659668
    5. '  ' → logprob: -20.62507438659668
    6. '１' → logprob: -20.87507438659668
    7. '```' → logprob: -21.87507438659668
    8. '+' → logprob: -21.87507438659668
    9. '    ' → logprob: -22.25007438659668
    10. '           ' → logprob: -22.50007438659668

Token 81: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.345083475112915
    2. '   ' → logprob: -1.720083475112915
    3. '    ' → logprob: -1.970083475112915
    4. ' 
' → logprob: -1.970083475112915
    5. '       ' → logprob: -2.220083475112915
    6. '<|end|>' → logprob: -2.720083475112915
    7. '
' → logprob: -3.720083475112915
    8. '\n' → logprob: -3.845083475112915
    9. '    
' → logprob: -4.345083236694336
    10. '  ' → logprob: -4.720083236694336

Token 82: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9399843215942383
    2. '   ' → logprob: -1.1899843215942383
    3. '<|end|>' → logprob: -2.1899843215942383
    4. '    ' → logprob: -2.6899843215942383
    5. ' 
' → logprob: -2.9399843215942383
    6. '       ' → logprob: -3.3149843215942383
    7. '  ' → logprob: -4.689984321594238
    8. '```' → logprob: -5.564984321594238
    9. '
' → logprob: -5.814984321594238
    10. ')' → logprob: -5.939984321594238

Token 83: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4162014424800873
    2. '   ' → logprob: -1.6662014722824097
    3. '    ' → logprob: -3.04120135307312
    4. '       ' → logprob: -3.16620135307312
    5. ' 
' → logprob: -3.54120135307312
    6. '<|end|>' → logprob: -4.541201591491699
    7. '  ' → logprob: -5.291201591491699
    8. ' return' → logprob: -5.791201591491699
    9. '        ' → logprob: -6.041201591491699
    10. ')' → logprob: -6.416201591491699

Token 84: ' count' (ID: 3605)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.20846211910247803
    2. 'b' → logprob: -2.3334622383117676
    3. ' count' → logprob: -2.8334622383117676
    4. 'count' → logprob: -3.4584622383117676
    5. ' (' → logprob: -8.33346176147461
    6. ' ' → logprob: -8.95846176147461
    7. ' a' → logprob: -8.95846176147461
    8. 'a' → logprob: -8.95846176147461
    9. '[count' → logprob: -9.45846176147461
    10. '(count' → logprob: -9.58346176147461

Token 85: ',b' (ID: 17568)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3082091212272644
    2. '<|end|>' → logprob: -1.5582091808319092
    3. ' ' → logprob: -3.558209180831909
    4. ' 
' → logprob: -4.55820894241333
    5. '  
' → logprob: -5.93320894241333
    6. '[' → logprob: -6.30820894241333
    7. '' → logprob: -6.43320894241333
    8. ')' → logprob: -6.55820894241333
    9. '<|end|>' → logprob: -6.68320894241333
    10. '   ' → logprob: -6.68320894241333

Token 87: 'A' (ID: 32)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: ',B' (ID: 19853)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5697420239448547
    2. '=' → logprob: -1.31974196434021
    3. ' ' → logprob: -2.94474196434021
    4. '_' → logprob: -3.56974196434021
    5. ':' → logprob: -4.069742202758789
    6. ' )' → logprob: -4.069742202758789
    7. ' =' → logprob: -4.444742202758789
    8. 'b' → logprob: -4.819742202758789
    9. 'a' → logprob: -5.319742202758789
    10. '[' → logprob: -5.694742202758789

Token 89: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07035095989704132
    2. ' =' → logprob: -2.6953508853912354
    3. '=A' → logprob: -9.445350646972656
    4. ')' → logprob: -9.695350646972656
    5. ',' → logprob: -10.070350646972656
    6. ')=' → logprob: -10.070350646972656
    7. '[' → logprob: -10.195350646972656
    8. '<|end|>' → logprob: -10.570350646972656
    9. '=count' → logprob: -10.820350646972656
    10. '=b' → logprob: -11.070350646972656

Token 90: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0022091392893344164
    2. ' bub' → logprob: -6.252209186553955
    3. ' b' → logprob: -9.252208709716797
    4. ' ' → logprob: -10.189708709716797
    5. ' bubbles' → logprob: -10.814708709716797
    6. '(b' → logprob: -11.002208709716797
    7. 'bubble' → logprob: -11.252208709716797
    8. '   ' → logprob: -11.314708709716797
    9. '```' → logprob: -11.689708709716797
    10. ' bubb' → logprob: -11.814708709716797

Token 91: 'ubles' (ID: 147575)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: 'ort' (ID: 390)
  Prédit: 'ort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ort' → logprob: -0.004163756500929594
    2. 'sort' → logprob: -5.50416374206543
    3. 'o' → logprob: -10.00416374206543
    4. 'орт' → logprob: -10.25416374206543
    5. '```' → logprob: -13.37916374206543
    6. 'or' → logprob: -14.37916374206543
    7. '_sort' → logprob: -14.37916374206543
    8. 'Sort' → logprob: -14.62916374206543
    9. 'orta' → logprob: -15.75416374206543
    10. ' sort' → logprob: -16.00416374206543

Token 93: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.026502666994929314
    2. '(' → logprob: -3.6515026092529297
    3. '(B' → logprob: -9.15150260925293
    4. ' (' → logprob: -9.40150260925293
    5. '(a' → logprob: -12.27650260925293
    6. '(
' → logprob: -12.27650260925293
    7. '((' → logprob: -13.65150260925293
    8. '```' → logprob: -14.40150260925293
    9. ')' → logprob: -14.77650260925293
    10. '([' → logprob: -15.02650260925293

Token 94: ',a' (ID: 26776)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6120506525039673
    2. ',a' → logprob: -1.2370506525039673
    3. ',b' → logprob: -1.8620506525039673
    4. ',A' → logprob: -4.987050533294678
    5. ' ,' → logprob: -5.737050533294678
    6. ')' → logprob: -6.737050533294678
    7. ',B' → logprob: -7.612050533294678
    8. 'a' → logprob: -9.362051010131836
    9. '),' → logprob: -9.487051010131836
    10. 'b' → logprob: -10.362051010131836

Token 95: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ')
' → logprob: -14.000001907348633
    3. '[' → logprob: -14.375001907348633
    4. ' )' → logprob: -14.875001907348633
    5. '))' → logprob: -16.125001907348633
    6. ')`' → logprob: -16.375001907348633
    7. ')

' → logprob: -16.875001907348633
    8. '),' → logprob: -17.875001907348633
    9. ')}' → logprob: -18.000001907348633
    10. ')a' → logprob: -18.250001907348633

Token 96: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001669485354796052
    2. 'for' → logprob: -9.500166893005371
    3. 'p' → logprob: -10.750166893005371
    4. '
' → logprob: -10.750166893005371
    5. 'pr' → logprob: -10.750166893005371
    6. 'prin' → logprob: -11.000166893005371
    7. 'A' → logprob: -12.625166893005371
    8. 'pri' → logprob: -13.750166893005371
    9. '<|end|>' → logprob: -13.750166893005371
    10. ' print' → logprob: -13.750166893005371

Token 97: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04614900425076485
    2. '(A' → logprob: -3.1711490154266357
    3. '(count' → logprob: -6.796148777008057
    4. '('' → logprob: -6.796148777008057
    5. '("("' → logprob: -7.546148777008057
    6. '(B' → logprob: -8.546149253845215
    7. '("' → logprob: -9.421149253845215
    8. '((' → logprob: -9.921149253845215
    9. '(len' → logprob: -11.046149253845215
    10. '(f' → logprob: -12.046149253845215

Token 98: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00010092071170220152
    2. 'b' → logprob: -9.375101089477539
    3. ' B' → logprob: -11.625101089477539
    4. 'A' → logprob: -11.875101089477539
    5. ')' → logprob: -17.25010108947754
    6. '(B' → logprob: -17.37510108947754
    7. '[B' → logprob: -17.37510108947754
    8. '	B' → logprob: -18.50010108947754
    9. '"B' → logprob: -19.37510108947754
    10. '_B' → logprob: -19.62510108947754

Token 99: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. '))' → logprob: -14.000000953674316
    3. ' )' → logprob: -14.750000953674316
    4. ')`' → logprob: -16.375001907348633
    5. ')#' → logprob: -17.500001907348633
    6. ')**' → logprob: -17.625001907348633
    7. ')}' → logprob: -18.000001907348633
    8. ')
' → logprob: -18.000001907348633
    9. '),' → logprob: -18.875001907348633
    10. '）' → logprob: -19.250001907348633

Token 100: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008204689365811646
    2. ',' → logprob: -8.00082015991211
    3. ' print' → logprob: -8.75082015991211
    4. '<|end|>' → logprob: -9.12582015991211
    5. ' 
' → logprob: -9.75082015991211
    6. ',
' → logprob: -10.00082015991211
    7. '
' → logprob: -10.37582015991211
    8. ')
' → logprob: -10.50082015991211
    9. '  
' → logprob: -11.12582015991211
    10. '(print' → logprob: -11.62582015991211

Token 101: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13217538595199585
    2. '(count' → logprob: -2.1321754455566406
    3. '(A' → logprob: -5.382175445556641
    4. '()' → logprob: -8.00717544555664
    5. '('' → logprob: -9.25717544555664
    6. '(C' → logprob: -9.63217544555664
    7. '((' → logprob: -9.63217544555664
    8. '(B' → logprob: -10.75717544555664
    9. '("("' → logprob: -11.00717544555664
    10. '(
' → logprob: -12.00717544555664

Token 102: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.723352049040841e-06
    2. '))' → logprob: -12.500004768371582
    3. ' )' → logprob: -14.750004768371582
    4. '')' → logprob: -15.875004768371582
    5. ')`' → logprob: -16.500003814697266
    6. ')
' → logprob: -16.750003814697266
    7. ')}' → logprob: -16.750003814697266
    8. '`)' → logprob: -17.500003814697266
    9. ')**' → logprob: -17.875003814697266
    10. '）' → logprob: -18.000003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 100
Tokens correctement prédits (1ère position, stricte): 47
Tokens correctement prédits (1ère position, avec adaptation): 48
Tokens correctement prédits (top 10): 77
Précision stricte (1ère position): 47.00%
Précision adaptée (1ère position): 48.00%
Précision (top 10): 77.00%
================================================================================
