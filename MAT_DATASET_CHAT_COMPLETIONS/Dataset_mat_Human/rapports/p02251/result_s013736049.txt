================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
coin = [25,10,5,1]
sum_s = 0
for i in coin:
    sent = n // i
    n %= i
    sum_s += sent
print(sum_s)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00048763392260298133
    2. ''' → logprob: -8.750487327575684
    3. '('' → logprob: -9.250487327575684
    4. '(n' → logprob: -9.500487327575684
    5. '`' → logprob: -10.250487327575684
    6. '```' → logprob: -10.500487327575684
    7. '("("' → logprob: -10.750487327575684
    8. '(
' → logprob: -10.750487327575684
    9. '(input' → logprob: -11.000487327575684
    10. ')' → logprob: -12.125487327575684

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11869344860315323
    2. ')' → logprob: -2.2436933517456055
    3. '()' → logprob: -5.3686933517456055
    4. '())' → logprob: -7.4936933517456055
    5. '(
' → logprob: -8.243693351745605
    6. '```' → logprob: -9.993693351745605
    7. '(

' → logprob: -10.368693351745605
    8. '('' → logprob: -10.493693351745605
    9. ''' → logprob: -10.618693351745605
    10. '(n' → logprob: -10.868693351745605

Token 5: 'coin' (ID: 10126)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7040315866470337
    2. 'if' → logprob: -1.4540315866470337
    3. 'for' → logprob: -2.329031467437744
    4. 's' → logprob: -2.454031467437744
    5. 'f' → logprob: -4.329031467437744
    6. ' ' → logprob: -4.454031467437744
    7. 'x' → logprob: -4.829031467437744
    8. ')' → logprob: -4.954031467437744
    9. 'a' → logprob: -4.954031467437744
    10. ''' → logprob: -5.079031467437744

Token 6: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.025390807539224625
    2. '_s' → logprob: -3.775390863418579
    3. '_' → logprob: -6.275390625
    4. ' s' → logprob: -8.900390625
    5. ' =' → logprob: -9.775390625
    6. '_counts' → logprob: -10.775390625
    7. '.' → logprob: -11.025390625
    8. ')' → logprob: -12.150390625
    9. '_count' → logprob: -12.775390625
    10. '=' → logprob: -12.900390625

Token 7: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5160297751426697
    2. ' []' → logprob: -1.5160298347473145
    3. '0' → logprob: -2.8910298347473145
    4. '[' → logprob: -3.2660298347473145
    5. ' ' → logprob: -3.2660298347473145
    6. '[]' → logprob: -3.6410298347473145
    7. '[int' → logprob: -4.2660298347473145
    8. '1' → logprob: -5.7660298347473145
    9. ' n' → logprob: -6.1410298347473145
    10. '10' → logprob: -7.1410298347473145

Token 8: '25' (ID: 1161)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18199895322322845
    2. '100' → logprob: -2.4319989681243896
    3. '0' → logprob: -2.8069989681243896
    4. ']' → logprob: -4.5569987297058105
    5. '25' → logprob: -6.3069987297058105
    6. '50' → logprob: -6.8069987297058105
    7. ']int' → logprob: -7.0569987297058105
    8. '10' → logprob: -7.3069987297058105
    9. '])' → logprob: -7.5569987297058105
    10. 'int' → logprob: -7.6819987297058105

Token 9: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0206720617134124e-05
    2. ' ,' → logprob: -12.00001049041748
    3. ',
' → logprob: -13.37501049041748
    4. ',

' → logprob: -13.62501049041748
    5. ',,' → logprob: -15.12501049041748
    6. '0' → logprob: -15.12501049041748
    7. '',' → logprob: -15.62501049041748
    8. ' ' → logprob: -15.87501049041748
    9. ',)' → logprob: -16.500009536743164
    10. ')' → logprob: -16.625009536743164

Token 10: '10' (ID: 702)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22546391189098358
    2. '10' → logprob: -1.6004638671875
    3. '1' → logprob: -10.6004638671875
    4. '20' → logprob: -11.2254638671875
    5. '100' → logprob: -12.7254638671875
    6. '12' → logprob: -13.1004638671875
    7. '15' → logprob: -13.1004638671875
    8. '50' → logprob: -13.4754638671875
    9. '```' → logprob: -13.6004638671875
    10. '5' → logprob: -14.2254638671875

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.392202976712724e-06
    2. ' ,' → logprob: -13.000006675720215
    3. ',
' → logprob: -13.250006675720215
    4. ',

' → logprob: -13.875006675720215
    5. ')' → logprob: -14.875006675720215
    6. ',,' → logprob: -15.875006675720215
    7. '`,' → logprob: -16.0000057220459
    8. '0' → logprob: -16.1250057220459
    9. '50' → logprob: -16.6250057220459
    10. ',)' → logprob: -16.7500057220459

Token 12: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.030360102653503418
    2. ' ' → logprob: -3.530360221862793
    3. '1' → logprob: -7.405360221862793
    4. '2' → logprob: -14.655360221862793
    5. '0' → logprob: -14.905360221862793
    6. '4' → logprob: -15.780360221862793
    7. '25' → logprob: -15.905360221862793
    8. '```' → logprob: -15.905360221862793
    9. '05' → logprob: -16.280359268188477
    10. ']' → logprob: -16.655359268188477

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7120533811976202e-05
    2. ']' → logprob: -12.125017166137695
    3. ' ,' → logprob: -12.125017166137695
    4. ')' → logprob: -13.500017166137695
    5. '0' → logprob: -13.625017166137695
    6. ',,' → logprob: -14.125017166137695
    7. ',
' → logprob: -14.375017166137695
    8. ',)' → logprob: -14.500017166137695
    9. ',

' → logprob: -15.000017166137695
    10. '25' → logprob: -15.125017166137695

Token 14: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001706247916445136
    2. ' ' → logprob: -6.376706123352051
    3. '2' → logprob: -12.50170612335205
    4. '```' → logprob: -15.75170612335205
    5. ']' → logprob: -16.501707077026367
    6. '１' → logprob: -17.814207077026367
    7. '   ' → logprob: -18.064207077026367
    8. '۱' → logprob: -18.376707077026367
    9. '  ' → logprob: -18.439207077026367
    10. '_' → logprob: -19.001707077026367

Token 15: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.047134305234067e-05
    2. ')' → logprob: -10.625030517578125
    3. '])' → logprob: -12.750030517578125
    4. '']' → logprob: -13.750030517578125
    5. ')]' → logprob: -13.750030517578125
    6. '`]' → logprob: -15.125030517578125
    7. '```' → logprob: -15.375030517578125
    8. ' ]' → logprob: -15.625030517578125
    9. ']
' → logprob: -16.000030517578125
    10. ',' → logprob: -16.125030517578125

Token 16: 'sum' (ID: 12298)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5654222965240479
    2. 'result' → logprob: -1.3154222965240479
    3. 'total' → logprob: -2.690422296524048
    4. 'res' → logprob: -3.190422296524048
    5. 'for' → logprob: -4.440422058105469
    6. 'answer' → logprob: -4.440422058105469
    7. 'coins' → logprob: -4.565422058105469
    8. 'c' → logprob: -4.565422058105469
    9. 'ans' → logprob: -5.940422058105469
    10. 'change' → logprob: -5.940422058105469

Token 17: '_s' (ID: 1278)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08874881267547607
    2. 's' → logprob: -2.8387489318847656
    3. '(' → logprob: -3.9637489318847656
    4. '_s' → logprob: -6.588748931884766
    5. '_co' → logprob: -6.713748931884766
    6. '(s' → logprob: -7.213748931884766
    7. '_val' → logprob: -7.588748931884766
    8. '=' → logprob: -7.838748931884766
    9. '_sum' → logprob: -7.838748931884766
    10. '_coin' → logprob: -7.963748931884766

Token 18: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18383601307868958
    2. ' =' → logprob: -1.9338359832763672
    3. ' ' → logprob: -4.183835983276367
    4. '_' → logprob: -5.058835983276367
    5. ' +=' → logprob: -7.183835983276367
    6. '+=' → logprob: -7.558835983276367
    7. 'um' → logprob: -9.308835983276367
    8. 'a' → logprob: -9.433835983276367
    9. 'm' → logprob: -9.433835983276367
    10. '+' → logprob: -9.933835983276367

Token 19: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4740799069404602
    2. ' ' → logprob: -0.9740799069404602
    3. ' ' → logprob: -13.474080085754395
    4. ' n' → logprob: -14.974080085754395
    5. 'n' → logprob: -15.349080085754395
    6. 'sum' → logprob: -15.599080085754395
    7. ' sum' → logprob: -16.099079132080078
    8. 's' → logprob: -16.349079132080078
    9. ''' → logprob: -16.849079132080078
    10. '`' → logprob: -16.911579132080078

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009645807440392673
    2. ' ' → logprob: -7.000964641571045
    3. 'n' → logprob: -10.125964164733887
    4. ' n' → logprob: -12.000964164733887
    5. 'sum' → logprob: -12.125964164733887
    6. ' sum' → logprob: -15.250964164733887
    7. 's' → logprob: -15.500964164733887
    8. '`' → logprob: -15.625964164733887
    9. 'coin' → logprob: -16.063465118408203
    10. '[' → logprob: -16.375965118408203

Token 21: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.027560178190469742
    2. '
' → logprob: -3.902560234069824
    3. ' for' → logprob: -5.027560234069824
    4. '<|end|>' → logprob: -8.152560234069824
    5. '\n' → logprob: -9.902560234069824
    6. '
' → logprob: -10.652560234069824
    7. '```' → logprob: -11.027560234069824
    8. '' → logprob: -11.152560234069824
    9. ',' → logprob: -11.527560234069824
    10. '  
' → logprob: -12.402560234069824

Token 22: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.983476436696947e-05
    2. ' for' → logprob: -10.000089645385742
    3. '
' → logprob: -10.625089645385742
    4. '```' → logprob: -10.875089645385742
    5. '``' → logprob: -14.875089645385742
    6. '\n' → logprob: -15.375089645385742
    7. '`' → logprob: -15.750089645385742
    8. '	for' → logprob: -17.000089645385742
    9. ':' → logprob: -17.125089645385742
    10. '\' → logprob: -17.250089645385742

Token 23: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08938641101121902
    2. ' i' → logprob: -2.464386463165283
    3. '  ' → logprob: -8.089385986328125
    4. ' n' → logprob: -9.464385986328125
    5. ' ‌' → logprob: -11.214385986328125
    6. 'i' → logprob: -11.339385986328125
    7. ' coin' → logprob: -11.589385986328125
    8. ' s' → logprob: -11.964385986328125
    9. ' _' → logprob: -12.589385986328125
    10. ' c' → logprob: -12.589385986328125

Token 24: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05337829142808914
    2. ' ' → logprob: -3.0533783435821533
    3. 'in' → logprob: -6.178378105163574
    4. ' n' → logprob: -6.428378105163574
    5. '  ' → logprob: -7.303378105163574
    6. 'n' → logprob: -8.178378105163574
    7. ',' → logprob: -9.803378105163574
    8. ' i' → logprob: -10.428378105163574
    9. ' ,' → logprob: -11.053378105163574
    10. '   ' → logprob: -11.678378105163574

Token 25: ' coin' (ID: 22179)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7112170457839966
    2. ' coin' → logprob: -0.7112170457839966
    3. 'range' → logprob: -4.461216926574707
    4. 'coin' → logprob: -5.086216926574707
    5. ' n' → logprob: -9.336216926574707
    6. ' ' → logprob: -9.836216926574707
    7. ' coins' → logprob: -11.836216926574707
    8. 'n' → logprob: -11.836216926574707
    9. ' xrange' → logprob: -12.086216926574707
    10. '(range' → logprob: -12.961216926574707

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010605128481984138
    2. ' in' → logprob: -5.260605335235596
    3. ' :' → logprob: -5.885605335235596
    4. 'in' → logprob: -7.385605335235596
    5. 's' → logprob: -7.635605335235596
    6. '):' → logprob: -8.010604858398438
    7. '<|end|>' → logprob: -8.385604858398438
    8. ':
' → logprob: -9.010604858398438
    9. ',' → logprob: -9.260604858398438
    10. ')' → logprob: -9.260604858398438

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08591792732477188
    2. '    ' → logprob: -3.3359179496765137
    3. ' ' → logprob: -3.9609179496765137
    4. ' if' → logprob: -4.460917949676514
    5. '    
' → logprob: -4.960917949676514
    6. '<|end|>' → logprob: -6.210917949676514
    7. ' sum' → logprob: -6.335917949676514
    8. ' 
' → logprob: -6.710917949676514
    9. '     
' → logprob: -6.960917949676514
    10. ' n' → logprob: -7.460917949676514

Token 28: ' sent' (ID: 3860)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8024844527244568
    2. ' sum' → logprob: -1.0524845123291016
    3. 'sum' → logprob: -2.3024845123291016
    4. '    ' → logprob: -2.9274845123291016
    5. 'if' → logprob: -4.052484512329102
    6. '   ' → logprob: -4.802484512329102
    7. ' ' → logprob: -5.052484512329102
    8. ' s' → logprob: -5.552484512329102
    9. ' n' → logprob: -5.927484512329102
    10. ' count' → logprob: -6.302484512329102

Token 29: ' =' (ID: 314)
  Prédit: 'ences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ences' → logprob: -1.4107221364974976
    2. 'ries' → logprob: -1.4107221364974976
    3. 'ry' → logprob: -2.160722255706787
    4. 'ence' → logprob: -2.285722255706787
    5. 's' → logprob: -3.035722255706787
    6. ' =' → logprob: -3.285722255706787
    7. 't' → logprob: -3.535722255706787
    8. 'sum' → logprob: -3.660722255706787
    9. 'ense' → logprob: -3.785722255706787
    10. 'ance' → logprob: -4.160722255706787

Token 30: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.09815015643835068
    2. 'n' → logprob: -3.5981502532958984
    3. ' sum' → logprob: -3.7231502532958984
    4. ' ' → logprob: -3.8481502532958984
    5. '0' → logprob: -4.848150253295898
    6. 'sum' → logprob: -5.723150253295898
    7. ' (' → logprob: -6.348150253295898
    8. ' i' → logprob: -6.848150253295898
    9. ' s' → logprob: -6.973150253295898
    10. '"' → logprob: -6.973150253295898

Token 31: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.00926569290459156
    2. '//' → logprob: -4.884265899658203
    3. ' ' → logprob: -6.634265899658203
    4. 'div' → logprob: -8.509265899658203
    5. '   ' → logprob: -10.509265899658203
    6. ' //
' → logprob: -10.759265899658203
    7. 'i' → logprob: -11.259265899658203
    8. ' i' → logprob: -11.509265899658203
    9. '  ' → logprob: -11.509265899658203
    10. ' div' → logprob: -11.884265899658203

Token 32: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10022209584712982
    2. ' i' → logprob: -2.350222110748291
    3. ' ' → logprob: -11.225221633911133
    4. '  ' → logprob: -13.975221633911133
    5. '   ' → logprob: -14.100221633911133
    6. '	i' → logprob: -14.850221633911133
    7. '    ' → logprob: -17.600221633911133
    8. '%i' → logprob: -17.850221633911133
    9. '25' → logprob: -17.975221633911133
    10. '```' → logprob: -18.100221633911133

Token 33: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1843491792678833
    2. '    ' → logprob: -2.9343490600585938
    3. 'sum' → logprob: -2.9343490600585938
    4. '
' → logprob: -4.184349060058594
    5. ' sum' → logprob: -4.309349060058594
    6. '\n' → logprob: -4.934349060058594
    7. 'n' → logprob: -5.059349060058594
    8. ' ' → logprob: -5.559349060058594
    9. '    
' → logprob: -5.559349060058594
    10. '<|end|>' → logprob: -5.559349060058594

Token 35: ' n' (ID: 297)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.20817524194717407
    2. ' sum' → logprob: -1.7081751823425293
    3. 'n' (adapté à ' n') → logprob: -5.208175182342529
    4. ' n' → logprob: -6.708175182342529
    5. '   ' → logprob: -10.958175659179688
    6. 's' → logprob: -11.083175659179688
    7. ' ' → logprob: -12.083175659179688
    8. '	sum' → logprob: -13.333175659179688
    9. '    ' → logprob: -13.583175659179688
    10. 'print' → logprob: -14.583175659179688

Token 36: ' %=' (ID: 117035)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4997749626636505
    2. ' -=' → logprob: -1.1247749328613281
    3. ' %=' → logprob: -3.124774932861328
    4. '=' → logprob: -3.749774932861328
    5. '-=' → logprob: -7.249774932861328
    6. '%=' → logprob: -8.249774932861328
    7. ' ' → logprob: -9.624774932861328
    8. ' +=' → logprob: -10.374774932861328
    9. '%' → logprob: -10.499774932861328
    10. ' *=' → logprob: -11.624774932861328

Token 37: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005234475247561932
    2. ' i' → logprob: -5.255234241485596
    3. '   ' → logprob: -15.130234718322754
    4. ' ' → logprob: -15.380234718322754
    5. '	i' → logprob: -15.630234718322754
    6. '  ' → logprob: -16.755233764648438
    7. '```' → logprob: -18.380233764648438
    8. '*i' → logprob: -18.630233764648438
    9. '_i' → logprob: -19.880233764648438
    10. '`' → logprob: -19.880233764648438

Token 38: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06302696466445923
    2. '   ' → logprob: -3.1880269050598145
    3. 'sum' → logprob: -4.6880269050598145
    4. '<|end|>' → logprob: -5.0630269050598145
    5. ' sum' → logprob: -6.6880269050598145
    6. ' 
' → logprob: -7.3130269050598145
    7. '\n' → logprob: -7.4380269050598145
    8. '    
' → logprob: -7.6880269050598145
    9. '
' → logprob: -8.313027381896973
    10. '```' → logprob: -8.563027381896973

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21509969234466553
    2. '
' → logprob: -2.840099811553955
    3. 'sum' → logprob: -3.090099811553955
    4. '+' → logprob: -4.090099811553955
    5. '<|end|>' → logprob: -4.090099811553955
    6. ' ' → logprob: -4.215099811553955
    7. '```' → logprob: -4.465099811553955
    8. '\n' → logprob: -4.965099811553955
    9. ' sum' → logprob: -5.465099811553955
    10. '  ' → logprob: -5.715099811553955

Token 40: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' (adapté à ' sum') → logprob: -0.008744694292545319
    2. ' sum' → logprob: -4.758744716644287
    3. '   ' → logprob: -9.133744239807129
    4. '
' → logprob: -11.633744239807129
    5. '    
' → logprob: -13.008744239807129
    6. 'sent' → logprob: -13.133744239807129
    7. ' ' → logprob: -13.133744239807129
    8. '\n' → logprob: -13.758744239807129
    9. '```' → logprob: -13.758744239807129
    10. '	sum' → logprob: -13.883744239807129

Token 41: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0019450569525361061
    2. '_' → logprob: -6.2519450187683105
    3. '+' → logprob: -11.501945495605469
    4. ' +=' → logprob: -13.126945495605469
    5. '+=' → logprob: -13.501945495605469
    6. 's' → logprob: -13.626945495605469
    7. ' _' → logprob: -13.751945495605469
    8. '_sent' → logprob: -16.50194549560547
    9. ' +' → logprob: -16.62694549560547
    10. '_tokens' → logprob: -17.00194549560547

Token 42: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.025693871080875397
    2. ' +=' → logprob: -3.775693893432617
    3. '+' → logprob: -6.025693893432617
    4. '=' → logprob: -10.775693893432617
    5. '+='' → logprob: -12.775693893432617
    6. '+="' → logprob: -13.400693893432617
    7. ']+=' → logprob: -13.400693893432617
    8. '+=(' → logprob: -13.525693893432617
    9. '++' → logprob: -14.650693893432617
    10. '+++' → logprob: -14.900693893432617

Token 43: ' sent' (ID: 3860)
  Prédit: 'sent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sent' → logprob: -0.31328386068344116
    2. ' sent' → logprob: -1.313283920288086
    3. ' ' → logprob: -11.313283920288086
    4. '(sent' → logprob: -12.563283920288086
    5. 'sen' → logprob: -13.813283920288086
    6. ' s' → logprob: -13.938283920288086
    7. 's' → logprob: -14.438283920288086
    8. 'send' → logprob: -14.688283920288086
    9. '   ' → logprob: -15.063283920288086
    10. ' i' → logprob: -15.063283920288086

Token 44: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06755615770816803
    2. '
' → logprob: -3.317556142807007
    3. '+' → logprob: -4.192556381225586
    4. '<|end|>' → logprob: -5.067556381225586
    5. '\n' → logprob: -6.192556381225586
    6. ' print' → logprob: -6.317556381225586
    7. ' ' → logprob: -7.442556381225586
    8. '   ' → logprob: -7.442556381225586
    9. '    
' → logprob: -7.692556381225586
    10. '+
' → logprob: -8.067556381225586

Token 45: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00036144492332823575
    2. ' print' → logprob: -8.625361442565918
    3. '<|end|>' → logprob: -9.875361442565918
    4. '
' → logprob: -10.375361442565918
    5. '\n' → logprob: -10.375361442565918
    6. ')' → logprob: -10.500361442565918
    7. '```' → logprob: -11.375361442565918
    8. '#print' → logprob: -11.875361442565918
    9. '#' → logprob: -12.000361442565918
    10. ' ' → logprob: -12.125361442565918

Token 46: '(sum' (ID: 45528)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.252107173204422
    2. '(sum' → logprob: -1.5021071434020996
    3. '()' → logprob: -9.377107620239258
    4. '('' → logprob: -10.002107620239258
    5. '(s' → logprob: -10.627107620239258
    6. 'sum' → logprob: -11.627107620239258
    7. '("("' → logprob: -12.502107620239258
    8. ' (' → logprob: -12.752107620239258
    9. '(`' → logprob: -12.877107620239258
    10. '(len' → logprob: -13.377107620239258

Token 47: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.4617256056226324e-05
    2. ')' → logprob: -11.625014305114746
    3. ')_' → logprob: -12.375014305114746
    4. 's' → logprob: -13.750014305114746
    5. '_)' → logprob: -15.000014305114746
    6. '_' → logprob: -16.875015258789062
    7. '```' → logprob: -18.000015258789062
    8. ' _' → logprob: -18.500015258789062
    9. '_sn' → logprob: -18.875015258789062
    10. '_t' → logprob: -18.875015258789062

Token 48: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. '))' → logprob: -14.125001907348633
    3. ' )' → logprob: -14.750001907348633
    4. ')`' → logprob: -15.125001907348633
    5. '`)' → logprob: -15.500001907348633
    6. '')' → logprob: -16.250001907348633
    7. ')
' → logprob: -16.750001907348633
    8. '）' → logprob: -18.000001907348633
    9. '#' → logprob: -18.125001907348633
    10. '()' → logprob: -18.250001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 46
Tokens correctement prédits (1ère position, stricte): 19
Tokens correctement prédits (1ère position, avec adaptation): 20
Tokens correctement prédits (top 10): 41
Précision stricte (1ère position): 41.30%
Précision adaptée (1ère position): 43.48%
Précision (top 10): 89.13%
================================================================================
