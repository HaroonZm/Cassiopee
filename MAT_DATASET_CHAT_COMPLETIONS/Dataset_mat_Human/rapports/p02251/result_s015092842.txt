================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
ans = 0
for x in (25, 10, 5, 1):
  ans += n // x
  n %= x
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00042768914136104286
    2. ''' → logprob: -8.62542724609375
    3. '('' → logprob: -9.37542724609375
    4. '(n' → logprob: -9.87542724609375
    5. '```' → logprob: -10.37542724609375
    6. '`' → logprob: -10.75042724609375
    7. '("("' → logprob: -11.12542724609375
    8. '(
' → logprob: -11.12542724609375
    9. ')' → logprob: -11.75042724609375
    10. '()' → logprob: -12.25042724609375

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11869344860315323
    2. ')' → logprob: -2.2436933517456055
    3. '()' → logprob: -5.3686933517456055
    4. '())' → logprob: -7.4936933517456055
    5. '(
' → logprob: -8.243693351745605
    6. '```' → logprob: -9.993693351745605
    7. '(

' → logprob: -10.368693351745605
    8. '('' → logprob: -10.493693351745605
    9. ''' → logprob: -10.618693351745605
    10. '(n' → logprob: -10.868693351745605

Token 5: 'ans' (ID: 616)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7040315866470337
    2. 'if' → logprob: -1.4540315866470337
    3. 'for' → logprob: -2.329031467437744
    4. 's' → logprob: -2.454031467437744
    5. 'f' → logprob: -4.329031467437744
    6. ' ' → logprob: -4.454031467437744
    7. 'x' → logprob: -4.829031467437744
    8. ')' → logprob: -4.954031467437744
    9. 'a' → logprob: -4.954031467437744
    10. ''' → logprob: -5.079031467437744

Token 6: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2358773797750473
    2. ' =' → logprob: -1.9858773946762085
    3. '+' → logprob: -3.610877275466919
    4. ' +=' → logprob: -3.860877275466919
    5. '+=' → logprob: -4.360877513885498
    6. '[' → logprob: -5.235877513885498
    7. '_' → logprob: -5.485877513885498
    8. ' ' → logprob: -6.985877513885498
    9. '.' → logprob: -7.860877513885498
    10. '*' → logprob: -8.11087703704834

Token 7: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38180696964263916
    2. ' ' → logprob: -1.3818069696426392
    3. ' n' → logprob: -3.5068068504333496
    4. '"' → logprob: -4.25680685043335
    5. 'n' → logprob: -4.38180685043335
    6. ''' → logprob: -5.25680685043335
    7. ' []' → logprob: -6.63180685043335
    8. ' "' → logprob: -7.00680685043335
    9. '1' → logprob: -7.00680685043335
    10. ' '' → logprob: -7.38180685043335

Token 8: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.045137256383895874
    2. 'n' → logprob: -3.2951371669769287
    3. '"' → logprob: -5.420137405395508
    4. '1' → logprob: -7.170137405395508
    5. ''' → logprob: -7.670137405395508
    6. 'max' → logprob: -7.795137405395508
    7. ''n' → logprob: -8.420137405395508
    8. 'sum' → logprob: -8.670137405395508
    9. '[]' → logprob: -9.295137405395508
    10. 'float' → logprob: -9.420137405395508

Token 9: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7859959602355957
    2. '
' → logprob: -1.2859959602355957
    3. '\n' → logprob: -1.5359959602355957
    4. '\' → logprob: -3.7859959602355957
    5. '```' → logprob: -4.285995960235596
    6. ' for' → logprob: -5.285995960235596
    7. ' 
' → logprob: -5.910995960235596
    8. '``' → logprob: -5.910995960235596
    9. '' → logprob: -5.910995960235596
    10. '`' → logprob: -7.035995960235596

Token 10: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04782932251691818
    2. '
' → logprob: -3.4228293895721436
    3. '\n' → logprob: -5.1728291511535645
    4. '```' → logprob: -5.2978291511535645
    5. ' for' → logprob: -5.9228291511535645
    6. '\' → logprob: -8.797829627990723
    7. ' 
' → logprob: -9.172829627990723
    8. '``' → logprob: -9.172829627990723
    9. '`' → logprob: -9.297829627990723
    10. '' → logprob: -9.297829627990723

Token 11: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03162447363138199
    2. ' i' → logprob: -3.6566245555877686
    3. '  ' → logprob: -5.5316243171691895
    4. ' n' → logprob: -6.6566243171691895
    5. 'i' → logprob: -10.281624794006348
    6. ' ' → logprob: -11.906624794006348
    7. ' ‌' → logprob: -12.406624794006348
    8. '```' → logprob: -13.031624794006348
    9. '_' → logprob: -13.156624794006348
    10. '"' → logprob: -13.281624794006348

Token 12: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.037759944796562195
    2. 'in' → logprob: -3.412760019302368
    3. ' ' → logprob: -5.787759780883789
    4. '[' → logprob: -8.412759780883789
    5. '  ' → logprob: -8.412759780883789
    6. '<|end|>' → logprob: -9.037759780883789
    7. 'space' → logprob: -9.412759780883789
    8. '_' → logprob: -9.787759780883789
    9. ')' → logprob: -10.287759780883789
    10. ',' → logprob: -10.412759780883789

Token 13: ' (' (ID: 350)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.038111720234155655
    2. 'range' → logprob: -3.288111686706543
    3. ' ' → logprob: -10.163111686706543
    4. ' n' → logprob: -11.788111686706543
    5. '	range' → logprob: -11.788111686706543
    6. ' xrange' → logprob: -12.163111686706543
    7. ')' → logprob: -13.163111686706543
    8. '(range' → logprob: -13.163111686706543
    9. ' ra' → logprob: -13.538111686706543
    10. ' in' → logprob: -13.538111686706543

Token 14: '25' (ID: 1161)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.055135130882263184
    2. ' range' → logprob: -2.9301352500915527
    3. ')' → logprob: -9.305134773254395
    4. 'n' → logprob: -10.055134773254395
    5. 'i' → logprob: -11.180134773254395
    6. 'map' → logprob: -11.305134773254395
    7. 'input' → logprob: -11.305134773254395
    8. 'x' → logprob: -11.680134773254395
    9. '(range' → logprob: -11.805134773254395
    10. ' ' → logprob: -11.805134773254395

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.047928184270858765
    2. '**' → logprob: -3.6729280948638916
    3. ' ,' → logprob: -4.422928333282471
    4. ',)' → logprob: -5.422928333282471
    5. ' ' → logprob: -6.547928333282471
    6. ')' → logprob: -7.422928333282471
    7. ' **' → logprob: -7.547928333282471
    8. '*' → logprob: -8.047927856445312
    9. '1' → logprob: -8.172927856445312
    10. '**,' → logprob: -8.422927856445312

Token 16: ' ' (ID: 220)
  Prédit: '50'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.2888832986354828
    2. ' ' → logprob: -1.4138833284378052
    3. '100' → logprob: -5.288883209228516
    4. '30' → logprob: -6.788883209228516
    5. ')' → logprob: -7.538883209228516
    6. '125' → logprob: -8.538883209228516
    7. '49' → logprob: -8.788883209228516
    8. '5' → logprob: -8.913883209228516
    9. '500' → logprob: -9.413883209228516
    10. '26' → logprob: -9.663883209228516

Token 17: '10' (ID: 702)
  Prédit: '50'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.24147576093673706
    2. '100' → logprob: -1.9914758205413818
    3. ' ' → logprob: -2.616475820541382
    4. ')' → logprob: -6.241475582122803
    5. '5' → logprob: -6.866475582122803
    6. '125' → logprob: -6.866475582122803
    7. '   ' → logprob: -8.616476058959961
    8. '49' → logprob: -8.741476058959961
    9. '30' → logprob: -9.116476058959961
    10. '10' → logprob: -9.366476058959961

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017356324242427945
    2. ')' → logprob: -7.126735687255859
    3. '):' → logprob: -7.126735687255859
    4. ' ,' → logprob: -9.62673568725586
    5. '),' → logprob: -9.87673568725586
    6. ' ' → logprob: -13.00173568725586
    7. '```' → logprob: -13.50173568725586
    8. ',
' → logprob: -14.00173568725586
    9. '   ' → logprob: -14.37673568725586
    10. '25' → logprob: -14.62673568725586

Token 19: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08906836062669754
    2. '5' → logprob: -2.4640684127807617
    3. ')' → logprob: -10.089068412780762
    4. '1' → logprob: -10.464068412780762
    5. ' )' → logprob: -11.089068412780762
    6. ',' → logprob: -11.214068412780762
    7. ' ,' → logprob: -11.589068412780762
    8. '2' → logprob: -12.339068412780762
    9. ' ' → logprob: -12.714068412780762
    10. ' ),' → logprob: -12.714068412780762

Token 20: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.2817765772342682
    2. ' ' → logprob: -1.4067765474319458
    3. '1' → logprob: -7.406776428222656
    4. ')' → logprob: -11.156776428222656
    5. ',' → logprob: -13.406776428222656
    6. ' )' → logprob: -13.906776428222656
    7. '25' → logprob: -14.906776428222656
    8. '2' → logprob: -15.031776428222656
    9. '),' → logprob: -15.156776428222656
    10. '```' → logprob: -15.531776428222656

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.043904196470975876
    2. '):' → logprob: -3.1689043045043945
    3. ')' → logprob: -7.1689043045043945
    4. '),' → logprob: -9.918904304504395
    5. ' ,' → logprob: -9.918904304504395
    6. ' ):' → logprob: -10.543904304504395
    7. ' ' → logprob: -13.543904304504395
    8. '```' → logprob: -13.918904304504395
    9. ')):' → logprob: -14.168904304504395
    10. ':' → logprob: -14.543904304504395

Token 22: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2020368129014969
    2. '1' → logprob: -1.7020368576049805
    3. '2' → logprob: -7.5770368576049805
    4. ')' → logprob: -9.32703685760498
    5. ' )' → logprob: -11.32703685760498
    6. '```' → logprob: -12.82703685760498
    7. ',' → logprob: -13.20203685760498
    8. ' ' → logprob: -13.70203685760498
    9. '),' → logprob: -14.57703685760498
    10. '20' → logprob: -14.70203685760498

Token 23: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03807603940367699
    2. ' ' → logprob: -3.2880759239196777
    3. '2' → logprob: -10.413076400756836
    4. ')' → logprob: -12.663076400756836
    5. ' )' → logprob: -14.538076400756836
    6. '```' → logprob: -15.288076400756836
    7. '):
' → logprob: -16.725576400756836
    8. '):

' → logprob: -16.788076400756836
    9. '0' → logprob: -16.913076400756836
    10. '۱' → logprob: -16.913076400756836

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007639397867023945
    2. ')' → logprob: -4.882639408111572
    3. ':' → logprob: -10.507638931274414
    4. ',' → logprob: -12.757638931274414
    5. '):
' → logprob: -13.257638931274414
    6. ' ):' → logprob: -14.007638931274414
    7. ''):' → logprob: -15.882638931274414
    8. '),' → logprob: -16.257638931274414
    9. ')：' → logprob: -16.632638931274414
    10. '}:' → logprob: -17.007638931274414

Token 25: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037045928183943033
    2. ' ' → logprob: -5.87870454788208
    3. '    ' → logprob: -7.87870454788208
    4. '    
' → logprob: -8.503705024719238
    5. '  ' → logprob: -8.628705024719238
    6. ' 
' → logprob: -10.878705024719238
    7. '```' → logprob: -10.878705024719238
    8. '       ' → logprob: -11.003705024719238
    9. '  
' → logprob: -11.753705024719238
    10. ' n' → logprob: -11.753705024719238

Token 26: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22042842209339142
    2. ' if' → logprob: -2.595428466796875
    3. ' ' → logprob: -2.720428466796875
    4. 'if' → logprob: -3.470428466796875
    5. 'ans' → logprob: -4.845428466796875
    6. ' ans' → logprob: -5.095428466796875
    7. '    ' → logprob: -5.595428466796875
    8. '  ' → logprob: -5.720428466796875
    9. ' n' → logprob: -6.595428466796875
    10. ' while' → logprob: -6.720428466796875

Token 27: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.020930245518684387
    2. '+=' → logprob: -3.895930290222168
    3. ' ' → logprob: -8.270930290222168
    4. '+' → logprob: -9.270930290222168
    5. ']+=' → logprob: -11.395930290222168
    6. '=' → logprob: -12.145930290222168
    7. ' -=' → logprob: -12.270930290222168
    8. '+='' → logprob: -12.270930290222168
    9. '+=(' → logprob: -12.395930290222168
    10. ' +' → logprob: -12.895930290222168

Token 28: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.10025358200073242
    2. 'n' → logprob: -2.3502535820007324
    3. ' (' → logprob: -10.85025405883789
    4. ' ' → logprob: -10.85025405883789
    5. '(n' → logprob: -12.10025405883789
    6. ' ' → logprob: -13.47525405883789
    7. '(' → logprob: -14.85025405883789
    8. '	n' → logprob: -14.85025405883789
    9. '   ' → logprob: -15.97525405883789
    10. '```' → logprob: -16.72525405883789

Token 29: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.016807615756988525
    2. '//' → logprob: -4.141807556152344
    3. ' ' → logprob: -7.391807556152344
    4. ' //
' → logprob: -10.141807556152344
    5. ' ' → logprob: -10.266807556152344
    6. ' x' → logprob: -10.391807556152344
    7. 'x' → logprob: -10.891807556152344
    8. ' /' → logprob: -11.141807556152344
    9. '`' → logprob: -12.391807556152344
    10. ' `' → logprob: -13.141807556152344

Token 30: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005233763717114925
    2. ' x' → logprob: -5.2552337646484375
    3. ' ' → logprob: -16.880233764648438
    4. '	x' → logprob: -19.005233764648438
    5. '%x' → logprob: -20.505233764648438
    6. '(x' → logprob: -20.630233764648438
    7. '25' → logprob: -20.630233764648438
    8. ')x' → logprob: -21.380233764648438
    9. '{x' → logprob: -21.505233764648438
    10. '"x' → logprob: -21.880233764648438

Token 31: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16680631041526794
    2. '\n' → logprob: -2.041806221008301
    3. '(n' → logprob: -4.791806221008301
    4. '  
' → logprob: -5.666806221008301
    5. ' n' → logprob: -6.041806221008301
    6. '"\' → logprob: -6.416806221008301
    7. ' ' → logprob: -6.666806221008301
    8. ''\' → logprob: -6.666806221008301
    9. '
' → logprob: -6.791806221008301
    10. '*n' → logprob: -7.291806221008301

Token 32: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.060035768896341324
    2. ' ' → logprob: -3.3100357055664062
    3. '\n' → logprob: -3.9350357055664062
    4. '  
' → logprob: -6.935035705566406
    5. '"\' → logprob: -7.935035705566406
    6. ' n' → logprob: -8.060035705566406
    7. '\' → logprob: -9.060035705566406
    8. '```' → logprob: -9.310035705566406
    9. '`
' → logprob: -9.435035705566406
    10. ''\' → logprob: -9.560035705566406

Token 33: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005568128544837236
    2. ' n' → logprob: -5.505568027496338
    3. '\n' → logprob: -6.630568027496338
    4. ' ' → logprob: -9.005568504333496
    5. '\' → logprob: -11.255568504333496
    6. '"\' → logprob: -11.380568504333496
    7. '`
' → logprob: -12.005568504333496
    8. '`' → logprob: -12.380568504333496
    9. ''\' → logprob: -13.255568504333496
    10. '%n' → logprob: -13.380568504333496

Token 34: ' %=' (ID: 117035)
  Prédit: ' %='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.01160887535661459
    2. '%=' → logprob: -4.761609077453613
    3. ' =' → logprob: -6.636609077453613
    4. '=' → logprob: -6.761609077453613
    5. '%' → logprob: -7.886609077453613
    6. ' %' → logprob: -9.011609077453613
    7. ' -=' → logprob: -11.386609077453613
    8. ' ' → logprob: -11.511609077453613
    9. ')' → logprob: -14.136609077453613
    10. '```' → logprob: -14.761609077453613

Token 35: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.006715967319905758
    2. ' x' → logprob: -5.006715774536133
    3. ' ' → logprob: -14.381715774536133
    4. '25' → logprob: -19.256715774536133
    5. '	x' → logprob: -19.881715774536133
    6. '20' → logprob: -21.381715774536133
    7. '%x' → logprob: -21.881715774536133
    8. '(x' → logprob: -21.881715774536133
    9. ''x' → logprob: -22.006715774536133
    10. ')x' → logprob: -22.256715774536133

Token 36: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.49971693754196167
    2. '\n' → logprob: -1.4997169971466064
    3. '<|end|>' → logprob: -1.8747169971466064
    4. '```' → logprob: -5.374716758728027
    5. 'print' → logprob: -5.874716758728027
    6. ' ' → logprob: -6.124716758728027
    7. '  
' → logprob: -6.374716758728027
    8. '\' → logprob: -6.624716758728027
    9. '' → logprob: -6.999716758728027
    10. '#' → logprob: -7.124716758728027

Token 37: 'print' (ID: 1598)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.16145598888397217
    2. 'print' → logprob: -2.1614561080932617
    3. '\' → logprob: -4.536456108093262
    4. '<|end|>' → logprob: -4.786456108093262
    5. '#' → logprob: -5.286456108093262
    6. ' ' → logprob: -5.786456108093262
    7. '```' → logprob: -6.411456108093262
    8. '
' → logprob: -6.536456108093262
    9. '' → logprob: -7.286456108093262
    10. ')' → logprob: -7.411456108093262

Token 38: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.38697582483291626
    2. '(' → logprob: -1.1369757652282715
    3. '()' → logprob: -10.13697624206543
    4. 'ans' → logprob: -10.38697624206543
    5. '('' → logprob: -10.63697624206543
    6. '("("' → logprob: -12.76197624206543
    7. '(answer' → logprob: -13.63697624206543
    8. '("' → logprob: -13.63697624206543
    9. '(abs' → logprob: -14.26197624206543
    10. '(n' → logprob: -14.26197624206543

Token 39: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -14.875000953674316
    3. '))' → logprob: -15.625000953674316
    4. '')' → logprob: -17.25
    5. ')`' → logprob: -17.625
    6. '`)' → logprob: -17.75
    7. ')
' → logprob: -19.5
    8. '）' → logprob: -19.5
    9. '")' → logprob: -19.75
    10. '()' → logprob: -20.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 37
Tokens correctement prédits (1ère position, stricte): 17
Tokens correctement prédits (1ère position, avec adaptation): 17
Tokens correctement prédits (top 10): 31
Précision stricte (1ère position): 45.95%
Précision adaptée (1ère position): 45.95%
Précision (top 10): 83.78%
================================================================================
