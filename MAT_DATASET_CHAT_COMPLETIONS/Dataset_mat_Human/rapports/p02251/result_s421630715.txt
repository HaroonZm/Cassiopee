================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
target = int(input())
coins = [25, 10, 5, 1]
ans = 0
for c in coins:
    ans += target // c
    target %= c
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'target' (ID: 10857)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017584793968126178
    2. ''' → logprob: -6.876758575439453
    3. '32' → logprob: -8.501758575439453
    4. '('' → logprob: -8.626758575439453
    5. '(target' → logprob: -9.626758575439453
    6. '"' → logprob: -10.376758575439453
    7. '_' → logprob: -10.376758575439453
    8. '40' → logprob: -10.501758575439453
    9. '("("' → logprob: -10.626758575439453
    10. ' (' → logprob: -10.876758575439453

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6372763514518738
    2. ')' → logprob: -0.7622763514518738
    3. '()' → logprob: -6.0122761726379395
    4. '())' → logprob: -7.2622761726379395
    5. '(
' → logprob: -7.6372761726379395
    6. '<|end|>' → logprob: -8.387276649475098
    7. '(

' → logprob: -9.262276649475098
    8. '")' → logprob: -9.512276649475098
    9. '[' → logprob: -9.512276649475098
    10. '```' → logprob: -9.637276649475098

Token 5: 'coins' (ID: 48264)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.201525017619133
    2. '*' → logprob: -2.8265249729156494
    3. 'if' → logprob: -2.8265249729156494
    4. '%' → logprob: -3.2015249729156494
    5. ' if' → logprob: -5.3265252113342285
    6. '>' → logprob: -5.5765252113342285
    7. '#' → logprob: -6.0765252113342285
    8. 'i' → logprob: -6.2015252113342285
    9. '\n' → logprob: -6.2015252113342285
    10. '+
' → logprob: -6.5765252113342285

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5686400532722473
    2. ' =' → logprob: -1.0686399936676025
    3. '=' → logprob: -3.0686399936676025
    4. '_' → logprob: -4.693640232086182
    5. '[]' → logprob: -4.693640232086182
    6. '.' → logprob: -4.943640232086182
    7. ' ' → logprob: -5.818640232086182
    8. ')' → logprob: -5.943640232086182
    9. '=[]' → logprob: -6.068640232086182
    10. '_counts' → logprob: -6.193640232086182

Token 7: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.47774767875671387
    2. '[' → logprob: -0.9777476787567139
    3. ' []' → logprob: -6.227747917175293
    4. '[]' → logprob: -6.727747917175293
    5. '[int' → logprob: -7.727747917175293
    6. '[target' → logprob: -11.477747917175293
    7. '[max' → logprob: -11.477747917175293
    8. ' ' → logprob: -12.352747917175293
    9. '[input' → logprob: -12.727747917175293
    10. '[count' → logprob: -12.977747917175293

Token 8: '25' (ID: 1161)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009048464708030224
    2. ' ' → logprob: -6.1340484619140625
    3. '0' → logprob: -6.3840484619140625
    4. ')' → logprob: -6.3840484619140625
    5. ']' → logprob: -6.8840484619140625
    6. '50' → logprob: -7.3840484619140625
    7. '100' → logprob: -7.3840484619140625
    8. '10' → logprob: -7.6340484619140625
    9. '25' → logprob: -8.259048461914062
    10. '5' → logprob: -8.884048461914062

Token 9: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.143808109802194e-05
    2. ' ,' → logprob: -10.125041007995605
    3. '36' → logprob: -15.250041007995605
    4. ',
' → logprob: -15.375041007995605
    5. '44' → logprob: -16.125041961669922
    6. ',

' → logprob: -16.250041961669922
    7. '40' → logprob: -16.250041961669922
    8. '‌,' → logprob: -16.625041961669922
    9. ',,' → logprob: -16.750041961669922
    10. '```' → logprob: -16.750041961669922

Token 10: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00841185450553894
    2. '10' → logprob: -4.883411884307861
    3. '20' → logprob: -7.133411884307861
    4. '50' → logprob: -13.133411407470703
    5. '1' → logprob: -13.383411407470703
    6. '100' → logprob: -14.008411407470703
    7. ' ' → logprob: -14.133411407470703
    8. '15' → logprob: -14.508411407470703
    9. '    ' → logprob: -15.133411407470703
    10. '```' → logprob: -15.133411407470703

Token 11: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.000496436667162925
    2. ' ' → logprob: -7.6254963874816895
    3. '20' → logprob: -12.375496864318848
    4. '```' → logprob: -13.500496864318848
    5. '100' → logprob: -14.000496864318848
    6. '15' → logprob: -14.250496864318848
    7. '1' → logprob: -14.500496864318848
    8. '12' → logprob: -15.125496864318848
    9. '50' → logprob: -15.875496864318848
    10. '25' → logprob: -16.37549591064453

Token 12: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.306760805164231e-05
    2. ' ,' → logprob: -12.62501335144043
    3. '`,' → logprob: -12.75001335144043
    4. ',
' → logprob: -13.00001335144043
    5. ')' → logprob: -13.50001335144043
    6. ',

' → logprob: -13.75001335144043
    7. ',,' → logprob: -14.87501335144043
    8. '44' → logprob: -15.00001335144043
    9. '',' → logprob: -15.62501335144043
    10. ',)' → logprob: -15.62501335144043

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6336344480514526
    2. '5' → logprob: -0.7586344480514526
    3. '1' → logprob: -6.883634567260742
    4. '```' → logprob: -12.258634567260742
    5. ' ' → logprob: -13.383634567260742
    6. '25' → logprob: -14.133634567260742
    7. '0' → logprob: -14.383634567260742
    8. '2' → logprob: -14.633634567260742
    9. ',' → logprob: -14.883634567260742
    10. '4' → logprob: -15.133634567260742

Token 14: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.007244425360113382
    2. ' ' → logprob: -5.50724458694458
    3. '1' → logprob: -5.75724458694458
    4. '```' → logprob: -14.882244110107422
    5. '25' → logprob: -15.382244110107422
    6. '   ' → logprob: -15.757244110107422
    7. '2' → logprob: -16.382244110107422
    8. '  ' → logprob: -16.382244110107422
    9. '05' → logprob: -16.757244110107422
    10. '0' → logprob: -16.882244110107422

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9266199160483666e-05
    2. ']' → logprob: -11.250019073486328
    3. ')' → logprob: -12.875019073486328
    4. ' ,' → logprob: -13.375019073486328
    5. ',
' → logprob: -14.625019073486328
    6. ')]' → logprob: -15.250019073486328
    7. '`,' → logprob: -15.375019073486328
    8. ',

' → logprob: -15.375019073486328
    9. '```' → logprob: -15.875019073486328
    10. '])' → logprob: -16.250019073486328

Token 16: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6931635141372681
    2. ' ' → logprob: -0.6931635141372681
    3. '2' → logprob: -11.568163871765137
    4. '```' → logprob: -12.693163871765137
    5. ' ' → logprob: -13.380663871765137
    6. ',' → logprob: -15.130663871765137
    7. '`' → logprob: -15.193163871765137
    8. '0' → logprob: -15.630663871765137
    9. ']' → logprob: -15.755663871765137
    10. '_' → logprob: -16.00566291809082

Token 17: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002624086628202349
    2. ' ' → logprob: -8.250262260437012
    3. '2' → logprob: -14.125262260437012
    4. '```' → logprob: -15.125262260437012
    5. '   ' → logprob: -17.750263214111328
    6. '۱' → logprob: -18.062763214111328
    7. '１' → logprob: -18.437763214111328
    8. '  ' → logprob: -18.562763214111328
    9. '_' → logprob: -18.625263214111328
    10. '01' → logprob: -19.000263214111328

Token 18: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.011373155459296e-05
    2. ')' → logprob: -11.000030517578125
    3. '])' → logprob: -11.500030517578125
    4. '']' → logprob: -13.625030517578125
    5. ')]' → logprob: -13.625030517578125
    6. '`]' → logprob: -15.375030517578125
    7. '```' → logprob: -15.375030517578125
    8. ' ]' → logprob: -15.750030517578125
    9. ']
' → logprob: -16.000030517578125
    10. '"]' → logprob: -16.500030517578125

Token 19: 'ans' (ID: 616)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.007489019073545933
    2. 'count' → logprob: -5.882489204406738
    3. 'result' → logprob: -6.507489204406738
    4. 'for' → logprob: -6.632489204406738
    5. 'ways' → logprob: -7.382489204406738
    6. ' dp' → logprob: -7.507489204406738
    7. 'def' → logprob: -8.132489204406738
    8. 'counts' → logprob: -8.632489204406738
    9. ' ways' → logprob: -9.757489204406738
    10. 'coins' → logprob: -10.382489204406738

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08196401596069336
    2. '=' → logprob: -2.5819640159606934
    3. '_' → logprob: -6.331964015960693
    4. '[' → logprob: -7.206964015960693
    5. ' +=' → logprob: -8.581964492797852
    6. ' ' → logprob: -8.706964492797852
    7. 's' → logprob: -9.331964492797852
    8. '.' → logprob: -10.956964492797852
    9. '_space' → logprob: -10.956964492797852
    10. ',' → logprob: -11.081964492797852

Token 21: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.40797898173332214
    2. '[' → logprob: -2.0329790115356445
    3. ' [' → logprob: -2.0329790115356445
    4. ' ' → logprob: -3.1579790115356445
    5. '[]' → logprob: -4.7829790115356445
    6. 'float' → logprob: -4.9079790115356445
    7. '[target' → logprob: -5.2829790115356445
    8. ' float' → logprob: -5.4079790115356445
    9. ' []' → logprob: -5.5329790115356445
    10. 'target' → logprob: -7.9079790115356445

Token 22: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.508456826210022
    2. '[' → logprob: -1.008456826210022
    3. 'float' → logprob: -4.383456707000732
    4. '[]' → logprob: -4.508456707000732
    5. '[target' → logprob: -4.758456707000732
    6. 'target' → logprob: -7.383456707000732
    7. '[len' → logprob: -7.633456707000732
    8. 'len' → logprob: -8.50845718383789
    9. '100' → logprob: -9.25845718383789
    10. '[int' → logprob: -9.25845718383789

Token 23: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002034038072451949
    2. ' for' → logprob: -6.2520341873168945
    3. '
' → logprob: -10.252034187316895
    4. ',' → logprob: -10.752034187316895
    5. ':' → logprob: -10.877034187316895
    6. 'while' → logprob: -11.002034187316895
    7. '.' → logprob: -12.627034187316895
    8. ';' → logprob: -13.502034187316895
    9. '```' → logprob: -13.752034187316895
    10. '' → logprob: -13.752034187316895

Token 24: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.0219828002154827e-05
    2. ' for' → logprob: -11.125020027160645
    3. '```' → logprob: -12.250020027160645
    4. 'while' → logprob: -14.750020027160645
    5. '	for' → logprob: -16.62502098083496
    6. 'if' → logprob: -16.87502098083496
    7. '`' → logprob: -17.37502098083496
    8. ':' → logprob: -17.37502098083496
    9. 'i' → logprob: -17.75002098083496
    10. '``' → logprob: -18.00002098083496

Token 25: ' c' (ID: 274)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5795696377754211
    2. ' coin' → logprob: -0.9545696377754211
    3. ' ' → logprob: -3.3295695781707764
    4. ' c' → logprob: -4.0795698165893555
    5. ' _' → logprob: -7.5795698165893555
    6. ' t' → logprob: -8.079569816589355
    7. 'coin' → logprob: -8.329569816589355
    8. ' x' → logprob: -8.329569816589355
    9. ' target' → logprob: -8.454569816589355
    10. 'i' → logprob: -8.954569816589355

Token 26: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8743342757225037
    2. ' ' → logprob: -1.3743343353271484
    3. 'o' → logprob: -1.4993343353271484
    4. 'in' → logprob: -2.7493343353271484
    5. 'oin' → logprob: -3.6243343353271484
    6. '  ' → logprob: -4.749334335327148
    7. ' i' → logprob: -5.624334335327148
    8. 'i' → logprob: -6.124334335327148
    9. '   ' → logprob: -7.374334335327148
    10. ' o' → logprob: -7.749334335327148

Token 27: ' coins' (ID: 28969)
  Prédit: ' coins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coins' → logprob: -0.47408005595207214
    2. 'coins' → logprob: -0.9740800857543945
    3. 'Coins' → logprob: -13.224080085754395
    4. ' ' → logprob: -14.224080085754395
    5. 'co' → logprob: -15.099080085754395
    6. 'coin' → logprob: -15.849080085754395
    7. ' Coins' → logprob: -16.849079132080078
    8. ' co' → logprob: -17.224079132080078
    9. ' coils' → logprob: -17.599079132080078
    10. 'c' → logprob: -17.849079132080078

Token 28: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.147740689106286e-05
    2. ' :' → logprob: -10.12507152557373
    3. '):' → logprob: -11.37507152557373
    4. ':
' → logprob: -12.12507152557373
    5. ':**' → logprob: -12.37507152557373
    6. '>:' → logprob: -12.87507152557373
    7. '<|end|>' → logprob: -13.87507152557373
    8. '':' → logprob: -14.00007152557373
    9. '   ' → logprob: -14.00007152557373
    10. '":' → logprob: -14.12507152557373

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004912212025374174
    2. ' ' → logprob: -5.754912376403809
    3. '    ' → logprob: -7.004912376403809
    4. '  ' → logprob: -7.754912376403809
    5. '    
' → logprob: -8.754912376403809
    6. ' ans' → logprob: -9.629912376403809
    7. '<|end|>' → logprob: -10.004912376403809
    8. '       ' → logprob: -10.754912376403809
    9. ' 
' → logprob: -10.754912376403809
    10. '	ans' → logprob: -11.004912376403809

Token 30: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.000506326905451715
    2. 'ans' (adapté à ' ans') → logprob: -8.750506401062012
    3. ' count' → logprob: -8.750506401062012
    4. ' if' → logprob: -10.000506401062012
    5. ' n' → logprob: -10.625506401062012
    6. ' coins' → logprob: -10.750506401062012
    7. ' amount' → logprob: -10.875506401062012
    8. '	ans' → logprob: -11.125506401062012
    9. ' cnt' → logprob: -11.625506401062012
    10. '    ' → logprob: -11.625506401062012

Token 31: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0009713716572150588
    2. '+=' → logprob: -7.00097131729126
    3. ' ' → logprob: -10.250971794128418
    4. '+' → logprob: -11.375971794128418
    5. ' +' → logprob: -12.000971794128418
    6. ' =' → logprob: -12.750971794128418
    7. ' -=' → logprob: -13.000971794128418
    8. ' *=' → logprob: -15.000971794128418
    9. ' //' → logprob: -15.375971794128418
    10. '=' → logprob: -15.375971794128418

Token 32: ' target' (ID: 3783)
  Prédit: ' target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.1269654929637909
    2. 'target' → logprob: -2.1269655227661133
    3. '(target' → logprob: -10.501965522766113
    4. ' ' → logprob: -12.501965522766113
    5. '	target' → logprob: -13.001965522766113
    6. ' (' → logprob: -13.126965522766113
    7. '   ' → logprob: -14.376965522766113
    8. '[target' → logprob: -14.626965522766113
    9. ' ' → logprob: -15.376965522766113
    10. ',target' → logprob: -15.876965522766113

Token 33: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.021013371646404266
    2. '//' → logprob: -3.8960132598876953
    3. ' ' → logprob: -7.896013259887695
    4. '`' → logprob: -10.771013259887695
    5. '<|end|>' → logprob: -11.271013259887695
    6. ' ' → logprob: -11.396013259887695
    7. '...' → logprob: -11.521013259887695
    8. ')' → logprob: -11.646013259887695
    9. 'div' → logprob: -12.021013259887695
    10. '#' → logprob: -12.396013259887695

Token 34: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03804183006286621
    2. ' c' → logprob: -3.288041830062866
    3. ' ' → logprob: -15.538042068481445
    4. '<|end|>' → logprob: -16.413042068481445
    5. '	c' → logprob: -17.163042068481445
    6. ')c' → logprob: -18.163042068481445
    7. '  ' → logprob: -18.538042068481445
    8. '   ' → logprob: -18.788042068481445
    9. '%c' → logprob: -19.413042068481445
    10. '*c' → logprob: -19.413042068481445

Token 35: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.901495635509491
    2. 'target' → logprob: -1.7764956951141357
    3. '`' → logprob: -2.0264956951141357
    4. '*
' → logprob: -2.7764956951141357
    5. '\n' → logprob: -3.1514956951141357
    6. ''\' → logprob: -3.5264956951141357
    7. '`
' → logprob: -3.7764956951141357
    8. '
' → logprob: -3.9014956951141357
    9. ' ' → logprob: -4.026495456695557
    10. ''' → logprob: -4.151495456695557

Token 36: '   ' (ID: 271)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.47882983088493347
    2. '   ' → logprob: -0.9788298606872559
    3. ' target' → logprob: -6.353829860687256
    4. '\n' → logprob: -6.978829860687256
    5. '
' → logprob: -7.103829860687256
    6. '    
' → logprob: -8.103829383850098
    7. '\' → logprob: -8.353829383850098
    8. '`
' → logprob: -8.728829383850098
    9. '```' → logprob: -8.853829383850098
    10. '  ' → logprob: -9.728829383850098

Token 37: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' (adapté à ' target') → logprob: -0.03370482847094536
    2. ' target' → logprob: -3.4087047576904297
    3. '\' → logprob: -10.65870475769043
    4. '   ' → logprob: -11.03370475769043
    5. '`' → logprob: -12.15870475769043
    6. '	target' → logprob: -12.78370475769043
    7. '`
' → logprob: -13.15870475769043
    8. '\n' → logprob: -13.53370475769043
    9. '```' → logprob: -13.65870475769043
    10. ' ' → logprob: -13.90870475769043

Token 38: ' %=' (ID: 117035)
  Prédit: ' %='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.01757194660604
    2. '%=' → logprob: -4.892571926116943
    3. '%' → logprob: -5.642571926116943
    4. ' =' → logprob: -5.767571926116943
    5. '=' → logprob: -5.892571926116943
    6. ' %' → logprob: -7.642571926116943
    7. ' -=' → logprob: -12.892572402954102
    8. ' ' → logprob: -13.642572402954102
    9. ')' → logprob: -13.767572402954102
    10. '```' → logprob: -15.392572402954102

Token 39: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.004078401252627373
    2. ' c' → logprob: -5.504078388214111
    3. '	c' → logprob: -19.004077911376953
    4. ' ' → logprob: -19.129077911376953
    5. '   ' → logprob: -20.004077911376953
    6. '_c' → logprob: -20.629077911376953
    7. '  ' → logprob: -21.004077911376953
    8. ')c' → logprob: -21.254077911376953
    9. '%c' → logprob: -22.129077911376953
    10. '*c' → logprob: -22.379077911376953

Token 40: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006918076425790787
    2. '\n' → logprob: -5.631917953491211
    3. '
' → logprob: -6.131917953491211
    4. '```' → logprob: -7.631917953491211
    5. '\' → logprob: -8.006917953491211
    6. ' print' → logprob: -8.881917953491211
    7. '<|end|>' → logprob: -9.381917953491211
    8. '#print' → logprob: -10.506917953491211
    9. 'return' → logprob: -11.631917953491211
    10. '' → logprob: -11.756917953491211

Token 41: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.040636416524648666
    2. '\n' → logprob: -3.7906363010406494
    3. '<|end|>' → logprob: -4.4156365394592285
    4. '```' → logprob: -6.5406365394592285
    5. '#' → logprob: -6.7906365394592285
    6. '\' → logprob: -6.7906365394592285
    7. '
' → logprob: -6.9156365394592285
    8. ' print' → logprob: -8.91563606262207
    9. '#print' → logprob: -9.41563606262207
    10. 'return' → logprob: -9.54063606262207

Token 42: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2522225081920624
    2. '(ans' → logprob: -1.5022225379943848
    3. '()' → logprob: -8.252222061157227
    4. '(target' → logprob: -11.752222061157227
    5. '(answer' → logprob: -11.752222061157227
    6. '('' → logprob: -12.002222061157227
    7. '("("' → logprob: -13.252222061157227
    8. ' (' → logprob: -13.252222061157227
    9. '(`' → logprob: -13.502222061157227
    10. '(

' → logprob: -13.752222061157227

Token 43: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. '))' → logprob: -15.625
    3. ' )' → logprob: -15.75
    4. ')`' → logprob: -17.625
    5. '`)' → logprob: -18.875
    6. '')' → logprob: -19.125
    7. ')
' → logprob: -19.25
    8. '）' → logprob: -20.125
    9. ')}' → logprob: -20.625
    10. ')**' → logprob: -20.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 41
Tokens correctement prédits (1ère position, stricte): 22
Tokens correctement prédits (1ère position, avec adaptation): 23
Tokens correctement prédits (top 10): 37
Précision stricte (1ère position): 53.66%
Précision adaptée (1ère position): 56.10%
Précision (top 10): 90.24%
================================================================================
