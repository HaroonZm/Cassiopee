================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
n_calc = n

C = [1, 5, 10, 25]

cnt = 0

for c in C[::-1]:
    q, n_calc = divmod(n_calc, c)
    cnt += q

    if int(n_calc) == 0:
        break

print(cnt)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00042768914136104286
    2. ''' → logprob: -8.62542724609375
    3. '('' → logprob: -9.37542724609375
    4. '(n' → logprob: -9.87542724609375
    5. '```' → logprob: -10.37542724609375
    6. '`' → logprob: -10.75042724609375
    7. '("("' → logprob: -11.12542724609375
    8. '(
' → logprob: -11.12542724609375
    9. ')' → logprob: -11.75042724609375
    10. '()' → logprob: -12.25042724609375

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11869344860315323
    2. ')' → logprob: -2.2436933517456055
    3. '()' → logprob: -5.3686933517456055
    4. '())' → logprob: -7.4936933517456055
    5. '(
' → logprob: -8.243693351745605
    6. '```' → logprob: -9.993693351745605
    7. '(

' → logprob: -10.368693351745605
    8. '('' → logprob: -10.493693351745605
    9. ''' → logprob: -10.618693351745605
    10. '(n' → logprob: -10.868693351745605

Token 5: 'n' (ID: 77)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7040315866470337
    2. 'if' → logprob: -1.4540315866470337
    3. 'for' → logprob: -2.329031467437744
    4. 's' → logprob: -2.454031467437744
    5. 'f' → logprob: -4.329031467437744
    6. ' ' → logprob: -4.454031467437744
    7. 'x' → logprob: -4.829031467437744
    8. ')' → logprob: -4.954031467437744
    9. 'a' → logprob: -4.954031467437744
    10. ''' → logprob: -5.079031467437744

Token 6: '_calc' (ID: 107191)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1446336507797241
    2. '*' → logprob: -1.5196336507797241
    3. '**' → logprob: -1.6446336507797241
    4. '<|end|>' → logprob: -2.6446337699890137
    5. '```' → logprob: -2.8946337699890137
    6. ' ' → logprob: -2.8946337699890137
    7. '\' → logprob: -3.7696337699890137
    8. '\n' → logprob: -4.019633769989014
    9. '#' → logprob: -4.394633769989014
    10. '
' → logprob: -4.519633769989014

Token 7: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5405932068824768
    2. '(' → logprob: -1.040593147277832
    3. '_' → logprob: -3.665593147277832
    4. '+' → logprob: -3.915593147277832
    5. '*' → logprob: -4.665593147277832
    6. 's' → logprob: -5.915593147277832
    7. ')' → logprob: -6.040593147277832
    8. '**' → logprob: -6.790593147277832
    9. '=' → logprob: -7.415593147277832
    10. ' +' → logprob: -8.165593147277832

Token 8: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.8925188183784485
    2. ' ' → logprob: -1.3925187587738037
    3. 'n' → logprob: -1.6425187587738037
    4. '0' → logprob: -2.0175187587738037
    5. '1' → logprob: -4.517518997192383
    6. 'sum' → logprob: -6.892518997192383
    7. ' sum' → logprob: -7.392518997192383
    8. 'int' → logprob: -7.767518997192383
    9. ' (' → logprob: -7.767518997192383
    10. '2' → logprob: -8.142518997192383

Token 9: '

' (ID: 279)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6572731733322144
    2. '-' → logprob: -1.4072731733322144
    3. ' ' → logprob: -2.407273292541504
    4. '*' → logprob: -3.782273292541504
    5. '>' → logprob: -3.782273292541504
    6. ')' → logprob: -4.282273292541504
    7. '+' → logprob: -4.282273292541504
    8. ' %' → logprob: -4.407273292541504
    9. '**' → logprob: -4.407273292541504
    10. '#' → logprob: -4.657273292541504

Token 10: 'C' (ID: 34)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.3257472515106201
    2. '**' → logprob: -1.5757472515106201
    3. '-' → logprob: -1.8257472515106201
    4. '%' → logprob: -2.32574725151062
    5. 'while' → logprob: -2.82574725151062
    6. '*' → logprob: -3.07574725151062
    7. '_' → logprob: -3.32574725151062
    8. ')' → logprob: -3.95074725151062
    9. '>' → logprob: -4.200747489929199
    10. ' while' → logprob: -4.325747489929199

Token 11: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6475670337677002
    2. '+' → logprob: -2.0225670337677
    3. 'o' → logprob: -2.0225670337677
    4. 'a' → logprob: -2.7725670337677
    5. '-' → logprob: -3.5225670337677
    6. ' =' → logprob: -3.6475670337677
    7. 'al' → logprob: -3.8975670337677
    8. '_' → logprob: -4.022566795349121
    9. ':' → logprob: -4.772566795349121
    10. 'u' → logprob: -4.897566795349121

Token 12: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7984157800674438
    2. ' [' → logprob: -1.4234157800674438
    3. ' n' → logprob: -2.5484156608581543
    4. 'n' → logprob: -2.6734156608581543
    5. ' ' → logprob: -2.6734156608581543
    6. ' []' → logprob: -2.7984156608581543
    7. '[' → logprob: -4.173415660858154
    8. '[]' → logprob: -5.173415660858154
    9. '[n' → logprob: -5.923415660858154
    10. '1' → logprob: -6.173415660858154

Token 13: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006907305680215359
    2. ']' → logprob: -5.1319074630737305
    3. 'int' → logprob: -8.25690746307373
    4. 'False' → logprob: -8.75690746307373
    5. '1' → logprob: -9.38190746307373
    6. 'n' → logprob: -9.38190746307373
    7. ' ' → logprob: -9.50690746307373
    8. 'i' → logprob: -9.63190746307373
    9. '(' → logprob: -10.00690746307373
    10. '[' → logprob: -10.25690746307373

Token 14: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09331680834293365
    2. ',' → logprob: -2.4683167934417725
    3. ' ]' → logprob: -5.593317031860352
    4. ' for' → logprob: -8.093317031860352
    5. ']*' → logprob: -9.718317031860352
    6. ']+' → logprob: -9.968317031860352
    7. ']*(' → logprob: -10.093317031860352
    8. 'for' → logprob: -10.468317031860352
    9. ' ' → logprob: -10.593317031860352
    10. ')' → logprob: -10.718317031860352

Token 15: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.70357745885849
    2. '1' → logprob: -1.2035775184631348
    3. ' ' → logprob: -1.8285775184631348
    4. ']' → logprob: -3.9535775184631348
    5. '2' → logprob: -4.078577518463135
    6. '])' → logprob: -5.328577518463135
    7. ' ]' → logprob: -5.953577518463135
    8. ' ])' → logprob: -7.578577518463135
    9. ' n' → logprob: -9.578577041625977
    10. '3' → logprob: -9.953577041625977

Token 16: '5' (ID: 20)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20320554077625275
    2. '1' → logprob: -2.2032055854797363
    3. ' ' → logprob: -3.0782055854797363
    4. '2' → logprob: -4.078205585479736
    5. ']' → logprob: -4.703205585479736
    6. '])' → logprob: -7.578205585479736
    7. '-' → logprob: -8.078205108642578
    8. ' ]' → logprob: -8.453205108642578
    9. ' -' → logprob: -9.328205108642578
    10. ']*' → logprob: -10.203205108642578

Token 17: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027957167476415634
    2. '0' → logprob: -4.152956962585449
    3. ' ,' → logprob: -4.902956962585449
    4. ']' → logprob: -6.777956962585449
    5. ' ' → logprob: -7.027956962585449
    6. '10' → logprob: -7.277956962585449
    7. '25' → logprob: -7.777956962585449
    8. '6' → logprob: -8.40295696258545
    9. '7' → logprob: -8.52795696258545
    10. '1' → logprob: -8.77795696258545

Token 18: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5784754753112793
    2. ' ' → logprob: -0.8284754753112793
    3. '11' → logprob: -6.453475475311279
    4. '15' → logprob: -8.328475952148438
    5. '25' → logprob: -8.328475952148438
    6. '20' → logprob: -8.453475952148438
    7. '7' → logprob: -9.703475952148438
    8. '1' → logprob: -9.703475952148438
    9. '12' → logprob: -10.203475952148438
    10. '9' → logprob: -10.953475952148438

Token 19: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.03131351247429848
    2. ' ' → logprob: -3.656313419342041
    3. '11' → logprob: -5.531313419342041
    4. '7' → logprob: -8.0313138961792
    5. '15' → logprob: -8.4063138961792
    6. '20' → logprob: -8.9063138961792
    7. '1' → logprob: -8.9063138961792
    8. '25' → logprob: -9.4063138961792
    9. '12' → logprob: -10.2813138961792
    10. '6' → logprob: -10.6563138961792

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.575563020305708e-05
    2. ']' → logprob: -10.375065803527832
    3. ' ,' → logprob: -10.500065803527832
    4. ')' → logprob: -13.000065803527832
    5. ',
' → logprob: -13.375065803527832
    6. '])' → logprob: -14.500065803527832
    7. ' ' → logprob: -14.875065803527832
    8. '20' → logprob: -15.000065803527832
    9. ',

' → logprob: -15.000065803527832
    10. ')]' → logprob: -15.250065803527832

Token 21: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3168502151966095
    2. '25' → logprob: -1.816850185394287
    3. '20' → logprob: -2.316850185394287
    4. '50' → logprob: -4.566850185394287
    5. '100' → logprob: -11.191850662231445
    6. '21' → logprob: -11.566850662231445
    7. '2' → logprob: -12.441850662231445
    8. '15' → logprob: -12.504350662231445
    9. '	' → logprob: -12.566850662231445
    10. '   ' → logprob: -12.941850662231445

Token 22: '25' (ID: 1161)
  Prédit: '25'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '25' → logprob: -0.41426804661750793
    2. '50' → logprob: -1.5392680168151855
    3. '20' → logprob: -2.1642680168151855
    4. ' ' → logprob: -4.6642680168151855
    5. '100' → logprob: -8.789268493652344
    6. '15' → logprob: -9.414268493652344
    7. '21' → logprob: -10.539268493652344
    8. '30' → logprob: -10.664268493652344
    9. '   ' → logprob: -11.289268493652344
    10. '	' → logprob: -11.539268493652344

Token 23: ']

' (ID: 3144)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002813313389196992
    2. ']' → logprob: -5.877813339233398
    3. ' ,' → logprob: -12.127813339233398
    4. ' ]' → logprob: -13.377813339233398
    5. ')' → logprob: -14.377813339233398
    6. ',
' → logprob: -14.627813339233398
    7. '   ' → logprob: -15.752813339233398
    8. ' ' → logprob: -16.7528133392334
    9. '```' → logprob: -16.8778133392334
    10. ',

' → logprob: -17.0028133392334

Token 24: 'cnt' (ID: 33160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6855767965316772
    2. ',' → logprob: -1.6855767965316772
    3. ' ' → logprob: -3.185576915740967
    4. '*' → logprob: -3.310576915740967
    5. '=' → logprob: -3.560576915740967
    6. 'while' → logprob: -3.685576915740967
    7. '```' → logprob: -3.810576915740967
    8. ' for' → logprob: -3.810576915740967
    9. ']' → logprob: -4.060576915740967
    10. '-' → logprob: -4.310576915740967

Token 25: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.32241490483283997
    2. '=' → logprob: -1.4474148750305176
    3. ' =' → logprob: -3.3224148750305176
    4. '[' → logprob: -5.947414875030518
    5. 's' → logprob: -6.822414875030518
    6. '_=' → logprob: -8.197415351867676
    7. ' ' → logprob: -9.447415351867676
    8. ']' → logprob: -9.947415351867676
    9. '_counts' → logprob: -10.197415351867676
    10. '[]' → logprob: -10.322415351867676

Token 26: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2280072718858719
    2. ' ' → logprob: -1.6030073165893555
    3. ' [' → logprob: -6.3530073165893555
    4. '[' → logprob: -7.1030073165893555
    5. ' {' → logprob: -11.603007316589355
    6. '{' → logprob: -12.228007316589355
    7. ' {}' → logprob: -12.228007316589355
    8. '{}' → logprob: -12.478007316589355
    9. ' []' → logprob: -13.478007316589355
    10. '[]' → logprob: -13.728007316589355

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2523035705089569
    2. '[' → logprob: -1.5023036003112793
    3. '{' → logprob: -8.127303123474121
    4. '[n' → logprob: -10.502303123474121
    5. ' [' → logprob: -10.752303123474121
    6. ' ' → logprob: -11.252303123474121
    7. '{}' → logprob: -11.752303123474121
    8. '[]' → logprob: -12.502303123474121
    9. '[int' → logprob: -13.877303123474121
    10. '[len' → logprob: -14.377303123474121

Token 28: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2776080071926117
    2. ' for' → logprob: -2.2776079177856445
    3. '
' → logprob: -2.5276079177856445
    4. 'while' → logprob: -3.5276079177856445
    5. '<|end|>' → logprob: -3.9026079177856445
    6. ' while' → logprob: -5.5276079177856445
    7. ',' → logprob: -6.5276079177856445
    8. '```' → logprob: -6.7776079177856445
    9. ':' → logprob: -7.1526079177856445
    10. '<|end|>' → logprob: -7.6526079177856445

Token 29: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2291131615638733
    2. 'while' → logprob: -1.6041131019592285
    3. ' for' → logprob: -6.3541131019592285
    4. ' while' → logprob: -7.1041131019592285
    5. '
' → logprob: -7.2291131019592285
    6. ':' → logprob: -8.729113578796387
    7. '```' → logprob: -9.354113578796387
    8. '<|end|>' → logprob: -9.604113578796387
    9. '.' → logprob: -11.104113578796387
    10. ',' → logprob: -11.354113578796387

Token 30: ' c' (ID: 274)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01836508885025978
    2. ' i' → logprob: -4.143364906311035
    3. ' n' → logprob: -6.393364906311035
    4. '  ' → logprob: -7.643364906311035
    5. ' ‌' → logprob: -10.018364906311035
    6. ' space' → logprob: -10.518364906311035
    7. ' ' → logprob: -10.768364906311035
    8. '_' → logprob: -11.518364906311035
    9. ' x' → logprob: -11.643364906311035
    10. ' c' → logprob: -11.643364906311035

Token 31: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.013438318856060505
    2. 'in' → logprob: -4.6384382247924805
    3. ' ' → logprob: -5.6384382247924805
    4. '  ' → logprob: -10.26343822479248
    5. ' i' → logprob: -10.38843822479248
    6. '	in' → logprob: -11.76343822479248
    7. ' c' → logprob: -11.88843822479248
    8. '<|end|>' → logprob: -12.13843822479248
    9. 'n' → logprob: -12.26343822479248
    10. 'c' → logprob: -12.38843822479248

Token 32: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.20161506533622742
    2. 'C' → logprob: -1.7016150951385498
    3. ' ' → logprob: -8.576615333557129
    4. '	C' → logprob: -11.576615333557129
    5. ' ' → logprob: -13.451615333557129
    6. '>C' → logprob: -14.701615333557129
    7. 'c' → logprob: -15.076615333557129
    8. '  ' → logprob: -15.201615333557129
    9. '<|end|>' → logprob: -15.326615333557129
    10. 's' → logprob: -15.326615333557129

Token 33: '[::-' (ID: 159890)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -5.717296517104842e-05
    2. '   ' → logprob: -10.750057220458984
    3. ':
' → logprob: -11.375057220458984
    4. '):' → logprob: -11.750057220458984
    5. ' :' → logprob: -12.000057220458984
    6. ':**' → logprob: -12.125057220458984
    7. 'if' → logprob: -14.250057220458984
    8. '>' → logprob: -14.375057220458984
    9. '>:' → logprob: -14.500057220458984
    10. ' if' → logprob: -14.500057220458984

Token 34: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6776029699249193e-05
    2. 'ange' → logprob: -11.62502670288086
    3. '2' → logprob: -12.12502670288086
    4. 'list' → logprob: -13.50002670288086
    5. 'range' → logprob: -13.50002670288086
    6. ':' → logprob: -13.75002670288086
    7. 'ing' → logprob: -14.25002670288086
    8. '```' → logprob: -14.37502670288086
    9. 'er' → logprob: -14.50002670288086
    10. 'an' → logprob: -14.62502670288086

Token 35: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020164605230093002
    2. ':' → logprob: -4.020164489746094
    3. ']:' → logprob: -6.270164489746094
    4. ')' → logprob: -9.770164489746094
    5. '):
' → logprob: -10.145164489746094
    6. '}:' → logprob: -11.520164489746094
    7. '>:' → logprob: -12.020164489746094
    8. '():' → logprob: -13.520164489746094
    9. ' ):' → logprob: -13.520164489746094
    10. '"]:' → logprob: -14.145164489746094

Token 36: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3657560348510742
    2. '   ' → logprob: -1.8657560348510742
    3. ' if' → logprob: -2.615756034851074
    4. ' ' → logprob: -3.240756034851074
    5. '<|end|>' → logprob: -3.615756034851074
    6. '    ' → logprob: -6.115756034851074
    7. '  ' → logprob: -6.365756034851074
    8. ' 
' → logprob: -6.490756034851074
    9. '    
' → logprob: -6.740756034851074
    10. ':
' → logprob: -6.990756034851074

Token 37: ' q' (ID: 2335)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.3819902837276459
    2. '    ' → logprob: -1.7569903135299683
    3. ' if' → logprob: -2.0069901943206787
    4. '   ' → logprob: -5.256990432739258
    5. ' ' → logprob: -5.881990432739258
    6. 'while' → logprob: -7.006990432739258
    7. ' n' → logprob: -7.381990432739258
    8. 'if' → logprob: -7.631990432739258
    9. ' cnt' → logprob: -8.756990432739258
    10. '       ' → logprob: -9.381990432739258

Token 38: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2960663139820099
    2. '=' → logprob: -1.7960662841796875
    3. 'u' → logprob: -3.0460662841796875
    4. ',' → logprob: -3.2960662841796875
    5. ' ' → logprob: -5.5460662841796875
    6. ',u' → logprob: -7.5460662841796875
    7. '   ' → logprob: -7.7960662841796875
    8. ' u' → logprob: -8.546066284179688
    9. '=u' → logprob: -8.671066284179688
    10. ' ,' → logprob: -8.671066284179688

Token 39: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.07036096602678299
    2. 'n' → logprob: -2.6953608989715576
    3. ' ' → logprob: -9.070361137390137
    4. '<|end|>' → logprob: -9.445361137390137
    5. ' =' → logprob: -9.945361137390137
    6. ')' → logprob: -10.195361137390137
    7. '=' → logprob: -10.195361137390137
    8. '_' → logprob: -11.070361137390137
    9. 'div' → logprob: -11.445361137390137
    10. 'nbsp' → logprob: -11.570361137390137

Token 40: '_calc' (ID: 107191)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7763916850090027
    2. '=' → logprob: -1.4013917446136475
    3. '_' → logprob: -1.7763917446136475
    4. '<|end|>' → logprob: -2.7763917446136475
    5. '_calc' → logprob: -3.1513917446136475
    6. '_=' → logprob: -5.151391506195068
    7. ')' → logprob: -5.651391506195068
    8. ',' → logprob: -6.151391506195068
    9. '_div' → logprob: -6.901391506195068
    10. '<|end|>' → logprob: -7.026391506195068

Token 41: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.57596755027771
    2. ' =' → logprob: -0.82596755027771
    3. '<|end|>' → logprob: -11.950967788696289
    4. ',' → logprob: -12.075967788696289
    5. ')' → logprob: -12.200967788696289
    6. 'div' → logprob: -12.700967788696289
    7. '/' → logprob: -13.450967788696289
    8. '%=' → logprob: -14.200967788696289
    9. '   ' → logprob: -14.325967788696289
    10. '=*/' → logprob: -14.888467788696289

Token 42: ' div' (ID: 4223)
  Prédit: ' div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' div' → logprob: -0.34879976511001587
    2. ' n' → logprob: -1.973799705505371
    3. 'div' → logprob: -1.973799705505371
    4. 'n' → logprob: -4.098799705505371
    5. ' ' → logprob: -12.223799705505371
    6. '	div' → logprob: -13.223799705505371
    7. '_div' → logprob: -13.348799705505371
    8. '(n' → logprob: -13.848799705505371
    9. '(div' → logprob: -13.848799705505371
    10. ' ' → logprob: -14.098799705505371

Token 43: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0018395140068605542
    2. 'n' → logprob: -6.376839637756348
    3. 'q' → logprob: -9.751839637756348
    4. '(n' → logprob: -9.876839637756348
    5. 'div' → logprob: -10.876839637756348
    6. 'r' → logprob: -13.501839637756348
    7. '   ' → logprob: -13.876839637756348
    8. 'c' → logprob: -14.001839637756348
    9. 'u' → logprob: -14.251839637756348
    10. '  ' → logprob: -14.376839637756348

Token 44: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0055683632381260395
    2. '(' → logprob: -5.255568504333496
    3. 'n' → logprob: -8.005568504333496
    4. ' n' → logprob: -14.880568504333496
    5. '(
' → logprob: -15.380568504333496
    6. ')n' → logprob: -15.880568504333496
    7. ' (' → logprob: -16.13056755065918
    8. ')' → logprob: -17.25556755065918
    9. '((' → logprob: -18.25556755065918
    10. '(int' → logprob: -18.38056755065918

Token 45: '_calc' (ID: 107191)
  Prédit: '_calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_calc' → logprob: -0.00010127831774298102
    2. '_cal' → logprob: -9.875101089477539
    3. ',' → logprob: -10.250101089477539
    4. ',_' → logprob: -11.875101089477539
    5. 'calc' → logprob: -12.750101089477539
    6. '_,' → logprob: -14.000101089477539
    7. ')' → logprob: -14.250101089477539
    8. ')_' → logprob: -14.375101089477539
    9. ' ,' → logprob: -14.750101089477539
    10. '_' → logprob: -14.875101089477539

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01677713543176651
    2. ',c' → logprob: -4.266777038574219
    3. ' ,' → logprob: -6.391777038574219
    4. 'c' → logprob: -7.266777038574219
    5. ' c' → logprob: -8.391777038574219
    6. ')' → logprob: -12.016777038574219
    7. ' ' → logprob: -13.266777038574219
    8. '%c' → logprob: -14.516777038574219
    9. ')c' → logprob: -15.141777038574219
    10. '(c' → logprob: -15.141777038574219

Token 47: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02324722334742546
    2. ' c' → logprob: -3.773247241973877
    3. '	c' → logprob: -13.773246765136719
    4. ')c' → logprob: -14.773246765136719
    5. '   ' → logprob: -15.398246765136719
    6. '%c' → logprob: -16.64824676513672
    7. ' ' → logprob: -17.02324676513672
    8. '_c' → logprob: -18.02324676513672
    9. ')' → logprob: -18.14824676513672
    10. ' ' → logprob: -18.89824676513672

Token 48: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020592445798683912
    2. ')
' → logprob: -8.500205993652344
    3. '):' → logprob: -14.125205993652344
    4. ')
' → logprob: -14.375205993652344
    5. '   ' → logprob: -14.750205993652344
    6. ' )' → logprob: -15.125205993652344
    7. ')

' → logprob: -15.125205993652344
    8. ')`' → logprob: -16.750205993652344
    9. ':' → logprob: -17.250205993652344
    10. '),' → logprob: -18.250205993652344

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015566547401249409
    2. '
' → logprob: -5.265566349029541
    3. 'cnt' → logprob: -5.390566349029541
    4. '    
' → logprob: -6.140566349029541
    5. '<|end|>' → logprob: -6.640566349029541
    6. '```' → logprob: -7.515566349029541
    7. '  
' → logprob: -7.890566349029541
    8. ' 
' → logprob: -8.1405668258667
    9. ' ' → logprob: -8.2655668258667
    10. ' cnt' → logprob: -8.2655668258667

Token 50: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.14428624510765076
    2. ' cnt' → logprob: -2.1442861557006836
    3. '   ' → logprob: -5.269286155700684
    4. '    
' → logprob: -5.519286155700684
    5. ' 
' → logprob: -5.644286155700684
    6. '\n' → logprob: -6.019286155700684
    7. '
' → logprob: -7.519286155700684
    8. '```' → logprob: -7.769286155700684
    9. '  
' → logprob: -8.394286155700684
    10. '``' → logprob: -8.519286155700684

Token 51: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.17988714575767517
    2. '+=' → logprob: -1.8048871755599976
    3. '+' → logprob: -9.054886817932129
    4. '=' → logprob: -11.179886817932129
    5. ']+=' → logprob: -12.554886817932129
    6. '   ' → logprob: -12.929886817932129
    7. ' +' → logprob: -13.804886817932129
    8. ' =' → logprob: -13.804886817932129
    9. '+=(' → logprob: -14.179886817932129
    10. '+='' → logprob: -14.429886817932129

Token 52: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5759406685829163
    2. ' q' → logprob: -0.8259406685829163
    3. ' ' → logprob: -14.82594108581543
    4. '	q' → logprob: -14.82594108581543
    5. '*q' → logprob: -15.70094108581543
    6. ' ' → logprob: -15.95094108581543
    7. '(q' → logprob: -16.70094108581543
    8. '   ' → logprob: -16.82594108581543
    9. '[q' → logprob: -17.32594108581543
    10. '    ' → logprob: -17.45094108581543

Token 53: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03758590295910835
    2. '
' → logprob: -3.912585973739624
    3. '<|end|>' → logprob: -5.037585735321045
    4. ' print' → logprob: -5.537585735321045
    5. '+' → logprob: -6.662585735321045
    6. '  
' → logprob: -6.912585735321045
    7. '\n' → logprob: -7.162585735321045
    8. ' ' → logprob: -7.412585735321045
    9. ')' → logprob: -8.037586212158203
    10. '-' → logprob: -8.162586212158203

Token 54: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007877098978497088
    2. '
' → logprob: -7.750787734985352
    3. ' print' → logprob: -8.625787734985352
    4. '\n' → logprob: -9.625787734985352
    5. '```' → logprob: -10.625787734985352
    6. ' 
' → logprob: -10.750787734985352
    7. 'if' → logprob: -11.250787734985352
    8. '<|end|>' → logprob: -11.750787734985352
    9. '    
' → logprob: -11.875787734985352
    10. '  
' → logprob: -11.875787734985352

Token 55: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0047118342481553555
    2. 'if' (adapté à ' if') → logprob: -5.379711627960205
    3. ' print' → logprob: -10.129712104797363
    4. ' if' → logprob: -10.129712104797363
    5. 'for' → logprob: -12.129712104797363
    6. 'n' → logprob: -13.629712104797363
    7. '   ' → logprob: -13.754712104797363
    8. '    
' → logprob: -13.879712104797363
    9. '
' → logprob: -14.004712104797363
    10. '```' → logprob: -14.004712104797363

Token 56: ' int' (ID: 677)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.00326743395999074
    2. 'n' → logprob: -5.753267288208008
    3. ' not' → logprob: -10.128267288208008
    4. ' cnt' → logprob: -10.503267288208008
    5. ' q' → logprob: -11.378267288208008
    6. ' ' → logprob: -12.128267288208008
    7. 'cnt' → logprob: -12.628267288208008
    8. ' ' → logprob: -14.253267288208008
    9. ' c' → logprob: -14.503267288208008
    10. 'q' → logprob: -15.628267288208008

Token 57: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.12908245623111725
    2. '(' → logprob: -2.129082441329956
    3. '(cnt' → logprob: -7.254082679748535
    4. '(s' → logprob: -7.629082679748535
    5. '((' → logprob: -8.254082679748535
    6. '(q' → logprob: -8.504082679748535
    7. ' (' → logprob: -8.629082679748535
    8. '()' → logprob: -10.004082679748535
    9. '(c' → logprob: -10.254082679748535
    10. ' ' → logprob: -10.254082679748535

Token 58: '_calc' (ID: 107191)
  Prédit: '_calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_calc' → logprob: -0.0003079334564972669
    2. '_cal' → logprob: -8.8753080368042
    3. ')' → logprob: -9.3753080368042
    4. 'calc' → logprob: -10.3753080368042
    5. '_' → logprob: -10.8753080368042
    6. '_c' → logprob: -11.7503080368042
    7. '>' → logprob: -13.3753080368042
    8. '/c' → logprob: -13.7503080368042
    9. '(calc' → logprob: -13.7503080368042
    10. '   ' → logprob: -13.8753080368042

Token 59: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1252955049276352
    2. ' )' → logprob: -3.750295400619507
    3. '==' → logprob: -3.750295400619507
    4. '/c' → logprob: -3.750295400619507
    5. ')==' → logprob: -3.875295400619507
    6. ' /' → logprob: -4.000295639038086
    7. '/' → logprob: -5.375295639038086
    8. ' ==' → logprob: -5.875295639038086
    9. ' ' → logprob: -8.750295639038086
    10. '  ' → logprob: -9.375295639038086

Token 60: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.34869900345802307
    2. '==' → logprob: -1.2236989736557007
    3. ' <' → logprob: -9.473698616027832
    4. '=' → logprob: -10.098698616027832
    5. ')' → logprob: -10.223698616027832
    6. '<' → logprob: -10.848698616027832
    7. ' ' → logprob: -10.973698616027832
    8. '>' → logprob: -11.348698616027832
    9. ' =' → logprob: -11.598698616027832
    10. ')==' → logprob: -11.973698616027832

Token 61: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5759409666061401
    2. '0' → logprob: -0.8259409666061401
    3. '  ' → logprob: -13.95094108581543
    4. ' ' → logprob: -15.32594108581543
    5. '   ' → logprob: -16.88844108581543
    6. '1' → logprob: -16.95094108581543
    7. 'n' → logprob: -17.07594108581543
    8. '32' → logprob: -17.45094108581543
    9. ')' → logprob: -17.63844108581543
    10. '=' → logprob: -17.63844108581543

Token 62: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '  ' → logprob: -19.375011444091797
    4. 'n' → logprob: -19.500011444091797
    5. ''' → logprob: -19.625011444091797
    6. '   ' → logprob: -19.625011444091797
    7. '00' → logprob: -19.875011444091797
    8. '000' → logprob: -20.250011444091797
    9. '"' → logprob: -20.500011444091797
    10. '```' → logprob: -20.625011444091797

Token 63: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0034260391257703304
    2. '       ' → logprob: -5.8784260749816895
    3. ':
' → logprob: -7.6284260749816895
    4. '   ' → logprob: -9.128425598144531
    5. ' :' → logprob: -11.378425598144531
    6. '    ' → logprob: -12.128425598144531
    7. ':return' → logprob: -12.753425598144531
    8. '      ' → logprob: -13.628425598144531
    9. '     ' → logprob: -13.753425598144531
    10. '):' → logprob: -13.753425598144531

Token 64: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001431114797014743
    2. '   ' → logprob: -9.125143051147461
    3. ' break' → logprob: -11.250143051147461
    4. '    ' → logprob: -12.375143051147461
    5. '           ' → logprob: -12.375143051147461
    6. '     ' → logprob: -12.500143051147461
    7. '      ' → logprob: -12.750143051147461
    8. '	break' → logprob: -13.625143051147461
    9. 'break' → logprob: -13.875143051147461
    10. ':' → logprob: -14.250143051147461

Token 65: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.13986581563949585
    2. '       ' → logprob: -2.6398658752441406
    3. '   ' → logprob: -2.8898658752441406
    4. 'break' (adapté à ' break') → logprob: -5.889865875244141
    5. '    ' → logprob: -7.514865875244141
    6. '	break' → logprob: -8.38986587524414
    7. '           ' → logprob: -11.88986587524414
    8. '```' → logprob: -12.01486587524414
    9. '_break' → logprob: -12.26486587524414
    10. '     ' → logprob: -13.13986587524414

Token 66: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1043352484703064
    2. ')' → logprob: -2.604335308074951
    3. '
' → logprob: -4.354335308074951
    4. '\n' → logprob: -5.604335308074951
    5. '<|end|>' → logprob: -5.729335308074951
    6. ' print' → logprob: -5.979335308074951
    7. '#' → logprob: -6.604335308074951
    8. '```' → logprob: -7.479335308074951
    9. '  
' → logprob: -8.854334831237793
    10. 'n' → logprob: -9.229334831237793

Token 67: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.036631230264902115
    2. ')' → logprob: -3.4116313457489014
    3. '
' → logprob: -6.411631107330322
    4. ' print' → logprob: -7.536631107330322
    5. '\n' → logprob: -8.28663158416748
    6. '<|end|>' → logprob: -8.53663158416748
    7. '#' → logprob: -9.41163158416748
    8. 'n' → logprob: -9.91163158416748
    9. '```' → logprob: -9.91163158416748
    10. '(print' → logprob: -10.53663158416748

Token 68: '(cnt' (ID: 102125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011629577493295074
    2. '(cnt' → logprob: -7.251163005828857
    3. '('' → logprob: -8.3761625289917
    4. '("("' → logprob: -8.8761625289917
    5. '()' → logprob: -9.8761625289917
    6. '(n' → logprob: -11.6261625289917
    7. '(len' → logprob: -12.5011625289917
    8. '(count' → logprob: -12.8761625289917
    9. '("' → logprob: -12.8761625289917
    10. '(`' → logprob: -13.0011625289917

Token 69: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. '))' → logprob: -13.875000953674316
    3. ' )' → logprob: -15.000000953674316
    4. ')`' → logprob: -17.375001907348633
    5. ')
' → logprob: -17.625001907348633
    6. ')}' → logprob: -18.125001907348633
    7. ')))' → logprob: -18.875001907348633
    8. '`)' → logprob: -19.000001907348633
    9. '')' → logprob: -19.500001907348633
    10. '）' → logprob: -19.750001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 67
Tokens correctement prédits (1ère position, stricte): 29
Tokens correctement prédits (1ère position, avec adaptation): 30
Tokens correctement prédits (top 10): 49
Précision stricte (1ère position): 43.28%
Précision adaptée (1ère position): 44.78%
Précision (top 10): 73.13%
================================================================================
