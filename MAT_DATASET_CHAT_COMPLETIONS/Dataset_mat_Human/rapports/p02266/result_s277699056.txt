================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
s=input()
a=[]
d=[]
sum=0
for i,line in enumerate(s):
    if line == "\\":
        d.append(i)
    elif line == "/" and d:
        j=d.pop()
        a_tmp=i-j
        sum+=a_tmp
        while a and a[-1][0] > j:
            a_tmp += a.pop()[1]
        a.append([j,a_tmp])
 
print(sum)
print(len(a),*[s for i,s in a])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 's' (ID: 82)
  → Token d'amorce (pas de prédiction)

Token 1: '=input' (ID: 87911)
  → Token d'amorce (pas de prédiction)

Token 2: '()
' (ID: 1234)
  → Token d'amorce (pas de prédiction)

Token 3: 'a' (ID: 64)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11507482081651688
    2. '+' → logprob: -2.990074872970581
    3. '=' → logprob: -2.990074872970581
    4. '[' → logprob: -5.240074634552002
    5. 'if' → logprob: -7.615074634552002
    6. '_' → logprob: -7.990074634552002
    7. '.strip' → logprob: -7.990074634552002
    8. ''' → logprob: -8.11507511138916
    9. 's' → logprob: -8.86507511138916
    10. 'i' → logprob: -8.86507511138916

Token 4: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004847207572311163
    2. '.' → logprob: -6.254847049713135
    3. ' =' → logprob: -6.504847049713135
    4. '=a' → logprob: -7.754847049713135
    5. '=s' → logprob: -8.629847526550293
    6. '=input' → logprob: -8.754847526550293
    7. '.=' → logprob: -8.879847526550293
    8. '=int' → logprob: -9.504847526550293
    9. '+=' → logprob: -9.504847526550293
    10. ',' → logprob: -10.004847526550293

Token 5: 'd' (ID: 67)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08455787599086761
    2. '.' → logprob: -3.3345577716827393
    3. ' for' → logprob: -4.584558010101318
    4. 'f' → logprob: -4.584558010101318
    5. 'i' → logprob: -4.834558010101318
    6. ' 
' → logprob: -5.959558010101318
    7. ' ' → logprob: -6.084558010101318
    8. 'w' → logprob: -6.459558010101318
    9. '
' → logprob: -6.584558010101318
    10. 'n' → logprob: -6.709558010101318

Token 6: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10476001352071762
    2. '=[]' → logprob: -3.979759931564331
    3. '={}' → logprob: -4.10476016998291
    4. ' =' → logprob: -4.10476016998291
    5. 'i' → logprob: -4.22976016998291
    6. 'e' → logprob: -4.97976016998291
    7. '[' → logprob: -5.35476016998291
    8. '.' → logprob: -5.47976016998291
    9. 'ef' → logprob: -5.47976016998291
    10. 'a' → logprob: -5.85476016998291

Token 7: 'sum' (ID: 12298)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.022324342280626297
    2. 'f' → logprob: -4.272324562072754
    3. '=' → logprob: -5.647324562072754
    4. ' for' → logprob: -6.272324562072754
    5. ':' → logprob: -6.647324562072754
    6. 'n' → logprob: -7.772324562072754
    7. 'i' → logprob: -7.897324562072754
    8. ' ' → logprob: -8.522324562072754
    9. 'r' → logprob: -9.522324562072754
    10. 't' → logprob: -10.022324562072754

Token 8: '=' (ID: 28)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2521502375602722
    2. '=' → logprob: -1.877150297164917
    3. '(' → logprob: -2.752150297164917
    4. '_=' → logprob: -5.627150058746338
    5. ' =' → logprob: -6.377150058746338
    6. 's' → logprob: -7.877150058746338
    7. ' ' → logprob: -9.127150535583496
    8. 'a' → logprob: -10.002150535583496
    9. '(s' → logprob: -10.502150535583496
    10. ' (' → logprob: -10.627150535583496

Token 9: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. 'int' → logprob: -17.125009536743164
    4. 'a' → logprob: -18.250009536743164
    5. ')' → logprob: -18.875009536743164
    6. '1' → logprob: -19.000009536743164
    7. '+' → logprob: -19.125009536743164
    8. '=' → logprob: -19.250009536743164
    9. '(' → logprob: -19.750009536743164
    10. '10' → logprob: -19.875009536743164

Token 10: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.740519642829895
    2. '
' → logprob: -1.240519642829895
    3. ' 
' → logprob: -2.4905195236206055
    4. ' for' → logprob: -2.4905195236206055
    5. ' ' → logprob: -2.9905195236206055
    6. '<|end|>' → logprob: -4.9905195236206055
    7. '' → logprob: -5.2405195236206055
    8. '\n' → logprob: -6.3655195236206055
    9. '  
' → logprob: -6.6155195236206055
    10. 'i' → logprob: -7.3655195236206055

Token 11: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0021758354268968105
    2. ' for' → logprob: -6.502175807952881
    3. '
' → logprob: -8.377176284790039
    4. 'n' → logprob: -9.002176284790039
    5. ' ' → logprob: -9.002176284790039
    6. 'i' → logprob: -9.377176284790039
    7. '<|end|>' → logprob: -10.752176284790039
    8. '' → logprob: -11.002176284790039
    9. 'f' → logprob: -11.127176284790039
    10. '```' → logprob: -11.252176284790039

Token 12: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.028492126613855362
    2. ' i' → logprob: -3.7784922122955322
    3. '  ' → logprob: -5.403491973876953
    4. ' s' → logprob: -8.153491973876953
    5. 'i' → logprob: -8.653491973876953
    6. ' ‌' → logprob: -8.653491973876953
    7. ' _' → logprob: -11.153491973876953
    8. ' )' → logprob: -11.153491973876953
    9. ' ▁' → logprob: -11.528491973876953
    10. ' ﻿' → logprob: -12.028491973876953

Token 13: ',line' (ID: 171132)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17072252929210663
    2. ' ' → logprob: -2.170722484588623
    3. 'in' → logprob: -3.170722484588623
    4. '  ' → logprob: -7.420722484588623
    5. ' range' → logprob: -9.295722961425781
    6. ' n' → logprob: -9.795722961425781
    7. 'range' → logprob: -10.295722961425781
    8. ' i' → logprob: -11.545722961425781
    9. ' s' → logprob: -11.545722961425781
    10. '_' → logprob: -12.045722961425781

Token 14: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1603490263223648
    2. 'in' → logprob: -1.9103490114212036
    3. ' ' → logprob: -10.285348892211914
    4. 's' → logprob: -10.410348892211914
    5. '	in' → logprob: -10.660348892211914
    6. '```' → logprob: -11.910348892211914
    7. ')' → logprob: -12.722848892211914
    8. '=' → logprob: -12.785348892211914
    9. '<|end|>' → logprob: -13.347848892211914
    10. '_in' → logprob: -13.535348892211914

Token 15: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.36567699909210205
    2. ' s' → logprob: -1.240676999092102
    3. 'enumer' → logprob: -4.2406768798828125
    4. 's' → logprob: -6.3656768798828125
    5. ' input' → logprob: -7.1156768798828125
    6. ' ' → logprob: -10.115676879882812
    7. '```' → logprob: -10.615676879882812
    8. 'input' → logprob: -10.990676879882812
    9. ' open' → logprob: -11.115676879882812
    10. ' enumer' → logprob: -11.615676879882812

Token 16: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.018368016928434372
    2. '(' → logprob: -4.268368244171143
    3. 's' → logprob: -5.893368244171143
    4. ' (' → logprob: -7.018368244171143
    5. '(input' → logprob: -8.518367767333984
    6. ' s' → logprob: -8.768367767333984
    7. '(range' → logprob: -8.768367767333984
    8. '(en' → logprob: -11.518367767333984
    9. '(open' → logprob: -12.393367767333984
    10. '(lines' → logprob: -12.393367767333984

Token 17: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5419237017631531
    2. '.split' → logprob: -1.2919237613677979
    3. ')' → logprob: -2.416923761367798
    4. ':' → logprob: -3.541923761367798
    5. '.strip' → logprob: -3.916923761367798
    6. '.' → logprob: -6.041923522949219
    7. ' ):' → logprob: -6.916923522949219
    8. '():' → logprob: -7.666923522949219
    9. '[' → logprob: -7.791923522949219
    10. ':)' → logprob: -7.916923522949219

Token 18: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.123928502202034
    2. ''' → logprob: -2.8739285469055176
    3. '    ' → logprob: -4.248928546905518
    4. ' if' → logprob: -4.623928546905518
    5. '   ' → logprob: -4.998928546905518
    6. ':' → logprob: -4.998928546905518
    7. ' '' → logprob: -5.123928546905518
    8. '[' → logprob: -5.373928546905518
    9. '"' → logprob: -5.748928546905518
    10. 'if' → logprob: -6.623928546905518

Token 19: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3306904137134552
    2. ' if' → logprob: -1.3306903839111328
    3. 'if' (adapté à ' if') → logprob: -5.580690383911133
    4. '    ' → logprob: -5.580690383911133
    5. ' a' → logprob: -5.705690383911133
    6. ' d' → logprob: -6.080690383911133
    7. 'd' → logprob: -6.705690383911133
    8. 'a' → logprob: -6.955690383911133
    9. ' i' → logprob: -8.205690383911133
    10. '   ' → logprob: -8.205690383911133

Token 20: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.008698716759681702
    2. 'line' → logprob: -5.3836989402771
    3. ' ' → logprob: -6.2586989402771
    4. ' i' → logprob: -7.2586989402771
    5. ''' → logprob: -7.5086989402771
    6. ' '' → logprob: -7.8836989402771
    7. ' s' → logprob: -8.883698463439941
    8. ' len' → logprob: -9.133698463439941
    9. ' not' → logprob: -9.258698463439941
    10. '"' → logprob: -9.758698463439941

Token 21: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.43351849913597107
    2. '==' → logprob: -1.3085185289382935
    3. '=='' → logprob: -3.433518409729004
    4. ' in' → logprob: -4.058518409729004
    5. ' =='' → logprob: -4.308518409729004
    6. '.' → logprob: -5.058518409729004
    7. '=' → logprob: -5.933518409729004
    8. '=="' → logprob: -6.058518409729004
    9. '!=' → logprob: -6.558518409729004
    10. ' !=' → logprob: -6.683518409729004

Token 22: ' "\\"' (ID: 177217)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.09162412583827972
    2. '"' → logprob: -2.4666240215301514
    3. ' '' → logprob: -6.7166242599487305
    4. ''\' → logprob: -7.3416242599487305
    5. ''a' → logprob: -8.84162425994873
    6. ' "' → logprob: -9.21662425994873
    7. ' '('' → logprob: -9.34162425994873
    8. '"+"' → logprob: -9.34162425994873
    9. '"\' → logprob: -9.46662425994873
    10. ''+' → logprob: -10.34162425994873

Token 23: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4588856101036072
    2. 'n' → logprob: -1.458885669708252
    3. 'u' → logprob: -2.833885669708252
    4. ' and' → logprob: -3.333885669708252
    5. 'and' → logprob: -4.708885669708252
    6. 't' → logprob: -4.708885669708252
    7. '\' → logprob: -4.958885669708252
    8. ' :' → logprob: -5.583885669708252
    9. 'a' → logprob: -5.833885669708252
    10. ' ' → logprob: -6.333885669708252

Token 24: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9549453854560852
    2. 's' → logprob: -0.9549453854560852
    3. ' ' → logprob: -3.0799453258514404
    4. ':' → logprob: -3.3299453258514404
    5. '\' → logprob: -3.7049453258514404
    6. '   ' → logprob: -3.8299453258514404
    7. ' \' → logprob: -3.8299453258514404
    8. 't' → logprob: -4.0799455642700195
    9. '"' → logprob: -4.2049455642700195
    10. ''' → logprob: -5.0799455642700195

Token 25: ' d' (ID: 272)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.5935035943984985
    2. 'n' → logprob: -1.8435035943984985
    3. ' if' → logprob: -1.9685035943984985
    4. ' ' → logprob: -2.093503475189209
    5. '   ' → logprob: -2.343503475189209
    6. 'if' → logprob: -2.593503475189209
    7. '\' → logprob: -2.968503475189209
    8. 'a' → logprob: -3.468503475189209
    9. ' \' → logprob: -3.968503475189209
    10. 'd' (adapté à ' d') → logprob: -4.343503475189209

Token 26: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.018779555335640907
    2. '.' → logprob: -4.018779754638672
    3. 'append' → logprob: -7.893779754638672
    4. '[-' → logprob: -8.893779754638672
    5. '+' → logprob: -10.518779754638672
    6. '+=' → logprob: -11.268779754638672
    7. '[' → logprob: -11.268779754638672
    8. '=' → logprob: -11.518779754638672
    9. '.ap' → logprob: -11.518779754638672
    10. '-' → logprob: -11.893779754638672

Token 27: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.30051445960998535
    2. '(' → logprob: -1.6755144596099854
    3. '('' → logprob: -3.5505144596099854
    4. '("("' → logprob: -4.300514221191406
    5. '((' → logprob: -4.550514221191406
    6. '('\\' → logprob: -4.925514221191406
    7. '("\\' → logprob: -5.050514221191406
    8. '(s' → logprob: -6.300514221191406
    9. '("\' → logprob: -6.800514221191406
    10. '(len' → logprob: -6.925514221191406

Token 28: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001785112835932523
    2. ')
' → logprob: -9.125178337097168
    3. ' )' → logprob: -9.875178337097168
    4. '   ' → logprob: -12.125178337097168
    5. '))' → logprob: -13.000178337097168
    6. '`)' → logprob: -13.625178337097168
    7. '       ' → logprob: -13.750178337097168
    8. ')d' → logprob: -13.875178337097168
    9. ')`' → logprob: -14.000178337097168
    10. '')' → logprob: -14.000178337097168

Token 29: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.173807978630066
    2. '   ' → logprob: -1.423807978630066
    3. '<|end|>' → logprob: -1.923807978630066
    4. '+' → logprob: -2.1738080978393555
    5. 'elif' → logprob: -3.6738080978393555
    6. ')' → logprob: -3.9238080978393555
    7. ' else' → logprob: -4.0488080978393555
    8. '-' → logprob: -4.1738080978393555
    9. ' elif' → logprob: -4.1738080978393555
    10. 'else' → logprob: -4.2988080978393555

Token 30: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -1.381798267364502
    2. ' else' → logprob: -1.506798267364502
    3. 'else' → logprob: -1.506798267364502
    4. '   ' → logprob: -2.256798267364502
    5. ' elif' → logprob: -2.256798267364502
    6. ' ' → logprob: -3.256798267364502
    7. 'a' → logprob: -3.381798267364502
    8. 's' → logprob: -4.881798267364502
    9. ' if' → logprob: -6.256798267364502
    10. ' a' → logprob: -6.256798267364502

Token 31: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.03175820782780647
    2. 'line' → logprob: -3.7817583084106445
    3. ' s' → logprob: -5.6567583084106445
    4. ' ' → logprob: -5.7817583084106445
    5. 's' → logprob: -8.031758308410645
    6. ''' → logprob: -8.031758308410645
    7. '"' → logprob: -8.281758308410645
    8. ' not' → logprob: -8.406758308410645
    9. ' '' → logprob: -9.031758308410645
    10. '  ' → logprob: -9.469258308410645

Token 32: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.019498437643051147
    2. '==' → logprob: -4.019498348236084
    3. ' !=' → logprob: -7.519498348236084
    4. ' =='' → logprob: -7.894498348236084
    5. ' =="' → logprob: -8.894498825073242
    6. '=='' → logprob: -9.019498825073242
    7. '=="' → logprob: -9.769498825073242
    8. '.' → logprob: -10.644498825073242
    9. ' ' → logprob: -10.644498825073242
    10. ' =' → logprob: -11.269498825073242

Token 33: ' "/"' (ID: 34653)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2887769341468811
    2. '"/' → logprob: -2.1637768745422363
    3. ''"' → logprob: -2.9137768745422363
    4. ''' → logprob: -4.413776874542236
    5. '"a' → logprob: -5.038776874542236
    6. '"{' → logprob: -5.163776874542236
    7. '"$' → logprob: -5.163776874542236
    8. '"""' → logprob: -5.413776874542236
    9. '"#' → logprob: -5.413776874542236
    10. '"\' → logprob: -5.663776874542236

Token 34: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017413580790162086
    2. ':
' → logprob: -4.14241361618042
    3. '       ' → logprob: -6.76741361618042
    4. '   ' → logprob: -9.517413139343262
    5. ' and' → logprob: -9.642413139343262
    6. '):
' → logprob: -10.642413139343262
    7. '):' → logprob: -10.642413139343262
    8. '<|end|>' → logprob: -11.767413139343262
    9. ',' → logprob: -12.267413139343262
    10. ' :' → logprob: -12.517413139343262

Token 35: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.031245112419128418
    2. ' d' → logprob: -4.031245231628418
    3. 'len' → logprob: -4.531245231628418
    4. ' len' → logprob: -6.156245231628418
    5. ' ' → logprob: -9.406245231628418
    6. '   ' → logprob: -10.781245231628418
    7. '  ' → logprob: -11.656245231628418
    8. '	d' → logprob: -12.906245231628418
    9. 'l' → logprob: -13.406245231628418
    10. '(len' → logprob: -13.656245231628418

Token 36: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03933102637529373
    2. ' and' → logprob: -3.7893309593200684
    3. 'and' → logprob: -4.289330959320068
    4. '>:' → logprob: -6.414330959320068
    5. '!=' → logprob: -8.664331436157227
    6. '>' → logprob: -8.789331436157227
    7. '<|end|>' → logprob: -8.789331436157227
    8. '):' → logprob: -9.789331436157227
    9. '.' → logprob: -11.164331436157227
    10. ':not' → logprob: -11.789331436157227

Token 37: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.820591151714325
    2. ' a' → logprob: -1.0705912113189697
    3. '       ' → logprob: -2.8205912113189697
    4. ' j' → logprob: -3.4455912113189697
    5. 'j' → logprob: -3.5705912113189697
    6. ' s' → logprob: -4.070590972900391
    7. 'i' → logprob: -4.070590972900391
    8. '   ' → logprob: -5.070590972900391
    9. ' i' → logprob: -5.070590972900391
    10. 's' → logprob: -5.195590972900391

Token 38: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.006281652022153139
    2. 'a' → logprob: -6.631281852722168
    3. ' j' → logprob: -6.756281852722168
    4. 'k' → logprob: -7.006281852722168
    5. 'p' → logprob: -7.381281852722168
    6. 'x' → logprob: -7.881281852722168
    7. 'start' → logprob: -7.881281852722168
    8. 'b' → logprob: -8.006281852722168
    9. 'c' → logprob: -8.381281852722168
    10. 't' → logprob: -8.381281852722168

Token 39: '=d' (ID: 56413)
  Prédit: '=d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=d' → logprob: -0.3876717686653137
    2. '=' → logprob: -1.137671709060669
    3. ' =' → logprob: -7.137671947479248
    4. 'd' → logprob: -12.51267147064209
    5. '=j' → logprob: -14.13767147064209
    6. ' ' → logprob: -14.63767147064209
    7. '	d' → logprob: -15.26267147064209
    8. '	' → logprob: -15.76267147064209
    9. '=

' → logprob: -16.137672424316406
    10. '=i' → logprob: -16.262672424316406

Token 40: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -3.082895273109898e-05
    2. '.' → logprob: -10.500030517578125
    3. 'pop' → logprob: -12.875030517578125
    4. ' .' → logprob: -14.875030517578125
    5. '.p' → logprob: -15.000030517578125
    6. '.append' → logprob: -17.875030517578125
    7. '.Pop' → logprob: -18.500030517578125
    8. '-pop' → logprob: -18.750030517578125
    9. '_pop' → logprob: -19.000030517578125
    10. '	pop' → logprob: -19.500030517578125

Token 41: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00025895543512888253
    2. '(' → logprob: -8.375259399414062
    3. '()
' → logprob: -11.375259399414062
    4. '()>' → logprob: -12.000259399414062
    5. '())' → logprob: -13.250259399414062
    6. '()%' → logprob: -13.500259399414062
    7. '()]' → logprob: -14.000259399414062
    8. '()-' → logprob: -14.125259399414062
    9. '();' → logprob: -14.375259399414062
    10. '()?>' → logprob: -14.375259399414062

Token 42: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2758904993534088
    2. 'sum' → logprob: -2.025890588760376
    3. ' sum' → logprob: -2.900890588760376
    4. '        ' → logprob: -3.650890588760376
    5. '        
' → logprob: -4.400890350341797
    6. '```' → logprob: -5.650890350341797
    7. ',' → logprob: -6.400890350341797
    8. ' 
' → logprob: -6.650890350341797
    9. '<|end|>' → logprob: -7.025890350341797
    10. ' ' → logprob: -7.275890350341797

Token 43: ' a' (ID: 261)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.007707773242145777
    2. 'length' → logprob: -5.507707595825195
    3. 'area' → logprob: -7.007707595825195
    4. 'a' (adapté à ' a') → logprob: -7.257707595825195
    5. '       ' → logprob: -7.257707595825195
    6. ' sum' → logprob: -7.507707595825195
    7. 'height' → logprob: -8.007707595825195
    8. 'ans' → logprob: -9.382707595825195
    9. 's' → logprob: -9.757707595825195
    10. 'h' → logprob: -10.382707595825195

Token 44: '_tmp' (ID: 35658)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.20206066966056824
    2. '.' → logprob: -1.7020606994628906
    3. '.ap' → logprob: -8.07706069946289
    4. '.app' → logprob: -8.32706069946289
    5. '.extend' → logprob: -10.82706069946289
    6. '.a' → logprob: -10.95206069946289
    7. 'append' → logprob: -11.20206069946289
    8. ' .' → logprob: -11.32706069946289
    9. '.=' → logprob: -11.45206069946289
    10. '+=' → logprob: -11.57706069946289

Token 45: '=i' (ID: 48141)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0011670070234686136
    2. '=len' → logprob: -7.376166820526123
    3. '=a' → logprob: -8.501167297363281
    4. ' =' → logprob: -8.626167297363281
    5. '=int' → logprob: -10.126167297363281
    6. '=sum' → logprob: -10.376167297363281
    7. '=j' → logprob: -10.751167297363281
    8. '=i' → logprob: -11.001167297363281
    9. '=(' → logprob: -11.501167297363281
    10. '=max' → logprob: -11.626167297363281

Token 46: '-j' (ID: 19720)
  Prédit: '-j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-j' → logprob: -0.17231659591197968
    2. '-' → logprob: -1.922316551208496
    3. ' -' → logprob: -4.422316551208496
    4. '-js' → logprob: -12.547316551208496
    5. '-J' → logprob: -13.547316551208496
    6. ''-' → logprob: -13.547316551208496
    7. ' ' → logprob: -14.172316551208496
    8. '-v' → logprob: -14.422316551208496
    9. ',j' → logprob: -14.672316551208496
    10. '-m' → logprob: -14.672316551208496

Token 47: '
' (ID: 198)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0029957664664834738
    2. '1' → logprob: -6.12799596786499
    3. ' -' → logprob: -7.37799596786499
    4. '<|end|>' → logprob: -10.002995491027832
    5. ' ' → logprob: -10.377995491027832
    6. ''-' → logprob: -10.752995491027832
    7. '*' → logprob: -11.002995491027832
    8. '```' → logprob: -11.127995491027832
    9. '+' → logprob: -11.877995491027832
    10. '#' → logprob: -12.127995491027832

Token 48: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004411247558891773
    2. 'sum' → logprob: -6.379411220550537
    3. '
' → logprob: -7.004411220550537
    4. '       ' → logprob: -8.129411697387695
    5. '<|end|>' → logprob: -8.254411697387695
    6. '*' → logprob: -8.629411697387695
    7. '        
' → logprob: -8.879411697387695
    8. ' 
' → logprob: -8.879411697387695
    9. '-' → logprob: -8.879411697387695
    10. '+' → logprob: -9.379411697387695

Token 49: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' (adapté à ' sum') → logprob: -0.0027748015709221363
    2. ' sum' → logprob: -6.502774715423584
    3. 'a' → logprob: -7.627774715423584
    4. '
' → logprob: -8.627775192260742
    5. 's' → logprob: -8.752775192260742
    6. 'if' → logprob: -9.127775192260742
    7. 'while' → logprob: -9.127775192260742
    8. '=sum' → logprob: -9.502775192260742
    9. '+' → logprob: -10.627775192260742
    10. '*' → logprob: -10.877775192260742

Token 50: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.01891443505883217
    2. ' +=' → logprob: -4.018914222717285
    3. '+' → logprob: -7.393914222717285
    4. '+=(' → logprob: -9.768914222717285
    5. '=' → logprob: -10.143914222717285
    6. ']+=' → logprob: -10.643914222717285
    7. '+="' → logprob: -11.518914222717285
    8. '+a' → logprob: -11.643914222717285
    9. '+='' → logprob: -12.018914222717285
    10. '=a' → logprob: -13.768914222717285

Token 51: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0015024791937321424
    2. ' a' → logprob: -6.501502513885498
    3. ' ' → logprob: -16.126502990722656
    4. '	a' → logprob: -17.251502990722656
    5. 'i' → logprob: -18.376502990722656
    6. '   ' → logprob: -18.501502990722656
    7. '1' → logprob: -19.251502990722656
    8. '>a' → logprob: -19.251502990722656
    9. 'а' → logprob: -19.751502990722656
    10. '2' → logprob: -20.251502990722656

Token 52: '_tmp' (ID: 35658)
  Prédit: '_tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tmp' → logprob: -3.5597102396423e-05
    2. 'tmp' → logprob: -10.875035285949707
    3. 'a' → logprob: -12.250035285949707
    4. '[-' → logprob: -13.500035285949707
    5. '[a' → logprob: -13.625035285949707
    6. '_' → logprob: -14.000035285949707
    7. '_t' → logprob: -14.000035285949707
    8. '[' → logprob: -14.125035285949707
    9. '[tmp' → logprob: -14.125035285949707
    10. '```' → logprob: -14.375035285949707

Token 53: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30393585562705994
    2. '<|end|>' → logprob: -2.1789357662200928
    3. '
' → logprob: -2.6789357662200928
    4. ' a' → logprob: -3.8039357662200928
    5. 'a' → logprob: -4.178936004638672
    6. '   ' → logprob: -4.678936004638672
    7. ')' → logprob: -4.678936004638672
    8. '```' → logprob: -5.678936004638672
    9. ' 
' → logprob: -5.803936004638672
    10. '<|end|>' → logprob: -5.928936004638672

Token 55: ' while' (ID: 2049)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1001330092549324
    2. 'while' (adapté à ' while') → logprob: -2.600132942199707
    3. ' while' → logprob: -4.225132942199707
    4. ' a' → logprob: -5.225132942199707
    5. 'if' → logprob: -8.100132942199707
    6. '<|end|>' → logprob: -8.850132942199707
    7. 'b' → logprob: -9.475132942199707
    8. '   ' → logprob: -9.850132942199707
    9. '```' → logprob: -10.100132942199707
    10. 'for' → logprob: -10.100132942199707

Token 56: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04321601614356041
    2. ' a' → logprob: -3.1682159900665283
    3. 'd' → logprob: -8.54321575164795
    4. ' d' → logprob: -11.29321575164795
    5. ' ' → logprob: -12.54321575164795
    6. 'len' → logprob: -12.54321575164795
    7. '	a' → logprob: -14.54321575164795
    8. '>a' → logprob: -15.04321575164795
    9. '   ' → logprob: -15.16821575164795
    10. ' len' → logprob: -15.41821575164795

Token 57: ' and' (ID: 326)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3128832280635834
    2. ' and' → logprob: -1.4378832578659058
    3. 'and' → logprob: -4.062883377075195
    4. '>a' → logprob: -5.187883377075195
    5. ' a' → logprob: -5.437883377075195
    6. '_a' → logprob: -6.187883377075195
    7. '&&' → logprob: -7.562883377075195
    8. '[a' → logprob: -7.687883377075195
    9. '>' → logprob: -8.687883377075195
    10. '[-' → logprob: -9.062883377075195

Token 58: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5760381817817688
    2. 'a' → logprob: -0.8260381817817688
    3. ' ' → logprob: -10.326038360595703
    4. '   ' → logprob: -10.701038360595703
    5. '>a' → logprob: -11.451038360595703
    6. '(a' → logprob: -11.826038360595703
    7. 'j' → logprob: -12.576038360595703
    8. '  ' → logprob: -12.576038360595703
    9. '	a' → logprob: -12.701038360595703
    10. '    ' → logprob: -12.701038360595703

Token 59: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00019662656995933503
    2. '[' → logprob: -9.50019645690918
    3. '>' → logprob: -9.62519645690918
    4. ' [-' → logprob: -10.87519645690918
    5. '>=' → logprob: -11.50019645690918
    6. ' and' → logprob: -12.25019645690918
    7. 'a' → logprob: -12.37519645690918
    8. '][-' → logprob: -12.62519645690918
    9. ' >' → logprob: -12.87519645690918
    10. '>-' → logprob: -13.25019645690918

Token 60: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03012220747768879
    2. '0' → logprob: -3.5301222801208496
    3. '[' → logprob: -9.280121803283691
    4. '][' → logprob: -9.780121803283691
    5. '()[' → logprob: -10.155121803283691
    6. ' ' → logprob: -10.155121803283691
    7. '>' → logprob: -10.280121803283691
    8. '-' → logprob: -10.530121803283691
    9. ':' → logprob: -10.780121803283691
    10. '(' → logprob: -11.030121803283691

Token 61: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2916812002658844
    2. '>' → logprob: -1.916681170463562
    3. '>[' → logprob: -2.5416812896728516
    4. '][' → logprob: -3.7916812896728516
    5. ' >' → logprob: -6.291681289672852
    6. ']>' → logprob: -7.541681289672852
    7. ':' → logprob: -8.291681289672852
    8. 'a' → logprob: -8.291681289672852
    9. '>=' → logprob: -8.541681289672852
    10. ']' → logprob: -8.791681289672852

Token 62: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01820952817797661
    2. '1' → logprob: -4.018209457397461
    3. ' ' → logprob: -10.018209457397461
    4. '[' → logprob: -11.893209457397461
    5. '][' → logprob: -11.893209457397461
    6. '>[' → logprob: -15.143209457397461
    7. '```' → logprob: -15.268209457397461
    8. '>' → logprob: -15.768209457397461
    9. ':' → logprob: -16.51820945739746
    10. '-' → logprob: -16.51820945739746

Token 63: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5988472700119019
    2. ']>' → logprob: -1.3488472700119019
    3. ']>=' → logprob: -2.7238473892211914
    4. ']' → logprob: -2.8488473892211914
    5. '0' → logprob: -3.7238473892211914
    6. '[' → logprob: -3.9738473892211914
    7. '1' → logprob: -4.598847389221191
    8. '][' → logprob: -5.348847389221191
    9. '>=' → logprob: -5.723847389221191
    10. ' >' → logprob: -6.098847389221191

Token 64: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.002923160558566451
    2. '[' → logprob: -6.377923011779785
    3. ' >' → logprob: -7.752923011779785
    4. '>=' → logprob: -8.127923011779785
    5. '>a' → logprob: -8.252923011779785
    6. '>[' → logprob: -9.002923011779785
    7. ']>' → logprob: -10.002923011779785
    8. '>
' → logprob: -11.377923011779785
    9. '()>' → logprob: -11.877923011779785
    10. '>

' → logprob: -12.002923011779785

Token 65: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0008121283026412129
    2. ' j' → logprob: -7.12581205368042
    3. '=j' → logprob: -12.500812530517578
    4. 'i' → logprob: -13.875812530517578
    5. '=' → logprob: -14.375812530517578
    6. 'a' → logprob: -14.500812530517578
    7. '>' → logprob: -14.500812530517578
    8. '	j' → logprob: -14.750812530517578
    9. ' ' → logprob: -15.250812530517578
    10. '_j' → logprob: -15.375812530517578

Token 66: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8590759038925171
    2. ':
' → logprob: -1.234075903892517
    3. '[' → logprob: -1.359075903892517
    4. '>' → logprob: -4.984076023101807
    5. '>a' → logprob: -5.734076023101807
    6. ':

' → logprob: -5.859076023101807
    7. ' :' → logprob: -5.859076023101807
    8. 'a' → logprob: -6.359076023101807
    9. ' ' → logprob: -6.734076023101807
    10. ' :
' → logprob: -6.859076023101807

Token 67: '           ' (ID: 352)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9924250245094299
    2. '           ' → logprob: -1.6174249649047852
    3. ' a' → logprob: -2.117424964904785
    4. '```' → logprob: -2.117424964904785
    5. '
' → logprob: -2.742424964904785
    6. 'sum' → logprob: -3.367424964904785
    7. 'pop' → logprob: -4.367424964904785
    8. ' sum' → logprob: -4.492424964904785
    9. '   ' → logprob: -4.617424964904785
    10. '>a' → logprob: -4.742424964904785

Token 68: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.4647095203399658
    2. 'sum' → logprob: -1.4647095203399658
    3. 'x' → logprob: -3.214709520339966
    4. ' a' → logprob: -3.714709520339966
    5. 'v' → logprob: -3.839709520339966
    6. ' sum' → logprob: -3.964709520339966
    7. 'tmp' → logprob: -4.714709281921387
    8. 'pop' → logprob: -4.839709281921387
    9. 'p' → logprob: -5.214709281921387
    10. 'b' → logprob: -6.214709281921387

Token 69: '_tmp' (ID: 35658)
  Prédit: 'pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -1.0596774816513062
    2. '[-' → logprob: -1.6846774816513062
    3. '.pop' → logprob: -1.8096774816513062
    4. '[' → logprob: -2.1846776008605957
    5. 'sum' → logprob: -2.1846776008605957
    6. '=' → logprob: -4.059677600860596
    7. '_sum' → logprob: -4.184677600860596
    8. '_tmp' → logprob: -4.559677600860596
    9. '_pop' → logprob: -5.059677600860596
    10. 'a' → logprob: -5.184677600860596

Token 70: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04543961212038994
    2. '[' → logprob: -3.2954397201538086
    3. ' +=' → logprob: -5.420439720153809
    4. ',a' → logprob: -6.295439720153809
    5. ']+=' → logprob: -7.795439720153809
    6. 'a' → logprob: -8.420439720153809
    7. '-=' → logprob: -9.170439720153809
    8. '[a' → logprob: -9.295439720153809
    9. ',' → logprob: -9.545439720153809
    10. '+=(' → logprob: -9.545439720153809

Token 71: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0031900706235319376
    2. ' a' → logprob: -5.753190040588379
    3. '   ' → logprob: -11.378190040588379
    4. ' ' → logprob: -15.003190040588379
    5. '	a' → logprob: -15.628190040588379
    6. '  ' → logprob: -15.878190040588379
    7. '    ' → logprob: -15.878190040588379
    8. '       ' → logprob: -16.753190994262695
    9. '           ' → logprob: -17.378190994262695
    10. '```' → logprob: -18.003190994262695

Token 72: '.pop' (ID: 15746)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0008095058728940785
    2. '.pop' → logprob: -7.125809669494629
    3. 'pop' → logprob: -12.750809669494629
    4. '-' → logprob: -13.875809669494629
    5. '[' → logprob: -14.625809669494629
    6. '```' → logprob: -15.375809669494629
    7. '][-' → logprob: -15.875809669494629
    8. ' [-' → logprob: -16.375808715820312
    9. '	' → logprob: -16.875808715820312
    10. ' pop' → logprob: -17.000808715820312

Token 73: '()[' (ID: 20778)
  Prédit: '()['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()[' → logprob: -0.052919916808605194
    2. '()' → logprob: -3.302919864654541
    3. '(' → logprob: -4.302919864654541
    4. '()][' → logprob: -6.802919864654541
    5. '(-' → logprob: -9.6779203414917
    6. '[' → logprob: -11.0529203414917
    7. '())[' → logprob: -11.4279203414917
    8. '()(' → logprob: -11.4279203414917
    9. '][' → logprob: -11.9279203414917
    10. '```' → logprob: -12.0529203414917

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.236549335066229e-05
    2. ' ' → logprob: -10.750021934509277
    3. '[' → logprob: -15.125021934509277
    4. '   ' → logprob: -15.250021934509277
    5. '
' → logprob: -16.250022888183594
    6. '][' → logprob: -16.375022888183594
    7. '  ' → logprob: -17.250022888183594
    8. '```' → logprob: -17.250022888183594
    9. '１' → logprob: -17.375022888183594
    10. '

' → logprob: -17.625022888183594

Token 75: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02359250746667385
    2. ']
' → logprob: -3.773592472076416
    3. '<|end|>' → logprob: -8.773592948913574
    4. ' ]' → logprob: -9.398592948913574
    5. ']

' → logprob: -10.023592948913574
    6. ')' → logprob: -10.898592948913574
    7. ']
' → logprob: -11.523592948913574
    8. '<|end|>' → logprob: -11.898592948913574
    9. '
' → logprob: -12.023592948913574
    10. '])' → logprob: -12.898592948913574

Token 76: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0056981579400599
    2. '
' → logprob: -5.380698204040527
    3. '```' → logprob: -8.005698204040527
    4. 'a' → logprob: -8.380698204040527
    5. ' a' → logprob: -8.380698204040527
    6. '<|end|>' → logprob: -9.505698204040527
    7. '   ' → logprob: -10.130698204040527
    8. '        
' → logprob: -10.380698204040527
    9. ' 
' → logprob: -10.755698204040527
    10. ')' → logprob: -11.005698204040527

Token 77: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.009896920993924141
    2. ' a' → logprob: -4.634896755218506
    3. '   ' → logprob: -9.009897232055664
    4. '       ' → logprob: -12.009897232055664
    5. '<|end|>' → logprob: -12.634897232055664
    6. '	a' → logprob: -12.884897232055664
    7. '
' → logprob: -13.259897232055664
    8. ' ' → logprob: -13.759897232055664
    9. '```' → logprob: -14.009897232055664
    10. ' 
' → logprob: -14.509897232055664

Token 78: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001016375608742237
    2. '.' → logprob: -7.001016139984131
    3. 'append' → logprob: -9.251016616821289
    4. ' .' → logprob: -12.376016616821289
    5. '.app' → logprob: -13.376016616821289
    6. ' append' → logprob: -14.126016616821289
    7. '.push' → logprob: -14.501016616821289
    8. '.Append' → logprob: -15.001016616821289
    9. '_append' → logprob: -15.001016616821289
    10. '.ap' → logprob: -15.126016616821289

Token 79: '([' (ID: 5194)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.02519170381128788
    2. '([' → logprob: -3.7751917839050293
    3. '(' → logprob: -6.525191783905029
    4. '(j' → logprob: -7.650191783905029
    5. '(([' → logprob: -13.275191307067871
    6. ' (' → logprob: -15.525191307067871
    7. '({' → logprob: -15.775191307067871
    8. ' ((' → logprob: -16.150192260742188
    9. ' ' → logprob: -16.900192260742188
    10. '(((' → logprob: -17.150192260742188

Token 80: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -6.623244553338736e-05
    2. ' j' → logprob: -9.625065803527832
    3. '	j' → logprob: -16.62506675720215
    4. '$j' → logprob: -16.87506675720215
    5. ',j' → logprob: -18.87506675720215
    6. '   ' → logprob: -19.87506675720215
    7. '<|end|>' → logprob: -20.00006675720215
    8. '_j' → logprob: -20.00006675720215
    9. '(j' → logprob: -20.37506675720215
    10. '*j' → logprob: -20.62506675720215

Token 81: ',a' (ID: 26776)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38875412940979004
    2. ',a' → logprob: -1.13875412940979
    3. ' ,' → logprob: -6.763753890991211
    4. 'a' → logprob: -7.263753890991211
    5. ' a' → logprob: -10.638753890991211
    6. ',b' → logprob: -14.888753890991211
    7. ' ' → logprob: -15.513753890991211
    8. ',
' → logprob: -15.638753890991211
    9. ',int' → logprob: -15.638753890991211
    10. ',s' → logprob: -15.638753890991211

Token 82: '_tmp' (ID: 35658)
  Prédit: '_tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tmp' → logprob: -4.620622712536715e-05
    2. 'tmp' → logprob: -10.000045776367188
    3. '_t' → logprob: -15.500045776367188
    4. '_tm' → logprob: -15.750045776367188
    5. '$tmp' → logprob: -16.125045776367188
    6. '/tmp' → logprob: -16.750045776367188
    7. '	tmp' → logprob: -16.875045776367188
    8. '_TMP' → logprob: -16.875045776367188
    9. ' tmp' → logprob: -17.250045776367188
    10. 'Tmp' → logprob: -17.500045776367188

Token 83: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0005389740690588951
    2. ')' → logprob: -8.12553882598877
    3. '])
' → logprob: -8.37553882598877
    4. ']' → logprob: -12.25053882598877
    5. ')]' → logprob: -13.25053882598877
    6. ')
' → logprob: -13.37553882598877
    7. '))' → logprob: -13.75053882598877
    8. ' ])' → logprob: -13.87553882598877
    9. '])
' → logprob: -14.50053882598877
    10. '])

' → logprob: -14.62553882598877

Token 84: ' 
' (ID: 793)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.21374022960662842
    2. '<|end|>' → logprob: -3.338740348815918
    3. '
' → logprob: -3.588740348815918
    4. '\n' → logprob: -3.963740348815918
    5. '   ' → logprob: -3.963740348815918
    6. 's' → logprob: -4.463740348815918
    7. '```' → logprob: -4.588740348815918
    8. ')' → logprob: -4.713740348815918
    9. '    
' → logprob: -4.963740348815918
    10. ' 
' → logprob: -5.088740348815918

Token 85: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004543219227343798
    2. 'for' → logprob: -5.629543304443359
    3. 'if' → logprob: -8.87954330444336
    4. ')' → logprob: -9.12954330444336
    5. '\n' → logprob: -9.37954330444336
    6. ' print' → logprob: -9.50454330444336
    7. 's' → logprob: -9.50454330444336
    8. '  
' → logprob: -9.62954330444336
    9. 'p' → logprob: -9.75454330444336
    10. 'i' → logprob: -10.00454330444336

Token 86: '(sum' (ID: 45528)
  Prédit: '(sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.023819174617528915
    2. '(' → logprob: -3.7738192081451416
    3. ' (' → logprob: -7.8988189697265625
    4. 'sum' → logprob: -9.023818969726562
    5. '(s' → logprob: -10.023818969726562
    6. '()' → logprob: -11.148818969726562
    7. ' sum' → logprob: -11.523818969726562
    8. '(len' → logprob: -12.648818969726562
    9. '("' → logprob: -13.148818969726562
    10. '('' → logprob: -13.148818969726562

Token 87: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16036121547222137
    2. ')
' → logprob: -1.9103611707687378
    3. ')
' → logprob: -9.785361289978027
    4. ' )' → logprob: -10.035361289978027
    5. ' )
' → logprob: -10.535361289978027
    6. ',' → logprob: -12.785361289978027
    7. ')

' → logprob: -13.285361289978027
    8. ')`
' → logprob: -13.785361289978027
    9. ')a' → logprob: -14.160361289978027
    10. '")' → logprob: -14.285361289978027

Token 88: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02569073811173439
    2. '
' → logprob: -4.52569055557251
    3. ')
' → logprob: -5.52569055557251
    4. 'for' → logprob: -5.77569055557251
    5. '\n' → logprob: -6.40069055557251
    6. '[' → logprob: -6.77569055557251
    7. 'len' → logprob: -7.15069055557251
    8. '[
' → logprob: -7.65069055557251
    9. '  
' → logprob: -7.77569055557251
    10. ')' → logprob: -7.77569055557251

Token 89: '(len' (ID: 14990)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.43260425329208374
    2. '(' → logprob: -1.1826043128967285
    3. '(len' → logprob: -4.1826043128967285
    4. '(a' → logprob: -4.3076043128967285
    5. '('' → logprob: -4.6826043128967285
    6. '("' → logprob: -5.8076043128967285
    7. '(sum' → logprob: -6.9326043128967285
    8. '([]' → logprob: -7.5576043128967285
    9. '(list' → logprob: -7.5576043128967285
    10. '([(' → logprob: -7.8076043128967285

Token 90: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.1756367712223437e-05
    2. '(' → logprob: -11.375011444091797
    3. '(s' → logprob: -15.875011444091797
    4. ' (' → logprob: -16.625011444091797
    5. '(
' → logprob: -18.250011444091797
    6. '(A' → logprob: -18.750011444091797
    7. 'a' → logprob: -19.375011444091797
    8. '((' → logprob: -19.375011444091797
    9. '(ai' → logprob: -20.125011444091797
    10. ')' → logprob: -20.375011444091797

Token 91: '),' (ID: 936)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0789485052227974
    2. ')' → logprob: -2.578948497772217
    3. ')
' → logprob: -10.203948974609375
    4. ')a' → logprob: -11.828948974609375
    5. ')

' → logprob: -12.453948974609375
    6. ' )
' → logprob: -12.578948974609375
    7. ')`
' → logprob: -13.578948974609375
    8. '")' → logprob: -13.703948974609375
    9. '))
' → logprob: -14.078948974609375
    10. '")
' → logprob: -14.328948974609375

Token 92: '*[' (ID: 126471)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.13693952560424805
    2. ' end' → logprob: -2.511939525604248
    3. '*[' → logprob: -3.886939525604248
    4. ')' → logprob: -5.011939525604248
    5. '*' → logprob: -5.261939525604248
    6. '[end' → logprob: -5.386939525604248
    7. 'a' → logprob: -6.011939525604248
    8. '[a' → logprob: -6.136939525604248
    9. '[' → logprob: -6.386939525604248
    10. '"' → logprob: -6.636939525604248

Token 93: 's' (ID: 82)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10104477405548096
    2. 'a' → logprob: -3.1010446548461914
    3. 'v' → logprob: -3.6010446548461914
    4. 'i' → logprob: -4.351044654846191
    5. 'ai' → logprob: -5.601044654846191
    6. 'y' → logprob: -6.226044654846191
    7. 'item' → logprob: -6.476044654846191
    8. 'b' → logprob: -6.851044654846191
    9. 'e' → logprob: -7.226044654846191
    10. 'el' → logprob: -7.726044654846191

Token 94: ' for' (ID: 395)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9615973234176636
    2. '[' → logprob: -1.0865973234176636
    3. 'i' → logprob: -1.4615973234176636
    4. 'a' → logprob: -4.211597442626953
    5. 'y' → logprob: -4.836597442626953
    6. 'x' → logprob: -5.086597442626953
    7. '[i' → logprob: -5.086597442626953
    8. 'b' → logprob: -5.836597442626953
    9. 'v' → logprob: -5.961597442626953
    10. '2' → logprob: -6.961597442626953

Token 95: ' i' (ID: 575)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5595998167991638
    2. 'x' → logprob: -1.1845998764038086
    3. 'i' → logprob: -2.5595998764038086
    4. 'b' → logprob: -3.6845998764038086
    5. '_' → logprob: -5.559599876403809
    6. 'item' → logprob: -5.684599876403809
    7. 'p' → logprob: -6.184599876403809
    8. 'v' → logprob: -6.309599876403809
    9. 'el' → logprob: -6.684599876403809
    10. '_,' → logprob: -7.184599876403809

Token 96: ',s' (ID: 20379)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.578484296798706
    2. ',a' → logprob: -1.578484296798706
    3. ' a' → logprob: -2.203484296798706
    4. ',' → logprob: -3.203484296798706
    5. ' in' → logprob: -3.328484296798706
    6. 'range' → logprob: -3.453484296798706
    7. ' ' → logprob: -5.328484535217285
    8. ' range' → logprob: -5.453484535217285
    9. 'in' → logprob: -6.328484535217285
    10. '1' → logprob: -6.328484535217285

Token 97: ' in' (ID: 306)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.19116055965423584
    2. ' a' → logprob: -2.3161606788635254
    3. 'in' → logprob: -3.0661606788635254
    4. ' in' → logprob: -3.5661606788635254
    5. ',a' → logprob: -7.816160678863525
    6. ' ' → logprob: -10.441160202026367
    7. 'n' → logprob: -10.441160202026367
    8. '  ' → logprob: -11.941160202026367
    9. '   ' → logprob: -12.566160202026367
    10. '	a' → logprob: -13.191160202026367

Token 98: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.009757150895893574
    2. ' a' → logprob: -4.634757041931152
    3. ' ' → logprob: -15.259757041931152
    4. ' enumerate' → logprob: -15.384757041931152
    5. 'enumer' → logprob: -15.509757041931152
    6. 'range' → logprob: -16.13475799560547
    7. '	a' → logprob: -16.25975799560547
    8. '(a' → logprob: -16.50975799560547
    9. '   ' → logprob: -16.75975799560547
    10. ' range' → logprob: -16.88475799560547

Token 99: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00329037057235837
    2. ')' → logprob: -5.753290176391602
    3. '])
' → logprob: -10.128290176391602
    4. ')])' → logprob: -10.128290176391602
    5. ' ])' → logprob: -11.628290176391602
    6. ')]' → logprob: -11.753290176391602
    7. '))' → logprob: -12.128290176391602
    8. ']' → logprob: -12.503290176391602
    9. ''])' → logprob: -13.128290176391602
    10. ']])' → logprob: -14.128290176391602


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 97
Tokens correctement prédits (1ère position, stricte): 34
Tokens correctement prédits (1ère position, avec adaptation): 39
Tokens correctement prédits (top 10): 77
Précision stricte (1ère position): 35.05%
Précision adaptée (1ère position): 40.21%
Précision (top 10): 79.38%
================================================================================
